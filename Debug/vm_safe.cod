; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\views\vm_safe.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_atan2f
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?initialise_safe_view@@YGXXZ			; initialise_safe_view
PUBLIC	?deinitialise_safe_view@@YGXXZ			; deinitialise_safe_view
PUBLIC	?update_safe_view@@YGXXZ			; update_safe_view
PUBLIC	?draw_safe_3d_view@@YGXXZ			; draw_safe_3d_view
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4049000000000000
PUBLIC	__real@404bc71c71c71c72
PUBLIC	__real@be32b8c2
PUBLIC	__real@bf800000
PUBLIC	__real@bff0000000000000
EXTRN	_atan2:PROC
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z:PROC ; set_main_3d_full_screen_params
EXTRN	?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z:PROC	; draw_main_3d_scene
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?main_vp@@3UVIEWPOINT@@A:BYTE			; main_vp
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?dx@@3MA DD	01H DUP (?)				; dx
?dz@@3MA DD	01H DUP (?)				; dz
?position@@3UVEC3D@@A DB 0cH DUP (?)			; position
_BSS	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@be32b8c2
CONST	SEGMENT
__real@be32b8c2 DD 0be32b8c2r			; -0.174533
CONST	ENDS
;	COMDAT __real@404bc71c71c71c72
CONST	SEGMENT
__real@404bc71c71c71c72 DQ 0404bc71c71c71c72r	; 55.5556
CONST	ENDS
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_safe.c
;	COMDAT ?draw_safe_3d_view@@YGXXZ
_TEXT	SEGMENT
?draw_safe_3d_view@@YGXXZ PROC				; draw_safe_3d_view, COMDAT

; 160  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 161  :    //
; 162  :    // get camera position and attitude
; 163  :    //
; 164  : 
; 165  : 	main_vp.position = position;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?position@@3UVEC3D@@A
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?main_vp@@3UVIEWPOINT@@A, eax
  00013	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?position@@3UVEC3D@@A+4
  00019	89 0d 04 00 00
	00		 mov	 DWORD PTR ?main_vp@@3UVIEWPOINT@@A+4, ecx
  0001f	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?position@@3UVEC3D@@A+8
  00025	89 15 08 00 00
	00		 mov	 DWORD PTR ?main_vp@@3UVIEWPOINT@@A+8, edx

; 166  : 
; 167  : 	get_3d_transformation_matrix (main_vp.attitude, atan2 (dx, dz), rad (-10.0), 0.0);

  0002b	51		 push	 ecx
  0002c	0f 57 c0	 xorps	 xmm0, xmm0
  0002f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00034	51		 push	 ecx
  00035	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be32b8c2
  0003d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00042	51		 push	 ecx
  00043	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?dz@@3MA
  0004b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00050	51		 push	 ecx
  00051	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?dx@@3MA
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00063	51		 push	 ecx
  00064	d9 1c 24	 fstp	 DWORD PTR [esp]
  00067	68 0c 00 00 00	 push	 OFFSET ?main_vp@@3UVIEWPOINT@@A+12
  0006c	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 168  : 
; 169  :    //
; 170  :    // draw 3D scene
; 171  :    //
; 172  : 
; 173  : 	set_main_3d_full_screen_params (DISPLAY_3D_TINT_CLEAR, DISPLAY_3D_LIGHT_LEVEL_HIGH, DISPLAY_3D_NOISE_LEVEL_NONE);

  00071	6a 00		 push	 0
  00073	6a 02		 push	 2
  00075	6a 00		 push	 0
  00077	e8 00 00 00 00	 call	 ?set_main_3d_full_screen_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@@Z ; set_main_3d_full_screen_params

; 174  : 
; 175  : 	draw_main_3d_scene (&main_vp);

  0007c	68 00 00 00 00	 push	 OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  00081	e8 00 00 00 00	 call	 ?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z ; draw_main_3d_scene

; 176  : }

  00086	5f		 pop	 edi
  00087	5e		 pop	 esi
  00088	5b		 pop	 ebx
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?draw_safe_3d_view@@YGXXZ ENDP				; draw_safe_3d_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_safe.c
;	COMDAT ?update_safe_view@@YGXXZ
_TEXT	SEGMENT
tv163 = -72						; size = 8
?update_safe_view@@YGXXZ PROC				; update_safe_view, COMDAT

; 118  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 119  : 	////////////////////////////////////////
; 120  : 
; 121  : 	position.x += VELOCITY * dx * get_delta_time ();

  00009	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dx@@3MA
  00011	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404bc71c71c71c72
  00019	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  00021	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00025	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?position@@3UVEC3D@@A
  0002d	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00031	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00035	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A, xmm0

; 122  : 
; 123  : 	if ((position.x < MIN_MAP_X) && (dx == LEFT))

  0003d	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00045	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  0004c	76 26		 jbe	 SHORT $LN2@update_saf
  0004e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dx@@3MA
  00056	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  0005e	9f		 lahf
  0005f	f6 c4 44	 test	 ah, 68			; 00000044H
  00062	7a 10		 jp	 SHORT $LN2@update_saf

; 124  : 	{
; 125  : 		dx = RIGHT;

  00064	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0006c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dx@@3MA, xmm0
$LN2@update_saf:

; 126  : 	}
; 127  : 
; 128  : 	if ((position.x > MAX_MAP_X) && (dx == RIGHT))

  00074	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  0007c	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00083	76 26		 jbe	 SHORT $LN3@update_saf
  00085	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dx@@3MA
  0008d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00095	9f		 lahf
  00096	f6 c4 44	 test	 ah, 68			; 00000044H
  00099	7a 10		 jp	 SHORT $LN3@update_saf

; 129  : 	{
; 130  : 		dx = LEFT;

  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000a3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dx@@3MA, xmm0
$LN3@update_saf:

; 131  : 	}
; 132  : 
; 133  : 	////////////////////////////////////////
; 134  : 
; 135  : 	position.z += VELOCITY * dz * get_delta_time ();

  000ab	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dz@@3MA
  000b3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@404bc71c71c71c72
  000bb	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?system_delta_time@@3MA
  000c3	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000c7	f3 0f 5a 0d 08
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?position@@3UVEC3D@@A+8
  000cf	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000d3	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000d7	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A+8, xmm0

; 136  : 
; 137  : 	if ((position.z < MIN_MAP_Z) && (dz == UP))

  000df	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000e7	0f 2f 05 08 00
	00 00		 comiss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  000ee	76 26		 jbe	 SHORT $LN4@update_saf
  000f0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dz@@3MA
  000f8	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  00100	9f		 lahf
  00101	f6 c4 44	 test	 ah, 68			; 00000044H
  00104	7a 10		 jp	 SHORT $LN4@update_saf

; 138  : 	{
; 139  : 		dz = DOWN;

  00106	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0010e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dz@@3MA, xmm0
$LN4@update_saf:

; 140  : 	}
; 141  : 
; 142  : 	if ((position.z > MAX_MAP_Z) && (dz == DOWN))

  00116	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  0011e	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00125	76 26		 jbe	 SHORT $LN5@update_saf
  00127	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?dz@@3MA
  0012f	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00137	9f		 lahf
  00138	f6 c4 44	 test	 ah, 68			; 00000044H
  0013b	7a 10		 jp	 SHORT $LN5@update_saf

; 143  : 	{
; 144  : 		dz = UP;

  0013d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00145	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dz@@3MA, xmm0
$LN5@update_saf:

; 145  : 	}
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	if (point_inside_map_area (&position))

  0014d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  00155	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0015c	72 72		 jb	 SHORT $LN6@update_saf
  0015e	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00166	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  0016d	72 61		 jb	 SHORT $LN6@update_saf
  0016f	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  00177	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0017e	72 50		 jb	 SHORT $LN6@update_saf
  00180	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00188	0f 2f 05 08 00
	00 00		 comiss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  0018f	72 3f		 jb	 SHORT $LN6@update_saf

; 150  : 	{
; 151  : 		position.y = get_3d_terrain_elevation (position.x, position.z) + 50.0;

  00191	6a 00		 push	 0
  00193	51		 push	 ecx
  00194	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  0019c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a1	51		 push	 ecx
  001a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  001aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001af	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  001b4	dd 5d b8	 fstp	 QWORD PTR tv163[ebp]
  001b7	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR tv163[ebp]
  001bc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4049000000000000
  001c4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c8	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A+4, xmm0
$LN6@update_saf:

; 152  : 	}
; 153  : }

  001d0	5f		 pop	 edi
  001d1	5e		 pop	 esi
  001d2	5b		 pop	 ebx
  001d3	8b e5		 mov	 esp, ebp
  001d5	5d		 pop	 ebp
  001d6	c3		 ret	 0
?update_safe_view@@YGXXZ ENDP				; update_safe_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_safe.c
;	COMDAT ?deinitialise_safe_view@@YGXXZ
_TEXT	SEGMENT
?deinitialise_safe_view@@YGXXZ PROC			; deinitialise_safe_view, COMDAT

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_safe_view@@YGXXZ ENDP			; deinitialise_safe_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\views\vm_safe.c
;	COMDAT ?initialise_safe_view@@YGXXZ
_TEXT	SEGMENT
tv141 = -72						; size = 8
?initialise_safe_view@@YGXXZ PROC			; initialise_safe_view, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 	dx = RIGHT;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00011	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dx@@3MA, xmm0

; 98   : 	dz = UP;

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00021	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?dz@@3MA, xmm0

; 99   : 
; 100  : 	position.x = MIN_MAP_X + ((MAX_MAP_X - MIN_MAP_X) * frand1 ());

  00029	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00033	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00038	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0003d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00043	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00046	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0004c	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00050	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00058	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00060	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00068	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0006c	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00070	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00078	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0007c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00080	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A, xmm0

; 101  : 	position.z = MIN_MAP_Z + ((MAX_MAP_Z - MIN_MAP_Z) * frand1 ());

  00088	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00092	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00097	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000a2	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000a5	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000ab	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  000af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  000b7	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000bf	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000c7	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  000cb	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000cf	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000d7	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000db	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000df	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A+8, xmm0

; 102  : 	position.y = get_3d_terrain_elevation (position.x, position.z) + 50.0;

  000e7	6a 00		 push	 0
  000e9	51		 push	 ecx
  000ea	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A+8
  000f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f7	51		 push	 ecx
  000f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?position@@3UVEC3D@@A
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0010a	dd 5d b8	 fstp	 QWORD PTR tv141[ebp]
  0010d	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR tv141[ebp]
  00112	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4049000000000000
  0011a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0011e	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?position@@3UVEC3D@@A+4, xmm0

; 103  : }

  00126	5f		 pop	 edi
  00127	5e		 pop	 esi
  00128	5b		 pop	 ebx
  00129	8b e5		 mov	 esp, ebp
  0012b	5d		 pop	 ebp
  0012c	c3		 ret	 0
?initialise_safe_view@@YGXXZ ENDP			; initialise_safe_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
