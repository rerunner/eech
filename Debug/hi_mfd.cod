; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?clear_mfd_colour@@3UREAL_COLOUR@@A		; clear_mfd_colour
_BSS	SEGMENT
?clear_mfd_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; clear_mfd_colour
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_atan2f
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?initialise_hind_mfd@@YGXXZ			; initialise_hind_mfd
PUBLIC	?deinitialise_hind_mfd@@YGXXZ			; deinitialise_hind_mfd
PUBLIC	?draw_hind_mfd_on_cockpit@@YGXMMHH@Z		; draw_hind_mfd_on_cockpit
PUBLIC	?draw_hind_mfd_on_texture@@YGXXZ		; draw_hind_mfd_on_texture
PUBLIC	?draw_overlaid_hind_mfd@@YGXMMM@Z		; draw_overlaid_hind_mfd
PUBLIC	?get_hind_eo_display_visible@@YGHXZ		; get_hind_eo_display_visible
PUBLIC	?draw_hind_virtual_cockpit_ort_view@@YGXHH@Z	; draw_hind_virtual_cockpit_ort_view
PUBLIC	?draw_hind_virtual_cockpit_ort_symbology@@YGXXZ	; draw_hind_virtual_cockpit_ort_symbology
PUBLIC	?toggle_mi24_map@@YGXXZ				; toggle_mi24_map
PUBLIC	?mi24_map_active@@YGHXZ				; mi24_map_active
PUBLIC	?hind_map_waypoints_changed@@YGXXZ		; hind_map_waypoints_changed
PUBLIC	?get_mi24_map_caret_position@@YGXPAM0@Z		; get_mi24_map_caret_position
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA	; `draw_map_display'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_hind_mfd_on_texture@@YGXXZ@4JA ; `draw_hind_mfd_on_texture'::`1'::__LINE__Var
PUBLIC	??_C@_0CG@IPIPCLFE@mfd_viewport_size?5?$DM?$DN?5mfd_textur@ ; `string'
PUBLIC	??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA ; `set_eo_view_params'::`1'::__LINE__Var
PUBLIC	??_C@_0EK@DPCFPJPF@?$CIweather_mode?5?$DO?5WEATHERMODE_INV@ ; `string'
PUBLIC	??_C@_0EG@LLJGIOPM@?$CIday_segment_type?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIday@ ; `string'
PUBLIC	??_C@_0CH@DDKDNBNH@Invalid?5target?5acquisition?5syst@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA ; `draw_2d_eo_display'::`1'::__LINE__Var
PUBLIC	??_C@_02KMMHFIEO@eo@				; `string'
PUBLIC	??_C@_04MIGKMLBH@FLIR@				; `string'
PUBLIC	??_C@_05PNDCLKDI@LLLTV@				; `string'
PUBLIC	??_C@_05PJLBNLAH@SCOPE@				; `string'
PUBLIC	??_C@_03MAMPKPPK@XXX@				; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_07OBALMJJF@?$CF?$CL04?40f@		; `string'
PUBLIC	??_C@_07KFIBPGFB@R?$CF03?40f@			; `string'
PUBLIC	??_C@_08JFLECGBM@LO?5LIGHT@			; `string'
PUBLIC	??_C@_06BPEIKNIA@NARROW@			; `string'
PUBLIC	??_C@_04KPGPJCNC@WIDE@				; `string'
PUBLIC	??_C@_06OMCABMNO@?$CF?41fKm@			; `string'
PUBLIC	??_C@_06KODELPLK@LOCKED@			; `string'
PUBLIC	??_C@_06GPMJGLEM@MARKED@			; `string'
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	?__LINE__Var@?0??get_mi24_map_caret_position@@YGXPAM0@Z@4JA ; `get_mi24_map_caret_position'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@37ed4403
PUBLIC	__real@386d4402
PUBLIC	__real@3c03126f
PUBLIC	__real@3c8efa35
PUBLIC	__real@3d0f5c29
PUBLIC	__real@3da3d70a
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e99999a
PUBLIC	__real@3eb33333
PUBLIC	__real@3ecccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f400000
PUBLIC	__real@3f47ae14
PUBLIC	__real@3f4a3d71
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f4f5c29
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f51eb85
PUBLIC	__real@3f666666
PUBLIC	__real@3f68f5c3
PUBLIC	__real@3f6b851f
PUBLIC	__real@3f7fbe77
PUBLIC	__real@3f800000
PUBLIC	__real@3fb0a3d70a3d70a4
PUBLIC	__real@3fb504e6
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fbd70a3d70a3d71
PUBLIC	__real@3fbeb851eb851eb8
PUBLIC	__real@3fc0000000000000
PUBLIC	__real@3fc3333333333333
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd1111111111111
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff5d3d193333333
PUBLIC	__real@4000000000000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@403504e6
PUBLIC	__real@4072c00000000000
PUBLIC	__real@407e000000000000
PUBLIC	__real@4084000000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40cba583
PUBLIC	__real@41000000
PUBLIC	__real@41100000
PUBLIC	__real@4129b498
PUBLIC	__real@41900000
PUBLIC	__real@42000000
PUBLIC	__real@42652ee0
PUBLIC	__real@43000000
PUBLIC	__real@437fffbe
PUBLIC	__real@43800000
PUBLIC	__real@44800000
PUBLIC	__real@46c35000
PUBLIC	__real@bccccccd
PUBLIC	__real@bd4ccccd
PUBLIC	__real@bd99999a
PUBLIC	__real@bdcccccd
PUBLIC	__real@be000000
PUBLIC	__real@be19999a
PUBLIC	__real@be333333
PUBLIC	__real@be4ccccd
PUBLIC	__real@be666666
PUBLIC	__real@be800000
PUBLIC	__real@be8ccccd
PUBLIC	__real@be99999a
PUBLIC	__real@beb33333
PUBLIC	__real@becccccd
PUBLIC	__real@bf000000
PUBLIC	__real@bf400000
PUBLIC	__real@bf6147ae
PUBLIC	__real@bf63d70a
PUBLIC	__real@bf666666
PUBLIC	__real@bf68f5c3
PUBLIC	__real@bf6b851f
PUBLIC	__real@bf800000
PUBLIC	__real@bfb3333333333333
PUBLIC	__real@bfbeb851eb851eb8
PUBLIC	__real@bfd3333333333333
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@c0800000
PUBLIC	__real@c1400000
PUBLIC	__real@c1c80000
PUBLIC	__real@c2180000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan2:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_system_texture_screen
EXTRN	?set_system_texture_screen@@YGXPAUSCREEN@@H@Z:PROC ; set_system_texture_screen
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z:PROC ; flush_screen_texture_graphics
EXTRN	?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z:PROC ; set_mono_font_type
EXTRN	?set_mono_font_rel_position@@YGXMM@Z:PROC	; set_mono_font_rel_position
EXTRN	?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_mono_font_colour
EXTRN	?print_mono_font_char@@YGXD@Z:PROC		; print_mono_font_char
EXTRN	?get_mono_font_string_width@@YGMPBD@Z:PROC	; get_mono_font_string_width
EXTRN	?print_mono_font_string@@YGXPBD@Z:PROC		; print_mono_font_string
EXTRN	?create_2d_environment@@YGPAUENV_2D@@XZ:PROC	; create_2d_environment
EXTRN	?destroy_2d_environment@@YGXPAUENV_2D@@@Z:PROC	; destroy_2d_environment
EXTRN	?set_2d_active_environment@@YGXPAUENV_2D@@@Z:PROC ; set_2d_active_environment
EXTRN	?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_viewport
EXTRN	?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z:PROC ; set_2d_viewport_origin
EXTRN	?set_2d_window@@YGXPAUENV_2D@@MMMM@Z:PROC	; set_2d_window
EXTRN	?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z:PROC ; set_2d_instance_rotation
EXTRN	?reset_2d_instance@@YGXPAUENV_2D@@@Z:PROC	; reset_2d_instance
EXTRN	?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_line
EXTRN	?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC ; draw_2d_half_thick_line
EXTRN	?set_2d_mono_font_position@@YGXMM@Z:PROC	; set_2d_mono_font_position
EXTRN	?get_2d_world_position@@YGXMMPAM0@Z:PROC	; get_2d_world_position
EXTRN	?get_2d_float_screen_coordinates@@YGXMMPAM0@Z:PROC ; get_2d_float_screen_coordinates
EXTRN	?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z:PROC ; draw_2d_mono_sprite
EXTRN	?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z:PROC	; draw_2d_circle
EXTRN	?set_3d_active_environment@@YGXPAUENV_3D@@@Z:PROC ; set_3d_active_environment
EXTRN	?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z:PROC ; get_position_3d_screen_coordinates
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z:PROC ; get_waypoint_display_position
EXTRN	?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z:PROC ; get_simple_session_weather_at_point
EXTRN	?get_local_entity_first_waypoint@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_first_waypoint
EXTRN	?set_main_3d_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@MMMMMM@Z:PROC ; set_main_3d_params
EXTRN	?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z:PROC	; draw_main_3d_scene
EXTRN	?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z:PROC ; get_target_display_name
EXTRN	?draw_tsd_terrain_map@@YGXPAUENV_2D@@MMMPAUVEC3D@@MH@Z:PROC ; draw_tsd_terrain_map
EXTRN	?draw_tsd_contour_map@@YGXPAUENV_2D@@MMMPAUVEC3D@@MHH@Z:PROC ; draw_tsd_contour_map
EXTRN	?Initialise_TSD_render_terrain@@YGXXZ:PROC	; Initialise_TSD_render_terrain
EXTRN	?set_tsd_map_contour_colour@@YGXUREAL_COLOUR@@@Z:PROC ; set_tsd_map_contour_colour
EXTRN	?set_tsd_map_river_colour@@YGXUREAL_COLOUR@@@Z:PROC ; set_tsd_map_river_colour
EXTRN	?set_tsd_map_road_colour@@YGXUREAL_COLOUR@@@Z:PROC ; set_tsd_map_road_colour
EXTRN	?draw_tsd_map_grid@@YGXPAUVEC3D@@MUREAL_COLOUR@@@Z:PROC ; draw_tsd_map_grid
EXTRN	?draw_tsd_map_towns@@YGXPAUVEC3D@@M@Z:PROC	; draw_tsd_map_towns
EXTRN	?get_range_to_target@@YGMXZ:PROC		; get_range_to_target
EXTRN	?eo_is_locked@@YGHXZ:PROC			; eo_is_locked
EXTRN	?draw_symbology_to_texture@@YGXPAUSCREEN@@HHHHHHHUREAL_COLOUR@@1P6GXH@Z@Z:PROC ; draw_symbology_to_texture
EXTRN	?d3d_can_render_to_texture@@3HA:DWORD		; d3d_can_render_to_texture
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?custom_3d_models@@3Uinstalled_custom_3d_models@@A:QWORD ; custom_3d_models
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_char_type_message@@3PBDB:DWORD ; overload_invalid_char_type_message
EXTRN	?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA:BYTE ; fn_get_local_entity_char_value
EXTRN	?draw_eo_3d_scene@@3HA:DWORD			; draw_eo_3d_scene
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?full_screen_width@@3MA:DWORD			; full_screen_width
EXTRN	?full_screen_height@@3MA:DWORD			; full_screen_height
EXTRN	?full_screen_y_min@@3MA:DWORD			; full_screen_y_min
EXTRN	?full_screen_x_mid@@3MA:DWORD			; full_screen_x_mid
EXTRN	?full_screen_y_mid@@3MA:DWORD			; full_screen_y_mid
EXTRN	?full_screen_x_max@@3MA:DWORD			; full_screen_x_max
EXTRN	?full_screen_y_max@@3MA:DWORD			; full_screen_y_max
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?main_vp@@3UVIEWPOINT@@A:BYTE			; main_vp
EXTRN	?eo_low_light@@3HA:DWORD			; eo_low_light
EXTRN	?eo_ground_stabilised@@3HA:DWORD		; eo_ground_stabilised
EXTRN	?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; eo_sensor
EXTRN	?eo_azimuth@@3MA:DWORD				; eo_azimuth
EXTRN	?eo_max_azimuth@@3MA:DWORD			; eo_max_azimuth
EXTRN	?eo_elevation@@3MA:DWORD			; eo_elevation
EXTRN	?eo_min_elevation@@3MA:DWORD			; eo_min_elevation
EXTRN	?eo_max_elevation@@3MA:DWORD			; eo_max_elevation
EXTRN	?eo_max_visual_range@@3MA:DWORD			; eo_max_visual_range
EXTRN	?eo_vp@@3UVIEWPOINT@@A:BYTE			; eo_vp
EXTRN	?display_mfd_layout_grid@@3HA:DWORD		; display_mfd_layout_grid
EXTRN	?hind_damage@@3THIND_DAMAGE_FLAGS@@A:DWORD	; hind_damage
EXTRN	?hind_flir@@3UEO_PARAMS@@A:BYTE			; hind_flir
EXTRN	?hind_llltv@@3UEO_PARAMS@@A:BYTE		; hind_llltv
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?mfd_mode@@3W4MFD_MODES@@A DD 01H DUP (?)		; mfd_mode
?mfd_env@@3PAUENV_2D@@A DD 01H DUP (?)			; mfd_env
?mfd_viewport_size@@3MA DD 01H DUP (?)			; mfd_viewport_size
?mfd_viewport_x_org@@3MA DD 01H DUP (?)			; mfd_viewport_x_org
?mfd_viewport_y_org@@3MA DD 01H DUP (?)			; mfd_viewport_y_org
?mfd_viewport_x_min@@3MA DD 01H DUP (?)			; mfd_viewport_x_min
?mfd_viewport_y_min@@3MA DD 01H DUP (?)			; mfd_viewport_y_min
?mfd_viewport_x_max@@3MA DD 01H DUP (?)			; mfd_viewport_x_max
?mfd_viewport_y_max@@3MA DD 01H DUP (?)			; mfd_viewport_y_max
?i_translate_3d@@3MA DD 01H DUP (?)			; i_translate_3d
?j_translate_3d@@3MA DD 01H DUP (?)			; j_translate_3d
?i_scale_3d@@3MA DD 01H DUP (?)				; i_scale_3d
?j_scale_3d@@3MA DD 01H DUP (?)				; j_scale_3d
?map_range@@3MA DD 01H DUP (?)				; map_range
?map_scale@@3MA DD 01H DUP (?)				; map_scale
?mfd_texture_size@@3HA DD 01H DUP (?)			; mfd_texture_size
?mfd_viewport_texture_x_org@@3HA DD 01H DUP (?)		; mfd_viewport_texture_x_org
?mfd_viewport_texture_y_org@@3HA DD 01H DUP (?)		; mfd_viewport_texture_y_org
?map_up_to_date@@3HA DD 01H DUP (?)			; map_up_to_date
?upper_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A DD 01H DUP (?) ; upper_left_texture_uv
?upper_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A DD 01H DUP (?) ; upper_right_texture_uv
?lower_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A DD 01H DUP (?) ; lower_left_texture_uv
?lower_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A DD 01H DUP (?) ; lower_right_texture_uv
?eo_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; eo_texture_screen
?mfd_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; mfd_texture_screen
?map_centre_position@@3UVEC3D@@A DB 0cH DUP (?)		; map_centre_position
?mfd_colours@@3PAUREAL_COLOUR@@A DD 014H DUP (?)	; mfd_colours
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c2180000
CONST	SEGMENT
__real@c2180000 DD 0c2180000r			; -38
CONST	ENDS
;	COMDAT __real@c1c80000
CONST	SEGMENT
__real@c1c80000 DD 0c1c80000r			; -25
CONST	ENDS
;	COMDAT __real@c1400000
CONST	SEGMENT
__real@c1400000 DD 0c1400000r			; -12
CONST	ENDS
;	COMDAT __real@c0800000
CONST	SEGMENT
__real@c0800000 DD 0c0800000r			; -4
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bfd3333333333333
CONST	SEGMENT
__real@bfd3333333333333 DQ 0bfd3333333333333r	; -0.3
CONST	ENDS
;	COMDAT __real@bfbeb851eb851eb8
CONST	SEGMENT
__real@bfbeb851eb851eb8 DQ 0bfbeb851eb851eb8r	; -0.12
CONST	ENDS
;	COMDAT __real@bfb3333333333333
CONST	SEGMENT
__real@bfb3333333333333 DQ 0bfb3333333333333r	; -0.075
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@bf6b851f
CONST	SEGMENT
__real@bf6b851f DD 0bf6b851fr			; -0.92
CONST	ENDS
;	COMDAT __real@bf68f5c3
CONST	SEGMENT
__real@bf68f5c3 DD 0bf68f5c3r			; -0.91
CONST	ENDS
;	COMDAT __real@bf666666
CONST	SEGMENT
__real@bf666666 DD 0bf666666r			; -0.9
CONST	ENDS
;	COMDAT __real@bf63d70a
CONST	SEGMENT
__real@bf63d70a DD 0bf63d70ar			; -0.89
CONST	ENDS
;	COMDAT __real@bf6147ae
CONST	SEGMENT
__real@bf6147ae DD 0bf6147aer			; -0.88
CONST	ENDS
;	COMDAT __real@bf400000
CONST	SEGMENT
__real@bf400000 DD 0bf400000r			; -0.75
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@becccccd
CONST	SEGMENT
__real@becccccd DD 0becccccdr			; -0.4
CONST	ENDS
;	COMDAT __real@beb33333
CONST	SEGMENT
__real@beb33333 DD 0beb33333r			; -0.35
CONST	ENDS
;	COMDAT __real@be99999a
CONST	SEGMENT
__real@be99999a DD 0be99999ar			; -0.3
CONST	ENDS
;	COMDAT __real@be8ccccd
CONST	SEGMENT
__real@be8ccccd DD 0be8ccccdr			; -0.275
CONST	ENDS
;	COMDAT __real@be800000
CONST	SEGMENT
__real@be800000 DD 0be800000r			; -0.25
CONST	ENDS
;	COMDAT __real@be666666
CONST	SEGMENT
__real@be666666 DD 0be666666r			; -0.225
CONST	ENDS
;	COMDAT __real@be4ccccd
CONST	SEGMENT
__real@be4ccccd DD 0be4ccccdr			; -0.2
CONST	ENDS
;	COMDAT __real@be333333
CONST	SEGMENT
__real@be333333 DD 0be333333r			; -0.175
CONST	ENDS
;	COMDAT __real@be19999a
CONST	SEGMENT
__real@be19999a DD 0be19999ar			; -0.15
CONST	ENDS
;	COMDAT __real@be000000
CONST	SEGMENT
__real@be000000 DD 0be000000r			; -0.125
CONST	ENDS
;	COMDAT __real@bdcccccd
CONST	SEGMENT
__real@bdcccccd DD 0bdcccccdr			; -0.1
CONST	ENDS
;	COMDAT __real@bd99999a
CONST	SEGMENT
__real@bd99999a DD 0bd99999ar			; -0.075
CONST	ENDS
;	COMDAT __real@bd4ccccd
CONST	SEGMENT
__real@bd4ccccd DD 0bd4ccccdr			; -0.05
CONST	ENDS
;	COMDAT __real@bccccccd
CONST	SEGMENT
__real@bccccccd DD 0bccccccdr			; -0.025
CONST	ENDS
;	COMDAT __real@46c35000
CONST	SEGMENT
__real@46c35000 DD 046c35000r			; 25000
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@43800000
CONST	SEGMENT
__real@43800000 DD 043800000r			; 256
CONST	ENDS
;	COMDAT __real@437fffbe
CONST	SEGMENT
__real@437fffbe DD 0437fffber			; 255.999
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@4129b498
CONST	SEGMENT
__real@4129b498 DD 04129b498r			; 10.6066
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@41000000
CONST	SEGMENT
__real@41000000 DD 041000000r			; 8
CONST	ENDS
;	COMDAT __real@40cba583
CONST	SEGMENT
__real@40cba583 DD 040cba583r			; 6.36395
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@407e000000000000
CONST	SEGMENT
__real@407e000000000000 DQ 0407e000000000000r	; 480
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@403504e6
CONST	SEGMENT
__real@403504e6 DD 0403504e6r			; 2.82842
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff5d3d193333333
CONST	SEGMENT
__real@3ff5d3d193333333 DQ 03ff5d3d193333333r	; 1.36421
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd1111111111111
CONST	SEGMENT
__real@3fd1111111111111 DQ 03fd1111111111111r	; 0.266667
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
CONST	ENDS
;	COMDAT __real@3fc0000000000000
CONST	SEGMENT
__real@3fc0000000000000 DQ 03fc0000000000000r	; 0.125
CONST	ENDS
;	COMDAT __real@3fbeb851eb851eb8
CONST	SEGMENT
__real@3fbeb851eb851eb8 DQ 03fbeb851eb851eb8r	; 0.12
CONST	ENDS
;	COMDAT __real@3fbd70a3d70a3d71
CONST	SEGMENT
__real@3fbd70a3d70a3d71 DQ 03fbd70a3d70a3d71r	; 0.115
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb504e6
CONST	SEGMENT
__real@3fb504e6 DD 03fb504e6r			; 1.41421
CONST	ENDS
;	COMDAT __real@3fb0a3d70a3d70a4
CONST	SEGMENT
__real@3fb0a3d70a3d70a4 DQ 03fb0a3d70a3d70a4r	; 0.065
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7fbe77
CONST	SEGMENT
__real@3f7fbe77 DD 03f7fbe77r			; 0.999
CONST	ENDS
;	COMDAT __real@3f6b851f
CONST	SEGMENT
__real@3f6b851f DD 03f6b851fr			; 0.92
CONST	ENDS
;	COMDAT __real@3f68f5c3
CONST	SEGMENT
__real@3f68f5c3 DD 03f68f5c3r			; 0.91
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f51eb85
CONST	SEGMENT
__real@3f51eb85 DD 03f51eb85r			; 0.82
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f4f5c29
CONST	SEGMENT
__real@3f4f5c29 DD 03f4f5c29r			; 0.81
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f4a3d71
CONST	SEGMENT
__real@3f4a3d71 DD 03f4a3d71r			; 0.79
CONST	ENDS
;	COMDAT __real@3f47ae14
CONST	SEGMENT
__real@3f47ae14 DD 03f47ae14r			; 0.78
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3eb33333
CONST	SEGMENT
__real@3eb33333 DD 03eb33333r			; 0.35
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3da3d70a
CONST	SEGMENT
__real@3da3d70a DD 03da3d70ar			; 0.08
CONST	ENDS
;	COMDAT __real@3d0f5c29
CONST	SEGMENT
__real@3d0f5c29 DD 03d0f5c29r			; 0.035
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@3c03126f
CONST	SEGMENT
__real@3c03126f DD 03c03126fr			; 0.008
CONST	ENDS
;	COMDAT __real@386d4402
CONST	SEGMENT
__real@386d4402 DD 0386d4402r			; 5.65685e-05
CONST	ENDS
;	COMDAT __real@37ed4403
CONST	SEGMENT
__real@37ed4403 DD 037ed4403r			; 2.82843e-05
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_mi24_map_caret_position@@YGXPAM0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_mi24_map_caret_position@@YGXPAM0@Z@4JA DD 05daH ; `get_mi24_map_caret_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06GPMJGLEM@MARKED@
CONST	SEGMENT
??_C@_06GPMJGLEM@MARKED@ DB 'MARKED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KODELPLK@LOCKED@
CONST	SEGMENT
??_C@_06KODELPLK@LOCKED@ DB 'LOCKED', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OMCABMNO@?$CF?41fKm@
CONST	SEGMENT
??_C@_06OMCABMNO@?$CF?41fKm@ DB '%.1fKm', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KPGPJCNC@WIDE@
CONST	SEGMENT
??_C@_04KPGPJCNC@WIDE@ DB 'WIDE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPEIKNIA@NARROW@
CONST	SEGMENT
??_C@_06BPEIKNIA@NARROW@ DB 'NARROW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JFLECGBM@LO?5LIGHT@
CONST	SEGMENT
??_C@_08JFLECGBM@LO?5LIGHT@ DB 'LO LIGHT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFIBPGFB@R?$CF03?40f@
CONST	SEGMENT
??_C@_07KFIBPGFB@R?$CF03?40f@ DB 'R%03.0f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07OBALMJJF@?$CF?$CL04?40f@
CONST	SEGMENT
??_C@_07OBALMJJF@?$CF?$CL04?40f@ DB '%+04.0f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MAMPKPPK@XXX@
CONST	SEGMENT
??_C@_03MAMPKPPK@XXX@ DB 'XXX', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PJLBNLAH@SCOPE@
CONST	SEGMENT
??_C@_05PJLBNLAH@SCOPE@ DB 'SCOPE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PNDCLKDI@LLLTV@
CONST	SEGMENT
??_C@_05PNDCLKDI@LLLTV@ DB 'LLLTV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MIGKMLBH@FLIR@
CONST	SEGMENT
??_C@_04MIGKMLBH@FLIR@ DB 'FLIR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KMMHFIEO@eo@
CONST	SEGMENT
??_C@_02KMMHFIEO@eo@ DB 'eo', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA DD 03a5H ; `draw_2d_eo_display'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@DDKDNBNH@Invalid?5target?5acquisition?5syst@
CONST	SEGMENT
??_C@_0CH@DDKDNBNH@Invalid?5target?5acquisition?5syst@ DB 'Invalid target'
	DB	' acquisition system = %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@LLJGIOPM@?$CIday_segment_type?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIday@
CONST	SEGMENT
??_C@_0EG@LLJGIOPM@?$CIday_segment_type?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIday@ DB '('
	DB	'day_segment_type >= 0) && (day_segment_type < NUM_DAY_SEGMENT'
	DB	'_TYPES)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@DPCFPJPF@?$CIweather_mode?5?$DO?5WEATHERMODE_INV@
CONST	SEGMENT
??_C@_0EK@DPCFPJPF@?$CIweather_mode?5?$DO?5WEATHERMODE_INV@ DB '(weather_'
	DB	'mode > WEATHERMODE_INVALID) && (weather_mode < WEATHERMODE_LA'
	DB	'ST)', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA DD 036aH ; `set_eo_view_params'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@ DB 'Invalid fie'
	DB	'ld of view = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IPIPCLFE@mfd_viewport_size?5?$DM?$DN?5mfd_textur@
CONST	SEGMENT
??_C@_0CG@IPIPCLFE@mfd_viewport_size?5?$DM?$DN?5mfd_textur@ DB 'mfd_viewp'
	DB	'ort_size <= mfd_texture_size', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_hind_mfd_on_texture@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_hind_mfd_on_texture@@YGXXZ@4JA DD 02ddH ; `draw_hind_mfd_on_texture'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mf'
	DB	'd.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA DD 023aH	; `draw_map_display'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?map_active@@3HA DD 01H					; map_active
?draw_large_mfd@@3HA DD 01H				; draw_large_mfd
?flir_light_levels@@3PAY03W4DISPLAY_3D_LIGHT_LEVELS@@A DD 02H ; flir_light_levels
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
?flir_noise_levels@@3PAY03W4DISPLAY_3D_NOISE_LEVELS@@A DD 01H ; flir_noise_levels
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
?llltv_light_levels@@3PAY03W4DISPLAY_3D_LIGHT_LEVELS@@A DD 02H ; llltv_light_levels
	DD	02H
	DD	02H
	DD	02H
	DD	01H
	DD	02H
	DD	01H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	00H
?llltv_noise_levels@@3PAY03W4DISPLAY_3D_NOISE_LEVELS@@A DD 01H ; llltv_noise_levels
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	01H
	DD	02H
	DD	03H
	DD	02H
	DD	01H
	DD	02H
	DD	03H
	DD	02H
	DD	01H
	DD	02H
	DD	03H
	DD	02H
	DD	01H
	DD	02H
	DD	03H
?large_azimuth_marker@@3PADA DB 05H			; large_azimuth_marker
	DB	0cH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
?large_elevation_marker@@3PADA DB 0cH			; large_elevation_marker
	DB	05H
	DB	01H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
?large_range_marker@@3PADA DB 0cH			; large_range_marker
	DB	05H
	DB	0f4H
	DB	0feH
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_hind_ort_symbology@@YGXH@Z
_TEXT	SEGMENT
_dummy$ = 8						; size = 4
?draw_hind_ort_symbology@@YGXH@Z PROC			; draw_hind_ort_symbology, COMDAT

; 1362 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1363 : 	if (eo_sensor == TARGET_ACQUISITION_SYSTEM_FLIR)

  00009	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 3 ; eo_sensor
  00010	75 1b		 jne	 SHORT $LN2@draw_hind_

; 1364 : 		draw_2d_eo_display (&hind_flir, TARGET_ACQUISITION_SYSTEM_FLIR, hind_damage.flir, TRUE);

  00012	6a 01		 push	 1
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  00019	d1 e8		 shr	 eax, 1
  0001b	83 e0 01	 and	 eax, 1
  0001e	50		 push	 eax
  0001f	6a 03		 push	 3
  00021	68 00 00 00 00	 push	 OFFSET ?hind_flir@@3UEO_PARAMS@@A ; hind_flir
  00026	e8 00 00 00 00	 call	 ?draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z ; draw_2d_eo_display

; 1365 : 	else

  0002b	eb 1a		 jmp	 SHORT $LN1@draw_hind_
$LN2@draw_hind_:

; 1366 : 		draw_2d_eo_display (&hind_llltv, TARGET_ACQUISITION_SYSTEM_LLLTV, hind_damage.llltv, TRUE);

  0002d	6a 01		 push	 1
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  00034	c1 e8 03	 shr	 eax, 3
  00037	83 e0 01	 and	 eax, 1
  0003a	50		 push	 eax
  0003b	6a 06		 push	 6
  0003d	68 00 00 00 00	 push	 OFFSET ?hind_llltv@@3UEO_PARAMS@@A ; hind_llltv
  00042	e8 00 00 00 00	 call	 ?draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z ; draw_2d_eo_display
$LN1@draw_hind_:

; 1367 : }

  00047	5f		 pop	 edi
  00048	5e		 pop	 esi
  00049	5b		 pop	 ebx
  0004a	8b e5		 mov	 esp, ebp
  0004c	5d		 pop	 ebp
  0004d	c2 04 00	 ret	 4
?draw_hind_ort_symbology@@YGXH@Z ENDP			; draw_hind_ort_symbology
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z
_TEXT	SEGMENT
tv660 = -404						; size = 4
tv640 = -404						; size = 4
tv330 = -404						; size = 4
tv311 = -404						; size = 4
tv135 = -404						; size = 4
tv83 = -404						; size = 4
tv1016 = -400						; size = 4
tv652 = -400						; size = 4
tv632 = -400						; size = 4
tv323 = -400						; size = 4
tv303 = -400						; size = 4
tv247 = -400						; size = 4
tv150 = -400						; size = 4
tv95 = -400						; size = 4
tv75 = -400						; size = 4
_pitch_adjustment$1 = -332				; size = 4
_pitch$2 = -328						; size = 4
_roll$3 = -324						; size = 4
_visibility$ = -320					; size = 4
_tmp$ = -316						; size = 48
_target_point$ = -268					; size = 12
_source_position$ = -256				; size = 4
_target$ = -252						; size = 4
_source$ = -248						; size = 4
_y$ = -244						; size = 4
_x$ = -240						; size = 4
_j$ = -236						; size = 4
_i$ = -232						; size = 4
_y_adjust$ = -228					; size = 4
_target_range$ = -224					; size = 4
_marker_position$ = -220				; size = 4
_heading$ = -216					; size = 4
_width$ = -212						; size = 4
_heading_readout$ = -208				; size = 4
_buffer$ = -204						; size = 200
_s$ = -4						; size = 4
_eo$ = 8						; size = 4
_system$ = 12						; size = 4
_damaged$ = 16						; size = 4
_valid_3d$ = 20						; size = 4
?draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z PROC ; draw_2d_eo_display, COMDAT

; 933  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 01 00
	00		 sub	 esp, 404		; 00000194H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 934  : 	const char
; 935  : 		*s;
; 936  : 	char
; 937  : 		buffer[200];
; 938  : 
; 939  : 	int
; 940  : 		heading_readout;
; 941  : 
; 942  : 	float
; 943  : 		width,
; 944  : 		heading,
; 945  : 		marker_position,
; 946  : 		target_range = 0.0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _target_range$[ebp], xmm0

; 947  : 		y_adjust,
; 948  : 		i,
; 949  : 		j,
; 950  : 		x,
; 951  : 		y;
; 952  : 
; 953  : 	entity
; 954  : 		*source,
; 955  : 		*target;
; 956  : 
; 957  : 	vec3d
; 958  : 		*source_position,
; 959  : 		target_point;
; 960  : 
; 961  : 	viewpoint
; 962  : 		tmp;
; 963  : 
; 964  : 	object_3d_visibility
; 965  : 		visibility;
; 966  : 
; 967  : 	ASSERT (eo);

  00017	83 7d 08 00	 cmp	 DWORD PTR _eo$[ebp], 0
  0001b	75 18		 jne	 SHORT $LN6@draw_2d_eo
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  00022	83 c0 22	 add	 eax, 34			; 00000022H
  00025	50		 push	 eax
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_02KMMHFIEO@eo@
  00030	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@draw_2d_eo:

; 968  : 
; 969  : 	source = get_gunship_entity ();

  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0003a	89 85 08 ff ff
	ff		 mov	 DWORD PTR _source$[ebp], eax

; 970  : 
; 971  : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00040	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _source$[ebp], 0
  00047	74 10		 je	 SHORT $LN34@draw_2d_eo
  00049	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _source$[ebp]
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00057	eb 24		 jmp	 SHORT $LN35@draw_2d_eo
$LN34@draw_2d_eo:
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  0005f	83 c2 26	 add	 edx, 38			; 00000026H
  00062	52		 push	 edx
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN35@draw_2d_eo:
  0007d	b9 01 00 00 00	 mov	 ecx, 1
  00082	85 c9		 test	 ecx, ecx
  00084	74 0c		 je	 SHORT $LN36@draw_2d_eo
  00086	c7 85 6c fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv83[ebp], 8
  00090	eb 24		 jmp	 SHORT $LN37@draw_2d_eo
$LN36@draw_2d_eo:
  00092	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  00098	83 c2 26	 add	 edx, 38			; 00000026H
  0009b	52		 push	 edx
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ac	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN37@draw_2d_eo:
  000b6	6a 08		 push	 8
  000b8	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _source$[ebp]
  000be	51		 push	 ecx
  000bf	6b 95 70 fe ff
	ff 60		 imul	 edx, DWORD PTR tv75[ebp], 96
  000c6	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000cc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000d3	ff d1		 call	 ecx
  000d5	89 85 00 ff ff
	ff		 mov	 DWORD PTR _source_position$[ebp], eax

; 972  : 
; 973  : 	target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  000db	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _source$[ebp], 0
  000e2	74 10		 je	 SHORT $LN38@draw_2d_eo
  000e4	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR _source$[ebp]
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000f2	eb 24		 jmp	 SHORT $LN39@draw_2d_eo
$LN38@draw_2d_eo:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  000fa	83 c2 28	 add	 edx, 40			; 00000028H
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN39@draw_2d_eo:
  00118	b9 01 00 00 00	 mov	 ecx, 1
  0011d	85 c9		 test	 ecx, ecx
  0011f	74 0c		 je	 SHORT $LN40@draw_2d_eo
  00121	c7 85 6c fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv135[ebp], 38 ; 00000026H
  0012b	eb 24		 jmp	 SHORT $LN41@draw_2d_eo
$LN40@draw_2d_eo:
  0012d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  00133	83 c2 28	 add	 edx, 40			; 00000028H
  00136	52		 push	 edx
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00147	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN41@draw_2d_eo:
  00151	6a 26		 push	 38			; 00000026H
  00153	8b 8d 08 ff ff
	ff		 mov	 ecx, DWORD PTR _source$[ebp]
  00159	51		 push	 ecx
  0015a	69 95 70 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv95[ebp], 180
  00164	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  0016a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00171	ff d1		 call	 ecx
  00173	89 85 04 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 974  : 	target_range = get_range_to_target();

  00179	e8 00 00 00 00	 call	 ?get_range_to_target@@YGMXZ ; get_range_to_target
  0017e	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR _target_range$[ebp]

; 975  : 
; 976  : 	////////////////////////////////////////
; 977  : 	//
; 978  : 	// text
; 979  : 	//
; 980  : 	////////////////////////////////////////
; 981  : 
; 982  : 	set_mono_font_colour (MFD_EO_TEXT_COLOUR);

  00184	b8 04 00 00 00	 mov	 eax, 4
  00189	6b c8 05	 imul	 ecx, eax, 5
  0018c	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00192	52		 push	 edx
  00193	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 983  : 
; 984  : 	set_mono_font_type (MONO_FONT_TYPE_7X12);

  00198	6a 05		 push	 5
  0019a	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 985  : 
; 986  : 	//
; 987  : 	// sensor type
; 988  : 	//
; 989  : 
; 990  : 	y_adjust = 5.0;

  0019f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  001a7	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 991  : 	set_2d_mono_font_position (-1.0, 1.0);

  001af	51		 push	 ecx
  001b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bd	51		 push	 ecx
  001be	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  001c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cb	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 992  : 	set_mono_font_rel_position (1.0, y_adjust);

  001d0	51		 push	 ecx
  001d1	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	51		 push	 ecx
  001df	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ec	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 993  : 
; 994  : 	switch (system)

  001f1	8b 45 0c	 mov	 eax, DWORD PTR _system$[ebp]
  001f4	89 85 70 fe ff
	ff		 mov	 DWORD PTR tv150[ebp], eax
  001fa	83 bd 70 fe ff
	ff 03		 cmp	 DWORD PTR tv150[ebp], 3
  00201	74 14		 je	 SHORT $LN7@draw_2d_eo
  00203	83 bd 70 fe ff
	ff 06		 cmp	 DWORD PTR tv150[ebp], 6
  0020a	74 17		 je	 SHORT $LN8@draw_2d_eo
  0020c	83 bd 70 fe ff
	ff 07		 cmp	 DWORD PTR tv150[ebp], 7
  00213	74 1a		 je	 SHORT $LN9@draw_2d_eo
  00215	eb 24		 jmp	 SHORT $LN10@draw_2d_eo
$LN7@draw_2d_eo:

; 995  : 	{
; 996  : 		case TARGET_ACQUISITION_SYSTEM_FLIR:
; 997  : 		{
; 998  : 			print_mono_font_string ("FLIR");

  00217	68 00 00 00 00	 push	 OFFSET ??_C@_04MIGKMLBH@FLIR@
  0021c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 999  : 
; 1000 : 			break;

  00221	eb 22		 jmp	 SHORT $LN2@draw_2d_eo
$LN8@draw_2d_eo:

; 1001 : 		}
; 1002 : 		case TARGET_ACQUISITION_SYSTEM_LLLTV:
; 1003 : 		{
; 1004 : 			print_mono_font_string ("LLLTV");

  00223	68 00 00 00 00	 push	 OFFSET ??_C@_05PNDCLKDI@LLLTV@
  00228	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1005 : 
; 1006 : 			break;

  0022d	eb 16		 jmp	 SHORT $LN2@draw_2d_eo
$LN9@draw_2d_eo:

; 1007 : 		}
; 1008 : 		case TARGET_ACQUISITION_SYSTEM_PERISCOPE:
; 1009 : 		{
; 1010 : 			print_mono_font_string ("SCOPE");

  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_05PJLBNLAH@SCOPE@
  00234	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1011 : 
; 1012 : 			break;

  00239	eb 0a		 jmp	 SHORT $LN2@draw_2d_eo
$LN10@draw_2d_eo:

; 1013 : 		}
; 1014 : 		default:
; 1015 : 		{
; 1016 : 			print_mono_font_string ("XXX");

  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_03MAMPKPPK@XXX@
  00240	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN2@draw_2d_eo:

; 1017 : 
; 1018 : 			break;
; 1019 : 		}
; 1020 : 	}
; 1021 : 
; 1022 : 	//
; 1023 : 	// damaged
; 1024 : 	//
; 1025 : 
; 1026 : 	if (damaged)

  00245	83 7d 10 00	 cmp	 DWORD PTR _damaged$[ebp], 0
  00249	0f 84 9d 00 00
	00		 je	 $LN11@draw_2d_eo

; 1027 : 	{
; 1028 : 		draw_2d_line (-0.5, -0.5,  0.5, 0.5, MFD_COLOUR1);

  0024f	b8 04 00 00 00	 mov	 eax, 4
  00254	6b c8 00	 imul	 ecx, eax, 0
  00257	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0025d	52		 push	 edx
  0025e	51		 push	 ecx
  0025f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00267	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026c	51		 push	 ecx
  0026d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00275	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027a	51		 push	 ecx
  0027b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00283	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00288	51		 push	 ecx
  00289	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00291	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00296	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1029 : 		draw_2d_line ( 0.5, -0.5, -0.5, 0.5, MFD_COLOUR1);

  0029b	b8 04 00 00 00	 mov	 eax, 4
  002a0	6b c8 00	 imul	 ecx, eax, 0
  002a3	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  002a9	52		 push	 edx
  002aa	51		 push	 ecx
  002ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b8	51		 push	 ecx
  002b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  002c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c6	51		 push	 ecx
  002c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  002cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d4	51		 push	 ecx
  002d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1030 : 
; 1031 : 		return;

  002e7	e9 cd 18 00 00	 jmp	 $LN1@draw_2d_eo
$LN11@draw_2d_eo:

; 1032 : 	}
; 1033 : 
; 1034 : 	//
; 1035 : 	// heading
; 1036 : 	//
; 1037 : 
; 1038 : 	heading = get_heading_from_attitude_matrix (eo_vp.attitude);

  002ec	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002f1	d1 e0		 shl	 eax, 1
  002f3	b9 04 00 00 00	 mov	 ecx, 4
  002f8	d1 e1		 shl	 ecx, 1
  002fa	51		 push	 ecx
  002fb	f3 0f 10 84 08
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[eax+ecx+12]
  00304	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00309	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0030e	d1 e2		 shl	 edx, 1
  00310	b8 04 00 00 00	 mov	 eax, 4
  00315	6b c8 00	 imul	 ecx, eax, 0
  00318	51		 push	 ecx
  00319	f3 0f 10 84 0a
	0c 00 00 00	 movss	 xmm0, DWORD PTR ?eo_vp@@3UVIEWPOINT@@A[edx+ecx+12]
  00322	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00327	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0032c	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR _heading$[ebp]

; 1039 : 
; 1040 : 	if (heading < 0.0)

  00332	f3 0f 5a 85 28
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  0033a	0f 57 c9	 xorps	 xmm1, xmm1
  0033d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00341	76 1c		 jbe	 SHORT $LN12@draw_2d_eo

; 1041 : 	{
; 1042 : 		heading += rad (360.0);

  00343	f3 0f 5a 85 28
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  0034b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00353	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00357	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _heading$[ebp], xmm0
$LN12@draw_2d_eo:

; 1043 : 	}
; 1044 : 
; 1045 : 	heading_readout = (int) deg (heading);

  0035f	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00367	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0036f	f3 0f 2c c0	 cvttss2si eax, xmm0
  00373	89 85 30 ff ff
	ff		 mov	 DWORD PTR _heading_readout$[ebp], eax

; 1046 : 
; 1047 : 	if (heading_readout == 0)

  00379	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _heading_readout$[ebp], 0
  00380	75 0a		 jne	 SHORT $LN13@draw_2d_eo

; 1048 : 	{
; 1049 : 		heading_readout = 360;

  00382	c7 85 30 ff ff
	ff 68 01 00 00	 mov	 DWORD PTR _heading_readout$[ebp], 360 ; 00000168H
$LN13@draw_2d_eo:

; 1050 : 	}
; 1051 : 
; 1052 : 	sprintf (buffer, "%d", heading_readout);

  0038c	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _heading_readout$[ebp]
  00392	50		 push	 eax
  00393	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00398	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  0039e	51		 push	 ecx
  0039f	e8 00 00 00 00	 call	 _sprintf
  003a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1053 : 
; 1054 : 	width = get_mono_font_string_width (buffer);

  003a7	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  003ad	50		 push	 eax
  003ae	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  003b3	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 1055 : 
; 1056 : 	set_2d_mono_font_position (0.0, 1.0);

  003b9	51		 push	 ecx
  003ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c7	51		 push	 ecx
  003c8	0f 57 c0	 xorps	 xmm0, xmm0
  003cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d0	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1057 : 
; 1058 : 	set_mono_font_rel_position ((-width * 0.5) + 1.0, y_adjust);

  003d5	51		 push	 ecx
  003d6	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  003de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e3	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  003eb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  003f2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003f6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  003fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00406	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0040a	51		 push	 ecx
  0040b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00410	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1059 : 
; 1060 : 	print_mono_font_string (buffer);

  00415	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1061 : 
; 1062 : 	// airspeed
; 1063 : 
; 1064 : 	sprintf(buffer, "%+04.0f", current_flight_dynamics->indicated_airspeed.value);

  00421	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00426	f3 0f 5a 80 fc
	23 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9212]
  0042e	83 ec 08	 sub	 esp, 8
  00431	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00436	68 00 00 00 00	 push	 OFFSET ??_C@_07OBALMJJF@?$CF?$CL04?40f@
  0043b	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  00441	51		 push	 ecx
  00442	e8 00 00 00 00	 call	 _sprintf
  00447	83 c4 10	 add	 esp, 16			; 00000010H

; 1065 : 	set_2d_mono_font_position (-1.0, 1.0);

  0044a	51		 push	 ecx
  0044b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00453	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00458	51		 push	 ecx
  00459	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00461	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00466	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1066 : 	set_mono_font_rel_position(1.0, 18.0);

  0046b	51		 push	 ecx
  0046c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41900000
  00474	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00479	51		 push	 ecx
  0047a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00482	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00487	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1067 : 	print_mono_font_string(buffer);

  0048c	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1068 : 
; 1069 : 	// altitude
; 1070 : 
; 1071 : 	if (current_flight_dynamics->radar_altitude.value < 300.0)

  00498	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0049d	f3 0f 5a 80 44
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9284]
  004a5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4072c00000000000
  004ad	66 0f 2f c8	 comisd	 xmm1, xmm0
  004b1	0f 86 a0 00 00
	00		 jbe	 $LN14@draw_2d_eo

; 1072 : 	{
; 1073 : 		sprintf(buffer, "R%03.0f", current_flight_dynamics->radar_altitude.value);

  004b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004bc	f3 0f 5a 80 44
	24 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9284]
  004c4	83 ec 08	 sub	 esp, 8
  004c7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004cc	68 00 00 00 00	 push	 OFFSET ??_C@_07KFIBPGFB@R?$CF03?40f@
  004d1	8d 8d 34 ff ff
	ff		 lea	 ecx, DWORD PTR _buffer$[ebp]
  004d7	51		 push	 ecx
  004d8	e8 00 00 00 00	 call	 _sprintf
  004dd	83 c4 10	 add	 esp, 16			; 00000010H

; 1074 : 		set_2d_mono_font_position (1.0, 1.0);

  004e0	51		 push	 ecx
  004e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ee	51		 push	 ecx
  004ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fc	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1075 : 		set_mono_font_rel_position(-get_mono_font_string_width(buffer) - 2.0, 18.0);

  00501	51		 push	 ecx
  00502	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41900000
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0051b	d9 9d 70 fe ff
	ff		 fstp	 DWORD PTR tv1016[ebp]
  00521	f3 0f 10 85 70
	fe ff ff	 movss	 xmm0, DWORD PTR tv1016[ebp]
  00529	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00530	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00534	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4000000000000000
  0053c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00540	51		 push	 ecx
  00541	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00546	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1076 : 		print_mono_font_string(buffer);

  0054b	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN14@draw_2d_eo:

; 1077 : 	}
; 1078 : 
; 1079 : 	//
; 1080 : 	// low light
; 1081 : 	//
; 1082 : 
; 1083 : 	if (eo_low_light)

  00557	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_low_light@@3HA, 0 ; eo_low_light
  0055e	74 5c		 je	 SHORT $LN15@draw_2d_eo

; 1084 : 	{
; 1085 : 		y_adjust = 32.0;

  00560	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42000000
  00568	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1086 : 
; 1087 : 		set_2d_mono_font_position (-1.0, 1.0);

  00570	51		 push	 ecx
  00571	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00579	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057e	51		 push	 ecx
  0057f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00587	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0058c	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1088 : 
; 1089 : 		set_mono_font_rel_position (1.0, y_adjust);

  00591	51		 push	 ecx
  00592	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  0059a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0059f	51		 push	 ecx
  005a0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005ad	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1090 : 
; 1091 : 		print_mono_font_string ("LO LIGHT");

  005b2	68 00 00 00 00	 push	 OFFSET ??_C@_08JFLECGBM@LO?5LIGHT@
  005b7	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN15@draw_2d_eo:

; 1092 : 	}
; 1093 : 
; 1094 : 	//
; 1095 : 	// field of view
; 1096 : 	//
; 1097 : 
; 1098 : 	switch (eo->field_of_view)

  005bc	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  005bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c1	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv247[ebp], ecx
  005c7	83 bd 70 fe ff
	ff 00		 cmp	 DWORD PTR tv247[ebp], 0
  005ce	7e 26		 jle	 SHORT $LN18@draw_2d_eo
  005d0	83 bd 70 fe ff
	ff 02		 cmp	 DWORD PTR tv247[ebp], 2
  005d7	7e 0b		 jle	 SHORT $LN16@draw_2d_eo
  005d9	83 bd 70 fe ff
	ff 03		 cmp	 DWORD PTR tv247[ebp], 3
  005e0	74 0b		 je	 SHORT $LN17@draw_2d_eo
  005e2	eb 12		 jmp	 SHORT $LN18@draw_2d_eo
$LN16@draw_2d_eo:

; 1099 : 	{
; 1100 : 		case EO_FOV_NARROW:
; 1101 : 		case EO_FOV_MEDIUM:
; 1102 : 		{
; 1103 : 			s = "NARROW";

  005e4	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_06BPEIKNIA@NARROW@

; 1104 : 			break;

  005eb	eb 10		 jmp	 SHORT $LN4@draw_2d_eo
$LN17@draw_2d_eo:

; 1105 : 		}
; 1106 : 		case EO_FOV_WIDE:
; 1107 : 		{
; 1108 : 			s = "WIDE";

  005ed	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_04KPGPJCNC@WIDE@

; 1109 : 
; 1110 : 			break;

  005f4	eb 07		 jmp	 SHORT $LN4@draw_2d_eo
$LN18@draw_2d_eo:

; 1111 : 		}
; 1112 : 		default:
; 1113 : 		{
; 1114 : 			s = "XXX";

  005f6	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _s$[ebp], OFFSET ??_C@_03MAMPKPPK@XXX@
$LN4@draw_2d_eo:

; 1115 : 
; 1116 : 			break;
; 1117 : 		}
; 1118 : 	}
; 1119 : 
; 1120 : 	width = get_mono_font_string_width (s);

  005fd	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  00600	50		 push	 eax
  00601	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00606	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 1121 : 
; 1122 : 	width += 2.0;

  0060c	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  00614	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  0061c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00620	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 1123 : 	y_adjust = 5.0;

  00628	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00630	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1124 : 
; 1125 : 	set_2d_mono_font_position (1.0, 1.0);

  00638	51		 push	 ecx
  00639	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00641	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00646	51		 push	 ecx
  00647	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0064f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00654	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1126 : 
; 1127 : 	set_mono_font_rel_position (-width, y_adjust);

  00659	51		 push	 ecx
  0065a	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  00662	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00667	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  0066f	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00676	51		 push	 ecx
  00677	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067c	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1128 : 
; 1129 : 	print_mono_font_string (s);

  00681	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  00684	50		 push	 eax
  00685	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1130 : 
; 1131 : 	//
; 1132 : 	// target name
; 1133 : 	//
; 1134 : 
; 1135 : 	y_adjust = -12.0;

  0068a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1400000
  00692	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1136 : 
; 1137 : 	s = get_target_display_name (target, buffer, TRUE);

  0069a	6a 01		 push	 1
  0069c	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  006a2	50		 push	 eax
  006a3	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  006a9	51		 push	 ecx
  006aa	e8 00 00 00 00	 call	 ?get_target_display_name@@YGPBDPAUENTITY@@PADH@Z ; get_target_display_name
  006af	89 45 fc	 mov	 DWORD PTR _s$[ebp], eax

; 1138 : 
; 1139 : 	if (s)

  006b2	83 7d fc 00	 cmp	 DWORD PTR _s$[ebp], 0
  006b6	74 4b		 je	 SHORT $LN19@draw_2d_eo

; 1140 : 	{
; 1141 : 		set_2d_mono_font_position (-1.0, -1.0);

  006b8	51		 push	 ecx
  006b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  006c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c6	51		 push	 ecx
  006c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  006cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006d4	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1142 : 
; 1143 : 		set_mono_font_rel_position (1.0, y_adjust);

  006d9	51		 push	 ecx
  006da	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  006e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006e7	51		 push	 ecx
  006e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  006f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f5	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1144 : 
; 1145 : 		print_mono_font_string (s);

  006fa	8b 45 fc	 mov	 eax, DWORD PTR _s$[ebp]
  006fd	50		 push	 eax
  006fe	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN19@draw_2d_eo:

; 1146 : 	}
; 1147 : 
; 1148 : 	//
; 1149 : 	// target range
; 1150 : 	//
; 1151 : 
; 1152 : 	if (target_range > 0.0)

  00703	f3 0f 5a 85 20
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  0070b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00713	0f 86 af 00 00
	00		 jbe	 $LN20@draw_2d_eo

; 1153 : 	{
; 1154 : 		sprintf (buffer, "%.1fKm", target_range * (1.0 / 1000.0));

  00719	f3 0f 5a 85 20
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00721	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00729	83 ec 08	 sub	 esp, 8
  0072c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00731	68 00 00 00 00	 push	 OFFSET ??_C@_06OMCABMNO@?$CF?41fKm@
  00736	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0073c	50		 push	 eax
  0073d	e8 00 00 00 00	 call	 _sprintf
  00742	83 c4 10	 add	 esp, 16			; 00000010H

; 1155 : 
; 1156 : 		width = get_mono_font_string_width (buffer);

  00745	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  0074b	50		 push	 eax
  0074c	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00751	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 1157 : 
; 1158 : 		set_2d_mono_font_position (1.0, -1.0);

  00757	51		 push	 ecx
  00758	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00760	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00765	51		 push	 ecx
  00766	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0076e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00773	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1159 : 
; 1160 : 		width += 2.0;

  00778	f3 0f 5a 85 2c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  00780	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  00788	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0078c	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _width$[ebp], xmm0

; 1161 : 
; 1162 : 		set_mono_font_rel_position (-width, y_adjust);

  00794	51		 push	 ecx
  00795	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  0079d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007a2	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  007aa	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007b1	51		 push	 ecx
  007b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b7	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1163 : 
; 1164 : 		print_mono_font_string (buffer);

  007bc	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _buffer$[ebp]
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN20@draw_2d_eo:

; 1165 : 	}
; 1166 : 
; 1167 : 	//
; 1168 : 	// locked
; 1169 : 	//
; 1170 : 
; 1171 : 	if (eo_is_locked())

  007c8	e8 00 00 00 00	 call	 ?eo_is_locked@@YGHXZ	; eo_is_locked
  007cd	85 c0		 test	 eax, eax
  007cf	74 5c		 je	 SHORT $LN21@draw_2d_eo

; 1172 : 	{
; 1173 : 		y_adjust = -25.0;

  007d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1c80000
  007d9	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1174 : 
; 1175 : 		set_2d_mono_font_position (-1.0, -1.0);

  007e1	51		 push	 ecx
  007e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  007ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ef	51		 push	 ecx
  007f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  007f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007fd	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1176 : 
; 1177 : 		set_mono_font_rel_position (1.0, y_adjust);

  00802	51		 push	 ecx
  00803	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  0080b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00810	51		 push	 ecx
  00811	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00819	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0081e	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1178 : 
; 1179 : 		print_mono_font_string ("LOCKED");

  00823	68 00 00 00 00	 push	 OFFSET ??_C@_06KODELPLK@LOCKED@
  00828	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN21@draw_2d_eo:

; 1180 : 	}
; 1181 : 
; 1182 : // Jabberwock 031107 Designated targets
; 1183 : 
; 1184 : 	target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0082d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00834	74 0f		 je	 SHORT $LN42@draw_2d_eo
  00836	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0083b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0083d	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv303[ebp], ecx
  00843	eb 27		 jmp	 SHORT $LN43@draw_2d_eo
$LN42@draw_2d_eo:
  00845	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  0084b	81 c2 fb 00 00
	00		 add	 edx, 251		; 000000fbH
  00851	52		 push	 edx
  00852	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00857	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0085c	50		 push	 eax
  0085d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00862	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv303[ebp], 0
$LN43@draw_2d_eo:
  0086c	b9 01 00 00 00	 mov	 ecx, 1
  00871	85 c9		 test	 ecx, ecx
  00873	74 0c		 je	 SHORT $LN44@draw_2d_eo
  00875	c7 85 6c fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv311[ebp], 38 ; 00000026H
  0087f	eb 27		 jmp	 SHORT $LN45@draw_2d_eo
$LN44@draw_2d_eo:
  00881	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  00887	81 c2 fb 00 00
	00		 add	 edx, 251		; 000000fbH
  0088d	52		 push	 edx
  0088e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00893	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00898	50		 push	 eax
  00899	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0089e	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv311[ebp], 0
$LN45@draw_2d_eo:
  008a8	6a 26		 push	 38			; 00000026H
  008aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  008b0	51		 push	 ecx
  008b1	69 95 70 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv303[ebp], 180
  008bb	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR tv311[ebp]
  008c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  008c8	ff d1		 call	 ecx
  008ca	89 85 04 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 1185 : 
; 1186 : 	if (target && get_local_entity_parent (target, LIST_TYPE_DESIGNATED_TARGET))

  008d0	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  008d7	0f 84 1b 01 00
	00		 je	 $LN22@draw_2d_eo
  008dd	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  008e4	74 10		 je	 SHORT $LN46@draw_2d_eo
  008e6	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  008ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  008ee	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv323[ebp], ecx
  008f4	eb 20		 jmp	 SHORT $LN47@draw_2d_eo
$LN46@draw_2d_eo:
  008f6	68 a2 04 00 00	 push	 1186			; 000004a2H
  008fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00900	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00906	52		 push	 edx
  00907	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0090c	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv323[ebp], 0
$LN47@draw_2d_eo:
  00916	b8 01 00 00 00	 mov	 eax, 1
  0091b	85 c0		 test	 eax, eax
  0091d	74 0c		 je	 SHORT $LN48@draw_2d_eo
  0091f	c7 85 6c fe ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv330[ebp], 10 ; 0000000aH
  00929	eb 20		 jmp	 SHORT $LN49@draw_2d_eo
$LN48@draw_2d_eo:
  0092b	68 a2 04 00 00	 push	 1186			; 000004a2H
  00930	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00935	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0093b	51		 push	 ecx
  0093c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00941	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv330[ebp], 0
$LN49@draw_2d_eo:
  0094b	6a 0a		 push	 10			; 0000000aH
  0094d	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR _target$[ebp]
  00953	52		 push	 edx
  00954	69 85 70 fe ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv323[ebp], 180
  0095e	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR tv330[ebp]
  00964	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0096b	ff d2		 call	 edx
  0096d	85 c0		 test	 eax, eax
  0096f	0f 84 83 00 00
	00		 je	 $LN22@draw_2d_eo

; 1187 : 	{
; 1188 : 		y_adjust = -25.0;

  00975	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1c80000
  0097d	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1189 : 
; 1190 : 		width = get_mono_font_string_width ("MARKED");

  00985	68 00 00 00 00	 push	 OFFSET ??_C@_06GPMJGLEM@MARKED@
  0098a	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  0098f	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 1191 : 
; 1192 : 		set_2d_mono_font_position (1.0, -1.0);

  00995	51		 push	 ecx
  00996	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0099e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a3	51		 push	 ecx
  009a4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009b1	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1193 : 
; 1194 : 		set_mono_font_rel_position (-width - 1.0, y_adjust);

  009b6	51		 push	 ecx
  009b7	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  009bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009c4	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  009cc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  009d3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  009d7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  009df	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009e3	51		 push	 ecx
  009e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009e9	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1195 : 
; 1196 : 		print_mono_font_string ("MARKED");

  009ee	68 00 00 00 00	 push	 OFFSET ??_C@_06GPMJGLEM@MARKED@
  009f3	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN22@draw_2d_eo:

; 1197 : 	}
; 1198 : // Jabberwock 031107 ends
; 1199 : 
; 1200 : // added ground stabi by GCsDriver 08-12-2007
; 1201 : 	//
; 1202 : 	// 030418 loke
; 1203 : 	// draw an indication if ground stablisation is enabled
; 1204 : 	//
; 1205 : 
; 1206 : 	if (eo_ground_stabilised)

  009f8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?eo_ground_stabilised@@3HA, 0 ; eo_ground_stabilised
  009ff	74 73		 je	 SHORT $LN23@draw_2d_eo

; 1207 : 	{
; 1208 : 		y_adjust = -38.0;

  00a01	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2180000
  00a09	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _y_adjust$[ebp], xmm0

; 1209 : 
; 1210 : 		width = get_mono_font_string_width ("S");

  00a11	68 00 00 00 00	 push	 OFFSET ??_C@_01CPLAODJH@S@
  00a16	e8 00 00 00 00	 call	 ?get_mono_font_string_width@@YGMPBD@Z ; get_mono_font_string_width
  00a1b	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _width$[ebp]

; 1211 : 
; 1212 : 		set_2d_mono_font_position (1.0, -1.0);

  00a21	51		 push	 ecx
  00a22	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00a2a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a2f	51		 push	 ecx
  00a30	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a38	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a3d	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 1213 : 
; 1214 : 		set_mono_font_rel_position (-width, y_adjust);

  00a42	51		 push	 ecx
  00a43	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _y_adjust$[ebp]
  00a4b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a50	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _width$[ebp]
  00a58	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00a5f	51		 push	 ecx
  00a60	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a65	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 1215 : 
; 1216 : 		print_mono_font_string ("S");

  00a6a	68 00 00 00 00	 push	 OFFSET ??_C@_01CPLAODJH@S@
  00a6f	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string
$LN23@draw_2d_eo:

; 1217 : 	}
; 1218 : 	////////////////////////////////////////
; 1219 : 	//
; 1220 : 	// line graphics
; 1221 : 	//
; 1222 : 	////////////////////////////////////////
; 1223 : 
; 1224 : 	//
; 1225 : 	// datum
; 1226 : 	//
; 1227 : 
; 1228 : 	draw_2d_line (-0.075, 0.0, -0.025, 0.0, MFD_EO_TEXT_COLOUR);

  00a74	b8 04 00 00 00	 mov	 eax, 4
  00a79	6b c8 05	 imul	 ecx, eax, 5
  00a7c	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00a82	52		 push	 edx
  00a83	51		 push	 ecx
  00a84	0f 57 c0	 xorps	 xmm0, xmm0
  00a87	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a8c	51		 push	 ecx
  00a8d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bccccccd
  00a95	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a9a	51		 push	 ecx
  00a9b	0f 57 c0	 xorps	 xmm0, xmm0
  00a9e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aa3	51		 push	 ecx
  00aa4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd99999a
  00aac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ab1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1229 : 	draw_2d_line (0.035, 0.0, 0.08, 0.0, MFD_EO_TEXT_COLOUR);

  00ab6	b8 04 00 00 00	 mov	 eax, 4
  00abb	6b c8 05	 imul	 ecx, eax, 5
  00abe	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00ac4	52		 push	 edx
  00ac5	51		 push	 ecx
  00ac6	0f 57 c0	 xorps	 xmm0, xmm0
  00ac9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ace	51		 push	 ecx
  00acf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3da3d70a
  00ad7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00adc	51		 push	 ecx
  00add	0f 57 c0	 xorps	 xmm0, xmm0
  00ae0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ae5	51		 push	 ecx
  00ae6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d0f5c29
  00aee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00af3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1230 : 	draw_2d_line (0.0, -0.075, 0.0, -0.025, MFD_EO_TEXT_COLOUR);

  00af8	b8 04 00 00 00	 mov	 eax, 4
  00afd	6b c8 05	 imul	 ecx, eax, 5
  00b00	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00b06	52		 push	 edx
  00b07	51		 push	 ecx
  00b08	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bccccccd
  00b10	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b15	51		 push	 ecx
  00b16	0f 57 c0	 xorps	 xmm0, xmm0
  00b19	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b1e	51		 push	 ecx
  00b1f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd99999a
  00b27	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b2c	51		 push	 ecx
  00b2d	0f 57 c0	 xorps	 xmm0, xmm0
  00b30	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b35	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1231 : 	draw_2d_line (0.0, 0.035, 0.0, 0.08, MFD_EO_TEXT_COLOUR);

  00b3a	b8 04 00 00 00	 mov	 eax, 4
  00b3f	6b c8 05	 imul	 ecx, eax, 5
  00b42	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00b48	52		 push	 edx
  00b49	51		 push	 ecx
  00b4a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3da3d70a
  00b52	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b57	51		 push	 ecx
  00b58	0f 57 c0	 xorps	 xmm0, xmm0
  00b5b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b60	51		 push	 ecx
  00b61	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d0f5c29
  00b69	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b6e	51		 push	 ecx
  00b6f	0f 57 c0	 xorps	 xmm0, xmm0
  00b72	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b77	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1232 : 
; 1233 : 	//
; 1234 : 	// azimuth
; 1235 : 	//
; 1236 : 
; 1237 : 	draw_2d_line (-0.5, 0.8, 0.5, 0.8, MFD_EO_TEXT_COLOUR);

  00b7c	b8 04 00 00 00	 mov	 eax, 4
  00b81	6b c8 05	 imul	 ecx, eax, 5
  00b84	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00b8a	52		 push	 edx
  00b8b	51		 push	 ecx
  00b8c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00b94	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b99	51		 push	 ecx
  00b9a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00ba2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ba7	51		 push	 ecx
  00ba8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00bb0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bb5	51		 push	 ecx
  00bb6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00bbe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bc3	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1238 : 
; 1239 : 	marker_position = (eo_azimuth / eo_max_azimuth) * 0.5;

  00bc8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  00bd0	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_max_azimuth@@3MA
  00bd8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00bdc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00be4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00be8	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _marker_position$[ebp], xmm0

; 1240 : 
; 1241 : 	draw_2d_line (-0.5, 0.8 - 0.02, -0.5, 0.8 + 0.02, MFD_EO_TEXT_COLOUR);

  00bf0	b8 04 00 00 00	 mov	 eax, 4
  00bf5	6b c8 05	 imul	 ecx, eax, 5
  00bf8	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00bfe	52		 push	 edx
  00bff	51		 push	 ecx
  00c00	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f51eb85
  00c08	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c0d	51		 push	 ecx
  00c0e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00c16	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c1b	51		 push	 ecx
  00c1c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f47ae14
  00c24	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c29	51		 push	 ecx
  00c2a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00c32	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c37	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1242 : 	draw_2d_line (0.5, 0.8 - 0.02, 0.5, 0.8 + 0.02, MFD_EO_TEXT_COLOUR);

  00c3c	b8 04 00 00 00	 mov	 eax, 4
  00c41	6b c8 05	 imul	 ecx, eax, 5
  00c44	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00c4a	52		 push	 edx
  00c4b	51		 push	 ecx
  00c4c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f51eb85
  00c54	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c59	51		 push	 ecx
  00c5a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00c62	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c67	51		 push	 ecx
  00c68	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f47ae14
  00c70	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c75	51		 push	 ecx
  00c76	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00c7e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c83	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1243 : 	draw_2d_line (0.0, 0.8 - 0.01, 0.0, 0.8 + 0.01, MFD_EO_TEXT_COLOUR);

  00c88	b8 04 00 00 00	 mov	 eax, 4
  00c8d	6b c8 05	 imul	 ecx, eax, 5
  00c90	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00c96	52		 push	 edx
  00c97	51		 push	 ecx
  00c98	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4f5c29
  00ca0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ca5	51		 push	 ecx
  00ca6	0f 57 c0	 xorps	 xmm0, xmm0
  00ca9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cae	51		 push	 ecx
  00caf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4a3d71
  00cb7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cbc	51		 push	 ecx
  00cbd	0f 57 c0	 xorps	 xmm0, xmm0
  00cc0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cc5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1244 : 	draw_2d_mono_sprite (large_azimuth_marker, marker_position, 0.8, MFD_EO_TEXT_COLOUR);

  00cca	b8 04 00 00 00	 mov	 eax, 4
  00ccf	6b c8 05	 imul	 ecx, eax, 5
  00cd2	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00cd8	52		 push	 edx
  00cd9	51		 push	 ecx
  00cda	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  00ce2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ce7	51		 push	 ecx
  00ce8	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _marker_position$[ebp]
  00cf0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf5	68 00 00 00 00	 push	 OFFSET ?large_azimuth_marker@@3PADA
  00cfa	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite

; 1245 : 
; 1246 : 	//
; 1247 : 	// elevation
; 1248 : 	//
; 1249 : 
; 1250 : 	draw_2d_line (-0.9, 0.1, -0.9, -0.3, MFD_EO_TEXT_COLOUR);

  00cff	b8 04 00 00 00	 mov	 eax, 4
  00d04	6b c8 05	 imul	 ecx, eax, 5
  00d07	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00d0d	52		 push	 edx
  00d0e	51		 push	 ecx
  00d0f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00d17	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d1c	51		 push	 ecx
  00d1d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf666666
  00d25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d2a	51		 push	 ecx
  00d2b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00d33	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d38	51		 push	 ecx
  00d39	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf666666
  00d41	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d46	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1251 : 
; 1252 : 	if (eo_elevation < 0.0)

  00d4b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?eo_elevation@@3MA
  00d53	0f 57 c9	 xorps	 xmm1, xmm1
  00d56	66 0f 2f c8	 comisd	 xmm1, xmm0
  00d5a	76 2a		 jbe	 SHORT $LN24@draw_2d_eo

; 1253 : 	{
; 1254 : 		marker_position = (eo_elevation / eo_min_elevation) * -0.3;

  00d5c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00d64	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_min_elevation@@3MA
  00d6c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00d70	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfd3333333333333
  00d78	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00d7c	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _marker_position$[ebp], xmm0

; 1255 : 	}
; 1256 : 	else

  00d84	eb 28		 jmp	 SHORT $LN25@draw_2d_eo
$LN24@draw_2d_eo:

; 1257 : 	{
; 1258 : 		marker_position = (eo_elevation / eo_max_elevation) * 0.1;

  00d86	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  00d8e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_max_elevation@@3MA
  00d96	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00d9a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00da2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00da6	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _marker_position$[ebp], xmm0
$LN25@draw_2d_eo:

; 1259 : 	}
; 1260 : 
; 1261 : 	draw_2d_line (-0.9 - 0.02, 0.1, -0.9 + 0.02, 0.1, MFD_EO_TEXT_COLOUR);

  00dae	b8 04 00 00 00	 mov	 eax, 4
  00db3	6b c8 05	 imul	 ecx, eax, 5
  00db6	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00dbc	52		 push	 edx
  00dbd	51		 push	 ecx
  00dbe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00dc6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dcb	51		 push	 ecx
  00dcc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  00dd4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dd9	51		 push	 ecx
  00dda	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00de2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00de7	51		 push	 ecx
  00de8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6b851f
  00df0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00df5	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1262 : 	draw_2d_line (-0.9 - 0.02, -0.3, -0.9 + 0.02, -0.3, MFD_EO_TEXT_COLOUR);

  00dfa	b8 04 00 00 00	 mov	 eax, 4
  00dff	6b c8 05	 imul	 ecx, eax, 5
  00e02	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00e08	52		 push	 edx
  00e09	51		 push	 ecx
  00e0a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00e12	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e17	51		 push	 ecx
  00e18	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6147ae
  00e20	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e25	51		 push	 ecx
  00e26	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  00e2e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e33	51		 push	 ecx
  00e34	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf6b851f
  00e3c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e41	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1263 : 	draw_2d_line (-0.9 - 0.01, 0.0, -0.9 + 0.01, 0.0, MFD_EO_TEXT_COLOUR);

  00e46	b8 04 00 00 00	 mov	 eax, 4
  00e4b	6b c8 05	 imul	 ecx, eax, 5
  00e4e	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00e54	52		 push	 edx
  00e55	51		 push	 ecx
  00e56	0f 57 c0	 xorps	 xmm0, xmm0
  00e59	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e5e	51		 push	 ecx
  00e5f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf63d70a
  00e67	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e6c	51		 push	 ecx
  00e6d	0f 57 c0	 xorps	 xmm0, xmm0
  00e70	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e75	51		 push	 ecx
  00e76	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf68f5c3
  00e7e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e83	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1264 : 	draw_2d_mono_sprite (large_elevation_marker, -0.9, marker_position, MFD_EO_TEXT_COLOUR);

  00e88	b8 04 00 00 00	 mov	 eax, 4
  00e8d	6b c8 05	 imul	 ecx, eax, 5
  00e90	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00e96	52		 push	 edx
  00e97	51		 push	 ecx
  00e98	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _marker_position$[ebp]
  00ea0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ea5	51		 push	 ecx
  00ea6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf666666
  00eae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00eb3	68 00 00 00 00	 push	 OFFSET ?large_elevation_marker@@3PADA
  00eb8	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite

; 1265 : 
; 1266 : 	//
; 1267 : 	// range
; 1268 : 	//
; 1269 : 
; 1270 : 	draw_2d_line (0.9, 0.0, 0.9, -0.5, MFD_EO_TEXT_COLOUR);

  00ebd	b8 04 00 00 00	 mov	 eax, 4
  00ec2	6b c8 05	 imul	 ecx, eax, 5
  00ec5	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00ecb	52		 push	 edx
  00ecc	51		 push	 ecx
  00ecd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  00ed5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00eda	51		 push	 ecx
  00edb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00ee3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ee8	51		 push	 ecx
  00ee9	0f 57 c0	 xorps	 xmm0, xmm0
  00eec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ef1	51		 push	 ecx
  00ef2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00efa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00eff	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1271 : 
; 1272 : 	draw_2d_line (0.9,  0.000, 0.9 + 0.02,  0.000, MFD_EO_TEXT_COLOUR);

  00f04	b8 04 00 00 00	 mov	 eax, 4
  00f09	6b c8 05	 imul	 ecx, eax, 5
  00f0c	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00f12	52		 push	 edx
  00f13	51		 push	 ecx
  00f14	0f 57 c0	 xorps	 xmm0, xmm0
  00f17	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f1c	51		 push	 ecx
  00f1d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  00f25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f2a	51		 push	 ecx
  00f2b	0f 57 c0	 xorps	 xmm0, xmm0
  00f2e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f33	51		 push	 ecx
  00f34	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00f3c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f41	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1273 : 	draw_2d_line (0.9, -0.025, 0.9 + 0.01, -0.025, MFD_EO_TEXT_COLOUR);

  00f46	b8 04 00 00 00	 mov	 eax, 4
  00f4b	6b c8 05	 imul	 ecx, eax, 5
  00f4e	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00f54	52		 push	 edx
  00f55	51		 push	 ecx
  00f56	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bccccccd
  00f5e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f63	51		 push	 ecx
  00f64	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  00f6c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f71	51		 push	 ecx
  00f72	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bccccccd
  00f7a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f7f	51		 push	 ecx
  00f80	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00f88	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f8d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1274 : 	draw_2d_line (0.9, -0.050, 0.9 + 0.01, -0.050, MFD_EO_TEXT_COLOUR);

  00f92	b8 04 00 00 00	 mov	 eax, 4
  00f97	6b c8 05	 imul	 ecx, eax, 5
  00f9a	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00fa0	52		 push	 edx
  00fa1	51		 push	 ecx
  00fa2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00faa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00faf	51		 push	 ecx
  00fb0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  00fb8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fbd	51		 push	 ecx
  00fbe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00fc6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fcb	51		 push	 ecx
  00fcc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00fd4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fd9	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1275 : 	draw_2d_line (0.9, -0.075, 0.9 + 0.01, -0.075, MFD_EO_TEXT_COLOUR);

  00fde	b8 04 00 00 00	 mov	 eax, 4
  00fe3	6b c8 05	 imul	 ecx, eax, 5
  00fe6	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00fec	52		 push	 edx
  00fed	51		 push	 ecx
  00fee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd99999a
  00ff6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ffb	51		 push	 ecx
  00ffc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  01004	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01009	51		 push	 ecx
  0100a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd99999a
  01012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01017	51		 push	 ecx
  01018	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01020	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01025	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1276 : 
; 1277 : 	draw_2d_line (0.9, -0.100, 0.9 + 0.02, -0.100, MFD_EO_TEXT_COLOUR);

  0102a	b8 04 00 00 00	 mov	 eax, 4
  0102f	6b c8 05	 imul	 ecx, eax, 5
  01032	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01038	52		 push	 edx
  01039	51		 push	 ecx
  0103a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  01042	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01047	51		 push	 ecx
  01048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  01050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01055	51		 push	 ecx
  01056	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bdcccccd
  0105e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01063	51		 push	 ecx
  01064	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  0106c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01071	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1278 : 	draw_2d_line (0.9, -0.125, 0.9 + 0.01, -0.125, MFD_EO_TEXT_COLOUR);

  01076	b8 04 00 00 00	 mov	 eax, 4
  0107b	6b c8 05	 imul	 ecx, eax, 5
  0107e	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01084	52		 push	 edx
  01085	51		 push	 ecx
  01086	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  0108e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01093	51		 push	 ecx
  01094	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  0109c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010a1	51		 push	 ecx
  010a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be000000
  010aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010af	51		 push	 ecx
  010b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  010b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010bd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1279 : 	draw_2d_line (0.9, -0.150, 0.9 + 0.01, -0.150, MFD_EO_TEXT_COLOUR);

  010c2	b8 04 00 00 00	 mov	 eax, 4
  010c7	6b c8 05	 imul	 ecx, eax, 5
  010ca	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  010d0	52		 push	 edx
  010d1	51		 push	 ecx
  010d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  010da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010df	51		 push	 ecx
  010e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  010e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010ed	51		 push	 ecx
  010ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be19999a
  010f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010fb	51		 push	 ecx
  010fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01104	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01109	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1280 : 	draw_2d_line (0.9, -0.175, 0.9 + 0.01, -0.175, MFD_EO_TEXT_COLOUR);

  0110e	b8 04 00 00 00	 mov	 eax, 4
  01113	6b c8 05	 imul	 ecx, eax, 5
  01116	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0111c	52		 push	 edx
  0111d	51		 push	 ecx
  0111e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be333333
  01126	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0112b	51		 push	 ecx
  0112c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  01134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01139	51		 push	 ecx
  0113a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be333333
  01142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01147	51		 push	 ecx
  01148	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01150	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01155	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1281 : 
; 1282 : 	draw_2d_line (0.9, -0.200, 0.9 + 0.02, -0.200, MFD_EO_TEXT_COLOUR);

  0115a	b8 04 00 00 00	 mov	 eax, 4
  0115f	6b c8 05	 imul	 ecx, eax, 5
  01162	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01168	52		 push	 edx
  01169	51		 push	 ecx
  0116a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be4ccccd
  01172	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01177	51		 push	 ecx
  01178	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  01180	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01185	51		 push	 ecx
  01186	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be4ccccd
  0118e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01193	51		 push	 ecx
  01194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  0119c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011a1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1283 : 	draw_2d_line (0.9, -0.225, 0.9 + 0.01, -0.225, MFD_EO_TEXT_COLOUR);

  011a6	b8 04 00 00 00	 mov	 eax, 4
  011ab	6b c8 05	 imul	 ecx, eax, 5
  011ae	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  011b4	52		 push	 edx
  011b5	51		 push	 ecx
  011b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  011be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011c3	51		 push	 ecx
  011c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  011cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011d1	51		 push	 ecx
  011d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be666666
  011da	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011df	51		 push	 ecx
  011e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  011e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  011ed	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1284 : 	draw_2d_line (0.9, -0.250, 0.9 + 0.01, -0.250, MFD_EO_TEXT_COLOUR);

  011f2	b8 04 00 00 00	 mov	 eax, 4
  011f7	6b c8 05	 imul	 ecx, eax, 5
  011fa	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01200	52		 push	 edx
  01201	51		 push	 ecx
  01202	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be800000
  0120a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0120f	51		 push	 ecx
  01210	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  01218	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0121d	51		 push	 ecx
  0121e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be800000
  01226	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0122b	51		 push	 ecx
  0122c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01239	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1285 : 	draw_2d_line (0.9, -0.275, 0.9 + 0.01, -0.275, MFD_EO_TEXT_COLOUR);

  0123e	b8 04 00 00 00	 mov	 eax, 4
  01243	6b c8 05	 imul	 ecx, eax, 5
  01246	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0124c	52		 push	 edx
  0124d	51		 push	 ecx
  0124e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be8ccccd
  01256	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0125b	51		 push	 ecx
  0125c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f68f5c3
  01264	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01269	51		 push	 ecx
  0126a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be8ccccd
  01272	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01277	51		 push	 ecx
  01278	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01280	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01285	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1286 : 
; 1287 : 	draw_2d_line (0.9, -0.300, 0.9 + 0.02, -0.300, MFD_EO_TEXT_COLOUR);

  0128a	b8 04 00 00 00	 mov	 eax, 4
  0128f	6b c8 05	 imul	 ecx, eax, 5
  01292	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01298	52		 push	 edx
  01299	51		 push	 ecx
  0129a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  012a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012a7	51		 push	 ecx
  012a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  012b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012b5	51		 push	 ecx
  012b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  012be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012c3	51		 push	 ecx
  012c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  012cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012d1	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1288 : 
; 1289 : 	draw_2d_line (0.9, -0.400, 0.9 + 0.02, -0.400, MFD_EO_TEXT_COLOUR);

  012d6	b8 04 00 00 00	 mov	 eax, 4
  012db	6b c8 05	 imul	 ecx, eax, 5
  012de	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  012e4	52		 push	 edx
  012e5	51		 push	 ecx
  012e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  012ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012f3	51		 push	 ecx
  012f4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  012fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01301	51		 push	 ecx
  01302	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  0130a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0130f	51		 push	 ecx
  01310	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01318	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0131d	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1290 : 
; 1291 : 	draw_2d_line (0.9, -0.500, 0.9 + 0.02, -0.500, MFD_EO_TEXT_COLOUR);

  01322	b8 04 00 00 00	 mov	 eax, 4
  01327	6b c8 05	 imul	 ecx, eax, 5
  0132a	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01330	52		 push	 edx
  01331	51		 push	 ecx
  01332	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  0133a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0133f	51		 push	 ecx
  01340	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6b851f
  01348	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0134d	51		 push	 ecx
  0134e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf000000
  01356	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0135b	51		 push	 ecx
  0135c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  01364	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01369	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1292 : 
; 1293 : 	if (target_range > 0.0)

  0136e	f3 0f 5a 85 20
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  01376	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0137e	76 6a		 jbe	 SHORT $LN26@draw_2d_eo

; 1294 : 	{
; 1295 : 		marker_position = (min (target_range, eo_max_visual_range) / eo_max_visual_range) * -0.5;

  01380	68 00 00 00 00	 push	 OFFSET ?eo_max_visual_range@@3MA ; eo_max_visual_range
  01385	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _target_range$[ebp]
  0138b	50		 push	 eax
  0138c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  01391	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  01395	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR ?eo_max_visual_range@@3MA
  0139d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  013a1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0000000000000
  013a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  013ad	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _marker_position$[ebp], xmm0

; 1296 : 		draw_2d_mono_sprite (large_range_marker, 0.9, marker_position, MFD_EO_TEXT_COLOUR);

  013b5	b8 04 00 00 00	 mov	 eax, 4
  013ba	6b c8 05	 imul	 ecx, eax, 5
  013bd	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  013c3	52		 push	 edx
  013c4	51		 push	 ecx
  013c5	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _marker_position$[ebp]
  013cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  013d2	51		 push	 ecx
  013d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  013db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  013e0	68 00 00 00 00	 push	 OFFSET ?large_range_marker@@3PADA
  013e5	e8 00 00 00 00	 call	 ?draw_2d_mono_sprite@@YGXPBDMMUREAL_COLOUR@@@Z ; draw_2d_mono_sprite
$LN26@draw_2d_eo:

; 1297 : 	}
; 1298 : 
; 1299 : 	// horizon
; 1300 : 	{
; 1301 : 		float roll = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ROLL);

  013ea	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  013f1	74 0f		 je	 SHORT $LN50@draw_2d_eo
  013f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  013f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  013fa	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv632[ebp], ecx
  01400	eb 27		 jmp	 SHORT $LN51@draw_2d_eo
$LN50@draw_2d_eo:
  01402	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  01408	81 c2 70 01 00
	00		 add	 edx, 368		; 00000170H
  0140e	52		 push	 edx
  0140f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  01414	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01419	50		 push	 eax
  0141a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0141f	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv632[ebp], 0
$LN51@draw_2d_eo:
  01429	b9 01 00 00 00	 mov	 ecx, 1
  0142e	85 c9		 test	 ecx, ecx
  01430	74 0c		 je	 SHORT $LN52@draw_2d_eo
  01432	c7 85 6c fe ff
	ff 71 00 00 00	 mov	 DWORD PTR tv640[ebp], 113 ; 00000071H
  0143c	eb 27		 jmp	 SHORT $LN53@draw_2d_eo
$LN52@draw_2d_eo:
  0143e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  01444	81 c2 70 01 00
	00		 add	 edx, 368		; 00000170H
  0144a	52		 push	 edx
  0144b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  01450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01455	50		 push	 eax
  01456	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0145b	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv640[ebp], 0
$LN53@draw_2d_eo:
  01465	6a 71		 push	 113			; 00000071H
  01467	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0146d	51		 push	 ecx
  0146e	69 95 70 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv632[ebp], 700
  01478	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR tv640[ebp]
  0147e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01485	ff d1		 call	 ecx
  01487	d9 9d bc fe ff
	ff		 fstp	 DWORD PTR _roll$3[ebp]

; 1302 : 		float pitch = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_PITCH);

  0148d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  01494	74 0f		 je	 SHORT $LN54@draw_2d_eo
  01496	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0149b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0149d	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv652[ebp], ecx
  014a3	eb 27		 jmp	 SHORT $LN55@draw_2d_eo
$LN54@draw_2d_eo:
  014a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  014ab	81 c2 71 01 00
	00		 add	 edx, 369		; 00000171H
  014b1	52		 push	 edx
  014b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  014b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  014bc	50		 push	 eax
  014bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014c2	c7 85 70 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv652[ebp], 0
$LN55@draw_2d_eo:
  014cc	b9 01 00 00 00	 mov	 ecx, 1
  014d1	85 c9		 test	 ecx, ecx
  014d3	74 0c		 je	 SHORT $LN56@draw_2d_eo
  014d5	c7 85 6c fe ff
	ff 54 00 00 00	 mov	 DWORD PTR tv660[ebp], 84 ; 00000054H
  014df	eb 27		 jmp	 SHORT $LN57@draw_2d_eo
$LN56@draw_2d_eo:
  014e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z@4JA
  014e7	81 c2 71 01 00
	00		 add	 edx, 369		; 00000171H
  014ed	52		 push	 edx
  014ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  014f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  014f8	50		 push	 eax
  014f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014fe	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv660[ebp], 0
$LN57@draw_2d_eo:
  01508	6a 54		 push	 84			; 00000054H
  0150a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  01510	51		 push	 ecx
  01511	69 95 70 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv652[ebp], 700
  0151b	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR tv660[ebp]
  01521	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01528	ff d1		 call	 ecx
  0152a	d9 9d b8 fe ff
	ff		 fstp	 DWORD PTR _pitch$2[ebp]

; 1303 : 		float pitch_adjustment = -pitch / rad(90) * 0.5;

  01530	f3 0f 10 85 b8
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch$2[ebp]
  01538	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0153f	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@3fc90fdb
  01547	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0154b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  01553	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01557	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _pitch_adjustment$1[ebp], xmm0

; 1304 : 
; 1305 : 		draw_2d_half_thick_line(-0.35, 0.0, -0.3, 0.0, MFD_EO_TEXT_COLOUR);

  0155f	b8 04 00 00 00	 mov	 eax, 4
  01564	6b c8 05	 imul	 ecx, eax, 5
  01567	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0156d	52		 push	 edx
  0156e	51		 push	 ecx
  0156f	0f 57 c0	 xorps	 xmm0, xmm0
  01572	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01577	51		 push	 ecx
  01578	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@be99999a
  01580	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01585	51		 push	 ecx
  01586	0f 57 c0	 xorps	 xmm0, xmm0
  01589	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0158e	51		 push	 ecx
  0158f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@beb33333
  01597	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0159c	e8 00 00 00 00	 call	 ?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_half_thick_line

; 1306 : 		draw_2d_half_thick_line( 0.35, 0.0,  0.3, 0.0, MFD_EO_TEXT_COLOUR);

  015a1	b8 04 00 00 00	 mov	 eax, 4
  015a6	6b c8 05	 imul	 ecx, eax, 5
  015a9	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  015af	52		 push	 edx
  015b0	51		 push	 ecx
  015b1	0f 57 c0	 xorps	 xmm0, xmm0
  015b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  015b9	51		 push	 ecx
  015ba	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e99999a
  015c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  015c7	51		 push	 ecx
  015c8	0f 57 c0	 xorps	 xmm0, xmm0
  015cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  015d0	51		 push	 ecx
  015d1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eb33333
  015d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  015de	e8 00 00 00 00	 call	 ?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_half_thick_line

; 1307 : 
; 1308 : 		// draw datum
; 1309 : 		set_2d_instance_rotation (mfd_env, roll);

  015e3	51		 push	 ecx
  015e4	f3 0f 10 85 bc
	fe ff ff	 movss	 xmm0, DWORD PTR _roll$3[ebp]
  015ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  015f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  015f6	50		 push	 eax
  015f7	e8 00 00 00 00	 call	 ?set_2d_instance_rotation@@YGXPAUENV_2D@@M@Z ; set_2d_instance_rotation

; 1310 : 
; 1311 : 		draw_2d_half_thick_line(-0.75, pitch_adjustment, -0.4, pitch_adjustment, MFD_EO_TEXT_COLOUR);

  015fc	b8 04 00 00 00	 mov	 eax, 4
  01601	6b c8 05	 imul	 ecx, eax, 5
  01604	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0160a	52		 push	 edx
  0160b	51		 push	 ecx
  0160c	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch_adjustment$1[ebp]
  01614	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01619	51		 push	 ecx
  0161a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@becccccd
  01622	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01627	51		 push	 ecx
  01628	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch_adjustment$1[ebp]
  01630	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01635	51		 push	 ecx
  01636	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf400000
  0163e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01643	e8 00 00 00 00	 call	 ?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_half_thick_line

; 1312 : 		draw_2d_half_thick_line( 0.75, pitch_adjustment,  0.4, pitch_adjustment, MFD_EO_TEXT_COLOUR);

  01648	b8 04 00 00 00	 mov	 eax, 4
  0164d	6b c8 05	 imul	 ecx, eax, 5
  01650	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01656	52		 push	 edx
  01657	51		 push	 ecx
  01658	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch_adjustment$1[ebp]
  01660	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01665	51		 push	 ecx
  01666	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ecccccd
  0166e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01673	51		 push	 ecx
  01674	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch_adjustment$1[ebp]
  0167c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01681	51		 push	 ecx
  01682	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  0168a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0168f	e8 00 00 00 00	 call	 ?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_half_thick_line

; 1313 : 
; 1314 : 		reset_2d_instance (mfd_env);

  01694	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  01699	50		 push	 eax
  0169a	e8 00 00 00 00	 call	 ?reset_2d_instance@@YGXPAUENV_2D@@@Z ; reset_2d_instance

; 1315 : 	}
; 1316 : 
; 1317 : 	//
; 1318 : 	// target gates
; 1319 : 	//
; 1320 : 
; 1321 : 	if (valid_3d)

  0169f	83 7d 14 00	 cmp	 DWORD PTR _valid_3d$[ebp], 0
  016a3	0f 84 10 05 00
	00		 je	 $LN29@draw_2d_eo

; 1322 : 	{
; 1323 : 		if (target)

  016a9	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  016b0	0f 84 03 05 00
	00		 je	 $LN29@draw_2d_eo

; 1324 : 		{
; 1325 : 			if (!((!d3d_can_render_to_texture) && (!draw_large_mfd)))

  016b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_can_render_to_texture@@3HA, 0 ; d3d_can_render_to_texture
  016bd	75 0d		 jne	 SHORT $LN30@draw_2d_eo
  016bf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_large_mfd@@3HA, 0
  016c6	0f 84 ed 04 00
	00		 je	 $LN29@draw_2d_eo
$LN30@draw_2d_eo:

; 1326 : 			{
; 1327 : 				tmp = main_vp;

  016cc	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  016d1	be 00 00 00 00	 mov	 esi, OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  016d6	8d bd c4 fe ff
	ff		 lea	 edi, DWORD PTR _tmp$[ebp]
  016dc	f3 a5		 rep movsd

; 1328 : 
; 1329 : 				main_vp = eo_vp;

  016de	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  016e3	be 00 00 00 00	 mov	 esi, OFFSET ?eo_vp@@3UVIEWPOINT@@A ; eo_vp
  016e8	bf 00 00 00 00	 mov	 edi, OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  016ed	f3 a5		 rep movsd

; 1330 : 
; 1331 : 				get_local_entity_target_point (target, &target_point);

  016ef	8d 85 f4 fe ff
	ff		 lea	 eax, DWORD PTR _target_point$[ebp]
  016f5	50		 push	 eax
  016f6	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR _target$[ebp]
  016fc	51		 push	 ecx
  016fd	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1332 : 
; 1333 : 				visibility = get_position_3d_screen_coordinates (&target_point, &i, &j);

  01702	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _j$[ebp]
  01708	50		 push	 eax
  01709	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _i$[ebp]
  0170f	51		 push	 ecx
  01710	8d 95 f4 fe ff
	ff		 lea	 edx, DWORD PTR _target_point$[ebp]
  01716	52		 push	 edx
  01717	e8 00 00 00 00	 call	 ?get_position_3d_screen_coordinates@@YG?AW4OBJECT_3D_VISIBILITY@@PAUVEC3D@@PAM1@Z ; get_position_3d_screen_coordinates
  0171c	89 85 c0 fe ff
	ff		 mov	 DWORD PTR _visibility$[ebp], eax

; 1334 : 
; 1335 : 				if ((visibility == OBJECT_3D_COMPLETELY_VISIBLE) || (visibility == OBJECT_3D_PARTIALLY_VISIBLE))

  01722	83 bd c0 fe ff
	ff 01		 cmp	 DWORD PTR _visibility$[ebp], 1
  01729	74 0d		 je	 SHORT $LN32@draw_2d_eo
  0172b	83 bd c0 fe ff
	ff 02		 cmp	 DWORD PTR _visibility$[ebp], 2
  01732	0f 85 6f 04 00
	00		 jne	 $LN31@draw_2d_eo
$LN32@draw_2d_eo:

; 1336 : 				{
; 1337 : 					i -= i_translate_3d;

  01738	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _i$[ebp]
  01740	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?i_translate_3d@@3MA
  01748	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _i$[ebp], xmm0

; 1338 : 					j -= j_translate_3d;

  01750	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _j$[ebp]
  01758	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?j_translate_3d@@3MA
  01760	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _j$[ebp], xmm0

; 1339 : 
; 1340 : 					i *= i_scale_3d;

  01768	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _i$[ebp]
  01770	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?i_scale_3d@@3MA
  01778	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _i$[ebp], xmm0

; 1341 : 					j *= j_scale_3d;

  01780	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _j$[ebp]
  01788	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?j_scale_3d@@3MA
  01790	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _j$[ebp], xmm0

; 1342 : 
; 1343 : 					get_2d_world_position (i, j, &x, &y);

  01798	8d 85 0c ff ff
	ff		 lea	 eax, DWORD PTR _y$[ebp]
  0179e	50		 push	 eax
  0179f	8d 8d 10 ff ff
	ff		 lea	 ecx, DWORD PTR _x$[ebp]
  017a5	51		 push	 ecx
  017a6	51		 push	 ecx
  017a7	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _j$[ebp]
  017af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  017b4	51		 push	 ecx
  017b5	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _i$[ebp]
  017bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  017c2	e8 00 00 00 00	 call	 ?get_2d_world_position@@YGXMMPAM0@Z ; get_2d_world_position

; 1344 : 
; 1345 : 					draw_2d_line (x - 0.20, y + 0.20, x - 0.15, y + 0.20, MFD_EO_TEXT_COLOUR);

  017c7	b8 04 00 00 00	 mov	 eax, 4
  017cc	6b c8 05	 imul	 ecx, eax, 5
  017cf	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  017d5	52		 push	 edx
  017d6	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  017de	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  017e6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  017ea	51		 push	 ecx
  017eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  017f0	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  017f8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  01800	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01804	51		 push	 ecx
  01805	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0180a	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01812	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0181a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0181e	51		 push	 ecx
  0181f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01824	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0182c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01834	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01838	51		 push	 ecx
  01839	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0183e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1346 : 					draw_2d_line (x + 0.20, y + 0.20, x + 0.15, y + 0.20, MFD_EO_TEXT_COLOUR);

  01843	b8 04 00 00 00	 mov	 eax, 4
  01848	6b c8 05	 imul	 ecx, eax, 5
  0184b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01851	52		 push	 edx
  01852	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0185a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01862	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01866	51		 push	 ecx
  01867	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0186c	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01874	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0187c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01880	51		 push	 ecx
  01881	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01886	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0188e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01896	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0189a	51		 push	 ecx
  0189b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018a0	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  018a8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  018b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  018b4	51		 push	 ecx
  018b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018ba	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1347 : 					draw_2d_line (x - 0.20, y - 0.20, x - 0.15, y - 0.20, MFD_EO_TEXT_COLOUR);

  018bf	b8 04 00 00 00	 mov	 eax, 4
  018c4	6b c8 05	 imul	 ecx, eax, 5
  018c7	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  018cd	52		 push	 edx
  018ce	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  018d6	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  018de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  018e2	51		 push	 ecx
  018e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018e8	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  018f0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  018f8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  018fc	51		 push	 ecx
  018fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01902	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0190a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01912	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01916	51		 push	 ecx
  01917	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0191c	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01924	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0192c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01930	51		 push	 ecx
  01931	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01936	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1348 : 					draw_2d_line (x + 0.20, y - 0.20, x + 0.15, y - 0.20, MFD_EO_TEXT_COLOUR);

  0193b	b8 04 00 00 00	 mov	 eax, 4
  01940	6b c8 05	 imul	 ecx, eax, 5
  01943	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01949	52		 push	 edx
  0194a	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01952	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0195a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0195e	51		 push	 ecx
  0195f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01964	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0196c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  01974	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01978	51		 push	 ecx
  01979	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0197e	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01986	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0198e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01992	51		 push	 ecx
  01993	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01998	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  019a0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  019a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  019ac	51		 push	 ecx
  019ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019b2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1349 : 					draw_2d_line (x - 0.20, y + 0.20, x - 0.20, y + 0.15, MFD_EO_TEXT_COLOUR);

  019b7	b8 04 00 00 00	 mov	 eax, 4
  019bc	6b c8 05	 imul	 ecx, eax, 5
  019bf	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  019c5	52		 push	 edx
  019c6	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  019ce	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  019d6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  019da	51		 push	 ecx
  019db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019e0	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  019e8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  019f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  019f4	51		 push	 ecx
  019f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019fa	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01a02	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01a0a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01a0e	51		 push	 ecx
  01a0f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a14	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01a1c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01a24	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01a28	51		 push	 ecx
  01a29	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a2e	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1350 : 					draw_2d_line (x - 0.20, y - 0.20, x - 0.20, y - 0.15, MFD_EO_TEXT_COLOUR);

  01a33	b8 04 00 00 00	 mov	 eax, 4
  01a38	6b c8 05	 imul	 ecx, eax, 5
  01a3b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01a41	52		 push	 edx
  01a42	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01a4a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  01a52	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01a56	51		 push	 ecx
  01a57	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a5c	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01a64	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01a6c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01a70	51		 push	 ecx
  01a71	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a76	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01a7e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01a86	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01a8a	51		 push	 ecx
  01a8b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a90	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01a98	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01aa0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01aa4	51		 push	 ecx
  01aa5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01aaa	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1351 : 					draw_2d_line (x + 0.20, y + 0.20, x + 0.20, y + 0.15, MFD_EO_TEXT_COLOUR);

  01aaf	b8 04 00 00 00	 mov	 eax, 4
  01ab4	6b c8 05	 imul	 ecx, eax, 5
  01ab7	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01abd	52		 push	 edx
  01abe	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01ac6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc3333333333333
  01ace	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01ad2	51		 push	 ecx
  01ad3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ad8	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01ae0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01ae8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01aec	51		 push	 ecx
  01aed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01af2	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01afa	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01b02	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b06	51		 push	 ecx
  01b07	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b0c	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01b14	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01b1c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b20	51		 push	 ecx
  01b21	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b26	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 1352 : 					draw_2d_line (x + 0.20, y - 0.20, x + 0.20, y - 0.15, MFD_EO_TEXT_COLOUR);

  01b2b	b8 04 00 00 00	 mov	 eax, 4
  01b30	6b c8 05	 imul	 ecx, eax, 5
  01b33	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  01b39	52		 push	 edx
  01b3a	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01b42	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc3333333333333
  01b4a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b4e	51		 push	 ecx
  01b4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b54	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01b5c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01b64	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b68	51		 push	 ecx
  01b69	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b6e	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  01b76	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01b7e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b82	51		 push	 ecx
  01b83	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01b88	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  01b90	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  01b98	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b9c	51		 push	 ecx
  01b9d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ba2	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line
$LN31@draw_2d_eo:

; 1353 : 				}
; 1354 : 
; 1355 : 				main_vp = tmp;

  01ba7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  01bac	8d b5 c4 fe ff
	ff		 lea	 esi, DWORD PTR _tmp$[ebp]
  01bb2	bf 00 00 00 00	 mov	 edi, OFFSET ?main_vp@@3UVIEWPOINT@@A ; main_vp
  01bb7	f3 a5		 rep movsd
$LN29@draw_2d_eo:
$LN1@draw_2d_eo:

; 1356 : 			}
; 1357 : 		}
; 1358 : 	}
; 1359 : }

  01bb9	5f		 pop	 edi
  01bba	5e		 pop	 esi
  01bbb	5b		 pop	 ebx
  01bbc	8b e5		 mov	 esp, ebp
  01bbe	5d		 pop	 ebp
  01bbf	c2 10 00	 ret	 16			; 00000010H
?draw_2d_eo_display@@YGXPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@HH@Z ENDP ; draw_2d_eo_display
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z
_TEXT	SEGMENT
tv138 = -96						; size = 4
tv78 = -96						; size = 4
tv150 = -92						; size = 4
tv130 = -92						; size = 4
tv70 = -92						; size = 4
_tint$ = -24						; size = 4
_day_segment_type$ = -20				; size = 4
_weather_mode$ = -16					; size = 4
_position$ = -12					; size = 4
_noise_level$ = -8					; size = 4
_light_level$ = -4					; size = 4
_system$ = 8						; size = 4
_x_min$ = 12						; size = 4
_y_min$ = 16						; size = 4
_x_max$ = 20						; size = 4
_y_max$ = 24						; size = 4
_xfov$ = 28						; size = 4
_yfov$ = 32						; size = 4
?set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z PROC ; set_eo_view_params, COMDAT

; 874  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 875  : 	display_3d_light_levels
; 876  : 		light_level;
; 877  : 
; 878  : 	display_3d_noise_levels
; 879  : 		noise_level;
; 880  : 
; 881  : 	vec3d
; 882  : 		*position;
; 883  : 
; 884  : 	weathermodes
; 885  : 		weather_mode;
; 886  : 
; 887  : 	day_segment_types
; 888  : 		day_segment_type;
; 889  : 
; 890  : 	display_3d_tints
; 891  : 		tint;
; 892  : 
; 893  : 	position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	74 0c		 je	 SHORT $LN12@set_eo_vie
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	89 4d a4	 mov	 DWORD PTR tv70[ebp], ecx
  0001c	eb 21		 jmp	 SHORT $LN13@set_eo_vie
$LN12@set_eo_vie:
  0001e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  00024	83 c2 13	 add	 edx, 19			; 00000013H
  00027	52		 push	 edx
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00038	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@set_eo_vie:
  0003f	b9 01 00 00 00	 mov	 ecx, 1
  00044	85 c9		 test	 ecx, ecx
  00046	74 09		 je	 SHORT $LN14@set_eo_vie
  00048	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv78[ebp], 8
  0004f	eb 21		 jmp	 SHORT $LN15@set_eo_vie
$LN14@set_eo_vie:
  00051	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  00057	83 c2 13	 add	 edx, 19			; 00000013H
  0005a	52		 push	 edx
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@set_eo_vie:
  00072	6a 08		 push	 8
  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0007a	51		 push	 ecx
  0007b	6b 55 a4 60	 imul	 edx, DWORD PTR tv70[ebp], 96
  0007f	8b 45 a0	 mov	 eax, DWORD PTR tv78[ebp]
  00082	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00089	ff d1		 call	 ecx
  0008b	89 45 f4	 mov	 DWORD PTR _position$[ebp], eax

; 894  : 
; 895  : 	weather_mode = get_simple_session_weather_at_point (position);

  0008e	8b 45 f4	 mov	 eax, DWORD PTR _position$[ebp]
  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 ?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ; get_simple_session_weather_at_point
  00097	89 45 f0	 mov	 DWORD PTR _weather_mode$[ebp], eax

; 896  : 	ASSERT ((weather_mode > WEATHERMODE_INVALID) && (weather_mode < WEATHERMODE_LAST));

  0009a	83 7d f0 00	 cmp	 DWORD PTR _weather_mode$[ebp], 0
  0009e	7e 06		 jle	 SHORT $LN5@set_eo_vie
  000a0	83 7d f0 05	 cmp	 DWORD PTR _weather_mode$[ebp], 5
  000a4	7c 18		 jl	 SHORT $LN4@set_eo_vie
$LN5@set_eo_vie:
  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  000ab	83 c0 16	 add	 eax, 22			; 00000016H
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@DPCFPJPF@?$CIweather_mode?5?$DO?5WEATHERMODE_INV@
  000b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_eo_vie:

; 897  : 
; 898  : 	day_segment_type = (day_segment_types) get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE);

  000be	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  000c5	74 0c		 je	 SHORT $LN16@set_eo_vie
  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ce	89 4d a4	 mov	 DWORD PTR tv130[ebp], ecx
  000d1	eb 21		 jmp	 SHORT $LN17@set_eo_vie
$LN16@set_eo_vie:
  000d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  000d9	83 c2 18	 add	 edx, 24			; 00000018H
  000dc	52		 push	 edx
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ed	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN17@set_eo_vie:
  000f4	b9 01 00 00 00	 mov	 ecx, 1
  000f9	85 c9		 test	 ecx, ecx
  000fb	74 09		 je	 SHORT $LN18@set_eo_vie
  000fd	c7 45 a0 27 00
	00 00		 mov	 DWORD PTR tv138[ebp], 39 ; 00000027H
  00104	eb 21		 jmp	 SHORT $LN19@set_eo_vie
$LN18@set_eo_vie:
  00106	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  0010c	83 c2 18	 add	 edx, 24			; 00000018H
  0010f	52		 push	 edx
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00115	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00120	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN19@set_eo_vie:
  00127	6a 27		 push	 39			; 00000027H
  00129	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0012f	51		 push	 ecx
  00130	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv130[ebp], 1116
  00137	8b 45 a0	 mov	 eax, DWORD PTR tv138[ebp]
  0013a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00141	ff d1		 call	 ecx
  00143	89 45 ec	 mov	 DWORD PTR _day_segment_type$[ebp], eax

; 899  : 	ASSERT ((day_segment_type >= 0) && (day_segment_type < NUM_DAY_SEGMENT_TYPES));

  00146	83 7d ec 00	 cmp	 DWORD PTR _day_segment_type$[ebp], 0
  0014a	7c 06		 jl	 SHORT $LN7@set_eo_vie
  0014c	83 7d ec 04	 cmp	 DWORD PTR _day_segment_type$[ebp], 4
  00150	7c 18		 jl	 SHORT $LN6@set_eo_vie
$LN7@set_eo_vie:
  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z@4JA
  00157	83 c0 19	 add	 eax, 25			; 00000019H
  0015a	50		 push	 eax
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_0EG@LLJGIOPM@?$CIday_segment_type?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIday@
  00165	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@set_eo_vie:

; 900  : 
; 901  : 	switch (system)

  0016a	8b 45 08	 mov	 eax, DWORD PTR _system$[ebp]
  0016d	89 45 a4	 mov	 DWORD PTR tv150[ebp], eax
  00170	83 7d a4 03	 cmp	 DWORD PTR tv150[ebp], 3
  00174	74 08		 je	 SHORT $LN8@set_eo_vie
  00176	83 7d a4 06	 cmp	 DWORD PTR tv150[ebp], 6
  0017a	74 31		 je	 SHORT $LN9@set_eo_vie
  0017c	eb 5e		 jmp	 SHORT $LN10@set_eo_vie
$LN8@set_eo_vie:

; 902  : 	{
; 903  : 		case TARGET_ACQUISITION_SYSTEM_FLIR:
; 904  : 		{
; 905  : 			light_level = flir_light_levels[weather_mode][day_segment_type];

  0017e	8b 45 f0	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  00181	c1 e0 04	 shl	 eax, 4
  00184	8b 4d ec	 mov	 ecx, DWORD PTR _day_segment_type$[ebp]
  00187	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?flir_light_levels@@3PAY03W4DISPLAY_3D_LIGHT_LEVELS@@A[eax+ecx*4]
  0018e	89 55 fc	 mov	 DWORD PTR _light_level$[ebp], edx

; 906  : 			noise_level = flir_noise_levels[weather_mode][day_segment_type];

  00191	8b 45 f0	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  00194	c1 e0 04	 shl	 eax, 4
  00197	8b 4d ec	 mov	 ecx, DWORD PTR _day_segment_type$[ebp]
  0019a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?flir_noise_levels@@3PAY03W4DISPLAY_3D_NOISE_LEVELS@@A[eax+ecx*4]
  001a1	89 55 f8	 mov	 DWORD PTR _noise_level$[ebp], edx

; 907  : 			tint = DISPLAY_3D_TINT_AMBER;

  001a4	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _tint$[ebp], 1

; 908  : 
; 909  : 			break;

  001ab	eb 40		 jmp	 SHORT $LN2@set_eo_vie
$LN9@set_eo_vie:

; 910  : 		}
; 911  : 		case TARGET_ACQUISITION_SYSTEM_LLLTV:
; 912  : 		{
; 913  : 			light_level = llltv_light_levels[weather_mode][day_segment_type];

  001ad	8b 45 f0	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  001b0	c1 e0 04	 shl	 eax, 4
  001b3	8b 4d ec	 mov	 ecx, DWORD PTR _day_segment_type$[ebp]
  001b6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?llltv_light_levels@@3PAY03W4DISPLAY_3D_LIGHT_LEVELS@@A[eax+ecx*4]
  001bd	89 55 fc	 mov	 DWORD PTR _light_level$[ebp], edx

; 914  : 			noise_level = llltv_noise_levels[weather_mode][day_segment_type];

  001c0	8b 45 f0	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  001c3	c1 e0 04	 shl	 eax, 4
  001c6	8b 4d ec	 mov	 ecx, DWORD PTR _day_segment_type$[ebp]
  001c9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?llltv_noise_levels@@3PAY03W4DISPLAY_3D_NOISE_LEVELS@@A[eax+ecx*4]
  001d0	89 55 f8	 mov	 DWORD PTR _noise_level$[ebp], edx

; 915  : 			tint = DISPLAY_3D_TINT_AMBER_VISUAL;

  001d3	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR _tint$[ebp], 2

; 916  : 
; 917  : 			break;

  001da	eb 11		 jmp	 SHORT $LN2@set_eo_vie
$LN10@set_eo_vie:

; 918  : 		}
; 919  : 		default:
; 920  : 		{
; 921  : 			debug_fatal ("Invalid target acquisition system = %d", system);

  001dc	8b 45 08	 mov	 eax, DWORD PTR _system$[ebp]
  001df	50		 push	 eax
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@DDKDNBNH@Invalid?5target?5acquisition?5syst@
  001e5	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001ea	83 c4 08	 add	 esp, 8
$LN2@set_eo_vie:

; 922  : 
; 923  : 			break;
; 924  : 		}
; 925  : 	}
; 926  : 
; 927  : 	set_main_3d_params (tint, light_level, noise_level, x_min, y_min, x_max, y_max, xfov, yfov);

  001ed	51		 push	 ecx
  001ee	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _yfov$[ebp]
  001f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f8	51		 push	 ecx
  001f9	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _xfov$[ebp]
  001fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00203	f3 0f 2a 45 18	 cvtsi2ss xmm0, DWORD PTR _y_max$[ebp]
  00208	51		 push	 ecx
  00209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020e	f3 0f 2a 45 14	 cvtsi2ss xmm0, DWORD PTR _x_max$[ebp]
  00213	51		 push	 ecx
  00214	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00219	f3 0f 2a 45 10	 cvtsi2ss xmm0, DWORD PTR _y_min$[ebp]
  0021e	51		 push	 ecx
  0021f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00224	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _x_min$[ebp]
  00229	51		 push	 ecx
  0022a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022f	8b 45 f8	 mov	 eax, DWORD PTR _noise_level$[ebp]
  00232	50		 push	 eax
  00233	8b 4d fc	 mov	 ecx, DWORD PTR _light_level$[ebp]
  00236	51		 push	 ecx
  00237	8b 55 e8	 mov	 edx, DWORD PTR _tint$[ebp]
  0023a	52		 push	 edx
  0023b	e8 00 00 00 00	 call	 ?set_main_3d_params@@YGXW4DISPLAY_3D_TINTS@@W4DISPLAY_3D_LIGHT_LEVELS@@W4DISPLAY_3D_NOISE_LEVELS@@MMMMMM@Z ; set_main_3d_params

; 928  : }

  00240	5f		 pop	 edi
  00241	5e		 pop	 esi
  00242	5b		 pop	 ebx
  00243	8b e5		 mov	 esp, ebp
  00245	5d		 pop	 ebp
  00246	c2 1c 00	 ret	 28			; 0000001cH
?set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z ENDP ; set_eo_view_params
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?get_eo_sensor_fov@@YGMPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_fov$ = -4						; size = 4
_eo$ = 8						; size = 4
_system$ = 12						; size = 4
?get_eo_sensor_fov@@YGMPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@@Z PROC ; get_eo_sensor_fov, COMDAT

; 838  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 839  : 	// TODO: change fov numbers
; 840  : 	float fov = 9.0;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41100000
  00011	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0

; 841  : 
; 842  : 	switch (eo->field_of_view)

  00016	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00019	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001b	89 4d b8	 mov	 DWORD PTR tv65[ebp], ecx
  0001e	83 7d b8 02	 cmp	 DWORD PTR tv65[ebp], 2
  00022	74 08		 je	 SHORT $LN4@get_eo_sen
  00024	83 7d b8 03	 cmp	 DWORD PTR tv65[ebp], 3
  00028	74 26		 je	 SHORT $LN7@get_eo_sen
  0002a	eb 48		 jmp	 SHORT $LN10@get_eo_sen
$LN4@get_eo_sen:

; 843  : 	{
; 844  : 		case EO_FOV_MEDIUM:
; 845  : 		{
; 846  : 			if (system == TARGET_ACQUISITION_SYSTEM_FLIR)

  0002c	83 7d 0c 03	 cmp	 DWORD PTR _system$[ebp], 3
  00030	75 0f		 jne	 SHORT $LN5@get_eo_sen

; 847  : 				fov = 4.0 * ONE_OVER_SQRT2;

  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@403504e6
  0003a	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0

; 848  : 			else  // DTV or DVO

  0003f	eb 0d		 jmp	 SHORT $LN6@get_eo_sen
$LN5@get_eo_sen:

; 849  : 				fov = 2.0 * ONE_OVER_SQRT2;

  00041	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fb504e6
  00049	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0
$LN6@get_eo_sen:

; 850  : 
; 851  : 			break;

  0004e	eb 37		 jmp	 SHORT $LN2@get_eo_sen
$LN7@get_eo_sen:

; 852  : 		}
; 853  : 		case EO_FOV_WIDE:
; 854  : 		{
; 855  : 			if (system == TARGET_ACQUISITION_SYSTEM_FLIR)

  00050	83 7d 0c 03	 cmp	 DWORD PTR _system$[ebp], 3
  00054	75 0f		 jne	 SHORT $LN8@get_eo_sen

; 856  : 				fov = 15.0 * ONE_OVER_SQRT2;

  00056	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4129b498
  0005e	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0

; 857  : 			else  // DVO

  00063	eb 0d		 jmp	 SHORT $LN9@get_eo_sen
$LN8@get_eo_sen:

; 858  : 				fov = 9.0 * ONE_OVER_SQRT2;

  00065	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40cba583
  0006d	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0
$LN9@get_eo_sen:

; 859  : 
; 860  : 			break;

  00072	eb 13		 jmp	 SHORT $LN2@get_eo_sen
$LN10@get_eo_sen:

; 861  : 		}
; 862  : 		default:
; 863  : 		{
; 864  : 			debug_fatal ("Invalid field of view = %d", eo->field_of_view);

  00074	8b 45 08	 mov	 eax, DWORD PTR _eo$[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	51		 push	 ecx
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MNOBOANG@Invalid?5field?5of?5view?5?$DN?5?$CFd@
  0007f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00084	83 c4 08	 add	 esp, 8
$LN2@get_eo_sen:

; 865  : 
; 866  : 			break;
; 867  : 		}
; 868  : 	}
; 869  : 
; 870  : 	return fov;

  00087	d9 45 fc	 fld	 DWORD PTR _fov$[ebp]

; 871  : }

  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5b		 pop	 ebx
  0008d	8b e5		 mov	 esp, ebp
  0008f	5d		 pop	 ebp
  00090	c2 08 00	 ret	 8
?get_eo_sensor_fov@@YGMPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@@Z ENDP ; get_eo_sensor_fov
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_map_display@@YGXXZ
_TEXT	SEGMENT
tv282 = -132						; size = 4
tv261 = -132						; size = 4
tv217 = -132						; size = 4
tv182 = -132						; size = 4
tv78 = -132						; size = 4
tv274 = -128						; size = 4
tv253 = -128						; size = 4
tv209 = -128						; size = 4
tv174 = -128						; size = 4
tv70 = -128						; size = 4
_waypoint_colour$1 = -60				; size = 4
_wp2_rel_position$2 = -56				; size = 12
_wp1_rel_position$3 = -44				; size = 12
_wp2$4 = -32						; size = 4
_wp1$5 = -28						; size = 4
_grid_colour$6 = -24					; size = 4
_source_position$ = -20					; size = 4
_source$ = -16						; size = 4
_scale$ = -12						; size = 4
_v$ = -8						; size = 4
_u$ = -4						; size = 4
?draw_map_display@@YGXXZ PROC				; draw_map_display, COMDAT

; 570  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 571  : 	float
; 572  : 		u,
; 573  : 		v,
; 574  : 		scale;
; 575  : 
; 576  : 	entity
; 577  : 		*source;
; 578  : 
; 579  : 	vec3d
; 580  : 		*source_position;
; 581  : 
; 582  : 	source = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 f0	 mov	 DWORD PTR _source$[ebp], eax

; 583  : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00014	83 7d f0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00018	74 0a		 je	 SHORT $LN8@draw_map_d
  0001a	8b 45 f0	 mov	 eax, DWORD PTR _source$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 4d 80	 mov	 DWORD PTR tv70[ebp], ecx
  00022	eb 21		 jmp	 SHORT $LN9@draw_map_d
$LN8@draw_map_d:
  00024	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  0002a	83 c2 0d	 add	 edx, 13			; 0000000dH
  0002d	52		 push	 edx
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003e	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@draw_map_d:
  00045	b9 01 00 00 00	 mov	 ecx, 1
  0004a	85 c9		 test	 ecx, ecx
  0004c	74 0c		 je	 SHORT $LN10@draw_map_d
  0004e	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  00058	eb 24		 jmp	 SHORT $LN11@draw_map_d
$LN10@draw_map_d:
  0005a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  00060	83 c2 0d	 add	 edx, 13			; 0000000dH
  00063	52		 push	 edx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00074	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN11@draw_map_d:
  0007e	6a 08		 push	 8
  00080	8b 4d f0	 mov	 ecx, DWORD PTR _source$[ebp]
  00083	51		 push	 ecx
  00084	6b 55 80 60	 imul	 edx, DWORD PTR tv70[ebp], 96
  00088	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0008e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00095	ff d1		 call	 ecx
  00097	89 45 ec	 mov	 DWORD PTR _source_position$[ebp], eax

; 584  : 
; 585  : 	map_centre_position = *source_position;

  0009a	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?map_centre_position@@3UVEC3D@@A, ecx
  000a5	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000a8	89 15 04 00 00
	00		 mov	 DWORD PTR ?map_centre_position@@3UVEC3D@@A+4, edx
  000ae	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000b1	a3 08 00 00 00	 mov	 DWORD PTR ?map_centre_position@@3UVEC3D@@A+8, eax

; 586  : 
; 587  : 	scale = RADIUS / map_range;

  000b6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?map_range@@3MA
  000be	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff5d3d193333333
  000c6	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000ca	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000ce	f3 0f 11 45 f4	 movss	 DWORD PTR _scale$[ebp], xmm0

; 588  : 
; 589  : 	//
; 590  : 	// match ground radar origin
; 591  : 	//
; 592  : 
; 593  : 	get_2d_float_screen_coordinates (0.0f, 0.0f, &u, &v);

  000d3	8d 45 f8	 lea	 eax, DWORD PTR _v$[ebp]
  000d6	50		 push	 eax
  000d7	8d 4d fc	 lea	 ecx, DWORD PTR _u$[ebp]
  000da	51		 push	 ecx
  000db	51		 push	 ecx
  000dc	0f 57 c0	 xorps	 xmm0, xmm0
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	51		 push	 ecx
  000e5	0f 57 c0	 xorps	 xmm0, xmm0
  000e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ed	e8 00 00 00 00	 call	 ?get_2d_float_screen_coordinates@@YGXMMPAM0@Z ; get_2d_float_screen_coordinates

; 594  : 
; 595  : 	u -= mfd_viewport_x_min;

  000f2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _u$[ebp]
  000f7	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?mfd_viewport_x_min@@3MA
  000ff	f3 0f 11 45 fc	 movss	 DWORD PTR _u$[ebp], xmm0

; 596  : 	v -= mfd_viewport_y_min;

  00104	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v$[ebp]
  00109	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?mfd_viewport_y_min@@3MA
  00111	f3 0f 11 45 f8	 movss	 DWORD PTR _v$[ebp], xmm0

; 597  : 
; 598  : 	////////////////////////////////////////
; 599  : 	//
; 600  : 	//VJ 030423 TSD RENDER MOD
; 601  : 	//
; 602  : 	////////////////////////////////////////
; 603  : 
; 604  : 	{
; 605  : 		draw_tsd_terrain_map (mfd_env, 0.0f, map_range, scale, source_position, 0.0f, TRUE);

  00116	6a 01		 push	 1
  00118	51		 push	 ecx
  00119	0f 57 c0	 xorps	 xmm0, xmm0
  0011c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00121	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00124	50		 push	 eax
  00125	51		 push	 ecx
  00126	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _scale$[ebp]
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	51		 push	 ecx
  00131	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?map_range@@3MA
  00139	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013e	51		 push	 ecx
  0013f	0f 57 c0	 xorps	 xmm0, xmm0
  00142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ?draw_tsd_terrain_map@@YGXPAUENV_2D@@MMMPAUVEC3D@@MH@Z ; draw_tsd_terrain_map

; 606  : 		draw_tsd_contour_map (mfd_env, 0.0f, map_range, scale, source_position, 0.0f, TRUE, TRUE);

  00153	6a 01		 push	 1
  00155	6a 01		 push	 1
  00157	51		 push	 ecx
  00158	0f 57 c0	 xorps	 xmm0, xmm0
  0015b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00160	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00163	50		 push	 eax
  00164	51		 push	 ecx
  00165	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _scale$[ebp]
  0016a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016f	51		 push	 ecx
  00170	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?map_range@@3MA
  00178	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017d	51		 push	 ecx
  0017e	0f 57 c0	 xorps	 xmm0, xmm0
  00181	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00186	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0018c	51		 push	 ecx
  0018d	e8 00 00 00 00	 call	 ?draw_tsd_contour_map@@YGXPAUENV_2D@@MMMPAUVEC3D@@MHH@Z ; draw_tsd_contour_map

; 607  : 	}
; 608  : 
; 609  : 	// grid and towns
; 610  : 	{
; 611  : 		rgb_colour grid_colour;
; 612  : 
; 613  : 		set_rgb_colour(grid_colour, 96, 64, 0, 255);

  00192	c6 45 ea 60	 mov	 BYTE PTR _grid_colour$6[ebp+2], 96 ; 00000060H
  00196	c6 45 e9 40	 mov	 BYTE PTR _grid_colour$6[ebp+1], 64 ; 00000040H
  0019a	c6 45 e8 00	 mov	 BYTE PTR _grid_colour$6[ebp], 0
  0019e	c6 45 eb ff	 mov	 BYTE PTR _grid_colour$6[ebp+3], 255 ; 000000ffH

; 614  : 		draw_tsd_map_grid(source_position, scale, grid_colour);

  001a2	8b 45 e8	 mov	 eax, DWORD PTR _grid_colour$6[ebp]
  001a5	50		 push	 eax
  001a6	51		 push	 ecx
  001a7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _scale$[ebp]
  001ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b1	8b 4d ec	 mov	 ecx, DWORD PTR _source_position$[ebp]
  001b4	51		 push	 ecx
  001b5	e8 00 00 00 00	 call	 ?draw_tsd_map_grid@@YGXPAUVEC3D@@MUREAL_COLOUR@@@Z ; draw_tsd_map_grid

; 615  : 
; 616  : 		set_mono_font_colour (MFD_COLOUR1);

  001ba	b8 04 00 00 00	 mov	 eax, 4
  001bf	6b c8 00	 imul	 ecx, eax, 0
  001c2	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  001c8	52		 push	 edx
  001c9	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 617  : 		set_mono_font_type (MONO_FONT_TYPE_6X10);

  001ce	6a 04		 push	 4
  001d0	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 618  : 
; 619  : 		draw_tsd_map_towns(source_position, scale);

  001d5	51		 push	 ecx
  001d6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _scale$[ebp]
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 ?draw_tsd_map_towns@@YGXPAUVEC3D@@M@Z ; draw_tsd_map_towns

; 620  : 	}
; 621  : 
; 622  : 	////////////////////////////////////////
; 623  : 	//
; 624  : 	// waypoint route
; 625  : 	//
; 626  : 	////////////////////////////////////////
; 627  : 
; 628  : 	{
; 629  : 		entity
; 630  : 			*wp1,
; 631  : 			*wp2;
; 632  : 
; 633  : 		vec3d
; 634  : 			wp1_rel_position,
; 635  : 			wp2_rel_position;
; 636  : 
; 637  : 		rgb_colour waypoint_colour = MFD_COLOUR_RED;

  001e9	b8 04 00 00 00	 mov	 eax, 4
  001ee	6b c8 0f	 imul	 ecx, eax, 15
  001f1	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  001f7	89 55 c4	 mov	 DWORD PTR _waypoint_colour$1[ebp], edx

; 638  : 
; 639  : 		wp1 = get_local_entity_first_waypoint (source);

  001fa	8b 45 f0	 mov	 eax, DWORD PTR _source$[ebp]
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ?get_local_entity_first_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_first_waypoint
  00203	89 45 e4	 mov	 DWORD PTR _wp1$5[ebp], eax

; 640  : 
; 641  : 		if (wp1)

  00206	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  0020a	0f 84 42 04 00
	00		 je	 $LN6@draw_map_d

; 642  : 		{
; 643  : 			set_2d_viewport_origin (mfd_env, u, v);

  00210	51		 push	 ecx
  00211	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _v$[ebp]
  00216	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021b	51		 push	 ecx
  0021c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _u$[ebp]
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0022b	50		 push	 eax
  0022c	e8 00 00 00 00	 call	 ?set_2d_viewport_origin@@YGXPAUENV_2D@@MM@Z ; set_2d_viewport_origin

; 644  : 
; 645  : 			//
; 646  : 			// waypoint route
; 647  : 			//
; 648  : 
; 649  : 			get_waypoint_display_position (source, wp1, &wp1_rel_position);

  00231	8d 45 d4	 lea	 eax, DWORD PTR _wp1_rel_position$3[ebp]
  00234	50		 push	 eax
  00235	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  00238	51		 push	 ecx
  00239	8b 55 f0	 mov	 edx, DWORD PTR _source$[ebp]
  0023c	52		 push	 edx
  0023d	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 650  : 
; 651  : 			wp1_rel_position.x = (wp1_rel_position.x - source_position->x) * scale;

  00242	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00245	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp]
  0024a	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0024e	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00253	f3 0f 11 45 d4	 movss	 DWORD PTR _wp1_rel_position$3[ebp], xmm0

; 652  : 			wp1_rel_position.z = (wp1_rel_position.z - source_position->z) * scale;

  00258	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  0025b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp+8]
  00260	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00265	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  0026a	f3 0f 11 45 dc	 movss	 DWORD PTR _wp1_rel_position$3[ebp+8], xmm0

; 653  : 
; 654  : 			wp2 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  0026f	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  00273	74 0a		 je	 SHORT $LN12@draw_map_d
  00275	8b 45 e4	 mov	 eax, DWORD PTR _wp1$5[ebp]
  00278	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027a	89 4d 80	 mov	 DWORD PTR tv174[ebp], ecx
  0027d	eb 21		 jmp	 SHORT $LN13@draw_map_d
$LN12@draw_map_d:
  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  00285	83 c2 54	 add	 edx, 84			; 00000054H
  00288	52		 push	 edx
  00289	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00299	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN13@draw_map_d:
  002a0	b9 01 00 00 00	 mov	 ecx, 1
  002a5	85 c9		 test	 ecx, ecx
  002a7	74 0c		 je	 SHORT $LN14@draw_map_d
  002a9	c7 85 7c ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv182[ebp], 44 ; 0000002cH
  002b3	eb 24		 jmp	 SHORT $LN15@draw_map_d
$LN14@draw_map_d:
  002b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  002bb	83 c2 54	 add	 edx, 84			; 00000054H
  002be	52		 push	 edx
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cf	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN15@draw_map_d:
  002d9	6a 2c		 push	 44			; 0000002cH
  002db	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  002de	51		 push	 ecx
  002df	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv174[ebp], 180
  002e6	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv182[ebp]
  002ec	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002f3	ff d1		 call	 ecx
  002f5	89 45 e0	 mov	 DWORD PTR _wp2$4[ebp], eax
$LN2@draw_map_d:

; 655  : 
; 656  : 			while (wp2)

  002f8	83 7d e0 00	 cmp	 DWORD PTR _wp2$4[ebp], 0
  002fc	0f 84 19 01 00
	00		 je	 $LN3@draw_map_d

; 657  : 			{
; 658  : 				get_waypoint_display_position (source, wp2, &wp2_rel_position);

  00302	8d 45 c8	 lea	 eax, DWORD PTR _wp2_rel_position$2[ebp]
  00305	50		 push	 eax
  00306	8b 4d e0	 mov	 ecx, DWORD PTR _wp2$4[ebp]
  00309	51		 push	 ecx
  0030a	8b 55 f0	 mov	 edx, DWORD PTR _source$[ebp]
  0030d	52		 push	 edx
  0030e	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 659  : 
; 660  : 				wp2_rel_position.x = (wp2_rel_position.x - source_position->x) * scale;

  00313	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00316	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wp2_rel_position$2[ebp]
  0031b	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0031f	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00324	f3 0f 11 45 c8	 movss	 DWORD PTR _wp2_rel_position$2[ebp], xmm0

; 661  : 				wp2_rel_position.z = (wp2_rel_position.z - source_position->z) * scale;

  00329	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  0032c	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wp2_rel_position$2[ebp+8]
  00331	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00336	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  0033b	f3 0f 11 45 d0	 movss	 DWORD PTR _wp2_rel_position$2[ebp+8], xmm0

; 662  : 
; 663  : 				draw_2d_half_thick_line (wp1_rel_position.x, wp1_rel_position.z, wp2_rel_position.x, wp2_rel_position.z, waypoint_colour);  // 2

  00340	8b 45 c4	 mov	 eax, DWORD PTR _waypoint_colour$1[ebp]
  00343	50		 push	 eax
  00344	51		 push	 ecx
  00345	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wp2_rel_position$2[ebp+8]
  0034a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034f	51		 push	 ecx
  00350	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wp2_rel_position$2[ebp]
  00355	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035a	51		 push	 ecx
  0035b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp+8]
  00360	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00365	51		 push	 ecx
  00366	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp]
  0036b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00370	e8 00 00 00 00	 call	 ?draw_2d_half_thick_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_half_thick_line

; 664  : 
; 665  : 				wp1 = wp2;

  00375	8b 45 e0	 mov	 eax, DWORD PTR _wp2$4[ebp]
  00378	89 45 e4	 mov	 DWORD PTR _wp1$5[ebp], eax

; 666  : 
; 667  : 				wp1_rel_position = wp2_rel_position;

  0037b	8b 45 c8	 mov	 eax, DWORD PTR _wp2_rel_position$2[ebp]
  0037e	89 45 d4	 mov	 DWORD PTR _wp1_rel_position$3[ebp], eax
  00381	8b 4d cc	 mov	 ecx, DWORD PTR _wp2_rel_position$2[ebp+4]
  00384	89 4d d8	 mov	 DWORD PTR _wp1_rel_position$3[ebp+4], ecx
  00387	8b 55 d0	 mov	 edx, DWORD PTR _wp2_rel_position$2[ebp+8]
  0038a	89 55 dc	 mov	 DWORD PTR _wp1_rel_position$3[ebp+8], edx

; 668  : 
; 669  : 				wp2 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  0038d	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  00391	74 0a		 je	 SHORT $LN16@draw_map_d
  00393	8b 45 e4	 mov	 eax, DWORD PTR _wp1$5[ebp]
  00396	8b 08		 mov	 ecx, DWORD PTR [eax]
  00398	89 4d 80	 mov	 DWORD PTR tv209[ebp], ecx
  0039b	eb 21		 jmp	 SHORT $LN17@draw_map_d
$LN16@draw_map_d:
  0039d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  003a3	83 c2 63	 add	 edx, 99			; 00000063H
  003a6	52		 push	 edx
  003a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b1	50		 push	 eax
  003b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b7	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN17@draw_map_d:
  003be	b9 01 00 00 00	 mov	 ecx, 1
  003c3	85 c9		 test	 ecx, ecx
  003c5	74 0c		 je	 SHORT $LN18@draw_map_d
  003c7	c7 85 7c ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv217[ebp], 44 ; 0000002cH
  003d1	eb 24		 jmp	 SHORT $LN19@draw_map_d
$LN18@draw_map_d:
  003d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  003d9	83 c2 63	 add	 edx, 99			; 00000063H
  003dc	52		 push	 edx
  003dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ed	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv217[ebp], 0
$LN19@draw_map_d:
  003f7	6a 2c		 push	 44			; 0000002cH
  003f9	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  003fc	51		 push	 ecx
  003fd	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv209[ebp], 180
  00404	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv217[ebp]
  0040a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00411	ff d1		 call	 ecx
  00413	89 45 e0	 mov	 DWORD PTR _wp2$4[ebp], eax

; 670  : 			}

  00416	e9 dd fe ff ff	 jmp	 $LN2@draw_map_d
$LN3@draw_map_d:

; 671  : 
; 672  : 			//
; 673  : 			// waypoint markers
; 674  : 			//
; 675  : 
; 676  : 			set_mono_font_colour (MFD_COLOUR_RED);

  0041b	b8 04 00 00 00	 mov	 eax, 4
  00420	6b c8 0f	 imul	 ecx, eax, 15
  00423	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00429	52		 push	 edx
  0042a	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 677  : 
; 678  : 			set_mono_font_type (MONO_FONT_TYPE_10X16);

  0042f	6a 07		 push	 7
  00431	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 679  : 
; 680  : 			wp1 = get_local_entity_first_waypoint (source);

  00436	8b 45 f0	 mov	 eax, DWORD PTR _source$[ebp]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ?get_local_entity_first_waypoint@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_first_waypoint
  0043f	89 45 e4	 mov	 DWORD PTR _wp1$5[ebp], eax
$LN4@draw_map_d:

; 681  : 
; 682  : 			while (wp1)

  00442	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  00446	0f 84 c3 01 00
	00		 je	 $LN5@draw_map_d

; 683  : 			{
; 684  : 				get_waypoint_display_position (source, wp1, &wp1_rel_position);

  0044c	8d 45 d4	 lea	 eax, DWORD PTR _wp1_rel_position$3[ebp]
  0044f	50		 push	 eax
  00450	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  00453	51		 push	 ecx
  00454	8b 55 f0	 mov	 edx, DWORD PTR _source$[ebp]
  00457	52		 push	 edx
  00458	e8 00 00 00 00	 call	 ?get_waypoint_display_position@@YGXPAUENTITY@@0PAUVEC3D@@@Z ; get_waypoint_display_position

; 685  : 
; 686  : 				wp1_rel_position.x = (wp1_rel_position.x - source_position->x) * scale;

  0045d	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00460	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp]
  00465	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00469	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  0046e	f3 0f 11 45 d4	 movss	 DWORD PTR _wp1_rel_position$3[ebp], xmm0

; 687  : 				wp1_rel_position.z = (wp1_rel_position.z - source_position->z) * scale;

  00473	8b 45 ec	 mov	 eax, DWORD PTR _source_position$[ebp]
  00476	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp+8]
  0047b	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00480	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00485	f3 0f 11 45 dc	 movss	 DWORD PTR _wp1_rel_position$3[ebp+8], xmm0

; 688  : 
; 689  : 				draw_2d_circle(wp1_rel_position.x, wp1_rel_position.z, 0.008, waypoint_colour);

  0048a	8b 45 c4	 mov	 eax, DWORD PTR _waypoint_colour$1[ebp]
  0048d	50		 push	 eax
  0048e	51		 push	 ecx
  0048f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3c03126f
  00497	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049c	51		 push	 ecx
  0049d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp+8]
  004a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a7	51		 push	 ecx
  004a8	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp]
  004ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b2	e8 00 00 00 00	 call	 ?draw_2d_circle@@YGXMMMUREAL_COLOUR@@@Z ; draw_2d_circle

; 690  : 
; 691  : 				set_2d_mono_font_position (wp1_rel_position.x, wp1_rel_position.z);

  004b7	51		 push	 ecx
  004b8	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp+8]
  004bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c2	51		 push	 ecx
  004c3	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _wp1_rel_position$3[ebp]
  004c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004cd	e8 00 00 00 00	 call	 ?set_2d_mono_font_position@@YGXMM@Z ; set_2d_mono_font_position

; 692  : 				set_mono_font_rel_position (-4.0, 8.0);

  004d2	51		 push	 ecx
  004d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41000000
  004db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e0	51		 push	 ecx
  004e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0800000
  004e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ee	e8 00 00 00 00	 call	 ?set_mono_font_rel_position@@YGXMM@Z ; set_mono_font_rel_position

; 693  : 
; 694  : 				print_mono_font_char (get_local_entity_char_value (wp1, CHAR_TYPE_TAG));

  004f3	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  004f7	74 0a		 je	 SHORT $LN20@draw_map_d
  004f9	8b 45 e4	 mov	 eax, DWORD PTR _wp1$5[ebp]
  004fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fe	89 4d 80	 mov	 DWORD PTR tv253[ebp], ecx
  00501	eb 21		 jmp	 SHORT $LN21@draw_map_d
$LN20@draw_map_d:
  00503	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  00509	83 c2 7c	 add	 edx, 124		; 0000007cH
  0050c	52		 push	 edx
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv253[ebp], 0
$LN21@draw_map_d:
  00524	b9 01 00 00 00	 mov	 ecx, 1
  00529	85 c9		 test	 ecx, ecx
  0052b	74 0c		 je	 SHORT $LN22@draw_map_d
  0052d	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv261[ebp], 0
  00537	eb 24		 jmp	 SHORT $LN23@draw_map_d
$LN22@draw_map_d:
  00539	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  0053f	83 c2 7c	 add	 edx, 124		; 0000007cH
  00542	52		 push	 edx
  00543	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00548	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  0054d	50		 push	 eax
  0054e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00553	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv261[ebp], 0
$LN23@draw_map_d:
  0055d	6a 00		 push	 0
  0055f	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  00562	51		 push	 ecx
  00563	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv261[ebp]
  00569	c1 e2 02	 shl	 edx, 2
  0056c	8b 45 80	 mov	 eax, DWORD PTR tv253[ebp]
  0056f	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  00576	ff d1		 call	 ecx
  00578	0f b6 d0	 movzx	 edx, al
  0057b	52		 push	 edx
  0057c	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 695  : 
; 696  : 				wp1 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  00581	83 7d e4 00	 cmp	 DWORD PTR _wp1$5[ebp], 0
  00585	74 0a		 je	 SHORT $LN24@draw_map_d
  00587	8b 45 e4	 mov	 eax, DWORD PTR _wp1$5[ebp]
  0058a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0058c	89 4d 80	 mov	 DWORD PTR tv274[ebp], ecx
  0058f	eb 21		 jmp	 SHORT $LN25@draw_map_d
$LN24@draw_map_d:
  00591	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  00597	83 c2 7e	 add	 edx, 126		; 0000007eH
  0059a	52		 push	 edx
  0059b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  005a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005a5	50		 push	 eax
  005a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ab	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv274[ebp], 0
$LN25@draw_map_d:
  005b2	b9 01 00 00 00	 mov	 ecx, 1
  005b7	85 c9		 test	 ecx, ecx
  005b9	74 0c		 je	 SHORT $LN26@draw_map_d
  005bb	c7 85 7c ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv282[ebp], 44 ; 0000002cH
  005c5	eb 24		 jmp	 SHORT $LN27@draw_map_d
$LN26@draw_map_d:
  005c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_map_display@@YGXXZ@4JA
  005cd	83 c2 7e	 add	 edx, 126		; 0000007eH
  005d0	52		 push	 edx
  005d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005db	50		 push	 eax
  005dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e1	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv282[ebp], 0
$LN27@draw_map_d:
  005eb	6a 2c		 push	 44			; 0000002cH
  005ed	8b 4d e4	 mov	 ecx, DWORD PTR _wp1$5[ebp]
  005f0	51		 push	 ecx
  005f1	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv274[ebp], 180
  005f8	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv282[ebp]
  005fe	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00605	ff d1		 call	 ecx
  00607	89 45 e4	 mov	 DWORD PTR _wp1$5[ebp], eax

; 697  : 			}

  0060a	e9 33 fe ff ff	 jmp	 $LN4@draw_map_d
$LN5@draw_map_d:

; 698  : 
; 699  : 			set_2d_viewport (mfd_env, mfd_viewport_x_min, mfd_viewport_y_min, mfd_viewport_x_max, mfd_viewport_y_max);

  0060f	51		 push	 ecx
  00610	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_max@@3MA
  00618	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061d	51		 push	 ecx
  0061e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_max@@3MA
  00626	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062b	51		 push	 ecx
  0062c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_min@@3MA
  00634	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00639	51		 push	 ecx
  0063a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_min@@3MA
  00642	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00647	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0064c	50		 push	 eax
  0064d	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport
$LN6@draw_map_d:

; 700  : 		}
; 701  : 	}
; 702  : 
; 703  : 	////////////////////////////////////////
; 704  : 	//
; 705  : 	// aircraft datum symbol
; 706  : 	//
; 707  : 	////////////////////////////////////////
; 708  : 
; 709  : 	// last pixel must be transparent because it's repeated when texture doesn't fill entire polygon
; 710  : 	draw_line(0, 0, 0, mfd_viewport_size - 1, clear_mfd_colour);

  00652	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A ; clear_mfd_colour
  00657	50		 push	 eax
  00658	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00660	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00668	51		 push	 ecx
  00669	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0066e	51		 push	 ecx
  0066f	0f 57 c0	 xorps	 xmm0, xmm0
  00672	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00677	51		 push	 ecx
  00678	0f 57 c0	 xorps	 xmm0, xmm0
  0067b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00680	51		 push	 ecx
  00681	0f 57 c0	 xorps	 xmm0, xmm0
  00684	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00689	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 711  : 	draw_line(0, 0, mfd_viewport_size - 1, 0, clear_mfd_colour);

  0068e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A ; clear_mfd_colour
  00693	50		 push	 eax
  00694	51		 push	 ecx
  00695	0f 57 c0	 xorps	 xmm0, xmm0
  00698	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  006a5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  006ad	51		 push	 ecx
  006ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b3	51		 push	 ecx
  006b4	0f 57 c0	 xorps	 xmm0, xmm0
  006b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bc	51		 push	 ecx
  006bd	0f 57 c0	 xorps	 xmm0, xmm0
  006c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c5	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 712  : 	draw_line(0, mfd_viewport_size - 1, mfd_viewport_size - 1, mfd_viewport_size - 1, clear_mfd_colour);

  006ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A ; clear_mfd_colour
  006cf	50		 push	 eax
  006d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  006d8	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  006e0	51		 push	 ecx
  006e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006e6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  006ee	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  006f6	51		 push	 ecx
  006f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00704	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0070c	51		 push	 ecx
  0070d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00712	51		 push	 ecx
  00713	0f 57 c0	 xorps	 xmm0, xmm0
  00716	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0071b	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 713  : 	draw_line(mfd_viewport_size - 1, 0, mfd_viewport_size - 1, mfd_viewport_size - 1, clear_mfd_colour);

  00720	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A ; clear_mfd_colour
  00725	50		 push	 eax
  00726	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  0072e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00736	51		 push	 ecx
  00737	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0073c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00744	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0074c	51		 push	 ecx
  0074d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00752	51		 push	 ecx
  00753	0f 57 c0	 xorps	 xmm0, xmm0
  00756	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0075b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00763	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0076b	51		 push	 ecx
  0076c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00771	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 714  : 
; 715  : 	map_up_to_date = TRUE;

  00776	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?map_up_to_date@@3HA, 1

; 716  : }

  00780	5f		 pop	 edi
  00781	5e		 pop	 esi
  00782	5b		 pop	 ebx
  00783	8b e5		 mov	 esp, ebp
  00785	5d		 pop	 ebp
  00786	c3		 ret	 0
?draw_map_display@@YGXXZ ENDP				; draw_map_display
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_layout_grid@@YGXXZ
_TEXT	SEGMENT
_y$ = -8						; size = 4
_x$ = -4						; size = 4
?draw_layout_grid@@YGXXZ PROC				; draw_layout_grid, COMDAT

; 535  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 536  : 	float
; 537  : 		x,
; 538  : 		y;
; 539  : 
; 540  : 	if (display_mfd_layout_grid)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?display_mfd_layout_grid@@3HA, 0 ; display_mfd_layout_grid
  00010	0f 84 ee 00 00
	00		 je	 $LN6@draw_layou

; 541  : 	{
; 542  : 		for (x = -1.0; x <= 1.0; x += 0.1)

  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0001e	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
  00023	eb 16		 jmp	 SHORT $LN4@draw_layou
$LN2@draw_layou:
  00025	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  0002a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0
$LN4@draw_layou:
  0003b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x$[ebp]
  00040	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00048	66 0f 2f c8	 comisd	 xmm1, xmm0
  0004c	72 3f		 jb	 SHORT $LN3@draw_layou

; 543  : 		{
; 544  : 			draw_2d_line (x, -1.0, x, 1.0, sys_col_red);

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0005d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00062	51		 push	 ecx
  00063	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	51		 push	 ecx
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	51		 push	 ecx
  0007c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 545  : 		}

  0008b	eb 98		 jmp	 SHORT $LN2@draw_layou
$LN3@draw_layou:

; 546  : 
; 547  : 		for (y = -1.0; y <= 1.0; y += 0.1)

  0008d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00095	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
  0009a	eb 16		 jmp	 SHORT $LN7@draw_layou
$LN5@draw_layou:
  0009c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000a1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  000a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ad	f3 0f 11 45 f8	 movss	 DWORD PTR _y$[ebp], xmm0
$LN7@draw_layou:
  000b2	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  000b7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c3	72 3f		 jb	 SHORT $LN6@draw_layou

; 548  : 		{
; 549  : 			draw_2d_line (-1.0, y, 1.0, y, sys_col_red);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  000ca	50		 push	 eax
  000cb	51		 push	 ecx
  000cc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	51		 push	 ecx
  000d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	51		 push	 ecx
  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ef	51		 push	 ecx
  000f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	e8 00 00 00 00	 call	 ?draw_2d_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_2d_line

; 550  : 		}

  00102	eb 98		 jmp	 SHORT $LN5@draw_layou
$LN6@draw_layou:

; 551  : 	}
; 552  : }

  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	8b e5		 mov	 esp, ebp
  00109	5d		 pop	 ebp
  0010a	c3		 ret	 0
?draw_layout_grid@@YGXXZ ENDP				; draw_layout_grid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?initialize_colours@@YGXXZ
_TEXT	SEGMENT
?initialize_colours@@YGXXZ PROC				; initialize_colours, COMDAT

; 418  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 419  : 	//VJ 030423 TSd render mod
; 420  : 	set_rgb_colour (MFD_COLOUR1,              40, 40,  40, 255);

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	c6 81 02 00 00
	00 28		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 40 ; 00000028H
  00018	b8 04 00 00 00	 mov	 eax, 4
  0001d	6b c8 00	 imul	 ecx, eax, 0
  00020	c6 81 01 00 00
	00 28		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 40 ; 00000028H
  00027	b8 04 00 00 00	 mov	 eax, 4
  0002c	6b c8 00	 imul	 ecx, eax, 0
  0002f	c6 81 00 00 00
	00 28		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 40 ; 00000028H
  00036	b8 04 00 00 00	 mov	 eax, 4
  0003b	6b c8 00	 imul	 ecx, eax, 0
  0003e	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 421  : 	set_rgb_colour (MFD_COLOUR2,              0, 200,   0, 255);

  00045	b8 04 00 00 00	 mov	 eax, 4
  0004a	c1 e0 00	 shl	 eax, 0
  0004d	c6 80 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+2], 0
  00054	b8 04 00 00 00	 mov	 eax, 4
  00059	c1 e0 00	 shl	 eax, 0
  0005c	c6 80 01 00 00
	00 c8		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+1], 200 ; 000000c8H
  00063	b8 04 00 00 00	 mov	 eax, 4
  00068	c1 e0 00	 shl	 eax, 0
  0006b	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax], 0
  00072	b8 04 00 00 00	 mov	 eax, 4
  00077	c1 e0 00	 shl	 eax, 0
  0007a	c6 80 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+3], 255 ; 000000ffH

; 422  : 	set_rgb_colour (MFD_COLOUR3,              0, 176,   0, 255);

  00081	b8 04 00 00 00	 mov	 eax, 4
  00086	d1 e0		 shl	 eax, 1
  00088	c6 80 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+2], 0
  0008f	b8 04 00 00 00	 mov	 eax, 4
  00094	d1 e0		 shl	 eax, 1
  00096	c6 80 01 00 00
	00 b0		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+1], 176 ; 000000b0H
  0009d	b8 04 00 00 00	 mov	 eax, 4
  000a2	d1 e0		 shl	 eax, 1
  000a4	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax], 0
  000ab	b8 04 00 00 00	 mov	 eax, 4
  000b0	d1 e0		 shl	 eax, 1
  000b2	c6 80 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+3], 255 ; 000000ffH

; 423  : 	set_rgb_colour (MFD_COLOUR4,              0, 151,   0, 255);

  000b9	b8 04 00 00 00	 mov	 eax, 4
  000be	6b c8 03	 imul	 ecx, eax, 3
  000c1	c6 81 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 0
  000c8	b8 04 00 00 00	 mov	 eax, 4
  000cd	6b c8 03	 imul	 ecx, eax, 3
  000d0	c6 81 01 00 00
	00 97		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 151 ; 00000097H
  000d7	b8 04 00 00 00	 mov	 eax, 4
  000dc	6b c8 03	 imul	 ecx, eax, 3
  000df	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 0
  000e6	b8 04 00 00 00	 mov	 eax, 4
  000eb	6b c8 03	 imul	 ecx, eax, 3
  000ee	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 424  : 	set_rgb_colour (MFD_COLOUR5,              0, 128,   0, 255);

  000f5	b8 04 00 00 00	 mov	 eax, 4
  000fa	c1 e0 02	 shl	 eax, 2
  000fd	c6 80 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+2], 0
  00104	b8 04 00 00 00	 mov	 eax, 4
  00109	c1 e0 02	 shl	 eax, 2
  0010c	c6 80 01 00 00
	00 80		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+1], 128 ; 00000080H
  00113	b8 04 00 00 00	 mov	 eax, 4
  00118	c1 e0 02	 shl	 eax, 2
  0011b	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax], 0
  00122	b8 04 00 00 00	 mov	 eax, 4
  00127	c1 e0 02	 shl	 eax, 2
  0012a	c6 80 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+3], 255 ; 000000ffH

; 425  : 	set_rgb_colour (MFD_EO_TEXT_COLOUR,      220,200,  56, 255);

  00131	b8 04 00 00 00	 mov	 eax, 4
  00136	6b c8 05	 imul	 ecx, eax, 5
  00139	c6 81 02 00 00
	00 dc		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 220 ; 000000dcH
  00140	b8 04 00 00 00	 mov	 eax, 4
  00145	6b c8 05	 imul	 ecx, eax, 5
  00148	c6 81 01 00 00
	00 c8		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 200 ; 000000c8H
  0014f	b8 04 00 00 00	 mov	 eax, 4
  00154	6b c8 05	 imul	 ecx, eax, 5
  00157	c6 81 00 00 00
	00 38		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 56 ; 00000038H
  0015e	b8 04 00 00 00	 mov	 eax, 4
  00163	6b c8 05	 imul	 ecx, eax, 5
  00166	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 426  : 	set_rgb_colour (MFD_CONTOUR_COLOUR,     110,  80,  60, 255);

  0016d	b8 04 00 00 00	 mov	 eax, 4
  00172	6b c8 06	 imul	 ecx, eax, 6
  00175	c6 81 02 00 00
	00 6e		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 110 ; 0000006eH
  0017c	b8 04 00 00 00	 mov	 eax, 4
  00181	6b c8 06	 imul	 ecx, eax, 6
  00184	c6 81 01 00 00
	00 50		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 80 ; 00000050H
  0018b	b8 04 00 00 00	 mov	 eax, 4
  00190	6b c8 06	 imul	 ecx, eax, 6
  00193	c6 81 00 00 00
	00 3c		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 60 ; 0000003cH
  0019a	b8 04 00 00 00	 mov	 eax, 4
  0019f	6b c8 06	 imul	 ecx, eax, 6
  001a2	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 427  : 	set_rgb_colour (MFD_RIVER_COLOUR,       150, 160, 225, 255);

  001a9	b8 04 00 00 00	 mov	 eax, 4
  001ae	6b c8 07	 imul	 ecx, eax, 7
  001b1	c6 81 02 00 00
	00 96		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 150 ; 00000096H
  001b8	b8 04 00 00 00	 mov	 eax, 4
  001bd	6b c8 07	 imul	 ecx, eax, 7
  001c0	c6 81 01 00 00
	00 a0		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 160 ; 000000a0H
  001c7	b8 04 00 00 00	 mov	 eax, 4
  001cc	6b c8 07	 imul	 ecx, eax, 7
  001cf	c6 81 00 00 00
	00 e1		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 225 ; 000000e1H
  001d6	b8 04 00 00 00	 mov	 eax, 4
  001db	6b c8 07	 imul	 ecx, eax, 7
  001de	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 428  : 	set_rgb_colour (MFD_ROAD_COLOUR,         50,  35,  25, 255);

  001e5	b8 04 00 00 00	 mov	 eax, 4
  001ea	c1 e0 03	 shl	 eax, 3
  001ed	c6 80 02 00 00
	00 32		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+2], 50 ; 00000032H
  001f4	b8 04 00 00 00	 mov	 eax, 4
  001f9	c1 e0 03	 shl	 eax, 3
  001fc	c6 80 01 00 00
	00 23		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+1], 35 ; 00000023H
  00203	b8 04 00 00 00	 mov	 eax, 4
  00208	c1 e0 03	 shl	 eax, 3
  0020b	c6 80 00 00 00
	00 19		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax], 25 ; 00000019H
  00212	b8 04 00 00 00	 mov	 eax, 4
  00217	c1 e0 03	 shl	 eax, 3
  0021a	c6 80 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+3], 255 ; 000000ffH

; 429  : 	set_rgb_colour (MFD_BACKGROUND_COLOUR,  220, 220, 200, 255);

  00221	b8 04 00 00 00	 mov	 eax, 4
  00226	6b c8 09	 imul	 ecx, eax, 9
  00229	c6 81 02 00 00
	00 dc		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 220 ; 000000dcH
  00230	b8 04 00 00 00	 mov	 eax, 4
  00235	6b c8 09	 imul	 ecx, eax, 9
  00238	c6 81 01 00 00
	00 dc		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 220 ; 000000dcH
  0023f	b8 04 00 00 00	 mov	 eax, 4
  00244	6b c8 09	 imul	 ecx, eax, 9
  00247	c6 81 00 00 00
	00 c8		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 200 ; 000000c8H
  0024e	b8 04 00 00 00	 mov	 eax, 4
  00253	6b c8 09	 imul	 ecx, eax, 9
  00256	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 430  : 	set_rgb_colour (MFD_CLEAR_COLOUR,         0,   0,   0,   0);

  0025d	b8 04 00 00 00	 mov	 eax, 4
  00262	6b c8 13	 imul	 ecx, eax, 19
  00265	c6 81 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 0
  0026c	b8 04 00 00 00	 mov	 eax, 4
  00271	6b c8 13	 imul	 ecx, eax, 19
  00274	c6 81 01 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 0
  0027b	b8 04 00 00 00	 mov	 eax, 4
  00280	6b c8 13	 imul	 ecx, eax, 19
  00283	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 0
  0028a	b8 04 00 00 00	 mov	 eax, 4
  0028f	6b c8 13	 imul	 ecx, eax, 19
  00292	c6 81 03 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 0

; 431  : 
; 432  : 	set_rgb_colour (MFD_COLOUR_BLUE,          60, 160, 255,  255);

  00299	b8 04 00 00 00	 mov	 eax, 4
  0029e	6b c8 0c	 imul	 ecx, eax, 12
  002a1	c6 81 02 00 00
	00 3c		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 60 ; 0000003cH
  002a8	b8 04 00 00 00	 mov	 eax, 4
  002ad	6b c8 0c	 imul	 ecx, eax, 12
  002b0	c6 81 01 00 00
	00 a0		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 160 ; 000000a0H
  002b7	b8 04 00 00 00	 mov	 eax, 4
  002bc	6b c8 0c	 imul	 ecx, eax, 12
  002bf	c6 81 00 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 255 ; 000000ffH
  002c6	b8 04 00 00 00	 mov	 eax, 4
  002cb	6b c8 0c	 imul	 ecx, eax, 12
  002ce	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 433  : 	set_rgb_colour (MFD_COLOUR_DARK_BLUE,	   0,   0,  96,  255);

  002d5	b8 04 00 00 00	 mov	 eax, 4
  002da	6b c8 11	 imul	 ecx, eax, 17
  002dd	c6 81 02 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 0
  002e4	b8 04 00 00 00	 mov	 eax, 4
  002e9	6b c8 11	 imul	 ecx, eax, 17
  002ec	c6 81 01 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 0
  002f3	b8 04 00 00 00	 mov	 eax, 4
  002f8	6b c8 11	 imul	 ecx, eax, 17
  002fb	c6 81 00 00 00
	00 60		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 96 ; 00000060H
  00302	b8 04 00 00 00	 mov	 eax, 4
  00307	6b c8 11	 imul	 ecx, eax, 17
  0030a	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 434  : 	set_rgb_colour (MFD_COLOUR_YELLOW,       230, 230,  40,  255);

  00311	b8 04 00 00 00	 mov	 eax, 4
  00316	6b c8 0d	 imul	 ecx, eax, 13
  00319	c6 81 02 00 00
	00 e6		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 230 ; 000000e6H
  00320	b8 04 00 00 00	 mov	 eax, 4
  00325	6b c8 0d	 imul	 ecx, eax, 13
  00328	c6 81 01 00 00
	00 e6		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 230 ; 000000e6H
  0032f	b8 04 00 00 00	 mov	 eax, 4
  00334	6b c8 0d	 imul	 ecx, eax, 13
  00337	c6 81 00 00 00
	00 28		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 40 ; 00000028H
  0033e	b8 04 00 00 00	 mov	 eax, 4
  00343	6b c8 0d	 imul	 ecx, eax, 13
  00346	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 435  : 	set_rgb_colour (MFD_COLOUR_DARK_YELLOW,  165, 165,  30,  255);

  0034d	b8 04 00 00 00	 mov	 eax, 4
  00352	6b c8 0e	 imul	 ecx, eax, 14
  00355	c6 81 02 00 00
	00 a5		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 165 ; 000000a5H
  0035c	b8 04 00 00 00	 mov	 eax, 4
  00361	6b c8 0e	 imul	 ecx, eax, 14
  00364	c6 81 01 00 00
	00 a5		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 165 ; 000000a5H
  0036b	b8 04 00 00 00	 mov	 eax, 4
  00370	6b c8 0e	 imul	 ecx, eax, 14
  00373	c6 81 00 00 00
	00 1e		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 30 ; 0000001eH
  0037a	b8 04 00 00 00	 mov	 eax, 4
  0037f	6b c8 0e	 imul	 ecx, eax, 14
  00382	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 436  : 	set_rgb_colour (MFD_COLOUR_RED,          230,  50,  20,  255);

  00389	b8 04 00 00 00	 mov	 eax, 4
  0038e	6b c8 0f	 imul	 ecx, eax, 15
  00391	c6 81 02 00 00
	00 e6		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 230 ; 000000e6H
  00398	b8 04 00 00 00	 mov	 eax, 4
  0039d	6b c8 0f	 imul	 ecx, eax, 15
  003a0	c6 81 01 00 00
	00 32		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 50 ; 00000032H
  003a7	b8 04 00 00 00	 mov	 eax, 4
  003ac	6b c8 0f	 imul	 ecx, eax, 15
  003af	c6 81 00 00 00
	00 14		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 20 ; 00000014H
  003b6	b8 04 00 00 00	 mov	 eax, 4
  003bb	6b c8 0f	 imul	 ecx, eax, 15
  003be	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 437  : 	set_rgb_colour (MFD_COLOUR_DARK_RED,	 148,  32,   0,  255);

  003c5	b8 04 00 00 00	 mov	 eax, 4
  003ca	6b c8 12	 imul	 ecx, eax, 18
  003cd	c6 81 02 00 00
	00 94		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+2], 148 ; 00000094H
  003d4	b8 04 00 00 00	 mov	 eax, 4
  003d9	6b c8 12	 imul	 ecx, eax, 18
  003dc	c6 81 01 00 00
	00 20		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+1], 32 ; 00000020H
  003e3	b8 04 00 00 00	 mov	 eax, 4
  003e8	6b c8 12	 imul	 ecx, eax, 18
  003eb	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx], 0
  003f2	b8 04 00 00 00	 mov	 eax, 4
  003f7	6b c8 12	 imul	 ecx, eax, 18
  003fa	c6 81 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx+3], 255 ; 000000ffH

; 438  : 	set_rgb_colour (MFD_COLOUR_CYAN,          60, 255, 230,  255);

  00401	b8 04 00 00 00	 mov	 eax, 4
  00406	c1 e0 04	 shl	 eax, 4
  00409	c6 80 02 00 00
	00 3c		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+2], 60 ; 0000003cH
  00410	b8 04 00 00 00	 mov	 eax, 4
  00415	c1 e0 04	 shl	 eax, 4
  00418	c6 80 01 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+1], 255 ; 000000ffH
  0041f	b8 04 00 00 00	 mov	 eax, 4
  00424	c1 e0 04	 shl	 eax, 4
  00427	c6 80 00 00 00
	00 e6		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax], 230 ; 000000e6H
  0042e	b8 04 00 00 00	 mov	 eax, 4
  00433	c1 e0 04	 shl	 eax, 4
  00436	c6 80 03 00 00
	00 ff		 mov	 BYTE PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax+3], 255 ; 000000ffH

; 439  : 
; 440  : 	set_rgb_colour (clear_mfd_colour, 220, 220, 200, 255);

  0043d	c6 05 02 00 00
	00 dc		 mov	 BYTE PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A+2, 220 ; 000000dcH
  00444	c6 05 01 00 00
	00 dc		 mov	 BYTE PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A+1, 220 ; 000000dcH
  0044b	c6 05 00 00 00
	00 c8		 mov	 BYTE PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A, 200 ; 000000c8H
  00452	c6 05 03 00 00
	00 ff		 mov	 BYTE PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A+3, 255 ; 000000ffH

; 441  : 
; 442  : 	Initialise_TSD_render_terrain();

  00459	e8 00 00 00 00	 call	 ?Initialise_TSD_render_terrain@@YGXXZ ; Initialise_TSD_render_terrain

; 443  : 	set_tsd_map_contour_colour(MFD_CONTOUR_COLOUR);

  0045e	b8 04 00 00 00	 mov	 eax, 4
  00463	6b c8 06	 imul	 ecx, eax, 6
  00466	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0046c	52		 push	 edx
  0046d	e8 00 00 00 00	 call	 ?set_tsd_map_contour_colour@@YGXUREAL_COLOUR@@@Z ; set_tsd_map_contour_colour

; 444  : 	set_tsd_map_river_colour(MFD_RIVER_COLOUR);

  00472	b8 04 00 00 00	 mov	 eax, 4
  00477	6b c8 07	 imul	 ecx, eax, 7
  0047a	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  00480	52		 push	 edx
  00481	e8 00 00 00 00	 call	 ?set_tsd_map_river_colour@@YGXUREAL_COLOUR@@@Z ; set_tsd_map_river_colour

; 445  : 	set_tsd_map_road_colour(MFD_ROAD_COLOUR);

  00486	b8 04 00 00 00	 mov	 eax, 4
  0048b	c1 e0 03	 shl	 eax, 3
  0048e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[eax]
  00494	51		 push	 ecx
  00495	e8 00 00 00 00	 call	 ?set_tsd_map_road_colour@@YGXUREAL_COLOUR@@@Z ; set_tsd_map_road_colour

; 446  : }

  0049a	5f		 pop	 edi
  0049b	5e		 pop	 esi
  0049c	5b		 pop	 ebx
  0049d	8b e5		 mov	 esp, ebp
  0049f	5d		 pop	 ebp
  004a0	c3		 ret	 0
?initialize_colours@@YGXXZ ENDP				; initialize_colours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?get_mi24_map_caret_position@@YGXPAM0@Z
_TEXT	SEGMENT
tv144 = -92						; size = 8
tv136 = -92						; size = 8
tv145 = -84						; size = 8
tv137 = -84						; size = 8
tv81 = -84						; size = 4
tv73 = -80						; size = 4
_nz$1 = -12						; size = 4
_nx$2 = -8						; size = 4
_position$3 = -4					; size = 4
_x$ = 8							; size = 4
_z$ = 12						; size = 4
?get_mi24_map_caret_position@@YGXPAM0@Z PROC		; get_mi24_map_caret_position, COMDAT

; 1498 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1499 : 	if (!hind_damage.navigation_computer)

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  0000e	c1 e8 09	 shr	 eax, 9
  00011	83 e0 01	 and	 eax, 1
  00014	0f 85 9e 01 00
	00		 jne	 $LN2@get_mi24_m

; 1500 : 	{
; 1501 : 		vec3d
; 1502 : 			*position;
; 1503 : 		float
; 1504 : 			nx,
; 1505 : 			nz;
; 1506 : 
; 1507 : 		position = get_local_entity_vec3d_ptr (get_gunship_entity(), VEC3D_TYPE_POSITION);

  0001a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00021	74 0c		 je	 SHORT $LN4@get_mi24_m
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	89 4d b0	 mov	 DWORD PTR tv73[ebp], ecx
  0002d	eb 21		 jmp	 SHORT $LN5@get_mi24_m
$LN4@get_mi24_m:
  0002f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_mi24_map_caret_position@@YGXPAM0@Z@4JA
  00035	83 c2 09	 add	 edx, 9
  00038	52		 push	 edx
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00049	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN5@get_mi24_m:
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	85 c9		 test	 ecx, ecx
  00057	74 09		 je	 SHORT $LN6@get_mi24_m
  00059	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv81[ebp], 8
  00060	eb 21		 jmp	 SHORT $LN7@get_mi24_m
$LN6@get_mi24_m:
  00062	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_mi24_map_caret_position@@YGXPAM0@Z@4JA
  00068	83 c2 09	 add	 edx, 9
  0006b	52		 push	 edx
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN7@get_mi24_m:
  00083	6a 08		 push	 8
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008b	51		 push	 ecx
  0008c	6b 55 b0 60	 imul	 edx, DWORD PTR tv73[ebp], 96
  00090	8b 45 ac	 mov	 eax, DWORD PTR tv81[ebp]
  00093	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0009a	ff d1		 call	 ecx
  0009c	89 45 fc	 mov	 DWORD PTR _position$3[ebp], eax

; 1508 : 
; 1509 : 		nx = (position->x - map_centre_position.x) * map_scale * 0.125,

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _position$3[ebp]
  000a2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000a6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?map_centre_position@@3UVEC3D@@A
  000ae	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?map_scale@@3MA
  000b6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000ba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc0000000000000
  000c2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c6	f3 0f 11 45 f8	 movss	 DWORD PTR _nx$2[ebp], xmm0
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR _position$3[ebp]
  000ce	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000d3	f3 0f 5c 05 08
	00 00 00	 subss	 xmm0, DWORD PTR ?map_centre_position@@3UVEC3D@@A+8
  000db	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?map_scale@@3MA
  000e3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000e7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fbd70a3d70a3d71
  000ef	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f3	f3 0f 11 45 f4	 movss	 DWORD PTR _nz$1[ebp], xmm0

; 1510 : 		nz = (position->z - map_centre_position.z) * map_scale * 0.115;
; 1511 : 
; 1512 : 		*x = bound(nx, -0.12, 0.12);

  000f8	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _nx$2[ebp]
  000fd	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfbeb851eb851eb8
  00105	66 0f 2f c8	 comisd	 xmm1, xmm0
  00109	76 0f		 jbe	 SHORT $LN10@get_mi24_m
  0010b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfbeb851eb851eb8
  00113	f2 0f 11 45 ac	 movsd	 QWORD PTR tv137[ebp], xmm0
  00118	eb 32		 jmp	 SHORT $LN11@get_mi24_m
$LN10@get_mi24_m:
  0011a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _nx$2[ebp]
  0011f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fbeb851eb851eb8
  00127	76 0f		 jbe	 SHORT $LN8@get_mi24_m
  00129	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fbeb851eb851eb8
  00131	f2 0f 11 45 a4	 movsd	 QWORD PTR tv136[ebp], xmm0
  00136	eb 0a		 jmp	 SHORT $LN9@get_mi24_m
$LN8@get_mi24_m:
  00138	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _nx$2[ebp]
  0013d	f2 0f 11 45 a4	 movsd	 QWORD PTR tv136[ebp], xmm0
$LN9@get_mi24_m:
  00142	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv136[ebp]
  00147	f2 0f 11 45 ac	 movsd	 QWORD PTR tv137[ebp], xmm0
$LN11@get_mi24_m:
  0014c	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv137[ebp]
  00151	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00154	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1513 : 		*z = bound(nz, -0.075, 0.065);

  00158	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _nz$1[ebp]
  0015d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfb3333333333333
  00165	66 0f 2f c8	 comisd	 xmm1, xmm0
  00169	76 0f		 jbe	 SHORT $LN14@get_mi24_m
  0016b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfb3333333333333
  00173	f2 0f 11 45 ac	 movsd	 QWORD PTR tv145[ebp], xmm0
  00178	eb 32		 jmp	 SHORT $LN15@get_mi24_m
$LN14@get_mi24_m:
  0017a	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _nz$1[ebp]
  0017f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb0a3d70a3d70a4
  00187	76 0f		 jbe	 SHORT $LN12@get_mi24_m
  00189	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb0a3d70a3d70a4
  00191	f2 0f 11 45 a4	 movsd	 QWORD PTR tv144[ebp], xmm0
  00196	eb 0a		 jmp	 SHORT $LN13@get_mi24_m
$LN12@get_mi24_m:
  00198	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _nz$1[ebp]
  0019d	f2 0f 11 45 a4	 movsd	 QWORD PTR tv144[ebp], xmm0
$LN13@get_mi24_m:
  001a2	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv144[ebp]
  001a7	f2 0f 11 45 ac	 movsd	 QWORD PTR tv145[ebp], xmm0
$LN15@get_mi24_m:
  001ac	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv145[ebp]
  001b1	8b 45 0c	 mov	 eax, DWORD PTR _z$[ebp]
  001b4	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN2@get_mi24_m:

; 1514 : 	}
; 1515 : }

  001b8	5f		 pop	 edi
  001b9	5e		 pop	 esi
  001ba	5b		 pop	 ebx
  001bb	8b e5		 mov	 esp, ebp
  001bd	5d		 pop	 ebp
  001be	c2 08 00	 ret	 8
?get_mi24_map_caret_position@@YGXPAM0@Z ENDP		; get_mi24_map_caret_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?hind_map_waypoints_changed@@YGXXZ
_TEXT	SEGMENT
?hind_map_waypoints_changed@@YGXXZ PROC			; hind_map_waypoints_changed, COMDAT

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 560  : 	map_up_to_date = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_up_to_date@@3HA, 0

; 561  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?hind_map_waypoints_changed@@YGXXZ ENDP			; hind_map_waypoints_changed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?mi24_map_active@@YGHXZ
_TEXT	SEGMENT
?mi24_map_active@@YGHXZ PROC				; mi24_map_active, COMDAT

; 409  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 410  : 	return map_active;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_active@@3HA

; 411  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?mi24_map_active@@YGHXZ ENDP				; mi24_map_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?toggle_mi24_map@@YGXXZ
_TEXT	SEGMENT
tv65 = -68						; size = 4
?toggle_mi24_map@@YGXXZ PROC				; toggle_mi24_map, COMDAT

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 405  : 	map_active = !map_active;

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_active@@3HA, 0
  00010	75 09		 jne	 SHORT $LN3@toggle_mi2
  00012	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv65[ebp], 1
  00019	eb 07		 jmp	 SHORT $LN4@toggle_mi2
$LN3@toggle_mi2:
  0001b	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv65[ebp], 0
$LN4@toggle_mi2:
  00022	8b 45 bc	 mov	 eax, DWORD PTR tv65[ebp]
  00025	a3 00 00 00 00	 mov	 DWORD PTR ?map_active@@3HA, eax

; 406  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?toggle_mi24_map@@YGXXZ ENDP				; toggle_mi24_map
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_hind_virtual_cockpit_ort_symbology@@YGXXZ
_TEXT	SEGMENT
_symbology_colour$ = -24				; size = 4
_background_colour$ = -20				; size = 4
_mfd_screen_y_max$ = -16				; size = 4
_mfd_screen_x_max$ = -12				; size = 4
_mfd_screen_y_min$ = -8					; size = 4
_mfd_screen_x_min$ = -4					; size = 4
?draw_hind_virtual_cockpit_ort_symbology@@YGXXZ PROC	; draw_hind_virtual_cockpit_ort_symbology, COMDAT

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1421 : 	int
; 1422 : 		mfd_screen_x_min, mfd_screen_y_min, mfd_screen_x_max, mfd_screen_y_max;
; 1423 : 
; 1424 : 	rgb_colour
; 1425 : 		background_colour,
; 1426 : 		symbology_colour;
; 1427 : 
; 1428 : 	set_3d_active_environment (main_3d_env);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 1429 : 
; 1430 : 	//
; 1431 : 	// set up MFD 2D environment
; 1432 : 	//
; 1433 : 
; 1434 : 	set_2d_active_environment (mfd_env);

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?set_2d_active_environment@@YGXPAUENV_2D@@@Z ; set_2d_active_environment

; 1435 : 	set_2d_window (mfd_env, MFD_WINDOW_X_MIN, MFD_WINDOW_Y_MIN, MFD_WINDOW_X_MAX, MFD_WINDOW_Y_MAX);

  0001f	51		 push	 ecx
  00020	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00028	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002d	51		 push	 ecx
  0002e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00036	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003b	51		 push	 ecx
  0003c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	51		 push	 ecx
  0004a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00052	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 1436 : 
; 1437 : 	mfd_viewport_size = EO_VIEWPORT_SIZE;

  00062	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  0006a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_size@@3MA, xmm0

; 1438 : 
; 1439 : 	mfd_viewport_x_org = EO_VIEWPORT_SIZE * 0.5;

  00072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43000000
  0007a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_org@@3MA, xmm0

; 1440 : 	mfd_viewport_y_org = EO_VIEWPORT_SIZE * 0.5;

  00082	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43000000
  0008a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_org@@3MA, xmm0

; 1441 : 
; 1442 : 	mfd_viewport_x_min = 0.0;

  00092	0f 57 c0	 xorps	 xmm0, xmm0
  00095	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_min@@3MA, xmm0

; 1443 : 	mfd_viewport_y_min = 0.0;

  0009d	0f 57 c0	 xorps	 xmm0, xmm0
  000a0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_min@@3MA, xmm0

; 1444 : 
; 1445 : 	mfd_viewport_x_max = EO_VIEWPORT_SIZE - 0.001;

  000a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437fffbe
  000b0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_max@@3MA, xmm0

; 1446 : 	mfd_viewport_y_max = EO_VIEWPORT_SIZE - 0.001;

  000b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437fffbe
  000c0	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_max@@3MA, xmm0

; 1447 : 
; 1448 : 	set_2d_viewport (mfd_env, mfd_viewport_x_min, mfd_viewport_y_min, mfd_viewport_x_max, mfd_viewport_y_max);

  000c8	51		 push	 ecx
  000c9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_max@@3MA
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	51		 push	 ecx
  000d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_max@@3MA
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	51		 push	 ecx
  000e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_min@@3MA
  000ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f2	51		 push	 ecx
  000f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_min@@3MA
  000fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  00105	50		 push	 eax
  00106	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 1449 : 
; 1450 : 	mfd_screen_x_min = full_screen_x_mid - ((256.0 / (640.0 * 2.0)) * full_screen_width);

  0010b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00113	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  0011b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00123	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00127	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0012b	89 45 fc	 mov	 DWORD PTR _mfd_screen_x_min$[ebp], eax

; 1451 : 	mfd_screen_y_min = full_screen_y_mid - ((256.0 / (480.0 * 2.0)) * full_screen_height);

  0012e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00136	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  0013e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd1111111111111
  00146	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0014a	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0014e	89 45 f8	 mov	 DWORD PTR _mfd_screen_y_min$[ebp], eax

; 1452 : 
; 1453 : 	mfd_screen_x_max = full_screen_x_mid + ((256.0 / (640.0 * 2.0)) * full_screen_width) - 0.001;

  00151	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00159	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_width@@3MA
  00161	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fc999999999999a
  00169	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0016d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00175	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00179	89 45 f4	 mov	 DWORD PTR _mfd_screen_x_max$[ebp], eax

; 1454 : 	mfd_screen_y_max = full_screen_y_mid + ((256.0 / (480.0 * 2.0)) * full_screen_height) - 0.001;

  0017c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00184	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?full_screen_height@@3MA
  0018c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fd1111111111111
  00194	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00198	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  001a0	f2 0f 2c c0	 cvttsd2si eax, xmm0
  001a4	89 45 f0	 mov	 DWORD PTR _mfd_screen_y_max$[ebp], eax

; 1455 : 
; 1456 : 	i_translate_3d = mfd_screen_x_min;

  001a7	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _mfd_screen_x_min$[ebp]
  001ac	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?i_translate_3d@@3MA, xmm0

; 1457 : 	j_translate_3d = mfd_screen_y_min;

  001b4	f3 0f 2a 45 f8	 cvtsi2ss xmm0, DWORD PTR _mfd_screen_y_min$[ebp]
  001b9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?j_translate_3d@@3MA, xmm0

; 1458 : 
; 1459 : 	i_scale_3d = 640.0 / full_screen_width;

  001c1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_width@@3MA
  001c9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4084000000000000
  001d1	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001d5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001d9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?i_scale_3d@@3MA, xmm0

; 1460 : 	j_scale_3d = 480.0 / full_screen_height;

  001e1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?full_screen_height@@3MA
  001e9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@407e000000000000
  001f1	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001f5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001f9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?j_scale_3d@@3MA, xmm0

; 1461 : 
; 1462 : 	symbology_colour = MFD_EO_TEXT_COLOUR;

  00201	b8 04 00 00 00	 mov	 eax, 4
  00206	6b c8 05	 imul	 ecx, eax, 5
  00209	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?mfd_colours@@3PAUREAL_COLOUR@@A[ecx]
  0020f	89 55 e8	 mov	 DWORD PTR _symbology_colour$[ebp], edx

; 1463 : 	set_rgb_colour(background_colour, 255, 255, 255, 0);

  00212	c6 45 ee ff	 mov	 BYTE PTR _background_colour$[ebp+2], 255 ; 000000ffH
  00216	c6 45 ed ff	 mov	 BYTE PTR _background_colour$[ebp+1], 255 ; 000000ffH
  0021a	c6 45 ec ff	 mov	 BYTE PTR _background_colour$[ebp], 255 ; 000000ffH
  0021e	c6 45 ef 00	 mov	 BYTE PTR _background_colour$[ebp+3], 0

; 1464 : 
; 1465 : 	set_system_texture_screen (eo_texture_screen, TEXTURE_INDEX_AVCKPT_DISPLAY_RHS_MFD);

  00222	68 f9 00 00 00	 push	 249			; 000000f9H
  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_texture_screen@@3PAUSCREEN@@A
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 ?set_system_texture_screen@@YGXPAUSCREEN@@H@Z ; set_system_texture_screen

; 1466 : 
; 1467 : 	draw_symbology_to_texture(

  00232	68 00 00 00 00	 push	 OFFSET ?draw_hind_ort_symbology@@YGXH@Z ; draw_hind_ort_symbology
  00237	8b 45 ec	 mov	 eax, DWORD PTR _background_colour$[ebp]
  0023a	50		 push	 eax
  0023b	8b 4d e8	 mov	 ecx, DWORD PTR _symbology_colour$[ebp]
  0023e	51		 push	 ecx
  0023f	8b 55 f0	 mov	 edx, DWORD PTR _mfd_screen_y_max$[ebp]
  00242	52		 push	 edx
  00243	8b 45 f4	 mov	 eax, DWORD PTR _mfd_screen_x_max$[ebp]
  00246	50		 push	 eax
  00247	8b 4d f8	 mov	 ecx, DWORD PTR _mfd_screen_y_min$[ebp]
  0024a	51		 push	 ecx
  0024b	8b 55 fc	 mov	 edx, DWORD PTR _mfd_screen_x_min$[ebp]
  0024e	52		 push	 edx
  0024f	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?mfd_viewport_size@@3MA
  00257	50		 push	 eax
  00258	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?mfd_viewport_size@@3MA
  00260	51		 push	 ecx
  00261	68 f9 00 00 00	 push	 249			; 000000f9H
  00266	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?eo_texture_screen@@3PAUSCREEN@@A
  0026c	52		 push	 edx
  0026d	e8 00 00 00 00	 call	 ?draw_symbology_to_texture@@YGXPAUSCREEN@@HHHHHHHUREAL_COLOUR@@1P6GXH@Z@Z ; draw_symbology_to_texture

; 1468 : 		eo_texture_screen,
; 1469 : 		TEXTURE_INDEX_AVCKPT_DISPLAY_RHS_MFD,
; 1470 : 		mfd_viewport_size,
; 1471 : 		mfd_viewport_size,
; 1472 : 		mfd_screen_x_min,
; 1473 : 		mfd_screen_y_min,
; 1474 : 		mfd_screen_x_max,
; 1475 : 		mfd_screen_y_max,
; 1476 : 		symbology_colour,
; 1477 : 		background_colour,
; 1478 : 		draw_hind_ort_symbology);
; 1479 : }

  00272	5f		 pop	 edi
  00273	5e		 pop	 esi
  00274	5b		 pop	 ebx
  00275	8b e5		 mov	 esp, ebp
  00277	5d		 pop	 ebp
  00278	c3		 ret	 0
?draw_hind_virtual_cockpit_ort_symbology@@YGXXZ ENDP	; draw_hind_virtual_cockpit_ort_symbology
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_hind_virtual_cockpit_ort_view@@YGXHH@Z
_TEXT	SEGMENT
tv131 = -88						; size = 4
_damaged$ = -20						; size = 4
_black$ = -16						; size = 4
_system$ = -12						; size = 4
_eo$ = -8						; size = 4
_fov$ = -4						; size = 4
_x_min$ = 8						; size = 4
_x_max$ = 12						; size = 4
?draw_hind_virtual_cockpit_ort_view@@YGXHH@Z PROC	; draw_hind_virtual_cockpit_ort_view, COMDAT

; 1370 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1371 : 	float
; 1372 : 		fov;
; 1373 : 
; 1374 : 	eo_params*
; 1375 : 		eo;
; 1376 : 
; 1377 : 	target_acquisition_systems
; 1378 : 		system;
; 1379 : 
; 1380 : 	rgb_colour
; 1381 : 		black;
; 1382 : 
; 1383 : 	int
; 1384 : 		damaged = FALSE;

  00009	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _damaged$[ebp], 0

; 1385 : 
; 1386 : 	if (eo_sensor == TARGET_ACQUISITION_SYSTEM_FLIR)

  00010	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?eo_sensor@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 3 ; eo_sensor
  00017	75 1d		 jne	 SHORT $LN2@draw_hind_

; 1387 : 	{
; 1388 : 		eo = &hind_flir;

  00019	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _eo$[ebp], OFFSET ?hind_flir@@3UEO_PARAMS@@A ; hind_flir

; 1389 : 		system = TARGET_ACQUISITION_SYSTEM_FLIR;

  00020	c7 45 f4 03 00
	00 00		 mov	 DWORD PTR _system$[ebp], 3

; 1390 : 		damaged = hind_damage.flir;

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  0002c	d1 e8		 shr	 eax, 1
  0002e	83 e0 01	 and	 eax, 1
  00031	89 45 ec	 mov	 DWORD PTR _damaged$[ebp], eax

; 1391 : 	}
; 1392 : 	else

  00034	eb 1c		 jmp	 SHORT $LN3@draw_hind_
$LN2@draw_hind_:

; 1393 : 	{
; 1394 : 		eo = &hind_llltv;

  00036	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _eo$[ebp], OFFSET ?hind_llltv@@3UEO_PARAMS@@A ; hind_llltv

; 1395 : 		system = TARGET_ACQUISITION_SYSTEM_LLLTV;

  0003d	c7 45 f4 06 00
	00 00		 mov	 DWORD PTR _system$[ebp], 6

; 1396 : 		damaged = hind_damage.llltv;

  00044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  00049	c1 e8 03	 shr	 eax, 3
  0004c	83 e0 01	 and	 eax, 1
  0004f	89 45 ec	 mov	 DWORD PTR _damaged$[ebp], eax
$LN3@draw_hind_:

; 1397 : 	}
; 1398 : 
; 1399 : 	black.r = 0;

  00052	c6 45 f2 00	 mov	 BYTE PTR _black$[ebp+2], 0

; 1400 : 	black.g = 0;

  00056	c6 45 f1 00	 mov	 BYTE PTR _black$[ebp+1], 0

; 1401 : 	black.b = 0;

  0005a	c6 45 f0 00	 mov	 BYTE PTR _black$[ebp], 0

; 1402 : 	black.a = 255;

  0005e	c6 45 f3 ff	 mov	 BYTE PTR _black$[ebp+3], 255 ; 000000ffH

; 1403 : 
; 1404 : 	// clear background, since we won't be drawing the 3D view over the entire screen
; 1405 : 	set_block(0, 0, full_screen_x_max, full_screen_y_max, black);

  00062	8b 45 f0	 mov	 eax, DWORD PTR _black$[ebp]
  00065	50		 push	 eax
  00066	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?full_screen_y_max@@3MA
  0006e	51		 push	 ecx
  0006f	f3 0f 2c 15 00
	00 00 00	 cvttss2si edx, DWORD PTR ?full_screen_x_max@@3MA
  00077	52		 push	 edx
  00078	6a 00		 push	 0
  0007a	6a 00		 push	 0
  0007c	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 1406 : 
; 1407 : 	if (!damaged)

  00081	83 7d ec 00	 cmp	 DWORD PTR _damaged$[ebp], 0
  00085	75 79		 jne	 SHORT $LN4@draw_hind_

; 1408 : 	{
; 1409 : 		fov = rad(get_eo_sensor_fov(eo, system));

  00087	8b 45 f4	 mov	 eax, DWORD PTR _system$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _eo$[ebp]
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ?get_eo_sensor_fov@@YGMPAUEO_PARAMS@@W4TARGET_ACQUISITION_SYSTEMS@@@Z ; get_eo_sensor_fov
  00094	d9 5d a8	 fstp	 DWORD PTR tv131[ebp]
  00097	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv131[ebp]
  0009c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  000a4	f3 0f 11 45 fc	 movss	 DWORD PTR _fov$[ebp], xmm0

; 1410 : 
; 1411 : 		set_eo_view_params(system, x_min, full_screen_y_min, x_max, full_screen_y_max, fov, fov);

  000a9	51		 push	 ecx
  000aa	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fov$[ebp]
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	51		 push	 ecx
  000b5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fov$[ebp]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?full_screen_y_max@@3MA
  000c7	50		 push	 eax
  000c8	8b 4d 0c	 mov	 ecx, DWORD PTR _x_max$[ebp]
  000cb	51		 push	 ecx
  000cc	f3 0f 2c 15 00
	00 00 00	 cvttss2si edx, DWORD PTR ?full_screen_y_min@@3MA
  000d4	52		 push	 edx
  000d5	8b 45 08	 mov	 eax, DWORD PTR _x_min$[ebp]
  000d8	50		 push	 eax
  000d9	8b 4d f4	 mov	 ecx, DWORD PTR _system$[ebp]
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 ?set_eo_view_params@@YGXW4TARGET_ACQUISITION_SYSTEMS@@HHHHMM@Z ; set_eo_view_params

; 1412 : 
; 1413 : 		draw_eo_3d_scene = TRUE;

  000e2	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?draw_eo_3d_scene@@3HA, 1 ; draw_eo_3d_scene

; 1414 : 		draw_main_3d_scene (&eo_vp);

  000ec	68 00 00 00 00	 push	 OFFSET ?eo_vp@@3UVIEWPOINT@@A ; eo_vp
  000f1	e8 00 00 00 00	 call	 ?draw_main_3d_scene@@YGXPAUVIEWPOINT@@@Z ; draw_main_3d_scene

; 1415 : 		draw_eo_3d_scene = FALSE;

  000f6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?draw_eo_3d_scene@@3HA, 0 ; draw_eo_3d_scene
$LN4@draw_hind_:

; 1416 : 	}
; 1417 : }

  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 08 00	 ret	 8
?draw_hind_virtual_cockpit_ort_view@@YGXHH@Z ENDP	; draw_hind_virtual_cockpit_ort_view
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?get_hind_eo_display_visible@@YGHXZ
_TEXT	SEGMENT
tv66 = -68						; size = 4
?get_hind_eo_display_visible@@YGHXZ PROC		; get_hind_eo_display_visible, COMDAT

; 1486 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1487 : 	return

  00009	83 3d 00 00 00
	00 04		 cmp	 DWORD PTR ?mfd_mode@@3W4MFD_MODES@@A, 4
  00010	74 12		 je	 SHORT $LN3@get_hind_e
  00012	83 3d 00 00 00
	00 07		 cmp	 DWORD PTR ?mfd_mode@@3W4MFD_MODES@@A, 7
  00019	74 09		 je	 SHORT $LN3@get_hind_e
  0001b	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv66[ebp], 0
  00022	eb 07		 jmp	 SHORT $LN4@get_hind_e
$LN3@get_hind_e:
  00024	c7 45 bc 01 00
	00 00		 mov	 DWORD PTR tv66[ebp], 1
$LN4@get_hind_e:
  0002b	8b 45 bc	 mov	 eax, DWORD PTR tv66[ebp]

; 1488 : 	(
; 1489 : 		(mfd_mode == MFD_MODE_FLIR) ||
; 1490 : 		(mfd_mode == MFD_MODE_LLLTV)
; 1491 : 	);
; 1492 : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?get_hind_eo_display_visible@@YGHXZ ENDP		; get_hind_eo_display_visible
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_overlaid_hind_mfd@@YGXMMM@Z
_TEXT	SEGMENT
_x_org$ = 8						; size = 4
_y_org$ = 12						; size = 4
_size$ = 16						; size = 4
?draw_overlaid_hind_mfd@@YGXMMM@Z PROC			; draw_overlaid_hind_mfd, COMDAT

; 828  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 829  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 0c 00	 ret	 12			; 0000000cH
?draw_overlaid_hind_mfd@@YGXMMM@Z ENDP			; draw_overlaid_hind_mfd
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_hind_mfd_on_texture@@YGXXZ
_TEXT	SEGMENT
?draw_hind_mfd_on_texture@@YGXXZ PROC			; draw_hind_mfd_on_texture, COMDAT

; 733  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 734  : 	if (!map_active)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_active@@3HA, 0
  00010	75 05		 jne	 SHORT $LN2@draw_hind_

; 735  : 		return;

  00012	e9 8f 02 00 00	 jmp	 $LN1@draw_hind_
$LN2@draw_hind_:

; 736  : 
; 737  : 	set_system_texture_screen (mfd_texture_screen, TEXTURE_INDEX_HIND_MAP_DISPLAY);

  00017	68 0d 09 00 00	 push	 2317			; 0000090dH
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  00021	50		 push	 eax
  00022	e8 00 00 00 00	 call	 ?set_system_texture_screen@@YGXPAUSCREEN@@H@Z ; set_system_texture_screen

; 738  : 
; 739  : 	////////////////////////////////////////
; 740  : 	//
; 741  : 	// set up MFD 2D environment
; 742  : 	//
; 743  : 	////////////////////////////////////////
; 744  : 
; 745  : 	set_2d_active_environment (mfd_env);

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?set_2d_active_environment@@YGXPAUENV_2D@@@Z ; set_2d_active_environment

; 746  : 
; 747  : 	//
; 748  : 	// window
; 749  : 	//
; 750  : 
; 751  : 	set_2d_window (mfd_env, MFD_WINDOW_X_MIN, MFD_WINDOW_Y_MIN, MFD_WINDOW_X_MAX, MFD_WINDOW_Y_MAX);

  00032	51		 push	 ecx
  00033	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  0003b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00040	51		 push	 ecx
  00041	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f7fbe77
  00049	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004e	51		 push	 ecx
  0004f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00057	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005c	51		 push	 ecx
  0005d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00065	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ?set_2d_window@@YGXPAUENV_2D@@MMMM@Z ; set_2d_window

; 752  : 
; 753  : 	//
; 754  : 	// viewport
; 755  : 	//
; 756  : 
; 757  : 	if (custom_3d_models.arneh_mi24v_cockpit)

  00075	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A+4, 0
  0007c	74 1c		 je	 SHORT $LN3@draw_hind_

; 758  : 	{
; 759  : 		mfd_viewport_size = MFD_VIEWPORT_SIZE;

  0007e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44800000
  00086	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_size@@3MA, xmm0

; 760  : 		mfd_texture_size = MFD_TEXTURE_SIZE;

  0008e	c7 05 00 00 00
	00 00 04 00 00	 mov	 DWORD PTR ?mfd_texture_size@@3HA, 1024 ; 00000400H

; 761  : 	}
; 762  : 	else

  00098	eb 1a		 jmp	 SHORT $LN4@draw_hind_
$LN3@draw_hind_:

; 763  : 	{
; 764  : 		mfd_viewport_size = MFD_HAVOC_VIEWPORT_SIZE;

  0009a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  000a2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_size@@3MA, xmm0

; 765  : 		mfd_texture_size = MFD_HAVOC_TEXTURE_SIZE;

  000aa	c7 05 00 00 00
	00 00 01 00 00	 mov	 DWORD PTR ?mfd_texture_size@@3HA, 256 ; 00000100H
$LN4@draw_hind_:

; 766  : 	}
; 767  : 
; 768  : 	mfd_viewport_texture_x_org = mfd_texture_size / 2;

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  000b9	99		 cdq
  000ba	2b c2		 sub	 eax, edx
  000bc	d1 f8		 sar	 eax, 1
  000be	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_viewport_texture_x_org@@3HA, eax

; 769  : 	mfd_viewport_texture_y_org = mfd_texture_size / 2;

  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  000c8	99		 cdq
  000c9	2b c2		 sub	 eax, edx
  000cb	d1 f8		 sar	 eax, 1
  000cd	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_viewport_texture_y_org@@3HA, eax

; 770  : 
; 771  : 	ASSERT (mfd_viewport_size <= mfd_texture_size);

  000d2	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?mfd_texture_size@@3HA
  000da	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  000e1	73 18		 jae	 SHORT $LN5@draw_hind_
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_hind_mfd_on_texture@@YGXXZ@4JA
  000e8	83 c0 26	 add	 eax, 38			; 00000026H
  000eb	50		 push	 eax
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@CJNLDOOK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IPIPCLFE@mfd_viewport_size?5?$DM?$DN?5mfd_textur@
  000f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@draw_hind_:

; 772  : 
; 773  : 	mfd_viewport_x_org = mfd_viewport_texture_x_org;

  000fb	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?mfd_viewport_texture_x_org@@3HA
  00103	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_org@@3MA, xmm0

; 774  : 	mfd_viewport_y_org = mfd_viewport_texture_y_org;

  0010b	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?mfd_viewport_texture_y_org@@3HA
  00113	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_org@@3MA, xmm0

; 775  : 
; 776  : 	mfd_viewport_x_min = mfd_viewport_x_org - (mfd_viewport_size * 0.5);

  0011b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_x_org@@3MA
  00123	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  0012b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00133	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00137	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_min@@3MA, xmm0

; 777  : 	mfd_viewport_y_min = mfd_viewport_y_org - (mfd_viewport_size * 0.5);

  00143	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_y_org@@3MA
  0014b	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  00153	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0015b	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0015f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00163	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_min@@3MA, xmm0

; 778  : 	mfd_viewport_x_max = mfd_viewport_x_org + (mfd_viewport_size * 0.5) - 0.001;

  0016b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_x_org@@3MA
  00173	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  0017b	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00183	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00187	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0018f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00193	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_max@@3MA, xmm0

; 779  : 	mfd_viewport_y_max = mfd_viewport_y_org + (mfd_viewport_size * 0.5) - 0.001;

  0019b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_y_org@@3MA
  001a3	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  001ab	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  001b3	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001b7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  001bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_max@@3MA, xmm0

; 780  : 
; 781  : 	set_2d_viewport (mfd_env, mfd_viewport_x_min, mfd_viewport_y_min, mfd_viewport_x_max, mfd_viewport_y_max);

  001cb	51		 push	 ecx
  001cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_max@@3MA
  001d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d9	51		 push	 ecx
  001da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_max@@3MA
  001e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e7	51		 push	 ecx
  001e8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_y_min@@3MA
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	51		 push	 ecx
  001f6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_x_min@@3MA
  001fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00203	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ?set_2d_viewport@@YGXPAUENV_2D@@MMMM@Z ; set_2d_viewport

; 782  : 
; 783  : 	////////////////////////////////////////
; 784  : 	//
; 785  : 	// draw MFD display
; 786  : 	//
; 787  : 	////////////////////////////////////////
; 788  : 
; 789  : 	if (!hind_damage.navigation_computer && !map_up_to_date)

  0020e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hind_damage@@3THIND_DAMAGE_FLAGS@@A ; hind_damage
  00213	c1 e8 09	 shr	 eax, 9
  00216	83 e0 01	 and	 eax, 1
  00219	0f 85 87 00 00
	00		 jne	 $LN6@draw_hind_
  0021f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_up_to_date@@3HA, 0
  00226	75 7e		 jne	 SHORT $LN6@draw_hind_

; 790  : 	{
; 791  : 		set_active_screen (mfd_texture_screen);

  00228	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  0022d	50		 push	 eax
  0022e	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 792  : 
; 793  : 		if (lock_screen (mfd_texture_screen))

  00233	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  00238	50		 push	 eax
  00239	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0023e	85 c0		 test	 eax, eax
  00240	74 59		 je	 SHORT $LN7@draw_hind_

; 794  : 		{
; 795  : 			set_block (0, 0, mfd_viewport_size - 1, mfd_viewport_size - 1, clear_mfd_colour);

  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?clear_mfd_colour@@3UREAL_COLOUR@@A ; clear_mfd_colour
  00247	50		 push	 eax
  00248	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00250	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00258	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0025c	51		 push	 ecx
  0025d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?mfd_viewport_size@@3MA
  00265	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0026d	f3 0f 2c d0	 cvttss2si edx, xmm0
  00271	52		 push	 edx
  00272	6a 00		 push	 0
  00274	6a 00		 push	 0
  00276	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 796  : 
; 797  : 			draw_layout_grid ();

  0027b	e8 00 00 00 00	 call	 ?draw_layout_grid@@YGXXZ ; draw_layout_grid

; 798  : 
; 799  : 			draw_map_display ();

  00280	e8 00 00 00 00	 call	 ?draw_map_display@@YGXXZ ; draw_map_display

; 800  : 
; 801  : 			flush_screen_texture_graphics (mfd_texture_screen);

  00285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 802  : 
; 803  : 			unlock_screen (mfd_texture_screen);

  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN7@draw_hind_:

; 804  : 		}
; 805  : 
; 806  : 		set_active_screen (video_screen);

  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN6@draw_hind_:
$LN1@draw_hind_:

; 807  : 	}
; 808  : /*
; 809  : 	if(command_line_export_mfd)
; 810  : 	{
; 811  : 		export_screen=create_screen_for_system_texture (TEXTURE_INDEX_HIND_MAP_DISPLAY);
; 812  : 		copy_export_mfd(export_screen,NULL);
; 813  : 	}
; 814  : */
; 815  : }

  002a6	5f		 pop	 edi
  002a7	5e		 pop	 esi
  002a8	5b		 pop	 ebx
  002a9	8b e5		 mov	 esp, ebp
  002ab	5d		 pop	 ebp
  002ac	c3		 ret	 0
?draw_hind_mfd_on_texture@@YGXXZ ENDP			; draw_hind_mfd_on_texture
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?draw_hind_mfd_on_cockpit@@YGXMMHH@Z
_TEXT	SEGMENT
_x_org$ = 8						; size = 4
_y_org$ = 12						; size = 4
_large_mfd$ = 16					; size = 4
_draw_translucent_background$ = 20			; size = 4
?draw_hind_mfd_on_cockpit@@YGXMMHH@Z PROC		; draw_hind_mfd_on_cockpit, COMDAT

; 719  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 720  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 10 00	 ret	 16			; 00000010H
?draw_hind_mfd_on_cockpit@@YGXMMHH@Z ENDP		; draw_hind_mfd_on_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?deinitialise_hind_mfd@@YGXXZ
_TEXT	SEGMENT
?deinitialise_hind_mfd@@YGXXZ PROC			; deinitialise_hind_mfd, COMDAT

; 493  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 494  : 	// reset texture coordinates
; 495  : 	if (upper_left_texture_uv)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?upper_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, 0
  00010	74 19		 je	 SHORT $LN2@deinitiali

; 496  : 	{
; 497  : 		upper_left_texture_uv->u = 0.0;

  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?upper_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00017	0f 57 c0	 xorps	 xmm0, xmm0
  0001a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 498  : 		upper_left_texture_uv->v = 0.0;

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?upper_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00023	0f 57 c0	 xorps	 xmm0, xmm0
  00026	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN2@deinitiali:

; 499  : 	}
; 500  : 	if (upper_right_texture_uv)

  0002b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?upper_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, 0
  00032	74 1e		 je	 SHORT $LN3@deinitiali

; 501  : 	{
; 502  : 		upper_right_texture_uv->u = 1.0;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?upper_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00041	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 503  : 		upper_right_texture_uv->v = 0.0;

  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?upper_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  0004a	0f 57 c0	 xorps	 xmm0, xmm0
  0004d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN3@deinitiali:

; 504  : 	}
; 505  : 	if (lower_left_texture_uv)

  00052	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?lower_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, 0
  00059	74 1e		 je	 SHORT $LN4@deinitiali

; 506  : 	{
; 507  : 		lower_left_texture_uv->u = 0.0;

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lower_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00060	0f 57 c0	 xorps	 xmm0, xmm0
  00063	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 508  : 		lower_left_texture_uv->v = 1.0;

  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lower_left_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00074	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN4@deinitiali:

; 509  : 	}
; 510  : 	if (lower_right_texture_uv)

  00079	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?lower_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A, 0
  00080	74 23		 je	 SHORT $LN5@deinitiali

; 511  : 	{
; 512  : 		lower_right_texture_uv->u = 1.0;

  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lower_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00087	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0008f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 513  : 		lower_right_texture_uv->v = 1.0;

  00093	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lower_right_texture_uv@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A
  00098	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000a0	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN5@deinitiali:

; 514  : 	}
; 515  : 
; 516  : 	destroy_2d_environment (mfd_env);

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_env@@3PAUENV_2D@@A
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?destroy_2d_environment@@YGXPAUENV_2D@@@Z ; destroy_2d_environment

; 517  : 
; 518  : 	destroy_screen (mfd_texture_screen);

  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 519  : 	destroy_screen (eo_texture_screen);

  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?eo_texture_screen@@3PAUSCREEN@@A
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 520  : 
; 521  : //	destroy_screen (overlaid_mfd_texture_screen);
; 522  : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c3		 ret	 0
?deinitialise_hind_mfd@@YGXXZ ENDP			; deinitialise_hind_mfd
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\hind\hi_mfd.c
;	COMDAT ?initialise_hind_mfd@@YGXXZ
_TEXT	SEGMENT
?initialise_hind_mfd@@YGXXZ PROC			; initialise_hind_mfd, COMDAT

; 449  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 450  : 	mfd_env = create_2d_environment ();

  00009	e8 00 00 00 00	 call	 ?create_2d_environment@@YGPAUENV_2D@@XZ ; create_2d_environment
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_env@@3PAUENV_2D@@A, eax

; 451  : 
; 452  : 	map_up_to_date = FALSE;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_up_to_date@@3HA, 0

; 453  : 	map_active = TRUE;

  0001d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?map_active@@3HA, 1

; 454  : 
; 455  : 	if (custom_3d_models.arneh_mi24v_cockpit)

  00027	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A+4, 0
  0002e	74 3c		 je	 SHORT $LN2@initialise

; 456  : 	{
; 457  : 		mfd_viewport_size = MFD_VIEWPORT_SIZE;

  00030	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44800000
  00038	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_size@@3MA, xmm0

; 458  : 		mfd_texture_size = MFD_TEXTURE_SIZE;

  00040	c7 05 00 00 00
	00 00 04 00 00	 mov	 DWORD PTR ?mfd_texture_size@@3HA, 1024 ; 00000400H

; 459  : 		map_range = 25000.0;

  0004a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46c35000
  00052	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?map_range@@3MA, xmm0

; 460  : 		map_scale = ROOT2 / 25000.0;

  0005a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@386d4402
  00062	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?map_scale@@3MA, xmm0

; 461  : 	}
; 462  : 	else

  0006a	eb 3a		 jmp	 SHORT $LN3@initialise
$LN2@initialise:

; 463  : 	{
; 464  : 		mfd_viewport_size = MFD_HAVOC_VIEWPORT_SIZE;

  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43800000
  00074	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_size@@3MA, xmm0

; 465  : 		mfd_texture_size = MFD_HAVOC_TEXTURE_SIZE;

  0007c	c7 05 00 00 00
	00 00 01 00 00	 mov	 DWORD PTR ?mfd_texture_size@@3HA, 256 ; 00000100H

; 466  : 		map_range = 25000.0;

  00086	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46c35000
  0008e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?map_range@@3MA, xmm0

; 467  : 		map_scale = 1.0 / (25000.0 * ROOT2);

  00096	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@37ed4403
  0009e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?map_scale@@3MA, xmm0
$LN3@initialise:

; 468  : 	}
; 469  : 
; 470  : 	mfd_viewport_texture_x_org = mfd_texture_size / 2;

  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  000ab	99		 cdq
  000ac	2b c2		 sub	 eax, edx
  000ae	d1 f8		 sar	 eax, 1
  000b0	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_viewport_texture_x_org@@3HA, eax

; 471  : 	mfd_viewport_texture_y_org = mfd_texture_size / 2;

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  000ba	99		 cdq
  000bb	2b c2		 sub	 eax, edx
  000bd	d1 f8		 sar	 eax, 1
  000bf	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_viewport_texture_y_org@@3HA, eax

; 472  : 
; 473  : 	mfd_viewport_x_min = mfd_viewport_x_org - (mfd_viewport_size * 0.5);

  000c4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_x_org@@3MA
  000cc	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  000d4	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  000dc	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_min@@3MA, xmm0

; 474  : 	mfd_viewport_y_min = mfd_viewport_y_org - (mfd_viewport_size * 0.5);

  000ec	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_y_org@@3MA
  000f4	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  000fc	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00104	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00108	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_min@@3MA, xmm0

; 475  : 	mfd_viewport_x_max = mfd_viewport_x_org + (mfd_viewport_size * 0.5) - 0.001;

  00114	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_x_org@@3MA
  0011c	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  00124	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0012c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00130	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00138	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_x_max@@3MA, xmm0

; 476  : 	mfd_viewport_y_max = mfd_viewport_y_org + (mfd_viewport_size * 0.5) - 0.001;

  00144	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?mfd_viewport_y_org@@3MA
  0014c	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?mfd_viewport_size@@3MA
  00154	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0015c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00160	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?mfd_viewport_y_max@@3MA, xmm0

; 477  : 
; 478  : 	if (custom_3d_models.arneh_mi24v_cockpit)

  00174	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A+4, 0
  0017b	74 20		 je	 SHORT $LN4@initialise

; 479  : 		mfd_texture_screen = create_system_texture_screen (mfd_texture_size, mfd_texture_size, TEXTURE_INDEX_HIND_MAP_DISPLAY, TEXTURE_TYPE_SINGLEALPHA);

  0017d	6a 02		 push	 2
  0017f	68 0d 09 00 00	 push	 2317			; 0000090dH
  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  00189	50		 push	 eax
  0018a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mfd_texture_size@@3HA
  00190	51		 push	 ecx
  00191	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00196	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A, eax

; 480  : 	else

  0019b	eb 1e		 jmp	 SHORT $LN5@initialise
$LN4@initialise:

; 481  : 		mfd_texture_screen = create_system_texture_screen (mfd_texture_size, mfd_texture_size, TEXTURE_INDEX_HVCKPT_DISPLAY_CRT, TEXTURE_TYPE_SINGLEALPHA);

  0019d	6a 02		 push	 2
  0019f	68 e3 06 00 00	 push	 1763			; 000006e3H
  001a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mfd_texture_size@@3HA
  001a9	50		 push	 eax
  001aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mfd_texture_size@@3HA
  001b0	51		 push	 ecx
  001b1	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  001b6	a3 00 00 00 00	 mov	 DWORD PTR ?mfd_texture_screen@@3PAUSCREEN@@A, eax
$LN5@initialise:

; 482  : 
; 483  : 	eo_texture_screen = create_system_texture_screen (EO_VIEWPORT_SIZE, EO_VIEWPORT_SIZE, TEXTURE_INDEX_AVCKPT_DISPLAY_RHS_MFD, TEXTURE_TYPE_SINGLEALPHA);

  001bb	6a 02		 push	 2
  001bd	68 f9 00 00 00	 push	 249			; 000000f9H
  001c2	68 00 01 00 00	 push	 256			; 00000100H
  001c7	68 00 01 00 00	 push	 256			; 00000100H
  001cc	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  001d1	a3 00 00 00 00	 mov	 DWORD PTR ?eo_texture_screen@@3PAUSCREEN@@A, eax

; 484  : 
; 485  : 	initialize_colours();

  001d6	e8 00 00 00 00	 call	 ?initialize_colours@@YGXXZ ; initialize_colours

; 486  : }

  001db	5f		 pop	 edi
  001dc	5e		 pop	 esi
  001dd	5b		 pop	 ebx
  001de	8b e5		 mov	 esp, ebp
  001e0	5d		 pop	 ebp
  001e1	c3		 ret	 0
?initialise_hind_mfd@@YGXXZ ENDP			; initialise_hind_mfd
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
