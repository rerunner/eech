; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\camera\cm_end.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fmodf
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z	; reset_end_of_mission_camera
PUBLIC	?update_end_of_mission_camera@@YGXPAUCAMERA@@@Z	; update_end_of_mission_camera
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA ; `reset_end_of_mission_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_03DGOGAGNC@raw@				; `string'
PUBLIC	??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ ; `string'
PUBLIC	?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA ; `update_end_of_mission_camera'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f8ccccd
PUBLIC	__real@3fe0c15236000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@bf060a92
PUBLIC	__real@bfc90fdb
PUBLIC	__real@c1700000
PUBLIC	__real@c2c80000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_matrix3x3_vec3d
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data_type
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z:PROC ; get_terrain_type_class
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	__fltused:DWORD
;	COMDAT __real@c2c80000
CONST	SEGMENT
__real@c2c80000 DD 0c2c80000r			; -100
CONST	ENDS
;	COMDAT __real@c1700000
CONST	SEGMENT
__real@c1700000 DD 0c1700000r			; -15
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@bf060a92
CONST	SEGMENT
__real@bf060a92 DD 0bf060a92r			; -0.523599
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0c15236000000
CONST	SEGMENT
__real@3fe0c15236000000 DQ 03fe0c15236000000r	; 0.523599
CONST	ENDS
;	COMDAT __real@3f8ccccd
CONST	SEGMENT
__real@3f8ccccd DD 03f8ccccdr			; 1.1
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA DD 063H ; `update_end_of_mission_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
CONST	SEGMENT
??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@ DB 'raw->external_view_'
	DB	'entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03DGOGAGNC@raw@
CONST	SEGMENT
??_C@_03DGOGAGNC@raw@ DB 'raw', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\camera\cm_end'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA DD 050H ; `reset_end_of_mission_camera'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_end.c
;	COMDAT ?update_end_of_mission_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv377 = -116						; size = 8
tv423 = -112						; size = 4
tv321 = -108						; size = 4
tv248 = -108						; size = 4
tv226 = -108						; size = 4
tv193 = -108						; size = 4
tv169 = -108						; size = 4
tv150 = -108						; size = 4
tv479 = -104						; size = 4
tv313 = -104						; size = 4
tv240 = -104						; size = 4
tv218 = -104						; size = 4
tv185 = -104						; size = 4
tv162 = -104						; size = 4
tv143 = -104						; size = 4
$T1 = -100						; size = 4
_terrain_class$ = -32					; size = 4
_rel_camera_position$ = -28				; size = 12
_terrain_elevation$ = -16				; size = 4
_pitch$ = -12						; size = 4
_heading$ = -8						; size = 4
_en$ = -4						; size = 4
_raw$ = 8						; size = 4
?update_end_of_mission_camera@@YGXPAUCAMERA@@@Z PROC	; update_end_of_mission_camera, COMDAT

; 99   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 100  : 	entity
; 101  : 		*en;
; 102  : 
; 103  : 	float
; 104  : 		heading,
; 105  : 		pitch,
; 106  : 		terrain_elevation;
; 107  : 
; 108  : 	vec3d
; 109  : 		rel_camera_position;
; 110  : 
; 111  : 	terrain_classes
; 112  : 		terrain_class;
; 113  : 
; 114  : 	//
; 115  : 	// pre-amble
; 116  : 	//
; 117  : 
; 118  : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_end
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 13	 add	 eax, 19			; 00000013H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_end:

; 119  : 
; 120  : 	ASSERT (raw->external_view_entity);

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00031	75 18		 jne	 SHORT $LN3@update_end
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00038	83 c0 15	 add	 eax, 21			; 00000015H
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_end:

; 121  : 
; 122  : 	en = raw->external_view_entity;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0004e	8b 88 24 01 00
	00		 mov	 ecx, DWORD PTR [eax+292]
  00054	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 123  : 
; 124  : 	get_local_entity_target_point (en, &raw->position);

  00057	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0005a	50		 push	 eax
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 125  : 
; 126  : 	if (point_inside_map_area (&raw->position))

  00064	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00067	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0006b	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00072	0f 82 6a 03 00
	00		 jb	 $LN4@update_end
  00078	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0007b	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00083	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00086	0f 82 56 03 00
	00		 jb	 $LN4@update_end
  0008c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00094	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0009b	0f 82 41 03 00
	00		 jb	 $LN4@update_end
  000a1	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000a4	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000ac	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  000b0	0f 82 2c 03 00
	00		 jb	 $LN4@update_end

; 127  : 	{
; 128  : 		terrain_elevation = get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info);

  000b6	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000b9	83 c0 50	 add	 eax, 80			; 00000050H
  000bc	50		 push	 eax
  000bd	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c0	51		 push	 ecx
  000c1	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cb	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  000ce	51		 push	 ecx
  000cf	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  000dd	d9 5d f0	 fstp	 DWORD PTR _terrain_elevation$[ebp]

; 129  : 
; 130  : 		terrain_class = get_terrain_type_class (get_3d_terrain_point_data_type (&raw->terrain_info));

  000e0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000e3	83 c0 50	 add	 eax, 80			; 00000050H
  000e6	50		 push	 eax
  000e7	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data_type@@YGHPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data_type
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?get_terrain_type_class@@YG?AW4TERRAIN_CLASSES@@H@Z ; get_terrain_type_class
  000f2	89 45 e0	 mov	 DWORD PTR _terrain_class$[ebp], eax

; 131  : 
; 132  : 		if
; 133  : 		(
; 134  : 			(terrain_class == TERRAIN_CLASS_WATER) &&
; 135  : 			(!get_local_entity_int_value (en, INT_TYPE_ALIVE)) &&

  000f5	83 7d e0 01	 cmp	 DWORD PTR _terrain_class$[ebp], 1
  000f9	0f 85 c4 01 00
	00		 jne	 $LN6@update_end
  000ff	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00103	74 0a		 je	 SHORT $LN10@update_end
  00105	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00108	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010a	89 4d 98	 mov	 DWORD PTR tv143[ebp], ecx
  0010d	eb 1d		 jmp	 SHORT $LN11@update_end
$LN10@update_end:
  0010f	68 87 00 00 00	 push	 135			; 00000087H
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00119	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0011f	52		 push	 edx
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00125	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN11@update_end:
  0012c	b8 01 00 00 00	 mov	 eax, 1
  00131	85 c0		 test	 eax, eax
  00133	74 09		 je	 SHORT $LN12@update_end
  00135	c7 45 94 07 00
	00 00		 mov	 DWORD PTR tv150[ebp], 7
  0013c	eb 1d		 jmp	 SHORT $LN13@update_end
$LN12@update_end:
  0013e	68 87 00 00 00	 push	 135			; 00000087H
  00143	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00148	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0014e	51		 push	 ecx
  0014f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00154	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN13@update_end:
  0015b	6a 07		 push	 7
  0015d	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00160	52		 push	 edx
  00161	69 45 98 5c 04
	00 00		 imul	 eax, DWORD PTR tv143[ebp], 1116
  00168	8b 4d 94	 mov	 ecx, DWORD PTR tv150[ebp]
  0016b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00172	ff d2		 call	 edx
  00174	85 c0		 test	 eax, eax
  00176	0f 85 47 01 00
	00		 jne	 $LN6@update_end
  0017c	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00180	74 0a		 je	 SHORT $LN14@update_end
  00182	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00185	8b 08		 mov	 ecx, DWORD PTR [eax]
  00187	89 4d 98	 mov	 DWORD PTR tv162[ebp], ecx
  0018a	eb 1d		 jmp	 SHORT $LN15@update_end
$LN14@update_end:
  0018c	68 88 00 00 00	 push	 136			; 00000088H
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00196	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019c	52		 push	 edx
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a2	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN15@update_end:
  001a9	b8 01 00 00 00	 mov	 eax, 1
  001ae	85 c0		 test	 eax, eax
  001b0	74 09		 je	 SHORT $LN16@update_end
  001b2	c7 45 94 68 00
	00 00		 mov	 DWORD PTR tv169[ebp], 104 ; 00000068H
  001b9	eb 1d		 jmp	 SHORT $LN17@update_end
$LN16@update_end:
  001bb	68 88 00 00 00	 push	 136			; 00000088H
  001c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001cb	51		 push	 ecx
  001cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d1	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN17@update_end:
  001d8	6a 68		 push	 104			; 00000068H
  001da	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  001dd	52		 push	 edx
  001de	69 45 98 bc 02
	00 00		 imul	 eax, DWORD PTR tv162[ebp], 700
  001e5	8b 4d 94	 mov	 ecx, DWORD PTR tv169[ebp]
  001e8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  001ef	ff d2		 call	 edx
  001f1	dd 5d 8c	 fstp	 QWORD PTR tv377[ebp]
  001f4	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001fc	66 0f 2f 45 8c	 comisd	 xmm0, QWORD PTR tv377[ebp]
  00201	0f 86 bc 00 00
	00		 jbe	 $LN6@update_end

; 136  : 			(get_local_entity_float_value (en, FLOAT_TYPE_RADAR_ALTITUDE) < 1.0)
; 137  : 		)
; 138  : 		{
; 139  : 			raw->position.y = terrain_elevation;

  00207	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0020a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  0020f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 140  : 
; 141  : 			rel_camera_position.x = 0.0;

  00214	0f 57 c0	 xorps	 xmm0, xmm0
  00217	f3 0f 11 45 e4	 movss	 DWORD PTR _rel_camera_position$[ebp], xmm0

; 142  : 			rel_camera_position.y = 0.0;

  0021c	0f 57 c0	 xorps	 xmm0, xmm0
  0021f	f3 0f 11 45 e8	 movss	 DWORD PTR _rel_camera_position$[ebp+4], xmm0

; 143  : 			rel_camera_position.z = -100.0;

  00224	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2c80000
  0022c	f3 0f 11 45 ec	 movss	 DWORD PTR _rel_camera_position$[ebp+8], xmm0

; 144  : 
; 145  : 			heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  00231	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00235	74 0a		 je	 SHORT $LN18@update_end
  00237	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0023a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0023c	89 4d 98	 mov	 DWORD PTR tv185[ebp], ecx
  0023f	eb 21		 jmp	 SHORT $LN19@update_end
$LN18@update_end:
  00241	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00247	83 c2 2e	 add	 edx, 46			; 0000002eH
  0024a	52		 push	 edx
  0024b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00250	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN19@update_end:
  00262	b9 01 00 00 00	 mov	 ecx, 1
  00267	85 c9		 test	 ecx, ecx
  00269	74 09		 je	 SHORT $LN20@update_end
  0026b	c7 45 94 34 00
	00 00		 mov	 DWORD PTR tv193[ebp], 52 ; 00000034H
  00272	eb 21		 jmp	 SHORT $LN21@update_end
$LN20@update_end:
  00274	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  0027a	83 c2 2e	 add	 edx, 46			; 0000002eH
  0027d	52		 push	 edx
  0027e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00283	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN21@update_end:
  00295	6a 34		 push	 52			; 00000034H
  00297	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0029a	51		 push	 ecx
  0029b	69 55 98 bc 02
	00 00		 imul	 edx, DWORD PTR tv185[ebp], 700
  002a2	8b 45 94	 mov	 eax, DWORD PTR tv193[ebp]
  002a5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002ac	ff d1		 call	 ecx
  002ae	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 146  : 
; 147  : 			pitch = rad (-90.0);

  002b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  002b9	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 148  : 		}
; 149  : 		else

  002be	e9 1a 01 00 00	 jmp	 $LN7@update_end
$LN6@update_end:

; 150  : 		{
; 151  : 			rel_camera_position.x = 0.0;

  002c3	0f 57 c0	 xorps	 xmm0, xmm0
  002c6	f3 0f 11 45 e4	 movss	 DWORD PTR _rel_camera_position$[ebp], xmm0

; 152  : 			rel_camera_position.y = 0.0;

  002cb	0f 57 c0	 xorps	 xmm0, xmm0
  002ce	f3 0f 11 45 e8	 movss	 DWORD PTR _rel_camera_position$[ebp+4], xmm0

; 153  : 			rel_camera_position.z = -15.0;

  002d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c1700000
  002db	f3 0f 11 45 ec	 movss	 DWORD PTR _rel_camera_position$[ebp+8], xmm0

; 154  : 
; 155  : 			raw->end_of_mission_camera_heading += rad (30.0) * get_delta_time ();

  002e0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  002e8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0c15236000000
  002f0	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  002f3	f3 0f 5a 88 8c
	00 00 00	 cvtss2sd xmm1, DWORD PTR [eax+140]
  002fb	f2 0f 58 c8	 addsd	 xmm1, xmm0
  002ff	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00303	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00306	f3 0f 11 81 8c
	00 00 00	 movss	 DWORD PTR [ecx+140], xmm0

; 156  : 
; 157  : 			raw->end_of_mission_camera_heading = wrap_angle (raw->end_of_mission_camera_heading);

  0030e	51		 push	 ecx
  0030f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  00317	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0031f	f3 0f 10 80 8c
	00 00 00	 movss	 xmm0, DWORD PTR [eax+140]
  00327	51		 push	 ecx
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  00332	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00335	d9 99 8c 00 00
	00		 fstp	 DWORD PTR [ecx+140]

; 158  : 
; 159  : 			heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING) + raw->end_of_mission_camera_heading;

  0033b	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0033f	74 0a		 je	 SHORT $LN22@update_end
  00341	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00344	8b 08		 mov	 ecx, DWORD PTR [eax]
  00346	89 4d 98	 mov	 DWORD PTR tv218[ebp], ecx
  00349	eb 21		 jmp	 SHORT $LN23@update_end
$LN22@update_end:
  0034b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00351	83 c2 3c	 add	 edx, 60			; 0000003cH
  00354	52		 push	 edx
  00355	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0035f	50		 push	 eax
  00360	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00365	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN23@update_end:
  0036c	b9 01 00 00 00	 mov	 ecx, 1
  00371	85 c9		 test	 ecx, ecx
  00373	74 09		 je	 SHORT $LN24@update_end
  00375	c7 45 94 34 00
	00 00		 mov	 DWORD PTR tv226[ebp], 52 ; 00000034H
  0037c	eb 21		 jmp	 SHORT $LN25@update_end
$LN24@update_end:
  0037e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00384	83 c2 3c	 add	 edx, 60			; 0000003cH
  00387	52		 push	 edx
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00398	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv226[ebp], 0
$LN25@update_end:
  0039f	6a 34		 push	 52			; 00000034H
  003a1	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  003a4	51		 push	 ecx
  003a5	69 55 98 bc 02
	00 00		 imul	 edx, DWORD PTR tv218[ebp], 700
  003ac	8b 45 94	 mov	 eax, DWORD PTR tv226[ebp]
  003af	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003b6	ff d1		 call	 ecx
  003b8	d9 5d 90	 fstp	 DWORD PTR tv423[ebp]
  003bb	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv423[ebp]
  003c0	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  003c3	f3 0f 58 82 8c
	00 00 00	 addss	 xmm0, DWORD PTR [edx+140]
  003cb	f3 0f 11 45 f8	 movss	 DWORD PTR _heading$[ebp], xmm0

; 160  : 
; 161  : 			pitch = rad (-30.0);

  003d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf060a92
  003d8	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$[ebp], xmm0
$LN7@update_end:

; 162  : 		}
; 163  : 	}
; 164  : 	else

  003dd	e9 aa 00 00 00	 jmp	 $LN5@update_end
$LN4@update_end:

; 165  : 	{
; 166  : 		rel_camera_position.x = 0.0;

  003e2	0f 57 c0	 xorps	 xmm0, xmm0
  003e5	f3 0f 11 45 e4	 movss	 DWORD PTR _rel_camera_position$[ebp], xmm0

; 167  : 		rel_camera_position.y = 0.0;

  003ea	0f 57 c0	 xorps	 xmm0, xmm0
  003ed	f3 0f 11 45 e8	 movss	 DWORD PTR _rel_camera_position$[ebp+4], xmm0

; 168  : 		rel_camera_position.z = -100.0;

  003f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2c80000
  003fa	f3 0f 11 45 ec	 movss	 DWORD PTR _rel_camera_position$[ebp+8], xmm0

; 169  : 
; 170  : 		heading = get_local_entity_float_value (en, FLOAT_TYPE_HEADING);

  003ff	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00403	74 0a		 je	 SHORT $LN26@update_end
  00405	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00408	8b 08		 mov	 ecx, DWORD PTR [eax]
  0040a	89 4d 98	 mov	 DWORD PTR tv240[ebp], ecx
  0040d	eb 21		 jmp	 SHORT $LN27@update_end
$LN26@update_end:
  0040f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00415	83 c2 47	 add	 edx, 71			; 00000047H
  00418	52		 push	 edx
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00429	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv240[ebp], 0
$LN27@update_end:
  00430	b9 01 00 00 00	 mov	 ecx, 1
  00435	85 c9		 test	 ecx, ecx
  00437	74 09		 je	 SHORT $LN28@update_end
  00439	c7 45 94 34 00
	00 00		 mov	 DWORD PTR tv248[ebp], 52 ; 00000034H
  00440	eb 21		 jmp	 SHORT $LN29@update_end
$LN28@update_end:
  00442	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00448	83 c2 47	 add	 edx, 71			; 00000047H
  0044b	52		 push	 edx
  0044c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00451	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045c	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv248[ebp], 0
$LN29@update_end:
  00463	6a 34		 push	 52			; 00000034H
  00465	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00468	51		 push	 ecx
  00469	69 55 98 bc 02
	00 00		 imul	 edx, DWORD PTR tv240[ebp], 700
  00470	8b 45 94	 mov	 eax, DWORD PTR tv248[ebp]
  00473	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0047a	ff d1		 call	 ecx
  0047c	d9 5d f8	 fstp	 DWORD PTR _heading$[ebp]

; 171  : 
; 172  : 		pitch = rad (-90.0);

  0047f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  00487	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$[ebp], xmm0
$LN5@update_end:

; 173  : 	}
; 174  : 
; 175  : 	get_3d_transformation_matrix (raw->attitude, heading, pitch, 0.0);

  0048c	51		 push	 ecx
  0048d	0f 57 c0	 xorps	 xmm0, xmm0
  00490	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00495	51		 push	 ecx
  00496	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0049b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a0	51		 push	 ecx
  004a1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  004a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ab	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004ae	83 c0 18	 add	 eax, 24			; 00000018H
  004b1	50		 push	 eax
  004b2	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 176  : 
; 177  : 	multiply_matrix3x3_vec3d (&rel_camera_position, raw->attitude, &rel_camera_position);

  004b7	8d 45 e4	 lea	 eax, DWORD PTR _rel_camera_position$[ebp]
  004ba	50		 push	 eax
  004bb	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004be	83 c1 18	 add	 ecx, 24			; 00000018H
  004c1	51		 push	 ecx
  004c2	8d 55 e4	 lea	 edx, DWORD PTR _rel_camera_position$[ebp]
  004c5	52		 push	 edx
  004c6	e8 00 00 00 00	 call	 ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d

; 178  : 
; 179  : 	raw->position.x += rel_camera_position.x;

  004cb	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004ce	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  004d2	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _rel_camera_position$[ebp]
  004d7	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004da	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 180  : 	raw->position.y += rel_camera_position.y;

  004de	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004e1	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  004e6	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _rel_camera_position$[ebp+4]
  004eb	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  004ee	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 181  : 	raw->position.z += rel_camera_position.z;

  004f3	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  004f6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  004fb	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _rel_camera_position$[ebp+8]
  00500	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00503	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 182  : 
; 183  : 	//
; 184  : 	// keep point above ground (unless point off map)
; 185  : 	//
; 186  : 
; 187  : 	if (point_inside_map_area (&raw->position))

  00508	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0050b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0050f	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00516	0f 82 86 00 00
	00		 jb	 $LN8@update_end
  0051c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0051f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00527	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0052a	72 76		 jb	 SHORT $LN8@update_end
  0052c	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0052f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00534	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0053b	72 65		 jb	 SHORT $LN8@update_end
  0053d	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00540	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00548	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0054c	72 54		 jb	 SHORT $LN8@update_end

; 188  : 	{
; 189  : 		raw->position.y = max (raw->position.y, get_3d_terrain_point_data (raw->position.x, raw->position.z, &raw->terrain_info) + CAMERA_MIN_HEIGHT_ABOVE_GROUND);

  0054e	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  00551	83 c0 50	 add	 eax, 80			; 00000050H
  00554	50		 push	 eax
  00555	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00558	51		 push	 ecx
  00559	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  00566	51		 push	 ecx
  00567	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0056b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00570	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00575	d9 5d 98	 fstp	 DWORD PTR tv479[ebp]
  00578	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv479[ebp]
  0057d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f8ccccd
  00585	f3 0f 11 45 9c	 movss	 DWORD PTR $T1[ebp], xmm0
  0058a	8d 45 9c	 lea	 eax, DWORD PTR $T1[ebp]
  0058d	50		 push	 eax
  0058e	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00591	83 c1 04	 add	 ecx, 4
  00594	51		 push	 ecx
  00595	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0059a	8b 55 08	 mov	 edx, DWORD PTR _raw$[ebp]
  0059d	8b 00		 mov	 eax, DWORD PTR [eax]
  0059f	89 42 04	 mov	 DWORD PTR [edx+4], eax
$LN8@update_end:

; 190  : 	}
; 191  : 
; 192  : 	//
; 193  : 	// motion vector
; 194  : 	//
; 195  : 
; 196  : 	get_local_entity_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &raw->motion_vector);

  005a2	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  005a6	74 0a		 je	 SHORT $LN30@update_end
  005a8	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  005ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ad	89 4d 98	 mov	 DWORD PTR tv313[ebp], ecx
  005b0	eb 21		 jmp	 SHORT $LN31@update_end
$LN30@update_end:
  005b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  005b8	83 c2 61	 add	 edx, 97			; 00000061H
  005bb	52		 push	 edx
  005bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c6	50		 push	 eax
  005c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005cc	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv313[ebp], 0
$LN31@update_end:
  005d3	b9 01 00 00 00	 mov	 ecx, 1
  005d8	85 c9		 test	 ecx, ecx
  005da	74 09		 je	 SHORT $LN32@update_end
  005dc	c7 45 94 06 00
	00 00		 mov	 DWORD PTR tv321[ebp], 6
  005e3	eb 21		 jmp	 SHORT $LN33@update_end
$LN32@update_end:
  005e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  005eb	83 c2 61	 add	 edx, 97			; 00000061H
  005ee	52		 push	 edx
  005ef	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  005f9	50		 push	 eax
  005fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ff	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv321[ebp], 0
$LN33@update_end:
  00606	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00609	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0060c	51		 push	 ecx
  0060d	6a 06		 push	 6
  0060f	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00612	52		 push	 edx
  00613	6b 45 98 60	 imul	 eax, DWORD PTR tv313[ebp], 96
  00617	8b 4d 94	 mov	 ecx, DWORD PTR tv321[ebp]
  0061a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00621	ff d2		 call	 edx

; 197  : }

  00623	5f		 pop	 edi
  00624	5e		 pop	 esi
  00625	5b		 pop	 ebx
  00626	8b e5		 mov	 esp, ebp
  00628	5d		 pop	 ebp
  00629	c2 04 00	 ret	 4
?update_end_of_mission_camera@@YGXPAUCAMERA@@@Z ENDP	; update_end_of_mission_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\camera\cm_end.c
;	COMDAT ?reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z
_TEXT	SEGMENT
tv92 = -72						; size = 4
tv84 = -68						; size = 4
_raw$ = 8						; size = 4
?reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z PROC	; reset_end_of_mission_camera, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT (raw);

  00009	83 7d 08 00	 cmp	 DWORD PTR _raw$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@reset_end_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03DGOGAGNC@raw@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@reset_end_:

; 82   : 
; 83   : 	ASSERT (raw->external_view_entity);

  00027	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0002a	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00031	75 18		 jne	 SHORT $LN3@reset_end_
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIGJPCBN@raw?9?$DOexternal_view_entity@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@reset_end_:

; 84   : 
; 85   : 	raw->end_of_mission_camera_heading = 0.0;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0004e	0f 57 c0	 xorps	 xmm0, xmm0
  00051	f3 0f 11 80 8c
	00 00 00	 movss	 DWORD PTR [eax+140], xmm0

; 86   : 
; 87   : 	//
; 88   : 	// motion vector
; 89   : 	//
; 90   : 
; 91   : 	get_local_entity_vec3d (raw->external_view_entity, VEC3D_TYPE_MOTION_VECTOR, &raw->motion_vector);

  00059	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  0005c	83 b8 24 01 00
	00 00		 cmp	 DWORD PTR [eax+292], 0
  00063	74 10		 je	 SHORT $LN5@reset_end_
  00065	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  00068	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  0006e	8b 02		 mov	 eax, DWORD PTR [edx]
  00070	89 45 bc	 mov	 DWORD PTR tv84[ebp], eax
  00073	eb 22		 jmp	 SHORT $LN6@reset_end_
$LN5@reset_end_:
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  0007b	83 c1 0b	 add	 ecx, 11			; 0000000bH
  0007e	51		 push	 ecx
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008a	52		 push	 edx
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN6@reset_end_:
  00097	b8 01 00 00 00	 mov	 eax, 1
  0009c	85 c0		 test	 eax, eax
  0009e	74 09		 je	 SHORT $LN7@reset_end_
  000a0	c7 45 b8 06 00
	00 00		 mov	 DWORD PTR tv92[ebp], 6
  000a7	eb 22		 jmp	 SHORT $LN8@reset_end_
$LN7@reset_end_:
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z@4JA
  000af	83 c1 0b	 add	 ecx, 11			; 0000000bH
  000b2	51		 push	 ecx
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@MCNIAPBM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN8@reset_end_:
  000cb	8b 45 08	 mov	 eax, DWORD PTR _raw$[ebp]
  000ce	83 c0 0c	 add	 eax, 12			; 0000000cH
  000d1	50		 push	 eax
  000d2	6a 06		 push	 6
  000d4	8b 4d 08	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d7	8b 91 24 01 00
	00		 mov	 edx, DWORD PTR [ecx+292]
  000dd	52		 push	 edx
  000de	6b 45 bc 60	 imul	 eax, DWORD PTR tv84[ebp], 96
  000e2	8b 4d b8	 mov	 ecx, DWORD PTR tv92[ebp]
  000e5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  000ec	ff d2		 call	 edx

; 92   : }

  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	8b e5		 mov	 esp, ebp
  000f3	5d		 pop	 ebp
  000f4	c2 04 00	 ret	 4
?reset_end_of_mission_camera@@YGXPAUCAMERA@@@Z ENDP	; reset_end_of_mission_camera
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
END
