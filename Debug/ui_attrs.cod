; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_sys\ui_attrs\ui_attrs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z ; set_ui_object_attributes
PUBLIC	?__LINE__Var@?0??set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z@4JA ; `set_ui_object_attributes'::`1'::__LINE__Var
PUBLIC	??_C@_0EJ@NJPIKIDM@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_03GJLPFLNF@obj@				; `string'
PUBLIC	??_C@_0CB@BDBMBHAN@Invalid?5ui_object?5attribute?5?$DN?5?$CF@ ; `string'
PUBLIC	__real@3f98000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4028000000000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?create_screen@@YGPAUSCREEN@@HHH@Z:PROC		; create_screen
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?get_screen_height@@YGHPAUSCREEN@@@Z:PROC	; get_screen_height
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?ui_object_close_box_function@@YGXPAUUI_OBJECT@@PAX@Z:PROC ; ui_object_close_box_function
EXTRN	?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z:PROC ; ui_object_list_item_function
EXTRN	?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z:PROC ; ui_object_list_item_right_function
EXTRN	?get_next_list_position@@YGMPAUUI_OBJECT@@@Z:PROC ; get_next_list_position
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_end
EXTRN	?fn_set_ui_object_y_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_end
EXTRN	?fn_set_ui_object_x_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_start
EXTRN	?fn_set_ui_object_y_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_start
EXTRN	?fn_set_ui_object_cx@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_cx
EXTRN	?fn_set_ui_object_cy@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_cy
EXTRN	?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_x
EXTRN	?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_x_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size_end
EXTRN	?fn_set_ui_object_y_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size_end
EXTRN	?fn_set_ui_object_x_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size_start
EXTRN	?fn_set_ui_object_y_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size_start
EXTRN	?fn_set_ui_object_virtual_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_x_size
EXTRN	?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y_size
EXTRN	?fn_set_ui_object_x_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_origin
EXTRN	?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_origin
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_set_ui_object_autosize@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_autosize
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_set_ui_object_moveable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_moveable
EXTRN	?fn_set_ui_object_resizeable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_resizeable
EXTRN	?fn_set_ui_object_list_item@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_list_item
EXTRN	?fn_set_ui_object_item_number@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_item_number
EXTRN	?fn_set_ui_object_item_number2@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_item_number2
EXTRN	?fn_set_ui_object_clear@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_clear
EXTRN	?fn_set_ui_object_global@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_global
EXTRN	?fn_set_ui_object_user_flag1@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_user_flag1
EXTRN	?fn_set_ui_object_user_flag2@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_user_flag2
EXTRN	?fn_set_ui_object_user_flag3@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_user_flag3
EXTRN	?fn_set_ui_object_user_flag4@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_user_flag4
EXTRN	?fn_set_ui_object_list_box_y_space@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_list_box_y_space
EXTRN	?fn_set_ui_object_virtual_coords@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_virtual_coords
EXTRN	?fn_set_ui_object_tool_tips_timer@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_tool_tips_timer
EXTRN	?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_highlightable
EXTRN	?fn_set_ui_object_highlighted@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_highlighted
EXTRN	?fn_set_ui_object_t_value@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_t_value
EXTRN	?fn_set_ui_object_time_length@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_time_length
EXTRN	?fn_set_ui_object_start_time@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_start_time
EXTRN	?fn_set_ui_object_offset_time@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_offset_time
EXTRN	?fn_set_ui_object_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_colour_end
EXTRN	?fn_set_ui_object_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_colour_start
EXTRN	?fn_set_ui_object_colour_gradient_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_colour_gradient_end
EXTRN	?fn_set_ui_object_colour_gradient_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_colour_gradient_start
EXTRN	?fn_set_ui_object_association@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_association
EXTRN	?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_parent
EXTRN	?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_child
EXTRN	?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_next
EXTRN	?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_prev
EXTRN	?fn_set_ui_object_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_function
EXTRN	?fn_set_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_right_function
EXTRN	?fn_set_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_draw_function
EXTRN	?fn_set_ui_object_highlighted_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_highlighted_function
EXTRN	?fn_set_ui_object_notify_on@@3PAP6GXPAUUI_OBJECT@@W4NOTIFY_TYPES@@@ZA:BYTE ; fn_set_ui_object_notify_on
EXTRN	?fn_set_ui_object_highlighted_notify_on@@3PAP6GXPAUUI_OBJECT@@W4NOTIFY_TYPES@@@ZA:BYTE ; fn_set_ui_object_highlighted_notify_on
EXTRN	?fn_set_ui_object_user_ptr@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_set_ui_object_user_ptr
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_set_ui_object_add_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_add_text
EXTRN	?fn_set_ui_object_text_justify@@3PAP6GXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@ZA:BYTE ; fn_set_ui_object_text_justify
EXTRN	?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_font_type
EXTRN	?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour_end
EXTRN	?fn_set_ui_object_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_font_colour_start
EXTRN	?fn_set_ui_object_highlighted_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_highlighted_font_type
EXTRN	?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_highlighted_font_colour_end
EXTRN	?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_highlighted_font_colour_start
EXTRN	?fn_set_ui_object_selected_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA:BYTE ; fn_set_ui_object_selected_font_type
EXTRN	?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_selected_font_colour_end
EXTRN	?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA:BYTE ; fn_set_ui_object_selected_font_colour_start
EXTRN	?fn_set_ui_object_tool_tips@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_tool_tips
EXTRN	?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA:BYTE ; fn_set_ui_object_graphic
EXTRN	?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_texture_graphic
EXTRN	?fn_set_ui_object_highlighted_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_highlighted_texture_graphic
EXTRN	?fn_set_ui_object_selected_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_selected_texture_graphic
EXTRN	?fn_set_ui_object_active_screen@@3PAP6GXPAUUI_OBJECT@@PAUSCREEN@@@ZA:BYTE ; fn_set_ui_object_active_screen
EXTRN	?fn_set_ui_object_memory_graphic@@3PAP6GXPAUUI_OBJECT@@PAUSCREEN@@@ZA:BYTE ; fn_set_ui_object_memory_graphic
EXTRN	?fn_set_ui_object_zoomable_palette_graphic@@3PAP6GXPAUUI_OBJECT@@PAUZOOMABLE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_zoomable_palette_graphic
EXTRN	?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_graphic_type
EXTRN	?fn_set_ui_object_graphic_zoom@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_graphic_zoom
EXTRN	?fn_set_ui_object_slider_min@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_slider_min
EXTRN	?fn_set_ui_object_slider_max@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_slider_max
EXTRN	?fn_set_ui_object_slider_inc@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_slider_inc
EXTRN	__fltused:DWORD
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f98000000000000
CONST	SEGMENT
__real@3f98000000000000 DQ 03f98000000000000r	; 0.0234375
CONST	ENDS
;	COMDAT ??_C@_0CB@BDBMBHAN@Invalid?5ui_object?5attribute?5?$DN?5?$CF@
CONST	SEGMENT
??_C@_0CB@BDBMBHAN@Invalid?5ui_object?5attribute?5?$DN?5?$CF@ DB 'Invalid'
	DB	' ui_object attribute = %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GJLPFLNF@obj@
CONST	SEGMENT
??_C@_03GJLPFLNF@obj@ DB 'obj', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@NJPIKIDM@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0EJ@NJPIKIDM@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\userint2\ui_sys\ui_attrs\ui_attrs.c'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z@4JA DD 052H ; `set_ui_object_attributes'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_attrs\ui_attrs.c
;	COMDAT ?set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z
_TEXT	SEGMENT
tv2987 = -564						; size = 4
tv2978 = -564						; size = 4
tv3020 = -560						; size = 4
tv3018 = -560						; size = 4
tv134 = -560						; size = 4
tv72 = -560						; size = 4
_graphic$1 = -492					; size = 4
_py_size$2 = -488					; size = 4
_px_size$3 = -484					; size = 4
_inc$4 = -480						; size = 4
_max$5 = -476						; size = 4
_min$6 = -472						; size = 4
_vslider$7 = -468					; size = 4
_pos$8 = -464						; size = 8
_pos$9 = -456						; size = 8
_flag$10 = -448						; size = 4
_ptr$11 = -444						; size = 4
_flag$12 = -440						; size = 4
_flag$13 = -436						; size = 4
_flag$14 = -432						; size = 4
_flag$15 = -428						; size = 4
_t_value$16 = -424					; size = 4
_tool_tips_timer$17 = -420				; size = 4
_tool_tips$18 = -416					; size = 4
_time_length$19 = -412					; size = 4
_time_offset$20 = -408					; size = 4
_time_length$21 = -404					; size = 4
_graphic$22 = -400					; size = 4
_justify$23 = -396					; size = 4
_text$24 = -392						; size = 4
_state$25 = -388					; size = 4
_start_time$26 = -384					; size = 4
_inc$27 = -380						; size = 4
_max$28 = -376						; size = 4
_min$29 = -372						; size = 4
_pos$30 = -368						; size = 8
_pos$31 = -360						; size = 8
_pos$32 = -352						; size = 8
_graphic$33 = -344					; size = 4
_font_id$34 = -340					; size = 4
_rc$35 = -336						; size = 4
_rc$36 = -332						; size = 4
_rc$37 = -328						; size = 4
_rc$38 = -324						; size = 4
_rc$39 = -320						; size = 4
_rc$40 = -316						; size = 4
_function$41 = -312					; size = 4
_flag$42 = -308						; size = 4
_flag$43 = -304						; size = 4
_pos$44 = -300						; size = 8
_pos$45 = -292						; size = 8
_pos$46 = -284						; size = 8
_prev$47 = -276						; size = 4
_parent$48 = -272					; size = 4
_pos$49 = -268						; size = 8
_offset_time$50 = -260					; size = 4
_event$51 = -256					; size = 4
_next$52 = -252						; size = 4
_inc$53 = -248						; size = 4
_max$54 = -244						; size = 4
_min$55 = -240						; size = 4
_y_size$56 = -236					; size = 4
_x_size$57 = -232					; size = 4
_y$58 = -228						; size = 4
_x$59 = -224						; size = 4
_flag$60 = -220						; size = 4
_sc$61 = -216						; size = 4
_area$62 = -212						; size = 4
_height$63 = -208					; size = 4
_width$64 = -204					; size = 4
_number$65 = -200					; size = 4
_number$66 = -196					; size = 4
_y_space$67 = -192					; size = 8
_graphic$68 = -184					; size = 4
_event$69 = -180					; size = 4
_function$70 = -176					; size = 4
_rc$71 = -172						; size = 4
_rc$72 = -168						; size = 4
_rc$73 = -164						; size = 4
_font_id$74 = -160					; size = 4
_rc$75 = -156						; size = 4
_rc$76 = -152						; size = 4
_rc$77 = -148						; size = 4
_highlighted$78 = -144					; size = 4
_highlightable$79 = -140				; size = 4
_zoom$80 = -136						; size = 4
_cy$81 = -132						; size = 8
_cx$82 = -124						; size = 8
_graphic$83 = -116					; size = 4
_flag$84 = -112						; size = 4
_function$85 = -108					; size = 4
_rc$86 = -104						; size = 4
_rc$87 = -100						; size = 4
_rc$88 = -96						; size = 4
_font_id$89 = -92					; size = 4
_flag$90 = -88						; size = 4
_function$91 = -84					; size = 4
_rc$92 = -80						; size = 4
_rc$93 = -76						; size = 4
_rc$94 = -72						; size = 4
_rc$95 = -68						; size = 4
_rc$96 = -64						; size = 4
_rc$97 = -60						; size = 4
_flag$98 = -56						; size = 4
_child$99 = -52						; size = 4
_autosize$100 = -48					; size = 4
_association$101 = -44					; size = 4
_graphic$102 = -40					; size = 4
_text$103 = -36						; size = 4
_type$104 = -32						; size = 4
_new_position$105 = -28					; size = 4
_y_size$106 = -24					; size = 4
_x_size$107 = -20					; size = 4
_notify$108 = -16					; size = 4
_text$109 = -12						; size = 4
_active_screen$110 = -8					; size = 4
_attr$ = -4						; size = 4
_obj$ = 8						; size = 4
_pargs$ = 12						; size = 4
?set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z PROC	; set_ui_object_attributes, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 02 00
	00		 sub	 esp, 564		; 00000234H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 83   : 
; 84   :    ui_object_attributes
; 85   :       attr;
; 86   : 
; 87   :    ASSERT (obj);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@set_ui_obj
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z@4JA
  00017	83 c0 05	 add	 eax, 5
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EJ@NJPIKIDM@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@set_ui_obj:

; 88   : 
; 89   :    while (TRUE)

  0002a	b8 01 00 00 00	 mov	 eax, 1
  0002f	85 c0		 test	 eax, eax
  00031	0f 84 ca 20 00
	00		 je	 $LN3@set_ui_obj

; 90   :    {
; 91   : 
; 92   :       attr = va_arg (pargs, ui_object_attributes);

  00037	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0003a	83 c0 04	 add	 eax, 4
  0003d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00040	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00043	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00046	89 55 fc	 mov	 DWORD PTR _attr$[ebp], edx

; 93   : 
; 94   :       switch (attr)

  00049	8b 45 fc	 mov	 eax, DWORD PTR _attr$[ebp]
  0004c	89 85 d0 fd ff
	ff		 mov	 DWORD PTR tv72[ebp], eax
  00052	83 bd d0 fd ff
	ff 5b		 cmp	 DWORD PTR tv72[ebp], 91	; 0000005bH
  00059	0f 87 8c 20 00
	00		 ja	 $LN100@set_ui_obj
  0005f	8b 8d d0 fd ff
	ff		 mov	 ecx, DWORD PTR tv72[ebp]
  00065	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN104@set_ui_obj[ecx*4]
$LN7@set_ui_obj:

; 95   :       {
; 96   : 
; 97   :          ////////////////////////////////////////
; 98   :          case ui_attr_active_screen:
; 99   :          ////////////////////////////////////////
; 100  :          {
; 101  : 
; 102  : 				struct SCREEN
; 103  : 					*active_screen;
; 104  : 
; 105  :             active_screen = va_arg (pargs, struct SCREEN *);

  0006c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0006f	83 c0 04	 add	 eax, 4
  00072	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00075	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00078	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0007b	89 55 f8	 mov	 DWORD PTR _active_screen$110[ebp], edx

; 106  : 
; 107  :             set_ui_object_active_screen (obj, (struct SCREEN *) active_screen);

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _active_screen$110[ebp]
  00081	50		 push	 eax
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00085	51		 push	 ecx
  00086	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00089	8b 02		 mov	 eax, DWORD PTR [edx]
  0008b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_active_screen@@3PAP6GXPAUUI_OBJECT@@PAUSCREEN@@@ZA[eax*4]
  00092	ff d1		 call	 ecx

; 108  : 
; 109  :             break;

  00094	e9 63 20 00 00	 jmp	 $LN4@set_ui_obj
$LN8@set_ui_obj:

; 110  :          }
; 111  : 
; 112  : 			////////////////////////////////////////
; 113  :          case ui_attr_add_text:
; 114  :          ////////////////////////////////////////
; 115  :          {
; 116  : 
; 117  :             const char
; 118  :                *text;
; 119  : 
; 120  :             text = va_arg (pargs, const char *);

  00099	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0009c	83 c0 04	 add	 eax, 4
  0009f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  000a2	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  000a5	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  000a8	89 55 f4	 mov	 DWORD PTR _text$109[ebp], edx

; 121  : 
; 122  :             set_ui_object_add_text (obj, text);

  000ab	8b 45 f4	 mov	 eax, DWORD PTR _text$109[ebp]
  000ae	50		 push	 eax
  000af	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000b2	51		 push	 ecx
  000b3	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  000b6	8b 02		 mov	 eax, DWORD PTR [edx]
  000b8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_add_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  000bf	ff d1		 call	 ecx

; 123  : 
; 124  :             break;

  000c1	e9 36 20 00 00	 jmp	 $LN4@set_ui_obj
$LN9@set_ui_obj:

; 125  :          }
; 126  : 
; 127  : 			////////////////////////////////////////
; 128  : 			case ui_attr_add_list_item:
; 129  : 			////////////////////////////////////////
; 130  : 			{
; 131  : 
; 132  : 				notify_types
; 133  : 					notify;
; 134  : 
; 135  : 				float
; 136  : 					x_size,
; 137  : 					y_size,
; 138  : 					new_position;
; 139  : 
; 140  : 				ui_object_types
; 141  : 					type;
; 142  : 
; 143  : 				const char
; 144  : 					*text;
; 145  : 
; 146  : 				type = va_arg (pargs, ui_object_types);

  000c6	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  000c9	83 c0 04	 add	 eax, 4
  000cc	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  000d2	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  000d5	89 55 e0	 mov	 DWORD PTR _type$104[ebp], edx

; 147  : 
; 148  : 				text = va_arg (pargs, const char *);

  000d8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  000db	83 c0 04	 add	 eax, 4
  000de	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  000e1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  000e4	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  000e7	89 55 dc	 mov	 DWORD PTR _text$103[ebp], edx

; 149  : 
; 150  : 				x_size = get_ui_object_x_size (obj);

  000ea	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000ed	50		 push	 eax
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000fa	ff d0		 call	 eax
  000fc	d9 5d ec	 fstp	 DWORD PTR _x_size$107[ebp]

; 151  : 
; 152  : 				y_size = ui_get_font_height () + LIST_ITEM_SPACING;

  000ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00104	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00107	83 c1 04	 add	 ecx, 4
  0010a	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0010e	f3 0f 11 45 e8	 movss	 DWORD PTR _y_size$106[ebp], xmm0

; 153  : 
; 154  : 				new_position = get_next_list_position (obj);

  00113	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?get_next_list_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_position
  0011c	d9 5d e4	 fstp	 DWORD PTR _new_position$105[ebp]

; 155  : 
; 156  : 				notify = (type == UI_TYPE_TEXT) ? NOTIFY_TYPE_BUTTON_EITHER : NOTIFY_TYPE_BUTTON_UP;

  0011f	83 7d e0 05	 cmp	 DWORD PTR _type$104[ebp], 5
  00123	75 0c		 jne	 SHORT $LN102@set_ui_obj
  00125	c7 85 d0 fd ff
	ff 03 00 00 00	 mov	 DWORD PTR tv134[ebp], 3
  0012f	eb 0a		 jmp	 SHORT $LN103@set_ui_obj
$LN102@set_ui_obj:
  00131	c7 85 d0 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR tv134[ebp], 1
$LN103@set_ui_obj:
  0013b	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  00141	89 45 f0	 mov	 DWORD PTR _notify$108[ebp], eax

; 157  : 
; 158  : 				create_ui_object

  00144	6a 11		 push	 17			; 00000011H
  00146	68 00 00 00 00	 push	 OFFSET ?ui_object_list_item_right_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_right_function
  0014b	6a 39		 push	 57			; 00000039H
  0014d	68 00 00 00 00	 push	 OFFSET ?ui_object_list_item_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_list_item_function
  00152	6a 16		 push	 22			; 00000016H
  00154	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _new_position$105[ebp]
  00159	83 ec 08	 sub	 esp, 8
  0015c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00161	83 ec 08	 sub	 esp, 8
  00164	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4028000000000000
  0016c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00171	6a 34		 push	 52			; 00000034H
  00173	8b 45 f0	 mov	 eax, DWORD PTR _notify$108[ebp]
  00176	50		 push	 eax
  00177	6a 2f		 push	 47			; 0000002fH
  00179	6a 28		 push	 40			; 00000028H
  0017b	8b 4d dc	 mov	 ecx, DWORD PTR _text$103[ebp]
  0017e	51		 push	 ecx
  0017f	6a 4a		 push	 74			; 0000004aH
  00181	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _y_size$106[ebp]
  00186	83 ec 08	 sub	 esp, 8
  00189	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0018e	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _x_size$107[ebp]
  00193	83 ec 08	 sub	 esp, 8
  00196	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0019b	6a 42		 push	 66			; 00000042H
  0019d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001a0	52		 push	 edx
  001a1	6a 32		 push	 50			; 00000032H
  001a3	8b 45 e0	 mov	 eax, DWORD PTR _type$104[ebp]
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  001ac	83 c4 5c	 add	 esp, 92			; 0000005cH

; 159  : 					(
; 160  : 						type,
; 161  : 						UI_ATTR_PARENT (obj),
; 162  : 						UI_ATTR_SIZE (x_size, y_size),
; 163  : 						UI_ATTR_TEXT (text),
; 164  : 						UI_ATTR_LIST_ITEM,
; 165  : 						UI_ATTR_NOTIFY_ON (notify),
; 166  : 						UI_ATTR_POSITION (LIST_ITEM_SPACING * 3, new_position),
; 167  : 						UI_ATTR_FUNCTION (ui_object_list_item_function),
; 168  : 						UI_ATTR_RIGHT_FUNCTION (ui_object_list_item_right_function),
; 169  : 						UI_ATTR_END
; 170  : 					);
; 171  : 
; 172  : 				break;

  001af	e9 48 1f 00 00	 jmp	 $LN4@set_ui_obj
$LN10@set_ui_obj:

; 173  : 			}
; 174  : 
; 175  : 			////////////////////////////////////////
; 176  :          case ui_attr_alpha_graphic:
; 177  :          ////////////////////////////////////////
; 178  :          {
; 179  : 
; 180  : 				int 
; 181  : 					graphic;
; 182  : 
; 183  :             graphic = va_arg (pargs, int);

  001b4	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  001b7	83 c0 04	 add	 eax, 4
  001ba	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  001bd	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  001c0	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  001c3	89 55 d8	 mov	 DWORD PTR _graphic$102[ebp], edx

; 184  : 
; 185  :             set_ui_object_graphic (obj, (unsigned short int *) graphic);

  001c6	8b 45 d8	 mov	 eax, DWORD PTR _graphic$102[ebp]
  001c9	50		 push	 eax
  001ca	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001cd	51		 push	 ecx
  001ce	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001d1	8b 02		 mov	 eax, DWORD PTR [edx]
  001d3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[eax*4]
  001da	ff d1		 call	 ecx

; 186  : 
; 187  : 				set_ui_object_graphic_type (obj, UI_OBJECT_ALPHA_GRAPHIC);

  001dc	6a 03		 push	 3
  001de	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001e1	50		 push	 eax
  001e2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001ee	ff d0		 call	 eax

; 188  : 
; 189  :             break;

  001f0	e9 07 1f 00 00	 jmp	 $LN4@set_ui_obj
$LN11@set_ui_obj:

; 190  :          }
; 191  : 			////////////////////////////////////////
; 192  :          case ui_attr_association:
; 193  :          ////////////////////////////////////////
; 194  :          {
; 195  : 
; 196  : 	         ui_object
; 197  :                *association;
; 198  : 
; 199  :             association = (ui_object *) va_arg (pargs, int);

  001f5	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  001f8	83 c0 04	 add	 eax, 4
  001fb	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  001fe	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00201	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00204	89 55 d4	 mov	 DWORD PTR _association$101[ebp], edx

; 200  : 
; 201  :             set_ui_object_association (obj, association);

  00207	8b 45 d4	 mov	 eax, DWORD PTR _association$101[ebp]
  0020a	50		 push	 eax
  0020b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0020e	51		 push	 ecx
  0020f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00212	8b 02		 mov	 eax, DWORD PTR [edx]
  00214	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_association@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  0021b	ff d1		 call	 ecx

; 202  : 
; 203  :             break;

  0021d	e9 da 1e 00 00	 jmp	 $LN4@set_ui_obj
$LN12@set_ui_obj:

; 204  :          }
; 205  : 
; 206  : 			////////////////////////////////////////
; 207  :          case ui_attr_autosize:
; 208  :          ////////////////////////////////////////
; 209  :          {
; 210  : 
; 211  :             int
; 212  :                autosize;
; 213  : 
; 214  :             autosize = va_arg (pargs, int);

  00222	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00225	83 c0 04	 add	 eax, 4
  00228	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0022b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0022e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00231	89 55 d0	 mov	 DWORD PTR _autosize$100[ebp], edx

; 215  : 
; 216  :             set_ui_object_autosize (obj, autosize);

  00234	8b 45 d0	 mov	 eax, DWORD PTR _autosize$100[ebp]
  00237	50		 push	 eax
  00238	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0023b	51		 push	 ecx
  0023c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0023f	8b 02		 mov	 eax, DWORD PTR [edx]
  00241	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_autosize@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00248	ff d1		 call	 ecx

; 217  : 
; 218  :             break;

  0024a	e9 ad 1e 00 00	 jmp	 $LN4@set_ui_obj
$LN13@set_ui_obj:

; 219  :          }
; 220  : 
; 221  : 			////////////////////////////////////////
; 222  :          case ui_attr_child:
; 223  :          ////////////////////////////////////////
; 224  :          {
; 225  : 
; 226  : 		      ui_object
; 227  :                *child;
; 228  : 
; 229  :             child = (ui_object *) va_arg (pargs, int);

  0024f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00252	83 c0 04	 add	 eax, 4
  00255	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00258	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0025b	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0025e	89 55 cc	 mov	 DWORD PTR _child$99[ebp], edx

; 230  : 
; 231  :             set_ui_object_child (obj, child);

  00261	8b 45 cc	 mov	 eax, DWORD PTR _child$99[ebp]
  00264	50		 push	 eax
  00265	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00268	51		 push	 ecx
  00269	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0026c	8b 02		 mov	 eax, DWORD PTR [edx]
  0026e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_child@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  00275	ff d1		 call	 ecx

; 232  : 
; 233  :             break;

  00277	e9 80 1e 00 00	 jmp	 $LN4@set_ui_obj
$LN14@set_ui_obj:

; 234  :          }
; 235  : 
; 236  : 			////////////////////////////////////////
; 237  :          case ui_attr_clear:
; 238  :          ////////////////////////////////////////
; 239  :          {
; 240  : 
; 241  :             int
; 242  :                flag;
; 243  : 
; 244  :             flag = va_arg (pargs, int);

  0027c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0027f	83 c0 04	 add	 eax, 4
  00282	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00285	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00288	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0028b	89 55 c8	 mov	 DWORD PTR _flag$98[ebp], edx

; 245  : 
; 246  :             set_ui_object_clear (obj, flag);

  0028e	8b 45 c8	 mov	 eax, DWORD PTR _flag$98[ebp]
  00291	50		 push	 eax
  00292	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00295	51		 push	 ecx
  00296	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00299	8b 02		 mov	 eax, DWORD PTR [edx]
  0029b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_clear@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  002a2	ff d1		 call	 ecx

; 247  : 
; 248  :             break;

  002a4	e9 53 1e 00 00	 jmp	 $LN4@set_ui_obj
$LN15@set_ui_obj:

; 249  :          }
; 250  : 
; 251  : 			////////////////////////////////////////
; 252  :          case ui_attr_close_box:
; 253  :          ////////////////////////////////////////
; 254  :          {
; 255  : 
; 256  :             create_ui_object

  002a9	6a 11		 push	 17			; 00000011H
  002ab	68 00 00 00 00	 push	 OFFSET ?ui_object_close_box_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_close_box_function
  002b0	6a 16		 push	 22			; 00000016H
  002b2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002b5	50		 push	 eax
  002b6	6a 32		 push	 50			; 00000032H
  002b8	6a 07		 push	 7
  002ba	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  002bf	83 c4 18	 add	 esp, 24			; 00000018H

; 257  : 					(
; 258  : 						UI_TYPE_CLOSE_BOX,
; 259  : 						UI_ATTR_PARENT (obj),
; 260  : 						UI_ATTR_FUNCTION (ui_object_close_box_function),
; 261  : 						UI_ATTR_END
; 262  : 					);
; 263  : 
; 264  :             break;

  002c2	e9 35 1e 00 00	 jmp	 $LN4@set_ui_obj
$LN16@set_ui_obj:

; 265  :          }
; 266  : 
; 267  : 			////////////////////////////////////////
; 268  : 			case ui_attr_colour:
; 269  : 			////////////////////////////////////////
; 270  : 			{
; 271  : 
; 272  : 				real_colour
; 273  : 					rc;
; 274  : 
; 275  : 				rc.red = va_arg (pargs, int);

  002c7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  002ca	83 c0 04	 add	 eax, 4
  002cd	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  002d0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  002d3	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  002d6	88 55 c6	 mov	 BYTE PTR _rc$97[ebp+2], dl

; 276  : 				rc.green = va_arg (pargs, int);

  002d9	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  002dc	83 c0 04	 add	 eax, 4
  002df	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  002e2	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  002e5	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  002e8	88 55 c5	 mov	 BYTE PTR _rc$97[ebp+1], dl

; 277  : 				rc.blue = va_arg (pargs, int);

  002eb	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  002ee	83 c0 04	 add	 eax, 4
  002f1	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  002f4	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  002f7	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  002fa	88 55 c4	 mov	 BYTE PTR _rc$97[ebp], dl

; 278  : 				rc.alpha = va_arg (pargs, int);

  002fd	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00300	83 c0 04	 add	 eax, 4
  00303	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00306	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00309	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0030c	88 55 c7	 mov	 BYTE PTR _rc$97[ebp+3], dl

; 279  : 
; 280  : 				set_ui_object_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  0030f	0f b6 45 c7	 movzx	 eax, BYTE PTR _rc$97[ebp+3]
  00313	50		 push	 eax
  00314	0f b6 4d c4	 movzx	 ecx, BYTE PTR _rc$97[ebp]
  00318	51		 push	 ecx
  00319	0f b6 55 c5	 movzx	 edx, BYTE PTR _rc$97[ebp+1]
  0031d	52		 push	 edx
  0031e	0f b6 45 c6	 movzx	 eax, BYTE PTR _rc$97[ebp+2]
  00322	50		 push	 eax
  00323	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00326	51		 push	 ecx
  00327	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0032a	8b 02		 mov	 eax, DWORD PTR [edx]
  0032c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00333	ff d1		 call	 ecx

; 281  : 				set_ui_object_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00335	0f b6 45 c7	 movzx	 eax, BYTE PTR _rc$97[ebp+3]
  00339	50		 push	 eax
  0033a	0f b6 4d c4	 movzx	 ecx, BYTE PTR _rc$97[ebp]
  0033e	51		 push	 ecx
  0033f	0f b6 55 c5	 movzx	 edx, BYTE PTR _rc$97[ebp+1]
  00343	52		 push	 edx
  00344	0f b6 45 c6	 movzx	 eax, BYTE PTR _rc$97[ebp+2]
  00348	50		 push	 eax
  00349	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0034c	51		 push	 ecx
  0034d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00350	8b 02		 mov	 eax, DWORD PTR [edx]
  00352	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00359	ff d1		 call	 ecx

; 282  : 
; 283  : 				break;

  0035b	e9 9c 1d 00 00	 jmp	 $LN4@set_ui_obj
$LN17@set_ui_obj:

; 284  : 			}
; 285  : 
; 286  : 			////////////////////////////////////////
; 287  : 			case ui_attr_colour_end:
; 288  : 			////////////////////////////////////////
; 289  : 			{
; 290  : 
; 291  : 				real_colour
; 292  : 					rc;
; 293  : 
; 294  : 				rc.red = va_arg (pargs, int);

  00360	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00363	83 c0 04	 add	 eax, 4
  00366	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00369	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0036c	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0036f	88 55 c2	 mov	 BYTE PTR _rc$96[ebp+2], dl

; 295  : 				rc.green = va_arg (pargs, int);

  00372	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00375	83 c0 04	 add	 eax, 4
  00378	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0037b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0037e	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00381	88 55 c1	 mov	 BYTE PTR _rc$96[ebp+1], dl

; 296  : 				rc.blue = va_arg (pargs, int);

  00384	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00387	83 c0 04	 add	 eax, 4
  0038a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0038d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00390	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00393	88 55 c0	 mov	 BYTE PTR _rc$96[ebp], dl

; 297  : 				rc.alpha = va_arg (pargs, int);

  00396	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00399	83 c0 04	 add	 eax, 4
  0039c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0039f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003a2	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  003a5	88 55 c3	 mov	 BYTE PTR _rc$96[ebp+3], dl

; 298  : 
; 299  : 				set_ui_object_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  003a8	0f b6 45 c3	 movzx	 eax, BYTE PTR _rc$96[ebp+3]
  003ac	50		 push	 eax
  003ad	0f b6 4d c0	 movzx	 ecx, BYTE PTR _rc$96[ebp]
  003b1	51		 push	 ecx
  003b2	0f b6 55 c1	 movzx	 edx, BYTE PTR _rc$96[ebp+1]
  003b6	52		 push	 edx
  003b7	0f b6 45 c2	 movzx	 eax, BYTE PTR _rc$96[ebp+2]
  003bb	50		 push	 eax
  003bc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003bf	51		 push	 ecx
  003c0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003c3	8b 02		 mov	 eax, DWORD PTR [edx]
  003c5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  003cc	ff d1		 call	 ecx

; 300  : 
; 301  : 				break;

  003ce	e9 29 1d 00 00	 jmp	 $LN4@set_ui_obj
$LN18@set_ui_obj:

; 302  : 			}
; 303  : 			
; 304  : 			////////////////////////////////////////
; 305  : 			case ui_attr_colour_start:
; 306  : 			////////////////////////////////////////
; 307  : 			{
; 308  : 
; 309  : 				real_colour
; 310  : 					rc;
; 311  : 
; 312  : 				rc.red = va_arg (pargs, int);

  003d3	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  003d6	83 c0 04	 add	 eax, 4
  003d9	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  003dc	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003df	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  003e2	88 55 be	 mov	 BYTE PTR _rc$95[ebp+2], dl

; 313  : 				rc.green = va_arg (pargs, int);

  003e5	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  003e8	83 c0 04	 add	 eax, 4
  003eb	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  003ee	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003f1	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  003f4	88 55 bd	 mov	 BYTE PTR _rc$95[ebp+1], dl

; 314  : 				rc.blue = va_arg (pargs, int);

  003f7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  003fa	83 c0 04	 add	 eax, 4
  003fd	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00400	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00403	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00406	88 55 bc	 mov	 BYTE PTR _rc$95[ebp], dl

; 315  : 				rc.alpha = va_arg (pargs, int);

  00409	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0040c	83 c0 04	 add	 eax, 4
  0040f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00412	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00415	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00418	88 55 bf	 mov	 BYTE PTR _rc$95[ebp+3], dl

; 316  : 
; 317  : 				set_ui_object_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  0041b	0f b6 45 bf	 movzx	 eax, BYTE PTR _rc$95[ebp+3]
  0041f	50		 push	 eax
  00420	0f b6 4d bc	 movzx	 ecx, BYTE PTR _rc$95[ebp]
  00424	51		 push	 ecx
  00425	0f b6 55 bd	 movzx	 edx, BYTE PTR _rc$95[ebp+1]
  00429	52		 push	 edx
  0042a	0f b6 45 be	 movzx	 eax, BYTE PTR _rc$95[ebp+2]
  0042e	50		 push	 eax
  0042f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00432	51		 push	 ecx
  00433	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00436	8b 02		 mov	 eax, DWORD PTR [edx]
  00438	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  0043f	ff d1		 call	 ecx

; 318  : 
; 319  : 				break;

  00441	e9 b6 1c 00 00	 jmp	 $LN4@set_ui_obj
$LN19@set_ui_obj:

; 320  : 			}
; 321  : 
; 322  : 			////////////////////////////////////////
; 323  : 			case ui_attr_colour_gradient:
; 324  : 			////////////////////////////////////////
; 325  : 			{
; 326  : 
; 327  : 				real_colour
; 328  : 					rc;
; 329  : 
; 330  : 				rc.red = va_arg (pargs, int);

  00446	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00449	83 c0 04	 add	 eax, 4
  0044c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0044f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00452	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00455	88 55 ba	 mov	 BYTE PTR _rc$94[ebp+2], dl

; 331  : 				rc.green = va_arg (pargs, int);

  00458	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0045b	83 c0 04	 add	 eax, 4
  0045e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00461	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00464	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00467	88 55 b9	 mov	 BYTE PTR _rc$94[ebp+1], dl

; 332  : 				rc.blue = va_arg (pargs, int);

  0046a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0046d	83 c0 04	 add	 eax, 4
  00470	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00473	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00476	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00479	88 55 b8	 mov	 BYTE PTR _rc$94[ebp], dl

; 333  : 				rc.alpha = va_arg (pargs, int);

  0047c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0047f	83 c0 04	 add	 eax, 4
  00482	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00485	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00488	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0048b	88 55 bb	 mov	 BYTE PTR _rc$94[ebp+3], dl

; 334  : 
; 335  : 				set_ui_object_colour_gradient_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  0048e	0f b6 45 bb	 movzx	 eax, BYTE PTR _rc$94[ebp+3]
  00492	50		 push	 eax
  00493	0f b6 4d b8	 movzx	 ecx, BYTE PTR _rc$94[ebp]
  00497	51		 push	 ecx
  00498	0f b6 55 b9	 movzx	 edx, BYTE PTR _rc$94[ebp+1]
  0049c	52		 push	 edx
  0049d	0f b6 45 ba	 movzx	 eax, BYTE PTR _rc$94[ebp+2]
  004a1	50		 push	 eax
  004a2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004a5	51		 push	 ecx
  004a6	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004a9	8b 02		 mov	 eax, DWORD PTR [edx]
  004ab	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_gradient_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  004b2	ff d1		 call	 ecx

; 336  : 				set_ui_object_colour_gradient_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  004b4	0f b6 45 bb	 movzx	 eax, BYTE PTR _rc$94[ebp+3]
  004b8	50		 push	 eax
  004b9	0f b6 4d b8	 movzx	 ecx, BYTE PTR _rc$94[ebp]
  004bd	51		 push	 ecx
  004be	0f b6 55 b9	 movzx	 edx, BYTE PTR _rc$94[ebp+1]
  004c2	52		 push	 edx
  004c3	0f b6 45 ba	 movzx	 eax, BYTE PTR _rc$94[ebp+2]
  004c7	50		 push	 eax
  004c8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004cb	51		 push	 ecx
  004cc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004cf	8b 02		 mov	 eax, DWORD PTR [edx]
  004d1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_gradient_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  004d8	ff d1		 call	 ecx

; 337  : 
; 338  : 				break;

  004da	e9 1d 1c 00 00	 jmp	 $LN4@set_ui_obj
$LN20@set_ui_obj:

; 339  : 			}
; 340  : 
; 341  : 			////////////////////////////////////////
; 342  : 			case ui_attr_colour_gradient_end:
; 343  : 			////////////////////////////////////////
; 344  : 			{
; 345  : 
; 346  : 				real_colour
; 347  : 					rc;
; 348  : 
; 349  : 				rc.red = va_arg (pargs, int);

  004df	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  004e2	83 c0 04	 add	 eax, 4
  004e5	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  004e8	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  004eb	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  004ee	88 55 b6	 mov	 BYTE PTR _rc$93[ebp+2], dl

; 350  : 				rc.green = va_arg (pargs, int);

  004f1	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  004f4	83 c0 04	 add	 eax, 4
  004f7	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  004fa	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  004fd	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00500	88 55 b5	 mov	 BYTE PTR _rc$93[ebp+1], dl

; 351  : 				rc.blue = va_arg (pargs, int);

  00503	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00506	83 c0 04	 add	 eax, 4
  00509	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0050c	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0050f	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00512	88 55 b4	 mov	 BYTE PTR _rc$93[ebp], dl

; 352  : 				rc.alpha = va_arg (pargs, int);

  00515	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00518	83 c0 04	 add	 eax, 4
  0051b	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0051e	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00521	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00524	88 55 b7	 mov	 BYTE PTR _rc$93[ebp+3], dl

; 353  : 
; 354  : 				set_ui_object_colour_gradient_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00527	0f b6 45 b7	 movzx	 eax, BYTE PTR _rc$93[ebp+3]
  0052b	50		 push	 eax
  0052c	0f b6 4d b4	 movzx	 ecx, BYTE PTR _rc$93[ebp]
  00530	51		 push	 ecx
  00531	0f b6 55 b5	 movzx	 edx, BYTE PTR _rc$93[ebp+1]
  00535	52		 push	 edx
  00536	0f b6 45 b6	 movzx	 eax, BYTE PTR _rc$93[ebp+2]
  0053a	50		 push	 eax
  0053b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0053e	51		 push	 ecx
  0053f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00542	8b 02		 mov	 eax, DWORD PTR [edx]
  00544	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_gradient_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  0054b	ff d1		 call	 ecx

; 355  : 
; 356  : 				break;

  0054d	e9 aa 1b 00 00	 jmp	 $LN4@set_ui_obj
$LN21@set_ui_obj:

; 357  : 			}
; 358  : 
; 359  : 			////////////////////////////////////////
; 360  : 			case ui_attr_colour_gradient_start:
; 361  : 			////////////////////////////////////////
; 362  : 			{
; 363  : 
; 364  : 				real_colour
; 365  : 					rc;
; 366  : 
; 367  : 				rc.red = va_arg (pargs, int);

  00552	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00555	83 c0 04	 add	 eax, 4
  00558	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0055b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0055e	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00561	88 55 b2	 mov	 BYTE PTR _rc$92[ebp+2], dl

; 368  : 				rc.green = va_arg (pargs, int);

  00564	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00567	83 c0 04	 add	 eax, 4
  0056a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0056d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00570	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00573	88 55 b1	 mov	 BYTE PTR _rc$92[ebp+1], dl

; 369  : 				rc.blue = va_arg (pargs, int);

  00576	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00579	83 c0 04	 add	 eax, 4
  0057c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0057f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00582	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00585	88 55 b0	 mov	 BYTE PTR _rc$92[ebp], dl

; 370  : 				rc.alpha = va_arg (pargs, int);

  00588	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0058b	83 c0 04	 add	 eax, 4
  0058e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00591	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00594	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00597	88 55 b3	 mov	 BYTE PTR _rc$92[ebp+3], dl

; 371  : 
; 372  : 				set_ui_object_colour_gradient_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  0059a	0f b6 45 b3	 movzx	 eax, BYTE PTR _rc$92[ebp+3]
  0059e	50		 push	 eax
  0059f	0f b6 4d b0	 movzx	 ecx, BYTE PTR _rc$92[ebp]
  005a3	51		 push	 ecx
  005a4	0f b6 55 b1	 movzx	 edx, BYTE PTR _rc$92[ebp+1]
  005a8	52		 push	 edx
  005a9	0f b6 45 b2	 movzx	 eax, BYTE PTR _rc$92[ebp+2]
  005ad	50		 push	 eax
  005ae	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  005b1	51		 push	 ecx
  005b2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  005b5	8b 02		 mov	 eax, DWORD PTR [edx]
  005b7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_colour_gradient_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  005be	ff d1		 call	 ecx

; 373  : 
; 374  : 				break;

  005c0	e9 37 1b 00 00	 jmp	 $LN4@set_ui_obj
$LN22@set_ui_obj:

; 375  : 			}
; 376  : 
; 377  : 			////////////////////////////////////////
; 378  :          case ui_attr_draw_function:
; 379  :          ////////////////////////////////////////
; 380  :          {
; 381  : 
; 382  :             FUNCTION
; 383  :                function;
; 384  : 
; 385  :             function = va_arg (pargs, FUNCTION);

  005c5	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  005c8	83 c0 04	 add	 eax, 4
  005cb	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  005ce	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  005d1	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  005d4	89 55 ac	 mov	 DWORD PTR _function$91[ebp], edx

; 386  : 
; 387  :             set_ui_object_draw_function (obj, function);

  005d7	8b 45 ac	 mov	 eax, DWORD PTR _function$91[ebp]
  005da	50		 push	 eax
  005db	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  005de	51		 push	 ecx
  005df	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  005e2	8b 02		 mov	 eax, DWORD PTR [edx]
  005e4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4]
  005eb	ff d1		 call	 ecx

; 388  : 
; 389  :             break;

  005ed	e9 0a 1b 00 00	 jmp	 $LN4@set_ui_obj
$LN23@set_ui_obj:

; 390  :          }
; 391  : 
; 392  : 			////////////////////////////////////////
; 393  :          case ui_attr_drawable:
; 394  :          ////////////////////////////////////////
; 395  :          {
; 396  : 
; 397  :             int
; 398  :                flag;
; 399  : 
; 400  :             flag = va_arg (pargs, int);

  005f2	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  005f5	83 c0 04	 add	 eax, 4
  005f8	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  005fb	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  005fe	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00601	89 55 a8	 mov	 DWORD PTR _flag$90[ebp], edx

; 401  : 
; 402  :             set_ui_object_drawable (obj, flag);

  00604	8b 45 a8	 mov	 eax, DWORD PTR _flag$90[ebp]
  00607	50		 push	 eax
  00608	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0060b	51		 push	 ecx
  0060c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0060f	8b 02		 mov	 eax, DWORD PTR [edx]
  00611	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00618	ff d1		 call	 ecx

; 403  : 
; 404  :             break;

  0061a	e9 dd 1a 00 00	 jmp	 $LN4@set_ui_obj
$LN24@set_ui_obj:

; 405  :          }
; 406  : 
; 407  : 			////////////////////////////////////////
; 408  :          case ui_attr_end:
; 409  :          ////////////////////////////////////////
; 410  :          {
; 411  : 
; 412  :             return;

  0061f	e9 dd 1a 00 00	 jmp	 $LN1@set_ui_obj
$LN25@set_ui_obj:

; 413  :          }
; 414  : 
; 415  : 			////////////////////////////////////////
; 416  : 			case ui_attr_font_type:
; 417  : 			////////////////////////////////////////
; 418  : 			{
; 419  : 
; 420  : 				font_types
; 421  : 					font_id;
; 422  : 
; 423  : 				font_id = (font_types) va_arg (pargs, int);

  00624	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00627	83 c0 04	 add	 eax, 4
  0062a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0062d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00630	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00633	89 55 a4	 mov	 DWORD PTR _font_id$89[ebp], edx

; 424  : 
; 425  : 				set_ui_object_font_type (obj, font_id);

  00636	8b 45 a4	 mov	 eax, DWORD PTR _font_id$89[ebp]
  00639	50		 push	 eax
  0063a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0063d	51		 push	 ecx
  0063e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00641	8b 02		 mov	 eax, DWORD PTR [edx]
  00643	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4]
  0064a	ff d1		 call	 ecx

; 426  : 
; 427  : 				break;

  0064c	e9 ab 1a 00 00	 jmp	 $LN4@set_ui_obj
$LN26@set_ui_obj:

; 428  : 			}
; 429  : 
; 430  : 			////////////////////////////////////////
; 431  : 			case ui_attr_font_colour:
; 432  : 			////////////////////////////////////////
; 433  : 			{
; 434  : 
; 435  : 				real_colour
; 436  : 					rc;
; 437  : 
; 438  : 				rc.red = va_arg (pargs, int);

  00651	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00654	83 c0 04	 add	 eax, 4
  00657	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0065a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0065d	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00660	88 55 a2	 mov	 BYTE PTR _rc$88[ebp+2], dl

; 439  : 				rc.green = va_arg (pargs, int);

  00663	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00666	83 c0 04	 add	 eax, 4
  00669	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0066c	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0066f	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00672	88 55 a1	 mov	 BYTE PTR _rc$88[ebp+1], dl

; 440  : 				rc.blue = va_arg (pargs, int);

  00675	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00678	83 c0 04	 add	 eax, 4
  0067b	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0067e	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00681	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00684	88 55 a0	 mov	 BYTE PTR _rc$88[ebp], dl

; 441  : 				rc.alpha = va_arg (pargs, int);

  00687	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0068a	83 c0 04	 add	 eax, 4
  0068d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00690	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00693	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00696	88 55 a3	 mov	 BYTE PTR _rc$88[ebp+3], dl

; 442  : 
; 443  : 				set_ui_object_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00699	0f b6 45 a3	 movzx	 eax, BYTE PTR _rc$88[ebp+3]
  0069d	50		 push	 eax
  0069e	0f b6 4d a0	 movzx	 ecx, BYTE PTR _rc$88[ebp]
  006a2	51		 push	 ecx
  006a3	0f b6 55 a1	 movzx	 edx, BYTE PTR _rc$88[ebp+1]
  006a7	52		 push	 edx
  006a8	0f b6 45 a2	 movzx	 eax, BYTE PTR _rc$88[ebp+2]
  006ac	50		 push	 eax
  006ad	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006b0	51		 push	 ecx
  006b1	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006b4	8b 02		 mov	 eax, DWORD PTR [edx]
  006b6	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  006bd	ff d1		 call	 ecx

; 444  : 				set_ui_object_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  006bf	0f b6 45 a3	 movzx	 eax, BYTE PTR _rc$88[ebp+3]
  006c3	50		 push	 eax
  006c4	0f b6 4d a0	 movzx	 ecx, BYTE PTR _rc$88[ebp]
  006c8	51		 push	 ecx
  006c9	0f b6 55 a1	 movzx	 edx, BYTE PTR _rc$88[ebp+1]
  006cd	52		 push	 edx
  006ce	0f b6 45 a2	 movzx	 eax, BYTE PTR _rc$88[ebp+2]
  006d2	50		 push	 eax
  006d3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006d6	51		 push	 ecx
  006d7	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006da	8b 02		 mov	 eax, DWORD PTR [edx]
  006dc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  006e3	ff d1		 call	 ecx

; 445  : 
; 446  : 				break;

  006e5	e9 12 1a 00 00	 jmp	 $LN4@set_ui_obj
$LN27@set_ui_obj:

; 447  : 			}
; 448  : 
; 449  : 			////////////////////////////////////////
; 450  : 			case ui_attr_font_colour_end:
; 451  : 			////////////////////////////////////////
; 452  : 			{
; 453  : 
; 454  : 				real_colour
; 455  : 					rc;
; 456  : 
; 457  : 				rc.red = va_arg (pargs, int);

  006ea	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  006ed	83 c0 04	 add	 eax, 4
  006f0	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  006f3	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  006f6	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  006f9	88 55 9e	 mov	 BYTE PTR _rc$87[ebp+2], dl

; 458  : 				rc.green = va_arg (pargs, int);

  006fc	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  006ff	83 c0 04	 add	 eax, 4
  00702	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00705	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00708	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0070b	88 55 9d	 mov	 BYTE PTR _rc$87[ebp+1], dl

; 459  : 				rc.blue = va_arg (pargs, int);

  0070e	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00711	83 c0 04	 add	 eax, 4
  00714	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00717	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0071a	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0071d	88 55 9c	 mov	 BYTE PTR _rc$87[ebp], dl

; 460  : 				rc.alpha = va_arg (pargs, int);

  00720	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00723	83 c0 04	 add	 eax, 4
  00726	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00729	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0072c	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0072f	88 55 9f	 mov	 BYTE PTR _rc$87[ebp+3], dl

; 461  : 
; 462  : 				set_ui_object_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00732	0f b6 45 9f	 movzx	 eax, BYTE PTR _rc$87[ebp+3]
  00736	50		 push	 eax
  00737	0f b6 4d 9c	 movzx	 ecx, BYTE PTR _rc$87[ebp]
  0073b	51		 push	 ecx
  0073c	0f b6 55 9d	 movzx	 edx, BYTE PTR _rc$87[ebp+1]
  00740	52		 push	 edx
  00741	0f b6 45 9e	 movzx	 eax, BYTE PTR _rc$87[ebp+2]
  00745	50		 push	 eax
  00746	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00749	51		 push	 ecx
  0074a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0074d	8b 02		 mov	 eax, DWORD PTR [edx]
  0074f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00756	ff d1		 call	 ecx

; 463  : 
; 464  : 				break;

  00758	e9 9f 19 00 00	 jmp	 $LN4@set_ui_obj
$LN28@set_ui_obj:

; 465  : 			}
; 466  : 			
; 467  : 			////////////////////////////////////////
; 468  : 			case ui_attr_font_colour_start:
; 469  : 			////////////////////////////////////////
; 470  : 			{
; 471  : 
; 472  : 				real_colour
; 473  : 					rc;
; 474  : 
; 475  : 				rc.red = va_arg (pargs, int);

  0075d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00760	83 c0 04	 add	 eax, 4
  00763	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00766	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00769	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0076c	88 55 9a	 mov	 BYTE PTR _rc$86[ebp+2], dl

; 476  : 				rc.green = va_arg (pargs, int);

  0076f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00772	83 c0 04	 add	 eax, 4
  00775	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00778	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0077b	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0077e	88 55 99	 mov	 BYTE PTR _rc$86[ebp+1], dl

; 477  : 				rc.blue = va_arg (pargs, int);

  00781	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00784	83 c0 04	 add	 eax, 4
  00787	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0078a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0078d	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00790	88 55 98	 mov	 BYTE PTR _rc$86[ebp], dl

; 478  : 				rc.alpha = va_arg (pargs, int);

  00793	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00796	83 c0 04	 add	 eax, 4
  00799	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0079c	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0079f	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  007a2	88 55 9b	 mov	 BYTE PTR _rc$86[ebp+3], dl

; 479  : 
; 480  : 				set_ui_object_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  007a5	0f b6 45 9b	 movzx	 eax, BYTE PTR _rc$86[ebp+3]
  007a9	50		 push	 eax
  007aa	0f b6 4d 98	 movzx	 ecx, BYTE PTR _rc$86[ebp]
  007ae	51		 push	 ecx
  007af	0f b6 55 99	 movzx	 edx, BYTE PTR _rc$86[ebp+1]
  007b3	52		 push	 edx
  007b4	0f b6 45 9a	 movzx	 eax, BYTE PTR _rc$86[ebp+2]
  007b8	50		 push	 eax
  007b9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  007bc	51		 push	 ecx
  007bd	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  007c0	8b 02		 mov	 eax, DWORD PTR [edx]
  007c2	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  007c9	ff d1		 call	 ecx

; 481  : 
; 482  : 				break;

  007cb	e9 2c 19 00 00	 jmp	 $LN4@set_ui_obj
$LN29@set_ui_obj:

; 483  : 			}
; 484  : 
; 485  : 			////////////////////////////////////////
; 486  :          case ui_attr_function:
; 487  :          ////////////////////////////////////////
; 488  :          {
; 489  : 
; 490  :             FUNCTION
; 491  :                function;
; 492  : 
; 493  :             function = va_arg (pargs, FUNCTION);

  007d0	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  007d3	83 c0 04	 add	 eax, 4
  007d6	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  007d9	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  007dc	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  007df	89 55 94	 mov	 DWORD PTR _function$85[ebp], edx

; 494  : 
; 495  :             set_ui_object_function (obj, function);

  007e2	8b 45 94	 mov	 eax, DWORD PTR _function$85[ebp]
  007e5	50		 push	 eax
  007e6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  007e9	51		 push	 ecx
  007ea	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  007ed	8b 02		 mov	 eax, DWORD PTR [edx]
  007ef	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4]
  007f6	ff d1		 call	 ecx

; 496  : 
; 497  :             break;

  007f8	e9 ff 18 00 00	 jmp	 $LN4@set_ui_obj
$LN30@set_ui_obj:

; 498  :          }
; 499  : 
; 500  : 			////////////////////////////////////////
; 501  : 			case ui_attr_global:
; 502  : 			////////////////////////////////////////
; 503  : 			{
; 504  : 
; 505  : 				int
; 506  : 					flag;
; 507  : 
; 508  : 				flag = va_arg (pargs, int);

  007fd	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00800	83 c0 04	 add	 eax, 4
  00803	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00806	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00809	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0080c	89 55 90	 mov	 DWORD PTR _flag$84[ebp], edx

; 509  : 
; 510  : 				set_ui_object_global (obj, flag);

  0080f	8b 45 90	 mov	 eax, DWORD PTR _flag$84[ebp]
  00812	50		 push	 eax
  00813	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00816	51		 push	 ecx
  00817	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0081a	8b 02		 mov	 eax, DWORD PTR [edx]
  0081c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_global@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00823	ff d1		 call	 ecx

; 511  : 
; 512  : 				break;

  00825	e9 d2 18 00 00	 jmp	 $LN4@set_ui_obj
$LN31@set_ui_obj:

; 513  : 			}
; 514  : 
; 515  : 			////////////////////////////////////////
; 516  :          case ui_attr_graphic:
; 517  :          ////////////////////////////////////////
; 518  :          {
; 519  : 
; 520  : 				int 
; 521  : 					graphic;
; 522  : 
; 523  :             graphic = va_arg (pargs, int);

  0082a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0082d	83 c0 04	 add	 eax, 4
  00830	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00833	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00836	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00839	89 55 8c	 mov	 DWORD PTR _graphic$83[ebp], edx

; 524  : 
; 525  :             set_ui_object_graphic (obj, (unsigned short int *) graphic);

  0083c	8b 45 8c	 mov	 eax, DWORD PTR _graphic$83[ebp]
  0083f	50		 push	 eax
  00840	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00843	51		 push	 ecx
  00844	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00847	8b 02		 mov	 eax, DWORD PTR [edx]
  00849	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[eax*4]
  00850	ff d1		 call	 ecx

; 526  : 
; 527  :             break;

  00852	e9 a5 18 00 00	 jmp	 $LN4@set_ui_obj
$LN32@set_ui_obj:

; 528  :          }
; 529  : 
; 530  : 			////////////////////////////////////////
; 531  :          case ui_attr_graphic_cposition:
; 532  :          ////////////////////////////////////////
; 533  :          {
; 534  : 
; 535  : 				double
; 536  : 					cx,
; 537  : 					cy;
; 538  : 
; 539  :             cx = va_arg (pargs, double);

  00857	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0085a	83 c0 08	 add	 eax, 8
  0085d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00860	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00863	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  00868	f2 0f 11 45 84	 movsd	 QWORD PTR _cx$82[ebp], xmm0

; 540  : 
; 541  :             cy = va_arg (pargs, double);

  0086d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00870	83 c0 08	 add	 eax, 8
  00873	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00876	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00879	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  0087e	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR _cy$81[ebp], xmm0

; 542  : 
; 543  :             set_ui_object_cx (obj, cx);

  00886	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR _cx$82[ebp]
  0088b	51		 push	 ecx
  0088c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00891	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00894	50		 push	 eax
  00895	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00898	8b 11		 mov	 edx, DWORD PTR [ecx]
  0089a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_cx@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  008a1	ff d0		 call	 eax

; 544  : 
; 545  :             set_ui_object_cy (obj, cy);

  008a3	f2 0f 5a 85 7c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR _cy$81[ebp]
  008ab	51		 push	 ecx
  008ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  008b4	50		 push	 eax
  008b5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  008ba	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_cy@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  008c1	ff d0		 call	 eax

; 546  : 
; 547  :             break;

  008c3	e9 34 18 00 00	 jmp	 $LN4@set_ui_obj
$LN33@set_ui_obj:

; 548  :          }
; 549  : 
; 550  : 			////////////////////////////////////////
; 551  :          case ui_attr_graphic_zoom:
; 552  :          ////////////////////////////////////////
; 553  :          {
; 554  : 
; 555  : 				int 
; 556  : 					zoom;
; 557  : 
; 558  :             zoom = va_arg (pargs, int);

  008c8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  008cb	83 c0 04	 add	 eax, 4
  008ce	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  008d1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  008d4	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  008d7	89 95 78 ff ff
	ff		 mov	 DWORD PTR _zoom$80[ebp], edx

; 559  : 
; 560  :             set_ui_object_graphic_zoom (obj, zoom);

  008dd	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR _zoom$80[ebp]
  008e3	50		 push	 eax
  008e4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008e7	51		 push	 ecx
  008e8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  008eb	8b 02		 mov	 eax, DWORD PTR [edx]
  008ed	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_graphic_zoom@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  008f4	ff d1		 call	 ecx

; 561  : 
; 562  :             break;

  008f6	e9 01 18 00 00	 jmp	 $LN4@set_ui_obj
$LN34@set_ui_obj:

; 563  :          }
; 564  : 
; 565  : 			////////////////////////////////////////
; 566  :          case ui_attr_highlightable:
; 567  :          ////////////////////////////////////////
; 568  :          {
; 569  : 
; 570  :             int
; 571  :                highlightable;
; 572  : 
; 573  :             highlightable = va_arg (pargs, int);

  008fb	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  008fe	83 c0 04	 add	 eax, 4
  00901	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00904	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00907	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0090a	89 95 74 ff ff
	ff		 mov	 DWORD PTR _highlightable$79[ebp], edx

; 574  : 
; 575  :             set_ui_object_highlightable (obj, highlightable);

  00910	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _highlightable$79[ebp]
  00916	50		 push	 eax
  00917	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0091a	51		 push	 ecx
  0091b	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0091e	8b 02		 mov	 eax, DWORD PTR [edx]
  00920	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00927	ff d1		 call	 ecx

; 576  : 
; 577  :             break;

  00929	e9 ce 17 00 00	 jmp	 $LN4@set_ui_obj
$LN35@set_ui_obj:

; 578  :          }
; 579  : 
; 580  : 			////////////////////////////////////////
; 581  :          case ui_attr_highlighted:
; 582  :          ////////////////////////////////////////
; 583  :          {
; 584  : 
; 585  :             int
; 586  :                highlighted;
; 587  : 
; 588  :             highlighted = va_arg (pargs, int);

  0092e	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00931	83 c0 04	 add	 eax, 4
  00934	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00937	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0093a	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0093d	89 95 70 ff ff
	ff		 mov	 DWORD PTR _highlighted$78[ebp], edx

; 589  : 
; 590  :             set_ui_object_highlighted (obj, highlighted);

  00943	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _highlighted$78[ebp]
  00949	50		 push	 eax
  0094a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0094d	51		 push	 ecx
  0094e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00951	8b 02		 mov	 eax, DWORD PTR [edx]
  00953	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  0095a	ff d1		 call	 ecx

; 591  : 
; 592  :             break;

  0095c	e9 9b 17 00 00	 jmp	 $LN4@set_ui_obj
$LN36@set_ui_obj:

; 593  :          }
; 594  : 
; 595  : 			////////////////////////////////////////
; 596  :          case ui_attr_highlighted_colour:
; 597  :          ////////////////////////////////////////
; 598  :          {
; 599  : 
; 600  : 				real_colour
; 601  : 					rc;
; 602  : 
; 603  : 				rc.red = va_arg (pargs, int);

  00961	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00964	83 c0 04	 add	 eax, 4
  00967	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0096a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0096d	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00970	88 95 6e ff ff
	ff		 mov	 BYTE PTR _rc$77[ebp+2], dl

; 604  : 				rc.green = va_arg (pargs, int);

  00976	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00979	83 c0 04	 add	 eax, 4
  0097c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0097f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00982	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00985	88 95 6d ff ff
	ff		 mov	 BYTE PTR _rc$77[ebp+1], dl

; 605  : 				rc.blue = va_arg (pargs, int);

  0098b	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0098e	83 c0 04	 add	 eax, 4
  00991	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00994	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00997	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0099a	88 95 6c ff ff
	ff		 mov	 BYTE PTR _rc$77[ebp], dl

; 606  : 				rc.alpha = va_arg (pargs, int);

  009a0	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  009a3	83 c0 04	 add	 eax, 4
  009a6	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  009a9	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  009ac	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  009af	88 95 6f ff ff
	ff		 mov	 BYTE PTR _rc$77[ebp+3], dl

; 607  : 
; 608  : 				set_ui_object_highlighted_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  009b5	0f b6 85 6f ff
	ff ff		 movzx	 eax, BYTE PTR _rc$77[ebp+3]
  009bc	50		 push	 eax
  009bd	0f b6 8d 6c ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$77[ebp]
  009c4	51		 push	 ecx
  009c5	0f b6 95 6d ff
	ff ff		 movzx	 edx, BYTE PTR _rc$77[ebp+1]
  009cc	52		 push	 edx
  009cd	0f b6 85 6e ff
	ff ff		 movzx	 eax, BYTE PTR _rc$77[ebp+2]
  009d4	50		 push	 eax
  009d5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  009d8	51		 push	 ecx
  009d9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  009dc	8b 02		 mov	 eax, DWORD PTR [edx]
  009de	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  009e5	ff d1		 call	 ecx

; 609  : 				set_ui_object_highlighted_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  009e7	0f b6 85 6f ff
	ff ff		 movzx	 eax, BYTE PTR _rc$77[ebp+3]
  009ee	50		 push	 eax
  009ef	0f b6 8d 6c ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$77[ebp]
  009f6	51		 push	 ecx
  009f7	0f b6 95 6d ff
	ff ff		 movzx	 edx, BYTE PTR _rc$77[ebp+1]
  009fe	52		 push	 edx
  009ff	0f b6 85 6e ff
	ff ff		 movzx	 eax, BYTE PTR _rc$77[ebp+2]
  00a06	50		 push	 eax
  00a07	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a0a	51		 push	 ecx
  00a0b	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00a0e	8b 02		 mov	 eax, DWORD PTR [edx]
  00a10	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00a17	ff d1		 call	 ecx

; 610  : 
; 611  :             break;

  00a19	e9 de 16 00 00	 jmp	 $LN4@set_ui_obj
$LN37@set_ui_obj:

; 612  :          }
; 613  : 
; 614  : 			////////////////////////////////////////
; 615  :          case ui_attr_highlighted_colour_end:
; 616  :          ////////////////////////////////////////
; 617  :          {
; 618  : 
; 619  : 				real_colour
; 620  : 					rc;
; 621  : 
; 622  : 				rc.red = va_arg (pargs, int);

  00a1e	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00a21	83 c0 04	 add	 eax, 4
  00a24	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00a27	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00a2a	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00a2d	88 95 6a ff ff
	ff		 mov	 BYTE PTR _rc$76[ebp+2], dl

; 623  : 				rc.green = va_arg (pargs, int);

  00a33	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00a36	83 c0 04	 add	 eax, 4
  00a39	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00a3c	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00a3f	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00a42	88 95 69 ff ff
	ff		 mov	 BYTE PTR _rc$76[ebp+1], dl

; 624  : 				rc.blue = va_arg (pargs, int);

  00a48	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00a4b	83 c0 04	 add	 eax, 4
  00a4e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00a51	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00a54	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00a57	88 95 68 ff ff
	ff		 mov	 BYTE PTR _rc$76[ebp], dl

; 625  : 				rc.alpha = va_arg (pargs, int);

  00a5d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00a60	83 c0 04	 add	 eax, 4
  00a63	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00a66	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00a69	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00a6c	88 95 6b ff ff
	ff		 mov	 BYTE PTR _rc$76[ebp+3], dl

; 626  : 
; 627  : 				set_ui_object_highlighted_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00a72	0f b6 85 6b ff
	ff ff		 movzx	 eax, BYTE PTR _rc$76[ebp+3]
  00a79	50		 push	 eax
  00a7a	0f b6 8d 68 ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$76[ebp]
  00a81	51		 push	 ecx
  00a82	0f b6 95 69 ff
	ff ff		 movzx	 edx, BYTE PTR _rc$76[ebp+1]
  00a89	52		 push	 edx
  00a8a	0f b6 85 6a ff
	ff ff		 movzx	 eax, BYTE PTR _rc$76[ebp+2]
  00a91	50		 push	 eax
  00a92	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00a95	51		 push	 ecx
  00a96	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00a99	8b 02		 mov	 eax, DWORD PTR [edx]
  00a9b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00aa2	ff d1		 call	 ecx

; 628  : 
; 629  :             break;

  00aa4	e9 53 16 00 00	 jmp	 $LN4@set_ui_obj
$LN38@set_ui_obj:

; 630  :          }
; 631  : 
; 632  : 			////////////////////////////////////////
; 633  :          case ui_attr_highlighted_colour_start:
; 634  :          ////////////////////////////////////////
; 635  :          {
; 636  : 
; 637  : 				real_colour
; 638  : 					rc;
; 639  : 
; 640  : 				rc.red = va_arg (pargs, int);

  00aa9	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00aac	83 c0 04	 add	 eax, 4
  00aaf	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ab2	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00ab5	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00ab8	88 95 66 ff ff
	ff		 mov	 BYTE PTR _rc$75[ebp+2], dl

; 641  : 				rc.green = va_arg (pargs, int);

  00abe	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00ac1	83 c0 04	 add	 eax, 4
  00ac4	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ac7	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00aca	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00acd	88 95 65 ff ff
	ff		 mov	 BYTE PTR _rc$75[ebp+1], dl

; 642  : 				rc.blue = va_arg (pargs, int);

  00ad3	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00ad6	83 c0 04	 add	 eax, 4
  00ad9	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00adc	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00adf	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00ae2	88 95 64 ff ff
	ff		 mov	 BYTE PTR _rc$75[ebp], dl

; 643  : 				rc.alpha = va_arg (pargs, int);

  00ae8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00aeb	83 c0 04	 add	 eax, 4
  00aee	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00af1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00af4	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00af7	88 95 67 ff ff
	ff		 mov	 BYTE PTR _rc$75[ebp+3], dl

; 644  : 
; 645  : 				set_ui_object_highlighted_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00afd	0f b6 85 67 ff
	ff ff		 movzx	 eax, BYTE PTR _rc$75[ebp+3]
  00b04	50		 push	 eax
  00b05	0f b6 8d 64 ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$75[ebp]
  00b0c	51		 push	 ecx
  00b0d	0f b6 95 65 ff
	ff ff		 movzx	 edx, BYTE PTR _rc$75[ebp+1]
  00b14	52		 push	 edx
  00b15	0f b6 85 66 ff
	ff ff		 movzx	 eax, BYTE PTR _rc$75[ebp+2]
  00b1c	50		 push	 eax
  00b1d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00b20	51		 push	 ecx
  00b21	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00b24	8b 02		 mov	 eax, DWORD PTR [edx]
  00b26	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00b2d	ff d1		 call	 ecx

; 646  : 
; 647  :             break;

  00b2f	e9 c8 15 00 00	 jmp	 $LN4@set_ui_obj
$LN39@set_ui_obj:

; 648  :          }
; 649  : 
; 650  : 			////////////////////////////////////////
; 651  : 			case ui_attr_highlighted_font_type:
; 652  : 			////////////////////////////////////////
; 653  : 			{
; 654  : 
; 655  : 				font_types
; 656  : 					font_id;
; 657  : 
; 658  : 				font_id = (font_types) va_arg (pargs, int);

  00b34	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00b37	83 c0 04	 add	 eax, 4
  00b3a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00b3d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00b40	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00b43	89 95 60 ff ff
	ff		 mov	 DWORD PTR _font_id$74[ebp], edx

; 659  : 
; 660  : 				set_ui_object_highlighted_font_type (obj, font_id);

  00b49	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _font_id$74[ebp]
  00b4f	50		 push	 eax
  00b50	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00b53	51		 push	 ecx
  00b54	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00b57	8b 02		 mov	 eax, DWORD PTR [edx]
  00b59	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4]
  00b60	ff d1		 call	 ecx

; 661  : 
; 662  : 				break;

  00b62	e9 95 15 00 00	 jmp	 $LN4@set_ui_obj
$LN40@set_ui_obj:

; 663  : 			}
; 664  : 
; 665  : 			////////////////////////////////////////
; 666  : 			case ui_attr_highlighted_font_colour:
; 667  : 			////////////////////////////////////////
; 668  : 			{
; 669  : 
; 670  : 				real_colour
; 671  : 					rc;
; 672  : 
; 673  : 				rc.red = va_arg (pargs, int);

  00b67	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00b6a	83 c0 04	 add	 eax, 4
  00b6d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00b70	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00b73	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00b76	88 95 5e ff ff
	ff		 mov	 BYTE PTR _rc$73[ebp+2], dl

; 674  : 				rc.green = va_arg (pargs, int);

  00b7c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00b7f	83 c0 04	 add	 eax, 4
  00b82	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00b85	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00b88	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00b8b	88 95 5d ff ff
	ff		 mov	 BYTE PTR _rc$73[ebp+1], dl

; 675  : 				rc.blue = va_arg (pargs, int);

  00b91	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00b94	83 c0 04	 add	 eax, 4
  00b97	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00b9a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00b9d	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00ba0	88 95 5c ff ff
	ff		 mov	 BYTE PTR _rc$73[ebp], dl

; 676  : 				rc.alpha = va_arg (pargs, int);

  00ba6	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00ba9	83 c0 04	 add	 eax, 4
  00bac	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00baf	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00bb2	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00bb5	88 95 5f ff ff
	ff		 mov	 BYTE PTR _rc$73[ebp+3], dl

; 677  : 
; 678  : 				set_ui_object_highlighted_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00bbb	0f b6 85 5f ff
	ff ff		 movzx	 eax, BYTE PTR _rc$73[ebp+3]
  00bc2	50		 push	 eax
  00bc3	0f b6 8d 5c ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$73[ebp]
  00bca	51		 push	 ecx
  00bcb	0f b6 95 5d ff
	ff ff		 movzx	 edx, BYTE PTR _rc$73[ebp+1]
  00bd2	52		 push	 edx
  00bd3	0f b6 85 5e ff
	ff ff		 movzx	 eax, BYTE PTR _rc$73[ebp+2]
  00bda	50		 push	 eax
  00bdb	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00bde	51		 push	 ecx
  00bdf	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00be2	8b 02		 mov	 eax, DWORD PTR [edx]
  00be4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00beb	ff d1		 call	 ecx

; 679  : 				set_ui_object_highlighted_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00bed	0f b6 85 5f ff
	ff ff		 movzx	 eax, BYTE PTR _rc$73[ebp+3]
  00bf4	50		 push	 eax
  00bf5	0f b6 8d 5c ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$73[ebp]
  00bfc	51		 push	 ecx
  00bfd	0f b6 95 5d ff
	ff ff		 movzx	 edx, BYTE PTR _rc$73[ebp+1]
  00c04	52		 push	 edx
  00c05	0f b6 85 5e ff
	ff ff		 movzx	 eax, BYTE PTR _rc$73[ebp+2]
  00c0c	50		 push	 eax
  00c0d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00c10	51		 push	 ecx
  00c11	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00c14	8b 02		 mov	 eax, DWORD PTR [edx]
  00c16	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00c1d	ff d1		 call	 ecx

; 680  : 
; 681  : 				break;

  00c1f	e9 d8 14 00 00	 jmp	 $LN4@set_ui_obj
$LN41@set_ui_obj:

; 682  : 			}
; 683  : 
; 684  : 			////////////////////////////////////////
; 685  : 			case ui_attr_highlighted_font_colour_end:
; 686  : 			////////////////////////////////////////
; 687  : 			{
; 688  : 
; 689  : 				real_colour
; 690  : 					rc;
; 691  : 
; 692  : 				rc.red = va_arg (pargs, int);

  00c24	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00c27	83 c0 04	 add	 eax, 4
  00c2a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00c2d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00c30	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00c33	88 95 5a ff ff
	ff		 mov	 BYTE PTR _rc$72[ebp+2], dl

; 693  : 				rc.green = va_arg (pargs, int);

  00c39	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00c3c	83 c0 04	 add	 eax, 4
  00c3f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00c42	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00c45	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00c48	88 95 59 ff ff
	ff		 mov	 BYTE PTR _rc$72[ebp+1], dl

; 694  : 				rc.blue = va_arg (pargs, int);

  00c4e	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00c51	83 c0 04	 add	 eax, 4
  00c54	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00c57	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00c5a	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00c5d	88 95 58 ff ff
	ff		 mov	 BYTE PTR _rc$72[ebp], dl

; 695  : 				rc.alpha = va_arg (pargs, int);

  00c63	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00c66	83 c0 04	 add	 eax, 4
  00c69	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00c6c	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00c6f	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00c72	88 95 5b ff ff
	ff		 mov	 BYTE PTR _rc$72[ebp+3], dl

; 696  : 
; 697  : 				set_ui_object_highlighted_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00c78	0f b6 85 5b ff
	ff ff		 movzx	 eax, BYTE PTR _rc$72[ebp+3]
  00c7f	50		 push	 eax
  00c80	0f b6 8d 58 ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$72[ebp]
  00c87	51		 push	 ecx
  00c88	0f b6 95 59 ff
	ff ff		 movzx	 edx, BYTE PTR _rc$72[ebp+1]
  00c8f	52		 push	 edx
  00c90	0f b6 85 5a ff
	ff ff		 movzx	 eax, BYTE PTR _rc$72[ebp+2]
  00c97	50		 push	 eax
  00c98	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00c9b	51		 push	 ecx
  00c9c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00c9f	8b 02		 mov	 eax, DWORD PTR [edx]
  00ca1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00ca8	ff d1		 call	 ecx

; 698  : 
; 699  : 				break;

  00caa	e9 4d 14 00 00	 jmp	 $LN4@set_ui_obj
$LN42@set_ui_obj:

; 700  : 			}
; 701  : 
; 702  : 			////////////////////////////////////////
; 703  : 			case ui_attr_highlighted_font_colour_start:
; 704  : 			////////////////////////////////////////
; 705  : 			{
; 706  : 
; 707  : 				real_colour
; 708  : 					rc;
; 709  : 
; 710  : 				rc.red = va_arg (pargs, int);

  00caf	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00cb2	83 c0 04	 add	 eax, 4
  00cb5	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00cb8	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00cbb	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00cbe	88 95 56 ff ff
	ff		 mov	 BYTE PTR _rc$71[ebp+2], dl

; 711  : 				rc.green = va_arg (pargs, int);

  00cc4	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00cc7	83 c0 04	 add	 eax, 4
  00cca	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ccd	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00cd0	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00cd3	88 95 55 ff ff
	ff		 mov	 BYTE PTR _rc$71[ebp+1], dl

; 712  : 				rc.blue = va_arg (pargs, int);

  00cd9	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00cdc	83 c0 04	 add	 eax, 4
  00cdf	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ce2	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00ce5	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00ce8	88 95 54 ff ff
	ff		 mov	 BYTE PTR _rc$71[ebp], dl

; 713  : 				rc.alpha = va_arg (pargs, int);

  00cee	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00cf1	83 c0 04	 add	 eax, 4
  00cf4	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00cf7	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00cfa	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  00cfd	88 95 57 ff ff
	ff		 mov	 BYTE PTR _rc$71[ebp+3], dl

; 714  : 
; 715  : 				set_ui_object_highlighted_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  00d03	0f b6 85 57 ff
	ff ff		 movzx	 eax, BYTE PTR _rc$71[ebp+3]
  00d0a	50		 push	 eax
  00d0b	0f b6 8d 54 ff
	ff ff		 movzx	 ecx, BYTE PTR _rc$71[ebp]
  00d12	51		 push	 ecx
  00d13	0f b6 95 55 ff
	ff ff		 movzx	 edx, BYTE PTR _rc$71[ebp+1]
  00d1a	52		 push	 edx
  00d1b	0f b6 85 56 ff
	ff ff		 movzx	 eax, BYTE PTR _rc$71[ebp+2]
  00d22	50		 push	 eax
  00d23	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d26	51		 push	 ecx
  00d27	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00d2a	8b 02		 mov	 eax, DWORD PTR [edx]
  00d2c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  00d33	ff d1		 call	 ecx

; 716  : 
; 717  : 				break;

  00d35	e9 c2 13 00 00	 jmp	 $LN4@set_ui_obj
$LN43@set_ui_obj:

; 718  : 			}
; 719  : 
; 720  : 			////////////////////////////////////////
; 721  :          case ui_attr_highlighted_function:
; 722  :          ////////////////////////////////////////
; 723  :          {
; 724  : 
; 725  :             FUNCTION
; 726  :                function;
; 727  : 
; 728  :             function = va_arg (pargs, FUNCTION);

  00d3a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00d3d	83 c0 04	 add	 eax, 4
  00d40	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00d43	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00d46	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00d49	89 95 50 ff ff
	ff		 mov	 DWORD PTR _function$70[ebp], edx

; 729  : 
; 730  :             set_ui_object_highlighted_function (obj, function);

  00d4f	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _function$70[ebp]
  00d55	50		 push	 eax
  00d56	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d59	51		 push	 ecx
  00d5a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00d5d	8b 02		 mov	 eax, DWORD PTR [edx]
  00d5f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4]
  00d66	ff d1		 call	 ecx

; 731  : 
; 732  :             break;

  00d68	e9 8f 13 00 00	 jmp	 $LN4@set_ui_obj
$LN44@set_ui_obj:

; 733  :          }
; 734  : 
; 735  : 			////////////////////////////////////////
; 736  :          case ui_attr_highlighted_notify_on:
; 737  :          ////////////////////////////////////////
; 738  :          {
; 739  : 
; 740  :             int
; 741  :                event;
; 742  : 
; 743  :             event = va_arg (pargs, int);

  00d6d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00d70	83 c0 04	 add	 eax, 4
  00d73	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00d76	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00d79	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00d7c	89 95 4c ff ff
	ff		 mov	 DWORD PTR _event$69[ebp], edx

; 744  : 
; 745  :             set_ui_object_highlighted_notify_on (obj, (notify_types)event);

  00d82	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _event$69[ebp]
  00d88	50		 push	 eax
  00d89	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00d8c	51		 push	 ecx
  00d8d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00d90	8b 02		 mov	 eax, DWORD PTR [edx]
  00d92	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_notify_on@@3PAP6GXPAUUI_OBJECT@@W4NOTIFY_TYPES@@@ZA[eax*4]
  00d99	ff d1		 call	 ecx

; 746  : 
; 747  :             break;

  00d9b	e9 5c 13 00 00	 jmp	 $LN4@set_ui_obj
$LN45@set_ui_obj:

; 748  :          }
; 749  : 
; 750  : 			////////////////////////////////////////
; 751  :          case ui_attr_highlighted_texture_graphic:
; 752  :          ////////////////////////////////////////
; 753  :          {
; 754  : 
; 755  : 				int
; 756  : 					graphic;
; 757  : 
; 758  :             graphic = va_arg (pargs, int);

  00da0	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00da3	83 c0 04	 add	 eax, 4
  00da6	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00da9	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00dac	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00daf	89 95 48 ff ff
	ff		 mov	 DWORD PTR _graphic$68[ebp], edx

; 759  : 
; 760  :             set_ui_object_highlighted_texture_graphic (obj, (struct TEXTURE_GRAPHIC *) graphic);

  00db5	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _graphic$68[ebp]
  00dbb	50		 push	 eax
  00dbc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00dbf	51		 push	 ecx
  00dc0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00dc3	8b 02		 mov	 eax, DWORD PTR [edx]
  00dc5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_highlighted_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[eax*4]
  00dcc	ff d1		 call	 ecx

; 761  : 
; 762  :             break;

  00dce	e9 29 13 00 00	 jmp	 $LN4@set_ui_obj
$LN46@set_ui_obj:

; 763  :          }
; 764  : 
; 765  : 			////////////////////////////////////////
; 766  :          case ui_attr_list_box_y_space:
; 767  :          ////////////////////////////////////////
; 768  : 			{
; 769  : 
; 770  : 				double
; 771  : 					y_space;
; 772  : 
; 773  : 				y_space = va_arg (pargs, double);

  00dd3	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00dd6	83 c0 08	 add	 eax, 8
  00dd9	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ddc	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00ddf	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  00de4	f2 0f 11 85 40
	ff ff ff	 movsd	 QWORD PTR _y_space$67[ebp], xmm0

; 774  : 
; 775  : 				set_ui_object_list_box_y_space (obj, y_space);

  00dec	f2 0f 5a 85 40
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR _y_space$67[ebp]
  00df4	51		 push	 ecx
  00df5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dfa	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00dfd	50		 push	 eax
  00dfe	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e01	8b 11		 mov	 edx, DWORD PTR [ecx]
  00e03	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_list_box_y_space@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00e0a	ff d0		 call	 eax

; 776  : 
; 777  : 				break;

  00e0c	e9 eb 12 00 00	 jmp	 $LN4@set_ui_obj
$LN47@set_ui_obj:

; 778  : 			}
; 779  : 
; 780  : 			////////////////////////////////////////
; 781  :          case ui_attr_list_item:
; 782  :          ////////////////////////////////////////
; 783  :          {
; 784  : 
; 785  :             set_ui_object_list_item (obj, TRUE);

  00e11	6a 01		 push	 1
  00e13	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00e16	50		 push	 eax
  00e17	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e1a	8b 11		 mov	 edx, DWORD PTR [ecx]
  00e1c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_list_item@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00e23	ff d0		 call	 eax

; 786  : 
; 787  :             break;

  00e25	e9 d2 12 00 00	 jmp	 $LN4@set_ui_obj
$LN48@set_ui_obj:

; 788  :          }
; 789  : 
; 790  : 			////////////////////////////////////////
; 791  : 			case ui_attr_item_number:
; 792  : 			////////////////////////////////////////
; 793  : 			{
; 794  : 
; 795  : 				int
; 796  : 					number;
; 797  : 
; 798  : 				number = va_arg (pargs, int);

  00e2a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00e2d	83 c0 04	 add	 eax, 4
  00e30	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00e33	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00e36	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00e39	89 95 3c ff ff
	ff		 mov	 DWORD PTR _number$66[ebp], edx

; 799  : 
; 800  : 				set_ui_object_item_number (obj, number);

  00e3f	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _number$66[ebp]
  00e45	50		 push	 eax
  00e46	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e49	51		 push	 ecx
  00e4a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00e4d	8b 02		 mov	 eax, DWORD PTR [edx]
  00e4f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_item_number@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00e56	ff d1		 call	 ecx

; 801  : 
; 802  : 				break;

  00e58	e9 9f 12 00 00	 jmp	 $LN4@set_ui_obj
$LN49@set_ui_obj:

; 803  : 			}
; 804  : 
; 805  : 			////////////////////////////////////////
; 806  : 			case ui_attr_item_number2:
; 807  : 			////////////////////////////////////////
; 808  : 			{
; 809  : 
; 810  : 				int
; 811  : 					number;
; 812  : 
; 813  : 				number = va_arg (pargs, int);

  00e5d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00e60	83 c0 04	 add	 eax, 4
  00e63	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00e66	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00e69	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00e6c	89 95 38 ff ff
	ff		 mov	 DWORD PTR _number$65[ebp], edx

; 814  : 
; 815  : 				set_ui_object_item_number2 (obj, number);

  00e72	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR _number$65[ebp]
  00e78	50		 push	 eax
  00e79	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00e7c	51		 push	 ecx
  00e7d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00e80	8b 02		 mov	 eax, DWORD PTR [edx]
  00e82	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_item_number2@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00e89	ff d1		 call	 ecx

; 816  : 
; 817  : 				break;

  00e8b	e9 6c 12 00 00	 jmp	 $LN4@set_ui_obj
$LN50@set_ui_obj:

; 818  : 			}
; 819  : 
; 820  : 			////////////////////////////////////////
; 821  :          case ui_attr_memory_graphic:
; 822  :          ////////////////////////////////////////
; 823  :          {
; 824  : 
; 825  : 				int
; 826  : 					width,
; 827  : 					height;
; 828  : 
; 829  : 				area_ui_object
; 830  : 					*area;
; 831  : 
; 832  : 				struct SCREEN
; 833  : 					*sc;
; 834  : 
; 835  : 				area = (area_ui_object *) obj->data;

  00e90	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00e93	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00e96	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _area$62[ebp], ecx

; 836  : 
; 837  : 				if (area->memory_graphic)

  00e9c	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _area$62[ebp]
  00ea2	83 78 70 00	 cmp	 DWORD PTR [eax+112], 0
  00ea6	74 0f		 je	 SHORT $LN51@set_ui_obj

; 838  : 				{
; 839  : 
; 840  : 					destroy_screen (area->memory_graphic);

  00ea8	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _area$62[ebp]
  00eae	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00eb1	51		 push	 ecx
  00eb2	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen
$LN51@set_ui_obj:

; 841  : 				}
; 842  : 
; 843  : 				width = va_arg (pargs, int);

  00eb7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00eba	83 c0 04	 add	 eax, 4
  00ebd	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ec0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00ec3	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00ec6	89 95 34 ff ff
	ff		 mov	 DWORD PTR _width$64[ebp], edx

; 844  : 
; 845  : 				height = va_arg (pargs, int);

  00ecc	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00ecf	83 c0 04	 add	 eax, 4
  00ed2	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00ed5	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00ed8	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00edb	89 95 30 ff ff
	ff		 mov	 DWORD PTR _height$63[ebp], edx

; 846  : 
; 847  : 				sc = create_screen (width, height, FALSE);

  00ee1	6a 00		 push	 0
  00ee3	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _height$63[ebp]
  00ee9	50		 push	 eax
  00eea	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _width$64[ebp]
  00ef0	51		 push	 ecx
  00ef1	e8 00 00 00 00	 call	 ?create_screen@@YGPAUSCREEN@@HHH@Z ; create_screen
  00ef6	89 85 28 ff ff
	ff		 mov	 DWORD PTR _sc$61[ebp], eax

; 848  : 
; 849  : 				set_ui_object_memory_graphic (obj, sc);

  00efc	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _sc$61[ebp]
  00f02	50		 push	 eax
  00f03	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f06	51		 push	 ecx
  00f07	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00f0a	8b 02		 mov	 eax, DWORD PTR [edx]
  00f0c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_memory_graphic@@3PAP6GXPAUUI_OBJECT@@PAUSCREEN@@@ZA[eax*4]
  00f13	ff d1		 call	 ecx

; 850  : 
; 851  :             break;

  00f15	e9 e2 11 00 00	 jmp	 $LN4@set_ui_obj
$LN52@set_ui_obj:

; 852  :          }
; 853  : 
; 854  : 			////////////////////////////////////////
; 855  :          case ui_attr_moveable:
; 856  :          ////////////////////////////////////////
; 857  :          {
; 858  : 
; 859  : 		      int
; 860  :                flag;
; 861  : 
; 862  :             flag = va_arg (pargs, int);

  00f1a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00f1d	83 c0 04	 add	 eax, 4
  00f20	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00f23	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00f26	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00f29	89 95 24 ff ff
	ff		 mov	 DWORD PTR _flag$60[ebp], edx

; 863  : 
; 864  :             set_ui_object_moveable (obj, flag);

  00f2f	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR _flag$60[ebp]
  00f35	50		 push	 eax
  00f36	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f39	51		 push	 ecx
  00f3a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00f3d	8b 02		 mov	 eax, DWORD PTR [edx]
  00f3f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_moveable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00f46	ff d1		 call	 ecx

; 865  : 
; 866  :             break;

  00f48	e9 af 11 00 00	 jmp	 $LN4@set_ui_obj
$LN53@set_ui_obj:

; 867  :          }
; 868  : 
; 869  : 			////////////////////////////////////////
; 870  :          case ui_attr_mslider:
; 871  :          ////////////////////////////////////////
; 872  :          {
; 873  : 
; 874  : 				float
; 875  : 					x,
; 876  : 					y,
; 877  : 					x_size,
; 878  : 					y_size,
; 879  : 					min,
; 880  : 					max,
; 881  : 					inc;
; 882  : 
; 883  :             min = va_arg (pargs, double);

  00f4d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00f50	83 c0 08	 add	 eax, 8
  00f53	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00f56	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00f59	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00f5e	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _min$55[ebp], xmm0

; 884  : 
; 885  :             max = va_arg (pargs, double);

  00f66	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00f69	83 c0 08	 add	 eax, 8
  00f6c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00f6f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00f72	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00f77	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _max$54[ebp], xmm0

; 886  : 
; 887  :             inc = va_arg (pargs, double);

  00f7f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  00f82	83 c0 08	 add	 eax, 8
  00f85	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  00f88	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00f8b	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00f90	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _inc$53[ebp], xmm0

; 888  : 
; 889  : 				x = get_ui_object_x (obj);

  00f98	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00f9b	50		 push	 eax
  00f9c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00f9f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fa1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00fa8	ff d0		 call	 eax
  00faa	d9 9d 20 ff ff
	ff		 fstp	 DWORD PTR _x$59[ebp]

; 890  : 
; 891  : 				y = get_ui_object_y (obj);

  00fb0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00fb3	50		 push	 eax
  00fb4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00fb7	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fb9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00fc0	ff d0		 call	 eax
  00fc2	d9 9d 1c ff ff
	ff		 fstp	 DWORD PTR _y$58[ebp]

; 892  : 
; 893  : 				x_size = get_ui_object_x_size (obj);

  00fc8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00fcb	50		 push	 eax
  00fcc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00fcf	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fd1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00fd8	ff d0		 call	 eax
  00fda	d9 9d 18 ff ff
	ff		 fstp	 DWORD PTR _x_size$57[ebp]

; 894  : 
; 895  : 				y_size = get_ui_object_y_size (obj);

  00fe0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00fe3	50		 push	 eax
  00fe4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00fe7	8b 11		 mov	 edx, DWORD PTR [ecx]
  00fe9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00ff0	ff d0		 call	 eax
  00ff2	d9 9d 14 ff ff
	ff		 fstp	 DWORD PTR _y_size$56[ebp]

; 896  : 
; 897  :             create_ui_object

  00ff8	6a 11		 push	 17			; 00000011H
  00ffa	f3 0f 5a 85 08
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _inc$53[ebp]
  01002	83 ec 08	 sub	 esp, 8
  01005	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0100a	6a 47		 push	 71			; 00000047H
  0100c	f3 0f 5a 85 0c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _max$54[ebp]
  01014	83 ec 08	 sub	 esp, 8
  01017	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0101c	6a 46		 push	 70			; 00000046H
  0101e	f3 0f 5a 85 10
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _min$55[ebp]
  01026	83 ec 08	 sub	 esp, 8
  01029	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0102e	6a 45		 push	 69			; 00000045H
  01030	f3 0f 5a 85 14
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y_size$56[ebp]
  01038	83 ec 08	 sub	 esp, 8
  0103b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01040	f3 0f 5a 85 18
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x_size$57[ebp]
  01048	83 ec 08	 sub	 esp, 8
  0104b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01050	6a 42		 push	 66			; 00000042H
  01052	f3 0f 5a 85 1c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y$58[ebp]
  0105a	83 ec 08	 sub	 esp, 8
  0105d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01062	f3 0f 5a 85 20
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _x$59[ebp]
  0106a	83 ec 08	 sub	 esp, 8
  0106d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01072	6a 34		 push	 52			; 00000034H
  01074	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01077	50		 push	 eax
  01078	6a 32		 push	 50			; 00000032H
  0107a	6a 0b		 push	 11			; 0000000bH
  0107c	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01081	83 c4 5c	 add	 esp, 92			; 0000005cH

; 898  : 					(
; 899  : 						UI_TYPE_MSLIDER,
; 900  : 						UI_ATTR_PARENT (obj),
; 901  : 						UI_ATTR_POSITION (x, y),
; 902  : 						UI_ATTR_SIZE (x_size, y_size),
; 903  : 						UI_ATTR_SLIDER_MIN (min),
; 904  : 						UI_ATTR_SLIDER_MAX (max),
; 905  : 						UI_ATTR_SLIDER_INC (inc),
; 906  : 						UI_ATTR_END
; 907  : 					);
; 908  : 
; 909  :             break;

  01084	e9 73 10 00 00	 jmp	 $LN4@set_ui_obj
$LN54@set_ui_obj:

; 910  : 			}
; 911  : 
; 912  : 			////////////////////////////////////////
; 913  :          case ui_attr_next:
; 914  :          ////////////////////////////////////////
; 915  :          {
; 916  : 
; 917  : 		      ui_object
; 918  :                *next;
; 919  : 
; 920  :             next = (ui_object *) va_arg (pargs, int);

  01089	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0108c	83 c0 04	 add	 eax, 4
  0108f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01092	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01095	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01098	89 95 04 ff ff
	ff		 mov	 DWORD PTR _next$52[ebp], edx

; 921  : 
; 922  :             set_ui_object_next (obj, next);

  0109e	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR _next$52[ebp]
  010a4	50		 push	 eax
  010a5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  010a8	51		 push	 ecx
  010a9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  010ac	8b 02		 mov	 eax, DWORD PTR [edx]
  010ae	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_next@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  010b5	ff d1		 call	 ecx

; 923  : 
; 924  :             break;

  010b7	e9 40 10 00 00	 jmp	 $LN4@set_ui_obj
$LN55@set_ui_obj:

; 925  :          }
; 926  : 
; 927  : 			////////////////////////////////////////
; 928  :          case ui_attr_notify_on:
; 929  :          ////////////////////////////////////////
; 930  :          {
; 931  : 
; 932  :             int
; 933  :                event;
; 934  : 
; 935  :             event = va_arg (pargs, int);

  010bc	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  010bf	83 c0 04	 add	 eax, 4
  010c2	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  010c5	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  010c8	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  010cb	89 95 00 ff ff
	ff		 mov	 DWORD PTR _event$51[ebp], edx

; 936  : 
; 937  :             set_ui_object_notify_on (obj, (notify_types)event);

  010d1	8b 85 00 ff ff
	ff		 mov	 eax, DWORD PTR _event$51[ebp]
  010d7	50		 push	 eax
  010d8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  010db	51		 push	 ecx
  010dc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  010df	8b 02		 mov	 eax, DWORD PTR [edx]
  010e1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_notify_on@@3PAP6GXPAUUI_OBJECT@@W4NOTIFY_TYPES@@@ZA[eax*4]
  010e8	ff d1		 call	 ecx

; 938  : 
; 939  :             break;

  010ea	e9 0d 10 00 00	 jmp	 $LN4@set_ui_obj
$LN56@set_ui_obj:

; 940  :          }
; 941  : 
; 942  : 			////////////////////////////////////////
; 943  :          case ui_attr_offset_time:
; 944  :          ////////////////////////////////////////
; 945  : 			{
; 946  : 
; 947  : 				int
; 948  : 					offset_time;
; 949  : 
; 950  : 				offset_time = va_arg (pargs, int);

  010ef	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  010f2	83 c0 04	 add	 eax, 4
  010f5	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  010f8	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  010fb	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  010fe	89 95 fc fe ff
	ff		 mov	 DWORD PTR _offset_time$50[ebp], edx

; 951  : 
; 952  : 				set_ui_object_offset_time (obj, offset_time);

  01104	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR _offset_time$50[ebp]
  0110a	50		 push	 eax
  0110b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0110e	51		 push	 ecx
  0110f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01112	8b 02		 mov	 eax, DWORD PTR [edx]
  01114	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_offset_time@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  0111b	ff d1		 call	 ecx

; 953  : 
; 954  : 				break;

  0111d	e9 da 0f 00 00	 jmp	 $LN4@set_ui_obj
$LN57@set_ui_obj:

; 955  : 			}
; 956  : 
; 957  : 			////////////////////////////////////////
; 958  :          case ui_attr_origin:
; 959  :          ////////////////////////////////////////
; 960  :          {
; 961  : 
; 962  :             vec2d
; 963  :                pos;
; 964  : 
; 965  :             pos.x = va_arg (pargs, double);

  01122	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01125	83 c0 08	 add	 eax, 8
  01128	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0112b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0112e	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01133	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _pos$49[ebp], xmm0

; 966  : 
; 967  : 		      pos.y = va_arg (pargs, double);

  0113b	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0113e	83 c0 08	 add	 eax, 8
  01141	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01144	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01147	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0114c	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _pos$49[ebp+4], xmm0

; 968  : 
; 969  :             set_ui_object_x_origin (obj, pos.x);

  01154	51		 push	 ecx
  01155	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$49[ebp]
  0115d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01162	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01165	50		 push	 eax
  01166	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01169	8b 11		 mov	 edx, DWORD PTR [ecx]
  0116b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01172	ff d0		 call	 eax

; 970  : 
; 971  : 		      set_ui_object_y_origin (obj, pos.y);

  01174	51		 push	 ecx
  01175	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$49[ebp+4]
  0117d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01182	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01185	50		 push	 eax
  01186	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01189	8b 11		 mov	 edx, DWORD PTR [ecx]
  0118b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01192	ff d0		 call	 eax

; 972  : 
; 973  :             break;

  01194	e9 63 0f 00 00	 jmp	 $LN4@set_ui_obj
$LN58@set_ui_obj:

; 974  :          }
; 975  : 
; 976  : 			////////////////////////////////////////
; 977  :          case ui_attr_parent:
; 978  :          ////////////////////////////////////////
; 979  :          {
; 980  : 
; 981  : 			   ui_object
; 982  :                *parent;
; 983  : 
; 984  :             parent = (ui_object *) va_arg (pargs, int);

  01199	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0119c	83 c0 04	 add	 eax, 4
  0119f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  011a2	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  011a5	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  011a8	89 95 f0 fe ff
	ff		 mov	 DWORD PTR _parent$48[ebp], edx

; 985  : 
; 986  :             set_ui_object_parent (obj, parent);

  011ae	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _parent$48[ebp]
  011b4	50		 push	 eax
  011b5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  011b8	51		 push	 ecx
  011b9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  011bc	8b 02		 mov	 eax, DWORD PTR [edx]
  011be	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  011c5	ff d1		 call	 ecx

; 987  : 
; 988  :             break;

  011c7	e9 30 0f 00 00	 jmp	 $LN4@set_ui_obj
$LN59@set_ui_obj:

; 989  :          }
; 990  : 
; 991  : 			////////////////////////////////////////
; 992  :          case ui_attr_prev:
; 993  :          ////////////////////////////////////////
; 994  :          {
; 995  : 
; 996  : 		      ui_object
; 997  :                *prev;
; 998  : 
; 999  :             prev = (ui_object *) va_arg (pargs, int);

  011cc	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  011cf	83 c0 04	 add	 eax, 4
  011d2	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  011d5	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  011d8	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  011db	89 95 ec fe ff
	ff		 mov	 DWORD PTR _prev$47[ebp], edx

; 1000 : 
; 1001 :             set_ui_object_prev (obj, prev);

  011e1	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR _prev$47[ebp]
  011e7	50		 push	 eax
  011e8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  011eb	51		 push	 ecx
  011ec	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  011ef	8b 02		 mov	 eax, DWORD PTR [edx]
  011f1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_prev@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  011f8	ff d1		 call	 ecx

; 1002 : 
; 1003 :             break;

  011fa	e9 fd 0e 00 00	 jmp	 $LN4@set_ui_obj
$LN60@set_ui_obj:

; 1004 :          }
; 1005 : 
; 1006 : 			////////////////////////////////////////
; 1007 :          case ui_attr_position:
; 1008 :          ////////////////////////////////////////
; 1009 :          {
; 1010 : 
; 1011 :             vec2d
; 1012 :                pos;
; 1013 : 
; 1014 :             pos.x = va_arg (pargs, double);

  011ff	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01202	83 c0 08	 add	 eax, 8
  01205	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01208	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0120b	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01210	f3 0f 11 85 e4
	fe ff ff	 movss	 DWORD PTR _pos$46[ebp], xmm0

; 1015 : 				
; 1016 :             pos.y = va_arg (pargs, double);

  01218	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0121b	83 c0 08	 add	 eax, 8
  0121e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01221	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01224	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01229	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _pos$46[ebp+4], xmm0

; 1017 : 
; 1018 :             set_ui_object_x_end (obj, pos.x);

  01231	51		 push	 ecx
  01232	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$46[ebp]
  0123a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0123f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01242	50		 push	 eax
  01243	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01246	8b 11		 mov	 edx, DWORD PTR [ecx]
  01248	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0124f	ff d0		 call	 eax

; 1019 : 				set_ui_object_y_end (obj, pos.y);

  01251	51		 push	 ecx
  01252	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$46[ebp+4]
  0125a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0125f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01262	50		 push	 eax
  01263	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01266	8b 11		 mov	 edx, DWORD PTR [ecx]
  01268	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0126f	ff d0		 call	 eax

; 1020 : 
; 1021 :             set_ui_object_x_start (obj, pos.x);

  01271	51		 push	 ecx
  01272	f3 0f 10 85 e4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$46[ebp]
  0127a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0127f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01282	50		 push	 eax
  01283	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01286	8b 11		 mov	 edx, DWORD PTR [ecx]
  01288	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0128f	ff d0		 call	 eax

; 1022 : 				set_ui_object_y_start (obj, pos.y);

  01291	51		 push	 ecx
  01292	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$46[ebp+4]
  0129a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0129f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  012a2	50		 push	 eax
  012a3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  012a6	8b 11		 mov	 edx, DWORD PTR [ecx]
  012a8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  012af	ff d0		 call	 eax

; 1023 : 
; 1024 :             break;

  012b1	e9 46 0e 00 00	 jmp	 $LN4@set_ui_obj
$LN61@set_ui_obj:

; 1025 :          }
; 1026 : 
; 1027 : 			////////////////////////////////////////
; 1028 :          case ui_attr_position_end:
; 1029 :          ////////////////////////////////////////
; 1030 :          {
; 1031 : 
; 1032 :             vec2d
; 1033 :                pos;
; 1034 : 
; 1035 :             pos.x = va_arg (pargs, double);

  012b6	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  012b9	83 c0 08	 add	 eax, 8
  012bc	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  012bf	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  012c2	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  012c7	f3 0f 11 85 dc
	fe ff ff	 movss	 DWORD PTR _pos$45[ebp], xmm0

; 1036 : 				
; 1037 :             pos.y = va_arg (pargs, double);

  012cf	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  012d2	83 c0 08	 add	 eax, 8
  012d5	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  012d8	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  012db	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  012e0	f3 0f 11 85 e0
	fe ff ff	 movss	 DWORD PTR _pos$45[ebp+4], xmm0

; 1038 : 
; 1039 :             set_ui_object_x_end (obj, pos.x);

  012e8	51		 push	 ecx
  012e9	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$45[ebp]
  012f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012f6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  012f9	50		 push	 eax
  012fa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  012fd	8b 11		 mov	 edx, DWORD PTR [ecx]
  012ff	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01306	ff d0		 call	 eax

; 1040 : 				set_ui_object_y_end (obj, pos.y);

  01308	51		 push	 ecx
  01309	f3 0f 10 85 e0
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$45[ebp+4]
  01311	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01316	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01319	50		 push	 eax
  0131a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0131d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0131f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01326	ff d0		 call	 eax

; 1041 : 
; 1042 :             break;

  01328	e9 cf 0d 00 00	 jmp	 $LN4@set_ui_obj
$LN62@set_ui_obj:

; 1043 :          }
; 1044 : 
; 1045 : 			////////////////////////////////////////
; 1046 :          case ui_attr_position_start:
; 1047 :          ////////////////////////////////////////
; 1048 :          {
; 1049 : 
; 1050 :             vec2d
; 1051 :                pos;
; 1052 : 
; 1053 :             pos.x = va_arg (pargs, double);

  0132d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01330	83 c0 08	 add	 eax, 8
  01333	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01336	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01339	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0133e	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _pos$44[ebp], xmm0

; 1054 : 				
; 1055 :             pos.y = va_arg (pargs, double);

  01346	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01349	83 c0 08	 add	 eax, 8
  0134c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0134f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01352	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01357	f3 0f 11 85 d8
	fe ff ff	 movss	 DWORD PTR _pos$44[ebp+4], xmm0

; 1056 : 
; 1057 :             set_ui_object_x_start (obj, pos.x);

  0135f	51		 push	 ecx
  01360	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$44[ebp]
  01368	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0136d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01370	50		 push	 eax
  01371	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01374	8b 11		 mov	 edx, DWORD PTR [ecx]
  01376	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0137d	ff d0		 call	 eax

; 1058 : 				set_ui_object_y_start (obj, pos.y);

  0137f	51		 push	 ecx
  01380	f3 0f 10 85 d8
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$44[ebp+4]
  01388	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0138d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01390	50		 push	 eax
  01391	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01394	8b 11		 mov	 edx, DWORD PTR [ecx]
  01396	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0139d	ff d0		 call	 eax

; 1059 : 
; 1060 :             break;

  0139f	e9 58 0d 00 00	 jmp	 $LN4@set_ui_obj
$LN63@set_ui_obj:

; 1061 :          }
; 1062 : 
; 1063 : 			////////////////////////////////////////
; 1064 :          case ui_attr_redraw:
; 1065 :          ////////////////////////////////////////
; 1066 :          {
; 1067 : 
; 1068 :             int
; 1069 :                flag;
; 1070 : 
; 1071 :             flag = va_arg (pargs, int);

  013a4	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  013a7	83 c0 04	 add	 eax, 4
  013aa	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  013ad	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  013b0	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  013b3	89 95 d0 fe ff
	ff		 mov	 DWORD PTR _flag$43[ebp], edx

; 1072 : 
; 1073 :             set_ui_object_redraw (obj, flag);

  013b9	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR _flag$43[ebp]
  013bf	50		 push	 eax
  013c0	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  013c3	51		 push	 ecx
  013c4	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  013c7	8b 02		 mov	 eax, DWORD PTR [edx]
  013c9	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  013d0	ff d1		 call	 ecx

; 1074 : 
; 1075 :             break;

  013d2	e9 25 0d 00 00	 jmp	 $LN4@set_ui_obj
$LN64@set_ui_obj:

; 1076 :          }
; 1077 : 
; 1078 : 			////////////////////////////////////////
; 1079 :          case ui_attr_resizeable:
; 1080 :          ////////////////////////////////////////
; 1081 :          {
; 1082 : 
; 1083 : 		      int
; 1084 :                flag;
; 1085 : 
; 1086 :             flag = va_arg (pargs, int);

  013d7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  013da	83 c0 04	 add	 eax, 4
  013dd	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  013e0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  013e3	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  013e6	89 95 cc fe ff
	ff		 mov	 DWORD PTR _flag$42[ebp], edx

; 1087 : 
; 1088 :             set_ui_object_resizeable (obj, flag);

  013ec	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR _flag$42[ebp]
  013f2	50		 push	 eax
  013f3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  013f6	51		 push	 ecx
  013f7	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  013fa	8b 02		 mov	 eax, DWORD PTR [edx]
  013fc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_resizeable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01403	ff d1		 call	 ecx

; 1089 : 
; 1090 :             break;

  01405	e9 f2 0c 00 00	 jmp	 $LN4@set_ui_obj
$LN65@set_ui_obj:

; 1091 :          }
; 1092 : 
; 1093 : 			////////////////////////////////////////
; 1094 :          case ui_attr_right_function:
; 1095 :          ////////////////////////////////////////
; 1096 :          {
; 1097 : 
; 1098 :             FUNCTION
; 1099 :                function;
; 1100 : 
; 1101 :             function = va_arg (pargs, FUNCTION);

  0140a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0140d	83 c0 04	 add	 eax, 4
  01410	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01413	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01416	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01419	89 95 c8 fe ff
	ff		 mov	 DWORD PTR _function$41[ebp], edx

; 1102 : 
; 1103 :             set_ui_object_right_function (obj, function);

  0141f	8b 85 c8 fe ff
	ff		 mov	 eax, DWORD PTR _function$41[ebp]
  01425	50		 push	 eax
  01426	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01429	51		 push	 ecx
  0142a	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0142d	8b 02		 mov	 eax, DWORD PTR [edx]
  0142f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4]
  01436	ff d1		 call	 ecx

; 1104 : 
; 1105 :             break;

  01438	e9 bf 0c 00 00	 jmp	 $LN4@set_ui_obj
$LN66@set_ui_obj:

; 1106 :          }
; 1107 : 
; 1108 : 			////////////////////////////////////////
; 1109 :          case ui_attr_selected_colour:
; 1110 :          ////////////////////////////////////////
; 1111 :          {
; 1112 : 
; 1113 : 				real_colour
; 1114 : 					rc;
; 1115 : 
; 1116 : 				rc.red = va_arg (pargs, int);

  0143d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01440	83 c0 04	 add	 eax, 4
  01443	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01446	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01449	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0144c	88 95 c6 fe ff
	ff		 mov	 BYTE PTR _rc$40[ebp+2], dl

; 1117 : 				rc.green = va_arg (pargs, int);

  01452	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01455	83 c0 04	 add	 eax, 4
  01458	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0145b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0145e	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01461	88 95 c5 fe ff
	ff		 mov	 BYTE PTR _rc$40[ebp+1], dl

; 1118 : 				rc.blue = va_arg (pargs, int);

  01467	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0146a	83 c0 04	 add	 eax, 4
  0146d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01470	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01473	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01476	88 95 c4 fe ff
	ff		 mov	 BYTE PTR _rc$40[ebp], dl

; 1119 : 				rc.alpha = va_arg (pargs, int);

  0147c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0147f	83 c0 04	 add	 eax, 4
  01482	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01485	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01488	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0148b	88 95 c7 fe ff
	ff		 mov	 BYTE PTR _rc$40[ebp+3], dl

; 1120 : 
; 1121 : 				set_ui_object_selected_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  01491	0f b6 85 c7 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$40[ebp+3]
  01498	50		 push	 eax
  01499	0f b6 8d c4 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$40[ebp]
  014a0	51		 push	 ecx
  014a1	0f b6 95 c5 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$40[ebp+1]
  014a8	52		 push	 edx
  014a9	0f b6 85 c6 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$40[ebp+2]
  014b0	50		 push	 eax
  014b1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  014b4	51		 push	 ecx
  014b5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  014b8	8b 02		 mov	 eax, DWORD PTR [edx]
  014ba	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  014c1	ff d1		 call	 ecx

; 1122 : 				set_ui_object_selected_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  014c3	0f b6 85 c7 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$40[ebp+3]
  014ca	50		 push	 eax
  014cb	0f b6 8d c4 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$40[ebp]
  014d2	51		 push	 ecx
  014d3	0f b6 95 c5 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$40[ebp+1]
  014da	52		 push	 edx
  014db	0f b6 85 c6 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$40[ebp+2]
  014e2	50		 push	 eax
  014e3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  014e6	51		 push	 ecx
  014e7	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  014ea	8b 02		 mov	 eax, DWORD PTR [edx]
  014ec	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  014f3	ff d1		 call	 ecx

; 1123 : 
; 1124 :             break;

  014f5	e9 02 0c 00 00	 jmp	 $LN4@set_ui_obj
$LN67@set_ui_obj:

; 1125 :          }
; 1126 : 
; 1127 : 			////////////////////////////////////////
; 1128 :          case ui_attr_selected_colour_end:
; 1129 :          ////////////////////////////////////////
; 1130 :          {
; 1131 : 
; 1132 : 				real_colour
; 1133 : 					rc;
; 1134 : 
; 1135 : 				rc.red = va_arg (pargs, int);

  014fa	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  014fd	83 c0 04	 add	 eax, 4
  01500	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01503	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01506	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01509	88 95 c2 fe ff
	ff		 mov	 BYTE PTR _rc$39[ebp+2], dl

; 1136 : 				rc.green = va_arg (pargs, int);

  0150f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01512	83 c0 04	 add	 eax, 4
  01515	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01518	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0151b	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0151e	88 95 c1 fe ff
	ff		 mov	 BYTE PTR _rc$39[ebp+1], dl

; 1137 : 				rc.blue = va_arg (pargs, int);

  01524	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01527	83 c0 04	 add	 eax, 4
  0152a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0152d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01530	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01533	88 95 c0 fe ff
	ff		 mov	 BYTE PTR _rc$39[ebp], dl

; 1138 : 				rc.alpha = va_arg (pargs, int);

  01539	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0153c	83 c0 04	 add	 eax, 4
  0153f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01542	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01545	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01548	88 95 c3 fe ff
	ff		 mov	 BYTE PTR _rc$39[ebp+3], dl

; 1139 : 
; 1140 : 				set_ui_object_selected_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  0154e	0f b6 85 c3 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$39[ebp+3]
  01555	50		 push	 eax
  01556	0f b6 8d c0 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$39[ebp]
  0155d	51		 push	 ecx
  0155e	0f b6 95 c1 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$39[ebp+1]
  01565	52		 push	 edx
  01566	0f b6 85 c2 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$39[ebp+2]
  0156d	50		 push	 eax
  0156e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01571	51		 push	 ecx
  01572	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01575	8b 02		 mov	 eax, DWORD PTR [edx]
  01577	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  0157e	ff d1		 call	 ecx

; 1141 : 
; 1142 :             break;

  01580	e9 77 0b 00 00	 jmp	 $LN4@set_ui_obj
$LN68@set_ui_obj:

; 1143 :          }
; 1144 : 
; 1145 : 			////////////////////////////////////////
; 1146 :          case ui_attr_selected_colour_start:
; 1147 :          ////////////////////////////////////////
; 1148 :          {
; 1149 : 
; 1150 : 				real_colour
; 1151 : 					rc;
; 1152 : 
; 1153 : 				rc.red = va_arg (pargs, int);

  01585	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01588	83 c0 04	 add	 eax, 4
  0158b	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0158e	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01591	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01594	88 95 be fe ff
	ff		 mov	 BYTE PTR _rc$38[ebp+2], dl

; 1154 : 				rc.green = va_arg (pargs, int);

  0159a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0159d	83 c0 04	 add	 eax, 4
  015a0	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  015a3	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  015a6	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  015a9	88 95 bd fe ff
	ff		 mov	 BYTE PTR _rc$38[ebp+1], dl

; 1155 : 				rc.blue = va_arg (pargs, int);

  015af	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  015b2	83 c0 04	 add	 eax, 4
  015b5	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  015b8	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  015bb	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  015be	88 95 bc fe ff
	ff		 mov	 BYTE PTR _rc$38[ebp], dl

; 1156 : 				rc.alpha = va_arg (pargs, int);

  015c4	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  015c7	83 c0 04	 add	 eax, 4
  015ca	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  015cd	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  015d0	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  015d3	88 95 bf fe ff
	ff		 mov	 BYTE PTR _rc$38[ebp+3], dl

; 1157 : 
; 1158 : 				set_ui_object_selected_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  015d9	0f b6 85 bf fe
	ff ff		 movzx	 eax, BYTE PTR _rc$38[ebp+3]
  015e0	50		 push	 eax
  015e1	0f b6 8d bc fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$38[ebp]
  015e8	51		 push	 ecx
  015e9	0f b6 95 bd fe
	ff ff		 movzx	 edx, BYTE PTR _rc$38[ebp+1]
  015f0	52		 push	 edx
  015f1	0f b6 85 be fe
	ff ff		 movzx	 eax, BYTE PTR _rc$38[ebp+2]
  015f8	50		 push	 eax
  015f9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  015fc	51		 push	 ecx
  015fd	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01600	8b 02		 mov	 eax, DWORD PTR [edx]
  01602	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  01609	ff d1		 call	 ecx

; 1159 : 
; 1160 :             break;

  0160b	e9 ec 0a 00 00	 jmp	 $LN4@set_ui_obj
$LN69@set_ui_obj:

; 1161 :          }
; 1162 : 
; 1163 : 			////////////////////////////////////////
; 1164 : 			case ui_attr_selected_font_colour:
; 1165 : 			////////////////////////////////////////
; 1166 : 			{
; 1167 : 
; 1168 : 				real_colour
; 1169 : 					rc;
; 1170 : 
; 1171 : 				rc.red = va_arg (pargs, int);

  01610	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01613	83 c0 04	 add	 eax, 4
  01616	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01619	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0161c	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0161f	88 95 ba fe ff
	ff		 mov	 BYTE PTR _rc$37[ebp+2], dl

; 1172 : 				rc.green = va_arg (pargs, int);

  01625	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01628	83 c0 04	 add	 eax, 4
  0162b	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0162e	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01631	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01634	88 95 b9 fe ff
	ff		 mov	 BYTE PTR _rc$37[ebp+1], dl

; 1173 : 				rc.blue = va_arg (pargs, int);

  0163a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0163d	83 c0 04	 add	 eax, 4
  01640	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01643	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01646	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01649	88 95 b8 fe ff
	ff		 mov	 BYTE PTR _rc$37[ebp], dl

; 1174 : 				rc.alpha = va_arg (pargs, int);

  0164f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01652	83 c0 04	 add	 eax, 4
  01655	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01658	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0165b	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0165e	88 95 bb fe ff
	ff		 mov	 BYTE PTR _rc$37[ebp+3], dl

; 1175 : 
; 1176 : 				set_ui_object_selected_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  01664	0f b6 85 bb fe
	ff ff		 movzx	 eax, BYTE PTR _rc$37[ebp+3]
  0166b	50		 push	 eax
  0166c	0f b6 8d b8 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$37[ebp]
  01673	51		 push	 ecx
  01674	0f b6 95 b9 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$37[ebp+1]
  0167b	52		 push	 edx
  0167c	0f b6 85 ba fe
	ff ff		 movzx	 eax, BYTE PTR _rc$37[ebp+2]
  01683	50		 push	 eax
  01684	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01687	51		 push	 ecx
  01688	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0168b	8b 02		 mov	 eax, DWORD PTR [edx]
  0168d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  01694	ff d1		 call	 ecx

; 1177 : 				set_ui_object_selected_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  01696	0f b6 85 bb fe
	ff ff		 movzx	 eax, BYTE PTR _rc$37[ebp+3]
  0169d	50		 push	 eax
  0169e	0f b6 8d b8 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$37[ebp]
  016a5	51		 push	 ecx
  016a6	0f b6 95 b9 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$37[ebp+1]
  016ad	52		 push	 edx
  016ae	0f b6 85 ba fe
	ff ff		 movzx	 eax, BYTE PTR _rc$37[ebp+2]
  016b5	50		 push	 eax
  016b6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  016b9	51		 push	 ecx
  016ba	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  016bd	8b 02		 mov	 eax, DWORD PTR [edx]
  016bf	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  016c6	ff d1		 call	 ecx

; 1178 : 
; 1179 : 				break;

  016c8	e9 2f 0a 00 00	 jmp	 $LN4@set_ui_obj
$LN70@set_ui_obj:

; 1180 : 			}
; 1181 : 
; 1182 : 			////////////////////////////////////////
; 1183 : 			case ui_attr_selected_font_colour_end:
; 1184 : 			////////////////////////////////////////
; 1185 : 			{
; 1186 : 
; 1187 : 				real_colour
; 1188 : 					rc;
; 1189 : 
; 1190 : 				rc.red = va_arg (pargs, int);

  016cd	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  016d0	83 c0 04	 add	 eax, 4
  016d3	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  016d6	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  016d9	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  016dc	88 95 b6 fe ff
	ff		 mov	 BYTE PTR _rc$36[ebp+2], dl

; 1191 : 				rc.green = va_arg (pargs, int);

  016e2	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  016e5	83 c0 04	 add	 eax, 4
  016e8	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  016eb	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  016ee	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  016f1	88 95 b5 fe ff
	ff		 mov	 BYTE PTR _rc$36[ebp+1], dl

; 1192 : 				rc.blue = va_arg (pargs, int);

  016f7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  016fa	83 c0 04	 add	 eax, 4
  016fd	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01700	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01703	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01706	88 95 b4 fe ff
	ff		 mov	 BYTE PTR _rc$36[ebp], dl

; 1193 : 				rc.alpha = va_arg (pargs, int);

  0170c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0170f	83 c0 04	 add	 eax, 4
  01712	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01715	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01718	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0171b	88 95 b7 fe ff
	ff		 mov	 BYTE PTR _rc$36[ebp+3], dl

; 1194 : 
; 1195 : 				set_ui_object_selected_font_colour_end (obj, rc.red, rc.green, rc.blue, rc.alpha);

  01721	0f b6 85 b7 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$36[ebp+3]
  01728	50		 push	 eax
  01729	0f b6 8d b4 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$36[ebp]
  01730	51		 push	 ecx
  01731	0f b6 95 b5 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$36[ebp+1]
  01738	52		 push	 edx
  01739	0f b6 85 b6 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$36[ebp+2]
  01740	50		 push	 eax
  01741	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01744	51		 push	 ecx
  01745	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01748	8b 02		 mov	 eax, DWORD PTR [edx]
  0174a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_end@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  01751	ff d1		 call	 ecx

; 1196 : 
; 1197 : 				break;

  01753	e9 a4 09 00 00	 jmp	 $LN4@set_ui_obj
$LN71@set_ui_obj:

; 1198 : 			}
; 1199 : 
; 1200 : 			////////////////////////////////////////
; 1201 : 			case ui_attr_selected_font_colour_start:
; 1202 : 			////////////////////////////////////////
; 1203 : 			{
; 1204 : 
; 1205 : 				real_colour
; 1206 : 					rc;
; 1207 : 
; 1208 : 				rc.red = va_arg (pargs, int);

  01758	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0175b	83 c0 04	 add	 eax, 4
  0175e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01761	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01764	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01767	88 95 b2 fe ff
	ff		 mov	 BYTE PTR _rc$35[ebp+2], dl

; 1209 : 				rc.green = va_arg (pargs, int);

  0176d	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01770	83 c0 04	 add	 eax, 4
  01773	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01776	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01779	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0177c	88 95 b1 fe ff
	ff		 mov	 BYTE PTR _rc$35[ebp+1], dl

; 1210 : 				rc.blue = va_arg (pargs, int);

  01782	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01785	83 c0 04	 add	 eax, 4
  01788	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0178b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0178e	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  01791	88 95 b0 fe ff
	ff		 mov	 BYTE PTR _rc$35[ebp], dl

; 1211 : 				rc.alpha = va_arg (pargs, int);

  01797	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0179a	83 c0 04	 add	 eax, 4
  0179d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  017a0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  017a3	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  017a6	88 95 b3 fe ff
	ff		 mov	 BYTE PTR _rc$35[ebp+3], dl

; 1212 : 
; 1213 : 				set_ui_object_selected_font_colour_start (obj, rc.red, rc.green, rc.blue, rc.alpha);

  017ac	0f b6 85 b3 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$35[ebp+3]
  017b3	50		 push	 eax
  017b4	0f b6 8d b0 fe
	ff ff		 movzx	 ecx, BYTE PTR _rc$35[ebp]
  017bb	51		 push	 ecx
  017bc	0f b6 95 b1 fe
	ff ff		 movzx	 edx, BYTE PTR _rc$35[ebp+1]
  017c3	52		 push	 edx
  017c4	0f b6 85 b2 fe
	ff ff		 movzx	 eax, BYTE PTR _rc$35[ebp+2]
  017cb	50		 push	 eax
  017cc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  017cf	51		 push	 ecx
  017d0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  017d3	8b 02		 mov	 eax, DWORD PTR [edx]
  017d5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_colour_start@@3PAP6GXPAUUI_OBJECT@@DDDD@ZA[eax*4]
  017dc	ff d1		 call	 ecx

; 1214 : 
; 1215 : 				break;

  017de	e9 19 09 00 00	 jmp	 $LN4@set_ui_obj
$LN72@set_ui_obj:

; 1216 : 			}
; 1217 : 
; 1218 : 			////////////////////////////////////////
; 1219 : 			case ui_attr_selected_font_type:
; 1220 : 			////////////////////////////////////////
; 1221 : 			{
; 1222 : 
; 1223 : 				font_types
; 1224 : 					font_id;
; 1225 : 
; 1226 : 				font_id = (font_types) va_arg (pargs, int);

  017e3	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  017e6	83 c0 04	 add	 eax, 4
  017e9	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  017ec	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  017ef	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  017f2	89 95 ac fe ff
	ff		 mov	 DWORD PTR _font_id$34[ebp], edx

; 1227 : 
; 1228 : 				set_ui_object_selected_font_type (obj, font_id);

  017f8	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR _font_id$34[ebp]
  017fe	50		 push	 eax
  017ff	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01802	51		 push	 ecx
  01803	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01806	8b 02		 mov	 eax, DWORD PTR [edx]
  01808	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_font_type@@3PAP6GXPAUUI_OBJECT@@W4FONT_TYPES@@@ZA[eax*4]
  0180f	ff d1		 call	 ecx

; 1229 : 
; 1230 : 				break;

  01811	e9 e6 08 00 00	 jmp	 $LN4@set_ui_obj
$LN73@set_ui_obj:

; 1231 : 			}
; 1232 : 
; 1233 : 			////////////////////////////////////////
; 1234 :          case ui_attr_selected_texture_graphic:
; 1235 :          ////////////////////////////////////////
; 1236 :          {
; 1237 : 
; 1238 : 				int
; 1239 : 					graphic;
; 1240 : 
; 1241 :             graphic = va_arg (pargs, int);

  01816	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01819	83 c0 04	 add	 eax, 4
  0181c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0181f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01822	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01825	89 95 a8 fe ff
	ff		 mov	 DWORD PTR _graphic$33[ebp], edx

; 1242 : 
; 1243 :             set_ui_object_selected_texture_graphic (obj, (struct TEXTURE_GRAPHIC *) graphic);

  0182b	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR _graphic$33[ebp]
  01831	50		 push	 eax
  01832	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01835	51		 push	 ecx
  01836	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01839	8b 02		 mov	 eax, DWORD PTR [edx]
  0183b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_selected_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[eax*4]
  01842	ff d1		 call	 ecx

; 1244 : 
; 1245 :             break;

  01844	e9 b3 08 00 00	 jmp	 $LN4@set_ui_obj
$LN74@set_ui_obj:

; 1246 :          }
; 1247 : 
; 1248 : 			////////////////////////////////////////
; 1249 :          case ui_attr_size:
; 1250 :          ////////////////////////////////////////
; 1251 :          {
; 1252 : 
; 1253 :             vec2d
; 1254 :                pos;
; 1255 : 
; 1256 :             pos.x = va_arg (pargs, double);

  01849	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0184c	83 c0 08	 add	 eax, 8
  0184f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01852	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01855	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0185a	f3 0f 11 85 a0
	fe ff ff	 movss	 DWORD PTR _pos$32[ebp], xmm0

; 1257 : 
; 1258 : 			   pos.y = va_arg (pargs, double);

  01862	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01865	83 c0 08	 add	 eax, 8
  01868	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  0186b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0186e	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01873	f3 0f 11 85 a4
	fe ff ff	 movss	 DWORD PTR _pos$32[ebp+4], xmm0

; 1259 : 
; 1260 :             set_ui_object_x_size_end (obj, pos.x);

  0187b	51		 push	 ecx
  0187c	f3 0f 10 85 a0
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$32[ebp]
  01884	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01889	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0188c	50		 push	 eax
  0188d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01890	8b 11		 mov	 edx, DWORD PTR [ecx]
  01892	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01899	ff d0		 call	 eax

; 1261 : 		      set_ui_object_y_size_end (obj, pos.y);

  0189b	51		 push	 ecx
  0189c	f3 0f 10 85 a4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$32[ebp+4]
  018a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018a9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  018ac	50		 push	 eax
  018ad	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  018b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  018b2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  018b9	ff d0		 call	 eax

; 1262 : 
; 1263 :             set_ui_object_x_size_start (obj, pos.x);

  018bb	51		 push	 ecx
  018bc	f3 0f 10 85 a0
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$32[ebp]
  018c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018c9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  018cc	50		 push	 eax
  018cd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  018d0	8b 11		 mov	 edx, DWORD PTR [ecx]
  018d2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  018d9	ff d0		 call	 eax

; 1264 : 		      set_ui_object_y_size_start (obj, pos.y);

  018db	51		 push	 ecx
  018dc	f3 0f 10 85 a4
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$32[ebp+4]
  018e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  018e9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  018ec	50		 push	 eax
  018ed	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  018f0	8b 11		 mov	 edx, DWORD PTR [ecx]
  018f2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  018f9	ff d0		 call	 eax

; 1265 : 
; 1266 :             break;

  018fb	e9 fc 07 00 00	 jmp	 $LN4@set_ui_obj
$LN75@set_ui_obj:

; 1267 :          }
; 1268 : 
; 1269 : 			////////////////////////////////////////
; 1270 :          case ui_attr_size_end:
; 1271 :          ////////////////////////////////////////
; 1272 :          {
; 1273 : 
; 1274 :             vec2d
; 1275 :                pos;
; 1276 : 
; 1277 :             pos.x = va_arg (pargs, double);

  01900	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01903	83 c0 08	 add	 eax, 8
  01906	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01909	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0190c	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01911	f3 0f 11 85 98
	fe ff ff	 movss	 DWORD PTR _pos$31[ebp], xmm0

; 1278 : 
; 1279 : 			   pos.y = va_arg (pargs, double);

  01919	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0191c	83 c0 08	 add	 eax, 8
  0191f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01922	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01925	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0192a	f3 0f 11 85 9c
	fe ff ff	 movss	 DWORD PTR _pos$31[ebp+4], xmm0

; 1280 : 
; 1281 :             set_ui_object_x_size_end (obj, pos.x);

  01932	51		 push	 ecx
  01933	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$31[ebp]
  0193b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01940	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01943	50		 push	 eax
  01944	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01947	8b 11		 mov	 edx, DWORD PTR [ecx]
  01949	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01950	ff d0		 call	 eax

; 1282 : 		      set_ui_object_y_size_end (obj, pos.y);

  01952	51		 push	 ecx
  01953	f3 0f 10 85 9c
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$31[ebp+4]
  0195b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01960	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01963	50		 push	 eax
  01964	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01967	8b 11		 mov	 edx, DWORD PTR [ecx]
  01969	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01970	ff d0		 call	 eax

; 1283 : 
; 1284 :             break;

  01972	e9 85 07 00 00	 jmp	 $LN4@set_ui_obj
$LN76@set_ui_obj:

; 1285 :          }
; 1286 : 
; 1287 : 			////////////////////////////////////////
; 1288 :          case ui_attr_size_start:
; 1289 :          ////////////////////////////////////////
; 1290 :          {
; 1291 : 
; 1292 :             vec2d
; 1293 :                pos;
; 1294 : 
; 1295 :             pos.x = va_arg (pargs, double);

  01977	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  0197a	83 c0 08	 add	 eax, 8
  0197d	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01980	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01983	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01988	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _pos$30[ebp], xmm0

; 1296 : 
; 1297 : 			   pos.y = va_arg (pargs, double);

  01990	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01993	83 c0 08	 add	 eax, 8
  01996	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01999	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0199c	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  019a1	f3 0f 11 85 94
	fe ff ff	 movss	 DWORD PTR _pos$30[ebp+4], xmm0

; 1298 : 
; 1299 :             set_ui_object_x_size_start (obj, pos.x);

  019a9	51		 push	 ecx
  019aa	f3 0f 10 85 90
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$30[ebp]
  019b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019b7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  019ba	50		 push	 eax
  019bb	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  019be	8b 11		 mov	 edx, DWORD PTR [ecx]
  019c0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_x_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  019c7	ff d0		 call	 eax

; 1300 : 		      set_ui_object_y_size_start (obj, pos.y);

  019c9	51		 push	 ecx
  019ca	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$30[ebp+4]
  019d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  019d7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  019da	50		 push	 eax
  019db	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  019de	8b 11		 mov	 edx, DWORD PTR [ecx]
  019e0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  019e7	ff d0		 call	 eax

; 1301 : 
; 1302 :             break;

  019e9	e9 0e 07 00 00	 jmp	 $LN4@set_ui_obj
$LN77@set_ui_obj:

; 1303 :          }
; 1304 : 
; 1305 : 			////////////////////////////////////////
; 1306 :          case ui_attr_slider_min:
; 1307 :          ////////////////////////////////////////
; 1308 :          {
; 1309 : 
; 1310 : 				float
; 1311 : 					min;
; 1312 : 
; 1313 :             min = va_arg (pargs, double);

  019ee	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  019f1	83 c0 08	 add	 eax, 8
  019f4	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  019f7	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  019fa	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  019ff	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _min$29[ebp], xmm0

; 1314 : 
; 1315 : 				set_ui_object_slider_min (obj, min);

  01a07	51		 push	 ecx
  01a08	f3 0f 10 85 8c
	fe ff ff	 movss	 xmm0, DWORD PTR _min$29[ebp]
  01a10	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a15	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01a18	50		 push	 eax
  01a19	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01a1c	8b 11		 mov	 edx, DWORD PTR [ecx]
  01a1e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_slider_min@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01a25	ff d0		 call	 eax

; 1316 : 
; 1317 : 				break;

  01a27	e9 d0 06 00 00	 jmp	 $LN4@set_ui_obj
$LN78@set_ui_obj:

; 1318 : 			}
; 1319 : 
; 1320 : 			////////////////////////////////////////
; 1321 :          case ui_attr_slider_max:
; 1322 :          ////////////////////////////////////////
; 1323 :          {
; 1324 : 
; 1325 : 				float
; 1326 : 					max;
; 1327 : 
; 1328 :             max = va_arg (pargs, double);

  01a2c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01a2f	83 c0 08	 add	 eax, 8
  01a32	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01a35	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01a38	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01a3d	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _max$28[ebp], xmm0

; 1329 : 
; 1330 : 				set_ui_object_slider_max (obj, max);

  01a45	51		 push	 ecx
  01a46	f3 0f 10 85 88
	fe ff ff	 movss	 xmm0, DWORD PTR _max$28[ebp]
  01a4e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a53	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01a56	50		 push	 eax
  01a57	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01a5a	8b 11		 mov	 edx, DWORD PTR [ecx]
  01a5c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_slider_max@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01a63	ff d0		 call	 eax

; 1331 : 
; 1332 : 				break;

  01a65	e9 92 06 00 00	 jmp	 $LN4@set_ui_obj
$LN79@set_ui_obj:

; 1333 : 			}
; 1334 : 
; 1335 : 			////////////////////////////////////////
; 1336 :          case ui_attr_slider_inc:
; 1337 :          ////////////////////////////////////////
; 1338 :          {
; 1339 : 
; 1340 : 				float
; 1341 : 					inc;
; 1342 : 
; 1343 :             inc = va_arg (pargs, double);

  01a6a	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01a6d	83 c0 08	 add	 eax, 8
  01a70	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01a73	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01a76	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01a7b	f3 0f 11 85 84
	fe ff ff	 movss	 DWORD PTR _inc$27[ebp], xmm0

; 1344 : 
; 1345 : 				set_ui_object_slider_inc (obj, inc);

  01a83	51		 push	 ecx
  01a84	f3 0f 10 85 84
	fe ff ff	 movss	 xmm0, DWORD PTR _inc$27[ebp]
  01a8c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01a91	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01a94	50		 push	 eax
  01a95	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01a98	8b 11		 mov	 edx, DWORD PTR [ecx]
  01a9a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_slider_inc@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01aa1	ff d0		 call	 eax

; 1346 : 
; 1347 : 				break;

  01aa3	e9 54 06 00 00	 jmp	 $LN4@set_ui_obj
$LN80@set_ui_obj:

; 1348 : 			}
; 1349 : 
; 1350 : 			////////////////////////////////////////
; 1351 :          case ui_attr_start_time:
; 1352 :          ////////////////////////////////////////
; 1353 : 			{
; 1354 : 
; 1355 : 				int
; 1356 : 					start_time;
; 1357 : 
; 1358 : 				start_time = va_arg (pargs, int);

  01aa8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01aab	83 c0 04	 add	 eax, 4
  01aae	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01ab1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01ab4	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01ab7	89 95 80 fe ff
	ff		 mov	 DWORD PTR _start_time$26[ebp], edx

; 1359 : 
; 1360 : 				set_ui_object_start_time (obj, start_time);

  01abd	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _start_time$26[ebp]
  01ac3	50		 push	 eax
  01ac4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01ac7	51		 push	 ecx
  01ac8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01acb	8b 02		 mov	 eax, DWORD PTR [edx]
  01acd	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_start_time@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01ad4	ff d1		 call	 ecx

; 1361 : 
; 1362 : 				break;

  01ad6	e9 21 06 00 00	 jmp	 $LN4@set_ui_obj
$LN81@set_ui_obj:

; 1363 : 			}
; 1364 : 
; 1365 : 			////////////////////////////////////////
; 1366 : 			case ui_attr_state:
; 1367 : 			////////////////////////////////////////
; 1368 : 			{
; 1369 : 
; 1370 : 				int
; 1371 : 					state;
; 1372 : 
; 1373 : 				state = va_arg (pargs, int);

  01adb	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01ade	83 c0 04	 add	 eax, 4
  01ae1	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01ae4	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01ae7	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01aea	89 95 7c fe ff
	ff		 mov	 DWORD PTR _state$25[ebp], edx

; 1374 : 
; 1375 : 				set_ui_object_state (obj, state);

  01af0	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _state$25[ebp]
  01af6	50		 push	 eax
  01af7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01afa	51		 push	 ecx
  01afb	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01afe	8b 02		 mov	 eax, DWORD PTR [edx]
  01b00	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01b07	ff d1		 call	 ecx

; 1376 : 
; 1377 : 				break;

  01b09	e9 ee 05 00 00	 jmp	 $LN4@set_ui_obj
$LN82@set_ui_obj:

; 1378 : 			}
; 1379 : 
; 1380 : 			////////////////////////////////////////
; 1381 :          case ui_attr_text:
; 1382 :          ////////////////////////////////////////
; 1383 :          {
; 1384 : 
; 1385 :             const char
; 1386 :                *text;
; 1387 : 
; 1388 :             text = va_arg (pargs, const char *);

  01b0e	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01b11	83 c0 04	 add	 eax, 4
  01b14	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01b17	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01b1a	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01b1d	89 95 78 fe ff
	ff		 mov	 DWORD PTR _text$24[ebp], edx

; 1389 : 
; 1390 :             set_ui_object_text (obj, text);

  01b23	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _text$24[ebp]
  01b29	50		 push	 eax
  01b2a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01b2d	51		 push	 ecx
  01b2e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01b31	8b 02		 mov	 eax, DWORD PTR [edx]
  01b33	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  01b3a	ff d1		 call	 ecx

; 1391 : 
; 1392 :             break;

  01b3c	e9 bb 05 00 00	 jmp	 $LN4@set_ui_obj
$LN83@set_ui_obj:

; 1393 :          }
; 1394 : 
; 1395 : 			////////////////////////////////////////
; 1396 :          case ui_attr_text_justify:
; 1397 :          ////////////////////////////////////////
; 1398 :          {
; 1399 : 
; 1400 :             text_justify_types
; 1401 :                justify;
; 1402 : 
; 1403 :             justify = va_arg (pargs, text_justify_types);

  01b41	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01b44	83 c0 04	 add	 eax, 4
  01b47	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01b4a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01b4d	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01b50	89 95 74 fe ff
	ff		 mov	 DWORD PTR _justify$23[ebp], edx

; 1404 : 
; 1405 :             set_ui_object_text_justify (obj, justify);

  01b56	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _justify$23[ebp]
  01b5c	50		 push	 eax
  01b5d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01b60	51		 push	 ecx
  01b61	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01b64	8b 02		 mov	 eax, DWORD PTR [edx]
  01b66	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text_justify@@3PAP6GXPAUUI_OBJECT@@W4TEXT_JUSTIFY_TYPES@@@ZA[eax*4]
  01b6d	ff d1		 call	 ecx

; 1406 : 
; 1407 :             break;

  01b6f	e9 88 05 00 00	 jmp	 $LN4@set_ui_obj
$LN84@set_ui_obj:

; 1408 :          }
; 1409 : 
; 1410 : 			////////////////////////////////////////
; 1411 :          case ui_attr_texture_graphic:
; 1412 :          ////////////////////////////////////////
; 1413 :          {
; 1414 : 
; 1415 : 				int
; 1416 : 					graphic;
; 1417 : 
; 1418 :             graphic = va_arg (pargs, int);

  01b74	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01b77	83 c0 04	 add	 eax, 4
  01b7a	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01b7d	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01b80	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01b83	89 95 70 fe ff
	ff		 mov	 DWORD PTR _graphic$22[ebp], edx

; 1419 : 
; 1420 :             set_ui_object_texture_graphic (obj, (struct TEXTURE_GRAPHIC *) graphic);

  01b89	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _graphic$22[ebp]
  01b8f	50		 push	 eax
  01b90	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01b93	51		 push	 ecx
  01b94	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01b97	8b 02		 mov	 eax, DWORD PTR [edx]
  01b99	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[eax*4]
  01ba0	ff d1		 call	 ecx

; 1421 : 
; 1422 :             break;

  01ba2	e9 55 05 00 00	 jmp	 $LN4@set_ui_obj
$LN85@set_ui_obj:

; 1423 :          }
; 1424 : 
; 1425 : 			////////////////////////////////////////
; 1426 :          case ui_attr_time_line:
; 1427 :          ////////////////////////////////////////
; 1428 : 			{
; 1429 : 
; 1430 : 				int
; 1431 : 					time_length,
; 1432 : 					time_offset;
; 1433 : 
; 1434 : 				time_length = va_arg (pargs, int);

  01ba7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01baa	83 c0 04	 add	 eax, 4
  01bad	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01bb0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01bb3	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01bb6	89 95 6c fe ff
	ff		 mov	 DWORD PTR _time_length$21[ebp], edx

; 1435 : 				time_offset = va_arg (pargs, int);

  01bbc	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01bbf	83 c0 04	 add	 eax, 4
  01bc2	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01bc5	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01bc8	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01bcb	89 95 68 fe ff
	ff		 mov	 DWORD PTR _time_offset$20[ebp], edx

; 1436 : 
; 1437 : 				set_ui_object_time_length (obj, time_length);

  01bd1	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _time_length$21[ebp]
  01bd7	50		 push	 eax
  01bd8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01bdb	51		 push	 ecx
  01bdc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01bdf	8b 02		 mov	 eax, DWORD PTR [edx]
  01be1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_time_length@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01be8	ff d1		 call	 ecx

; 1438 : 				set_ui_object_t_value (obj, time_length);

  01bea	f3 0f 2a 85 6c
	fe ff ff	 cvtsi2ss xmm0, DWORD PTR _time_length$21[ebp]
  01bf2	51		 push	 ecx
  01bf3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01bf8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01bfb	50		 push	 eax
  01bfc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01bff	8b 11		 mov	 edx, DWORD PTR [ecx]
  01c01	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_t_value@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01c08	ff d0		 call	 eax

; 1439 : 
; 1440 : 				break;

  01c0a	e9 ed 04 00 00	 jmp	 $LN4@set_ui_obj
$LN86@set_ui_obj:

; 1441 : 			}
; 1442 :          ////////////////////////////////////////
; 1443 :          case ui_attr_time_length:
; 1444 :          ////////////////////////////////////////
; 1445 : 			{
; 1446 : 
; 1447 : 				int
; 1448 : 					time_length;
; 1449 : 
; 1450 : 				time_length = va_arg (pargs, int);

  01c0f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01c12	83 c0 04	 add	 eax, 4
  01c15	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01c18	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01c1b	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01c1e	89 95 64 fe ff
	ff		 mov	 DWORD PTR _time_length$19[ebp], edx

; 1451 : 
; 1452 : 				set_ui_object_time_length (obj, time_length);

  01c24	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR _time_length$19[ebp]
  01c2a	50		 push	 eax
  01c2b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01c2e	51		 push	 ecx
  01c2f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01c32	8b 02		 mov	 eax, DWORD PTR [edx]
  01c34	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_time_length@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01c3b	ff d1		 call	 ecx

; 1453 : 
; 1454 : 				break;

  01c3d	e9 ba 04 00 00	 jmp	 $LN4@set_ui_obj
$LN87@set_ui_obj:

; 1455 : 			}
; 1456 : 
; 1457 : 			////////////////////////////////////////
; 1458 :          case ui_attr_tool_tips:
; 1459 :          ////////////////////////////////////////
; 1460 :          {
; 1461 : 
; 1462 :             const char
; 1463 :                *tool_tips;
; 1464 : 
; 1465 :             tool_tips = va_arg (pargs, const char *);

  01c42	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01c45	83 c0 04	 add	 eax, 4
  01c48	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01c4b	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01c4e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01c51	89 95 60 fe ff
	ff		 mov	 DWORD PTR _tool_tips$18[ebp], edx

; 1466 : 
; 1467 :             set_ui_object_tool_tips (obj, tool_tips);

  01c57	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR _tool_tips$18[ebp]
  01c5d	50		 push	 eax
  01c5e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01c61	51		 push	 ecx
  01c62	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01c65	8b 02		 mov	 eax, DWORD PTR [edx]
  01c67	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_tool_tips@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  01c6e	ff d1		 call	 ecx

; 1468 : 
; 1469 :             break;

  01c70	e9 87 04 00 00	 jmp	 $LN4@set_ui_obj
$LN88@set_ui_obj:

; 1470 :          }
; 1471 : 
; 1472 : 			////////////////////////////////////////
; 1473 :          case ui_attr_tool_tips_timer:
; 1474 :          ////////////////////////////////////////
; 1475 :          {
; 1476 : 
; 1477 :             int
; 1478 :                tool_tips_timer;
; 1479 : 
; 1480 :             tool_tips_timer = va_arg (pargs, int);

  01c75	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01c78	83 c0 04	 add	 eax, 4
  01c7b	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01c7e	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01c81	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01c84	89 95 5c fe ff
	ff		 mov	 DWORD PTR _tool_tips_timer$17[ebp], edx

; 1481 : 
; 1482 :             set_ui_object_tool_tips_timer (obj, tool_tips_timer);

  01c8a	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR _tool_tips_timer$17[ebp]
  01c90	50		 push	 eax
  01c91	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01c94	51		 push	 ecx
  01c95	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01c98	8b 02		 mov	 eax, DWORD PTR [edx]
  01c9a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_tool_tips_timer@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01ca1	ff d1		 call	 ecx

; 1483 : 
; 1484 :             break;

  01ca3	e9 54 04 00 00	 jmp	 $LN4@set_ui_obj
$LN89@set_ui_obj:

; 1485 :          }
; 1486 : 
; 1487 : 			////////////////////////////////////////
; 1488 :          case ui_attr_t_value:
; 1489 :          ////////////////////////////////////////
; 1490 : 			{
; 1491 : 
; 1492 : 				float
; 1493 : 					t_value;
; 1494 : 
; 1495 : 				t_value = va_arg (pargs, double);

  01ca8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01cab	83 c0 08	 add	 eax, 8
  01cae	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01cb1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01cb4	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01cb9	f3 0f 11 85 58
	fe ff ff	 movss	 DWORD PTR _t_value$16[ebp], xmm0

; 1496 : 
; 1497 : 				set_ui_object_t_value (obj, t_value);

  01cc1	51		 push	 ecx
  01cc2	f3 0f 10 85 58
	fe ff ff	 movss	 xmm0, DWORD PTR _t_value$16[ebp]
  01cca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ccf	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01cd2	50		 push	 eax
  01cd3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01cd6	8b 11		 mov	 edx, DWORD PTR [ecx]
  01cd8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_t_value@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01cdf	ff d0		 call	 eax

; 1498 : 
; 1499 : 				break;

  01ce1	e9 16 04 00 00	 jmp	 $LN4@set_ui_obj
$LN90@set_ui_obj:

; 1500 : 			}
; 1501 : 
; 1502 : 			////////////////////////////////////////
; 1503 : 			case ui_attr_user_flag1:
; 1504 : 			////////////////////////////////////////
; 1505 : 			{
; 1506 : 
; 1507 : 				int
; 1508 : 					flag;
; 1509 : 
; 1510 : 				flag = va_arg (pargs, int);

  01ce6	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01ce9	83 c0 04	 add	 eax, 4
  01cec	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01cef	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01cf2	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01cf5	89 95 54 fe ff
	ff		 mov	 DWORD PTR _flag$15[ebp], edx

; 1511 : 
; 1512 : 				set_ui_object_user_flag1 (obj, flag);

  01cfb	8b 85 54 fe ff
	ff		 mov	 eax, DWORD PTR _flag$15[ebp]
  01d01	50		 push	 eax
  01d02	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01d05	51		 push	 ecx
  01d06	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01d09	8b 02		 mov	 eax, DWORD PTR [edx]
  01d0b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_flag1@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01d12	ff d1		 call	 ecx

; 1513 : 
; 1514 : 				break;

  01d14	e9 e3 03 00 00	 jmp	 $LN4@set_ui_obj
$LN91@set_ui_obj:

; 1515 : 			}
; 1516 : 
; 1517 : 			////////////////////////////////////////
; 1518 : 			case ui_attr_user_flag2:
; 1519 : 			////////////////////////////////////////
; 1520 : 			{
; 1521 : 
; 1522 : 				int
; 1523 : 					flag;
; 1524 : 
; 1525 : 				flag = va_arg (pargs, int);

  01d19	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01d1c	83 c0 04	 add	 eax, 4
  01d1f	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01d22	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01d25	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01d28	89 95 50 fe ff
	ff		 mov	 DWORD PTR _flag$14[ebp], edx

; 1526 : 
; 1527 : 				set_ui_object_user_flag2 (obj, flag);

  01d2e	8b 85 50 fe ff
	ff		 mov	 eax, DWORD PTR _flag$14[ebp]
  01d34	50		 push	 eax
  01d35	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01d38	51		 push	 ecx
  01d39	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01d3c	8b 02		 mov	 eax, DWORD PTR [edx]
  01d3e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_flag2@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01d45	ff d1		 call	 ecx

; 1528 : 
; 1529 : 				break;

  01d47	e9 b0 03 00 00	 jmp	 $LN4@set_ui_obj
$LN92@set_ui_obj:

; 1530 : 			}
; 1531 : 
; 1532 : 			////////////////////////////////////////
; 1533 : 			case ui_attr_user_flag3:
; 1534 : 			////////////////////////////////////////
; 1535 : 			{
; 1536 : 
; 1537 : 				int
; 1538 : 					flag;
; 1539 : 
; 1540 : 				flag = va_arg (pargs, int);

  01d4c	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01d4f	83 c0 04	 add	 eax, 4
  01d52	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01d55	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01d58	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01d5b	89 95 4c fe ff
	ff		 mov	 DWORD PTR _flag$13[ebp], edx

; 1541 : 
; 1542 : 				set_ui_object_user_flag3 (obj, flag);

  01d61	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR _flag$13[ebp]
  01d67	50		 push	 eax
  01d68	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01d6b	51		 push	 ecx
  01d6c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01d6f	8b 02		 mov	 eax, DWORD PTR [edx]
  01d71	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_flag3@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01d78	ff d1		 call	 ecx

; 1543 : 
; 1544 : 				break;

  01d7a	e9 7d 03 00 00	 jmp	 $LN4@set_ui_obj
$LN93@set_ui_obj:

; 1545 : 			}
; 1546 : 
; 1547 : 			////////////////////////////////////////
; 1548 : 			case ui_attr_user_flag4:
; 1549 : 			////////////////////////////////////////
; 1550 : 			{
; 1551 : 
; 1552 : 				int
; 1553 : 					flag;
; 1554 : 
; 1555 : 				flag = va_arg (pargs, int);

  01d7f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01d82	83 c0 04	 add	 eax, 4
  01d85	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01d88	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01d8b	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01d8e	89 95 48 fe ff
	ff		 mov	 DWORD PTR _flag$12[ebp], edx

; 1556 : 
; 1557 : 				set_ui_object_user_flag4 (obj, flag);

  01d94	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR _flag$12[ebp]
  01d9a	50		 push	 eax
  01d9b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01d9e	51		 push	 ecx
  01d9f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01da2	8b 02		 mov	 eax, DWORD PTR [edx]
  01da4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_flag4@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01dab	ff d1		 call	 ecx

; 1558 : 
; 1559 : 				break;

  01dad	e9 4a 03 00 00	 jmp	 $LN4@set_ui_obj
$LN94@set_ui_obj:

; 1560 : 			}
; 1561 : 
; 1562 : 			////////////////////////////////////////
; 1563 : 			case ui_attr_user_ptr:
; 1564 : 			////////////////////////////////////////
; 1565 : 			{
; 1566 : 
; 1567 : 				void *
; 1568 : 					ptr;
; 1569 : 
; 1570 : 				ptr = va_arg (pargs, void *);

  01db2	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01db5	83 c0 04	 add	 eax, 4
  01db8	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01dbb	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01dbe	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01dc1	89 95 44 fe ff
	ff		 mov	 DWORD PTR _ptr$11[ebp], edx

; 1571 : 
; 1572 : 				set_ui_object_user_ptr (obj, ptr);

  01dc7	8b 85 44 fe ff
	ff		 mov	 eax, DWORD PTR _ptr$11[ebp]
  01dcd	50		 push	 eax
  01dce	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01dd1	51		 push	 ecx
  01dd2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01dd5	8b 02		 mov	 eax, DWORD PTR [edx]
  01dd7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_ptr@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4]
  01dde	ff d1		 call	 ecx

; 1573 : 
; 1574 : 				break;

  01de0	e9 17 03 00 00	 jmp	 $LN4@set_ui_obj
$LN95@set_ui_obj:

; 1575 : 			}
; 1576 : 
; 1577 : 			////////////////////////////////////////
; 1578 :          case ui_attr_virtual_coords:
; 1579 :          ////////////////////////////////////////
; 1580 : 			{
; 1581 : 
; 1582 : 				int
; 1583 : 					flag;
; 1584 : 
; 1585 : 				flag = va_arg (pargs, int);

  01de5	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01de8	83 c0 04	 add	 eax, 4
  01deb	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01dee	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01df1	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  01df4	89 95 40 fe ff
	ff		 mov	 DWORD PTR _flag$10[ebp], edx

; 1586 : 
; 1587 : 				set_ui_object_virtual_coords (obj, flag);

  01dfa	8b 85 40 fe ff
	ff		 mov	 eax, DWORD PTR _flag$10[ebp]
  01e00	50		 push	 eax
  01e01	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01e04	51		 push	 ecx
  01e05	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01e08	8b 02		 mov	 eax, DWORD PTR [edx]
  01e0a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_virtual_coords@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  01e11	ff d1		 call	 ecx

; 1588 : 
; 1589 : 				break;

  01e13	e9 e4 02 00 00	 jmp	 $LN4@set_ui_obj
$LN96@set_ui_obj:

; 1590 : 			}
; 1591 : 
; 1592 : 			////////////////////////////////////////
; 1593 :          case ui_attr_virtual_position:
; 1594 :          ////////////////////////////////////////
; 1595 :          {
; 1596 : 
; 1597 :             vec2d
; 1598 :                pos;
; 1599 : 
; 1600 :             pos.x = va_arg (pargs, double);

  01e18	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01e1b	83 c0 08	 add	 eax, 8
  01e1e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01e21	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01e24	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01e29	f3 0f 11 85 38
	fe ff ff	 movss	 DWORD PTR _pos$9[ebp], xmm0

; 1601 : 				
; 1602 :             pos.y = va_arg (pargs, double);

  01e31	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01e34	83 c0 08	 add	 eax, 8
  01e37	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01e3a	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01e3d	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01e42	f3 0f 11 85 3c
	fe ff ff	 movss	 DWORD PTR _pos$9[ebp+4], xmm0

; 1603 : 
; 1604 :             set_ui_object_virtual_x (obj, pos.x);

  01e4a	51		 push	 ecx
  01e4b	f3 0f 10 85 38
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$9[ebp]
  01e53	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01e58	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01e5b	50		 push	 eax
  01e5c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01e5f	8b 11		 mov	 edx, DWORD PTR [ecx]
  01e61	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01e68	ff d0		 call	 eax

; 1605 : 
; 1606 : 				set_ui_object_virtual_y (obj, pos.y);

  01e6a	51		 push	 ecx
  01e6b	f3 0f 10 85 3c
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$9[ebp+4]
  01e73	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01e78	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01e7b	50		 push	 eax
  01e7c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01e7f	8b 11		 mov	 edx, DWORD PTR [ecx]
  01e81	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01e88	ff d0		 call	 eax

; 1607 : 
; 1608 :             break;

  01e8a	e9 6d 02 00 00	 jmp	 $LN4@set_ui_obj
$LN97@set_ui_obj:

; 1609 :          }
; 1610 : 
; 1611 : 			////////////////////////////////////////
; 1612 :          case ui_attr_virtual_size:
; 1613 :          ////////////////////////////////////////
; 1614 :          {
; 1615 : 
; 1616 :             vec2d
; 1617 :                pos;
; 1618 : 
; 1619 :             pos.x = va_arg (pargs, double);

  01e8f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01e92	83 c0 08	 add	 eax, 8
  01e95	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01e98	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01e9b	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01ea0	f3 0f 11 85 30
	fe ff ff	 movss	 DWORD PTR _pos$8[ebp], xmm0

; 1620 : 
; 1621 : 			   pos.y = va_arg (pargs, double);

  01ea8	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01eab	83 c0 08	 add	 eax, 8
  01eae	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01eb1	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01eb4	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01eb9	f3 0f 11 85 34
	fe ff ff	 movss	 DWORD PTR _pos$8[ebp+4], xmm0

; 1622 : 
; 1623 :             set_ui_object_virtual_x_size (obj, pos.x);

  01ec1	51		 push	 ecx
  01ec2	f3 0f 10 85 30
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$8[ebp]
  01eca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01ecf	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01ed2	50		 push	 eax
  01ed3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01ed6	8b 11		 mov	 edx, DWORD PTR [ecx]
  01ed8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01edf	ff d0		 call	 eax

; 1624 : 
; 1625 : 		      set_ui_object_virtual_y_size (obj, pos.y);

  01ee1	51		 push	 ecx
  01ee2	f3 0f 10 85 34
	fe ff ff	 movss	 xmm0, DWORD PTR _pos$8[ebp+4]
  01eea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01eef	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  01ef2	50		 push	 eax
  01ef3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01ef6	8b 11		 mov	 edx, DWORD PTR [ecx]
  01ef8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  01eff	ff d0		 call	 eax

; 1626 : 
; 1627 :             break;

  01f01	e9 f6 01 00 00	 jmp	 $LN4@set_ui_obj
$LN98@set_ui_obj:

; 1628 :          }
; 1629 : 
; 1630 : 			////////////////////////////////////////
; 1631 :          case ui_attr_vslider:
; 1632 :          ////////////////////////////////////////
; 1633 :          {
; 1634 : 
; 1635 : 				ui_object
; 1636 : 					*vslider;
; 1637 : 
; 1638 : 				float
; 1639 : 					min,
; 1640 : 					max,
; 1641 : 					inc,
; 1642 : 					px_size,
; 1643 : 					py_size;
; 1644 : 
; 1645 :             min = va_arg (pargs, double);

  01f06	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01f09	83 c0 08	 add	 eax, 8
  01f0c	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01f0f	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01f12	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01f17	f3 0f 11 85 28
	fe ff ff	 movss	 DWORD PTR _min$6[ebp], xmm0

; 1646 : 
; 1647 :             max = va_arg (pargs, double);

  01f1f	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01f22	83 c0 08	 add	 eax, 8
  01f25	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01f28	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01f2b	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01f30	f3 0f 11 85 24
	fe ff ff	 movss	 DWORD PTR _max$5[ebp], xmm0

; 1648 : 
; 1649 :             inc = va_arg (pargs, double);

  01f38	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  01f3b	83 c0 08	 add	 eax, 8
  01f3e	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  01f41	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  01f44	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  01f49	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR _inc$4[ebp], xmm0

; 1650 : 
; 1651 : 				px_size = get_screen_width (video_screen) / get_ui_object_x_size (obj);

  01f51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  01f56	50		 push	 eax
  01f57	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  01f5c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  01f60	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01f63	51		 push	 ecx
  01f64	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01f67	8b 02		 mov	 eax, DWORD PTR [edx]
  01f69	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  01f70	f3 0f 11 85 d0
	fd ff ff	 movss	 DWORD PTR tv3018[ebp], xmm0
  01f78	ff d1		 call	 ecx
  01f7a	d9 9d cc fd ff
	ff		 fstp	 DWORD PTR tv2978[ebp]
  01f80	f3 0f 10 85 d0
	fd ff ff	 movss	 xmm0, DWORD PTR tv3018[ebp]
  01f88	f3 0f 5e 85 cc
	fd ff ff	 divss	 xmm0, DWORD PTR tv2978[ebp]
  01f90	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR _px_size$3[ebp], xmm0

; 1652 : 				py_size = get_screen_height (video_screen) / get_ui_object_y_size (obj);

  01f98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  01f9d	50		 push	 eax
  01f9e	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  01fa3	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  01fa7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01faa	51		 push	 ecx
  01fab	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  01fae	8b 02		 mov	 eax, DWORD PTR [edx]
  01fb0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  01fb7	f3 0f 11 85 d0
	fd ff ff	 movss	 DWORD PTR tv3020[ebp], xmm0
  01fbf	ff d1		 call	 ecx
  01fc1	d9 9d cc fd ff
	ff		 fstp	 DWORD PTR tv2987[ebp]
  01fc7	f3 0f 10 85 d0
	fd ff ff	 movss	 xmm0, DWORD PTR tv3020[ebp]
  01fcf	f3 0f 5e 85 cc
	fd ff ff	 divss	 xmm0, DWORD PTR tv2987[ebp]
  01fd7	f3 0f 11 85 18
	fe ff ff	 movss	 DWORD PTR _py_size$2[ebp], xmm0

; 1653 : 
; 1654 :             vslider = create_ui_object

  01fdf	6a 11		 push	 17			; 00000011H
  01fe1	6a 03		 push	 3
  01fe3	6a 2f		 push	 47			; 0000002fH
  01fe5	f3 0f 5a 85 20
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _inc$4[ebp]
  01fed	83 ec 08	 sub	 esp, 8
  01ff0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01ff5	6a 47		 push	 71			; 00000047H
  01ff7	f3 0f 5a 85 24
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _max$5[ebp]
  01fff	83 ec 08	 sub	 esp, 8
  02002	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02007	6a 46		 push	 70			; 00000046H
  02009	f3 0f 5a 85 28
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _min$6[ebp]
  02011	83 ec 08	 sub	 esp, 8
  02014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02019	6a 45		 push	 69			; 00000045H
  0201b	83 ec 08	 sub	 esp, 8
  0201e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  02026	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0202b	f3 0f 5a 85 1c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _px_size$3[ebp]
  02033	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f98000000000000
  0203b	83 ec 08	 sub	 esp, 8
  0203e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02043	6a 59		 push	 89			; 00000059H
  02045	83 ec 08	 sub	 esp, 8
  02048	0f 57 c0	 xorps	 xmm0, xmm0
  0204b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02050	f3 0f 5a 85 1c
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _px_size$3[ebp]
  02058	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f98000000000000
  02060	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  02068	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0206c	83 ec 08	 sub	 esp, 8
  0206f	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  02074	6a 58		 push	 88			; 00000058H
  02076	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  02079	50		 push	 eax
  0207a	6a 32		 push	 50			; 00000032H
  0207c	6a 08		 push	 8
  0207e	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  02083	83 c4 64	 add	 esp, 100		; 00000064H
  02086	89 85 2c fe ff
	ff		 mov	 DWORD PTR _vslider$7[ebp], eax

; 1655 : 					(
; 1656 : 						UI_TYPE_VSLIDER,
; 1657 : 						UI_ATTR_PARENT (obj),
; 1658 : 						UI_ATTR_VIRTUAL_POSITION (1.0 - (UI_SLIDER_VIRTUAL_WIDTH * px_size), 0.0),
; 1659 : 						UI_ATTR_VIRTUAL_SIZE (UI_SLIDER_VIRTUAL_WIDTH * px_size, 1.0),
; 1660 : 						UI_ATTR_SLIDER_MIN (min),
; 1661 : 						UI_ATTR_SLIDER_MAX (max),
; 1662 : 						UI_ATTR_SLIDER_INC (inc),
; 1663 : 						UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_EITHER),
; 1664 : 						UI_ATTR_END
; 1665 : 					);
; 1666 : 
; 1667 : 				set_ui_object_association (obj, vslider);

  0208c	8b 85 2c fe ff
	ff		 mov	 eax, DWORD PTR _vslider$7[ebp]
  02092	50		 push	 eax
  02093	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  02096	51		 push	 ecx
  02097	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0209a	8b 02		 mov	 eax, DWORD PTR [edx]
  0209c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_association@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  020a3	ff d1		 call	 ecx

; 1668 : 
; 1669 :             break;

  020a5	eb 55		 jmp	 SHORT $LN4@set_ui_obj
$LN99@set_ui_obj:

; 1670 : 			}
; 1671 : 
; 1672 : 			////////////////////////////////////////
; 1673 :          case ui_attr_zoomable_palette_graphic:
; 1674 :          ////////////////////////////////////////
; 1675 :          {
; 1676 : 
; 1677 : 				int 
; 1678 : 					graphic;
; 1679 : 
; 1680 :             graphic = va_arg (pargs, int);

  020a7	8b 45 0c	 mov	 eax, DWORD PTR _pargs$[ebp]
  020aa	83 c0 04	 add	 eax, 4
  020ad	89 45 0c	 mov	 DWORD PTR _pargs$[ebp], eax
  020b0	8b 4d 0c	 mov	 ecx, DWORD PTR _pargs$[ebp]
  020b3	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  020b6	89 95 14 fe ff
	ff		 mov	 DWORD PTR _graphic$1[ebp], edx

; 1681 : 
; 1682 :             set_ui_object_zoomable_palette_graphic (obj, (struct ZOOMABLE_GRAPHIC *) graphic);

  020bc	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR _graphic$1[ebp]
  020c2	50		 push	 eax
  020c3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  020c6	51		 push	 ecx
  020c7	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  020ca	8b 02		 mov	 eax, DWORD PTR [edx]
  020cc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_zoomable_palette_graphic@@3PAP6GXPAUUI_OBJECT@@PAUZOOMABLE_GRAPHIC@@@ZA[eax*4]
  020d3	ff d1		 call	 ecx

; 1683 : 
; 1684 : 				set_ui_object_graphic_type (obj, UI_OBJECT_ZOOMABLE_PALETTE_GRAPHIC);

  020d5	6a 04		 push	 4
  020d7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  020da	50		 push	 eax
  020db	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  020de	8b 11		 mov	 edx, DWORD PTR [ecx]
  020e0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  020e7	ff d0		 call	 eax

; 1685 : 
; 1686 :             break;

  020e9	eb 11		 jmp	 SHORT $LN4@set_ui_obj
$LN100@set_ui_obj:

; 1687 :          }
; 1688 : 
; 1689 :          ////////////////////////////////////////
; 1690 :          default:
; 1691 :          ////////////////////////////////////////
; 1692 :          {
; 1693 : 
; 1694 :             debug_fatal ("Invalid ui_object attribute = %d", attr);

  020eb	8b 45 fc	 mov	 eax, DWORD PTR _attr$[ebp]
  020ee	50		 push	 eax
  020ef	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@BDBMBHAN@Invalid?5ui_object?5attribute?5?$DN?5?$CF@
  020f4	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  020f9	83 c4 08	 add	 esp, 8
$LN4@set_ui_obj:

; 1695 : 
; 1696 :             break;
; 1697 :          }
; 1698 :       }
; 1699 :    }

  020fc	e9 29 df ff ff	 jmp	 $LN6@set_ui_obj
$LN3@set_ui_obj:
$LN1@set_ui_obj:

; 1700 : }

  02101	5f		 pop	 edi
  02102	5e		 pop	 esi
  02103	5b		 pop	 ebx
  02104	8b e5		 mov	 esp, ebp
  02106	5d		 pop	 ebp
  02107	c2 08 00	 ret	 8
  0210a	66 90		 npad	 2
$LN104@set_ui_obj:
  0210c	00 00 00 00	 DD	 $LN7@set_ui_obj
  02110	00 00 00 00	 DD	 $LN8@set_ui_obj
  02114	00 00 00 00	 DD	 $LN9@set_ui_obj
  02118	00 00 00 00	 DD	 $LN10@set_ui_obj
  0211c	00 00 00 00	 DD	 $LN11@set_ui_obj
  02120	00 00 00 00	 DD	 $LN12@set_ui_obj
  02124	00 00 00 00	 DD	 $LN13@set_ui_obj
  02128	00 00 00 00	 DD	 $LN14@set_ui_obj
  0212c	00 00 00 00	 DD	 $LN15@set_ui_obj
  02130	00 00 00 00	 DD	 $LN16@set_ui_obj
  02134	00 00 00 00	 DD	 $LN17@set_ui_obj
  02138	00 00 00 00	 DD	 $LN18@set_ui_obj
  0213c	00 00 00 00	 DD	 $LN19@set_ui_obj
  02140	00 00 00 00	 DD	 $LN20@set_ui_obj
  02144	00 00 00 00	 DD	 $LN21@set_ui_obj
  02148	00 00 00 00	 DD	 $LN22@set_ui_obj
  0214c	00 00 00 00	 DD	 $LN23@set_ui_obj
  02150	00 00 00 00	 DD	 $LN24@set_ui_obj
  02154	00 00 00 00	 DD	 $LN25@set_ui_obj
  02158	00 00 00 00	 DD	 $LN26@set_ui_obj
  0215c	00 00 00 00	 DD	 $LN27@set_ui_obj
  02160	00 00 00 00	 DD	 $LN28@set_ui_obj
  02164	00 00 00 00	 DD	 $LN29@set_ui_obj
  02168	00 00 00 00	 DD	 $LN30@set_ui_obj
  0216c	00 00 00 00	 DD	 $LN31@set_ui_obj
  02170	00 00 00 00	 DD	 $LN32@set_ui_obj
  02174	00 00 00 00	 DD	 $LN33@set_ui_obj
  02178	00 00 00 00	 DD	 $LN34@set_ui_obj
  0217c	00 00 00 00	 DD	 $LN35@set_ui_obj
  02180	00 00 00 00	 DD	 $LN36@set_ui_obj
  02184	00 00 00 00	 DD	 $LN37@set_ui_obj
  02188	00 00 00 00	 DD	 $LN38@set_ui_obj
  0218c	00 00 00 00	 DD	 $LN39@set_ui_obj
  02190	00 00 00 00	 DD	 $LN40@set_ui_obj
  02194	00 00 00 00	 DD	 $LN41@set_ui_obj
  02198	00 00 00 00	 DD	 $LN42@set_ui_obj
  0219c	00 00 00 00	 DD	 $LN43@set_ui_obj
  021a0	00 00 00 00	 DD	 $LN44@set_ui_obj
  021a4	00 00 00 00	 DD	 $LN45@set_ui_obj
  021a8	00 00 00 00	 DD	 $LN46@set_ui_obj
  021ac	00 00 00 00	 DD	 $LN47@set_ui_obj
  021b0	00 00 00 00	 DD	 $LN48@set_ui_obj
  021b4	00 00 00 00	 DD	 $LN49@set_ui_obj
  021b8	00 00 00 00	 DD	 $LN50@set_ui_obj
  021bc	00 00 00 00	 DD	 $LN52@set_ui_obj
  021c0	00 00 00 00	 DD	 $LN53@set_ui_obj
  021c4	00 00 00 00	 DD	 $LN54@set_ui_obj
  021c8	00 00 00 00	 DD	 $LN55@set_ui_obj
  021cc	00 00 00 00	 DD	 $LN56@set_ui_obj
  021d0	00 00 00 00	 DD	 $LN57@set_ui_obj
  021d4	00 00 00 00	 DD	 $LN58@set_ui_obj
  021d8	00 00 00 00	 DD	 $LN59@set_ui_obj
  021dc	00 00 00 00	 DD	 $LN60@set_ui_obj
  021e0	00 00 00 00	 DD	 $LN61@set_ui_obj
  021e4	00 00 00 00	 DD	 $LN62@set_ui_obj
  021e8	00 00 00 00	 DD	 $LN63@set_ui_obj
  021ec	00 00 00 00	 DD	 $LN64@set_ui_obj
  021f0	00 00 00 00	 DD	 $LN65@set_ui_obj
  021f4	00 00 00 00	 DD	 $LN66@set_ui_obj
  021f8	00 00 00 00	 DD	 $LN67@set_ui_obj
  021fc	00 00 00 00	 DD	 $LN68@set_ui_obj
  02200	00 00 00 00	 DD	 $LN69@set_ui_obj
  02204	00 00 00 00	 DD	 $LN70@set_ui_obj
  02208	00 00 00 00	 DD	 $LN71@set_ui_obj
  0220c	00 00 00 00	 DD	 $LN72@set_ui_obj
  02210	00 00 00 00	 DD	 $LN73@set_ui_obj
  02214	00 00 00 00	 DD	 $LN74@set_ui_obj
  02218	00 00 00 00	 DD	 $LN75@set_ui_obj
  0221c	00 00 00 00	 DD	 $LN76@set_ui_obj
  02220	00 00 00 00	 DD	 $LN77@set_ui_obj
  02224	00 00 00 00	 DD	 $LN78@set_ui_obj
  02228	00 00 00 00	 DD	 $LN79@set_ui_obj
  0222c	00 00 00 00	 DD	 $LN80@set_ui_obj
  02230	00 00 00 00	 DD	 $LN81@set_ui_obj
  02234	00 00 00 00	 DD	 $LN82@set_ui_obj
  02238	00 00 00 00	 DD	 $LN83@set_ui_obj
  0223c	00 00 00 00	 DD	 $LN84@set_ui_obj
  02240	00 00 00 00	 DD	 $LN86@set_ui_obj
  02244	00 00 00 00	 DD	 $LN85@set_ui_obj
  02248	00 00 00 00	 DD	 $LN87@set_ui_obj
  0224c	00 00 00 00	 DD	 $LN88@set_ui_obj
  02250	00 00 00 00	 DD	 $LN89@set_ui_obj
  02254	00 00 00 00	 DD	 $LN90@set_ui_obj
  02258	00 00 00 00	 DD	 $LN91@set_ui_obj
  0225c	00 00 00 00	 DD	 $LN92@set_ui_obj
  02260	00 00 00 00	 DD	 $LN93@set_ui_obj
  02264	00 00 00 00	 DD	 $LN94@set_ui_obj
  02268	00 00 00 00	 DD	 $LN95@set_ui_obj
  0226c	00 00 00 00	 DD	 $LN96@set_ui_obj
  02270	00 00 00 00	 DD	 $LN97@set_ui_obj
  02274	00 00 00 00	 DD	 $LN98@set_ui_obj
  02278	00 00 00 00	 DD	 $LN99@set_ui_obj
?set_ui_object_attributes@@YGXPAUUI_OBJECT@@PAD@Z ENDP	; set_ui_object_attributes
_TEXT	ENDS
END
