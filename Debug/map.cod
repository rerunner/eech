; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05GCHFJAOL@SIDES@				; `string'
PUBLIC	??_C@_03KEDKDEDN@FOG@				; `string'
PUBLIC	??_C@_04FJFEHHNM@GRID@				; `string'
PUBLIC	??_C@_05DCGMMHHE@SITES@				; `string'
PUBLIC	??_C@_04HPKCHBMP@MISN@				; `string'
PUBLIC	??_C@_03KNFJGCC@AIR@				; `string'
PUBLIC	??_C@_04FMBLGBFJ@GRND@				; `string'
PUBLIC	??_C@_03JIDALBMA@SEA@				; `string'
PUBLIC	??_C@_03BKLPEICB@DEF@				; `string'
PUBLIC	??_C@_04BLABHDLF@THRT@				; `string'
PUBLIC	??_C@_05NJAIBCBJ@TRACK@				; `string'
;	COMDAT ??_C@_05NJAIBCBJ@TRACK@
CONST	SEGMENT
??_C@_05NJAIBCBJ@TRACK@ DB 'TRACK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04BLABHDLF@THRT@
CONST	SEGMENT
??_C@_04BLABHDLF@THRT@ DB 'THRT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BKLPEICB@DEF@
CONST	SEGMENT
??_C@_03BKLPEICB@DEF@ DB 'DEF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03JIDALBMA@SEA@
CONST	SEGMENT
??_C@_03JIDALBMA@SEA@ DB 'SEA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FMBLGBFJ@GRND@
CONST	SEGMENT
??_C@_04FMBLGBFJ@GRND@ DB 'GRND', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KNFJGCC@AIR@
CONST	SEGMENT
??_C@_03KNFJGCC@AIR@ DB 'AIR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPKCHBMP@MISN@
CONST	SEGMENT
??_C@_04HPKCHBMP@MISN@ DB 'MISN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DCGMMHHE@SITES@
CONST	SEGMENT
??_C@_05DCGMMHHE@SITES@ DB 'SITES', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FJFEHHNM@GRID@
CONST	SEGMENT
??_C@_04FJFEHHNM@GRID@ DB 'GRID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KEDKDEDN@FOG@
CONST	SEGMENT
??_C@_03KEDKDEDN@FOG@ DB 'FOG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GCHFJAOL@SIDES@
CONST	SEGMENT
??_C@_05GCHFJAOL@SIDES@ DB 'SIDES', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?map_side_band_data@@3QBUMAP_SIDE_BAND_TYPE@@B DD 000000000r ; 0 ; map_side_band_data
	DD	03eb33333r			; 0.35
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03eb33333r			; 0.35
	DD	03ee66666r			; 0.45
	DD	03f4ccccdr			; 0.8
	DD	03e4ccccdr			; 0.2
	DD	03ee66666r			; 0.45
	DD	03f000000r			; 0.5
	DD	03f19999ar			; 0.6
	DD	03ecccccdr			; 0.4
	DD	03f000000r			; 0.5
	DD	03f0ccccdr			; 0.55
	DD	03ecccccdr			; 0.4
	DD	03f19999ar			; 0.6
	DD	03f0ccccdr			; 0.55
	DD	03f266666r			; 0.65
	DD	03e4ccccdr			; 0.2
	DD	03f4ccccdr			; 0.8
	DD	03f266666r			; 0.65
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B DD 03H ; layer_control_button_data
	DD	FLAT:?map_layer_control_radio_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_05GCHFJAOL@SIDES@
	DD	03H
	DD	FLAT:?map_layer_control_radio_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_03KEDKDEDN@FOG@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_04FJFEHHNM@GRID@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_05DCGMMHHE@SITES@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_04HPKCHBMP@MISN@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_03KNFJGCC@AIR@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_04FMBLGBFJ@GRND@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_03JIDALBMA@SEA@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_03BKLPEICB@DEF@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_04BLABHDLF@THRT@
	DD	04H
	DD	FLAT:?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
	DD	FLAT:??_C@_05NJAIBCBJ@TRACK@
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z		; draw_2d_map
PUBLIC	?load_map_textures@@YGXXZ			; load_map_textures
PUBLIC	?initialise_map_data@@YGXXZ			; initialise_map_data
PUBLIC	?set_active_map_object@@YGXPAUUI_OBJECT@@@Z	; set_active_map_object
PUBLIC	?set_last_drawn_map_object@@YGXPAUUI_OBJECT@@@Z	; set_last_drawn_map_object
PUBLIC	?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z ; clear_map_mouse_over_object
PUBLIC	?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z ; get_map_mouse_over_entity
PUBLIC	?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z ; define_map_objects
PUBLIC	?map_goto_function@@YGXPAUUI_OBJECT@@@Z		; map_goto_function
PUBLIC	?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_centralise_function
PUBLIC	?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z	; map_zoom_in_function
PUBLIC	?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z	; map_zoom_out_function
PUBLIC	?map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z	; map_add_waypoint
PUBLIC	?map_delete_waypoint_event@@YGXXZ		; map_delete_waypoint_event
PUBLIC	?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z ; map_insert_waypoint_function
PUBLIC	?minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z ; minimize_full_screen_map_object
PUBLIC	?minimize_all_map_objects@@YGXXZ		; minimize_all_map_objects
PUBLIC	?add_map_event@@YGXHMMM@Z			; add_map_event
PUBLIC	?map_move_waypoint_events@@YGXXZ		; map_move_waypoint_events
PUBLIC	?update_map_events@@YGXXZ			; update_map_events
PUBLIC	?update_map_overlays@@YGXXZ			; update_map_overlays
PUBLIC	?update_map_animations@@YGXXZ			; update_map_animations
PUBLIC	?force_map_layer_control_object@@YGXW4MAP_LAYER_CONTROL_TYPES@@H@Z ; force_map_layer_control_object
PUBLIC	?toggle_current_map_maximise_event@@YGXPAUEVENT@@@Z ; toggle_current_map_maximise_event
PUBLIC	?shift_current_map_up_event@@YGXPAUEVENT@@@Z	; shift_current_map_up_event
PUBLIC	?shift_current_map_down_event@@YGXPAUEVENT@@@Z	; shift_current_map_down_event
PUBLIC	?shift_current_map_left_event@@YGXPAUEVENT@@@Z	; shift_current_map_left_event
PUBLIC	?shift_current_map_right_event@@YGXPAUEVENT@@@Z	; shift_current_map_right_event
PUBLIC	?fine_current_map_up_event@@YGXPAUEVENT@@@Z	; fine_current_map_up_event
PUBLIC	?fine_current_map_down_event@@YGXPAUEVENT@@@Z	; fine_current_map_down_event
PUBLIC	?fine_current_map_left_event@@YGXPAUEVENT@@@Z	; fine_current_map_left_event
PUBLIC	?fine_current_map_right_event@@YGXPAUEVENT@@@Z	; fine_current_map_right_event
PUBLIC	?zoom_in_current_map_event@@YGXPAUEVENT@@@Z	; zoom_in_current_map_event
PUBLIC	?zoom_out_current_map_event@@YGXPAUEVENT@@@Z	; zoom_out_current_map_event
PUBLIC	?centre_current_map_on_player@@YGXPAUEVENT@@@Z	; centre_current_map_on_player
PUBLIC	?map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z	; map_wheel_zoom_in_event
PUBLIC	?switch_to_satellite_event@@YGXPAUEVENT@@@Z	; switch_to_satellite_event
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	?map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z	; map_wheel_centralise
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	?map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z ; map_draw_symbol
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA ; `get_last_known_position'::`1'::__LINE__Var
PUBLIC	??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `draw_2d_map'::`1'::__LINE__Var
PUBLIC	??_C@_0P@GMAOGINM@map_dimensions@		; `string'
PUBLIC	??_C@_03PCBNCGFH@pos@				; `string'
PUBLIC	??_C@_0CF@NLNJCOFO@map_dimensions?9?$DOmouse_over_obje@ ; `string'
PUBLIC	?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_waypoint_routes'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `draw_task_waypoint_routes'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0CP@HOKFPMOM@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@ ; `string'
PUBLIC	??_C@_02HAOIJKIC@?$CFc@				; `string'
PUBLIC	?__LINE__Var@?0??draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `draw_group_waypoint_routes'::`1'::__LINE__Var
PUBLIC	??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
PUBLIC	?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA	; `load_map_icon'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@FJIGBOO@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?5NUM_ENTI@ ; `string'
PUBLIC	??_C@_0CL@GMNOCBDC@?$CIicon?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIicon?5?$DM?5NUM_MAP_@ ; `string'
PUBLIC	??_C@_08BABJIOEM@filename@			; `string'
PUBLIC	?__LINE__Var@?0??load_key_icons@@YGXH@Z@4JA	; `load_key_icons'::`1'::__LINE__Var
PUBLIC	??_C@_0DB@DHGIIPI@?$CIlayer?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlayer?5?$DM?5NUM_MA@ ; `string'
PUBLIC	??_C@_0CC@GBNODDF@graphics?2ui?2cohokum?2key?2?$CFsprp?4p@ ; `string'
PUBLIC	??_C@_0CC@FEOHGLLK@graphics?2ui?2cohokum?2key?2?$CFswht?4p@ ; `string'
PUBLIC	??_C@_0CC@MPDPJILO@graphics?2ui?2cohokum?2key?2?$CFsyel?4p@ ; `string'
PUBLIC	?__LINE__Var@?0??load_map_textures@@YGXXZ@4JA	; `load_map_textures'::`1'::__LINE__Var
PUBLIC	??_C@_0M@GDGPEHOC@map_overlay@			; `string'
PUBLIC	??_C@_0CG@HKGMLLLN@graphics?2ui?2cohokum?2icons?2campo@ ; `string'
PUBLIC	??_C@_0CG@EGCOIDPO@graphics?2ui?2cohokum?2icons?2hotsp@ ; `string'
PUBLIC	??_C@_0CD@HMDFMIMC@graphics?2ui?2cohokum?2icons?2expl?4@ ; `string'
PUBLIC	??_C@_0CE@LLFLINC@graphics?2ui?2cohokum?2icons?2mover@ ; `string'
PUBLIC	??_C@_0CF@FBGNJAIN@graphics?2ui?2cohokum?2icons?2playe@ ; `string'
PUBLIC	??_C@_0CH@ILKHPMAK@graphics?2ui?2cohokum?2icons?2selec@ ; `string'
PUBLIC	??_C@_0CG@MDOIJDPN@graphics?2ui?2cohokum?2icons?2wpadw@ ; `string'
PUBLIC	??_C@_0CG@FIDAGAPJ@graphics?2ui?2cohokum?2icons?2wpady@ ; `string'
PUBLIC	??_C@_0CF@DCLGELKH@graphics?2ui?2cohokum?2icons?2navwh@ ; `string'
PUBLIC	??_C@_0CF@KJGOLIKD@graphics?2ui?2cohokum?2icons?2navye@ ; `string'
PUBLIC	??_C@_0CG@IOCKCNBO@graphics?2ui?2cohokum?2icons?2attkw@ ; `string'
PUBLIC	??_C@_0CG@BFPCNOBK@graphics?2ui?2cohokum?2icons?2attky@ ; `string'
PUBLIC	??_C@_0CH@FJBEEOLN@graphics?2ui?2cohokum?2icons?2orngt@ ; `string'
PUBLIC	??_C@_0CG@OKCFFOLN@graphics?2ui?2cohokum?2icons?2cis_a@ ; `string'
PUBLIC	??_C@_0CH@GEGFBCK@graphics?2ui?2cohokum?2icons?2cis_r@ ; `string'
PUBLIC	??_C@_0CG@GGEEGIMM@graphics?2ui?2cohokum?2icons?2cis_a@ ; `string'
PUBLIC	??_C@_0CH@LNBGABLL@graphics?2ui?2cohokum?2icons?2cis_a@ ; `string'
PUBLIC	??_C@_0CG@FFLAKJCN@graphics?2ui?2cohokum?2icons?2cis_b@ ; `string'
PUBLIC	??_C@_0CH@KAEGHJEB@graphics?2ui?2cohokum?2icons?2cis_s@ ; `string'
PUBLIC	??_C@_0CH@DMIHKNGA@graphics?2ui?2cohokum?2icons?2cis_f@ ; `string'
PUBLIC	??_C@_0CH@GDDHMMMI@graphics?2ui?2cohokum?2icons?2cis_h@ ; `string'
PUBLIC	??_C@_0CG@BABLPFNA@graphics?2ui?2cohokum?2icons?2cis_j@ ; `string'
PUBLIC	??_C@_0CH@KAGCPFLE@graphics?2ui?2cohokum?2icons?2cis_t@ ; `string'
PUBLIC	??_C@_0CG@HANOBBDG@graphics?2ui?2cohokum?2icons?2cis_o@ ; `string'
PUBLIC	??_C@_0CH@OKFDKJOJ@graphics?2ui?2cohokum?2icons?2cis_m@ ; `string'
PUBLIC	??_C@_0CH@OJCHAKAF@graphics?2ui?2cohokum?2icons?2cis_p@ ; `string'
PUBLIC	??_C@_0CH@IDDEHKBP@graphics?2ui?2cohokum?2icons?2cis_m@ ; `string'
PUBLIC	??_C@_0CH@GAMEGKNH@graphics?2ui?2cohokum?2icons?2cis_f@ ; `string'
PUBLIC	??_C@_0CH@HHNOMDHF@graphics?2ui?2cohokum?2icons?2cis_t@ ; `string'
PUBLIC	??_C@_0CH@CEHBNGNL@graphics?2ui?2cohokum?2icons?2cis_t@ ; `string'
PUBLIC	??_C@_0CH@DHOIHBD@graphics?2ui?2cohokum?2icons?2cis_t@ ; `string'
PUBLIC	??_C@_0CH@OEDNJEHN@graphics?2ui?2cohokum?2icons?2cis_t@ ; `string'
PUBLIC	??_C@_0CH@PJFMAMDJ@graphics?2ui?2cohokum?2icons?2cis_w@ ; `string'
PUBLIC	??_C@_0CG@CNNGHODC@graphics?2ui?2cohokum?2icons?2cis_n@ ; `string'
PUBLIC	??_C@_0CH@GGHMDIIE@graphics?2ui?2cohokum?2icons?2cis_a@ ; `string'
PUBLIC	??_C@_0CF@MODPIDFC@graphics?2ui?2cohokum?2icons?2us_aa@ ; `string'
PUBLIC	??_C@_0CG@DGNHLEBO@graphics?2ui?2cohokum?2icons?2us_rw@ ; `string'
PUBLIC	??_C@_0CF@ECFOLFCD@graphics?2ui?2cohokum?2icons?2us_ap@ ; `string'
PUBLIC	??_C@_0CG@INIHOEIP@graphics?2ui?2cohokum?2icons?2us_ar@ ; `string'
PUBLIC	??_C@_0CF@HBKKHEMC@graphics?2ui?2cohokum?2icons?2us_bl@ ; `string'
PUBLIC	??_C@_0CG@JANHJMHF@graphics?2ui?2cohokum?2icons?2us_sh@ ; `string'
PUBLIC	??_C@_0CG@MBGEIFE@graphics?2ui?2cohokum?2icons?2us_fa@ ; `string'
PUBLIC	??_C@_0CG@FDKGCJPM@graphics?2ui?2cohokum?2icons?2us_he@ ; `string'
PUBLIC	??_C@_0CF@DEABCIDP@graphics?2ui?2cohokum?2icons?2us_je@ ; `string'
PUBLIC	??_C@_0CG@JAPDBAIA@graphics?2ui?2cohokum?2icons?2us_ta@ ; `string'
PUBLIC	??_C@_0CF@FEMEMMNJ@graphics?2ui?2cohokum?2icons?2us_oi@ ; `string'
PUBLIC	??_C@_0CG@NKMCEMNN@graphics?2ui?2cohokum?2icons?2us_mu@ ; `string'
PUBLIC	??_C@_0CG@NJLGOPDB@graphics?2ui?2cohokum?2icons?2us_po@ ; `string'
PUBLIC	??_C@_0CG@LDKFJPCL@graphics?2ui?2cohokum?2icons?2us_ma@ ; `string'
PUBLIC	??_C@_0CG@FAFFIPOD@graphics?2ui?2cohokum?2icons?2us_fr@ ; `string'
PUBLIC	??_C@_0CG@EHEPCGEB@graphics?2ui?2cohokum?2icons?2us_ta@ ; `string'
PUBLIC	??_C@_0CG@BEOADDOP@graphics?2ui?2cohokum?2icons?2us_tr@ ; `string'
PUBLIC	??_C@_0CG@DDOPGCCH@graphics?2ui?2cohokum?2icons?2us_tr@ ; `string'
PUBLIC	??_C@_0CG@NEKMHBEJ@graphics?2ui?2cohokum?2icons?2us_tr@ ; `string'
PUBLIC	??_C@_0CG@MJMNOJAN@graphics?2ui?2cohokum?2icons?2us_wp@ ; `string'
PUBLIC	??_C@_0CF@JMMKDNN@graphics?2ui?2cohokum?2icons?2us_na@ ; `string'
PUBLIC	??_C@_0CG@FGONNNLA@graphics?2ui?2cohokum?2icons?2us_at@ ; `string'
PUBLIC	??_C@_03KLIPLJLL@min@				; `string'
PUBLIC	??_C@_03LJAEFNNE@max@				; `string'
PUBLIC	??_C@_04PPILGJNE@zmin@				; `string'
PUBLIC	??_C@_05PPAKDCBL@zmout@				; `string'
PUBLIC	??_C@_04MABHPDAO@goto@				; `string'
PUBLIC	??_C@_0CA@OGCEFMFC@graphics?2ui?2cohokum?2key?2key?4psd@ ; `string'
PUBLIC	?__LINE__Var@?0??clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA ; `clear_map_mouse_over_object'::`1'::__LINE__Var
PUBLIC	??_C@_04PJOLNDGD@data@				; `string'
PUBLIC	?__LINE__Var@?0??get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z@4JA ; `get_map_mouse_over_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_layer_control_objects@@YGXH@Z@4JA ; `update_layer_control_objects'::`1'::__LINE__Var
PUBLIC	??_C@_03GJLPFLNF@obj@				; `string'
PUBLIC	?__LINE__Var@?0??player_map_updated@@YGXPAUENTITY@@@Z@4JA ; `player_map_updated'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `check_visible_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `map_centralise_function'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `map_zoom_in_function'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `map_zoom_out_function'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z@4JA ; `map_wheel_centralise'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z@4JA ; `map_wheel_zoom_in_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA ; `map_add_waypoint'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	??_C@_03LKPPNHCE@wp1@				; `string'
PUBLIC	??_C@_0DE@JBELCLJH@get_local_entity_type?5?$CIwp1?$CJ?5?$DN?$DN?5@ ; `string'
PUBLIC	??_C@_04GGKLLKOO@task@				; `string'
PUBLIC	??_C@_0DB@FPHBFJNE@get_local_entity_type?5?$CItask?$CJ?5?$DN?$DN@ ; `string'
PUBLIC	?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA ; `map_delete_waypoint_event'::`1'::__LINE__Var
PUBLIC	??_C@_0DJ@OLKDNCL@get_local_entity_int_value?5?$CItas@ ; `string'
PUBLIC	?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA ; `map_insert_waypoint_function'::`1'::__LINE__Var
PUBLIC	??_C@_03JBNCIEOH@wp2@				; `string'
PUBLIC	??_C@_0DE@CCNPAGFE@get_local_entity_type?5?$CIwp2?$CJ?5?$DN?$DN?5@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `draw_full_screen_toggle_function'::`1'::__LINE__Var
PUBLIC	??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@ ; `string'
PUBLIC	??_C@_0CD@BPAOHGID@map_dimensions?9?$DOfull_screen_par@ ; `string'
PUBLIC	?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `toggle_full_screen_function'::`1'::__LINE__Var
PUBLIC	??_C@_0CG@BNGMJJON@?$CK?$CImap_dimensions?9?$DOfull_screen_p@ ; `string'
PUBLIC	?__LINE__Var@?0??draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `draw_goto_toggle_function'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `toggle_map_goto_function'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA ; `minimize_full_screen_function'::`1'::__LINE__Var
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
PUBLIC	?__LINE__Var@?0??minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `minimize_full_screen_map_object'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA ; `map_goto_function'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA ; `map_pop_move_waypoint_events'::`1'::__LINE__Var
PUBLIC	??_C@_0BC@PPDNBOJN@active_map_object@		; `string'
PUBLIC	??_C@_0DC@LFJOAJMD@CA_MAP?3?5setting?5flight?5time?5for@ ; `string'
PUBLIC	?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA ; `map_move_waypoint_position'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@JBPHLBFG@get_local_entity_type?5?$CImap_dime@ ; `string'
PUBLIC	?__LINE__Var@?0??map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA ; `map_get_screen_coords_from_world'::`1'::__LINE__Var
PUBLIC	??_C@_04FOIJDCIJ@wpos@				; `string'
PUBLIC	??_C@_04KLAJJEEJ@spos@				; `string'
PUBLIC	?__LINE__Var@?0??map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA ; `map_get_world_coords_from_screen'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA ; `map_draw_threat_circle'::`1'::__LINE__Var
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_threat_circles'::`1'::__LINE__Var
PUBLIC	??_C@_0GB@KGBMBIF@?$CIcircle_side_count?5?$DO?$DN?5MIN_THREA@ ; `string'
PUBLIC	?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `map_draw_group'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_groups'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA ; `map_draw_keysite'::`1'::__LINE__Var
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_keysites'::`1'::__LINE__Var
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	?__LINE__Var@?0??map_draw_towns@@YGXPAUUI_OBJECT@@@Z@4JA ; `map_draw_towns'::`1'::__LINE__Var
PUBLIC	??_C@_0L@HAFOBCJH@item?9?$DOname@		; `string'
PUBLIC	?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_pilots'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA ; `map_draw_missions'::`1'::__LINE__Var
PUBLIC	??_C@_06DOPBEMKJ@?$CFs?5?$CD?$CFd@		; `string'
PUBLIC	?__LINE__Var@?0??map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z@4JA ; `map_draw_symbol'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z@4JA ; `map_draw_string'::`1'::__LINE__Var
PUBLIC	??_C@_06ICGJLFIM@string@			; `string'
PUBLIC	?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA ; `map_draw_icon'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@KHBEEGFH@active_screen?5?$DN?$DN?5video_screen@ ; `string'
PUBLIC	??_C@_0N@OLCPEMBO@icon_graphic@			; `string'
PUBLIC	??_C@_0M@CPADPMHB@scale?5?$DO?50?40@		; `string'
PUBLIC	?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA ; `map_draw_entity_icon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA ; `map_draw_insert_waypoint_icon'::`1'::__LINE__Var
PUBLIC	??_C@_02HODPCBMO@wp@				; `string'
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z@4JA ; `map_draw_highlighted_insert_waypoint_icon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA ; `map_draw_highlighted_group'::`1'::__LINE__Var
PUBLIC	??_C@_03HNOLNALI@col@				; `string'
PUBLIC	??_C@_06BPAGHDEH@en_pos@			; `string'
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA ; `map_draw_highlighted_mission'::`1'::__LINE__Var
PUBLIC	??_C@_0M@NLFPIKFI@mission_pos@			; `string'
PUBLIC	??_C@_08GEHOOIKH@base_pos@			; `string'
PUBLIC	??_C@_09NLEHHNCH@group_pos@			; `string'
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA ; `map_draw_highlighted_base'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA ; `map_draw_highlighted_waypoint'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA ; `map_draw_highlighted_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `map_draw_mouse_over_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z@4JA ; `map_draw_subject_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z@4JA ; `bound_map_extents'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA ; `draw_2d_terrain_texture_overlays'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA ; `create_fog_of_war_texture_overlay'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@DGPDPDHN@get_pilot_entity?$CI?$CJ@	; `string'
PUBLIC	??_C@_03KHPNBODO@sec@				; `string'
PUBLIC	?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA ; `create_sector_side_texture_overlay'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@FFDDIGGL@band_data?9?$DOmin?5?$DO?$DN?50?40@ ; `string'
PUBLIC	??_C@_0BG@LGBNILCI@band_data?9?$DOmax?5?$DM?$DN?51?40@ ; `string'
PUBLIC	??_C@_09FAJGNPP@band_data@			; `string'
PUBLIC	?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA ; `create_2d_terrain_texture_overlays'::`1'::__LINE__Var
PUBLIC	??_C@_0CO@DDEODCLD@NUM_MAP_X_SECTORS?5?$DM?$DN?5MAP_OVERLA@ ; `string'
PUBLIC	??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_0CO@PDCOMPDG@NUM_MAP_Z_SECTORS?5?$DM?$DN?5MAP_OVERLA@ ; `string'
PUBLIC	?__LINE__Var@?0??remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z@4JA ; `remove_map_event'::`1'::__LINE__Var
PUBLIC	??_C@_05GFHEIIDD@event@				; `string'
PUBLIC	??_C@_05INFANHKM@?$CBprev@			; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_04OHGLKFFN@?$CF03d@			; `string'
PUBLIC	??_C@_01DICPFPGM@k@				; `string'
PUBLIC	??_C@_04FEKPLKKA@Grid@				; `string'
PUBLIC	??_C@_0M@LAGFGCNM@?$CFs?5?3?5?$CFd?5?$CFsm@	; `string'
PUBLIC	?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA ; `map_draw_track_entity'::`1'::__LINE__Var
PUBLIC	??_C@_08LLKFLCPM@Tracking@			; `string'
PUBLIC	??_C@_06DJHOIPC@?$CFs?3?5?$CFs@			; `string'
PUBLIC	??_C@_0M@EOMFOBH@?$CFs?3?5?$CFs?51?9?$CFd@	; `string'
PUBLIC	?__LINE__Var@?0??shift_current_map_up_event@@YGXPAUEVENT@@@Z@4JA ; `shift_current_map_up_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??shift_current_map_down_event@@YGXPAUEVENT@@@Z@4JA ; `shift_current_map_down_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??shift_current_map_left_event@@YGXPAUEVENT@@@Z@4JA ; `shift_current_map_left_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??shift_current_map_right_event@@YGXPAUEVENT@@@Z@4JA ; `shift_current_map_right_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fine_current_map_up_event@@YGXPAUEVENT@@@Z@4JA ; `fine_current_map_up_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fine_current_map_down_event@@YGXPAUEVENT@@@Z@4JA ; `fine_current_map_down_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fine_current_map_left_event@@YGXPAUEVENT@@@Z@4JA ; `fine_current_map_left_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??fine_current_map_right_event@@YGXPAUEVENT@@@Z@4JA ; `fine_current_map_right_event'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA ; `centre_current_map_on_player'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU2@@Z@4JA ; `define_map_objects'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA ; `switch_to_satellite_event'::`1'::__LINE__Var
PUBLIC	??_C@_0DE@EOGGNJCG@get_local_entity_int_value?5?$CIkey@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3d924925
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f6a3d71
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@4061800000000000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@4084000000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40b3880000000000
PUBLIC	__real@40cf400000000000
PUBLIC	__real@40f7318000000000
PUBLIC	__real@40f86a0000000000
PUBLIC	__real@41700000
PUBLIC	__real@41c00000
PUBLIC	__real@42200000
PUBLIC	__real@42c80000
PUBLIC	__real@43000000
PUBLIC	__real@7f7fffff
PUBLIC	__real@bf800000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?set_mouse_graphic_on@@YGXXZ:PROC		; set_mouse_graphic_on
EXTRN	?set_mouse_graphic_off@@YGXXZ:PROC		; set_mouse_graphic_off
EXTRN	?get_mouse_x@@YGHXZ:PROC			; get_mouse_x
EXTRN	?set_mouse_x@@YGXH@Z:PROC			; set_mouse_x
EXTRN	?get_mouse_y@@YGHXZ:PROC			; get_mouse_y
EXTRN	?set_mouse_y@@YGXH@Z:PROC			; set_mouse_y
EXTRN	?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z:PROC	; set_event
EXTRN	?pop_event@@YGXP6GXXZ@Z:PROC			; pop_event
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?frac@@YGMM@Z:PROC				; frac
EXTRN	?create_user_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_user_texture_screen
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?draw_filled_circle@@YGXMMMHUREAL_COLOUR@@@Z:PROC ; draw_filled_circle
EXTRN	?draw_outline_circle@@YGXMMMHUREAL_COLOUR@@@Z:PROC ; draw_outline_circle
EXTRN	?set_pixel@@YGXHHUREAL_COLOUR@@@Z:PROC		; set_pixel
EXTRN	?flush_triangle_primitives@@YGXXZ:PROC		; flush_triangle_primitives
EXTRN	?set_d3d_transparency_on@@YGXXZ:PROC		; set_d3d_transparency_on
EXTRN	?set_d3d_zbuffer_comparison@@YGXH@Z:PROC	; set_d3d_zbuffer_comparison
EXTRN	?set_d3d_texture_wrapping@@YGXHH@Z:PROC		; set_d3d_texture_wrapping
EXTRN	?set_d3d_texture_mag_filtering@@YGXH@Z:PROC	; set_d3d_texture_mag_filtering
EXTRN	?set_d3d_texture_min_filtering@@YGXH@Z:PROC	; set_d3d_texture_min_filtering
EXTRN	?set_d3d_texture_mip_filtering@@YGXH@Z:PROC	; set_d3d_texture_mip_filtering
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z:PROC ; create_texture_graphic
EXTRN	?get_texture_graphic_source_dimensions@@YGXPAUTEXTURE_GRAPHIC@@PAH1@Z:PROC ; get_texture_graphic_source_dimensions
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?set_ui_font_type@@YGXW4FONT_TYPES@@@Z:PROC	; set_ui_font_type
EXTRN	?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_ui_font_colour
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z:PROC ; set_toggle_button_off
EXTRN	?set_toggle_button_on@@YGXPAUUI_OBJECT@@@Z:PROC	; set_toggle_button_on
EXTRN	?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z:PROC ; ui_draw_texture_graphic
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?set_2d_terrain_contour_colour@@YGXH@Z:PROC	; set_2d_terrain_contour_colour
EXTRN	?draw_2d_shaded_terrain_contour_map@@YGXXZ:PROC	; draw_2d_shaded_terrain_contour_map
EXTRN	?set_2d_terrain_map_dimensions@@YGXMMMMMMMM@Z:PROC ; set_2d_terrain_map_dimensions
EXTRN	?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z:PROC ; get_2d_terrain_map_world_dimensions
EXTRN	?get_2d_terrain_map_screen_dimensions@@YGXPAM000@Z:PROC ; get_2d_terrain_map_screen_dimensions
EXTRN	?toggle_in_flight_game_modes@@YGXPAUEVENT@@@Z:PROC ; toggle_in_flight_game_modes
EXTRN	?bound_position_to_map_area@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_map_area
EXTRN	?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z:PROC ; bound_position_to_adjusted_map_volume
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?unlink_local_entity_children@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; unlink_local_entity_children
EXTRN	?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ:PROC ; create_client_server_entity
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?set_external_view_entity@@YGXPAUENTITY@@@Z:PROC ; set_external_view_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_player_task@@YGPAUENTITY@@PAU1@@Z:PROC	; get_player_task
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z:PROC ; get_local_sector_side_ratio
EXTRN	?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_sector_fog_of_war_value
EXTRN	?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z:PROC ; get_local_task_list_type
EXTRN	?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_group_primary_task
EXTRN	?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_primary_task
EXTRN	?reset_waypoint_tags@@YGXXZ:PROC		; reset_waypoint_tags
EXTRN	?update_client_server_entity_waypoint_list_tags@@YGXPAUENTITY@@@Z:PROC ; update_client_server_entity_waypoint_list_tags
EXTRN	?get_waypoint_sub_type_tag@@YGDH@Z:PROC		; get_waypoint_sub_type_tag
EXTRN	?hind_map_waypoints_changed@@YGXXZ:PROC		; hind_map_waypoints_changed
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?set_ui_mouse_over_entity@@YGXPAUENTITY@@@Z:PROC ; set_ui_mouse_over_entity
EXTRN	?get_ui_mouse_over_entity@@YGPAUENTITY@@XZ:PROC	; get_ui_mouse_over_entity
EXTRN	?get_group_page_member_list_current_entity@@YGPAUENTITY@@XZ:PROC ; get_group_page_member_list_current_entity
EXTRN	?get_current_list_mode@@YGHXZ:PROC		; get_current_list_mode
EXTRN	?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z:PROC	; destroy_fast_route
EXTRN	?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z:PROC ; temp_create_generic_waypoint_route
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?application_video_width@@3HA:DWORD		; application_video_width
EXTRN	?d3d_in_3d_scene@@3HA:DWORD			; d3d_in_3d_scene
EXTRN	?sys_col_green@@3UREAL_COLOUR@@A:DWORD		; sys_col_green
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?sys_col_yellow@@3UREAL_COLOUR@@A:DWORD		; sys_col_yellow
EXTRN	?sys_col_white@@3UREAL_COLOUR@@A:DWORD		; sys_col_white
EXTRN	?sys_col_slate_grey@@3UREAL_COLOUR@@A:DWORD	; sys_col_slate_grey
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?active_screen@@3PAUSCREEN@@A:DWORD		; active_screen
EXTRN	?highlighted_object@@3PAUUI_OBJECT@@A:DWORD	; highlighted_object
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_drawable
EXTRN	?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_item_number
EXTRN	?fn_set_ui_object_clear@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_clear
EXTRN	?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_highlightable
EXTRN	?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA:BYTE ; fn_set_ui_object_parent
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_user_ptr@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_set_ui_object_user_ptr
EXTRN	?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_user_ptr
EXTRN	?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_texture_graphic
EXTRN	?fn_set_ui_object_highlighted_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_highlighted_texture_graphic
EXTRN	?fn_set_ui_object_selected_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_selected_texture_graphic
EXTRN	?ui_colour_white@@3UREAL_COLOUR@@A:DWORD	; ui_colour_white
EXTRN	?ui_colour_dark_red@@3UREAL_COLOUR@@A:DWORD	; ui_colour_dark_red
EXTRN	?ui_colour_orange@@3UREAL_COLOUR@@A:DWORD	; ui_colour_orange
EXTRN	?ui_colour_dark_blue@@3UREAL_COLOUR@@A:DWORD	; ui_colour_dark_blue
EXTRN	?ui_ingame_dead_text_colour@@3UREAL_COLOUR@@A:DWORD ; ui_ingame_dead_text_colour
EXTRN	?ui_ingame_selected_text_colour@@3UREAL_COLOUR@@A:DWORD ; ui_ingame_selected_text_colour
EXTRN	?terrain_2d_map_contour_lines_drawn@@3HA:DWORD	; terrain_2d_map_contour_lines_drawn
EXTRN	?command_line_campaign_map_update_interval@@3HA:DWORD ; command_line_campaign_map_update_interval
EXTRN	?session_planner_goto_button@@3HA:DWORD		; session_planner_goto_button
EXTRN	?session_camcom@@3HA:DWORD			; session_camcom
EXTRN	?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A:DWORD ; in_flight_game_mode
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?overload_invalid_char_type_message@@3PBDB:DWORD ; overload_invalid_char_type_message
EXTRN	?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA:BYTE ; fn_get_local_entity_char_value
EXTRN	?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_client_server_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_client_server_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?keysite_database@@3PAUKEYSITE_DATA@@A:BYTE	; keysite_database
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?waypoint_database@@3PAUWAYPOINT_DATA@@A:BYTE	; waypoint_database
EXTRN	?ext_col_blue_force@@3UREAL_COLOUR@@A:DWORD	; ext_col_blue_force
EXTRN	?ext_col_red_force@@3UREAL_COLOUR@@A:DWORD	; ext_col_red_force
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	?campaign_page@@3PAPAUUI_OBJECT@@A:BYTE		; campaign_page
EXTRN	?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A:DWORD ; population_name_database
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?last_drawn_map_object@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; last_drawn_map_object
?active_map_object@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; active_map_object
?map_data_list@@3PAUMAP_DIMENSION_TYPE@@A DD 01H DUP (?) ; map_data_list
?map_overlay@@3PAUSCREEN@@A DD 01H DUP (?)		; map_overlay
?map_events@@3PAUMAP_EVENT_TYPE@@A DD 01H DUP (?)	; map_events
?map_icons@@3PAY0CE@PAUTEXTURE_GRAPHIC@@A DD 06cH DUP (?) ; map_icons
?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A DD 021H DUP (?)	; key_icons
?goto_icons@@3PAPAUTEXTURE_GRAPHIC@@A DD 03H DUP (?)	; goto_icons
?zoom_in_icons@@3PAPAUTEXTURE_GRAPHIC@@A DD 03H DUP (?)	; zoom_in_icons
?zoom_out_icons@@3PAPAUTEXTURE_GRAPHIC@@A DD 03H DUP (?) ; zoom_out_icons
?minimise_icons@@3PAPAUTEXTURE_GRAPHIC@@A DD 03H DUP (?) ; minimise_icons
?maximise_icons@@3PAPAUTEXTURE_GRAPHIC@@A DD 03H DUP (?) ; maximise_icons
?map_key_backdrop_graphic@@3PAUTEXTURE_GRAPHIC@@A DD 01H DUP (?) ; map_key_backdrop_graphic
?map_icons_loaded@@3HA DD 01H DUP (?)			; map_icons_loaded
?animation_timer@@3MA DD 01H DUP (?)			; animation_timer
?global_layer_controls@@3HA DD 01H DUP (?)		; global_layer_controls
?flash_timer@?1??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4MA DD 01H DUP (?) ; `map_draw_track_entity'::`2'::flash_timer
_BSS	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@43000000
CONST	SEGMENT
__real@43000000 DD 043000000r			; 128
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41c00000
CONST	SEGMENT
__real@41c00000 DD 041c00000r			; 24
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@40f86a0000000000
CONST	SEGMENT
__real@40f86a0000000000 DQ 040f86a0000000000r	; 100000
CONST	ENDS
;	COMDAT __real@40f7318000000000
CONST	SEGMENT
__real@40f7318000000000 DQ 040f7318000000000r	; 95000
CONST	ENDS
;	COMDAT __real@40cf400000000000
CONST	SEGMENT
__real@40cf400000000000 DQ 040cf400000000000r	; 16000
CONST	ENDS
;	COMDAT __real@40b3880000000000
CONST	SEGMENT
__real@40b3880000000000 DQ 040b3880000000000r	; 5000
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@4061800000000000
CONST	SEGMENT
__real@4061800000000000 DQ 04061800000000000r	; 140
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f6a3d71
CONST	SEGMENT
__real@3f6a3d71 DD 03f6a3d71r			; 0.915
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d924925
CONST	SEGMENT
__real@3d924925 DD 03d924925r			; 0.0714286
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@EOGGNJCG@get_local_entity_int_value?5?$CIkey@
CONST	SEGMENT
??_C@_0DE@EOGGNJCG@get_local_entity_int_value?5?$CIkey@ DB 'get_local_ent'
	DB	'ity_int_value (key, INT_TYPE_VIEWABLE)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA DD 0150fH ; `switch_to_satellite_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU2@@Z@4JA DD 01429H ; `define_map_objects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA DD 01401H ; `centre_current_map_on_player'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fine_current_map_right_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fine_current_map_right_event@@YGXPAUEVENT@@@Z@4JA DD 013bdH ; `fine_current_map_right_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fine_current_map_left_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fine_current_map_left_event@@YGXPAUEVENT@@@Z@4JA DD 013a2H ; `fine_current_map_left_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fine_current_map_down_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fine_current_map_down_event@@YGXPAUEVENT@@@Z@4JA DD 01387H ; `fine_current_map_down_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??fine_current_map_up_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??fine_current_map_up_event@@YGXPAUEVENT@@@Z@4JA DD 0136cH ; `fine_current_map_up_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??shift_current_map_right_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??shift_current_map_right_event@@YGXPAUEVENT@@@Z@4JA DD 0134fH ; `shift_current_map_right_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??shift_current_map_left_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??shift_current_map_left_event@@YGXPAUEVENT@@@Z@4JA DD 01330H ; `shift_current_map_left_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??shift_current_map_down_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??shift_current_map_down_event@@YGXPAUEVENT@@@Z@4JA DD 01311H ; `shift_current_map_down_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??shift_current_map_up_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??shift_current_map_up_event@@YGXPAUEVENT@@@Z@4JA DD 012f2H ; `shift_current_map_up_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@EOMFOBH@?$CFs?3?5?$CFs?51?9?$CFd@
CONST	SEGMENT
??_C@_0M@EOMFOBH@?$CFs?3?5?$CFs?51?9?$CFd@ DB '%s: %s 1-%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
CONST	SEGMENT
??_C@_06DJHOIPC@?$CFs?3?5?$CFs@ DB '%s: %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LLKFLCPM@Tracking@
CONST	SEGMENT
??_C@_08LLKFLCPM@Tracking@ DB 'Tracking', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 01290H ; `map_draw_track_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@LAGFGCNM@?$CFs?5?3?5?$CFd?5?$CFsm@
CONST	SEGMENT
??_C@_0M@LAGFGCNM@?$CFs?5?3?5?$CFd?5?$CFsm@ DB '%s : %d %sm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FEKPLKKA@Grid@
CONST	SEGMENT
??_C@_04FEKPLKKA@Grid@ DB 'Grid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DICPFPGM@k@
CONST	SEGMENT
??_C@_01DICPFPGM@k@ DB 'k', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHGLKFFN@?$CF03d@
CONST	SEGMENT
??_C@_04OHGLKFFN@?$CF03d@ DB '%03d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05INFANHKM@?$CBprev@
CONST	SEGMENT
??_C@_05INFANHKM@?$CBprev@ DB '!prev', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GFHEIIDD@event@
CONST	SEGMENT
??_C@_05GFHEIIDD@event@ DB 'event', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z@4JA DD 0115cH ; `remove_map_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CO@PDCOMPDG@NUM_MAP_Z_SECTORS?5?$DM?$DN?5MAP_OVERLA@
CONST	SEGMENT
??_C@_0CO@PDCOMPDG@NUM_MAP_Z_SECTORS?5?$DM?$DN?5MAP_OVERLA@ DB 'NUM_MAP_Z'
	DB	'_SECTORS <= MAP_OVERLAY_TEXTURE_SIZE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@ DB 'ASSERT %s (%s'
	DB	':%d)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DDEODCLD@NUM_MAP_X_SECTORS?5?$DM?$DN?5MAP_OVERLA@
CONST	SEGMENT
??_C@_0CO@DDEODCLD@NUM_MAP_X_SECTORS?5?$DM?$DN?5MAP_OVERLA@ DB 'NUM_MAP_X'
	DB	'_SECTORS <= MAP_OVERLAY_TEXTURE_SIZE', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA DD 0110dH ; `create_2d_terrain_texture_overlays'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09FAJGNPP@band_data@
CONST	SEGMENT
??_C@_09FAJGNPP@band_data@ DB 'band_data', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LGBNILCI@band_data?9?$DOmax?5?$DM?$DN?51?40@
CONST	SEGMENT
??_C@_0BG@LGBNILCI@band_data?9?$DOmax?5?$DM?$DN?51?40@ DB 'band_data->max'
	DB	' <= 1.0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FFDDIGGL@band_data?9?$DOmin?5?$DO?$DN?50?40@
CONST	SEGMENT
??_C@_0BG@FFDDIGGL@band_data?9?$DOmin?5?$DO?$DN?50?40@ DB 'band_data->min'
	DB	' >= 0.0', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA DD 01086H ; `create_sector_side_texture_overlay'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03KHPNBODO@sec@
CONST	SEGMENT
??_C@_03KHPNBODO@sec@ DB 'sec', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DGPDPDHN@get_pilot_entity?$CI?$CJ@
CONST	SEGMENT
??_C@_0BD@DGPDPDHN@get_pilot_entity?$CI?$CJ@ DB 'get_pilot_entity()', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA DD 01012H ; `create_fog_of_war_texture_overlay'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA DD 0f7eH ; `draw_2d_terrain_texture_overlays'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z@4JA DD 0f2cH ; `bound_map_extents'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z@4JA DD 0efaH ; `map_draw_subject_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 0eddH ; `map_draw_mouse_over_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA DD 0eabH ; `map_draw_highlighted_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA DD 0e45H ; `map_draw_highlighted_waypoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA DD 0e34H ; `map_draw_highlighted_base'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09NLEHHNCH@group_pos@
CONST	SEGMENT
??_C@_09NLEHHNCH@group_pos@ DB 'group_pos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GEHOOIKH@base_pos@
CONST	SEGMENT
??_C@_08GEHOOIKH@base_pos@ DB 'base_pos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NLFPIKFI@mission_pos@
CONST	SEGMENT
??_C@_0M@NLFPIKFI@mission_pos@ DB 'mission_pos', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA DD 0da2H ; `map_draw_highlighted_mission'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06BPAGHDEH@en_pos@
CONST	SEGMENT
??_C@_06BPAGHDEH@en_pos@ DB 'en_pos', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03HNOLNALI@col@
CONST	SEGMENT
??_C@_03HNOLNALI@col@ DB 'col', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA DD 0d32H ; `map_draw_highlighted_group'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z@4JA DD 0d20H ; `map_draw_highlighted_insert_waypoint_icon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02HODPCBMO@wp@
CONST	SEGMENT
??_C@_02HODPCBMO@wp@ DB 'wp', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA DD 0cebH ; `map_draw_insert_waypoint_icon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA DD 0cc1H ; `map_draw_entity_icon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@CPADPMHB@scale?5?$DO?50?40@
CONST	SEGMENT
??_C@_0M@CPADPMHB@scale?5?$DO?50?40@ DB 'scale > 0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OLCPEMBO@icon_graphic@
CONST	SEGMENT
??_C@_0N@OLCPEMBO@icon_graphic@ DB 'icon_graphic', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KHBEEGFH@active_screen?5?$DN?$DN?5video_screen@
CONST	SEGMENT
??_C@_0BO@KHBEEGFH@active_screen?5?$DN?$DN?5video_screen@ DB 'active_scre'
	DB	'en == video_screen', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA DD 0c64H ; `map_draw_icon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string@
CONST	SEGMENT
??_C@_06ICGJLFIM@string@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z@4JA DD 0c3fH ; `map_draw_string'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z@4JA DD 0c24H ; `map_draw_symbol'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06DOPBEMKJ@?$CFs?5?$CD?$CFd@
CONST	SEGMENT
??_C@_06DOPBEMKJ@?$CFs?5?$CD?$CFd@ DB '%s #%d', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 0bb5H ; `map_draw_missions'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 0b7bH ; `map_draw_pilots'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@HAFOBCJH@item?9?$DOname@
CONST	SEGMENT
??_C@_0L@HAFOBCJH@item?9?$DOname@ DB 'item->name', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_towns@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_towns@@YGXPAUUI_OBJECT@@@Z@4JA DD 0b49H ; `map_draw_towns'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 0b23H ; `map_draw_keysites'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA DD 0aa9H ; `map_draw_keysite'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 0a4fH ; `map_draw_groups'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 09caH ; `map_draw_group'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GB@KGBMBIF@?$CIcircle_side_count?5?$DO?$DN?5MIN_THREA@
CONST	SEGMENT
??_C@_0GB@KGBMBIF@?$CIcircle_side_count?5?$DO?$DN?5MIN_THREA@ DB '(circle'
	DB	'_side_count >= MIN_THREAT_CIRCLE_SIDES) && (circle_side_count'
	DB	' <= MAX_THREAT_CIRCLE_SIDES)', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 0970H ; `map_draw_threat_circles'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA DD 08f7H ; `map_draw_threat_circle'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA DD 0877H ; `map_get_world_coords_from_screen'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04KLAJJEEJ@spos@
CONST	SEGMENT
??_C@_04KLAJJEEJ@spos@ DB 'spos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04FOIJDCIJ@wpos@
CONST	SEGMENT
??_C@_04FOIJDCIJ@wpos@ DB 'wpos', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA DD 0845H ; `map_get_screen_coords_from_world'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@JBPHLBFG@get_local_entity_type?5?$CImap_dime@
CONST	SEGMENT
??_C@_0FA@JBPHLBFG@get_local_entity_type?5?$CImap_dime@ DB 'get_local_ent'
	DB	'ity_type (map_dimensions->selected_entity) == ENTITY_TYPE_WAY'
	DB	'POINT', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA DD 0810H ; `map_move_waypoint_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DC@LFJOAJMD@CA_MAP?3?5setting?5flight?5time?5for@
CONST	SEGMENT
??_C@_0DC@LFJOAJMD@CA_MAP?3?5setting?5flight?5time?5for@ DB 'CA_MAP: sett'
	DB	'ing flight time for waypoint %s to %f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PPDNBOJN@active_map_object@
CONST	SEGMENT
??_C@_0BC@PPDNBOJN@active_map_object@ DB 'active_map_object', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA DD 07aaH ; `map_pop_move_waypoint_events'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA DD 075aH ; `map_goto_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0737H ; `minimize_full_screen_map_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA DD 070bH ; `minimize_full_screen_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 06fbH ; `toggle_map_goto_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 06e4H ; `draw_goto_toggle_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CG@BNGMJJON@?$CK?$CImap_dimensions?9?$DOfull_screen_p@
CONST	SEGMENT
??_C@_0CG@BNGMJJON@?$CK?$CImap_dimensions?9?$DOfull_screen_p@ DB '*(map_d'
	DB	'imensions->full_screen_parent)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 06a7H ; `toggle_full_screen_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@BPAOHGID@map_dimensions?9?$DOfull_screen_par@
CONST	SEGMENT
??_C@_0CD@BPAOHGID@map_dimensions?9?$DOfull_screen_par@ DB 'map_dimension'
	DB	's->full_screen_parent', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@
CONST	SEGMENT
??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@ DB 'map_dimensions->map_'
	DB	'area', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0684H ; `draw_full_screen_toggle_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DE@CCNPAGFE@get_local_entity_type?5?$CIwp2?$CJ?5?$DN?$DN?5@
CONST	SEGMENT
??_C@_0DE@CCNPAGFE@get_local_entity_type?5?$CIwp2?$CJ?5?$DN?$DN?5@ DB 'ge'
	DB	't_local_entity_type (wp2) == ENTITY_TYPE_WAYPOINT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBNCIEOH@wp2@
CONST	SEGMENT
??_C@_03JBNCIEOH@wp2@ DB 'wp2', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA DD 0649H ; `map_insert_waypoint_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DJ@OLKDNCL@get_local_entity_int_value?5?$CItas@
CONST	SEGMENT
??_C@_0DJ@OLKDNCL@get_local_entity_int_value?5?$CItas@ DB 'get_local_enti'
	DB	'ty_int_value (task, INT_TYPE_PRIMARY_TASK)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA DD 0608H ; `map_delete_waypoint_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DB@FPHBFJNE@get_local_entity_type?5?$CItask?$CJ?5?$DN?$DN@
CONST	SEGMENT
??_C@_0DB@FPHBFJNE@get_local_entity_type?5?$CItask?$CJ?5?$DN?$DN@ DB 'get'
	DB	'_local_entity_type (task) == ENTITY_TYPE_TASK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGKLLKOO@task@
CONST	SEGMENT
??_C@_04GGKLLKOO@task@ DB 'task', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@JBELCLJH@get_local_entity_type?5?$CIwp1?$CJ?5?$DN?$DN?5@
CONST	SEGMENT
??_C@_0DE@JBELCLJH@get_local_entity_type?5?$CIwp1?$CJ?5?$DN?$DN?5@ DB 'ge'
	DB	't_local_entity_type (wp1) == ENTITY_TYPE_WAYPOINT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LKPPNHCE@wp1@
CONST	SEGMENT
??_C@_03LKPPNHCE@wp1@ DB 'wp1', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA DD 05e4H ; `map_add_waypoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z@4JA DD 05a7H ; `map_wheel_zoom_in_event'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z@4JA DD 058cH ; `map_wheel_centralise'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 057aH ; `map_zoom_out_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0566H ; `map_zoom_in_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0518H ; `map_centralise_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 04d3H ; `check_visible_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??player_map_updated@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??player_map_updated@@YGXPAUENTITY@@@Z@4JA DD 04c3H ; `player_map_updated'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03GJLPFLNF@obj@
CONST	SEGMENT
??_C@_03GJLPFLNF@obj@ DB 'obj', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_layer_control_objects@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_layer_control_objects@@YGXH@Z@4JA DD 0493H ; `update_layer_control_objects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z@4JA DD 0481H ; `get_map_mouse_over_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04PJOLNDGD@data@
CONST	SEGMENT
??_C@_04PJOLNDGD@data@ DB 'data', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA DD 046fH ; `clear_map_mouse_over_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@OGCEFMFC@graphics?2ui?2cohokum?2key?2key?4psd@
CONST	SEGMENT
??_C@_0CA@OGCEFMFC@graphics?2ui?2cohokum?2key?2key?4psd@ DB 'graphics\ui\'
	DB	'cohokum\key\key.psd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04MABHPDAO@goto@
CONST	SEGMENT
??_C@_04MABHPDAO@goto@ DB 'goto', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PPAKDCBL@zmout@
CONST	SEGMENT
??_C@_05PPAKDCBL@zmout@ DB 'zmout', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04PPILGJNE@zmin@
CONST	SEGMENT
??_C@_04PPILGJNE@zmin@ DB 'zmin', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LJAEFNNE@max@
CONST	SEGMENT
??_C@_03LJAEFNNE@max@ DB 'max', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KLIPLJLL@min@
CONST	SEGMENT
??_C@_03KLIPLJLL@min@ DB 'min', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FGONNNLA@graphics?2ui?2cohokum?2icons?2us_at@
CONST	SEGMENT
??_C@_0CG@FGONNNLA@graphics?2ui?2cohokum?2icons?2us_at@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_attk.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JMMKDNN@graphics?2ui?2cohokum?2icons?2us_na@
CONST	SEGMENT
??_C@_0CF@JMMKDNN@graphics?2ui?2cohokum?2icons?2us_na@ DB 'graphics\ui\co'
	DB	'hokum\icons\us_nav.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MJMNOJAN@graphics?2ui?2cohokum?2icons?2us_wp@
CONST	SEGMENT
??_C@_0CG@MJMNOJAN@graphics?2ui?2cohokum?2icons?2us_wp@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_wpad.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NEKMHBEJ@graphics?2ui?2cohokum?2icons?2us_tr@
CONST	SEGMENT
??_C@_0CG@NEKMHBEJ@graphics?2ui?2cohokum?2icons?2us_tr@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_trck.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DDOPGCCH@graphics?2ui?2cohokum?2icons?2us_tr@
CONST	SEGMENT
??_C@_0CG@DDOPGCCH@graphics?2ui?2cohokum?2icons?2us_tr@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_trnh.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BEOADDOP@graphics?2ui?2cohokum?2icons?2us_tr@
CONST	SEGMENT
??_C@_0CG@BEOADDOP@graphics?2ui?2cohokum?2icons?2us_tr@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_trna.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EHEPCGEB@graphics?2ui?2cohokum?2icons?2us_ta@
CONST	SEGMENT
??_C@_0CG@EHEPCGEB@graphics?2ui?2cohokum?2icons?2us_ta@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_tank.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FAFFIPOD@graphics?2ui?2cohokum?2icons?2us_fr@
CONST	SEGMENT
??_C@_0CG@FAFFIPOD@graphics?2ui?2cohokum?2icons?2us_fr@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_frgt.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@LDKFJPCL@graphics?2ui?2cohokum?2icons?2us_ma@
CONST	SEGMENT
??_C@_0CG@LDKFJPCL@graphics?2ui?2cohokum?2icons?2us_ma@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_mast.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NJLGOPDB@graphics?2ui?2cohokum?2icons?2us_po@
CONST	SEGMENT
??_C@_0CG@NJLGOPDB@graphics?2ui?2cohokum?2icons?2us_po@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_powr.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@NKMCEMNN@graphics?2ui?2cohokum?2icons?2us_mu@
CONST	SEGMENT
??_C@_0CG@NKMCEMNN@graphics?2ui?2cohokum?2icons?2us_mu@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_mult.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FEMEMMNJ@graphics?2ui?2cohokum?2icons?2us_oi@
CONST	SEGMENT
??_C@_0CF@FEMEMMNJ@graphics?2ui?2cohokum?2icons?2us_oi@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_oil.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JAPDBAIA@graphics?2ui?2cohokum?2icons?2us_ta@
CONST	SEGMENT
??_C@_0CG@JAPDBAIA@graphics?2ui?2cohokum?2icons?2us_ta@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_targ.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DEABCIDP@graphics?2ui?2cohokum?2icons?2us_je@
CONST	SEGMENT
??_C@_0CF@DEABCIDP@graphics?2ui?2cohokum?2icons?2us_je@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_jet.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FDKGCJPM@graphics?2ui?2cohokum?2icons?2us_he@
CONST	SEGMENT
??_C@_0CG@FDKGCJPM@graphics?2ui?2cohokum?2icons?2us_he@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_heli.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MBGEIFE@graphics?2ui?2cohokum?2icons?2us_fa@
CONST	SEGMENT
??_C@_0CG@MBGEIFE@graphics?2ui?2cohokum?2icons?2us_fa@ DB 'graphics\ui\co'
	DB	'hokum\icons\us_farp.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@JANHJMHF@graphics?2ui?2cohokum?2icons?2us_sh@
CONST	SEGMENT
??_C@_0CG@JANHJMHF@graphics?2ui?2cohokum?2icons?2us_sh@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_ship.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@HBKKHEMC@graphics?2ui?2cohokum?2icons?2us_bl@
CONST	SEGMENT
??_C@_0CF@HBKKHEMC@graphics?2ui?2cohokum?2icons?2us_bl@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_bld.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@INIHOEIP@graphics?2ui?2cohokum?2icons?2us_ar@
CONST	SEGMENT
??_C@_0CG@INIHOEIP@graphics?2ui?2cohokum?2icons?2us_ar@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_artl.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@ECFOLFCD@graphics?2ui?2cohokum?2icons?2us_ap@
CONST	SEGMENT
??_C@_0CF@ECFOLFCD@graphics?2ui?2cohokum?2icons?2us_ap@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_apc.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@DGNHLEBO@graphics?2ui?2cohokum?2icons?2us_rw@
CONST	SEGMENT
??_C@_0CG@DGNHLEBO@graphics?2ui?2cohokum?2icons?2us_rw@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_rway.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MODPIDFC@graphics?2ui?2cohokum?2icons?2us_aa@
CONST	SEGMENT
??_C@_0CF@MODPIDFC@graphics?2ui?2cohokum?2icons?2us_aa@ DB 'graphics\ui\c'
	DB	'ohokum\icons\us_aaa.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GGHMDIIE@graphics?2ui?2cohokum?2icons?2cis_a@
CONST	SEGMENT
??_C@_0CH@GGHMDIIE@graphics?2ui?2cohokum?2icons?2cis_a@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_attk.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@CNNGHODC@graphics?2ui?2cohokum?2icons?2cis_n@
CONST	SEGMENT
??_C@_0CG@CNNGHODC@graphics?2ui?2cohokum?2icons?2cis_n@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_nav.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PJFMAMDJ@graphics?2ui?2cohokum?2icons?2cis_w@
CONST	SEGMENT
??_C@_0CH@PJFMAMDJ@graphics?2ui?2cohokum?2icons?2cis_w@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_wpad.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OEDNJEHN@graphics?2ui?2cohokum?2icons?2cis_t@
CONST	SEGMENT
??_C@_0CH@OEDNJEHN@graphics?2ui?2cohokum?2icons?2cis_t@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_trck.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DHOIHBD@graphics?2ui?2cohokum?2icons?2cis_t@
CONST	SEGMENT
??_C@_0CH@DHOIHBD@graphics?2ui?2cohokum?2icons?2cis_t@ DB 'graphics\ui\co'
	DB	'hokum\icons\cis_trnh.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@CEHBNGNL@graphics?2ui?2cohokum?2icons?2cis_t@
CONST	SEGMENT
??_C@_0CH@CEHBNGNL@graphics?2ui?2cohokum?2icons?2cis_t@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_trna.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@HHNOMDHF@graphics?2ui?2cohokum?2icons?2cis_t@
CONST	SEGMENT
??_C@_0CH@HHNOMDHF@graphics?2ui?2cohokum?2icons?2cis_t@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_tank.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GAMEGKNH@graphics?2ui?2cohokum?2icons?2cis_f@
CONST	SEGMENT
??_C@_0CH@GAMEGKNH@graphics?2ui?2cohokum?2icons?2cis_f@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_frgt.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IDDEHKBP@graphics?2ui?2cohokum?2icons?2cis_m@
CONST	SEGMENT
??_C@_0CH@IDDEHKBP@graphics?2ui?2cohokum?2icons?2cis_m@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_mast.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OJCHAKAF@graphics?2ui?2cohokum?2icons?2cis_p@
CONST	SEGMENT
??_C@_0CH@OJCHAKAF@graphics?2ui?2cohokum?2icons?2cis_p@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_powr.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OKFDKJOJ@graphics?2ui?2cohokum?2icons?2cis_m@
CONST	SEGMENT
??_C@_0CH@OKFDKJOJ@graphics?2ui?2cohokum?2icons?2cis_m@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_mult.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HANOBBDG@graphics?2ui?2cohokum?2icons?2cis_o@
CONST	SEGMENT
??_C@_0CG@HANOBBDG@graphics?2ui?2cohokum?2icons?2cis_o@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_oil.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KAGCPFLE@graphics?2ui?2cohokum?2icons?2cis_t@
CONST	SEGMENT
??_C@_0CH@KAGCPFLE@graphics?2ui?2cohokum?2icons?2cis_t@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_targ.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BABLPFNA@graphics?2ui?2cohokum?2icons?2cis_j@
CONST	SEGMENT
??_C@_0CG@BABLPFNA@graphics?2ui?2cohokum?2icons?2cis_j@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_jet.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GDDHMMMI@graphics?2ui?2cohokum?2icons?2cis_h@
CONST	SEGMENT
??_C@_0CH@GDDHMMMI@graphics?2ui?2cohokum?2icons?2cis_h@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_heli.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@DMIHKNGA@graphics?2ui?2cohokum?2icons?2cis_f@
CONST	SEGMENT
??_C@_0CH@DMIHKNGA@graphics?2ui?2cohokum?2icons?2cis_f@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_farp.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@KAEGHJEB@graphics?2ui?2cohokum?2icons?2cis_s@
CONST	SEGMENT
??_C@_0CH@KAEGHJEB@graphics?2ui?2cohokum?2icons?2cis_s@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_ship.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FFLAKJCN@graphics?2ui?2cohokum?2icons?2cis_b@
CONST	SEGMENT
??_C@_0CG@FFLAKJCN@graphics?2ui?2cohokum?2icons?2cis_b@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_bld.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LNBGABLL@graphics?2ui?2cohokum?2icons?2cis_a@
CONST	SEGMENT
??_C@_0CH@LNBGABLL@graphics?2ui?2cohokum?2icons?2cis_a@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_artl.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GGEEGIMM@graphics?2ui?2cohokum?2icons?2cis_a@
CONST	SEGMENT
??_C@_0CG@GGEEGIMM@graphics?2ui?2cohokum?2icons?2cis_a@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_apc.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@GEGFBCK@graphics?2ui?2cohokum?2icons?2cis_r@
CONST	SEGMENT
??_C@_0CH@GEGFBCK@graphics?2ui?2cohokum?2icons?2cis_r@ DB 'graphics\ui\co'
	DB	'hokum\icons\cis_rway.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OKCFFOLN@graphics?2ui?2cohokum?2icons?2cis_a@
CONST	SEGMENT
??_C@_0CG@OKCFFOLN@graphics?2ui?2cohokum?2icons?2cis_a@ DB 'graphics\ui\c'
	DB	'ohokum\icons\cis_aaa.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@FJBEEOLN@graphics?2ui?2cohokum?2icons?2orngt@
CONST	SEGMENT
??_C@_0CH@FJBEEOLN@graphics?2ui?2cohokum?2icons?2orngt@ DB 'graphics\ui\c'
	DB	'ohokum\icons\orngtarg.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@BFPCNOBK@graphics?2ui?2cohokum?2icons?2attky@
CONST	SEGMENT
??_C@_0CG@BFPCNOBK@graphics?2ui?2cohokum?2icons?2attky@ DB 'graphics\ui\c'
	DB	'ohokum\icons\attkyel.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IOCKCNBO@graphics?2ui?2cohokum?2icons?2attkw@
CONST	SEGMENT
??_C@_0CG@IOCKCNBO@graphics?2ui?2cohokum?2icons?2attkw@ DB 'graphics\ui\c'
	DB	'ohokum\icons\attkwht.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KJGOLIKD@graphics?2ui?2cohokum?2icons?2navye@
CONST	SEGMENT
??_C@_0CF@KJGOLIKD@graphics?2ui?2cohokum?2icons?2navye@ DB 'graphics\ui\c'
	DB	'ohokum\icons\navyel.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@DCLGELKH@graphics?2ui?2cohokum?2icons?2navwh@
CONST	SEGMENT
??_C@_0CF@DCLGELKH@graphics?2ui?2cohokum?2icons?2navwh@ DB 'graphics\ui\c'
	DB	'ohokum\icons\navwht.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FIDAGAPJ@graphics?2ui?2cohokum?2icons?2wpady@
CONST	SEGMENT
??_C@_0CG@FIDAGAPJ@graphics?2ui?2cohokum?2icons?2wpady@ DB 'graphics\ui\c'
	DB	'ohokum\icons\wpadyel.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@MDOIJDPN@graphics?2ui?2cohokum?2icons?2wpadw@
CONST	SEGMENT
??_C@_0CG@MDOIJDPN@graphics?2ui?2cohokum?2icons?2wpadw@ DB 'graphics\ui\c'
	DB	'ohokum\icons\wpadwht.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@ILKHPMAK@graphics?2ui?2cohokum?2icons?2selec@
CONST	SEGMENT
??_C@_0CH@ILKHPMAK@graphics?2ui?2cohokum?2icons?2selec@ DB 'graphics\ui\c'
	DB	'ohokum\icons\selected.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FBGNJAIN@graphics?2ui?2cohokum?2icons?2playe@
CONST	SEGMENT
??_C@_0CF@FBGNJAIN@graphics?2ui?2cohokum?2icons?2playe@ DB 'graphics\ui\c'
	DB	'ohokum\icons\player.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LLFLINC@graphics?2ui?2cohokum?2icons?2mover@
CONST	SEGMENT
??_C@_0CE@LLFLINC@graphics?2ui?2cohokum?2icons?2mover@ DB 'graphics\ui\co'
	DB	'hokum\icons\mover.psd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HMDFMIMC@graphics?2ui?2cohokum?2icons?2expl?4@
CONST	SEGMENT
??_C@_0CD@HMDFMIMC@graphics?2ui?2cohokum?2icons?2expl?4@ DB 'graphics\ui\'
	DB	'cohokum\icons\expl.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EGCOIDPO@graphics?2ui?2cohokum?2icons?2hotsp@
CONST	SEGMENT
??_C@_0CG@EGCOIDPO@graphics?2ui?2cohokum?2icons?2hotsp@ DB 'graphics\ui\c'
	DB	'ohokum\icons\hotspot.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HKGMLLLN@graphics?2ui?2cohokum?2icons?2campo@
CONST	SEGMENT
??_C@_0CG@HKGMLLLN@graphics?2ui?2cohokum?2icons?2campo@ DB 'graphics\ui\c'
	DB	'ohokum\icons\campobj.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GDGPEHOC@map_overlay@
CONST	SEGMENT
??_C@_0M@GDGPEHOC@map_overlay@ DB 'map_overlay', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??load_map_textures@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??load_map_textures@@YGXXZ@4JA DD 03ddH	; `load_map_textures'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CC@MPDPJILO@graphics?2ui?2cohokum?2key?2?$CFsyel?4p@
CONST	SEGMENT
??_C@_0CC@MPDPJILO@graphics?2ui?2cohokum?2key?2?$CFsyel?4p@ DB 'graphics\'
	DB	'ui\cohokum\key\%syel.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FEOHGLLK@graphics?2ui?2cohokum?2key?2?$CFswht?4p@
CONST	SEGMENT
??_C@_0CC@FEOHGLLK@graphics?2ui?2cohokum?2key?2?$CFswht?4p@ DB 'graphics\'
	DB	'ui\cohokum\key\%swht.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GBNODDF@graphics?2ui?2cohokum?2key?2?$CFsprp?4p@
CONST	SEGMENT
??_C@_0CC@GBNODDF@graphics?2ui?2cohokum?2key?2?$CFsprp?4p@ DB 'graphics\u'
	DB	'i\cohokum\key\%sprp.psd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@DHGIIPI@?$CIlayer?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlayer?5?$DM?5NUM_MA@
CONST	SEGMENT
??_C@_0DB@DHGIIPI@?$CIlayer?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlayer?5?$DM?5NUM_MA@ DB '('
	DB	'layer >= 0) && (layer < NUM_MAP_LAYER_CONTROLS)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??load_key_icons@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??load_key_icons@@YGXH@Z@4JA DD 03afH	; `load_key_icons'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08BABJIOEM@filename@
CONST	SEGMENT
??_C@_08BABJIOEM@filename@ DB 'filename', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GMNOCBDC@?$CIicon?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIicon?5?$DM?5NUM_MAP_@
CONST	SEGMENT
??_C@_0CL@GMNOCBDC@?$CIicon?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIicon?5?$DM?5NUM_MAP_@ DB '('
	DB	'icon >= 0) && (icon < NUM_MAP_ICON_TYPES)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@FJIGBOO@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?5NUM_ENTI@
CONST	SEGMENT
??_C@_0CJ@FJIGBOO@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?5NUM_ENTI@ DB '('
	DB	'side >= 0) && (side < NUM_ENTITY_SIDES)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA DD 03a0H	; `load_map_icon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 0389H ; `draw_group_waypoint_routes'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02HAOIJKIC@?$CFc@
CONST	SEGMENT
??_C@_02HAOIJKIC@?$CFc@ DB '%c', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
CONST	SEGMENT
??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@ DB 'icon != MAP_ICON_NO'
	DB	'NE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HOKFPMOM@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0CP@HOKFPMOM@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_TASK', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA DD 0268H ; `draw_task_waypoint_routes'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA DD 022fH ; `map_draw_waypoint_routes'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@NLNJCOFO@map_dimensions?9?$DOmouse_over_obje@
CONST	SEGMENT
??_C@_0CF@NLNJCOFO@map_dimensions?9?$DOmouse_over_obje@ DB 'map_dimension'
	DB	's->mouse_over_object.en', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03PCBNCGFH@pos@
CONST	SEGMENT
??_C@_03PCBNCGFH@pos@ DB 'pos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GMAOGINM@map_dimensions@
CONST	SEGMENT
??_C@_0P@GMAOGINM@map_dimensions@ DB 'map_dimensions', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0144H ; `draw_2d_map'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA DD 0119H ; `get_last_known_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z
_TEXT	SEGMENT
_next$ = -8						; size = 4
_prev$ = -4						; size = 4
_event$ = 8						; size = 4
?remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z PROC	; remove_map_event, COMDAT

; 4444 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4445 : 	map_event_type
; 4446 : 		*prev,
; 4447 : 		*next;
; 4448 : 
; 4449 : 	ASSERT (event);

  00009	83 7d 08 00	 cmp	 DWORD PTR _event$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@remove_map
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05GFHEIIDD@event@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@remove_map:

; 4450 : 
; 4451 : 	prev = event->prev;

  00027	8b 45 08	 mov	 eax, DWORD PTR _event$[ebp]
  0002a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0002d	89 4d fc	 mov	 DWORD PTR _prev$[ebp], ecx

; 4452 : 
; 4453 : 	next = event->next;

  00030	8b 45 08	 mov	 eax, DWORD PTR _event$[ebp]
  00033	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00036	89 4d f8	 mov	 DWORD PTR _next$[ebp], ecx

; 4454 : 
; 4455 : 	if (prev)

  00039	83 7d fc 00	 cmp	 DWORD PTR _prev$[ebp], 0
  0003d	74 09		 je	 SHORT $LN3@remove_map

; 4456 : 	{
; 4457 : 		prev->next = next;

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _prev$[ebp]
  00042	8b 4d f8	 mov	 ecx, DWORD PTR _next$[ebp]
  00045	89 48 14	 mov	 DWORD PTR [eax+20], ecx
$LN3@remove_map:

; 4458 : 	}
; 4459 : 
; 4460 : 	if (next)

  00048	83 7d f8 00	 cmp	 DWORD PTR _next$[ebp], 0
  0004c	74 09		 je	 SHORT $LN4@remove_map

; 4461 : 	{
; 4462 : 		next->prev = prev;

  0004e	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _prev$[ebp]
  00054	89 48 18	 mov	 DWORD PTR [eax+24], ecx
$LN4@remove_map:

; 4463 : 	}
; 4464 : 
; 4465 : 	if (event == map_events)

  00057	8b 45 08	 mov	 eax, DWORD PTR _event$[ebp]
  0005a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A
  00060	75 26		 jne	 SHORT $LN5@remove_map

; 4466 : 	{
; 4467 : 		ASSERT (!prev);

  00062	83 7d fc 00	 cmp	 DWORD PTR _prev$[ebp], 0
  00066	74 18		 je	 SHORT $LN6@remove_map
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z@4JA
  0006d	83 c0 17	 add	 eax, 23			; 00000017H
  00070	50		 push	 eax
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_05INFANHKM@?$CBprev@
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@remove_map:

; 4468 : 
; 4469 : 		map_events = next;

  00080	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A, eax
$LN5@remove_map:

; 4470 : 	}
; 4471 : 
; 4472 : 	free_mem (event);

  00088	8b 45 08	 mov	 eax, DWORD PTR _event$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 4473 : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
?remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z ENDP	; remove_map_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?create_sector_side_texture_overlay@@YGXXZ
_TEXT	SEGMENT
tv83 = -144						; size = 4
tv75 = -140						; size = 4
$T1 = -136						; size = 4
$T2 = -132						; size = 4
$T3 = -128						; size = 4
$T4 = -124						; size = 4
$T5 = -120						; size = 4
_band_data$ = -52					; size = 4
_col$ = -48						; size = 4
_ratio$ = -44						; size = 4
_val$ = -40						; size = 4
_sz$ = -36						; size = 4
_sx$ = -32						; size = 4
_tz$ = -28						; size = 4
_tx$ = -24						; size = 4
_z$ = -20						; size = 4
_x$ = -16						; size = 4
_temp$ = -12						; size = 4
_band$ = -8						; size = 4
_side$ = -4						; size = 4
?create_sector_side_texture_overlay@@YGXXZ PROC		; create_sector_side_texture_overlay, COMDAT

; 4230 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 4231 : 	int
; 4232 : 		side,
; 4233 : 		band,
; 4234 : 		temp,
; 4235 : 		x, z,
; 4236 : 		tx, tz,
; 4237 : 		sx, sz;
; 4238 : 
; 4239 : 	float
; 4240 : 		val,
; 4241 : 		ratio;
; 4242 : 
; 4243 : 	rgb_colour
; 4244 : 		col;
; 4245 : 
; 4246 : 	const map_side_band_type
; 4247 : 		*band_data;
; 4248 : 
; 4249 : 	ASSERT (map_overlay);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00013	75 18		 jne	 SHORT $LN10@create_sec
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  0001a	83 c0 13	 add	 eax, 19			; 00000013H
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDGPEHOC@map_overlay@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@create_sec:

; 4250 : 
; 4251 : 	side = get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00034	74 0f		 je	 SHORT $LN16@create_sec
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00043	eb 24		 jmp	 SHORT $LN17@create_sec
$LN16@create_sec:
  00045	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  0004b	83 c2 15	 add	 edx, 21			; 00000015H
  0004e	52		 push	 edx
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005f	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN17@create_sec:
  00069	b9 01 00 00 00	 mov	 ecx, 1
  0006e	85 c9		 test	 ecx, ecx
  00070	74 0c		 je	 SHORT $LN18@create_sec
  00072	c7 85 70 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  0007c	eb 24		 jmp	 SHORT $LN19@create_sec
$LN18@create_sec:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  00084	83 c2 15	 add	 edx, 21			; 00000015H
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN19@create_sec:
  000a2	68 bb 00 00 00	 push	 187			; 000000bbH
  000a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000ad	51		 push	 ecx
  000ae	69 95 74 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000b8	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000be	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c5	ff d1		 call	 ecx
  000c7	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 4252 : 
; 4253 : 	for (z = -1; z < NUM_MAP_Z_SECTORS; z++)

  000ca	c7 45 ec ff ff
	ff ff		 mov	 DWORD PTR _z$[ebp], -1
  000d1	eb 09		 jmp	 SHORT $LN4@create_sec
$LN2@create_sec:
  000d3	8b 45 ec	 mov	 eax, DWORD PTR _z$[ebp]
  000d6	83 c0 01	 add	 eax, 1
  000d9	89 45 ec	 mov	 DWORD PTR _z$[ebp], eax
$LN4@create_sec:
  000dc	8b 45 ec	 mov	 eax, DWORD PTR _z$[ebp]
  000df	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  000e5	0f 8d 07 02 00
	00		 jge	 $LN3@create_sec

; 4254 : 	{
; 4255 : 		sz = max (z, 0);

  000eb	c7 45 88 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
  000f2	8d 45 88	 lea	 eax, DWORD PTR $T5[ebp]
  000f5	50		 push	 eax
  000f6	8d 4d ec	 lea	 ecx, DWORD PTR _z$[ebp]
  000f9	51		 push	 ecx
  000fa	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  000ff	8b 10		 mov	 edx, DWORD PTR [eax]
  00101	89 55 dc	 mov	 DWORD PTR _sz$[ebp], edx

; 4256 : 
; 4257 : 		tz = min (((NUM_MAP_Z_SECTORS - z) - 1), (MAP_OVERLAY_TEXTURE_SIZE - 1));

  00104	c7 45 84 7f 00
	00 00		 mov	 DWORD PTR $T4[ebp], 127	; 0000007fH
  0010b	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  00110	2b 45 ec	 sub	 eax, DWORD PTR _z$[ebp]
  00113	83 e8 01	 sub	 eax, 1
  00116	89 45 80	 mov	 DWORD PTR $T3[ebp], eax
  00119	8d 4d 84	 lea	 ecx, DWORD PTR $T4[ebp]
  0011c	51		 push	 ecx
  0011d	8d 55 80	 lea	 edx, DWORD PTR $T3[ebp]
  00120	52		 push	 edx
  00121	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00126	8b 00		 mov	 eax, DWORD PTR [eax]
  00128	89 45 e4	 mov	 DWORD PTR _tz$[ebp], eax

; 4258 : 
; 4259 : 		for (x = 0; x <= NUM_MAP_X_SECTORS; x++)

  0012b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _x$[ebp], 0
  00132	eb 09		 jmp	 SHORT $LN7@create_sec
$LN5@create_sec:
  00134	8b 45 f0	 mov	 eax, DWORD PTR _x$[ebp]
  00137	83 c0 01	 add	 eax, 1
  0013a	89 45 f0	 mov	 DWORD PTR _x$[ebp], eax
$LN7@create_sec:
  0013d	8b 45 f0	 mov	 eax, DWORD PTR _x$[ebp]
  00140	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00146	0f 8f a1 01 00
	00		 jg	 $LN6@create_sec

; 4260 : 		{
; 4261 : 			sx = min (x, NUM_MAP_X_SECTORS - 1);

  0014c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00151	83 e8 01	 sub	 eax, 1
  00154	89 85 7c ff ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  0015a	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  00160	51		 push	 ecx
  00161	8d 55 f0	 lea	 edx, DWORD PTR _x$[ebp]
  00164	52		 push	 edx
  00165	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0016a	8b 00		 mov	 eax, DWORD PTR [eax]
  0016c	89 45 e0	 mov	 DWORD PTR _sx$[ebp], eax

; 4262 : 
; 4263 : 			tx = min (x, (MAP_OVERLAY_TEXTURE_SIZE - 1));

  0016f	c7 85 78 ff ff
	ff 7f 00 00 00	 mov	 DWORD PTR $T1[ebp], 127	; 0000007fH
  00179	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  0017f	50		 push	 eax
  00180	8d 4d f0	 lea	 ecx, DWORD PTR _x$[ebp]
  00183	51		 push	 ecx
  00184	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  00189	8b 10		 mov	 edx, DWORD PTR [eax]
  0018b	89 55 e8	 mov	 DWORD PTR _tx$[ebp], edx

; 4264 : 
; 4265 : 			ratio = get_local_sector_side_ratio (sx, sz, ENTITY_SIDE_BLUE_FORCE);

  0018e	6a 01		 push	 1
  00190	8b 45 dc	 mov	 eax, DWORD PTR _sz$[ebp]
  00193	50		 push	 eax
  00194	8b 4d e0	 mov	 ecx, DWORD PTR _sx$[ebp]
  00197	51		 push	 ecx
  00198	e8 00 00 00 00	 call	 ?get_local_sector_side_ratio@@YGMHHW4ENTITY_SIDES@@@Z ; get_local_sector_side_ratio
  0019d	d9 5d d4	 fstp	 DWORD PTR _ratio$[ebp]

; 4266 : 
; 4267 : 			band = 0;

  001a0	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _band$[ebp], 0

; 4268 : 
; 4269 : 			band_data = NULL;

  001a7	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _band_data$[ebp], 0
$LN8@create_sec:

; 4270 : 
; 4271 : 			while (TRUE)

  001ae	b8 01 00 00 00	 mov	 eax, 1
  001b3	85 c0		 test	 eax, eax
  001b5	0f 84 90 00 00
	00		 je	 $LN9@create_sec

; 4272 : 			{
; 4273 : 				band_data = &map_side_band_data [band];

  001bb	8b 45 f8	 mov	 eax, DWORD PTR _band$[ebp]
  001be	c1 e0 04	 shl	 eax, 4
  001c1	05 00 00 00 00	 add	 eax, OFFSET ?map_side_band_data@@3QBUMAP_SIDE_BAND_TYPE@@B
  001c6	89 45 cc	 mov	 DWORD PTR _band_data$[ebp], eax

; 4274 : 
; 4275 : 				ASSERT (band_data->min >= 0.0);

  001c9	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  001cc	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  001d0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  001d8	73 18		 jae	 SHORT $LN11@create_sec
  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  001df	83 c0 2d	 add	 eax, 45			; 0000002dH
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FFDDIGGL@band_data?9?$DOmin?5?$DO?$DN?50?40@
  001ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@create_sec:

; 4276 : 				ASSERT (band_data->max <= 1.0);

  001f2	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  001f5	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  001fa	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00202	66 0f 2f c8	 comisd	 xmm1, xmm0
  00206	73 18		 jae	 SHORT $LN12@create_sec
  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  0020d	83 c0 2e	 add	 eax, 46			; 0000002eH
  00210	50		 push	 eax
  00211	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00216	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LGBNILCI@band_data?9?$DOmax?5?$DM?$DN?51?40@
  0021b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@create_sec:

; 4277 : 
; 4278 : 				if ((ratio >= band_data->min) && (ratio <= band_data->max))

  00220	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  00223	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _ratio$[ebp]
  00228	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0022b	72 10		 jb	 SHORT $LN13@create_sec
  0022d	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  00230	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00235	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _ratio$[ebp]
  00239	72 02		 jb	 SHORT $LN13@create_sec

; 4279 : 				{
; 4280 : 					break;

  0023b	eb 0e		 jmp	 SHORT $LN9@create_sec
$LN13@create_sec:

; 4281 : 				}
; 4282 : 
; 4283 : 				band ++;

  0023d	8b 45 f8	 mov	 eax, DWORD PTR _band$[ebp]
  00240	83 c0 01	 add	 eax, 1
  00243	89 45 f8	 mov	 DWORD PTR _band$[ebp], eax

; 4284 : 			}

  00246	e9 63 ff ff ff	 jmp	 $LN8@create_sec
$LN9@create_sec:

; 4285 : 
; 4286 : 			ASSERT (band_data);

  0024b	83 7d cc 00	 cmp	 DWORD PTR _band_data$[ebp], 0
  0024f	75 18		 jne	 SHORT $LN14@create_sec
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_sector_side_texture_overlay@@YGXXZ@4JA
  00256	83 c0 38	 add	 eax, 56			; 00000038H
  00259	50		 push	 eax
  0025a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025f	68 00 00 00 00	 push	 OFFSET ??_C@_09FAJGNPP@band_data@
  00264	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@create_sec:

; 4287 : 
; 4288 : 			// red
; 4289 : 			val = 255.0 * (band_data->red_scale);

  00269	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  0026c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00271	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  00279	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027d	f3 0f 11 45 d8	 movss	 DWORD PTR _val$[ebp], xmm0

; 4290 : 			convert_float_to_int (val, &temp);

  00282	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00285	50		 push	 eax
  00286	51		 push	 ecx
  00287	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _val$[ebp]
  0028c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00291	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4291 : 			col.r = temp;

  00296	8a 45 f4	 mov	 al, BYTE PTR _temp$[ebp]
  00299	88 45 d2	 mov	 BYTE PTR _col$[ebp+2], al

; 4292 : 
; 4293 : 			// green
; 4294 : 			col.g = 0;

  0029c	c6 45 d1 00	 mov	 BYTE PTR _col$[ebp+1], 0

; 4295 : 
; 4296 : 			// blue
; 4297 : 			val = 255.0 * (band_data->blue_scale);

  002a0	8b 45 cc	 mov	 eax, DWORD PTR _band_data$[ebp]
  002a3	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  002a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  002b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b4	f3 0f 11 45 d8	 movss	 DWORD PTR _val$[ebp], xmm0

; 4298 : 			convert_float_to_int (val, &temp);

  002b9	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  002bc	50		 push	 eax
  002bd	51		 push	 ecx
  002be	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _val$[ebp]
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4299 : 			col.b = temp;

  002cd	8a 45 f4	 mov	 al, BYTE PTR _temp$[ebp]
  002d0	88 45 d0	 mov	 BYTE PTR _col$[ebp], al

; 4300 : 
; 4301 : 			// alpha
; 4302 : 			col.a = 192;

  002d3	c6 45 d3 c0	 mov	 BYTE PTR _col$[ebp+3], 192 ; 000000c0H

; 4303 : 
; 4304 : 			set_pixel (tx, tz, col);

  002d7	8b 45 d0	 mov	 eax, DWORD PTR _col$[ebp]
  002da	50		 push	 eax
  002db	8b 4d e4	 mov	 ecx, DWORD PTR _tz$[ebp]
  002de	51		 push	 ecx
  002df	8b 55 e8	 mov	 edx, DWORD PTR _tx$[ebp]
  002e2	52		 push	 edx
  002e3	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel

; 4305 : 		}

  002e8	e9 47 fe ff ff	 jmp	 $LN5@create_sec
$LN6@create_sec:

; 4306 : 	}

  002ed	e9 e1 fd ff ff	 jmp	 $LN2@create_sec
$LN3@create_sec:

; 4307 : }

  002f2	5f		 pop	 edi
  002f3	5e		 pop	 esi
  002f4	5b		 pop	 ebx
  002f5	8b e5		 mov	 esp, ebp
  002f7	5d		 pop	 ebp
  002f8	c3		 ret	 0
?create_sector_side_texture_overlay@@YGXXZ ENDP		; create_sector_side_texture_overlay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?create_fog_of_war_texture_overlay@@YGXXZ
_TEXT	SEGMENT
tv140 = -140						; size = 4
tv88 = -140						; size = 4
tv258 = -136						; size = 4
tv178 = -136						; size = 4
tv132 = -136						; size = 4
tv80 = -136						; size = 4
$T1 = -132						; size = 4
$T2 = -128						; size = 4
$T3 = -124						; size = 4
$T4 = -120						; size = 4
$T5 = -116						; size = 4
_sec$ = -48						; size = 4
_col$ = -44						; size = 4
_max_fog$ = -40						; size = 4
_val$ = -36						; size = 4
_sz$ = -32						; size = 4
_sx$ = -28						; size = 4
_tz$ = -24						; size = 4
_tx$ = -20						; size = 4
_z$ = -16						; size = 4
_x$ = -12						; size = 4
_fog$ = -8						; size = 4
_side$ = -4						; size = 4
?create_fog_of_war_texture_overlay@@YGXXZ PROC		; create_fog_of_war_texture_overlay, COMDAT

; 4114 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 4115 : 	int
; 4116 : 		side,
; 4117 : 		fog,
; 4118 : 		x, z,
; 4119 : 		tx, tz,
; 4120 : 		sx, sz;
; 4121 : 
; 4122 : 	float
; 4123 : 		val,
; 4124 : 		max_fog;
; 4125 : 
; 4126 : 	rgb_colour
; 4127 : 		col;
; 4128 : 
; 4129 : 	entity
; 4130 : 		*sec;
; 4131 : 
; 4132 : 	ASSERT (map_overlay);

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00013	75 18		 jne	 SHORT $LN8@create_fog
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  0001a	83 c0 12	 add	 eax, 18			; 00000012H
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDGPEHOC@map_overlay@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@create_fog:

; 4133 : 	ASSERT (get_pilot_entity());

  0002d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00034	75 18		 jne	 SHORT $LN9@create_fog
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  0003b	83 c0 13	 add	 eax, 19			; 00000013H
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DGPDPDHN@get_pilot_entity?$CI?$CJ@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@create_fog:

; 4134 : 
; 4135 : 	side = get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0004e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00055	74 0f		 je	 SHORT $LN12@create_fog
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0005c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005e	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00064	eb 24		 jmp	 SHORT $LN13@create_fog
$LN12@create_fog:
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  0006c	83 c2 15	 add	 edx, 21			; 00000015H
  0006f	52		 push	 edx
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00080	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN13@create_fog:
  0008a	b9 01 00 00 00	 mov	 ecx, 1
  0008f	85 c9		 test	 ecx, ecx
  00091	74 0c		 je	 SHORT $LN14@create_fog
  00093	c7 85 74 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv88[ebp], 187 ; 000000bbH
  0009d	eb 24		 jmp	 SHORT $LN15@create_fog
$LN14@create_fog:
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  000a5	83 c2 15	 add	 edx, 21			; 00000015H
  000a8	52		 push	 edx
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b9	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN15@create_fog:
  000c3	68 bb 00 00 00	 push	 187			; 000000bbH
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000ce	51		 push	 ecx
  000cf	69 95 78 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv80[ebp], 1116
  000d9	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  000df	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e6	ff d1		 call	 ecx
  000e8	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 4136 : 
; 4137 : 	max_fog = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE);

  000eb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  000f2	74 0f		 je	 SHORT $LN16@create_fog
  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fb	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  00101	eb 24		 jmp	 SHORT $LN17@create_fog
$LN16@create_fog:
  00103	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  00109	83 c2 17	 add	 edx, 23			; 00000017H
  0010c	52		 push	 edx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN17@create_fog:
  00127	b9 01 00 00 00	 mov	 ecx, 1
  0012c	85 c9		 test	 ecx, ecx
  0012e	74 0c		 je	 SHORT $LN18@create_fog
  00130	c7 85 74 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv140[ebp], 44 ; 0000002cH
  0013a	eb 24		 jmp	 SHORT $LN19@create_fog
$LN18@create_fog:
  0013c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  00142	83 c2 17	 add	 edx, 23			; 00000017H
  00145	52		 push	 edx
  00146	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0014b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00156	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN19@create_fog:
  00160	6a 2c		 push	 44			; 0000002cH
  00162	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00168	51		 push	 ecx
  00169	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv132[ebp], 700
  00173	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  00179	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00180	ff d1		 call	 ecx
  00182	d9 5d d8	 fstp	 DWORD PTR _max_fog$[ebp]

; 4138 : 
; 4139 : 	col.r = 0;

  00185	c6 45 d6 00	 mov	 BYTE PTR _col$[ebp+2], 0

; 4140 : 	col.g = 0;

  00189	c6 45 d5 00	 mov	 BYTE PTR _col$[ebp+1], 0

; 4141 : 	col.b = 0;

  0018d	c6 45 d4 00	 mov	 BYTE PTR _col$[ebp], 0

; 4142 : 
; 4143 : 	for (z = -1; z < NUM_MAP_Z_SECTORS; z++)

  00191	c7 45 f0 ff ff
	ff ff		 mov	 DWORD PTR _z$[ebp], -1
  00198	eb 09		 jmp	 SHORT $LN4@create_fog
$LN2@create_fog:
  0019a	8b 45 f0	 mov	 eax, DWORD PTR _z$[ebp]
  0019d	83 c0 01	 add	 eax, 1
  001a0	89 45 f0	 mov	 DWORD PTR _z$[ebp], eax
$LN4@create_fog:
  001a3	8b 45 f0	 mov	 eax, DWORD PTR _z$[ebp]
  001a6	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  001ac	0f 8d 94 01 00
	00		 jge	 $LN3@create_fog

; 4144 : 	{
; 4145 : 		sz = max (z, 0);

  001b2	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR $T5[ebp], 0
  001b9	8d 45 8c	 lea	 eax, DWORD PTR $T5[ebp]
  001bc	50		 push	 eax
  001bd	8d 4d f0	 lea	 ecx, DWORD PTR _z$[ebp]
  001c0	51		 push	 ecx
  001c1	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  001c6	8b 10		 mov	 edx, DWORD PTR [eax]
  001c8	89 55 e0	 mov	 DWORD PTR _sz$[ebp], edx

; 4146 : 
; 4147 : 		tz = min (((NUM_MAP_Z_SECTORS - z) - 1), (MAP_OVERLAY_TEXTURE_SIZE - 1));

  001cb	c7 45 88 7f 00
	00 00		 mov	 DWORD PTR $T4[ebp], 127	; 0000007fH
  001d2	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  001d7	2b 45 f0	 sub	 eax, DWORD PTR _z$[ebp]
  001da	83 e8 01	 sub	 eax, 1
  001dd	89 45 84	 mov	 DWORD PTR $T3[ebp], eax
  001e0	8d 4d 88	 lea	 ecx, DWORD PTR $T4[ebp]
  001e3	51		 push	 ecx
  001e4	8d 55 84	 lea	 edx, DWORD PTR $T3[ebp]
  001e7	52		 push	 edx
  001e8	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  001ed	8b 00		 mov	 eax, DWORD PTR [eax]
  001ef	89 45 e8	 mov	 DWORD PTR _tz$[ebp], eax

; 4148 : 
; 4149 : 		for (x = 0; x <= NUM_MAP_X_SECTORS; x++)

  001f2	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _x$[ebp], 0
  001f9	eb 09		 jmp	 SHORT $LN7@create_fog
$LN5@create_fog:
  001fb	8b 45 f4	 mov	 eax, DWORD PTR _x$[ebp]
  001fe	83 c0 01	 add	 eax, 1
  00201	89 45 f4	 mov	 DWORD PTR _x$[ebp], eax
$LN7@create_fog:
  00204	8b 45 f4	 mov	 eax, DWORD PTR _x$[ebp]
  00207	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0020d	0f 8f 2e 01 00
	00		 jg	 $LN6@create_fog

; 4150 : 		{
; 4151 : 			sx = min (x, NUM_MAP_X_SECTORS - 1);

  00213	a1 08 00 00 00	 mov	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00218	83 e8 01	 sub	 eax, 1
  0021b	89 45 80	 mov	 DWORD PTR $T2[ebp], eax
  0021e	8d 4d 80	 lea	 ecx, DWORD PTR $T2[ebp]
  00221	51		 push	 ecx
  00222	8d 55 f4	 lea	 edx, DWORD PTR _x$[ebp]
  00225	52		 push	 edx
  00226	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0022b	8b 00		 mov	 eax, DWORD PTR [eax]
  0022d	89 45 e4	 mov	 DWORD PTR _sx$[ebp], eax

; 4152 : 
; 4153 : 			tx = min (x, (MAP_OVERLAY_TEXTURE_SIZE - 1));

  00230	c7 85 7c ff ff
	ff 7f 00 00 00	 mov	 DWORD PTR $T1[ebp], 127	; 0000007fH
  0023a	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00240	50		 push	 eax
  00241	8d 4d f4	 lea	 ecx, DWORD PTR _x$[ebp]
  00244	51		 push	 ecx
  00245	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  0024a	8b 10		 mov	 edx, DWORD PTR [eax]
  0024c	89 55 ec	 mov	 DWORD PTR _tx$[ebp], edx

; 4154 : 
; 4155 : 			sec = get_local_raw_sector_entity (sx, sz);

  0024f	8b 45 e0	 mov	 eax, DWORD PTR _sz$[ebp]
  00252	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00259	03 45 e4	 add	 eax, DWORD PTR _sx$[ebp]
  0025c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00262	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00266	74 1d		 je	 SHORT $LN20@create_fog
  00268	8b 55 e0	 mov	 edx, DWORD PTR _sz$[ebp]
  0026b	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00272	03 55 e4	 add	 edx, DWORD PTR _sx$[ebp]
  00275	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0027a	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0027d	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv178[ebp], ecx
  00283	eb 24		 jmp	 SHORT $LN21@create_fog
$LN20@create_fog:
  00285	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  0028b	83 c2 29	 add	 edx, 41			; 00000029H
  0028e	52		 push	 edx
  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00294	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029f	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN21@create_fog:
  002a9	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv178[ebp]
  002af	89 4d d0	 mov	 DWORD PTR _sec$[ebp], ecx

; 4156 : 
; 4157 : 			ASSERT (sec);

  002b2	83 7d d0 00	 cmp	 DWORD PTR _sec$[ebp], 0
  002b6	75 18		 jne	 SHORT $LN10@create_fog
  002b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_fog_of_war_texture_overlay@@YGXXZ@4JA
  002bd	83 c0 2b	 add	 eax, 43			; 0000002bH
  002c0	50		 push	 eax
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_03KHPNBODO@sec@
  002cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@create_fog:

; 4158 : 
; 4159 : 			val = 140.0 * (1.0 - (get_sector_fog_of_war_value (sec, (entity_sides) side) / max_fog));

  002d0	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  002d3	50		 push	 eax
  002d4	8b 4d d0	 mov	 ecx, DWORD PTR _sec$[ebp]
  002d7	51		 push	 ecx
  002d8	e8 00 00 00 00	 call	 ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
  002dd	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv258[ebp]
  002e3	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv258[ebp]
  002eb	f3 0f 5e 45 d8	 divss	 xmm0, DWORD PTR _max_fog$[ebp]
  002f0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002f4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  002fc	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00300	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@4061800000000000
  00308	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0030c	f3 0f 11 45 dc	 movss	 DWORD PTR _val$[ebp], xmm0

; 4160 : 
; 4161 : 			convert_float_to_int (val, &fog);

  00311	8d 45 f8	 lea	 eax, DWORD PTR _fog$[ebp]
  00314	50		 push	 eax
  00315	51		 push	 ecx
  00316	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _val$[ebp]
  0031b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00320	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4162 : 
; 4163 : 			// alpha
; 4164 : 			col.a = fog;

  00325	8a 45 f8	 mov	 al, BYTE PTR _fog$[ebp]
  00328	88 45 d7	 mov	 BYTE PTR _col$[ebp+3], al

; 4165 : 
; 4166 : 			set_pixel (tx, tz, col);

  0032b	8b 45 d4	 mov	 eax, DWORD PTR _col$[ebp]
  0032e	50		 push	 eax
  0032f	8b 4d e8	 mov	 ecx, DWORD PTR _tz$[ebp]
  00332	51		 push	 ecx
  00333	8b 55 ec	 mov	 edx, DWORD PTR _tx$[ebp]
  00336	52		 push	 edx
  00337	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel

; 4167 : 		}

  0033c	e9 ba fe ff ff	 jmp	 $LN5@create_fog
$LN6@create_fog:

; 4168 : 	}

  00341	e9 54 fe ff ff	 jmp	 $LN2@create_fog
$LN3@create_fog:

; 4169 : }

  00346	5f		 pop	 edi
  00347	5e		 pop	 esi
  00348	5b		 pop	 ebx
  00349	8b e5		 mov	 esp, ebp
  0034b	5d		 pop	 ebp
  0034c	c3		 ret	 0
?create_fog_of_war_texture_overlay@@YGXXZ ENDP		; create_fog_of_war_texture_overlay
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z
_TEXT	SEGMENT
tv85 = -72						; size = 4
tv84 = -68						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
_col$ = 20						; size = 4
_scale$ = 24						; size = 4
?map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z PROC ; map_draw_highlighted_entity, COMDAT

; 3755 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3756 : 	ASSERT (en);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@map_draw_h
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_h:

; 3757 : 
; 3758 : 	ASSERT (obj);

  00027	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN5@map_draw_h
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_draw_h:

; 3759 : 
; 3760 : 	ASSERT (col);

  00045	83 7d 14 00	 cmp	 DWORD PTR _col$[ebp], 0
  00049	75 18		 jne	 SHORT $LN6@map_draw_h
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00050	83 c0 05	 add	 eax, 5
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_03HNOLNALI@col@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_draw_h:

; 3761 : 
; 3762 : 	switch (get_local_entity_type (en))

  00063	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00067	74 0a		 je	 SHORT $LN12@map_draw_h
  00069	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 4d bc	 mov	 DWORD PTR tv84[ebp], ecx
  00071	eb 1d		 jmp	 SHORT $LN13@map_draw_h
$LN12@map_draw_h:
  00073	68 b2 0e 00 00	 push	 3762			; 00000eb2H
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN13@map_draw_h:
  00090	8b 45 bc	 mov	 eax, DWORD PTR tv84[ebp]
  00093	89 45 b8	 mov	 DWORD PTR tv85[ebp], eax
  00096	8b 4d b8	 mov	 ecx, DWORD PTR tv85[ebp]
  00099	83 e9 01	 sub	 ecx, 1
  0009c	89 4d b8	 mov	 DWORD PTR tv85[ebp], ecx
  0009f	83 7d b8 23	 cmp	 DWORD PTR tv85[ebp], 35	; 00000023H
  000a3	0f 87 88 00 00
	00		 ja	 $LN2@map_draw_h
  000a9	8b 55 b8	 mov	 edx, DWORD PTR tv85[ebp]
  000ac	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@map_draw_h[edx]
  000b3	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@map_draw_h[eax*4]
$LN7@map_draw_h:

; 3763 : 	{
; 3764 : 		case ENTITY_TYPE_HELICOPTER:
; 3765 : 		case ENTITY_TYPE_FIXED_WING:
; 3766 : 		case ENTITY_TYPE_ROUTED_VEHICLE:
; 3767 : 		case ENTITY_TYPE_SHIP_VEHICLE:
; 3768 : 		case ENTITY_TYPE_ANTI_AIRCRAFT:
; 3769 : 		case ENTITY_TYPE_GROUP:
; 3770 : 		{
; 3771 : 			//
; 3772 : 			// Draw selected group member + mission it's doing
; 3773 : 			//
; 3774 : 
; 3775 : 			map_draw_highlighted_group (obj, en, overlay_icon, col, scale);

  000ba	51		 push	 ecx
  000bb	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _scale$[ebp]
  000c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c5	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  000c8	50		 push	 eax
  000c9	8b 4d 10	 mov	 ecx, DWORD PTR _overlay_icon$[ebp]
  000cc	51		 push	 ecx
  000cd	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  000d0	52		 push	 edx
  000d1	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ?map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ; map_draw_highlighted_group

; 3776 : 
; 3777 : 			break;

  000da	eb 55		 jmp	 SHORT $LN2@map_draw_h
$LN8@map_draw_h:

; 3778 : 		}
; 3779 : 		case ENTITY_TYPE_TASK:
; 3780 : 		{
; 3781 : 			map_draw_highlighted_mission (obj, en, overlay_icon, col, scale);

  000dc	51		 push	 ecx
  000dd	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _scale$[ebp]
  000e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e7	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d 10	 mov	 ecx, DWORD PTR _overlay_icon$[ebp]
  000ee	51		 push	 ecx
  000ef	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  000f2	52		 push	 edx
  000f3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ; map_draw_highlighted_mission

; 3782 : 
; 3783 : 			break;

  000fc	eb 33		 jmp	 SHORT $LN2@map_draw_h
$LN9@map_draw_h:

; 3784 : 		}
; 3785 : 		case ENTITY_TYPE_KEYSITE:
; 3786 : 		{
; 3787 : 			map_draw_highlighted_base (obj, en, overlay_icon);

  000fe	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  00101	50		 push	 eax
  00102	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00105	51		 push	 ecx
  00106	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00109	52		 push	 edx
  0010a	e8 00 00 00 00	 call	 ?map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z ; map_draw_highlighted_base

; 3788 : 
; 3789 : 			break;

  0010f	eb 20		 jmp	 SHORT $LN2@map_draw_h
$LN10@map_draw_h:

; 3790 : 		}
; 3791 : 		case ENTITY_TYPE_WAYPOINT:
; 3792 : 		{
; 3793 : 			map_draw_highlighted_waypoint (obj, en, overlay_icon, col, scale);

  00111	51		 push	 ecx
  00112	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _scale$[ebp]
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  0011f	50		 push	 eax
  00120	8b 4d 10	 mov	 ecx, DWORD PTR _overlay_icon$[ebp]
  00123	51		 push	 ecx
  00124	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00127	52		 push	 edx
  00128	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ; map_draw_highlighted_waypoint
$LN2@map_draw_h:

; 3794 : 
; 3795 : 			break;
; 3796 : 		}
; 3797 : 	}
; 3798 : }

  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c2 14 00	 ret	 20			; 00000014H
  0013a	66 90		 npad	 2
$LN15@map_draw_h:
  0013c	00 00 00 00	 DD	 $LN7@map_draw_h
  00140	00 00 00 00	 DD	 $LN9@map_draw_h
  00144	00 00 00 00	 DD	 $LN8@map_draw_h
  00148	00 00 00 00	 DD	 $LN10@map_draw_h
  0014c	00 00 00 00	 DD	 $LN2@map_draw_h
$LN14@map_draw_h:
  00150	00		 DB	 0
  00151	04		 DB	 4
  00152	04		 DB	 4
  00153	04		 DB	 4
  00154	04		 DB	 4
  00155	04		 DB	 4
  00156	04		 DB	 4
  00157	04		 DB	 4
  00158	04		 DB	 4
  00159	00		 DB	 0
  0015a	04		 DB	 4
  0015b	00		 DB	 0
  0015c	04		 DB	 4
  0015d	00		 DB	 0
  0015e	01		 DB	 1
  0015f	04		 DB	 4
  00160	04		 DB	 4
  00161	04		 DB	 4
  00162	04		 DB	 4
  00163	04		 DB	 4
  00164	04		 DB	 4
  00165	04		 DB	 4
  00166	00		 DB	 0
  00167	04		 DB	 4
  00168	04		 DB	 4
  00169	04		 DB	 4
  0016a	04		 DB	 4
  0016b	00		 DB	 0
  0016c	04		 DB	 4
  0016d	04		 DB	 4
  0016e	04		 DB	 4
  0016f	04		 DB	 4
  00170	04		 DB	 4
  00171	02		 DB	 2
  00172	04		 DB	 4
  00173	03		 DB	 3
?map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ENDP ; map_draw_highlighted_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z
_TEXT	SEGMENT
tv210 = -96						; size = 4
tv185 = -96						; size = 4
tv160 = -96						; size = 4
tv135 = -96						; size = 4
tv231 = -92						; size = 4
tv228 = -92						; size = 4
tv202 = -92						; size = 4
tv177 = -92						; size = 4
tv152 = -92						; size = 4
tv95 = -92						; size = 4
_map_dimensions$ = -24					; size = 4
_side$ = -20						; size = 4
_task$ = -16						; size = 4
_waypoint_overlay_icon$ = -12				; size = 4
_icon$ = -8						; size = 4
_pos$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
_col$ = 20						; size = 4
_scale$ = 24						; size = 4
?map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z PROC ; map_draw_highlighted_waypoint, COMDAT

; 3653 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3654 : 	vec3d
; 3655 : 		*pos;
; 3656 : 
; 3657 : 	int
; 3658 : 		icon,
; 3659 : 		waypoint_overlay_icon;
; 3660 : 
; 3661 : 	entity
; 3662 : 		*task;
; 3663 : 
; 3664 : 	entity_sides
; 3665 : 		side;
; 3666 : 
; 3667 : 	map_dimension_type
; 3668 : 		*map_dimensions;
; 3669 : 
; 3670 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@map_draw_h
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_draw_h:

; 3671 : 
; 3672 : 	ASSERT (en);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN7@map_draw_h
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00032	83 c0 13	 add	 eax, 19			; 00000013H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_h:

; 3673 : 
; 3674 : 	ASSERT (col);

  00045	83 7d 14 00	 cmp	 DWORD PTR _col$[ebp], 0
  00049	75 18		 jne	 SHORT $LN8@map_draw_h
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00050	83 c0 15	 add	 eax, 21			; 00000015H
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_03HNOLNALI@col@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_draw_h:

; 3675 : 
; 3676 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00063	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00073	ff d0		 call	 eax
  00075	89 45 e8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3677 : 
; 3678 : 	ASSERT (map_dimensions);

  00078	83 7d e8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0007c	75 18		 jne	 SHORT $LN9@map_draw_h
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00083	83 c0 19	 add	 eax, 25			; 00000019H
  00086	50		 push	 eax
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@map_draw_h:

; 3679 : 
; 3680 : 	//
; 3681 : 	// Draw selected waypoint
; 3682 : 	//
; 3683 : 
; 3684 : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00096	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009a	74 0a		 je	 SHORT $LN20@map_draw_h
  0009c	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0009f	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a1	89 4d a4	 mov	 DWORD PTR tv95[ebp], ecx
  000a4	eb 21		 jmp	 SHORT $LN21@map_draw_h
$LN20@map_draw_h:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  000ac	83 c2 1f	 add	 edx, 31			; 0000001fH
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN21@map_draw_h:
  000c7	b9 01 00 00 00	 mov	 ecx, 1
  000cc	85 c9		 test	 ecx, ecx
  000ce	74 09		 je	 SHORT $LN22@map_draw_h
  000d0	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv135[ebp], 8
  000d7	eb 21		 jmp	 SHORT $LN23@map_draw_h
$LN22@map_draw_h:
  000d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  000df	83 c2 1f	 add	 edx, 31			; 0000001fH
  000e2	52		 push	 edx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN23@map_draw_h:
  000fa	6a 08		 push	 8
  000fc	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  000ff	51		 push	 ecx
  00100	6b 55 a4 60	 imul	 edx, DWORD PTR tv95[ebp], 96
  00104	8b 45 a0	 mov	 eax, DWORD PTR tv135[ebp]
  00107	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0010e	ff d1		 call	 ecx
  00110	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 3685 : 
; 3686 : 	ASSERT (pos);

  00113	83 7d fc 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00117	75 18		 jne	 SHORT $LN10@map_draw_h
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0011e	83 c0 21	 add	 eax, 33			; 00000021H
  00121	50		 push	 eax
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  0012c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@map_draw_h:

; 3687 : 
; 3688 : 	icon = get_local_entity_int_value (en, INT_TYPE_MAP_ICON);

  00131	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00135	74 0a		 je	 SHORT $LN24@map_draw_h
  00137	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0013a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013c	89 4d a4	 mov	 DWORD PTR tv152[ebp], ecx
  0013f	eb 21		 jmp	 SHORT $LN25@map_draw_h
$LN24@map_draw_h:
  00141	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00147	83 c2 23	 add	 edx, 35			; 00000023H
  0014a	52		 push	 edx
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00155	50		 push	 eax
  00156	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN25@map_draw_h:
  00162	b9 01 00 00 00	 mov	 ecx, 1
  00167	85 c9		 test	 ecx, ecx
  00169	74 09		 je	 SHORT $LN26@map_draw_h
  0016b	c7 45 a0 82 00
	00 00		 mov	 DWORD PTR tv160[ebp], 130 ; 00000082H
  00172	eb 21		 jmp	 SHORT $LN27@map_draw_h
$LN26@map_draw_h:
  00174	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0017a	83 c2 23	 add	 edx, 35			; 00000023H
  0017d	52		 push	 edx
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00183	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018e	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN27@map_draw_h:
  00195	68 82 00 00 00	 push	 130			; 00000082H
  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0019d	51		 push	 ecx
  0019e	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv152[ebp], 1116
  001a5	8b 45 a0	 mov	 eax, DWORD PTR tv160[ebp]
  001a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001af	ff d1		 call	 ecx
  001b1	89 45 f8	 mov	 DWORD PTR _icon$[ebp], eax

; 3689 : 
; 3690 : 	ASSERT (icon != MAP_ICON_NONE);

  001b4	83 7d f8 00	 cmp	 DWORD PTR _icon$[ebp], 0
  001b8	75 18		 jne	 SHORT $LN11@map_draw_h
  001ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  001bf	83 c0 25	 add	 eax, 37			; 00000025H
  001c2	50		 push	 eax
  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  001cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@map_draw_h:

; 3691 : 
; 3692 : 	task = get_local_entity_parent (en, LIST_TYPE_WAYPOINT);

  001d2	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  001d6	74 0a		 je	 SHORT $LN28@map_draw_h
  001d8	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  001db	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dd	89 4d a4	 mov	 DWORD PTR tv177[ebp], ecx
  001e0	eb 21		 jmp	 SHORT $LN29@map_draw_h
$LN28@map_draw_h:
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  001e8	83 c2 27	 add	 edx, 39			; 00000027H
  001eb	52		 push	 edx
  001ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fc	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN29@map_draw_h:
  00203	b9 01 00 00 00	 mov	 ecx, 1
  00208	85 c9		 test	 ecx, ecx
  0020a	74 09		 je	 SHORT $LN30@map_draw_h
  0020c	c7 45 a0 2c 00
	00 00		 mov	 DWORD PTR tv185[ebp], 44 ; 0000002cH
  00213	eb 21		 jmp	 SHORT $LN31@map_draw_h
$LN30@map_draw_h:
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0021b	83 c2 27	 add	 edx, 39			; 00000027H
  0021e	52		 push	 edx
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00224	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022f	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN31@map_draw_h:
  00236	6a 2c		 push	 44			; 0000002cH
  00238	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0023b	51		 push	 ecx
  0023c	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv177[ebp], 180
  00243	8b 45 a0	 mov	 eax, DWORD PTR tv185[ebp]
  00246	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0024d	ff d1		 call	 ecx
  0024f	89 45 f0	 mov	 DWORD PTR _task$[ebp], eax

; 3693 : 
; 3694 : 	ASSERT (task);

  00252	83 7d f0 00	 cmp	 DWORD PTR _task$[ebp], 0
  00256	75 18		 jne	 SHORT $LN12@map_draw_h
  00258	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0025d	83 c0 29	 add	 eax, 41			; 00000029H
  00260	50		 push	 eax
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  0026b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@map_draw_h:

; 3695 : 
; 3696 : 	side = (entity_sides) get_local_entity_int_value (task, INT_TYPE_SIDE);

  00270	83 7d f0 00	 cmp	 DWORD PTR _task$[ebp], 0
  00274	74 0a		 je	 SHORT $LN32@map_draw_h
  00276	8b 45 f0	 mov	 eax, DWORD PTR _task$[ebp]
  00279	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027b	89 4d a4	 mov	 DWORD PTR tv202[ebp], ecx
  0027e	eb 21		 jmp	 SHORT $LN33@map_draw_h
$LN32@map_draw_h:
  00280	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00286	83 c2 2b	 add	 edx, 43			; 0000002bH
  00289	52		 push	 edx
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00294	50		 push	 eax
  00295	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN33@map_draw_h:
  002a1	b9 01 00 00 00	 mov	 ecx, 1
  002a6	85 c9		 test	 ecx, ecx
  002a8	74 09		 je	 SHORT $LN34@map_draw_h
  002aa	c7 45 a0 bb 00
	00 00		 mov	 DWORD PTR tv210[ebp], 187 ; 000000bbH
  002b1	eb 21		 jmp	 SHORT $LN35@map_draw_h
$LN34@map_draw_h:
  002b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  002b9	83 c2 2b	 add	 edx, 43			; 0000002bH
  002bc	52		 push	 edx
  002bd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cd	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN35@map_draw_h:
  002d4	68 bb 00 00 00	 push	 187			; 000000bbH
  002d9	8b 4d f0	 mov	 ecx, DWORD PTR _task$[ebp]
  002dc	51		 push	 ecx
  002dd	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv202[ebp], 1116
  002e4	8b 45 a0	 mov	 eax, DWORD PTR tv210[ebp]
  002e7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002ee	ff d1		 call	 ecx
  002f0	89 45 ec	 mov	 DWORD PTR _side$[ebp], eax

; 3697 : 
; 3698 : 	map_draw_entity_icon (obj, en, pos, icon, side, ICON_RESOLUTION_SCALE);

  002f3	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  002fb	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  00303	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00307	51		 push	 ecx
  00308	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030d	8b 45 ec	 mov	 eax, DWORD PTR _side$[ebp]
  00310	50		 push	 eax
  00311	8b 4d f8	 mov	 ecx, DWORD PTR _icon$[ebp]
  00314	51		 push	 ecx
  00315	8b 55 fc	 mov	 edx, DWORD PTR _pos$[ebp]
  00318	52		 push	 edx
  00319	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0031c	50		 push	 eax
  0031d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00320	51		 push	 ecx
  00321	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3699 : 
; 3700 : 	waypoint_overlay_icon = MAP_ICON_NONE;

  00326	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _waypoint_overlay_icon$[ebp], 0

; 3701 : 
; 3702 : 	if (en == map_dimensions->selected_entity)

  0032d	8b 45 e8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00330	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00333	3b 48 48	 cmp	 ecx, DWORD PTR [eax+72]
  00336	75 26		 jne	 SHORT $LN13@map_draw_h

; 3703 : 	{
; 3704 : 		//
; 3705 : 		// Selected Icons
; 3706 : 		//
; 3707 : 
; 3708 : 		switch (icon)

  00338	8b 45 f8	 mov	 eax, DWORD PTR _icon$[ebp]
  0033b	89 45 a4	 mov	 DWORD PTR tv228[ebp], eax
  0033e	83 7d a4 1d	 cmp	 DWORD PTR tv228[ebp], 29 ; 0000001dH
  00342	74 08		 je	 SHORT $LN15@map_draw_h
  00344	83 7d a4 20	 cmp	 DWORD PTR tv228[ebp], 32 ; 00000020H
  00348	74 0b		 je	 SHORT $LN16@map_draw_h
  0034a	eb 10		 jmp	 SHORT $LN2@map_draw_h
$LN15@map_draw_h:

; 3709 : 		{
; 3710 : 			case MAP_ICON_WAYPOINT_NAV:
; 3711 : 			{
; 3712 : 				waypoint_overlay_icon = MAP_ICON_WAYPOINT_NAV_SELECTED;

  0034c	c7 45 f4 1f 00
	00 00		 mov	 DWORD PTR _waypoint_overlay_icon$[ebp], 31 ; 0000001fH

; 3713 : 
; 3714 : 				break;

  00353	eb 07		 jmp	 SHORT $LN2@map_draw_h
$LN16@map_draw_h:

; 3715 : 			}
; 3716 : 			case MAP_ICON_WAYPOINT_TARGET:
; 3717 : 			{
; 3718 : 				waypoint_overlay_icon = MAP_ICON_WAYPOINT_TARGET_SELECTED;

  00355	c7 45 f4 22 00
	00 00		 mov	 DWORD PTR _waypoint_overlay_icon$[ebp], 34 ; 00000022H
$LN2@map_draw_h:

; 3719 : 
; 3720 : 				break;
; 3721 : 			}
; 3722 : 		}
; 3723 : 	}
; 3724 : 	else

  0035c	eb 24		 jmp	 SHORT $LN4@map_draw_h
$LN13@map_draw_h:

; 3725 : 	{
; 3726 : 		//
; 3727 : 		// Highlighted Icons
; 3728 : 		//
; 3729 : 
; 3730 : 		switch (icon)

  0035e	8b 45 f8	 mov	 eax, DWORD PTR _icon$[ebp]
  00361	89 45 a4	 mov	 DWORD PTR tv231[ebp], eax
  00364	83 7d a4 1d	 cmp	 DWORD PTR tv231[ebp], 29 ; 0000001dH
  00368	74 08		 je	 SHORT $LN17@map_draw_h
  0036a	83 7d a4 20	 cmp	 DWORD PTR tv231[ebp], 32 ; 00000020H
  0036e	74 0b		 je	 SHORT $LN18@map_draw_h
  00370	eb 10		 jmp	 SHORT $LN4@map_draw_h
$LN17@map_draw_h:

; 3731 : 		{
; 3732 : 			case MAP_ICON_WAYPOINT_NAV:
; 3733 : 			{
; 3734 : 				waypoint_overlay_icon = MAP_ICON_WAYPOINT_NAV_HIGHLIGHTED;

  00372	c7 45 f4 1e 00
	00 00		 mov	 DWORD PTR _waypoint_overlay_icon$[ebp], 30 ; 0000001eH

; 3735 : 
; 3736 : 				break;

  00379	eb 07		 jmp	 SHORT $LN4@map_draw_h
$LN18@map_draw_h:

; 3737 : 			}
; 3738 : 			case MAP_ICON_WAYPOINT_TARGET:
; 3739 : 			{
; 3740 : 				waypoint_overlay_icon = MAP_ICON_WAYPOINT_TARGET_HIGHLIGHTED;

  0037b	c7 45 f4 21 00
	00 00		 mov	 DWORD PTR _waypoint_overlay_icon$[ebp], 33 ; 00000021H
$LN4@map_draw_h:

; 3741 : 
; 3742 : 				break;
; 3743 : 			}
; 3744 : 		}
; 3745 : 	}
; 3746 : 
; 3747 : 	map_draw_entity_icon (obj, NULL, pos, waypoint_overlay_icon, ENTITY_SIDE_NEUTRAL, ICON_RESOLUTION_SCALE);

  00382	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  0038a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  00392	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00396	51		 push	 ecx
  00397	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039c	6a 00		 push	 0
  0039e	8b 45 f4	 mov	 eax, DWORD PTR _waypoint_overlay_icon$[ebp]
  003a1	50		 push	 eax
  003a2	8b 4d fc	 mov	 ecx, DWORD PTR _pos$[ebp]
  003a5	51		 push	 ecx
  003a6	6a 00		 push	 0
  003a8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003ab	52		 push	 edx
  003ac	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3748 : }

  003b1	5f		 pop	 edi
  003b2	5e		 pop	 esi
  003b3	5b		 pop	 ebx
  003b4	8b e5		 mov	 esp, ebp
  003b6	5d		 pop	 ebp
  003b7	c2 14 00	 ret	 20			; 00000014H
?map_draw_highlighted_waypoint@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ENDP ; map_draw_highlighted_waypoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
?map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z PROC ; map_draw_highlighted_base, COMDAT

; 3636 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3637 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_h
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_h:

; 3638 : 
; 3639 : 	ASSERT (en);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_h
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_h:

; 3640 : 
; 3641 : 	//
; 3642 : 	// Draw selected Base
; 3643 : 	//
; 3644 : 
; 3645 : 	map_draw_keysite (obj, en, (map_icon_type) overlay_icon);

  00045	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z ; map_draw_keysite

; 3646 : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 0c 00	 ret	 12			; 0000000cH
?map_draw_highlighted_base@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z ENDP ; map_draw_highlighted_base
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z
_TEXT	SEGMENT
tv433 = -132						; size = 4
tv379 = -132						; size = 4
tv337 = -132						; size = 4
tv316 = -132						; size = 4
tv296 = -132						; size = 4
tv275 = -132						; size = 4
tv256 = -132						; size = 4
tv238 = -132						; size = 4
tv213 = -132						; size = 4
tv192 = -132						; size = 4
tv171 = -132						; size = 4
tv145 = -132						; size = 4
tv93 = -132						; size = 4
tv425 = -128						; size = 4
tv371 = -128						; size = 4
tv329 = -128						; size = 4
tv308 = -128						; size = 4
tv288 = -128						; size = 4
tv268 = -128						; size = 4
tv249 = -128						; size = 4
tv230 = -128						; size = 4
tv205 = -128						; size = 4
tv184 = -128						; size = 4
tv164 = -128						; size = 4
tv137 = -128						; size = 4
tv85 = -128						; size = 4
_objective$ = -60					; size = 4
_guide$ = -56						; size = 4
_group$ = -52						; size = 4
_base$ = -48						; size = 4
_pos2$ = -44						; size = 12
_pos1$ = -32						; size = 12
_base_pos$ = -20					; size = 4
_group_pos$ = -16					; size = 4
_mission_pos$ = -12					; size = 4
_side$ = -8						; size = 4
_icon$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
_col$ = 20						; size = 4
_scale$ = 24						; size = 4
?map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z PROC ; map_draw_highlighted_mission, COMDAT

; 3490 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3491 : 	int
; 3492 : 		icon,
; 3493 : 		side;
; 3494 : 
; 3495 : 	vec3d
; 3496 : 		*mission_pos,
; 3497 : 		*group_pos,
; 3498 : 		*base_pos,
; 3499 : 		pos1,
; 3500 : 		pos2;
; 3501 : 
; 3502 : 	entity
; 3503 : 		*base,
; 3504 : 		*group,
; 3505 : 		*guide,
; 3506 : 		*objective;
; 3507 : 
; 3508 : 	ASSERT (obj);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@map_draw_h
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00017	83 c0 12	 add	 eax, 18			; 00000012H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_h:

; 3509 : 
; 3510 : 	ASSERT (en);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@map_draw_h
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00035	83 c0 14	 add	 eax, 20			; 00000014H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_h:

; 3511 : 
; 3512 : 	ASSERT (col);

  00048	83 7d 14 00	 cmp	 DWORD PTR _col$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@map_draw_h
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00053	83 c0 16	 add	 eax, 22			; 00000016H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_03HNOLNALI@col@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_h:

; 3513 : 
; 3514 : 	//
; 3515 : 	// Draw mission and group doing it (if assigned), and base attached to
; 3516 : 	//
; 3517 : 
; 3518 : 	side = get_local_entity_int_value (en, INT_TYPE_SIDE);

  00066	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0006a	74 0a		 je	 SHORT $LN24@map_draw_h
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	89 4d 80	 mov	 DWORD PTR tv85[ebp], ecx
  00074	eb 21		 jmp	 SHORT $LN25@map_draw_h
$LN24@map_draw_h:
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0007c	83 c2 1c	 add	 edx, 28			; 0000001cH
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN25@map_draw_h:
  00097	b9 01 00 00 00	 mov	 ecx, 1
  0009c	85 c9		 test	 ecx, ecx
  0009e	74 0c		 je	 SHORT $LN26@map_draw_h
  000a0	c7 85 7c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv93[ebp], 187 ; 000000bbH
  000aa	eb 24		 jmp	 SHORT $LN27@map_draw_h
$LN26@map_draw_h:
  000ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  000b2	83 c2 1c	 add	 edx, 28			; 0000001cH
  000b5	52		 push	 edx
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c6	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN27@map_draw_h:
  000d0	68 bb 00 00 00	 push	 187			; 000000bbH
  000d5	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  000d8	51		 push	 ecx
  000d9	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv85[ebp], 1116
  000e0	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  000e6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ed	ff d1		 call	 ecx
  000ef	89 45 f8	 mov	 DWORD PTR _side$[ebp], eax

; 3519 : 
; 3520 : 	// get entity position
; 3521 : 	objective = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  000f2	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  000f6	74 0a		 je	 SHORT $LN28@map_draw_h
  000f8	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	89 4d 80	 mov	 DWORD PTR tv137[ebp], ecx
  00100	eb 21		 jmp	 SHORT $LN29@map_draw_h
$LN28@map_draw_h:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00108	83 c2 1f	 add	 edx, 31			; 0000001fH
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN29@map_draw_h:
  00123	b9 01 00 00 00	 mov	 ecx, 1
  00128	85 c9		 test	 ecx, ecx
  0012a	74 0c		 je	 SHORT $LN30@map_draw_h
  0012c	c7 85 7c ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv145[ebp], 39 ; 00000027H
  00136	eb 24		 jmp	 SHORT $LN31@map_draw_h
$LN30@map_draw_h:
  00138	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0013e	83 c2 1f	 add	 edx, 31			; 0000001fH
  00141	52		 push	 edx
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00152	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv145[ebp], 0
$LN31@map_draw_h:
  0015c	6a 27		 push	 39			; 00000027H
  0015e	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00161	51		 push	 ecx
  00162	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 180
  00169	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv145[ebp]
  0016f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00176	ff d1		 call	 ecx
  00178	89 45 c4	 mov	 DWORD PTR _objective$[ebp], eax

; 3522 : 
; 3523 : 	if (objective)

  0017b	83 7d c4 00	 cmp	 DWORD PTR _objective$[ebp], 0
  0017f	74 2c		 je	 SHORT $LN5@map_draw_h

; 3524 : 	{
; 3525 : 		mission_pos = get_last_known_position(objective);

  00181	8b 45 c4	 mov	 eax, DWORD PTR _objective$[ebp]
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  0018a	89 45 f4	 mov	 DWORD PTR _mission_pos$[ebp], eax

; 3526 : 
; 3527 : 		ASSERT (mission_pos);

  0018d	83 7d f4 00	 cmp	 DWORD PTR _mission_pos$[ebp], 0
  00191	75 18		 jne	 SHORT $LN7@map_draw_h
  00193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00198	83 c0 25	 add	 eax, 37			; 00000025H
  0019b	50		 push	 eax
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NLFPIKFI@mission_pos@
  001a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_h:

; 3528 : 	}
; 3529 : 	else

  001ab	eb 05		 jmp	 SHORT $LN6@map_draw_h
$LN5@map_draw_h:

; 3530 : 	{
; 3531 : 		return;

  001ad	e9 2c 08 00 00	 jmp	 $LN1@map_draw_h
$LN6@map_draw_h:

; 3532 : 	}
; 3533 : 
; 3534 : 	if (side == get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE))

  001b2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  001b9	74 0c		 je	 SHORT $LN32@map_draw_h
  001bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	89 4d 80	 mov	 DWORD PTR tv164[ebp], ecx
  001c5	eb 1d		 jmp	 SHORT $LN33@map_draw_h
$LN32@map_draw_h:
  001c7	68 ce 0d 00 00	 push	 3534			; 00000dceH
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d7	52		 push	 edx
  001d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dd	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN33@map_draw_h:
  001e4	b8 01 00 00 00	 mov	 eax, 1
  001e9	85 c0		 test	 eax, eax
  001eb	74 0c		 je	 SHORT $LN34@map_draw_h
  001ed	c7 85 7c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv171[ebp], 187 ; 000000bbH
  001f7	eb 20		 jmp	 SHORT $LN35@map_draw_h
$LN34@map_draw_h:
  001f9	68 ce 0d 00 00	 push	 3534			; 00000dceH
  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00203	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00209	51		 push	 ecx
  0020a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv171[ebp], 0
$LN35@map_draw_h:
  00219	68 bb 00 00 00	 push	 187			; 000000bbH
  0021e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00224	52		 push	 edx
  00225	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv164[ebp], 1116
  0022c	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv171[ebp]
  00232	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00239	ff d2		 call	 edx
  0023b	39 45 f8	 cmp	 DWORD PTR _side$[ebp], eax
  0023e	0f 85 a1 06 00
	00		 jne	 $LN20@map_draw_h

; 3535 : 	{
; 3536 : 		group = NULL;

  00244	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _group$[ebp], 0

; 3537 : 
; 3538 : 		group_pos = NULL;

  0024b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _group_pos$[ebp], 0

; 3539 : 
; 3540 : 		base = NULL;

  00252	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _base$[ebp], 0

; 3541 : 
; 3542 : 		base_pos = NULL;

  00259	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _base_pos$[ebp], 0

; 3543 : 
; 3544 : 		// get group position
; 3545 : 		guide = get_local_entity_first_child (en, LIST_TYPE_GUIDE);

  00260	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00264	74 0a		 je	 SHORT $LN36@map_draw_h
  00266	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00269	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026b	89 4d 80	 mov	 DWORD PTR tv184[ebp], ecx
  0026e	eb 21		 jmp	 SHORT $LN37@map_draw_h
$LN36@map_draw_h:
  00270	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00276	83 c2 37	 add	 edx, 55			; 00000037H
  00279	52		 push	 edx
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00284	50		 push	 eax
  00285	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028a	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN37@map_draw_h:
  00291	b9 01 00 00 00	 mov	 ecx, 1
  00296	85 c9		 test	 ecx, ecx
  00298	74 0c		 je	 SHORT $LN38@map_draw_h
  0029a	c7 85 7c ff ff
	ff 10 00 00 00	 mov	 DWORD PTR tv192[ebp], 16 ; 00000010H
  002a4	eb 24		 jmp	 SHORT $LN39@map_draw_h
$LN38@map_draw_h:
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  002ac	83 c2 37	 add	 edx, 55			; 00000037H
  002af	52		 push	 edx
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
$LN39@map_draw_h:
  002ca	6a 10		 push	 16			; 00000010H
  002cc	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  002cf	51		 push	 ecx
  002d0	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv184[ebp], 180
  002d7	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv192[ebp]
  002dd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002e4	ff d1		 call	 ecx
  002e6	89 45 c8	 mov	 DWORD PTR _guide$[ebp], eax

; 3546 : 
; 3547 : 		if (guide)

  002e9	83 7d c8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  002ed	0f 84 2d 01 00
	00		 je	 $LN9@map_draw_h

; 3548 : 		{
; 3549 : 			group = get_local_entity_parent (guide, LIST_TYPE_GUIDE_STACK);

  002f3	83 7d c8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  002f7	74 0a		 je	 SHORT $LN40@map_draw_h
  002f9	8b 45 c8	 mov	 eax, DWORD PTR _guide$[ebp]
  002fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fe	89 4d 80	 mov	 DWORD PTR tv205[ebp], ecx
  00301	eb 21		 jmp	 SHORT $LN41@map_draw_h
$LN40@map_draw_h:
  00303	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00309	83 c2 3b	 add	 edx, 59			; 0000003bH
  0030c	52		 push	 edx
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00312	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031d	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN41@map_draw_h:
  00324	b9 01 00 00 00	 mov	 ecx, 1
  00329	85 c9		 test	 ecx, ecx
  0032b	74 0c		 je	 SHORT $LN42@map_draw_h
  0032d	c7 85 7c ff ff
	ff 11 00 00 00	 mov	 DWORD PTR tv213[ebp], 17 ; 00000011H
  00337	eb 24		 jmp	 SHORT $LN43@map_draw_h
$LN42@map_draw_h:
  00339	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0033f	83 c2 3b	 add	 edx, 59			; 0000003bH
  00342	52		 push	 edx
  00343	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00348	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0034d	50		 push	 eax
  0034e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00353	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
$LN43@map_draw_h:
  0035d	6a 11		 push	 17			; 00000011H
  0035f	8b 4d c8	 mov	 ecx, DWORD PTR _guide$[ebp]
  00362	51		 push	 ecx
  00363	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv205[ebp], 180
  0036a	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv213[ebp]
  00370	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00377	ff d1		 call	 ecx
  00379	89 45 cc	 mov	 DWORD PTR _group$[ebp], eax

; 3550 : 
; 3551 : 			ASSERT (group);

  0037c	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00380	75 18		 jne	 SHORT $LN10@map_draw_h
  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00387	83 c0 3d	 add	 eax, 61			; 0000003dH
  0038a	50		 push	 eax
  0038b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00390	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00395	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@map_draw_h:

; 3552 : 
; 3553 : 			group_pos = get_local_entity_vec3d_ptr (group, VEC3D_TYPE_POSITION);

  0039a	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  0039e	74 0a		 je	 SHORT $LN44@map_draw_h
  003a0	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  003a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a5	89 4d 80	 mov	 DWORD PTR tv230[ebp], ecx
  003a8	eb 21		 jmp	 SHORT $LN45@map_draw_h
$LN44@map_draw_h:
  003aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  003b0	83 c2 3f	 add	 edx, 63			; 0000003fH
  003b3	52		 push	 edx
  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003be	50		 push	 eax
  003bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c4	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN45@map_draw_h:
  003cb	b9 01 00 00 00	 mov	 ecx, 1
  003d0	85 c9		 test	 ecx, ecx
  003d2	74 0c		 je	 SHORT $LN46@map_draw_h
  003d4	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv238[ebp], 8
  003de	eb 24		 jmp	 SHORT $LN47@map_draw_h
$LN46@map_draw_h:
  003e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  003e6	83 c2 3f	 add	 edx, 63			; 0000003fH
  003e9	52		 push	 edx
  003ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003f4	50		 push	 eax
  003f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003fa	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv238[ebp], 0
$LN47@map_draw_h:
  00404	6a 08		 push	 8
  00406	8b 4d cc	 mov	 ecx, DWORD PTR _group$[ebp]
  00409	51		 push	 ecx
  0040a	6b 55 80 60	 imul	 edx, DWORD PTR tv230[ebp], 96
  0040e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv238[ebp]
  00414	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0041b	ff d1		 call	 ecx
  0041d	89 45 f0	 mov	 DWORD PTR _group_pos$[ebp], eax
$LN9@map_draw_h:

; 3554 : 		}
; 3555 : 
; 3556 : 		// get base position
; 3557 : 		if (get_local_entity_int_value (en, INT_TYPE_ASSESS_LANDING))

  00420	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00424	74 0a		 je	 SHORT $LN48@map_draw_h
  00426	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00429	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042b	89 4d 80	 mov	 DWORD PTR tv249[ebp], ecx
  0042e	eb 1d		 jmp	 SHORT $LN49@map_draw_h
$LN48@map_draw_h:
  00430	68 e5 0d 00 00	 push	 3557			; 00000de5H
  00435	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00440	52		 push	 edx
  00441	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00446	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv249[ebp], 0
$LN49@map_draw_h:
  0044d	b8 01 00 00 00	 mov	 eax, 1
  00452	85 c0		 test	 eax, eax
  00454	74 0c		 je	 SHORT $LN50@map_draw_h
  00456	c7 85 7c ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv256[ebp], 10 ; 0000000aH
  00460	eb 20		 jmp	 SHORT $LN51@map_draw_h
$LN50@map_draw_h:
  00462	68 e5 0d 00 00	 push	 3557			; 00000de5H
  00467	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00472	51		 push	 ecx
  00473	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00478	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv256[ebp], 0
$LN51@map_draw_h:
  00482	6a 0a		 push	 10			; 0000000aH
  00484	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00487	52		 push	 edx
  00488	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv249[ebp], 1116
  0048f	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv256[ebp]
  00495	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0049c	ff d2		 call	 edx
  0049e	85 c0		 test	 eax, eax
  004a0	0f 84 4b 02 00
	00		 je	 $LN15@map_draw_h

; 3558 : 		{
; 3559 : 			if (get_local_entity_int_value (en, INT_TYPE_TASK_STATE) == TASK_STATE_UNASSIGNED)

  004a6	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  004aa	74 0a		 je	 SHORT $LN52@map_draw_h
  004ac	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  004af	8b 08		 mov	 ecx, DWORD PTR [eax]
  004b1	89 4d 80	 mov	 DWORD PTR tv268[ebp], ecx
  004b4	eb 1d		 jmp	 SHORT $LN53@map_draw_h
$LN52@map_draw_h:
  004b6	68 e7 0d 00 00	 push	 3559			; 00000de7H
  004bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004c6	52		 push	 edx
  004c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004cc	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv268[ebp], 0
$LN53@map_draw_h:
  004d3	b8 01 00 00 00	 mov	 eax, 1
  004d8	85 c0		 test	 eax, eax
  004da	74 0c		 je	 SHORT $LN54@map_draw_h
  004dc	c7 85 7c ff ff
	ff e3 00 00 00	 mov	 DWORD PTR tv275[ebp], 227 ; 000000e3H
  004e6	eb 20		 jmp	 SHORT $LN55@map_draw_h
$LN54@map_draw_h:
  004e8	68 e7 0d 00 00	 push	 3559			; 00000de7H
  004ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004f8	51		 push	 ecx
  004f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fe	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv275[ebp], 0
$LN55@map_draw_h:
  00508	68 e3 00 00 00	 push	 227			; 000000e3H
  0050d	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00510	52		 push	 edx
  00511	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv268[ebp], 1116
  00518	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv275[ebp]
  0051e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00525	ff d2		 call	 edx
  00527	85 c0		 test	 eax, eax
  00529	0f 85 8e 00 00
	00		 jne	 $LN12@map_draw_h

; 3560 : 			{
; 3561 : 				base = get_local_entity_parent (en, LIST_TYPE_UNASSIGNED_TASK);

  0052f	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00533	74 0a		 je	 SHORT $LN56@map_draw_h
  00535	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00538	8b 08		 mov	 ecx, DWORD PTR [eax]
  0053a	89 4d 80	 mov	 DWORD PTR tv288[ebp], ecx
  0053d	eb 21		 jmp	 SHORT $LN57@map_draw_h
$LN56@map_draw_h:
  0053f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00545	83 c2 47	 add	 edx, 71			; 00000047H
  00548	52		 push	 edx
  00549	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0054e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00553	50		 push	 eax
  00554	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00559	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv288[ebp], 0
$LN57@map_draw_h:
  00560	b9 01 00 00 00	 mov	 ecx, 1
  00565	85 c9		 test	 ecx, ecx
  00567	74 0c		 je	 SHORT $LN58@map_draw_h
  00569	c7 85 7c ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv296[ebp], 40 ; 00000028H
  00573	eb 24		 jmp	 SHORT $LN59@map_draw_h
$LN58@map_draw_h:
  00575	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0057b	83 c2 47	 add	 edx, 71			; 00000047H
  0057e	52		 push	 edx
  0057f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00584	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00589	50		 push	 eax
  0058a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0058f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv296[ebp], 0
$LN59@map_draw_h:
  00599	6a 28		 push	 40			; 00000028H
  0059b	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0059e	51		 push	 ecx
  0059f	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv288[ebp], 180
  005a6	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv296[ebp]
  005ac	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  005b3	ff d1		 call	 ecx
  005b5	89 45 d0	 mov	 DWORD PTR _base$[ebp], eax

; 3562 : 			}
; 3563 : 			else

  005b8	e9 86 00 00 00	 jmp	 $LN13@map_draw_h
$LN12@map_draw_h:

; 3564 : 			{
; 3565 : 				base = (entity *) get_local_entity_ptr_value (en, PTR_TYPE_RETURN_KEYSITE);

  005bd	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  005c1	74 0a		 je	 SHORT $LN60@map_draw_h
  005c3	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  005c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  005c8	89 4d 80	 mov	 DWORD PTR tv308[ebp], ecx
  005cb	eb 21		 jmp	 SHORT $LN61@map_draw_h
$LN60@map_draw_h:
  005cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  005d3	83 c2 4b	 add	 edx, 75			; 0000004bH
  005d6	52		 push	 edx
  005d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005e1	50		 push	 eax
  005e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e7	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv308[ebp], 0
$LN61@map_draw_h:
  005ee	b9 01 00 00 00	 mov	 ecx, 1
  005f3	85 c9		 test	 ecx, ecx
  005f5	74 0c		 je	 SHORT $LN62@map_draw_h
  005f7	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv316[ebp], 8
  00601	eb 24		 jmp	 SHORT $LN63@map_draw_h
$LN62@map_draw_h:
  00603	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00609	83 c2 4b	 add	 edx, 75			; 0000004bH
  0060c	52		 push	 edx
  0060d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00617	50		 push	 eax
  00618	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0061d	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv316[ebp], 0
$LN63@map_draw_h:
  00627	6a 08		 push	 8
  00629	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0062c	51		 push	 ecx
  0062d	6b 55 80 50	 imul	 edx, DWORD PTR tv308[ebp], 80
  00631	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv316[ebp]
  00637	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0063e	ff d1		 call	 ecx
  00640	89 45 d0	 mov	 DWORD PTR _base$[ebp], eax
$LN13@map_draw_h:

; 3566 : 			}
; 3567 : 
; 3568 : 			if (base)

  00643	83 7d d0 00	 cmp	 DWORD PTR _base$[ebp], 0
  00647	0f 84 a4 00 00
	00		 je	 $LN15@map_draw_h

; 3569 : 			{
; 3570 : 				base_pos = get_local_entity_vec3d_ptr (base, VEC3D_TYPE_POSITION);

  0064d	83 7d d0 00	 cmp	 DWORD PTR _base$[ebp], 0
  00651	74 0a		 je	 SHORT $LN64@map_draw_h
  00653	8b 45 d0	 mov	 eax, DWORD PTR _base$[ebp]
  00656	8b 08		 mov	 ecx, DWORD PTR [eax]
  00658	89 4d 80	 mov	 DWORD PTR tv329[ebp], ecx
  0065b	eb 21		 jmp	 SHORT $LN65@map_draw_h
$LN64@map_draw_h:
  0065d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00663	83 c2 50	 add	 edx, 80			; 00000050H
  00666	52		 push	 edx
  00667	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0066c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00671	50		 push	 eax
  00672	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00677	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv329[ebp], 0
$LN65@map_draw_h:
  0067e	b9 01 00 00 00	 mov	 ecx, 1
  00683	85 c9		 test	 ecx, ecx
  00685	74 0c		 je	 SHORT $LN66@map_draw_h
  00687	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv337[ebp], 8
  00691	eb 24		 jmp	 SHORT $LN67@map_draw_h
$LN66@map_draw_h:
  00693	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00699	83 c2 50	 add	 edx, 80			; 00000050H
  0069c	52		 push	 edx
  0069d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  006a7	50		 push	 eax
  006a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006ad	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv337[ebp], 0
$LN67@map_draw_h:
  006b7	6a 08		 push	 8
  006b9	8b 4d d0	 mov	 ecx, DWORD PTR _base$[ebp]
  006bc	51		 push	 ecx
  006bd	6b 55 80 60	 imul	 edx, DWORD PTR tv329[ebp], 96
  006c1	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv337[ebp]
  006c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  006ce	ff d1		 call	 ecx
  006d0	89 45 ec	 mov	 DWORD PTR _base_pos$[ebp], eax

; 3571 : 
; 3572 : 				ASSERT (base_pos);

  006d3	83 7d ec 00	 cmp	 DWORD PTR _base_pos$[ebp], 0
  006d7	75 18		 jne	 SHORT $LN15@map_draw_h
  006d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  006de	83 c0 52	 add	 eax, 82			; 00000052H
  006e1	50		 push	 eax
  006e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e7	68 00 00 00 00	 push	 OFFSET ??_C@_08GEHOOIKH@base_pos@
  006ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@map_draw_h:

; 3573 : 			}
; 3574 : 		}
; 3575 : 
; 3576 : 		//
; 3577 : 		// Draw connecting lines
; 3578 : 		//
; 3579 : 
; 3580 : 		map_get_screen_coords_from_world (obj, mission_pos, &pos1);

  006f1	8d 45 e0	 lea	 eax, DWORD PTR _pos1$[ebp]
  006f4	50		 push	 eax
  006f5	8b 4d f4	 mov	 ecx, DWORD PTR _mission_pos$[ebp]
  006f8	51		 push	 ecx
  006f9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006fc	52		 push	 edx
  006fd	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3581 : 
; 3582 : 		if (group)

  00702	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00706	0f 84 5c 01 00
	00		 je	 $LN16@map_draw_h

; 3583 : 		{
; 3584 : 			ASSERT (group_pos);

  0070c	83 7d f0 00	 cmp	 DWORD PTR _group_pos$[ebp], 0
  00710	75 18		 jne	 SHORT $LN18@map_draw_h
  00712	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00717	83 c0 5e	 add	 eax, 94			; 0000005eH
  0071a	50		 push	 eax
  0071b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00720	68 00 00 00 00	 push	 OFFSET ??_C@_09NLEHHNCH@group_pos@
  00725	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@map_draw_h:

; 3585 : 
; 3586 : 			map_get_screen_coords_from_world (obj, group_pos, &pos2);

  0072a	8d 45 d4	 lea	 eax, DWORD PTR _pos2$[ebp]
  0072d	50		 push	 eax
  0072e	8b 4d f0	 mov	 ecx, DWORD PTR _group_pos$[ebp]
  00731	51		 push	 ecx
  00732	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00735	52		 push	 edx
  00736	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3587 : 
; 3588 : 			draw_line (pos1.x, pos1.z, pos2.x, pos2.z, *col);

  0073b	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  0073e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00740	51		 push	 ecx
  00741	51		 push	 ecx
  00742	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  00747	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074c	51		 push	 ecx
  0074d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  00752	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00757	51		 push	 ecx
  00758	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  0075d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00762	51		 push	 ecx
  00763	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  00768	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0076d	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 3589 : 
; 3590 : 			//
; 3591 : 			// Draw Group Icon
; 3592 : 			//
; 3593 : 
; 3594 : 			icon = get_local_entity_int_value (group, INT_TYPE_MAP_ICON);

  00772	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00776	74 0a		 je	 SHORT $LN68@map_draw_h
  00778	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  0077b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0077d	89 4d 80	 mov	 DWORD PTR tv371[ebp], ecx
  00780	eb 21		 jmp	 SHORT $LN69@map_draw_h
$LN68@map_draw_h:
  00782	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00788	83 c2 68	 add	 edx, 104		; 00000068H
  0078b	52		 push	 edx
  0078c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00791	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00796	50		 push	 eax
  00797	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0079c	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv371[ebp], 0
$LN69@map_draw_h:
  007a3	b9 01 00 00 00	 mov	 ecx, 1
  007a8	85 c9		 test	 ecx, ecx
  007aa	74 0c		 je	 SHORT $LN70@map_draw_h
  007ac	c7 85 7c ff ff
	ff 82 00 00 00	 mov	 DWORD PTR tv379[ebp], 130 ; 00000082H
  007b6	eb 24		 jmp	 SHORT $LN71@map_draw_h
$LN70@map_draw_h:
  007b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  007be	83 c2 68	 add	 edx, 104		; 00000068H
  007c1	52		 push	 edx
  007c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007cc	50		 push	 eax
  007cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv379[ebp], 0
$LN71@map_draw_h:
  007dc	68 82 00 00 00	 push	 130			; 00000082H
  007e1	8b 4d cc	 mov	 ecx, DWORD PTR _group$[ebp]
  007e4	51		 push	 ecx
  007e5	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv371[ebp], 1116
  007ec	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv379[ebp]
  007f2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  007f9	ff d1		 call	 ecx
  007fb	89 45 fc	 mov	 DWORD PTR _icon$[ebp], eax

; 3595 : 
; 3596 : 			ASSERT (icon != MAP_ICON_NONE);

  007fe	83 7d fc 00	 cmp	 DWORD PTR _icon$[ebp], 0
  00802	75 18		 jne	 SHORT $LN19@map_draw_h
  00804	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00809	83 c0 6a	 add	 eax, 106		; 0000006aH
  0080c	50		 push	 eax
  0080d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00812	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00817	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@map_draw_h:

; 3597 : 
; 3598 : 			map_draw_entity_icon (obj, group, group_pos, icon, side, 1.0);

  0081c	51		 push	 ecx
  0081d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00825	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0082a	8b 45 f8	 mov	 eax, DWORD PTR _side$[ebp]
  0082d	50		 push	 eax
  0082e	8b 4d fc	 mov	 ecx, DWORD PTR _icon$[ebp]
  00831	51		 push	 ecx
  00832	8b 55 f0	 mov	 edx, DWORD PTR _group_pos$[ebp]
  00835	52		 push	 edx
  00836	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  00839	50		 push	 eax
  0083a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0083d	51		 push	 ecx
  0083e	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3599 : 
; 3600 : 			map_draw_entity_icon (obj, NULL, group_pos, overlay_icon, ENTITY_SIDE_NEUTRAL, 1.0);

  00843	51		 push	 ecx
  00844	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0084c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00851	6a 00		 push	 0
  00853	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  00856	50		 push	 eax
  00857	8b 4d f0	 mov	 ecx, DWORD PTR _group_pos$[ebp]
  0085a	51		 push	 ecx
  0085b	6a 00		 push	 0
  0085d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00860	52		 push	 edx
  00861	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
  00866	eb 7d		 jmp	 SHORT $LN20@map_draw_h
$LN16@map_draw_h:

; 3601 : 		}
; 3602 : 		else if (base)

  00868	83 7d d0 00	 cmp	 DWORD PTR _base$[ebp], 0
  0086c	74 77		 je	 SHORT $LN20@map_draw_h

; 3603 : 		{
; 3604 : 			ASSERT (base_pos);

  0086e	83 7d ec 00	 cmp	 DWORD PTR _base_pos$[ebp], 0
  00872	75 18		 jne	 SHORT $LN21@map_draw_h
  00874	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00879	83 c0 72	 add	 eax, 114		; 00000072H
  0087c	50		 push	 eax
  0087d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00882	68 00 00 00 00	 push	 OFFSET ??_C@_08GEHOOIKH@base_pos@
  00887	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@map_draw_h:

; 3605 : 
; 3606 : 			map_get_screen_coords_from_world (obj, base_pos, &pos2);

  0088c	8d 45 d4	 lea	 eax, DWORD PTR _pos2$[ebp]
  0088f	50		 push	 eax
  00890	8b 4d ec	 mov	 ecx, DWORD PTR _base_pos$[ebp]
  00893	51		 push	 ecx
  00894	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00897	52		 push	 edx
  00898	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3607 : 
; 3608 : 			draw_line (pos1.x, pos1.z, pos2.x, pos2.z, *col);

  0089d	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  008a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  008a2	51		 push	 ecx
  008a3	51		 push	 ecx
  008a4	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  008a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ae	51		 push	 ecx
  008af	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  008b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008b9	51		 push	 ecx
  008ba	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  008bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008c4	51		 push	 ecx
  008c5	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  008ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008cf	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 3609 : 
; 3610 : 			//
; 3611 : 			// Draw Base Icon
; 3612 : 			//
; 3613 : 
; 3614 : 			map_draw_keysite (obj, base, (map_icon_type) overlay_icon);

  008d4	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  008d7	50		 push	 eax
  008d8	8b 4d d0	 mov	 ecx, DWORD PTR _base$[ebp]
  008db	51		 push	 ecx
  008dc	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  008df	52		 push	 edx
  008e0	e8 00 00 00 00	 call	 ?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z ; map_draw_keysite
$LN20@map_draw_h:

; 3615 : 		}
; 3616 : 	}
; 3617 : 
; 3618 : 	//
; 3619 : 	// Draw Mission Icon
; 3620 : 	//
; 3621 : 
; 3622 : 	icon = get_local_entity_int_value (en, INT_TYPE_MAP_ICON);

  008e5	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  008e9	74 0a		 je	 SHORT $LN72@map_draw_h
  008eb	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  008ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  008f0	89 4d 80	 mov	 DWORD PTR tv425[ebp], ecx
  008f3	eb 24		 jmp	 SHORT $LN73@map_draw_h
$LN72@map_draw_h:
  008f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  008fb	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  00901	52		 push	 edx
  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00907	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0090c	50		 push	 eax
  0090d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00912	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv425[ebp], 0
$LN73@map_draw_h:
  00919	b9 01 00 00 00	 mov	 ecx, 1
  0091e	85 c9		 test	 ecx, ecx
  00920	74 0c		 je	 SHORT $LN74@map_draw_h
  00922	c7 85 7c ff ff
	ff 82 00 00 00	 mov	 DWORD PTR tv433[ebp], 130 ; 00000082H
  0092c	eb 27		 jmp	 SHORT $LN75@map_draw_h
$LN74@map_draw_h:
  0092e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00934	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  0093a	52		 push	 edx
  0093b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00940	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00945	50		 push	 eax
  00946	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0094b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv433[ebp], 0
$LN75@map_draw_h:
  00955	68 82 00 00 00	 push	 130			; 00000082H
  0095a	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0095d	51		 push	 ecx
  0095e	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv425[ebp], 1116
  00965	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv433[ebp]
  0096b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00972	ff d1		 call	 ecx
  00974	89 45 fc	 mov	 DWORD PTR _icon$[ebp], eax

; 3623 : 
; 3624 : 	ASSERT (icon != MAP_ICON_NONE);

  00977	83 7d fc 00	 cmp	 DWORD PTR _icon$[ebp], 0
  0097b	75 1a		 jne	 SHORT $LN22@map_draw_h
  0097d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00982	05 86 00 00 00	 add	 eax, 134		; 00000086H
  00987	50		 push	 eax
  00988	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0098d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00992	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN22@map_draw_h:

; 3625 : 
; 3626 : 	map_draw_entity_icon (obj, en, mission_pos, icon, side, 1.0);

  00997	51		 push	 ecx
  00998	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a5	8b 45 f8	 mov	 eax, DWORD PTR _side$[ebp]
  009a8	50		 push	 eax
  009a9	8b 4d fc	 mov	 ecx, DWORD PTR _icon$[ebp]
  009ac	51		 push	 ecx
  009ad	8b 55 f4	 mov	 edx, DWORD PTR _mission_pos$[ebp]
  009b0	52		 push	 edx
  009b1	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  009b4	50		 push	 eax
  009b5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  009b8	51		 push	 ecx
  009b9	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3627 : 
; 3628 : 	map_draw_entity_icon (obj, NULL, mission_pos, overlay_icon, ENTITY_SIDE_NEUTRAL, scale);

  009be	51		 push	 ecx
  009bf	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _scale$[ebp]
  009c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009c9	6a 00		 push	 0
  009cb	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  009ce	50		 push	 eax
  009cf	8b 4d f4	 mov	 ecx, DWORD PTR _mission_pos$[ebp]
  009d2	51		 push	 ecx
  009d3	6a 00		 push	 0
  009d5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  009d8	52		 push	 edx
  009d9	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN1@map_draw_h:

; 3629 : }

  009de	5f		 pop	 edi
  009df	5e		 pop	 esi
  009e0	5b		 pop	 ebx
  009e1	8b e5		 mov	 esp, ebp
  009e3	5d		 pop	 ebp
  009e4	c2 14 00	 ret	 20			; 00000014H
?map_draw_highlighted_mission@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ENDP ; map_draw_highlighted_mission
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z
_TEXT	SEGMENT
tv319 = -120						; size = 4
tv294 = -120						; size = 4
tv250 = -120						; size = 4
tv215 = -120						; size = 4
tv194 = -120						; size = 4
tv164 = -120						; size = 4
tv143 = -120						; size = 4
tv93 = -120						; size = 4
tv312 = -116						; size = 4
tv305 = -116						; size = 4
tv286 = -116						; size = 4
tv242 = -116						; size = 4
tv207 = -116						; size = 4
tv187 = -116						; size = 4
tv175 = -116						; size = 4
tv156 = -116						; size = 4
tv136 = -116						; size = 4
tv85 = -116						; size = 4
_objective$ = -48					; size = 4
_mission$ = -44						; size = 4
_pos2$ = -40						; size = 12
_pos1$ = -28						; size = 12
_mission_pos$ = -16					; size = 4
_en_pos$ = -12						; size = 4
_side$ = -8						; size = 4
_icon$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
_col$ = 20						; size = 4
_scale$ = 24						; size = 4
?map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z PROC ; map_draw_highlighted_group, COMDAT

; 3378 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3379 : 	int
; 3380 : 		icon,
; 3381 : 		side;
; 3382 : 
; 3383 : 	vec3d
; 3384 : 		*en_pos,
; 3385 : 		*mission_pos,
; 3386 : 		pos1,
; 3387 : 		pos2;
; 3388 : 
; 3389 : 	entity
; 3390 : 		*mission,
; 3391 : 		*objective;
; 3392 : 
; 3393 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_h
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00014	83 c0 0f	 add	 eax, 15			; 0000000fH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_h:

; 3394 : 
; 3395 : 	ASSERT (en);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_h
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00032	83 c0 11	 add	 eax, 17			; 00000011H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_h:

; 3396 : 
; 3397 : 	ASSERT (col);

  00045	83 7d 14 00	 cmp	 DWORD PTR _col$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@map_draw_h
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00050	83 c0 13	 add	 eax, 19			; 00000013H
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_03HNOLNALI@col@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_h:

; 3398 : 
; 3399 : 	//
; 3400 : 	// Draw selected group member + mission it's doing
; 3401 : 	//
; 3402 : 
; 3403 : 	side = get_local_entity_int_value (en, INT_TYPE_SIDE);

  00063	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00067	74 0a		 je	 SHORT $LN19@map_draw_h
  00069	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 4d 8c	 mov	 DWORD PTR tv85[ebp], ecx
  00071	eb 21		 jmp	 SHORT $LN20@map_draw_h
$LN19@map_draw_h:
  00073	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00079	83 c2 19	 add	 edx, 25			; 00000019H
  0007c	52		 push	 edx
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008d	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN20@map_draw_h:
  00094	b9 01 00 00 00	 mov	 ecx, 1
  00099	85 c9		 test	 ecx, ecx
  0009b	74 09		 je	 SHORT $LN21@map_draw_h
  0009d	c7 45 88 bb 00
	00 00		 mov	 DWORD PTR tv93[ebp], 187 ; 000000bbH
  000a4	eb 21		 jmp	 SHORT $LN22@map_draw_h
$LN21@map_draw_h:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  000ac	83 c2 19	 add	 edx, 25			; 00000019H
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN22@map_draw_h:
  000c7	68 bb 00 00 00	 push	 187			; 000000bbH
  000cc	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  000cf	51		 push	 ecx
  000d0	69 55 8c 5c 04
	00 00		 imul	 edx, DWORD PTR tv85[ebp], 1116
  000d7	8b 45 88	 mov	 eax, DWORD PTR tv93[ebp]
  000da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e1	ff d1		 call	 ecx
  000e3	89 45 f8	 mov	 DWORD PTR _side$[ebp], eax

; 3404 : 
; 3405 : 	// get mission position
; 3406 : 	mission_pos = NULL;

  000e6	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _mission_pos$[ebp], 0

; 3407 : 
; 3408 : 	if (side == get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE))

  000ed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  000f4	74 0c		 je	 SHORT $LN23@map_draw_h
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	89 4d 8c	 mov	 DWORD PTR tv136[ebp], ecx
  00100	eb 1d		 jmp	 SHORT $LN24@map_draw_h
$LN23@map_draw_h:
  00102	68 50 0d 00 00	 push	 3408			; 00000d50H
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00112	52		 push	 edx
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN24@map_draw_h:
  0011f	b8 01 00 00 00	 mov	 eax, 1
  00124	85 c0		 test	 eax, eax
  00126	74 09		 je	 SHORT $LN25@map_draw_h
  00128	c7 45 88 bb 00
	00 00		 mov	 DWORD PTR tv143[ebp], 187 ; 000000bbH
  0012f	eb 1d		 jmp	 SHORT $LN26@map_draw_h
$LN25@map_draw_h:
  00131	68 50 0d 00 00	 push	 3408			; 00000d50H
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00141	51		 push	 ecx
  00142	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00147	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN26@map_draw_h:
  0014e	68 bb 00 00 00	 push	 187			; 000000bbH
  00153	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00159	52		 push	 edx
  0015a	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv136[ebp], 1116
  00161	8b 4d 88	 mov	 ecx, DWORD PTR tv143[ebp]
  00164	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0016b	ff d2		 call	 edx
  0016d	39 45 f8	 cmp	 DWORD PTR _side$[ebp], eax
  00170	0f 85 3b 03 00
	00		 jne	 $LN5@map_draw_h

; 3409 : 	{
; 3410 : 		// get entity position
; 3411 : 		en_pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);  // known to be friendly

  00176	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0017a	74 0a		 je	 SHORT $LN27@map_draw_h
  0017c	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0017f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00181	89 4d 8c	 mov	 DWORD PTR tv156[ebp], ecx
  00184	eb 21		 jmp	 SHORT $LN28@map_draw_h
$LN27@map_draw_h:
  00186	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0018c	83 c2 21	 add	 edx, 33			; 00000021H
  0018f	52		 push	 edx
  00190	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00195	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a0	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN28@map_draw_h:
  001a7	b9 01 00 00 00	 mov	 ecx, 1
  001ac	85 c9		 test	 ecx, ecx
  001ae	74 09		 je	 SHORT $LN29@map_draw_h
  001b0	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv164[ebp], 8
  001b7	eb 21		 jmp	 SHORT $LN30@map_draw_h
$LN29@map_draw_h:
  001b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  001bf	83 c2 21	 add	 edx, 33			; 00000021H
  001c2	52		 push	 edx
  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d3	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN30@map_draw_h:
  001da	6a 08		 push	 8
  001dc	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  001df	51		 push	 ecx
  001e0	6b 55 8c 60	 imul	 edx, DWORD PTR tv156[ebp], 96
  001e4	8b 45 88	 mov	 eax, DWORD PTR tv164[ebp]
  001e7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001ee	ff d1		 call	 ecx
  001f0	89 45 f4	 mov	 DWORD PTR _en_pos$[ebp], eax

; 3412 : 
; 3413 : 		if (get_local_entity_type (en) == ENTITY_TYPE_GROUP)

  001f3	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  001f7	74 0a		 je	 SHORT $LN31@map_draw_h
  001f9	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  001fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fe	89 4d 8c	 mov	 DWORD PTR tv175[ebp], ecx
  00201	eb 1d		 jmp	 SHORT $LN32@map_draw_h
$LN31@map_draw_h:
  00203	68 55 0d 00 00	 push	 3413			; 00000d55H
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00213	52		 push	 edx
  00214	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00219	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN32@map_draw_h:
  00220	83 7d 8c 0c	 cmp	 DWORD PTR tv175[ebp], 12 ; 0000000cH
  00224	75 0e		 jne	 SHORT $LN7@map_draw_h

; 3414 : 		{
; 3415 : 			mission = get_local_group_primary_task (en);

  00226	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_group_primary_task
  0022f	89 45 d4	 mov	 DWORD PTR _mission$[ebp], eax

; 3416 : 		}
; 3417 : 		else

  00232	eb 0c		 jmp	 SHORT $LN8@map_draw_h
$LN7@map_draw_h:

; 3418 : 		{
; 3419 : 			mission = get_local_entity_primary_task (en);

  00234	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
  0023d	89 45 d4	 mov	 DWORD PTR _mission$[ebp], eax
$LN8@map_draw_h:

; 3420 : 		}
; 3421 : 
; 3422 : 		if (mission)

  00240	83 7d d4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00244	0f 84 65 02 00
	00		 je	 $LN12@map_draw_h

; 3423 : 		{
; 3424 : 			if (get_local_entity_int_value (mission, INT_TYPE_TASK_STATE) != TASK_STATE_COMPLETED)

  0024a	83 7d d4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  0024e	74 0a		 je	 SHORT $LN33@map_draw_h
  00250	8b 45 d4	 mov	 eax, DWORD PTR _mission$[ebp]
  00253	8b 08		 mov	 ecx, DWORD PTR [eax]
  00255	89 4d 8c	 mov	 DWORD PTR tv187[ebp], ecx
  00258	eb 1d		 jmp	 SHORT $LN34@map_draw_h
$LN33@map_draw_h:
  0025a	68 60 0d 00 00	 push	 3424			; 00000d60H
  0025f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00264	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026a	52		 push	 edx
  0026b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00270	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN34@map_draw_h:
  00277	b8 01 00 00 00	 mov	 eax, 1
  0027c	85 c0		 test	 eax, eax
  0027e	74 09		 je	 SHORT $LN35@map_draw_h
  00280	c7 45 88 e3 00
	00 00		 mov	 DWORD PTR tv194[ebp], 227 ; 000000e3H
  00287	eb 1d		 jmp	 SHORT $LN36@map_draw_h
$LN35@map_draw_h:
  00289	68 60 0d 00 00	 push	 3424			; 00000d60H
  0028e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00293	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00299	51		 push	 ecx
  0029a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029f	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN36@map_draw_h:
  002a6	68 e3 00 00 00	 push	 227			; 000000e3H
  002ab	8b 55 d4	 mov	 edx, DWORD PTR _mission$[ebp]
  002ae	52		 push	 edx
  002af	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv187[ebp], 1116
  002b6	8b 4d 88	 mov	 ecx, DWORD PTR tv194[ebp]
  002b9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002c0	ff d2		 call	 edx
  002c2	83 f8 02	 cmp	 eax, 2
  002c5	0f 84 e4 01 00
	00		 je	 $LN12@map_draw_h

; 3425 : 			{
; 3426 : 				objective = get_local_entity_parent (mission, LIST_TYPE_TASK_DEPENDENT);

  002cb	83 7d d4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  002cf	74 0a		 je	 SHORT $LN37@map_draw_h
  002d1	8b 45 d4	 mov	 eax, DWORD PTR _mission$[ebp]
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	89 4d 8c	 mov	 DWORD PTR tv207[ebp], ecx
  002d9	eb 21		 jmp	 SHORT $LN38@map_draw_h
$LN37@map_draw_h:
  002db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  002e1	83 c2 30	 add	 edx, 48			; 00000030H
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f5	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN38@map_draw_h:
  002fc	b9 01 00 00 00	 mov	 ecx, 1
  00301	85 c9		 test	 ecx, ecx
  00303	74 09		 je	 SHORT $LN39@map_draw_h
  00305	c7 45 88 27 00
	00 00		 mov	 DWORD PTR tv215[ebp], 39 ; 00000027H
  0030c	eb 21		 jmp	 SHORT $LN40@map_draw_h
$LN39@map_draw_h:
  0030e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00314	83 c2 30	 add	 edx, 48			; 00000030H
  00317	52		 push	 edx
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00328	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN40@map_draw_h:
  0032f	6a 27		 push	 39			; 00000027H
  00331	8b 4d d4	 mov	 ecx, DWORD PTR _mission$[ebp]
  00334	51		 push	 ecx
  00335	69 55 8c b4 00
	00 00		 imul	 edx, DWORD PTR tv207[ebp], 180
  0033c	8b 45 88	 mov	 eax, DWORD PTR tv215[ebp]
  0033f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00346	ff d1		 call	 ecx
  00348	89 45 d0	 mov	 DWORD PTR _objective$[ebp], eax

; 3427 : 
; 3428 : 				if (objective)

  0034b	83 7d d0 00	 cmp	 DWORD PTR _objective$[ebp], 0
  0034f	0f 84 5a 01 00
	00		 je	 $LN12@map_draw_h

; 3429 : 				{
; 3430 : 					mission_pos = get_last_known_position (objective);

  00355	8b 45 d0	 mov	 eax, DWORD PTR _objective$[ebp]
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  0035e	89 45 f0	 mov	 DWORD PTR _mission_pos$[ebp], eax

; 3431 : 
; 3432 : 					if (mission_pos)

  00361	83 7d f0 00	 cmp	 DWORD PTR _mission_pos$[ebp], 0
  00365	0f 84 44 01 00
	00		 je	 $LN12@map_draw_h

; 3433 : 					{
; 3434 : 						//
; 3435 : 						// Draw connecting line
; 3436 : 						//
; 3437 : 
; 3438 : 						map_get_screen_coords_from_world (obj, en_pos, &pos1);

  0036b	8d 45 e4	 lea	 eax, DWORD PTR _pos1$[ebp]
  0036e	50		 push	 eax
  0036f	8b 4d f4	 mov	 ecx, DWORD PTR _en_pos$[ebp]
  00372	51		 push	 ecx
  00373	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00376	52		 push	 edx
  00377	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3439 : 						map_get_screen_coords_from_world (obj, mission_pos, &pos2);

  0037c	8d 45 d8	 lea	 eax, DWORD PTR _pos2$[ebp]
  0037f	50		 push	 eax
  00380	8b 4d f0	 mov	 ecx, DWORD PTR _mission_pos$[ebp]
  00383	51		 push	 ecx
  00384	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00387	52		 push	 edx
  00388	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3440 : 
; 3441 : 						draw_line (pos1.x, pos1.z, pos2.x, pos2.z, *col);

  0038d	8b 45 14	 mov	 eax, DWORD PTR _col$[ebp]
  00390	8b 08		 mov	 ecx, DWORD PTR [eax]
  00392	51		 push	 ecx
  00393	51		 push	 ecx
  00394	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  00399	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039e	51		 push	 ecx
  0039f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  003a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a9	51		 push	 ecx
  003aa	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  003af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b4	51		 push	 ecx
  003b5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  003ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003bf	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 3442 : 
; 3443 : 						//
; 3444 : 						// Draw Mission Icon
; 3445 : 						//
; 3446 : 
; 3447 : 						icon = get_local_entity_int_value (mission, INT_TYPE_MAP_ICON);

  003c4	83 7d d4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  003c8	74 0a		 je	 SHORT $LN41@map_draw_h
  003ca	8b 45 d4	 mov	 eax, DWORD PTR _mission$[ebp]
  003cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003cf	89 4d 8c	 mov	 DWORD PTR tv242[ebp], ecx
  003d2	eb 21		 jmp	 SHORT $LN42@map_draw_h
$LN41@map_draw_h:
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  003da	83 c2 45	 add	 edx, 69			; 00000045H
  003dd	52		 push	 edx
  003de	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e8	50		 push	 eax
  003e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ee	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv242[ebp], 0
$LN42@map_draw_h:
  003f5	b9 01 00 00 00	 mov	 ecx, 1
  003fa	85 c9		 test	 ecx, ecx
  003fc	74 09		 je	 SHORT $LN43@map_draw_h
  003fe	c7 45 88 82 00
	00 00		 mov	 DWORD PTR tv250[ebp], 130 ; 00000082H
  00405	eb 21		 jmp	 SHORT $LN44@map_draw_h
$LN43@map_draw_h:
  00407	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  0040d	83 c2 45	 add	 edx, 69			; 00000045H
  00410	52		 push	 edx
  00411	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00416	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00421	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv250[ebp], 0
$LN44@map_draw_h:
  00428	68 82 00 00 00	 push	 130			; 00000082H
  0042d	8b 4d d4	 mov	 ecx, DWORD PTR _mission$[ebp]
  00430	51		 push	 ecx
  00431	69 55 8c 5c 04
	00 00		 imul	 edx, DWORD PTR tv242[ebp], 1116
  00438	8b 45 88	 mov	 eax, DWORD PTR tv250[ebp]
  0043b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00442	ff d1		 call	 ecx
  00444	89 45 fc	 mov	 DWORD PTR _icon$[ebp], eax

; 3448 : 
; 3449 : 						ASSERT (icon != MAP_ICON_NONE);

  00447	83 7d fc 00	 cmp	 DWORD PTR _icon$[ebp], 0
  0044b	75 18		 jne	 SHORT $LN13@map_draw_h
  0044d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00452	83 c0 47	 add	 eax, 71			; 00000047H
  00455	50		 push	 eax
  00456	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0045b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00460	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@map_draw_h:

; 3450 : 
; 3451 : 						map_draw_entity_icon (obj, mission, mission_pos, icon, side, 1.0);

  00465	51		 push	 ecx
  00466	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0046e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00473	8b 45 f8	 mov	 eax, DWORD PTR _side$[ebp]
  00476	50		 push	 eax
  00477	8b 4d fc	 mov	 ecx, DWORD PTR _icon$[ebp]
  0047a	51		 push	 ecx
  0047b	8b 55 f0	 mov	 edx, DWORD PTR _mission_pos$[ebp]
  0047e	52		 push	 edx
  0047f	8b 45 d4	 mov	 eax, DWORD PTR _mission$[ebp]
  00482	50		 push	 eax
  00483	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00486	51		 push	 ecx
  00487	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3452 : 
; 3453 : 						map_draw_entity_icon (obj, NULL, mission_pos, overlay_icon, ENTITY_SIDE_NEUTRAL, 1.0);

  0048c	51		 push	 ecx
  0048d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00495	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049a	6a 00		 push	 0
  0049c	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  0049f	50		 push	 eax
  004a0	8b 4d f0	 mov	 ecx, DWORD PTR _mission_pos$[ebp]
  004a3	51		 push	 ecx
  004a4	6a 00		 push	 0
  004a6	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004a9	52		 push	 edx
  004aa	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN12@map_draw_h:

; 3454 : 					}
; 3455 : 				}
; 3456 : 			}
; 3457 : 		}
; 3458 : 	}
; 3459 : 	else

  004af	eb 0c		 jmp	 SHORT $LN6@map_draw_h
$LN5@map_draw_h:

; 3460 : 		en_pos = get_last_known_position(en);

  004b1	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  004b4	50		 push	 eax
  004b5	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  004ba	89 45 f4	 mov	 DWORD PTR _en_pos$[ebp], eax
$LN6@map_draw_h:

; 3461 : 
; 3462 : 	//
; 3463 : 	// Draw Group / Member Icon
; 3464 : 	//
; 3465 : 
; 3466 : 	ASSERT (en_pos);

  004bd	83 7d f4 00	 cmp	 DWORD PTR _en_pos$[ebp], 0
  004c1	75 18		 jne	 SHORT $LN14@map_draw_h
  004c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  004c8	83 c0 58	 add	 eax, 88			; 00000058H
  004cb	50		 push	 eax
  004cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d1	68 00 00 00 00	 push	 OFFSET ??_C@_06BPAGHDEH@en_pos@
  004d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@map_draw_h:

; 3467 : 
; 3468 : 	icon = get_local_entity_int_value (en, INT_TYPE_MAP_ICON);

  004db	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  004df	74 0a		 je	 SHORT $LN45@map_draw_h
  004e1	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  004e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e6	89 4d 8c	 mov	 DWORD PTR tv286[ebp], ecx
  004e9	eb 21		 jmp	 SHORT $LN46@map_draw_h
$LN45@map_draw_h:
  004eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  004f1	83 c2 5a	 add	 edx, 90			; 0000005aH
  004f4	52		 push	 edx
  004f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ff	50		 push	 eax
  00500	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00505	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv286[ebp], 0
$LN46@map_draw_h:
  0050c	b9 01 00 00 00	 mov	 ecx, 1
  00511	85 c9		 test	 ecx, ecx
  00513	74 09		 je	 SHORT $LN47@map_draw_h
  00515	c7 45 88 82 00
	00 00		 mov	 DWORD PTR tv294[ebp], 130 ; 00000082H
  0051c	eb 21		 jmp	 SHORT $LN48@map_draw_h
$LN47@map_draw_h:
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00524	83 c2 5a	 add	 edx, 90			; 0000005aH
  00527	52		 push	 edx
  00528	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00532	50		 push	 eax
  00533	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00538	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv294[ebp], 0
$LN48@map_draw_h:
  0053f	68 82 00 00 00	 push	 130			; 00000082H
  00544	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00547	51		 push	 ecx
  00548	69 55 8c 5c 04
	00 00		 imul	 edx, DWORD PTR tv286[ebp], 1116
  0054f	8b 45 88	 mov	 eax, DWORD PTR tv294[ebp]
  00552	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00559	ff d1		 call	 ecx
  0055b	89 45 fc	 mov	 DWORD PTR _icon$[ebp], eax

; 3469 : 
; 3470 : 	if (get_local_entity_type (en) == ENTITY_TYPE_HELICOPTER)

  0055e	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00562	74 0a		 je	 SHORT $LN49@map_draw_h
  00564	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00567	8b 08		 mov	 ecx, DWORD PTR [eax]
  00569	89 4d 8c	 mov	 DWORD PTR tv305[ebp], ecx
  0056c	eb 1d		 jmp	 SHORT $LN50@map_draw_h
$LN49@map_draw_h:
  0056e	68 8e 0d 00 00	 push	 3470			; 00000d8eH
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00578	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0057e	52		 push	 edx
  0057f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00584	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv305[ebp], 0
$LN50@map_draw_h:
  0058b	83 7d 8c 0e	 cmp	 DWORD PTR tv305[ebp], 14 ; 0000000eH
  0058f	0f 85 83 00 00
	00		 jne	 $LN16@map_draw_h

; 3471 : 	{
; 3472 : 		if (get_local_entity_int_value (en, INT_TYPE_PLAYER))

  00595	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00599	74 0a		 je	 SHORT $LN51@map_draw_h
  0059b	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0059e	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a0	89 4d 8c	 mov	 DWORD PTR tv312[ebp], ecx
  005a3	eb 1d		 jmp	 SHORT $LN52@map_draw_h
$LN51@map_draw_h:
  005a5	68 90 0d 00 00	 push	 3472			; 00000d90H
  005aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005b5	52		 push	 edx
  005b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005bb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv312[ebp], 0
$LN52@map_draw_h:
  005c2	b8 01 00 00 00	 mov	 eax, 1
  005c7	85 c0		 test	 eax, eax
  005c9	74 09		 je	 SHORT $LN53@map_draw_h
  005cb	c7 45 88 9c 00
	00 00		 mov	 DWORD PTR tv319[ebp], 156 ; 0000009cH
  005d2	eb 1d		 jmp	 SHORT $LN54@map_draw_h
$LN53@map_draw_h:
  005d4	68 90 0d 00 00	 push	 3472			; 00000d90H
  005d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005e4	51		 push	 ecx
  005e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ea	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv319[ebp], 0
$LN54@map_draw_h:
  005f1	68 9c 00 00 00	 push	 156			; 0000009cH
  005f6	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  005f9	52		 push	 edx
  005fa	69 45 8c 5c 04
	00 00		 imul	 eax, DWORD PTR tv312[ebp], 1116
  00601	8b 4d 88	 mov	 ecx, DWORD PTR tv319[ebp]
  00604	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0060b	ff d2		 call	 edx
  0060d	85 c0		 test	 eax, eax
  0060f	74 07		 je	 SHORT $LN16@map_draw_h

; 3473 : 		{
; 3474 : 			icon = MAP_ICON_PLAYER;

  00611	c7 45 fc 10 00
	00 00		 mov	 DWORD PTR _icon$[ebp], 16 ; 00000010H
$LN16@map_draw_h:

; 3475 : 		}
; 3476 : 	}
; 3477 : 
; 3478 : 	ASSERT (icon != MAP_ICON_NONE);

  00618	83 7d fc 00	 cmp	 DWORD PTR _icon$[ebp], 0
  0061c	75 18		 jne	 SHORT $LN17@map_draw_h
  0061e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z@4JA
  00623	83 c0 64	 add	 eax, 100		; 00000064H
  00626	50		 push	 eax
  00627	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0062c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00631	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@map_draw_h:

; 3479 : 
; 3480 : 	map_draw_entity_icon (obj, en, en_pos, icon, side, 1.0);

  00636	51		 push	 ecx
  00637	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0063f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00644	8b 45 f8	 mov	 eax, DWORD PTR _side$[ebp]
  00647	50		 push	 eax
  00648	8b 4d fc	 mov	 ecx, DWORD PTR _icon$[ebp]
  0064b	51		 push	 ecx
  0064c	8b 55 f4	 mov	 edx, DWORD PTR _en_pos$[ebp]
  0064f	52		 push	 edx
  00650	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00653	50		 push	 eax
  00654	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00657	51		 push	 ecx
  00658	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3481 : 
; 3482 : 	map_draw_entity_icon (obj, NULL, en_pos, overlay_icon, ENTITY_SIDE_NEUTRAL, scale);

  0065d	51		 push	 ecx
  0065e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _scale$[ebp]
  00663	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00668	6a 00		 push	 0
  0066a	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  0066d	50		 push	 eax
  0066e	8b 4d f4	 mov	 ecx, DWORD PTR _en_pos$[ebp]
  00671	51		 push	 ecx
  00672	6a 00		 push	 0
  00674	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00677	52		 push	 edx
  00678	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3483 : }

  0067d	5f		 pop	 edi
  0067e	5e		 pop	 esi
  0067f	5b		 pop	 ebx
  00680	8b e5		 mov	 esp, ebp
  00682	5d		 pop	 ebp
  00683	c2 14 00	 ret	 20			; 00000014H
?map_draw_highlighted_group@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ENDP ; map_draw_highlighted_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z
_TEXT	SEGMENT
_dy$ = -92						; size = 4
_dx$ = -88						; size = 4
_my$ = -84						; size = 4
_mx$ = -80						; size = 4
_symax$ = -76						; size = 4
_symin$ = -72						; size = 4
_sxmax$ = -68						; size = 4
_sxmin$ = -64						; size = 4
_wzmax$ = -60						; size = 4
_wzmin$ = -56						; size = 4
_wxmax$ = -52						; size = 4
_wxmin$ = -48						; size = 4
_y2$ = -44						; size = 4
_y1$ = -40						; size = 4
_x2$ = -36						; size = 4
_x1$ = -32						; size = 4
_height$ = -28						; size = 4
_width$ = -24						; size = 4
_icon_graphic$ = -20					; size = 4
_screen_pos$ = -16					; size = 12
_colour$ = -4						; size = 4
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
_icon$ = 16						; size = 4
_side$ = 20						; size = 4
_scale$ = 24						; size = 4
_distance$ = 28						; size = 4
?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z PROC ; map_draw_icon, COMDAT

; 3172 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3173 : 	real_colour
; 3174 : 		colour;
; 3175 : 
; 3176 : 	vec3d
; 3177 : 		screen_pos;
; 3178 : 
; 3179 : 	texture_graphic
; 3180 : 		*icon_graphic;
; 3181 : 
; 3182 : 	int
; 3183 : 		width,
; 3184 : 		height;
; 3185 : 
; 3186 : 	float
; 3187 : 		x1, x2,
; 3188 : 		y1, y2,
; 3189 : 		wxmin, wxmax,
; 3190 : 		wzmin, wzmax,
; 3191 : 		sxmin, sxmax,
; 3192 : 		symin, symax,
; 3193 : 		mx, my,
; 3194 : 		dx, dy;
; 3195 : 
; 3196 : 	get_2d_terrain_map_world_dimensions (&wxmin, &wzmin, &wxmax, &wzmax);

  0000c	8d 45 c4	 lea	 eax, DWORD PTR _wzmax$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d cc	 lea	 ecx, DWORD PTR _wxmax$[ebp]
  00013	51		 push	 ecx
  00014	8d 55 c8	 lea	 edx, DWORD PTR _wzmin$[ebp]
  00017	52		 push	 edx
  00018	8d 45 d0	 lea	 eax, DWORD PTR _wxmin$[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 3197 : 
; 3198 : 	if (distance)

  00021	83 7d 1c 00	 cmp	 DWORD PTR _distance$[ebp], 0
  00025	74 0f		 je	 SHORT $LN2@map_draw_i

; 3199 : 	{
; 3200 : 		(*distance) = -1.0;

  00027	8b 45 1c	 mov	 eax, DWORD PTR _distance$[ebp]
  0002a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00032	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN2@map_draw_i:

; 3201 : 	}
; 3202 : 
; 3203 : 	// N.B. wzmin is > wzmax !!
; 3204 : 	if ((pos->x < wxmin) || (pos->x > wxmax) || (pos->z > wzmin) || (pos->z < wzmax))

  00036	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00039	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wxmin$[ebp]
  0003e	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00041	77 29		 ja	 SHORT $LN4@map_draw_i
  00043	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00046	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004a	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _wxmax$[ebp]
  0004e	77 1c		 ja	 SHORT $LN4@map_draw_i
  00050	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00053	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00058	0f 2f 45 c8	 comiss	 xmm0, DWORD PTR _wzmin$[ebp]
  0005c	77 0e		 ja	 SHORT $LN4@map_draw_i
  0005e	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00061	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _wzmax$[ebp]
  00066	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0006a	76 05		 jbe	 SHORT $LN3@map_draw_i
$LN4@map_draw_i:

; 3205 : 	{
; 3206 : 		return;

  0006c	e9 0a 02 00 00	 jmp	 $LN1@map_draw_i
$LN3@map_draw_i:

; 3207 : 	}
; 3208 : 
; 3209 : 	get_2d_terrain_map_screen_dimensions (&sxmin, &symin, &sxmax, &symax);

  00071	8d 45 b4	 lea	 eax, DWORD PTR _symax$[ebp]
  00074	50		 push	 eax
  00075	8d 4d bc	 lea	 ecx, DWORD PTR _sxmax$[ebp]
  00078	51		 push	 ecx
  00079	8d 55 b8	 lea	 edx, DWORD PTR _symin$[ebp]
  0007c	52		 push	 edx
  0007d	8d 45 c0	 lea	 eax, DWORD PTR _sxmin$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?get_2d_terrain_map_screen_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_screen_dimensions

; 3210 : 
; 3211 : 	map_get_screen_coords_from_world (obj, pos, &screen_pos);

  00086	8d 45 f0	 lea	 eax, DWORD PTR _screen_pos$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  0008d	51		 push	 ecx
  0008e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00091	52		 push	 edx
  00092	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3212 : 
; 3213 : 	//
; 3214 : 	// Always have to render to the video screen
; 3215 : 	//
; 3216 : 
; 3217 : 	ASSERT ( active_screen == video_screen );

  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  0009c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000a2	74 18		 je	 SHORT $LN5@map_draw_i
  000a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA
  000a9	83 c0 2d	 add	 eax, 45			; 0000002dH
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b2	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KHBEEGFH@active_screen?5?$DN?$DN?5video_screen@
  000b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_draw_i:

; 3218 : 
; 3219 : 	icon_graphic = map_icons [side][icon];

  000bc	69 45 14 90 00
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 144
  000c3	8b 4d 10	 mov	 ecx, DWORD PTR _icon$[ebp]
  000c6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?map_icons@@3PAY0CE@PAUTEXTURE_GRAPHIC@@A[eax+ecx*4]
  000cd	89 55 ec	 mov	 DWORD PTR _icon_graphic$[ebp], edx

; 3220 : 
; 3221 : 	ASSERT (icon_graphic);

  000d0	83 7d ec 00	 cmp	 DWORD PTR _icon_graphic$[ebp], 0
  000d4	75 18		 jne	 SHORT $LN6@map_draw_i
  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA
  000db	83 c0 31	 add	 eax, 49			; 00000031H
  000de	50		 push	 eax
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OLCPEMBO@icon_graphic@
  000e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_draw_i:

; 3222 : 
; 3223 : 	get_texture_graphic_source_dimensions (icon_graphic, &width, &height);

  000ee	8d 45 e4	 lea	 eax, DWORD PTR _height$[ebp]
  000f1	50		 push	 eax
  000f2	8d 4d e8	 lea	 ecx, DWORD PTR _width$[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 ec	 mov	 edx, DWORD PTR _icon_graphic$[ebp]
  000f9	52		 push	 edx
  000fa	e8 00 00 00 00	 call	 ?get_texture_graphic_source_dimensions@@YGXPAUTEXTURE_GRAPHIC@@PAH1@Z ; get_texture_graphic_source_dimensions

; 3224 : 
; 3225 : 	ASSERT (scale > 0.0);

  000ff	f3 0f 5a 45 18	 cvtss2sd xmm0, DWORD PTR _scale$[ebp]
  00104	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0010c	77 18		 ja	 SHORT $LN7@map_draw_i
  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z@4JA
  00113	83 c0 35	 add	 eax, 53			; 00000035H
  00116	50		 push	 eax
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CPADPMHB@scale?5?$DO?50?40@
  00121	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_i:

; 3226 : 
; 3227 : 	scale *= 0.5;			// get radius from diametre

  00126	f3 0f 5a 45 18	 cvtss2sd xmm0, DWORD PTR _scale$[ebp]
  0012b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00133	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00137	f3 0f 11 45 18	 movss	 DWORD PTR _scale$[ebp], xmm0

; 3228 : 
; 3229 : 	x1 = screen_pos.x - ((float)width * scale);

  0013c	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _width$[ebp]
  00141	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00146	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _screen_pos$[ebp]
  0014b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0014f	f3 0f 11 4d e0	 movss	 DWORD PTR _x1$[ebp], xmm1

; 3230 : 	y1 = screen_pos.z - ((float)height * scale);

  00154	f3 0f 2a 45 e4	 cvtsi2ss xmm0, DWORD PTR _height$[ebp]
  00159	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  0015e	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _screen_pos$[ebp+8]
  00163	f3 0f 5c c8	 subss	 xmm1, xmm0
  00167	f3 0f 11 4d d8	 movss	 DWORD PTR _y1$[ebp], xmm1

; 3231 : 
; 3232 : 	x2 = screen_pos.x + ((float)width * scale);

  0016c	f3 0f 2a 45 e8	 cvtsi2ss xmm0, DWORD PTR _width$[ebp]
  00171	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00176	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _screen_pos$[ebp]
  0017b	f3 0f 11 45 dc	 movss	 DWORD PTR _x2$[ebp], xmm0

; 3233 : 	y2 = screen_pos.z + ((float)height * scale);

  00180	f3 0f 2a 45 e4	 cvtsi2ss xmm0, DWORD PTR _height$[ebp]
  00185	f3 0f 59 45 18	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  0018a	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _screen_pos$[ebp+8]
  0018f	f3 0f 11 45 d4	 movss	 DWORD PTR _y2$[ebp], xmm0

; 3234 : 
; 3235 : 	colour.red = 255;

  00194	c6 45 fe ff	 mov	 BYTE PTR _colour$[ebp+2], 255 ; 000000ffH

; 3236 : 	colour.green = 255;

  00198	c6 45 fd ff	 mov	 BYTE PTR _colour$[ebp+1], 255 ; 000000ffH

; 3237 : 	colour.blue = 255;

  0019c	c6 45 fc ff	 mov	 BYTE PTR _colour$[ebp], 255 ; 000000ffH

; 3238 : 	colour.alpha = 255;

  001a0	c6 45 ff ff	 mov	 BYTE PTR _colour$[ebp+3], 255 ; 000000ffH

; 3239 : 
; 3240 : 	ui_draw_texture_graphic (x1, y1, x2, y2, icon_graphic, colour);

  001a4	8b 45 fc	 mov	 eax, DWORD PTR _colour$[ebp]
  001a7	50		 push	 eax
  001a8	8b 4d ec	 mov	 ecx, DWORD PTR _icon_graphic$[ebp]
  001ab	51		 push	 ecx
  001ac	51		 push	 ecx
  001ad	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b7	51		 push	 ecx
  001b8	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c2	51		 push	 ecx
  001c3	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cd	51		 push	 ecx
  001ce	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d8	e8 00 00 00 00	 call	 ?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z ; ui_draw_texture_graphic

; 3241 : 
; 3242 : 	if (distance)

  001dd	83 7d 1c 00	 cmp	 DWORD PTR _distance$[ebp], 0
  001e1	0f 84 94 00 00
	00		 je	 $LN10@map_draw_i

; 3243 : 	{
; 3244 : 		if (obj == get_current_highlighted_object ())

  001e7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001ea	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?highlighted_object@@3PAUUI_OBJECT@@A ; highlighted_object
  001f0	0f 85 85 00 00
	00		 jne	 $LN10@map_draw_i

; 3245 : 		{
; 3246 : 			mx = get_mouse_x ();

  001f6	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  001fb	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001ff	f3 0f 11 45 b0	 movss	 DWORD PTR _mx$[ebp], xmm0

; 3247 : 			my = get_mouse_y ();

  00204	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  00209	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0020d	f3 0f 11 45 ac	 movss	 DWORD PTR _my$[ebp], xmm0

; 3248 : 
; 3249 : 			if ((mx > x1) && (mx < x2) && (my > y1) && (my < y2))

  00212	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _mx$[ebp]
  00217	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _x1$[ebp]
  0021b	76 5e		 jbe	 SHORT $LN10@map_draw_i
  0021d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00222	0f 2f 45 b0	 comiss	 xmm0, DWORD PTR _mx$[ebp]
  00226	76 53		 jbe	 SHORT $LN10@map_draw_i
  00228	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _my$[ebp]
  0022d	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _y1$[ebp]
  00231	76 48		 jbe	 SHORT $LN10@map_draw_i
  00233	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00238	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _my$[ebp]
  0023c	76 3d		 jbe	 SHORT $LN10@map_draw_i

; 3250 : 			{
; 3251 : 				dx = mx - screen_pos.x;

  0023e	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _mx$[ebp]
  00243	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _screen_pos$[ebp]
  00248	f3 0f 11 45 a8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 3252 : 				dy = my - screen_pos.z;

  0024d	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _my$[ebp]
  00252	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _screen_pos$[ebp+8]
  00257	f3 0f 11 45 a4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 3253 : 
; 3254 : 				(*distance) = ((dx * dx) + (dy * dy));

  0025c	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00261	f3 0f 59 45 a8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  00266	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR _dy$[ebp]
  0026b	f3 0f 59 4d a4	 mulss	 xmm1, DWORD PTR _dy$[ebp]
  00270	f3 0f 58 c1	 addss	 xmm0, xmm1
  00274	8b 45 1c	 mov	 eax, DWORD PTR _distance$[ebp]
  00277	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN10@map_draw_i:
$LN1@map_draw_i:

; 3255 : 			}
; 3256 : 		}
; 3257 : 	}
; 3258 : }

  0027b	5f		 pop	 edi
  0027c	5e		 pop	 esi
  0027d	5b		 pop	 ebx
  0027e	8b e5		 mov	 esp, ebp
  00280	5d		 pop	 ebp
  00281	c2 18 00	 ret	 24			; 00000018H
?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z ENDP ; map_draw_icon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z
_TEXT	SEGMENT
_s$ = -16						; size = 2
_screen_pos$ = -12					; size = 12
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
_tag$ = 16						; size = 1
_font$ = 20						; size = 4
_col$ = 24						; size = 4
?map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z PROC ; map_draw_symbol, COMDAT

; 3108 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3109 : 
; 3110 : 	vec3d
; 3111 : 		screen_pos;
; 3112 : 
; 3113 : 	char
; 3114 : 		s [2];
; 3115 : 
; 3116 : 	ASSERT (pos);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_s:

; 3117 : 
; 3118 : 	map_get_screen_coords_from_world (obj, pos, &screen_pos);

  00027	8d 45 f4	 lea	 eax, DWORD PTR _screen_pos$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  0002e	51		 push	 ecx
  0002f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3119 : 
; 3120 : 	set_ui_font_type (font);

  00038	8b 45 14	 mov	 eax, DWORD PTR _font$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 3121 : 
; 3122 : 	set_ui_font_colour (*col);

  00041	8b 45 18	 mov	 eax, DWORD PTR _col$[ebp]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	51		 push	 ecx
  00047	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 3123 : 
; 3124 : 	s [0] = tag;

  0004c	b8 01 00 00 00	 mov	 eax, 1
  00051	6b c8 00	 imul	 ecx, eax, 0
  00054	8a 55 10	 mov	 dl, BYTE PTR _tag$[ebp]
  00057	88 54 0d f0	 mov	 BYTE PTR _s$[ebp+ecx], dl

; 3125 : 	s [1] = 0;

  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	c1 e0 00	 shl	 eax, 0
  00063	c6 44 05 f0 00	 mov	 BYTE PTR _s$[ebp+eax], 0

; 3126 : 
; 3127 : 	ui_display_text (s, screen_pos.x, screen_pos.z);

  00068	51		 push	 ecx
  00069	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _screen_pos$[ebp+8]
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	51		 push	 ecx
  00074	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _screen_pos$[ebp]
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	8d 45 f0	 lea	 eax, DWORD PTR _s$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00087	dd d8		 fstp	 ST(0)

; 3128 : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 14 00	 ret	 20			; 00000014H
?map_draw_symbol@@YGXPAUUI_OBJECT@@PAUVEC3D@@EW4FONT_TYPES@@PAUREAL_COLOUR@@@Z ENDP ; map_draw_symbol
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z
_TEXT	SEGMENT
tv300 = -116						; size = 4
tv273 = -116						; size = 4
tv238 = -116						; size = 4
tv209 = -116						; size = 4
tv189 = -116						; size = 4
tv169 = -116						; size = 4
tv143 = -116						; size = 4
tv78 = -116						; size = 4
tv292 = -112						; size = 4
tv265 = -112						; size = 4
tv258 = -112						; size = 4
tv231 = -112						; size = 4
tv201 = -112						; size = 4
tv181 = -112						; size = 4
tv161 = -112						; size = 4
tv135 = -112						; size = 4
tv84 = -112						; size = 4
tv70 = -112						; size = 4
_col$ = -44						; size = 4
_icon$ = -40						; size = 4
_map_dimensions$ = -36					; size = 4
_id$ = -32						; size = 5
_name$ = -24						; size = 4
_pilot_side$ = -20					; size = 4
_side$ = -16						; size = 4
_sub_type$ = -12					; size = 4
_pos$ = -8						; size = 4
_pilot_force$ = -4					; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_overlay_icon$ = 16					; size = 4
?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z PROC ; map_draw_keysite, COMDAT

; 2729 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2730 : 	entity
; 2731 : 		*pilot_force;
; 2732 : 
; 2733 : 	vec3d
; 2734 : 		*pos;
; 2735 : 
; 2736 : 	entity_sub_types
; 2737 : 		sub_type;
; 2738 : 
; 2739 : 	entity_sides
; 2740 : 		side,
; 2741 : 		pilot_side;
; 2742 : 
; 2743 : 	const char
; 2744 : 		*name;
; 2745 : 	char
; 2746 : 		id [5];
; 2747 : 
; 2748 : 	map_dimension_type
; 2749 : 		*map_dimensions;
; 2750 : 
; 2751 : 	map_icon_type
; 2752 : 		icon;
; 2753 : 
; 2754 : 	rgb_colour
; 2755 : 		col;
; 2756 : 
; 2757 : 	col = ui_colour_white;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white
  0000e	89 45 d4	 mov	 DWORD PTR _col$[ebp], eax

; 2758 : 
; 2759 : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  00011	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	74 0a		 je	 SHORT $LN16@map_draw_k
  00017	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d 90	 mov	 DWORD PTR tv70[ebp], ecx
  0001f	eb 21		 jmp	 SHORT $LN17@map_draw_k
$LN16@map_draw_k:
  00021	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  00027	83 c2 1e	 add	 edx, 30			; 0000001eH
  0002a	52		 push	 edx
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003b	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN17@map_draw_k:
  00042	b9 01 00 00 00	 mov	 ecx, 1
  00047	85 c9		 test	 ecx, ecx
  00049	74 09		 je	 SHORT $LN18@map_draw_k
  0004b	c7 45 8c bb 00
	00 00		 mov	 DWORD PTR tv78[ebp], 187 ; 000000bbH
  00052	eb 21		 jmp	 SHORT $LN19@map_draw_k
$LN18@map_draw_k:
  00054	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  0005a	83 c2 1e	 add	 edx, 30			; 0000001eH
  0005d	52		 push	 edx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006e	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN19@map_draw_k:
  00075	68 bb 00 00 00	 push	 187			; 000000bbH
  0007a	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0007d	51		 push	 ecx
  0007e	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 1116
  00085	8b 45 8c	 mov	 eax, DWORD PTR tv78[ebp]
  00088	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0008f	ff d1		 call	 ecx
  00091	89 45 f0	 mov	 DWORD PTR _side$[ebp], eax

; 2760 : 
; 2761 : 	switch (side)

  00094	8b 45 f0	 mov	 eax, DWORD PTR _side$[ebp]
  00097	89 45 90	 mov	 DWORD PTR tv84[ebp], eax
  0009a	83 7d 90 01	 cmp	 DWORD PTR tv84[ebp], 1
  0009e	74 08		 je	 SHORT $LN6@map_draw_k
  000a0	83 7d 90 02	 cmp	 DWORD PTR tv84[ebp], 2
  000a4	74 0c		 je	 SHORT $LN7@map_draw_k
  000a6	eb 12		 jmp	 SHORT $LN2@map_draw_k
$LN6@map_draw_k:

; 2762 : 	{
; 2763 : 		case ENTITY_SIDE_BLUE_FORCE:
; 2764 : 		{
; 2765 : 			col = ext_col_blue_force;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_blue_force@@3UREAL_COLOUR@@A ; ext_col_blue_force
  000ad	89 45 d4	 mov	 DWORD PTR _col$[ebp], eax

; 2766 : 
; 2767 : 			break;

  000b0	eb 08		 jmp	 SHORT $LN2@map_draw_k
$LN7@map_draw_k:

; 2768 : 		}
; 2769 : 		case ENTITY_SIDE_RED_FORCE:
; 2770 : 		{
; 2771 : 			col = ext_col_red_force;

  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ext_col_red_force@@3UREAL_COLOUR@@A ; ext_col_red_force
  000b7	89 45 d4	 mov	 DWORD PTR _col$[ebp], eax
$LN2@map_draw_k:

; 2772 : 
; 2773 : 			break;
; 2774 : 		}
; 2775 : 	}
; 2776 : 
; 2777 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  000ba	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  000ca	ff d0		 call	 eax
  000cc	89 45 dc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2778 : 
; 2779 : 	ASSERT (map_dimensions);

  000cf	83 7d dc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  000d3	75 18		 jne	 SHORT $LN8@map_draw_k
  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  000da	83 c0 32	 add	 eax, 50			; 00000032H
  000dd	50		 push	 eax
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  000e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_draw_k:

; 2780 : 
; 2781 : 	pilot_side = (entity_sides) get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  000ed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  000f4	74 0c		 je	 SHORT $LN20@map_draw_k
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	89 4d 90	 mov	 DWORD PTR tv135[ebp], ecx
  00100	eb 21		 jmp	 SHORT $LN21@map_draw_k
$LN20@map_draw_k:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  00108	83 c2 34	 add	 edx, 52			; 00000034H
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN21@map_draw_k:
  00123	b9 01 00 00 00	 mov	 ecx, 1
  00128	85 c9		 test	 ecx, ecx
  0012a	74 09		 je	 SHORT $LN22@map_draw_k
  0012c	c7 45 8c bb 00
	00 00		 mov	 DWORD PTR tv143[ebp], 187 ; 000000bbH
  00133	eb 21		 jmp	 SHORT $LN23@map_draw_k
$LN22@map_draw_k:
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  0013b	83 c2 34	 add	 edx, 52			; 00000034H
  0013e	52		 push	 edx
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014f	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN23@map_draw_k:
  00156	68 bb 00 00 00	 push	 187			; 000000bbH
  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00161	51		 push	 ecx
  00162	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 1116
  00169	8b 45 8c	 mov	 eax, DWORD PTR tv143[ebp]
  0016c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00173	ff d1		 call	 ecx
  00175	89 45 ec	 mov	 DWORD PTR _pilot_side$[ebp], eax

; 2782 : 
; 2783 : 	pilot_force = get_local_force_entity (pilot_side);

  00178	8b 45 ec	 mov	 eax, DWORD PTR _pilot_side$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00181	89 45 fc	 mov	 DWORD PTR _pilot_force$[ebp], eax

; 2784 : 
; 2785 : 	if (check_visible_entity (obj, en))

  00184	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00187	50		 push	 eax
  00188	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0018b	51		 push	 ecx
  0018c	e8 00 00 00 00	 call	 ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ; check_visible_entity
  00191	85 c0		 test	 eax, eax
  00193	0f 84 f4 03 00
	00		 je	 $LN4@map_draw_k

; 2786 : 	{
; 2787 : 		sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00199	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0019d	74 0a		 je	 SHORT $LN24@map_draw_k
  0019f	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	89 4d 90	 mov	 DWORD PTR tv161[ebp], ecx
  001a7	eb 21		 jmp	 SHORT $LN25@map_draw_k
$LN24@map_draw_k:
  001a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  001af	83 c2 3a	 add	 edx, 58			; 0000003aH
  001b2	52		 push	 edx
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN25@map_draw_k:
  001ca	b9 01 00 00 00	 mov	 ecx, 1
  001cf	85 c9		 test	 ecx, ecx
  001d1	74 09		 je	 SHORT $LN26@map_draw_k
  001d3	c7 45 8c 34 00
	00 00		 mov	 DWORD PTR tv169[ebp], 52 ; 00000034H
  001da	eb 21		 jmp	 SHORT $LN27@map_draw_k
$LN26@map_draw_k:
  001dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  001e2	83 c2 3a	 add	 edx, 58			; 0000003aH
  001e5	52		 push	 edx
  001e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f6	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN27@map_draw_k:
  001fd	6a 34		 push	 52			; 00000034H
  001ff	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00202	51		 push	 ecx
  00203	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv161[ebp], 1116
  0020a	8b 45 8c	 mov	 eax, DWORD PTR tv169[ebp]
  0020d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00214	ff d1		 call	 ecx
  00216	89 45 f4	 mov	 DWORD PTR _sub_type$[ebp], eax

; 2788 : 
; 2789 : 		pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00219	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0021d	74 0a		 je	 SHORT $LN28@map_draw_k
  0021f	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00222	8b 08		 mov	 ecx, DWORD PTR [eax]
  00224	89 4d 90	 mov	 DWORD PTR tv181[ebp], ecx
  00227	eb 21		 jmp	 SHORT $LN29@map_draw_k
$LN28@map_draw_k:
  00229	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  0022f	83 c2 3c	 add	 edx, 60			; 0000003cH
  00232	52		 push	 edx
  00233	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023d	50		 push	 eax
  0023e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00243	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN29@map_draw_k:
  0024a	b9 01 00 00 00	 mov	 ecx, 1
  0024f	85 c9		 test	 ecx, ecx
  00251	74 09		 je	 SHORT $LN30@map_draw_k
  00253	c7 45 8c 08 00
	00 00		 mov	 DWORD PTR tv189[ebp], 8
  0025a	eb 21		 jmp	 SHORT $LN31@map_draw_k
$LN30@map_draw_k:
  0025c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  00262	83 c2 3c	 add	 edx, 60			; 0000003cH
  00265	52		 push	 edx
  00266	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00276	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN31@map_draw_k:
  0027d	6a 08		 push	 8
  0027f	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00282	51		 push	 ecx
  00283	6b 55 90 60	 imul	 edx, DWORD PTR tv181[ebp], 96
  00287	8b 45 8c	 mov	 eax, DWORD PTR tv189[ebp]
  0028a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00291	ff d1		 call	 ecx
  00293	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 2790 : 
; 2791 : 		//
; 2792 : 		// Draw Icon
; 2793 : 		//
; 2794 : 
; 2795 : 		icon = (map_icon_type) get_local_entity_int_value (en, INT_TYPE_MAP_ICON);

  00296	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0029a	74 0a		 je	 SHORT $LN32@map_draw_k
  0029c	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0029f	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a1	89 4d 90	 mov	 DWORD PTR tv201[ebp], ecx
  002a4	eb 21		 jmp	 SHORT $LN33@map_draw_k
$LN32@map_draw_k:
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  002ac	83 c2 42	 add	 edx, 66			; 00000042H
  002af	52		 push	 edx
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c0	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv201[ebp], 0
$LN33@map_draw_k:
  002c7	b9 01 00 00 00	 mov	 ecx, 1
  002cc	85 c9		 test	 ecx, ecx
  002ce	74 09		 je	 SHORT $LN34@map_draw_k
  002d0	c7 45 8c 82 00
	00 00		 mov	 DWORD PTR tv209[ebp], 130 ; 00000082H
  002d7	eb 21		 jmp	 SHORT $LN35@map_draw_k
$LN34@map_draw_k:
  002d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  002df	83 c2 42	 add	 edx, 66			; 00000042H
  002e2	52		 push	 edx
  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ed	50		 push	 eax
  002ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f3	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv209[ebp], 0
$LN35@map_draw_k:
  002fa	68 82 00 00 00	 push	 130			; 00000082H
  002ff	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00302	51		 push	 ecx
  00303	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv201[ebp], 1116
  0030a	8b 45 8c	 mov	 eax, DWORD PTR tv209[ebp]
  0030d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00314	ff d1		 call	 ecx
  00316	89 45 d8	 mov	 DWORD PTR _icon$[ebp], eax

; 2796 : 
; 2797 : 		ASSERT (icon != MAP_ICON_NONE);

  00319	83 7d d8 00	 cmp	 DWORD PTR _icon$[ebp], 0
  0031d	75 18		 jne	 SHORT $LN10@map_draw_k
  0031f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  00324	83 c0 44	 add	 eax, 68			; 00000044H
  00327	50		 push	 eax
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00332	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@map_draw_k:

; 2798 : 
; 2799 : 		map_draw_entity_icon (obj, en, pos, icon, side, 1.0);

  00337	51		 push	 ecx
  00338	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00340	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00345	8b 45 f0	 mov	 eax, DWORD PTR _side$[ebp]
  00348	50		 push	 eax
  00349	8b 4d d8	 mov	 ecx, DWORD PTR _icon$[ebp]
  0034c	51		 push	 ecx
  0034d	8b 55 f8	 mov	 edx, DWORD PTR _pos$[ebp]
  00350	52		 push	 edx
  00351	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00354	50		 push	 eax
  00355	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00358	51		 push	 ecx
  00359	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 2800 : 
; 2801 : 		if (get_local_entity_parent (en, LIST_TYPE_CAMPAIGN_OBJECTIVE) == pilot_force)

  0035e	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00362	74 0a		 je	 SHORT $LN36@map_draw_k
  00364	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00367	8b 08		 mov	 ecx, DWORD PTR [eax]
  00369	89 4d 90	 mov	 DWORD PTR tv231[ebp], ecx
  0036c	eb 1d		 jmp	 SHORT $LN37@map_draw_k
$LN36@map_draw_k:
  0036e	68 f1 0a 00 00	 push	 2801			; 00000af1H
  00373	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00378	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0037e	52		 push	 edx
  0037f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00384	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv231[ebp], 0
$LN37@map_draw_k:
  0038b	b8 01 00 00 00	 mov	 eax, 1
  00390	85 c0		 test	 eax, eax
  00392	74 09		 je	 SHORT $LN38@map_draw_k
  00394	c7 45 8c 05 00
	00 00		 mov	 DWORD PTR tv238[ebp], 5
  0039b	eb 1d		 jmp	 SHORT $LN39@map_draw_k
$LN38@map_draw_k:
  0039d	68 f1 0a 00 00	 push	 2801			; 00000af1H
  003a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003ad	51		 push	 ecx
  003ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b3	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv238[ebp], 0
$LN39@map_draw_k:
  003ba	6a 05		 push	 5
  003bc	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  003bf	52		 push	 edx
  003c0	69 45 90 b4 00
	00 00		 imul	 eax, DWORD PTR tv231[ebp], 180
  003c7	8b 4d 8c	 mov	 ecx, DWORD PTR tv238[ebp]
  003ca	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  003d1	ff d2		 call	 edx
  003d3	3b 45 fc	 cmp	 eax, DWORD PTR _pilot_force$[ebp]
  003d6	75 23		 jne	 SHORT $LN11@map_draw_k

; 2802 : 		{
; 2803 : 			//
; 2804 : 			// Highlight as campaign objective
; 2805 : 			//
; 2806 : 
; 2807 : 			map_draw_entity_icon (obj, en, pos, MAP_ICON_CAMPAIGN_OBJECTIVE, ENTITY_SIDE_NEUTRAL, 1.0);

  003d8	51		 push	 ecx
  003d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e6	6a 00		 push	 0
  003e8	6a 06		 push	 6
  003ea	8b 45 f8	 mov	 eax, DWORD PTR _pos$[ebp]
  003ed	50		 push	 eax
  003ee	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  003f1	51		 push	 ecx
  003f2	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003f5	52		 push	 edx
  003f6	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN11@map_draw_k:

; 2808 : 		}
; 2809 : 
; 2810 : 		//
; 2811 : 		// Draw Overlay Icon
; 2812 : 		//
; 2813 : 
; 2814 : 		if (overlay_icon != MAP_ICON_NONE)

  003fb	83 7d 10 00	 cmp	 DWORD PTR _overlay_icon$[ebp], 0
  003ff	74 23		 je	 SHORT $LN12@map_draw_k

; 2815 : 		{
; 2816 : 			map_draw_entity_icon (obj, NULL, pos, overlay_icon, ENTITY_SIDE_NEUTRAL, 1.0);

  00401	51		 push	 ecx
  00402	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0040a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040f	6a 00		 push	 0
  00411	8b 45 10	 mov	 eax, DWORD PTR _overlay_icon$[ebp]
  00414	50		 push	 eax
  00415	8b 4d f8	 mov	 ecx, DWORD PTR _pos$[ebp]
  00418	51		 push	 ecx
  00419	6a 00		 push	 0
  0041b	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0041e	52		 push	 edx
  0041f	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN12@map_draw_k:

; 2817 : 		}
; 2818 : 
; 2819 : 		switch (sub_type)

  00424	8b 45 f4	 mov	 eax, DWORD PTR _sub_type$[ebp]
  00427	89 45 90	 mov	 DWORD PTR tv258[ebp], eax
  0042a	83 7d 90 00	 cmp	 DWORD PTR tv258[ebp], 0
  0042e	0f 8c 59 01 00
	00		 jl	 $LN4@map_draw_k
  00434	83 7d 90 01	 cmp	 DWORD PTR tv258[ebp], 1
  00438	7e 0f		 jle	 SHORT $LN13@map_draw_k
  0043a	83 7d 90 03	 cmp	 DWORD PTR tv258[ebp], 3
  0043e	0f 84 a0 00 00
	00		 je	 $LN14@map_draw_k
  00444	e9 44 01 00 00	 jmp	 $LN4@map_draw_k
$LN13@map_draw_k:

; 2820 : 		{
; 2821 : 			case ENTITY_SUB_TYPE_KEYSITE_AIRBASE:
; 2822 : 			case ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE:
; 2823 : 			{
; 2824 : 				//
; 2825 : 				// Print Name
; 2826 : 				//
; 2827 : 
; 2828 : 				name = get_local_entity_string (en, STRING_TYPE_KEYSITE_NAME);

  00449	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0044d	74 0a		 je	 SHORT $LN40@map_draw_k
  0044f	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00452	8b 08		 mov	 ecx, DWORD PTR [eax]
  00454	89 4d 90	 mov	 DWORD PTR tv265[ebp], ecx
  00457	eb 21		 jmp	 SHORT $LN41@map_draw_k
$LN40@map_draw_k:
  00459	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  0045f	83 c2 63	 add	 edx, 99			; 00000063H
  00462	52		 push	 edx
  00463	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00468	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0046d	50		 push	 eax
  0046e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00473	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv265[ebp], 0
$LN41@map_draw_k:
  0047a	b9 01 00 00 00	 mov	 ecx, 1
  0047f	85 c9		 test	 ecx, ecx
  00481	74 09		 je	 SHORT $LN42@map_draw_k
  00483	c7 45 8c 07 00
	00 00		 mov	 DWORD PTR tv273[ebp], 7
  0048a	eb 21		 jmp	 SHORT $LN43@map_draw_k
$LN42@map_draw_k:
  0048c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  00492	83 c2 63	 add	 edx, 99			; 00000063H
  00495	52		 push	 edx
  00496	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  004a0	50		 push	 eax
  004a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a6	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv273[ebp], 0
$LN43@map_draw_k:
  004ad	6a 07		 push	 7
  004af	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  004b2	51		 push	 ecx
  004b3	6b 55 90 34	 imul	 edx, DWORD PTR tv265[ebp], 52
  004b7	8b 45 8c	 mov	 eax, DWORD PTR tv273[ebp]
  004ba	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  004c1	ff d1		 call	 ecx
  004c3	89 45 e8	 mov	 DWORD PTR _name$[ebp], eax

; 2829 : 
; 2830 : 				map_draw_string (obj, pos, name, UI_FONT_ARIAL_16, &col, FALSE);

  004c6	6a 00		 push	 0
  004c8	8d 45 d4	 lea	 eax, DWORD PTR _col$[ebp]
  004cb	50		 push	 eax
  004cc	6a 03		 push	 3
  004ce	8b 4d e8	 mov	 ecx, DWORD PTR _name$[ebp]
  004d1	51		 push	 ecx
  004d2	8b 55 f8	 mov	 edx, DWORD PTR _pos$[ebp]
  004d5	52		 push	 edx
  004d6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  004d9	50		 push	 eax
  004da	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string

; 2831 : 
; 2832 : 				break;

  004df	e9 a9 00 00 00	 jmp	 $LN4@map_draw_k
$LN14@map_draw_k:

; 2833 : 			}
; 2834 : 			case ENTITY_SUB_TYPE_KEYSITE_FARP:
; 2835 : 			{
; 2836 : 				sprintf (id, "%d", get_local_entity_int_value (en, INT_TYPE_KEYSITE_ID));

  004e4	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  004e8	74 0a		 je	 SHORT $LN44@map_draw_k
  004ea	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  004ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ef	89 4d 90	 mov	 DWORD PTR tv292[ebp], ecx
  004f2	eb 21		 jmp	 SHORT $LN45@map_draw_k
$LN44@map_draw_k:
  004f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  004fa	83 c2 6b	 add	 edx, 107		; 0000006bH
  004fd	52		 push	 edx
  004fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00503	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00508	50		 push	 eax
  00509	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0050e	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv292[ebp], 0
$LN45@map_draw_k:
  00515	b9 01 00 00 00	 mov	 ecx, 1
  0051a	85 c9		 test	 ecx, ecx
  0051c	74 09		 je	 SHORT $LN46@map_draw_k
  0051e	c7 45 8c 6f 00
	00 00		 mov	 DWORD PTR tv300[ebp], 111 ; 0000006fH
  00525	eb 21		 jmp	 SHORT $LN47@map_draw_k
$LN46@map_draw_k:
  00527	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z@4JA
  0052d	83 c2 6b	 add	 edx, 107		; 0000006bH
  00530	52		 push	 edx
  00531	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00536	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0053b	50		 push	 eax
  0053c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00541	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv300[ebp], 0
$LN47@map_draw_k:
  00548	6a 6f		 push	 111			; 0000006fH
  0054a	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0054d	51		 push	 ecx
  0054e	69 55 90 5c 04
	00 00		 imul	 edx, DWORD PTR tv292[ebp], 1116
  00555	8b 45 8c	 mov	 eax, DWORD PTR tv300[ebp]
  00558	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0055f	ff d1		 call	 ecx
  00561	50		 push	 eax
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00567	8d 55 e0	 lea	 edx, DWORD PTR _id$[ebp]
  0056a	52		 push	 edx
  0056b	e8 00 00 00 00	 call	 _sprintf
  00570	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2837 : 
; 2838 : 				map_draw_string (obj, pos, id, UI_FONT_UNSCALABLE_10, &ui_colour_white, TRUE);

  00573	6a 01		 push	 1
  00575	68 00 00 00 00	 push	 OFFSET ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white
  0057a	6a 0d		 push	 13			; 0000000dH
  0057c	8d 45 e0	 lea	 eax, DWORD PTR _id$[ebp]
  0057f	50		 push	 eax
  00580	8b 4d f8	 mov	 ecx, DWORD PTR _pos$[ebp]
  00583	51		 push	 ecx
  00584	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00587	52		 push	 edx
  00588	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN4@map_draw_k:

; 2839 : 
; 2840 : 				break;
; 2841 : 			}
; 2842 : 		}
; 2843 : 	}
; 2844 : }

  0058d	5f		 pop	 edi
  0058e	5e		 pop	 esi
  0058f	5b		 pop	 ebx
  00590	8b e5		 mov	 esp, ebp
  00592	5d		 pop	 ebp
  00593	c2 0c 00	 ret	 12			; 0000000cH
?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z ENDP ; map_draw_keysite
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv152 = -116						; size = 4
tv378 = -112						; size = 4
tv343 = -112						; size = 4
tv322 = -112						; size = 4
tv298 = -112						; size = 4
tv272 = -112						; size = 4
tv251 = -112						; size = 4
tv226 = -112						; size = 4
tv168 = -112						; size = 4
tv145 = -112						; size = 4
tv93 = -112						; size = 4
tv370 = -108						; size = 4
tv335 = -108						; size = 4
tv314 = -108						; size = 4
tv290 = -108						; size = 4
tv264 = -108						; size = 4
tv243 = -108						; size = 4
tv218 = -108						; size = 4
tv205 = -108						; size = 4
tv160 = -108						; size = 4
tv137 = -108						; size = 4
tv85 = -108						; size = 4
_is_friendly$ = -40					; size = 4
_map_dimensions$ = -36					; size = 4
_current_page_group$ = -32				; size = 4
_player_group$ = -28					; size = 4
_member$ = -24						; size = 4
_side$ = -20						; size = 4
_name$ = -16						; size = 4
_icon$ = -12						; size = 4
_group_type$ = -8					; size = 4
_pos$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z PROC	; map_draw_group, COMDAT

; 2506 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2507 : 	vec3d
; 2508 : 		*pos;
; 2509 : 
; 2510 : 	entity_sub_types
; 2511 : 		group_type;
; 2512 : 
; 2513 : 	map_icon_type
; 2514 : 		icon;
; 2515 : 
; 2516 : 	const char
; 2517 : 		*name;
; 2518 : 
; 2519 : 	entity_sides
; 2520 : 		side;
; 2521 : 
; 2522 : 	entity
; 2523 : 		*member,
; 2524 : 		*player_group,
; 2525 : 		*current_page_group;
; 2526 : 
; 2527 : 	map_dimension_type
; 2528 : 		*map_dimensions;
; 2529 : 
; 2530 : 	int
; 2531 : 		is_friendly;
; 2532 : 
; 2533 : 	ASSERT (en);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@map_draw_g
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00014	83 c0 1b	 add	 eax, 27			; 0000001bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_g:

; 2534 : 
; 2535 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 dc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2536 : 
; 2537 : 	ASSERT (map_dimensions);

  0003c	83 7d dc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00040	75 18		 jne	 SHORT $LN5@map_draw_g
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00047	83 c0 1f	 add	 eax, 31			; 0000001fH
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00055	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_draw_g:

; 2538 : 
; 2539 : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  0005a	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005e	74 0a		 je	 SHORT $LN20@map_draw_g
  00060	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	89 4d 94	 mov	 DWORD PTR tv85[ebp], ecx
  00068	eb 21		 jmp	 SHORT $LN21@map_draw_g
$LN20@map_draw_g:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00070	83 c2 21	 add	 edx, 33			; 00000021H
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN21@map_draw_g:
  0008b	b9 01 00 00 00	 mov	 ecx, 1
  00090	85 c9		 test	 ecx, ecx
  00092	74 09		 je	 SHORT $LN22@map_draw_g
  00094	c7 45 90 bb 00
	00 00		 mov	 DWORD PTR tv93[ebp], 187 ; 000000bbH
  0009b	eb 21		 jmp	 SHORT $LN23@map_draw_g
$LN22@map_draw_g:
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  000a3	83 c2 21	 add	 edx, 33			; 00000021H
  000a6	52		 push	 edx
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b7	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN23@map_draw_g:
  000be	68 bb 00 00 00	 push	 187			; 000000bbH
  000c3	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  000c6	51		 push	 ecx
  000c7	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv85[ebp], 1116
  000ce	8b 45 90	 mov	 eax, DWORD PTR tv93[ebp]
  000d1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000d8	ff d1		 call	 ecx
  000da	89 45 ec	 mov	 DWORD PTR _side$[ebp], eax

; 2540 : 	is_friendly = side == get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  000dd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  000e4	74 0c		 je	 SHORT $LN24@map_draw_g
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ed	89 4d 94	 mov	 DWORD PTR tv137[ebp], ecx
  000f0	eb 21		 jmp	 SHORT $LN25@map_draw_g
$LN24@map_draw_g:
  000f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  000f8	83 c2 22	 add	 edx, 34			; 00000022H
  000fb	52		 push	 edx
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010c	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN25@map_draw_g:
  00113	b9 01 00 00 00	 mov	 ecx, 1
  00118	85 c9		 test	 ecx, ecx
  0011a	74 09		 je	 SHORT $LN26@map_draw_g
  0011c	c7 45 90 bb 00
	00 00		 mov	 DWORD PTR tv145[ebp], 187 ; 000000bbH
  00123	eb 21		 jmp	 SHORT $LN27@map_draw_g
$LN26@map_draw_g:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0012b	83 c2 22	 add	 edx, 34			; 00000022H
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN27@map_draw_g:
  00146	68 bb 00 00 00	 push	 187			; 000000bbH
  0014b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00151	51		 push	 ecx
  00152	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 1116
  00159	8b 45 90	 mov	 eax, DWORD PTR tv145[ebp]
  0015c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00163	ff d1		 call	 ecx
  00165	39 45 ec	 cmp	 DWORD PTR _side$[ebp], eax
  00168	75 09		 jne	 SHORT $LN28@map_draw_g
  0016a	c7 45 8c 01 00
	00 00		 mov	 DWORD PTR tv152[ebp], 1
  00171	eb 07		 jmp	 SHORT $LN29@map_draw_g
$LN28@map_draw_g:
  00173	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN29@map_draw_g:
  0017a	8b 55 8c	 mov	 edx, DWORD PTR tv152[ebp]
  0017d	89 55 d8	 mov	 DWORD PTR _is_friendly$[ebp], edx

; 2541 : 
; 2542 : 	if (get_gunship_entity ())

  00180	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00187	0f 84 8a 00 00
	00		 je	 $LN6@map_draw_g

; 2543 : 	{
; 2544 : 		player_group = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_MEMBER);

  0018d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00194	74 0c		 je	 SHORT $LN30@map_draw_g
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0019b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019d	89 4d 94	 mov	 DWORD PTR tv160[ebp], ecx
  001a0	eb 21		 jmp	 SHORT $LN31@map_draw_g
$LN30@map_draw_g:
  001a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  001a8	83 c2 26	 add	 edx, 38			; 00000026H
  001ab	52		 push	 edx
  001ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001bc	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN31@map_draw_g:
  001c3	b9 01 00 00 00	 mov	 ecx, 1
  001c8	85 c9		 test	 ecx, ecx
  001ca	74 09		 je	 SHORT $LN32@map_draw_g
  001cc	c7 45 90 19 00
	00 00		 mov	 DWORD PTR tv168[ebp], 25 ; 00000019H
  001d3	eb 21		 jmp	 SHORT $LN33@map_draw_g
$LN32@map_draw_g:
  001d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  001db	83 c2 26	 add	 edx, 38			; 00000026H
  001de	52		 push	 edx
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ef	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN33@map_draw_g:
  001f6	6a 19		 push	 25			; 00000019H
  001f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001fe	51		 push	 ecx
  001ff	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv160[ebp], 180
  00206	8b 45 90	 mov	 eax, DWORD PTR tv168[ebp]
  00209	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00210	ff d1		 call	 ecx
  00212	89 45 e4	 mov	 DWORD PTR _player_group$[ebp], eax

; 2545 : 	}
; 2546 : 	else

  00215	eb 07		 jmp	 SHORT $LN7@map_draw_g
$LN6@map_draw_g:

; 2547 : 	{
; 2548 : 		player_group = NULL;

  00217	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _player_group$[ebp], 0
$LN7@map_draw_g:

; 2549 : 	}
; 2550 : 
; 2551 : 	if (get_ui_object_drawable (campaign_page [CAMPAIGN_PAGE_GROUP]))

  0021e	b8 04 00 00 00	 mov	 eax, 4
  00223	6b c8 03	 imul	 ecx, eax, 3
  00226	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  0022c	52		 push	 edx
  0022d	b8 04 00 00 00	 mov	 eax, 4
  00232	6b c8 03	 imul	 ecx, eax, 3
  00235	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  0023b	8b 02		 mov	 eax, DWORD PTR [edx]
  0023d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  00244	ff d1		 call	 ecx
  00246	85 c0		 test	 eax, eax
  00248	74 72		 je	 SHORT $LN8@map_draw_g

; 2552 : 	{
; 2553 : 		current_page_group = get_local_entity_safe_ptr (get_ui_object_item_number (campaign_page [CAMPAIGN_PAGE_GROUP]));

  0024a	b8 04 00 00 00	 mov	 eax, 4
  0024f	6b c8 03	 imul	 ecx, eax, 3
  00252	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00258	52		 push	 edx
  00259	b8 04 00 00 00	 mov	 eax, 4
  0025e	6b c8 03	 imul	 ecx, eax, 3
  00261	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00267	8b 02		 mov	 eax, DWORD PTR [edx]
  00269	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  00270	ff d1		 call	 ecx
  00272	83 f8 ff	 cmp	 eax, -1
  00275	74 36		 je	 SHORT $LN34@map_draw_g
  00277	ba 04 00 00 00	 mov	 edx, 4
  0027c	6b c2 03	 imul	 eax, edx, 3
  0027f	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  00285	51		 push	 ecx
  00286	ba 04 00 00 00	 mov	 edx, 4
  0028b	6b c2 03	 imul	 eax, edx, 3
  0028e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  00294	8b 11		 mov	 edx, DWORD PTR [ecx]
  00296	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0029d	ff d0		 call	 eax
  0029f	c1 e0 04	 shl	 eax, 4
  002a2	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  002a8	89 45 94	 mov	 DWORD PTR tv205[ebp], eax
  002ab	eb 07		 jmp	 SHORT $LN35@map_draw_g
$LN34@map_draw_g:
  002ad	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN35@map_draw_g:
  002b4	8b 4d 94	 mov	 ecx, DWORD PTR tv205[ebp]
  002b7	89 4d e0	 mov	 DWORD PTR _current_page_group$[ebp], ecx

; 2554 : 	}
; 2555 : 	else

  002ba	eb 07		 jmp	 SHORT $LN9@map_draw_g
$LN8@map_draw_g:

; 2556 : 	{
; 2557 : 		current_page_group = NULL;

  002bc	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _current_page_group$[ebp], 0
$LN9@map_draw_g:

; 2558 : 	}
; 2559 : 
; 2560 : 	if (is_friendly && ((en == player_group) || (en == current_page_group) || (map_dimensions->size < FORCE_DRAW_GROUP_MEMBERS_RADIUS)))

  002c3	83 7d d8 00	 cmp	 DWORD PTR _is_friendly$[ebp], 0
  002c7	0f 84 84 02 00
	00		 je	 $LN10@map_draw_g
  002cd	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  002d0	3b 45 e4	 cmp	 eax, DWORD PTR _player_group$[ebp]
  002d3	74 22		 je	 SHORT $LN12@map_draw_g
  002d5	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  002d8	3b 45 e0	 cmp	 eax, DWORD PTR _current_page_group$[ebp]
  002db	74 1a		 je	 SHORT $LN12@map_draw_g
  002dd	8b 45 dc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002e0	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  002e5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40cf400000000000
  002ed	66 0f 2f c8	 comisd	 xmm1, xmm0
  002f1	0f 86 5a 02 00
	00		 jbe	 $LN10@map_draw_g
$LN12@map_draw_g:

; 2561 : 	{
; 2562 : 		//
; 2563 : 		// Draw individual members
; 2564 : 		//
; 2565 : 
; 2566 : 		member = get_local_entity_first_child (en, LIST_TYPE_MEMBER);

  002f7	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  002fb	74 0a		 je	 SHORT $LN36@map_draw_g
  002fd	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00300	8b 08		 mov	 ecx, DWORD PTR [eax]
  00302	89 4d 94	 mov	 DWORD PTR tv218[ebp], ecx
  00305	eb 21		 jmp	 SHORT $LN37@map_draw_g
$LN36@map_draw_g:
  00307	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0030d	83 c2 3c	 add	 edx, 60			; 0000003cH
  00310	52		 push	 edx
  00311	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00316	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00321	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN37@map_draw_g:
  00328	b9 01 00 00 00	 mov	 ecx, 1
  0032d	85 c9		 test	 ecx, ecx
  0032f	74 09		 je	 SHORT $LN38@map_draw_g
  00331	c7 45 90 19 00
	00 00		 mov	 DWORD PTR tv226[ebp], 25 ; 00000019H
  00338	eb 21		 jmp	 SHORT $LN39@map_draw_g
$LN38@map_draw_g:
  0033a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00340	83 c2 3c	 add	 edx, 60			; 0000003cH
  00343	52		 push	 edx
  00344	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00349	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0034e	50		 push	 eax
  0034f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00354	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv226[ebp], 0
$LN39@map_draw_g:
  0035b	6a 19		 push	 25			; 00000019H
  0035d	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00360	51		 push	 ecx
  00361	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv218[ebp], 180
  00368	8b 45 90	 mov	 eax, DWORD PTR tv226[ebp]
  0036b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00372	ff d1		 call	 ecx
  00374	89 45 e8	 mov	 DWORD PTR _member$[ebp], eax
$LN2@map_draw_g:

; 2567 : 
; 2568 : 		while (member)

  00377	83 7d e8 00	 cmp	 DWORD PTR _member$[ebp], 0
  0037b	0f 84 cb 01 00
	00		 je	 $LN3@map_draw_g

; 2569 : 		{
; 2570 : 			if (check_visible_entity (obj, member))

  00381	8b 45 e8	 mov	 eax, DWORD PTR _member$[ebp]
  00384	50		 push	 eax
  00385	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00388	51		 push	 ecx
  00389	e8 00 00 00 00	 call	 ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ; check_visible_entity
  0038e	85 c0		 test	 eax, eax
  00390	0f 84 31 01 00
	00		 je	 $LN14@map_draw_g

; 2571 : 			{
; 2572 : 				icon = (map_icon_type) get_local_entity_int_value (member, INT_TYPE_MAP_ICON);

  00396	83 7d e8 00	 cmp	 DWORD PTR _member$[ebp], 0
  0039a	74 0a		 je	 SHORT $LN40@map_draw_g
  0039c	8b 45 e8	 mov	 eax, DWORD PTR _member$[ebp]
  0039f	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a1	89 4d 94	 mov	 DWORD PTR tv243[ebp], ecx
  003a4	eb 21		 jmp	 SHORT $LN41@map_draw_g
$LN40@map_draw_g:
  003a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  003ac	83 c2 42	 add	 edx, 66			; 00000042H
  003af	52		 push	 edx
  003b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ba	50		 push	 eax
  003bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c0	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv243[ebp], 0
$LN41@map_draw_g:
  003c7	b9 01 00 00 00	 mov	 ecx, 1
  003cc	85 c9		 test	 ecx, ecx
  003ce	74 09		 je	 SHORT $LN42@map_draw_g
  003d0	c7 45 90 82 00
	00 00		 mov	 DWORD PTR tv251[ebp], 130 ; 00000082H
  003d7	eb 21		 jmp	 SHORT $LN43@map_draw_g
$LN42@map_draw_g:
  003d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  003df	83 c2 42	 add	 edx, 66			; 00000042H
  003e2	52		 push	 edx
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003ed	50		 push	 eax
  003ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN43@map_draw_g:
  003fa	68 82 00 00 00	 push	 130			; 00000082H
  003ff	8b 4d e8	 mov	 ecx, DWORD PTR _member$[ebp]
  00402	51		 push	 ecx
  00403	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv243[ebp], 1116
  0040a	8b 45 90	 mov	 eax, DWORD PTR tv251[ebp]
  0040d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00414	ff d1		 call	 ecx
  00416	89 45 f4	 mov	 DWORD PTR _icon$[ebp], eax

; 2573 : 
; 2574 : 				if (icon != MAP_ICON_NONE)

  00419	83 7d f4 00	 cmp	 DWORD PTR _icon$[ebp], 0
  0041d	0f 84 a4 00 00
	00		 je	 $LN14@map_draw_g

; 2575 : 				{
; 2576 : 					pos = get_local_entity_vec3d_ptr (member, VEC3D_TYPE_POSITION);

  00423	83 7d e8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00427	74 0a		 je	 SHORT $LN44@map_draw_g
  00429	8b 45 e8	 mov	 eax, DWORD PTR _member$[ebp]
  0042c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042e	89 4d 94	 mov	 DWORD PTR tv264[ebp], ecx
  00431	eb 21		 jmp	 SHORT $LN45@map_draw_g
$LN44@map_draw_g:
  00433	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00439	83 c2 46	 add	 edx, 70			; 00000046H
  0043c	52		 push	 edx
  0043d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00442	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00447	50		 push	 eax
  00448	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN45@map_draw_g:
  00454	b9 01 00 00 00	 mov	 ecx, 1
  00459	85 c9		 test	 ecx, ecx
  0045b	74 09		 je	 SHORT $LN46@map_draw_g
  0045d	c7 45 90 08 00
	00 00		 mov	 DWORD PTR tv272[ebp], 8
  00464	eb 21		 jmp	 SHORT $LN47@map_draw_g
$LN46@map_draw_g:
  00466	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0046c	83 c2 46	 add	 edx, 70			; 00000046H
  0046f	52		 push	 edx
  00470	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00475	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0047a	50		 push	 eax
  0047b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00480	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv272[ebp], 0
$LN47@map_draw_g:
  00487	6a 08		 push	 8
  00489	8b 4d e8	 mov	 ecx, DWORD PTR _member$[ebp]
  0048c	51		 push	 ecx
  0048d	6b 55 94 60	 imul	 edx, DWORD PTR tv264[ebp], 96
  00491	8b 45 90	 mov	 eax, DWORD PTR tv272[ebp]
  00494	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0049b	ff d1		 call	 ecx
  0049d	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 2577 : 
; 2578 : 					map_draw_entity_icon (obj, member, pos, icon, side, 1.0);

  004a0	51		 push	 ecx
  004a1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ae	8b 45 ec	 mov	 eax, DWORD PTR _side$[ebp]
  004b1	50		 push	 eax
  004b2	8b 4d f4	 mov	 ecx, DWORD PTR _icon$[ebp]
  004b5	51		 push	 ecx
  004b6	8b 55 fc	 mov	 edx, DWORD PTR _pos$[ebp]
  004b9	52		 push	 edx
  004ba	8b 45 e8	 mov	 eax, DWORD PTR _member$[ebp]
  004bd	50		 push	 eax
  004be	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  004c1	51		 push	 ecx
  004c2	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN14@map_draw_g:

; 2579 : 				}
; 2580 : 			}
; 2581 : 
; 2582 : 			member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  004c7	83 7d e8 00	 cmp	 DWORD PTR _member$[ebp], 0
  004cb	74 0a		 je	 SHORT $LN48@map_draw_g
  004cd	8b 45 e8	 mov	 eax, DWORD PTR _member$[ebp]
  004d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d2	89 4d 94	 mov	 DWORD PTR tv290[ebp], ecx
  004d5	eb 21		 jmp	 SHORT $LN49@map_draw_g
$LN48@map_draw_g:
  004d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  004dd	83 c2 4c	 add	 edx, 76			; 0000004cH
  004e0	52		 push	 edx
  004e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004eb	50		 push	 eax
  004ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f1	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv290[ebp], 0
$LN49@map_draw_g:
  004f8	b9 01 00 00 00	 mov	 ecx, 1
  004fd	85 c9		 test	 ecx, ecx
  004ff	74 09		 je	 SHORT $LN50@map_draw_g
  00501	c7 45 90 19 00
	00 00		 mov	 DWORD PTR tv298[ebp], 25 ; 00000019H
  00508	eb 21		 jmp	 SHORT $LN51@map_draw_g
$LN50@map_draw_g:
  0050a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00510	83 c2 4c	 add	 edx, 76			; 0000004cH
  00513	52		 push	 edx
  00514	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00519	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0051e	50		 push	 eax
  0051f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00524	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv298[ebp], 0
$LN51@map_draw_g:
  0052b	6a 19		 push	 25			; 00000019H
  0052d	8b 4d e8	 mov	 ecx, DWORD PTR _member$[ebp]
  00530	51		 push	 ecx
  00531	69 55 94 b4 00
	00 00		 imul	 edx, DWORD PTR tv290[ebp], 180
  00538	8b 45 90	 mov	 eax, DWORD PTR tv298[ebp]
  0053b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00542	ff d1		 call	 ecx
  00544	89 45 e8	 mov	 DWORD PTR _member$[ebp], eax

; 2583 : 		}

  00547	e9 2b fe ff ff	 jmp	 $LN2@map_draw_g
$LN3@map_draw_g:

; 2584 : 	}
; 2585 : 	else

  0054c	e9 15 02 00 00	 jmp	 $LN18@map_draw_g
$LN10@map_draw_g:

; 2586 : 	{
; 2587 : 		//
; 2588 : 		// draw group icon
; 2589 : 		//
; 2590 : 
; 2591 : 		if (check_visible_entity (obj, en))

  00551	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00554	50		 push	 eax
  00555	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00558	51		 push	 ecx
  00559	e8 00 00 00 00	 call	 ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ; check_visible_entity
  0055e	85 c0		 test	 eax, eax
  00560	0f 84 00 02 00
	00		 je	 $LN18@map_draw_g

; 2592 : 		{
; 2593 : 			icon = (map_icon_type) get_local_entity_int_value (en, INT_TYPE_MAP_ICON);

  00566	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0056a	74 0a		 je	 SHORT $LN52@map_draw_g
  0056c	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0056f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00571	89 4d 94	 mov	 DWORD PTR tv314[ebp], ecx
  00574	eb 21		 jmp	 SHORT $LN53@map_draw_g
$LN52@map_draw_g:
  00576	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0057c	83 c2 57	 add	 edx, 87			; 00000057H
  0057f	52		 push	 edx
  00580	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00585	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0058a	50		 push	 eax
  0058b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00590	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv314[ebp], 0
$LN53@map_draw_g:
  00597	b9 01 00 00 00	 mov	 ecx, 1
  0059c	85 c9		 test	 ecx, ecx
  0059e	74 09		 je	 SHORT $LN54@map_draw_g
  005a0	c7 45 90 82 00
	00 00		 mov	 DWORD PTR tv322[ebp], 130 ; 00000082H
  005a7	eb 21		 jmp	 SHORT $LN55@map_draw_g
$LN54@map_draw_g:
  005a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  005af	83 c2 57	 add	 edx, 87			; 00000057H
  005b2	52		 push	 edx
  005b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005bd	50		 push	 eax
  005be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c3	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv322[ebp], 0
$LN55@map_draw_g:
  005ca	68 82 00 00 00	 push	 130			; 00000082H
  005cf	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  005d2	51		 push	 ecx
  005d3	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv314[ebp], 1116
  005da	8b 45 90	 mov	 eax, DWORD PTR tv322[ebp]
  005dd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  005e4	ff d1		 call	 ecx
  005e6	89 45 f4	 mov	 DWORD PTR _icon$[ebp], eax

; 2594 : 
; 2595 : 			if (icon != MAP_ICON_NONE)

  005e9	83 7d f4 00	 cmp	 DWORD PTR _icon$[ebp], 0
  005ed	0f 84 73 01 00
	00		 je	 $LN18@map_draw_g

; 2596 : 			{
; 2597 : 				group_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  005f3	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  005f7	74 0a		 je	 SHORT $LN56@map_draw_g
  005f9	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  005fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  005fe	89 4d 94	 mov	 DWORD PTR tv335[ebp], ecx
  00601	eb 21		 jmp	 SHORT $LN57@map_draw_g
$LN56@map_draw_g:
  00603	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00609	83 c2 5b	 add	 edx, 91			; 0000005bH
  0060c	52		 push	 edx
  0060d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00617	50		 push	 eax
  00618	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0061d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv335[ebp], 0
$LN57@map_draw_g:
  00624	b9 01 00 00 00	 mov	 ecx, 1
  00629	85 c9		 test	 ecx, ecx
  0062b	74 09		 je	 SHORT $LN58@map_draw_g
  0062d	c7 45 90 34 00
	00 00		 mov	 DWORD PTR tv343[ebp], 52 ; 00000034H
  00634	eb 21		 jmp	 SHORT $LN59@map_draw_g
$LN58@map_draw_g:
  00636	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0063c	83 c2 5b	 add	 edx, 91			; 0000005bH
  0063f	52		 push	 edx
  00640	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00645	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0064a	50		 push	 eax
  0064b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00650	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv343[ebp], 0
$LN59@map_draw_g:
  00657	6a 34		 push	 52			; 00000034H
  00659	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0065c	51		 push	 ecx
  0065d	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv335[ebp], 1116
  00664	8b 45 90	 mov	 eax, DWORD PTR tv343[ebp]
  00667	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0066e	ff d1		 call	 ecx
  00670	89 45 f8	 mov	 DWORD PTR _group_type$[ebp], eax

; 2598 : 
; 2599 : //				if (!is_friendly && command_line_campaign_map_update_interval)
; 2600 : 					pos = get_last_known_position(en);

  00673	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00676	50		 push	 eax
  00677	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  0067c	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 2601 : /*				{
; 2602 : 					// arneh, 2007-07-08 - only update map position if update interval has passed
; 2603 : 
; 2604 : 					float last_update = get_local_entity_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME);
; 2605 : 					float time_since_last_update = current_time - last_update;
; 2606 : 
; 2607 : 					if (time_since_last_update > command_line_campaign_map_update_interval)
; 2608 : 					{
; 2609 : 						pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);
; 2610 : 
; 2611 : 						set_local_entity_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME, current_time);
; 2612 : 						set_local_entity_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, pos);
; 2613 : 					}
; 2614 : 					else
; 2615 : 						pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_LAST_KNOWN_POSITION);
; 2616 : 				}*/
; 2617 : //				else
; 2618 : //					pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);
; 2619 : 
; 2620 : 				map_draw_entity_icon (obj, en, pos, icon, side, 1.0);

  0067f	51		 push	 ecx
  00680	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00688	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068d	8b 45 ec	 mov	 eax, DWORD PTR _side$[ebp]
  00690	50		 push	 eax
  00691	8b 4d f4	 mov	 ecx, DWORD PTR _icon$[ebp]
  00694	51		 push	 ecx
  00695	8b 55 fc	 mov	 edx, DWORD PTR _pos$[ebp]
  00698	52		 push	 edx
  00699	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0069c	50		 push	 eax
  0069d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006a0	51		 push	 ecx
  006a1	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 2621 : 
; 2622 : 				if (get_current_list_mode () == COMMON_LIST_MODE_GROUP && is_friendly)

  006a6	e8 00 00 00 00	 call	 ?get_current_list_mode@@YGHXZ ; get_current_list_mode
  006ab	83 f8 01	 cmp	 eax, 1
  006ae	0f 85 b2 00 00
	00		 jne	 $LN18@map_draw_g
  006b4	83 7d d8 00	 cmp	 DWORD PTR _is_friendly$[ebp], 0
  006b8	0f 84 a8 00 00
	00		 je	 $LN18@map_draw_g

; 2623 : 					if (group_database [group_type].default_entity_type == ENTITY_TYPE_HELICOPTER)

  006be	6b 45 f8 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  006c2	83 b8 1c 00 00
	00 0e		 cmp	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28], 14 ; 0000000eH
  006c9	0f 85 97 00 00
	00		 jne	 $LN18@map_draw_g

; 2624 : 					{
; 2625 : 						name = get_local_entity_string (en, STRING_TYPE_GROUP_CALLSIGN);

  006cf	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  006d3	74 0a		 je	 SHORT $LN60@map_draw_g
  006d5	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  006d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  006da	89 4d 94	 mov	 DWORD PTR tv370[ebp], ecx
  006dd	eb 21		 jmp	 SHORT $LN61@map_draw_g
$LN60@map_draw_g:
  006df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  006e5	83 c2 77	 add	 edx, 119		; 00000077H
  006e8	52		 push	 edx
  006e9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006f3	50		 push	 eax
  006f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f9	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv370[ebp], 0
$LN61@map_draw_g:
  00700	b9 01 00 00 00	 mov	 ecx, 1
  00705	85 c9		 test	 ecx, ecx
  00707	74 09		 je	 SHORT $LN62@map_draw_g
  00709	c7 45 90 04 00
	00 00		 mov	 DWORD PTR tv378[ebp], 4
  00710	eb 21		 jmp	 SHORT $LN63@map_draw_g
$LN62@map_draw_g:
  00712	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00718	83 c2 77	 add	 edx, 119		; 00000077H
  0071b	52		 push	 edx
  0071c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00721	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00726	50		 push	 eax
  00727	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv378[ebp], 0
$LN63@map_draw_g:
  00733	6a 04		 push	 4
  00735	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00738	51		 push	 ecx
  00739	6b 55 94 34	 imul	 edx, DWORD PTR tv370[ebp], 52
  0073d	8b 45 90	 mov	 eax, DWORD PTR tv378[ebp]
  00740	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00747	ff d1		 call	 ecx
  00749	89 45 f0	 mov	 DWORD PTR _name$[ebp], eax

; 2626 : 
; 2627 : 						map_draw_string (obj, pos, name, UI_FONT_ARIAL_14, &ui_colour_orange, FALSE);

  0074c	6a 00		 push	 0
  0074e	68 00 00 00 00	 push	 OFFSET ?ui_colour_orange@@3UREAL_COLOUR@@A ; ui_colour_orange
  00753	6a 01		 push	 1
  00755	8b 45 f0	 mov	 eax, DWORD PTR _name$[ebp]
  00758	50		 push	 eax
  00759	8b 4d fc	 mov	 ecx, DWORD PTR _pos$[ebp]
  0075c	51		 push	 ecx
  0075d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00760	52		 push	 edx
  00761	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN18@map_draw_g:

; 2628 : 					}
; 2629 : 			}
; 2630 : 		}
; 2631 : 	}
; 2632 : }

  00766	5f		 pop	 edi
  00767	5e		 pop	 esi
  00768	5b		 pop	 ebx
  00769	8b e5		 mov	 esp, ebp
  0076b	5d		 pop	 ebp
  0076c	c2 08 00	 ret	 8
?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ENDP	; map_draw_group
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z
_TEXT	SEGMENT
tv248 = -144						; size = 4
tv213 = -144						; size = 4
tv190 = -144						; size = 4
tv169 = -144						; size = 4
tv150 = -144						; size = 4
tv131 = -144						; size = 4
tv240 = -140						; size = 4
tv205 = -140						; size = 4
tv182 = -140						; size = 4
tv162 = -140						; size = 4
tv143 = -140						; size = 4
tv91 = -140						; size = 4
_threat_circle_outline_colour$ = -72			; size = 4
_threat_circle_filled_colour$ = -68			; size = 4
_active_radar$ = -64					; size = 4
_screen_radius$ = -60					; size = 4
_scan_radius$ = -56					; size = 4
_r$ = -52						; size = 4
_side$ = -48						; size = 4
_en$ = -44						; size = 4
_spos2$ = -40						; size = 12
_spos1$ = -28						; size = 12
_pos2$ = -16						; size = 12
_pos$ = -4						; size = 4
_obj$ = 8						; size = 4
_group$ = 12						; size = 4
_circle_side_count$ = 16				; size = 4
?map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z PROC ; map_draw_threat_circle, COMDAT

; 2295 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2296 : 	vec3d
; 2297 : 		*pos,
; 2298 : 		pos2,
; 2299 : 		spos1,
; 2300 : 		spos2;
; 2301 : 
; 2302 : 	entity
; 2303 : 		*en;
; 2304 : 
; 2305 : 	entity_sides
; 2306 : 		side;
; 2307 : 
; 2308 : 	float
; 2309 : 		r,
; 2310 : 		scan_radius,
; 2311 : 		screen_radius;
; 2312 : 
; 2313 : 	int
; 2314 : 		active_radar;
; 2315 : 
; 2316 : 	rgb_colour
; 2317 : 		threat_circle_filled_colour,
; 2318 : 		threat_circle_outline_colour;
; 2319 : 
; 2320 : 	ASSERT (group);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _group$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@map_draw_t
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00017	83 c0 19	 add	 eax, 25			; 00000019H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_t:

; 2321 : 
; 2322 : 	ASSERT (obj);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN5@map_draw_t
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00035	83 c0 1b	 add	 eax, 27			; 0000001bH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_draw_t:

; 2323 : 
; 2324 : 	if (!check_visible_entity (obj, group))

  00048	8b 45 0c	 mov	 eax, DWORD PTR _group$[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0004f	51		 push	 ecx
  00050	e8 00 00 00 00	 call	 ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ; check_visible_entity
  00055	85 c0		 test	 eax, eax
  00057	75 05		 jne	 SHORT $LN6@map_draw_t

; 2325 : 	{
; 2326 : 		return;

  00059	e9 ee 04 00 00	 jmp	 $LN1@map_draw_t
$LN6@map_draw_t:

; 2327 : 	}
; 2328 : 
; 2329 : 	pos = get_last_known_position(group);

  0005e	8b 45 0c	 mov	 eax, DWORD PTR _group$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  00067	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 2330 : 
; 2331 : 	ASSERT (pos);

  0006a	83 7d fc 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0006e	75 18		 jne	 SHORT $LN7@map_draw_t
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00075	83 c0 24	 add	 eax, 36			; 00000024H
  00078	50		 push	 eax
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00083	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_t:

; 2332 : 
; 2333 : 	scan_radius = 0.0;

  00088	0f 57 c0	 xorps	 xmm0, xmm0
  0008b	f3 0f 11 45 c8	 movss	 DWORD PTR _scan_radius$[ebp], xmm0

; 2334 : 
; 2335 : 	active_radar = FALSE;

  00090	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _active_radar$[ebp], 0

; 2336 : 
; 2337 : 	en = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00097	83 7d 0c 00	 cmp	 DWORD PTR _group$[ebp], 0
  0009b	74 0d		 je	 SHORT $LN17@map_draw_t
  0009d	8b 45 0c	 mov	 eax, DWORD PTR _group$[ebp]
  000a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a2	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv91[ebp], ecx
  000a8	eb 24		 jmp	 SHORT $LN18@map_draw_t
$LN17@map_draw_t:
  000aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  000b0	83 c2 2a	 add	 edx, 42			; 0000002aH
  000b3	52		 push	 edx
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv91[ebp], 0
$LN18@map_draw_t:
  000ce	b9 01 00 00 00	 mov	 ecx, 1
  000d3	85 c9		 test	 ecx, ecx
  000d5	74 0c		 je	 SHORT $LN19@map_draw_t
  000d7	c7 85 70 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv131[ebp], 25 ; 00000019H
  000e1	eb 24		 jmp	 SHORT $LN20@map_draw_t
$LN19@map_draw_t:
  000e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  000e9	83 c2 2a	 add	 edx, 42			; 0000002aH
  000ec	52		 push	 edx
  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fd	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv131[ebp], 0
$LN20@map_draw_t:
  00107	6a 19		 push	 25			; 00000019H
  00109	8b 4d 0c	 mov	 ecx, DWORD PTR _group$[ebp]
  0010c	51		 push	 ecx
  0010d	69 95 74 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv91[ebp], 180
  00117	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv131[ebp]
  0011d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00124	ff d1		 call	 ecx
  00126	89 45 d4	 mov	 DWORD PTR _en$[ebp], eax
$LN2@map_draw_t:

; 2338 : 
; 2339 : 	while (en)

  00129	83 7d d4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0012d	0f 84 66 02 00
	00		 je	 $LN3@map_draw_t

; 2340 : 	{
; 2341 : 		if (get_local_entity_int_value (en, INT_TYPE_OFFENSIVE_CAPABILITY))

  00133	83 7d d4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00137	74 0d		 je	 SHORT $LN21@map_draw_t
  00139	8b 45 d4	 mov	 eax, DWORD PTR _en$[ebp]
  0013c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013e	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv143[ebp], ecx
  00144	eb 20		 jmp	 SHORT $LN22@map_draw_t
$LN21@map_draw_t:
  00146	68 25 09 00 00	 push	 2341			; 00000925H
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00150	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00156	52		 push	 edx
  00157	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015c	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv143[ebp], 0
$LN22@map_draw_t:
  00166	b8 01 00 00 00	 mov	 eax, 1
  0016b	85 c0		 test	 eax, eax
  0016d	74 0c		 je	 SHORT $LN23@map_draw_t
  0016f	c7 85 70 ff ff
	ff 96 00 00 00	 mov	 DWORD PTR tv150[ebp], 150 ; 00000096H
  00179	eb 20		 jmp	 SHORT $LN24@map_draw_t
$LN23@map_draw_t:
  0017b	68 25 09 00 00	 push	 2341			; 00000925H
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00185	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0018b	51		 push	 ecx
  0018c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00191	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN24@map_draw_t:
  0019b	68 96 00 00 00	 push	 150			; 00000096H
  001a0	8b 55 d4	 mov	 edx, DWORD PTR _en$[ebp]
  001a3	52		 push	 edx
  001a4	69 85 74 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv143[ebp], 1116
  001ae	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv150[ebp]
  001b4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001bb	ff d2		 call	 edx
  001bd	85 c0		 test	 eax, eax
  001bf	0f 84 3d 01 00
	00		 je	 $LN8@map_draw_t

; 2342 : 		{
; 2343 : 			if (get_local_entity_int_value (en, INT_TYPE_THREAT_TYPE) != THREAT_TYPE_INVALID)

  001c5	83 7d d4 00	 cmp	 DWORD PTR _en$[ebp], 0
  001c9	74 0d		 je	 SHORT $LN25@map_draw_t
  001cb	8b 45 d4	 mov	 eax, DWORD PTR _en$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], ecx
  001d6	eb 20		 jmp	 SHORT $LN26@map_draw_t
$LN25@map_draw_t:
  001d8	68 27 09 00 00	 push	 2343			; 00000927H
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e8	52		 push	 edx
  001e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ee	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN26@map_draw_t:
  001f8	b8 01 00 00 00	 mov	 eax, 1
  001fd	85 c0		 test	 eax, eax
  001ff	74 0c		 je	 SHORT $LN27@map_draw_t
  00201	c7 85 70 ff ff
	ff e9 00 00 00	 mov	 DWORD PTR tv169[ebp], 233 ; 000000e9H
  0020b	eb 20		 jmp	 SHORT $LN28@map_draw_t
$LN27@map_draw_t:
  0020d	68 27 09 00 00	 push	 2343			; 00000927H
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0021d	51		 push	 ecx
  0021e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00223	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN28@map_draw_t:
  0022d	68 e9 00 00 00	 push	 233			; 000000e9H
  00232	8b 55 d4	 mov	 edx, DWORD PTR _en$[ebp]
  00235	52		 push	 edx
  00236	69 85 74 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv162[ebp], 1116
  00240	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv169[ebp]
  00246	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0024d	ff d2		 call	 edx
  0024f	85 c0		 test	 eax, eax
  00251	74 07		 je	 SHORT $LN9@map_draw_t

; 2344 : 			{
; 2345 : 				active_radar = TRUE;

  00253	c7 45 c0 01 00
	00 00		 mov	 DWORD PTR _active_radar$[ebp], 1
$LN9@map_draw_t:

; 2346 : 			}
; 2347 : 
; 2348 : 			r = get_local_entity_float_value (en, FLOAT_TYPE_AIR_SCAN_RANGE);

  0025a	83 7d d4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0025e	74 0d		 je	 SHORT $LN29@map_draw_t
  00260	8b 45 d4	 mov	 eax, DWORD PTR _en$[ebp]
  00263	8b 08		 mov	 ecx, DWORD PTR [eax]
  00265	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv182[ebp], ecx
  0026b	eb 24		 jmp	 SHORT $LN30@map_draw_t
$LN29@map_draw_t:
  0026d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00273	83 c2 35	 add	 edx, 53			; 00000035H
  00276	52		 push	 edx
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00287	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN30@map_draw_t:
  00291	b9 01 00 00 00	 mov	 ecx, 1
  00296	85 c9		 test	 ecx, ecx
  00298	74 0c		 je	 SHORT $LN31@map_draw_t
  0029a	c7 85 70 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR tv190[ebp], 5
  002a4	eb 24		 jmp	 SHORT $LN32@map_draw_t
$LN31@map_draw_t:
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  002ac	83 c2 35	 add	 edx, 53			; 00000035H
  002af	52		 push	 edx
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c0	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv190[ebp], 0
$LN32@map_draw_t:
  002ca	6a 05		 push	 5
  002cc	8b 4d d4	 mov	 ecx, DWORD PTR _en$[ebp]
  002cf	51		 push	 ecx
  002d0	69 95 74 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv182[ebp], 700
  002da	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv190[ebp]
  002e0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  002e7	ff d1		 call	 ecx
  002e9	d9 5d cc	 fstp	 DWORD PTR _r$[ebp]

; 2349 : 
; 2350 : 			scan_radius = max (scan_radius, r);

  002ec	8d 45 cc	 lea	 eax, DWORD PTR _r$[ebp]
  002ef	50		 push	 eax
  002f0	8d 4d c8	 lea	 ecx, DWORD PTR _scan_radius$[ebp]
  002f3	51		 push	 ecx
  002f4	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  002f9	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002fd	f3 0f 11 45 c8	 movss	 DWORD PTR _scan_radius$[ebp], xmm0
$LN8@map_draw_t:

; 2351 : 		}
; 2352 : 
; 2353 : 		en = get_local_entity_child_succ (en, LIST_TYPE_MEMBER);

  00302	83 7d d4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00306	74 0d		 je	 SHORT $LN33@map_draw_t
  00308	8b 45 d4	 mov	 eax, DWORD PTR _en$[ebp]
  0030b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030d	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv205[ebp], ecx
  00313	eb 24		 jmp	 SHORT $LN34@map_draw_t
$LN33@map_draw_t:
  00315	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  0031b	83 c2 3a	 add	 edx, 58			; 0000003aH
  0031e	52		 push	 edx
  0031f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00329	50		 push	 eax
  0032a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032f	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv205[ebp], 0
$LN34@map_draw_t:
  00339	b9 01 00 00 00	 mov	 ecx, 1
  0033e	85 c9		 test	 ecx, ecx
  00340	74 0c		 je	 SHORT $LN35@map_draw_t
  00342	c7 85 70 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv213[ebp], 25 ; 00000019H
  0034c	eb 24		 jmp	 SHORT $LN36@map_draw_t
$LN35@map_draw_t:
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00354	83 c2 3a	 add	 edx, 58			; 0000003aH
  00357	52		 push	 edx
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00362	50		 push	 eax
  00363	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00368	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv213[ebp], 0
$LN36@map_draw_t:
  00372	6a 19		 push	 25			; 00000019H
  00374	8b 4d d4	 mov	 ecx, DWORD PTR _en$[ebp]
  00377	51		 push	 ecx
  00378	69 95 74 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv205[ebp], 180
  00382	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv213[ebp]
  00388	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0038f	ff d1		 call	 ecx
  00391	89 45 d4	 mov	 DWORD PTR _en$[ebp], eax

; 2354 : 	}

  00394	e9 90 fd ff ff	 jmp	 $LN2@map_draw_t
$LN3@map_draw_t:

; 2355 : 
; 2356 : 	if (scan_radius > 0.0)

  00399	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _scan_radius$[ebp]
  0039e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  003a6	0f 86 a0 01 00
	00		 jbe	 $LN11@map_draw_t

; 2357 : 	{
; 2358 : 		pos2.x = pos->x + scan_radius;

  003ac	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  003af	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003b3	f3 0f 58 45 c8	 addss	 xmm0, DWORD PTR _scan_radius$[ebp]
  003b8	f3 0f 11 45 f0	 movss	 DWORD PTR _pos2$[ebp], xmm0

; 2359 : 		pos2.y = pos->y;

  003bd	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  003c0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003c5	f3 0f 11 45 f4	 movss	 DWORD PTR _pos2$[ebp+4], xmm0

; 2360 : 		pos2.z = pos->z;

  003ca	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  003cd	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  003d2	f3 0f 11 45 f8	 movss	 DWORD PTR _pos2$[ebp+8], xmm0

; 2361 : 
; 2362 : 		map_get_screen_coords_from_world (obj, pos, &spos1);

  003d7	8d 45 e4	 lea	 eax, DWORD PTR _spos1$[ebp]
  003da	50		 push	 eax
  003db	8b 4d fc	 mov	 ecx, DWORD PTR _pos$[ebp]
  003de	51		 push	 ecx
  003df	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003e2	52		 push	 edx
  003e3	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 2363 : 
; 2364 : 		map_get_screen_coords_from_world (obj, &pos2, &spos2);

  003e8	8d 45 d8	 lea	 eax, DWORD PTR _spos2$[ebp]
  003eb	50		 push	 eax
  003ec	8d 4d f0	 lea	 ecx, DWORD PTR _pos2$[ebp]
  003ef	51		 push	 ecx
  003f0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003f3	52		 push	 edx
  003f4	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 2365 : 
; 2366 : 		screen_radius = spos2.x - spos1.x;

  003f9	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _spos2$[ebp]
  003fe	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _spos1$[ebp]
  00403	f3 0f 11 45 c4	 movss	 DWORD PTR _screen_radius$[ebp], xmm0

; 2367 : 
; 2368 : 		if (screen_radius > 0.0)

  00408	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _screen_radius$[ebp]
  0040d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00415	0f 86 31 01 00
	00		 jbe	 $LN11@map_draw_t

; 2369 : 		{
; 2370 : 			side = (entity_sides) get_local_entity_int_value (group, INT_TYPE_SIDE);

  0041b	83 7d 0c 00	 cmp	 DWORD PTR _group$[ebp], 0
  0041f	74 0d		 je	 SHORT $LN37@map_draw_t
  00421	8b 45 0c	 mov	 eax, DWORD PTR _group$[ebp]
  00424	8b 08		 mov	 ecx, DWORD PTR [eax]
  00426	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv240[ebp], ecx
  0042c	eb 24		 jmp	 SHORT $LN38@map_draw_t
$LN37@map_draw_t:
  0042e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  00434	83 c2 4b	 add	 edx, 75			; 0000004bH
  00437	52		 push	 edx
  00438	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00442	50		 push	 eax
  00443	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00448	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv240[ebp], 0
$LN38@map_draw_t:
  00452	b9 01 00 00 00	 mov	 ecx, 1
  00457	85 c9		 test	 ecx, ecx
  00459	74 0c		 je	 SHORT $LN39@map_draw_t
  0045b	c7 85 70 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv248[ebp], 187 ; 000000bbH
  00465	eb 24		 jmp	 SHORT $LN40@map_draw_t
$LN39@map_draw_t:
  00467	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z@4JA
  0046d	83 c2 4b	 add	 edx, 75			; 0000004bH
  00470	52		 push	 edx
  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0047b	50		 push	 eax
  0047c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00481	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN40@map_draw_t:
  0048b	68 bb 00 00 00	 push	 187			; 000000bbH
  00490	8b 4d 0c	 mov	 ecx, DWORD PTR _group$[ebp]
  00493	51		 push	 ecx
  00494	69 95 74 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv240[ebp], 1116
  0049e	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv248[ebp]
  004a4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  004ab	ff d1		 call	 ecx
  004ad	89 45 d0	 mov	 DWORD PTR _side$[ebp], eax

; 2371 : 
; 2372 : 			if (side == ENTITY_SIDE_BLUE_FORCE)

  004b0	83 7d d0 01	 cmp	 DWORD PTR _side$[ebp], 1
  004b4	75 16		 jne	 SHORT $LN12@map_draw_t

; 2373 : 			{
; 2374 : 				threat_circle_filled_colour.r = 20;

  004b6	c6 45 be 14	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp+2], 20 ; 00000014H

; 2375 : 				threat_circle_filled_colour.g = 20;

  004ba	c6 45 bd 14	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp+1], 20 ; 00000014H

; 2376 : 				threat_circle_filled_colour.b = 200;

  004be	c6 45 bc c8	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp], 200 ; 000000c8H

; 2377 : 
; 2378 : 				threat_circle_outline_colour = ui_colour_dark_blue;

  004c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_dark_blue@@3UREAL_COLOUR@@A ; ui_colour_dark_blue
  004c7	89 45 b8	 mov	 DWORD PTR _threat_circle_outline_colour$[ebp], eax

; 2379 : 			}
; 2380 : 			else

  004ca	eb 14		 jmp	 SHORT $LN13@map_draw_t
$LN12@map_draw_t:

; 2381 : 			{
; 2382 : 				threat_circle_filled_colour.r = 200;

  004cc	c6 45 be c8	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp+2], 200 ; 000000c8H

; 2383 : 				threat_circle_filled_colour.g = 20;

  004d0	c6 45 bd 14	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp+1], 20 ; 00000014H

; 2384 : 				threat_circle_filled_colour.b = 20;

  004d4	c6 45 bc 14	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp], 20 ; 00000014H

; 2385 : 
; 2386 : 				threat_circle_outline_colour = ui_colour_dark_red;

  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_dark_red@@3UREAL_COLOUR@@A ; ui_colour_dark_red
  004dd	89 45 b8	 mov	 DWORD PTR _threat_circle_outline_colour$[ebp], eax
$LN13@map_draw_t:

; 2387 : 			}
; 2388 : 
; 2389 : 			if (active_radar)

  004e0	83 7d c0 00	 cmp	 DWORD PTR _active_radar$[ebp], 0
  004e4	74 34		 je	 SHORT $LN14@map_draw_t

; 2390 : 			{
; 2391 : 				threat_circle_filled_colour.a = 50;

  004e6	c6 45 bf 32	 mov	 BYTE PTR _threat_circle_filled_colour$[ebp+3], 50 ; 00000032H

; 2392 : 
; 2393 : 				draw_filled_circle (spos1.x, spos1.z, screen_radius, circle_side_count, threat_circle_filled_colour);

  004ea	8b 45 bc	 mov	 eax, DWORD PTR _threat_circle_filled_colour$[ebp]
  004ed	50		 push	 eax
  004ee	8b 4d 10	 mov	 ecx, DWORD PTR _circle_side_count$[ebp]
  004f1	51		 push	 ecx
  004f2	51		 push	 ecx
  004f3	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _screen_radius$[ebp]
  004f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fd	51		 push	 ecx
  004fe	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  00503	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00508	51		 push	 ecx
  00509	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  0050e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00513	e8 00 00 00 00	 call	 ?draw_filled_circle@@YGXMMMHUREAL_COLOUR@@@Z ; draw_filled_circle

; 2394 : 			}
; 2395 : 			else

  00518	eb 04		 jmp	 SHORT $LN15@map_draw_t
$LN14@map_draw_t:

; 2396 : 			{
; 2397 : 				threat_circle_outline_colour.a = 128;

  0051a	c6 45 bb 80	 mov	 BYTE PTR _threat_circle_outline_colour$[ebp+3], 128 ; 00000080H
$LN15@map_draw_t:

; 2398 : 			}
; 2399 : 
; 2400 : 			draw_outline_circle (spos1.x, spos1.z, screen_radius, circle_side_count, threat_circle_outline_colour);

  0051e	8b 45 b8	 mov	 eax, DWORD PTR _threat_circle_outline_colour$[ebp]
  00521	50		 push	 eax
  00522	8b 4d 10	 mov	 ecx, DWORD PTR _circle_side_count$[ebp]
  00525	51		 push	 ecx
  00526	51		 push	 ecx
  00527	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _screen_radius$[ebp]
  0052c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00531	51		 push	 ecx
  00532	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  00537	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053c	51		 push	 ecx
  0053d	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  00542	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00547	e8 00 00 00 00	 call	 ?draw_outline_circle@@YGXMMMHUREAL_COLOUR@@@Z ; draw_outline_circle
$LN11@map_draw_t:
$LN1@map_draw_t:

; 2401 : 		}
; 2402 : 	}
; 2403 : }

  0054c	5f		 pop	 edi
  0054d	5e		 pop	 esi
  0054e	5b		 pop	 ebx
  0054f	8b e5		 mov	 esp, ebp
  00551	5d		 pop	 ebp
  00552	c2 0c 00	 ret	 12			; 0000000cH
?map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z ENDP ; map_draw_threat_circle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z
_TEXT	SEGMENT
_info_area$ = -8					; size = 4
_parent$ = -4						; size = 4
_map_dimensions$ = 8					; size = 4
?minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z PROC ; minimize_full_screen_function, COMDAT

; 1803 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1804 : 	ui_object
; 1805 : 		*parent,
; 1806 : 		*info_area;
; 1807 : 
; 1808 : 	ASSERT (map_dimensions);

  00009	83 7d 08 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@minimize_f
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@minimize_f:

; 1809 : 
; 1810 : 	ASSERT (map_dimensions->map_area);

  00027	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0002a	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  0002e	75 18		 jne	 SHORT $LN3@minimize_f
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
  00035	83 c0 07	 add	 eax, 7
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@minimize_f:

; 1811 : 
; 1812 : 	parent = get_ui_object_parent (map_dimensions->map_area);

  00048	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0004b	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004e	51		 push	 ecx
  0004f	8b 55 08	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00052	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00055	8b 08		 mov	 ecx, DWORD PTR [eax]
  00057	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[ecx*4]
  0005e	ff d2		 call	 edx
  00060	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 1813 : 
; 1814 : 	ASSERT (parent);

  00063	83 7d fc 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00067	75 18		 jne	 SHORT $LN4@minimize_f
  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
  0006e	83 c0 0b	 add	 eax, 11			; 0000000bH
  00071	50		 push	 eax
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  0007c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@minimize_f:

; 1815 : 
; 1816 : 	if (map_dimensions->full_screen_parent)

  00081	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00084	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00088	0f 84 b9 00 00
	00		 je	 $LN1@minimize_f

; 1817 : 	{
; 1818 : 		ASSERT (*(map_dimensions->full_screen_parent));

  0008e	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00091	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00094	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00097	75 18		 jne	 SHORT $LN6@minimize_f
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
  0009e	83 c0 0f	 add	 eax, 15			; 0000000fH
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BNGMJJON@?$CK?$CImap_dimensions?9?$DOfull_screen_p@
  000ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@minimize_f:

; 1819 : 
; 1820 : 		if (parent == *(map_dimensions->full_screen_parent))

  000b1	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000b4	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000b7	8b 55 fc	 mov	 edx, DWORD PTR _parent$[ebp]
  000ba	3b 11		 cmp	 edx, DWORD PTR [ecx]
  000bc	0f 85 85 00 00
	00		 jne	 $LN1@minimize_f

; 1821 : 		{
; 1822 : 			//
; 1823 : 			// Minimize map
; 1824 : 			//
; 1825 : 
; 1826 : 			info_area = (ui_object *) get_ui_object_user_ptr (*(map_dimensions->full_screen_parent));

  000c2	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000c5	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000c8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ca	52		 push	 edx
  000cb	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000ce	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000d1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d3	8b 02		 mov	 eax, DWORD PTR [edx]
  000d5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[eax*4]
  000dc	ff d1		 call	 ecx
  000de	89 45 f8	 mov	 DWORD PTR _info_area$[ebp], eax

; 1827 : 
; 1828 : 			set_ui_object_drawable (*(map_dimensions->full_screen_parent), FALSE);

  000e1	6a 00		 push	 0
  000e3	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000e6	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000eb	52		 push	 edx
  000ec	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000ef	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000f2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f4	8b 02		 mov	 eax, DWORD PTR [edx]
  000f6	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  000fd	ff d1		 call	 ecx

; 1829 : 
; 1830 : 			set_ui_object_parent (map_dimensions->map_area, map_dimensions->parent);

  000ff	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00102	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00105	51		 push	 ecx
  00106	8b 55 08	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00109	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0010c	50		 push	 eax
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00110	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00113	8b 02		 mov	 eax, DWORD PTR [edx]
  00115	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  0011c	ff d1		 call	 ecx

; 1831 : 
; 1832 : 			if (info_area)

  0011e	83 7d f8 00	 cmp	 DWORD PTR _info_area$[ebp], 0
  00122	74 14		 je	 SHORT $LN8@minimize_f

; 1833 : 			{
; 1834 : 				set_ui_object_drawable (info_area, FALSE);

  00124	6a 00		 push	 0
  00126	8b 45 f8	 mov	 eax, DWORD PTR _info_area$[ebp]
  00129	50		 push	 eax
  0012a	8b 4d f8	 mov	 ecx, DWORD PTR _info_area$[ebp]
  0012d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00136	ff d0		 call	 eax
$LN8@minimize_f:

; 1835 : 			}
; 1836 : 
; 1837 : 			map_dimensions->full_screen = FALSE;

  00138	8b 45 08	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0013b	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  0013e	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00141	8b 55 08	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00144	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
$LN1@minimize_f:

; 1838 : 		}
; 1839 : 	}
; 1840 : }

  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx
  0014a	8b e5		 mov	 esp, ebp
  0014c	5d		 pop	 ebp
  0014d	c2 04 00	 ret	 4
?minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z ENDP ; minimize_full_screen_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv79 = -72						; size = 4
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; toggle_map_goto_function, COMDAT

; 1787 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1788 : 	map_dimension_type
; 1789 : 		*map_dimensions;
; 1790 : 
; 1791 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1792 : 
; 1793 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@toggle_map
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@toggle_map:

; 1794 : 
; 1795 : 	map_dimensions->enable_goto = !(map_dimensions->enable_goto);

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00042	d1 e9		 shr	 ecx, 1
  00044	83 e1 01	 and	 ecx, 1
  00047	75 09		 jne	 SHORT $LN4@toggle_map
  00049	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv79[ebp], 1
  00050	eb 07		 jmp	 SHORT $LN5@toggle_map
$LN4@toggle_map:
  00052	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN5@toggle_map:
  00059	8b 55 b8	 mov	 edx, DWORD PTR tv79[ebp]
  0005c	83 e2 01	 and	 edx, 1
  0005f	d1 e2		 shl	 edx, 1
  00061	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00064	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00067	83 e1 fd	 and	 ecx, -3			; fffffffdH
  0006a	0b ca		 or	 ecx, edx
  0006c	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  0006f	89 4a 64	 mov	 DWORD PTR [edx+100], ecx

; 1796 : }

  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	5b		 pop	 ebx
  00075	8b e5		 mov	 esp, ebp
  00077	5d		 pop	 ebp
  00078	c2 08 00	 ret	 8
?toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; toggle_map_goto_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; draw_goto_toggle_function, COMDAT

; 1764 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1765 : 	map_dimension_type
; 1766 : 		*map_dimensions;
; 1767 : 
; 1768 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1769 : 
; 1770 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@draw_goto_
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@draw_goto_:

; 1771 : 
; 1772 : 	if (map_dimensions->enable_goto)

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00042	d1 e9		 shr	 ecx, 1
  00044	83 e1 01	 and	 ecx, 1
  00047	74 0b		 je	 SHORT $LN3@draw_goto_

; 1773 : 	{
; 1774 : 		set_toggle_button_on (obj);

  00049	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?set_toggle_button_on@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_on

; 1775 : 	}
; 1776 : 	else

  00052	eb 09		 jmp	 SHORT $LN1@draw_goto_
$LN3@draw_goto_:

; 1777 : 	{
; 1778 : 		set_toggle_button_off (obj);

  00054	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off
$LN1@draw_goto_:

; 1779 : 	}
; 1780 : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 08 00	 ret	 8
?draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; draw_goto_toggle_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; draw_full_screen_toggle_function, COMDAT

; 1668 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1669 : 	map_dimension_type
; 1670 : 		*map_dimensions;
; 1671 : 
; 1672 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1673 : 
; 1674 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@draw_full_
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@draw_full_:

; 1675 : 
; 1676 : 	ASSERT (map_dimensions->map_area);

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00043	75 18		 jne	 SHORT $LN3@draw_full_
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0004a	83 c0 08	 add	 eax, 8
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@draw_full_:

; 1677 : 
; 1678 : 	ASSERT (map_dimensions->full_screen_parent);

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00060	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00064	75 18		 jne	 SHORT $LN4@draw_full_
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0006b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006e	50		 push	 eax
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@BPAOHGID@map_dimensions?9?$DOfull_screen_par@
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_full_:

; 1679 : 
; 1680 : 	set_ui_object_drawable (obj, TRUE);

  0007e	6a 01		 push	 1
  00080	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00083	50		 push	 eax
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00090	ff d0		 call	 eax

; 1681 : 
; 1682 : 	set_ui_object_highlightable (obj, TRUE);

  00092	6a 01		 push	 1
  00094	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00097	50		 push	 eax
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_highlightable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000a4	ff d0		 call	 eax

; 1683 : 
; 1684 : 	if (map_dimensions->full_screen)

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000a9	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  000ac	83 e1 01	 and	 ecx, 1
  000af	74 64		 je	 SHORT $LN5@draw_full_

; 1685 : 	{
; 1686 : 		set_ui_object_texture_graphic (obj, minimise_icons [0]);

  000b1	b8 04 00 00 00	 mov	 eax, 4
  000b6	6b c8 00	 imul	 ecx, eax, 0
  000b9	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?minimise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[ecx]
  000bf	52		 push	 edx
  000c0	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000c3	50		 push	 eax
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[edx*4]
  000d0	ff d0		 call	 eax

; 1687 : 		set_ui_object_highlighted_texture_graphic (obj, minimise_icons [1]);

  000d2	b8 04 00 00 00	 mov	 eax, 4
  000d7	c1 e0 00	 shl	 eax, 0
  000da	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?minimise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  000e0	51		 push	 ecx
  000e1	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  000e4	52		 push	 edx
  000e5	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ea	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_highlighted_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[ecx*4]
  000f1	ff d2		 call	 edx

; 1688 : 		set_ui_object_selected_texture_graphic (obj, minimise_icons [2]);

  000f3	b8 04 00 00 00	 mov	 eax, 4
  000f8	d1 e0		 shl	 eax, 1
  000fa	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?minimise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  00100	51		 push	 ecx
  00101	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00104	52		 push	 edx
  00105	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00108	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010a	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_selected_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[ecx*4]
  00111	ff d2		 call	 edx

; 1689 : 	}
; 1690 : 	else

  00113	eb 62		 jmp	 SHORT $LN1@draw_full_
$LN5@draw_full_:

; 1691 : 	{
; 1692 : 		set_ui_object_texture_graphic (obj, maximise_icons [0]);

  00115	b8 04 00 00 00	 mov	 eax, 4
  0011a	6b c8 00	 imul	 ecx, eax, 0
  0011d	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?maximise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[ecx]
  00123	52		 push	 edx
  00124	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00127	50		 push	 eax
  00128	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0012b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[edx*4]
  00134	ff d0		 call	 eax

; 1693 : 		set_ui_object_highlighted_texture_graphic (obj, maximise_icons [1]);

  00136	b8 04 00 00 00	 mov	 eax, 4
  0013b	c1 e0 00	 shl	 eax, 0
  0013e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?maximise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  00144	51		 push	 ecx
  00145	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00148	52		 push	 edx
  00149	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0014c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_highlighted_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[ecx*4]
  00155	ff d2		 call	 edx

; 1694 : 		set_ui_object_selected_texture_graphic (obj, maximise_icons [2]);

  00157	b8 04 00 00 00	 mov	 eax, 4
  0015c	d1 e0		 shl	 eax, 1
  0015e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?maximise_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  00164	51		 push	 ecx
  00165	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00168	52		 push	 edx
  00169	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0016c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_selected_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[ecx*4]
  00175	ff d2		 call	 edx
$LN1@draw_full_:

; 1695 : 	}
; 1696 : }

  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 08 00	 ret	 8
?draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; draw_full_screen_toggle_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_map_dimensions$ = -16					; size = 4
_pos$ = -12						; size = 12
_obj$ = 8						; size = 4
?map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z PROC		; map_wheel_centralise, COMDAT

; 1420 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1421 : 	vec3d
; 1422 : 		pos;
; 1423 : 
; 1424 : 	map_dimension_type
; 1425 : 		*map_dimensions;
; 1426 : 
; 1427 : 		ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_wheel_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_wheel_:

; 1428 : 
; 1429 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1430 : 
; 1431 : 		ASSERT (map_dimensions);

  0003c	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00040	75 18		 jne	 SHORT $LN3@map_wheel_
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z@4JA
  00047	83 c0 0b	 add	 eax, 11			; 0000000bH
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00055	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_wheel_:

; 1432 : 
; 1433 : 		pos.x = get_mouse_x ();

  0005a	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  0005f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00063	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 1434 : 		pos.z = get_mouse_y ();

  00068	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  0006d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00071	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 1435 : 
; 1436 : 		map_get_world_coords_from_screen (obj, &pos, &pos);

  00076	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  00079	50		 push	 eax
  0007a	8d 4d f4	 lea	 ecx, DWORD PTR _pos$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00081	52		 push	 edx
  00082	e8 00 00 00 00	 call	 ?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_world_coords_from_screen

; 1437 : 
; 1438 : 		map_dimensions->x = pos.x;

  00087	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0008a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp]
  0008f	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1439 : 		map_dimensions->z = pos.z;

  00093	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00096	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  0009b	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1440 : 
; 1441 : 		bound_map_extents (obj, NULL, NULL);

  000a0	6a 00		 push	 0
  000a2	6a 00		 push	 0
  000a4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents

; 1442 : 
; 1443 : }

  000ad	5f		 pop	 edi
  000ae	5e		 pop	 esi
  000af	5b		 pop	 ebx
  000b0	8b e5		 mov	 esp, ebp
  000b2	5d		 pop	 ebp
  000b3	c2 04 00	 ret	 4
?map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z ENDP		; map_wheel_centralise
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv296 = -88						; size = 8
tv211 = -88						; size = 4
tv190 = -88						; size = 4
tv171 = -88						; size = 4
tv145 = -88						; size = 4
tv95 = -88						; size = 4
tv203 = -84						; size = 4
tv183 = -84						; size = 4
tv164 = -84						; size = 4
tv157 = -84						; size = 4
tv138 = -84						; size = 4
tv87 = -84						; size = 4
_map_dimensions$ = -16					; size = 4
_side$ = -12						; size = 4
_pos$ = -8						; size = 4
_sector$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z PROC ; check_visible_entity, COMDAT

; 1235 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1236 : 	entity
; 1237 : 		*sector;
; 1238 : 
; 1239 : 	vec3d
; 1240 : 		*pos;
; 1241 : 
; 1242 : 	int
; 1243 : 		side;
; 1244 : 
; 1245 : 	map_dimension_type
; 1246 : 		*map_dimensions;
; 1247 : 
; 1248 : 	ASSERT (en);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@check_visi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00014	83 c0 0d	 add	 eax, 13			; 0000000dH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@check_visi:

; 1249 : 
; 1250 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1251 : 
; 1252 : 	ASSERT (map_dimensions);

  0003c	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00040	75 18		 jne	 SHORT $LN3@check_visi
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00047	83 c0 11	 add	 eax, 17			; 00000011H
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00055	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@check_visi:

; 1253 : 
; 1254 : 	#ifdef DEBUG
; 1255 : 
; 1256 : 	//
; 1257 : 	// For developement purposes, if map fog option off - show everything...
; 1258 : 	//
; 1259 : 
; 1260 : 	if (!(global_layer_controls & (1 << MAP_LAYER_CONTROL_FOG_OF_WAR)))

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0005f	83 e0 02	 and	 eax, 2
  00062	75 0a		 jne	 SHORT $LN4@check_visi

; 1261 : 	{
; 1262 : 		return TRUE;

  00064	b8 01 00 00 00	 mov	 eax, 1
  00069	e9 00 03 00 00	 jmp	 $LN1@check_visi
$LN4@check_visi:

; 1263 : 	}
; 1264 : 
; 1265 : 	#endif
; 1266 : 
; 1267 : 	side = get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0006e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00075	74 0c		 je	 SHORT $LN11@check_visi
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0007c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007e	89 4d ac	 mov	 DWORD PTR tv87[ebp], ecx
  00081	eb 21		 jmp	 SHORT $LN12@check_visi
$LN11@check_visi:
  00083	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00089	83 c2 20	 add	 edx, 32			; 00000020H
  0008c	52		 push	 edx
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN12@check_visi:
  000a4	b9 01 00 00 00	 mov	 ecx, 1
  000a9	85 c9		 test	 ecx, ecx
  000ab	74 09		 je	 SHORT $LN13@check_visi
  000ad	c7 45 a8 bb 00
	00 00		 mov	 DWORD PTR tv95[ebp], 187 ; 000000bbH
  000b4	eb 21		 jmp	 SHORT $LN14@check_visi
$LN13@check_visi:
  000b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  000bc	83 c2 20	 add	 edx, 32			; 00000020H
  000bf	52		 push	 edx
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d0	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN14@check_visi:
  000d7	68 bb 00 00 00	 push	 187			; 000000bbH
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000e2	51		 push	 ecx
  000e3	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 1116
  000ea	8b 45 a8	 mov	 eax, DWORD PTR tv95[ebp]
  000ed	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000f4	ff d1		 call	 ecx
  000f6	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax

; 1268 : 
; 1269 : 	if (get_local_entity_int_value (en, INT_TYPE_SIDE) == side)

  000f9	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  000fd	74 0a		 je	 SHORT $LN15@check_visi
  000ff	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00102	8b 08		 mov	 ecx, DWORD PTR [eax]
  00104	89 4d ac	 mov	 DWORD PTR tv138[ebp], ecx
  00107	eb 1d		 jmp	 SHORT $LN16@check_visi
$LN15@check_visi:
  00109	68 f5 04 00 00	 push	 1269			; 000004f5H
  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00119	52		 push	 edx
  0011a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN16@check_visi:
  00126	b8 01 00 00 00	 mov	 eax, 1
  0012b	85 c0		 test	 eax, eax
  0012d	74 09		 je	 SHORT $LN17@check_visi
  0012f	c7 45 a8 bb 00
	00 00		 mov	 DWORD PTR tv145[ebp], 187 ; 000000bbH
  00136	eb 1d		 jmp	 SHORT $LN18@check_visi
$LN17@check_visi:
  00138	68 f5 04 00 00	 push	 1269			; 000004f5H
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00142	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00148	51		 push	 ecx
  00149	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN18@check_visi:
  00155	68 bb 00 00 00	 push	 187			; 000000bbH
  0015a	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  0015d	52		 push	 edx
  0015e	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv138[ebp], 1116
  00165	8b 4d a8	 mov	 ecx, DWORD PTR tv145[ebp]
  00168	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0016f	ff d2		 call	 edx
  00171	3b 45 f4	 cmp	 eax, DWORD PTR _side$[ebp]
  00174	75 0a		 jne	 SHORT $LN5@check_visi

; 1270 : 	{
; 1271 : 		return TRUE;

  00176	b8 01 00 00 00	 mov	 eax, 1
  0017b	e9 ee 01 00 00	 jmp	 $LN1@check_visi
$LN5@check_visi:

; 1272 : 	}
; 1273 : 
; 1274 : 	if (get_local_entity_type (en) == ENTITY_TYPE_KEYSITE)

  00180	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00184	74 0a		 je	 SHORT $LN19@check_visi
  00186	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00189	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018b	89 4d ac	 mov	 DWORD PTR tv157[ebp], ecx
  0018e	eb 1d		 jmp	 SHORT $LN20@check_visi
$LN19@check_visi:
  00190	68 fa 04 00 00	 push	 1274			; 000004faH
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a0	52		 push	 edx
  001a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a6	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN20@check_visi:
  001ad	83 7d ac 0f	 cmp	 DWORD PTR tv157[ebp], 15 ; 0000000fH
  001b1	0f 85 83 00 00
	00		 jne	 $LN7@check_visi

; 1275 : 	{
; 1276 : 		if (get_local_entity_parent (en, LIST_TYPE_CAMPAIGN_OBJECTIVE))

  001b7	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  001bb	74 0a		 je	 SHORT $LN21@check_visi
  001bd	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  001c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c2	89 4d ac	 mov	 DWORD PTR tv164[ebp], ecx
  001c5	eb 1d		 jmp	 SHORT $LN22@check_visi
$LN21@check_visi:
  001c7	68 fc 04 00 00	 push	 1276			; 000004fcH
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d7	52		 push	 edx
  001d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dd	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN22@check_visi:
  001e4	b8 01 00 00 00	 mov	 eax, 1
  001e9	85 c0		 test	 eax, eax
  001eb	74 09		 je	 SHORT $LN23@check_visi
  001ed	c7 45 a8 05 00
	00 00		 mov	 DWORD PTR tv171[ebp], 5
  001f4	eb 1d		 jmp	 SHORT $LN24@check_visi
$LN23@check_visi:
  001f6	68 fc 04 00 00	 push	 1276			; 000004fcH
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00200	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00206	51		 push	 ecx
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN24@check_visi:
  00213	6a 05		 push	 5
  00215	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00218	52		 push	 edx
  00219	69 45 ac b4 00
	00 00		 imul	 eax, DWORD PTR tv164[ebp], 180
  00220	8b 4d a8	 mov	 ecx, DWORD PTR tv171[ebp]
  00223	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0022a	ff d2		 call	 edx
  0022c	85 c0		 test	 eax, eax
  0022e	74 0a		 je	 SHORT $LN7@check_visi

; 1277 : 		{
; 1278 : 			return TRUE;

  00230	b8 01 00 00 00	 mov	 eax, 1
  00235	e9 34 01 00 00	 jmp	 $LN1@check_visi
$LN7@check_visi:

; 1279 : 		}
; 1280 : 	}
; 1281 : 
; 1282 : 	if (!get_local_entity_int_value (en, INT_TYPE_HIDDEN_BY_FOG_OF_WAR))

  0023a	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0023e	74 0a		 je	 SHORT $LN25@check_visi
  00240	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00243	8b 08		 mov	 ecx, DWORD PTR [eax]
  00245	89 4d ac	 mov	 DWORD PTR tv183[ebp], ecx
  00248	eb 1d		 jmp	 SHORT $LN26@check_visi
$LN25@check_visi:
  0024a	68 02 05 00 00	 push	 1282			; 00000502H
  0024f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00254	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0025a	52		 push	 edx
  0025b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00260	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN26@check_visi:
  00267	b8 01 00 00 00	 mov	 eax, 1
  0026c	85 c0		 test	 eax, eax
  0026e	74 09		 je	 SHORT $LN27@check_visi
  00270	c7 45 a8 56 00
	00 00		 mov	 DWORD PTR tv190[ebp], 86 ; 00000056H
  00277	eb 1d		 jmp	 SHORT $LN28@check_visi
$LN27@check_visi:
  00279	68 02 05 00 00	 push	 1282			; 00000502H
  0027e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00283	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00289	51		 push	 ecx
  0028a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv190[ebp], 0
$LN28@check_visi:
  00296	6a 56		 push	 86			; 00000056H
  00298	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  0029b	52		 push	 edx
  0029c	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv183[ebp], 1116
  002a3	8b 4d a8	 mov	 ecx, DWORD PTR tv190[ebp]
  002a6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002ad	ff d2		 call	 edx
  002af	85 c0		 test	 eax, eax
  002b1	75 0a		 jne	 SHORT $LN8@check_visi

; 1283 : 	{
; 1284 : 		return TRUE;

  002b3	b8 01 00 00 00	 mov	 eax, 1
  002b8	e9 b1 00 00 00	 jmp	 $LN1@check_visi
$LN8@check_visi:

; 1285 : 	}
; 1286 : 
; 1287 : 	pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  002bd	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  002c1	74 0a		 je	 SHORT $LN29@check_visi
  002c3	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  002c6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c8	89 4d ac	 mov	 DWORD PTR tv203[ebp], ecx
  002cb	eb 21		 jmp	 SHORT $LN30@check_visi
$LN29@check_visi:
  002cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  002d3	83 c2 34	 add	 edx, 52			; 00000034H
  002d6	52		 push	 edx
  002d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e7	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv203[ebp], 0
$LN30@check_visi:
  002ee	b9 01 00 00 00	 mov	 ecx, 1
  002f3	85 c9		 test	 ecx, ecx
  002f5	74 09		 je	 SHORT $LN31@check_visi
  002f7	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv211[ebp], 8
  002fe	eb 21		 jmp	 SHORT $LN32@check_visi
$LN31@check_visi:
  00300	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00306	83 c2 34	 add	 edx, 52			; 00000034H
  00309	52		 push	 edx
  0030a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031a	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN32@check_visi:
  00321	6a 08		 push	 8
  00323	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00326	51		 push	 ecx
  00327	6b 55 ac 60	 imul	 edx, DWORD PTR tv203[ebp], 96
  0032b	8b 45 a8	 mov	 eax, DWORD PTR tv211[ebp]
  0032e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00335	ff d1		 call	 ecx
  00337	89 45 f8	 mov	 DWORD PTR _pos$[ebp], eax

; 1288 : 
; 1289 : 	sector = get_local_sector_entity (pos);

  0033a	8b 45 f8	 mov	 eax, DWORD PTR _pos$[ebp]
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  00343	89 45 fc	 mov	 DWORD PTR _sector$[ebp], eax

; 1290 : 
; 1291 : 	if (get_sector_fog_of_war_value (sector, (entity_sides) side) > 0.25)

  00346	8b 45 f4	 mov	 eax, DWORD PTR _side$[ebp]
  00349	50		 push	 eax
  0034a	8b 4d fc	 mov	 ecx, DWORD PTR _sector$[ebp]
  0034d	51		 push	 ecx
  0034e	e8 00 00 00 00	 call	 ?get_sector_fog_of_war_value@@YGMPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_sector_fog_of_war_value
  00353	dd 5d a8	 fstp	 QWORD PTR tv296[ebp]
  00356	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv296[ebp]
  0035b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd0000000000000
  00363	76 07		 jbe	 SHORT $LN9@check_visi

; 1292 : 	{
; 1293 : 		return TRUE;

  00365	b8 01 00 00 00	 mov	 eax, 1
  0036a	eb 02		 jmp	 SHORT $LN1@check_visi
$LN9@check_visi:

; 1294 : 	}
; 1295 : 
; 1296 : 	return FALSE;

  0036c	33 c0		 xor	 eax, eax
$LN1@check_visi:

; 1297 : }

  0036e	5f		 pop	 edi
  0036f	5e		 pop	 esi
  00370	5b		 pop	 ebx
  00371	8b e5		 mov	 esp, ebp
  00373	5d		 pop	 ebp
  00374	c2 08 00	 ret	 8
?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ENDP ; check_visible_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?player_map_updated@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv80 = -80						; size = 4
tv89 = -76						; size = 4
tv72 = -76						; size = 4
_player_task$1 = -8					; size = 4
_group$2 = -4						; size = 4
_changed_task$ = 8					; size = 4
?player_map_updated@@YGXPAUENTITY@@@Z PROC		; player_map_updated, COMDAT

; 1219 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1220 : 	if (get_gunship_entity() && get_global_gunship_type() == GUNSHIP_TYPE_HIND)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	0f 84 c9 00 00
	00		 je	 $LN1@player_map
  00016	83 3d 0c 00 00
	00 05		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12, 5
  0001d	0f 85 bc 00 00
	00		 jne	 $LN1@player_map

; 1221 : 	{
; 1222 : 		entity* group = get_local_entity_parent(get_gunship_entity(), LIST_TYPE_MEMBER);

  00023	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0002a	74 0c		 je	 SHORT $LN5@player_map
  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00031	8b 08		 mov	 ecx, DWORD PTR [eax]
  00033	89 4d b4	 mov	 DWORD PTR tv72[ebp], ecx
  00036	eb 21		 jmp	 SHORT $LN6@player_map
$LN5@player_map:
  00038	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??player_map_updated@@YGXPAUENTITY@@@Z@4JA
  0003e	83 c2 03	 add	 edx, 3
  00041	52		 push	 edx
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00052	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN6@player_map:
  00059	b9 01 00 00 00	 mov	 ecx, 1
  0005e	85 c9		 test	 ecx, ecx
  00060	74 09		 je	 SHORT $LN7@player_map
  00062	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv80[ebp], 25	; 00000019H
  00069	eb 21		 jmp	 SHORT $LN8@player_map
$LN7@player_map:
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??player_map_updated@@YGXPAUENTITY@@@Z@4JA
  00071	83 c2 03	 add	 edx, 3
  00074	52		 push	 edx
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN8@player_map:
  0008c	6a 19		 push	 25			; 00000019H
  0008e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00094	51		 push	 ecx
  00095	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv72[ebp], 180
  0009c	8b 45 b0	 mov	 eax, DWORD PTR tv80[ebp]
  0009f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a6	ff d1		 call	 ecx
  000a8	89 45 fc	 mov	 DWORD PTR _group$2[ebp], eax

; 1223 : 		entity* player_task = group ? get_local_group_primary_task(group) : NULL;

  000ab	83 7d fc 00	 cmp	 DWORD PTR _group$2[ebp], 0
  000af	74 0e		 je	 SHORT $LN9@player_map
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _group$2[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_group_primary_task
  000ba	89 45 b4	 mov	 DWORD PTR tv89[ebp], eax
  000bd	eb 07		 jmp	 SHORT $LN10@player_map
$LN9@player_map:
  000bf	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN10@player_map:
  000c6	8b 4d b4	 mov	 ecx, DWORD PTR tv89[ebp]
  000c9	89 4d f8	 mov	 DWORD PTR _player_task$1[ebp], ecx

; 1224 : 
; 1225 : 		if (player_task && changed_task == player_task)

  000cc	83 7d f8 00	 cmp	 DWORD PTR _player_task$1[ebp], 0
  000d0	74 0d		 je	 SHORT $LN1@player_map
  000d2	8b 45 08	 mov	 eax, DWORD PTR _changed_task$[ebp]
  000d5	3b 45 f8	 cmp	 eax, DWORD PTR _player_task$1[ebp]
  000d8	75 05		 jne	 SHORT $LN1@player_map

; 1226 : 			hind_map_waypoints_changed();

  000da	e8 00 00 00 00	 call	 ?hind_map_waypoints_changed@@YGXXZ ; hind_map_waypoints_changed
$LN1@player_map:

; 1227 : 	}
; 1228 : }

  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5b		 pop	 ebx
  000e2	8b e5		 mov	 esp, ebp
  000e4	5d		 pop	 ebp
  000e5	c2 04 00	 ret	 4
?player_map_updated@@YGXPAUENTITY@@@Z ENDP		; player_map_updated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z
_TEXT	SEGMENT
_filename$ = -256					; size = 256
_name$ = 8						; size = 4
_icons$ = 12						; size = 4
?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z PROC ; load_misc_3state_icons, COMDAT

; 967  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 01 00
	00		 sub	 esp, 320		; 00000140H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 968  : 	char
; 969  : 		filename [256];
; 970  : 
; 971  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%sprp.psd", name);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0000f	50		 push	 eax
  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GBNODDF@graphics?2ui?2cohokum?2key?2?$CFsprp?4p@
  00015	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _filename$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 _sprintf
  00021	83 c4 0c	 add	 esp, 12			; 0000000cH

; 972  : 
; 973  : 	icons [0] = create_texture_graphic (filename);

  00024	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00030	b9 04 00 00 00	 mov	 ecx, 4
  00035	6b d1 00	 imul	 edx, ecx, 0
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _icons$[ebp]
  0003b	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 974  : 
; 975  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%swht.psd", name);

  0003e	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@FEOHGLLK@graphics?2ui?2cohokum?2key?2?$CFswht?4p@
  00047	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _filename$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _sprintf
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 976  : 
; 977  : 	icons [1] = create_texture_graphic (filename);

  00056	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00062	b9 04 00 00 00	 mov	 ecx, 4
  00067	c1 e1 00	 shl	 ecx, 0
  0006a	8b 55 0c	 mov	 edx, DWORD PTR _icons$[ebp]
  0006d	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 978  : 
; 979  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%syel.psd", name);

  00070	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00073	50		 push	 eax
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MPDPJILO@graphics?2ui?2cohokum?2key?2?$CFsyel?4p@
  00079	8d 8d 00 ff ff
	ff		 lea	 ecx, DWORD PTR _filename$[ebp]
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 _sprintf
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH

; 980  : 
; 981  : 	icons [2] = create_texture_graphic (filename);

  00088	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00094	b9 04 00 00 00	 mov	 ecx, 4
  00099	d1 e1		 shl	 ecx, 1
  0009b	8b 55 0c	 mov	 edx, DWORD PTR _icons$[ebp]
  0009e	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 982  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ENDP ; load_misc_3state_icons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?load_key_icons@@YGXH@Z
_TEXT	SEGMENT
_filename$ = -256					; size = 256
_layer$ = 8						; size = 4
?load_key_icons@@YGXH@Z PROC				; load_key_icons, COMDAT

; 943  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 01 00
	00		 sub	 esp, 320		; 00000140H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 944  : 	char
; 945  : 		filename [256];
; 946  : 
; 947  : 	ASSERT ((layer >= 0) && (layer < NUM_MAP_LAYER_CONTROLS));

  0000c	83 7d 08 00	 cmp	 DWORD PTR _layer$[ebp], 0
  00010	7c 06		 jl	 SHORT $LN3@load_key_i
  00012	83 7d 08 0b	 cmp	 DWORD PTR _layer$[ebp], 11 ; 0000000bH
  00016	7c 18		 jl	 SHORT $LN2@load_key_i
$LN3@load_key_i:
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_key_icons@@YGXH@Z@4JA
  0001d	83 c0 04	 add	 eax, 4
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@DHGIIPI@?$CIlayer?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIlayer?5?$DM?5NUM_MA@
  0002b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@load_key_i:

; 948  : 
; 949  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%sprp.psd", layer_control_button_data [layer].graphic_filename);

  00030	6b 45 08 0c	 imul	 eax, DWORD PTR _layer$[ebp], 12
  00034	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B[eax+8]
  0003a	51		 push	 ecx
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GBNODDF@graphics?2ui?2cohokum?2key?2?$CFsprp?4p@
  00040	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _filename$[ebp]
  00046	52		 push	 edx
  00047	e8 00 00 00 00	 call	 _sprintf
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 950  : 
; 951  : 	key_icons [layer][0] = create_texture_graphic (filename);

  0004f	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  0005b	6b 4d 08 0c	 imul	 ecx, DWORD PTR _layer$[ebp], 12
  0005f	ba 04 00 00 00	 mov	 edx, 4
  00064	6b d2 00	 imul	 edx, edx, 0
  00067	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[ecx+edx], eax

; 952  : 
; 953  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%swht.psd", layer_control_button_data [layer].graphic_filename);

  0006e	6b 45 08 0c	 imul	 eax, DWORD PTR _layer$[ebp], 12
  00072	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B[eax+8]
  00078	51		 push	 ecx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@FEOHGLLK@graphics?2ui?2cohokum?2key?2?$CFswht?4p@
  0007e	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _filename$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 _sprintf
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 954  : 
; 955  : 	key_icons [layer][1] = create_texture_graphic (filename);

  0008d	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00099	6b 4d 08 0c	 imul	 ecx, DWORD PTR _layer$[ebp], 12
  0009d	ba 04 00 00 00	 mov	 edx, 4
  000a2	c1 e2 00	 shl	 edx, 0
  000a5	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[ecx+edx], eax

; 956  : 
; 957  : 	sprintf (filename, "graphics\\ui\\cohokum\\key\\%syel.psd", layer_control_button_data [layer].graphic_filename);

  000ac	6b 45 08 0c	 imul	 eax, DWORD PTR _layer$[ebp], 12
  000b0	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B[eax+8]
  000b6	51		 push	 ecx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@MPDPJILO@graphics?2ui?2cohokum?2key?2?$CFsyel?4p@
  000bc	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _filename$[ebp]
  000c2	52		 push	 edx
  000c3	e8 00 00 00 00	 call	 _sprintf
  000c8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 958  : 
; 959  : 	key_icons [layer][2] = create_texture_graphic (filename);

  000cb	8d 85 00 ff ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  000d7	6b 4d 08 0c	 imul	 ecx, DWORD PTR _layer$[ebp], 12
  000db	ba 04 00 00 00	 mov	 edx, 4
  000e0	d1 e2		 shl	 edx, 1
  000e2	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[ecx+edx], eax

; 960  : }

  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 04 00	 ret	 4
?load_key_icons@@YGXH@Z ENDP				; load_key_icons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?load_map_icon@@YGXHHPBD@Z
_TEXT	SEGMENT
_icon$ = 8						; size = 4
_side$ = 12						; size = 4
_filename$ = 16						; size = 4
?load_map_icon@@YGXHHPBD@Z PROC				; load_map_icon, COMDAT

; 928  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 929  : 	ASSERT ((side >= 0) && (side < NUM_ENTITY_SIDES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _side$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN3@load_map_i
  0000f	83 7d 0c 03	 cmp	 DWORD PTR _side$[ebp], 3
  00013	7c 18		 jl	 SHORT $LN2@load_map_i
$LN3@load_map_i:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@FJIGBOO@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?5NUM_ENTI@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@load_map_i:

; 930  : 
; 931  : 	ASSERT ((icon >= 0) && (icon < NUM_MAP_ICON_TYPES));

  0002d	83 7d 08 00	 cmp	 DWORD PTR _icon$[ebp], 0
  00031	7c 06		 jl	 SHORT $LN5@load_map_i
  00033	83 7d 08 24	 cmp	 DWORD PTR _icon$[ebp], 36 ; 00000024H
  00037	7c 18		 jl	 SHORT $LN4@load_map_i
$LN5@load_map_i:
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA
  0003e	83 c0 03	 add	 eax, 3
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@GMNOCBDC@?$CIicon?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIicon?5?$DM?5NUM_MAP_@
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@load_map_i:

; 932  : 
; 933  : 	ASSERT (filename);

  00051	83 7d 10 00	 cmp	 DWORD PTR _filename$[ebp], 0
  00055	75 18		 jne	 SHORT $LN6@load_map_i
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_map_icon@@YGXHHPBD@Z@4JA
  0005c	83 c0 05	 add	 eax, 5
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_08BABJIOEM@filename@
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@load_map_i:

; 934  : 
; 935  : 	map_icons [side][icon] = create_texture_graphic (filename);

  0006f	8b 45 10	 mov	 eax, DWORD PTR _filename$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00078	69 4d 0c 90 00
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 144
  0007f	8b 55 08	 mov	 edx, DWORD PTR _icon$[ebp]
  00082	89 84 91 00 00
	00 00		 mov	 DWORD PTR ?map_icons@@3PAY0CE@PAUTEXTURE_GRAPHIC@@A[ecx+edx*4], eax

; 936  : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c2 0c 00	 ret	 12			; 0000000cH
?load_map_icon@@YGXHHPBD@Z ENDP				; load_map_icon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv357 = -108						; size = 4
tv431 = -104						; size = 4
tv137 = -104						; size = 4
tv303 = -100						; size = 4
tv283 = -100						; size = 4
tv263 = -100						; size = 4
tv243 = -100						; size = 4
tv223 = -100						; size = 4
tv200 = -100						; size = 4
tv179 = -100						; size = 4
tv156 = -100						; size = 4
tv130 = -100						; size = 4
tv78 = -100						; size = 4
tv295 = -96						; size = 4
tv275 = -96						; size = 4
tv255 = -96						; size = 4
tv235 = -96						; size = 4
tv215 = -96						; size = 4
tv192 = -96						; size = 4
tv171 = -96						; size = 4
tv148 = -96						; size = 4
tv90 = -96						; size = 4
tv70 = -96						; size = 4
_time_since_last_update$1 = -28				; size = 4
_last_update$2 = -24					; size = 4
_current_time$3 = -20					; size = 4
_day$4 = -16						; size = 4
_pos$ = -12						; size = 4
_is_enemy$ = -8						; size = 4
_side$ = -4						; size = 4
_en$ = 8						; size = 4
?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z PROC ; get_last_known_position, COMDAT

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 282  : 	// arneh, 2007-07-08 - only update map position if update interval has passed
; 283  : 
; 284  : 	int
; 285  : 		side,
; 286  : 		is_enemy;
; 287  : 
; 288  : 	vec3d* pos;
; 289  : 
; 290  : 	side = get_local_entity_int_value (en, INT_TYPE_SIDE);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@get_last_k
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d a0	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN8@get_last_k
$LN7@get_last_k:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  0001f	83 c2 09	 add	 edx, 9
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN8@get_last_k:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN9@get_last_k
  00043	c7 45 9c bb 00
	00 00		 mov	 DWORD PTR tv78[ebp], 187 ; 000000bbH
  0004a	eb 21		 jmp	 SHORT $LN10@get_last_k
$LN9@get_last_k:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00052	83 c2 09	 add	 edx, 9
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN10@get_last_k:
  0006d	68 bb 00 00 00	 push	 187			; 000000bbH
  00072	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00075	51		 push	 ecx
  00076	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 1116
  0007d	8b 45 9c	 mov	 eax, DWORD PTR tv78[ebp]
  00080	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00087	ff d1		 call	 ecx
  00089	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 291  : 	is_enemy = side != get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0008c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00093	74 0c		 je	 SHORT $LN11@get_last_k
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0009a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009c	89 4d a0	 mov	 DWORD PTR tv90[ebp], ecx
  0009f	eb 21		 jmp	 SHORT $LN12@get_last_k
$LN11@get_last_k:
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  000a7	83 c2 0a	 add	 edx, 10			; 0000000aH
  000aa	52		 push	 edx
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000bb	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN12@get_last_k:
  000c2	b9 01 00 00 00	 mov	 ecx, 1
  000c7	85 c9		 test	 ecx, ecx
  000c9	74 09		 je	 SHORT $LN13@get_last_k
  000cb	c7 45 9c bb 00
	00 00		 mov	 DWORD PTR tv130[ebp], 187 ; 000000bbH
  000d2	eb 21		 jmp	 SHORT $LN14@get_last_k
$LN13@get_last_k:
  000d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  000da	83 c2 0a	 add	 edx, 10			; 0000000aH
  000dd	52		 push	 edx
  000de	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ee	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN14@get_last_k:
  000f5	68 bb 00 00 00	 push	 187			; 000000bbH
  000fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00100	51		 push	 ecx
  00101	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv90[ebp], 1116
  00108	8b 45 9c	 mov	 eax, DWORD PTR tv130[ebp]
  0010b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00112	ff d1		 call	 ecx
  00114	39 45 fc	 cmp	 DWORD PTR _side$[ebp], eax
  00117	74 09		 je	 SHORT $LN15@get_last_k
  00119	c7 45 98 01 00
	00 00		 mov	 DWORD PTR tv137[ebp], 1
  00120	eb 07		 jmp	 SHORT $LN16@get_last_k
$LN15@get_last_k:
  00122	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN16@get_last_k:
  00129	8b 55 98	 mov	 edx, DWORD PTR tv137[ebp]
  0012c	89 55 f8	 mov	 DWORD PTR _is_enemy$[ebp], edx

; 292  : 
; 293  : 	if (command_line_campaign_map_update_interval && is_enemy && en->type == ENTITY_TYPE_GROUP)

  0012f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_campaign_map_update_interval@@3HA, 0 ; command_line_campaign_map_update_interval
  00136	0f 84 fd 03 00
	00		 je	 $LN2@get_last_k
  0013c	83 7d f8 00	 cmp	 DWORD PTR _is_enemy$[ebp], 0
  00140	0f 84 f3 03 00
	00		 je	 $LN2@get_last_k
  00146	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00149	83 38 0c	 cmp	 DWORD PTR [eax], 12	; 0000000cH
  0014c	0f 85 e7 03 00
	00		 jne	 $LN2@get_last_k

; 294  : 	{
; 295  : 		// arneh, 2007-07-08 - only update map position if update interval has passed
; 296  : 
; 297  : 		int day = get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY);

  00152	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00159	74 0c		 je	 SHORT $LN17@get_last_k
  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00160	8b 08		 mov	 ecx, DWORD PTR [eax]
  00162	89 4d a0	 mov	 DWORD PTR tv148[ebp], ecx
  00165	eb 21		 jmp	 SHORT $LN18@get_last_k
$LN17@get_last_k:
  00167	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  0016d	83 c2 10	 add	 edx, 16			; 00000010H
  00170	52		 push	 edx
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00176	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00181	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN18@get_last_k:
  00188	b9 01 00 00 00	 mov	 ecx, 1
  0018d	85 c9		 test	 ecx, ecx
  0018f	74 09		 je	 SHORT $LN19@get_last_k
  00191	c7 45 9c 26 00
	00 00		 mov	 DWORD PTR tv156[ebp], 38 ; 00000026H
  00198	eb 21		 jmp	 SHORT $LN20@get_last_k
$LN19@get_last_k:
  0019a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  001a0	83 c2 10	 add	 edx, 16			; 00000010H
  001a3	52		 push	 edx
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b4	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN20@get_last_k:
  001bb	6a 26		 push	 38			; 00000026H
  001bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  001c3	51		 push	 ecx
  001c4	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv148[ebp], 1116
  001cb	8b 45 9c	 mov	 eax, DWORD PTR tv156[ebp]
  001ce	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001d5	ff d1		 call	 ecx
  001d7	89 45 f0	 mov	 DWORD PTR _day$4[ebp], eax

; 298  : 		float current_time = current_time = (day * 24 *3600) + get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  001da	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  001e1	74 0c		 je	 SHORT $LN21@get_last_k
  001e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  001e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ea	89 4d a0	 mov	 DWORD PTR tv171[ebp], ecx
  001ed	eb 21		 jmp	 SHORT $LN22@get_last_k
$LN21@get_last_k:
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  001f5	83 c2 11	 add	 edx, 17			; 00000011H
  001f8	52		 push	 edx
  001f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00209	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN22@get_last_k:
  00210	b9 01 00 00 00	 mov	 ecx, 1
  00215	85 c9		 test	 ecx, ecx
  00217	74 09		 je	 SHORT $LN23@get_last_k
  00219	c7 45 9c 8e 00
	00 00		 mov	 DWORD PTR tv179[ebp], 142 ; 0000008eH
  00220	eb 21		 jmp	 SHORT $LN24@get_last_k
$LN23@get_last_k:
  00222	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00228	83 c2 11	 add	 edx, 17			; 00000011H
  0022b	52		 push	 edx
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00231	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023c	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN24@get_last_k:
  00243	6b 4d f0 18	 imul	 ecx, DWORD PTR _day$4[ebp], 24
  00247	69 d1 10 0e 00
	00		 imul	 edx, ecx, 3600
  0024d	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00251	68 8e 00 00 00	 push	 142			; 0000008eH
  00256	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0025b	50		 push	 eax
  0025c	69 4d a0 bc 02
	00 00		 imul	 ecx, DWORD PTR tv171[ebp], 700
  00263	8b 55 9c	 mov	 edx, DWORD PTR tv179[ebp]
  00266	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[ecx+edx*4]
  0026d	f3 0f 11 45 98	 movss	 DWORD PTR tv431[ebp], xmm0
  00272	ff d0		 call	 eax
  00274	d9 5d 94	 fstp	 DWORD PTR tv357[ebp]
  00277	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR tv431[ebp]
  0027c	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR tv357[ebp]
  00281	f3 0f 11 45 ec	 movss	 DWORD PTR _current_time$3[ebp], xmm0
  00286	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _current_time$3[ebp]
  0028b	f3 0f 11 45 ec	 movss	 DWORD PTR _current_time$3[ebp], xmm0

; 299  : 
; 300  : 		float last_update = get_local_entity_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME);

  00290	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00294	74 0a		 je	 SHORT $LN25@get_last_k
  00296	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00299	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029b	89 4d a0	 mov	 DWORD PTR tv192[ebp], ecx
  0029e	eb 21		 jmp	 SHORT $LN26@get_last_k
$LN25@get_last_k:
  002a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  002a6	83 c2 13	 add	 edx, 19			; 00000013H
  002a9	52		 push	 edx
  002aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002b4	50		 push	 eax
  002b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ba	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN26@get_last_k:
  002c1	b9 01 00 00 00	 mov	 ecx, 1
  002c6	85 c9		 test	 ecx, ecx
  002c8	74 09		 je	 SHORT $LN27@get_last_k
  002ca	c7 45 9c 3c 00
	00 00		 mov	 DWORD PTR tv200[ebp], 60 ; 0000003cH
  002d1	eb 21		 jmp	 SHORT $LN28@get_last_k
$LN27@get_last_k:
  002d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  002d9	83 c2 13	 add	 edx, 19			; 00000013H
  002dc	52		 push	 edx
  002dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002e7	50		 push	 eax
  002e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ed	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN28@get_last_k:
  002f4	6a 3c		 push	 60			; 0000003cH
  002f6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002f9	51		 push	 ecx
  002fa	69 55 a0 bc 02
	00 00		 imul	 edx, DWORD PTR tv192[ebp], 700
  00301	8b 45 9c	 mov	 eax, DWORD PTR tv200[ebp]
  00304	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0030b	ff d1		 call	 ecx
  0030d	d9 5d e8	 fstp	 DWORD PTR _last_update$2[ebp]

; 301  : 		float time_since_last_update = current_time - last_update;

  00310	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _current_time$3[ebp]
  00315	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _last_update$2[ebp]
  0031a	f3 0f 11 45 e4	 movss	 DWORD PTR _time_since_last_update$1[ebp], xmm0

; 302  : 
; 303  : 		if (time_since_last_update > command_line_campaign_map_update_interval)

  0031f	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?command_line_campaign_map_update_interval@@3HA ; command_line_campaign_map_update_interval
  00327	f3 0f 10 4d e4	 movss	 xmm1, DWORD PTR _time_since_last_update$1[ebp]
  0032c	0f 2f c8	 comiss	 xmm1, xmm0
  0032f	0f 86 85 01 00
	00		 jbe	 $LN4@get_last_k

; 304  : 		{
; 305  : 			pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00335	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00339	74 0a		 je	 SHORT $LN29@get_last_k
  0033b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0033e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00340	89 4d a0	 mov	 DWORD PTR tv215[ebp], ecx
  00343	eb 21		 jmp	 SHORT $LN30@get_last_k
$LN29@get_last_k:
  00345	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  0034b	83 c2 18	 add	 edx, 24			; 00000018H
  0034e	52		 push	 edx
  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00354	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00359	50		 push	 eax
  0035a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035f	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN30@get_last_k:
  00366	b9 01 00 00 00	 mov	 ecx, 1
  0036b	85 c9		 test	 ecx, ecx
  0036d	74 09		 je	 SHORT $LN31@get_last_k
  0036f	c7 45 9c 08 00
	00 00		 mov	 DWORD PTR tv223[ebp], 8
  00376	eb 21		 jmp	 SHORT $LN32@get_last_k
$LN31@get_last_k:
  00378	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  0037e	83 c2 18	 add	 edx, 24			; 00000018H
  00381	52		 push	 edx
  00382	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00392	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv223[ebp], 0
$LN32@get_last_k:
  00399	6a 08		 push	 8
  0039b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0039e	51		 push	 ecx
  0039f	6b 55 a0 60	 imul	 edx, DWORD PTR tv215[ebp], 96
  003a3	8b 45 9c	 mov	 eax, DWORD PTR tv223[ebp]
  003a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  003ad	ff d1		 call	 ecx
  003af	89 45 f4	 mov	 DWORD PTR _pos$[ebp], eax

; 306  : 
; 307  : 			set_local_entity_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME, current_time);

  003b2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003b6	74 0a		 je	 SHORT $LN33@get_last_k
  003b8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003bd	89 4d a0	 mov	 DWORD PTR tv235[ebp], ecx
  003c0	eb 21		 jmp	 SHORT $LN34@get_last_k
$LN33@get_last_k:
  003c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  003c8	83 c2 1a	 add	 edx, 26			; 0000001aH
  003cb	52		 push	 edx
  003cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003dc	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN34@get_last_k:
  003e3	b9 01 00 00 00	 mov	 ecx, 1
  003e8	85 c9		 test	 ecx, ecx
  003ea	74 09		 je	 SHORT $LN35@get_last_k
  003ec	c7 45 9c 3c 00
	00 00		 mov	 DWORD PTR tv243[ebp], 60 ; 0000003cH
  003f3	eb 21		 jmp	 SHORT $LN36@get_last_k
$LN35@get_last_k:
  003f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  003fb	83 c2 1a	 add	 edx, 26			; 0000001aH
  003fe	52		 push	 edx
  003ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00409	50		 push	 eax
  0040a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040f	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv243[ebp], 0
$LN36@get_last_k:
  00416	51		 push	 ecx
  00417	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _current_time$3[ebp]
  0041c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00421	6a 3c		 push	 60			; 0000003cH
  00423	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00426	51		 push	 ecx
  00427	69 55 a0 bc 02
	00 00		 imul	 edx, DWORD PTR tv235[ebp], 700
  0042e	8b 45 9c	 mov	 eax, DWORD PTR tv243[ebp]
  00431	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00438	ff d1		 call	 ecx

; 308  : 			set_local_entity_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, pos);

  0043a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0043e	74 0a		 je	 SHORT $LN37@get_last_k
  00440	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00443	8b 08		 mov	 ecx, DWORD PTR [eax]
  00445	89 4d a0	 mov	 DWORD PTR tv255[ebp], ecx
  00448	eb 21		 jmp	 SHORT $LN38@get_last_k
$LN37@get_last_k:
  0044a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00450	83 c2 1b	 add	 edx, 27			; 0000001bH
  00453	52		 push	 edx
  00454	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00459	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0045e	50		 push	 eax
  0045f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00464	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv255[ebp], 0
$LN38@get_last_k:
  0046b	b9 01 00 00 00	 mov	 ecx, 1
  00470	85 c9		 test	 ecx, ecx
  00472	74 09		 je	 SHORT $LN39@get_last_k
  00474	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR tv263[ebp], 23 ; 00000017H
  0047b	eb 21		 jmp	 SHORT $LN40@get_last_k
$LN39@get_last_k:
  0047d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00483	83 c2 1b	 add	 edx, 27			; 0000001bH
  00486	52		 push	 edx
  00487	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00497	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv263[ebp], 0
$LN40@get_last_k:
  0049e	8b 4d f4	 mov	 ecx, DWORD PTR _pos$[ebp]
  004a1	51		 push	 ecx
  004a2	6a 17		 push	 23			; 00000017H
  004a4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004a7	52		 push	 edx
  004a8	6b 45 a0 60	 imul	 eax, DWORD PTR tv255[ebp], 96
  004ac	8b 4d 9c	 mov	 ecx, DWORD PTR tv263[ebp]
  004af	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004b6	ff d2		 call	 edx

; 309  : 		}
; 310  : 		else

  004b8	eb 7d		 jmp	 SHORT $LN5@get_last_k
$LN4@get_last_k:

; 311  : 			pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_LAST_KNOWN_POSITION);

  004ba	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004be	74 0a		 je	 SHORT $LN41@get_last_k
  004c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c5	89 4d a0	 mov	 DWORD PTR tv275[ebp], ecx
  004c8	eb 21		 jmp	 SHORT $LN42@get_last_k
$LN41@get_last_k:
  004ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  004d0	83 c2 1e	 add	 edx, 30			; 0000001eH
  004d3	52		 push	 edx
  004d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e4	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv275[ebp], 0
$LN42@get_last_k:
  004eb	b9 01 00 00 00	 mov	 ecx, 1
  004f0	85 c9		 test	 ecx, ecx
  004f2	74 09		 je	 SHORT $LN43@get_last_k
  004f4	c7 45 9c 17 00
	00 00		 mov	 DWORD PTR tv283[ebp], 23 ; 00000017H
  004fb	eb 21		 jmp	 SHORT $LN44@get_last_k
$LN43@get_last_k:
  004fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00503	83 c2 1e	 add	 edx, 30			; 0000001eH
  00506	52		 push	 edx
  00507	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00511	50		 push	 eax
  00512	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00517	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv283[ebp], 0
$LN44@get_last_k:
  0051e	6a 17		 push	 23			; 00000017H
  00520	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00523	51		 push	 ecx
  00524	6b 55 a0 60	 imul	 edx, DWORD PTR tv275[ebp], 96
  00528	8b 45 9c	 mov	 eax, DWORD PTR tv283[ebp]
  0052b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00532	ff d1		 call	 ecx
  00534	89 45 f4	 mov	 DWORD PTR _pos$[ebp], eax
$LN5@get_last_k:

; 312  : 	}
; 313  : 	else

  00537	eb 7d		 jmp	 SHORT $LN3@get_last_k
$LN2@get_last_k:

; 314  : 		pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00539	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0053d	74 0a		 je	 SHORT $LN45@get_last_k
  0053f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00542	8b 08		 mov	 ecx, DWORD PTR [eax]
  00544	89 4d a0	 mov	 DWORD PTR tv295[ebp], ecx
  00547	eb 21		 jmp	 SHORT $LN46@get_last_k
$LN45@get_last_k:
  00549	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  0054f	83 c2 21	 add	 edx, 33			; 00000021H
  00552	52		 push	 edx
  00553	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00558	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0055d	50		 push	 eax
  0055e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00563	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv295[ebp], 0
$LN46@get_last_k:
  0056a	b9 01 00 00 00	 mov	 ecx, 1
  0056f	85 c9		 test	 ecx, ecx
  00571	74 09		 je	 SHORT $LN47@get_last_k
  00573	c7 45 9c 08 00
	00 00		 mov	 DWORD PTR tv303[ebp], 8
  0057a	eb 21		 jmp	 SHORT $LN48@get_last_k
$LN47@get_last_k:
  0057c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z@4JA
  00582	83 c2 21	 add	 edx, 33			; 00000021H
  00585	52		 push	 edx
  00586	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00590	50		 push	 eax
  00591	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00596	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv303[ebp], 0
$LN48@get_last_k:
  0059d	6a 08		 push	 8
  0059f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005a2	51		 push	 ecx
  005a3	6b 55 a0 60	 imul	 edx, DWORD PTR tv295[ebp], 96
  005a7	8b 45 9c	 mov	 eax, DWORD PTR tv303[ebp]
  005aa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  005b1	ff d1		 call	 ecx
  005b3	89 45 f4	 mov	 DWORD PTR _pos$[ebp], eax
$LN3@get_last_k:

; 315  : 
; 316  : 	return pos;

  005b6	8b 45 f4	 mov	 eax, DWORD PTR _pos$[ebp]

; 317  : }

  005b9	5f		 pop	 edi
  005ba	5e		 pop	 esi
  005bb	5b		 pop	 ebx
  005bc	8b e5		 mov	 esp, ebp
  005be	5d		 pop	 ebp
  005bf	c2 04 00	 ret	 4
?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ENDP ; get_last_known_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_info_area$ = -8					; size = 4
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; toggle_full_screen_function, COMDAT

; 1703 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1704 : 	map_dimension_type
; 1705 : 		*map_dimensions;
; 1706 : 
; 1707 : 	ui_object
; 1708 : 		*info_area;
; 1709 : 
; 1710 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1711 : 
; 1712 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@toggle_ful
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 09	 add	 eax, 9
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@toggle_ful:

; 1713 : 
; 1714 : 	ASSERT (map_dimensions->map_area);

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00043	75 18		 jne	 SHORT $LN3@toggle_ful
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0004a	83 c0 0b	 add	 eax, 11			; 0000000bH
  0004d	50		 push	 eax
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHHLMBJL@map_dimensions?9?$DOmap_area@
  00058	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@toggle_ful:

; 1715 : 
; 1716 : 	if (map_dimensions->full_screen_parent)

  0005d	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00060	83 78 14 00	 cmp	 DWORD PTR [eax+20], 0
  00064	0f 84 1d 01 00
	00		 je	 $LN1@toggle_ful

; 1717 : 	{
; 1718 : 		ASSERT (*(map_dimensions->full_screen_parent));

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0006d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00070	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00073	75 18		 jne	 SHORT $LN5@toggle_ful
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0007a	83 c0 0f	 add	 eax, 15			; 0000000fH
  0007d	50		 push	 eax
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BNGMJJON@?$CK?$CImap_dimensions?9?$DOfull_screen_p@
  00088	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@toggle_ful:

; 1719 : 
; 1720 : 		info_area = (ui_object *) get_ui_object_user_ptr (*(map_dimensions->full_screen_parent));

  0008d	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00090	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00093	8b 11		 mov	 edx, DWORD PTR [ecx]
  00095	52		 push	 edx
  00096	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00099	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 02		 mov	 eax, DWORD PTR [edx]
  000a0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[eax*4]
  000a7	ff d1		 call	 ecx
  000a9	89 45 f8	 mov	 DWORD PTR _info_area$[ebp], eax

; 1721 : 
; 1722 : 		if (map_dimensions->full_screen)

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000af	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  000b2	83 e1 01	 and	 ecx, 1
  000b5	74 68		 je	 SHORT $LN6@toggle_ful

; 1723 : 		{
; 1724 : 			//
; 1725 : 			// Minimize map
; 1726 : 			//
; 1727 : 
; 1728 : 			set_ui_object_drawable (*(map_dimensions->full_screen_parent), FALSE);

  000b7	6a 00		 push	 0
  000b9	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000bc	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	52		 push	 edx
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000c5	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000c8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ca	8b 02		 mov	 eax, DWORD PTR [edx]
  000cc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  000d3	ff d1		 call	 ecx

; 1729 : 
; 1730 : 			set_ui_object_parent (map_dimensions->map_area, map_dimensions->parent);

  000d5	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000d8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000db	51		 push	 ecx
  000dc	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  000df	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  000e2	50		 push	 eax
  000e3	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  000e6	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000e9	8b 02		 mov	 eax, DWORD PTR [edx]
  000eb	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA[eax*4]
  000f2	ff d1		 call	 ecx

; 1731 : 
; 1732 : 			if (info_area)

  000f4	83 7d f8 00	 cmp	 DWORD PTR _info_area$[ebp], 0
  000f8	74 14		 je	 SHORT $LN8@toggle_ful

; 1733 : 			{
; 1734 : 				set_ui_object_drawable (info_area, FALSE);

  000fa	6a 00		 push	 0
  000fc	8b 45 f8	 mov	 eax, DWORD PTR _info_area$[ebp]
  000ff	50		 push	 eax
  00100	8b 4d f8	 mov	 ecx, DWORD PTR _info_area$[ebp]
  00103	8b 11		 mov	 edx, DWORD PTR [ecx]
  00105	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0010c	ff d0		 call	 eax
$LN8@toggle_ful:

; 1735 : 			}
; 1736 : 
; 1737 : 			map_dimensions->full_screen = FALSE;

  0010e	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00111	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00114	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00117	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  0011a	89 4a 64	 mov	 DWORD PTR [edx+100], ecx

; 1738 : 		}
; 1739 : 		else

  0011d	eb 68		 jmp	 SHORT $LN1@toggle_ful
$LN6@toggle_ful:

; 1740 : 		{
; 1741 : 			//
; 1742 : 			// Maximize map
; 1743 : 			//
; 1744 : 
; 1745 : 			set_ui_object_drawable (*(map_dimensions->full_screen_parent), TRUE);

  0011f	6a 01		 push	 1
  00121	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00124	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00127	8b 11		 mov	 edx, DWORD PTR [ecx]
  00129	52		 push	 edx
  0012a	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0012d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00130	8b 11		 mov	 edx, DWORD PTR [ecx]
  00132	8b 02		 mov	 eax, DWORD PTR [edx]
  00134	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  0013b	ff d1		 call	 ecx

; 1746 : 
; 1747 : 			set_ui_object_parent (map_dimensions->map_area, *(map_dimensions->full_screen_parent));

  0013d	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00140	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00143	8b 11		 mov	 edx, DWORD PTR [ecx]
  00145	52		 push	 edx
  00146	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00149	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0014c	51		 push	 ecx
  0014d	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00150	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00153	8b 08		 mov	 ecx, DWORD PTR [eax]
  00155	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_parent@@3PAP6GXPAUUI_OBJECT@@0@ZA[ecx*4]
  0015c	ff d2		 call	 edx

; 1748 : 
; 1749 : 			if (info_area)

  0015e	83 7d f8 00	 cmp	 DWORD PTR _info_area$[ebp], 0
  00162	74 14		 je	 SHORT $LN9@toggle_ful

; 1750 : 			{
; 1751 : 				set_ui_object_drawable (info_area, TRUE);

  00164	6a 01		 push	 1
  00166	8b 45 f8	 mov	 eax, DWORD PTR _info_area$[ebp]
  00169	50		 push	 eax
  0016a	8b 4d f8	 mov	 ecx, DWORD PTR _info_area$[ebp]
  0016d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00176	ff d0		 call	 eax
$LN9@toggle_ful:

; 1752 : 			}
; 1753 : 
; 1754 : 			map_dimensions->full_screen = TRUE;

  00178	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0017b	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  0017e	83 c9 01	 or	 ecx, 1
  00181	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00184	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
$LN1@toggle_ful:

; 1755 : 		}
; 1756 : 	}
; 1757 : }

  00187	5f		 pop	 edi
  00188	5e		 pop	 esi
  00189	5b		 pop	 ebx
  0018a	8b e5		 mov	 esp, ebp
  0018c	5d		 pop	 ebp
  0018d	c2 08 00	 ret	 8
?toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; toggle_full_screen_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv232 = -184						; size = 4
tv224 = -180						; size = 4
tv257 = -176						; size = 4
tv211 = -176						; size = 4
tv189 = -176						; size = 4
tv164 = -176						; size = 4
tv142 = -176						; size = 4
tv89 = -176						; size = 4
tv249 = -172						; size = 4
tv203 = -172						; size = 4
tv181 = -172						; size = 4
tv156 = -172						; size = 4
tv134 = -172						; size = 4
tv82 = -172						; size = 4
_group$ = -104						; size = 4
_pilot$ = -100						; size = 4
_pos$ = -96						; size = 12
_wzmax$ = -84						; size = 4
_wxmax$ = -80						; size = 4
_wzmin$ = -76						; size = 4
_wxmin$ = -72						; size = 4
_text$ = -68						; size = 64
_name$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z PROC ; map_draw_track_entity, COMDAT

; 4752 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 4753 : 	const char
; 4754 : 		*name;
; 4755 : 	char
; 4756 : 		text [64];
; 4757 : 
; 4758 : 	float
; 4759 : 		wxmin,
; 4760 : 		wzmin,
; 4761 : 		wxmax,
; 4762 : 		wzmax;
; 4763 : 
; 4764 : 	static float
; 4765 : 		flash_timer = 0.0;
; 4766 : 
; 4767 : 	vec3d
; 4768 : 		pos;
; 4769 : 
; 4770 : 	entity
; 4771 : 		*pilot,
; 4772 : 		*group;
; 4773 : 
; 4774 : 	ASSERT (en);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@map_draw_t
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00017	83 c0 16	 add	 eax, 22			; 00000016H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_t:

; 4775 : 
; 4776 : 	if (flash_timer < 0.6)

  0002a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?flash_timer@?1??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4MA
  00032	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe3333333333333
  0003a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0003e	0f 86 fc 04 00
	00		 jbe	 $LN3@map_draw_t

; 4777 : 	{
; 4778 : 		get_2d_terrain_map_world_dimensions (&wxmin, &wzmin, &wxmax, &wzmax);

  00044	8d 45 ac	 lea	 eax, DWORD PTR _wzmax$[ebp]
  00047	50		 push	 eax
  00048	8d 4d b0	 lea	 ecx, DWORD PTR _wxmax$[ebp]
  0004b	51		 push	 ecx
  0004c	8d 55 b4	 lea	 edx, DWORD PTR _wzmin$[ebp]
  0004f	52		 push	 edx
  00050	8d 45 b8	 lea	 eax, DWORD PTR _wxmin$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 4779 : 
; 4780 : 		sprintf (text, "");

  00059	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0005e	8d 45 bc	 lea	 eax, DWORD PTR _text$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 _sprintf
  00067	83 c4 08	 add	 esp, 8

; 4781 : 
; 4782 : 		if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_AIRCRAFT))

  0006a	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0006e	74 0d		 je	 SHORT $LN11@map_draw_t
  00070	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv82[ebp], ecx
  0007b	eb 20		 jmp	 SHORT $LN12@map_draw_t
$LN11@map_draw_t:
  0007d	68 ae 12 00 00	 push	 4782			; 000012aeH
  00082	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00087	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008d	52		 push	 edx
  0008e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00093	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv82[ebp], 0
$LN12@map_draw_t:
  0009d	b8 01 00 00 00	 mov	 eax, 1
  000a2	85 c0		 test	 eax, eax
  000a4	74 0c		 je	 SHORT $LN13@map_draw_t
  000a6	c7 85 50 ff ff
	ff 57 00 00 00	 mov	 DWORD PTR tv89[ebp], 87	; 00000057H
  000b0	eb 20		 jmp	 SHORT $LN14@map_draw_t
$LN13@map_draw_t:
  000b2	68 ae 12 00 00	 push	 4782			; 000012aeH
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000c2	51		 push	 ecx
  000c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c8	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN14@map_draw_t:
  000d2	6a 57		 push	 87			; 00000057H
  000d4	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  000d7	52		 push	 edx
  000d8	69 85 54 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv82[ebp], 1116
  000e2	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv89[ebp]
  000e8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000ef	ff d2		 call	 edx
  000f1	85 c0		 test	 eax, eax
  000f3	0f 84 24 03 00
	00		 je	 $LN4@map_draw_t

; 4783 : 		{
; 4784 : 			pilot = get_local_entity_first_child (en, LIST_TYPE_AIRCREW);

  000f9	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  000fd	74 0d		 je	 SHORT $LN15@map_draw_t
  000ff	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00102	8b 08		 mov	 ecx, DWORD PTR [eax]
  00104	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv134[ebp], ecx
  0010a	eb 24		 jmp	 SHORT $LN16@map_draw_t
$LN15@map_draw_t:
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00112	83 c2 20	 add	 edx, 32			; 00000020H
  00115	52		 push	 edx
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00126	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN16@map_draw_t:
  00130	b9 01 00 00 00	 mov	 ecx, 1
  00135	85 c9		 test	 ecx, ecx
  00137	74 0c		 je	 SHORT $LN17@map_draw_t
  00139	c7 85 50 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv142[ebp], 1
  00143	eb 24		 jmp	 SHORT $LN18@map_draw_t
$LN17@map_draw_t:
  00145	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0014b	83 c2 20	 add	 edx, 32			; 00000020H
  0014e	52		 push	 edx
  0014f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00154	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015f	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN18@map_draw_t:
  00169	6a 01		 push	 1
  0016b	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0016e	51		 push	 ecx
  0016f	69 95 54 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv134[ebp], 180
  00179	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv142[ebp]
  0017f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00186	ff d1		 call	 ecx
  00188	89 45 9c	 mov	 DWORD PTR _pilot$[ebp], eax

; 4785 : 
; 4786 : 			if (pilot)

  0018b	83 7d 9c 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  0018f	0f 84 ae 00 00
	00		 je	 $LN6@map_draw_t

; 4787 : 			{
; 4788 : 				sprintf (text, "%s: %s", get_trans ("Tracking"), get_local_entity_string (pilot, STRING_TYPE_PILOTS_NAME));

  00195	83 7d 9c 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00199	74 0d		 je	 SHORT $LN19@map_draw_t
  0019b	8b 45 9c	 mov	 eax, DWORD PTR _pilot$[ebp]
  0019e	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a0	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv156[ebp], ecx
  001a6	eb 24		 jmp	 SHORT $LN20@map_draw_t
$LN19@map_draw_t:
  001a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  001ae	83 c2 24	 add	 edx, 36			; 00000024H
  001b1	52		 push	 edx
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c2	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN20@map_draw_t:
  001cc	b9 01 00 00 00	 mov	 ecx, 1
  001d1	85 c9		 test	 ecx, ecx
  001d3	74 0c		 je	 SHORT $LN21@map_draw_t
  001d5	c7 85 50 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv164[ebp], 10 ; 0000000aH
  001df	eb 24		 jmp	 SHORT $LN22@map_draw_t
$LN21@map_draw_t:
  001e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  001e7	83 c2 24	 add	 edx, 36			; 00000024H
  001ea	52		 push	 edx
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN22@map_draw_t:
  00205	6a 0a		 push	 10			; 0000000aH
  00207	8b 4d 9c	 mov	 ecx, DWORD PTR _pilot$[ebp]
  0020a	51		 push	 ecx
  0020b	6b 95 54 ff ff
	ff 34		 imul	 edx, DWORD PTR tv156[ebp], 52
  00212	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv164[ebp]
  00218	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  0021f	ff d1		 call	 ecx
  00221	50		 push	 eax
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_08LLKFLCPM@Tracking@
  00227	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0022c	50		 push	 eax
  0022d	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  00232	8d 55 bc	 lea	 edx, DWORD PTR _text$[ebp]
  00235	52		 push	 edx
  00236	e8 00 00 00 00	 call	 _sprintf
  0023b	83 c4 10	 add	 esp, 16			; 00000010H

; 4789 : 			}
; 4790 : 			else

  0023e	e9 d5 01 00 00	 jmp	 $LN8@map_draw_t
$LN6@map_draw_t:

; 4791 : 			{
; 4792 : 				group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00243	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00247	74 0d		 je	 SHORT $LN23@map_draw_t
  00249	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0024c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024e	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv181[ebp], ecx
  00254	eb 24		 jmp	 SHORT $LN24@map_draw_t
$LN23@map_draw_t:
  00256	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0025c	83 c2 28	 add	 edx, 40			; 00000028H
  0025f	52		 push	 edx
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00265	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00270	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN24@map_draw_t:
  0027a	b9 01 00 00 00	 mov	 ecx, 1
  0027f	85 c9		 test	 ecx, ecx
  00281	74 0c		 je	 SHORT $LN25@map_draw_t
  00283	c7 85 50 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv189[ebp], 25 ; 00000019H
  0028d	eb 24		 jmp	 SHORT $LN26@map_draw_t
$LN25@map_draw_t:
  0028f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00295	83 c2 28	 add	 edx, 40			; 00000028H
  00298	52		 push	 edx
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002a3	50		 push	 eax
  002a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a9	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN26@map_draw_t:
  002b3	6a 19		 push	 25			; 00000019H
  002b5	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  002b8	51		 push	 ecx
  002b9	69 95 54 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv181[ebp], 180
  002c3	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv189[ebp]
  002c9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002d0	ff d1		 call	 ecx
  002d2	89 45 98	 mov	 DWORD PTR _group$[ebp], eax

; 4793 : 
; 4794 : 				if (group)

  002d5	83 7d 98 00	 cmp	 DWORD PTR _group$[ebp], 0
  002d9	0f 84 39 01 00
	00		 je	 $LN8@map_draw_t

; 4795 : 				{
; 4796 : 					sprintf (text, "%s: %s 1-%d",

  002df	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  002e3	74 0d		 je	 SHORT $LN27@map_draw_t
  002e5	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  002e8	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ea	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv203[ebp], ecx
  002f0	eb 24		 jmp	 SHORT $LN28@map_draw_t
$LN27@map_draw_t:
  002f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  002f8	83 c2 2f	 add	 edx, 47			; 0000002fH
  002fb	52		 push	 edx
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00301	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00306	50		 push	 eax
  00307	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030c	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN28@map_draw_t:
  00316	b9 01 00 00 00	 mov	 ecx, 1
  0031b	85 c9		 test	 ecx, ecx
  0031d	74 0c		 je	 SHORT $LN29@map_draw_t
  0031f	c7 85 50 ff ff
	ff 4a 00 00 00	 mov	 DWORD PTR tv211[ebp], 74 ; 0000004aH
  00329	eb 24		 jmp	 SHORT $LN30@map_draw_t
$LN29@map_draw_t:
  0032b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00331	83 c2 2f	 add	 edx, 47			; 0000002fH
  00334	52		 push	 edx
  00335	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0033f	50		 push	 eax
  00340	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00345	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv211[ebp], 0
$LN30@map_draw_t:
  0034f	83 7d 98 00	 cmp	 DWORD PTR _group$[ebp], 0
  00353	74 0d		 je	 SHORT $LN31@map_draw_t
  00355	8b 4d 98	 mov	 ecx, DWORD PTR _group$[ebp]
  00358	8b 11		 mov	 edx, DWORD PTR [ecx]
  0035a	89 95 4c ff ff
	ff		 mov	 DWORD PTR tv224[ebp], edx
  00360	eb 24		 jmp	 SHORT $LN32@map_draw_t
$LN31@map_draw_t:
  00362	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00367	83 c0 2e	 add	 eax, 46			; 0000002eH
  0036a	50		 push	 eax
  0036b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00370	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00376	51		 push	 ecx
  00377	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037c	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv224[ebp], 0
$LN32@map_draw_t:
  00386	ba 01 00 00 00	 mov	 edx, 1
  0038b	85 d2		 test	 edx, edx
  0038d	74 0c		 je	 SHORT $LN33@map_draw_t
  0038f	c7 85 48 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv232[ebp], 4
  00399	eb 24		 jmp	 SHORT $LN34@map_draw_t
$LN33@map_draw_t:
  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  003a0	83 c0 2e	 add	 eax, 46			; 0000002eH
  003a3	50		 push	 eax
  003a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  003af	51		 push	 ecx
  003b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b5	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv232[ebp], 0
$LN34@map_draw_t:
  003bf	6a 4a		 push	 74			; 0000004aH
  003c1	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  003c4	52		 push	 edx
  003c5	69 85 54 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv203[ebp], 1116
  003cf	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR tv211[ebp]
  003d5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003dc	ff d2		 call	 edx
  003de	50		 push	 eax
  003df	6a 04		 push	 4
  003e1	8b 45 98	 mov	 eax, DWORD PTR _group$[ebp]
  003e4	50		 push	 eax
  003e5	6b 8d 4c ff ff
	ff 34		 imul	 ecx, DWORD PTR tv224[ebp], 52
  003ec	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv232[ebp]
  003f2	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  003f9	ff d0		 call	 eax
  003fb	50		 push	 eax
  003fc	68 00 00 00 00	 push	 OFFSET ??_C@_08LLKFLCPM@Tracking@
  00401	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00406	50		 push	 eax
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EOMFOBH@?$CFs?3?5?$CFs?51?9?$CFd@
  0040c	8d 4d bc	 lea	 ecx, DWORD PTR _text$[ebp]
  0040f	51		 push	 ecx
  00410	e8 00 00 00 00	 call	 _sprintf
  00415	83 c4 14	 add	 esp, 20			; 00000014H
$LN8@map_draw_t:

; 4797 : 								get_trans ("Tracking"),
; 4798 : 								get_local_entity_string (group, STRING_TYPE_GROUP_CALLSIGN),
; 4799 : 								get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_ID));
; 4800 : 				}
; 4801 : 			}
; 4802 : 		}
; 4803 : 		else

  00418	e9 b5 00 00 00	 jmp	 $LN9@map_draw_t
$LN4@map_draw_t:

; 4804 : 		{
; 4805 : 			name = get_local_entity_string (en, STRING_TYPE_FULL_NAME);

  0041d	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00421	74 0d		 je	 SHORT $LN35@map_draw_t
  00423	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00426	8b 08		 mov	 ecx, DWORD PTR [eax]
  00428	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv249[ebp], ecx
  0042e	eb 24		 jmp	 SHORT $LN36@map_draw_t
$LN35@map_draw_t:
  00430	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00436	83 c2 35	 add	 edx, 53			; 00000035H
  00439	52		 push	 edx
  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00444	50		 push	 eax
  00445	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044a	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv249[ebp], 0
$LN36@map_draw_t:
  00454	b9 01 00 00 00	 mov	 ecx, 1
  00459	85 c9		 test	 ecx, ecx
  0045b	74 0c		 je	 SHORT $LN37@map_draw_t
  0045d	c7 85 50 ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv257[ebp], 3
  00467	eb 24		 jmp	 SHORT $LN38@map_draw_t
$LN37@map_draw_t:
  00469	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0046f	83 c2 35	 add	 edx, 53			; 00000035H
  00472	52		 push	 edx
  00473	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00478	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0047d	50		 push	 eax
  0047e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00483	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv257[ebp], 0
$LN38@map_draw_t:
  0048d	6a 03		 push	 3
  0048f	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00492	51		 push	 ecx
  00493	6b 95 54 ff ff
	ff 34		 imul	 edx, DWORD PTR tv249[ebp], 52
  0049a	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv257[ebp]
  004a0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  004a7	ff d1		 call	 ecx
  004a9	89 45 fc	 mov	 DWORD PTR _name$[ebp], eax

; 4806 : 
; 4807 : 			if (name)

  004ac	83 7d fc 00	 cmp	 DWORD PTR _name$[ebp], 0
  004b0	74 20		 je	 SHORT $LN9@map_draw_t

; 4808 : 			{
; 4809 : 				sprintf (text, "%s: %s", get_trans ("Tracking"), name);

  004b2	8b 45 fc	 mov	 eax, DWORD PTR _name$[ebp]
  004b5	50		 push	 eax
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_08LLKFLCPM@Tracking@
  004bb	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  004c0	50		 push	 eax
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_06DJHOIPC@?$CFs?3?5?$CFs@
  004c6	8d 4d bc	 lea	 ecx, DWORD PTR _text$[ebp]
  004c9	51		 push	 ecx
  004ca	e8 00 00 00 00	 call	 _sprintf
  004cf	83 c4 10	 add	 esp, 16			; 00000010H
$LN9@map_draw_t:

; 4810 : 			}
; 4811 : 		}
; 4812 : 
; 4813 : 		pos.x = wxmin;

  004d2	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _wxmin$[ebp]
  004d7	f3 0f 11 45 a0	 movss	 DWORD PTR _pos$[ebp], xmm0

; 4814 : 		pos.z = wzmax;

  004dc	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _wzmax$[ebp]
  004e1	f3 0f 11 45 a8	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 4815 : 
; 4816 : 		map_get_screen_coords_from_world (obj, &pos, &pos);

  004e6	8d 45 a0	 lea	 eax, DWORD PTR _pos$[ebp]
  004e9	50		 push	 eax
  004ea	8d 4d a0	 lea	 ecx, DWORD PTR _pos$[ebp]
  004ed	51		 push	 ecx
  004ee	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004f1	52		 push	 edx
  004f2	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4817 : 
; 4818 : 		set_ui_font_type (UI_FONT_ARIAL_14);

  004f7	6a 01		 push	 1
  004f9	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 4819 : 
; 4820 : 		set_ui_font_colour (ui_ingame_selected_text_colour);

  004fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_ingame_selected_text_colour@@3UREAL_COLOUR@@A ; ui_ingame_selected_text_colour
  00503	50		 push	 eax
  00504	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 4821 : 
; 4822 : 		ui_display_text (text, pos.x + 5, pos.z - ui_get_font_height ());

  00509	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  0050e	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  00513	f3 0f 10 4d a8	 movss	 xmm1, DWORD PTR _pos$[ebp+8]
  00518	f3 0f 5c c8	 subss	 xmm1, xmm0
  0051c	51		 push	 ecx
  0051d	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00522	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _pos$[ebp]
  00527	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40a00000
  0052f	51		 push	 ecx
  00530	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00535	8d 4d bc	 lea	 ecx, DWORD PTR _text$[ebp]
  00538	51		 push	 ecx
  00539	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0053e	dd d8		 fstp	 ST(0)
$LN3@map_draw_t:

; 4823 : 	}
; 4824 : 
; 4825 : 	flash_timer = frac (flash_timer + get_delta_time ());

  00540	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?flash_timer@?1??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4MA
  00548	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00550	51		 push	 ecx
  00551	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00556	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  0055b	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?flash_timer@?1??map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4MA

; 4826 : }

  00561	5f		 pop	 edi
  00562	5e		 pop	 esi
  00563	5b		 pop	 ebx
  00564	8b e5		 mov	 esp, ebp
  00566	5d		 pop	 ebp
  00567	c2 08 00	 ret	 8
?map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ENDP ; map_draw_track_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_grid@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv177 = -200						; size = 4
tv168 = -200						; size = 4
tv159 = -200						; size = 4
tv150 = -200						; size = 4
tv179 = -196						; size = 8
tv170 = -196						; size = 8
tv161 = -196						; size = 8
tv152 = -196						; size = 8
tv485 = -192						; size = 4
tv281 = -192						; size = 4
_value$1 = -124						; size = 4
_pos2$ = -120						; size = 12
_pos1$ = -108						; size = 12
_grid_loop$ = -96					; size = 4
_inew_wzmax$ = -92					; size = 4
_inew_wxmax$ = -88					; size = 4
_inew_wzmin$ = -84					; size = 4
_inew_wxmin$ = -80					; size = 4
_grid_spacing$ = -76					; size = 4
_one_over_sector_side_length$ = -72			; size = 4
_number_of_grid_lines$ = -68				; size = 4
_width$ = -64						; size = 4
_wzmax$ = -60						; size = 4
_wxmax$ = -56						; size = 4
_wzmin$ = -52						; size = 4
_wxmin$ = -48						; size = 4
_grid_number$ = -44					; size = 10
_scale_text$ = -32					; size = 32
_obj$ = 8						; size = 4
?map_draw_grid@@YGXPAUUI_OBJECT@@@Z PROC		; map_draw_grid, COMDAT

; 4578 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 4579 : 
; 4580 : 	char
; 4581 : 		scale_text [32],
; 4582 : 		grid_number [10] = "";

  0000c	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_00CNPNBAHC@@
  00011	88 45 d4	 mov	 BYTE PTR _grid_number$[ebp], al
  00014	33 c0		 xor	 eax, eax
  00016	89 45 d5	 mov	 DWORD PTR _grid_number$[ebp+1], eax
  00019	89 45 d9	 mov	 DWORD PTR _grid_number$[ebp+5], eax
  0001c	88 45 dd	 mov	 BYTE PTR _grid_number$[ebp+9], al

; 4583 : 
; 4584 : 	float
; 4585 : 		wxmin,
; 4586 : 		wzmin,
; 4587 : 		wxmax = 0,

  0001f	0f 57 c0	 xorps	 xmm0, xmm0
  00022	f3 0f 11 45 c8	 movss	 DWORD PTR _wxmax$[ebp], xmm0

; 4588 : 		wzmax = 0,

  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 45 c4	 movss	 DWORD PTR _wzmax$[ebp], xmm0

; 4589 : 		width,
; 4590 : 		number_of_grid_lines,
; 4591 : 		one_over_sector_side_length;
; 4592 : 
; 4593 : 	int
; 4594 : 		grid_spacing = 0,

  0002f	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _grid_spacing$[ebp], 0

; 4595 : 		inew_wxmin,
; 4596 : 		inew_wzmin,
; 4597 : 		inew_wxmax,
; 4598 : 		inew_wzmax,
; 4599 : 		grid_loop;
; 4600 : 
; 4601 : 	vec3d
; 4602 : 		pos1,
; 4603 : 		pos2;
; 4604 : 
; 4605 : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_GRID))

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0003b	83 e0 04	 and	 eax, 4
  0003e	0f 84 a4 06 00
	00		 je	 $LN10@map_draw_g

; 4606 : 	{
; 4607 : 
; 4608 : 		one_over_sector_side_length = 1.0 / SECTOR_SIDE_LENGTH;

  00044	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0004c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00054	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00058	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005c	f3 0f 11 45 b8	 movss	 DWORD PTR _one_over_sector_side_length$[ebp], xmm0

; 4609 : 
; 4610 : 		get_2d_terrain_map_world_dimensions (&wxmin, &wzmin, &wxmax, &wzmax);

  00061	8d 45 c4	 lea	 eax, DWORD PTR _wzmax$[ebp]
  00064	50		 push	 eax
  00065	8d 4d c8	 lea	 ecx, DWORD PTR _wxmax$[ebp]
  00068	51		 push	 ecx
  00069	8d 55 cc	 lea	 edx, DWORD PTR _wzmin$[ebp]
  0006c	52		 push	 edx
  0006d	8d 45 d0	 lea	 eax, DWORD PTR _wxmin$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 4611 : 
; 4612 : 		inew_wxmin = (((int) (wxmin * one_over_sector_side_length)) - 1.0) * SECTOR_SIDE_LENGTH;

  00076	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wxmin$[ebp]
  0007b	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  00080	f3 0f 2c c0	 cvttss2si eax, xmm0
  00084	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00088	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00090	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00098	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0009c	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  000a0	89 4d b0	 mov	 DWORD PTR _inew_wxmin$[ebp], ecx

; 4613 : 		inew_wxmax = (((int) (wxmax * one_over_sector_side_length)) + 1.0) * SECTOR_SIDE_LENGTH;

  000a3	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wxmax$[ebp]
  000a8	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  000ad	f3 0f 2c c0	 cvttss2si eax, xmm0
  000b1	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000bd	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  000c5	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000c9	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  000cd	89 4d a8	 mov	 DWORD PTR _inew_wxmax$[ebp], ecx

; 4614 : 
; 4615 : 		// Z max and min around wrong way !
; 4616 : 		inew_wzmin = (((int) (wzmax * one_over_sector_side_length)) - 1.0) * SECTOR_SIDE_LENGTH;

  000d0	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _wzmax$[ebp]
  000d5	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  000da	f3 0f 2c c0	 cvttss2si eax, xmm0
  000de	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000e2	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000ea	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  000f2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  000f6	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  000fa	89 4d ac	 mov	 DWORD PTR _inew_wzmin$[ebp], ecx

; 4617 : 		inew_wzmax = (((int) (wzmin * one_over_sector_side_length)) + 1.0) * SECTOR_SIDE_LENGTH;

  000fd	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _wzmin$[ebp]
  00102	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  00107	f3 0f 2c c0	 cvttss2si eax, xmm0
  0010b	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0010f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00117	f2 0f 2a 0d 00
	00 00 00	 cvtsi2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0011f	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00123	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  00127	89 4d a4	 mov	 DWORD PTR _inew_wzmax$[ebp], ecx

; 4618 : 
; 4619 : 		inew_wxmin = bound (inew_wxmin, 0.0, MAX_MAP_X);

  0012a	f2 0f 2a 45 b0	 cvtsi2sd xmm0, DWORD PTR _inew_wxmin$[ebp]
  0012f	0f 57 c9	 xorps	 xmm1, xmm1
  00132	66 0f 2f c8	 comisd	 xmm1, xmm0
  00136	76 0d		 jbe	 SHORT $LN21@map_draw_g
  00138	0f 57 c0	 xorps	 xmm0, xmm0
  0013b	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv152[ebp], xmm0
  00143	eb 3d		 jmp	 SHORT $LN22@map_draw_g
$LN21@map_draw_g:
  00145	f3 0f 2a 45 b0	 cvtsi2ss xmm0, DWORD PTR _inew_wxmin$[ebp]
  0014a	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00151	76 12		 jbe	 SHORT $LN19@map_draw_g
  00153	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0015b	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv150[ebp], xmm0
  00163	eb 0d		 jmp	 SHORT $LN20@map_draw_g
$LN19@map_draw_g:
  00165	f3 0f 2a 45 b0	 cvtsi2ss xmm0, DWORD PTR _inew_wxmin$[ebp]
  0016a	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv150[ebp], xmm0
$LN20@map_draw_g:
  00172	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv150[ebp]
  0017a	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv152[ebp], xmm0
$LN22@map_draw_g:
  00182	f2 0f 2c 85 3c
	ff ff ff	 cvttsd2si eax, QWORD PTR tv152[ebp]
  0018a	89 45 b0	 mov	 DWORD PTR _inew_wxmin$[ebp], eax

; 4620 : 		inew_wxmax = bound (inew_wxmax, 0.0, MAX_MAP_X);

  0018d	f2 0f 2a 45 a8	 cvtsi2sd xmm0, DWORD PTR _inew_wxmax$[ebp]
  00192	0f 57 c9	 xorps	 xmm1, xmm1
  00195	66 0f 2f c8	 comisd	 xmm1, xmm0
  00199	76 0d		 jbe	 SHORT $LN25@map_draw_g
  0019b	0f 57 c0	 xorps	 xmm0, xmm0
  0019e	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv161[ebp], xmm0
  001a6	eb 3d		 jmp	 SHORT $LN26@map_draw_g
$LN25@map_draw_g:
  001a8	f3 0f 2a 45 a8	 cvtsi2ss xmm0, DWORD PTR _inew_wxmax$[ebp]
  001ad	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001b4	76 12		 jbe	 SHORT $LN23@map_draw_g
  001b6	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001be	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv159[ebp], xmm0
  001c6	eb 0d		 jmp	 SHORT $LN24@map_draw_g
$LN23@map_draw_g:
  001c8	f3 0f 2a 45 a8	 cvtsi2ss xmm0, DWORD PTR _inew_wxmax$[ebp]
  001cd	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv159[ebp], xmm0
$LN24@map_draw_g:
  001d5	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv159[ebp]
  001dd	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv161[ebp], xmm0
$LN26@map_draw_g:
  001e5	f2 0f 2c 85 3c
	ff ff ff	 cvttsd2si eax, QWORD PTR tv161[ebp]
  001ed	89 45 a8	 mov	 DWORD PTR _inew_wxmax$[ebp], eax

; 4621 : 		inew_wzmin = bound (inew_wzmin, 0.0, MAX_MAP_Z);

  001f0	f2 0f 2a 45 ac	 cvtsi2sd xmm0, DWORD PTR _inew_wzmin$[ebp]
  001f5	0f 57 c9	 xorps	 xmm1, xmm1
  001f8	66 0f 2f c8	 comisd	 xmm1, xmm0
  001fc	76 0d		 jbe	 SHORT $LN29@map_draw_g
  001fe	0f 57 c0	 xorps	 xmm0, xmm0
  00201	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
  00209	eb 3d		 jmp	 SHORT $LN30@map_draw_g
$LN29@map_draw_g:
  0020b	f3 0f 2a 45 ac	 cvtsi2ss xmm0, DWORD PTR _inew_wzmin$[ebp]
  00210	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00217	76 12		 jbe	 SHORT $LN27@map_draw_g
  00219	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00221	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv168[ebp], xmm0
  00229	eb 0d		 jmp	 SHORT $LN28@map_draw_g
$LN27@map_draw_g:
  0022b	f3 0f 2a 45 ac	 cvtsi2ss xmm0, DWORD PTR _inew_wzmin$[ebp]
  00230	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv168[ebp], xmm0
$LN28@map_draw_g:
  00238	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv168[ebp]
  00240	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv170[ebp], xmm0
$LN30@map_draw_g:
  00248	f2 0f 2c 85 3c
	ff ff ff	 cvttsd2si eax, QWORD PTR tv170[ebp]
  00250	89 45 ac	 mov	 DWORD PTR _inew_wzmin$[ebp], eax

; 4622 : 		inew_wzmax = bound (inew_wzmax, 0.0, MAX_MAP_Z);

  00253	f2 0f 2a 45 a4	 cvtsi2sd xmm0, DWORD PTR _inew_wzmax$[ebp]
  00258	0f 57 c9	 xorps	 xmm1, xmm1
  0025b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0025f	76 0d		 jbe	 SHORT $LN33@map_draw_g
  00261	0f 57 c0	 xorps	 xmm0, xmm0
  00264	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv179[ebp], xmm0
  0026c	eb 3d		 jmp	 SHORT $LN34@map_draw_g
$LN33@map_draw_g:
  0026e	f3 0f 2a 45 a4	 cvtsi2ss xmm0, DWORD PTR _inew_wzmax$[ebp]
  00273	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0027a	76 12		 jbe	 SHORT $LN31@map_draw_g
  0027c	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00284	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv177[ebp], xmm0
  0028c	eb 0d		 jmp	 SHORT $LN32@map_draw_g
$LN31@map_draw_g:
  0028e	f3 0f 2a 45 a4	 cvtsi2ss xmm0, DWORD PTR _inew_wzmax$[ebp]
  00293	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR tv177[ebp], xmm0
$LN32@map_draw_g:
  0029b	f3 0f 5a 85 38
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv177[ebp]
  002a3	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv179[ebp], xmm0
$LN34@map_draw_g:
  002ab	f2 0f 2c 85 3c
	ff ff ff	 cvttsd2si eax, QWORD PTR tv179[ebp]
  002b3	89 45 a4	 mov	 DWORD PTR _inew_wzmax$[ebp], eax

; 4623 : 
; 4624 : 		width = fabs (wxmax - wxmin);

  002b6	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wxmax$[ebp]
  002bb	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _wxmin$[ebp]
  002c0	51		 push	 ecx
  002c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c6	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  002cb	d9 5d c0	 fstp	 DWORD PTR _width$[ebp]

; 4625 : 
; 4626 : 		grid_spacing = GRID_LINE_MINIMUM_SPACING;

  002ce	c7 45 b4 80 00
	00 00		 mov	 DWORD PTR _grid_spacing$[ebp], 128 ; 00000080H

; 4627 : 
; 4628 : 		number_of_grid_lines = width / grid_spacing;

  002d5	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _grid_spacing$[ebp]
  002da	f3 0f 10 4d c0	 movss	 xmm1, DWORD PTR _width$[ebp]
  002df	f3 0f 5e c8	 divss	 xmm1, xmm0
  002e3	f3 0f 11 4d bc	 movss	 DWORD PTR _number_of_grid_lines$[ebp], xmm1
$LN2@map_draw_g:

; 4629 : 
; 4630 : 		while (number_of_grid_lines > OPTIMAL_NUMBER_OF_GRID_LINES)

  002e8	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _number_of_grid_lines$[ebp]
  002ed	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4028000000000000
  002f5	76 20		 jbe	 SHORT $LN3@map_draw_g

; 4631 : 		{
; 4632 : 
; 4633 : 			grid_spacing *= 2;

  002f7	8b 45 b4	 mov	 eax, DWORD PTR _grid_spacing$[ebp]
  002fa	d1 e0		 shl	 eax, 1
  002fc	89 45 b4	 mov	 DWORD PTR _grid_spacing$[ebp], eax

; 4634 : 
; 4635 : 			number_of_grid_lines *= 0.5;

  002ff	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _number_of_grid_lines$[ebp]
  00304	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0030c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00310	f3 0f 11 45 bc	 movss	 DWORD PTR _number_of_grid_lines$[ebp], xmm0

; 4636 : 		}

  00315	eb d1		 jmp	 SHORT $LN2@map_draw_g
$LN3@map_draw_g:

; 4637 : 
; 4638 : 		set_ui_font_type (UI_FONT_ARIAL_14);

  00317	6a 01		 push	 1
  00319	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 4639 : 
; 4640 : 		set_ui_font_colour (ui_colour_white);

  0031e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white
  00323	50		 push	 eax
  00324	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 4641 : 
; 4642 : 		// along the X
; 4643 : 
; 4644 : 		for (grid_loop = inew_wxmin; grid_loop <= inew_wxmax; grid_loop += grid_spacing)

  00329	8b 45 b0	 mov	 eax, DWORD PTR _inew_wxmin$[ebp]
  0032c	89 45 a0	 mov	 DWORD PTR _grid_loop$[ebp], eax
  0032f	eb 09		 jmp	 SHORT $LN6@map_draw_g
$LN4@map_draw_g:
  00331	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  00334	03 45 b4	 add	 eax, DWORD PTR _grid_spacing$[ebp]
  00337	89 45 a0	 mov	 DWORD PTR _grid_loop$[ebp], eax
$LN6@map_draw_g:
  0033a	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  0033d	3b 45 a8	 cmp	 eax, DWORD PTR _inew_wxmax$[ebp]
  00340	0f 8f 40 01 00
	00		 jg	 $LN5@map_draw_g

; 4645 : 		{
; 4646 : 
; 4647 : 			pos1.x = grid_loop;

  00346	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  0034b	f3 0f 11 45 94	 movss	 DWORD PTR _pos1$[ebp], xmm0

; 4648 : 			pos1.z = wzmin;

  00350	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _wzmin$[ebp]
  00355	f3 0f 11 45 9c	 movss	 DWORD PTR _pos1$[ebp+8], xmm0

; 4649 : 			pos2.x = grid_loop;

  0035a	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  0035f	f3 0f 11 45 88	 movss	 DWORD PTR _pos2$[ebp], xmm0

; 4650 : 			pos2.z = wzmax;

  00364	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _wzmax$[ebp]
  00369	f3 0f 11 45 90	 movss	 DWORD PTR _pos2$[ebp+8], xmm0

; 4651 : 
; 4652 : 			if ((grid_loop >= wxmin) && (grid_loop <= wxmax))

  0036e	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  00373	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _wxmin$[ebp]
  00377	0f 82 04 01 00
	00		 jb	 $LN13@map_draw_g
  0037d	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  00382	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _wxmax$[ebp]
  00387	0f 2f c8	 comiss	 xmm1, xmm0
  0038a	0f 82 f1 00 00
	00		 jb	 $LN13@map_draw_g

; 4653 : 			{
; 4654 : 
; 4655 : 				map_get_screen_coords_from_world (obj, &pos1, &pos1);

  00390	8d 45 94	 lea	 eax, DWORD PTR _pos1$[ebp]
  00393	50		 push	 eax
  00394	8d 4d 94	 lea	 ecx, DWORD PTR _pos1$[ebp]
  00397	51		 push	 ecx
  00398	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0039b	52		 push	 edx
  0039c	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4656 : 
; 4657 : 				map_get_screen_coords_from_world (obj, &pos2, &pos2);

  003a1	8d 45 88	 lea	 eax, DWORD PTR _pos2$[ebp]
  003a4	50		 push	 eax
  003a5	8d 4d 88	 lea	 ecx, DWORD PTR _pos2$[ebp]
  003a8	51		 push	 ecx
  003a9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003ac	52		 push	 edx
  003ad	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4658 : 
; 4659 : 				if ((grid_loop % SECTOR_SIDE_LENGTH) == 0)

  003b2	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  003b5	99		 cdq
  003b6	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  003bc	85 d2		 test	 edx, edx
  003be	0f 85 86 00 00
	00		 jne	 $LN12@map_draw_g

; 4660 : 				{
; 4661 : 
; 4662 : 					// sector boundary
; 4663 : 
; 4664 : 					draw_line (pos1.x, pos1.z, pos2.x, pos2.z, sys_col_white);

  003c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  003c9	50		 push	 eax
  003ca	51		 push	 ecx
  003cb	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  003d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d5	51		 push	 ecx
  003d6	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  003db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e0	51		 push	 ecx
  003e1	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  003e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003eb	51		 push	 ecx
  003ec	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  003f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f6	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 4665 : 
; 4666 : 					sprintf (grid_number, "%03d", (int) (grid_loop * one_over_sector_side_length));

  003fb	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  00400	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  00405	f3 0f 2c c0	 cvttss2si eax, xmm0
  00409	50		 push	 eax
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_04OHGLKFFN@?$CF03d@
  0040f	8d 4d d4	 lea	 ecx, DWORD PTR _grid_number$[ebp]
  00412	51		 push	 ecx
  00413	e8 00 00 00 00	 call	 _sprintf
  00418	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4667 : 
; 4668 : 					ui_display_text (grid_number, pos1.x, pos1.z - Y_BORDER);

  0041b	f3 0f 5a 45 9c	 cvtss2sd xmm0, DWORD PTR _pos1$[ebp+8]
  00420	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@0000000000000000
  00428	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0042c	51		 push	 ecx
  0042d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00432	51		 push	 ecx
  00433	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  00438	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0043d	8d 45 d4	 lea	 eax, DWORD PTR _grid_number$[ebp]
  00440	50		 push	 eax
  00441	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00446	dd d8		 fstp	 ST(0)

; 4669 : 				}
; 4670 : 				else

  00448	eb 37		 jmp	 SHORT $LN13@map_draw_g
$LN12@map_draw_g:

; 4671 : 				{
; 4672 : 
; 4673 : 					// sub_sector division
; 4674 : 
; 4675 : 					draw_line (pos1.x, pos1.z, pos2.x, pos2.z, sys_col_slate_grey);

  0044a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_slate_grey@@3UREAL_COLOUR@@A ; sys_col_slate_grey
  0044f	50		 push	 eax
  00450	51		 push	 ecx
  00451	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  00456	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045b	51		 push	 ecx
  0045c	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  00461	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00466	51		 push	 ecx
  00467	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  0046c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00471	51		 push	 ecx
  00472	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  00477	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0047c	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN13@map_draw_g:

; 4676 : 				}
; 4677 : 			}
; 4678 : 		}

  00481	e9 ab fe ff ff	 jmp	 $LN4@map_draw_g
$LN5@map_draw_g:

; 4679 : 
; 4680 : 		// down the Z
; 4681 : 
; 4682 : 		for (grid_loop = inew_wzmin; grid_loop <= inew_wzmax; grid_loop += grid_spacing)

  00486	8b 45 ac	 mov	 eax, DWORD PTR _inew_wzmin$[ebp]
  00489	89 45 a0	 mov	 DWORD PTR _grid_loop$[ebp], eax
  0048c	eb 09		 jmp	 SHORT $LN9@map_draw_g
$LN7@map_draw_g:
  0048e	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  00491	03 45 b4	 add	 eax, DWORD PTR _grid_spacing$[ebp]
  00494	89 45 a0	 mov	 DWORD PTR _grid_loop$[ebp], eax
$LN9@map_draw_g:
  00497	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  0049a	3b 45 a4	 cmp	 eax, DWORD PTR _inew_wzmax$[ebp]
  0049d	0f 8f 4e 01 00
	00		 jg	 $LN8@map_draw_g

; 4683 : 		{
; 4684 : 
; 4685 : 			pos1.x = wxmin;

  004a3	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wxmin$[ebp]
  004a8	f3 0f 11 45 94	 movss	 DWORD PTR _pos1$[ebp], xmm0

; 4686 : 			pos1.z = grid_loop;

  004ad	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  004b2	f3 0f 11 45 9c	 movss	 DWORD PTR _pos1$[ebp+8], xmm0

; 4687 : 			pos2.x = wxmax;

  004b7	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wxmax$[ebp]
  004bc	f3 0f 11 45 88	 movss	 DWORD PTR _pos2$[ebp], xmm0

; 4688 : 			pos2.z = grid_loop;

  004c1	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  004c6	f3 0f 11 45 90	 movss	 DWORD PTR _pos2$[ebp+8], xmm0

; 4689 : 
; 4690 : 			if ((grid_loop >= wzmax) && (grid_loop <= wzmin))

  004cb	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  004d0	0f 2f 45 c4	 comiss	 xmm0, DWORD PTR _wzmax$[ebp]
  004d4	0f 82 12 01 00
	00		 jb	 $LN16@map_draw_g
  004da	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  004df	f3 0f 10 4d cc	 movss	 xmm1, DWORD PTR _wzmin$[ebp]
  004e4	0f 2f c8	 comiss	 xmm1, xmm0
  004e7	0f 82 ff 00 00
	00		 jb	 $LN16@map_draw_g

; 4691 : 			{
; 4692 : 
; 4693 : 				map_get_screen_coords_from_world (obj, &pos1, &pos1);

  004ed	8d 45 94	 lea	 eax, DWORD PTR _pos1$[ebp]
  004f0	50		 push	 eax
  004f1	8d 4d 94	 lea	 ecx, DWORD PTR _pos1$[ebp]
  004f4	51		 push	 ecx
  004f5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004f8	52		 push	 edx
  004f9	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4694 : 
; 4695 : 				map_get_screen_coords_from_world (obj, &pos2, &pos2);

  004fe	8d 45 88	 lea	 eax, DWORD PTR _pos2$[ebp]
  00501	50		 push	 eax
  00502	8d 4d 88	 lea	 ecx, DWORD PTR _pos2$[ebp]
  00505	51		 push	 ecx
  00506	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00509	52		 push	 edx
  0050a	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4696 : 
; 4697 : 				if ((grid_loop % SECTOR_SIDE_LENGTH) == 0)

  0050f	8b 45 a0	 mov	 eax, DWORD PTR _grid_loop$[ebp]
  00512	99		 cdq
  00513	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00519	85 d2		 test	 edx, edx
  0051b	0f 85 94 00 00
	00		 jne	 $LN15@map_draw_g

; 4698 : 				{
; 4699 : 
; 4700 : 					// sector boundary
; 4701 : 
; 4702 : 					draw_line (pos1.x, pos1.z, pos2.x, pos2.z, sys_col_white);

  00521	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  00526	50		 push	 eax
  00527	51		 push	 ecx
  00528	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  0052d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00532	51		 push	 ecx
  00533	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  00538	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053d	51		 push	 ecx
  0053e	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  00543	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00548	51		 push	 ecx
  00549	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  0054e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00553	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 4703 : 
; 4704 : 					sprintf (grid_number, "%03d", (int) (grid_loop * one_over_sector_side_length));

  00558	f3 0f 2a 45 a0	 cvtsi2ss xmm0, DWORD PTR _grid_loop$[ebp]
  0055d	f3 0f 59 45 b8	 mulss	 xmm0, DWORD PTR _one_over_sector_side_length$[ebp]
  00562	f3 0f 2c c0	 cvttss2si eax, xmm0
  00566	50		 push	 eax
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_04OHGLKFFN@?$CF03d@
  0056c	8d 4d d4	 lea	 ecx, DWORD PTR _grid_number$[ebp]
  0056f	51		 push	 ecx
  00570	e8 00 00 00 00	 call	 _sprintf
  00575	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4705 : 
; 4706 : 					ui_display_text (grid_number, pos1.x + X_BORDER, pos1.z - ui_get_font_height ());

  00578	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  0057d	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  00582	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _pos1$[ebp+8]
  00587	f3 0f 5c c8	 subss	 xmm1, xmm0
  0058b	51		 push	 ecx
  0058c	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00591	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR _pos1$[ebp]
  00596	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4014000000000000
  0059e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005a2	51		 push	 ecx
  005a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a8	8d 4d d4	 lea	 ecx, DWORD PTR _grid_number$[ebp]
  005ab	51		 push	 ecx
  005ac	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  005b1	dd d8		 fstp	 ST(0)

; 4707 : 				}
; 4708 : 				else

  005b3	eb 37		 jmp	 SHORT $LN16@map_draw_g
$LN15@map_draw_g:

; 4709 : 				{
; 4710 : 
; 4711 : 					// sub_sector division
; 4712 : 
; 4713 : 					draw_line (pos1.x, pos1.z, pos2.x, pos2.z, sys_col_slate_grey);

  005b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_slate_grey@@3UREAL_COLOUR@@A ; sys_col_slate_grey
  005ba	50		 push	 eax
  005bb	51		 push	 ecx
  005bc	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _pos2$[ebp+8]
  005c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c6	51		 push	 ecx
  005c7	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _pos2$[ebp]
  005cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d1	51		 push	 ecx
  005d2	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _pos1$[ebp+8]
  005d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005dc	51		 push	 ecx
  005dd	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _pos1$[ebp]
  005e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e7	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN16@map_draw_g:

; 4714 : 				}
; 4715 : 			}
; 4716 : 		}

  005ec	e9 9d fe ff ff	 jmp	 $LN7@map_draw_g
$LN8@map_draw_g:

; 4717 : 
; 4718 : 		//
; 4719 : 		// Draw scale
; 4720 : 		//
; 4721 : 
; 4722 : 		{
; 4723 : 			int value = (grid_spacing / 128) * 125; // binary -> decimal

  005f1	8b 45 b4	 mov	 eax, DWORD PTR _grid_spacing$[ebp]
  005f4	99		 cdq
  005f5	83 e2 7f	 and	 edx, 127		; 0000007fH
  005f8	03 c2		 add	 eax, edx
  005fa	c1 f8 07	 sar	 eax, 7
  005fd	6b c0 7d	 imul	 eax, eax, 125
  00600	89 45 84	 mov	 DWORD PTR _value$1[ebp], eax

; 4724 : 			if (value >= 1000) {

  00603	81 7d 84 e8 03
	00 00		 cmp	 DWORD PTR _value$1[ebp], 1000 ; 000003e8H
  0060a	7c 0e		 jl	 SHORT $LN17@map_draw_g

; 4725 : 				value /= 1000;	// m->km

  0060c	8b 45 84	 mov	 eax, DWORD PTR _value$1[ebp]
  0060f	99		 cdq
  00610	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00615	f7 f9		 idiv	 ecx
  00617	89 45 84	 mov	 DWORD PTR _value$1[ebp], eax
$LN17@map_draw_g:

; 4726 : 			}
; 4727 : 
; 4728 : 			sprintf(scale_text, "%s : %d %sm",

  0061a	81 7d b4 00 04
	00 00		 cmp	 DWORD PTR _grid_spacing$[ebp], 1024 ; 00000400H
  00621	7c 0c		 jl	 SHORT $LN35@map_draw_g
  00623	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], OFFSET ??_C@_01DICPFPGM@k@
  0062d	eb 0a		 jmp	 SHORT $LN36@map_draw_g
$LN35@map_draw_g:
  0062f	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], OFFSET ??_C@_00CNPNBAHC@@
$LN36@map_draw_g:
  00639	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv281[ebp]
  0063f	50		 push	 eax
  00640	8b 4d 84	 mov	 ecx, DWORD PTR _value$1[ebp]
  00643	51		 push	 ecx
  00644	68 00 00 00 00	 push	 OFFSET ??_C@_04FEKPLKKA@Grid@
  00649	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0064e	50		 push	 eax
  0064f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LAGFGCNM@?$CFs?5?3?5?$CFd?5?$CFsm@
  00654	8d 55 e0	 lea	 edx, DWORD PTR _scale_text$[ebp]
  00657	52		 push	 edx
  00658	e8 00 00 00 00	 call	 _sprintf
  0065d	83 c4 14	 add	 esp, 20			; 00000014H

; 4729 : 					get_trans("Grid"),
; 4730 : 					value,
; 4731 : 					(grid_spacing >= 1024) ? "k" : "");
; 4732 : 		}
; 4733 : 
; 4734 : 		pos1.x = wxmax;

  00660	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _wxmax$[ebp]
  00665	f3 0f 11 45 94	 movss	 DWORD PTR _pos1$[ebp], xmm0

; 4735 : 		pos1.x = wxmin;

  0066a	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _wxmin$[ebp]
  0066f	f3 0f 11 45 94	 movss	 DWORD PTR _pos1$[ebp], xmm0

; 4736 : 		pos1.z = wzmax;

  00674	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _wzmax$[ebp]
  00679	f3 0f 11 45 9c	 movss	 DWORD PTR _pos1$[ebp+8], xmm0

; 4737 : 
; 4738 : 		map_get_screen_coords_from_world (obj, &pos1, &pos1);

  0067e	8d 45 94	 lea	 eax, DWORD PTR _pos1$[ebp]
  00681	50		 push	 eax
  00682	8d 4d 94	 lea	 ecx, DWORD PTR _pos1$[ebp]
  00685	51		 push	 ecx
  00686	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00689	52		 push	 edx
  0068a	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 4739 : 
; 4740 : // GCsDriver  08-12-2007
; 4741 : 		set_ui_font_colour (ui_colour_white);

  0068f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white
  00694	50		 push	 eax
  00695	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 4742 : 
; 4743 : 		ui_display_text (scale_text, pos1.x + (ui_get_string_length(grid_number) + 15), pos1.z - ui_get_font_height ());

  0069a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  0069f	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  006a4	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _pos1$[ebp+8]
  006a9	f3 0f 5c c8	 subss	 xmm1, xmm0
  006ad	51		 push	 ecx
  006ae	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  006b3	8d 4d d4	 lea	 ecx, DWORD PTR _grid_number$[ebp]
  006b6	51		 push	 ecx
  006b7	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  006bc	d9 9d 40 ff ff
	ff		 fstp	 DWORD PTR tv485[ebp]
  006c2	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR tv485[ebp]
  006ca	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41700000
  006d2	f3 0f 58 45 94	 addss	 xmm0, DWORD PTR _pos1$[ebp]
  006d7	51		 push	 ecx
  006d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006dd	8d 55 e0	 lea	 edx, DWORD PTR _scale_text$[ebp]
  006e0	52		 push	 edx
  006e1	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  006e6	dd d8		 fstp	 ST(0)
$LN10@map_draw_g:

; 4744 : 	}
; 4745 : }

  006e8	5f		 pop	 edi
  006e9	5e		 pop	 esi
  006ea	5b		 pop	 ebx
  006eb	8b e5		 mov	 esp, ebp
  006ed	5d		 pop	 ebp
  006ee	c2 04 00	 ret	 4
?map_draw_grid@@YGXPAUUI_OBJECT@@@Z ENDP		; map_draw_grid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?create_2d_terrain_texture_overlays@@YGXXZ
_TEXT	SEGMENT
_old_screen$ = -4					; size = 4
?create_2d_terrain_texture_overlays@@YGXXZ PROC		; create_2d_terrain_texture_overlays, COMDAT

; 4365 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4366 : 	screen
; 4367 : 		*old_screen;
; 4368 : 
; 4369 : 	ASSERT (map_overlay);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00010	75 18		 jne	 SHORT $LN2@create_2d_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDGPEHOC@map_overlay@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_2d_:

; 4370 : 
; 4371 : 	debug_assert (NUM_MAP_X_SECTORS <= MAP_OVERLAY_TEXTURE_SIZE);

  0002a	81 3d 08 00 00
	00 80 00 00 00	 cmp	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8, 128 ; 00000080H
  00034	7e 20		 jle	 SHORT $LN3@create_2d_
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA
  0003b	83 c0 06	 add	 eax, 6
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@DDEODCLD@NUM_MAP_X_SECTORS?5?$DM?$DN?5MAP_OVERLA@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  0004e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00053	83 c4 10	 add	 esp, 16			; 00000010H
$LN3@create_2d_:

; 4372 : 	debug_assert (NUM_MAP_Z_SECTORS <= MAP_OVERLAY_TEXTURE_SIZE);

  00056	81 3d 0c 00 00
	00 80 00 00 00	 cmp	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12, 128 ; 00000080H
  00060	7e 20		 jle	 SHORT $LN4@create_2d_
  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_2d_terrain_texture_overlays@@YGXXZ@4JA
  00067	83 c0 07	 add	 eax, 7
  0006a	50		 push	 eax
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@PDCOMPDG@NUM_MAP_Z_SECTORS?5?$DM?$DN?5MAP_OVERLA@
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PODNONFH@ASSERT?5?$CFs?5?$CI?$CFs?3?$CFd?$CJ@
  0007a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0007f	83 c4 10	 add	 esp, 16			; 00000010H
$LN4@create_2d_:

; 4373 : 
; 4374 : 	old_screen = get_active_screen ();

  00082	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  00087	89 45 fc	 mov	 DWORD PTR _old_screen$[ebp], eax

; 4375 : 
; 4376 : 	lock_screen (map_overlay);

  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_overlay@@3PAUSCREEN@@A
  0008f	50		 push	 eax
  00090	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen

; 4377 : 
; 4378 : 	set_active_screen (map_overlay);

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_overlay@@3PAUSCREEN@@A
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 4379 : 
; 4380 : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_SECTOR_SIDES))

  000a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  000a5	83 e0 01	 and	 eax, 1
  000a8	74 07		 je	 SHORT $LN5@create_2d_

; 4381 : 	{
; 4382 : 		//
; 4383 : 		// SIDE DATA
; 4384 : 		//
; 4385 : 
; 4386 : 		create_sector_side_texture_overlay ();

  000aa	e8 00 00 00 00	 call	 ?create_sector_side_texture_overlay@@YGXXZ ; create_sector_side_texture_overlay
  000af	eb 0f		 jmp	 SHORT $LN6@create_2d_
$LN5@create_2d_:

; 4387 : 	}
; 4388 : 	else if (global_layer_controls & (1 << MAP_LAYER_CONTROL_FOG_OF_WAR))

  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  000b6	83 e0 02	 and	 eax, 2
  000b9	74 05		 je	 SHORT $LN6@create_2d_

; 4389 : 	{
; 4390 : 		//
; 4391 : 		// FOG OF WAR
; 4392 : 		//
; 4393 : 
; 4394 : 		create_fog_of_war_texture_overlay ();

  000bb	e8 00 00 00 00	 call	 ?create_fog_of_war_texture_overlay@@YGXXZ ; create_fog_of_war_texture_overlay
$LN6@create_2d_:

; 4395 : 	}
; 4396 : 
; 4397 : 	unlock_screen (map_overlay);

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_overlay@@3PAUSCREEN@@A
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen

; 4398 : 
; 4399 : 	set_active_screen (old_screen);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _old_screen$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 4400 : }

  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	8b e5		 mov	 esp, ebp
  000d9	5d		 pop	 ebp
  000da	c3		 ret	 0
?create_2d_terrain_texture_overlays@@YGXXZ ENDP		; create_2d_terrain_texture_overlays
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z
_TEXT	SEGMENT
_quad$1 = -332						; size = 256
_iheight$ = -76						; size = 4
_iwidth$ = -72						; size = 4
_iy$ = -68						; size = 4
_ix$ = -64						; size = 4
_v2$ = -60						; size = 4
_u2$ = -56						; size = 4
_v1$ = -52						; size = 4
_u1$ = -48						; size = 4
_y2$ = -44						; size = 4
_x2$ = -40						; size = 4
_y1$ = -36						; size = 4
_x1$ = -32						; size = 4
_v_scale$ = -28						; size = 4
_u_scale$ = -24						; size = 4
_y_size$ = -20						; size = 4
_x_size$ = -16						; size = 4
_specular$ = -12					; size = 4
_colour$ = -8						; size = 4
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
_width$ = 20						; size = 4
_height$ = 24						; size = 4
?draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z PROC ; draw_2d_terrain_texture_overlays, COMDAT

; 3966 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 01 00
	00		 sub	 esp, 396		; 0000018cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3967 : 	map_dimension_type
; 3968 : 		*map_dimensions;
; 3969 : 
; 3970 : 	real_colour
; 3971 : 		colour,
; 3972 : 		specular;
; 3973 : 
; 3974 : 	float
; 3975 : 		x_size,
; 3976 : 		y_size,
; 3977 : 		u_scale,
; 3978 : 		v_scale,
; 3979 : 		x1, y1,
; 3980 : 		x2, y2,
; 3981 : 		u1, v1,
; 3982 : 		u2, v2;
; 3983 : 
; 3984 : 	int
; 3985 : 		ix,
; 3986 : 		iy,
; 3987 : 		iwidth,
; 3988 : 		iheight;
; 3989 : 
; 3990 : 	ASSERT (obj);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@draw_2d_te
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA
  00017	83 c0 18	 add	 eax, 24			; 00000018H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@draw_2d_te:

; 3991 : 
; 3992 : 	ASSERT (map_overlay);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00031	75 18		 jne	 SHORT $LN3@draw_2d_te
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA
  00038	83 c0 1a	 add	 eax, 26			; 0000001aH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDGPEHOC@map_overlay@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@draw_2d_te:

; 3993 : 
; 3994 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3995 : 
; 3996 : 	ASSERT (map_dimensions);

  00060	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00064	75 18		 jne	 SHORT $LN4@draw_2d_te
  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA
  0006b	83 c0 1e	 add	 eax, 30			; 0000001eH
  0006e	50		 push	 eax
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@draw_2d_te:

; 3997 : 
; 3998 : 	if (
; 3999 : 			(global_layer_controls & (1 << MAP_LAYER_CONTROL_SECTOR_SIDES)) ||

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  00083	83 e0 01	 and	 eax, 1
  00086	75 0e		 jne	 SHORT $LN6@draw_2d_te
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0008d	83 e0 02	 and	 eax, 2
  00090	0f 84 41 05 00
	00		 je	 $LN7@draw_2d_te
$LN6@draw_2d_te:

; 4000 : 			(global_layer_controls & (1 << MAP_LAYER_CONTROL_FOG_OF_WAR))
; 4001 : 		)
; 4002 : 	{
; 4003 : 		if ( d3d_in_3d_scene )

  00096	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_in_3d_scene@@3HA, 0 ; d3d_in_3d_scene
  0009d	0f 84 34 05 00
	00		 je	 $LN7@draw_2d_te

; 4004 : 		{
; 4005 : 			u_scale = (float)NUM_MAP_X_SECTORS / (float)MAP_OVERLAY_TEXTURE_SIZE;

  000a3	f3 0f 2a 05 08
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  000ab	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@43000000
  000b3	f3 0f 11 45 e8	 movss	 DWORD PTR _u_scale$[ebp], xmm0

; 4006 : 			v_scale = (float)NUM_MAP_Z_SECTORS / (float)MAP_OVERLAY_TEXTURE_SIZE;

  000b8	f3 0f 2a 05 0c
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12
  000c0	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@43000000
  000c8	f3 0f 11 45 e4	 movss	 DWORD PTR _v_scale$[ebp], xmm0

; 4007 : 
; 4008 : 			x_size = get_ui_object_x_size (obj);

  000cd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000dd	ff d0		 call	 eax
  000df	d9 5d f0	 fstp	 DWORD PTR _x_size$[ebp]

; 4009 : 			y_size = get_ui_object_y_size (obj);

  000e2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000e5	50		 push	 eax
  000e6	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000e9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000eb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000f2	ff d0		 call	 eax
  000f4	d9 5d ec	 fstp	 DWORD PTR _y_size$[ebp]

; 4010 : 
; 4011 : 			x1 = get_ui_object_x (obj);

  000f7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000fa	50		 push	 eax
  000fb	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000fe	8b 11		 mov	 edx, DWORD PTR [ecx]
  00100	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00107	ff d0		 call	 eax
  00109	d9 5d e0	 fstp	 DWORD PTR _x1$[ebp]

; 4012 : 			y1 = get_ui_object_y (obj);

  0010c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00113	8b 11		 mov	 edx, DWORD PTR [ecx]
  00115	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0011c	ff d0		 call	 eax
  0011e	d9 5d dc	 fstp	 DWORD PTR _y1$[ebp]

; 4013 : 
; 4014 : 			convert_float_to_int (x1, &ix);

  00121	8d 45 c0	 lea	 eax, DWORD PTR _ix$[ebp]
  00124	50		 push	 eax
  00125	51		 push	 ecx
  00126	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4015 : 			convert_float_to_int (y1, &iy);

  00135	8d 45 bc	 lea	 eax, DWORD PTR _iy$[ebp]
  00138	50		 push	 eax
  00139	51		 push	 ecx
  0013a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0013f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00144	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4016 : 
; 4017 : 			convert_float_to_int (x_size, &iwidth);

  00149	8d 45 b8	 lea	 eax, DWORD PTR _iwidth$[ebp]
  0014c	50		 push	 eax
  0014d	51		 push	 ecx
  0014e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  00153	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00158	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4018 : 			convert_float_to_int (y_size, &iheight);

  0015d	8d 45 b4	 lea	 eax, DWORD PTR _iheight$[ebp]
  00160	50		 push	 eax
  00161	51		 push	 ecx
  00162	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00167	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016c	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 4019 : 
; 4020 : 			x1 = ix;

  00171	f3 0f 2a 45 c0	 cvtsi2ss xmm0, DWORD PTR _ix$[ebp]
  00176	f3 0f 11 45 e0	 movss	 DWORD PTR _x1$[ebp], xmm0

; 4021 : 			y1 = iy;

  0017b	f3 0f 2a 45 bc	 cvtsi2ss xmm0, DWORD PTR _iy$[ebp]
  00180	f3 0f 11 45 dc	 movss	 DWORD PTR _y1$[ebp], xmm0

; 4022 : 
; 4023 : 			x_size = iwidth;

  00185	f3 0f 2a 45 b8	 cvtsi2ss xmm0, DWORD PTR _iwidth$[ebp]
  0018a	f3 0f 11 45 f0	 movss	 DWORD PTR _x_size$[ebp], xmm0

; 4024 : 			y_size = iheight;

  0018f	f3 0f 2a 45 b4	 cvtsi2ss xmm0, DWORD PTR _iheight$[ebp]
  00194	f3 0f 11 45 ec	 movss	 DWORD PTR _y_size$[ebp], xmm0

; 4025 : 
; 4026 : 			x2 = x1 + x_size;

  00199	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0019e	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  001a3	f3 0f 11 45 d8	 movss	 DWORD PTR _x2$[ebp], xmm0

; 4027 : 			y2 = y1 + y_size;

  001a8	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001ad	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  001b2	f3 0f 11 45 d4	 movss	 DWORD PTR _y2$[ebp], xmm0

; 4028 : 
; 4029 : 			u1 = u_scale * (x - (width * 0.5)) / (MAX_MAP_X - MIN_MAP_X);

  001b7	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _u_scale$[ebp]
  001bc	f3 0f 5a 4d 0c	 cvtss2sd xmm1, DWORD PTR _x$[ebp]
  001c1	f3 0f 5a 55 14	 cvtss2sd xmm2, DWORD PTR _width$[ebp]
  001c6	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  001ce	f2 0f 5c ca	 subsd	 xmm1, xmm2
  001d2	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  001d6	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001de	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  001e6	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  001ea	f2 0f 5e c1	 divsd	 xmm0, xmm1
  001ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f2	f3 0f 11 45 d0	 movss	 DWORD PTR _u1$[ebp], xmm0

; 4030 : 			v1 = v_scale * (z - (height * 0.5)) / (MAX_MAP_Z - MIN_MAP_Z);

  001f7	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _v_scale$[ebp]
  001fc	f3 0f 5a 4d 10	 cvtss2sd xmm1, DWORD PTR _z$[ebp]
  00201	f3 0f 5a 55 18	 cvtss2sd xmm2, DWORD PTR _height$[ebp]
  00206	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  0020e	f2 0f 5c ca	 subsd	 xmm1, xmm2
  00212	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00216	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0021e	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00226	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0022a	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0022e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00232	f3 0f 11 45 cc	 movss	 DWORD PTR _v1$[ebp], xmm0

; 4031 : 
; 4032 : 			u2 = u_scale * (x + (width * 0.5)) / (MAX_MAP_X - MIN_MAP_X);

  00237	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _u_scale$[ebp]
  0023c	f3 0f 5a 4d 0c	 cvtss2sd xmm1, DWORD PTR _x$[ebp]
  00241	f3 0f 5a 55 14	 cvtss2sd xmm2, DWORD PTR _width$[ebp]
  00246	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  0024e	f2 0f 58 ca	 addsd	 xmm1, xmm2
  00252	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00256	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0025e	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00266	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0026a	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0026e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00272	f3 0f 11 45 c8	 movss	 DWORD PTR _u2$[ebp], xmm0

; 4033 : 			v2 = v_scale * (z + (height * 0.5)) / (MAX_MAP_Z - MIN_MAP_Z);

  00277	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _v_scale$[ebp]
  0027c	f3 0f 5a 4d 10	 cvtss2sd xmm1, DWORD PTR _z$[ebp]
  00281	f3 0f 5a 55 18	 cvtss2sd xmm2, DWORD PTR _height$[ebp]
  00286	f2 0f 59 15 00
	00 00 00	 mulsd	 xmm2, QWORD PTR __real@3fe0000000000000
  0028e	f2 0f 58 ca	 addsd	 xmm1, xmm2
  00292	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00296	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0029e	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  002a6	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  002aa	f2 0f 5e c1	 divsd	 xmm0, xmm1
  002ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b2	f3 0f 11 45 c4	 movss	 DWORD PTR _v2$[ebp], xmm0

; 4034 : 
; 4035 : 			//
; 4036 : 			// Always have to render to the video screen
; 4037 : 			//
; 4038 : 
; 4039 : 			ASSERT ( active_screen == video_screen );

  002b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  002bc	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  002c2	74 18		 je	 SHORT $LN8@draw_2d_te
  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z@4JA
  002c9	83 c0 49	 add	 eax, 73			; 00000049H
  002cc	50		 push	 eax
  002cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KHBEEGFH@active_screen?5?$DN?$DN?5video_screen@
  002d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@draw_2d_te:

; 4040 : 
; 4041 : 			colour.red = 255;

  002dc	c6 45 fa ff	 mov	 BYTE PTR _colour$[ebp+2], 255 ; 000000ffH

; 4042 : 			colour.green = 255;

  002e0	c6 45 f9 ff	 mov	 BYTE PTR _colour$[ebp+1], 255 ; 000000ffH

; 4043 : 			colour.blue = 255;

  002e4	c6 45 f8 ff	 mov	 BYTE PTR _colour$[ebp], 255 ; 000000ffH

; 4044 : 			colour.alpha = 255;

  002e8	c6 45 fb ff	 mov	 BYTE PTR _colour$[ebp+3], 255 ; 000000ffH

; 4045 : 
; 4046 : 			specular.red = 0;

  002ec	c6 45 f6 00	 mov	 BYTE PTR _specular$[ebp+2], 0

; 4047 : 			specular.green = 0;

  002f0	c6 45 f5 00	 mov	 BYTE PTR _specular$[ebp+1], 0

; 4048 : 			specular.blue = 0;

  002f4	c6 45 f4 00	 mov	 BYTE PTR _specular$[ebp], 0

; 4049 : 			specular.alpha = 255;

  002f8	c6 45 f7 ff	 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 4050 : 
; 4051 : 			set_d3d_flat_shaded_textured_renderstate (map_overlay);

  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_overlay@@3PAUSCREEN@@A
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 4052 : 			set_d3d_transparency_on ();

  00307	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 4053 : 			set_d3d_zbuffer_comparison ( FALSE );

  0030c	6a 00		 push	 0
  0030e	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 4054 : 			set_d3d_texture_wrapping ( 0, FALSE );

  00313	6a 00		 push	 0
  00315	6a 00		 push	 0
  00317	e8 00 00 00 00	 call	 ?set_d3d_texture_wrapping@@YGXHH@Z ; set_d3d_texture_wrapping

; 4055 : 			set_d3d_texture_mag_filtering (TRUE);

  0031c	6a 01		 push	 1
  0031e	e8 00 00 00 00	 call	 ?set_d3d_texture_mag_filtering@@YGXH@Z ; set_d3d_texture_mag_filtering

; 4056 : 			set_d3d_texture_min_filtering (TRUE);

  00323	6a 01		 push	 1
  00325	e8 00 00 00 00	 call	 ?set_d3d_texture_min_filtering@@YGXH@Z ; set_d3d_texture_min_filtering

; 4057 : 			set_d3d_texture_mip_filtering (FALSE);

  0032a	6a 00		 push	 0
  0032c	e8 00 00 00 00	 call	 ?set_d3d_texture_mip_filtering@@YGXH@Z ; set_d3d_texture_mip_filtering

; 4058 : 
; 4059 : 			{
; 4060 : 				vertex
; 4061 : 					quad[4];
; 4062 : 
; 4063 : 				//
; 4064 : 				// Set up quad vertices
; 4065 : 				//
; 4066 : 
; 4067 : 				quad[0].i = x1;

  00331	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00336	6b c8 00	 imul	 ecx, eax, 0
  00339	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0033e	f3 0f 11 84 0d
	c4 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+16], xmm0

; 4068 : 				quad[0].j = y1;

  00347	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0034c	6b c8 00	 imul	 ecx, eax, 0
  0034f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00354	f3 0f 11 84 0d
	c8 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+20], xmm0

; 4069 : 				quad[0].u = u1;

  0035d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00362	6b c8 00	 imul	 ecx, eax, 0
  00365	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _u1$[ebp]
  0036a	f3 0f 11 84 0d
	cc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+24], xmm0

; 4070 : 				quad[0].v = v1;

  00373	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00378	6b c8 00	 imul	 ecx, eax, 0
  0037b	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _v1$[ebp]
  00380	f3 0f 11 84 0d
	d0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+28], xmm0

; 4071 : 				quad[0].q = 0.1;

  00389	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0038e	6b c8 00	 imul	 ecx, eax, 0
  00391	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00399	f3 0f 11 84 0d
	c0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+12], xmm0

; 4072 : 				quad[0].z = 100;

  003a2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003a7	6b c8 00	 imul	 ecx, eax, 0
  003aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  003b2	f3 0f 11 84 0d
	bc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+8], xmm0

; 4073 : 				quad[0].next_vertex = &quad[1];

  003bb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003c0	c1 e0 00	 shl	 eax, 0
  003c3	8d 8c 05 b4 fe
	ff ff		 lea	 ecx, DWORD PTR _quad$1[ebp+eax]
  003ca	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  003cf	6b c2 00	 imul	 eax, edx, 0
  003d2	89 8c 05 dc fe
	ff ff		 mov	 DWORD PTR _quad$1[ebp+eax+40], ecx

; 4074 : 
; 4075 : 				quad[1].i = x2;

  003d9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003de	c1 e0 00	 shl	 eax, 0
  003e1	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003e6	f3 0f 11 84 05
	c4 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+16], xmm0

; 4076 : 				quad[1].j = y1;

  003ef	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003f4	c1 e0 00	 shl	 eax, 0
  003f7	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003fc	f3 0f 11 84 05
	c8 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+20], xmm0

; 4077 : 				quad[1].u = u2;

  00405	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0040a	c1 e0 00	 shl	 eax, 0
  0040d	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _u2$[ebp]
  00412	f3 0f 11 84 05
	cc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+24], xmm0

; 4078 : 				quad[1].v = v1;

  0041b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00420	c1 e0 00	 shl	 eax, 0
  00423	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _v1$[ebp]
  00428	f3 0f 11 84 05
	d0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+28], xmm0

; 4079 : 				quad[1].q = 0.1;

  00431	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00436	c1 e0 00	 shl	 eax, 0
  00439	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00441	f3 0f 11 84 05
	c0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+12], xmm0

; 4080 : 				quad[1].z = 100;

  0044a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0044f	c1 e0 00	 shl	 eax, 0
  00452	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  0045a	f3 0f 11 84 05
	bc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+8], xmm0

; 4081 : 				quad[1].next_vertex = &quad[2];

  00463	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00468	d1 e0		 shl	 eax, 1
  0046a	8d 8c 05 b4 fe
	ff ff		 lea	 ecx, DWORD PTR _quad$1[ebp+eax]
  00471	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00476	c1 e2 00	 shl	 edx, 0
  00479	89 8c 15 dc fe
	ff ff		 mov	 DWORD PTR _quad$1[ebp+edx+40], ecx

; 4082 : 
; 4083 : 				quad[2].i = x2;

  00480	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00485	d1 e0		 shl	 eax, 1
  00487	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0048c	f3 0f 11 84 05
	c4 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+16], xmm0

; 4084 : 				quad[2].j = y2;

  00495	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0049a	d1 e0		 shl	 eax, 1
  0049c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  004a1	f3 0f 11 84 05
	c8 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+20], xmm0

; 4085 : 				quad[2].u = u2;

  004aa	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004af	d1 e0		 shl	 eax, 1
  004b1	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _u2$[ebp]
  004b6	f3 0f 11 84 05
	cc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+24], xmm0

; 4086 : 				quad[2].v = v2;

  004bf	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004c4	d1 e0		 shl	 eax, 1
  004c6	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _v2$[ebp]
  004cb	f3 0f 11 84 05
	d0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+28], xmm0

; 4087 : 				quad[2].q = 0.1;

  004d4	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004d9	d1 e0		 shl	 eax, 1
  004db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  004e3	f3 0f 11 84 05
	c0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+12], xmm0

; 4088 : 				quad[2].z = 100;

  004ec	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004f1	d1 e0		 shl	 eax, 1
  004f3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  004fb	f3 0f 11 84 05
	bc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+eax+8], xmm0

; 4089 : 				quad[2].next_vertex = &quad[3];

  00504	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00509	6b c8 03	 imul	 ecx, eax, 3
  0050c	8d 94 0d b4 fe
	ff ff		 lea	 edx, DWORD PTR _quad$1[ebp+ecx]
  00513	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00518	d1 e0		 shl	 eax, 1
  0051a	89 94 05 dc fe
	ff ff		 mov	 DWORD PTR _quad$1[ebp+eax+40], edx

; 4090 : 
; 4091 : 				quad[3].i = x1;

  00521	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00526	6b c8 03	 imul	 ecx, eax, 3
  00529	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0052e	f3 0f 11 84 0d
	c4 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+16], xmm0

; 4092 : 				quad[3].j = y2;

  00537	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0053c	6b c8 03	 imul	 ecx, eax, 3
  0053f	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00544	f3 0f 11 84 0d
	c8 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+20], xmm0

; 4093 : 				quad[3].u = u1;

  0054d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00552	6b c8 03	 imul	 ecx, eax, 3
  00555	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _u1$[ebp]
  0055a	f3 0f 11 84 0d
	cc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+24], xmm0

; 4094 : 				quad[3].v = v2;

  00563	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00568	6b c8 03	 imul	 ecx, eax, 3
  0056b	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _v2$[ebp]
  00570	f3 0f 11 84 0d
	d0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+28], xmm0

; 4095 : 				quad[3].q = 0.1;

  00579	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0057e	6b c8 03	 imul	 ecx, eax, 3
  00581	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  00589	f3 0f 11 84 0d
	c0 fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+12], xmm0

; 4096 : 				quad[3].z = 100;

  00592	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00597	6b c8 03	 imul	 ecx, eax, 3
  0059a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  005a2	f3 0f 11 84 0d
	bc fe ff ff	 movss	 DWORD PTR _quad$1[ebp+ecx+8], xmm0

; 4097 : 				quad[3].next_vertex = NULL;

  005ab	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005b0	6b c8 03	 imul	 ecx, eax, 3
  005b3	c7 84 0d dc fe
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$1[ebp+ecx+40], 0

; 4098 : 
; 4099 : 				draw_wbuffered_flat_shaded_textured_polygon ( quad, colour, specular );

  005be	8b 45 f4	 mov	 eax, DWORD PTR _specular$[ebp]
  005c1	50		 push	 eax
  005c2	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  005c5	51		 push	 ecx
  005c6	8d 95 b4 fe ff
	ff		 lea	 edx, DWORD PTR _quad$1[ebp]
  005cc	52		 push	 edx
  005cd	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 4100 : 			}
; 4101 : 
; 4102 : 			flush_triangle_primitives ();

  005d2	e8 00 00 00 00	 call	 ?flush_triangle_primitives@@YGXXZ ; flush_triangle_primitives
$LN7@draw_2d_te:

; 4103 : 		}
; 4104 : 	}
; 4105 : }

  005d7	5f		 pop	 edi
  005d8	5e		 pop	 esi
  005d9	5b		 pop	 ebx
  005da	8b e5		 mov	 esp, ebp
  005dc	5d		 pop	 ebp
  005dd	c2 14 00	 ret	 20			; 00000014H
?draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z ENDP ; draw_2d_terrain_texture_overlays
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z
_TEXT	SEGMENT
tv188 = -100						; size = 8
tv164 = -100						; size = 8
tv189 = -92						; size = 8
tv165 = -92						; size = 8
_map_dimensions$ = -20					; size = 4
_y_size$ = -16						; size = 4
_x_size$ = -12						; size = 4
_height$ = -8						; size = 4
_width$ = -4						; size = 4
_obj$ = 8						; size = 4
_w$ = 12						; size = 4
_h$ = 16						; size = 4
?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z PROC	; bound_map_extents, COMDAT

; 3884 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3885 : 	float
; 3886 : 		width,
; 3887 : 		height,
; 3888 : 		x_size,
; 3889 : 		y_size;
; 3890 : 
; 3891 : 	map_dimension_type
; 3892 : 		*map_dimensions;
; 3893 : 
; 3894 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@bound_map_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@bound_map_:

; 3895 : 
; 3896 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00030	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00037	ff d0		 call	 eax
  00039	89 45 ec	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3897 : 
; 3898 : 	ASSERT (map_dimensions);

  0003c	83 7d ec 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00040	75 18		 jne	 SHORT $LN3@bound_map_
  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z@4JA
  00047	83 c0 0e	 add	 eax, 14			; 0000000eH
  0004a	50		 push	 eax
  0004b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00050	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00055	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@bound_map_:

; 3899 : 
; 3900 : 	x_size = get_ui_object_x_size (obj);

  0005a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00061	8b 11		 mov	 edx, DWORD PTR [ecx]
  00063	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0006a	ff d0		 call	 eax
  0006c	d9 5d f4	 fstp	 DWORD PTR _x_size$[ebp]

; 3901 : 
; 3902 : 	y_size = get_ui_object_y_size (obj);

  0006f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00076	8b 11		 mov	 edx, DWORD PTR [ecx]
  00078	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0007f	ff d0		 call	 eax
  00081	d9 5d f0	 fstp	 DWORD PTR _y_size$[ebp]

; 3903 : 
; 3904 : 	//
; 3905 : 	// Correct Aspect Ratio + Bound Size
; 3906 : 	//
; 3907 : 
; 3908 : 	if (x_size < y_size)

  00084	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00089	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _x_size$[ebp]
  0008d	76 26		 jbe	 SHORT $LN4@bound_map_

; 3909 : 	{
; 3910 : 		height = map_dimensions->size;

  0008f	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00092	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00097	f3 0f 11 45 f8	 movss	 DWORD PTR _height$[ebp], xmm0

; 3911 : 
; 3912 : 		width = map_dimensions->size * (x_size / y_size);

  0009c	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  000a1	f3 0f 5e 45 f0	 divss	 xmm0, DWORD PTR _y_size$[ebp]
  000a6	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000a9	f3 0f 59 40 08	 mulss	 xmm0, DWORD PTR [eax+8]
  000ae	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0
  000b3	eb 4b		 jmp	 SHORT $LN7@bound_map_
$LN4@bound_map_:

; 3913 : 	}
; 3914 : 	else if (x_size > y_size)

  000b5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  000ba	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _y_size$[ebp]
  000be	76 26		 jbe	 SHORT $LN6@bound_map_

; 3915 : 	{
; 3916 : 		width = map_dimensions->size;

  000c0	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000c3	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000c8	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0

; 3917 : 
; 3918 : 		height = map_dimensions->size * (y_size / x_size);

  000cd	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  000d2	f3 0f 5e 45 f4	 divss	 xmm0, DWORD PTR _x_size$[ebp]
  000d7	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000da	f3 0f 59 40 08	 mulss	 xmm0, DWORD PTR [eax+8]
  000df	f3 0f 11 45 f8	 movss	 DWORD PTR _height$[ebp], xmm0

; 3919 : 	}
; 3920 : 	else

  000e4	eb 1a		 jmp	 SHORT $LN7@bound_map_
$LN6@bound_map_:

; 3921 : 	{
; 3922 : 		width = map_dimensions->size;

  000e6	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000e9	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000ee	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0

; 3923 : 
; 3924 : 		height = map_dimensions->size;

  000f3	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000f6	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000fb	f3 0f 11 45 f8	 movss	 DWORD PTR _height$[ebp], xmm0
$LN7@bound_map_:

; 3925 : 	}
; 3926 : 
; 3927 : 	if (width > MAX_MAP_X)

  00100	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _width$[ebp]
  00105	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0010c	76 24		 jbe	 SHORT $LN8@bound_map_

; 3928 : 	{
; 3929 : 		height *= MAX_MAP_X / width;

  0010e	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00116	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _width$[ebp]
  0011b	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _height$[ebp]
  00120	f3 0f 11 45 f8	 movss	 DWORD PTR _height$[ebp], xmm0

; 3930 : 
; 3931 : 		width = MAX_MAP_X;

  00125	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0012d	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0
$LN8@bound_map_:

; 3932 : 	}
; 3933 : 
; 3934 : 	if (height > MAX_MAP_Z)

  00132	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _height$[ebp]
  00137	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0013e	76 24		 jbe	 SHORT $LN9@bound_map_

; 3935 : 	{
; 3936 : 		width *= MAX_MAP_Z / height;

  00140	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00148	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _height$[ebp]
  0014d	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _width$[ebp]
  00152	f3 0f 11 45 fc	 movss	 DWORD PTR _width$[ebp], xmm0

; 3937 : 
; 3938 : 		height = MAX_MAP_Z;

  00157	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0015f	f3 0f 11 45 f8	 movss	 DWORD PTR _height$[ebp], xmm0
$LN9@bound_map_:

; 3939 : 	}
; 3940 : 
; 3941 : 	//
; 3942 : 	// Bound Map
; 3943 : 	//
; 3944 : 
; 3945 : 	map_dimensions->size = max (width, height);

  00164	8d 45 f8	 lea	 eax, DWORD PTR _height$[ebp]
  00167	50		 push	 eax
  00168	8d 4d fc	 lea	 ecx, DWORD PTR _width$[ebp]
  0016b	51		 push	 ecx
  0016c	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00171	8b 55 ec	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00174	8b 00		 mov	 eax, DWORD PTR [eax]
  00176	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 3946 : 
; 3947 : 	map_dimensions->x = bound (map_dimensions->x, width / 2.0, MAX_MAP_X - width / 2.0);

  00179	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0017c	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00180	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _width$[ebp]
  00185	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  0018d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00191	76 14		 jbe	 SHORT $LN15@bound_map_
  00193	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _width$[ebp]
  00198	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  001a0	f2 0f 11 45 a4	 movsd	 QWORD PTR tv165[ebp], xmm0
  001a5	eb 5c		 jmp	 SHORT $LN16@bound_map_
$LN15@bound_map_:
  001a7	8b 4d ec	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  001aa	f3 0f 5a 01	 cvtss2sd xmm0, DWORD PTR [ecx]
  001ae	f3 0f 5a 0d 3c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001b6	f3 0f 5a 55 fc	 cvtss2sd xmm2, DWORD PTR _width$[ebp]
  001bb	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4000000000000000
  001c3	f2 0f 5c ca	 subsd	 xmm1, xmm2
  001c7	66 0f 2f c1	 comisd	 xmm0, xmm1
  001cb	76 20		 jbe	 SHORT $LN13@bound_map_
  001cd	f3 0f 5a 05 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001d5	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _width$[ebp]
  001da	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  001e2	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001e6	f2 0f 11 45 9c	 movsd	 QWORD PTR tv164[ebp], xmm0
  001eb	eb 0c		 jmp	 SHORT $LN14@bound_map_
$LN13@bound_map_:
  001ed	8b 55 ec	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  001f0	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  001f4	f2 0f 11 45 9c	 movsd	 QWORD PTR tv164[ebp], xmm0
$LN14@bound_map_:
  001f9	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv164[ebp]
  001fe	f2 0f 11 45 a4	 movsd	 QWORD PTR tv165[ebp], xmm0
$LN16@bound_map_:
  00203	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv165[ebp]
  00208	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0020b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 3948 : 	map_dimensions->z = bound (map_dimensions->z, height / 2.0, MAX_MAP_Z - height / 2.0);

  0020f	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00212	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00217	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _height$[ebp]
  0021c	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  00224	66 0f 2f c8	 comisd	 xmm1, xmm0
  00228	76 14		 jbe	 SHORT $LN19@bound_map_
  0022a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _height$[ebp]
  0022f	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00237	f2 0f 11 45 a4	 movsd	 QWORD PTR tv189[ebp], xmm0
  0023c	eb 5e		 jmp	 SHORT $LN20@bound_map_
$LN19@bound_map_:
  0023e	8b 4d ec	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00241	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  00246	f3 0f 5a 0d 44
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0024e	f3 0f 5a 55 f8	 cvtss2sd xmm2, DWORD PTR _height$[ebp]
  00253	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4000000000000000
  0025b	f2 0f 5c ca	 subsd	 xmm1, xmm2
  0025f	66 0f 2f c1	 comisd	 xmm0, xmm1
  00263	76 20		 jbe	 SHORT $LN17@bound_map_
  00265	f3 0f 5a 05 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0026d	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _height$[ebp]
  00272	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  0027a	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0027e	f2 0f 11 45 9c	 movsd	 QWORD PTR tv188[ebp], xmm0
  00283	eb 0d		 jmp	 SHORT $LN18@bound_map_
$LN17@bound_map_:
  00285	8b 55 ec	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  00288	f3 0f 5a 42 04	 cvtss2sd xmm0, DWORD PTR [edx+4]
  0028d	f2 0f 11 45 9c	 movsd	 QWORD PTR tv188[ebp], xmm0
$LN18@bound_map_:
  00292	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv188[ebp]
  00297	f2 0f 11 45 a4	 movsd	 QWORD PTR tv189[ebp], xmm0
$LN20@bound_map_:
  0029c	f2 0f 5a 45 a4	 cvtsd2ss xmm0, QWORD PTR tv189[ebp]
  002a1	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002a4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 3949 : 
; 3950 : 	if (w)

  002a9	83 7d 0c 00	 cmp	 DWORD PTR _w$[ebp], 0
  002ad	74 0c		 je	 SHORT $LN10@bound_map_

; 3951 : 	{
; 3952 : 		*w = width;

  002af	8b 45 0c	 mov	 eax, DWORD PTR _w$[ebp]
  002b2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _width$[ebp]
  002b7	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN10@bound_map_:

; 3953 : 	}
; 3954 : 
; 3955 : 	if (h)

  002bb	83 7d 10 00	 cmp	 DWORD PTR _h$[ebp], 0
  002bf	74 0c		 je	 SHORT $LN11@bound_map_

; 3956 : 	{
; 3957 : 		*h = height;

  002c1	8b 45 10	 mov	 eax, DWORD PTR _h$[ebp]
  002c4	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _height$[ebp]
  002c9	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN11@bound_map_:

; 3958 : 	}
; 3959 : }

  002cd	5f		 pop	 edi
  002ce	5e		 pop	 esi
  002cf	5b		 pop	 ebx
  002d0	8b e5		 mov	 esp, ebp
  002d2	5d		 pop	 ebp
  002d3	c2 0c 00	 ret	 12			; 0000000cH
?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ENDP	; bound_map_extents
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z
_TEXT	SEGMENT
_wz_max$ = -40						; size = 4
_wx_max$ = -36						; size = 4
_wz_min$ = -32						; size = 4
_wx_min$ = -28						; size = 4
_height$ = -24						; size = 4
_width$ = -20						; size = 4
_y_size$ = -16						; size = 4
_x_size$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
_spos$ = 12						; size = 4
_wpos$ = 16						; size = 4
?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z PROC ; map_get_world_coords_from_screen, COMDAT

; 2167 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2168 : 
; 2169 : 	float
; 2170 : 		x1,
; 2171 : 		y1,
; 2172 : 		x_size,
; 2173 : 		y_size,
; 2174 : 		width,
; 2175 : 		height,
; 2176 : 		wx_min,
; 2177 : 		wz_min,
; 2178 : 		wx_max,
; 2179 : 		wz_max;
; 2180 : 
; 2181 : 	ASSERT (wpos);

  00009	83 7d 10 00	 cmp	 DWORD PTR _wpos$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_get_wo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
  00014	83 c0 0e	 add	 eax, 14			; 0000000eH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04FOIJDCIJ@wpos@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_get_wo:

; 2182 : 	ASSERT (spos);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _spos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_get_wo
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
  00032	83 c0 0f	 add	 eax, 15			; 0000000fH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_04KLAJJEEJ@spos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_get_wo:

; 2183 : 
; 2184 : 	wpos->x = spos->x;

  00045	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _spos$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	89 10		 mov	 DWORD PTR [eax], edx

; 2185 : 	wpos->y = spos->y;

  0004f	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _spos$[ebp]
  00055	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00058	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 2186 : 	wpos->z = spos->z;

  0005b	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _spos$[ebp]
  00061	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00064	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 2187 : 
; 2188 : 	x1 = get_ui_object_x (obj);

  00067	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00077	ff d0		 call	 eax
  00079	d9 5d fc	 fstp	 DWORD PTR _x1$[ebp]

; 2189 : 	y1 = get_ui_object_y (obj);

  0007c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008c	ff d0		 call	 eax
  0008e	d9 5d f8	 fstp	 DWORD PTR _y1$[ebp]

; 2190 : 
; 2191 : 	x_size = get_ui_object_x_size (obj);

  00091	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a1	ff d0		 call	 eax
  000a3	d9 5d f4	 fstp	 DWORD PTR _x_size$[ebp]

; 2192 : 	y_size = get_ui_object_y_size (obj);

  000a6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000b6	ff d0		 call	 eax
  000b8	d9 5d f0	 fstp	 DWORD PTR _y_size$[ebp]

; 2193 : 
; 2194 : 	get_2d_terrain_map_world_dimensions (&wx_min, &wz_min, &wx_max, &wz_max);

  000bb	8d 45 d8	 lea	 eax, DWORD PTR _wz_max$[ebp]
  000be	50		 push	 eax
  000bf	8d 4d dc	 lea	 ecx, DWORD PTR _wx_max$[ebp]
  000c2	51		 push	 ecx
  000c3	8d 55 e0	 lea	 edx, DWORD PTR _wz_min$[ebp]
  000c6	52		 push	 edx
  000c7	8d 45 e4	 lea	 eax, DWORD PTR _wx_min$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 2195 : 
; 2196 : 	width = (wx_max - wx_min);

  000d0	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wx_max$[ebp]
  000d5	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _wx_min$[ebp]
  000da	f3 0f 11 45 ec	 movss	 DWORD PTR _width$[ebp], xmm0

; 2197 : 
; 2198 : 	height = (wz_min - wz_max);

  000df	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _wz_min$[ebp]
  000e4	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _wz_max$[ebp]
  000e9	f3 0f 11 45 e8	 movss	 DWORD PTR _height$[ebp], xmm0

; 2199 : 
; 2200 : 	wpos->x -= x1;

  000ee	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  000f1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000f5	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  000fa	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  000fd	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2201 : 	wpos->x /= x_size;

  00101	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00104	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00108	f3 0f 5e 45 f4	 divss	 xmm0, DWORD PTR _x_size$[ebp]
  0010d	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00110	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2202 : 	wpos->x *= width;

  00114	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00117	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0011b	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _width$[ebp]
  00120	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00123	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2203 : 	wpos->x += wx_min;

  00127	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  0012a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0012e	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _wx_min$[ebp]
  00133	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00136	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2204 : 
; 2205 : 	wpos->z -= y1;

  0013a	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  0013d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00142	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00147	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  0014a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2206 : 	wpos->z = y_size - wpos->z;

  0014f	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00152	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00157	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0015c	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  0015f	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2207 : 	wpos->z /= y_size;

  00164	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00167	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0016c	f3 0f 5e 45 f0	 divss	 xmm0, DWORD PTR _y_size$[ebp]
  00171	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00174	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2208 : 	wpos->z *= height;

  00179	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  0017c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00181	f3 0f 59 45 e8	 mulss	 xmm0, DWORD PTR _height$[ebp]
  00186	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00189	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2209 : 	wpos->z += wz_max;

  0018e	8b 45 10	 mov	 eax, DWORD PTR _wpos$[ebp]
  00191	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00196	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _wz_max$[ebp]
  0019b	8b 4d 10	 mov	 ecx, DWORD PTR _wpos$[ebp]
  0019e	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2210 : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 0c 00	 ret	 12			; 0000000cH
?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ENDP ; map_get_world_coords_from_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z
_TEXT	SEGMENT
_wz_max$ = -40						; size = 4
_wx_max$ = -36						; size = 4
_wz_min$ = -32						; size = 4
_wx_min$ = -28						; size = 4
_height$ = -24						; size = 4
_width$ = -20						; size = 4
_y_size$ = -16						; size = 4
_x_size$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
_wpos$ = 12						; size = 4
_spos$ = 16						; size = 4
?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z PROC ; map_get_screen_coords_from_world, COMDAT

; 2117 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2118 : 
; 2119 : 	float
; 2120 : 		x1,
; 2121 : 		y1,
; 2122 : 		x_size,
; 2123 : 		y_size,
; 2124 : 		width,
; 2125 : 		height,
; 2126 : 		wx_min,
; 2127 : 		wz_min,
; 2128 : 		wx_max,
; 2129 : 		wz_max;
; 2130 : 
; 2131 : 	ASSERT (wpos);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _wpos$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_get_sc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
  00014	83 c0 0e	 add	 eax, 14			; 0000000eH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04FOIJDCIJ@wpos@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_get_sc:

; 2132 : 	ASSERT (spos);

  00027	83 7d 10 00	 cmp	 DWORD PTR _spos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_get_sc
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z@4JA
  00032	83 c0 0f	 add	 eax, 15			; 0000000fH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_04KLAJJEEJ@spos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_get_sc:

; 2133 : 
; 2134 : 	spos->x = wpos->x;

  00045	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _wpos$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	89 10		 mov	 DWORD PTR [eax], edx

; 2135 : 	spos->y = wpos->y;

  0004f	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00055	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00058	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 2136 : 	spos->z = wpos->z;

  0005b	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  0005e	8b 4d 0c	 mov	 ecx, DWORD PTR _wpos$[ebp]
  00061	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00064	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 2137 : 
; 2138 : 	x1 = get_ui_object_x (obj);

  00067	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00070	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00077	ff d0		 call	 eax
  00079	d9 5d fc	 fstp	 DWORD PTR _x1$[ebp]

; 2139 : 	y1 = get_ui_object_y (obj);

  0007c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0007f	50		 push	 eax
  00080	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008c	ff d0		 call	 eax
  0008e	d9 5d f8	 fstp	 DWORD PTR _y1$[ebp]

; 2140 : 
; 2141 : 	x_size = get_ui_object_x_size (obj);

  00091	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00094	50		 push	 eax
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a1	ff d0		 call	 eax
  000a3	d9 5d f4	 fstp	 DWORD PTR _x_size$[ebp]

; 2142 : 	y_size = get_ui_object_y_size (obj);

  000a6	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000b6	ff d0		 call	 eax
  000b8	d9 5d f0	 fstp	 DWORD PTR _y_size$[ebp]

; 2143 : 
; 2144 : 	get_2d_terrain_map_world_dimensions (&wx_min, &wz_min, &wx_max, &wz_max);

  000bb	8d 45 d8	 lea	 eax, DWORD PTR _wz_max$[ebp]
  000be	50		 push	 eax
  000bf	8d 4d dc	 lea	 ecx, DWORD PTR _wx_max$[ebp]
  000c2	51		 push	 ecx
  000c3	8d 55 e0	 lea	 edx, DWORD PTR _wz_min$[ebp]
  000c6	52		 push	 edx
  000c7	8d 45 e4	 lea	 eax, DWORD PTR _wx_min$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 2145 : 
; 2146 : 	width = (wx_max - wx_min);

  000d0	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _wx_max$[ebp]
  000d5	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _wx_min$[ebp]
  000da	f3 0f 11 45 ec	 movss	 DWORD PTR _width$[ebp], xmm0

; 2147 : 
; 2148 : 	height = (wz_min - wz_max);

  000df	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _wz_min$[ebp]
  000e4	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _wz_max$[ebp]
  000e9	f3 0f 11 45 e8	 movss	 DWORD PTR _height$[ebp], xmm0

; 2149 : 
; 2150 : 	spos->x -= wx_min;

  000ee	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  000f1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000f5	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _wx_min$[ebp]
  000fa	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  000fd	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2151 : 	spos->x /= width;

  00101	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00104	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00108	f3 0f 5e 45 ec	 divss	 xmm0, DWORD PTR _width$[ebp]
  0010d	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  00110	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2152 : 	spos->x *= x_size;

  00114	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00117	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0011b	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _x_size$[ebp]
  00120	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  00123	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2153 : 	spos->x += x1;

  00127	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  0012a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0012e	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x1$[ebp]
  00133	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  00136	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2154 : 
; 2155 : 	spos->z -= wz_max;

  0013a	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  0013d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00142	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _wz_max$[ebp]
  00147	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  0014a	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2156 : 	spos->z /= height;

  0014f	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00152	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00157	f3 0f 5e 45 e8	 divss	 xmm0, DWORD PTR _height$[ebp]
  0015c	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  0015f	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2157 : 	spos->z *= y_size;

  00164	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00167	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0016c	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _y_size$[ebp]
  00171	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  00174	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2158 : 	spos->z = y_size - spos->z;

  00179	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  0017c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00181	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00186	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  00189	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2159 : 	spos->z += y1;

  0018e	8b 45 10	 mov	 eax, DWORD PTR _spos$[ebp]
  00191	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00196	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y1$[ebp]
  0019b	8b 4d 10	 mov	 ecx, DWORD PTR _spos$[ebp]
  0019e	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 2160 : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c2 0c 00	 ret	 12			; 0000000cH
?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ENDP ; map_get_screen_coords_from_world
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv143 = -72						; size = 4
_en$ = -4						; size = 4
_obj$ = 8						; size = 4
?map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z PROC	; map_draw_subject_entity, COMDAT

; 3834 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3835 : 	entity
; 3836 : 		*en;
; 3837 : 
; 3838 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_s:

; 3839 : 
; 3840 : 	en = NULL;

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _en$[ebp], 0

; 3841 : 
; 3842 : 	if (get_ui_object_drawable (campaign_page [CAMPAIGN_PAGE_GROUP]))

  0002e	b8 04 00 00 00	 mov	 eax, 4
  00033	6b c8 03	 imul	 ecx, eax, 3
  00036	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  0003c	52		 push	 edx
  0003d	b8 04 00 00 00	 mov	 eax, 4
  00042	6b c8 03	 imul	 ecx, eax, 3
  00045	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  0004b	8b 02		 mov	 eax, DWORD PTR [edx]
  0004d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  00054	ff d1		 call	 ecx
  00056	85 c0		 test	 eax, eax
  00058	74 0d		 je	 SHORT $LN3@map_draw_s

; 3843 : 	{
; 3844 : 		//
; 3845 : 		// Draw selected group member + mission it's doing
; 3846 : 		//
; 3847 : 
; 3848 : 		en = get_group_page_member_list_current_entity ();

  0005a	e8 00 00 00 00	 call	 ?get_group_page_member_list_current_entity@@YGPAUENTITY@@XZ ; get_group_page_member_list_current_entity
  0005f	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
  00062	e9 be 00 00 00	 jmp	 $LN6@map_draw_s
$LN3@map_draw_s:

; 3849 : 	}
; 3850 : /*
; 3851 : 	else if (get_ui_object_drawable (campaign_page [CAMPAIGN_PAGE_BRIEFING]))
; 3852 : 	{
; 3853 : 		//
; 3854 : 		// Draw mission icon + group doing it
; 3855 : 		//
; 3856 : 
; 3857 : 		en = get_local_entity_safe_ptr (get_ui_object_item_number (campaign_page [CAMPAIGN_PAGE_BRIEFING]));
; 3858 : 
; 3859 : 		ASSERT (en);
; 3860 : 	}
; 3861 : */
; 3862 : 	else if (get_ui_object_drawable (campaign_page [CAMPAIGN_PAGE_BASE]))

  00067	b8 04 00 00 00	 mov	 eax, 4
  0006c	6b c8 00	 imul	 ecx, eax, 0
  0006f	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00075	52		 push	 edx
  00076	b8 04 00 00 00	 mov	 eax, 4
  0007b	6b c8 00	 imul	 ecx, eax, 0
  0007e	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00084	8b 02		 mov	 eax, DWORD PTR [edx]
  00086	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  0008d	ff d1		 call	 ecx
  0008f	85 c0		 test	 eax, eax
  00091	0f 84 8e 00 00
	00		 je	 $LN6@map_draw_s

; 3863 : 	{
; 3864 : 		//
; 3865 : 		// Draw base icon
; 3866 : 		//
; 3867 : 
; 3868 : 		en = get_local_entity_safe_ptr (get_ui_object_item_number (campaign_page [CAMPAIGN_PAGE_BASE]));

  00097	b8 04 00 00 00	 mov	 eax, 4
  0009c	6b c8 00	 imul	 ecx, eax, 0
  0009f	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  000a5	52		 push	 edx
  000a6	b8 04 00 00 00	 mov	 eax, 4
  000ab	6b c8 00	 imul	 ecx, eax, 0
  000ae	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  000b4	8b 02		 mov	 eax, DWORD PTR [edx]
  000b6	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  000bd	ff d1		 call	 ecx
  000bf	83 f8 ff	 cmp	 eax, -1
  000c2	74 36		 je	 SHORT $LN9@map_draw_s
  000c4	ba 04 00 00 00	 mov	 edx, 4
  000c9	6b c2 00	 imul	 eax, edx, 0
  000cc	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  000d2	51		 push	 ecx
  000d3	ba 04 00 00 00	 mov	 edx, 4
  000d8	6b c2 00	 imul	 eax, edx, 0
  000db	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  000e1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000ea	ff d0		 call	 eax
  000ec	c1 e0 04	 shl	 eax, 4
  000ef	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000f5	89 45 b8	 mov	 DWORD PTR tv143[ebp], eax
  000f8	eb 07		 jmp	 SHORT $LN10@map_draw_s
$LN9@map_draw_s:
  000fa	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN10@map_draw_s:
  00101	8b 4d b8	 mov	 ecx, DWORD PTR tv143[ebp]
  00104	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 3869 : 
; 3870 : 		ASSERT (en);

  00107	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0010b	75 18		 jne	 SHORT $LN6@map_draw_s
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z@4JA
  00112	83 c0 24	 add	 eax, 36			; 00000024H
  00115	50		 push	 eax
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00120	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_draw_s:

; 3871 : 	}
; 3872 : 
; 3873 : 	if (en)

  00125	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00129	74 22		 je	 SHORT $LN7@map_draw_s

; 3874 : 	{
; 3875 : 		map_draw_highlighted_entity (obj, en, MAP_ICON_SELECTED, &sys_col_yellow, 1.0);

  0012b	51		 push	 ecx
  0012c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00134	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00139	68 00 00 00 00	 push	 OFFSET ?sys_col_yellow@@3UREAL_COLOUR@@A ; sys_col_yellow
  0013e	6a 14		 push	 20			; 00000014H
  00140	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00143	50		 push	 eax
  00144	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00147	51		 push	 ecx
  00148	e8 00 00 00 00	 call	 ?map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ; map_draw_highlighted_entity
$LN7@map_draw_s:

; 3876 : 	}
; 3877 : }

  0014d	5f		 pop	 edi
  0014e	5e		 pop	 esi
  0014f	5b		 pop	 ebx
  00150	8b e5		 mov	 esp, ebp
  00152	5d		 pop	 ebp
  00153	c2 04 00	 ret	 4
?map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z ENDP	; map_draw_subject_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z PROC ; map_draw_mouse_over_entity, COMDAT

; 3805 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3806 : 	ASSERT (en);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_m
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_m:

; 3807 : 
; 3808 : 	ASSERT (obj);

  00027	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_m
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_m:

; 3809 : 
; 3810 : 	#if ANIMATE_MOUSE_OVER_ICON
; 3811 : 	{
; 3812 : 		float
; 3813 : 			x,
; 3814 : 			scale;
; 3815 : 
; 3816 : 		x = (2.0 * animation_timer) - 1.0;
; 3817 : 
; 3818 : 		scale = 1.0 + (0.5 * (x * x));
; 3819 : 
; 3820 : 		map_draw_highlighted_entity (obj, en, MAP_ICON_HIGHLIGHT, &sys_col_white, scale);
; 3821 : 	}
; 3822 : 	#else
; 3823 : 
; 3824 : 	map_draw_highlighted_entity (obj, en, MAP_ICON_HIGHLIGHT, &sys_col_white, 1.0);

  00045	51		 push	 ecx
  00046	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0004e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00053	68 00 00 00 00	 push	 OFFSET ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  00058	6a 0c		 push	 12			; 0000000cH
  0005a	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00061	51		 push	 ecx
  00062	e8 00 00 00 00	 call	 ?map_draw_highlighted_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@HPAUREAL_COLOUR@@M@Z ; map_draw_highlighted_entity

; 3825 : 
; 3826 : 	#endif
; 3827 : }

  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	5b		 pop	 ebx
  0006a	8b e5		 mov	 esp, ebp
  0006c	5d		 pop	 ebp
  0006d	c2 08 00	 ret	 8
?map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ENDP ; map_draw_mouse_over_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z
_TEXT	SEGMENT
_scale$ = -4						; size = 4
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
?map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z PROC ; map_draw_highlighted_insert_waypoint_icon, COMDAT

; 3360 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3361 : 	float
; 3362 : 		scale;
; 3363 : 
; 3364 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_h
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_h:

; 3365 : 
; 3366 : 	ASSERT (pos);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_h
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z@4JA
  00032	83 c0 06	 add	 eax, 6
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_h:

; 3367 : 
; 3368 : 	scale = ICON_RESOLUTION_SCALE;

  00045	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  0004d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  00055	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00059	f3 0f 11 45 fc	 movss	 DWORD PTR _scale$[ebp], xmm0

; 3369 : 
; 3370 : 	map_draw_icon (obj, pos, MAP_ICON_WAYPOINT_INSERT_HIGHLIGHTED, ENTITY_SIDE_NEUTRAL, scale, NULL);

  0005e	6a 00		 push	 0
  00060	51		 push	 ecx
  00061	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _scale$[ebp]
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	6a 00		 push	 0
  0006d	6a 1b		 push	 27			; 0000001bH
  0006f	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z ; map_draw_icon

; 3371 : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z ENDP ; map_draw_highlighted_insert_waypoint_icon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z
_TEXT	SEGMENT
_map_dimensions$ = -16					; size = 4
_icon$ = -12						; size = 4
_distance$ = -8						; size = 4
_scale$ = -4						; size = 4
_obj$ = 8						; size = 4
_wp$ = 12						; size = 4
_pos$ = 16						; size = 4
_side$ = 20						; size = 4
?map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z PROC ; map_draw_insert_waypoint_icon, COMDAT

; 3307 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3308 : 	float
; 3309 : 		scale,
; 3310 : 		distance;
; 3311 : 
; 3312 : 	int
; 3313 : 		icon;
; 3314 : 
; 3315 : 	map_dimension_type
; 3316 : 		*map_dimensions;
; 3317 : 
; 3318 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_i
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_i:

; 3319 : 
; 3320 : 	ASSERT (pos);

  00027	83 7d 10 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_i
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA
  00032	83 c0 0d	 add	 eax, 13			; 0000000dH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_i:

; 3321 : 
; 3322 : 	ASSERT (wp);

  00045	83 7d 0c 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@map_draw_i
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA
  00050	83 c0 0f	 add	 eax, 15			; 0000000fH
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_i:

; 3323 : 
; 3324 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00063	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00073	ff d0		 call	 eax
  00075	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3325 : 
; 3326 : 	ASSERT (map_dimensions);

  00078	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0007c	75 18		 jne	 SHORT $LN5@map_draw_i
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z@4JA
  00083	83 c0 13	 add	 eax, 19			; 00000013H
  00086	50		 push	 eax
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00091	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_draw_i:

; 3327 : 
; 3328 : 	icon = MAP_ICON_WAYPOINT_INSERT;

  00096	c7 45 f4 1a 00
	00 00		 mov	 DWORD PTR _icon$[ebp], 26 ; 0000001aH

; 3329 : 
; 3330 : 	scale = ICON_RESOLUTION_SCALE;

  0009d	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  000a5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  000ad	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b1	f3 0f 11 45 fc	 movss	 DWORD PTR _scale$[ebp], xmm0

; 3331 : 
; 3332 : 	map_draw_icon (obj, pos, icon, side, scale, &distance);

  000b6	8d 45 f8	 lea	 eax, DWORD PTR _distance$[ebp]
  000b9	50		 push	 eax
  000ba	51		 push	 ecx
  000bb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _scale$[ebp]
  000c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c5	8b 4d 14	 mov	 ecx, DWORD PTR _side$[ebp]
  000c8	51		 push	 ecx
  000c9	8b 55 f4	 mov	 edx, DWORD PTR _icon$[ebp]
  000cc	52		 push	 edx
  000cd	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000d4	51		 push	 ecx
  000d5	e8 00 00 00 00	 call	 ?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z ; map_draw_icon

; 3333 : 
; 3334 : 	//
; 3335 : 	// Find closest icon to mouse
; 3336 : 	//
; 3337 : 
; 3338 : 	if (obj == get_current_highlighted_object ())

  000da	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dd	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?highlighted_object@@3PAUUI_OBJECT@@A ; highlighted_object
  000e3	75 5f		 jne	 SHORT $LN7@map_draw_i

; 3339 : 	{
; 3340 : 		if ((distance >= 0) && (distance <= map_dimensions->mouse_over_object.distance))

  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000ea	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  000f1	72 51		 jb	 SHORT $LN7@map_draw_i
  000f3	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000f6	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
  000fb	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _distance$[ebp]
  000ff	72 43		 jb	 SHORT $LN7@map_draw_i

; 3341 : 		{
; 3342 : 			map_dimensions->mouse_over_object.type = MOUSE_OVER_OBJECT_WAYPOINT_ADD;

  00101	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00104	c7 40 4c 02 00
	00 00		 mov	 DWORD PTR [eax+76], 2

; 3343 : 
; 3344 : 			map_dimensions->mouse_over_object.en = wp;

  0010b	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0010e	8b 4d 0c	 mov	 ecx, DWORD PTR _wp$[ebp]
  00111	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 3345 : 
; 3346 : 			map_dimensions->mouse_over_object.pos.x = pos->x;

  00114	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00117	8b 4d 10	 mov	 ecx, DWORD PTR _pos$[ebp]
  0011a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0011c	89 50 58	 mov	 DWORD PTR [eax+88], edx

; 3347 : 			map_dimensions->mouse_over_object.pos.y = pos->y;

  0011f	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00122	8b 4d 10	 mov	 ecx, DWORD PTR _pos$[ebp]
  00125	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00128	89 50 5c	 mov	 DWORD PTR [eax+92], edx

; 3348 : 			map_dimensions->mouse_over_object.pos.z = pos->z;

  0012b	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0012e	8b 4d 10	 mov	 ecx, DWORD PTR _pos$[ebp]
  00131	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00134	89 50 60	 mov	 DWORD PTR [eax+96], edx

; 3349 : 
; 3350 : 			map_dimensions->mouse_over_object.distance = distance;

  00137	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0013a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  0013f	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0
$LN7@map_draw_i:

; 3351 : 		}
; 3352 : 	}
; 3353 : }

  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 10 00	 ret	 16			; 00000010H
?map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z ENDP ; map_draw_insert_waypoint_icon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z
_TEXT	SEGMENT
_distance$ = -8						; size = 4
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
_pos$ = 16						; size = 4
_icon$ = 20						; size = 4
_side$ = 24						; size = 4
_scale$ = 28						; size = 4
?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z PROC ; map_draw_entity_icon, COMDAT

; 3265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3266 : 	map_dimension_type
; 3267 : 		*map_dimensions;
; 3268 : 
; 3269 : 	float
; 3270 : 		distance;
; 3271 : 
; 3272 : 	ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_e
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_e:

; 3273 : 
; 3274 : 	ASSERT (pos);

  00027	83 7d 10 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_e
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA
  00032	83 c0 09	 add	 eax, 9
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_e:

; 3275 : 
; 3276 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00045	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00055	ff d0		 call	 eax
  00057	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3277 : 
; 3278 : 	ASSERT (map_dimensions);

  0005a	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0005e	75 18		 jne	 SHORT $LN4@map_draw_e
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z@4JA
  00065	83 c0 0d	 add	 eax, 13			; 0000000dH
  00068	50		 push	 eax
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_e:

; 3279 : 
; 3280 : 	map_draw_icon (obj, pos, icon, side, scale, &distance);

  00078	8d 45 f8	 lea	 eax, DWORD PTR _distance$[ebp]
  0007b	50		 push	 eax
  0007c	51		 push	 ecx
  0007d	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _scale$[ebp]
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	8b 4d 18	 mov	 ecx, DWORD PTR _side$[ebp]
  0008a	51		 push	 ecx
  0008b	8b 55 14	 mov	 edx, DWORD PTR _icon$[ebp]
  0008e	52		 push	 edx
  0008f	8b 45 10	 mov	 eax, DWORD PTR _pos$[ebp]
  00092	50		 push	 eax
  00093	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ?map_draw_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@HHMPAM@Z ; map_draw_icon

; 3281 : 
; 3282 : 	//
; 3283 : 	// Find closest icon to mouse
; 3284 : 	//
; 3285 : 
; 3286 : 	if (en)

  0009c	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a0	74 47		 je	 SHORT $LN7@map_draw_e

; 3287 : 	{
; 3288 : 		if (obj == get_current_highlighted_object ())

  000a2	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a5	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?highlighted_object@@3PAUUI_OBJECT@@A ; highlighted_object
  000ab	75 3c		 jne	 SHORT $LN7@map_draw_e

; 3289 : 		{
; 3290 : 			if ((distance >= 0) && (distance <= map_dimensions->mouse_over_object.distance))

  000ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000b2	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  000b9	72 2e		 jb	 SHORT $LN7@map_draw_e
  000bb	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000be	f3 0f 10 40 50	 movss	 xmm0, DWORD PTR [eax+80]
  000c3	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _distance$[ebp]
  000c7	72 20		 jb	 SHORT $LN7@map_draw_e

; 3291 : 			{
; 3292 : 				map_dimensions->mouse_over_object.type = MOUSE_OVER_OBJECT_ENTITY;

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000cc	c7 40 4c 01 00
	00 00		 mov	 DWORD PTR [eax+76], 1

; 3293 : 
; 3294 : 				map_dimensions->mouse_over_object.en = en;

  000d3	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000d6	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  000d9	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 3295 : 
; 3296 : 				map_dimensions->mouse_over_object.distance = distance;

  000dc	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000df	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _distance$[ebp]
  000e4	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0
$LN7@map_draw_e:

; 3297 : 			}
; 3298 : 		}
; 3299 : 	}
; 3300 : }

  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 18 00	 ret	 24			; 00000018H
?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ENDP ; map_draw_entity_icon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z
_TEXT	SEGMENT
_font_height$ = -20					; size = 4
_font_width$ = -16					; size = 4
_screen_pos$ = -12					; size = 12
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
_string$ = 16						; size = 4
_font$ = 20						; size = 4
_col$ = 24						; size = 4
_centered$ = 28						; size = 4
?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z PROC ; map_draw_string, COMDAT

; 3135 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3136 : 	vec3d
; 3137 : 		screen_pos;
; 3138 : 
; 3139 : 	float
; 3140 : 		font_width,
; 3141 : 		font_height;
; 3142 : 
; 3143 : 	ASSERT (string);

  00009	83 7d 10 00	 cmp	 DWORD PTR _string$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@map_draw_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06ICGJLFIM@string@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_s:

; 3144 : 
; 3145 : 	ASSERT (pos);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@map_draw_s
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z@4JA
  00032	83 c0 0a	 add	 eax, 10			; 0000000aH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_draw_s:

; 3146 : 
; 3147 : 	map_get_screen_coords_from_world (obj, pos, &screen_pos);

  00045	8d 45 f4	 lea	 eax, DWORD PTR _screen_pos$[ebp]
  00048	50		 push	 eax
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  0004c	51		 push	 ecx
  0004d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 3148 : 
; 3149 : 	set_ui_font_type (font);

  00056	8b 45 14	 mov	 eax, DWORD PTR _font$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 3150 : 
; 3151 : 	set_ui_font_colour (*col);

  0005f	8b 45 18	 mov	 eax, DWORD PTR _col$[ebp]
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 3152 : 
; 3153 : 	if (centered)

  0006a	83 7d 1c 00	 cmp	 DWORD PTR _centered$[ebp], 0
  0006e	74 68		 je	 SHORT $LN4@map_draw_s

; 3154 : 	{
; 3155 : 		font_height = ui_get_font_height ();

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00075	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  0007a	f3 0f 11 45 ec	 movss	 DWORD PTR _font_height$[ebp], xmm0

; 3156 : 
; 3157 : 		font_width = ui_get_string_length (string);

  0007f	8b 45 10	 mov	 eax, DWORD PTR _string$[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00088	d9 5d f0	 fstp	 DWORD PTR _font_width$[ebp]

; 3158 : 
; 3159 : 		ui_display_text (string, screen_pos.x - (font_width * 0.5), screen_pos.z - (font_height * 0.5));

  0008b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _screen_pos$[ebp+8]
  00090	f3 0f 5a 4d ec	 cvtss2sd xmm1, DWORD PTR _font_height$[ebp]
  00095	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0009d	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000a1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a5	51		 push	 ecx
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _screen_pos$[ebp]
  000b0	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _font_width$[ebp]
  000b5	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  000bd	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c5	51		 push	 ecx
  000c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cb	8b 45 10	 mov	 eax, DWORD PTR _string$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  000d4	dd d8		 fstp	 ST(0)

; 3160 : 	}
; 3161 : 	else

  000d6	eb 21		 jmp	 SHORT $LN5@map_draw_s
$LN4@map_draw_s:

; 3162 : 	{
; 3163 : 		ui_display_text (string, screen_pos.x, screen_pos.z);

  000d8	51		 push	 ecx
  000d9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _screen_pos$[ebp+8]
  000de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e3	51		 push	 ecx
  000e4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _screen_pos$[ebp]
  000e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ee	8b 45 10	 mov	 eax, DWORD PTR _string$[ebp]
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  000f7	dd d8		 fstp	 ST(0)
$LN5@map_draw_s:

; 3164 : 	}
; 3165 : }

  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 18 00	 ret	 24			; 00000018H
?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ENDP ; map_draw_string
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv407 = -140						; size = 4
tv259 = -140						; size = 4
tv399 = -136						; size = 4
tv251 = -136						; size = 4
tv456 = -132						; size = 4
tv436 = -132						; size = 4
tv385 = -132						; size = 4
tv348 = -132						; size = 4
tv327 = -132						; size = 4
tv308 = -132						; size = 4
tv288 = -132						; size = 4
tv237 = -132						; size = 4
tv204 = -132						; size = 4
tv183 = -132						; size = 4
tv164 = -132						; size = 4
tv143 = -132						; size = 4
tv92 = -132						; size = 4
tv448 = -128						; size = 4
tv428 = -128						; size = 4
tv377 = -128						; size = 4
tv340 = -128						; size = 4
tv320 = -128						; size = 4
tv300 = -128						; size = 4
tv280 = -128						; size = 4
tv229 = -128						; size = 4
tv196 = -128						; size = 4
tv176 = -128						; size = 4
tv156 = -128						; size = 4
tv136 = -128						; size = 4
tv84 = -128						; size = 4
_name$ = -60						; size = 32
_icon$ = -28						; size = 4
_map_dimensions$ = -24					; size = 4
_pos$ = -20						; size = 4
_objective$ = -16					; size = 4
_mission$ = -12						; size = 4
_keysite$ = -8						; size = 4
_force$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_missions, COMDAT

; 2997 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 8c 00 00
	00		 sub	 esp, 140		; 0000008cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2998 : 	entity
; 2999 : 		*force,
; 3000 : 		*keysite,
; 3001 : 		*mission,
; 3002 : 		*objective;
; 3003 : 
; 3004 : 	vec3d
; 3005 : 		*pos;
; 3006 : 
; 3007 : 	map_dimension_type
; 3008 : 		*map_dimensions;
; 3009 : 
; 3010 : 	map_icon_type
; 3011 : 		icon;
; 3012 : 
; 3013 : 	char
; 3014 : 		name [32];
; 3015 : 
; 3016 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 e8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 3017 : 
; 3018 : 	ASSERT (map_dimensions);

  00021	83 7d e8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00025	75 18		 jne	 SHORT $LN8@map_draw_m
  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0002c	83 c0 15	 add	 eax, 21			; 00000015H
  0002f	50		 push	 eax
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_draw_m:

; 3019 : 
; 3020 : 	icon = MAP_ICON_MISSION;

  0003f	c7 45 e4 0e 00
	00 00		 mov	 DWORD PTR _icon$[ebp], 14 ; 0000000eH

; 3021 : 
; 3022 : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_MISSIONS))

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0004b	83 e0 10	 and	 eax, 16			; 00000010H
  0004e	0f 84 65 09 00
	00		 je	 $LN3@map_draw_m

; 3023 : 	{
; 3024 : 		force = get_local_force_entity (side);

  00054	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0005d	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 3025 : 
; 3026 : 		keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  00060	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00064	74 0a		 je	 SHORT $LN20@map_draw_m
  00066	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	89 4d 80	 mov	 DWORD PTR tv84[ebp], ecx
  0006e	eb 21		 jmp	 SHORT $LN21@map_draw_m
$LN20@map_draw_m:
  00070	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00076	83 c2 1d	 add	 edx, 29			; 0000001dH
  00079	52		 push	 edx
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008a	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN21@map_draw_m:
  00091	b9 01 00 00 00	 mov	 ecx, 1
  00096	85 c9		 test	 ecx, ecx
  00098	74 0c		 je	 SHORT $LN22@map_draw_m
  0009a	c7 85 7c ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv92[ebp], 21	; 00000015H
  000a4	eb 24		 jmp	 SHORT $LN23@map_draw_m
$LN22@map_draw_m:
  000a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  000ac	83 c2 1d	 add	 edx, 29			; 0000001dH
  000af	52		 push	 edx
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c0	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN23@map_draw_m:
  000ca	6a 15		 push	 21			; 00000015H
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  000cf	51		 push	 ecx
  000d0	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv84[ebp], 180
  000d7	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv92[ebp]
  000dd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000e4	ff d1		 call	 ecx
  000e6	89 45 f8	 mov	 DWORD PTR _keysite$[ebp], eax
$LN2@map_draw_m:

; 3027 : 
; 3028 : 		while (keysite)

  000e9	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  000ed	0f 84 c6 08 00
	00		 je	 $LN3@map_draw_m

; 3029 : 		{
; 3030 : 			if (get_local_entity_int_value (keysite, INT_TYPE_IN_USE))

  000f3	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  000f7	74 0a		 je	 SHORT $LN24@map_draw_m
  000f9	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  000fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fe	89 4d 80	 mov	 DWORD PTR tv136[ebp], ecx
  00101	eb 1d		 jmp	 SHORT $LN25@map_draw_m
$LN24@map_draw_m:
  00103	68 d6 0b 00 00	 push	 3030			; 00000bd6H
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00113	52		 push	 edx
  00114	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00119	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN25@map_draw_m:
  00120	b8 01 00 00 00	 mov	 eax, 1
  00125	85 c0		 test	 eax, eax
  00127	74 0c		 je	 SHORT $LN26@map_draw_m
  00129	c7 85 7c ff ff
	ff 6d 00 00 00	 mov	 DWORD PTR tv143[ebp], 109 ; 0000006dH
  00133	eb 20		 jmp	 SHORT $LN27@map_draw_m
$LN26@map_draw_m:
  00135	68 d6 0b 00 00	 push	 3030			; 00000bd6H
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00145	51		 push	 ecx
  00146	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv143[ebp], 0
$LN27@map_draw_m:
  00155	6a 6d		 push	 109			; 0000006dH
  00157	8b 55 f8	 mov	 edx, DWORD PTR _keysite$[ebp]
  0015a	52		 push	 edx
  0015b	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv136[ebp], 1116
  00162	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv143[ebp]
  00168	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0016f	ff d2		 call	 edx
  00171	85 c0		 test	 eax, eax
  00173	0f 84 b2 07 00
	00		 je	 $LN7@map_draw_m

; 3031 : 			{
; 3032 : 				//
; 3033 : 				// UNASSIGNED
; 3034 : 				//
; 3035 : 
; 3036 : 				mission = get_local_entity_first_child (keysite, LIST_TYPE_UNASSIGNED_TASK);

  00179	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0017d	74 0a		 je	 SHORT $LN28@map_draw_m
  0017f	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00182	8b 08		 mov	 ecx, DWORD PTR [eax]
  00184	89 4d 80	 mov	 DWORD PTR tv156[ebp], ecx
  00187	eb 21		 jmp	 SHORT $LN29@map_draw_m
$LN28@map_draw_m:
  00189	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0018f	83 c2 27	 add	 edx, 39			; 00000027H
  00192	52		 push	 edx
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN29@map_draw_m:
  001aa	b9 01 00 00 00	 mov	 ecx, 1
  001af	85 c9		 test	 ecx, ecx
  001b1	74 0c		 je	 SHORT $LN30@map_draw_m
  001b3	c7 85 7c ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv164[ebp], 40 ; 00000028H
  001bd	eb 24		 jmp	 SHORT $LN31@map_draw_m
$LN30@map_draw_m:
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001c5	83 c2 27	 add	 edx, 39			; 00000027H
  001c8	52		 push	 edx
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d9	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN31@map_draw_m:
  001e3	6a 28		 push	 40			; 00000028H
  001e5	8b 4d f8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  001e8	51		 push	 ecx
  001e9	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv156[ebp], 180
  001f0	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv164[ebp]
  001f6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001fd	ff d1		 call	 ecx
  001ff	89 45 f4	 mov	 DWORD PTR _mission$[ebp], eax
$LN4@map_draw_m:

; 3037 : 
; 3038 : 				while (mission)

  00202	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00206	0f 84 3c 03 00
	00		 je	 $LN5@map_draw_m

; 3039 : 				{
; 3040 : 					if (get_local_entity_int_value (mission, INT_TYPE_VISIBLE_TASK))

  0020c	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00210	74 0a		 je	 SHORT $LN32@map_draw_m
  00212	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  00215	8b 08		 mov	 ecx, DWORD PTR [eax]
  00217	89 4d 80	 mov	 DWORD PTR tv176[ebp], ecx
  0021a	eb 1d		 jmp	 SHORT $LN33@map_draw_m
$LN32@map_draw_m:
  0021c	68 e0 0b 00 00	 push	 3040			; 00000be0H
  00221	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00226	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022c	52		 push	 edx
  0022d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00232	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN33@map_draw_m:
  00239	b8 01 00 00 00	 mov	 eax, 1
  0023e	85 c0		 test	 eax, eax
  00240	74 0c		 je	 SHORT $LN34@map_draw_m
  00242	c7 85 7c ff ff
	ff fa 00 00 00	 mov	 DWORD PTR tv183[ebp], 250 ; 000000faH
  0024c	eb 20		 jmp	 SHORT $LN35@map_draw_m
$LN34@map_draw_m:
  0024e	68 e0 0b 00 00	 push	 3040			; 00000be0H
  00253	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00258	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0025e	51		 push	 ecx
  0025f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00264	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN35@map_draw_m:
  0026e	68 fa 00 00 00	 push	 250			; 000000faH
  00273	8b 55 f4	 mov	 edx, DWORD PTR _mission$[ebp]
  00276	52		 push	 edx
  00277	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv176[ebp], 1116
  0027e	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv183[ebp]
  00284	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0028b	ff d2		 call	 edx
  0028d	85 c0		 test	 eax, eax
  0028f	0f 84 25 02 00
	00		 je	 $LN14@map_draw_m

; 3041 : 					{
; 3042 : 						objective = get_local_entity_parent (mission, LIST_TYPE_TASK_DEPENDENT);

  00295	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00299	74 0a		 je	 SHORT $LN36@map_draw_m
  0029b	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0029e	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a0	89 4d 80	 mov	 DWORD PTR tv196[ebp], ecx
  002a3	eb 21		 jmp	 SHORT $LN37@map_draw_m
$LN36@map_draw_m:
  002a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002ab	83 c2 2d	 add	 edx, 45			; 0000002dH
  002ae	52		 push	 edx
  002af	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002b9	50		 push	 eax
  002ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bf	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN37@map_draw_m:
  002c6	b9 01 00 00 00	 mov	 ecx, 1
  002cb	85 c9		 test	 ecx, ecx
  002cd	74 0c		 je	 SHORT $LN38@map_draw_m
  002cf	c7 85 7c ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv204[ebp], 39 ; 00000027H
  002d9	eb 24		 jmp	 SHORT $LN39@map_draw_m
$LN38@map_draw_m:
  002db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002e1	83 c2 2d	 add	 edx, 45			; 0000002dH
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f5	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv204[ebp], 0
$LN39@map_draw_m:
  002ff	6a 27		 push	 39			; 00000027H
  00301	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  00304	51		 push	 ecx
  00305	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv196[ebp], 180
  0030c	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv204[ebp]
  00312	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00319	ff d1		 call	 ecx
  0031b	89 45 f0	 mov	 DWORD PTR _objective$[ebp], eax

; 3043 : 
; 3044 : 						if (objective)

  0031e	83 7d f0 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00322	0f 84 92 01 00
	00		 je	 $LN14@map_draw_m

; 3045 : 						{
; 3046 : 							pos = get_last_known_position(objective);

  00328	8b 45 f0	 mov	 eax, DWORD PTR _objective$[ebp]
  0032b	50		 push	 eax
  0032c	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  00331	89 45 ec	 mov	 DWORD PTR _pos$[ebp], eax

; 3047 : 
; 3048 : 							if (pos)

  00334	83 7d ec 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00338	0f 84 7c 01 00
	00		 je	 $LN14@map_draw_m

; 3049 : 							{
; 3050 : 								map_draw_entity_icon (obj, mission, pos, icon, side, 1.0);

  0033e	51		 push	 ecx
  0033f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00347	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034c	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0034f	50		 push	 eax
  00350	8b 4d e4	 mov	 ecx, DWORD PTR _icon$[ebp]
  00353	51		 push	 ecx
  00354	8b 55 ec	 mov	 edx, DWORD PTR _pos$[ebp]
  00357	52		 push	 edx
  00358	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0035b	50		 push	 eax
  0035c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0035f	51		 push	 ecx
  00360	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3051 : 
; 3052 : 								if (get_current_list_mode () == COMMON_LIST_MODE_MISSION)

  00365	e8 00 00 00 00	 call	 ?get_current_list_mode@@YGHXZ ; get_current_list_mode
  0036a	85 c0		 test	 eax, eax
  0036c	0f 85 48 01 00
	00		 jne	 $LN14@map_draw_m

; 3053 : 								{
; 3054 : 									sprintf (name, "%s #%d", get_trans (get_local_entity_string (mission, STRING_TYPE_SHORT_DISPLAY_NAME)), get_local_entity_int_value (mission, INT_TYPE_TASK_ID));

  00372	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00376	74 0a		 je	 SHORT $LN40@map_draw_m
  00378	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0037b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037d	89 4d 80	 mov	 DWORD PTR tv229[ebp], ecx
  00380	eb 21		 jmp	 SHORT $LN41@map_draw_m
$LN40@map_draw_m:
  00382	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00388	83 c2 39	 add	 edx, 57			; 00000039H
  0038b	52		 push	 edx
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00391	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00396	50		 push	 eax
  00397	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039c	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv229[ebp], 0
$LN41@map_draw_m:
  003a3	b9 01 00 00 00	 mov	 ecx, 1
  003a8	85 c9		 test	 ecx, ecx
  003aa	74 0c		 je	 SHORT $LN42@map_draw_m
  003ac	c7 85 7c ff ff
	ff dc 00 00 00	 mov	 DWORD PTR tv237[ebp], 220 ; 000000dcH
  003b6	eb 24		 jmp	 SHORT $LN43@map_draw_m
$LN42@map_draw_m:
  003b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  003be	83 c2 39	 add	 edx, 57			; 00000039H
  003c1	52		 push	 edx
  003c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003cc	50		 push	 eax
  003cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN43@map_draw_m:
  003dc	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  003e0	74 0d		 je	 SHORT $LN44@map_draw_m
  003e2	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  003e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  003e7	89 95 78 ff ff
	ff		 mov	 DWORD PTR tv251[ebp], edx
  003ed	eb 24		 jmp	 SHORT $LN45@map_draw_m
$LN44@map_draw_m:
  003ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  003f4	83 c0 39	 add	 eax, 57			; 00000039H
  003f7	50		 push	 eax
  003f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00403	51		 push	 ecx
  00404	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00409	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv251[ebp], 0
$LN45@map_draw_m:
  00413	ba 01 00 00 00	 mov	 edx, 1
  00418	85 d2		 test	 edx, edx
  0041a	74 0c		 je	 SHORT $LN46@map_draw_m
  0041c	c7 85 74 ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv259[ebp], 12 ; 0000000cH
  00426	eb 24		 jmp	 SHORT $LN47@map_draw_m
$LN46@map_draw_m:
  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0042d	83 c0 39	 add	 eax, 57			; 00000039H
  00430	50		 push	 eax
  00431	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00436	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0043c	51		 push	 ecx
  0043d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00442	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN47@map_draw_m:
  0044c	68 dc 00 00 00	 push	 220			; 000000dcH
  00451	8b 55 f4	 mov	 edx, DWORD PTR _mission$[ebp]
  00454	52		 push	 edx
  00455	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv229[ebp], 1116
  0045c	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv237[ebp]
  00462	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00469	ff d2		 call	 edx
  0046b	50		 push	 eax
  0046c	6a 0c		 push	 12			; 0000000cH
  0046e	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  00471	50		 push	 eax
  00472	6b 8d 78 ff ff
	ff 34		 imul	 ecx, DWORD PTR tv251[ebp], 52
  00479	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv259[ebp]
  0047f	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00486	ff d0		 call	 eax
  00488	50		 push	 eax
  00489	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0048e	50		 push	 eax
  0048f	68 00 00 00 00	 push	 OFFSET ??_C@_06DOPBEMKJ@?$CFs?5?$CD?$CFd@
  00494	8d 4d c4	 lea	 ecx, DWORD PTR _name$[ebp]
  00497	51		 push	 ecx
  00498	e8 00 00 00 00	 call	 _sprintf
  0049d	83 c4 10	 add	 esp, 16			; 00000010H

; 3055 : 
; 3056 : 									map_draw_string (obj, pos, name, UI_FONT_ARIAL_14, &ui_colour_white, FALSE);

  004a0	6a 00		 push	 0
  004a2	68 00 00 00 00	 push	 OFFSET ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white
  004a7	6a 01		 push	 1
  004a9	8d 45 c4	 lea	 eax, DWORD PTR _name$[ebp]
  004ac	50		 push	 eax
  004ad	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  004b0	51		 push	 ecx
  004b1	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004b4	52		 push	 edx
  004b5	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN14@map_draw_m:

; 3057 : 								}
; 3058 : 							}
; 3059 : 						}
; 3060 : 					}
; 3061 : 
; 3062 : 					mission = get_local_entity_child_succ (mission, LIST_TYPE_UNASSIGNED_TASK);

  004ba	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  004be	74 0a		 je	 SHORT $LN48@map_draw_m
  004c0	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  004c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c5	89 4d 80	 mov	 DWORD PTR tv280[ebp], ecx
  004c8	eb 21		 jmp	 SHORT $LN49@map_draw_m
$LN48@map_draw_m:
  004ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  004d0	83 c2 41	 add	 edx, 65			; 00000041H
  004d3	52		 push	 edx
  004d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e4	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv280[ebp], 0
$LN49@map_draw_m:
  004eb	b9 01 00 00 00	 mov	 ecx, 1
  004f0	85 c9		 test	 ecx, ecx
  004f2	74 0c		 je	 SHORT $LN50@map_draw_m
  004f4	c7 85 7c ff ff
	ff 28 00 00 00	 mov	 DWORD PTR tv288[ebp], 40 ; 00000028H
  004fe	eb 24		 jmp	 SHORT $LN51@map_draw_m
$LN50@map_draw_m:
  00500	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00506	83 c2 41	 add	 edx, 65			; 00000041H
  00509	52		 push	 edx
  0050a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00514	50		 push	 eax
  00515	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051a	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN51@map_draw_m:
  00524	6a 28		 push	 40			; 00000028H
  00526	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  00529	51		 push	 ecx
  0052a	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv280[ebp], 180
  00531	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv288[ebp]
  00537	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0053e	ff d1		 call	 ecx
  00540	89 45 f4	 mov	 DWORD PTR _mission$[ebp], eax

; 3063 : 				}

  00543	e9 ba fc ff ff	 jmp	 $LN4@map_draw_m
$LN5@map_draw_m:

; 3064 : 
; 3065 : 				//
; 3066 : 				// ASSIGNED
; 3067 : 				//
; 3068 : 
; 3069 : 				mission = get_local_entity_first_child (keysite, LIST_TYPE_ASSIGNED_TASK);

  00548	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0054c	74 0a		 je	 SHORT $LN52@map_draw_m
  0054e	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00551	8b 08		 mov	 ecx, DWORD PTR [eax]
  00553	89 4d 80	 mov	 DWORD PTR tv300[ebp], ecx
  00556	eb 21		 jmp	 SHORT $LN53@map_draw_m
$LN52@map_draw_m:
  00558	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0055e	83 c2 48	 add	 edx, 72			; 00000048H
  00561	52		 push	 edx
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00567	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0056c	50		 push	 eax
  0056d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00572	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv300[ebp], 0
$LN53@map_draw_m:
  00579	b9 01 00 00 00	 mov	 ecx, 1
  0057e	85 c9		 test	 ecx, ecx
  00580	74 0c		 je	 SHORT $LN54@map_draw_m
  00582	c7 85 7c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv308[ebp], 3
  0058c	eb 24		 jmp	 SHORT $LN55@map_draw_m
$LN54@map_draw_m:
  0058e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00594	83 c2 48	 add	 edx, 72			; 00000048H
  00597	52		 push	 edx
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0059d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005a2	50		 push	 eax
  005a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a8	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv308[ebp], 0
$LN55@map_draw_m:
  005b2	6a 03		 push	 3
  005b4	8b 4d f8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  005b7	51		 push	 ecx
  005b8	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv300[ebp], 180
  005bf	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv308[ebp]
  005c5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  005cc	ff d1		 call	 ecx
  005ce	89 45 f4	 mov	 DWORD PTR _mission$[ebp], eax
$LN6@map_draw_m:

; 3070 : 
; 3071 : 				while (mission)

  005d1	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  005d5	0f 84 50 03 00
	00		 je	 $LN7@map_draw_m

; 3072 : 				{
; 3073 : 					if (get_local_entity_int_value (mission, INT_TYPE_VISIBLE_TASK))

  005db	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  005df	74 0a		 je	 SHORT $LN56@map_draw_m
  005e1	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  005e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005e6	89 4d 80	 mov	 DWORD PTR tv320[ebp], ecx
  005e9	eb 1d		 jmp	 SHORT $LN57@map_draw_m
$LN56@map_draw_m:
  005eb	68 01 0c 00 00	 push	 3073			; 00000c01H
  005f0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005fb	52		 push	 edx
  005fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00601	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv320[ebp], 0
$LN57@map_draw_m:
  00608	b8 01 00 00 00	 mov	 eax, 1
  0060d	85 c0		 test	 eax, eax
  0060f	74 0c		 je	 SHORT $LN58@map_draw_m
  00611	c7 85 7c ff ff
	ff fa 00 00 00	 mov	 DWORD PTR tv327[ebp], 250 ; 000000faH
  0061b	eb 20		 jmp	 SHORT $LN59@map_draw_m
$LN58@map_draw_m:
  0061d	68 01 0c 00 00	 push	 3073			; 00000c01H
  00622	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00627	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0062d	51		 push	 ecx
  0062e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00633	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv327[ebp], 0
$LN59@map_draw_m:
  0063d	68 fa 00 00 00	 push	 250			; 000000faH
  00642	8b 55 f4	 mov	 edx, DWORD PTR _mission$[ebp]
  00645	52		 push	 edx
  00646	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv320[ebp], 1116
  0064d	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv327[ebp]
  00653	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0065a	ff d2		 call	 edx
  0065c	85 c0		 test	 eax, eax
  0065e	0f 84 39 02 00
	00		 je	 $LN18@map_draw_m

; 3074 : 					{
; 3075 : 						objective = get_local_entity_parent (mission, LIST_TYPE_TASK_DEPENDENT);

  00664	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00668	74 0a		 je	 SHORT $LN60@map_draw_m
  0066a	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0066d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0066f	89 4d 80	 mov	 DWORD PTR tv340[ebp], ecx
  00672	eb 21		 jmp	 SHORT $LN61@map_draw_m
$LN60@map_draw_m:
  00674	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0067a	83 c2 4e	 add	 edx, 78			; 0000004eH
  0067d	52		 push	 edx
  0067e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00683	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00688	50		 push	 eax
  00689	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068e	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv340[ebp], 0
$LN61@map_draw_m:
  00695	b9 01 00 00 00	 mov	 ecx, 1
  0069a	85 c9		 test	 ecx, ecx
  0069c	74 0c		 je	 SHORT $LN62@map_draw_m
  0069e	c7 85 7c ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv348[ebp], 39 ; 00000027H
  006a8	eb 24		 jmp	 SHORT $LN63@map_draw_m
$LN62@map_draw_m:
  006aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  006b0	83 c2 4e	 add	 edx, 78			; 0000004eH
  006b3	52		 push	 edx
  006b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  006be	50		 push	 eax
  006bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006c4	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv348[ebp], 0
$LN63@map_draw_m:
  006ce	6a 27		 push	 39			; 00000027H
  006d0	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  006d3	51		 push	 ecx
  006d4	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv340[ebp], 180
  006db	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv348[ebp]
  006e1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006e8	ff d1		 call	 ecx
  006ea	89 45 f0	 mov	 DWORD PTR _objective$[ebp], eax

; 3076 : 
; 3077 : 						if (objective)

  006ed	83 7d f0 00	 cmp	 DWORD PTR _objective$[ebp], 0
  006f1	0f 84 a6 01 00
	00		 je	 $LN18@map_draw_m

; 3078 : 						{
; 3079 : 							pos = get_last_known_position(objective);

  006f7	8b 45 f0	 mov	 eax, DWORD PTR _objective$[ebp]
  006fa	50		 push	 eax
  006fb	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  00700	89 45 ec	 mov	 DWORD PTR _pos$[ebp], eax

; 3080 : 
; 3081 : 							ASSERT (pos);

  00703	83 7d ec 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00707	75 18		 jne	 SHORT $LN17@map_draw_m
  00709	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0070e	83 c0 54	 add	 eax, 84			; 00000054H
  00711	50		 push	 eax
  00712	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00717	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  0071c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@map_draw_m:

; 3082 : 
; 3083 : 							map_draw_entity_icon (obj, mission, pos, icon, side, 1.0);

  00721	51		 push	 ecx
  00722	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0072a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072f	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00732	50		 push	 eax
  00733	8b 4d e4	 mov	 ecx, DWORD PTR _icon$[ebp]
  00736	51		 push	 ecx
  00737	8b 55 ec	 mov	 edx, DWORD PTR _pos$[ebp]
  0073a	52		 push	 edx
  0073b	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0073e	50		 push	 eax
  0073f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00742	51		 push	 ecx
  00743	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 3084 : 
; 3085 : 							if (get_current_list_mode () == COMMON_LIST_MODE_MISSION)

  00748	e8 00 00 00 00	 call	 ?get_current_list_mode@@YGHXZ ; get_current_list_mode
  0074d	85 c0		 test	 eax, eax
  0074f	0f 85 48 01 00
	00		 jne	 $LN18@map_draw_m

; 3086 : 							{
; 3087 : 								sprintf (name, "%s #%d", get_trans (get_local_entity_string (mission, STRING_TYPE_SHORT_DISPLAY_NAME)), get_local_entity_int_value (mission, INT_TYPE_TASK_ID));

  00755	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  00759	74 0a		 je	 SHORT $LN64@map_draw_m
  0075b	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  0075e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00760	89 4d 80	 mov	 DWORD PTR tv377[ebp], ecx
  00763	eb 21		 jmp	 SHORT $LN65@map_draw_m
$LN64@map_draw_m:
  00765	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0076b	83 c2 5a	 add	 edx, 90			; 0000005aH
  0076e	52		 push	 edx
  0076f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00774	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00779	50		 push	 eax
  0077a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0077f	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv377[ebp], 0
$LN65@map_draw_m:
  00786	b9 01 00 00 00	 mov	 ecx, 1
  0078b	85 c9		 test	 ecx, ecx
  0078d	74 0c		 je	 SHORT $LN66@map_draw_m
  0078f	c7 85 7c ff ff
	ff dc 00 00 00	 mov	 DWORD PTR tv385[ebp], 220 ; 000000dcH
  00799	eb 24		 jmp	 SHORT $LN67@map_draw_m
$LN66@map_draw_m:
  0079b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  007a1	83 c2 5a	 add	 edx, 90			; 0000005aH
  007a4	52		 push	 edx
  007a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  007aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007af	50		 push	 eax
  007b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b5	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv385[ebp], 0
$LN67@map_draw_m:
  007bf	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  007c3	74 0d		 je	 SHORT $LN68@map_draw_m
  007c5	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  007c8	8b 11		 mov	 edx, DWORD PTR [ecx]
  007ca	89 95 78 ff ff
	ff		 mov	 DWORD PTR tv399[ebp], edx
  007d0	eb 24		 jmp	 SHORT $LN69@map_draw_m
$LN68@map_draw_m:
  007d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  007d7	83 c0 5a	 add	 eax, 90			; 0000005aH
  007da	50		 push	 eax
  007db	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007e6	51		 push	 ecx
  007e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007ec	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv399[ebp], 0
$LN69@map_draw_m:
  007f6	ba 01 00 00 00	 mov	 edx, 1
  007fb	85 d2		 test	 edx, edx
  007fd	74 0c		 je	 SHORT $LN70@map_draw_m
  007ff	c7 85 74 ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv407[ebp], 12 ; 0000000cH
  00809	eb 24		 jmp	 SHORT $LN71@map_draw_m
$LN70@map_draw_m:
  0080b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00810	83 c0 5a	 add	 eax, 90			; 0000005aH
  00813	50		 push	 eax
  00814	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00819	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  0081f	51		 push	 ecx
  00820	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00825	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv407[ebp], 0
$LN71@map_draw_m:
  0082f	68 dc 00 00 00	 push	 220			; 000000dcH
  00834	8b 55 f4	 mov	 edx, DWORD PTR _mission$[ebp]
  00837	52		 push	 edx
  00838	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv377[ebp], 1116
  0083f	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv385[ebp]
  00845	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0084c	ff d2		 call	 edx
  0084e	50		 push	 eax
  0084f	6a 0c		 push	 12			; 0000000cH
  00851	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  00854	50		 push	 eax
  00855	6b 8d 78 ff ff
	ff 34		 imul	 ecx, DWORD PTR tv399[ebp], 52
  0085c	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv407[ebp]
  00862	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  00869	ff d0		 call	 eax
  0086b	50		 push	 eax
  0086c	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00871	50		 push	 eax
  00872	68 00 00 00 00	 push	 OFFSET ??_C@_06DOPBEMKJ@?$CFs?5?$CD?$CFd@
  00877	8d 4d c4	 lea	 ecx, DWORD PTR _name$[ebp]
  0087a	51		 push	 ecx
  0087b	e8 00 00 00 00	 call	 _sprintf
  00880	83 c4 10	 add	 esp, 16			; 00000010H

; 3088 : 
; 3089 : 								map_draw_string (obj, pos, name, UI_FONT_ARIAL_14, &ui_colour_orange, FALSE);

  00883	6a 00		 push	 0
  00885	68 00 00 00 00	 push	 OFFSET ?ui_colour_orange@@3UREAL_COLOUR@@A ; ui_colour_orange
  0088a	6a 01		 push	 1
  0088c	8d 45 c4	 lea	 eax, DWORD PTR _name$[ebp]
  0088f	50		 push	 eax
  00890	8b 4d ec	 mov	 ecx, DWORD PTR _pos$[ebp]
  00893	51		 push	 ecx
  00894	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00897	52		 push	 edx
  00898	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN18@map_draw_m:

; 3090 : 							}
; 3091 : 						}
; 3092 : 					}
; 3093 : 
; 3094 : 					mission = get_local_entity_child_succ (mission, LIST_TYPE_ASSIGNED_TASK);

  0089d	83 7d f4 00	 cmp	 DWORD PTR _mission$[ebp], 0
  008a1	74 0a		 je	 SHORT $LN72@map_draw_m
  008a3	8b 45 f4	 mov	 eax, DWORD PTR _mission$[ebp]
  008a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  008a8	89 4d 80	 mov	 DWORD PTR tv428[ebp], ecx
  008ab	eb 21		 jmp	 SHORT $LN73@map_draw_m
$LN72@map_draw_m:
  008ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  008b3	83 c2 61	 add	 edx, 97			; 00000061H
  008b6	52		 push	 edx
  008b7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  008bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008c1	50		 push	 eax
  008c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008c7	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv428[ebp], 0
$LN73@map_draw_m:
  008ce	b9 01 00 00 00	 mov	 ecx, 1
  008d3	85 c9		 test	 ecx, ecx
  008d5	74 0c		 je	 SHORT $LN74@map_draw_m
  008d7	c7 85 7c ff ff
	ff 03 00 00 00	 mov	 DWORD PTR tv436[ebp], 3
  008e1	eb 24		 jmp	 SHORT $LN75@map_draw_m
$LN74@map_draw_m:
  008e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  008e9	83 c2 61	 add	 edx, 97			; 00000061H
  008ec	52		 push	 edx
  008ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  008f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  008f7	50		 push	 eax
  008f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008fd	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv436[ebp], 0
$LN75@map_draw_m:
  00907	6a 03		 push	 3
  00909	8b 4d f4	 mov	 ecx, DWORD PTR _mission$[ebp]
  0090c	51		 push	 ecx
  0090d	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv428[ebp], 180
  00914	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv436[ebp]
  0091a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00921	ff d1		 call	 ecx
  00923	89 45 f4	 mov	 DWORD PTR _mission$[ebp], eax

; 3095 : 				}

  00926	e9 a6 fc ff ff	 jmp	 $LN6@map_draw_m
$LN7@map_draw_m:

; 3096 : 			}
; 3097 : 
; 3098 : 			keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  0092b	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0092f	74 0a		 je	 SHORT $LN76@map_draw_m
  00931	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00934	8b 08		 mov	 ecx, DWORD PTR [eax]
  00936	89 4d 80	 mov	 DWORD PTR tv448[ebp], ecx
  00939	eb 21		 jmp	 SHORT $LN77@map_draw_m
$LN76@map_draw_m:
  0093b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00941	83 c2 65	 add	 edx, 101		; 00000065H
  00944	52		 push	 edx
  00945	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0094a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0094f	50		 push	 eax
  00950	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00955	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv448[ebp], 0
$LN77@map_draw_m:
  0095c	b9 01 00 00 00	 mov	 ecx, 1
  00961	85 c9		 test	 ecx, ecx
  00963	74 0c		 je	 SHORT $LN78@map_draw_m
  00965	c7 85 7c ff ff
	ff 15 00 00 00	 mov	 DWORD PTR tv456[ebp], 21 ; 00000015H
  0096f	eb 24		 jmp	 SHORT $LN79@map_draw_m
$LN78@map_draw_m:
  00971	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00977	83 c2 65	 add	 edx, 101		; 00000065H
  0097a	52		 push	 edx
  0097b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00980	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00985	50		 push	 eax
  00986	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0098b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv456[ebp], 0
$LN79@map_draw_m:
  00995	6a 15		 push	 21			; 00000015H
  00997	8b 4d f8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0099a	51		 push	 ecx
  0099b	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv448[ebp], 180
  009a2	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv456[ebp]
  009a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  009af	ff d1		 call	 ecx
  009b1	89 45 f8	 mov	 DWORD PTR _keysite$[ebp], eax

; 3099 : 		}

  009b4	e9 30 f7 ff ff	 jmp	 $LN2@map_draw_m
$LN3@map_draw_m:

; 3100 : 	}
; 3101 : }

  009b9	5f		 pop	 edi
  009ba	5e		 pop	 esi
  009bb	5b		 pop	 ebx
  009bc	8b e5		 mov	 esp, ebp
  009be	5d		 pop	 ebp
  009bf	c2 08 00	 ret	 8
?map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_missions
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv246 = -96						; size = 4
tv207 = -96						; size = 4
tv187 = -96						; size = 4
tv162 = -96						; size = 4
tv143 = -96						; size = 4
tv90 = -96						; size = 4
tv238 = -92						; size = 4
tv199 = -92						; size = 4
tv179 = -92						; size = 4
tv155 = -92						; size = 4
tv135 = -92						; size = 4
tv82 = -92						; size = 4
_map_dimensions$ = -24					; size = 4
_name$ = -20						; size = 4
_pos$ = -16						; size = 4
_gunship$ = -12						; size = 4
_pilot$ = -8						; size = 4
_force$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_pilots, COMDAT

; 2939 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2940 : 	entity
; 2941 : 		*force,
; 2942 : 		*pilot,
; 2943 : 		*gunship;
; 2944 : 
; 2945 : 	vec3d
; 2946 : 		*pos;
; 2947 : 
; 2948 : 	const char
; 2949 : 		*name;
; 2950 : 
; 2951 : 	map_dimension_type
; 2952 : 		*map_dimensions;
; 2953 : 
; 2954 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 e8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2955 : 
; 2956 : 	ASSERT (map_dimensions);

  0001e	83 7d e8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN4@map_draw_p
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00029	83 c0 11	 add	 eax, 17			; 00000011H
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_p:

; 2957 : 
; 2958 : 	force = get_local_force_entity (side);

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00045	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 2959 : 
; 2960 : 	pilot = get_local_entity_first_child (force, LIST_TYPE_PILOT);

  00048	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN10@map_draw_p
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d a4	 mov	 DWORD PTR tv82[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN11@map_draw_p
$LN10@map_draw_p:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0005e	83 c2 15	 add	 edx, 21			; 00000015H
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN11@map_draw_p:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN12@map_draw_p
  00082	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv90[ebp], 28	; 0000001cH
  00089	eb 21		 jmp	 SHORT $LN13@map_draw_p
$LN12@map_draw_p:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00091	83 c2 15	 add	 edx, 21			; 00000015H
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@map_draw_p:
  000ac	6a 1c		 push	 28			; 0000001cH
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  000b1	51		 push	 ecx
  000b2	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv82[ebp], 180
  000b9	8b 45 a0	 mov	 eax, DWORD PTR tv90[ebp]
  000bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c3	ff d1		 call	 ecx
  000c5	89 45 f8	 mov	 DWORD PTR _pilot$[ebp], eax
$LN2@map_draw_p:

; 2961 : 
; 2962 : 	while (pilot)

  000c8	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  000cc	0f 84 08 03 00
	00		 je	 $LN3@map_draw_p

; 2963 : 	{
; 2964 : 		gunship = get_local_entity_parent (pilot, LIST_TYPE_AIRCREW);

  000d2	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  000d6	74 0a		 je	 SHORT $LN14@map_draw_p
  000d8	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	89 4d a4	 mov	 DWORD PTR tv135[ebp], ecx
  000e0	eb 21		 jmp	 SHORT $LN15@map_draw_p
$LN14@map_draw_p:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  000e8	83 c2 19	 add	 edx, 25			; 00000019H
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN15@map_draw_p:
  00103	b9 01 00 00 00	 mov	 ecx, 1
  00108	85 c9		 test	 ecx, ecx
  0010a	74 09		 je	 SHORT $LN16@map_draw_p
  0010c	c7 45 a0 01 00
	00 00		 mov	 DWORD PTR tv143[ebp], 1
  00113	eb 21		 jmp	 SHORT $LN17@map_draw_p
$LN16@map_draw_p:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0011b	83 c2 19	 add	 edx, 25			; 00000019H
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN17@map_draw_p:
  00136	6a 01		 push	 1
  00138	8b 4d f8	 mov	 ecx, DWORD PTR _pilot$[ebp]
  0013b	51		 push	 ecx
  0013c	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 180
  00143	8b 45 a0	 mov	 eax, DWORD PTR tv143[ebp]
  00146	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0014d	ff d1		 call	 ecx
  0014f	89 45 f4	 mov	 DWORD PTR _gunship$[ebp], eax

; 2965 : 
; 2966 : 		if (gunship)

  00152	83 7d f4 00	 cmp	 DWORD PTR _gunship$[ebp], 0
  00156	0f 84 f9 01 00
	00		 je	 $LN7@map_draw_p

; 2967 : 		{
; 2968 : 			if (get_local_entity_int_value (gunship, INT_TYPE_ALIVE))

  0015c	83 7d f4 00	 cmp	 DWORD PTR _gunship$[ebp], 0
  00160	74 0a		 je	 SHORT $LN18@map_draw_p
  00162	8b 45 f4	 mov	 eax, DWORD PTR _gunship$[ebp]
  00165	8b 08		 mov	 ecx, DWORD PTR [eax]
  00167	89 4d a4	 mov	 DWORD PTR tv155[ebp], ecx
  0016a	eb 1d		 jmp	 SHORT $LN19@map_draw_p
$LN18@map_draw_p:
  0016c	68 98 0b 00 00	 push	 2968			; 00000b98H
  00171	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0017c	52		 push	 edx
  0017d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00182	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN19@map_draw_p:
  00189	b8 01 00 00 00	 mov	 eax, 1
  0018e	85 c0		 test	 eax, eax
  00190	74 09		 je	 SHORT $LN20@map_draw_p
  00192	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv162[ebp], 7
  00199	eb 1d		 jmp	 SHORT $LN21@map_draw_p
$LN20@map_draw_p:
  0019b	68 98 0b 00 00	 push	 2968			; 00000b98H
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b1	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN21@map_draw_p:
  001b8	6a 07		 push	 7
  001ba	8b 55 f4	 mov	 edx, DWORD PTR _gunship$[ebp]
  001bd	52		 push	 edx
  001be	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv155[ebp], 1116
  001c5	8b 4d a0	 mov	 ecx, DWORD PTR tv162[ebp]
  001c8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001cf	ff d2		 call	 edx
  001d1	85 c0		 test	 eax, eax
  001d3	0f 84 7c 01 00
	00		 je	 $LN7@map_draw_p

; 2969 : 			{
; 2970 : 				if (check_visible_entity (obj, gunship))

  001d9	8b 45 f4	 mov	 eax, DWORD PTR _gunship$[ebp]
  001dc	50		 push	 eax
  001dd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?check_visible_entity@@YGHPAUUI_OBJECT@@PAUENTITY@@@Z ; check_visible_entity
  001e6	85 c0		 test	 eax, eax
  001e8	0f 84 67 01 00
	00		 je	 $LN7@map_draw_p

; 2971 : 				{
; 2972 : 					pos = get_local_entity_vec3d_ptr (gunship, VEC3D_TYPE_POSITION);

  001ee	83 7d f4 00	 cmp	 DWORD PTR _gunship$[ebp], 0
  001f2	74 0a		 je	 SHORT $LN22@map_draw_p
  001f4	8b 45 f4	 mov	 eax, DWORD PTR _gunship$[ebp]
  001f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001f9	89 4d a4	 mov	 DWORD PTR tv179[ebp], ecx
  001fc	eb 21		 jmp	 SHORT $LN23@map_draw_p
$LN22@map_draw_p:
  001fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00204	83 c2 21	 add	 edx, 33			; 00000021H
  00207	52		 push	 edx
  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00212	50		 push	 eax
  00213	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00218	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN23@map_draw_p:
  0021f	b9 01 00 00 00	 mov	 ecx, 1
  00224	85 c9		 test	 ecx, ecx
  00226	74 09		 je	 SHORT $LN24@map_draw_p
  00228	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv187[ebp], 8
  0022f	eb 21		 jmp	 SHORT $LN25@map_draw_p
$LN24@map_draw_p:
  00231	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00237	83 c2 21	 add	 edx, 33			; 00000021H
  0023a	52		 push	 edx
  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00240	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00245	50		 push	 eax
  00246	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN25@map_draw_p:
  00252	6a 08		 push	 8
  00254	8b 4d f4	 mov	 ecx, DWORD PTR _gunship$[ebp]
  00257	51		 push	 ecx
  00258	6b 55 a4 60	 imul	 edx, DWORD PTR tv179[ebp], 96
  0025c	8b 45 a0	 mov	 eax, DWORD PTR tv187[ebp]
  0025f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00266	ff d1		 call	 ecx
  00268	89 45 f0	 mov	 DWORD PTR _pos$[ebp], eax

; 2973 : 
; 2974 : 					name = get_local_entity_string (pilot, STRING_TYPE_PILOTS_NAME);

  0026b	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  0026f	74 0a		 je	 SHORT $LN26@map_draw_p
  00271	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  00274	8b 08		 mov	 ecx, DWORD PTR [eax]
  00276	89 4d a4	 mov	 DWORD PTR tv199[ebp], ecx
  00279	eb 21		 jmp	 SHORT $LN27@map_draw_p
$LN26@map_draw_p:
  0027b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00281	83 c2 23	 add	 edx, 35			; 00000023H
  00284	52		 push	 edx
  00285	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00295	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN27@map_draw_p:
  0029c	b9 01 00 00 00	 mov	 ecx, 1
  002a1	85 c9		 test	 ecx, ecx
  002a3	74 09		 je	 SHORT $LN28@map_draw_p
  002a5	c7 45 a0 0a 00
	00 00		 mov	 DWORD PTR tv207[ebp], 10 ; 0000000aH
  002ac	eb 21		 jmp	 SHORT $LN29@map_draw_p
$LN28@map_draw_p:
  002ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002b4	83 c2 23	 add	 edx, 35			; 00000023H
  002b7	52		 push	 edx
  002b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  002c2	50		 push	 eax
  002c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c8	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN29@map_draw_p:
  002cf	6a 0a		 push	 10			; 0000000aH
  002d1	8b 4d f8	 mov	 ecx, DWORD PTR _pilot$[ebp]
  002d4	51		 push	 ecx
  002d5	6b 55 a4 34	 imul	 edx, DWORD PTR tv199[ebp], 52
  002d9	8b 45 a0	 mov	 eax, DWORD PTR tv207[ebp]
  002dc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  002e3	ff d1		 call	 ecx
  002e5	89 45 ec	 mov	 DWORD PTR _name$[ebp], eax

; 2975 : 
; 2976 : 					map_draw_entity_icon (obj, gunship, pos, MAP_ICON_PLAYER, side, 1.0);

  002e8	51		 push	 ecx
  002e9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f6	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  002f9	50		 push	 eax
  002fa	6a 10		 push	 16			; 00000010H
  002fc	8b 4d f0	 mov	 ecx, DWORD PTR _pos$[ebp]
  002ff	51		 push	 ecx
  00300	8b 55 f4	 mov	 edx, DWORD PTR _gunship$[ebp]
  00303	52		 push	 edx
  00304	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 2977 : 
; 2978 : 					if (pilot == get_pilot_entity ())

  0030d	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  00310	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00316	75 23		 jne	 SHORT $LN8@map_draw_p

; 2979 : 					{
; 2980 : 						map_draw_entity_icon (obj, gunship, pos, MAP_ICON_PLAYER_OVERLAY, ENTITY_SIDE_NEUTRAL, 1.0);

  00318	51		 push	 ecx
  00319	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00321	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00326	6a 00		 push	 0
  00328	6a 11		 push	 17			; 00000011H
  0032a	8b 45 f0	 mov	 eax, DWORD PTR _pos$[ebp]
  0032d	50		 push	 eax
  0032e	8b 4d f4	 mov	 ecx, DWORD PTR _gunship$[ebp]
  00331	51		 push	 ecx
  00332	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00335	52		 push	 edx
  00336	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN8@map_draw_p:

; 2981 : 					}
; 2982 : 
; 2983 : 					map_draw_string (obj, pos, name, UI_FONT_ARIAL_10, &ui_ingame_selected_text_colour, FALSE);

  0033b	6a 00		 push	 0
  0033d	68 00 00 00 00	 push	 OFFSET ?ui_ingame_selected_text_colour@@3UREAL_COLOUR@@A ; ui_ingame_selected_text_colour
  00342	6a 00		 push	 0
  00344	8b 45 ec	 mov	 eax, DWORD PTR _name$[ebp]
  00347	50		 push	 eax
  00348	8b 4d f0	 mov	 ecx, DWORD PTR _pos$[ebp]
  0034b	51		 push	 ecx
  0034c	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0034f	52		 push	 edx
  00350	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN7@map_draw_p:

; 2984 : 				}
; 2985 : 			}
; 2986 : 		}
; 2987 : 
; 2988 : 		pilot = get_local_entity_child_succ (pilot, LIST_TYPE_PILOT);

  00355	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00359	74 0a		 je	 SHORT $LN30@map_draw_p
  0035b	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  0035e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00360	89 4d a4	 mov	 DWORD PTR tv238[ebp], ecx
  00363	eb 21		 jmp	 SHORT $LN31@map_draw_p
$LN30@map_draw_p:
  00365	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0036b	83 c2 31	 add	 edx, 49			; 00000031H
  0036e	52		 push	 edx
  0036f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00374	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv238[ebp], 0
$LN31@map_draw_p:
  00386	b9 01 00 00 00	 mov	 ecx, 1
  0038b	85 c9		 test	 ecx, ecx
  0038d	74 09		 je	 SHORT $LN32@map_draw_p
  0038f	c7 45 a0 1c 00
	00 00		 mov	 DWORD PTR tv246[ebp], 28 ; 0000001cH
  00396	eb 21		 jmp	 SHORT $LN33@map_draw_p
$LN32@map_draw_p:
  00398	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0039e	83 c2 31	 add	 edx, 49			; 00000031H
  003a1	52		 push	 edx
  003a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003ac	50		 push	 eax
  003ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b2	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv246[ebp], 0
$LN33@map_draw_p:
  003b9	6a 1c		 push	 28			; 0000001cH
  003bb	8b 4d f8	 mov	 ecx, DWORD PTR _pilot$[ebp]
  003be	51		 push	 ecx
  003bf	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv238[ebp], 180
  003c6	8b 45 a0	 mov	 eax, DWORD PTR tv246[ebp]
  003c9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003d0	ff d1		 call	 ecx
  003d2	89 45 f8	 mov	 DWORD PTR _pilot$[ebp], eax

; 2989 : 	}

  003d5	e9 ee fc ff ff	 jmp	 $LN2@map_draw_p
$LN3@map_draw_p:

; 2990 : }

  003da	5f		 pop	 edi
  003db	5e		 pop	 esi
  003dc	5b		 pop	 ebx
  003dd	8b e5		 mov	 esp, ebp
  003df	5d		 pop	 ebp
  003e0	c2 08 00	 ret	 8
?map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_pilots
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_towns@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_col$ = -24						; size = 4
_map_dimensions$ = -20					; size = 4
_item$ = -16						; size = 4
_pos$ = -12						; size = 12
_obj$ = 8						; size = 4
?map_draw_towns@@YGXPAUUI_OBJECT@@@Z PROC		; map_draw_towns, COMDAT

; 2889 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2890 : 	vec3d
; 2891 : 		pos;
; 2892 : 
; 2893 : 	population_name_database_type
; 2894 : 		*item;
; 2895 : 
; 2896 : 	map_dimension_type
; 2897 : 		*map_dimensions;
; 2898 : 
; 2899 : 	rgb_colour
; 2900 : 		*col;
; 2901 : 
; 2902 : 	col = &ui_colour_white;

  00009	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _col$[ebp], OFFSET ?ui_colour_white@@3UREAL_COLOUR@@A ; ui_colour_white

; 2903 : 
; 2904 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00010	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00020	ff d0		 call	 eax
  00022	89 45 ec	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2905 : 
; 2906 : 	ASSERT (map_dimensions);

  00025	83 7d ec 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00029	75 18		 jne	 SHORT $LN4@map_draw_t
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_towns@@YGXPAUUI_OBJECT@@@Z@4JA
  00030	83 c0 11	 add	 eax, 17			; 00000011H
  00033	50		 push	 eax
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0003e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_draw_t:

; 2907 : 
; 2908 : 	item = population_name_database;

  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?population_name_database@@3PAUPOPULATION_NAME_DATABASE_TYPE@@A ; population_name_database
  00048	89 45 f0	 mov	 DWORD PTR _item$[ebp], eax
$LN2@map_draw_t:

; 2909 : 
; 2910 : 	while (item)

  0004b	83 7d f0 00	 cmp	 DWORD PTR _item$[ebp], 0
  0004f	0f 84 8d 00 00
	00		 je	 $LN3@map_draw_t

; 2911 : 	{
; 2912 : 		if (item->type == POPULATION_TYPE_TOWN)

  00055	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  00058	83 78 04 01	 cmp	 DWORD PTR [eax+4], 1
  0005c	75 76		 jne	 SHORT $LN6@map_draw_t

; 2913 : 		{
; 2914 : 			if (map_dimensions->size <= (item->zoom * 2))

  0005e	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  00061	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00066	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40000000
  0006e	8b 4d ec	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00071	0f 2f 41 08	 comiss	 xmm0, DWORD PTR [ecx+8]
  00075	72 5d		 jb	 SHORT $LN6@map_draw_t

; 2915 : 			{
; 2916 : 				pos.x = item->x;

  00077	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  0007a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0007f	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 2917 : 				pos.y = 0.0;

  00084	0f 57 c0	 xorps	 xmm0, xmm0
  00087	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 2918 : 				pos.z = item->z;

  0008c	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  0008f	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00094	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 2919 : 
; 2920 : 				//
; 2921 : 				// Print Name
; 2922 : 				//
; 2923 : 
; 2924 : 				ASSERT (item->name);

  00099	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  0009c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0009f	75 18		 jne	 SHORT $LN7@map_draw_t
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_towns@@YGXPAUUI_OBJECT@@@Z@4JA
  000a6	83 c0 23	 add	 eax, 35			; 00000023H
  000a9	50		 push	 eax
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HAFOBCJH@item?9?$DOname@
  000b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_t:

; 2925 : 
; 2926 : 				map_draw_string (obj, &pos, item->name, UI_FONT_ARIAL_14, col, FALSE);

  000b9	6a 00		 push	 0
  000bb	8b 45 e8	 mov	 eax, DWORD PTR _col$[ebp]
  000be	50		 push	 eax
  000bf	6a 01		 push	 1
  000c1	8b 4d f0	 mov	 ecx, DWORD PTR _item$[ebp]
  000c4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c6	52		 push	 edx
  000c7	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  000ca	50		 push	 eax
  000cb	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 ?map_draw_string@@YGXPAUUI_OBJECT@@PAUVEC3D@@PBDW4FONT_TYPES@@PAUREAL_COLOUR@@H@Z ; map_draw_string
$LN6@map_draw_t:

; 2927 : 			}
; 2928 : 		}
; 2929 : 
; 2930 : 		item = item->next;

  000d4	8b 45 f0	 mov	 eax, DWORD PTR _item$[ebp]
  000d7	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000da	89 4d f0	 mov	 DWORD PTR _item$[ebp], ecx

; 2931 : 	}

  000dd	e9 69 ff ff ff	 jmp	 $LN2@map_draw_t
$LN3@map_draw_t:

; 2932 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 04 00	 ret	 4
?map_draw_towns@@YGXPAUUI_OBJECT@@@Z ENDP		; map_draw_towns
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv210 = -84						; size = 4
tv180 = -84						; size = 4
tv159 = -84						; size = 4
tv140 = -84						; size = 4
tv89 = -84						; size = 4
tv202 = -80						; size = 4
tv172 = -80						; size = 4
tv152 = -80						; size = 4
tv133 = -80						; size = 4
tv81 = -80						; size = 4
_sub_type$ = -12					; size = 4
_keysite$ = -8						; size = 4
_force$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_keysites, COMDAT

; 2851 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2852 : 	entity
; 2853 : 		*force,
; 2854 : 		*keysite;
; 2855 : 
; 2856 : 	entity_sub_types
; 2857 : 		sub_type;
; 2858 : 
; 2859 : 	if ((global_layer_controls & (1 << MAP_LAYER_CONTROL_KEYSITES)) || (global_layer_controls & (1 << MAP_LAYER_CONTROL_SHIPS)))

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0000e	83 e0 08	 and	 eax, 8
  00011	75 10		 jne	 SHORT $LN5@map_draw_k
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  00018	25 80 00 00 00	 and	 eax, 128		; 00000080H
  0001d	0f 84 de 02 00
	00		 je	 $LN1@map_draw_k
$LN5@map_draw_k:

; 2860 : 	{
; 2861 : 		force = get_local_force_entity (side);

  00023	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0002c	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 2862 : 
; 2863 : 		ASSERT (force);

  0002f	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00033	75 18		 jne	 SHORT $LN6@map_draw_k
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0003a	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_draw_k:

; 2864 : 
; 2865 : 		keysite = get_local_entity_first_child (force, LIST_TYPE_KEYSITE_FORCE);

  0004d	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00051	74 0a		 je	 SHORT $LN10@map_draw_k
  00053	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d b0	 mov	 DWORD PTR tv81[ebp], ecx
  0005b	eb 21		 jmp	 SHORT $LN11@map_draw_k
$LN10@map_draw_k:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00063	83 c2 0e	 add	 edx, 14			; 0000000eH
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN11@map_draw_k:
  0007e	b9 01 00 00 00	 mov	 ecx, 1
  00083	85 c9		 test	 ecx, ecx
  00085	74 09		 je	 SHORT $LN12@map_draw_k
  00087	c7 45 ac 15 00
	00 00		 mov	 DWORD PTR tv89[ebp], 21	; 00000015H
  0008e	eb 21		 jmp	 SHORT $LN13@map_draw_k
$LN12@map_draw_k:
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00096	83 c2 0e	 add	 edx, 14			; 0000000eH
  00099	52		 push	 edx
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000aa	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN13@map_draw_k:
  000b1	6a 15		 push	 21			; 00000015H
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  000b6	51		 push	 ecx
  000b7	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 180
  000be	8b 45 ac	 mov	 eax, DWORD PTR tv89[ebp]
  000c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c8	ff d1		 call	 ecx
  000ca	89 45 f8	 mov	 DWORD PTR _keysite$[ebp], eax
$LN2@map_draw_k:

; 2866 : 
; 2867 : 		while (keysite)

  000cd	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  000d1	0f 84 2a 02 00
	00		 je	 $LN1@map_draw_k

; 2868 : 		{
; 2869 : 			if ((get_local_entity_int_value (keysite, INT_TYPE_IN_USE)) && (get_local_entity_int_value (keysite, INT_TYPE_ALIVE)))

  000d7	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  000db	74 0a		 je	 SHORT $LN14@map_draw_k
  000dd	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  000e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e2	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000e5	eb 1d		 jmp	 SHORT $LN15@map_draw_k
$LN14@map_draw_k:
  000e7	68 35 0b 00 00	 push	 2869			; 00000b35H
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fd	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN15@map_draw_k:
  00104	b8 01 00 00 00	 mov	 eax, 1
  00109	85 c0		 test	 eax, eax
  0010b	74 09		 je	 SHORT $LN16@map_draw_k
  0010d	c7 45 ac 6d 00
	00 00		 mov	 DWORD PTR tv140[ebp], 109 ; 0000006dH
  00114	eb 1d		 jmp	 SHORT $LN17@map_draw_k
$LN16@map_draw_k:
  00116	68 35 0b 00 00	 push	 2869			; 00000b35H
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN17@map_draw_k:
  00133	6a 6d		 push	 109			; 0000006dH
  00135	8b 55 f8	 mov	 edx, DWORD PTR _keysite$[ebp]
  00138	52		 push	 edx
  00139	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv133[ebp], 1116
  00140	8b 4d ac	 mov	 ecx, DWORD PTR tv140[ebp]
  00143	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0014a	ff d2		 call	 edx
  0014c	85 c0		 test	 eax, eax
  0014e	0f 84 28 01 00
	00		 je	 $LN7@map_draw_k
  00154	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00158	74 0a		 je	 SHORT $LN18@map_draw_k
  0015a	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  0015d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015f	89 4d b0	 mov	 DWORD PTR tv152[ebp], ecx
  00162	eb 1d		 jmp	 SHORT $LN19@map_draw_k
$LN18@map_draw_k:
  00164	68 35 0b 00 00	 push	 2869			; 00000b35H
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00174	52		 push	 edx
  00175	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN19@map_draw_k:
  00181	b8 01 00 00 00	 mov	 eax, 1
  00186	85 c0		 test	 eax, eax
  00188	74 09		 je	 SHORT $LN20@map_draw_k
  0018a	c7 45 ac 07 00
	00 00		 mov	 DWORD PTR tv159[ebp], 7
  00191	eb 1d		 jmp	 SHORT $LN21@map_draw_k
$LN20@map_draw_k:
  00193	68 35 0b 00 00	 push	 2869			; 00000b35H
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a3	51		 push	 ecx
  001a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN21@map_draw_k:
  001b0	6a 07		 push	 7
  001b2	8b 55 f8	 mov	 edx, DWORD PTR _keysite$[ebp]
  001b5	52		 push	 edx
  001b6	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv152[ebp], 1116
  001bd	8b 4d ac	 mov	 ecx, DWORD PTR tv159[ebp]
  001c0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001c7	ff d2		 call	 edx
  001c9	85 c0		 test	 eax, eax
  001cb	0f 84 ab 00 00
	00		 je	 $LN7@map_draw_k

; 2870 : 			{
; 2871 : 				sub_type = get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE);

  001d1	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  001d5	74 0a		 je	 SHORT $LN22@map_draw_k
  001d7	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  001da	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dc	89 4d b0	 mov	 DWORD PTR tv172[ebp], ecx
  001df	eb 21		 jmp	 SHORT $LN23@map_draw_k
$LN22@map_draw_k:
  001e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001e7	83 c2 14	 add	 edx, 20			; 00000014H
  001ea	52		 push	 edx
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv172[ebp], 0
$LN23@map_draw_k:
  00202	b9 01 00 00 00	 mov	 ecx, 1
  00207	85 c9		 test	 ecx, ecx
  00209	74 09		 je	 SHORT $LN24@map_draw_k
  0020b	c7 45 ac 34 00
	00 00		 mov	 DWORD PTR tv180[ebp], 52 ; 00000034H
  00212	eb 21		 jmp	 SHORT $LN25@map_draw_k
$LN24@map_draw_k:
  00214	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0021a	83 c2 14	 add	 edx, 20			; 00000014H
  0021d	52		 push	 edx
  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00223	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00228	50		 push	 eax
  00229	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN25@map_draw_k:
  00235	6a 34		 push	 52			; 00000034H
  00237	8b 4d f8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0023a	51		 push	 ecx
  0023b	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv172[ebp], 1116
  00242	8b 45 ac	 mov	 eax, DWORD PTR tv180[ebp]
  00245	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0024c	ff d1		 call	 ecx
  0024e	89 45 f4	 mov	 DWORD PTR _sub_type$[ebp], eax

; 2872 : 
; 2873 : 				if (global_layer_controls & (1 << keysite_database [sub_type].map_layer_type))

  00251	6b 45 f4 44	 imul	 eax, DWORD PTR _sub_type$[ebp], 68
  00255	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  0025b	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0025e	ba 01 00 00 00	 mov	 edx, 1
  00263	d3 e2		 shl	 edx, cl
  00265	23 15 00 00 00
	00		 and	 edx, DWORD PTR ?global_layer_controls@@3HA
  0026b	74 0f		 je	 SHORT $LN7@map_draw_k

; 2874 : 				{
; 2875 : 					map_draw_keysite (obj, keysite, MAP_ICON_NONE);

  0026d	6a 00		 push	 0
  0026f	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00272	50		 push	 eax
  00273	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00276	51		 push	 ecx
  00277	e8 00 00 00 00	 call	 ?map_draw_keysite@@YGXPAUUI_OBJECT@@PAUENTITY@@W4MAP_ICON_TYPE@@@Z ; map_draw_keysite
$LN7@map_draw_k:

; 2876 : 				}
; 2877 : 			}
; 2878 : 
; 2879 : 			keysite = get_local_entity_child_succ (keysite, LIST_TYPE_KEYSITE_FORCE);

  0027c	83 7d f8 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00280	74 0a		 je	 SHORT $LN26@map_draw_k
  00282	8b 45 f8	 mov	 eax, DWORD PTR _keysite$[ebp]
  00285	8b 08		 mov	 ecx, DWORD PTR [eax]
  00287	89 4d b0	 mov	 DWORD PTR tv202[ebp], ecx
  0028a	eb 21		 jmp	 SHORT $LN27@map_draw_k
$LN26@map_draw_k:
  0028c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00292	83 c2 1c	 add	 edx, 28			; 0000001cH
  00295	52		 push	 edx
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN27@map_draw_k:
  002ad	b9 01 00 00 00	 mov	 ecx, 1
  002b2	85 c9		 test	 ecx, ecx
  002b4	74 09		 je	 SHORT $LN28@map_draw_k
  002b6	c7 45 ac 15 00
	00 00		 mov	 DWORD PTR tv210[ebp], 21 ; 00000015H
  002bd	eb 21		 jmp	 SHORT $LN29@map_draw_k
$LN28@map_draw_k:
  002bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002c5	83 c2 1c	 add	 edx, 28			; 0000001cH
  002c8	52		 push	 edx
  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN29@map_draw_k:
  002e0	6a 15		 push	 21			; 00000015H
  002e2	8b 4d f8	 mov	 ecx, DWORD PTR _keysite$[ebp]
  002e5	51		 push	 ecx
  002e6	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv202[ebp], 180
  002ed	8b 45 ac	 mov	 eax, DWORD PTR tv210[ebp]
  002f0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002f7	ff d1		 call	 ecx
  002f9	89 45 f8	 mov	 DWORD PTR _keysite$[ebp], eax

; 2880 : 		}

  002fc	e9 cc fd ff ff	 jmp	 $LN2@map_draw_k
$LN1@map_draw_k:

; 2881 : 	}
; 2882 : }

  00301	5f		 pop	 edi
  00302	5e		 pop	 esi
  00303	5b		 pop	 ebx
  00304	8b e5		 mov	 esp, ebp
  00306	5d		 pop	 ebp
  00307	c2 08 00	 ret	 8
?map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_keysites
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv363 = -92						; size = 4
tv340 = -92						; size = 4
tv315 = -92						; size = 4
tv294 = -92						; size = 4
tv274 = -92						; size = 4
tv245 = -92						; size = 4
tv224 = -92						; size = 4
tv204 = -92						; size = 4
tv175 = -92						; size = 4
tv154 = -92						; size = 4
tv355 = -88						; size = 4
tv333 = -88						; size = 4
tv307 = -88						; size = 4
tv286 = -88						; size = 4
tv266 = -88						; size = 4
tv237 = -88						; size = 4
tv216 = -88						; size = 4
tv196 = -88						; size = 4
tv167 = -88						; size = 4
tv146 = -88						; size = 4
tv139 = -88						; size = 4
_map_dimensions$ = -20					; size = 4
_group_type$ = -16					; size = 4
_current_page_group$ = -12				; size = 4
_group$ = -8						; size = 4
_force$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_groups, COMDAT

; 2639 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2640 : 	entity
; 2641 : 		*force,
; 2642 : 		*group,
; 2643 : 		*current_page_group;
; 2644 : 
; 2645 : 	entity_sub_types
; 2646 : 		group_type;
; 2647 : 
; 2648 : 	map_dimension_type
; 2649 : 		*map_dimensions;
; 2650 : 
; 2651 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 ec	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2652 : 
; 2653 : 	ASSERT (map_dimensions);

  0001e	83 7d ec 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN8@map_draw_g
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00029	83 c0 0e	 add	 eax, 14			; 0000000eH
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_draw_g:

; 2654 : 
; 2655 : 	force = get_local_force_entity (side);

  0003c	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00045	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 2656 : 
; 2657 : 	if (get_ui_object_drawable (campaign_page [CAMPAIGN_PAGE_GROUP]))

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	6b c8 03	 imul	 ecx, eax, 3
  00050	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00056	52		 push	 edx
  00057	b8 04 00 00 00	 mov	 eax, 4
  0005c	6b c8 03	 imul	 ecx, eax, 3
  0005f	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00065	8b 02		 mov	 eax, DWORD PTR [edx]
  00067	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  0006e	ff d1		 call	 ecx
  00070	85 c0		 test	 eax, eax
  00072	74 72		 je	 SHORT $LN9@map_draw_g

; 2658 : 	{
; 2659 : 		current_page_group = get_local_entity_safe_ptr (get_ui_object_item_number (campaign_page [CAMPAIGN_PAGE_GROUP]));

  00074	b8 04 00 00 00	 mov	 eax, 4
  00079	6b c8 03	 imul	 ecx, eax, 3
  0007c	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00082	52		 push	 edx
  00083	b8 04 00 00 00	 mov	 eax, 4
  00088	6b c8 03	 imul	 ecx, eax, 3
  0008b	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[ecx]
  00091	8b 02		 mov	 eax, DWORD PTR [edx]
  00093	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  0009a	ff d1		 call	 ecx
  0009c	83 f8 ff	 cmp	 eax, -1
  0009f	74 36		 je	 SHORT $LN19@map_draw_g
  000a1	ba 04 00 00 00	 mov	 edx, 4
  000a6	6b c2 03	 imul	 eax, edx, 3
  000a9	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  000af	51		 push	 ecx
  000b0	ba 04 00 00 00	 mov	 edx, 4
  000b5	6b c2 03	 imul	 eax, edx, 3
  000b8	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?campaign_page@@3PAPAUUI_OBJECT@@A[eax]
  000be	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000c7	ff d0		 call	 eax
  000c9	c1 e0 04	 shl	 eax, 4
  000cc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000d2	89 45 a8	 mov	 DWORD PTR tv139[ebp], eax
  000d5	eb 07		 jmp	 SHORT $LN20@map_draw_g
$LN19@map_draw_g:
  000d7	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN20@map_draw_g:
  000de	8b 4d a8	 mov	 ecx, DWORD PTR tv139[ebp]
  000e1	89 4d f4	 mov	 DWORD PTR _current_page_group$[ebp], ecx

; 2660 : 	}
; 2661 : 	else

  000e4	eb 07		 jmp	 SHORT $LN10@map_draw_g
$LN9@map_draw_g:

; 2662 : 	{
; 2663 : 		current_page_group = NULL;

  000e6	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _current_page_group$[ebp], 0
$LN10@map_draw_g:

; 2664 : 	}
; 2665 : 
; 2666 : 	//
; 2667 : 	// SEA GROUPS
; 2668 : 	//
; 2669 : 
; 2670 : 	group = get_local_entity_first_child (force, LIST_TYPE_SEA_REGISTRY);

  000ed	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000f1	74 0a		 je	 SHORT $LN21@map_draw_g
  000f3	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f8	89 4d a8	 mov	 DWORD PTR tv146[ebp], ecx
  000fb	eb 21		 jmp	 SHORT $LN22@map_draw_g
$LN21@map_draw_g:
  000fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00103	83 c2 1f	 add	 edx, 31			; 0000001fH
  00106	52		 push	 edx
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00117	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN22@map_draw_g:
  0011e	b9 01 00 00 00	 mov	 ecx, 1
  00123	85 c9		 test	 ecx, ecx
  00125	74 09		 je	 SHORT $LN23@map_draw_g
  00127	c7 45 a4 20 00
	00 00		 mov	 DWORD PTR tv154[ebp], 32 ; 00000020H
  0012e	eb 21		 jmp	 SHORT $LN24@map_draw_g
$LN23@map_draw_g:
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00136	83 c2 1f	 add	 edx, 31			; 0000001fH
  00139	52		 push	 edx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN24@map_draw_g:
  00151	6a 20		 push	 32			; 00000020H
  00153	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00156	51		 push	 ecx
  00157	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv146[ebp], 180
  0015e	8b 45 a4	 mov	 eax, DWORD PTR tv154[ebp]
  00161	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00168	ff d1		 call	 ecx
  0016a	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN2@map_draw_g:

; 2671 : 
; 2672 : 	while (group)

  0016d	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00171	0f 84 33 01 00
	00		 je	 $LN3@map_draw_g

; 2673 : 	{
; 2674 : 		group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  00177	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0017b	74 0a		 je	 SHORT $LN25@map_draw_g
  0017d	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00180	8b 08		 mov	 ecx, DWORD PTR [eax]
  00182	89 4d a8	 mov	 DWORD PTR tv167[ebp], ecx
  00185	eb 21		 jmp	 SHORT $LN26@map_draw_g
$LN25@map_draw_g:
  00187	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0018d	83 c2 23	 add	 edx, 35			; 00000023H
  00190	52		 push	 edx
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN26@map_draw_g:
  001a8	b9 01 00 00 00	 mov	 ecx, 1
  001ad	85 c9		 test	 ecx, ecx
  001af	74 09		 je	 SHORT $LN27@map_draw_g
  001b1	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv175[ebp], 52 ; 00000034H
  001b8	eb 21		 jmp	 SHORT $LN28@map_draw_g
$LN27@map_draw_g:
  001ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001c0	83 c2 23	 add	 edx, 35			; 00000023H
  001c3	52		 push	 edx
  001c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ce	50		 push	 eax
  001cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN28@map_draw_g:
  001db	6a 34		 push	 52			; 00000034H
  001dd	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  001e0	51		 push	 ecx
  001e1	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv167[ebp], 1116
  001e8	8b 45 a4	 mov	 eax, DWORD PTR tv175[ebp]
  001eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f2	ff d1		 call	 ecx
  001f4	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 2675 : 
; 2676 : 		if ((group == current_page_group) || (global_layer_controls & (1 << group_database [group_type].map_layer_type)))

  001f7	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  001fa	3b 45 f4	 cmp	 eax, DWORD PTR _current_page_group$[ebp]
  001fd	74 19		 je	 SHORT $LN12@map_draw_g
  001ff	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  00203	ba 01 00 00 00	 mov	 edx, 1
  00208	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+60]
  0020e	d3 e2		 shl	 edx, cl
  00210	23 15 00 00 00
	00		 and	 edx, DWORD PTR ?global_layer_controls@@3HA
  00216	74 0d		 je	 SHORT $LN11@map_draw_g
$LN12@map_draw_g:

; 2677 : 		{
; 2678 : 			map_draw_group (obj, group);

  00218	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0021b	50		 push	 eax
  0021c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0021f	51		 push	 ecx
  00220	e8 00 00 00 00	 call	 ?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_group
$LN11@map_draw_g:

; 2679 : 		}
; 2680 : 
; 2681 : 		group = get_local_entity_child_succ (group, LIST_TYPE_SEA_REGISTRY);

  00225	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00229	74 0a		 je	 SHORT $LN29@map_draw_g
  0022b	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0022e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00230	89 4d a8	 mov	 DWORD PTR tv196[ebp], ecx
  00233	eb 21		 jmp	 SHORT $LN30@map_draw_g
$LN29@map_draw_g:
  00235	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0023b	83 c2 2a	 add	 edx, 42			; 0000002aH
  0023e	52		 push	 edx
  0023f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN30@map_draw_g:
  00256	b9 01 00 00 00	 mov	 ecx, 1
  0025b	85 c9		 test	 ecx, ecx
  0025d	74 09		 je	 SHORT $LN31@map_draw_g
  0025f	c7 45 a4 20 00
	00 00		 mov	 DWORD PTR tv204[ebp], 32 ; 00000020H
  00266	eb 21		 jmp	 SHORT $LN32@map_draw_g
$LN31@map_draw_g:
  00268	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0026e	83 c2 2a	 add	 edx, 42			; 0000002aH
  00271	52		 push	 edx
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00277	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00282	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN32@map_draw_g:
  00289	6a 20		 push	 32			; 00000020H
  0028b	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0028e	51		 push	 ecx
  0028f	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv196[ebp], 180
  00296	8b 45 a4	 mov	 eax, DWORD PTR tv204[ebp]
  00299	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002a0	ff d1		 call	 ecx
  002a2	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 2682 : 	}

  002a5	e9 c3 fe ff ff	 jmp	 $LN2@map_draw_g
$LN3@map_draw_g:

; 2683 : 
; 2684 : 	//
; 2685 : 	// LAND GROUPS
; 2686 : 	//
; 2687 : 
; 2688 : 	group = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  002aa	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  002ae	74 0a		 je	 SHORT $LN33@map_draw_g
  002b0	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  002b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b5	89 4d a8	 mov	 DWORD PTR tv216[ebp], ecx
  002b8	eb 21		 jmp	 SHORT $LN34@map_draw_g
$LN33@map_draw_g:
  002ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002c0	83 c2 31	 add	 edx, 49			; 00000031H
  002c3	52		 push	 edx
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ce	50		 push	 eax
  002cf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d4	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN34@map_draw_g:
  002db	b9 01 00 00 00	 mov	 ecx, 1
  002e0	85 c9		 test	 ecx, ecx
  002e2	74 09		 je	 SHORT $LN35@map_draw_g
  002e4	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR tv224[ebp], 15 ; 0000000fH
  002eb	eb 21		 jmp	 SHORT $LN36@map_draw_g
$LN35@map_draw_g:
  002ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002f3	83 c2 31	 add	 edx, 49			; 00000031H
  002f6	52		 push	 edx
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00307	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv224[ebp], 0
$LN36@map_draw_g:
  0030e	6a 0f		 push	 15			; 0000000fH
  00310	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00313	51		 push	 ecx
  00314	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv216[ebp], 180
  0031b	8b 45 a4	 mov	 eax, DWORD PTR tv224[ebp]
  0031e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00325	ff d1		 call	 ecx
  00327	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN4@map_draw_g:

; 2689 : 
; 2690 : 	while (group)

  0032a	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0032e	0f 84 33 01 00
	00		 je	 $LN5@map_draw_g

; 2691 : 	{
; 2692 : 		group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  00334	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00338	74 0a		 je	 SHORT $LN37@map_draw_g
  0033a	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	89 4d a8	 mov	 DWORD PTR tv237[ebp], ecx
  00342	eb 21		 jmp	 SHORT $LN38@map_draw_g
$LN37@map_draw_g:
  00344	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0034a	83 c2 35	 add	 edx, 53			; 00000035H
  0034d	52		 push	 edx
  0034e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00358	50		 push	 eax
  00359	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN38@map_draw_g:
  00365	b9 01 00 00 00	 mov	 ecx, 1
  0036a	85 c9		 test	 ecx, ecx
  0036c	74 09		 je	 SHORT $LN39@map_draw_g
  0036e	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv245[ebp], 52 ; 00000034H
  00375	eb 21		 jmp	 SHORT $LN40@map_draw_g
$LN39@map_draw_g:
  00377	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0037d	83 c2 35	 add	 edx, 53			; 00000035H
  00380	52		 push	 edx
  00381	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00386	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00391	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv245[ebp], 0
$LN40@map_draw_g:
  00398	6a 34		 push	 52			; 00000034H
  0039a	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0039d	51		 push	 ecx
  0039e	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv237[ebp], 1116
  003a5	8b 45 a4	 mov	 eax, DWORD PTR tv245[ebp]
  003a8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003af	ff d1		 call	 ecx
  003b1	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 2693 : 
; 2694 : 		if ((group == current_page_group) || (global_layer_controls & (1 << group_database [group_type].map_layer_type)))

  003b4	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  003b7	3b 45 f4	 cmp	 eax, DWORD PTR _current_page_group$[ebp]
  003ba	74 19		 je	 SHORT $LN14@map_draw_g
  003bc	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  003c0	ba 01 00 00 00	 mov	 edx, 1
  003c5	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+60]
  003cb	d3 e2		 shl	 edx, cl
  003cd	23 15 00 00 00
	00		 and	 edx, DWORD PTR ?global_layer_controls@@3HA
  003d3	74 0d		 je	 SHORT $LN13@map_draw_g
$LN14@map_draw_g:

; 2695 : 		{
; 2696 : 			map_draw_group (obj, group);

  003d5	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  003d8	50		 push	 eax
  003d9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003dc	51		 push	 ecx
  003dd	e8 00 00 00 00	 call	 ?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_group
$LN13@map_draw_g:

; 2697 : 		}
; 2698 : 
; 2699 : 		group = get_local_entity_child_succ (group, LIST_TYPE_GROUND_REGISTRY);

  003e2	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  003e6	74 0a		 je	 SHORT $LN41@map_draw_g
  003e8	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  003eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ed	89 4d a8	 mov	 DWORD PTR tv266[ebp], ecx
  003f0	eb 21		 jmp	 SHORT $LN42@map_draw_g
$LN41@map_draw_g:
  003f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  003f8	83 c2 3c	 add	 edx, 60			; 0000003cH
  003fb	52		 push	 edx
  003fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00401	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00406	50		 push	 eax
  00407	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv266[ebp], 0
$LN42@map_draw_g:
  00413	b9 01 00 00 00	 mov	 ecx, 1
  00418	85 c9		 test	 ecx, ecx
  0041a	74 09		 je	 SHORT $LN43@map_draw_g
  0041c	c7 45 a4 0f 00
	00 00		 mov	 DWORD PTR tv274[ebp], 15 ; 0000000fH
  00423	eb 21		 jmp	 SHORT $LN44@map_draw_g
$LN43@map_draw_g:
  00425	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0042b	83 c2 3c	 add	 edx, 60			; 0000003cH
  0042e	52		 push	 edx
  0042f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00434	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv274[ebp], 0
$LN44@map_draw_g:
  00446	6a 0f		 push	 15			; 0000000fH
  00448	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0044b	51		 push	 ecx
  0044c	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv266[ebp], 180
  00453	8b 45 a4	 mov	 eax, DWORD PTR tv274[ebp]
  00456	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0045d	ff d1		 call	 ecx
  0045f	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 2700 : 	}

  00462	e9 c3 fe ff ff	 jmp	 $LN4@map_draw_g
$LN5@map_draw_g:

; 2701 : 
; 2702 : 	//
; 2703 : 	// AIR GROUPS
; 2704 : 	//
; 2705 : 
; 2706 : 	group = get_local_entity_first_child (force, LIST_TYPE_AIR_REGISTRY);

  00467	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  0046b	74 0a		 je	 SHORT $LN45@map_draw_g
  0046d	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00470	8b 08		 mov	 ecx, DWORD PTR [eax]
  00472	89 4d a8	 mov	 DWORD PTR tv286[ebp], ecx
  00475	eb 21		 jmp	 SHORT $LN46@map_draw_g
$LN45@map_draw_g:
  00477	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0047d	83 c2 43	 add	 edx, 67			; 00000043H
  00480	52		 push	 edx
  00481	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00486	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0048b	50		 push	 eax
  0048c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00491	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv286[ebp], 0
$LN46@map_draw_g:
  00498	b9 01 00 00 00	 mov	 ecx, 1
  0049d	85 c9		 test	 ecx, ecx
  0049f	74 09		 je	 SHORT $LN47@map_draw_g
  004a1	c7 45 a4 02 00
	00 00		 mov	 DWORD PTR tv294[ebp], 2
  004a8	eb 21		 jmp	 SHORT $LN48@map_draw_g
$LN47@map_draw_g:
  004aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  004b0	83 c2 43	 add	 edx, 67			; 00000043H
  004b3	52		 push	 edx
  004b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004be	50		 push	 eax
  004bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004c4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv294[ebp], 0
$LN48@map_draw_g:
  004cb	6a 02		 push	 2
  004cd	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  004d0	51		 push	 ecx
  004d1	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv286[ebp], 180
  004d8	8b 45 a4	 mov	 eax, DWORD PTR tv294[ebp]
  004db	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  004e2	ff d1		 call	 ecx
  004e4	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN6@map_draw_g:

; 2707 : 
; 2708 : 	while (group)

  004e7	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  004eb	0f 84 b0 01 00
	00		 je	 $LN1@map_draw_g

; 2709 : 	{
; 2710 : 		group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  004f1	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  004f5	74 0a		 je	 SHORT $LN49@map_draw_g
  004f7	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  004fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fc	89 4d a8	 mov	 DWORD PTR tv307[ebp], ecx
  004ff	eb 21		 jmp	 SHORT $LN50@map_draw_g
$LN49@map_draw_g:
  00501	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00507	83 c2 47	 add	 edx, 71			; 00000047H
  0050a	52		 push	 edx
  0050b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00510	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv307[ebp], 0
$LN50@map_draw_g:
  00522	b9 01 00 00 00	 mov	 ecx, 1
  00527	85 c9		 test	 ecx, ecx
  00529	74 09		 je	 SHORT $LN51@map_draw_g
  0052b	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv315[ebp], 52 ; 00000034H
  00532	eb 21		 jmp	 SHORT $LN52@map_draw_g
$LN51@map_draw_g:
  00534	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0053a	83 c2 47	 add	 edx, 71			; 00000047H
  0053d	52		 push	 edx
  0053e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00543	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00548	50		 push	 eax
  00549	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0054e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv315[ebp], 0
$LN52@map_draw_g:
  00555	6a 34		 push	 52			; 00000034H
  00557	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0055a	51		 push	 ecx
  0055b	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv307[ebp], 1116
  00562	8b 45 a4	 mov	 eax, DWORD PTR tv315[ebp]
  00565	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0056c	ff d1		 call	 ecx
  0056e	89 45 f0	 mov	 DWORD PTR _group_type$[ebp], eax

; 2711 : 
; 2712 : 		if ((group == current_page_group) || (global_layer_controls & (1 << group_database [group_type].map_layer_type)))

  00571	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00574	3b 45 f4	 cmp	 eax, DWORD PTR _current_page_group$[ebp]
  00577	74 1d		 je	 SHORT $LN16@map_draw_g
  00579	6b 45 f0 64	 imul	 eax, DWORD PTR _group_type$[ebp], 100
  0057d	ba 01 00 00 00	 mov	 edx, 1
  00582	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+60]
  00588	d3 e2		 shl	 edx, cl
  0058a	23 15 00 00 00
	00		 and	 edx, DWORD PTR ?global_layer_controls@@3HA
  00590	0f 84 86 00 00
	00		 je	 $LN15@map_draw_g
$LN16@map_draw_g:

; 2713 : 		{
; 2714 : 			if (get_local_entity_int_value (group, INT_TYPE_GROUP_MODE) != GROUP_MODE_IDLE)

  00596	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0059a	74 0a		 je	 SHORT $LN53@map_draw_g
  0059c	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0059f	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a1	89 4d a8	 mov	 DWORD PTR tv333[ebp], ecx
  005a4	eb 1d		 jmp	 SHORT $LN54@map_draw_g
$LN53@map_draw_g:
  005a6	68 9a 0a 00 00	 push	 2714			; 00000a9aH
  005ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005b6	52		 push	 edx
  005b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005bc	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv333[ebp], 0
$LN54@map_draw_g:
  005c3	b8 01 00 00 00	 mov	 eax, 1
  005c8	85 c0		 test	 eax, eax
  005ca	74 09		 je	 SHORT $LN55@map_draw_g
  005cc	c7 45 a4 4d 00
	00 00		 mov	 DWORD PTR tv340[ebp], 77 ; 0000004dH
  005d3	eb 1d		 jmp	 SHORT $LN56@map_draw_g
$LN55@map_draw_g:
  005d5	68 9a 0a 00 00	 push	 2714			; 00000a9aH
  005da	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005e5	51		 push	 ecx
  005e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005eb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv340[ebp], 0
$LN56@map_draw_g:
  005f2	6a 4d		 push	 77			; 0000004dH
  005f4	8b 55 f8	 mov	 edx, DWORD PTR _group$[ebp]
  005f7	52		 push	 edx
  005f8	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv333[ebp], 1116
  005ff	8b 4d a4	 mov	 ecx, DWORD PTR tv340[ebp]
  00602	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00609	ff d2		 call	 edx
  0060b	85 c0		 test	 eax, eax
  0060d	74 0d		 je	 SHORT $LN15@map_draw_g

; 2715 : 			{
; 2716 : 				map_draw_group (obj, group);

  0060f	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00612	50		 push	 eax
  00613	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00616	51		 push	 ecx
  00617	e8 00 00 00 00	 call	 ?map_draw_group@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_group
$LN15@map_draw_g:

; 2717 : 			}
; 2718 : 		}
; 2719 : 
; 2720 : 		group = get_local_entity_child_succ (group, LIST_TYPE_AIR_REGISTRY);

  0061c	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00620	74 0a		 je	 SHORT $LN57@map_draw_g
  00622	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00625	8b 08		 mov	 ecx, DWORD PTR [eax]
  00627	89 4d a8	 mov	 DWORD PTR tv355[ebp], ecx
  0062a	eb 21		 jmp	 SHORT $LN58@map_draw_g
$LN57@map_draw_g:
  0062c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00632	83 c2 51	 add	 edx, 81			; 00000051H
  00635	52		 push	 edx
  00636	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0063b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00640	50		 push	 eax
  00641	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00646	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv355[ebp], 0
$LN58@map_draw_g:
  0064d	b9 01 00 00 00	 mov	 ecx, 1
  00652	85 c9		 test	 ecx, ecx
  00654	74 09		 je	 SHORT $LN59@map_draw_g
  00656	c7 45 a4 02 00
	00 00		 mov	 DWORD PTR tv363[ebp], 2
  0065d	eb 21		 jmp	 SHORT $LN60@map_draw_g
$LN59@map_draw_g:
  0065f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00665	83 c2 51	 add	 edx, 81			; 00000051H
  00668	52		 push	 edx
  00669	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0066e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00673	50		 push	 eax
  00674	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00679	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv363[ebp], 0
$LN60@map_draw_g:
  00680	6a 02		 push	 2
  00682	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00685	51		 push	 ecx
  00686	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv355[ebp], 180
  0068d	8b 45 a4	 mov	 eax, DWORD PTR tv363[ebp]
  00690	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00697	ff d1		 call	 ecx
  00699	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 2721 : 	}

  0069c	e9 46 fe ff ff	 jmp	 $LN6@map_draw_g
$LN1@map_draw_g:

; 2722 : }

  006a1	5f		 pop	 edi
  006a2	5e		 pop	 esi
  006a3	5b		 pop	 ebx
  006a4	8b e5		 mov	 esp, ebp
  006a6	5d		 pop	 ebp
  006a7	c2 08 00	 ret	 8
?map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_groups
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv291 = -100						; size = 4
tv267 = -100						; size = 4
tv249 = -100						; size = 4
tv228 = -100						; size = 4
tv208 = -100						; size = 4
tv184 = -100						; size = 4
tv166 = -100						; size = 4
tv145 = -100						; size = 4
tv283 = -96						; size = 4
tv260 = -96						; size = 4
tv241 = -96						; size = 4
tv220 = -96						; size = 4
tv200 = -96						; size = 4
tv177 = -96						; size = 4
tv158 = -96						; size = 4
tv137 = -96						; size = 4
_circle_side_count$ = -28				; size = 4
_temp$ = -24						; size = 4
_d$ = -20						; size = 4
_map_dimensions$ = -16					; size = 4
_group_type$ = -12					; size = 4
_group$ = -8						; size = 4
_force$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_threat_circles, COMDAT

; 2416 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2417 : 	entity
; 2418 : 		*force,
; 2419 : 		*group;
; 2420 : 
; 2421 : 	entity_sub_types
; 2422 : 		group_type;
; 2423 : 
; 2424 : 	map_dimension_type
; 2425 : 		*map_dimensions;
; 2426 : 
; 2427 : 	float
; 2428 : 		d,
; 2429 : 		temp;
; 2430 : 
; 2431 : 	int
; 2432 : 		circle_side_count;
; 2433 : 
; 2434 : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_THREAT_CIRCLES))

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0000e	25 00 02 00 00	 and	 eax, 512		; 00000200H
  00013	0f 84 22 05 00
	00		 je	 $LN5@map_draw_t

; 2435 : 	{
; 2436 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00019	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	50		 push	 eax
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00020	8b 11		 mov	 edx, DWORD PTR [ecx]
  00022	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00029	ff d0		 call	 eax
  0002b	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2437 : 
; 2438 : 		ASSERT (map_dimensions);

  0002e	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00032	75 18		 jne	 SHORT $LN7@map_draw_t
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00039	83 c0 16	 add	 eax, 22			; 00000016H
  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_draw_t:

; 2439 : 
; 2440 : 		force = get_local_force_entity (side);

  0004c	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00055	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 2441 : 
; 2442 : 		if (map_dimensions->size >= MIN_THREAT_CIRCLE_MAP_RADIUS)

  00058	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0005b	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00060	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@40f86a0000000000
  00068	72 09		 jb	 SHORT $LN8@map_draw_t

; 2443 : 		{
; 2444 : 			circle_side_count = MIN_THREAT_CIRCLE_SIDES;

  0006a	c7 45 e4 10 00
	00 00		 mov	 DWORD PTR _circle_side_count$[ebp], 16 ; 00000010H
  00071	eb 72		 jmp	 SHORT $LN11@map_draw_t
$LN8@map_draw_t:

; 2445 : 		}
; 2446 : 		else if (map_dimensions->size <= MAX_THREAT_CIRCLE_MAP_RADIUS)

  00073	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00076	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0007b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@40b3880000000000
  00083	66 0f 2f c8	 comisd	 xmm1, xmm0
  00087	72 09		 jb	 SHORT $LN10@map_draw_t

; 2447 : 		{
; 2448 : 			circle_side_count = MAX_THREAT_CIRCLE_SIDES;

  00089	c7 45 e4 28 00
	00 00		 mov	 DWORD PTR _circle_side_count$[ebp], 40 ; 00000028H

; 2449 : 		}
; 2450 : 		else

  00090	eb 53		 jmp	 SHORT $LN11@map_draw_t
$LN10@map_draw_t:

; 2451 : 		{
; 2452 : 			d = (map_dimensions->size - MAX_THREAT_CIRCLE_MAP_RADIUS) / (MIN_THREAT_CIRCLE_MAP_RADIUS - MAX_THREAT_CIRCLE_MAP_RADIUS);

  00092	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00095	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0009a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  000a2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40f7318000000000
  000aa	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ae	f3 0f 11 45 ec	 movss	 DWORD PTR _d$[ebp], xmm0

; 2453 : 
; 2454 : 			temp = MAX_THREAT_CIRCLE_SIDES - (d * (MAX_THREAT_CIRCLE_SIDES - MIN_THREAT_CIRCLE_SIDES));

  000b3	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _d$[ebp]
  000b8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@41c00000
  000c0	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42200000
  000c8	f3 0f 5c c8	 subss	 xmm1, xmm0
  000cc	f3 0f 11 4d e8	 movss	 DWORD PTR _temp$[ebp], xmm1

; 2455 : 
; 2456 : 			convert_float_to_int (temp, &circle_side_count);

  000d1	8d 45 e4	 lea	 eax, DWORD PTR _circle_side_count$[ebp]
  000d4	50		 push	 eax
  000d5	51		 push	 ecx
  000d6	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _temp$[ebp]
  000db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e0	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
$LN11@map_draw_t:

; 2457 : 		}
; 2458 : 
; 2459 : 		ASSERT ((circle_side_count >= MIN_THREAT_CIRCLE_SIDES) && (circle_side_count <= MAX_THREAT_CIRCLE_SIDES));

  000e5	83 7d e4 10	 cmp	 DWORD PTR _circle_side_count$[ebp], 16 ; 00000010H
  000e9	7c 06		 jl	 SHORT $LN13@map_draw_t
  000eb	83 7d e4 28	 cmp	 DWORD PTR _circle_side_count$[ebp], 40 ; 00000028H
  000ef	7e 18		 jle	 SHORT $LN12@map_draw_t
$LN13@map_draw_t:
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  000f6	83 c0 2b	 add	 eax, 43			; 0000002bH
  000f9	50		 push	 eax
  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0GB@KGBMBIF@?$CIcircle_side_count?5?$DO?$DN?5MIN_THREA@
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@map_draw_t:

; 2460 : 
; 2461 : 		//
; 2462 : 		// SEA GROUPS
; 2463 : 		//
; 2464 : 
; 2465 : 		group = get_local_entity_first_child (force, LIST_TYPE_SEA_REGISTRY);

  00109	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  0010d	74 0a		 je	 SHORT $LN17@map_draw_t
  0010f	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  00112	8b 08		 mov	 ecx, DWORD PTR [eax]
  00114	89 4d a0	 mov	 DWORD PTR tv137[ebp], ecx
  00117	eb 21		 jmp	 SHORT $LN18@map_draw_t
$LN17@map_draw_t:
  00119	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0011f	83 c2 31	 add	 edx, 49			; 00000031H
  00122	52		 push	 edx
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00133	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN18@map_draw_t:
  0013a	b9 01 00 00 00	 mov	 ecx, 1
  0013f	85 c9		 test	 ecx, ecx
  00141	74 09		 je	 SHORT $LN19@map_draw_t
  00143	c7 45 9c 20 00
	00 00		 mov	 DWORD PTR tv145[ebp], 32 ; 00000020H
  0014a	eb 21		 jmp	 SHORT $LN20@map_draw_t
$LN19@map_draw_t:
  0014c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00152	83 c2 31	 add	 edx, 49			; 00000031H
  00155	52		 push	 edx
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00166	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN20@map_draw_t:
  0016d	6a 20		 push	 32			; 00000020H
  0016f	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00172	51		 push	 ecx
  00173	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 180
  0017a	8b 45 9c	 mov	 eax, DWORD PTR tv145[ebp]
  0017d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00184	ff d1		 call	 ecx
  00186	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN2@map_draw_t:

; 2466 : 
; 2467 : 		while (group)

  00189	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  0018d	0f 84 8f 01 00
	00		 je	 $LN3@map_draw_t

; 2468 : 		{
; 2469 : 			group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  00193	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00197	74 0a		 je	 SHORT $LN21@map_draw_t
  00199	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0019c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019e	89 4d a0	 mov	 DWORD PTR tv158[ebp], ecx
  001a1	eb 21		 jmp	 SHORT $LN22@map_draw_t
$LN21@map_draw_t:
  001a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001a9	83 c2 35	 add	 edx, 53			; 00000035H
  001ac	52		 push	 edx
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001bd	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN22@map_draw_t:
  001c4	b9 01 00 00 00	 mov	 ecx, 1
  001c9	85 c9		 test	 ecx, ecx
  001cb	74 09		 je	 SHORT $LN23@map_draw_t
  001cd	c7 45 9c 34 00
	00 00		 mov	 DWORD PTR tv166[ebp], 52 ; 00000034H
  001d4	eb 21		 jmp	 SHORT $LN24@map_draw_t
$LN23@map_draw_t:
  001d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001dc	83 c2 35	 add	 edx, 53			; 00000035H
  001df	52		 push	 edx
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ea	50		 push	 eax
  001eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f0	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN24@map_draw_t:
  001f7	6a 34		 push	 52			; 00000034H
  001f9	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  001fc	51		 push	 ecx
  001fd	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv158[ebp], 1116
  00204	8b 45 9c	 mov	 eax, DWORD PTR tv166[ebp]
  00207	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0020e	ff d1		 call	 ecx
  00210	89 45 f4	 mov	 DWORD PTR _group_type$[ebp], eax

; 2470 : 
; 2471 : 			if (get_local_entity_int_value (group, INT_TYPE_AIR_ATTACK_STRENGTH) > 0)

  00213	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00217	74 0a		 je	 SHORT $LN25@map_draw_t
  00219	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  0021c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021e	89 4d a0	 mov	 DWORD PTR tv177[ebp], ecx
  00221	eb 1d		 jmp	 SHORT $LN26@map_draw_t
$LN25@map_draw_t:
  00223	68 a7 09 00 00	 push	 2471			; 000009a7H
  00228	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00233	52		 push	 edx
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN26@map_draw_t:
  00240	b8 01 00 00 00	 mov	 eax, 1
  00245	85 c0		 test	 eax, eax
  00247	74 09		 je	 SHORT $LN27@map_draw_t
  00249	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv184[ebp], 1
  00250	eb 1d		 jmp	 SHORT $LN28@map_draw_t
$LN27@map_draw_t:
  00252	68 a7 09 00 00	 push	 2471			; 000009a7H
  00257	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00262	51		 push	 ecx
  00263	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00268	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN28@map_draw_t:
  0026f	6a 01		 push	 1
  00271	8b 55 f8	 mov	 edx, DWORD PTR _group$[ebp]
  00274	52		 push	 edx
  00275	69 45 a0 5c 04
	00 00		 imul	 eax, DWORD PTR tv177[ebp], 1116
  0027c	8b 4d 9c	 mov	 ecx, DWORD PTR tv184[ebp]
  0027f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00286	ff d2		 call	 edx
  00288	85 c0		 test	 eax, eax
  0028a	7e 11		 jle	 SHORT $LN14@map_draw_t

; 2472 : 			{
; 2473 : 				map_draw_threat_circle (obj, group, circle_side_count);

  0028c	8b 45 e4	 mov	 eax, DWORD PTR _circle_side_count$[ebp]
  0028f	50		 push	 eax
  00290	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00293	51		 push	 ecx
  00294	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00297	52		 push	 edx
  00298	e8 00 00 00 00	 call	 ?map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z ; map_draw_threat_circle
$LN14@map_draw_t:

; 2474 : 			}
; 2475 : 
; 2476 : 			group = get_local_entity_child_succ (group, LIST_TYPE_SEA_REGISTRY);

  0029d	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  002a1	74 0a		 je	 SHORT $LN29@map_draw_t
  002a3	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  002a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002a8	89 4d a0	 mov	 DWORD PTR tv200[ebp], ecx
  002ab	eb 21		 jmp	 SHORT $LN30@map_draw_t
$LN29@map_draw_t:
  002ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002b3	83 c2 3c	 add	 edx, 60			; 0000003cH
  002b6	52		 push	 edx
  002b7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c1	50		 push	 eax
  002c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c7	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv200[ebp], 0
$LN30@map_draw_t:
  002ce	b9 01 00 00 00	 mov	 ecx, 1
  002d3	85 c9		 test	 ecx, ecx
  002d5	74 09		 je	 SHORT $LN31@map_draw_t
  002d7	c7 45 9c 20 00
	00 00		 mov	 DWORD PTR tv208[ebp], 32 ; 00000020H
  002de	eb 21		 jmp	 SHORT $LN32@map_draw_t
$LN31@map_draw_t:
  002e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  002e6	83 c2 3c	 add	 edx, 60			; 0000003cH
  002e9	52		 push	 edx
  002ea	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002fa	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv208[ebp], 0
$LN32@map_draw_t:
  00301	6a 20		 push	 32			; 00000020H
  00303	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00306	51		 push	 ecx
  00307	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv200[ebp], 180
  0030e	8b 45 9c	 mov	 eax, DWORD PTR tv208[ebp]
  00311	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00318	ff d1		 call	 ecx
  0031a	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 2477 : 		}

  0031d	e9 67 fe ff ff	 jmp	 $LN2@map_draw_t
$LN3@map_draw_t:

; 2478 : 
; 2479 : 		//
; 2480 : 		// LAND GROUPS
; 2481 : 		//
; 2482 : 
; 2483 : 		group = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  00322	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00326	74 0a		 je	 SHORT $LN33@map_draw_t
  00328	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  0032b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0032d	89 4d a0	 mov	 DWORD PTR tv220[ebp], ecx
  00330	eb 21		 jmp	 SHORT $LN34@map_draw_t
$LN33@map_draw_t:
  00332	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00338	83 c2 43	 add	 edx, 67			; 00000043H
  0033b	52		 push	 edx
  0033c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00341	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034c	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN34@map_draw_t:
  00353	b9 01 00 00 00	 mov	 ecx, 1
  00358	85 c9		 test	 ecx, ecx
  0035a	74 09		 je	 SHORT $LN35@map_draw_t
  0035c	c7 45 9c 0f 00
	00 00		 mov	 DWORD PTR tv228[ebp], 15 ; 0000000fH
  00363	eb 21		 jmp	 SHORT $LN36@map_draw_t
$LN35@map_draw_t:
  00365	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0036b	83 c2 43	 add	 edx, 67			; 00000043H
  0036e	52		 push	 edx
  0036f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00374	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00379	50		 push	 eax
  0037a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037f	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv228[ebp], 0
$LN36@map_draw_t:
  00386	6a 0f		 push	 15			; 0000000fH
  00388	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  0038b	51		 push	 ecx
  0038c	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv220[ebp], 180
  00393	8b 45 9c	 mov	 eax, DWORD PTR tv228[ebp]
  00396	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0039d	ff d1		 call	 ecx
  0039f	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax
$LN4@map_draw_t:

; 2484 : 
; 2485 : 		while (group)

  003a2	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  003a6	0f 84 8f 01 00
	00		 je	 $LN5@map_draw_t

; 2486 : 		{
; 2487 : 			group_type = get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE);

  003ac	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  003b0	74 0a		 je	 SHORT $LN37@map_draw_t
  003b2	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  003b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b7	89 4d a0	 mov	 DWORD PTR tv241[ebp], ecx
  003ba	eb 21		 jmp	 SHORT $LN38@map_draw_t
$LN37@map_draw_t:
  003bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  003c2	83 c2 47	 add	 edx, 71			; 00000047H
  003c5	52		 push	 edx
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d0	50		 push	 eax
  003d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d6	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv241[ebp], 0
$LN38@map_draw_t:
  003dd	b9 01 00 00 00	 mov	 ecx, 1
  003e2	85 c9		 test	 ecx, ecx
  003e4	74 09		 je	 SHORT $LN39@map_draw_t
  003e6	c7 45 9c 34 00
	00 00		 mov	 DWORD PTR tv249[ebp], 52 ; 00000034H
  003ed	eb 21		 jmp	 SHORT $LN40@map_draw_t
$LN39@map_draw_t:
  003ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  003f5	83 c2 47	 add	 edx, 71			; 00000047H
  003f8	52		 push	 edx
  003f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00403	50		 push	 eax
  00404	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00409	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv249[ebp], 0
$LN40@map_draw_t:
  00410	6a 34		 push	 52			; 00000034H
  00412	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  00415	51		 push	 ecx
  00416	69 55 a0 5c 04
	00 00		 imul	 edx, DWORD PTR tv241[ebp], 1116
  0041d	8b 45 9c	 mov	 eax, DWORD PTR tv249[ebp]
  00420	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00427	ff d1		 call	 ecx
  00429	89 45 f4	 mov	 DWORD PTR _group_type$[ebp], eax

; 2488 : 
; 2489 : 			if (get_local_entity_int_value (group, INT_TYPE_AIR_ATTACK_STRENGTH) > 0)

  0042c	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  00430	74 0a		 je	 SHORT $LN41@map_draw_t
  00432	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  00435	8b 08		 mov	 ecx, DWORD PTR [eax]
  00437	89 4d a0	 mov	 DWORD PTR tv260[ebp], ecx
  0043a	eb 1d		 jmp	 SHORT $LN42@map_draw_t
$LN41@map_draw_t:
  0043c	68 b9 09 00 00	 push	 2489			; 000009b9H
  00441	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00446	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0044c	52		 push	 edx
  0044d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00452	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv260[ebp], 0
$LN42@map_draw_t:
  00459	b8 01 00 00 00	 mov	 eax, 1
  0045e	85 c0		 test	 eax, eax
  00460	74 09		 je	 SHORT $LN43@map_draw_t
  00462	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR tv267[ebp], 1
  00469	eb 1d		 jmp	 SHORT $LN44@map_draw_t
$LN43@map_draw_t:
  0046b	68 b9 09 00 00	 push	 2489			; 000009b9H
  00470	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00475	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0047b	51		 push	 ecx
  0047c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00481	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv267[ebp], 0
$LN44@map_draw_t:
  00488	6a 01		 push	 1
  0048a	8b 55 f8	 mov	 edx, DWORD PTR _group$[ebp]
  0048d	52		 push	 edx
  0048e	69 45 a0 5c 04
	00 00		 imul	 eax, DWORD PTR tv260[ebp], 1116
  00495	8b 4d 9c	 mov	 ecx, DWORD PTR tv267[ebp]
  00498	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0049f	ff d2		 call	 edx
  004a1	85 c0		 test	 eax, eax
  004a3	7e 11		 jle	 SHORT $LN15@map_draw_t

; 2490 : 			{
; 2491 : 				map_draw_threat_circle (obj, group, circle_side_count);

  004a5	8b 45 e4	 mov	 eax, DWORD PTR _circle_side_count$[ebp]
  004a8	50		 push	 eax
  004a9	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  004ac	51		 push	 ecx
  004ad	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004b0	52		 push	 edx
  004b1	e8 00 00 00 00	 call	 ?map_draw_threat_circle@@YGXPAUUI_OBJECT@@PAUENTITY@@H@Z ; map_draw_threat_circle
$LN15@map_draw_t:

; 2492 : 			}
; 2493 : 
; 2494 : 			group = get_local_entity_child_succ (group, LIST_TYPE_GROUND_REGISTRY);

  004b6	83 7d f8 00	 cmp	 DWORD PTR _group$[ebp], 0
  004ba	74 0a		 je	 SHORT $LN45@map_draw_t
  004bc	8b 45 f8	 mov	 eax, DWORD PTR _group$[ebp]
  004bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c1	89 4d a0	 mov	 DWORD PTR tv283[ebp], ecx
  004c4	eb 21		 jmp	 SHORT $LN46@map_draw_t
$LN45@map_draw_t:
  004c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  004cc	83 c2 4e	 add	 edx, 78			; 0000004eH
  004cf	52		 push	 edx
  004d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004da	50		 push	 eax
  004db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e0	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv283[ebp], 0
$LN46@map_draw_t:
  004e7	b9 01 00 00 00	 mov	 ecx, 1
  004ec	85 c9		 test	 ecx, ecx
  004ee	74 09		 je	 SHORT $LN47@map_draw_t
  004f0	c7 45 9c 0f 00
	00 00		 mov	 DWORD PTR tv291[ebp], 15 ; 0000000fH
  004f7	eb 21		 jmp	 SHORT $LN48@map_draw_t
$LN47@map_draw_t:
  004f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  004ff	83 c2 4e	 add	 edx, 78			; 0000004eH
  00502	52		 push	 edx
  00503	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00508	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0050d	50		 push	 eax
  0050e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00513	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv291[ebp], 0
$LN48@map_draw_t:
  0051a	6a 0f		 push	 15			; 0000000fH
  0051c	8b 4d f8	 mov	 ecx, DWORD PTR _group$[ebp]
  0051f	51		 push	 ecx
  00520	69 55 a0 b4 00
	00 00		 imul	 edx, DWORD PTR tv283[ebp], 180
  00527	8b 45 9c	 mov	 eax, DWORD PTR tv291[ebp]
  0052a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00531	ff d1		 call	 ecx
  00533	89 45 f8	 mov	 DWORD PTR _group$[ebp], eax

; 2495 : 		}

  00536	e9 67 fe ff ff	 jmp	 $LN4@map_draw_t
$LN5@map_draw_t:

; 2496 : 	}
; 2497 : }

  0053b	5f		 pop	 edi
  0053c	5e		 pop	 esi
  0053d	5b		 pop	 ebx
  0053e	8b e5		 mov	 esp, ebp
  00540	5d		 pop	 ebp
  00541	c2 08 00	 ret	 8
?map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_threat_circles
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_layer_control_radio_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_index$ = -8						; size = 4
_loop$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?map_layer_control_radio_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; map_layer_control_radio_function, COMDAT

; 2237 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2238 : 	int
; 2239 : 		loop,
; 2240 : 		index;
; 2241 : 
; 2242 : 	index = get_ui_object_item_number (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _index$[ebp], eax

; 2243 : 
; 2244 : 	for (loop = 0; loop < NUM_MAP_LAYER_CONTROLS; loop ++)

  0001e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00025	eb 09		 jmp	 SHORT $LN4@map_layer_
$LN2@map_layer_:
  00027	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0002a	83 c0 01	 add	 eax, 1
  0002d	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@map_layer_:
  00030	83 7d fc 0b	 cmp	 DWORD PTR _loop$[ebp], 11 ; 0000000bH
  00034	7d 57		 jge	 SHORT $LN3@map_layer_

; 2245 : 	{
; 2246 : 		if (loop == index)

  00036	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00039	3b 45 f8	 cmp	 eax, DWORD PTR _index$[ebp]
  0003c	75 20		 jne	 SHORT $LN5@map_layer_

; 2247 : 		{
; 2248 : 			global_layer_controls ^= (1 << loop);

  0003e	b8 01 00 00 00	 mov	 eax, 1
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00046	d3 e0		 shl	 eax, cl
  00048	33 05 00 00 00
	00		 xor	 eax, DWORD PTR ?global_layer_controls@@3HA
  0004e	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax

; 2249 : 
; 2250 : 			update_layer_control_objects (loop);

  00053	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?update_layer_control_objects@@YGXH@Z ; update_layer_control_objects

; 2251 : 		}
; 2252 : 		else

  0005c	eb 2d		 jmp	 SHORT $LN6@map_layer_
$LN5@map_layer_:

; 2253 : 		{
; 2254 : 			if (layer_control_button_data [loop].object_type == UI_TYPE_RADIO)

  0005e	6b 45 fc 0c	 imul	 eax, DWORD PTR _loop$[ebp], 12
  00062	83 b8 00 00 00
	00 03		 cmp	 DWORD PTR ?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B[eax], 3
  00069	75 20		 jne	 SHORT $LN6@map_layer_

; 2255 : 			{
; 2256 : 				global_layer_controls &= ~(1 << loop);

  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00073	d3 e0		 shl	 eax, cl
  00075	f7 d0		 not	 eax
  00077	23 05 00 00 00
	00		 and	 eax, DWORD PTR ?global_layer_controls@@3HA
  0007d	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax

; 2257 : 
; 2258 : 				update_layer_control_objects (loop);

  00082	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00085	50		 push	 eax
  00086	e8 00 00 00 00	 call	 ?update_layer_control_objects@@YGXH@Z ; update_layer_control_objects
$LN6@map_layer_:

; 2259 : 			}
; 2260 : 		}
; 2261 : 	}

  0008b	eb 9a		 jmp	 SHORT $LN2@map_layer_
$LN3@map_layer_:

; 2262 : 
; 2263 : 	set_global_map_layer_options (global_layer_controls);

  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  00092	a3 7c 03 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+892, eax

; 2264 : 
; 2265 : 	create_2d_terrain_texture_overlays ();

  00097	e8 00 00 00 00	 call	 ?create_2d_terrain_texture_overlays@@YGXXZ ; create_2d_terrain_texture_overlays

; 2266 : }

  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx
  0009f	8b e5		 mov	 esp, ebp
  000a1	5d		 pop	 ebp
  000a2	c2 08 00	 ret	 8
?map_layer_control_radio_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; map_layer_control_radio_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_index$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; map_layer_control_toggle_function, COMDAT

; 2217 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2218 : 	int
; 2219 : 		index;
; 2220 : 
; 2221 : 	index = get_ui_object_item_number (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _index$[ebp], eax

; 2222 : 
; 2223 : 	global_layer_controls ^= (1 << index);

  0001e	b8 01 00 00 00	 mov	 eax, 1
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _index$[ebp]
  00026	d3 e0		 shl	 eax, cl
  00028	33 05 00 00 00
	00		 xor	 eax, DWORD PTR ?global_layer_controls@@3HA
  0002e	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax

; 2224 : 
; 2225 : 	update_layer_control_objects (index);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _index$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?update_layer_control_objects@@YGXH@Z ; update_layer_control_objects

; 2226 : 
; 2227 : 	set_global_map_layer_options (global_layer_controls);

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  00041	a3 7c 03 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+892, eax

; 2228 : 
; 2229 : 	create_2d_terrain_texture_overlays ();

  00046	e8 00 00 00 00	 call	 ?create_2d_terrain_texture_overlays@@YGXXZ ; create_2d_terrain_texture_overlays

; 2230 : }

  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 08 00	 ret	 8
?map_layer_control_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; map_layer_control_toggle_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_move_waypoint_position@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv212 = -92						; size = 4
tv189 = -92						; size = 4
tv143 = -92						; size = 4
tv204 = -88						; size = 4
tv181 = -88						; size = 4
tv135 = -88						; size = 4
tv89 = -88						; size = 4
$T1 = -84						; size = 4
_map_dimensions$ = -16					; size = 4
_pos$ = -12						; size = 12
_ev$ = 8						; size = 4
?map_move_waypoint_position@@YGXPAUEVENT@@@Z PROC	; map_move_waypoint_position, COMDAT

; 2064 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2065 : 
; 2066 : 	vec3d
; 2067 : 		pos;
; 2068 : 
; 2069 : 	map_dimension_type
; 2070 : 		*map_dimensions;
; 2071 : 
; 2072 : 	ASSERT (active_map_object);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A, 0
  00010	75 18		 jne	 SHORT $LN2@map_move_w
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PPDNBOJN@active_map_object@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_move_w:

; 2073 : 
; 2074 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (active_map_object);

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  0002f	50		 push	 eax
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0003f	ff d0		 call	 eax
  00041	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 2075 : 
; 2076 : 	ASSERT (map_dimensions);

  00044	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00048	75 18		 jne	 SHORT $LN3@map_move_w
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  0004f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0005d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_move_w:

; 2077 : 
; 2078 : 	if (map_dimensions->selected_entity)

  00062	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00065	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00069	0f 84 87 02 00
	00		 je	 $LN4@map_move_w

; 2079 : 	{
; 2080 : 		ASSERT (get_local_entity_type (map_dimensions->selected_entity) == ENTITY_TYPE_WAYPOINT);

  0006f	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00072	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00076	74 0d		 je	 SHORT $LN7@map_move_w
  00078	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0007b	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0007e	8b 02		 mov	 eax, DWORD PTR [edx]
  00080	89 45 a8	 mov	 DWORD PTR tv89[ebp], eax
  00083	eb 22		 jmp	 SHORT $LN8@map_move_w
$LN7@map_move_w:
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  0008b	83 c1 10	 add	 ecx, 16			; 00000010H
  0008e	51		 push	 ecx
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0009a	52		 push	 edx
  0009b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a0	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN8@map_move_w:
  000a7	83 7d a8 24	 cmp	 DWORD PTR tv89[ebp], 36	; 00000024H
  000ab	74 18		 je	 SHORT $LN5@map_move_w
  000ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  000b2	83 c0 10	 add	 eax, 16			; 00000010H
  000b5	50		 push	 eax
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@JBPHLBFG@get_local_entity_type?5?$CImap_dime@
  000c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_move_w:

; 2081 : 
; 2082 : 		get_local_entity_vec3d (map_dimensions->selected_entity, VEC3D_TYPE_POSITION, &pos);

  000c5	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000c8	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  000cc	74 0d		 je	 SHORT $LN9@map_move_w
  000ce	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  000d1	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  000d4	8b 02		 mov	 eax, DWORD PTR [edx]
  000d6	89 45 a8	 mov	 DWORD PTR tv135[ebp], eax
  000d9	eb 22		 jmp	 SHORT $LN10@map_move_w
$LN9@map_move_w:
  000db	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  000e1	83 c1 12	 add	 ecx, 18			; 00000012H
  000e4	51		 push	 ecx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f0	52		 push	 edx
  000f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f6	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN10@map_move_w:
  000fd	b8 01 00 00 00	 mov	 eax, 1
  00102	85 c0		 test	 eax, eax
  00104	74 09		 je	 SHORT $LN11@map_move_w
  00106	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv143[ebp], 8
  0010d	eb 22		 jmp	 SHORT $LN12@map_move_w
$LN11@map_move_w:
  0010f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  00115	83 c1 12	 add	 ecx, 18			; 00000012H
  00118	51		 push	 ecx
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00124	52		 push	 edx
  00125	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012a	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN12@map_move_w:
  00131	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  00134	50		 push	 eax
  00135	6a 08		 push	 8
  00137	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0013a	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0013d	52		 push	 edx
  0013e	6b 45 a8 60	 imul	 eax, DWORD PTR tv135[ebp], 96
  00142	8b 4d a4	 mov	 ecx, DWORD PTR tv143[ebp]
  00145	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0014c	ff d2		 call	 edx

; 2083 : 
; 2084 : 		map_get_screen_coords_from_world (active_map_object, &pos, &pos);

  0014e	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  00151	50		 push	 eax
  00152	8d 4d f4	 lea	 ecx, DWORD PTR _pos$[ebp]
  00155	51		 push	 ecx
  00156	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  0015c	52		 push	 edx
  0015d	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 2085 : 
; 2086 : 		#if DEBUG_MODULE
; 2087 : 
; 2088 : 		debug_log ("CA_MAP: moving waypoint %s (%d) from %f, %f by %f, %f",
; 2089 : 						get_local_entity_string (map_dimensions->selected_entity, STRING_TYPE_FULL_NAME),
; 2090 : 						get_local_entity_index (map_dimensions->selected_entity),
; 2091 : 						pos.x, pos.z,
; 2092 : 						delta_pos.x,
; 2093 : 						delta_pos.z);
; 2094 : 
; 2095 : 		#endif
; 2096 : 
; 2097 : 		pos.x += ev->dx;

  00162	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00165	0f bf 48 0c	 movsx	 ecx, WORD PTR [eax+12]
  00169	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0016d	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _pos$[ebp]
  00172	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 2098 : 		pos.z += ev->dy;

  00177	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  0017a	0f bf 48 0e	 movsx	 ecx, WORD PTR [eax+14]
  0017e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00182	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _pos$[ebp+8]
  00187	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 2099 : 
; 2100 : 		map_get_world_coords_from_screen (active_map_object, &pos, &pos);

  0018c	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  0018f	50		 push	 eax
  00190	8d 4d f4	 lea	 ecx, DWORD PTR _pos$[ebp]
  00193	51		 push	 ecx
  00194	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  0019a	52		 push	 edx
  0019b	e8 00 00 00 00	 call	 ?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_world_coords_from_screen

; 2101 : 
; 2102 : 		bound_position_to_map_area (&pos);

  001a0	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_map_area

; 2103 : 
; 2104 : 		pos.y = max (pos.y, get_3d_terrain_elevation (pos.x, pos.z));

  001a9	6a 00		 push	 0
  001ab	51		 push	 ecx
  001ac	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  001b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b6	51		 push	 ecx
  001b7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  001c6	d9 5d ac	 fstp	 DWORD PTR $T1[ebp]
  001c9	8d 45 ac	 lea	 eax, DWORD PTR $T1[ebp]
  001cc	50		 push	 eax
  001cd	8d 4d f8	 lea	 ecx, DWORD PTR _pos$[ebp+4]
  001d0	51		 push	 ecx
  001d1	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  001d6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001da	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 2105 : 
; 2106 : 		set_local_entity_vec3d (map_dimensions->selected_entity, VEC3D_TYPE_POSITION, &pos);

  001df	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001e2	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  001e6	74 0d		 je	 SHORT $LN13@map_move_w
  001e8	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  001eb	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  001ee	8b 02		 mov	 eax, DWORD PTR [edx]
  001f0	89 45 a8	 mov	 DWORD PTR tv181[ebp], eax
  001f3	eb 22		 jmp	 SHORT $LN14@map_move_w
$LN13@map_move_w:
  001f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  001fb	83 c1 2a	 add	 ecx, 42			; 0000002aH
  001fe	51		 push	 ecx
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00204	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0020a	52		 push	 edx
  0020b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00210	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN14@map_move_w:
  00217	b8 01 00 00 00	 mov	 eax, 1
  0021c	85 c0		 test	 eax, eax
  0021e	74 09		 je	 SHORT $LN15@map_move_w
  00220	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv189[ebp], 8
  00227	eb 22		 jmp	 SHORT $LN16@map_move_w
$LN15@map_move_w:
  00229	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  0022f	83 c1 2a	 add	 ecx, 42			; 0000002aH
  00232	51		 push	 ecx
  00233	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00238	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0023e	52		 push	 edx
  0023f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00244	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN16@map_move_w:
  0024b	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  0024e	50		 push	 eax
  0024f	6a 08		 push	 8
  00251	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00254	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00257	52		 push	 edx
  00258	6b 45 a8 60	 imul	 eax, DWORD PTR tv181[ebp], 96
  0025c	8b 4d a4	 mov	 ecx, DWORD PTR tv189[ebp]
  0025f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00266	ff d2		 call	 edx

; 2107 : 
; 2108 : 		player_map_updated(get_local_entity_parent(map_dimensions->selected_entity, LIST_TYPE_WAYPOINT));

  00268	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0026b	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  0026f	74 0d		 je	 SHORT $LN17@map_move_w
  00271	8b 4d f0	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00274	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00277	8b 02		 mov	 eax, DWORD PTR [edx]
  00279	89 45 a8	 mov	 DWORD PTR tv204[ebp], eax
  0027c	eb 22		 jmp	 SHORT $LN18@map_move_w
$LN17@map_move_w:
  0027e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  00284	83 c1 2c	 add	 ecx, 44			; 0000002cH
  00287	51		 push	 ecx
  00288	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00293	52		 push	 edx
  00294	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00299	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN18@map_move_w:
  002a0	b8 01 00 00 00	 mov	 eax, 1
  002a5	85 c0		 test	 eax, eax
  002a7	74 09		 je	 SHORT $LN19@map_move_w
  002a9	c7 45 a4 2c 00
	00 00		 mov	 DWORD PTR tv212[ebp], 44 ; 0000002cH
  002b0	eb 22		 jmp	 SHORT $LN20@map_move_w
$LN19@map_move_w:
  002b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_move_waypoint_position@@YGXPAUEVENT@@@Z@4JA
  002b8	83 c1 2c	 add	 ecx, 44			; 0000002cH
  002bb	51		 push	 ecx
  002bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002c7	52		 push	 edx
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cd	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN20@map_move_w:
  002d4	6a 2c		 push	 44			; 0000002cH
  002d6	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002d9	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  002dc	51		 push	 ecx
  002dd	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv204[ebp], 180
  002e4	8b 45 a4	 mov	 eax, DWORD PTR tv212[ebp]
  002e7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002ee	ff d1		 call	 ecx
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 ?player_map_updated@@YGXPAUENTITY@@@Z ; player_map_updated
$LN4@map_move_w:

; 2109 : 	}
; 2110 : }

  002f6	5f		 pop	 edi
  002f7	5e		 pop	 esi
  002f8	5b		 pop	 ebx
  002f9	8b e5		 mov	 esp, ebp
  002fb	5d		 pop	 ebp
  002fc	c2 04 00	 ret	 4
?map_move_waypoint_position@@YGXPAUEVENT@@@Z ENDP	; map_move_waypoint_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv547 = -120						; size = 4
tv391 = -116						; size = 4
tv364 = -116						; size = 4
tv341 = -116						; size = 4
tv320 = -116						; size = 4
tv300 = -116						; size = 4
tv279 = -116						; size = 4
tv253 = -116						; size = 4
tv228 = -116						; size = 4
tv206 = -116						; size = 4
tv179 = -116						; size = 4
tv154 = -116						; size = 4
tv130 = -116						; size = 4
tv383 = -112						; size = 4
tv356 = -112						; size = 4
tv333 = -112						; size = 4
tv312 = -112						; size = 4
tv292 = -112						; size = 4
tv271 = -112						; size = 4
tv245 = -112						; size = 4
tv220 = -112						; size = 4
tv198 = -112						; size = 4
tv171 = -112						; size = 4
tv146 = -112						; size = 4
tv90 = -112						; size = 4
_last_waypoint_position$1 = -44				; size = 4
_flight_time$2 = -40					; size = 4
_range$3 = -36						; size = 4
_last_wp$4 = -32					; size = 4
_member$5 = -28						; size = 4
_guide$6 = -24						; size = 4
_group$7 = -20						; size = 4
_task$8 = -16						; size = 4
_member$9 = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_pos$ = -4						; size = 4
_ev$ = 8						; size = 4
?map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z PROC	; map_pop_move_waypoint_events, COMDAT

; 1962 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1963 : 
; 1964 : 	vec3d
; 1965 : 		*pos;
; 1966 : 
; 1967 : 	map_dimension_type
; 1968 : 		*map_dimensions;
; 1969 : 
; 1970 : 	ASSERT (active_map_object);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A, 0
  00010	75 18		 jne	 SHORT $LN2@map_pop_mo
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00017	83 c0 08	 add	 eax, 8
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PPDNBOJN@active_map_object@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_pop_mo:

; 1971 : 
; 1972 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (active_map_object);

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  0002f	50		 push	 eax
  00030	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A
  00036	8b 11		 mov	 edx, DWORD PTR [ecx]
  00038	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0003f	ff d0		 call	 eax
  00041	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1973 : 
; 1974 : 	ASSERT (map_dimensions);

  00044	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00048	75 18		 jne	 SHORT $LN3@map_pop_mo
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  0004f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00052	50		 push	 eax
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0005d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_pop_mo:

; 1975 : 
; 1976 : 	set_mouse_graphic_on ();

  00062	e8 00 00 00 00	 call	 ?set_mouse_graphic_on@@YGXXZ ; set_mouse_graphic_on

; 1977 : 
; 1978 : 	pop_event (map_move_waypoint_events);

  00067	68 00 00 00 00	 push	 OFFSET ?map_move_waypoint_events@@YGXXZ ; map_move_waypoint_events
  0006c	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 1979 : 
; 1980 : 	if (map_dimensions->selected_entity)

  00071	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00074	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00078	0f 84 ff 06 00
	00		 je	 $LN4@map_pop_mo

; 1981 : 	{
; 1982 : 		pos = get_local_entity_vec3d_ptr (map_dimensions->selected_entity, VEC3D_TYPE_POSITION);

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00081	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00085	74 0d		 je	 SHORT $LN12@map_pop_mo
  00087	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0008a	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0008d	8b 02		 mov	 eax, DWORD PTR [edx]
  0008f	89 45 90	 mov	 DWORD PTR tv90[ebp], eax
  00092	eb 22		 jmp	 SHORT $LN13@map_pop_mo
$LN12@map_pop_mo:
  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  0009a	83 c1 14	 add	 ecx, 20			; 00000014H
  0009d	51		 push	 ecx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a9	52		 push	 edx
  000aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000af	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@map_pop_mo:
  000b6	b8 01 00 00 00	 mov	 eax, 1
  000bb	85 c0		 test	 eax, eax
  000bd	74 09		 je	 SHORT $LN14@map_pop_mo
  000bf	c7 45 8c 08 00
	00 00		 mov	 DWORD PTR tv130[ebp], 8
  000c6	eb 22		 jmp	 SHORT $LN15@map_pop_mo
$LN14@map_pop_mo:
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  000ce	83 c1 14	 add	 ecx, 20			; 00000014H
  000d1	51		 push	 ecx
  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000dd	52		 push	 edx
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN15@map_pop_mo:
  000ea	6a 08		 push	 8
  000ec	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000ef	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000f2	51		 push	 ecx
  000f3	6b 55 90 60	 imul	 edx, DWORD PTR tv90[ebp], 96
  000f7	8b 45 8c	 mov	 eax, DWORD PTR tv130[ebp]
  000fa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00101	ff d1		 call	 ecx
  00103	89 45 fc	 mov	 DWORD PTR _pos$[ebp], eax

; 1983 : 
; 1984 : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  00106	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0010d	0f 85 21 01 00
	00		 jne	 $LN5@map_pop_mo

; 1985 : 		{
; 1986 : 
; 1987 : 			entity
; 1988 : 				*member;
; 1989 : 
; 1990 : 			set_client_server_entity_vec3d (map_dimensions->selected_entity, VEC3D_TYPE_POSITION, pos);

  00113	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00116	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  0011a	74 0d		 je	 SHORT $LN16@map_pop_mo
  0011c	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0011f	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00122	8b 02		 mov	 eax, DWORD PTR [edx]
  00124	89 45 90	 mov	 DWORD PTR tv146[ebp], eax
  00127	eb 22		 jmp	 SHORT $LN17@map_pop_mo
$LN16@map_pop_mo:
  00129	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  0012f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00132	51		 push	 ecx
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00138	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0013e	52		 push	 edx
  0013f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00144	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN17@map_pop_mo:
  0014b	b8 01 00 00 00	 mov	 eax, 1
  00150	85 c0		 test	 eax, eax
  00152	74 09		 je	 SHORT $LN18@map_pop_mo
  00154	c7 45 8c 08 00
	00 00		 mov	 DWORD PTR tv154[ebp], 8
  0015b	eb 22		 jmp	 SHORT $LN19@map_pop_mo
$LN18@map_pop_mo:
  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00163	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00166	51		 push	 ecx
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00178	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN19@map_pop_mo:
  0017f	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  00182	50		 push	 eax
  00183	6a 08		 push	 8
  00185	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00188	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0018b	52		 push	 edx
  0018c	69 45 90 c0 00
	00 00		 imul	 eax, DWORD PTR tv146[ebp], 192
  00193	8b 4d 8c	 mov	 ecx, DWORD PTR tv154[ebp]
  00196	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*8]
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  001a2	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  001a5	ff d1		 call	 ecx

; 1991 : 
; 1992 : 			member = get_local_entity_first_child (map_dimensions->selected_entity, LIST_TYPE_CURRENT_WAYPOINT);

  001a7	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001aa	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  001ae	74 0d		 je	 SHORT $LN20@map_pop_mo
  001b0	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  001b3	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  001b6	8b 02		 mov	 eax, DWORD PTR [edx]
  001b8	89 45 90	 mov	 DWORD PTR tv171[ebp], eax
  001bb	eb 22		 jmp	 SHORT $LN21@map_pop_mo
$LN20@map_pop_mo:
  001bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  001c3	83 c1 1e	 add	 ecx, 30			; 0000001eH
  001c6	51		 push	 ecx
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d2	52		 push	 edx
  001d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d8	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN21@map_pop_mo:
  001df	b8 01 00 00 00	 mov	 eax, 1
  001e4	85 c0		 test	 eax, eax
  001e6	74 09		 je	 SHORT $LN22@map_pop_mo
  001e8	c7 45 8c 09 00
	00 00		 mov	 DWORD PTR tv179[ebp], 9
  001ef	eb 22		 jmp	 SHORT $LN23@map_pop_mo
$LN22@map_pop_mo:
  001f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  001f7	83 c1 1e	 add	 ecx, 30			; 0000001eH
  001fa	51		 push	 ecx
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00200	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00206	52		 push	 edx
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN23@map_pop_mo:
  00213	6a 09		 push	 9
  00215	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00218	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0021b	51		 push	 ecx
  0021c	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv171[ebp], 180
  00223	8b 45 8c	 mov	 eax, DWORD PTR tv179[ebp]
  00226	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0022d	ff d1		 call	 ecx
  0022f	89 45 f4	 mov	 DWORD PTR _member$9[ebp], eax

; 1993 : 		}
; 1994 : 		else

  00232	eb 15		 jmp	 SHORT $LN6@map_pop_mo
$LN5@map_pop_mo:

; 1995 : 		{
; 1996 : 
; 1997 : 			transmit_entity_comms_message (ENTITY_COMMS_MOVE_PLANNER_WAYPOINT, map_dimensions->selected_entity, pos);

  00234	8b 45 fc	 mov	 eax, DWORD PTR _pos$[ebp]
  00237	50		 push	 eax
  00238	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0023b	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0023e	52		 push	 edx
  0023f	6a 1c		 push	 28			; 0000001cH
  00241	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00246	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@map_pop_mo:

; 1998 : 		}
; 1999 : 
; 2000 : 		// update flight time
; 2001 : 
; 2002 : 		{
; 2003 : 
; 2004 : 			entity
; 2005 : 				*task,
; 2006 : 				*group,
; 2007 : 				*guide,
; 2008 : 				*member,
; 2009 : 				*last_wp;
; 2010 : 
; 2011 : 			float
; 2012 : 				range,
; 2013 : 				flight_time;
; 2014 : 
; 2015 : 			vec3d
; 2016 : 				*last_waypoint_position;
; 2017 : 
; 2018 : 			last_wp = get_local_entity_child_pred (map_dimensions->selected_entity, LIST_TYPE_WAYPOINT);

  00249	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0024c	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00250	74 0d		 je	 SHORT $LN24@map_pop_mo
  00252	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00255	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00258	8b 02		 mov	 eax, DWORD PTR [edx]
  0025a	89 45 90	 mov	 DWORD PTR tv198[ebp], eax
  0025d	eb 22		 jmp	 SHORT $LN25@map_pop_mo
$LN24@map_pop_mo:
  0025f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00265	83 c1 38	 add	 ecx, 56			; 00000038H
  00268	51		 push	 ecx
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00274	52		 push	 edx
  00275	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027a	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv198[ebp], 0
$LN25@map_pop_mo:
  00281	b8 01 00 00 00	 mov	 eax, 1
  00286	85 c0		 test	 eax, eax
  00288	74 09		 je	 SHORT $LN26@map_pop_mo
  0028a	c7 45 8c 2c 00
	00 00		 mov	 DWORD PTR tv206[ebp], 44 ; 0000002cH
  00291	eb 22		 jmp	 SHORT $LN27@map_pop_mo
$LN26@map_pop_mo:
  00293	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00299	83 c1 38	 add	 ecx, 56			; 00000038H
  0029c	51		 push	 ecx
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002a8	52		 push	 edx
  002a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ae	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv206[ebp], 0
$LN27@map_pop_mo:
  002b5	6a 2c		 push	 44			; 0000002cH
  002b7	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002ba	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  002bd	51		 push	 ecx
  002be	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv198[ebp], 180
  002c5	8b 45 8c	 mov	 eax, DWORD PTR tv206[ebp]
  002c8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002cf	ff d1		 call	 ecx
  002d1	89 45 e0	 mov	 DWORD PTR _last_wp$4[ebp], eax

; 2019 : 
; 2020 : 			if (last_wp)

  002d4	83 7d e0 00	 cmp	 DWORD PTR _last_wp$4[ebp], 0
  002d8	0f 84 95 04 00
	00		 je	 $LN10@map_pop_mo

; 2021 : 			{
; 2022 : 
; 2023 : 				last_waypoint_position = get_local_entity_vec3d_ptr (last_wp, VEC3D_TYPE_POSITION);

  002de	83 7d e0 00	 cmp	 DWORD PTR _last_wp$4[ebp], 0
  002e2	74 0a		 je	 SHORT $LN28@map_pop_mo
  002e4	8b 45 e0	 mov	 eax, DWORD PTR _last_wp$4[ebp]
  002e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e9	89 4d 90	 mov	 DWORD PTR tv220[ebp], ecx
  002ec	eb 21		 jmp	 SHORT $LN29@map_pop_mo
$LN28@map_pop_mo:
  002ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  002f4	83 c2 3d	 add	 edx, 61			; 0000003dH
  002f7	52		 push	 edx
  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00302	50		 push	 eax
  00303	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00308	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN29@map_pop_mo:
  0030f	b9 01 00 00 00	 mov	 ecx, 1
  00314	85 c9		 test	 ecx, ecx
  00316	74 09		 je	 SHORT $LN30@map_pop_mo
  00318	c7 45 8c 08 00
	00 00		 mov	 DWORD PTR tv228[ebp], 8
  0031f	eb 21		 jmp	 SHORT $LN31@map_pop_mo
$LN30@map_pop_mo:
  00321	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00327	83 c2 3d	 add	 edx, 61			; 0000003dH
  0032a	52		 push	 edx
  0032b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00330	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00335	50		 push	 eax
  00336	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033b	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv228[ebp], 0
$LN31@map_pop_mo:
  00342	6a 08		 push	 8
  00344	8b 4d e0	 mov	 ecx, DWORD PTR _last_wp$4[ebp]
  00347	51		 push	 ecx
  00348	6b 55 90 60	 imul	 edx, DWORD PTR tv220[ebp], 96
  0034c	8b 45 8c	 mov	 eax, DWORD PTR tv228[ebp]
  0034f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00356	ff d1		 call	 ecx
  00358	89 45 d4	 mov	 DWORD PTR _last_waypoint_position$1[ebp], eax

; 2024 : 
; 2025 : 				range = get_2d_range (pos, last_waypoint_position);

  0035b	8b 45 d4	 mov	 eax, DWORD PTR _last_waypoint_position$1[ebp]
  0035e	50		 push	 eax
  0035f	8b 4d fc	 mov	 ecx, DWORD PTR _pos$[ebp]
  00362	51		 push	 ecx
  00363	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00368	d9 5d dc	 fstp	 DWORD PTR _range$3[ebp]

; 2026 : 
; 2027 : 				task = get_local_entity_parent (map_dimensions->selected_entity, LIST_TYPE_WAYPOINT);

  0036b	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0036e	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  00372	74 0d		 je	 SHORT $LN32@map_pop_mo
  00374	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00377	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  0037a	8b 02		 mov	 eax, DWORD PTR [edx]
  0037c	89 45 90	 mov	 DWORD PTR tv245[ebp], eax
  0037f	eb 22		 jmp	 SHORT $LN33@map_pop_mo
$LN32@map_pop_mo:
  00381	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00387	83 c1 41	 add	 ecx, 65			; 00000041H
  0038a	51		 push	 ecx
  0038b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00396	52		 push	 edx
  00397	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039c	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv245[ebp], 0
$LN33@map_pop_mo:
  003a3	b8 01 00 00 00	 mov	 eax, 1
  003a8	85 c0		 test	 eax, eax
  003aa	74 09		 je	 SHORT $LN34@map_pop_mo
  003ac	c7 45 8c 2c 00
	00 00		 mov	 DWORD PTR tv253[ebp], 44 ; 0000002cH
  003b3	eb 22		 jmp	 SHORT $LN35@map_pop_mo
$LN34@map_pop_mo:
  003b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  003bb	83 c1 41	 add	 ecx, 65			; 00000041H
  003be	51		 push	 ecx
  003bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003ca	52		 push	 edx
  003cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d0	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv253[ebp], 0
$LN35@map_pop_mo:
  003d7	6a 2c		 push	 44			; 0000002cH
  003d9	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  003dc	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  003df	51		 push	 ecx
  003e0	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv245[ebp], 180
  003e7	8b 45 8c	 mov	 eax, DWORD PTR tv253[ebp]
  003ea	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003f1	ff d1		 call	 ecx
  003f3	89 45 f0	 mov	 DWORD PTR _task$8[ebp], eax

; 2028 : 
; 2029 : 				ASSERT (task);

  003f6	83 7d f0 00	 cmp	 DWORD PTR _task$8[ebp], 0
  003fa	75 18		 jne	 SHORT $LN8@map_pop_mo
  003fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00401	83 c0 43	 add	 eax, 67			; 00000043H
  00404	50		 push	 eax
  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  0040f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_pop_mo:

; 2030 : 
; 2031 : 				guide = get_local_entity_first_child (task, LIST_TYPE_GUIDE);

  00414	83 7d f0 00	 cmp	 DWORD PTR _task$8[ebp], 0
  00418	74 0a		 je	 SHORT $LN36@map_pop_mo
  0041a	8b 45 f0	 mov	 eax, DWORD PTR _task$8[ebp]
  0041d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041f	89 4d 90	 mov	 DWORD PTR tv271[ebp], ecx
  00422	eb 21		 jmp	 SHORT $LN37@map_pop_mo
$LN36@map_pop_mo:
  00424	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  0042a	83 c2 45	 add	 edx, 69			; 00000045H
  0042d	52		 push	 edx
  0042e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00433	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043e	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv271[ebp], 0
$LN37@map_pop_mo:
  00445	b9 01 00 00 00	 mov	 ecx, 1
  0044a	85 c9		 test	 ecx, ecx
  0044c	74 09		 je	 SHORT $LN38@map_pop_mo
  0044e	c7 45 8c 10 00
	00 00		 mov	 DWORD PTR tv279[ebp], 16 ; 00000010H
  00455	eb 21		 jmp	 SHORT $LN39@map_pop_mo
$LN38@map_pop_mo:
  00457	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  0045d	83 c2 45	 add	 edx, 69			; 00000045H
  00460	52		 push	 edx
  00461	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00466	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0046b	50		 push	 eax
  0046c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00471	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv279[ebp], 0
$LN39@map_pop_mo:
  00478	6a 10		 push	 16			; 00000010H
  0047a	8b 4d f0	 mov	 ecx, DWORD PTR _task$8[ebp]
  0047d	51		 push	 ecx
  0047e	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv271[ebp], 180
  00485	8b 45 8c	 mov	 eax, DWORD PTR tv279[ebp]
  00488	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0048f	ff d1		 call	 ecx
  00491	89 45 e8	 mov	 DWORD PTR _guide$6[ebp], eax

; 2032 : 
; 2033 : 				if (guide)

  00494	83 7d e8 00	 cmp	 DWORD PTR _guide$6[ebp], 0
  00498	0f 84 d5 02 00
	00		 je	 $LN10@map_pop_mo

; 2034 : 				{
; 2035 : 
; 2036 : 					group = get_local_entity_parent (guide, LIST_TYPE_GUIDE_STACK);

  0049e	83 7d e8 00	 cmp	 DWORD PTR _guide$6[ebp], 0
  004a2	74 0a		 je	 SHORT $LN40@map_pop_mo
  004a4	8b 45 e8	 mov	 eax, DWORD PTR _guide$6[ebp]
  004a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a9	89 4d 90	 mov	 DWORD PTR tv292[ebp], ecx
  004ac	eb 21		 jmp	 SHORT $LN41@map_pop_mo
$LN40@map_pop_mo:
  004ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  004b4	83 c2 4a	 add	 edx, 74			; 0000004aH
  004b7	52		 push	 edx
  004b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004c8	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv292[ebp], 0
$LN41@map_pop_mo:
  004cf	b9 01 00 00 00	 mov	 ecx, 1
  004d4	85 c9		 test	 ecx, ecx
  004d6	74 09		 je	 SHORT $LN42@map_pop_mo
  004d8	c7 45 8c 11 00
	00 00		 mov	 DWORD PTR tv300[ebp], 17 ; 00000011H
  004df	eb 21		 jmp	 SHORT $LN43@map_pop_mo
$LN42@map_pop_mo:
  004e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  004e7	83 c2 4a	 add	 edx, 74			; 0000004aH
  004ea	52		 push	 edx
  004eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004f5	50		 push	 eax
  004f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv300[ebp], 0
$LN43@map_pop_mo:
  00502	6a 11		 push	 17			; 00000011H
  00504	8b 4d e8	 mov	 ecx, DWORD PTR _guide$6[ebp]
  00507	51		 push	 ecx
  00508	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv292[ebp], 180
  0050f	8b 45 8c	 mov	 eax, DWORD PTR tv300[ebp]
  00512	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00519	ff d1		 call	 ecx
  0051b	89 45 ec	 mov	 DWORD PTR _group$7[ebp], eax

; 2037 : 
; 2038 : 					member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  0051e	83 7d ec 00	 cmp	 DWORD PTR _group$7[ebp], 0
  00522	74 0a		 je	 SHORT $LN44@map_pop_mo
  00524	8b 45 ec	 mov	 eax, DWORD PTR _group$7[ebp]
  00527	8b 08		 mov	 ecx, DWORD PTR [eax]
  00529	89 4d 90	 mov	 DWORD PTR tv312[ebp], ecx
  0052c	eb 21		 jmp	 SHORT $LN45@map_pop_mo
$LN44@map_pop_mo:
  0052e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00534	83 c2 4c	 add	 edx, 76			; 0000004cH
  00537	52		 push	 edx
  00538	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00542	50		 push	 eax
  00543	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00548	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv312[ebp], 0
$LN45@map_pop_mo:
  0054f	b9 01 00 00 00	 mov	 ecx, 1
  00554	85 c9		 test	 ecx, ecx
  00556	74 09		 je	 SHORT $LN46@map_pop_mo
  00558	c7 45 8c 19 00
	00 00		 mov	 DWORD PTR tv320[ebp], 25 ; 00000019H
  0055f	eb 21		 jmp	 SHORT $LN47@map_pop_mo
$LN46@map_pop_mo:
  00561	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00567	83 c2 4c	 add	 edx, 76			; 0000004cH
  0056a	52		 push	 edx
  0056b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00570	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0057b	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv320[ebp], 0
$LN47@map_pop_mo:
  00582	6a 19		 push	 25			; 00000019H
  00584	8b 4d ec	 mov	 ecx, DWORD PTR _group$7[ebp]
  00587	51		 push	 ecx
  00588	69 55 90 b4 00
	00 00		 imul	 edx, DWORD PTR tv312[ebp], 180
  0058f	8b 45 8c	 mov	 eax, DWORD PTR tv320[ebp]
  00592	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00599	ff d1		 call	 ecx
  0059b	89 45 e4	 mov	 DWORD PTR _member$5[ebp], eax

; 2039 : 
; 2040 : 					if (member)

  0059e	83 7d e4 00	 cmp	 DWORD PTR _member$5[ebp], 0
  005a2	0f 84 cb 01 00
	00		 je	 $LN10@map_pop_mo

; 2041 : 					{
; 2042 : 
; 2043 : 						flight_time = range / get_local_entity_float_value (member, FLOAT_TYPE_CRUISE_VELOCITY);

  005a8	83 7d e4 00	 cmp	 DWORD PTR _member$5[ebp], 0
  005ac	74 0a		 je	 SHORT $LN48@map_pop_mo
  005ae	8b 45 e4	 mov	 eax, DWORD PTR _member$5[ebp]
  005b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b3	89 4d 90	 mov	 DWORD PTR tv333[ebp], ecx
  005b6	eb 21		 jmp	 SHORT $LN49@map_pop_mo
$LN48@map_pop_mo:
  005b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  005be	83 c2 51	 add	 edx, 81			; 00000051H
  005c1	52		 push	 edx
  005c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005cc	50		 push	 eax
  005cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d2	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv333[ebp], 0
$LN49@map_pop_mo:
  005d9	b9 01 00 00 00	 mov	 ecx, 1
  005de	85 c9		 test	 ecx, ecx
  005e0	74 09		 je	 SHORT $LN50@map_pop_mo
  005e2	c7 45 8c 19 00
	00 00		 mov	 DWORD PTR tv341[ebp], 25 ; 00000019H
  005e9	eb 21		 jmp	 SHORT $LN51@map_pop_mo
$LN50@map_pop_mo:
  005eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  005f1	83 c2 51	 add	 edx, 81			; 00000051H
  005f4	52		 push	 edx
  005f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  005ff	50		 push	 eax
  00600	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00605	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv341[ebp], 0
$LN51@map_pop_mo:
  0060c	6a 19		 push	 25			; 00000019H
  0060e	8b 4d e4	 mov	 ecx, DWORD PTR _member$5[ebp]
  00611	51		 push	 ecx
  00612	69 55 90 bc 02
	00 00		 imul	 edx, DWORD PTR tv333[ebp], 700
  00619	8b 45 8c	 mov	 eax, DWORD PTR tv341[ebp]
  0061c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00623	ff d1		 call	 ecx
  00625	d9 5d 88	 fstp	 DWORD PTR tv547[ebp]
  00628	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _range$3[ebp]
  0062d	f3 0f 5e 45 88	 divss	 xmm0, DWORD PTR tv547[ebp]
  00632	f3 0f 11 45 d8	 movss	 DWORD PTR _flight_time$2[ebp], xmm0

; 2044 : 
; 2045 : 						set_client_server_entity_float_value (map_dimensions->selected_entity, FLOAT_TYPE_FLIGHT_TIME, flight_time);

  00637	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0063a	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  0063e	74 0d		 je	 SHORT $LN52@map_pop_mo
  00640	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00643	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  00646	8b 02		 mov	 eax, DWORD PTR [edx]
  00648	89 45 90	 mov	 DWORD PTR tv356[ebp], eax
  0064b	eb 22		 jmp	 SHORT $LN53@map_pop_mo
$LN52@map_pop_mo:
  0064d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00653	83 c1 53	 add	 ecx, 83			; 00000053H
  00656	51		 push	 ecx
  00657	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0065c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00662	52		 push	 edx
  00663	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00668	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv356[ebp], 0
$LN53@map_pop_mo:
  0066f	b8 01 00 00 00	 mov	 eax, 1
  00674	85 c0		 test	 eax, eax
  00676	74 09		 je	 SHORT $LN54@map_pop_mo
  00678	c7 45 8c 2a 00
	00 00		 mov	 DWORD PTR tv364[ebp], 42 ; 0000002aH
  0067f	eb 22		 jmp	 SHORT $LN55@map_pop_mo
$LN54@map_pop_mo:
  00681	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00687	83 c1 53	 add	 ecx, 83			; 00000053H
  0068a	51		 push	 ecx
  0068b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00690	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00696	52		 push	 edx
  00697	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv364[ebp], 0
$LN55@map_pop_mo:
  006a3	51		 push	 ecx
  006a4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _flight_time$2[ebp]
  006a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ae	6a 2a		 push	 42			; 0000002aH
  006b0	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006b3	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  006b6	51		 push	 ecx
  006b7	69 55 90 78 05
	00 00		 imul	 edx, DWORD PTR tv356[ebp], 1400
  006be	8b 45 8c	 mov	 eax, DWORD PTR tv364[ebp]
  006c1	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  006c8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  006ce	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  006d1	ff d0		 call	 eax

; 2046 : 
; 2047 : 						debug_log ("CA_MAP: setting flight time for waypoint %s to %f", get_local_entity_string (map_dimensions->selected_entity, STRING_TYPE_FULL_NAME), flight_time);

  006d3	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006d6	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  006da	74 0d		 je	 SHORT $LN56@map_pop_mo
  006dc	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  006df	8b 51 48	 mov	 edx, DWORD PTR [ecx+72]
  006e2	8b 02		 mov	 eax, DWORD PTR [edx]
  006e4	89 45 90	 mov	 DWORD PTR tv383[ebp], eax
  006e7	eb 22		 jmp	 SHORT $LN57@map_pop_mo
$LN56@map_pop_mo:
  006e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  006ef	83 c1 55	 add	 ecx, 85			; 00000055H
  006f2	51		 push	 ecx
  006f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006fe	52		 push	 edx
  006ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00704	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv383[ebp], 0
$LN57@map_pop_mo:
  0070b	b8 01 00 00 00	 mov	 eax, 1
  00710	85 c0		 test	 eax, eax
  00712	74 09		 je	 SHORT $LN58@map_pop_mo
  00714	c7 45 8c 03 00
	00 00		 mov	 DWORD PTR tv391[ebp], 3
  0071b	eb 22		 jmp	 SHORT $LN59@map_pop_mo
$LN58@map_pop_mo:
  0071d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z@4JA
  00723	83 c1 55	 add	 ecx, 85			; 00000055H
  00726	51		 push	 ecx
  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0072c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00732	52		 push	 edx
  00733	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00738	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv391[ebp], 0
$LN59@map_pop_mo:
  0073f	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _flight_time$2[ebp]
  00744	83 ec 08	 sub	 esp, 8
  00747	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0074c	6a 03		 push	 3
  0074e	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00751	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  00754	51		 push	 ecx
  00755	6b 55 90 34	 imul	 edx, DWORD PTR tv383[ebp], 52
  00759	8b 45 8c	 mov	 eax, DWORD PTR tv391[ebp]
  0075c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00763	ff d1		 call	 ecx
  00765	50		 push	 eax
  00766	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@LFJOAJMD@CA_MAP?3?5setting?5flight?5time?5for@
  0076b	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00770	83 c4 10	 add	 esp, 16			; 00000010H
$LN10@map_pop_mo:

; 2048 : 					}
; 2049 : 				}
; 2050 : 			}
; 2051 : 		}
; 2052 : 
; 2053 : 		map_dimensions->selected_entity = NULL;

  00773	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00776	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0
$LN4@map_pop_mo:

; 2054 : 	}
; 2055 : 
; 2056 : 	active_map_object = NULL;

  0077d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A, 0

; 2057 : }

  00787	5f		 pop	 edi
  00788	5e		 pop	 esi
  00789	5b		 pop	 ebx
  0078a	8b e5		 mov	 esp, ebp
  0078c	5d		 pop	 ebp
  0078d	c2 04 00	 ret	 4
?map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z ENDP	; map_pop_move_waypoint_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv71 = -72						; size = 4
_task$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z PROC ; draw_group_waypoint_routes, COMDAT

; 905  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 906  : 	entity
; 907  : 		*task;
; 908  : 
; 909  : 	if (en)

  00009	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 6e		 je	 SHORT $LN1@draw_group

; 910  : 	{
; 911  : 
; 912  : 		ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  0000f	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00013	74 0a		 je	 SHORT $LN6@draw_group
  00015	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00018	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001a	89 4d b8	 mov	 DWORD PTR tv71[ebp], ecx
  0001d	eb 21		 jmp	 SHORT $LN7@draw_group
$LN6@draw_group:
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00025	83 c2 07	 add	 edx, 7
  00028	52		 push	 edx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00039	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN7@draw_group:
  00040	83 7d b8 0c	 cmp	 DWORD PTR tv71[ebp], 12	; 0000000cH
  00044	74 18		 je	 SHORT $LN3@draw_group
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0004b	83 c0 07	 add	 eax, 7
  0004e	50		 push	 eax
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@draw_group:

; 913  : 
; 914  : 		task = get_local_group_primary_task (en);

  0005e	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?get_local_group_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_group_primary_task
  00067	89 45 fc	 mov	 DWORD PTR _task$[ebp], eax

; 915  : 
; 916  : 		if (task)

  0006a	83 7d fc 00	 cmp	 DWORD PTR _task$[ebp], 0
  0006e	74 0d		 je	 SHORT $LN1@draw_group

; 917  : 		{
; 918  : 			draw_task_waypoint_routes (obj, task);

  00070	8b 45 fc	 mov	 eax, DWORD PTR _task$[ebp]
  00073	50		 push	 eax
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; draw_task_waypoint_routes
$LN1@draw_group:

; 919  : 		}
; 920  : 	}
; 921  : }

  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx
  00080	8b e5		 mov	 esp, ebp
  00082	5d		 pop	 ebp
  00083	c2 08 00	 ret	 8
?draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ENDP ; draw_group_waypoint_routes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv713 = -184						; size = 4
tv641 = -184						; size = 4
tv567 = -184						; size = 4
tv531 = -184						; size = 4
tv479 = -184						; size = 4
tv425 = -184						; size = 4
tv389 = -184						; size = 4
tv363 = -184						; size = 4
tv343 = -184						; size = 4
tv322 = -184						; size = 4
tv302 = -184						; size = 4
tv282 = -184						; size = 4
tv251 = -184						; size = 4
tv231 = -184						; size = 4
tv210 = -184						; size = 4
tv189 = -184						; size = 4
tv169 = -184						; size = 4
tv144 = -184						; size = 4
tv93 = -184						; size = 4
tv705 = -180						; size = 4
tv633 = -180						; size = 4
tv610 = -180						; size = 4
tv559 = -180						; size = 4
tv523 = -180						; size = 4
tv471 = -180						; size = 4
tv417 = -180						; size = 4
tv381 = -180						; size = 4
tv355 = -180						; size = 4
tv335 = -180						; size = 4
tv314 = -180						; size = 4
tv294 = -180						; size = 4
tv274 = -180						; size = 4
tv243 = -180						; size = 4
tv223 = -180						; size = 4
tv202 = -180						; size = 4
tv181 = -180						; size = 4
tv161 = -180						; size = 4
tv137 = -180						; size = 4
tv86 = -180						; size = 4
tv75 = -180						; size = 4
_target_pos$1 = -112					; size = 4
_target$2 = -108					; size = 4
_temp_route$3 = -104					; size = 4
_route$4 = -100						; size = 4
_flight_path$5 = -96					; size = 4
_side$ = -92						; size = 4
_icon$ = -88						; size = 4
_tag$ = -84						; size = 5
_font_height$ = -76					; size = 4
_font_width$ = -72					; size = 4
_mid_pos$ = -68						; size = 12
_spos2$ = -56						; size = 12
_spos1$ = -44						; size = 12
_wpos2$ = -32						; size = 12
_wpos1$ = -20						; size = 12
_wp2$ = -8						; size = 4
_wp1$ = -4						; size = 4
_obj$ = 8						; size = 4
_en$ = 12						; size = 4
?draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z PROC ; draw_task_waypoint_routes, COMDAT

; 616  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 617  : 	entity
; 618  : 		*wp1,
; 619  : 		*wp2;
; 620  : 
; 621  : 	vec3d
; 622  : 		wpos1,
; 623  : 		wpos2,
; 624  : 		spos1,
; 625  : 		spos2,
; 626  : 		mid_pos;
; 627  : 
; 628  : 	float
; 629  : 		font_width,
; 630  : 		font_height;
; 631  : 
; 632  : 	char
; 633  : 		tag [5];
; 634  : 
; 635  : 	int
; 636  : 		icon;
; 637  : 
; 638  : 	entity_sides
; 639  : 		side;
; 640  : 
; 641  : 	ASSERT (en);

  0000c	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN12@draw_task_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00017	83 c0 19	 add	 eax, 25			; 00000019H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@draw_task_:

; 642  : 
; 643  : 	ASSERT (get_local_entity_type (en) == ENTITY_TYPE_TASK);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN28@draw_task_
  00030	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN29@draw_task_
$LN28@draw_task_:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00043	83 c2 1b	 add	 edx, 27			; 0000001bH
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN29@draw_task_:
  00061	83 bd 4c ff ff
	ff 22		 cmp	 DWORD PTR tv75[ebp], 34	; 00000022H
  00068	74 18		 je	 SHORT $LN13@draw_task_
  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0006f	83 c0 1b	 add	 eax, 27			; 0000001bH
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@HOKFPMOM@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@draw_task_:

; 644  : 
; 645  : 	if (!get_local_entity_int_value (en, INT_TYPE_VISIBLE_TASK))

  00082	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00086	74 0d		 je	 SHORT $LN30@draw_task_
  00088	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  00093	eb 20		 jmp	 SHORT $LN31@draw_task_
$LN30@draw_task_:
  00095	68 85 02 00 00	 push	 645			; 00000285H
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a5	52		 push	 edx
  000a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ab	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN31@draw_task_:
  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	85 c0		 test	 eax, eax
  000bc	74 0c		 je	 SHORT $LN32@draw_task_
  000be	c7 85 48 ff ff
	ff fa 00 00 00	 mov	 DWORD PTR tv93[ebp], 250 ; 000000faH
  000c8	eb 20		 jmp	 SHORT $LN33@draw_task_
$LN32@draw_task_:
  000ca	68 85 02 00 00	 push	 645			; 00000285H
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e0	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN33@draw_task_:
  000ea	68 fa 00 00 00	 push	 250			; 000000faH
  000ef	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  000f2	52		 push	 edx
  000f3	69 85 4c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv86[ebp], 1116
  000fd	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00103	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0010a	ff d2		 call	 edx
  0010c	85 c0		 test	 eax, eax
  0010e	75 05		 jne	 SHORT $LN14@draw_task_

; 646  : 	{
; 647  : 		return;

  00110	e9 69 10 00 00	 jmp	 $LN1@draw_task_
$LN14@draw_task_:

; 648  : 	}
; 649  : 
; 650  : 	if (get_local_entity_int_value (en, INT_TYPE_MOVEMENT_TYPE) != MOVEMENT_TYPE_AIR)

  00115	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00119	74 0d		 je	 SHORT $LN34@draw_task_
  0011b	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv137[ebp], ecx
  00126	eb 20		 jmp	 SHORT $LN35@draw_task_
$LN34@draw_task_:
  00128	68 8a 02 00 00	 push	 650			; 0000028aH
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00132	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00138	52		 push	 edx
  00139	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN35@draw_task_:
  00148	b8 01 00 00 00	 mov	 eax, 1
  0014d	85 c0		 test	 eax, eax
  0014f	74 0c		 je	 SHORT $LN36@draw_task_
  00151	c7 85 48 ff ff
	ff 90 00 00 00	 mov	 DWORD PTR tv144[ebp], 144 ; 00000090H
  0015b	eb 20		 jmp	 SHORT $LN37@draw_task_
$LN36@draw_task_:
  0015d	68 8a 02 00 00	 push	 650			; 0000028aH
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00173	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN37@draw_task_:
  0017d	68 90 00 00 00	 push	 144			; 00000090H
  00182	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00185	52		 push	 edx
  00186	69 85 4c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv137[ebp], 1116
  00190	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv144[ebp]
  00196	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0019d	ff d2		 call	 edx
  0019f	83 f8 01	 cmp	 eax, 1
  001a2	74 05		 je	 SHORT $LN15@draw_task_

; 651  : 	{
; 652  : 		return;

  001a4	e9 d5 0f 00 00	 jmp	 $LN1@draw_task_
$LN15@draw_task_:

; 653  : 	}
; 654  : 
; 655  : 	set_ui_font_type (UI_FONT_ARIAL_10);

  001a9	6a 00		 push	 0
  001ab	e8 00 00 00 00	 call	 ?set_ui_font_type@@YGXW4FONT_TYPES@@@Z ; set_ui_font_type

; 656  : 
; 657  : 	set_ui_font_colour (sys_col_white);

  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 ?set_ui_font_colour@@YGXUREAL_COLOUR@@@Z ; set_ui_font_colour

; 658  : 
; 659  : 	font_height = ui_get_font_height ();

  001bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  001c0	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  001c5	f3 0f 11 45 b4	 movss	 DWORD PTR _font_height$[ebp], xmm0

; 660  : 
; 661  : 	side = (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE);

  001ca	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ce	74 0d		 je	 SHORT $LN38@draw_task_
  001d0	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  001d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d5	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv161[ebp], ecx
  001db	eb 24		 jmp	 SHORT $LN39@draw_task_
$LN38@draw_task_:
  001dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  001e3	83 c2 2d	 add	 edx, 45			; 0000002dH
  001e6	52		 push	 edx
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f1	50		 push	 eax
  001f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f7	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv161[ebp], 0
$LN39@draw_task_:
  00201	b9 01 00 00 00	 mov	 ecx, 1
  00206	85 c9		 test	 ecx, ecx
  00208	74 0c		 je	 SHORT $LN40@draw_task_
  0020a	c7 85 48 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv169[ebp], 187 ; 000000bbH
  00214	eb 24		 jmp	 SHORT $LN41@draw_task_
$LN40@draw_task_:
  00216	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0021c	83 c2 2d	 add	 edx, 45			; 0000002dH
  0021f	52		 push	 edx
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0022a	50		 push	 eax
  0022b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00230	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN41@draw_task_:
  0023a	68 bb 00 00 00	 push	 187			; 000000bbH
  0023f	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00242	51		 push	 ecx
  00243	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv161[ebp], 1116
  0024d	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv169[ebp]
  00253	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0025a	ff d1		 call	 ecx
  0025c	89 45 a4	 mov	 DWORD PTR _side$[ebp], eax

; 662  : 
; 663  : 	wp1 = get_local_entity_first_child (en, LIST_TYPE_WAYPOINT);

  0025f	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00263	74 0d		 je	 SHORT $LN42@draw_task_
  00265	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00268	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026a	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv181[ebp], ecx
  00270	eb 24		 jmp	 SHORT $LN43@draw_task_
$LN42@draw_task_:
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00278	83 c2 2f	 add	 edx, 47			; 0000002fH
  0027b	52		 push	 edx
  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028c	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN43@draw_task_:
  00296	b9 01 00 00 00	 mov	 ecx, 1
  0029b	85 c9		 test	 ecx, ecx
  0029d	74 0c		 je	 SHORT $LN44@draw_task_
  0029f	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv189[ebp], 44 ; 0000002cH
  002a9	eb 24		 jmp	 SHORT $LN45@draw_task_
$LN44@draw_task_:
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  002b1	83 c2 2f	 add	 edx, 47			; 0000002fH
  002b4	52		 push	 edx
  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c5	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN45@draw_task_:
  002cf	6a 2c		 push	 44			; 0000002cH
  002d1	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  002d4	51		 push	 ecx
  002d5	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv181[ebp], 180
  002df	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv189[ebp]
  002e5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002ec	ff d1		 call	 ecx
  002ee	89 45 fc	 mov	 DWORD PTR _wp1$[ebp], eax

; 664  : 
; 665  : 	if (wp1)

  002f1	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  002f5	0f 84 79 0b 00
	00		 je	 $LN16@draw_task_

; 666  : 	{
; 667  : 		//
; 668  : 		// Draw Connecting Lines .........
; 669  : 		//
; 670  : 
; 671  : 		wp2 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  002fb	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  002ff	74 0d		 je	 SHORT $LN46@draw_task_
  00301	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00304	8b 08		 mov	 ecx, DWORD PTR [eax]
  00306	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv202[ebp], ecx
  0030c	eb 24		 jmp	 SHORT $LN47@draw_task_
$LN46@draw_task_:
  0030e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00314	83 c2 37	 add	 edx, 55			; 00000037H
  00317	52		 push	 edx
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00328	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv202[ebp], 0
$LN47@draw_task_:
  00332	b9 01 00 00 00	 mov	 ecx, 1
  00337	85 c9		 test	 ecx, ecx
  00339	74 0c		 je	 SHORT $LN48@draw_task_
  0033b	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv210[ebp], 44 ; 0000002cH
  00345	eb 24		 jmp	 SHORT $LN49@draw_task_
$LN48@draw_task_:
  00347	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0034d	83 c2 37	 add	 edx, 55			; 00000037H
  00350	52		 push	 edx
  00351	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00356	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0035b	50		 push	 eax
  0035c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00361	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv210[ebp], 0
$LN49@draw_task_:
  0036b	6a 2c		 push	 44			; 0000002cH
  0036d	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00370	51		 push	 ecx
  00371	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv202[ebp], 180
  0037b	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv210[ebp]
  00381	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00388	ff d1		 call	 ecx
  0038a	89 45 f8	 mov	 DWORD PTR _wp2$[ebp], eax
$LN2@draw_task_:

; 672  : 
; 673  : 		while (wp2)

  0038d	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  00391	0f 84 16 02 00
	00		 je	 $LN3@draw_task_

; 674  : 		{
; 675  : 			get_local_entity_vec3d (wp1, VEC3D_TYPE_POSITION, &wpos1);

  00397	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  0039b	74 0d		 je	 SHORT $LN50@draw_task_
  0039d	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  003a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a2	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv223[ebp], ecx
  003a8	eb 24		 jmp	 SHORT $LN51@draw_task_
$LN50@draw_task_:
  003aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  003b0	83 c2 3b	 add	 edx, 59			; 0000003bH
  003b3	52		 push	 edx
  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003be	50		 push	 eax
  003bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c4	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv223[ebp], 0
$LN51@draw_task_:
  003ce	b9 01 00 00 00	 mov	 ecx, 1
  003d3	85 c9		 test	 ecx, ecx
  003d5	74 0c		 je	 SHORT $LN52@draw_task_
  003d7	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv231[ebp], 8
  003e1	eb 24		 jmp	 SHORT $LN53@draw_task_
$LN52@draw_task_:
  003e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  003e9	83 c2 3b	 add	 edx, 59			; 0000003bH
  003ec	52		 push	 edx
  003ed	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003fd	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv231[ebp], 0
$LN53@draw_task_:
  00407	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  0040a	51		 push	 ecx
  0040b	6a 08		 push	 8
  0040d	8b 55 fc	 mov	 edx, DWORD PTR _wp1$[ebp]
  00410	52		 push	 edx
  00411	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv223[ebp], 96
  00418	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv231[ebp]
  0041e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00425	ff d2		 call	 edx

; 676  : 
; 677  : 			get_local_entity_vec3d (wp2, VEC3D_TYPE_POSITION, &wpos2);

  00427	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  0042b	74 0d		 je	 SHORT $LN54@draw_task_
  0042d	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  00430	8b 08		 mov	 ecx, DWORD PTR [eax]
  00432	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv243[ebp], ecx
  00438	eb 24		 jmp	 SHORT $LN55@draw_task_
$LN54@draw_task_:
  0043a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00440	83 c2 3d	 add	 edx, 61			; 0000003dH
  00443	52		 push	 edx
  00444	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0044e	50		 push	 eax
  0044f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00454	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv243[ebp], 0
$LN55@draw_task_:
  0045e	b9 01 00 00 00	 mov	 ecx, 1
  00463	85 c9		 test	 ecx, ecx
  00465	74 0c		 je	 SHORT $LN56@draw_task_
  00467	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv251[ebp], 8
  00471	eb 24		 jmp	 SHORT $LN57@draw_task_
$LN56@draw_task_:
  00473	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00479	83 c2 3d	 add	 edx, 61			; 0000003dH
  0047c	52		 push	 edx
  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00482	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00487	50		 push	 eax
  00488	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0048d	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv251[ebp], 0
$LN57@draw_task_:
  00497	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  0049a	51		 push	 ecx
  0049b	6a 08		 push	 8
  0049d	8b 55 f8	 mov	 edx, DWORD PTR _wp2$[ebp]
  004a0	52		 push	 edx
  004a1	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv243[ebp], 96
  004a8	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv251[ebp]
  004ae	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004b5	ff d2		 call	 edx

; 678  : 
; 679  : 			// convert into screen coords
; 680  : 
; 681  : 			map_get_screen_coords_from_world (obj, &wpos1, &spos1);

  004b7	8d 45 d4	 lea	 eax, DWORD PTR _spos1$[ebp]
  004ba	50		 push	 eax
  004bb	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  004be	51		 push	 ecx
  004bf	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004c2	52		 push	 edx
  004c3	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 682  : 			map_get_screen_coords_from_world (obj, &wpos2, &spos2);

  004c8	8d 45 c8	 lea	 eax, DWORD PTR _spos2$[ebp]
  004cb	50		 push	 eax
  004cc	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  004cf	51		 push	 ecx
  004d0	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  004d3	52		 push	 edx
  004d4	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 683  : 
; 684  : 			//
; 685  : 			// Draw Line from WP1 -> WP2
; 686  : 			//
; 687  : 
; 688  : 			draw_line (spos1.x, spos1.z, spos2.x, spos2.z, ui_ingame_dead_text_colour);

  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_ingame_dead_text_colour@@3UREAL_COLOUR@@A ; ui_ingame_dead_text_colour
  004de	50		 push	 eax
  004df	51		 push	 ecx
  004e0	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _spos2$[ebp+8]
  004e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ea	51		 push	 ecx
  004eb	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _spos2$[ebp]
  004f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f5	51		 push	 ecx
  004f6	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  004fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00500	51		 push	 ecx
  00501	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  00506	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050b	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 689  : 
; 690  : 			wp1 = wp2;

  00510	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  00513	89 45 fc	 mov	 DWORD PTR _wp1$[ebp], eax

; 691  : 
; 692  : 			wp2 = get_local_entity_child_succ (wp2, LIST_TYPE_WAYPOINT);

  00516	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  0051a	74 0d		 je	 SHORT $LN58@draw_task_
  0051c	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  0051f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00521	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv274[ebp], ecx
  00527	eb 24		 jmp	 SHORT $LN59@draw_task_
$LN58@draw_task_:
  00529	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0052f	83 c2 4c	 add	 edx, 76			; 0000004cH
  00532	52		 push	 edx
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00538	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0053d	50		 push	 eax
  0053e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00543	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv274[ebp], 0
$LN59@draw_task_:
  0054d	b9 01 00 00 00	 mov	 ecx, 1
  00552	85 c9		 test	 ecx, ecx
  00554	74 0c		 je	 SHORT $LN60@draw_task_
  00556	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv282[ebp], 44 ; 0000002cH
  00560	eb 24		 jmp	 SHORT $LN61@draw_task_
$LN60@draw_task_:
  00562	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00568	83 c2 4c	 add	 edx, 76			; 0000004cH
  0056b	52		 push	 edx
  0056c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00571	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00576	50		 push	 eax
  00577	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0057c	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv282[ebp], 0
$LN61@draw_task_:
  00586	6a 2c		 push	 44			; 0000002cH
  00588	8b 4d f8	 mov	 ecx, DWORD PTR _wp2$[ebp]
  0058b	51		 push	 ecx
  0058c	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv274[ebp], 180
  00596	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv282[ebp]
  0059c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  005a3	ff d1		 call	 ecx
  005a5	89 45 f8	 mov	 DWORD PTR _wp2$[ebp], eax

; 693  : 		}

  005a8	e9 e0 fd ff ff	 jmp	 $LN2@draw_task_
$LN3@draw_task_:

; 694  : 
; 695  : 		//
; 696  : 		// Draw Icons ..............
; 697  : 		//
; 698  : 
; 699  : 		wp1 = get_local_entity_first_child (en, LIST_TYPE_WAYPOINT);

  005ad	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  005b1	74 0d		 je	 SHORT $LN62@draw_task_
  005b3	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  005b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b8	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv294[ebp], ecx
  005be	eb 24		 jmp	 SHORT $LN63@draw_task_
$LN62@draw_task_:
  005c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  005c6	83 c2 53	 add	 edx, 83			; 00000053H
  005c9	52		 push	 edx
  005ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005d4	50		 push	 eax
  005d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005da	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv294[ebp], 0
$LN63@draw_task_:
  005e4	b9 01 00 00 00	 mov	 ecx, 1
  005e9	85 c9		 test	 ecx, ecx
  005eb	74 0c		 je	 SHORT $LN64@draw_task_
  005ed	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv302[ebp], 44 ; 0000002cH
  005f7	eb 24		 jmp	 SHORT $LN65@draw_task_
$LN64@draw_task_:
  005f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  005ff	83 c2 53	 add	 edx, 83			; 00000053H
  00602	52		 push	 edx
  00603	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00608	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0060d	50		 push	 eax
  0060e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00613	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv302[ebp], 0
$LN65@draw_task_:
  0061d	6a 2c		 push	 44			; 0000002cH
  0061f	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00622	51		 push	 ecx
  00623	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv294[ebp], 180
  0062d	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv302[ebp]
  00633	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0063a	ff d1		 call	 ecx
  0063c	89 45 fc	 mov	 DWORD PTR _wp1$[ebp], eax

; 700  : 
; 701  : 		wp2 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  0063f	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00643	74 0d		 je	 SHORT $LN66@draw_task_
  00645	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00648	8b 08		 mov	 ecx, DWORD PTR [eax]
  0064a	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv314[ebp], ecx
  00650	eb 24		 jmp	 SHORT $LN67@draw_task_
$LN66@draw_task_:
  00652	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00658	83 c2 55	 add	 edx, 85			; 00000055H
  0065b	52		 push	 edx
  0065c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00661	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00666	50		 push	 eax
  00667	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0066c	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv314[ebp], 0
$LN67@draw_task_:
  00676	b9 01 00 00 00	 mov	 ecx, 1
  0067b	85 c9		 test	 ecx, ecx
  0067d	74 0c		 je	 SHORT $LN68@draw_task_
  0067f	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv322[ebp], 44 ; 0000002cH
  00689	eb 24		 jmp	 SHORT $LN69@draw_task_
$LN68@draw_task_:
  0068b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00691	83 c2 55	 add	 edx, 85			; 00000055H
  00694	52		 push	 edx
  00695	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0069a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0069f	50		 push	 eax
  006a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006a5	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv322[ebp], 0
$LN69@draw_task_:
  006af	6a 2c		 push	 44			; 0000002cH
  006b1	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  006b4	51		 push	 ecx
  006b5	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv314[ebp], 180
  006bf	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv322[ebp]
  006c5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  006cc	ff d1		 call	 ecx
  006ce	89 45 f8	 mov	 DWORD PTR _wp2$[ebp], eax
$LN4@draw_task_:

; 702  : 
; 703  : 		while (wp2)

  006d1	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  006d5	0f 84 37 04 00
	00		 je	 $LN5@draw_task_

; 704  : 		{
; 705  : 			get_local_entity_vec3d (wp1, VEC3D_TYPE_POSITION, &wpos1);

  006db	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  006df	74 0d		 je	 SHORT $LN70@draw_task_
  006e1	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  006e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  006e6	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv335[ebp], ecx
  006ec	eb 24		 jmp	 SHORT $LN71@draw_task_
$LN70@draw_task_:
  006ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  006f4	83 c2 59	 add	 edx, 89			; 00000059H
  006f7	52		 push	 edx
  006f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00702	50		 push	 eax
  00703	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00708	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv335[ebp], 0
$LN71@draw_task_:
  00712	b9 01 00 00 00	 mov	 ecx, 1
  00717	85 c9		 test	 ecx, ecx
  00719	74 0c		 je	 SHORT $LN72@draw_task_
  0071b	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv343[ebp], 8
  00725	eb 24		 jmp	 SHORT $LN73@draw_task_
$LN72@draw_task_:
  00727	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0072d	83 c2 59	 add	 edx, 89			; 00000059H
  00730	52		 push	 edx
  00731	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00736	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0073b	50		 push	 eax
  0073c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00741	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv343[ebp], 0
$LN73@draw_task_:
  0074b	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  0074e	51		 push	 ecx
  0074f	6a 08		 push	 8
  00751	8b 55 fc	 mov	 edx, DWORD PTR _wp1$[ebp]
  00754	52		 push	 edx
  00755	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv335[ebp], 96
  0075c	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv343[ebp]
  00762	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00769	ff d2		 call	 edx

; 706  : 
; 707  : 			get_local_entity_vec3d (wp2, VEC3D_TYPE_POSITION, &wpos2);

  0076b	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  0076f	74 0d		 je	 SHORT $LN74@draw_task_
  00771	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  00774	8b 08		 mov	 ecx, DWORD PTR [eax]
  00776	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv355[ebp], ecx
  0077c	eb 24		 jmp	 SHORT $LN75@draw_task_
$LN74@draw_task_:
  0077e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00784	83 c2 5b	 add	 edx, 91			; 0000005bH
  00787	52		 push	 edx
  00788	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0078d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00792	50		 push	 eax
  00793	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00798	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv355[ebp], 0
$LN75@draw_task_:
  007a2	b9 01 00 00 00	 mov	 ecx, 1
  007a7	85 c9		 test	 ecx, ecx
  007a9	74 0c		 je	 SHORT $LN76@draw_task_
  007ab	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv363[ebp], 8
  007b5	eb 24		 jmp	 SHORT $LN77@draw_task_
$LN76@draw_task_:
  007b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  007bd	83 c2 5b	 add	 edx, 91			; 0000005bH
  007c0	52		 push	 edx
  007c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  007cb	50		 push	 eax
  007cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d1	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv363[ebp], 0
$LN77@draw_task_:
  007db	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  007de	51		 push	 ecx
  007df	6a 08		 push	 8
  007e1	8b 55 f8	 mov	 edx, DWORD PTR _wp2$[ebp]
  007e4	52		 push	 edx
  007e5	6b 85 4c ff ff
	ff 60		 imul	 eax, DWORD PTR tv355[ebp], 96
  007ec	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv363[ebp]
  007f2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  007f9	ff d2		 call	 edx

; 708  : 
; 709  : 			// convert into screen coords
; 710  : 
; 711  : 			map_get_screen_coords_from_world (obj, &wpos1, &spos1);

  007fb	8d 45 d4	 lea	 eax, DWORD PTR _spos1$[ebp]
  007fe	50		 push	 eax
  007ff	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  00802	51		 push	 ecx
  00803	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00806	52		 push	 edx
  00807	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 712  : 			map_get_screen_coords_from_world (obj, &wpos2, &spos2);

  0080c	8d 45 c8	 lea	 eax, DWORD PTR _spos2$[ebp]
  0080f	50		 push	 eax
  00810	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  00813	51		 push	 ecx
  00814	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00817	52		 push	 edx
  00818	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 713  : 
; 714  : 			//
; 715  : 			// Draw WP1 Icon
; 716  : 			//
; 717  : 
; 718  : 			icon = get_local_entity_int_value (wp1, INT_TYPE_MAP_ICON);

  0081d	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00821	74 0d		 je	 SHORT $LN78@draw_task_
  00823	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00826	8b 08		 mov	 ecx, DWORD PTR [eax]
  00828	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv381[ebp], ecx
  0082e	eb 24		 jmp	 SHORT $LN79@draw_task_
$LN78@draw_task_:
  00830	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00836	83 c2 66	 add	 edx, 102		; 00000066H
  00839	52		 push	 edx
  0083a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0083f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00844	50		 push	 eax
  00845	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0084a	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv381[ebp], 0
$LN79@draw_task_:
  00854	b9 01 00 00 00	 mov	 ecx, 1
  00859	85 c9		 test	 ecx, ecx
  0085b	74 0c		 je	 SHORT $LN80@draw_task_
  0085d	c7 85 48 ff ff
	ff 82 00 00 00	 mov	 DWORD PTR tv389[ebp], 130 ; 00000082H
  00867	eb 24		 jmp	 SHORT $LN81@draw_task_
$LN80@draw_task_:
  00869	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0086f	83 c2 66	 add	 edx, 102		; 00000066H
  00872	52		 push	 edx
  00873	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00878	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0087d	50		 push	 eax
  0087e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00883	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv389[ebp], 0
$LN81@draw_task_:
  0088d	68 82 00 00 00	 push	 130			; 00000082H
  00892	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00895	51		 push	 ecx
  00896	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv381[ebp], 1116
  008a0	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv389[ebp]
  008a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  008ad	ff d1		 call	 ecx
  008af	89 45 a8	 mov	 DWORD PTR _icon$[ebp], eax

; 719  : 
; 720  : 			ASSERT (icon != MAP_ICON_NONE);

  008b2	83 7d a8 00	 cmp	 DWORD PTR _icon$[ebp], 0
  008b6	75 18		 jne	 SHORT $LN18@draw_task_
  008b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  008bd	83 c0 68	 add	 eax, 104		; 00000068H
  008c0	50		 push	 eax
  008c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  008c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  008cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@draw_task_:

; 721  : 
; 722  : 			map_draw_entity_icon (obj, wp1, &wpos1, icon, side, ICON_RESOLUTION_SCALE);

  008d0	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  008d8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  008e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008e4	51		 push	 ecx
  008e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ea	8b 45 a4	 mov	 eax, DWORD PTR _side$[ebp]
  008ed	50		 push	 eax
  008ee	8b 4d a8	 mov	 ecx, DWORD PTR _icon$[ebp]
  008f1	51		 push	 ecx
  008f2	8d 55 ec	 lea	 edx, DWORD PTR _wpos1$[ebp]
  008f5	52		 push	 edx
  008f6	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  008f9	50		 push	 eax
  008fa	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  008fd	51		 push	 ecx
  008fe	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 723  : 
; 724  : 			//
; 725  : 			// Draw WP1 Letter
; 726  : 			//
; 727  : 
; 728  : 			sprintf (tag, "%c", get_local_entity_char_value (wp1, CHAR_TYPE_TAG));

  00903	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00907	74 0d		 je	 SHORT $LN82@draw_task_
  00909	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  0090c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0090e	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv417[ebp], ecx
  00914	eb 24		 jmp	 SHORT $LN83@draw_task_
$LN82@draw_task_:
  00916	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  0091c	83 c2 70	 add	 edx, 112		; 00000070H
  0091f	52		 push	 edx
  00920	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00925	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0092a	50		 push	 eax
  0092b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00930	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv417[ebp], 0
$LN83@draw_task_:
  0093a	b9 01 00 00 00	 mov	 ecx, 1
  0093f	85 c9		 test	 ecx, ecx
  00941	74 0c		 je	 SHORT $LN84@draw_task_
  00943	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
  0094d	eb 24		 jmp	 SHORT $LN85@draw_task_
$LN84@draw_task_:
  0094f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00955	83 c2 70	 add	 edx, 112		; 00000070H
  00958	52		 push	 edx
  00959	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  00963	50		 push	 eax
  00964	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00969	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN85@draw_task_:
  00973	6a 00		 push	 0
  00975	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00978	51		 push	 ecx
  00979	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv425[ebp]
  0097f	c1 e2 02	 shl	 edx, 2
  00982	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv417[ebp]
  00988	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  0098f	ff d1		 call	 ecx
  00991	0f b6 d0	 movzx	 edx, al
  00994	52		 push	 edx
  00995	68 00 00 00 00	 push	 OFFSET ??_C@_02HAOIJKIC@?$CFc@
  0099a	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  0099d	50		 push	 eax
  0099e	e8 00 00 00 00	 call	 _sprintf
  009a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 729  : 
; 730  : 			font_width = ui_get_string_length (tag);

  009a6	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  009a9	50		 push	 eax
  009aa	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  009af	d9 5d b8	 fstp	 DWORD PTR _font_width$[ebp]

; 731  : 
; 732  : 			ui_display_text (tag, spos1.x - (font_width * 0.5), spos1.z - (font_height * 0.5));

  009b2	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _spos1$[ebp+8]
  009b7	f3 0f 5a 4d b4	 cvtss2sd xmm1, DWORD PTR _font_height$[ebp]
  009bc	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  009c4	f2 0f 5c c1	 subsd	 xmm0, xmm1
  009c8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009cc	51		 push	 ecx
  009cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009d2	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _spos1$[ebp]
  009d7	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _font_width$[ebp]
  009dc	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  009e4	f2 0f 5c c1	 subsd	 xmm0, xmm1
  009e8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009ec	51		 push	 ecx
  009ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009f2	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  009f5	50		 push	 eax
  009f6	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  009fb	dd d8		 fstp	 ST(0)

; 733  : 
; 734  : 			//
; 735  : 			// Add Insert Waypoint Icon
; 736  : 			//
; 737  : 
; 738  : 			mid_pos.x = (wpos1.x + wpos2.x) * 0.5;

  009fd	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _wpos1$[ebp]
  00a02	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _wpos2$[ebp]
  00a07	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a0b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00a13	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a17	f3 0f 11 45 bc	 movss	 DWORD PTR _mid_pos$[ebp], xmm0

; 739  : 			mid_pos.y = (wpos1.y + wpos2.y) * 0.5;

  00a1c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _wpos1$[ebp+4]
  00a21	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _wpos2$[ebp+4]
  00a26	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a2a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00a32	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a36	f3 0f 11 45 c0	 movss	 DWORD PTR _mid_pos$[ebp+4], xmm0

; 740  : 			mid_pos.z = (wpos1.z + wpos2.z) * 0.5;

  00a3b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _wpos1$[ebp+8]
  00a40	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _wpos2$[ebp+8]
  00a45	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a49	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00a51	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a55	f3 0f 11 45 c4	 movss	 DWORD PTR _mid_pos$[ebp+8], xmm0

; 741  : 
; 742  : 			map_draw_insert_waypoint_icon (obj, wp1, &mid_pos, side);

  00a5a	8b 45 a4	 mov	 eax, DWORD PTR _side$[ebp]
  00a5d	50		 push	 eax
  00a5e	8d 4d bc	 lea	 ecx, DWORD PTR _mid_pos$[ebp]
  00a61	51		 push	 ecx
  00a62	8b 55 fc	 mov	 edx, DWORD PTR _wp1$[ebp]
  00a65	52		 push	 edx
  00a66	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00a69	50		 push	 eax
  00a6a	e8 00 00 00 00	 call	 ?map_draw_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@H@Z ; map_draw_insert_waypoint_icon

; 743  : 
; 744  : 			wp1 = wp2;

  00a6f	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  00a72	89 45 fc	 mov	 DWORD PTR _wp1$[ebp], eax

; 745  : 
; 746  : 			wp2 = get_local_entity_child_succ (wp2, LIST_TYPE_WAYPOINT);

  00a75	83 7d f8 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  00a79	74 0d		 je	 SHORT $LN86@draw_task_
  00a7b	8b 45 f8	 mov	 eax, DWORD PTR _wp2$[ebp]
  00a7e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a80	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv471[ebp], ecx
  00a86	eb 27		 jmp	 SHORT $LN87@draw_task_
$LN86@draw_task_:
  00a88	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00a8e	81 c2 82 00 00
	00		 add	 edx, 130		; 00000082H
  00a94	52		 push	 edx
  00a95	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a9f	50		 push	 eax
  00aa0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aa5	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv471[ebp], 0
$LN87@draw_task_:
  00aaf	b9 01 00 00 00	 mov	 ecx, 1
  00ab4	85 c9		 test	 ecx, ecx
  00ab6	74 0c		 je	 SHORT $LN88@draw_task_
  00ab8	c7 85 48 ff ff
	ff 2c 00 00 00	 mov	 DWORD PTR tv479[ebp], 44 ; 0000002cH
  00ac2	eb 27		 jmp	 SHORT $LN89@draw_task_
$LN88@draw_task_:
  00ac4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00aca	81 c2 82 00 00
	00		 add	 edx, 130		; 00000082H
  00ad0	52		 push	 edx
  00ad1	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ad6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00adb	50		 push	 eax
  00adc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ae1	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv479[ebp], 0
$LN89@draw_task_:
  00aeb	6a 2c		 push	 44			; 0000002cH
  00aed	8b 4d f8	 mov	 ecx, DWORD PTR _wp2$[ebp]
  00af0	51		 push	 ecx
  00af1	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv471[ebp], 180
  00afb	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv479[ebp]
  00b01	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b08	ff d1		 call	 ecx
  00b0a	89 45 f8	 mov	 DWORD PTR _wp2$[ebp], eax

; 747  : 		}

  00b0d	e9 bf fb ff ff	 jmp	 $LN4@draw_task_
$LN5@draw_task_:

; 748  : 
; 749  : 		//
; 750  : 		// Draw Last Icon
; 751  : 		//
; 752  : 
; 753  : 		icon = get_local_entity_int_value (wp1, INT_TYPE_MAP_ICON);

  00b12	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00b16	74 0d		 je	 SHORT $LN90@draw_task_
  00b18	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00b1b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b1d	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv523[ebp], ecx
  00b23	eb 27		 jmp	 SHORT $LN91@draw_task_
$LN90@draw_task_:
  00b25	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00b2b	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  00b31	52		 push	 edx
  00b32	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b37	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b3c	50		 push	 eax
  00b3d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b42	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv523[ebp], 0
$LN91@draw_task_:
  00b4c	b9 01 00 00 00	 mov	 ecx, 1
  00b51	85 c9		 test	 ecx, ecx
  00b53	74 0c		 je	 SHORT $LN92@draw_task_
  00b55	c7 85 48 ff ff
	ff 82 00 00 00	 mov	 DWORD PTR tv531[ebp], 130 ; 00000082H
  00b5f	eb 27		 jmp	 SHORT $LN93@draw_task_
$LN92@draw_task_:
  00b61	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00b67	81 c2 89 00 00
	00		 add	 edx, 137		; 00000089H
  00b6d	52		 push	 edx
  00b6e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b73	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b78	50		 push	 eax
  00b79	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b7e	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv531[ebp], 0
$LN93@draw_task_:
  00b88	68 82 00 00 00	 push	 130			; 00000082H
  00b8d	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00b90	51		 push	 ecx
  00b91	69 95 4c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv523[ebp], 1116
  00b9b	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv531[ebp]
  00ba1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00ba8	ff d1		 call	 ecx
  00baa	89 45 a8	 mov	 DWORD PTR _icon$[ebp], eax

; 754  : 
; 755  : 		ASSERT (icon != MAP_ICON_NONE);

  00bad	83 7d a8 00	 cmp	 DWORD PTR _icon$[ebp], 0
  00bb1	75 1a		 jne	 SHORT $LN19@draw_task_
  00bb3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00bb8	05 8b 00 00 00	 add	 eax, 139		; 0000008bH
  00bbd	50		 push	 eax
  00bbe	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bc3	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IFNPFNGG@icon?5?$CB?$DN?5MAP_ICON_NONE@
  00bc8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@draw_task_:

; 756  : 
; 757  : 		map_draw_entity_icon (obj, wp1, &wpos2, icon, side, ICON_RESOLUTION_SCALE);

  00bcd	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  00bd5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  00bdd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00be1	51		 push	 ecx
  00be2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00be7	8b 45 a4	 mov	 eax, DWORD PTR _side$[ebp]
  00bea	50		 push	 eax
  00beb	8b 4d a8	 mov	 ecx, DWORD PTR _icon$[ebp]
  00bee	51		 push	 ecx
  00bef	8d 55 e0	 lea	 edx, DWORD PTR _wpos2$[ebp]
  00bf2	52		 push	 edx
  00bf3	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00bf6	50		 push	 eax
  00bf7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00bfa	51		 push	 ecx
  00bfb	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon

; 758  : 
; 759  : 		sprintf (tag, "%c", get_local_entity_char_value (wp1, CHAR_TYPE_TAG));

  00c00	83 7d fc 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00c04	74 0d		 je	 SHORT $LN94@draw_task_
  00c06	8b 45 fc	 mov	 eax, DWORD PTR _wp1$[ebp]
  00c09	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c0b	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv559[ebp], ecx
  00c11	eb 27		 jmp	 SHORT $LN95@draw_task_
$LN94@draw_task_:
  00c13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00c19	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  00c1f	52		 push	 edx
  00c20	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c25	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c2a	50		 push	 eax
  00c2b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c30	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv559[ebp], 0
$LN95@draw_task_:
  00c3a	b9 01 00 00 00	 mov	 ecx, 1
  00c3f	85 c9		 test	 ecx, ecx
  00c41	74 0c		 je	 SHORT $LN96@draw_task_
  00c43	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv567[ebp], 0
  00c4d	eb 27		 jmp	 SHORT $LN97@draw_task_
$LN96@draw_task_:
  00c4f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00c55	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  00c5b	52		 push	 edx
  00c5c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c61	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_char_type_message@@3PBDB ; overload_invalid_char_type_message
  00c66	50		 push	 eax
  00c67	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c6c	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv567[ebp], 0
$LN97@draw_task_:
  00c76	6a 00		 push	 0
  00c78	8b 4d fc	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00c7b	51		 push	 ecx
  00c7c	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv567[ebp]
  00c82	c1 e2 02	 shl	 edx, 2
  00c85	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv559[ebp]
  00c8b	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_char_value@@3PAY01P6GDPAUENTITY@@W4CHAR_TYPES@@@ZA[edx+eax*8]
  00c92	ff d1		 call	 ecx
  00c94	0f b6 d0	 movzx	 edx, al
  00c97	52		 push	 edx
  00c98	68 00 00 00 00	 push	 OFFSET ??_C@_02HAOIJKIC@?$CFc@
  00c9d	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  00ca0	50		 push	 eax
  00ca1	e8 00 00 00 00	 call	 _sprintf
  00ca6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 760  : 
; 761  : 		font_width = ui_get_string_length (tag);

  00ca9	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  00cac	50		 push	 eax
  00cad	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00cb2	d9 5d b8	 fstp	 DWORD PTR _font_width$[ebp]

; 762  : 
; 763  : 		ui_display_text (tag, spos2.x - (font_width * 0.5), spos2.z - (font_height * 0.5));

  00cb5	f3 0f 5a 45 d0	 cvtss2sd xmm0, DWORD PTR _spos2$[ebp+8]
  00cba	f3 0f 5a 4d b4	 cvtss2sd xmm1, DWORD PTR _font_height$[ebp]
  00cbf	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00cc7	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00ccb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ccf	51		 push	 ecx
  00cd0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cd5	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _spos2$[ebp]
  00cda	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _font_width$[ebp]
  00cdf	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00ce7	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00ceb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cef	51		 push	 ecx
  00cf0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf5	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  00cf8	50		 push	 eax
  00cf9	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00cfe	dd d8		 fstp	 ST(0)

; 764  : 
; 765  : 		//
; 766  : 		// if USER task show actual route flown (via current_flight_dynamics)
; 767  : 		//
; 768  : 
; 769  : 		if (get_player_task (NULL) == en)

  00d00	6a 00		 push	 0
  00d02	e8 00 00 00 00	 call	 ?get_player_task@@YGPAUENTITY@@PAU1@@Z ; get_player_task
  00d07	3b 45 0c	 cmp	 eax, DWORD PTR _en$[ebp]
  00d0a	0f 85 5f 01 00
	00		 jne	 $LN7@draw_task_

; 770  : 		{
; 771  : 
; 772  : 			if (get_current_flight_dynamics ())

  00d10	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00d17	0f 84 52 01 00
	00		 je	 $LN7@draw_task_

; 773  : 			{
; 774  : 
; 775  : 				flight_path_data
; 776  : 					*flight_path;
; 777  : 
; 778  : 				flight_path = get_current_flight_dynamics_flight_path ();

  00d1d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d22	8b 88 10 25 00
	00		 mov	 ecx, DWORD PTR [eax+9488]
  00d28	89 4d a0	 mov	 DWORD PTR _flight_path$5[ebp], ecx

; 779  : 
; 780  : 				if (flight_path)

  00d2b	83 7d a0 00	 cmp	 DWORD PTR _flight_path$5[ebp], 0
  00d2f	0f 84 3a 01 00
	00		 je	 $LN7@draw_task_

; 781  : 				{
; 782  : 
; 783  : 					wpos1.x = flight_path->x;

  00d35	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00d38	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00d3d	f3 0f 11 45 ec	 movss	 DWORD PTR _wpos1$[ebp], xmm0

; 784  : 					wpos1.y = 0.0;

  00d42	0f 57 c0	 xorps	 xmm0, xmm0
  00d45	f3 0f 11 45 f0	 movss	 DWORD PTR _wpos1$[ebp+4], xmm0

; 785  : 					wpos1.z = flight_path->z;

  00d4a	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00d4d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00d52	f3 0f 11 45 f4	 movss	 DWORD PTR _wpos1$[ebp+8], xmm0

; 786  : 
; 787  : 					map_get_screen_coords_from_world (obj, &wpos1, &spos1);

  00d57	8d 45 d4	 lea	 eax, DWORD PTR _spos1$[ebp]
  00d5a	50		 push	 eax
  00d5b	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  00d5e	51		 push	 ecx
  00d5f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00d62	52		 push	 edx
  00d63	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 788  : 
; 789  : 					flight_path = flight_path->next;

  00d68	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00d6b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00d6e	89 4d a0	 mov	 DWORD PTR _flight_path$5[ebp], ecx
$LN6@draw_task_:

; 790  : 
; 791  : 					while (flight_path)

  00d71	83 7d a0 00	 cmp	 DWORD PTR _flight_path$5[ebp], 0
  00d75	0f 84 f4 00 00
	00		 je	 $LN7@draw_task_

; 792  : 					{
; 793  : 
; 794  : 						wpos2.x = flight_path->x;

  00d7b	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00d7e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00d83	f3 0f 11 45 e0	 movss	 DWORD PTR _wpos2$[ebp], xmm0

; 795  : 						wpos2.y = 0.0;

  00d88	0f 57 c0	 xorps	 xmm0, xmm0
  00d8b	f3 0f 11 45 e4	 movss	 DWORD PTR _wpos2$[ebp+4], xmm0

; 796  : 						wpos2.z = flight_path->z;

  00d90	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00d93	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00d98	f3 0f 11 45 e8	 movss	 DWORD PTR _wpos2$[ebp+8], xmm0

; 797  : 
; 798  : 						map_get_screen_coords_from_world (obj, &wpos2, &spos2);

  00d9d	8d 45 c8	 lea	 eax, DWORD PTR _spos2$[ebp]
  00da0	50		 push	 eax
  00da1	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  00da4	51		 push	 ecx
  00da5	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00da8	52		 push	 edx
  00da9	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 799  : 
; 800  : 						switch (flight_path->action)

  00dae	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00db1	8b 08		 mov	 ecx, DWORD PTR [eax]
  00db3	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv610[ebp], ecx
  00db9	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR tv610[ebp], 0
  00dc0	74 0b		 je	 SHORT $LN23@draw_task_
  00dc2	83 bd 4c ff ff
	ff 01		 cmp	 DWORD PTR tv610[ebp], 1
  00dc9	74 3b		 je	 SHORT $LN24@draw_task_
  00dcb	eb 70		 jmp	 SHORT $LN8@draw_task_
$LN23@draw_task_:

; 801  : 						{
; 802  : 
; 803  : 							case FLIGHT_PATH_ACTION_USER_NAVIGATING:
; 804  : 							{
; 805  : 
; 806  : 								draw_line (spos1.x, spos1.z, spos2.x, spos2.z, sys_col_red);

  00dcd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00dd2	50		 push	 eax
  00dd3	51		 push	 ecx
  00dd4	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _spos2$[ebp+8]
  00dd9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dde	51		 push	 ecx
  00ddf	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _spos2$[ebp]
  00de4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00de9	51		 push	 ecx
  00dea	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  00def	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00df4	51		 push	 ecx
  00df5	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  00dfa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dff	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 807  : 
; 808  : 								break;

  00e04	eb 37		 jmp	 SHORT $LN8@draw_task_
$LN24@draw_task_:

; 809  : 							}
; 810  : 
; 811  : 							case FLIGHT_PATH_ACTION_AUTOPILOT_NAVIGATING:
; 812  : 							{
; 813  : 
; 814  : 								draw_line (spos1.x, spos1.z, spos2.x, spos2.z, sys_col_green);

  00e06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_green@@3UREAL_COLOUR@@A ; sys_col_green
  00e0b	50		 push	 eax
  00e0c	51		 push	 ecx
  00e0d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _spos2$[ebp+8]
  00e12	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e17	51		 push	 ecx
  00e18	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _spos2$[ebp]
  00e1d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e22	51		 push	 ecx
  00e23	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  00e28	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e2d	51		 push	 ecx
  00e2e	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  00e33	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e38	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN8@draw_task_:

; 815  : 
; 816  : 								break;
; 817  : 							}
; 818  : 						}
; 819  : 
; 820  : 						wpos1 = wpos2;

  00e3d	8b 45 e0	 mov	 eax, DWORD PTR _wpos2$[ebp]
  00e40	89 45 ec	 mov	 DWORD PTR _wpos1$[ebp], eax
  00e43	8b 4d e4	 mov	 ecx, DWORD PTR _wpos2$[ebp+4]
  00e46	89 4d f0	 mov	 DWORD PTR _wpos1$[ebp+4], ecx
  00e49	8b 55 e8	 mov	 edx, DWORD PTR _wpos2$[ebp+8]
  00e4c	89 55 f4	 mov	 DWORD PTR _wpos1$[ebp+8], edx

; 821  : 						spos1 = spos2;

  00e4f	8b 45 c8	 mov	 eax, DWORD PTR _spos2$[ebp]
  00e52	89 45 d4	 mov	 DWORD PTR _spos1$[ebp], eax
  00e55	8b 4d cc	 mov	 ecx, DWORD PTR _spos2$[ebp+4]
  00e58	89 4d d8	 mov	 DWORD PTR _spos1$[ebp+4], ecx
  00e5b	8b 55 d0	 mov	 edx, DWORD PTR _spos2$[ebp+8]
  00e5e	89 55 dc	 mov	 DWORD PTR _spos1$[ebp+8], edx

; 822  : 
; 823  : 						flight_path = flight_path->next;

  00e61	8b 45 a0	 mov	 eax, DWORD PTR _flight_path$5[ebp]
  00e64	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00e67	89 4d a0	 mov	 DWORD PTR _flight_path$5[ebp], ecx

; 824  : 					}

  00e6a	e9 02 ff ff ff	 jmp	 $LN6@draw_task_
$LN7@draw_task_:

; 825  : 				}
; 826  : 			}
; 827  : 		}
; 828  : 	}
; 829  : 	else

  00e6f	e9 0a 03 00 00	 jmp	 $LN26@draw_task_
$LN16@draw_task_:

; 830  : 	{
; 831  : 		route_node
; 832  : 			*route,
; 833  : 			*temp_route;
; 834  : 
; 835  : 		entity
; 836  : 			*target;
; 837  : 
; 838  : 		vec3d
; 839  : 			*target_pos;
; 840  : 
; 841  : 		//
; 842  : 		// Could be coded with a static ptr for "route" so the route is only generated with the task "en" changes...
; 843  : 		//
; 844  : 
; 845  : 		route = temp_create_generic_waypoint_route (NULL, en, (entity *) get_local_entity_ptr_value (en, PTR_TYPE_RETURN_KEYSITE), NULL, 0);

  00e74	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00e78	74 0d		 je	 SHORT $LN98@draw_task_
  00e7a	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  00e7d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e7f	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv633[ebp], ecx
  00e85	eb 27		 jmp	 SHORT $LN99@draw_task_
$LN98@draw_task_:
  00e87	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00e8d	81 c2 e5 00 00
	00		 add	 edx, 229		; 000000e5H
  00e93	52		 push	 edx
  00e94	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e9e	50		 push	 eax
  00e9f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ea4	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv633[ebp], 0
$LN99@draw_task_:
  00eae	b9 01 00 00 00	 mov	 ecx, 1
  00eb3	85 c9		 test	 ecx, ecx
  00eb5	74 0c		 je	 SHORT $LN100@draw_task_
  00eb7	c7 85 48 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv641[ebp], 8
  00ec1	eb 27		 jmp	 SHORT $LN101@draw_task_
$LN100@draw_task_:
  00ec3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  00ec9	81 c2 e5 00 00
	00		 add	 edx, 229		; 000000e5H
  00ecf	52		 push	 edx
  00ed0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00eda	50		 push	 eax
  00edb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ee0	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv641[ebp], 0
$LN101@draw_task_:
  00eea	6a 00		 push	 0
  00eec	6a 00		 push	 0
  00eee	6a 08		 push	 8
  00ef0	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  00ef3	51		 push	 ecx
  00ef4	6b 95 4c ff ff
	ff 50		 imul	 edx, DWORD PTR tv633[ebp], 80
  00efb	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv641[ebp]
  00f01	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00f08	ff d1		 call	 ecx
  00f0a	50		 push	 eax
  00f0b	8b 55 0c	 mov	 edx, DWORD PTR _en$[ebp]
  00f0e	52		 push	 edx
  00f0f	6a 00		 push	 0
  00f11	e8 00 00 00 00	 call	 ?temp_create_generic_waypoint_route@@YGPAUROUTE_NODE@@PAUENTITY@@00PAIH@Z ; temp_create_generic_waypoint_route
  00f16	89 45 9c	 mov	 DWORD PTR _route$4[ebp], eax

; 846  : 
; 847  : 		temp_route = route;

  00f19	8b 45 9c	 mov	 eax, DWORD PTR _route$4[ebp]
  00f1c	89 45 98	 mov	 DWORD PTR _temp_route$3[ebp], eax

; 848  : 
; 849  : 		wpos1.x = temp_route->position.x;

  00f1f	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f22	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00f27	f3 0f 11 45 ec	 movss	 DWORD PTR _wpos1$[ebp], xmm0

; 850  : 		wpos1.y = temp_route->position.y;

  00f2c	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f2f	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00f34	f3 0f 11 45 f0	 movss	 DWORD PTR _wpos1$[ebp+4], xmm0

; 851  : 		wpos1.z = temp_route->position.z;

  00f39	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f3c	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00f41	f3 0f 11 45 f4	 movss	 DWORD PTR _wpos1$[ebp+8], xmm0

; 852  : 
; 853  : 		map_get_screen_coords_from_world (obj, &wpos1, &spos1);

  00f46	8d 45 d4	 lea	 eax, DWORD PTR _spos1$[ebp]
  00f49	50		 push	 eax
  00f4a	8d 4d ec	 lea	 ecx, DWORD PTR _wpos1$[ebp]
  00f4d	51		 push	 ecx
  00f4e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00f51	52		 push	 edx
  00f52	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 854  : 
; 855  : 		temp_route = temp_route->next;

  00f57	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f5a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00f5d	89 4d 98	 mov	 DWORD PTR _temp_route$3[ebp], ecx

; 856  : 
; 857  : 		reset_waypoint_tags ();

  00f60	e8 00 00 00 00	 call	 ?reset_waypoint_tags@@YGXXZ ; reset_waypoint_tags
$LN10@draw_task_:

; 858  : 
; 859  : 		while (temp_route)

  00f65	83 7d 98 00	 cmp	 DWORD PTR _temp_route$3[ebp], 0
  00f69	0f 84 18 01 00
	00		 je	 $LN11@draw_task_

; 860  : 		{
; 861  : 
; 862  : 			wpos2.x = temp_route->position.x;

  00f6f	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f72	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00f77	f3 0f 11 45 e0	 movss	 DWORD PTR _wpos2$[ebp], xmm0

; 863  : 			wpos2.y = temp_route->position.y;

  00f7c	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f7f	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00f84	f3 0f 11 45 e4	 movss	 DWORD PTR _wpos2$[ebp+4], xmm0

; 864  : 			wpos2.z = temp_route->position.z;

  00f89	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00f8c	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00f91	f3 0f 11 45 e8	 movss	 DWORD PTR _wpos2$[ebp+8], xmm0

; 865  : 
; 866  : 			map_get_screen_coords_from_world (obj, &wpos2, &spos2);

  00f96	8d 45 c8	 lea	 eax, DWORD PTR _spos2$[ebp]
  00f99	50		 push	 eax
  00f9a	8d 4d e0	 lea	 ecx, DWORD PTR _wpos2$[ebp]
  00f9d	51		 push	 ecx
  00f9e	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00fa1	52		 push	 edx
  00fa2	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 867  : 
; 868  : 			sprintf (tag, "%c", get_waypoint_sub_type_tag (temp_route->type));

  00fa7	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  00faa	8b 08		 mov	 ecx, DWORD PTR [eax]
  00fac	51		 push	 ecx
  00fad	e8 00 00 00 00	 call	 ?get_waypoint_sub_type_tag@@YGDH@Z ; get_waypoint_sub_type_tag
  00fb2	0f b6 d0	 movzx	 edx, al
  00fb5	52		 push	 edx
  00fb6	68 00 00 00 00	 push	 OFFSET ??_C@_02HAOIJKIC@?$CFc@
  00fbb	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  00fbe	50		 push	 eax
  00fbf	e8 00 00 00 00	 call	 _sprintf
  00fc4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 869  : 
; 870  : 			font_width = ui_get_string_length (tag);

  00fc7	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  00fca	50		 push	 eax
  00fcb	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  00fd0	d9 5d b8	 fstp	 DWORD PTR _font_width$[ebp]

; 871  : 
; 872  : 			ui_display_text (tag, spos1.x - (font_width * 0.5), spos1.z - (font_height * 0.5));

  00fd3	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _spos1$[ebp+8]
  00fd8	f3 0f 5a 4d b4	 cvtss2sd xmm1, DWORD PTR _font_height$[ebp]
  00fdd	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00fe5	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00fe9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00fed	51		 push	 ecx
  00fee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ff3	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _spos1$[ebp]
  00ff8	f3 0f 5a 4d b8	 cvtss2sd xmm1, DWORD PTR _font_width$[ebp]
  00ffd	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  01005	f2 0f 5c c1	 subsd	 xmm0, xmm1
  01009	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0100d	51		 push	 ecx
  0100e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01013	8d 45 ac	 lea	 eax, DWORD PTR _tag$[ebp]
  01016	50		 push	 eax
  01017	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0101c	dd d8		 fstp	 ST(0)

; 873  : 
; 874  : 			draw_line (spos1.x, spos1.z, spos2.x, spos2.z, ui_ingame_dead_text_colour);

  0101e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_ingame_dead_text_colour@@3UREAL_COLOUR@@A ; ui_ingame_dead_text_colour
  01023	50		 push	 eax
  01024	51		 push	 ecx
  01025	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _spos2$[ebp+8]
  0102a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0102f	51		 push	 ecx
  01030	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _spos2$[ebp]
  01035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0103a	51		 push	 ecx
  0103b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _spos1$[ebp+8]
  01040	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01045	51		 push	 ecx
  01046	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _spos1$[ebp]
  0104b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01050	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 875  : 
; 876  : 			wpos1 = wpos2;

  01055	8b 45 e0	 mov	 eax, DWORD PTR _wpos2$[ebp]
  01058	89 45 ec	 mov	 DWORD PTR _wpos1$[ebp], eax
  0105b	8b 4d e4	 mov	 ecx, DWORD PTR _wpos2$[ebp+4]
  0105e	89 4d f0	 mov	 DWORD PTR _wpos1$[ebp+4], ecx
  01061	8b 55 e8	 mov	 edx, DWORD PTR _wpos2$[ebp+8]
  01064	89 55 f4	 mov	 DWORD PTR _wpos1$[ebp+8], edx

; 877  : 			spos1 = spos2;

  01067	8b 45 c8	 mov	 eax, DWORD PTR _spos2$[ebp]
  0106a	89 45 d4	 mov	 DWORD PTR _spos1$[ebp], eax
  0106d	8b 4d cc	 mov	 ecx, DWORD PTR _spos2$[ebp+4]
  01070	89 4d d8	 mov	 DWORD PTR _spos1$[ebp+4], ecx
  01073	8b 55 d0	 mov	 edx, DWORD PTR _spos2$[ebp+8]
  01076	89 55 dc	 mov	 DWORD PTR _spos1$[ebp+8], edx

; 878  : 
; 879  : 			temp_route = temp_route->next;

  01079	8b 45 98	 mov	 eax, DWORD PTR _temp_route$3[ebp]
  0107c	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0107f	89 4d 98	 mov	 DWORD PTR _temp_route$3[ebp], ecx

; 880  : 		}

  01082	e9 de fe ff ff	 jmp	 $LN10@draw_task_
$LN11@draw_task_:

; 881  : 
; 882  : 		destroy_fast_route (route);

  01087	8b 45 9c	 mov	 eax, DWORD PTR _route$4[ebp]
  0108a	50		 push	 eax
  0108b	e8 00 00 00 00	 call	 ?destroy_fast_route@@YGXPAUROUTE_NODE@@@Z ; destroy_fast_route

; 883  : 
; 884  : 		target = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  01090	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  01094	74 0d		 je	 SHORT $LN102@draw_task_
  01096	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  01099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0109b	89 8d 4c ff ff
	ff		 mov	 DWORD PTR tv705[ebp], ecx
  010a1	eb 27		 jmp	 SHORT $LN103@draw_task_
$LN102@draw_task_:
  010a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  010a9	81 c2 0c 01 00
	00		 add	 edx, 268		; 0000010cH
  010af	52		 push	 edx
  010b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  010b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010ba	50		 push	 eax
  010bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010c0	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv705[ebp], 0
$LN103@draw_task_:
  010ca	b9 01 00 00 00	 mov	 ecx, 1
  010cf	85 c9		 test	 ecx, ecx
  010d1	74 0c		 je	 SHORT $LN104@draw_task_
  010d3	c7 85 48 ff ff
	ff 27 00 00 00	 mov	 DWORD PTR tv713[ebp], 39 ; 00000027H
  010dd	eb 27		 jmp	 SHORT $LN105@draw_task_
$LN104@draw_task_:
  010df	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z@4JA
  010e5	81 c2 0c 01 00
	00		 add	 edx, 268		; 0000010cH
  010eb	52		 push	 edx
  010ec	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  010f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  010f6	50		 push	 eax
  010f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010fc	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv713[ebp], 0
$LN105@draw_task_:
  01106	6a 27		 push	 39			; 00000027H
  01108	8b 4d 0c	 mov	 ecx, DWORD PTR _en$[ebp]
  0110b	51		 push	 ecx
  0110c	69 95 4c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv705[ebp], 180
  01116	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv713[ebp]
  0111c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01123	ff d1		 call	 ecx
  01125	89 45 94	 mov	 DWORD PTR _target$2[ebp], eax

; 885  : 
; 886  : 		if (target)

  01128	83 7d 94 00	 cmp	 DWORD PTR _target$2[ebp], 0
  0112c	74 50		 je	 SHORT $LN26@draw_task_

; 887  : 		{
; 888  : 			target_pos = get_last_known_position(target);

  0112e	8b 45 94	 mov	 eax, DWORD PTR _target$2[ebp]
  01131	50		 push	 eax
  01132	e8 00 00 00 00	 call	 ?get_last_known_position@@YGPAUVEC3D@@PAUENTITY@@@Z ; get_last_known_position
  01137	89 45 90	 mov	 DWORD PTR _target_pos$1[ebp], eax

; 889  : 
; 890  : 			if (target_pos)

  0113a	83 7d 90 00	 cmp	 DWORD PTR _target_pos$1[ebp], 0
  0113e	74 3e		 je	 SHORT $LN26@draw_task_

; 891  : 			{
; 892  : 				map_get_screen_coords_from_world (obj, target_pos, &spos1);

  01140	8d 45 d4	 lea	 eax, DWORD PTR _spos1$[ebp]
  01143	50		 push	 eax
  01144	8b 4d 90	 mov	 ecx, DWORD PTR _target_pos$1[ebp]
  01147	51		 push	 ecx
  01148	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0114b	52		 push	 edx
  0114c	e8 00 00 00 00	 call	 ?map_get_screen_coords_from_world@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_screen_coords_from_world

; 893  : 
; 894  : 				map_draw_entity_icon (obj, NULL, target_pos, MAP_ICON_WAYPOINT_TARGET_TEMPORARY, ENTITY_SIDE_NEUTRAL, ICON_RESOLUTION_SCALE);

  01151	f2 0f 2a 05 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?application_video_width@@3HA ; application_video_width
  01159	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4084000000000000
  01161	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01165	51		 push	 ecx
  01166	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0116b	6a 00		 push	 0
  0116d	6a 23		 push	 35			; 00000023H
  0116f	8b 45 90	 mov	 eax, DWORD PTR _target_pos$1[ebp]
  01172	50		 push	 eax
  01173	6a 00		 push	 0
  01175	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  01178	51		 push	 ecx
  01179	e8 00 00 00 00	 call	 ?map_draw_entity_icon@@YGXPAUUI_OBJECT@@PAUENTITY@@PAUVEC3D@@HHM@Z ; map_draw_entity_icon
$LN26@draw_task_:
$LN1@draw_task_:

; 895  : 			}
; 896  : 		}
; 897  : 	}
; 898  : }

  0117e	5f		 pop	 edi
  0117f	5e		 pop	 esi
  01180	5b		 pop	 ebx
  01181	8b e5		 mov	 esp, ebp
  01183	5d		 pop	 ebp
  01184	c2 08 00	 ret	 8
?draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ENDP ; draw_task_waypoint_routes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv173 = -80						; size = 4
tv150 = -80						; size = 4
tv129 = -80						; size = 4
tv165 = -76						; size = 4
tv142 = -76						; size = 4
tv90 = -76						; size = 4
tv81 = -76						; size = 4
_map_dimensions$ = -8					; size = 4
_en$ = -4						; size = 4
_obj$ = 8						; size = 4
_side$ = 12						; size = 4
?map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z PROC ; map_draw_waypoint_routes, COMDAT

; 559  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 560  : 	entity
; 561  : 		*en;
; 562  : 
; 563  : 	map_dimension_type
; 564  : 		*map_dimensions;
; 565  : 
; 566  : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 567  : 
; 568  : 	ASSERT (map_dimensions);

  0001e	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@map_draw_w
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00029	83 c0 09	 add	 eax, 9
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_draw_w:

; 569  : 
; 570  : 	//
; 571  : 	// Draw waypoint routes dependent of subject of the map
; 572  : 	//
; 573  : 
; 574  : 	en = map_dimensions->subject_entity;

  0003c	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  00042	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 575  : 
; 576  : 	if (en)

  00045	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00049	0f 84 4e 01 00
	00		 je	 $LN3@map_draw_w

; 577  : 	{
; 578  : 		//
; 579  : 		// If a TASK - draw waypoint route for that task only
; 580  : 		//
; 581  : 
; 582  : 		if (get_local_entity_type (en) == ENTITY_TYPE_TASK)

  0004f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00053	74 0a		 je	 SHORT $LN8@map_draw_w
  00055	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	89 4d b4	 mov	 DWORD PTR tv81[ebp], ecx
  0005d	eb 1d		 jmp	 SHORT $LN9@map_draw_w
$LN8@map_draw_w:
  0005f	68 46 02 00 00	 push	 582			; 00000246H
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006f	52		 push	 edx
  00070	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00075	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN9@map_draw_w:
  0007c	83 7d b4 22	 cmp	 DWORD PTR tv81[ebp], 34	; 00000022H
  00080	75 12		 jne	 SHORT $LN4@map_draw_w

; 583  : 		{
; 584  : 			draw_task_waypoint_routes (obj, en);

  00082	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00085	50		 push	 eax
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ?draw_task_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; draw_task_waypoint_routes

; 585  : 
; 586  : 			return;

  0008f	e9 a5 01 00 00	 jmp	 $LN1@map_draw_w
$LN4@map_draw_w:

; 587  : 		}
; 588  : 
; 589  : 		//
; 590  : 		// If a MOBILE - draw waypoint route for that group only
; 591  : 		//
; 592  : 
; 593  : 		if (get_local_entity_int_value (en, INT_TYPE_IDENTIFY_MOBILE))

  00094	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00098	74 0a		 je	 SHORT $LN10@map_draw_w
  0009a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  000a2	eb 1d		 jmp	 SHORT $LN11@map_draw_w
$LN10@map_draw_w:
  000a4	68 51 02 00 00	 push	 593			; 00000251H
  000a9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ba	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN11@map_draw_w:
  000c1	b8 01 00 00 00	 mov	 eax, 1
  000c6	85 c0		 test	 eax, eax
  000c8	74 09		 je	 SHORT $LN12@map_draw_w
  000ca	c7 45 b0 5d 00
	00 00		 mov	 DWORD PTR tv129[ebp], 93 ; 0000005dH
  000d1	eb 1d		 jmp	 SHORT $LN13@map_draw_w
$LN12@map_draw_w:
  000d3	68 51 02 00 00	 push	 593			; 00000251H
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN13@map_draw_w:
  000f0	6a 5d		 push	 93			; 0000005dH
  000f2	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  000f5	52		 push	 edx
  000f6	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 1116
  000fd	8b 4d b0	 mov	 ecx, DWORD PTR tv129[ebp]
  00100	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00107	ff d2		 call	 edx
  00109	85 c0		 test	 eax, eax
  0010b	0f 84 8c 00 00
	00		 je	 $LN3@map_draw_w

; 594  : 		{
; 595  : 			draw_group_waypoint_routes (obj, get_local_entity_parent (en, LIST_TYPE_MEMBER));

  00111	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00115	74 0a		 je	 SHORT $LN14@map_draw_w
  00117	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0011a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011c	89 4d b4	 mov	 DWORD PTR tv142[ebp], ecx
  0011f	eb 21		 jmp	 SHORT $LN15@map_draw_w
$LN14@map_draw_w:
  00121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  00127	83 c2 24	 add	 edx, 36			; 00000024H
  0012a	52		 push	 edx
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN15@map_draw_w:
  00142	b9 01 00 00 00	 mov	 ecx, 1
  00147	85 c9		 test	 ecx, ecx
  00149	74 09		 je	 SHORT $LN16@map_draw_w
  0014b	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv150[ebp], 25 ; 00000019H
  00152	eb 21		 jmp	 SHORT $LN17@map_draw_w
$LN16@map_draw_w:
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  0015a	83 c2 24	 add	 edx, 36			; 00000024H
  0015d	52		 push	 edx
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN17@map_draw_w:
  00175	6a 19		 push	 25			; 00000019H
  00177	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  0017a	51		 push	 ecx
  0017b	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 180
  00182	8b 45 b0	 mov	 eax, DWORD PTR tv150[ebp]
  00185	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0018c	ff d1		 call	 ecx
  0018e	50		 push	 eax
  0018f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00192	52		 push	 edx
  00193	e8 00 00 00 00	 call	 ?draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; draw_group_waypoint_routes

; 596  : 
; 597  : 			return;

  00198	e9 9c 00 00 00	 jmp	 $LN1@map_draw_w
$LN3@map_draw_w:

; 598  : 		}
; 599  : 	}
; 600  : 
; 601  : 	//
; 602  : 	// Default - Draw Player Waypoint Route
; 603  : 	//
; 604  : 
; 605  : 	if (get_gunship_entity ())

  0019d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001a4	0f 84 8f 00 00
	00		 je	 $LN1@map_draw_w

; 606  : 	{
; 607  : 		draw_group_waypoint_routes (obj, get_local_entity_parent (get_gunship_entity (), LIST_TYPE_MEMBER));

  001aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001b1	74 0c		 je	 SHORT $LN18@map_draw_w
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ba	89 4d b4	 mov	 DWORD PTR tv165[ebp], ecx
  001bd	eb 21		 jmp	 SHORT $LN19@map_draw_w
$LN18@map_draw_w:
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001c5	83 c2 30	 add	 edx, 48			; 00000030H
  001c8	52		 push	 edx
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN19@map_draw_w:
  001e0	b9 01 00 00 00	 mov	 ecx, 1
  001e5	85 c9		 test	 ecx, ecx
  001e7	74 09		 je	 SHORT $LN20@map_draw_w
  001e9	c7 45 b0 19 00
	00 00		 mov	 DWORD PTR tv173[ebp], 25 ; 00000019H
  001f0	eb 21		 jmp	 SHORT $LN21@map_draw_w
$LN20@map_draw_w:
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z@4JA
  001f8	83 c2 30	 add	 edx, 48			; 00000030H
  001fb	52		 push	 edx
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN21@map_draw_w:
  00213	6a 19		 push	 25			; 00000019H
  00215	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0021b	51		 push	 ecx
  0021c	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv165[ebp], 180
  00223	8b 45 b0	 mov	 eax, DWORD PTR tv173[ebp]
  00226	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0022d	ff d1		 call	 ecx
  0022f	50		 push	 eax
  00230	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00233	52		 push	 edx
  00234	e8 00 00 00 00	 call	 ?draw_group_waypoint_routes@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; draw_group_waypoint_routes
$LN1@map_draw_w:

; 608  : 	}
; 609  : }

  00239	5f		 pop	 edi
  0023a	5e		 pop	 esi
  0023b	5b		 pop	 ebx
  0023c	8b e5		 mov	 esp, ebp
  0023e	5d		 pop	 ebp
  0023f	c2 08 00	 ret	 8
?map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ENDP ; map_draw_waypoint_routes
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?initialise_layer_control_objects@@YGXXZ
_TEXT	SEGMENT
_loop$ = -4						; size = 4
?initialise_layer_control_objects@@YGXXZ PROC		; initialise_layer_control_objects, COMDAT

; 1204 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1205 : 	int
; 1206 : 		loop;
; 1207 : 
; 1208 : 	for (loop = 0; loop < NUM_MAP_LAYER_CONTROLS; loop ++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@initialise:
  0001b	83 7d fc 0b	 cmp	 DWORD PTR _loop$[ebp], 11 ; 0000000bH
  0001f	7d 0b		 jge	 SHORT $LN1@initialise

; 1209 : 	{
; 1210 : 		update_layer_control_objects (loop);

  00021	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?update_layer_control_objects@@YGXH@Z ; update_layer_control_objects

; 1211 : 	}

  0002a	eb e6		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 1212 : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?initialise_layer_control_objects@@YGXXZ ENDP		; initialise_layer_control_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?update_layer_control_objects@@YGXH@Z
_TEXT	SEGMENT
_data$ = -8						; size = 4
_obj$ = -4						; size = 4
_layer$ = 8						; size = 4
?update_layer_control_objects@@YGXH@Z PROC		; update_layer_control_objects, COMDAT

; 1171 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1172 : 	ui_object
; 1173 : 		*obj;
; 1174 : 
; 1175 : 	map_dimension_type
; 1176 : 		*data;
; 1177 : 
; 1178 : 	data = map_data_list;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_data_list@@3PAUMAP_DIMENSION_TYPE@@A
  0000e	89 45 f8	 mov	 DWORD PTR _data$[ebp], eax
$LN2@update_lay:

; 1179 : 
; 1180 : 	while (data)

  00011	83 7d f8 00	 cmp	 DWORD PTR _data$[ebp], 0
  00015	74 5c		 je	 SHORT $LN1@update_lay

; 1181 : 	{
; 1182 : 		obj = data->layer_control_objects [layer];

  00017	8b 45 08	 mov	 eax, DWORD PTR _layer$[ebp]
  0001a	8b 4d f8	 mov	 ecx, DWORD PTR _data$[ebp]
  0001d	8b 54 81 18	 mov	 edx, DWORD PTR [ecx+eax*4+24]
  00021	89 55 fc	 mov	 DWORD PTR _obj$[ebp], edx

; 1183 : 
; 1184 : 		ASSERT (obj);

  00024	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00028	75 18		 jne	 SHORT $LN4@update_lay
  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_layer_control_objects@@YGXH@Z@4JA
  0002f	83 c0 0d	 add	 eax, 13			; 0000000dH
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  0003d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_lay:

; 1185 : 
; 1186 : 		if (global_layer_controls & (1 << layer))

  00042	b8 01 00 00 00	 mov	 eax, 1
  00047	8b 4d 08	 mov	 ecx, DWORD PTR _layer$[ebp]
  0004a	d3 e0		 shl	 eax, cl
  0004c	23 05 00 00 00
	00		 and	 eax, DWORD PTR ?global_layer_controls@@3HA
  00052	74 0b		 je	 SHORT $LN5@update_lay

; 1187 : 		{
; 1188 : 			set_toggle_button_on (obj);

  00054	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?set_toggle_button_on@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_on

; 1189 : 		}
; 1190 : 		else

  0005d	eb 09		 jmp	 SHORT $LN6@update_lay
$LN5@update_lay:

; 1191 : 		{
; 1192 : 			set_toggle_button_off (obj);

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?set_toggle_button_off@@YGXPAUUI_OBJECT@@@Z ; set_toggle_button_off
$LN6@update_lay:

; 1193 : 		}
; 1194 : 
; 1195 : 		data = data->next;

  00068	8b 45 f8	 mov	 eax, DWORD PTR _data$[ebp]
  0006b	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  0006e	89 4d f8	 mov	 DWORD PTR _data$[ebp], ecx

; 1196 : 	}

  00071	eb 9e		 jmp	 SHORT $LN2@update_lay
$LN1@update_lay:

; 1197 : }

  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c2 04 00	 ret	 4
?update_layer_control_objects@@YGXH@Z ENDP		; update_layer_control_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?switch_to_satellite_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv158 = -92						; size = 4
tv95 = -92						; size = 4
tv80 = -92						; size = 4
tv150 = -88						; size = 4
tv138 = -88						; size = 4
tv87 = -88						; size = 4
tv79 = -88						; size = 4
_obj$ = -20						; size = 4
_objective$ = -16					; size = 4
_en$ = -12						; size = 4
_key$ = -8						; size = 4
_map_dimensions$ = -4					; size = 4
_ev$ = 8						; size = 4
?switch_to_satellite_event@@YGXPAUEVENT@@@Z PROC	; switch_to_satellite_event, COMDAT

; 5391 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5392 : 	map_dimension_type
; 5393 : 		*map_dimensions;
; 5394 : 
; 5395 : 	entity
; 5396 : 		*key,
; 5397 : 		*en,
; 5398 : 		*objective;
; 5399 : 
; 5400 : 	ui_object
; 5401 : 			*obj;
; 5402 : 
; 5403 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 ec	 mov	 DWORD PTR _obj$[ebp], eax

; 5404 : 
; 5405 : 	if (obj)

  00011	83 7d ec 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	0f 84 14 02 00
	00		 je	 $LN1@switch_to_

; 5406 : 	{
; 5407 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  0001b	8b 45 ec	 mov	 eax, DWORD PTR _obj$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d ec	 mov	 ecx, DWORD PTR _obj$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0002b	ff d0		 call	 eax
  0002d	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 5408 : 
; 5409 : 		map_dimensions->selected_entity = NULL;

  00030	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00033	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 5410 : 
; 5411 : 		en = get_map_mouse_over_entity (map_dimensions);

  0003a	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z ; get_map_mouse_over_entity
  00043	89 45 f4	 mov	 DWORD PTR _en$[ebp], eax

; 5412 : 
; 5413 : 		key = NULL;

  00046	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _key$[ebp], 0

; 5414 : 
; 5415 : 		if (en)

  0004d	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00051	0f 84 0e 01 00
	00		 je	 $LN5@switch_to_

; 5416 : 		{
; 5417 : 			switch (get_local_entity_type (en))

  00057	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005b	74 0a		 je	 SHORT $LN12@switch_to_
  0005d	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  00060	8b 08		 mov	 ecx, DWORD PTR [eax]
  00062	89 4d a8	 mov	 DWORD PTR tv79[ebp], ecx
  00065	eb 1d		 jmp	 SHORT $LN13@switch_to_
$LN12@switch_to_:
  00067	68 29 15 00 00	 push	 5417			; 00001529H
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00077	52		 push	 edx
  00078	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN13@switch_to_:
  00084	8b 45 a8	 mov	 eax, DWORD PTR tv79[ebp]
  00087	89 45 a4	 mov	 DWORD PTR tv80[ebp], eax
  0008a	83 7d a4 0f	 cmp	 DWORD PTR tv80[ebp], 15	; 0000000fH
  0008e	74 11		 je	 SHORT $LN6@switch_to_
  00090	83 7d a4 22	 cmp	 DWORD PTR tv80[ebp], 34	; 00000022H
  00094	74 16		 je	 SHORT $LN7@switch_to_
  00096	83 7d a4 24	 cmp	 DWORD PTR tv80[ebp], 36	; 00000024H
  0009a	74 05		 je	 SHORT $LN6@switch_to_
  0009c	e9 c4 00 00 00	 jmp	 $LN5@switch_to_
$LN6@switch_to_:

; 5418 : 			{
; 5419 : 				case ENTITY_TYPE_KEYSITE:
; 5420 : 				case ENTITY_TYPE_WAYPOINT:
; 5421 : 				{
; 5422 : 					key = en;

  000a1	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  000a4	89 45 f8	 mov	 DWORD PTR _key$[ebp], eax

; 5423 : 
; 5424 : 					break;

  000a7	e9 b9 00 00 00	 jmp	 $LN5@switch_to_
$LN7@switch_to_:

; 5425 : 				}
; 5426 : 				case ENTITY_TYPE_TASK:
; 5427 : 				{
; 5428 : 					objective = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  000ac	83 7d f4 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b0	74 0a		 je	 SHORT $LN14@switch_to_
  000b2	8b 45 f4	 mov	 eax, DWORD PTR _en$[ebp]
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	89 4d a8	 mov	 DWORD PTR tv87[ebp], ecx
  000ba	eb 21		 jmp	 SHORT $LN15@switch_to_
$LN14@switch_to_:
  000bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
  000c2	83 c2 25	 add	 edx, 37			; 00000025H
  000c5	52		 push	 edx
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d6	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN15@switch_to_:
  000dd	b9 01 00 00 00	 mov	 ecx, 1
  000e2	85 c9		 test	 ecx, ecx
  000e4	74 09		 je	 SHORT $LN16@switch_to_
  000e6	c7 45 a4 27 00
	00 00		 mov	 DWORD PTR tv95[ebp], 39	; 00000027H
  000ed	eb 21		 jmp	 SHORT $LN17@switch_to_
$LN16@switch_to_:
  000ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
  000f5	83 c2 25	 add	 edx, 37			; 00000025H
  000f8	52		 push	 edx
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00109	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN17@switch_to_:
  00110	6a 27		 push	 39			; 00000027H
  00112	8b 4d f4	 mov	 ecx, DWORD PTR _en$[ebp]
  00115	51		 push	 ecx
  00116	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 180
  0011d	8b 45 a4	 mov	 eax, DWORD PTR tv95[ebp]
  00120	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00127	ff d1		 call	 ecx
  00129	89 45 f0	 mov	 DWORD PTR _objective$[ebp], eax

; 5429 : 
; 5430 : 					if (get_local_entity_type (objective) == ENTITY_TYPE_KEYSITE)

  0012c	83 7d f0 00	 cmp	 DWORD PTR _objective$[ebp], 0
  00130	74 0a		 je	 SHORT $LN18@switch_to_
  00132	8b 45 f0	 mov	 eax, DWORD PTR _objective$[ebp]
  00135	8b 08		 mov	 ecx, DWORD PTR [eax]
  00137	89 4d a8	 mov	 DWORD PTR tv138[ebp], ecx
  0013a	eb 1d		 jmp	 SHORT $LN19@switch_to_
$LN18@switch_to_:
  0013c	68 36 15 00 00	 push	 5430			; 00001536H
  00141	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00146	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0014c	52		 push	 edx
  0014d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00152	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN19@switch_to_:
  00159	83 7d a8 0f	 cmp	 DWORD PTR tv138[ebp], 15 ; 0000000fH
  0015d	75 06		 jne	 SHORT $LN5@switch_to_

; 5431 : 					{
; 5432 : 						key = objective;

  0015f	8b 45 f0	 mov	 eax, DWORD PTR _objective$[ebp]
  00162	89 45 f8	 mov	 DWORD PTR _key$[ebp], eax
$LN5@switch_to_:

; 5433 : 					}
; 5434 : 
; 5435 : 					break;
; 5436 : 				}
; 5437 : 			}
; 5438 : 		}
; 5439 : 		if (key)

  00165	83 7d f8 00	 cmp	 DWORD PTR _key$[ebp], 0
  00169	0f 84 c0 00 00
	00		 je	 $LN1@switch_to_

; 5440 : 		{
; 5441 : 			ASSERT (get_local_entity_int_value (key, INT_TYPE_VIEWABLE));

  0016f	83 7d f8 00	 cmp	 DWORD PTR _key$[ebp], 0
  00173	74 0a		 je	 SHORT $LN20@switch_to_
  00175	8b 45 f8	 mov	 eax, DWORD PTR _key$[ebp]
  00178	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017a	89 4d a8	 mov	 DWORD PTR tv150[ebp], ecx
  0017d	eb 21		 jmp	 SHORT $LN21@switch_to_
$LN20@switch_to_:
  0017f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
  00185	83 c2 32	 add	 edx, 50			; 00000032H
  00188	52		 push	 edx
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00199	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN21@switch_to_:
  001a0	b9 01 00 00 00	 mov	 ecx, 1
  001a5	85 c9		 test	 ecx, ecx
  001a7	74 09		 je	 SHORT $LN22@switch_to_
  001a9	c7 45 a4 f8 00
	00 00		 mov	 DWORD PTR tv158[ebp], 248 ; 000000f8H
  001b0	eb 21		 jmp	 SHORT $LN23@switch_to_
$LN22@switch_to_:
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
  001b8	83 c2 32	 add	 edx, 50			; 00000032H
  001bb	52		 push	 edx
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN23@switch_to_:
  001d3	68 f8 00 00 00	 push	 248			; 000000f8H
  001d8	8b 4d f8	 mov	 ecx, DWORD PTR _key$[ebp]
  001db	51		 push	 ecx
  001dc	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv150[ebp], 1116
  001e3	8b 45 a4	 mov	 eax, DWORD PTR tv158[ebp]
  001e6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001ed	ff d1		 call	 ecx
  001ef	85 c0		 test	 eax, eax
  001f1	75 18		 jne	 SHORT $LN10@switch_to_
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??switch_to_satellite_event@@YGXPAUEVENT@@@Z@4JA
  001f8	83 c0 32	 add	 eax, 50			; 00000032H
  001fb	50		 push	 eax
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00201	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@EOGGNJCG@get_local_entity_int_value?5?$CIkey@
  00206	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@switch_to_:

; 5442 : 
; 5443 : 			notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_SATELLITE);

  0020b	6a 06		 push	 6
  0020d	6a 00		 push	 0
  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00214	50		 push	 eax
  00215	6a 2f		 push	 47			; 0000002fH
  00217	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0021c	83 c4 10	 add	 esp, 16			; 00000010H

; 5444 : 
; 5445 : 			set_external_view_entity (key);

  0021f	8b 45 f8	 mov	 eax, DWORD PTR _key$[ebp]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 ?set_external_view_entity@@YGXPAUENTITY@@@Z ; set_external_view_entity

; 5446 : 
; 5447 : 			toggle_in_flight_game_modes (NULL);

  00228	6a 00		 push	 0
  0022a	e8 00 00 00 00	 call	 ?toggle_in_flight_game_modes@@YGXPAUEVENT@@@Z ; toggle_in_flight_game_modes
$LN1@switch_to_:

; 5448 : 		}
; 5449 : 	}
; 5450 : }

  0022f	5f		 pop	 edi
  00230	5e		 pop	 esi
  00231	5b		 pop	 ebx
  00232	8b e5		 mov	 esp, ebp
  00234	5d		 pop	 ebp
  00235	c2 04 00	 ret	 4
?switch_to_satellite_event@@YGXPAUEVENT@@@Z ENDP	; switch_to_satellite_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv93 = -128						; size = 4
tv95 = -124						; size = 8
tv223 = -120						; size = 4
tv216 = -120						; size = 4
_pos1$ = -52						; size = 12
_wz_max$ = -40						; size = 4
_wx_max$ = -36						; size = 4
_wz_min$ = -32						; size = 4
_wx_min$ = -28						; size = 4
_height$ = -24						; size = 4
_width$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_obj$ = -8						; size = 4
_map_dimensions$ = -4					; size = 4
_ev$ = 8						; size = 4
?map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z PROC		; map_wheel_zoom_in_event, COMDAT

; 1447 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1448 : 
; 1449 : 	map_dimension_type
; 1450 : 		*map_dimensions;
; 1451 : 
; 1452 : 	ui_object
; 1453 : 			*obj;
; 1454 : 
; 1455 : 	float
; 1456 : 		x,
; 1457 : 		y,
; 1458 : 		width,
; 1459 : 		height,
; 1460 : 		wx_min,
; 1461 : 		wz_min,
; 1462 : 		wx_max,
; 1463 : 		wz_max;
; 1464 : 
; 1465 : 	vec3d
; 1466 : 		pos1;
; 1467 : 
; 1468 : 	obj = last_drawn_map_object;

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  00011	89 45 f8	 mov	 DWORD PTR _obj$[ebp], eax

; 1469 : 
; 1470 : 
; 1471 : 	if (obj)

  00014	83 7d f8 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00018	0f 84 a8 01 00
	00		 je	 $LN2@map_wheel_

; 1472 : 	{
; 1473 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  0001e	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  00021	50		 push	 eax
  00022	8b 4d f8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0002e	ff d0		 call	 eax
  00030	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1474 : 
; 1475 : 		ASSERT (map_dimensions);

  00033	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00037	75 18		 jne	 SHORT $LN3@map_wheel_
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z@4JA
  0003e	83 c0 1c	 add	 eax, 28			; 0000001cH
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_wheel_:

; 1476 : 
; 1477 : 		map_dimensions->size /= 2.0;

  00051	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00054	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00059	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00061	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00065	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00068	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1478 : 
; 1479 : 		map_dimensions->size = bound (map_dimensions->size, 100.0, max (MAX_MAP_X, MAX_MAP_Z));

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00070	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00075	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  0007d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00081	76 0f		 jbe	 SHORT $LN7@map_wheel_
  00083	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  0008b	f2 0f 11 45 84	 movsd	 QWORD PTR tv95[ebp], xmm0
  00090	eb 4d		 jmp	 SHORT $LN8@map_wheel_
$LN7@map_wheel_:
  00092	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  00097	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  0009c	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000a1	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  000a4	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  000a9	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  000ac	76 1a		 jbe	 SHORT $LN5@map_wheel_
  000ae	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  000b3	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  000b8	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000bd	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c1	f3 0f 11 45 80	 movss	 DWORD PTR tv93[ebp], xmm0
  000c6	eb 0d		 jmp	 SHORT $LN6@map_wheel_
$LN5@map_wheel_:
  000c8	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  000cb	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  000d0	f3 0f 11 45 80	 movss	 DWORD PTR tv93[ebp], xmm0
$LN6@map_wheel_:
  000d5	f3 0f 5a 45 80	 cvtss2sd xmm0, DWORD PTR tv93[ebp]
  000da	f2 0f 11 45 84	 movsd	 QWORD PTR tv95[ebp], xmm0
$LN8@map_wheel_:
  000df	f2 0f 5a 45 84	 cvtsd2ss xmm0, QWORD PTR tv95[ebp]
  000e4	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000e7	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1480 : 
; 1481 : 		pos1.x = get_mouse_x ();

  000ec	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  000f1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f5	f3 0f 11 45 cc	 movss	 DWORD PTR _pos1$[ebp], xmm0

; 1482 : 		pos1.z = get_mouse_y ();

  000fa	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  000ff	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00103	f3 0f 11 45 d4	 movss	 DWORD PTR _pos1$[ebp+8], xmm0

; 1483 : 
; 1484 : 		x = get_ui_object_x (obj);

  00108	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d f8	 mov	 ecx, DWORD PTR _obj$[ebp]
  0010f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00111	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00118	ff d0		 call	 eax
  0011a	d9 5d f4	 fstp	 DWORD PTR _x$[ebp]

; 1485 : 
; 1486 : 		y = get_ui_object_y (obj);

  0011d	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  00120	50		 push	 eax
  00121	8b 4d f8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00124	8b 11		 mov	 edx, DWORD PTR [ecx]
  00126	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0012d	ff d0		 call	 eax
  0012f	d9 5d f0	 fstp	 DWORD PTR _y$[ebp]

; 1487 : 
; 1488 : 		map_wheel_centralise (obj);

  00132	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?map_wheel_centralise@@YGXPAUUI_OBJECT@@@Z ; map_wheel_centralise

; 1489 : 
; 1490 : 		get_2d_terrain_map_world_dimensions (&wx_min, &wz_min, &wx_max, &wz_max);

  0013b	8d 45 d8	 lea	 eax, DWORD PTR _wz_max$[ebp]
  0013e	50		 push	 eax
  0013f	8d 4d dc	 lea	 ecx, DWORD PTR _wx_max$[ebp]
  00142	51		 push	 ecx
  00143	8d 55 e0	 lea	 edx, DWORD PTR _wz_min$[ebp]
  00146	52		 push	 edx
  00147	8d 45 e4	 lea	 eax, DWORD PTR _wx_min$[ebp]
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?get_2d_terrain_map_world_dimensions@@YGXPAM000@Z ; get_2d_terrain_map_world_dimensions

; 1491 : 
; 1492 : 		width = get_ui_object_x_size (obj)/2;

  00150	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  00153	50		 push	 eax
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _obj$[ebp]
  00157	8b 11		 mov	 edx, DWORD PTR [ecx]
  00159	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00160	ff d0		 call	 eax
  00162	d9 5d 88	 fstp	 DWORD PTR tv216[ebp]
  00165	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv216[ebp]
  0016a	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00172	f3 0f 11 45 ec	 movss	 DWORD PTR _width$[ebp], xmm0

; 1493 : 		height = get_ui_object_y_size (obj)/2;

  00177	8b 45 f8	 mov	 eax, DWORD PTR _obj$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d f8	 mov	 ecx, DWORD PTR _obj$[ebp]
  0017e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00180	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00187	ff d0		 call	 eax
  00189	d9 5d 88	 fstp	 DWORD PTR tv223[ebp]
  0018c	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv223[ebp]
  00191	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00199	f3 0f 11 45 e8	 movss	 DWORD PTR _height$[ebp], xmm0

; 1494 : 
; 1495 : 		set_mouse_x (x+width);

  0019e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  001a3	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _width$[ebp]
  001a8	f3 0f 2c c0	 cvttss2si eax, xmm0
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?set_mouse_x@@YGXH@Z	; set_mouse_x

; 1496 : 		set_mouse_y (y+height);

  001b2	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y$[ebp]
  001b7	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _height$[ebp]
  001bc	f3 0f 2c c0	 cvttss2si eax, xmm0
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ?set_mouse_y@@YGXH@Z	; set_mouse_y
$LN2@map_wheel_:

; 1497 : 	}
; 1498 : 
; 1499 : }

  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5b		 pop	 ebx
  001c9	8b e5		 mov	 esp, ebp
  001cb	5d		 pop	 ebp
  001cc	c2 04 00	 ret	 4
?map_wheel_zoom_in_event@@YGXPAUEVENT@@@Z ENDP		; map_wheel_zoom_in_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?centre_current_map_on_player@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv90 = -88						; size = 4
tv82 = -84						; size = 4
_map_dimensions$ = -16					; size = 4
_pos$ = -12						; size = 4
_en$ = -8						; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?centre_current_map_on_player@@YGXPAUEVENT@@@Z PROC	; centre_current_map_on_player, COMDAT

; 5121 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5122 : 	ui_object
; 5123 : 		*obj;
; 5124 : 
; 5125 : 	entity
; 5126 : 		*en;
; 5127 : 
; 5128 : 	vec3d
; 5129 : 		*pos;
; 5130 : 
; 5131 : 	map_dimension_type
; 5132 : 		*map_dimensions;
; 5133 : 
; 5134 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5135 : 
; 5136 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	0f 84 e5 00 00
	00		 je	 $LN4@centre_cur

; 5137 : 	{
; 5138 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001e	50		 push	 eax
  0001f	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  00022	8b 11		 mov	 edx, DWORD PTR [ecx]
  00024	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  0002b	ff d0		 call	 eax
  0002d	89 45 f0	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 5139 : 
; 5140 : 		ASSERT (map_dimensions);

  00030	83 7d f0 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00034	75 18		 jne	 SHORT $LN3@centre_cur
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA
  0003b	83 c0 13	 add	 eax, 19			; 00000013H
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@centre_cur:

; 5141 : 
; 5142 : 		en = get_gunship_entity ();

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00053	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 5143 : 
; 5144 : 		if (en)

  00056	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005a	0f 84 a0 00 00
	00		 je	 $LN4@centre_cur

; 5145 : 		{
; 5146 : 			pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00060	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00064	74 0a		 je	 SHORT $LN6@centre_cur
  00066	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00069	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006b	89 4d ac	 mov	 DWORD PTR tv82[ebp], ecx
  0006e	eb 21		 jmp	 SHORT $LN7@centre_cur
$LN6@centre_cur:
  00070	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA
  00076	83 c2 19	 add	 edx, 25			; 00000019H
  00079	52		 push	 edx
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN7@centre_cur:
  00091	b9 01 00 00 00	 mov	 ecx, 1
  00096	85 c9		 test	 ecx, ecx
  00098	74 09		 je	 SHORT $LN8@centre_cur
  0009a	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv90[ebp], 8
  000a1	eb 21		 jmp	 SHORT $LN9@centre_cur
$LN8@centre_cur:
  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??centre_current_map_on_player@@YGXPAUEVENT@@@Z@4JA
  000a9	83 c2 19	 add	 edx, 25			; 00000019H
  000ac	52		 push	 edx
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000bd	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN9@centre_cur:
  000c4	6a 08		 push	 8
  000c6	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000c9	51		 push	 ecx
  000ca	6b 55 ac 60	 imul	 edx, DWORD PTR tv82[ebp], 96
  000ce	8b 45 a8	 mov	 eax, DWORD PTR tv90[ebp]
  000d1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000d8	ff d1		 call	 ecx
  000da	89 45 f4	 mov	 DWORD PTR _pos$[ebp], eax

; 5147 : 
; 5148 : 			map_dimensions->x = pos->x;

  000dd	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000e0	8b 4d f4	 mov	 ecx, DWORD PTR _pos$[ebp]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	89 10		 mov	 DWORD PTR [eax], edx

; 5149 : 			map_dimensions->z = pos->z;

  000e7	8b 45 f0	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000ea	8b 4d f4	 mov	 ecx, DWORD PTR _pos$[ebp]
  000ed	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  000f0	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 5150 : 
; 5151 : 			bound_map_extents (obj, NULL, NULL);

  000f3	6a 00		 push	 0
  000f5	6a 00		 push	 0
  000f7	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN4@centre_cur:

; 5152 : 		}
; 5153 : 	}
; 5154 : }

  00100	5f		 pop	 edi
  00101	5e		 pop	 esi
  00102	5b		 pop	 ebx
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c2 04 00	 ret	 4
?centre_current_map_on_player@@YGXPAUEVENT@@@Z ENDP	; centre_current_map_on_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?zoom_out_current_map_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?zoom_out_current_map_event@@YGXPAUEVENT@@@Z PROC	; zoom_out_current_map_event, COMDAT

; 5103 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5104 : 	ui_object
; 5105 : 		*obj;
; 5106 : 
; 5107 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5108 : 
; 5109 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 0b		 je	 SHORT $LN1@zoom_out_c

; 5110 : 	{
; 5111 : 		map_zoom_out_function (obj, NULL);

  00017	6a 00		 push	 0
  00019	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_zoom_out_function
$LN1@zoom_out_c:

; 5112 : 	}
; 5113 : 
; 5114 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?zoom_out_current_map_event@@YGXPAUEVENT@@@Z ENDP	; zoom_out_current_map_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?zoom_in_current_map_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?zoom_in_current_map_event@@YGXPAUEVENT@@@Z PROC	; zoom_in_current_map_event, COMDAT

; 5085 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5086 : 	ui_object
; 5087 : 		*obj;
; 5088 : 
; 5089 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5090 : 
; 5091 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 0b		 je	 SHORT $LN1@zoom_in_cu

; 5092 : 	{
; 5093 : 		map_zoom_in_function (obj, NULL);

  00017	6a 00		 push	 0
  00019	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_zoom_in_function
$LN1@zoom_in_cu:

; 5094 : 	}
; 5095 : 
; 5096 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?zoom_in_current_map_event@@YGXPAUEVENT@@@Z ENDP	; zoom_in_current_map_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?fine_current_map_right_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?fine_current_map_right_event@@YGXPAUEVENT@@@Z PROC	; fine_current_map_right_event, COMDAT

; 5053 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5054 : 	ui_object
; 5055 : 		*obj;
; 5056 : 
; 5057 : 	map_dimension_type
; 5058 : 		*map_dimensions;
; 5059 : 
; 5060 : 	float
; 5061 : 		d;
; 5062 : 
; 5063 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5064 : 
; 5065 : 	if ((obj) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER))

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 75		 je	 SHORT $LN2@fine_curre
  00017	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  0001e	75 6c		 jne	 SHORT $LN2@fine_curre

; 5066 : 	{
; 5067 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00030	ff d0		 call	 eax
  00032	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 5068 : 
; 5069 : 		ASSERT (map_dimensions);

  00035	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00039	75 18		 jne	 SHORT $LN3@fine_curre
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fine_current_map_right_event@@YGXPAUEVENT@@@Z@4JA
  00040	83 c0 10	 add	 eax, 16			; 00000010H
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@fine_curre:

; 5070 : 
; 5071 : 		d = map_dimensions->size * 0.01;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00056	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0005b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00063	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00067	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 5072 : 
; 5073 : 		map_dimensions->x += d;

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0006f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00073	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _d$[ebp]
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0007b	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 5074 : 
; 5075 : 		bound_map_extents (obj, NULL, NULL);

  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@fine_curre:

; 5076 : 	}
; 5077 : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?fine_current_map_right_event@@YGXPAUEVENT@@@Z ENDP	; fine_current_map_right_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?fine_current_map_left_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?fine_current_map_left_event@@YGXPAUEVENT@@@Z PROC	; fine_current_map_left_event, COMDAT

; 5026 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5027 : 	ui_object
; 5028 : 		*obj;
; 5029 : 
; 5030 : 	map_dimension_type
; 5031 : 		*map_dimensions;
; 5032 : 
; 5033 : 	float
; 5034 : 		d;
; 5035 : 
; 5036 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5037 : 
; 5038 : 	if ((obj) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER))

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 75		 je	 SHORT $LN2@fine_curre
  00017	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  0001e	75 6c		 jne	 SHORT $LN2@fine_curre

; 5039 : 	{
; 5040 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00030	ff d0		 call	 eax
  00032	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 5041 : 
; 5042 : 		ASSERT (map_dimensions);

  00035	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00039	75 18		 jne	 SHORT $LN3@fine_curre
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fine_current_map_left_event@@YGXPAUEVENT@@@Z@4JA
  00040	83 c0 10	 add	 eax, 16			; 00000010H
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@fine_curre:

; 5043 : 
; 5044 : 		d = map_dimensions->size * 0.01;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00056	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0005b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00063	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00067	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 5045 : 
; 5046 : 		map_dimensions->x -= d;

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0006f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00073	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _d$[ebp]
  00078	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0007b	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 5047 : 
; 5048 : 		bound_map_extents (obj, NULL, NULL);

  0007f	6a 00		 push	 0
  00081	6a 00		 push	 0
  00083	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@fine_curre:

; 5049 : 	}
; 5050 : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 04 00	 ret	 4
?fine_current_map_left_event@@YGXPAUEVENT@@@Z ENDP	; fine_current_map_left_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?fine_current_map_down_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?fine_current_map_down_event@@YGXPAUEVENT@@@Z PROC	; fine_current_map_down_event, COMDAT

; 4999 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5000 : 	ui_object
; 5001 : 		*obj;
; 5002 : 
; 5003 : 	map_dimension_type
; 5004 : 		*map_dimensions;
; 5005 : 
; 5006 : 	float
; 5007 : 		d;
; 5008 : 
; 5009 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 5010 : 
; 5011 : 	if ((obj) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER))

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 77		 je	 SHORT $LN2@fine_curre
  00017	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  0001e	75 6e		 jne	 SHORT $LN2@fine_curre

; 5012 : 	{
; 5013 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00030	ff d0		 call	 eax
  00032	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 5014 : 
; 5015 : 		ASSERT (map_dimensions);

  00035	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00039	75 18		 jne	 SHORT $LN3@fine_curre
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fine_current_map_down_event@@YGXPAUEVENT@@@Z@4JA
  00040	83 c0 10	 add	 eax, 16			; 00000010H
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@fine_curre:

; 5016 : 
; 5017 : 		d = map_dimensions->size * 0.01;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00056	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0005b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00063	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00067	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 5018 : 
; 5019 : 		map_dimensions->z -= d;

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0006f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00074	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _d$[ebp]
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0007c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 5020 : 
; 5021 : 		bound_map_extents (obj, NULL, NULL);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@fine_curre:

; 5022 : 	}
; 5023 : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
?fine_current_map_down_event@@YGXPAUEVENT@@@Z ENDP	; fine_current_map_down_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?fine_current_map_up_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?fine_current_map_up_event@@YGXPAUEVENT@@@Z PROC	; fine_current_map_up_event, COMDAT

; 4972 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4973 : 	ui_object
; 4974 : 		*obj;
; 4975 : 
; 4976 : 	map_dimension_type
; 4977 : 		*map_dimensions;
; 4978 : 
; 4979 : 	float
; 4980 : 		d;
; 4981 : 
; 4982 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4983 : 
; 4984 : 	if ((obj) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER))

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 77		 je	 SHORT $LN2@fine_curre
  00017	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  0001e	75 6e		 jne	 SHORT $LN2@fine_curre

; 4985 : 	{
; 4986 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00023	50		 push	 eax
  00024	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  00027	8b 11		 mov	 edx, DWORD PTR [ecx]
  00029	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00030	ff d0		 call	 eax
  00032	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 4987 : 
; 4988 : 		ASSERT (map_dimensions);

  00035	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00039	75 18		 jne	 SHORT $LN3@fine_curre
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??fine_current_map_up_event@@YGXPAUEVENT@@@Z@4JA
  00040	83 c0 10	 add	 eax, 16			; 00000010H
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@fine_curre:

; 4989 : 
; 4990 : 		d = map_dimensions->size * 0.01;

  00053	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00056	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0005b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00063	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00067	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 4991 : 
; 4992 : 		map_dimensions->z += d;

  0006c	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0006f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00074	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _d$[ebp]
  00079	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0007c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 4993 : 
; 4994 : 		bound_map_extents (obj, NULL, NULL);

  00081	6a 00		 push	 0
  00083	6a 00		 push	 0
  00085	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@fine_curre:

; 4995 : 	}
; 4996 : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
?fine_current_map_up_event@@YGXPAUEVENT@@@Z ENDP	; fine_current_map_up_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?shift_current_map_right_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?shift_current_map_right_event@@YGXPAUEVENT@@@Z PROC	; shift_current_map_right_event, COMDAT

; 4943 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4944 : 	ui_object
; 4945 : 		*obj;
; 4946 : 
; 4947 : 	map_dimension_type
; 4948 : 		*map_dimensions;
; 4949 : 
; 4950 : 	float
; 4951 : 		d;
; 4952 : 
; 4953 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4954 : 
; 4955 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 6c		 je	 SHORT $LN2@shift_curr

; 4956 : 	{
; 4957 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00027	ff d0		 call	 eax
  00029	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 4958 : 
; 4959 : 		ASSERT (map_dimensions);

  0002c	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00030	75 18		 jne	 SHORT $LN3@shift_curr
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??shift_current_map_right_event@@YGXPAUEVENT@@@Z@4JA
  00037	83 c0 10	 add	 eax, 16			; 00000010H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@shift_curr:

; 4960 : 
; 4961 : 		d = map_dimensions->size * 0.2;

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0004d	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00052	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0005a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 4962 : 
; 4963 : 		map_dimensions->x += d;

  00063	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00066	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0006a	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _d$[ebp]
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00072	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 4964 : 
; 4965 : 		bound_map_extents (obj, NULL, NULL);

  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@shift_curr:

; 4966 : 	}
; 4967 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?shift_current_map_right_event@@YGXPAUEVENT@@@Z ENDP	; shift_current_map_right_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?shift_current_map_left_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?shift_current_map_left_event@@YGXPAUEVENT@@@Z PROC	; shift_current_map_left_event, COMDAT

; 4912 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4913 : 	ui_object
; 4914 : 		*obj;
; 4915 : 
; 4916 : 	map_dimension_type
; 4917 : 		*map_dimensions;
; 4918 : 
; 4919 : 	float
; 4920 : 		d;
; 4921 : 
; 4922 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4923 : 
; 4924 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 6c		 je	 SHORT $LN2@shift_curr

; 4925 : 	{
; 4926 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00027	ff d0		 call	 eax
  00029	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 4927 : 
; 4928 : 		ASSERT (map_dimensions);

  0002c	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00030	75 18		 jne	 SHORT $LN3@shift_curr
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??shift_current_map_left_event@@YGXPAUEVENT@@@Z@4JA
  00037	83 c0 10	 add	 eax, 16			; 00000010H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@shift_curr:

; 4929 : 
; 4930 : 		d = map_dimensions->size * 0.2;

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0004d	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00052	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0005a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 4931 : 
; 4932 : 		map_dimensions->x -= d;

  00063	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00066	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0006a	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _d$[ebp]
  0006f	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00072	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 4933 : 
; 4934 : 		bound_map_extents (obj, NULL, NULL);

  00076	6a 00		 push	 0
  00078	6a 00		 push	 0
  0007a	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@shift_curr:

; 4935 : 	}
; 4936 : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?shift_current_map_left_event@@YGXPAUEVENT@@@Z ENDP	; shift_current_map_left_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?shift_current_map_down_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?shift_current_map_down_event@@YGXPAUEVENT@@@Z PROC	; shift_current_map_down_event, COMDAT

; 4881 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4882 : 	ui_object
; 4883 : 		*obj;
; 4884 : 
; 4885 : 	map_dimension_type
; 4886 : 		*map_dimensions;
; 4887 : 
; 4888 : 	float
; 4889 : 		d;
; 4890 : 
; 4891 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4892 : 
; 4893 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 6e		 je	 SHORT $LN2@shift_curr

; 4894 : 	{
; 4895 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00027	ff d0		 call	 eax
  00029	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 4896 : 
; 4897 : 		ASSERT (map_dimensions);

  0002c	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00030	75 18		 jne	 SHORT $LN3@shift_curr
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??shift_current_map_down_event@@YGXPAUEVENT@@@Z@4JA
  00037	83 c0 10	 add	 eax, 16			; 00000010H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@shift_curr:

; 4898 : 
; 4899 : 		d = map_dimensions->size * 0.2;

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0004d	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00052	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0005a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 4900 : 
; 4901 : 		map_dimensions->z -= d;

  00063	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00066	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0006b	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _d$[ebp]
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00073	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 4902 : 
; 4903 : 		bound_map_extents (obj, NULL, NULL);

  00078	6a 00		 push	 0
  0007a	6a 00		 push	 0
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@shift_curr:

; 4904 : 	}
; 4905 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?shift_current_map_down_event@@YGXPAUEVENT@@@Z ENDP	; shift_current_map_down_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?shift_current_map_up_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_d$ = -12						; size = 4
_map_dimensions$ = -8					; size = 4
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?shift_current_map_up_event@@YGXPAUEVENT@@@Z PROC	; shift_current_map_up_event, COMDAT

; 4850 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4851 : 	ui_object
; 4852 : 		*obj;
; 4853 : 
; 4854 : 	map_dimension_type
; 4855 : 		*map_dimensions;
; 4856 : 
; 4857 : 	float
; 4858 : 		d;
; 4859 : 
; 4860 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4861 : 
; 4862 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 6e		 je	 SHORT $LN2@shift_curr

; 4863 : 	{
; 4864 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d fc	 mov	 ecx, DWORD PTR _obj$[ebp]
  0001e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00020	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00027	ff d0		 call	 eax
  00029	89 45 f8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 4865 : 
; 4866 : 		ASSERT (map_dimensions);

  0002c	83 7d f8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00030	75 18		 jne	 SHORT $LN3@shift_curr
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??shift_current_map_up_event@@YGXPAUEVENT@@@Z@4JA
  00037	83 c0 10	 add	 eax, 16			; 00000010H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@shift_curr:

; 4867 : 
; 4868 : 		d = map_dimensions->size * 0.2;

  0004a	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0004d	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00052	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0005a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _d$[ebp], xmm0

; 4869 : 
; 4870 : 		map_dimensions->z += d;

  00063	8b 45 f8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00066	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0006b	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _d$[ebp]
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00073	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 4871 : 
; 4872 : 		bound_map_extents (obj, NULL, NULL);

  00078	6a 00		 push	 0
  0007a	6a 00		 push	 0
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents
$LN2@shift_curr:

; 4873 : 	}
; 4874 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?shift_current_map_up_event@@YGXPAUEVENT@@@Z ENDP	; shift_current_map_up_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?toggle_current_map_maximise_event@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
_obj$ = -4						; size = 4
_ev$ = 8						; size = 4
?toggle_current_map_maximise_event@@YGXPAUEVENT@@@Z PROC ; toggle_current_map_maximise_event, COMDAT

; 4833 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4834 : 	ui_object
; 4835 : 		*obj;
; 4836 : 
; 4837 : 	obj = last_drawn_map_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A
  0000e	89 45 fc	 mov	 DWORD PTR _obj$[ebp], eax

; 4838 : 
; 4839 : 	if (obj)

  00011	83 7d fc 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00015	74 0b		 je	 SHORT $LN1@toggle_cur

; 4840 : 	{
; 4841 : 		toggle_full_screen_function (obj, NULL);

  00017	6a 00		 push	 0
  00019	8b 45 fc	 mov	 eax, DWORD PTR _obj$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ?toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z ; toggle_full_screen_function
$LN1@toggle_cur:

; 4842 : 	}
; 4843 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c2 04 00	 ret	 4
?toggle_current_map_maximise_event@@YGXPAUEVENT@@@Z ENDP ; toggle_current_map_maximise_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?force_map_layer_control_object@@YGXW4MAP_LAYER_CONTROL_TYPES@@H@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_state$ = 12						; size = 4
?force_map_layer_control_object@@YGXW4MAP_LAYER_CONTROL_TYPES@@H@Z PROC ; force_map_layer_control_object, COMDAT

; 2273 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2274 : 	if (state)

  00009	83 7d 0c 00	 cmp	 DWORD PTR _state$[ebp], 0
  0000d	74 17		 je	 SHORT $LN2@force_map_

; 2275 : 	{
; 2276 : 		global_layer_controls |= (1 << index);

  0000f	b8 01 00 00 00	 mov	 eax, 1
  00014	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00017	d3 e0		 shl	 eax, cl
  00019	0b 05 00 00 00
	00		 or	 eax, DWORD PTR ?global_layer_controls@@3HA
  0001f	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax

; 2277 : 	}
; 2278 : 	else

  00024	eb 17		 jmp	 SHORT $LN3@force_map_
$LN2@force_map_:

; 2279 : 	{
; 2280 : 		global_layer_controls &= ~(1 << index);

  00026	b8 01 00 00 00	 mov	 eax, 1
  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  0002e	d3 e0		 shl	 eax, cl
  00030	f7 d0		 not	 eax
  00032	23 05 00 00 00
	00		 and	 eax, DWORD PTR ?global_layer_controls@@3HA
  00038	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax
$LN3@force_map_:

; 2281 : 	}
; 2282 : 
; 2283 : 	update_layer_control_objects (index);

  0003d	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?update_layer_control_objects@@YGXH@Z ; update_layer_control_objects

; 2284 : 
; 2285 : 	set_global_map_layer_options (global_layer_controls);

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  0004b	a3 7c 03 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+892, eax

; 2286 : 
; 2287 : 	create_2d_terrain_texture_overlays ();

  00050	e8 00 00 00 00	 call	 ?create_2d_terrain_texture_overlays@@YGXXZ ; create_2d_terrain_texture_overlays

; 2288 : }

  00055	5f		 pop	 edi
  00056	5e		 pop	 esi
  00057	5b		 pop	 ebx
  00058	8b e5		 mov	 esp, ebp
  0005a	5d		 pop	 ebp
  0005b	c2 08 00	 ret	 8
?force_map_layer_control_object@@YGXW4MAP_LAYER_CONTROL_TYPES@@H@Z ENDP ; force_map_layer_control_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?update_map_animations@@YGXXZ
_TEXT	SEGMENT
?update_map_animations@@YGXXZ PROC			; update_map_animations, COMDAT

; 4507 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4508 : 	animation_timer += get_delta_time ();

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?animation_timer@@3MA
  00011	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00019	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?animation_timer@@3MA, xmm0

; 4509 : 
; 4510 : 	animation_timer = frac (animation_timer);

  00021	51		 push	 ecx
  00022	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?animation_timer@@3MA
  0002a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002f	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00034	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?animation_timer@@3MA

; 4511 : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?update_map_animations@@YGXXZ ENDP			; update_map_animations
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?update_map_overlays@@YGXXZ
_TEXT	SEGMENT
?update_map_overlays@@YGXXZ PROC			; update_map_overlays, COMDAT

; 4407 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4408 : 	create_2d_terrain_texture_overlays ();

  00009	e8 00 00 00 00	 call	 ?create_2d_terrain_texture_overlays@@YGXXZ ; create_2d_terrain_texture_overlays

; 4409 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?update_map_overlays@@YGXXZ ENDP			; update_map_overlays
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?update_map_events@@YGXXZ
_TEXT	SEGMENT
_next$ = -8						; size = 4
_event$ = -4						; size = 4
?update_map_events@@YGXXZ PROC				; update_map_events, COMDAT

; 4480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4481 : 	map_event_type
; 4482 : 		*event,
; 4483 : 		*next;
; 4484 : 
; 4485 : 	event = map_events;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A
  0000e	89 45 fc	 mov	 DWORD PTR _event$[ebp], eax
$LN2@update_map:

; 4486 : 
; 4487 : 	while (event)

  00011	83 7d fc 00	 cmp	 DWORD PTR _event$[ebp], 0
  00015	74 43		 je	 SHORT $LN3@update_map

; 4488 : 	{
; 4489 : 		next = event->next;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _event$[ebp]
  0001a	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0001d	89 4d f8	 mov	 DWORD PTR _next$[ebp], ecx

; 4490 : 
; 4491 : 		event->t -= get_delta_time ();

  00020	8b 45 fc	 mov	 eax, DWORD PTR _event$[ebp]
  00023	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00028	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00030	8b 4d fc	 mov	 ecx, DWORD PTR _event$[ebp]
  00033	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 4492 : 
; 4493 : 		if (event->t < 0.0)

  00038	8b 45 fc	 mov	 eax, DWORD PTR _event$[ebp]
  0003b	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00040	0f 57 c9	 xorps	 xmm1, xmm1
  00043	66 0f 2f c8	 comisd	 xmm1, xmm0
  00047	76 09		 jbe	 SHORT $LN4@update_map

; 4494 : 		{
; 4495 : 			remove_map_event (event);

  00049	8b 45 fc	 mov	 eax, DWORD PTR _event$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?remove_map_event@@YGXPAUMAP_EVENT_TYPE@@@Z ; remove_map_event
$LN4@update_map:

; 4496 : 		}
; 4497 : 
; 4498 : 		event = next;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  00055	89 45 fc	 mov	 DWORD PTR _event$[ebp], eax

; 4499 : 	}

  00058	eb b7		 jmp	 SHORT $LN2@update_map
$LN3@update_map:

; 4500 : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?update_map_events@@YGXXZ ENDP				; update_map_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_move_waypoint_events@@YGXXZ
_TEXT	SEGMENT
?map_move_waypoint_events@@YGXXZ PROC			; map_move_waypoint_events, COMDAT

; 1944 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1945 : 
; 1946 : 	set_event (MOUSE_MOVE, MODIFIER_MOUSE_LEFT_BUTTON, BUTTON_STATE_EITHER, map_move_waypoint_position);

  00009	68 00 00 00 00	 push	 OFFSET ?map_move_waypoint_position@@YGXPAUEVENT@@@Z ; map_move_waypoint_position
  0000e	6a 03		 push	 3
  00010	6a 07		 push	 7
  00012	68 02 01 00 00	 push	 258			; 00000102H
  00017	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 1947 : 
; 1948 : 	set_mouse_graphic_off ();

  0001c	e8 00 00 00 00	 call	 ?set_mouse_graphic_off@@YGXXZ ; set_mouse_graphic_off

; 1949 : 
; 1950 : 	//
; 1951 : 	// mouse buttons
; 1952 : 	//
; 1953 : 
; 1954 : 	set_event (MOUSE_LEFT_BUTTON, MODIFIER_NONE, BUTTON_STATE_EITHER, map_pop_move_waypoint_events);

  00021	68 00 00 00 00	 push	 OFFSET ?map_pop_move_waypoint_events@@YGXPAUEVENT@@@Z ; map_pop_move_waypoint_events
  00026	6a 03		 push	 3
  00028	6a 00		 push	 0
  0002a	68 00 01 00 00	 push	 256			; 00000100H
  0002f	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 1955 : }

  00034	5f		 pop	 edi
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx
  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?map_move_waypoint_events@@YGXXZ ENDP			; map_move_waypoint_events
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?add_map_event@@YGXHMMM@Z
_TEXT	SEGMENT
_new_event$ = -4					; size = 4
_type$ = 8						; size = 4
_x$ = 12						; size = 4
_z$ = 16						; size = 4
_lifetime$ = 20						; size = 4
?add_map_event@@YGXHMMM@Z PROC				; add_map_event, COMDAT

; 4416 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4417 : 	map_event_type
; 4418 : 		*new_event;
; 4419 : 
; 4420 : 	new_event = (map_event_type *) malloc_fast_mem (sizeof (map_event_type));

  00009	6a 1c		 push	 28			; 0000001cH
  0000b	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00010	89 45 fc	 mov	 DWORD PTR _new_event$[ebp], eax

; 4421 : 
; 4422 : 	new_event->type = type;

  00013	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  00016	8b 4d 08	 mov	 ecx, DWORD PTR _type$[ebp]
  00019	89 08		 mov	 DWORD PTR [eax], ecx

; 4423 : 	new_event->x = x;

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  0001e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x$[ebp]
  00023	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 4424 : 	new_event->z = z;

  00028	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  0002b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _z$[ebp]
  00030	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 4425 : 	new_event->t = lifetime;

  00035	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  00038	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  0003d	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 4426 : 	new_event->lifetime = lifetime;

  00042	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  00045	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _lifetime$[ebp]
  0004a	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 4427 : 
; 4428 : 	new_event->next = map_events;

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A
  00058	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 4429 : 	new_event->prev = NULL;

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  0005e	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0

; 4430 : 
; 4431 : 	if (map_events)

  00065	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A, 0
  0006c	74 0b		 je	 SHORT $LN2@add_map_ev

; 4432 : 	{
; 4433 : 		map_events->prev = new_event;

  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A
  00073	8b 4d fc	 mov	 ecx, DWORD PTR _new_event$[ebp]
  00076	89 48 18	 mov	 DWORD PTR [eax+24], ecx
$LN2@add_map_ev:

; 4434 : 	}
; 4435 : 
; 4436 : 	map_events = new_event;

  00079	8b 45 fc	 mov	 eax, DWORD PTR _new_event$[ebp]
  0007c	a3 00 00 00 00	 mov	 DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A, eax

; 4437 : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c2 10 00	 ret	 16			; 00000010H
?add_map_event@@YGXHMMM@Z ENDP				; add_map_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?minimize_all_map_objects@@YGXXZ
_TEXT	SEGMENT
_data$ = -4						; size = 4
?minimize_all_map_objects@@YGXXZ PROC			; minimize_all_map_objects, COMDAT

; 1863 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1864 : 	map_dimension_type
; 1865 : 		*data;
; 1866 : 
; 1867 : 	data = map_data_list;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_data_list@@3PAUMAP_DIMENSION_TYPE@@A
  0000e	89 45 fc	 mov	 DWORD PTR _data$[ebp], eax
$LN2@minimize_a:

; 1868 : 
; 1869 : 	while (data)

  00011	83 7d fc 00	 cmp	 DWORD PTR _data$[ebp], 0
  00015	74 14		 je	 SHORT $LN1@minimize_a

; 1870 : 	{
; 1871 : 		minimize_full_screen_function (data);

  00017	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 ?minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z ; minimize_full_screen_function

; 1872 : 
; 1873 : 		data = data->next;

  00020	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  00023	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00026	89 4d fc	 mov	 DWORD PTR _data$[ebp], ecx

; 1874 : 	}

  00029	eb e6		 jmp	 SHORT $LN2@minimize_a
$LN1@minimize_a:

; 1875 : }

  0002b	5f		 pop	 edi
  0002c	5e		 pop	 esi
  0002d	5b		 pop	 ebx
  0002e	8b e5		 mov	 esp, ebp
  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
?minimize_all_map_objects@@YGXXZ ENDP			; minimize_all_map_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z PROC ; minimize_full_screen_map_object, COMDAT

; 1847 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1848 : 	map_dimension_type
; 1849 : 		*map_dimensions;
; 1850 : 
; 1851 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1852 : 
; 1853 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@minimize_f
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@minimize_f:

; 1854 : 
; 1855 : 	minimize_full_screen_function (map_dimensions);

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	50		 push	 eax
  00040	e8 00 00 00 00	 call	 ?minimize_full_screen_function@@YGXPAUMAP_DIMENSION_TYPE@@@Z ; minimize_full_screen_function

; 1856 : }

  00045	5f		 pop	 edi
  00046	5e		 pop	 esi
  00047	5b		 pop	 ebx
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 08 00	 ret	 8
?minimize_full_screen_map_object@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; minimize_full_screen_map_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv199 = -104						; size = 4
tv179 = -104						; size = 4
tv142 = -104						; size = 4
tv191 = -100						; size = 4
tv171 = -100						; size = 4
tv159 = -100						; size = 4
tv134 = -100						; size = 4
tv90 = -100						; size = 4
_wp2_pos$ = -32						; size = 4
_wp1_pos$ = -28						; size = 4
_pos$ = -24						; size = 12
_wp2$ = -12						; size = 4
_wp1$ = -8						; size = 4
_data$ = -4						; size = 4
_obj$ = 8						; size = 4
?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z PROC	; map_insert_waypoint_function, COMDAT

; 1609 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1610 : 	map_dimension_type
; 1611 : 		*data;
; 1612 : 
; 1613 : 	entity
; 1614 : 		*wp1,
; 1615 : 		*wp2;
; 1616 : 
; 1617 : 	vec3d
; 1618 : 		pos,
; 1619 : 		*wp1_pos,
; 1620 : 		*wp2_pos;
; 1621 : 
; 1622 : 	data = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _data$[ebp], eax

; 1623 : 
; 1624 : 	ASSERT (data);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _data$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@map_insert
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00029	83 c0 0f	 add	 eax, 15			; 0000000fH
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_insert:

; 1625 : 
; 1626 : 	if (data->mouse_over_object.type == MOUSE_OVER_OBJECT_WAYPOINT_ADD)

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  0003f	83 78 4c 02	 cmp	 DWORD PTR [eax+76], 2
  00043	0f 85 fd 02 00
	00		 jne	 $LN3@map_insert

; 1627 : 	{
; 1628 : 		wp1 = data->mouse_over_object.en;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _data$[ebp]
  0004c	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0004f	89 4d f8	 mov	 DWORD PTR _wp1$[ebp], ecx

; 1629 : 
; 1630 : 		ASSERT (wp1);

  00052	83 7d f8 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00056	75 18		 jne	 SHORT $LN5@map_insert
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  0005d	83 c0 15	 add	 eax, 21			; 00000015H
  00060	50		 push	 eax
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_03LKPPNHCE@wp1@
  0006b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_insert:

; 1631 : 		ASSERT (get_local_entity_type (wp1) == ENTITY_TYPE_WAYPOINT);

  00070	83 7d f8 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  00074	74 0a		 je	 SHORT $LN12@map_insert
  00076	8b 45 f8	 mov	 eax, DWORD PTR _wp1$[ebp]
  00079	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007b	89 4d 9c	 mov	 DWORD PTR tv90[ebp], ecx
  0007e	eb 21		 jmp	 SHORT $LN13@map_insert
$LN12@map_insert:
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00086	83 c2 16	 add	 edx, 22			; 00000016H
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@map_insert:
  000a1	83 7d 9c 24	 cmp	 DWORD PTR tv90[ebp], 36	; 00000024H
  000a5	74 18		 je	 SHORT $LN6@map_insert
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  000ac	83 c0 16	 add	 eax, 22			; 00000016H
  000af	50		 push	 eax
  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@JBELCLJH@get_local_entity_type?5?$CIwp1?$CJ?5?$DN?$DN?5@
  000ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_insert:

; 1632 : 
; 1633 : 		wp2 = get_local_entity_child_succ (wp1, LIST_TYPE_WAYPOINT);

  000bf	83 7d f8 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  000c3	74 0a		 je	 SHORT $LN14@map_insert
  000c5	8b 45 f8	 mov	 eax, DWORD PTR _wp1$[ebp]
  000c8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ca	89 4d 9c	 mov	 DWORD PTR tv134[ebp], ecx
  000cd	eb 21		 jmp	 SHORT $LN15@map_insert
$LN14@map_insert:
  000cf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  000d5	83 c2 18	 add	 edx, 24			; 00000018H
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN15@map_insert:
  000f0	b9 01 00 00 00	 mov	 ecx, 1
  000f5	85 c9		 test	 ecx, ecx
  000f7	74 09		 je	 SHORT $LN16@map_insert
  000f9	c7 45 98 2c 00
	00 00		 mov	 DWORD PTR tv142[ebp], 44 ; 0000002cH
  00100	eb 21		 jmp	 SHORT $LN17@map_insert
$LN16@map_insert:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00108	83 c2 18	 add	 edx, 24			; 00000018H
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN17@map_insert:
  00123	6a 2c		 push	 44			; 0000002cH
  00125	8b 4d f8	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00128	51		 push	 ecx
  00129	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv134[ebp], 180
  00130	8b 45 98	 mov	 eax, DWORD PTR tv142[ebp]
  00133	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0013a	ff d1		 call	 ecx
  0013c	89 45 f4	 mov	 DWORD PTR _wp2$[ebp], eax

; 1634 : 
; 1635 : 		ASSERT (wp2);

  0013f	83 7d f4 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  00143	75 18		 jne	 SHORT $LN7@map_insert
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  0014a	83 c0 1a	 add	 eax, 26			; 0000001aH
  0014d	50		 push	 eax
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_03JBNCIEOH@wp2@
  00158	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_insert:

; 1636 : 		ASSERT (get_local_entity_type (wp2) == ENTITY_TYPE_WAYPOINT);

  0015d	83 7d f4 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  00161	74 0a		 je	 SHORT $LN18@map_insert
  00163	8b 45 f4	 mov	 eax, DWORD PTR _wp2$[ebp]
  00166	8b 08		 mov	 ecx, DWORD PTR [eax]
  00168	89 4d 9c	 mov	 DWORD PTR tv159[ebp], ecx
  0016b	eb 21		 jmp	 SHORT $LN19@map_insert
$LN18@map_insert:
  0016d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00173	83 c2 1b	 add	 edx, 27			; 0000001bH
  00176	52		 push	 edx
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00187	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN19@map_insert:
  0018e	83 7d 9c 24	 cmp	 DWORD PTR tv159[ebp], 36 ; 00000024H
  00192	74 18		 je	 SHORT $LN8@map_insert
  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00199	83 c0 1b	 add	 eax, 27			; 0000001bH
  0019c	50		 push	 eax
  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@CCNPAGFE@get_local_entity_type?5?$CIwp2?$CJ?5?$DN?$DN?5@
  001a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_insert:

; 1637 : 
; 1638 : 		wp1_pos = get_local_entity_vec3d_ptr (wp1, VEC3D_TYPE_POSITION);

  001ac	83 7d f8 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  001b0	74 0a		 je	 SHORT $LN20@map_insert
  001b2	8b 45 f8	 mov	 eax, DWORD PTR _wp1$[ebp]
  001b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b7	89 4d 9c	 mov	 DWORD PTR tv171[ebp], ecx
  001ba	eb 21		 jmp	 SHORT $LN21@map_insert
$LN20@map_insert:
  001bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  001c2	83 c2 1d	 add	 edx, 29			; 0000001dH
  001c5	52		 push	 edx
  001c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d0	50		 push	 eax
  001d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d6	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN21@map_insert:
  001dd	b9 01 00 00 00	 mov	 ecx, 1
  001e2	85 c9		 test	 ecx, ecx
  001e4	74 09		 je	 SHORT $LN22@map_insert
  001e6	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv179[ebp], 8
  001ed	eb 21		 jmp	 SHORT $LN23@map_insert
$LN22@map_insert:
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  001f5	83 c2 1d	 add	 edx, 29			; 0000001dH
  001f8	52		 push	 edx
  001f9	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00209	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv179[ebp], 0
$LN23@map_insert:
  00210	6a 08		 push	 8
  00212	8b 4d f8	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00215	51		 push	 ecx
  00216	6b 55 9c 60	 imul	 edx, DWORD PTR tv171[ebp], 96
  0021a	8b 45 98	 mov	 eax, DWORD PTR tv179[ebp]
  0021d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00224	ff d1		 call	 ecx
  00226	89 45 e4	 mov	 DWORD PTR _wp1_pos$[ebp], eax

; 1639 : 
; 1640 : 		wp2_pos = get_local_entity_vec3d_ptr (wp2, VEC3D_TYPE_POSITION);

  00229	83 7d f4 00	 cmp	 DWORD PTR _wp2$[ebp], 0
  0022d	74 0a		 je	 SHORT $LN24@map_insert
  0022f	8b 45 f4	 mov	 eax, DWORD PTR _wp2$[ebp]
  00232	8b 08		 mov	 ecx, DWORD PTR [eax]
  00234	89 4d 9c	 mov	 DWORD PTR tv191[ebp], ecx
  00237	eb 21		 jmp	 SHORT $LN25@map_insert
$LN24@map_insert:
  00239	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  0023f	83 c2 1f	 add	 edx, 31			; 0000001fH
  00242	52		 push	 edx
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00248	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024d	50		 push	 eax
  0024e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00253	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv191[ebp], 0
$LN25@map_insert:
  0025a	b9 01 00 00 00	 mov	 ecx, 1
  0025f	85 c9		 test	 ecx, ecx
  00261	74 09		 je	 SHORT $LN26@map_insert
  00263	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv199[ebp], 8
  0026a	eb 21		 jmp	 SHORT $LN27@map_insert
$LN26@map_insert:
  0026c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z@4JA
  00272	83 c2 1f	 add	 edx, 31			; 0000001fH
  00275	52		 push	 edx
  00276	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00286	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN27@map_insert:
  0028d	6a 08		 push	 8
  0028f	8b 4d f4	 mov	 ecx, DWORD PTR _wp2$[ebp]
  00292	51		 push	 ecx
  00293	6b 55 9c 60	 imul	 edx, DWORD PTR tv191[ebp], 96
  00297	8b 45 98	 mov	 eax, DWORD PTR tv199[ebp]
  0029a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  002a1	ff d1		 call	 ecx
  002a3	89 45 e0	 mov	 DWORD PTR _wp2_pos$[ebp], eax

; 1641 : 
; 1642 : 		pos.x = (wp1_pos->x + wp2_pos->x) * 0.5;

  002a6	8b 45 e4	 mov	 eax, DWORD PTR _wp1_pos$[ebp]
  002a9	8b 4d e0	 mov	 ecx, DWORD PTR _wp2_pos$[ebp]
  002ac	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002b0	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  002b4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002b8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002c0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002c4	f3 0f 11 45 e8	 movss	 DWORD PTR _pos$[ebp], xmm0

; 1643 : 		pos.y = (wp1_pos->y + wp2_pos->y) * 0.5;

  002c9	8b 45 e4	 mov	 eax, DWORD PTR _wp1_pos$[ebp]
  002cc	8b 4d e0	 mov	 ecx, DWORD PTR _wp2_pos$[ebp]
  002cf	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002d4	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  002d9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002dd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  002e5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e9	f3 0f 11 45 ec	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 1644 : 		pos.z = (wp1_pos->z + wp2_pos->z) * 0.5;

  002ee	8b 45 e4	 mov	 eax, DWORD PTR _wp1_pos$[ebp]
  002f1	8b 4d e0	 mov	 ecx, DWORD PTR _wp2_pos$[ebp]
  002f4	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  002f9	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  002fe	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00302	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0030a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0030e	f3 0f 11 45 f0	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 1645 : 
; 1646 : 		if (get_comms_model () == COMMS_MODEL_SERVER)

  00313	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0031a	75 0f		 jne	 SHORT $LN9@map_insert

; 1647 : 		{
; 1648 : 			map_add_waypoint (wp1, &pos);

  0031c	8d 45 e8	 lea	 eax, DWORD PTR _pos$[ebp]
  0031f	50		 push	 eax
  00320	8b 4d f8	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00323	51		 push	 ecx
  00324	e8 00 00 00 00	 call	 ?map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z ; map_add_waypoint

; 1649 : 		}
; 1650 : 		else

  00329	eb 12		 jmp	 SHORT $LN10@map_insert
$LN9@map_insert:

; 1651 : 		{
; 1652 : 			transmit_entity_comms_message (ENTITY_COMMS_ADD_PLANNER_WAYPOINT, wp1, &pos);

  0032b	8d 45 e8	 lea	 eax, DWORD PTR _pos$[ebp]
  0032e	50		 push	 eax
  0032f	8b 4d f8	 mov	 ecx, DWORD PTR _wp1$[ebp]
  00332	51		 push	 ecx
  00333	6a 01		 push	 1
  00335	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  0033a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@map_insert:

; 1653 : 		}
; 1654 : 
; 1655 : 		return TRUE;

  0033d	b8 01 00 00 00	 mov	 eax, 1
  00342	eb 04		 jmp	 SHORT $LN4@map_insert

; 1656 : 	}
; 1657 : 	else

  00344	eb 02		 jmp	 SHORT $LN4@map_insert
$LN3@map_insert:

; 1658 : 	{
; 1659 : 		return FALSE;

  00346	33 c0		 xor	 eax, eax
$LN4@map_insert:

; 1660 : 	}
; 1661 : }

  00348	5f		 pop	 edi
  00349	5e		 pop	 esi
  0034a	5b		 pop	 ebx
  0034b	8b e5		 mov	 esp, ebp
  0034d	5d		 pop	 ebp
  0034e	c2 04 00	 ret	 4
?map_insert_waypoint_function@@YGHPAUUI_OBJECT@@@Z ENDP	; map_insert_waypoint_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_delete_waypoint_event@@YGXXZ
_TEXT	SEGMENT
tv228 = -84						; size = 4
tv202 = -84						; size = 4
tv181 = -84						; size = 4
tv157 = -84						; size = 4
tv136 = -84						; size = 4
tv85 = -84						; size = 4
tv251 = -80						; size = 4
tv220 = -80						; size = 4
tv194 = -80						; size = 4
tv174 = -80						; size = 4
tv149 = -80						; size = 4
tv129 = -80						; size = 4
tv78 = -80						; size = 4
tv71 = -80						; size = 4
_sub_type$ = -12					; size = 4
_task$ = -8						; size = 4
_en$ = -4						; size = 4
?map_delete_waypoint_event@@YGXXZ PROC			; map_delete_waypoint_event, COMDAT

; 1544 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1545 : 	entity
; 1546 : 		*en,
; 1547 : 		*task;
; 1548 : 
; 1549 : 	entity_sub_types
; 1550 : 		sub_type;
; 1551 : 
; 1552 : 	en = get_ui_mouse_over_entity ();

  00009	e8 00 00 00 00	 call	 ?get_ui_mouse_over_entity@@YGPAUENTITY@@XZ ; get_ui_mouse_over_entity
  0000e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 1553 : 
; 1554 : 	if (en)

  00011	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	0f 84 02 04 00
	00		 je	 $LN1@map_delete

; 1555 : 	{
; 1556 : 		if (get_local_entity_type (en) == ENTITY_TYPE_WAYPOINT)

  0001b	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001f	74 0a		 je	 SHORT $LN10@map_delete
  00021	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00024	8b 08		 mov	 ecx, DWORD PTR [eax]
  00026	89 4d b0	 mov	 DWORD PTR tv71[ebp], ecx
  00029	eb 1d		 jmp	 SHORT $LN11@map_delete
$LN10@map_delete:
  0002b	68 14 06 00 00	 push	 1556			; 00000614H
  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	52		 push	 edx
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN11@map_delete:
  00048	83 7d b0 24	 cmp	 DWORD PTR tv71[ebp], 36	; 00000024H
  0004c	0f 85 cb 03 00
	00		 jne	 $LN1@map_delete

; 1557 : 		{
; 1558 : 			if ((get_local_entity_child_succ (en, LIST_TYPE_WAYPOINT)) && (get_local_entity_child_pred (en, LIST_TYPE_WAYPOINT)))

  00052	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00056	74 0a		 je	 SHORT $LN12@map_delete
  00058	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	89 4d b0	 mov	 DWORD PTR tv78[ebp], ecx
  00060	eb 1d		 jmp	 SHORT $LN13@map_delete
$LN12@map_delete:
  00062	68 16 06 00 00	 push	 1558			; 00000616H
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00072	52		 push	 edx
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00078	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN13@map_delete:
  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	85 c0		 test	 eax, eax
  00086	74 09		 je	 SHORT $LN14@map_delete
  00088	c7 45 ac 2c 00
	00 00		 mov	 DWORD PTR tv85[ebp], 44	; 0000002cH
  0008f	eb 1d		 jmp	 SHORT $LN15@map_delete
$LN14@map_delete:
  00091	68 16 06 00 00	 push	 1558			; 00000616H
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000a1	51		 push	 ecx
  000a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a7	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN15@map_delete:
  000ae	6a 2c		 push	 44			; 0000002cH
  000b0	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  000b3	52		 push	 edx
  000b4	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv78[ebp], 180
  000bb	8b 4d ac	 mov	 ecx, DWORD PTR tv85[ebp]
  000be	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  000c5	ff d2		 call	 edx
  000c7	85 c0		 test	 eax, eax
  000c9	0f 84 4e 03 00
	00		 je	 $LN1@map_delete
  000cf	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000d3	74 0a		 je	 SHORT $LN16@map_delete
  000d5	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	89 4d b0	 mov	 DWORD PTR tv129[ebp], ecx
  000dd	eb 1d		 jmp	 SHORT $LN17@map_delete
$LN16@map_delete:
  000df	68 16 06 00 00	 push	 1558			; 00000616H
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ef	52		 push	 edx
  000f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f5	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN17@map_delete:
  000fc	b8 01 00 00 00	 mov	 eax, 1
  00101	85 c0		 test	 eax, eax
  00103	74 09		 je	 SHORT $LN18@map_delete
  00105	c7 45 ac 2c 00
	00 00		 mov	 DWORD PTR tv136[ebp], 44 ; 0000002cH
  0010c	eb 1d		 jmp	 SHORT $LN19@map_delete
$LN18@map_delete:
  0010e	68 16 06 00 00	 push	 1558			; 00000616H
  00113	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00118	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011e	51		 push	 ecx
  0011f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00124	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN19@map_delete:
  0012b	6a 2c		 push	 44			; 0000002cH
  0012d	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00130	52		 push	 edx
  00131	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv129[ebp], 180
  00138	8b 4d ac	 mov	 ecx, DWORD PTR tv136[ebp]
  0013b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00142	ff d2		 call	 edx
  00144	85 c0		 test	 eax, eax
  00146	0f 84 d1 02 00
	00		 je	 $LN1@map_delete

; 1559 : 			{
; 1560 : 				sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0014c	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00150	74 0a		 je	 SHORT $LN20@map_delete
  00152	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00155	8b 08		 mov	 ecx, DWORD PTR [eax]
  00157	89 4d b0	 mov	 DWORD PTR tv149[ebp], ecx
  0015a	eb 21		 jmp	 SHORT $LN21@map_delete
$LN20@map_delete:
  0015c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  00162	83 c2 10	 add	 edx, 16			; 00000010H
  00165	52		 push	 edx
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00176	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN21@map_delete:
  0017d	b9 01 00 00 00	 mov	 ecx, 1
  00182	85 c9		 test	 ecx, ecx
  00184	74 09		 je	 SHORT $LN22@map_delete
  00186	c7 45 ac 34 00
	00 00		 mov	 DWORD PTR tv157[ebp], 52 ; 00000034H
  0018d	eb 21		 jmp	 SHORT $LN23@map_delete
$LN22@map_delete:
  0018f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  00195	83 c2 10	 add	 edx, 16			; 00000010H
  00198	52		 push	 edx
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN23@map_delete:
  001b0	6a 34		 push	 52			; 00000034H
  001b2	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  001b5	51		 push	 ecx
  001b6	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv149[ebp], 1116
  001bd	8b 45 ac	 mov	 eax, DWORD PTR tv157[ebp]
  001c0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001c7	ff d1		 call	 ecx
  001c9	89 45 f4	 mov	 DWORD PTR _sub_type$[ebp], eax

; 1561 : 
; 1562 : 				if (waypoint_database [sub_type].planner_moveable)

  001cc	6b 45 f4 64	 imul	 eax, DWORD PTR _sub_type$[ebp], 100
  001d0	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  001d6	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  001d9	83 e1 01	 and	 ecx, 1
  001dc	0f 84 3b 02 00
	00		 je	 $LN1@map_delete

; 1563 : 				{
; 1564 : 					//
; 1565 : 					// Delete waypoint
; 1566 : 					//
; 1567 : 
; 1568 : 					if (!get_local_entity_first_child (en, LIST_TYPE_CURRENT_WAYPOINT))

  001e2	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  001e6	74 0a		 je	 SHORT $LN24@map_delete
  001e8	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  001eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ed	89 4d b0	 mov	 DWORD PTR tv174[ebp], ecx
  001f0	eb 1d		 jmp	 SHORT $LN25@map_delete
$LN24@map_delete:
  001f2	68 20 06 00 00	 push	 1568			; 00000620H
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00202	52		 push	 edx
  00203	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00208	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN25@map_delete:
  0020f	b8 01 00 00 00	 mov	 eax, 1
  00214	85 c0		 test	 eax, eax
  00216	74 09		 je	 SHORT $LN26@map_delete
  00218	c7 45 ac 09 00
	00 00		 mov	 DWORD PTR tv181[ebp], 9
  0021f	eb 1d		 jmp	 SHORT $LN27@map_delete
$LN26@map_delete:
  00221	68 20 06 00 00	 push	 1568			; 00000620H
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00231	51		 push	 ecx
  00232	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00237	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN27@map_delete:
  0023e	6a 09		 push	 9
  00240	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00243	52		 push	 edx
  00244	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv174[ebp], 180
  0024b	8b 4d ac	 mov	 ecx, DWORD PTR tv181[ebp]
  0024e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00255	ff d2		 call	 edx
  00257	85 c0		 test	 eax, eax
  00259	0f 85 be 01 00
	00		 jne	 $LN1@map_delete

; 1569 : 					{
; 1570 : 						task = get_local_entity_parent (en, LIST_TYPE_WAYPOINT);

  0025f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00263	74 0a		 je	 SHORT $LN28@map_delete
  00265	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00268	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026a	89 4d b0	 mov	 DWORD PTR tv194[ebp], ecx
  0026d	eb 21		 jmp	 SHORT $LN29@map_delete
$LN28@map_delete:
  0026f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  00275	83 c2 1a	 add	 edx, 26			; 0000001aH
  00278	52		 push	 edx
  00279	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00289	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN29@map_delete:
  00290	b9 01 00 00 00	 mov	 ecx, 1
  00295	85 c9		 test	 ecx, ecx
  00297	74 09		 je	 SHORT $LN30@map_delete
  00299	c7 45 ac 2c 00
	00 00		 mov	 DWORD PTR tv202[ebp], 44 ; 0000002cH
  002a0	eb 21		 jmp	 SHORT $LN31@map_delete
$LN30@map_delete:
  002a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  002a8	83 c2 1a	 add	 edx, 26			; 0000001aH
  002ab	52		 push	 edx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN31@map_delete:
  002c3	6a 2c		 push	 44			; 0000002cH
  002c5	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  002c8	51		 push	 ecx
  002c9	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv194[ebp], 180
  002d0	8b 45 ac	 mov	 eax, DWORD PTR tv202[ebp]
  002d3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002da	ff d1		 call	 ecx
  002dc	89 45 f8	 mov	 DWORD PTR _task$[ebp], eax

; 1571 : 
; 1572 : 						player_map_updated(task);

  002df	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  002e2	50		 push	 eax
  002e3	e8 00 00 00 00	 call	 ?player_map_updated@@YGXPAUENTITY@@@Z ; player_map_updated

; 1573 : 
; 1574 : 						ASSERT (task);

  002e8	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  002ec	75 18		 jne	 SHORT $LN7@map_delete
  002ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  002f3	83 c0 1e	 add	 eax, 30			; 0000001eH
  002f6	50		 push	 eax
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  00301	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_delete:

; 1575 : 
; 1576 : 						ASSERT (get_local_entity_int_value (task, INT_TYPE_PRIMARY_TASK));

  00306	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  0030a	74 0a		 je	 SHORT $LN32@map_delete
  0030c	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  0030f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00311	89 4d b0	 mov	 DWORD PTR tv220[ebp], ecx
  00314	eb 21		 jmp	 SHORT $LN33@map_delete
$LN32@map_delete:
  00316	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  0031c	83 c2 20	 add	 edx, 32			; 00000020H
  0031f	52		 push	 edx
  00320	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00325	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032a	50		 push	 eax
  0032b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00330	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN33@map_delete:
  00337	b9 01 00 00 00	 mov	 ecx, 1
  0033c	85 c9		 test	 ecx, ecx
  0033e	74 09		 je	 SHORT $LN34@map_delete
  00340	c7 45 ac a3 00
	00 00		 mov	 DWORD PTR tv228[ebp], 163 ; 000000a3H
  00347	eb 21		 jmp	 SHORT $LN35@map_delete
$LN34@map_delete:
  00349	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  0034f	83 c2 20	 add	 edx, 32			; 00000020H
  00352	52		 push	 edx
  00353	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00358	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00363	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv228[ebp], 0
$LN35@map_delete:
  0036a	68 a3 00 00 00	 push	 163			; 000000a3H
  0036f	8b 4d f8	 mov	 ecx, DWORD PTR _task$[ebp]
  00372	51		 push	 ecx
  00373	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv220[ebp], 1116
  0037a	8b 45 ac	 mov	 eax, DWORD PTR tv228[ebp]
  0037d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00384	ff d1		 call	 ecx
  00386	85 c0		 test	 eax, eax
  00388	75 18		 jne	 SHORT $LN8@map_delete
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  0038f	83 c0 20	 add	 eax, 32			; 00000020H
  00392	50		 push	 eax
  00393	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00398	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@OLKDNCL@get_local_entity_int_value?5?$CItas@
  0039d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@map_delete:

; 1577 : 
; 1578 : 						//
; 1579 : 						// "Fast-track" unlinking of waypoint, Required to stop client "double-deleting"
; 1580 : 						//
; 1581 : 
; 1582 : 						unlink_local_entity_children (en, LIST_TYPE_CURRENT_WAYPOINT);

  003a2	6a 09		 push	 9
  003a4	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  003a7	50		 push	 eax
  003a8	e8 00 00 00 00	 call	 ?unlink_local_entity_children@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; unlink_local_entity_children

; 1583 : 
; 1584 : 						delete_local_entity_from_parents_child_list (en, LIST_TYPE_TASK_DEPENDENT);

  003ad	6a 27		 push	 39			; 00000027H
  003af	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list

; 1585 : 
; 1586 : 						delete_local_entity_from_parents_child_list (en, LIST_TYPE_WAYPOINT);

  003b8	6a 2c		 push	 44			; 0000002cH
  003ba	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list

; 1587 : 
; 1588 : 						//
; 1589 : 						// Destroy Entity
; 1590 : 						//
; 1591 : 
; 1592 : 						destroy_client_server_entity (en);

  003c3	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  003c7	74 0a		 je	 SHORT $LN36@map_delete
  003c9	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  003cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  003ce	89 4d b0	 mov	 DWORD PTR tv251[ebp], ecx
  003d1	eb 21		 jmp	 SHORT $LN37@map_delete
$LN36@map_delete:
  003d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_delete_waypoint_event@@YGXXZ@4JA
  003d9	83 c2 30	 add	 edx, 48			; 00000030H
  003dc	52		 push	 edx
  003dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e7	50		 push	 eax
  003e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ed	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN37@map_delete:
  003f4	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  003f7	51		 push	 ecx
  003f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  003fe	c1 e2 02	 shl	 edx, 2
  00401	8b 45 b0	 mov	 eax, DWORD PTR tv251[ebp]
  00404	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0040b	ff d1		 call	 ecx

; 1593 : 
; 1594 : 						update_client_server_entity_waypoint_list_tags (task);

  0040d	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 ?update_client_server_entity_waypoint_list_tags@@YGXPAUENTITY@@@Z ; update_client_server_entity_waypoint_list_tags

; 1595 : 
; 1596 : 						set_ui_mouse_over_entity (NULL);

  00416	6a 00		 push	 0
  00418	e8 00 00 00 00	 call	 ?set_ui_mouse_over_entity@@YGXPAUENTITY@@@Z ; set_ui_mouse_over_entity
$LN1@map_delete:

; 1597 : 					}
; 1598 : 				}
; 1599 : 			}
; 1600 : 		}
; 1601 : 	}
; 1602 : }

  0041d	5f		 pop	 edi
  0041e	5e		 pop	 esi
  0041f	5b		 pop	 ebx
  00420	8b e5		 mov	 esp, ebp
  00422	5d		 pop	 ebp
  00423	c3		 ret	 0
?map_delete_waypoint_event@@YGXXZ ENDP			; map_delete_waypoint_event
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z
_TEXT	SEGMENT
tv137 = -76						; size = 4
tv154 = -72						; size = 4
tv129 = -72						; size = 4
tv85 = -72						; size = 4
_task$ = -4						; size = 4
_wp1$ = 8						; size = 4
_pos$ = 12						; size = 4
?map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z PROC	; map_add_waypoint, COMDAT

; 1508 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1509 : 	entity
; 1510 : 		*task;
; 1511 : 
; 1512 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@map_add_wa
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_add_wa:

; 1513 : 
; 1514 : 	ASSERT (pos);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _pos$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@map_add_wa
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00035	83 c0 06	 add	 eax, 6
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_add_wa:

; 1515 : 
; 1516 : 	ASSERT (wp1);

  00048	83 7d 08 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@map_add_wa
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00053	83 c0 08	 add	 eax, 8
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_03LKPPNHCE@wp1@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_add_wa:

; 1517 : 	ASSERT (get_local_entity_type (wp1) == ENTITY_TYPE_WAYPOINT);

  00066	83 7d 08 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  0006a	74 0a		 je	 SHORT $LN9@map_add_wa
  0006c	8b 45 08	 mov	 eax, DWORD PTR _wp1$[ebp]
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	89 4d b8	 mov	 DWORD PTR tv85[ebp], ecx
  00074	eb 21		 jmp	 SHORT $LN10@map_add_wa
$LN9@map_add_wa:
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0007c	83 c2 09	 add	 edx, 9
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN10@map_add_wa:
  00097	83 7d b8 24	 cmp	 DWORD PTR tv85[ebp], 36	; 00000024H
  0009b	74 18		 je	 SHORT $LN5@map_add_wa
  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000a2	83 c0 09	 add	 eax, 9
  000a5	50		 push	 eax
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@JBELCLJH@get_local_entity_type?5?$CIwp1?$CJ?5?$DN?$DN?5@
  000b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@map_add_wa:

; 1518 : 
; 1519 : 	task = get_local_entity_parent (wp1, LIST_TYPE_WAYPOINT);

  000b5	83 7d 08 00	 cmp	 DWORD PTR _wp1$[ebp], 0
  000b9	74 0a		 je	 SHORT $LN11@map_add_wa
  000bb	8b 45 08	 mov	 eax, DWORD PTR _wp1$[ebp]
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	89 4d b8	 mov	 DWORD PTR tv129[ebp], ecx
  000c3	eb 21		 jmp	 SHORT $LN12@map_add_wa
$LN11@map_add_wa:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000cb	83 c2 0b	 add	 edx, 11			; 0000000bH
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN12@map_add_wa:
  000e6	b9 01 00 00 00	 mov	 ecx, 1
  000eb	85 c9		 test	 ecx, ecx
  000ed	74 09		 je	 SHORT $LN13@map_add_wa
  000ef	c7 45 b4 2c 00
	00 00		 mov	 DWORD PTR tv137[ebp], 44 ; 0000002cH
  000f6	eb 21		 jmp	 SHORT $LN14@map_add_wa
$LN13@map_add_wa:
  000f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  000fe	83 c2 0b	 add	 edx, 11			; 0000000bH
  00101	52		 push	 edx
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00107	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00112	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN14@map_add_wa:
  00119	6a 2c		 push	 44			; 0000002cH
  0011b	8b 4d 08	 mov	 ecx, DWORD PTR _wp1$[ebp]
  0011e	51		 push	 ecx
  0011f	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv129[ebp], 180
  00126	8b 45 b4	 mov	 eax, DWORD PTR tv137[ebp]
  00129	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00130	ff d1		 call	 ecx
  00132	89 45 fc	 mov	 DWORD PTR _task$[ebp], eax

; 1520 : 
; 1521 : 	ASSERT (task);

  00135	83 7d fc 00	 cmp	 DWORD PTR _task$[ebp], 0
  00139	75 18		 jne	 SHORT $LN6@map_add_wa
  0013b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00140	83 c0 0d	 add	 eax, 13			; 0000000dH
  00143	50		 push	 eax
  00144	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00149	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  0014e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@map_add_wa:

; 1522 : 	ASSERT (get_local_entity_type (task) == ENTITY_TYPE_TASK);

  00153	83 7d fc 00	 cmp	 DWORD PTR _task$[ebp], 0
  00157	74 0a		 je	 SHORT $LN15@map_add_wa
  00159	8b 45 fc	 mov	 eax, DWORD PTR _task$[ebp]
  0015c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015e	89 4d b8	 mov	 DWORD PTR tv154[ebp], ecx
  00161	eb 21		 jmp	 SHORT $LN16@map_add_wa
$LN15@map_add_wa:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  00169	83 c2 0e	 add	 edx, 14			; 0000000eH
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN16@map_add_wa:
  00184	83 7d b8 22	 cmp	 DWORD PTR tv154[ebp], 34 ; 00000022H
  00188	74 18		 je	 SHORT $LN7@map_add_wa
  0018a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z@4JA
  0018f	83 c0 0e	 add	 eax, 14			; 0000000eH
  00192	50		 push	 eax
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@FPHBFJNE@get_local_entity_type?5?$CItask?$CJ?5?$DN?$DN@
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@map_add_wa:

; 1523 : 
; 1524 : 	create_client_server_entity

  001a2	6a 00		 push	 0
  001a4	8b 45 0c	 mov	 eax, DWORD PTR _pos$[ebp]
  001a7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001ac	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001b0	83 ec 08	 sub	 esp, 8
  001b3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001b8	8b 4d 0c	 mov	 ecx, DWORD PTR _pos$[ebp]
  001bb	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  001c0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001c4	83 ec 08	 sub	 esp, 8
  001c7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001cc	8b 55 0c	 mov	 edx, DWORD PTR _pos$[ebp]
  001cf	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  001d3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001d7	83 ec 08	 sub	 esp, 8
  001da	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001df	6a 08		 push	 8
  001e1	6a 09		 push	 9
  001e3	6a 00		 push	 0
  001e5	68 a1 00 00 00	 push	 161			; 000000a1H
  001ea	6a 05		 push	 5
  001ec	6a 11		 push	 17			; 00000011H
  001ee	6a 34		 push	 52			; 00000034H
  001f0	6a 05		 push	 5
  001f2	8b 45 08	 mov	 eax, DWORD PTR _wp1$[ebp]
  001f5	50		 push	 eax
  001f6	6a 2c		 push	 44			; 0000002cH
  001f8	6a 03		 push	 3
  001fa	8b 4d fc	 mov	 ecx, DWORD PTR _task$[ebp]
  001fd	51		 push	 ecx
  001fe	6a 2c		 push	 44			; 0000002cH
  00200	6a 06		 push	 6
  00202	6a ff		 push	 -1
  00204	6a 24		 push	 36			; 00000024H
  00206	e8 00 00 00 00	 call	 ?create_client_server_entity@@YAPAUENTITY@@W4ENTITY_TYPES@@HZZ ; create_client_server_entity
  0020b	83 c4 5c	 add	 esp, 92			; 0000005cH

; 1525 : 	(
; 1526 : 		ENTITY_TYPE_WAYPOINT,
; 1527 : 		ENTITY_INDEX_DONT_CARE,
; 1528 : 		ENTITY_ATTR_PARENT (LIST_TYPE_WAYPOINT, task),
; 1529 : 		ENTITY_ATTR_CHILD_PRED (LIST_TYPE_WAYPOINT, wp1),
; 1530 : 		ENTITY_ATTR_INT_VALUE (INT_TYPE_ENTITY_SUB_TYPE, ENTITY_SUB_TYPE_WAYPOINT_NAVIGATION),
; 1531 : 		ENTITY_ATTR_INT_VALUE (INT_TYPE_POSITION_TYPE, POSITION_TYPE_ABSOLUTE),
; 1532 : 		ENTITY_ATTR_VEC3D (VEC3D_TYPE_POSITION, pos->x, pos->y, pos->z),
; 1533 : 		ENTITY_ATTR_END
; 1534 : 	);
; 1535 : 
; 1536 : 	player_map_updated(task);

  0020e	8b 45 fc	 mov	 eax, DWORD PTR _task$[ebp]
  00211	50		 push	 eax
  00212	e8 00 00 00 00	 call	 ?player_map_updated@@YGXPAUENTITY@@@Z ; player_map_updated

; 1537 : }

  00217	5f		 pop	 edi
  00218	5e		 pop	 esi
  00219	5b		 pop	 ebx
  0021a	8b e5		 mov	 esp, ebp
  0021c	5d		 pop	 ebp
  0021d	c2 08 00	 ret	 8
?map_add_waypoint@@YGXPAUENTITY@@PAUVEC3D@@@Z ENDP	; map_add_waypoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv92 = -80						; size = 4
tv94 = -76						; size = 8
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; map_zoom_out_function, COMDAT

; 1402 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1403 : 	map_dimension_type
; 1404 : 		*map_dimensions;
; 1405 : 
; 1406 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1407 : 
; 1408 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@map_zoom_o
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_zoom_o:

; 1409 : 
; 1410 : 	map_dimensions->size *= 2.0;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00044	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  0004c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00053	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1411 : 
; 1412 : 	map_dimensions->size = bound (map_dimensions->size, 100.0, max (MAX_MAP_X, MAX_MAP_Z));

  00058	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0005b	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00060	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00068	66 0f 2f c8	 comisd	 xmm1, xmm0
  0006c	76 0f		 jbe	 SHORT $LN6@map_zoom_o
  0006e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  00076	f2 0f 11 45 b4	 movsd	 QWORD PTR tv94[ebp], xmm0
  0007b	eb 4d		 jmp	 SHORT $LN7@map_zoom_o
$LN6@map_zoom_o:
  0007d	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  00082	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  00087	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0008f	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00094	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00097	76 1a		 jbe	 SHORT $LN4@map_zoom_o
  00099	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  0009e	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  000a3	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000a8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ac	f3 0f 11 45 b0	 movss	 DWORD PTR tv92[ebp], xmm0
  000b1	eb 0d		 jmp	 SHORT $LN5@map_zoom_o
$LN4@map_zoom_o:
  000b3	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  000b6	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  000bb	f3 0f 11 45 b0	 movss	 DWORD PTR tv92[ebp], xmm0
$LN5@map_zoom_o:
  000c0	f3 0f 5a 45 b0	 cvtss2sd xmm0, DWORD PTR tv92[ebp]
  000c5	f2 0f 11 45 b4	 movsd	 QWORD PTR tv94[ebp], xmm0
$LN7@map_zoom_o:
  000ca	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv94[ebp]
  000cf	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000d2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1413 : 
; 1414 : 	map_centralise_function (obj, NULL);

  000d7	6a 00		 push	 0
  000d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_centralise_function

; 1415 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 08 00	 ret	 8
?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; map_zoom_out_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv92 = -80						; size = 4
tv94 = -76						; size = 8
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; map_zoom_in_function, COMDAT

; 1382 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1383 : 	map_dimension_type
; 1384 : 		*map_dimensions;
; 1385 : 
; 1386 : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1387 : 
; 1388 : 	ASSERT (map_dimensions);

  0001e	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  00022	75 18		 jne	 SHORT $LN2@map_zoom_i
  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00029	83 c0 06	 add	 eax, 6
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00032	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_zoom_i:

; 1389 : 
; 1390 : 	map_dimensions->size /= 2.0;

  0003c	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0003f	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00044	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0004c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00050	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  00053	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1391 : 
; 1392 : 	map_dimensions->size = bound (map_dimensions->size, 100.0, max (MAX_MAP_X, MAX_MAP_Z));

  00058	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0005b	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00060	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00068	66 0f 2f c8	 comisd	 xmm1, xmm0
  0006c	76 0f		 jbe	 SHORT $LN6@map_zoom_i
  0006e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4059000000000000
  00076	f2 0f 11 45 b4	 movsd	 QWORD PTR tv94[ebp], xmm0
  0007b	eb 4d		 jmp	 SHORT $LN7@map_zoom_i
$LN6@map_zoom_i:
  0007d	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  00082	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  00087	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _map_dimensions$[ebp]
  0008f	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00094	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00097	76 1a		 jbe	 SHORT $LN4@map_zoom_i
  00099	68 44 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+68
  0009e	68 3c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+60
  000a3	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  000a8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000ac	f3 0f 11 45 b0	 movss	 DWORD PTR tv92[ebp], xmm0
  000b1	eb 0d		 jmp	 SHORT $LN5@map_zoom_i
$LN4@map_zoom_i:
  000b3	8b 55 fc	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  000b6	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  000bb	f3 0f 11 45 b0	 movss	 DWORD PTR tv92[ebp], xmm0
$LN5@map_zoom_i:
  000c0	f3 0f 5a 45 b0	 cvtss2sd xmm0, DWORD PTR tv92[ebp]
  000c5	f2 0f 11 45 b4	 movsd	 QWORD PTR tv94[ebp], xmm0
$LN7@map_zoom_i:
  000ca	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv94[ebp]
  000cf	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000d2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1393 : 
; 1394 : 	map_centralise_function (obj, NULL);

  000d7	6a 00		 push	 0
  000d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_centralise_function

; 1395 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	8b e5		 mov	 esp, ebp
  000e7	5d		 pop	 ebp
  000e8	c2 08 00	 ret	 8
?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; map_zoom_in_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv185 = -88						; size = 4
tv157 = -88						; size = 4
tv95 = -88						; size = 4
tv177 = -84						; size = 4
tv150 = -84						; size = 4
tv141 = -84						; size = 4
tv87 = -84						; size = 4
_side$ = -16						; size = 4
_group$ = -12						; size = 4
_en$ = -8						; size = 4
_map_dimensions$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; map_centralise_function, COMDAT

; 1304 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1305 : 	//vec3d
; 1306 : 	//	pos;
; 1307 : 
; 1308 : 	map_dimension_type
; 1309 : 		*map_dimensions;
; 1310 : 
; 1311 : 	entity
; 1312 : 		*en,
; 1313 : 		*group;
; 1314 : 
; 1315 : 	int
; 1316 : 		side;
; 1317 : 
; 1318 : 	if (((int) arg) == BUTTON_STATE_DOWN)

  00009	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0000d	0f 85 87 02 00
	00		 jne	 $LN1@map_centra

; 1319 : 	{
; 1320 : 		ASSERT (obj);

  00013	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  00017	75 18		 jne	 SHORT $LN3@map_centra
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0001e	83 c0 10	 add	 eax, 16			; 00000010H
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  0002c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@map_centra:

; 1321 : 
; 1322 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  00031	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00034	50		 push	 eax
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  00041	ff d0		 call	 eax
  00043	89 45 fc	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1323 : 
; 1324 : 		ASSERT (map_dimensions);

  00046	83 7d fc 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  0004a	75 18		 jne	 SHORT $LN4@map_centra
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00051	83 c0 14	 add	 eax, 20			; 00000014H
  00054	50		 push	 eax
  00055	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  0005f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_centra:

; 1325 : 
; 1326 : 		// Jabberwock 031007 Campaign Commander - cancel mission
; 1327 : 
; 1328 : 
; 1329 : 		map_dimensions->selected_entity = NULL;

  00064	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00067	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 1330 : 
; 1331 : 		side = get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0006e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00075	74 0c		 je	 SHORT $LN10@map_centra
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0007c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007e	89 4d ac	 mov	 DWORD PTR tv87[ebp], ecx
  00081	eb 21		 jmp	 SHORT $LN11@map_centra
$LN10@map_centra:
  00083	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00089	83 c2 1b	 add	 edx, 27			; 0000001bH
  0008c	52		 push	 edx
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv87[ebp], 0
$LN11@map_centra:
  000a4	b9 01 00 00 00	 mov	 ecx, 1
  000a9	85 c9		 test	 ecx, ecx
  000ab	74 09		 je	 SHORT $LN12@map_centra
  000ad	c7 45 a8 bb 00
	00 00		 mov	 DWORD PTR tv95[ebp], 187 ; 000000bbH
  000b4	eb 21		 jmp	 SHORT $LN13@map_centra
$LN12@map_centra:
  000b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  000bc	83 c2 1b	 add	 edx, 27			; 0000001bH
  000bf	52		 push	 edx
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d0	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN13@map_centra:
  000d7	68 bb 00 00 00	 push	 187			; 000000bbH
  000dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000e2	51		 push	 ecx
  000e3	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv87[ebp], 1116
  000ea	8b 45 a8	 mov	 eax, DWORD PTR tv95[ebp]
  000ed	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000f4	ff d1		 call	 ecx
  000f6	89 45 f0	 mov	 DWORD PTR _side$[ebp], eax

; 1332 : 
; 1333 : 		en = get_map_mouse_over_entity (map_dimensions);

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z ; get_map_mouse_over_entity
  00102	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 1334 : 
; 1335 : 		if ((en) && (get_local_entity_type (en) == ENTITY_TYPE_TASK) && (session_camcom) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER))

  00105	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00109	0f 84 8b 01 00
	00		 je	 $LN1@map_centra
  0010f	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00113	74 0a		 je	 SHORT $LN14@map_centra
  00115	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00118	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011a	89 4d ac	 mov	 DWORD PTR tv141[ebp], ecx
  0011d	eb 1d		 jmp	 SHORT $LN15@map_centra
$LN14@map_centra:
  0011f	68 37 05 00 00	 push	 1335			; 00000537H
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00129	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012f	52		 push	 edx
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN15@map_centra:
  0013c	83 7d ac 22	 cmp	 DWORD PTR tv141[ebp], 34 ; 00000022H
  00140	0f 85 54 01 00
	00		 jne	 $LN1@map_centra
  00146	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_camcom@@3HA, 0 ; session_camcom
  0014d	0f 84 47 01 00
	00		 je	 $LN1@map_centra
  00153	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  0015a	0f 85 3a 01 00
	00		 jne	 $LN1@map_centra

; 1336 : 		{
; 1337 : 			if (get_local_entity_int_value (en, INT_TYPE_SIDE) == side)

  00160	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00164	74 0a		 je	 SHORT $LN16@map_centra
  00166	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00169	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016b	89 4d ac	 mov	 DWORD PTR tv150[ebp], ecx
  0016e	eb 1d		 jmp	 SHORT $LN17@map_centra
$LN16@map_centra:
  00170	68 39 05 00 00	 push	 1337			; 00000539H
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00180	52		 push	 edx
  00181	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00186	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN17@map_centra:
  0018d	b8 01 00 00 00	 mov	 eax, 1
  00192	85 c0		 test	 eax, eax
  00194	74 09		 je	 SHORT $LN18@map_centra
  00196	c7 45 a8 bb 00
	00 00		 mov	 DWORD PTR tv157[ebp], 187 ; 000000bbH
  0019d	eb 1d		 jmp	 SHORT $LN19@map_centra
$LN18@map_centra:
  0019f	68 39 05 00 00	 push	 1337			; 00000539H
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001af	51		 push	 ecx
  001b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b5	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN19@map_centra:
  001bc	68 bb 00 00 00	 push	 187			; 000000bbH
  001c1	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  001c4	52		 push	 edx
  001c5	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv150[ebp], 1116
  001cc	8b 4d a8	 mov	 ecx, DWORD PTR tv157[ebp]
  001cf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001d6	ff d2		 call	 edx
  001d8	3b 45 f0	 cmp	 eax, DWORD PTR _side$[ebp]
  001db	0f 85 b9 00 00
	00		 jne	 $LN1@map_centra

; 1338 : 			{
; 1339 : 				if (get_local_task_list_type (en) == LIST_TYPE_UNASSIGNED_TASK)

  001e1	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001e4	50		 push	 eax
  001e5	e8 00 00 00 00	 call	 ?get_local_task_list_type@@YG?AW4LIST_TYPES@@PAUENTITY@@@Z ; get_local_task_list_type
  001ea	83 f8 28	 cmp	 eax, 40			; 00000028H
  001ed	75 17		 jne	 SHORT $LN7@map_centra

; 1340 : 				{
; 1341 : 					notify_local_entity (ENTITY_MESSAGE_TASK_TERMINATED, en, NULL, TASK_TERMINATED_ABORTED);

  001ef	6a 02		 push	 2
  001f1	6a 00		 push	 0
  001f3	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001f6	50		 push	 eax
  001f7	6a 36		 push	 54			; 00000036H
  001f9	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  001fe	83 c4 10	 add	 esp, 16			; 00000010H

; 1342 : 				}
; 1343 : 				else

  00201	e9 94 00 00 00	 jmp	 $LN1@map_centra
$LN7@map_centra:

; 1344 : 				{
; 1345 : 					group = get_local_entity_parent (en, LIST_TYPE_TASK_DEPENDENT);

  00206	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0020a	74 0a		 je	 SHORT $LN20@map_centra
  0020c	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0020f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00211	89 4d ac	 mov	 DWORD PTR tv177[ebp], ecx
  00214	eb 21		 jmp	 SHORT $LN21@map_centra
$LN20@map_centra:
  00216	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0021c	83 c2 29	 add	 edx, 41			; 00000029H
  0021f	52		 push	 edx
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00225	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022a	50		 push	 eax
  0022b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00230	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN21@map_centra:
  00237	b9 01 00 00 00	 mov	 ecx, 1
  0023c	85 c9		 test	 ecx, ecx
  0023e	74 09		 je	 SHORT $LN22@map_centra
  00240	c7 45 a8 27 00
	00 00		 mov	 DWORD PTR tv185[ebp], 39 ; 00000027H
  00247	eb 21		 jmp	 SHORT $LN23@map_centra
$LN22@map_centra:
  00249	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0024f	83 c2 29	 add	 edx, 41			; 00000029H
  00252	52		 push	 edx
  00253	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00258	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0025d	50		 push	 eax
  0025e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00263	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN23@map_centra:
  0026a	6a 27		 push	 39			; 00000027H
  0026c	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0026f	51		 push	 ecx
  00270	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv177[ebp], 180
  00277	8b 45 a8	 mov	 eax, DWORD PTR tv185[ebp]
  0027a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00281	ff d1		 call	 ecx
  00283	89 45 f4	 mov	 DWORD PTR _group$[ebp], eax

; 1346 : 
; 1347 : 					notify_local_entity (ENTITY_MESSAGE_TASK_COMPLETED, en, en, TASK_TERMINATED_STOP_TIME_REACHED);

  00286	6a 05		 push	 5
  00288	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0028b	50		 push	 eax
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0028f	51		 push	 ecx
  00290	6a 32		 push	 50			; 00000032H
  00292	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00297	83 c4 10	 add	 esp, 16			; 00000010H
$LN1@map_centra:

; 1348 : 				}
; 1349 : 			}
; 1350 : 		}
; 1351 : 		// Jabberwock 031007 ends
; 1352 : 		//else  // Jabberwock 031020 Fine mouse panning - commented out, as centralising is not needed and quirky
; 1353 : 		{
; 1354 : 			//
; 1355 : 			// Disable Tracking
; 1356 : 			//
; 1357 : 
; 1358 : 		//	force_map_layer_control_object (MAP_LAYER_CONTROL_TRACK_PLAYER, FALSE);
; 1359 : 
; 1360 : 			//
; 1361 : 			// work out click position in world coords
; 1362 : 			//
; 1363 : 
; 1364 : 		//	pos.x = get_mouse_x ();
; 1365 : 		//	pos.z = get_mouse_y ();
; 1366 : 
; 1367 : 		//	map_get_world_coords_from_screen (obj, &pos, &pos);
; 1368 : 
; 1369 : 		//	map_dimensions->x = pos.x;
; 1370 : 		//	map_dimensions->z = pos.z;
; 1371 : 
; 1372 : 		//	bound_map_extents (obj, NULL, NULL);
; 1373 : 		}
; 1374 : 	}
; 1375 : }

  0029a	5f		 pop	 edi
  0029b	5e		 pop	 esi
  0029c	5b		 pop	 ebx
  0029d	8b e5		 mov	 esp, ebp
  0029f	5d		 pop	 ebp
  002a0	c2 08 00	 ret	 8
?map_centralise_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; map_centralise_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?map_goto_function@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv186 = -96						; size = 4
tv158 = -96						; size = 4
tv81 = -96						; size = 4
tv267 = -92						; size = 4
tv178 = -92						; size = 4
tv150 = -92						; size = 4
tv74 = -92						; size = 4
$T1 = -88						; size = 4
_map_dimensions$ = -20					; size = 4
_altitude$ = -16					; size = 4
_pos$ = -12						; size = 12
_obj$ = 8						; size = 4
?map_goto_function@@YGXPAUUI_OBJECT@@@Z PROC		; map_goto_function, COMDAT

; 1882 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1883 : 	vec3d
; 1884 : 		pos;
; 1885 : 
; 1886 : 	float
; 1887 : 		altitude;
; 1888 : 
; 1889 : 	map_dimension_type
; 1890 : 		*map_dimensions;
; 1891 : 
; 1892 : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN2@map_goto_f
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  00017	83 c0 0a	 add	 eax, 10			; 0000000aH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@map_goto_f:

; 1893 : 
; 1894 : 	if (get_local_entity_int_value (get_session_entity (), INT_TYPE_CHEATS_ENABLED))

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00031	74 0c		 je	 SHORT $LN9@map_goto_f
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d a4	 mov	 DWORD PTR tv74[ebp], ecx
  0003d	eb 1d		 jmp	 SHORT $LN10@map_goto_f
$LN9@map_goto_f:
  0003f	68 66 07 00 00	 push	 1894			; 00000766H
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004f	52		 push	 edx
  00050	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00055	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN10@map_goto_f:
  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	85 c0		 test	 eax, eax
  00063	74 09		 je	 SHORT $LN11@map_goto_f
  00065	c7 45 a0 17 00
	00 00		 mov	 DWORD PTR tv81[ebp], 23	; 00000017H
  0006c	eb 1d		 jmp	 SHORT $LN12@map_goto_f
$LN11@map_goto_f:
  0006e	68 66 07 00 00	 push	 1894			; 00000766H
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00078	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN12@map_goto_f:
  0008b	6a 17		 push	 23			; 00000017H
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00093	52		 push	 edx
  00094	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  0009b	8b 4d a0	 mov	 ecx, DWORD PTR tv81[ebp]
  0009e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a5	ff d2		 call	 edx
  000a7	85 c0		 test	 eax, eax
  000a9	0f 84 af 02 00
	00		 je	 $LN6@map_goto_f

; 1895 : 	{
; 1896 : 		map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  000af	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b2	50		 push	 eax
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  000bf	ff d0		 call	 eax
  000c1	89 45 ec	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 1897 : 
; 1898 : 		ASSERT (map_dimensions);

  000c4	83 7d ec 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  000c8	75 18		 jne	 SHORT $LN4@map_goto_f
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  000cf	83 c0 10	 add	 eax, 16			; 00000010H
  000d2	50		 push	 eax
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  000dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@map_goto_f:

; 1899 : 
; 1900 : 		if (get_gunship_entity ())

  000e2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000e9	0f 84 6f 02 00
	00		 je	 $LN6@map_goto_f

; 1901 : 		{
; 1902 : 			if ((map_dimensions->enable_goto) || (session_planner_goto_button))

  000ef	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  000f2	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  000f5	d1 e9		 shr	 ecx, 1
  000f7	83 e1 01	 and	 ecx, 1
  000fa	75 0d		 jne	 SHORT $LN7@map_goto_f
  000fc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_planner_goto_button@@3HA, 0 ; session_planner_goto_button
  00103	0f 84 55 02 00
	00		 je	 $LN6@map_goto_f
$LN7@map_goto_f:

; 1903 : 			{
; 1904 : 				pos.x = get_mouse_x ();

  00109	e8 00 00 00 00	 call	 ?get_mouse_x@@YGHXZ	; get_mouse_x
  0010e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00112	f3 0f 11 45 f4	 movss	 DWORD PTR _pos$[ebp], xmm0

; 1905 : 				pos.z = get_mouse_y ();

  00117	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  0011c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00120	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp+8], xmm0

; 1906 : 
; 1907 : 				map_get_world_coords_from_screen (obj, &pos, &pos);

  00125	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  00128	50		 push	 eax
  00129	8d 4d f4	 lea	 ecx, DWORD PTR _pos$[ebp]
  0012c	51		 push	 ecx
  0012d	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00130	52		 push	 edx
  00131	e8 00 00 00 00	 call	 ?map_get_world_coords_from_screen@@YGXPAUUI_OBJECT@@PAUVEC3D@@1@Z ; map_get_world_coords_from_screen

; 1908 : 
; 1909 : 				bound_position_to_adjusted_map_volume (&pos);

  00136	8d 45 f4	 lea	 eax, DWORD PTR _pos$[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume

; 1910 : 
; 1911 : 				altitude = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_RADAR_ALTITUDE);

  0013f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00146	74 0c		 je	 SHORT $LN13@map_goto_f
  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0014d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014f	89 4d a4	 mov	 DWORD PTR tv150[ebp], ecx
  00152	eb 21		 jmp	 SHORT $LN14@map_goto_f
$LN13@map_goto_f:
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  0015a	83 c2 1d	 add	 edx, 29			; 0000001dH
  0015d	52		 push	 edx
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN14@map_goto_f:
  00175	b9 01 00 00 00	 mov	 ecx, 1
  0017a	85 c9		 test	 ecx, ecx
  0017c	74 09		 je	 SHORT $LN15@map_goto_f
  0017e	c7 45 a0 68 00
	00 00		 mov	 DWORD PTR tv158[ebp], 104 ; 00000068H
  00185	eb 21		 jmp	 SHORT $LN16@map_goto_f
$LN15@map_goto_f:
  00187	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  0018d	83 c2 1d	 add	 edx, 29			; 0000001dH
  00190	52		 push	 edx
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a1	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN16@map_goto_f:
  001a8	6a 68		 push	 104			; 00000068H
  001aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001b0	51		 push	 ecx
  001b1	69 55 a4 bc 02
	00 00		 imul	 edx, DWORD PTR tv150[ebp], 700
  001b8	8b 45 a0	 mov	 eax, DWORD PTR tv158[ebp]
  001bb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001c2	ff d1		 call	 ecx
  001c4	d9 5d f0	 fstp	 DWORD PTR _altitude$[ebp]

; 1912 : 
; 1913 : 				altitude = min (altitude, 100.0f);

  001c7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  001cf	f3 0f 11 45 a8	 movss	 DWORD PTR $T1[ebp], xmm0
  001d4	8d 45 a8	 lea	 eax, DWORD PTR $T1[ebp]
  001d7	50		 push	 eax
  001d8	8d 4d f0	 lea	 ecx, DWORD PTR _altitude$[ebp]
  001db	51		 push	 ecx
  001dc	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  001e1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001e5	f3 0f 11 45 f0	 movss	 DWORD PTR _altitude$[ebp], xmm0

; 1914 : 
; 1915 : 				pos.y = get_3d_terrain_elevation (pos.x, pos.z) + altitude;

  001ea	6a 00		 push	 0
  001ec	51		 push	 ecx
  001ed	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp+8]
  001f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f7	51		 push	 ecx
  001f8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00202	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00207	d9 5d a4	 fstp	 DWORD PTR tv267[ebp]
  0020a	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv267[ebp]
  0020f	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _altitude$[ebp]
  00214	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp+4], xmm0

; 1916 : 
; 1917 : 				set_client_server_entity_vec3d (get_gunship_entity (), VEC3D_TYPE_POSITION, &pos);

  00219	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00220	74 0c		 je	 SHORT $LN17@map_goto_f
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00227	8b 08		 mov	 ecx, DWORD PTR [eax]
  00229	89 4d a4	 mov	 DWORD PTR tv178[ebp], ecx
  0022c	eb 21		 jmp	 SHORT $LN18@map_goto_f
$LN17@map_goto_f:
  0022e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  00234	83 c2 23	 add	 edx, 35			; 00000023H
  00237	52		 push	 edx
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00248	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN18@map_goto_f:
  0024f	b9 01 00 00 00	 mov	 ecx, 1
  00254	85 c9		 test	 ecx, ecx
  00256	74 09		 je	 SHORT $LN19@map_goto_f
  00258	c7 45 a0 08 00
	00 00		 mov	 DWORD PTR tv186[ebp], 8
  0025f	eb 21		 jmp	 SHORT $LN20@map_goto_f
$LN19@map_goto_f:
  00261	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??map_goto_function@@YGXPAUUI_OBJECT@@@Z@4JA
  00267	83 c2 23	 add	 edx, 35			; 00000023H
  0026a	52		 push	 edx
  0026b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN20@map_goto_f:
  00282	8d 4d f4	 lea	 ecx, DWORD PTR _pos$[ebp]
  00285	51		 push	 ecx
  00286	6a 08		 push	 8
  00288	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0028e	52		 push	 edx
  0028f	69 45 a4 c0 00
	00 00		 imul	 eax, DWORD PTR tv178[ebp], 192
  00296	8b 4d a0	 mov	 ecx, DWORD PTR tv186[ebp]
  00299	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_vec3d@@3PAY1BI@1P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*8]
  002a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  002a5	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  002a8	ff d1		 call	 ecx

; 1918 : 
; 1919 : 				current_flight_dynamics->position.x = pos.x;

  002aa	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002b4	f2 0f 11 80 ac
	00 00 00	 movsd	 QWORD PTR [eax+172], xmm0

; 1920 : 				current_flight_dynamics->position.y = pos.y;

  002bc	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+4]
  002c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c6	f2 0f 11 80 b4
	00 00 00	 movsd	 QWORD PTR [eax+180], xmm0

; 1921 : 				current_flight_dynamics->position.z = pos.z;

  002ce	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp+8]
  002d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d8	f2 0f 11 80 bc
	00 00 00	 movsd	 QWORD PTR [eax+188], xmm0

; 1922 : 
; 1923 : 				current_flight_dynamics->model_motion_vector.x = 0.0;

  002e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e5	0f 57 c0	 xorps	 xmm0, xmm0
  002e8	f3 0f 11 80 30
	1c 00 00	 movss	 DWORD PTR [eax+7216], xmm0

; 1924 : 				current_flight_dynamics->model_motion_vector.y = 0.0;

  002f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f5	0f 57 c0	 xorps	 xmm0, xmm0
  002f8	f3 0f 11 80 34
	1c 00 00	 movss	 DWORD PTR [eax+7220], xmm0

; 1925 : 				current_flight_dynamics->model_motion_vector.z = 0.0;

  00300	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00305	0f 57 c0	 xorps	 xmm0, xmm0
  00308	f3 0f 11 80 38
	1c 00 00	 movss	 DWORD PTR [eax+7224], xmm0

; 1926 : 
; 1927 : 				current_flight_dynamics->world_motion_vector.x = 0.0;

  00310	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00315	0f 57 c0	 xorps	 xmm0, xmm0
  00318	f3 0f 11 80 3c
	1c 00 00	 movss	 DWORD PTR [eax+7228], xmm0

; 1928 : 				current_flight_dynamics->world_motion_vector.y = 0.0;

  00320	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00325	0f 57 c0	 xorps	 xmm0, xmm0
  00328	f3 0f 11 80 40
	1c 00 00	 movss	 DWORD PTR [eax+7232], xmm0

; 1929 : 				current_flight_dynamics->world_motion_vector.z = 0.0;

  00330	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00335	0f 57 c0	 xorps	 xmm0, xmm0
  00338	f3 0f 11 80 44
	1c 00 00	 movss	 DWORD PTR [eax+7236], xmm0

; 1930 : 
; 1931 : 				set_current_flight_dynamics_valid_collision_points (FALSE);

  00340	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00345	c7 80 c8 24 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+9416], 0

; 1932 : 
; 1933 : 				map_dimensions->enable_goto = FALSE;

  0034f	8b 45 ec	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00352	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00355	83 e1 fd	 and	 ecx, -3			; fffffffdH
  00358	8b 55 ec	 mov	 edx, DWORD PTR _map_dimensions$[ebp]
  0035b	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
$LN6@map_goto_f:

; 1934 : 			}
; 1935 : 		}
; 1936 : 	}
; 1937 : }

  0035e	5f		 pop	 edi
  0035f	5e		 pop	 esi
  00360	5b		 pop	 ebx
  00361	8b e5		 mov	 esp, ebp
  00363	5d		 pop	 ebp
  00364	c2 04 00	 ret	 4
?map_goto_function@@YGXPAUUI_OBJECT@@@Z ENDP		; map_goto_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z
_TEXT	SEGMENT
_loop$1 = -36						; size = 4
_map_controls_area$ = -32				; size = 4
_map_window$ = -28					; size = 4
_map_area$ = -24					; size = 4
_y_inc$ = -20						; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_parent$ = 8						; size = 4
_data$ = 12						; size = 4
_draw_function$ = 16					; size = 4
_left_mouse_function$ = 20				; size = 4
_right_mouse_function$ = 24				; size = 4
_full_screen_parent$ = 28				; size = 4
?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z PROC ; define_map_objects, COMDAT

; 5161 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5162 : 	float
; 5163 : 		x1,
; 5164 : 		y1,
; 5165 : 		x2,
; 5166 : 		y2,
; 5167 : 		y_inc;
; 5168 : 
; 5169 : 	ui_object
; 5170 : 		*map_area,
; 5171 : 		*map_window,
; 5172 : 		*map_controls_area;
; 5173 : 
; 5174 : 	ASSERT (parent);

  00009	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@define_map
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU2@@Z@4JA
  00014	83 c0 0d	 add	 eax, 13			; 0000000dH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@define_map:

; 5175 : 
; 5176 : 	ASSERT (data);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _data$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN6@define_map
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU2@@Z@4JA
  00032	83 c0 0f	 add	 eax, 15			; 0000000fH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@define_map:

; 5177 : 
; 5178 : 	memset (data, 0, sizeof (map_dimension_type));

  00045	6a 6c		 push	 108			; 0000006cH
  00047	6a 00		 push	 0
  00049	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _memset
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5179 : 
; 5180 : 	set_ui_object_user_ptr (parent, data);

  00055	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00058	50		 push	 eax
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  0005c	51		 push	 ecx
  0005d	8b 55 08	 mov	 edx, DWORD PTR _parent$[ebp]
  00060	8b 02		 mov	 eax, DWORD PTR [edx]
  00062	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_user_ptr@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4]
  00069	ff d1		 call	 ecx

; 5181 : 
; 5182 : 	set_ui_object_clear (parent, TRUE);

  0006b	6a 01		 push	 1
  0006d	8b 45 08	 mov	 eax, DWORD PTR _parent$[ebp]
  00070	50		 push	 eax
  00071	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  00074	8b 11		 mov	 edx, DWORD PTR [ecx]
  00076	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_clear@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0007d	ff d0		 call	 eax

; 5183 : 
; 5184 : 	data->parent = parent;

  0007f	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00082	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  00085	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 5185 : 
; 5186 : 	/////////////////////////////////////////////////////////////////
; 5187 : 
; 5188 : 	x1 = 0.0;

  00088	0f 57 c0	 xorps	 xmm0, xmm0
  0008b	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 5189 : 	y1 = 0.0;

  00090	0f 57 c0	 xorps	 xmm0, xmm0
  00093	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5190 : 	x2 = 1.0;

  00098	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000a0	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 5191 : 	y2 = 1.0;

  000a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000ad	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5192 : 
; 5193 : 	map_area = create_ui_object

  000b2	6a 11		 push	 17			; 00000011H
  000b4	6a 01		 push	 1
  000b6	6a 07		 push	 7
  000b8	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  000bb	50		 push	 eax
  000bc	6a 56		 push	 86			; 00000056H
  000be	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  000c3	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  000c8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000d4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  000d9	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  000de	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000e2	83 ec 08	 sub	 esp, 8
  000e5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ea	6a 59		 push	 89			; 00000059H
  000ec	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  000f1	83 ec 08	 sub	 esp, 8
  000f4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000f9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  000fe	83 ec 08	 sub	 esp, 8
  00101	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00106	6a 58		 push	 88			; 00000058H
  00108	8b 4d 08	 mov	 ecx, DWORD PTR _parent$[ebp]
  0010b	51		 push	 ecx
  0010c	6a 32		 push	 50			; 00000032H
  0010e	6a 01		 push	 1
  00110	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00115	83 c4 48	 add	 esp, 72			; 00000048H
  00118	89 45 e8	 mov	 DWORD PTR _map_area$[ebp], eax

; 5194 : 			(
; 5195 : 				UI_TYPE_AREA,
; 5196 : 				UI_ATTR_PARENT (parent),
; 5197 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5198 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5199 : 				UI_ATTR_USER_PTR ((void *)data),
; 5200 : 				UI_ATTR_CLEAR (TRUE),
; 5201 : 				UI_ATTR_END
; 5202 : 			);
; 5203 : 
; 5204 : 	data->map_area = map_area;

  0011b	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0011e	8b 4d e8	 mov	 ecx, DWORD PTR _map_area$[ebp]
  00121	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 5205 : 
; 5206 : 	/////////////////////////////////////////////////////////////////
; 5207 : 	// Map Window
; 5208 : 	{
; 5209 : 
; 5210 : 		x1 = 0.0;

  00124	0f 57 c0	 xorps	 xmm0, xmm0
  00127	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 5211 : 		y1 = 0.0;

  0012c	0f 57 c0	 xorps	 xmm0, xmm0
  0012f	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5212 : 		x2 = 0.915;

  00134	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6a3d71
  0013c	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 5213 : 		x2 = 1.0;

  00141	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00149	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 5214 : 		y2 = 1.0;

  0014e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00156	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5215 : 
; 5216 : 		map_window = create_ui_object

  0015b	6a 11		 push	 17			; 00000011H
  0015d	6a 01		 push	 1
  0015f	6a 07		 push	 7
  00161	8b 45 18	 mov	 eax, DWORD PTR _right_mouse_function$[ebp]
  00164	50		 push	 eax
  00165	6a 39		 push	 57			; 00000039H
  00167	8b 4d 14	 mov	 ecx, DWORD PTR _left_mouse_function$[ebp]
  0016a	51		 push	 ecx
  0016b	6a 16		 push	 22			; 00000016H
  0016d	8b 55 0c	 mov	 edx, DWORD PTR _data$[ebp]
  00170	52		 push	 edx
  00171	6a 56		 push	 86			; 00000056H
  00173	6a 02		 push	 2
  00175	6a 2f		 push	 47			; 0000002fH
  00177	8b 45 10	 mov	 eax, DWORD PTR _draw_function$[ebp]
  0017a	50		 push	 eax
  0017b	6a 0f		 push	 15			; 0000000fH
  0017d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00182	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00187	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0018b	83 ec 08	 sub	 esp, 8
  0018e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00193	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00198	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  0019d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001a1	83 ec 08	 sub	 esp, 8
  001a4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001a9	6a 59		 push	 89			; 00000059H
  001ab	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  001b0	83 ec 08	 sub	 esp, 8
  001b3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001b8	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  001bd	83 ec 08	 sub	 esp, 8
  001c0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001c5	6a 58		 push	 88			; 00000058H
  001c7	8b 4d e8	 mov	 ecx, DWORD PTR _map_area$[ebp]
  001ca	51		 push	 ecx
  001cb	6a 32		 push	 50			; 00000032H
  001cd	6a 01		 push	 1
  001cf	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  001d4	83 c4 68	 add	 esp, 104		; 00000068H
  001d7	89 45 e4	 mov	 DWORD PTR _map_window$[ebp], eax

; 5217 : 			(
; 5218 : 				UI_TYPE_AREA,
; 5219 : 				UI_ATTR_PARENT (map_area),
; 5220 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5221 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5222 : 				UI_ATTR_DRAW_FUNCTION (draw_function),
; 5223 : 				UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_DOWN),
; 5224 : 				UI_ATTR_USER_PTR ((void *)data),
; 5225 : 				UI_ATTR_FUNCTION (left_mouse_function),
; 5226 : 				UI_ATTR_RIGHT_FUNCTION (right_mouse_function),
; 5227 : 				UI_ATTR_CLEAR (TRUE),
; 5228 : 				UI_ATTR_END
; 5229 : 			);
; 5230 : 	}
; 5231 : 
; 5232 : 	data->full_screen_parent = full_screen_parent;

  001da	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  001dd	8b 4d 1c	 mov	 ecx, DWORD PTR _full_screen_parent$[ebp]
  001e0	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 5233 : 
; 5234 : 	/////////////////////////////////////////////////////////////////
; 5235 : 	// Map controls
; 5236 : 	/////////////////////////////////////////////////////////////////
; 5237 : 	{
; 5238 : 
; 5239 : 		x1 = 0.915;

  001e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f6a3d71
  001eb	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 5240 : 		x2 = 1.0;

  001f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001f8	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 5241 : 		y1 = 0.0;

  001fd	0f 57 c0	 xorps	 xmm0, xmm0
  00200	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5242 : 		y2 = 1.0;

  00205	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0020d	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5243 : 
; 5244 : 		map_controls_area = create_ui_object

  00212	6a 11		 push	 17			; 00000011H
  00214	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_key_backdrop_graphic@@3PAUTEXTURE_GRAPHIC@@A
  00219	50		 push	 eax
  0021a	6a 4c		 push	 76			; 0000004cH
  0021c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00221	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00226	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0022a	83 ec 08	 sub	 esp, 8
  0022d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00232	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00237	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  0023c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00240	83 ec 08	 sub	 esp, 8
  00243	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00248	6a 59		 push	 89			; 00000059H
  0024a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0024f	83 ec 08	 sub	 esp, 8
  00252	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00257	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0025c	83 ec 08	 sub	 esp, 8
  0025f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00264	6a 58		 push	 88			; 00000058H
  00266	8b 4d e8	 mov	 ecx, DWORD PTR _map_area$[ebp]
  00269	51		 push	 ecx
  0026a	6a 32		 push	 50			; 00000032H
  0026c	6a 01		 push	 1
  0026e	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00273	83 c4 40	 add	 esp, 64			; 00000040H
  00276	89 45 e0	 mov	 DWORD PTR _map_controls_area$[ebp], eax

; 5245 : 			(
; 5246 : 				UI_TYPE_AREA,
; 5247 : 				UI_ATTR_PARENT (map_area),
; 5248 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5249 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5250 : 				UI_ATTR_TEXTURE_GRAPHIC (map_key_backdrop_graphic),
; 5251 : 				UI_ATTR_END
; 5252 : 			);
; 5253 : 
; 5254 : 		x1 = 0.0;

  00279	0f 57 c0	 xorps	 xmm0, xmm0
  0027c	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 5255 : 		x2 = 1.0;

  00281	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00289	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 5256 : 
; 5257 : 		y1 = 0.0;

  0028e	0f 57 c0	 xorps	 xmm0, xmm0
  00291	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5258 : 		y_inc = 1.0 / 14.0;

  00296	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d924925
  0029e	f3 0f 11 45 ec	 movss	 DWORD PTR _y_inc$[ebp], xmm0

; 5259 : 
; 5260 : 		if (full_screen_parent)

  002a3	83 7d 1c 00	 cmp	 DWORD PTR _full_screen_parent$[ebp], 0
  002a7	0f 84 90 00 00
	00		 je	 $LN7@define_map

; 5261 : 		{
; 5262 : 			/////////////////////////////////////////////////////////////////
; 5263 : 			// Min/Max
; 5264 : 
; 5265 : 			y1 = 0.0;

  002ad	0f 57 c0	 xorps	 xmm0, xmm0
  002b0	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5266 : 			y2 = y1 + y_inc;

  002b5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  002ba	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  002bf	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5267 : 
; 5268 : 			create_ui_object

  002c4	6a 11		 push	 17			; 00000011H
  002c6	6a 01		 push	 1
  002c8	6a 1b		 push	 27			; 0000001bH
  002ca	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  002cd	50		 push	 eax
  002ce	6a 56		 push	 86			; 00000056H
  002d0	68 00 00 00 00	 push	 OFFSET ?toggle_full_screen_function@@YGXPAUUI_OBJECT@@PAX@Z ; toggle_full_screen_function
  002d5	6a 16		 push	 22			; 00000016H
  002d7	68 00 00 00 00	 push	 OFFSET ?draw_full_screen_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z ; draw_full_screen_toggle_function
  002dc	6a 0f		 push	 15			; 0000000fH
  002de	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  002e3	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  002e8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  002ec	83 ec 08	 sub	 esp, 8
  002ef	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002f4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  002f9	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  002fe	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00302	83 ec 08	 sub	 esp, 8
  00305	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0030a	6a 59		 push	 89			; 00000059H
  0030c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00311	83 ec 08	 sub	 esp, 8
  00314	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00319	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0031e	83 ec 08	 sub	 esp, 8
  00321	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00326	6a 58		 push	 88			; 00000058H
  00328	8b 4d e0	 mov	 ecx, DWORD PTR _map_controls_area$[ebp]
  0032b	51		 push	 ecx
  0032c	6a 32		 push	 50			; 00000032H
  0032e	6a 02		 push	 2
  00330	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00335	83 c4 58	 add	 esp, 88			; 00000058H

; 5269 : 			(
; 5270 : 				UI_TYPE_BUTTON,
; 5271 : 				UI_ATTR_PARENT (map_controls_area),
; 5272 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5273 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5274 : 				UI_ATTR_DRAW_FUNCTION (draw_full_screen_toggle_function),
; 5275 : 				UI_ATTR_FUNCTION (toggle_full_screen_function),
; 5276 : 				UI_ATTR_USER_PTR ((void *)data),
; 5277 : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 5278 : 				UI_ATTR_END
; 5279 : 			);
; 5280 : 		}
; 5281 : 		else

  00338	e9 bd 00 00 00	 jmp	 $LN8@define_map
$LN7@define_map:

; 5282 : 		{
; 5283 : 			/////////////////////////////////////////////////////////////////
; 5284 : 			// Goto
; 5285 : 
; 5286 : 			y1 = 0.0;

  0033d	0f 57 c0	 xorps	 xmm0, xmm0
  00340	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5287 : 			y2 = y1 + y_inc;

  00345	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0034a	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  0034f	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5288 : 
; 5289 : 			create_ui_object

  00354	6a 11		 push	 17			; 00000011H
  00356	b8 04 00 00 00	 mov	 eax, 4
  0035b	d1 e0		 shl	 eax, 1
  0035d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?goto_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  00363	51		 push	 ecx
  00364	6a 41		 push	 65			; 00000041H
  00366	ba 04 00 00 00	 mov	 edx, 4
  0036b	c1 e2 00	 shl	 edx, 0
  0036e	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?goto_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  00374	50		 push	 eax
  00375	6a 26		 push	 38			; 00000026H
  00377	b9 04 00 00 00	 mov	 ecx, 4
  0037c	6b d1 00	 imul	 edx, ecx, 0
  0037f	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?goto_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  00385	50		 push	 eax
  00386	6a 4c		 push	 76			; 0000004cH
  00388	6a 01		 push	 1
  0038a	6a 1b		 push	 27			; 0000001bH
  0038c	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  0038f	51		 push	 ecx
  00390	6a 56		 push	 86			; 00000056H
  00392	68 00 00 00 00	 push	 OFFSET ?toggle_map_goto_function@@YGXPAUUI_OBJECT@@PAX@Z ; toggle_map_goto_function
  00397	6a 16		 push	 22			; 00000016H
  00399	68 00 00 00 00	 push	 OFFSET ?draw_goto_toggle_function@@YGXPAUUI_OBJECT@@PAX@Z ; draw_goto_toggle_function
  0039e	6a 0f		 push	 15			; 0000000fH
  003a0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  003a5	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  003aa	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003ae	83 ec 08	 sub	 esp, 8
  003b1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003b6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  003bb	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  003c0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003c4	83 ec 08	 sub	 esp, 8
  003c7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003cc	6a 59		 push	 89			; 00000059H
  003ce	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  003d3	83 ec 08	 sub	 esp, 8
  003d6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003db	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  003e0	83 ec 08	 sub	 esp, 8
  003e3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003e8	6a 58		 push	 88			; 00000058H
  003ea	8b 55 e0	 mov	 edx, DWORD PTR _map_controls_area$[ebp]
  003ed	52		 push	 edx
  003ee	6a 32		 push	 50			; 00000032H
  003f0	6a 04		 push	 4
  003f2	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  003f7	83 c4 70	 add	 esp, 112		; 00000070H
$LN8@define_map:

; 5290 : 			(
; 5291 : 				UI_TYPE_TOGGLE,
; 5292 : 				UI_ATTR_PARENT (map_controls_area),
; 5293 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5294 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5295 : 				UI_ATTR_DRAW_FUNCTION (draw_goto_toggle_function),
; 5296 : 				UI_ATTR_FUNCTION (toggle_map_goto_function),
; 5297 : 				UI_ATTR_USER_PTR ((void *)data),
; 5298 : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 5299 : 				UI_ATTR_TEXTURE_GRAPHIC (goto_icons [0]),
; 5300 : 				UI_ATTR_HIGHLIGHTED_TEXTURE_GRAPHIC (goto_icons [1]),
; 5301 : 				UI_ATTR_SELECTED_TEXTURE_GRAPHIC (goto_icons [2]),
; 5302 : 				UI_ATTR_END
; 5303 : 			);
; 5304 : 		}
; 5305 : 
; 5306 : 		/////////////////////////////////////////////////////////////////
; 5307 : 		// zoom
; 5308 : 
; 5309 : 		y1 += y_inc;

  003fa	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  003ff	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  00404	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5310 : 		y2 = y1 + y_inc;

  00409	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0040e	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  00413	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5311 : 
; 5312 : 		create_ui_object

  00418	6a 11		 push	 17			; 00000011H
  0041a	b8 04 00 00 00	 mov	 eax, 4
  0041f	d1 e0		 shl	 eax, 1
  00421	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?zoom_in_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  00427	51		 push	 ecx
  00428	6a 41		 push	 65			; 00000041H
  0042a	ba 04 00 00 00	 mov	 edx, 4
  0042f	c1 e2 00	 shl	 edx, 0
  00432	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?zoom_in_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  00438	50		 push	 eax
  00439	6a 26		 push	 38			; 00000026H
  0043b	b9 04 00 00 00	 mov	 ecx, 4
  00440	6b d1 00	 imul	 edx, ecx, 0
  00443	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?zoom_in_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  00449	50		 push	 eax
  0044a	6a 4c		 push	 76			; 0000004cH
  0044c	6a 01		 push	 1
  0044e	6a 1b		 push	 27			; 0000001bH
  00450	68 00 00 00 00	 push	 OFFSET ?map_zoom_in_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_zoom_in_function
  00455	6a 16		 push	 22			; 00000016H
  00457	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  0045a	51		 push	 ecx
  0045b	6a 56		 push	 86			; 00000056H
  0045d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00462	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00467	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0046b	83 ec 08	 sub	 esp, 8
  0046e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00473	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00478	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  0047d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00481	83 ec 08	 sub	 esp, 8
  00484	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00489	6a 59		 push	 89			; 00000059H
  0048b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00490	83 ec 08	 sub	 esp, 8
  00493	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00498	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0049d	83 ec 08	 sub	 esp, 8
  004a0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004a5	6a 58		 push	 88			; 00000058H
  004a7	8b 55 e0	 mov	 edx, DWORD PTR _map_controls_area$[ebp]
  004aa	52		 push	 edx
  004ab	6a 32		 push	 50			; 00000032H
  004ad	6a 02		 push	 2
  004af	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  004b4	83 c4 68	 add	 esp, 104		; 00000068H

; 5313 : 			(
; 5314 : 				UI_TYPE_BUTTON,
; 5315 : 				UI_ATTR_PARENT (map_controls_area),
; 5316 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5317 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5318 : 				UI_ATTR_USER_PTR ((void *)data),
; 5319 : 				UI_ATTR_FUNCTION (map_zoom_in_function),
; 5320 : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 5321 : 				UI_ATTR_TEXTURE_GRAPHIC (zoom_in_icons [0]),
; 5322 : 				UI_ATTR_HIGHLIGHTED_TEXTURE_GRAPHIC (zoom_in_icons [1]),
; 5323 : 				UI_ATTR_SELECTED_TEXTURE_GRAPHIC (zoom_in_icons [2]),
; 5324 : 				UI_ATTR_END
; 5325 : 			);
; 5326 : 
; 5327 : 		y1 += y_inc;

  004b7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  004bc	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  004c1	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5328 : 		y2 = y1 + y_inc;

  004c6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  004cb	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  004d0	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5329 : 
; 5330 : 		create_ui_object

  004d5	6a 11		 push	 17			; 00000011H
  004d7	b8 04 00 00 00	 mov	 eax, 4
  004dc	d1 e0		 shl	 eax, 1
  004de	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?zoom_out_icons@@3PAPAUTEXTURE_GRAPHIC@@A[eax]
  004e4	51		 push	 ecx
  004e5	6a 41		 push	 65			; 00000041H
  004e7	ba 04 00 00 00	 mov	 edx, 4
  004ec	c1 e2 00	 shl	 edx, 0
  004ef	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?zoom_out_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  004f5	50		 push	 eax
  004f6	6a 26		 push	 38			; 00000026H
  004f8	b9 04 00 00 00	 mov	 ecx, 4
  004fd	6b d1 00	 imul	 edx, ecx, 0
  00500	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?zoom_out_icons@@3PAPAUTEXTURE_GRAPHIC@@A[edx]
  00506	50		 push	 eax
  00507	6a 4c		 push	 76			; 0000004cH
  00509	6a 01		 push	 1
  0050b	6a 1b		 push	 27			; 0000001bH
  0050d	68 00 00 00 00	 push	 OFFSET ?map_zoom_out_function@@YGXPAUUI_OBJECT@@PAX@Z ; map_zoom_out_function
  00512	6a 16		 push	 22			; 00000016H
  00514	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  00517	51		 push	 ecx
  00518	6a 56		 push	 86			; 00000056H
  0051a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0051f	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00524	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00528	83 ec 08	 sub	 esp, 8
  0052b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00530	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00535	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  0053a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0053e	83 ec 08	 sub	 esp, 8
  00541	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00546	6a 59		 push	 89			; 00000059H
  00548	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0054d	83 ec 08	 sub	 esp, 8
  00550	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00555	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0055a	83 ec 08	 sub	 esp, 8
  0055d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00562	6a 58		 push	 88			; 00000058H
  00564	8b 55 e0	 mov	 edx, DWORD PTR _map_controls_area$[ebp]
  00567	52		 push	 edx
  00568	6a 32		 push	 50			; 00000032H
  0056a	6a 02		 push	 2
  0056c	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00571	83 c4 68	 add	 esp, 104		; 00000068H

; 5331 : 			(
; 5332 : 				UI_TYPE_BUTTON,
; 5333 : 				UI_ATTR_PARENT (map_controls_area),
; 5334 : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5335 : 				UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5336 : 				UI_ATTR_USER_PTR ((void *)data),
; 5337 : 				UI_ATTR_FUNCTION (map_zoom_out_function),
; 5338 : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 5339 : 				UI_ATTR_TEXTURE_GRAPHIC (zoom_out_icons [0]),
; 5340 : 				UI_ATTR_HIGHLIGHTED_TEXTURE_GRAPHIC (zoom_out_icons [1]),
; 5341 : 				UI_ATTR_SELECTED_TEXTURE_GRAPHIC (zoom_out_icons [2]),
; 5342 : 				UI_ATTR_END
; 5343 : 			);
; 5344 : 
; 5345 : 		/////////////////////////////////////////////////////////////////
; 5346 : 		// layer controls
; 5347 : 		{
; 5348 : 			int
; 5349 : 				loop;
; 5350 : 
; 5351 : 			for (loop = 0; loop < NUM_MAP_LAYER_CONTROLS; loop ++)

  00574	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _loop$1[ebp], 0
  0057b	eb 09		 jmp	 SHORT $LN4@define_map
$LN2@define_map:
  0057d	8b 45 dc	 mov	 eax, DWORD PTR _loop$1[ebp]
  00580	83 c0 01	 add	 eax, 1
  00583	89 45 dc	 mov	 DWORD PTR _loop$1[ebp], eax
$LN4@define_map:
  00586	83 7d dc 0b	 cmp	 DWORD PTR _loop$1[ebp], 11 ; 0000000bH
  0058a	0f 8d e7 00 00
	00		 jge	 $LN3@define_map

; 5352 : 			{
; 5353 : 				y1 += y_inc;

  00590	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00595	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  0059a	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 5354 : 				y2 = y1 + y_inc;

  0059f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  005a4	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_inc$[ebp]
  005a9	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 5355 : 
; 5356 : 				data->layer_control_objects [loop] = create_ui_object

  005ae	6a 11		 push	 17			; 00000011H
  005b0	6b 45 dc 0c	 imul	 eax, DWORD PTR _loop$1[ebp], 12
  005b4	b9 04 00 00 00	 mov	 ecx, 4
  005b9	d1 e1		 shl	 ecx, 1
  005bb	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[eax+ecx]
  005c2	52		 push	 edx
  005c3	6a 41		 push	 65			; 00000041H
  005c5	6b 45 dc 0c	 imul	 eax, DWORD PTR _loop$1[ebp], 12
  005c9	b9 04 00 00 00	 mov	 ecx, 4
  005ce	c1 e1 00	 shl	 ecx, 0
  005d1	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[eax+ecx]
  005d8	52		 push	 edx
  005d9	6a 26		 push	 38			; 00000026H
  005db	6b 45 dc 0c	 imul	 eax, DWORD PTR _loop$1[ebp], 12
  005df	b9 04 00 00 00	 mov	 ecx, 4
  005e4	6b d1 00	 imul	 edx, ecx, 0
  005e7	8b 84 10 00 00
	00 00		 mov	 eax, DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[eax+edx]
  005ee	50		 push	 eax
  005ef	6a 4c		 push	 76			; 0000004cH
  005f1	6a 01		 push	 1
  005f3	6a 1b		 push	 27			; 0000001bH
  005f5	8b 4d 0c	 mov	 ecx, DWORD PTR _data$[ebp]
  005f8	51		 push	 ecx
  005f9	6a 56		 push	 86			; 00000056H
  005fb	6b 55 dc 0c	 imul	 edx, DWORD PTR _loop$1[ebp], 12
  005ff	8b 82 04 00 00
	00		 mov	 eax, DWORD PTR ?layer_control_button_data@@3QBULAYER_CONTROL_BUTTON_TYPE@@B[edx+4]
  00605	50		 push	 eax
  00606	6a 16		 push	 22			; 00000016H
  00608	8b 4d dc	 mov	 ecx, DWORD PTR _loop$1[ebp]
  0060b	51		 push	 ecx
  0060c	6a 29		 push	 41			; 00000029H
  0060e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00613	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00618	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0061c	83 ec 08	 sub	 esp, 8
  0061f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00624	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00629	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _x1$[ebp]
  0062e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00632	83 ec 08	 sub	 esp, 8
  00635	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0063a	6a 59		 push	 89			; 00000059H
  0063c	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00641	83 ec 08	 sub	 esp, 8
  00644	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00649	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0064e	83 ec 08	 sub	 esp, 8
  00651	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00656	6a 58		 push	 88			; 00000058H
  00658	8b 55 e0	 mov	 edx, DWORD PTR _map_controls_area$[ebp]
  0065b	52		 push	 edx
  0065c	6a 32		 push	 50			; 00000032H
  0065e	6a 04		 push	 4
  00660	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00665	83 c4 70	 add	 esp, 112		; 00000070H
  00668	8b 4d dc	 mov	 ecx, DWORD PTR _loop$1[ebp]
  0066b	8b 55 0c	 mov	 edx, DWORD PTR _data$[ebp]
  0066e	89 44 8a 18	 mov	 DWORD PTR [edx+ecx*4+24], eax

; 5357 : 				(
; 5358 : 					UI_TYPE_TOGGLE,
; 5359 : 					UI_ATTR_PARENT (map_controls_area),
; 5360 : 					UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 5361 : 					UI_ATTR_VIRTUAL_SIZE (x2 - x1, y2 - y1),
; 5362 : 					UI_ATTR_ITEM_NUMBER (loop),
; 5363 : 					UI_ATTR_FUNCTION (layer_control_button_data [loop].function),
; 5364 : 					UI_ATTR_USER_PTR ((void *)data),
; 5365 : 					UI_ATTR_HIGHLIGHTABLE (TRUE),
; 5366 : 					UI_ATTR_TEXTURE_GRAPHIC (key_icons [loop][0]),
; 5367 : 					UI_ATTR_HIGHLIGHTED_TEXTURE_GRAPHIC (key_icons [loop][1]),
; 5368 : 					UI_ATTR_SELECTED_TEXTURE_GRAPHIC (key_icons [loop][2]),
; 5369 : 					UI_ATTR_END
; 5370 : 				);
; 5371 : 			}

  00672	e9 06 ff ff ff	 jmp	 $LN2@define_map
$LN3@define_map:

; 5372 : 		}
; 5373 : 	}
; 5374 : 
; 5375 : 	//
; 5376 : 	// register map data
; 5377 : 	//
; 5378 : 
; 5379 : 	data->next = map_data_list;

  00677	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0067a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?map_data_list@@3PAUMAP_DIMENSION_TYPE@@A
  00680	89 48 68	 mov	 DWORD PTR [eax+104], ecx

; 5380 : 
; 5381 : 	map_data_list = data;

  00683	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00686	a3 00 00 00 00	 mov	 DWORD PTR ?map_data_list@@3PAUMAP_DIMENSION_TYPE@@A, eax

; 5382 : }

  0068b	5f		 pop	 edi
  0068c	5e		 pop	 esi
  0068d	5b		 pop	 ebx
  0068e	8b e5		 mov	 esp, ebp
  00690	5d		 pop	 ebp
  00691	c2 18 00	 ret	 24			; 00000018H
?define_map_objects@@YGXPAUUI_OBJECT@@PAUMAP_DIMENSION_TYPE@@PAX22PAPAU1@@Z ENDP ; define_map_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z PROC ; get_map_mouse_over_entity, COMDAT

; 1153 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1154 : 	ASSERT (data);

  00009	83 7d 08 00	 cmp	 DWORD PTR _data$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_map_mo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_map_mo:

; 1155 : 
; 1156 : 	if (data->mouse_over_object.type == MOUSE_OVER_OBJECT_ENTITY)

  00027	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0002a	83 78 4c 01	 cmp	 DWORD PTR [eax+76], 1
  0002e	75 0a		 jne	 SHORT $LN3@get_map_mo

; 1157 : 	{
; 1158 : 		return (data->mouse_over_object.en);

  00030	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00033	8b 40 54	 mov	 eax, DWORD PTR [eax+84]
  00036	eb 04		 jmp	 SHORT $LN1@get_map_mo

; 1159 : 	}
; 1160 : 	else

  00038	eb 02		 jmp	 SHORT $LN1@get_map_mo
$LN3@get_map_mo:

; 1161 : 	{
; 1162 : 		return NULL;

  0003a	33 c0		 xor	 eax, eax
$LN1@get_map_mo:

; 1163 : 	}
; 1164 : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c2 04 00	 ret	 4
?get_map_mouse_over_entity@@YGPAUENTITY@@PAUMAP_DIMENSION_TYPE@@@Z ENDP ; get_map_mouse_over_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z PROC ; clear_map_mouse_over_object, COMDAT

; 1135 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1136 : 	ASSERT (data);

  00009	83 7d 08 00	 cmp	 DWORD PTR _data$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@clear_map_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04PJOLNDGD@data@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@clear_map_:

; 1137 : 
; 1138 : 	data->mouse_over_object.type = MOUSE_OVER_OBJECT_NONE;

  00027	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0002a	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0

; 1139 : 	data->mouse_over_object.distance = FLT_MAX;

  00031	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00034	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  0003c	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0

; 1140 : 
; 1141 : 	data->mouse_over_object.en = NULL;

  00041	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00044	c7 40 54 00 00
	00 00		 mov	 DWORD PTR [eax+84], 0

; 1142 : 
; 1143 : 	data->mouse_over_object.pos.x = 0;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  0004e	0f 57 c0	 xorps	 xmm0, xmm0
  00051	f3 0f 11 40 58	 movss	 DWORD PTR [eax+88], xmm0

; 1144 : 	data->mouse_over_object.pos.y = 0;

  00056	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00059	0f 57 c0	 xorps	 xmm0, xmm0
  0005c	f3 0f 11 40 5c	 movss	 DWORD PTR [eax+92], xmm0

; 1145 : 	data->mouse_over_object.pos.z = 0;

  00061	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00064	0f 57 c0	 xorps	 xmm0, xmm0
  00067	f3 0f 11 40 60	 movss	 DWORD PTR [eax+96], xmm0

; 1146 : }

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 04 00	 ret	 4
?clear_map_mouse_over_object@@YGXPAUMAP_DIMENSION_TYPE@@@Z ENDP ; clear_map_mouse_over_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?set_last_drawn_map_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?set_last_drawn_map_object@@YGXPAUUI_OBJECT@@@Z PROC	; set_last_drawn_map_object, COMDAT

; 1126 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1127 : 	last_drawn_map_object = obj;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?last_drawn_map_object@@3PAUUI_OBJECT@@A, eax

; 1128 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_last_drawn_map_object@@YGXPAUUI_OBJECT@@@Z ENDP	; set_last_drawn_map_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?set_active_map_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?set_active_map_object@@YGXPAUUI_OBJECT@@@Z PROC	; set_active_map_object, COMDAT

; 1117 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1118 : 	active_map_object = obj;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?active_map_object@@3PAUUI_OBJECT@@A, eax

; 1119 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_active_map_object@@YGXPAUUI_OBJECT@@@Z ENDP	; set_active_map_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?initialise_map_data@@YGXXZ
_TEXT	SEGMENT
?initialise_map_data@@YGXXZ PROC			; initialise_map_data, COMDAT

; 1104 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1105 : 	map_events = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_events@@3PAUMAP_EVENT_TYPE@@A, 0

; 1106 : 
; 1107 : 	global_layer_controls = get_global_map_layer_options ();

  00013	a1 7c 03 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+892
  00018	a3 00 00 00 00	 mov	 DWORD PTR ?global_layer_controls@@3HA, eax

; 1108 : 
; 1109 : 	initialise_layer_control_objects ();

  0001d	e8 00 00 00 00	 call	 ?initialise_layer_control_objects@@YGXXZ ; initialise_layer_control_objects

; 1110 : }

  00022	5f		 pop	 edi
  00023	5e		 pop	 esi
  00024	5b		 pop	 ebx
  00025	8b e5		 mov	 esp, ebp
  00027	5d		 pop	 ebp
  00028	c3		 ret	 0
?initialise_map_data@@YGXXZ ENDP			; initialise_map_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?load_map_textures@@YGXXZ
_TEXT	SEGMENT
_layer$ = -16						; size = 4
_loop$ = -12						; size = 4
_icon$ = -8						; size = 4
_side$ = -4						; size = 4
?load_map_textures@@YGXXZ PROC				; load_map_textures, COMDAT

; 989  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 990  : 	int
; 991  : 		side,
; 992  : 		icon,
; 993  : 		loop,
; 994  : 		layer;
; 995  : 
; 996  : 	if (!map_overlay)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00010	75 18		 jne	 SHORT $LN17@load_map_t

; 997  : 	{
; 998  : 		map_overlay = create_user_texture_screen (MAP_OVERLAY_TEXTURE_SIZE, MAP_OVERLAY_TEXTURE_SIZE, TEXTURE_TYPE_MULTIPLEALPHA, 0);

  00012	6a 00		 push	 0
  00014	6a 03		 push	 3
  00016	68 80 00 00 00	 push	 128			; 00000080H
  0001b	68 80 00 00 00	 push	 128			; 00000080H
  00020	e8 00 00 00 00	 call	 ?create_user_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_user_texture_screen
  00025	a3 00 00 00 00	 mov	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, eax
$LN17@load_map_t:

; 999  : 	}
; 1000 : 
; 1001 : 	ASSERT (map_overlay);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_overlay@@3PAUSCREEN@@A, 0
  00031	75 18		 jne	 SHORT $LN18@load_map_t
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_map_textures@@YGXXZ@4JA
  00038	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDGPEHOC@map_overlay@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@load_map_t:

; 1002 : 
; 1003 : 	if (!map_icons_loaded)

  0004b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?map_icons_loaded@@3HA, 0
  00052	0f 85 34 04 00
	00		 jne	 $LN1@load_map_t

; 1004 : 	{
; 1005 : 		for (side = 0; side < NUM_ENTITY_SIDES; side ++)

  00058	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  0005f	eb 09		 jmp	 SHORT $LN4@load_map_t
$LN2@load_map_t:
  00061	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00064	83 c0 01	 add	 eax, 1
  00067	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax
$LN4@load_map_t:
  0006a	83 7d fc 03	 cmp	 DWORD PTR _side$[ebp], 3
  0006e	7d 31		 jge	 SHORT $LN3@load_map_t

; 1006 : 		{
; 1007 : 			for (icon = 0; icon < NUM_MAP_ICON_TYPES; icon ++)

  00070	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _icon$[ebp], 0
  00077	eb 09		 jmp	 SHORT $LN7@load_map_t
$LN5@load_map_t:
  00079	8b 45 f8	 mov	 eax, DWORD PTR _icon$[ebp]
  0007c	83 c0 01	 add	 eax, 1
  0007f	89 45 f8	 mov	 DWORD PTR _icon$[ebp], eax
$LN7@load_map_t:
  00082	83 7d f8 24	 cmp	 DWORD PTR _icon$[ebp], 36 ; 00000024H
  00086	7d 17		 jge	 SHORT $LN6@load_map_t

; 1008 : 			{
; 1009 : 				map_icons [side][icon] = NULL;

  00088	69 45 fc 90 00
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 144
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _icon$[ebp]
  00092	c7 84 88 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?map_icons@@3PAY0CE@PAUTEXTURE_GRAPHIC@@A[eax+ecx*4], 0

; 1010 : 			}

  0009d	eb da		 jmp	 SHORT $LN5@load_map_t
$LN6@load_map_t:

; 1011 : 		}

  0009f	eb c0		 jmp	 SHORT $LN2@load_map_t
$LN3@load_map_t:

; 1012 : 
; 1013 : 		load_map_icon (MAP_ICON_CAMPAIGN_OBJECTIVE,	ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\campobj.psd");

  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@HKGMLLLN@graphics?2ui?2cohokum?2icons?2campo@
  000a6	6a 00		 push	 0
  000a8	6a 06		 push	 6
  000aa	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1014 : 		load_map_icon (MAP_ICON_EVENT, 					ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\hotspot.psd");

  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EGCOIDPO@graphics?2ui?2cohokum?2icons?2hotsp@
  000b4	6a 00		 push	 0
  000b6	6a 08		 push	 8
  000b8	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1015 : 		load_map_icon (MAP_ICON_EXPLOSION, 				ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\expl.psd");

  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HMDFMIMC@graphics?2ui?2cohokum?2icons?2expl?4@
  000c2	6a 00		 push	 0
  000c4	6a 09		 push	 9
  000c6	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1016 : 		load_map_icon (MAP_ICON_HIGHLIGHT, 				ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\mover.psd");

  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@LLFLINC@graphics?2ui?2cohokum?2icons?2mover@
  000d0	6a 00		 push	 0
  000d2	6a 0c		 push	 12			; 0000000cH
  000d4	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1017 : 		load_map_icon (MAP_ICON_PLAYER_OVERLAY, 		ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\player.psd");

  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FBGNJAIN@graphics?2ui?2cohokum?2icons?2playe@
  000de	6a 00		 push	 0
  000e0	6a 11		 push	 17			; 00000011H
  000e2	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1018 : 		load_map_icon (MAP_ICON_SELECTED, 				ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\selected.psd");

  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@ILKHPMAK@graphics?2ui?2cohokum?2icons?2selec@
  000ec	6a 00		 push	 0
  000ee	6a 14		 push	 20			; 00000014H
  000f0	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1019 : 
; 1020 : 		load_map_icon (MAP_ICON_WAYPOINT_INSERT_HIGHLIGHTED, 	ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\wpadwht.psd");

  000f5	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MDOIJDPN@graphics?2ui?2cohokum?2icons?2wpadw@
  000fa	6a 00		 push	 0
  000fc	6a 1b		 push	 27			; 0000001bH
  000fe	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1021 : 		load_map_icon (MAP_ICON_WAYPOINT_INSERT_SELECTED, 		ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\wpadyel.psd");

  00103	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FIDAGAPJ@graphics?2ui?2cohokum?2icons?2wpady@
  00108	6a 00		 push	 0
  0010a	6a 1c		 push	 28			; 0000001cH
  0010c	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1022 : 		load_map_icon (MAP_ICON_WAYPOINT_NAV_HIGHLIGHTED,		ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\navwht.psd");

  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DCLGELKH@graphics?2ui?2cohokum?2icons?2navwh@
  00116	6a 00		 push	 0
  00118	6a 1e		 push	 30			; 0000001eH
  0011a	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1023 : 		load_map_icon (MAP_ICON_WAYPOINT_NAV_SELECTED,			ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\navyel.psd");

  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@KJGOLIKD@graphics?2ui?2cohokum?2icons?2navye@
  00124	6a 00		 push	 0
  00126	6a 1f		 push	 31			; 0000001fH
  00128	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1024 : 		load_map_icon (MAP_ICON_WAYPOINT_TARGET_HIGHLIGHTED, 	ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\attkwht.psd");

  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IOCKCNBO@graphics?2ui?2cohokum?2icons?2attkw@
  00132	6a 00		 push	 0
  00134	6a 21		 push	 33			; 00000021H
  00136	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1025 : 		load_map_icon (MAP_ICON_WAYPOINT_TARGET_SELECTED, 		ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\attkyel.psd");

  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BFPCNOBK@graphics?2ui?2cohokum?2icons?2attky@
  00140	6a 00		 push	 0
  00142	6a 22		 push	 34			; 00000022H
  00144	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1026 : 		load_map_icon (MAP_ICON_WAYPOINT_TARGET_TEMPORARY, 	ENTITY_SIDE_NEUTRAL, "graphics\\ui\\cohokum\\icons\\orngtarg.psd");

  00149	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@FJBEEOLN@graphics?2ui?2cohokum?2icons?2orngt@
  0014e	6a 00		 push	 0
  00150	6a 23		 push	 35			; 00000023H
  00152	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1027 : 
; 1028 : 		load_map_icon (MAP_ICON_AAA, 						ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_aaa.psd");

  00157	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@OKCFFOLN@graphics?2ui?2cohokum?2icons?2cis_a@
  0015c	6a 02		 push	 2
  0015e	6a 01		 push	 1
  00160	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1029 : 		load_map_icon (MAP_ICON_AIRBASE, 				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_rway.psd");

  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GEGFBCK@graphics?2ui?2cohokum?2icons?2cis_r@
  0016a	6a 02		 push	 2
  0016c	6a 02		 push	 2
  0016e	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1030 : 		load_map_icon (MAP_ICON_APC, 						ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_apc.psd");

  00173	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GGEEGIMM@graphics?2ui?2cohokum?2icons?2cis_a@
  00178	6a 02		 push	 2
  0017a	6a 03		 push	 3
  0017c	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1031 : 		load_map_icon (MAP_ICON_ARTILLERY,				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_artl.psd");

  00181	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LNBGABLL@graphics?2ui?2cohokum?2icons?2cis_a@
  00186	6a 02		 push	 2
  00188	6a 04		 push	 4
  0018a	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1032 : 		load_map_icon (MAP_ICON_BUILDING, 				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_bld.psd");

  0018f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FFLAKJCN@graphics?2ui?2cohokum?2icons?2cis_b@
  00194	6a 02		 push	 2
  00196	6a 05		 push	 5
  00198	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1033 : 		load_map_icon (MAP_ICON_CARRIER, 				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_ship.psd");

  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@KAEGHJEB@graphics?2ui?2cohokum?2icons?2cis_s@
  001a2	6a 02		 push	 2
  001a4	6a 07		 push	 7
  001a6	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1034 : 		load_map_icon (MAP_ICON_FARP, 					ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_farp.psd");

  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@DMIHKNGA@graphics?2ui?2cohokum?2icons?2cis_f@
  001b0	6a 02		 push	 2
  001b2	6a 0a		 push	 10			; 0000000aH
  001b4	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1035 : 		load_map_icon (MAP_ICON_HELICOPTER,				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_heli.psd");

  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GDDHMMMI@graphics?2ui?2cohokum?2icons?2cis_h@
  001be	6a 02		 push	 2
  001c0	6a 0b		 push	 11			; 0000000bH
  001c2	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1036 : 		load_map_icon (MAP_ICON_JET, 						ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_jet.psd");

  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BABLPFNA@graphics?2ui?2cohokum?2icons?2cis_j@
  001cc	6a 02		 push	 2
  001ce	6a 0d		 push	 13			; 0000000dH
  001d0	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1037 : 		load_map_icon (MAP_ICON_MISSION, 				ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_targ.psd");

  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@KAGCPFLE@graphics?2ui?2cohokum?2icons?2cis_t@
  001da	6a 02		 push	 2
  001dc	6a 0e		 push	 14			; 0000000eH
  001de	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1038 : 		load_map_icon (MAP_ICON_OIL_REFINERY, 			ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_oil.psd");

  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@HANOBBDG@graphics?2ui?2cohokum?2icons?2cis_o@
  001e8	6a 02		 push	 2
  001ea	6a 0f		 push	 15			; 0000000fH
  001ec	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1039 : 		load_map_icon (MAP_ICON_PLAYER, 					ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_mult.psd");

  001f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OKFDKJOJ@graphics?2ui?2cohokum?2icons?2cis_m@
  001f6	6a 02		 push	 2
  001f8	6a 10		 push	 16			; 00000010H
  001fa	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1040 : 		load_map_icon (MAP_ICON_POWER_STATION, 		ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_powr.psd");

  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OJCHAKAF@graphics?2ui?2cohokum?2icons?2cis_p@
  00204	6a 02		 push	 2
  00206	6a 12		 push	 18			; 00000012H
  00208	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1041 : 		load_map_icon (MAP_ICON_RADIO_TRANSMITTER,	ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_mast.psd");

  0020d	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@IDDEHKBP@graphics?2ui?2cohokum?2icons?2cis_m@
  00212	6a 02		 push	 2
  00214	6a 13		 push	 19			; 00000013H
  00216	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1042 : 		load_map_icon (MAP_ICON_SHIP, 					ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_frgt.psd");

  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GAMEGKNH@graphics?2ui?2cohokum?2icons?2cis_f@
  00220	6a 02		 push	 2
  00222	6a 15		 push	 21			; 00000015H
  00224	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1043 : 		load_map_icon (MAP_ICON_TANK, 					ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_tank.psd");

  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@HHNOMDHF@graphics?2ui?2cohokum?2icons?2cis_t@
  0022e	6a 02		 push	 2
  00230	6a 16		 push	 22			; 00000016H
  00232	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1044 : 		load_map_icon (MAP_ICON_TRANSPORT_AIRCRAFT, 	ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_trna.psd");

  00237	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@CEHBNGNL@graphics?2ui?2cohokum?2icons?2cis_t@
  0023c	6a 02		 push	 2
  0023e	6a 17		 push	 23			; 00000017H
  00240	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1045 : 		load_map_icon (MAP_ICON_TRANSPORT_HELICOPTER, 	ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_trnh.psd");

  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@DHOIHBD@graphics?2ui?2cohokum?2icons?2cis_t@
  0024a	6a 02		 push	 2
  0024c	6a 18		 push	 24			; 00000018H
  0024e	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1046 : 		load_map_icon (MAP_ICON_TRUCK, 					ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_trck.psd");

  00253	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@OEDNJEHN@graphics?2ui?2cohokum?2icons?2cis_t@
  00258	6a 02		 push	 2
  0025a	6a 19		 push	 25			; 00000019H
  0025c	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1047 : 		load_map_icon (MAP_ICON_WAYPOINT_INSERT, 		ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_wpad.psd");

  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@PJFMAMDJ@graphics?2ui?2cohokum?2icons?2cis_w@
  00266	6a 02		 push	 2
  00268	6a 1a		 push	 26			; 0000001aH
  0026a	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1048 : 		load_map_icon (MAP_ICON_WAYPOINT_NAV, 			ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_nav.psd");

  0026f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@CNNGHODC@graphics?2ui?2cohokum?2icons?2cis_n@
  00274	6a 02		 push	 2
  00276	6a 1d		 push	 29			; 0000001dH
  00278	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1049 : 		load_map_icon (MAP_ICON_WAYPOINT_TARGET, 		ENTITY_SIDE_RED_FORCE, "graphics\\ui\\cohokum\\icons\\cis_attk.psd");

  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@GGHMDIIE@graphics?2ui?2cohokum?2icons?2cis_a@
  00282	6a 02		 push	 2
  00284	6a 20		 push	 32			; 00000020H
  00286	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1050 : 
; 1051 : 		load_map_icon (MAP_ICON_AAA, 						ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_aaa.psd");

  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@MODPIDFC@graphics?2ui?2cohokum?2icons?2us_aa@
  00290	6a 01		 push	 1
  00292	6a 01		 push	 1
  00294	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1052 : 		load_map_icon (MAP_ICON_AIRBASE, 				ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_rway.psd");

  00299	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@DGNHLEBO@graphics?2ui?2cohokum?2icons?2us_rw@
  0029e	6a 01		 push	 1
  002a0	6a 02		 push	 2
  002a2	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1053 : 		load_map_icon (MAP_ICON_APC, 						ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_apc.psd");

  002a7	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@ECFOLFCD@graphics?2ui?2cohokum?2icons?2us_ap@
  002ac	6a 01		 push	 1
  002ae	6a 03		 push	 3
  002b0	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1054 : 		load_map_icon (MAP_ICON_ARTILLERY, 				ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_artl.psd");

  002b5	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@INIHOEIP@graphics?2ui?2cohokum?2icons?2us_ar@
  002ba	6a 01		 push	 1
  002bc	6a 04		 push	 4
  002be	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1055 : 		load_map_icon (MAP_ICON_BUILDING, 				ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_bld.psd");

  002c3	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@HBKKHEMC@graphics?2ui?2cohokum?2icons?2us_bl@
  002c8	6a 01		 push	 1
  002ca	6a 05		 push	 5
  002cc	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1056 : 		load_map_icon (MAP_ICON_CARRIER, 				ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_ship.psd");

  002d1	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JANHJMHF@graphics?2ui?2cohokum?2icons?2us_sh@
  002d6	6a 01		 push	 1
  002d8	6a 07		 push	 7
  002da	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1057 : 		load_map_icon (MAP_ICON_FARP, 					ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_farp.psd");

  002df	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MBGEIFE@graphics?2ui?2cohokum?2icons?2us_fa@
  002e4	6a 01		 push	 1
  002e6	6a 0a		 push	 10			; 0000000aH
  002e8	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1058 : 		load_map_icon (MAP_ICON_HELICOPTER, 			ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_heli.psd");

  002ed	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FDKGCJPM@graphics?2ui?2cohokum?2icons?2us_he@
  002f2	6a 01		 push	 1
  002f4	6a 0b		 push	 11			; 0000000bH
  002f6	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1059 : 		load_map_icon (MAP_ICON_JET, 						ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_jet.psd");

  002fb	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@DEABCIDP@graphics?2ui?2cohokum?2icons?2us_je@
  00300	6a 01		 push	 1
  00302	6a 0d		 push	 13			; 0000000dH
  00304	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1060 : 		load_map_icon (MAP_ICON_MISSION, 				ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_targ.psd");

  00309	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JAPDBAIA@graphics?2ui?2cohokum?2icons?2us_ta@
  0030e	6a 01		 push	 1
  00310	6a 0e		 push	 14			; 0000000eH
  00312	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1061 : 		load_map_icon (MAP_ICON_OIL_REFINERY, 			ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_oil.psd");

  00317	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FEMEMMNJ@graphics?2ui?2cohokum?2icons?2us_oi@
  0031c	6a 01		 push	 1
  0031e	6a 0f		 push	 15			; 0000000fH
  00320	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1062 : 		load_map_icon (MAP_ICON_PLAYER, 					ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_mult.psd");

  00325	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@NKMCEMNN@graphics?2ui?2cohokum?2icons?2us_mu@
  0032a	6a 01		 push	 1
  0032c	6a 10		 push	 16			; 00000010H
  0032e	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1063 : 		load_map_icon (MAP_ICON_POWER_STATION, 		ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_powr.psd");

  00333	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@NJLGOPDB@graphics?2ui?2cohokum?2icons?2us_po@
  00338	6a 01		 push	 1
  0033a	6a 12		 push	 18			; 00000012H
  0033c	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1064 : 		load_map_icon (MAP_ICON_RADIO_TRANSMITTER,	ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_mast.psd");

  00341	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@LDKFJPCL@graphics?2ui?2cohokum?2icons?2us_ma@
  00346	6a 01		 push	 1
  00348	6a 13		 push	 19			; 00000013H
  0034a	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1065 : 		load_map_icon (MAP_ICON_SHIP, 					ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_frgt.psd");

  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FAFFIPOD@graphics?2ui?2cohokum?2icons?2us_fr@
  00354	6a 01		 push	 1
  00356	6a 15		 push	 21			; 00000015H
  00358	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1066 : 		load_map_icon (MAP_ICON_TANK, 					ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_tank.psd");

  0035d	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHEPCGEB@graphics?2ui?2cohokum?2icons?2us_ta@
  00362	6a 01		 push	 1
  00364	6a 16		 push	 22			; 00000016H
  00366	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1067 : 		load_map_icon (MAP_ICON_TRANSPORT_AIRCRAFT, 	ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_trna.psd");

  0036b	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BEOADDOP@graphics?2ui?2cohokum?2icons?2us_tr@
  00370	6a 01		 push	 1
  00372	6a 17		 push	 23			; 00000017H
  00374	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1068 : 		load_map_icon (MAP_ICON_TRANSPORT_HELICOPTER, 	ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_trnh.psd");

  00379	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@DDOPGCCH@graphics?2ui?2cohokum?2icons?2us_tr@
  0037e	6a 01		 push	 1
  00380	6a 18		 push	 24			; 00000018H
  00382	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1069 : 		load_map_icon (MAP_ICON_TRUCK, 					ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_trck.psd");

  00387	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@NEKMHBEJ@graphics?2ui?2cohokum?2icons?2us_tr@
  0038c	6a 01		 push	 1
  0038e	6a 19		 push	 25			; 00000019H
  00390	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1070 : 		load_map_icon (MAP_ICON_WAYPOINT_INSERT, 		ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_wpad.psd");

  00395	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@MJMNOJAN@graphics?2ui?2cohokum?2icons?2us_wp@
  0039a	6a 01		 push	 1
  0039c	6a 1a		 push	 26			; 0000001aH
  0039e	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1071 : 		load_map_icon (MAP_ICON_WAYPOINT_NAV, 			ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_nav.psd");

  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JMMKDNN@graphics?2ui?2cohokum?2icons?2us_na@
  003a8	6a 01		 push	 1
  003aa	6a 1d		 push	 29			; 0000001dH
  003ac	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1072 : 		load_map_icon (MAP_ICON_WAYPOINT_TARGET, 		ENTITY_SIDE_BLUE_FORCE, "graphics\\ui\\cohokum\\icons\\us_attk.psd");

  003b1	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@FGONNNLA@graphics?2ui?2cohokum?2icons?2us_at@
  003b6	6a 01		 push	 1
  003b8	6a 20		 push	 32			; 00000020H
  003ba	e8 00 00 00 00	 call	 ?load_map_icon@@YGXHHPBD@Z ; load_map_icon

; 1073 : 
; 1074 : 		for (layer = 0; layer < NUM_MAP_LAYER_CONTROLS; layer ++)

  003bf	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _layer$[ebp], 0
  003c6	eb 09		 jmp	 SHORT $LN10@load_map_t
$LN8@load_map_t:
  003c8	8b 45 f0	 mov	 eax, DWORD PTR _layer$[ebp]
  003cb	83 c0 01	 add	 eax, 1
  003ce	89 45 f0	 mov	 DWORD PTR _layer$[ebp], eax
$LN10@load_map_t:
  003d1	83 7d f0 0b	 cmp	 DWORD PTR _layer$[ebp], 11 ; 0000000bH
  003d5	7d 2e		 jge	 SHORT $LN9@load_map_t

; 1075 : 		{
; 1076 : 			for (loop = 0; loop < 3; loop ++)

  003d7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  003de	eb 09		 jmp	 SHORT $LN13@load_map_t
$LN11@load_map_t:
  003e0	8b 45 f4	 mov	 eax, DWORD PTR _loop$[ebp]
  003e3	83 c0 01	 add	 eax, 1
  003e6	89 45 f4	 mov	 DWORD PTR _loop$[ebp], eax
$LN13@load_map_t:
  003e9	83 7d f4 03	 cmp	 DWORD PTR _loop$[ebp], 3
  003ed	7d 14		 jge	 SHORT $LN12@load_map_t

; 1077 : 			{
; 1078 : 				key_icons [layer][loop] = NULL;

  003ef	6b 45 f0 0c	 imul	 eax, DWORD PTR _layer$[ebp], 12
  003f3	8b 4d f4	 mov	 ecx, DWORD PTR _loop$[ebp]
  003f6	c7 84 88 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?key_icons@@3PAY02PAUTEXTURE_GRAPHIC@@A[eax+ecx*4], 0

; 1079 : 			}

  00401	eb dd		 jmp	 SHORT $LN11@load_map_t
$LN12@load_map_t:

; 1080 : 		}

  00403	eb c3		 jmp	 SHORT $LN8@load_map_t
$LN9@load_map_t:

; 1081 : 
; 1082 : 		for (layer = 0; layer < NUM_MAP_LAYER_CONTROLS; layer ++)

  00405	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _layer$[ebp], 0
  0040c	eb 09		 jmp	 SHORT $LN16@load_map_t
$LN14@load_map_t:
  0040e	8b 45 f0	 mov	 eax, DWORD PTR _layer$[ebp]
  00411	83 c0 01	 add	 eax, 1
  00414	89 45 f0	 mov	 DWORD PTR _layer$[ebp], eax
$LN16@load_map_t:
  00417	83 7d f0 0b	 cmp	 DWORD PTR _layer$[ebp], 11 ; 0000000bH
  0041b	7d 0b		 jge	 SHORT $LN15@load_map_t

; 1083 : 		{
; 1084 : 			load_key_icons (layer);

  0041d	8b 45 f0	 mov	 eax, DWORD PTR _layer$[ebp]
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?load_key_icons@@YGXH@Z	; load_key_icons

; 1085 : 		}

  00426	eb e6		 jmp	 SHORT $LN14@load_map_t
$LN15@load_map_t:

; 1086 : 
; 1087 : 		load_misc_3state_icons ("min", minimise_icons);

  00428	68 00 00 00 00	 push	 OFFSET ?minimise_icons@@3PAPAUTEXTURE_GRAPHIC@@A
  0042d	68 00 00 00 00	 push	 OFFSET ??_C@_03KLIPLJLL@min@
  00432	e8 00 00 00 00	 call	 ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ; load_misc_3state_icons

; 1088 : 		load_misc_3state_icons ("max", maximise_icons);

  00437	68 00 00 00 00	 push	 OFFSET ?maximise_icons@@3PAPAUTEXTURE_GRAPHIC@@A
  0043c	68 00 00 00 00	 push	 OFFSET ??_C@_03LJAEFNNE@max@
  00441	e8 00 00 00 00	 call	 ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ; load_misc_3state_icons

; 1089 : 		load_misc_3state_icons ("zmin", zoom_in_icons);

  00446	68 00 00 00 00	 push	 OFFSET ?zoom_in_icons@@3PAPAUTEXTURE_GRAPHIC@@A
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_04PPILGJNE@zmin@
  00450	e8 00 00 00 00	 call	 ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ; load_misc_3state_icons

; 1090 : 		load_misc_3state_icons ("zmout", zoom_out_icons);

  00455	68 00 00 00 00	 push	 OFFSET ?zoom_out_icons@@3PAPAUTEXTURE_GRAPHIC@@A
  0045a	68 00 00 00 00	 push	 OFFSET ??_C@_05PPAKDCBL@zmout@
  0045f	e8 00 00 00 00	 call	 ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ; load_misc_3state_icons

; 1091 : 		load_misc_3state_icons ("goto", goto_icons);

  00464	68 00 00 00 00	 push	 OFFSET ?goto_icons@@3PAPAUTEXTURE_GRAPHIC@@A
  00469	68 00 00 00 00	 push	 OFFSET ??_C@_04MABHPDAO@goto@
  0046e	e8 00 00 00 00	 call	 ?load_misc_3state_icons@@YGXPBDPAPAUTEXTURE_GRAPHIC@@@Z ; load_misc_3state_icons

; 1092 : 
; 1093 : 		map_key_backdrop_graphic = create_texture_graphic ("graphics\\ui\\cohokum\\key\\key.psd");

  00473	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@OGCEFMFC@graphics?2ui?2cohokum?2key?2key?4psd@
  00478	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  0047d	a3 00 00 00 00	 mov	 DWORD PTR ?map_key_backdrop_graphic@@3PAUTEXTURE_GRAPHIC@@A, eax

; 1094 : 
; 1095 : 		map_icons_loaded = TRUE;

  00482	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?map_icons_loaded@@3HA, 1
$LN1@load_map_t:

; 1096 : 	}
; 1097 : }

  0048c	5f		 pop	 edi
  0048d	5e		 pop	 esi
  0048e	5b		 pop	 ebx
  0048f	8b e5		 mov	 esp, ebp
  00491	5d		 pop	 ebp
  00492	c3		 ret	 0
?load_map_textures@@YGXXZ ENDP				; load_map_textures
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\ingame\common\map.c
;	COMDAT ?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv290 = -252						; size = 4
tv208 = -252						; size = 4
tv182 = -252						; size = 4
tv152 = -252						; size = 4
tv283 = -248						; size = 4
tv200 = -248						; size = 4
tv175 = -248						; size = 4
tv159 = -248						; size = 4
tv144 = -248						; size = 4
_store_map_data$ = -180					; size = 108
_map_dimensions$ = -72					; size = 4
_pos$ = -68						; size = 4
_track_entity$ = -64					; size = 4
_en$ = -60						; size = 4
_enemy_side$ = -56					; size = 4
_this_side$ = -52					; size = 4
_iheight$ = -48						; size = 4
_iwidth$ = -44						; size = 4
_iy$ = -40						; size = 4
_ix$ = -36						; size = 4
_height$ = -32						; size = 4
_width$ = -28						; size = 4
_y_size$ = -24						; size = 4
_x_size$ = -20						; size = 4
_y1$ = -16						; size = 4
_x1$ = -12						; size = 4
_z$ = -8						; size = 4
_x$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z PROC		; draw_2d_map, COMDAT

; 324  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 325  : 	float
; 326  : 		x,
; 327  : 		z,
; 328  : 		x1, y1,
; 329  : 		x_size,
; 330  : 		y_size,
; 331  : 		width,
; 332  : 		height;
; 333  : 
; 334  : 	int
; 335  : 		ix,
; 336  : 		iy,
; 337  : 		iwidth,
; 338  : 		iheight;
; 339  : 
; 340  : 	entity_sides
; 341  : 		this_side,
; 342  : 		enemy_side;
; 343  : 
; 344  : 	entity
; 345  : 		*en,
; 346  : 		*track_entity;
; 347  : 
; 348  : 	vec3d
; 349  : 		*pos;
; 350  : 
; 351  : 	map_dimension_type
; 352  : 		*map_dimensions,
; 353  : 		store_map_data;
; 354  : 
; 355  : 	x1 = get_ui_object_x (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	d9 5d f4	 fstp	 DWORD PTR _x1$[ebp]

; 356  : 	y1 = get_ui_object_y (obj);

  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00031	ff d0		 call	 eax
  00033	d9 5d f0	 fstp	 DWORD PTR _y1$[ebp]

; 357  : 
; 358  : 	x_size = get_ui_object_x_size (obj);

  00036	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00046	ff d0		 call	 eax
  00048	d9 5d ec	 fstp	 DWORD PTR _x_size$[ebp]

; 359  : 	y_size = get_ui_object_y_size (obj);

  0004b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	d9 5d e8	 fstp	 DWORD PTR _y_size$[ebp]

; 360  : 
; 361  : 	convert_float_to_int (x1, &ix);

  00060	8d 45 dc	 lea	 eax, DWORD PTR _ix$[ebp]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 362  : 	convert_float_to_int (y1, &iy);

  00074	8d 45 d8	 lea	 eax, DWORD PTR _iy$[ebp]
  00077	50		 push	 eax
  00078	51		 push	 ecx
  00079	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0007e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00083	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 363  : 
; 364  : 	convert_float_to_int (x_size, &iwidth);

  00088	8d 45 d4	 lea	 eax, DWORD PTR _iwidth$[ebp]
  0008b	50		 push	 eax
  0008c	51		 push	 ecx
  0008d	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  00092	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00097	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 365  : 	convert_float_to_int (y_size, &iheight);

  0009c	8d 45 d0	 lea	 eax, DWORD PTR _iheight$[ebp]
  0009f	50		 push	 eax
  000a0	51		 push	 ecx
  000a1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 366  : 
; 367  : 	x1 = ix;

  000b0	f3 0f 2a 45 dc	 cvtsi2ss xmm0, DWORD PTR _ix$[ebp]
  000b5	f3 0f 11 45 f4	 movss	 DWORD PTR _x1$[ebp], xmm0

; 368  : 	y1 = iy;

  000ba	f3 0f 2a 45 d8	 cvtsi2ss xmm0, DWORD PTR _iy$[ebp]
  000bf	f3 0f 11 45 f0	 movss	 DWORD PTR _y1$[ebp], xmm0

; 369  : 
; 370  : 	x_size = iwidth;

  000c4	f3 0f 2a 45 d4	 cvtsi2ss xmm0, DWORD PTR _iwidth$[ebp]
  000c9	f3 0f 11 45 ec	 movss	 DWORD PTR _x_size$[ebp], xmm0

; 371  : 	y_size = iheight;

  000ce	f3 0f 2a 45 d0	 cvtsi2ss xmm0, DWORD PTR _iheight$[ebp]
  000d3	f3 0f 11 45 e8	 movss	 DWORD PTR _y_size$[ebp], xmm0

; 372  : 
; 373  : 	map_dimensions = (map_dimension_type *)get_ui_object_user_ptr (obj);

  000d8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_user_ptr@@3PAP6GPAXPAUUI_OBJECT@@@ZA[edx*4]
  000e8	ff d0		 call	 eax
  000ea	89 45 b8	 mov	 DWORD PTR _map_dimensions$[ebp], eax

; 374  : 
; 375  : 	ASSERT (map_dimensions);

  000ed	83 7d b8 00	 cmp	 DWORD PTR _map_dimensions$[ebp], 0
  000f1	75 18		 jne	 SHORT $LN2@draw_2d_ma
  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  000f8	83 c0 33	 add	 eax, 51			; 00000033H
  000fb	50		 push	 eax
  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00101	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GMAOGINM@map_dimensions@
  00106	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@draw_2d_ma:

; 376  : 
; 377  : 	this_side = (entity_sides) get_local_entity_int_value (get_pilot_entity (), INT_TYPE_SIDE);

  0010b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00112	74 0f		 je	 SHORT $LN22@draw_2d_ma
  00114	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00119	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011b	89 8d 08 ff ff
	ff		 mov	 DWORD PTR tv144[ebp], ecx
  00121	eb 24		 jmp	 SHORT $LN23@draw_2d_ma
$LN22@draw_2d_ma:
  00123	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00129	83 c2 35	 add	 edx, 53			; 00000035H
  0012c	52		 push	 edx
  0012d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013d	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv144[ebp], 0
$LN23@draw_2d_ma:
  00147	b9 01 00 00 00	 mov	 ecx, 1
  0014c	85 c9		 test	 ecx, ecx
  0014e	74 0c		 je	 SHORT $LN24@draw_2d_ma
  00150	c7 85 04 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv152[ebp], 187 ; 000000bbH
  0015a	eb 24		 jmp	 SHORT $LN25@draw_2d_ma
$LN24@draw_2d_ma:
  0015c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00162	83 c2 35	 add	 edx, 53			; 00000035H
  00165	52		 push	 edx
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00176	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv152[ebp], 0
$LN25@draw_2d_ma:
  00180	68 bb 00 00 00	 push	 187			; 000000bbH
  00185	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0018b	51		 push	 ecx
  0018c	69 95 08 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv144[ebp], 1116
  00196	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR tv152[ebp]
  0019c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001a3	ff d1		 call	 ecx
  001a5	89 45 cc	 mov	 DWORD PTR _this_side$[ebp], eax

; 378  : 
; 379  : 	enemy_side = get_enemy_side (this_side);

  001a8	83 7d cc 01	 cmp	 DWORD PTR _this_side$[ebp], 1
  001ac	75 0c		 jne	 SHORT $LN26@draw_2d_ma
  001ae	c7 85 08 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv159[ebp], 2
  001b8	eb 0a		 jmp	 SHORT $LN27@draw_2d_ma
$LN26@draw_2d_ma:
  001ba	c7 85 08 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv159[ebp], 1
$LN27@draw_2d_ma:
  001c4	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR tv159[ebp]
  001ca	89 45 c8	 mov	 DWORD PTR _enemy_side$[ebp], eax

; 380  : 
; 381  : 	map_dimensions->mouse_over_object.type = MOUSE_OVER_OBJECT_NONE;

  001cd	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001d0	c7 40 4c 00 00
	00 00		 mov	 DWORD PTR [eax+76], 0

; 382  : 	map_dimensions->mouse_over_object.distance = FLT_MAX;

  001d7	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  001e2	f3 0f 11 40 50	 movss	 DWORD PTR [eax+80], xmm0

; 383  : 
; 384  : 	map_dimensions->mouse_over_object.en = NULL;

  001e7	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  001ea	c7 40 54 00 00
	00 00		 mov	 DWORD PTR [eax+84], 0

; 385  : 
; 386  : 	//
; 387  : 	// Track Player / map subject
; 388  : 	//
; 389  : 
; 390  : 	track_entity = NULL;

  001f1	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _track_entity$[ebp], 0

; 391  : 
; 392  : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_TRACK_PLAYER))

  001f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  001fd	25 00 04 00 00	 and	 eax, 1024		; 00000400H
  00202	0f 84 b8 01 00
	00		 je	 $LN7@draw_2d_ma

; 393  : 	{
; 394  : 		//
; 395  : 		// Track subject of map object.....
; 396  : 		//
; 397  : 
; 398  : 		en = map_dimensions->subject_entity;

  00208	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0020b	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0020e	89 4d c4	 mov	 DWORD PTR _en$[ebp], ecx

; 399  : 
; 400  : 		if (en)

  00211	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00215	0f 84 95 00 00
	00		 je	 $LN5@draw_2d_ma

; 401  : 		{
; 402  : 			//
; 403  : 			// ...Unless it's not meant to be tracked
; 404  : 			//
; 405  : 
; 406  : 			if (!get_local_entity_int_value (en, INT_TYPE_TRACK_ENTITY_ON_MAP))

  0021b	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  0021f	74 0d		 je	 SHORT $LN28@draw_2d_ma
  00221	8b 45 c4	 mov	 eax, DWORD PTR _en$[ebp]
  00224	8b 08		 mov	 ecx, DWORD PTR [eax]
  00226	89 8d 08 ff ff
	ff		 mov	 DWORD PTR tv175[ebp], ecx
  0022c	eb 20		 jmp	 SHORT $LN29@draw_2d_ma
$LN28@draw_2d_ma:
  0022e	68 96 01 00 00	 push	 406			; 00000196H
  00233	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00238	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023e	52		 push	 edx
  0023f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00244	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN29@draw_2d_ma:
  0024e	b8 01 00 00 00	 mov	 eax, 1
  00253	85 c0		 test	 eax, eax
  00255	74 0c		 je	 SHORT $LN30@draw_2d_ma
  00257	c7 85 04 ff ff
	ff ec 00 00 00	 mov	 DWORD PTR tv182[ebp], 236 ; 000000ecH
  00261	eb 20		 jmp	 SHORT $LN31@draw_2d_ma
$LN30@draw_2d_ma:
  00263	68 96 01 00 00	 push	 406			; 00000196H
  00268	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00273	51		 push	 ecx
  00274	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00279	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN31@draw_2d_ma:
  00283	68 ec 00 00 00	 push	 236			; 000000ecH
  00288	8b 55 c4	 mov	 edx, DWORD PTR _en$[ebp]
  0028b	52		 push	 edx
  0028c	69 85 08 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv175[ebp], 1116
  00296	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR tv182[ebp]
  0029c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002a3	ff d2		 call	 edx
  002a5	85 c0		 test	 eax, eax
  002a7	75 07		 jne	 SHORT $LN5@draw_2d_ma

; 407  : 			{
; 408  : 				en = NULL;

  002a9	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _en$[ebp], 0
$LN5@draw_2d_ma:

; 409  : 			}
; 410  : 		}
; 411  : 
; 412  : 		//
; 413  : 		// Track the players helicopter by default
; 414  : 		//
; 415  : 
; 416  : 		if (!en)

  002b0	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  002b4	75 08		 jne	 SHORT $LN6@draw_2d_ma

; 417  : 		{
; 418  : 			en = get_gunship_entity ();

  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002bb	89 45 c4	 mov	 DWORD PTR _en$[ebp], eax
$LN6@draw_2d_ma:

; 419  : 		}
; 420  : 
; 421  : 		if (en)

  002be	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  002c2	0f 84 f8 00 00
	00		 je	 $LN7@draw_2d_ma

; 422  : 		{
; 423  : 			track_entity = en;

  002c8	8b 45 c4	 mov	 eax, DWORD PTR _en$[ebp]
  002cb	89 45 c0	 mov	 DWORD PTR _track_entity$[ebp], eax

; 424  : 
; 425  : 			store_map_data.x = map_dimensions->x;

  002ce	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002d1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002d5	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _store_map_data$[ebp], xmm0

; 426  : 			store_map_data.z = map_dimensions->z;

  002dd	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002e0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002e5	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _store_map_data$[ebp+4], xmm0

; 427  : 
; 428  : 			store_map_data.size = map_dimensions->size;

  002ed	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  002f0	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  002f5	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _store_map_data$[ebp+8], xmm0

; 429  : 
; 430  : 			pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  002fd	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00301	74 0d		 je	 SHORT $LN32@draw_2d_ma
  00303	8b 45 c4	 mov	 eax, DWORD PTR _en$[ebp]
  00306	8b 08		 mov	 ecx, DWORD PTR [eax]
  00308	89 8d 08 ff ff
	ff		 mov	 DWORD PTR tv200[ebp], ecx
  0030e	eb 24		 jmp	 SHORT $LN33@draw_2d_ma
$LN32@draw_2d_ma:
  00310	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00316	83 c2 6a	 add	 edx, 106		; 0000006aH
  00319	52		 push	 edx
  0031a	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00324	50		 push	 eax
  00325	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0032a	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv200[ebp], 0
$LN33@draw_2d_ma:
  00334	b9 01 00 00 00	 mov	 ecx, 1
  00339	85 c9		 test	 ecx, ecx
  0033b	74 0c		 je	 SHORT $LN34@draw_2d_ma
  0033d	c7 85 04 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv208[ebp], 8
  00347	eb 24		 jmp	 SHORT $LN35@draw_2d_ma
$LN34@draw_2d_ma:
  00349	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0034f	83 c2 6a	 add	 edx, 106		; 0000006aH
  00352	52		 push	 edx
  00353	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00358	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00363	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv208[ebp], 0
$LN35@draw_2d_ma:
  0036d	6a 08		 push	 8
  0036f	8b 4d c4	 mov	 ecx, DWORD PTR _en$[ebp]
  00372	51		 push	 ecx
  00373	6b 95 08 ff ff
	ff 60		 imul	 edx, DWORD PTR tv200[ebp], 96
  0037a	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR tv208[ebp]
  00380	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00387	ff d1		 call	 ecx
  00389	89 45 bc	 mov	 DWORD PTR _pos$[ebp], eax

; 431  : 
; 432  : 			ASSERT (pos);

  0038c	83 7d bc 00	 cmp	 DWORD PTR _pos$[ebp], 0
  00390	75 18		 jne	 SHORT $LN8@draw_2d_ma
  00392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00397	83 c0 6c	 add	 eax, 108		; 0000006cH
  0039a	50		 push	 eax
  0039b	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  003a0	68 00 00 00 00	 push	 OFFSET ??_C@_03PCBNCGFH@pos@
  003a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@draw_2d_ma:

; 433  : 
; 434  : 			map_dimensions->x = pos->x;

  003aa	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  003ad	8b 4d bc	 mov	 ecx, DWORD PTR _pos$[ebp]
  003b0	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b2	89 10		 mov	 DWORD PTR [eax], edx

; 435  : 			map_dimensions->z = pos->z;

  003b4	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  003b7	8b 4d bc	 mov	 ecx, DWORD PTR _pos$[ebp]
  003ba	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003bd	89 50 04	 mov	 DWORD PTR [eax+4], edx
$LN7@draw_2d_ma:

; 436  : 		}
; 437  : 	}
; 438  : 
; 439  : 	//
; 440  : 	// Bound Map
; 441  : 	//
; 442  : 
; 443  : 	bound_map_extents (obj, &width, &height);

  003c0	8d 45 e0	 lea	 eax, DWORD PTR _height$[ebp]
  003c3	50		 push	 eax
  003c4	8d 4d e4	 lea	 ecx, DWORD PTR _width$[ebp]
  003c7	51		 push	 ecx
  003c8	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  003cb	52		 push	 edx
  003cc	e8 00 00 00 00	 call	 ?bound_map_extents@@YGXPAUUI_OBJECT@@PAM1@Z ; bound_map_extents

; 444  : 
; 445  : 	x = map_dimensions->x;

  003d1	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  003d4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003d8	f3 0f 11 45 fc	 movss	 DWORD PTR _x$[ebp], xmm0

; 446  : 	z = map_dimensions->z;

  003dd	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  003e0	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  003e5	f3 0f 11 45 f8	 movss	 DWORD PTR _z$[ebp], xmm0

; 447  : 
; 448  : 	//
; 449  : 	// draw map
; 450  : 	//
; 451  : 
; 452  : 	if (global_layer_controls & (1 << MAP_LAYER_CONTROL_SECTOR_SIDES))

  003ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_layer_controls@@3HA
  003ef	83 e0 01	 and	 eax, 1
  003f2	74 09		 je	 SHORT $LN9@draw_2d_ma

; 453  : 	{
; 454  : 		set_2d_terrain_contour_colour (FALSE);

  003f4	6a 00		 push	 0
  003f6	e8 00 00 00 00	 call	 ?set_2d_terrain_contour_colour@@YGXH@Z ; set_2d_terrain_contour_colour

; 455  : 	}
; 456  : 	else

  003fb	eb 07		 jmp	 SHORT $LN10@draw_2d_ma
$LN9@draw_2d_ma:

; 457  : 	{
; 458  : 		set_2d_terrain_contour_colour (TRUE);

  003fd	6a 01		 push	 1
  003ff	e8 00 00 00 00	 call	 ?set_2d_terrain_contour_colour@@YGXH@Z ; set_2d_terrain_contour_colour
$LN10@draw_2d_ma:

; 459  : 	}
; 460  : 
; 461  : 	set_2d_terrain_map_dimensions (

  00404	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00409	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  0040e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00412	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0041a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0041e	51		 push	 ecx
  0041f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00424	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00429	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  0042e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00432	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0043a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0043e	51		 push	 ecx
  0043f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00444	51		 push	 ecx
  00445	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0044a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044f	51		 push	 ecx
  00450	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _height$[ebp]
  0045f	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00467	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _z$[ebp]
  0046c	f3 0f 5c c8	 subss	 xmm1, xmm0
  00470	51		 push	 ecx
  00471	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00476	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _width$[ebp]
  0047b	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00483	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x$[ebp]
  00488	51		 push	 ecx
  00489	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048e	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _height$[ebp]
  00493	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0049b	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _z$[ebp]
  004a0	51		 push	 ecx
  004a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a6	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _width$[ebp]
  004ab	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  004b3	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR _x$[ebp]
  004b8	f3 0f 5c c8	 subss	 xmm1, xmm0
  004bc	51		 push	 ecx
  004bd	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  004c2	e8 00 00 00 00	 call	 ?set_2d_terrain_map_dimensions@@YGXMMMMMMMM@Z ; set_2d_terrain_map_dimensions

; 462  :               x - width/2, z + height/2,
; 463  :               x + width/2, z - height/2,
; 464  :               x1, y1, (x1 + x_size) - 0.01, (y1 + y_size) - 0.01 );
; 465  : 
; 466  : 	terrain_2d_map_contour_lines_drawn = TRUE;

  004c7	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?terrain_2d_map_contour_lines_drawn@@3HA, 1 ; terrain_2d_map_contour_lines_drawn

; 467  : 
; 468  : 	draw_2d_shaded_terrain_contour_map ();

  004d1	e8 00 00 00 00	 call	 ?draw_2d_shaded_terrain_contour_map@@YGXXZ ; draw_2d_shaded_terrain_contour_map

; 469  : 
; 470  : 	//
; 471  : 	// draw texture overlays
; 472  : 	//
; 473  : 
; 474  :    draw_2d_terrain_texture_overlays (obj, x, MAX_MAP_Z - z, width, height);

  004d6	51		 push	 ecx
  004d7	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _height$[ebp]
  004dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e1	51		 push	 ecx
  004e2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _width$[ebp]
  004e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ec	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  004f4	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _z$[ebp]
  004f9	51		 push	 ecx
  004fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ff	51		 push	 ecx
  00500	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  00505	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0050d	50		 push	 eax
  0050e	e8 00 00 00 00	 call	 ?draw_2d_terrain_texture_overlays@@YGXPAUUI_OBJECT@@MMMM@Z ; draw_2d_terrain_texture_overlays

; 475  : 
; 476  : 	//
; 477  : 	// draw town names
; 478  : 	//
; 479  : 
; 480  : 	map_draw_towns (obj);

  00513	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00516	50		 push	 eax
  00517	e8 00 00 00 00	 call	 ?map_draw_towns@@YGXPAUUI_OBJECT@@@Z ; map_draw_towns

; 481  : 
; 482  : 	//
; 483  : 	// draw grid
; 484  : 	//
; 485  : 
; 486  : 	map_draw_grid (obj);

  0051c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0051f	50		 push	 eax
  00520	e8 00 00 00 00	 call	 ?map_draw_grid@@YGXPAUUI_OBJECT@@@Z ; map_draw_grid

; 487  : 
; 488  : 	//
; 489  : 	// draw layers etc...
; 490  : 	//
; 491  : 
; 492  : 	map_draw_threat_circles (obj, this_side);

  00525	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  00528	50		 push	 eax
  00529	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0052c	51		 push	 ecx
  0052d	e8 00 00 00 00	 call	 ?map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_threat_circles

; 493  : 	map_draw_threat_circles (obj, enemy_side);

  00532	8b 45 c8	 mov	 eax, DWORD PTR _enemy_side$[ebp]
  00535	50		 push	 eax
  00536	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00539	51		 push	 ecx
  0053a	e8 00 00 00 00	 call	 ?map_draw_threat_circles@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_threat_circles

; 494  : 
; 495  : 	map_draw_keysites (obj, enemy_side);

  0053f	8b 45 c8	 mov	 eax, DWORD PTR _enemy_side$[ebp]
  00542	50		 push	 eax
  00543	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00546	51		 push	 ecx
  00547	e8 00 00 00 00	 call	 ?map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_keysites

; 496  : 	map_draw_keysites (obj, this_side);

  0054c	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  0054f	50		 push	 eax
  00550	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00553	51		 push	 ecx
  00554	e8 00 00 00 00	 call	 ?map_draw_keysites@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_keysites

; 497  : 
; 498  : 	map_draw_groups (obj, enemy_side);

  00559	8b 45 c8	 mov	 eax, DWORD PTR _enemy_side$[ebp]
  0055c	50		 push	 eax
  0055d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00560	51		 push	 ecx
  00561	e8 00 00 00 00	 call	 ?map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_groups

; 499  : 	map_draw_groups (obj, this_side);

  00566	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  00569	50		 push	 eax
  0056a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0056d	51		 push	 ecx
  0056e	e8 00 00 00 00	 call	 ?map_draw_groups@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_groups

; 500  : 
; 501  : 	map_draw_missions (obj, this_side);

  00573	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  00576	50		 push	 eax
  00577	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0057a	51		 push	 ecx
  0057b	e8 00 00 00 00	 call	 ?map_draw_missions@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_missions

; 502  : 
; 503  : 	if (get_local_entity_int_value (get_session_entity (), INT_TYPE_CHEATS_ENABLED))

  00580	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00587	74 0f		 je	 SHORT $LN36@draw_2d_ma
  00589	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0058e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00590	89 8d 08 ff ff
	ff		 mov	 DWORD PTR tv283[ebp], ecx
  00596	eb 20		 jmp	 SHORT $LN37@draw_2d_ma
$LN36@draw_2d_ma:
  00598	68 f7 01 00 00	 push	 503			; 000001f7H
  0059d	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005a8	52		 push	 edx
  005a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ae	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv283[ebp], 0
$LN37@draw_2d_ma:
  005b8	b8 01 00 00 00	 mov	 eax, 1
  005bd	85 c0		 test	 eax, eax
  005bf	74 0c		 je	 SHORT $LN38@draw_2d_ma
  005c1	c7 85 04 ff ff
	ff 17 00 00 00	 mov	 DWORD PTR tv290[ebp], 23 ; 00000017H
  005cb	eb 20		 jmp	 SHORT $LN39@draw_2d_ma
$LN38@draw_2d_ma:
  005cd	68 f7 01 00 00	 push	 503			; 000001f7H
  005d2	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005dd	51		 push	 ecx
  005de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e3	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv290[ebp], 0
$LN39@draw_2d_ma:
  005ed	6a 17		 push	 23			; 00000017H
  005ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  005f5	52		 push	 edx
  005f6	69 85 08 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv283[ebp], 1116
  00600	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR tv290[ebp]
  00606	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0060d	ff d2		 call	 edx
  0060f	85 c0		 test	 eax, eax
  00611	74 0d		 je	 SHORT $LN11@draw_2d_ma

; 504  : 	{
; 505  : 		map_draw_pilots (obj, enemy_side);

  00613	8b 45 c8	 mov	 eax, DWORD PTR _enemy_side$[ebp]
  00616	50		 push	 eax
  00617	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0061a	51		 push	 ecx
  0061b	e8 00 00 00 00	 call	 ?map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_pilots
$LN11@draw_2d_ma:

; 506  : 	}
; 507  : 
; 508  : 	map_draw_pilots (obj, this_side);

  00620	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  00623	50		 push	 eax
  00624	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00627	51		 push	 ecx
  00628	e8 00 00 00 00	 call	 ?map_draw_pilots@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_pilots

; 509  : 
; 510  : 	if (track_entity)

  0062d	83 7d c0 00	 cmp	 DWORD PTR _track_entity$[ebp], 0
  00631	74 0d		 je	 SHORT $LN12@draw_2d_ma

; 511  : 	{
; 512  : 		map_draw_track_entity (obj, track_entity);

  00633	8b 45 c0	 mov	 eax, DWORD PTR _track_entity$[ebp]
  00636	50		 push	 eax
  00637	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0063a	51		 push	 ecx
  0063b	e8 00 00 00 00	 call	 ?map_draw_track_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_track_entity
$LN12@draw_2d_ma:

; 513  : 	}
; 514  : 
; 515  : 	map_draw_subject_entity (obj);

  00640	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00643	50		 push	 eax
  00644	e8 00 00 00 00	 call	 ?map_draw_subject_entity@@YGXPAUUI_OBJECT@@@Z ; map_draw_subject_entity

; 516  : 
; 517  : 	map_draw_waypoint_routes (obj, this_side);

  00649	8b 45 cc	 mov	 eax, DWORD PTR _this_side$[ebp]
  0064c	50		 push	 eax
  0064d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00650	51		 push	 ecx
  00651	e8 00 00 00 00	 call	 ?map_draw_waypoint_routes@@YGXPAUUI_OBJECT@@W4ENTITY_SIDES@@@Z ; map_draw_waypoint_routes

; 518  : 
; 519  : //	this causes map flicker, so removed
; 520  : //	map_draw_events (obj);
; 521  : 
; 522  : 	en = get_ui_mouse_over_entity ();

  00656	e8 00 00 00 00	 call	 ?get_ui_mouse_over_entity@@YGPAUENTITY@@XZ ; get_ui_mouse_over_entity
  0065b	89 45 c4	 mov	 DWORD PTR _en$[ebp], eax

; 523  : 
; 524  : 	if (en)

  0065e	83 7d c4 00	 cmp	 DWORD PTR _en$[ebp], 0
  00662	74 12		 je	 SHORT $LN13@draw_2d_ma

; 525  : 	{
; 526  : 		map_draw_mouse_over_entity (obj, en);

  00664	8b 45 c4	 mov	 eax, DWORD PTR _en$[ebp]
  00667	50		 push	 eax
  00668	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0066b	51		 push	 ecx
  0066c	e8 00 00 00 00	 call	 ?map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_mouse_over_entity
  00671	e9 86 00 00 00	 jmp	 $LN18@draw_2d_ma
$LN13@draw_2d_ma:

; 527  : 	}
; 528  : 	else if (map_dimensions->mouse_over_object.type == MOUSE_OVER_OBJECT_ENTITY)

  00676	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00679	83 78 4c 01	 cmp	 DWORD PTR [eax+76], 1
  0067d	75 41		 jne	 SHORT $LN15@draw_2d_ma

; 529  : 	{
; 530  : 		ASSERT (map_dimensions->mouse_over_object.en);

  0067f	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  00682	83 78 54 00	 cmp	 DWORD PTR [eax+84], 0
  00686	75 1a		 jne	 SHORT $LN17@draw_2d_ma
  00688	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0068d	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  00692	50		 push	 eax
  00693	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00698	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NLNJCOFO@map_dimensions?9?$DOmouse_over_obje@
  0069d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@draw_2d_ma:

; 531  : 
; 532  : 		map_draw_mouse_over_entity (obj, map_dimensions->mouse_over_object.en);

  006a2	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006a5	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  006a8	51		 push	 ecx
  006a9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  006ac	52		 push	 edx
  006ad	e8 00 00 00 00	 call	 ?map_draw_mouse_over_entity@@YGXPAUUI_OBJECT@@PAUENTITY@@@Z ; map_draw_mouse_over_entity

; 533  : 
; 534  : 		set_ui_mouse_over_entity (map_dimensions->mouse_over_object.en);

  006b2	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006b5	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  006b8	51		 push	 ecx
  006b9	e8 00 00 00 00	 call	 ?set_ui_mouse_over_entity@@YGXPAUENTITY@@@Z ; set_ui_mouse_over_entity
  006be	eb 3c		 jmp	 SHORT $LN18@draw_2d_ma
$LN15@draw_2d_ma:

; 535  : 	}
; 536  : 	else if (map_dimensions->mouse_over_object.type == MOUSE_OVER_OBJECT_WAYPOINT_ADD)

  006c0	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006c3	83 78 4c 02	 cmp	 DWORD PTR [eax+76], 2
  006c7	75 33		 jne	 SHORT $LN18@draw_2d_ma

; 537  : 	{
; 538  : 		ASSERT (map_dimensions->mouse_over_object.en);

  006c9	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006cc	83 78 54 00	 cmp	 DWORD PTR [eax+84], 0
  006d0	75 1a		 jne	 SHORT $LN19@draw_2d_ma
  006d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  006d7	05 d6 00 00 00	 add	 eax, 214		; 000000d6H
  006dc	50		 push	 eax
  006dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@FHBCJCHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e2	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@NLNJCOFO@map_dimensions?9?$DOmouse_over_obje@
  006e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@draw_2d_ma:

; 539  : 
; 540  : 		map_draw_highlighted_insert_waypoint_icon (obj, &(map_dimensions->mouse_over_object.pos));

  006ec	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  006ef	83 c0 58	 add	 eax, 88			; 00000058H
  006f2	50		 push	 eax
  006f3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  006f6	51		 push	 ecx
  006f7	e8 00 00 00 00	 call	 ?map_draw_highlighted_insert_waypoint_icon@@YGXPAUUI_OBJECT@@PAUVEC3D@@@Z ; map_draw_highlighted_insert_waypoint_icon
$LN18@draw_2d_ma:

; 541  : 	}
; 542  : 
; 543  : 	set_last_drawn_map_object (obj);

  006fc	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  006ff	50		 push	 eax
  00700	e8 00 00 00 00	 call	 ?set_last_drawn_map_object@@YGXPAUUI_OBJECT@@@Z ; set_last_drawn_map_object

; 544  : 
; 545  : 	if (track_entity)

  00705	83 7d c0 00	 cmp	 DWORD PTR _track_entity$[ebp], 0
  00709	74 2f		 je	 SHORT $LN20@draw_2d_ma

; 546  : 	{
; 547  : 		map_dimensions->x = store_map_data.x;

  0070b	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0070e	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _store_map_data$[ebp]
  00716	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 548  : 		map_dimensions->z = store_map_data.z;

  0071a	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0071d	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _store_map_data$[ebp+4]
  00725	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 549  : 
; 550  : 		map_dimensions->size = store_map_data.size;

  0072a	8b 45 b8	 mov	 eax, DWORD PTR _map_dimensions$[ebp]
  0072d	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _store_map_data$[ebp+8]
  00735	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0
$LN20@draw_2d_ma:

; 551  : 	}
; 552  : }

  0073a	5f		 pop	 edi
  0073b	5e		 pop	 esi
  0073c	5b		 pop	 ebx
  0073d	8b e5		 mov	 esp, ebp
  0073f	5d		 pop	 ebp
  00740	c2 08 00	 ret	 8
?draw_2d_map@@YGXPAUUI_OBJECT@@PAX@Z ENDP		; draw_2d_map
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
