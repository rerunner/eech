; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\text\tx_fns.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_text_ui_object_function_functions@@YGXH@Z ; overload_text_ui_object_function_functions
EXTRN	?get_mouse_graphic_on@@YGHXZ:PROC		; get_mouse_graphic_on
EXTRN	?get_mouse_on@@YGHXZ:PROC			; get_mouse_on
EXTRN	?ui_repaint@@YGXXZ:PROC				; ui_repaint
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_set_ui_object_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_function
EXTRN	?fn_get_ui_object_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA:BYTE ; fn_get_ui_object_function
EXTRN	?fn_call_ui_object_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_function
EXTRN	?fn_set_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA:BYTE ; fn_set_ui_object_right_function
EXTRN	?fn_get_ui_object_right_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA:BYTE ; fn_get_ui_object_right_function
EXTRN	?fn_call_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_right_function
EXTRN	?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_notify_on
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?call_text_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_text$ = -8						; size = 4
_function$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?call_text_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; call_text_ui_object_right_function, COMDAT

; 242  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 243  : 
; 244  : 	void
; 245  : 		((*function) (ui_object *object, void *arg));
; 246  : 	
; 247  : 	text_ui_object
; 248  : 		*text;
; 249  : 
; 250  : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _text$[ebp], ecx

; 251  : 
; 252  : 	function = text->area.right_function;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 88 d4 00 00
	00		 mov	 ecx, DWORD PTR [eax+212]
  0001b	89 4d fc	 mov	 DWORD PTR _function$[ebp], ecx

; 253  : 
; 254  : 	if (function)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _function$[ebp], 0
  00022	0f 84 82 00 00
	00		 je	 $LN1@call_text_

; 255  : 	{
; 256  : 
; 257  : 		set_ui_object_redraw (obj, TRUE);

  00028	6a 01		 push	 1
  0002a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003a	ff d0		 call	 eax

; 258  : 
; 259  : 		if ((int) arg == BUTTON_STATE_DOWN)

  0003c	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  00040	75 16		 jne	 SHORT $LN3@call_text_

; 260  : 		{
; 261  : 
; 262  : 			set_ui_object_state (obj, UI_OBJECT_STATE_ON);

  00042	6a 01		 push	 1
  00044	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00047	50		 push	 eax
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0004b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00054	ff d0		 call	 eax

; 263  : 		}
; 264  : 		else 

  00056	eb 14		 jmp	 SHORT $LN4@call_text_
$LN3@call_text_:

; 265  : 		{
; 266  : 			
; 267  : 			set_ui_object_state (obj, UI_OBJECT_STATE_OFF);

  00058	6a 00		 push	 0
  0005a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0005d	50		 push	 eax
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00061	8b 11		 mov	 edx, DWORD PTR [ecx]
  00063	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0006a	ff d0		 call	 eax
$LN4@call_text_:

; 268  : 		}
; 269  : 
; 270  : 		if (
; 271  : 				(get_ui_object_notify_on (obj) == (int) arg) ||

  0006c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00073	8b 11		 mov	 edx, DWORD PTR [ecx]
  00075	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0007c	ff d0		 call	 eax
  0007e	3b 45 0c	 cmp	 eax, DWORD PTR _arg$[ebp]
  00081	74 17		 je	 SHORT $LN6@call_text_
  00083	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00086	50		 push	 eax
  00087	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0008a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  00093	ff d0		 call	 eax
  00095	83 f8 03	 cmp	 eax, 3
  00098	75 10		 jne	 SHORT $LN1@call_text_
$LN6@call_text_:

; 272  : 				(get_ui_object_notify_on (obj) == NOTIFY_TYPE_BUTTON_EITHER)
; 273  : 			)
; 274  : 		{
; 275  : 
; 276  : 			ui_repaint ();

  0009a	e8 00 00 00 00	 call	 ?ui_repaint@@YGXXZ	; ui_repaint

; 277  : 
; 278  : 			function (obj, (void *) arg);

  0009f	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  000a2	50		 push	 eax
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000a6	51		 push	 ecx
  000a7	ff 55 fc	 call	 DWORD PTR _function$[ebp]
$LN1@call_text_:

; 279  : 		}
; 280  : 	}
; 281  : }

  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 08 00	 ret	 8
?call_text_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; call_text_ui_object_right_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?call_text_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_temp_obj$1 = -28					; size = 4
_mouse_graphic_state$ = -24				; size = 4
_mouse_state$ = -20					; size = 4
_list_parent$ = -16					; size = 4
_notify_obj$ = -12					; size = 4
_text$ = -8						; size = 4
_function$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?call_text_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; call_text_ui_object_function, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 135  : 
; 136  : 	void
; 137  : 		((*function) (ui_object *object, void *arg));
; 138  : 	
; 139  : 	text_ui_object
; 140  : 		*text;
; 141  : 
; 142  : 	ui_object
; 143  : 		*notify_obj,
; 144  : 		*list_parent;
; 145  : 
; 146  : 	int
; 147  : 		mouse_state,
; 148  : 		mouse_graphic_state;
; 149  : 
; 150  : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _text$[ebp], ecx

; 151  : 
; 152  : 	function = text->area.function;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0001b	89 4d fc	 mov	 DWORD PTR _function$[ebp], ecx

; 153  : 
; 154  : 	if (function)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _function$[ebp], 0
  00022	0f 84 f6 00 00
	00		 je	 $LN1@call_text_

; 155  : 	{
; 156  : 
; 157  : 		//set_ui_object_redraw (obj, TRUE);
; 158  : 		{
; 159  : 
; 160  : 			ui_object
; 161  : 				*temp_obj;
; 162  : 	
; 163  : 			temp_obj = obj;

  00028	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002b	89 45 e4	 mov	 DWORD PTR _temp_obj$1[ebp], eax
$LN2@call_text_:

; 164  : 	
; 165  : 			while (temp_obj)

  0002e	83 7d e4 00	 cmp	 DWORD PTR _temp_obj$1[ebp], 0
  00032	74 43		 je	 SHORT $LN3@call_text_

; 166  : 			{
; 167  : 	
; 168  : 				set_ui_object_redraw (temp_obj, TRUE);

  00034	6a 01		 push	 1
  00036	8b 45 e4	 mov	 eax, DWORD PTR _temp_obj$1[ebp]
  00039	50		 push	 eax
  0003a	8b 4d e4	 mov	 ecx, DWORD PTR _temp_obj$1[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00046	ff d0		 call	 eax

; 169  : 
; 170  : 				if (!get_ui_object_clear (temp_obj))

  00048	8b 45 e4	 mov	 eax, DWORD PTR _temp_obj$1[ebp]
  0004b	50		 push	 eax
  0004c	8b 4d e4	 mov	 ecx, DWORD PTR _temp_obj$1[ebp]
  0004f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00051	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00058	ff d0		 call	 eax
  0005a	85 c0		 test	 eax, eax
  0005c	75 02		 jne	 SHORT $LN5@call_text_

; 171  : 				{
; 172  : 	
; 173  : 					break;

  0005e	eb 17		 jmp	 SHORT $LN3@call_text_
$LN5@call_text_:

; 174  : 				}
; 175  : 	
; 176  : 				temp_obj = get_ui_object_parent (temp_obj);

  00060	8b 45 e4	 mov	 eax, DWORD PTR _temp_obj$1[ebp]
  00063	50		 push	 eax
  00064	8b 4d e4	 mov	 ecx, DWORD PTR _temp_obj$1[ebp]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00070	ff d0		 call	 eax
  00072	89 45 e4	 mov	 DWORD PTR _temp_obj$1[ebp], eax

; 177  : 			}

  00075	eb b7		 jmp	 SHORT $LN2@call_text_
$LN3@call_text_:

; 178  : 		}
; 179  : 
; 180  : 		if ((int) arg == BUTTON_STATE_DOWN)

  00077	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0007b	75 16		 jne	 SHORT $LN6@call_text_

; 181  : 		{
; 182  : 
; 183  : 			set_ui_object_state (obj, UI_OBJECT_STATE_ON);

  0007d	6a 01		 push	 1
  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0008f	ff d0		 call	 eax

; 184  : 		}
; 185  : 		else 

  00091	eb 14		 jmp	 SHORT $LN7@call_text_
$LN6@call_text_:

; 186  : 		{
; 187  : 			
; 188  : 			set_ui_object_state (obj, UI_OBJECT_STATE_OFF);

  00093	6a 00		 push	 0
  00095	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000a5	ff d0		 call	 eax
$LN7@call_text_:

; 189  : 		}
; 190  : 
; 191  : 		//
; 192  : 		// if list text get lists notify type
; 193  : 		//
; 194  : 
; 195  : 		list_parent = get_ui_object_parent (obj);

  000a7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000aa	50		 push	 eax
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000b7	ff d0		 call	 eax
  000b9	89 45 f0	 mov	 DWORD PTR _list_parent$[ebp], eax

; 196  : 
; 197  : 		notify_obj = obj;

  000bc	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000bf	89 45 f4	 mov	 DWORD PTR _notify_obj$[ebp], eax

; 198  : 
; 199  : 		if (list_parent->type == UI_TYPE_LIST_BOX)

  000c2	8b 45 f0	 mov	 eax, DWORD PTR _list_parent$[ebp]
  000c5	83 38 0d	 cmp	 DWORD PTR [eax], 13	; 0000000dH
  000c8	75 06		 jne	 SHORT $LN8@call_text_

; 200  : 		{
; 201  : 
; 202  : 			notify_obj = list_parent;

  000ca	8b 45 f0	 mov	 eax, DWORD PTR _list_parent$[ebp]
  000cd	89 45 f4	 mov	 DWORD PTR _notify_obj$[ebp], eax
$LN8@call_text_:

; 203  : 		}
; 204  : 
; 205  : 		if
; 206  : 			(
; 207  : 				(get_ui_object_notify_on (notify_obj) == (int) arg) ||

  000d0	8b 45 f4	 mov	 eax, DWORD PTR _notify_obj$[ebp]
  000d3	50		 push	 eax
  000d4	8b 4d f4	 mov	 ecx, DWORD PTR _notify_obj$[ebp]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  000e0	ff d0		 call	 eax
  000e2	3b 45 0c	 cmp	 eax, DWORD PTR _arg$[ebp]
  000e5	74 17		 je	 SHORT $LN10@call_text_
  000e7	8b 45 f4	 mov	 eax, DWORD PTR _notify_obj$[ebp]
  000ea	50		 push	 eax
  000eb	8b 4d f4	 mov	 ecx, DWORD PTR _notify_obj$[ebp]
  000ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  000f7	ff d0		 call	 eax
  000f9	83 f8 03	 cmp	 eax, 3
  000fc	75 20		 jne	 SHORT $LN1@call_text_
$LN10@call_text_:

; 208  : 				(get_ui_object_notify_on (notify_obj) == NOTIFY_TYPE_BUTTON_EITHER)
; 209  : 			)
; 210  : 		{
; 211  : 
; 212  : 			mouse_state = get_mouse_on ();

  000fe	e8 00 00 00 00	 call	 ?get_mouse_on@@YGHXZ	; get_mouse_on
  00103	89 45 ec	 mov	 DWORD PTR _mouse_state$[ebp], eax

; 213  : 
; 214  : 			mouse_graphic_state = get_mouse_graphic_on ();

  00106	e8 00 00 00 00	 call	 ?get_mouse_graphic_on@@YGHXZ ; get_mouse_graphic_on
  0010b	89 45 e8	 mov	 DWORD PTR _mouse_graphic_state$[ebp], eax

; 215  : 
; 216  : //			set_mouse_off ();
; 217  : 
; 218  : 			ui_repaint ();

  0010e	e8 00 00 00 00	 call	 ?ui_repaint@@YGXXZ	; ui_repaint

; 219  : 
; 220  : 			function (obj, (void *) arg);

  00113	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  00116	50		 push	 eax
  00117	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0011a	51		 push	 ecx
  0011b	ff 55 fc	 call	 DWORD PTR _function$[ebp]
$LN1@call_text_:

; 221  : 		}
; 222  : 
; 223  : //		if (mouse_state)
; 224  : //		{
; 225  : //
; 226  : //			set_mouse_on ();
; 227  : //		}
; 228  : //
; 229  : //		if (mouse_graphic_state)
; 230  : //		{
; 231  : //
; 232  : //			set_mouse_graphic_on ();
; 233  : //		}
; 234  : 	}
; 235  : }

  0011e	5f		 pop	 edi
  0011f	5e		 pop	 esi
  00120	5b		 pop	 ebx
  00121	8b e5		 mov	 esp, ebp
  00123	5d		 pop	 ebp
  00124	c2 08 00	 ret	 8
?call_text_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; call_text_ui_object_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?get_text_ui_object_right_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z
_TEXT	SEGMENT
_text$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_text_ui_object_right_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z PROC ; get_text_ui_object_right_function, COMDAT

; 119  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 120  : 	
; 121  : 	text_ui_object
; 122  : 		*text;
; 123  : 
; 124  : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _text$[ebp], ecx

; 125  : 
; 126  : 	return (text->area.right_function);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 80 d4 00 00
	00		 mov	 eax, DWORD PTR [eax+212]

; 127  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_text_ui_object_right_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z ENDP ; get_text_ui_object_right_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?set_text_ui_object_right_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z
_TEXT	SEGMENT
_text$ = -4						; size = 4
_obj$ = 8						; size = 4
_function$ = 12						; size = 4
?set_text_ui_object_right_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z PROC ; set_text_ui_object_right_function, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 	
; 106  : 	text_ui_object
; 107  : 		*text;
; 108  : 
; 109  : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _text$[ebp], ecx

; 110  : 
; 111  : 	text->area.right_function = function;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _function$[ebp]
  00018	89 88 d4 00 00
	00		 mov	 DWORD PTR [eax+212], ecx

; 112  : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?set_text_ui_object_right_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z ENDP ; set_text_ui_object_right_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?get_text_ui_object_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z
_TEXT	SEGMENT
_text$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_text_ui_object_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z PROC ; get_text_ui_object_function, COMDAT

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 90   : 	
; 91   : 	text_ui_object
; 92   : 		*text;
; 93   : 
; 94   : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _text$[ebp], ecx

; 95   : 
; 96   : 	return (text->area.function);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 80 d0 00 00
	00		 mov	 eax, DWORD PTR [eax+208]

; 97   : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
?get_text_ui_object_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z ENDP ; get_text_ui_object_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?set_text_ui_object_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z
_TEXT	SEGMENT
_text$ = -4						; size = 4
_obj$ = 8						; size = 4
_function$ = 12						; size = 4
?set_text_ui_object_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z PROC ; set_text_ui_object_function, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	text_ui_object
; 77   : 		*text;
; 78   : 
; 79   : 	text = (text_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _text$[ebp], ecx

; 80   : 
; 81   : 	text->area.function = function;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR _function$[ebp]
  00018	89 88 d0 00 00
	00		 mov	 DWORD PTR [eax+208], ecx

; 82   : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c2 08 00	 ret	 8
?set_text_ui_object_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z ENDP ; set_text_ui_object_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\text\tx_fns.c
;	COMDAT ?overload_text_ui_object_function_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_text_ui_object_function_functions@@YGXH@Z PROC ; overload_text_ui_object_function_functions, COMDAT

; 288  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 289  : 
; 290  : 	fn_set_ui_object_function [type] 			= set_text_ui_object_function;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4], OFFSET ?set_text_ui_object_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z ; set_text_ui_object_function

; 291  : 
; 292  : 	fn_get_ui_object_function [type] 			= get_text_ui_object_function;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA[eax*4], OFFSET ?get_text_ui_object_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z ; get_text_ui_object_function

; 293  : 
; 294  : 	fn_set_ui_object_right_function [type]		= set_text_ui_object_right_function;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@P6GX0PAX@Z@ZA[eax*4], OFFSET ?set_text_ui_object_right_function@@YGXPAUUI_OBJECT@@P6GX0PAX@Z@Z ; set_text_ui_object_right_function

; 295  : 
; 296  : 	fn_get_ui_object_right_function [type]		= get_text_ui_object_right_function;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_right_function@@3PAP6GP6GXPAUUI_OBJECT@@PAX@Z0@ZA[eax*4], OFFSET ?get_text_ui_object_right_function@@YGP6GXPAUUI_OBJECT@@PAX@Z0@Z ; get_text_ui_object_right_function

; 297  : 
; 298  : 	fn_call_ui_object_function [type]			= call_text_ui_object_function;

  00041	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00044	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_call_ui_object_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4], OFFSET ?call_text_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z ; call_text_ui_object_function

; 299  : 
; 300  : 	fn_call_ui_object_right_function [type]	= call_text_ui_object_right_function;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00052	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_call_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4], OFFSET ?call_text_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z ; call_text_ui_object_right_function

; 301  : }

  0005d	5f		 pop	 edi
  0005e	5e		 pop	 esi
  0005f	5b		 pop	 ebx
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c2 04 00	 ret	 4
?overload_text_ui_object_function_functions@@YGXH@Z ENDP ; overload_text_ui_object_function_functions
_TEXT	ENDS
END
