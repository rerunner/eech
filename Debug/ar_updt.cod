; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_update_functions@@YGXH@Z ; overload_area_ui_object_update_functions
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_update_ui_object
EXTRN	?ui_x_origin@@3MA:DWORD				; ui_x_origin
EXTRN	?ui_y_origin@@3MA:DWORD				; ui_y_origin
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_updt.c
;	COMDAT ?update_area_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv522 = -144						; size = 4
tv514 = -144						; size = 4
tv494 = -144						; size = 4
tv486 = -144						; size = 4
tv423 = -144						; size = 4
tv415 = -144						; size = 4
tv387 = -144						; size = 4
tv379 = -144						; size = 4
_old_viewport_y2$ = -76					; size = 4
_old_viewport_x2$ = -72					; size = 4
_old_viewport_y1$ = -68					; size = 4
_old_viewport_x1$ = -64					; size = 4
_area$ = -60						; size = 4
_parent$ = -56						; size = 4
_grand_parent$ = -52					; size = 4
_grand_parent_y_origin$ = -48				; size = 4
_grand_parent_x_origin$ = -44				; size = 4
_parent_y2$ = -40					; size = 4
_parent_x2$ = -36					; size = 4
_parent_y1$ = -32					; size = 4
_parent_x1$ = -28					; size = 4
_old_y_origin$ = -24					; size = 4
_old_x_origin$ = -20					; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
?update_area_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; update_area_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   :    float
; 77   :       x1,
; 78   :       y1,
; 79   :       x2,
; 80   :       y2,
; 81   : 		old_x_origin,
; 82   : 		old_y_origin,
; 83   :       parent_x1,
; 84   :       parent_y1,
; 85   :       parent_x2,
; 86   :       parent_y2,
; 87   :       grand_parent_x_origin = 0.0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 d4	 movss	 DWORD PTR _grand_parent_x_origin$[ebp], xmm0

; 88   :       grand_parent_y_origin = 0.0;

  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 45 d0	 movss	 DWORD PTR _grand_parent_y_origin$[ebp], xmm0

; 89   : 
; 90   :    ui_object
; 91   :       *grand_parent,
; 92   :       *parent;
; 93   : 
; 94   :    area_ui_object
; 95   :       *area;
; 96   : 
; 97   : 	float
; 98   : 		old_viewport_x1,
; 99   : 		old_viewport_y1,
; 100  : 		old_viewport_x2,
; 101  : 		old_viewport_y2;
; 102  : 
; 103  : 	old_x_origin = ui_x_origin;

  0001c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  00024	f3 0f 11 45 ec	 movss	 DWORD PTR _old_x_origin$[ebp], xmm0

; 104  : 	old_y_origin = ui_y_origin;

  00029	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  00031	f3 0f 11 45 e8	 movss	 DWORD PTR _old_y_origin$[ebp], xmm0

; 105  : 
; 106  :    // store parents viewport data
; 107  : 
; 108  : 	old_viewport_x1 = active_viewport.x_min;

  00036	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  0003e	f3 0f 11 45 c0	 movss	 DWORD PTR _old_viewport_x1$[ebp], xmm0

; 109  : 	old_viewport_y1 = active_viewport.y_min;

  00043	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  0004b	f3 0f 11 45 bc	 movss	 DWORD PTR _old_viewport_y1$[ebp], xmm0

; 110  : 	old_viewport_x2 = active_viewport.x_max;

  00050	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  00058	f3 0f 11 45 b8	 movss	 DWORD PTR _old_viewport_x2$[ebp], xmm0

; 111  : 	old_viewport_y2 = active_viewport.y_max;

  0005d	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  00065	f3 0f 11 45 b4	 movss	 DWORD PTR _old_viewport_y2$[ebp], xmm0

; 112  : 
; 113  :    area = (area_ui_object *) obj->data;

  0006a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00070	89 4d c4	 mov	 DWORD PTR _area$[ebp], ecx

; 114  : 
; 115  :    parent = get_ui_object_parent (obj);

  00073	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00076	50		 push	 eax
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00083	ff d0		 call	 eax
  00085	89 45 c8	 mov	 DWORD PTR _parent$[ebp], eax

; 116  : 
; 117  :    grand_parent = get_ui_object_parent (parent);

  00088	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00098	ff d0		 call	 eax
  0009a	89 45 cc	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 118  : 
; 119  :    if (parent)

  0009d	83 7d c8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  000a1	0f 84 e2 01 00
	00		 je	 $LN2@update_are

; 120  :    {
; 121  :    
; 122  :       if (grand_parent)

  000a7	83 7d cc 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  000ab	74 2a		 je	 SHORT $LN3@update_are

; 123  :       {
; 124  :       
; 125  :          grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  000ad	8b 45 cc	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  000b0	50		 push	 eax
  000b1	8b 4d cc	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  000b4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000bd	ff d0		 call	 eax
  000bf	d9 5d d4	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 126  : 
; 127  :          grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  000c2	8b 45 cc	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d cc	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  000c9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000d2	ff d0		 call	 eax
  000d4	d9 5d d0	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN3@update_are:

; 128  :       }
; 129  :    
; 130  :       ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  000d7	51		 push	 ecx
  000d8	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	51		 push	 ecx
  000e3	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  000e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ed	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 131  : 
; 132  :       parent_x1 = get_ui_object_x (parent);

  000f2	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00102	ff d0		 call	 eax
  00104	d9 5d e4	 fstp	 DWORD PTR _parent_x1$[ebp]

; 133  : 
; 134  :       parent_y1 = get_ui_object_y (parent);

  00107	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0010a	50		 push	 eax
  0010b	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0010e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00110	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00117	ff d0		 call	 eax
  00119	d9 5d e0	 fstp	 DWORD PTR _parent_y1$[ebp]

; 135  : 
; 136  :       parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  0011c	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0011f	50		 push	 eax
  00120	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00123	8b 11		 mov	 edx, DWORD PTR [ecx]
  00125	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0012c	ff d0		 call	 eax
  0012e	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv379[ebp]
  00134	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv379[ebp]
  0013c	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00141	f3 0f 11 45 dc	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 137  : 
; 138  :       parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  00146	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00149	50		 push	 eax
  0014a	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0014d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0014f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00156	ff d0		 call	 eax
  00158	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv387[ebp]
  0015e	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv387[ebp]
  00166	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0016b	f3 0f 11 45 d8	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 139  : 
; 140  :       x1 = parent_x1;

  00170	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00175	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 141  : 
; 142  :       y1 = parent_y1;

  0017a	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0017f	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 143  : 
; 144  :       x2 = parent_x2;

  00184	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  00189	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 145  : 
; 146  :       y2 = parent_y2;

  0018e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  00193	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 147  : 
; 148  :       ui_clip_area (&x1, &y1, &x2, &y2);

  00198	8d 45 f0	 lea	 eax, DWORD PTR _y2$[ebp]
  0019b	50		 push	 eax
  0019c	8d 4d f4	 lea	 ecx, DWORD PTR _x2$[ebp]
  0019f	51		 push	 ecx
  001a0	8d 55 f8	 lea	 edx, DWORD PTR _y1$[ebp]
  001a3	52		 push	 edx
  001a4	8d 45 fc	 lea	 eax, DWORD PTR _x1$[ebp]
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 149  : 
; 150  :       x1 += grand_parent_x_origin;

  001ad	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001b2	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  001b7	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 151  : 
; 152  :       y1 += grand_parent_y_origin;

  001bc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001c1	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  001c6	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 153  : 
; 154  :       x2 += grand_parent_x_origin;

  001cb	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001d0	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  001d5	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 155  : 
; 156  :       y2 += grand_parent_y_origin;

  001da	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001df	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  001e4	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 157  : 
; 158  :       set_viewport (x1, y1, x2, y2);

  001e9	51		 push	 ecx
  001ea	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	51		 push	 ecx
  001f5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ff	51		 push	 ecx
  00200	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00205	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020a	51		 push	 ecx
  0020b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 159  :       
; 160  :       parent_x1 += get_ui_object_x_origin (parent);

  0021a	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0021d	50		 push	 eax
  0021e	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00221	8b 11		 mov	 edx, DWORD PTR [ecx]
  00223	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0022a	ff d0		 call	 eax
  0022c	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv415[ebp]
  00232	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv415[ebp]
  0023a	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0023f	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x1$[ebp], xmm0

; 161  : 
; 162  :       parent_y1 += get_ui_object_y_origin (parent);

  00244	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00247	50		 push	 eax
  00248	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0024b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0024d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00254	ff d0		 call	 eax
  00256	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv423[ebp]
  0025c	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv423[ebp]
  00264	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00269	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y1$[ebp], xmm0

; 163  : 
; 164  :       ui_set_origin (parent_x1, parent_y1);

  0026e	51		 push	 ecx
  0026f	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00274	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00279	51		 push	 ecx
  0027a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0027f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00284	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN2@update_are:

; 165  :    }
; 166  : 
; 167  :    if (area->drawable)

  00289	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  0028c	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0028f	c1 e9 05	 shr	 ecx, 5
  00292	83 e1 01	 and	 ecx, 1
  00295	74 33		 je	 SHORT $LN5@update_are

; 168  :    {
; 169  : 
; 170  :       draw_ui_object (obj);

  00297	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0029a	50		 push	 eax
  0029b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0029e	8b 11		 mov	 edx, DWORD PTR [ecx]
  002a0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[edx*4]
  002a7	ff d0		 call	 eax

; 171  : 
; 172  :       if (area->child)

  002a9	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  002ac	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  002b0	74 18		 je	 SHORT $LN5@update_are

; 173  :       {
; 174  : 
; 175  :          update_ui_object (area->child);

  002b2	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  002b5	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  002b8	51		 push	 ecx
  002b9	8b 55 c4	 mov	 edx, DWORD PTR _area$[ebp]
  002bc	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  002bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c1	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  002c8	ff d2		 call	 edx
$LN5@update_are:

; 176  :       }
; 177  :    }
; 178  : 
; 179  : 	set_viewport (old_viewport_x1, old_viewport_y1, old_viewport_x2, old_viewport_y2);

  002ca	51		 push	 ecx
  002cb	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _old_viewport_y2$[ebp]
  002d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d5	51		 push	 ecx
  002d6	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _old_viewport_x2$[ebp]
  002db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e0	51		 push	 ecx
  002e1	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _old_viewport_y1$[ebp]
  002e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002eb	51		 push	 ecx
  002ec	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_viewport_x1$[ebp]
  002f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f6	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 180  : 
; 181  :    if (area->next)

  002fb	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  002fe	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00302	0f 84 f1 01 00
	00		 je	 $LN6@update_are

; 182  :    {
; 183  : 
; 184  :       parent = get_ui_object_parent (obj);

  00308	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0030b	50		 push	 eax
  0030c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0030f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00311	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00318	ff d0		 call	 eax
  0031a	89 45 c8	 mov	 DWORD PTR _parent$[ebp], eax

; 185  :    
; 186  :       grand_parent = get_ui_object_parent (parent);

  0031d	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00320	50		 push	 eax
  00321	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00324	8b 11		 mov	 edx, DWORD PTR [ecx]
  00326	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0032d	ff d0		 call	 eax
  0032f	89 45 cc	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 187  : 
; 188  :       if (parent)

  00332	83 7d c8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00336	0f 84 a5 01 00
	00		 je	 $LN7@update_are

; 189  :       {
; 190  :       
; 191  :          if (grand_parent)

  0033c	83 7d cc 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  00340	74 2a		 je	 SHORT $LN8@update_are

; 192  :          {
; 193  :          
; 194  : 				grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  00342	8b 45 cc	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00345	50		 push	 eax
  00346	8b 4d cc	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  00349	8b 11		 mov	 edx, DWORD PTR [ecx]
  0034b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00352	ff d0		 call	 eax
  00354	d9 5d d4	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 195  : 
; 196  : 				grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  00357	8b 45 cc	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  0035a	50		 push	 eax
  0035b	8b 4d cc	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  0035e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00360	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00367	ff d0		 call	 eax
  00369	d9 5d d0	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN8@update_are:

; 197  : 			}
; 198  : 
; 199  : 			ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  0036c	51		 push	 ecx
  0036d	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  00372	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00377	51		 push	 ecx
  00378	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  0037d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00382	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 200  : 	
; 201  : 			parent_x1 = get_ui_object_x (parent);

  00387	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0038a	50		 push	 eax
  0038b	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  0038e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00390	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00397	ff d0		 call	 eax
  00399	d9 5d e4	 fstp	 DWORD PTR _parent_x1$[ebp]

; 202  : 
; 203  : 			parent_y1 = get_ui_object_y (parent);

  0039c	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0039f	50		 push	 eax
  003a0	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  003a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  003a5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  003ac	ff d0		 call	 eax
  003ae	d9 5d e0	 fstp	 DWORD PTR _parent_y1$[ebp]

; 204  : 
; 205  : 			parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  003b1	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  003b4	50		 push	 eax
  003b5	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  003b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  003ba	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  003c1	ff d0		 call	 eax
  003c3	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv486[ebp]
  003c9	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv486[ebp]
  003d1	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  003d6	f3 0f 11 45 dc	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 206  : 
; 207  : 			parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  003db	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  003de	50		 push	 eax
  003df	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  003e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  003e4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  003eb	ff d0		 call	 eax
  003ed	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv494[ebp]
  003f3	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv494[ebp]
  003fb	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00400	f3 0f 11 45 d8	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 208  : 	
; 209  : 			x1 = parent_x1 + grand_parent_x_origin;

  00405	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0040a	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  0040f	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 210  : 
; 211  : 			y1 = parent_y1 + grand_parent_y_origin;

  00414	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00419	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  0041e	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 212  : 
; 213  : 			x2 = parent_x2 + grand_parent_x_origin;

  00423	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  00428	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  0042d	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 214  : 
; 215  : 			y2 = parent_y2 + grand_parent_y_origin;

  00432	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  00437	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  0043c	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 216  : 
; 217  : 			set_viewport (x1, y1, x2, y2);

  00441	51		 push	 ecx
  00442	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00447	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0044c	51		 push	 ecx
  0044d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00452	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00457	51		 push	 ecx
  00458	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0045d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00462	51		 push	 ecx
  00463	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00468	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046d	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 218  : 			
; 219  : 			parent_x1 += get_ui_object_x_origin (parent);

  00472	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  00475	50		 push	 eax
  00476	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00479	8b 11		 mov	 edx, DWORD PTR [ecx]
  0047b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00482	ff d0		 call	 eax
  00484	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv514[ebp]
  0048a	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv514[ebp]
  00492	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00497	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x1$[ebp], xmm0

; 220  : 
; 221  : 			parent_y1 += get_ui_object_y_origin (parent);

  0049c	8b 45 c8	 mov	 eax, DWORD PTR _parent$[ebp]
  0049f	50		 push	 eax
  004a0	8b 4d c8	 mov	 ecx, DWORD PTR _parent$[ebp]
  004a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  004a5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  004ac	ff d0		 call	 eax
  004ae	d9 9d 70 ff ff
	ff		 fstp	 DWORD PTR tv522[ebp]
  004b4	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR tv522[ebp]
  004bc	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  004c1	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y1$[ebp], xmm0

; 222  : 
; 223  : 			ui_set_origin (parent_x1, parent_y1);

  004c6	51		 push	 ecx
  004c7	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	51		 push	 ecx
  004d2	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  004d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004dc	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN7@update_are:

; 224  : 		}
; 225  : 
; 226  : 		update_ui_object (area->next);

  004e1	8b 45 c4	 mov	 eax, DWORD PTR _area$[ebp]
  004e4	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  004e7	51		 push	 ecx
  004e8	8b 55 c4	 mov	 edx, DWORD PTR _area$[ebp]
  004eb	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  004ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  004f0	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  004f7	ff d2		 call	 edx
$LN6@update_are:

; 227  : 	}
; 228  : 
; 229  : 	ui_set_origin (old_x_origin, old_y_origin);

  004f9	51		 push	 ecx
  004fa	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _old_y_origin$[ebp]
  004ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00504	51		 push	 ecx
  00505	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _old_x_origin$[ebp]
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 230  : }

  00514	5f		 pop	 edi
  00515	5e		 pop	 esi
  00516	5b		 pop	 ebx
  00517	8b e5		 mov	 esp, ebp
  00519	5d		 pop	 ebp
  0051a	c2 04 00	 ret	 4
?update_area_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; update_area_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_updt.c
;	COMDAT ?overload_area_ui_object_update_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_update_functions@@YGXH@Z PROC	; overload_area_ui_object_update_functions, COMDAT

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 238  : 
; 239  : 	fn_update_ui_object [type] = update_area_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?update_area_ui_object@@YGXPAUUI_OBJECT@@@Z ; update_area_ui_object

; 240  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_area_ui_object_update_functions@@YGXH@Z ENDP	; overload_area_ui_object_update_functions
_TEXT	ENDS
END
