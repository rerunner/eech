; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_fixed_wing_pack_functions@@YGXXZ	; overload_fixed_wing_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	__real@0000000000000000
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?pack_mobile_local_sound_effects@@YGHPAUENTITY@@W4PACK_MODES@@@Z:PROC ; pack_mobile_local_sound_effects
EXTRN	?unpack_mobile_local_sound_effects@@YGHPAUENTITY@@W4PACK_MODES@@@Z:PROC ; unpack_mobile_local_sound_effects
EXTRN	?pack_aircraft_data@@YGXPAUENTITY@@PAUAIRCRAFT@@W4PACK_MODES@@@Z:PROC ; pack_aircraft_data
EXTRN	?unpack_aircraft_data@@YGXPAUENTITY@@PAUAIRCRAFT@@W4PACK_MODES@@@Z:PROC ; unpack_aircraft_data
EXTRN	?initialise_fixed_wing_propellors@@YGXPAUENTITY@@@Z:PROC ; initialise_fixed_wing_propellors
EXTRN	?set_fixed_wing_id_number@@YGXPAUENTITY@@@Z:PROC ; set_fixed_wing_id_number
EXTRN	?pack_fixed_wing_meta_smoke_lists@@YGXPAUENTITY@@W4PACK_MODES@@@Z:PROC ; pack_fixed_wing_meta_smoke_lists
EXTRN	?unpack_fixed_wing_meta_smoke_lists@@YGXPAUENTITY@@W4PACK_MODES@@@Z:PROC ; unpack_fixed_wing_meta_smoke_lists
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?add_to_force_info@@YGXPAUENTITY@@0@Z:PROC	; add_to_force_info
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 0abH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwi'
	DB	'ng\fw_pack.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -76						; size = 4
_raw$1 = -8						; size = 4
_index$2 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 171  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 172  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 173  : 
; 174  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 3a 01 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@unpack_loc
  00043	e9 2f 01 00 00	 jmp	 $LN2@unpack_loc
$LN6@unpack_loc:

; 175  : 	{
; 176  : 		////////////////////////////////////////
; 177  : 		case PACK_MODE_SERVER_SESSION:
; 178  : 		case PACK_MODE_CLIENT_SESSION:
; 179  : 		////////////////////////////////////////
; 180  : 		{
; 181  : 			int
; 182  : 				index;
; 183  : 
; 184  : 			fixed_wing
; 185  : 				*raw;
; 186  : 
; 187  : 			//
; 188  : 			// create entity
; 189  : 			//
; 190  : 
; 191  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$2[ebp], eax

; 192  : 
; 193  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$2[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 194  : 
; 195  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 196  : 
; 197  : 			raw = (fixed_wing *) malloc_fast_mem (sizeof (fixed_wing));

  00064	68 90 01 00 00	 push	 400			; 00000190H
  00069	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0006e	89 45 f8	 mov	 DWORD PTR _raw$1[ebp], eax

; 198  : 
; 199  : 			set_local_entity_data (en, raw);

  00071	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00077	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 200  : 
; 201  : 			memset (raw, 0, sizeof (fixed_wing));

  0007a	68 90 01 00 00	 push	 400			; 00000190H
  0007f	6a 00		 push	 0
  00081	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 202  : 
; 203  : 			//
; 204  : 			// unpack data (in exactly the same order as the data was packed)
; 205  : 			//
; 206  : 
; 207  : 			unpack_aircraft_data (en, &raw->ac, mode);

  0008d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00094	51		 push	 ecx
  00095	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00098	52		 push	 edx
  00099	e8 00 00 00 00	 call	 ?unpack_aircraft_data@@YGXPAUENTITY@@PAUAIRCRAFT@@W4PACK_MODES@@@Z ; unpack_aircraft_data

; 208  : 
; 209  : 			////////////////////////////////////////
; 210  : 
; 211  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  0009e	68 ef 00 00 00	 push	 239			; 000000efH
  000a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000ac	85 c0		 test	 eax, eax
  000ae	74 1b		 je	 SHORT $LN7@unpack_loc

; 212  : 			{
; 213  : 
; 214  : 				raw->ac.mob.velocity = 0.0;

  000b0	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  000b3	0f 57 c0	 xorps	 xmm0, xmm0
  000b6	f3 0f 11 40 40	 movss	 DWORD PTR [eax+64], xmm0

; 215  : 
; 216  : 				raw->afterburner_state = 0.0;

  000bb	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  000be	0f 57 c0	 xorps	 xmm0, xmm0
  000c1	f3 0f 11 80 80
	01 00 00	 movss	 DWORD PTR [eax+384], xmm0

; 217  : 			}
; 218  : 			else

  000c9	eb 25		 jmp	 SHORT $LN8@unpack_loc
$LN7@unpack_loc:

; 219  : 			{
; 220  : 
; 221  : 				raw->ac.mob.velocity = unpack_float_value (en, FLOAT_TYPE_HIGH_VELOCITY);

  000cb	6a 35		 push	 53			; 00000035H
  000cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000d9	d9 59 40	 fstp	 DWORD PTR [ecx+64]

; 222  : 
; 223  : 				raw->afterburner_state = unpack_float_value (en, FLOAT_TYPE_AFTERBURNER_STATE);

  000dc	6a 00		 push	 0
  000de	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000e7	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000ea	d9 99 80 01 00
	00		 fstp	 DWORD PTR [ecx+384]
$LN8@unpack_loc:

; 224  : 			}
; 225  : 
; 226  : 			////////////////////////////////////////
; 227  : 
; 228  : 			set_fixed_wing_id_number (en);

  000f0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 ?set_fixed_wing_id_number@@YGXPAUENTITY@@@Z ; set_fixed_wing_id_number

; 229  : 
; 230  : 			initialise_fixed_wing_propellors (en);

  000f9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?initialise_fixed_wing_propellors@@YGXPAUENTITY@@@Z ; initialise_fixed_wing_propellors

; 231  : 
; 232  : 			//
; 233  : 			// link into system
; 234  : 			//
; 235  : 
; 236  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_VIEW, get_camera_entity (), NULL);

  00102	6a 00		 push	 0
  00104	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00109	50		 push	 eax
  0010a	6a 2a		 push	 42			; 0000002aH
  0010c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 237  : 
; 238  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_SECTOR, get_local_sector_entity (&raw->ac.mob.position), NULL);

  00115	6a 00		 push	 0
  00117	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0011a	83 c0 04	 add	 eax, 4
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  00123	50		 push	 eax
  00124	6a 21		 push	 33			; 00000021H
  00126	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 239  : 
; 240  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  0012f	6a 00		 push	 0
  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00136	50		 push	 eax
  00137	6a 29		 push	 41			; 00000029H
  00139	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0013c	51		 push	 ecx
  0013d	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 241  : 
; 242  : 			add_to_force_info (get_local_force_entity ((entity_sides) raw->ac.mob.side), en);

  00142	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00145	50		 push	 eax
  00146	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00149	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  0014c	d1 ea		 shr	 edx, 1
  0014e	83 e2 03	 and	 edx, 3
  00151	52		 push	 edx
  00152	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?add_to_force_info@@YGXPAUENTITY@@0@Z ; add_to_force_info

; 243  : 
; 244  : 			//
; 245  : 			// attached smoke lists must be unpacked after the entity is linked into the world
; 246  : 			//
; 247  : 
; 248  : 			unpack_fixed_wing_meta_smoke_lists (en, mode);

  0015d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00160	50		 push	 eax
  00161	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00164	51		 push	 ecx
  00165	e8 00 00 00 00	 call	 ?unpack_fixed_wing_meta_smoke_lists@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; unpack_fixed_wing_meta_smoke_lists

; 249  : 
; 250  : 			unpack_mobile_local_sound_effects (en, mode);

  0016a	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0016d	50		 push	 eax
  0016e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00171	51		 push	 ecx
  00172	e8 00 00 00 00	 call	 ?unpack_mobile_local_sound_effects@@YGHPAUENTITY@@W4PACK_MODES@@@Z ; unpack_mobile_local_sound_effects
$LN2@unpack_loc:

; 251  : 
; 252  : 			break;
; 253  : 		}
; 254  : 		////////////////////////////////////////
; 255  : 		case PACK_MODE_BROWSE_SESSION:
; 256  : 		////////////////////////////////////////
; 257  : 		{
; 258  : 			break;
; 259  : 		}
; 260  : 		////////////////////////////////////////
; 261  : 		case PACK_MODE_UPDATE_ENTITY:
; 262  : 		////////////////////////////////////////
; 263  : 		{
; 264  : 			/*
; 265  : 			//
; 266  : 			// always use access functions to set the data
; 267  : 			//
; 268  : 
; 269  : 			vec3d
; 270  : 				position,
; 271  : 				motion_vector;
; 272  : 
; 273  : 			matrix3x3
; 274  : 				attitude;
; 275  : 
; 276  : 			float
; 277  : 				velocity;
; 278  : 
; 279  : 			velocity = 0;
; 280  : 
; 281  : 			//
; 282  : 			// unpack all data (even if the echoed data is to be ignored)
; 283  : 			//
; 284  : 
; 285  : 			unpack_vec3d (en, VEC3D_TYPE_POSITION, &position);
; 286  : 
; 287  : 			unpack_attitude_matrix (en, attitude);
; 288  : 
; 289  : 			unpack_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &motion_vector);
; 290  : 
; 291  : 			if (!check_zero_3d_vector (&motion_vector))
; 292  : 			{
; 293  : 
; 294  : 				vec3d
; 295  : 					normalised_motion_vector;
; 296  : 
; 297  : 				flat
; 298  : 					mag;
; 299  : 
; 300  : 				normalised_motion_vector = motion_vector;
; 301  : 
; 302  : 				mag = normalise_3d_vector (&normalised_motion_vector);
; 303  : 
; 304  : 				velocity = mag *
; 305  : 								(normalised_motion_vector.x * attitude [2][0] +
; 306  : 								normalised_motion_vector.y * attitude [2][1] +
; 307  : 								normalised_motion_vector.z * attitude [2][2]);
; 308  : 			}
; 309  : 
; 310  : 			set_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &position);
; 311  : 
; 312  : 			set_local_entity_attitude_matrix (en, attitude);
; 313  : 
; 314  : 			set_local_entity_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &motion_vector);
; 315  : 
; 316  : 			set_local_entity_float_value (en, FLOAT_TYPE_VELOCITY, velocity);
; 317  : 
; 318  : 			*/
; 319  : 			break;
; 320  : 		}
; 321  : 	}
; 322  : }

  00177	5f		 pop	 edi
  00178	5e		 pop	 esi
  00179	5b		 pop	 ebx
  0017a	8b e5		 mov	 esp, ebp
  0017c	5d		 pop	 ebp
  0017d	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_raw$1 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b8 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c ef 00 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b8 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@pack_local
  00043	e9 e4 00 00 00	 jmp	 $LN2@pack_local
$LN6@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			fixed_wing
; 91   : 				*raw;
; 92   : 
; 93   : 			raw = (fixed_wing *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$1[ebp], ecx

; 94   : 
; 95   : 			pack_entity_type (get_local_entity_type (en));

  00051	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0a		 je	 SHORT $LN12@pack_local
  00057	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b8	 mov	 DWORD PTR tv78[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN13@pack_local
$LN12@pack_local:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00067	83 c2 0f	 add	 edx, 15			; 0000000fH
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@ECCGEAJD@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN13@pack_local:
  00082	8b 4d b8	 mov	 ecx, DWORD PTR tv78[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 96   : 
; 97   : 			pack_entity_safe_ptr (en);

  0008b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 98   : 
; 99   : 			//
; 100  : 			// pack aircraft data
; 101  : 			//
; 102  : 
; 103  : 			pack_aircraft_data (en, &raw->ac, mode);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?pack_aircraft_data@@YGXPAUENTITY@@PAUAIRCRAFT@@W4PACK_MODES@@@Z ; pack_aircraft_data

; 104  : 
; 105  : 			////////////////////////////////////////
; 106  : 
; 107  : 			if (raw->ac.mob.velocity == 0.0)

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000a8	f3 0f 5a 40 40	 cvtss2sd xmm0, DWORD PTR [eax+64]
  000ad	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000b5	9f		 lahf
  000b6	f6 c4 44	 test	 ah, 68			; 00000044H
  000b9	7a 12		 jp	 SHORT $LN7@pack_local

; 108  : 			{
; 109  : 
; 110  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  000bb	6a 01		 push	 1
  000bd	68 ef 00 00 00	 push	 239			; 000000efH
  000c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 111  : 			}
; 112  : 			else

  000cb	eb 45		 jmp	 SHORT $LN8@pack_local
$LN7@pack_local:

; 113  : 			{
; 114  : 
; 115  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  000cd	6a 00		 push	 0
  000cf	68 ef 00 00 00	 push	 239			; 000000efH
  000d4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 116  : 
; 117  : 				pack_float_value (en, FLOAT_TYPE_HIGH_VELOCITY, raw->ac.mob.velocity);

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000e0	51		 push	 ecx
  000e1	f3 0f 10 40 40	 movss	 xmm0, DWORD PTR [eax+64]
  000e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000eb	6a 35		 push	 53			; 00000035H
  000ed	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f0	51		 push	 ecx
  000f1	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 118  : 
; 119  : 				pack_float_value (en, FLOAT_TYPE_AFTERBURNER_STATE, raw->afterburner_state);

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000f9	51		 push	 ecx
  000fa	f3 0f 10 80 80
	01 00 00	 movss	 xmm0, DWORD PTR [eax+384]
  00102	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00107	6a 00		 push	 0
  00109	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value
$LN8@pack_local:

; 120  : 			}
; 121  : 
; 122  : 			////////////////////////////////////////
; 123  : 
; 124  : 			//
; 125  : 			// pack fixwing data
; 126  : 			//
; 127  : 
; 128  : 			//
; 129  : 			// spin through special effects link and pack up local only smoke trails
; 130  : 			//
; 131  : 
; 132  : 			pack_fixed_wing_meta_smoke_lists (en, mode);

  00112	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00115	50		 push	 eax
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00119	51		 push	 ecx
  0011a	e8 00 00 00 00	 call	 ?pack_fixed_wing_meta_smoke_lists@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_fixed_wing_meta_smoke_lists

; 133  : 
; 134  : 			pack_mobile_local_sound_effects (en, mode);

  0011f	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00126	51		 push	 ecx
  00127	e8 00 00 00 00	 call	 ?pack_mobile_local_sound_effects@@YGHPAUENTITY@@W4PACK_MODES@@@Z ; pack_mobile_local_sound_effects
$LN2@pack_local:

; 135  : 
; 136  : 			break;
; 137  : 		}
; 138  : 		////////////////////////////////////////
; 139  : 		case PACK_MODE_BROWSE_SESSION:
; 140  : 		////////////////////////////////////////
; 141  : 		{
; 142  : 			break;
; 143  : 		}
; 144  : 		////////////////////////////////////////
; 145  : 		case PACK_MODE_UPDATE_ENTITY:
; 146  : 		////////////////////////////////////////
; 147  : 		{
; 148  : 			/*
; 149  : 			fixed_wing
; 150  : 				*raw;
; 151  : 
; 152  : 			raw = get_local_entity_data (en);
; 153  : 
; 154  : 			pack_vec3d (en, VEC3D_TYPE_POSITION, &raw->ac.mob.position);
; 155  : 
; 156  : 			pack_attitude_matrix (en, raw->ac.mob.attitude);
; 157  : 
; 158  : 			pack_vec3d (en, VEC3D_TYPE_MOTION_VECTOR, &raw->ac.mob.motion_vector);
; 159  : 
; 160  : 			*/
; 161  : 			break;
; 162  : 		}
; 163  : 	}
; 164  : }

  0012c	5f		 pop	 edi
  0012d	5e		 pop	 esi
  0012e	5b		 pop	 ebx
  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\fixwing\fw_pack.c
;	COMDAT ?overload_fixed_wing_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_fixed_wing_pack_functions@@YGXXZ PROC		; overload_fixed_wing_pack_functions, COMDAT

; 329  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 330  : 	fn_pack_local_entity_data[ENTITY_TYPE_FIXED_WING]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0a	 imul	 ecx, eax, 10
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 331  : 
; 332  : 	fn_unpack_local_entity_data[ENTITY_TYPE_FIXED_WING]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 0a	 imul	 ecx, eax, 10
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 333  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_fixed_wing_pack_functions@@YGXXZ ENDP		; overload_fixed_wing_pack_functions
_TEXT	ENDS
END
