; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?update_aircraft_target_scan@@YGXPAUENTITY@@@Z	; update_aircraft_target_scan
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z@4JA ; `check_aircraft_target_scan_valid'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA ; `aircraft_target_scan'::`1'::__LINE__Var
PUBLIC	??_C@_0CL@OLLKNOIO@AC_TGT?3?5?$CFs?5doing?5?$CFs?5Scanned?5?$CFd?5@ ; `string'
PUBLIC	?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA ; `get_aircraft_air_to_surface_scan_group_targets'::`1'::__LINE__Var
PUBLIC	??_C@_06OEKOLKIL@source@			; `string'
PUBLIC	??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@ ; `string'
PUBLIC	?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA ; `get_aircraft_air_to_air_scan_group_targets'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff199999999999a
PUBLIC	__real@4000000000000000
PUBLIC	__real@7f7fffff
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?get_3d_vector_dot_product@@YGMPBUVEC3D@@0@Z:PROC ; get_3d_vector_dot_product
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_current_task
EXTRN	?ai_log@@YAXPBDZZ:PROC				; ai_log
EXTRN	?engage_targets_in_group@@YGHPAUENTITY@@0H@Z:PROC ; engage_targets_in_group
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	__fltused:DWORD
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff199999999999a
CONST	SEGMENT
__real@3ff199999999999a DQ 03ff199999999999ar	; 1.1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA DD 021cH ; `get_aircraft_air_to_air_scan_group_targets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
CONST	SEGMENT
??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@ DB 'sector_inside'
	DB	'_map_area (x_sec_org, z_sec_org)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source@
CONST	SEGMENT
??_C@_06OEKOLKIL@source@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA DD 014cH ; `get_aircraft_air_to_surface_scan_group_targets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CL@OLLKNOIO@AC_TGT?3?5?$CFs?5doing?5?$CFs?5Scanned?5?$CFd?5@
CONST	SEGMENT
??_C@_0CL@OLLKNOIO@AC_TGT?3?5?$CFs?5doing?5?$CFs?5Scanned?5?$CFd?5@ DB 'A'
	DB	'C_TGT: %s doing %s Scanned %d air targets', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA DD 0a9H ; `aircraft_target_scan'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tg'
	DB	't.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z@4JA DD 05dH ; `check_aircraft_target_scan_valid'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
;	COMDAT ?check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv216 = -84						; size = 8
tv187 = -76						; size = 4
tv168 = -76						; size = 4
tv149 = -76						; size = 4
tv95 = -76						; size = 4
tv76 = -76						; size = 4
tv180 = -72						; size = 4
tv161 = -72						; size = 4
tv141 = -72						; size = 4
tv88 = -72						; size = 4
tv69 = -72						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z PROC ; check_aircraft_target_scan_valid, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 94   : 
; 95   : 	entity
; 96   : 		*group;
; 97   : 
; 98   : 	//
; 99   : 	// Is entity allowed to scan for targets 
; 100  : 	//
; 101  : 
; 102  : 	if (!get_local_entity_int_value (en, INT_TYPE_OFFENSIVE_CAPABILITY))

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN8@check_airc
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b8	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1a		 jmp	 SHORT $LN9@check_airc
$LN8@check_airc:
  00019	6a 66		 push	 102			; 00000066H
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00026	52		 push	 edx
  00027	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN9@check_airc:
  00033	b8 01 00 00 00	 mov	 eax, 1
  00038	85 c0		 test	 eax, eax
  0003a	74 09		 je	 SHORT $LN10@check_airc
  0003c	c7 45 b4 96 00
	00 00		 mov	 DWORD PTR tv76[ebp], 150 ; 00000096H
  00043	eb 1a		 jmp	 SHORT $LN11@check_airc
$LN10@check_airc:
  00045	6a 66		 push	 102			; 00000066H
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00058	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN11@check_airc:
  0005f	68 96 00 00 00	 push	 150			; 00000096H
  00064	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00067	52		 push	 edx
  00068	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  0006f	8b 4d b4	 mov	 ecx, DWORD PTR tv76[ebp]
  00072	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00079	ff d2		 call	 edx
  0007b	85 c0		 test	 eax, eax
  0007d	75 07		 jne	 SHORT $LN2@check_airc

; 103  : 	{
; 104  : 		return FALSE;

  0007f	33 c0		 xor	 eax, eax
  00081	e9 18 02 00 00	 jmp	 $LN1@check_airc
$LN2@check_airc:

; 105  : 	}
; 106  : 
; 107  : 	if (get_local_entity_float_value (en, FLOAT_TYPE_TARGET_SCAN_DELAY) == 0.0)

  00086	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0008a	74 0a		 je	 SHORT $LN12@check_airc
  0008c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	89 4d b8	 mov	 DWORD PTR tv88[ebp], ecx
  00094	eb 1a		 jmp	 SHORT $LN13@check_airc
$LN12@check_airc:
  00096	6a 6b		 push	 107			; 0000006bH
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a3	52		 push	 edx
  000a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN13@check_airc:
  000b0	b8 01 00 00 00	 mov	 eax, 1
  000b5	85 c0		 test	 eax, eax
  000b7	74 09		 je	 SHORT $LN14@check_airc
  000b9	c7 45 b4 86 00
	00 00		 mov	 DWORD PTR tv95[ebp], 134 ; 00000086H
  000c0	eb 1a		 jmp	 SHORT $LN15@check_airc
$LN14@check_airc:
  000c2	6a 6b		 push	 107			; 0000006bH
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000cf	51		 push	 ecx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN15@check_airc:
  000dc	68 86 00 00 00	 push	 134			; 00000086H
  000e1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000e4	52		 push	 edx
  000e5	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv88[ebp], 700
  000ec	8b 4d b4	 mov	 ecx, DWORD PTR tv95[ebp]
  000ef	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  000f6	ff d2		 call	 edx
  000f8	dd 5d ac	 fstp	 QWORD PTR tv216[ebp]
  000fb	f2 0f 10 45 ac	 movsd	 xmm0, QWORD PTR tv216[ebp]
  00100	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00108	9f		 lahf
  00109	f6 c4 44	 test	 ah, 68			; 00000044H
  0010c	7a 07		 jp	 SHORT $LN3@check_airc

; 108  : 	{
; 109  : 		return FALSE;

  0010e	33 c0		 xor	 eax, eax
  00110	e9 89 01 00 00	 jmp	 $LN1@check_airc
$LN3@check_airc:

; 110  : 	}
; 111  : 
; 112  : 	//
; 113  : 	// Can group engage (by default or overridden by force)
; 114  : 	//
; 115  : 
; 116  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00115	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00119	74 0a		 je	 SHORT $LN16@check_airc
  0011b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 4d b8	 mov	 DWORD PTR tv141[ebp], ecx
  00123	eb 21		 jmp	 SHORT $LN17@check_airc
$LN16@check_airc:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
  0012b	83 c2 17	 add	 edx, 23			; 00000017H
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN17@check_airc:
  00146	b9 01 00 00 00	 mov	 ecx, 1
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 09		 je	 SHORT $LN18@check_airc
  0014f	c7 45 b4 19 00
	00 00		 mov	 DWORD PTR tv149[ebp], 25 ; 00000019H
  00156	eb 21		 jmp	 SHORT $LN19@check_airc
$LN18@check_airc:
  00158	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z@4JA
  0015e	83 c2 17	 add	 edx, 23			; 00000017H
  00161	52		 push	 edx
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00172	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN19@check_airc:
  00179	6a 19		 push	 25			; 00000019H
  0017b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0017e	51		 push	 ecx
  0017f	69 55 b8 b4 00
	00 00		 imul	 edx, DWORD PTR tv141[ebp], 180
  00186	8b 45 b4	 mov	 eax, DWORD PTR tv149[ebp]
  00189	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00190	ff d1		 call	 ecx
  00192	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 117  : 
; 118  : 	if (!group)

  00195	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00199	75 07		 jne	 SHORT $LN4@check_airc

; 119  : 	{
; 120  : 		return FALSE;

  0019b	33 c0		 xor	 eax, eax
  0019d	e9 fc 00 00 00	 jmp	 $LN1@check_airc
$LN4@check_airc:

; 121  : 	}
; 122  : 
; 123  : 	if (!get_local_entity_int_value (group, INT_TYPE_ENGAGE_ENEMY))

  001a2	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  001a6	74 0a		 je	 SHORT $LN20@check_airc
  001a8	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  001ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ad	89 4d b8	 mov	 DWORD PTR tv161[ebp], ecx
  001b0	eb 1a		 jmp	 SHORT $LN21@check_airc
$LN20@check_airc:
  001b2	6a 7b		 push	 123			; 0000007bH
  001b4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001bf	52		 push	 edx
  001c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c5	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN21@check_airc:
  001cc	b8 01 00 00 00	 mov	 eax, 1
  001d1	85 c0		 test	 eax, eax
  001d3	74 09		 je	 SHORT $LN22@check_airc
  001d5	c7 45 b4 33 00
	00 00		 mov	 DWORD PTR tv168[ebp], 51 ; 00000033H
  001dc	eb 1a		 jmp	 SHORT $LN23@check_airc
$LN22@check_airc:
  001de	6a 7b		 push	 123			; 0000007bH
  001e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001eb	51		 push	 ecx
  001ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f1	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN23@check_airc:
  001f8	6a 33		 push	 51			; 00000033H
  001fa	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  001fd	52		 push	 edx
  001fe	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv161[ebp], 1116
  00205	8b 4d b4	 mov	 ecx, DWORD PTR tv168[ebp]
  00208	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0020f	ff d2		 call	 edx
  00211	85 c0		 test	 eax, eax
  00213	75 07		 jne	 SHORT $LN5@check_airc

; 124  : 	{
; 125  : 		#if DEBUG_MODULE
; 126  : 
; 127  : 		debug_log ("AC_TGT: group %s not allowed to engage enemy", get_local_entity_string_value (group, STRING_TYPE_FULL_NAME));
; 128  : 
; 129  : 		#endif
; 130  : 
; 131  : 		return FALSE;

  00215	33 c0		 xor	 eax, eax
  00217	e9 82 00 00 00	 jmp	 $LN1@check_airc
$LN5@check_airc:

; 132  : 	}
; 133  : 
; 134  : 	//
; 135  : 	// Is entity landed or landing/takeing off ?
; 136  : 	//
; 137  : 
; 138  : 	if (!get_local_entity_int_value (en, INT_TYPE_AIRBORNE_AIRCRAFT))

  0021c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00220	74 0a		 je	 SHORT $LN24@check_airc
  00222	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00225	8b 08		 mov	 ecx, DWORD PTR [eax]
  00227	89 4d b8	 mov	 DWORD PTR tv180[ebp], ecx
  0022a	eb 1d		 jmp	 SHORT $LN25@check_airc
$LN24@check_airc:
  0022c	68 8a 00 00 00	 push	 138			; 0000008aH
  00231	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00236	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023c	52		 push	 edx
  0023d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00242	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv180[ebp], 0
$LN25@check_airc:
  00249	b8 01 00 00 00	 mov	 eax, 1
  0024e	85 c0		 test	 eax, eax
  00250	74 09		 je	 SHORT $LN26@check_airc
  00252	c7 45 b4 04 00
	00 00		 mov	 DWORD PTR tv187[ebp], 4
  00259	eb 1d		 jmp	 SHORT $LN27@check_airc
$LN26@check_airc:
  0025b	68 8a 00 00 00	 push	 138			; 0000008aH
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00265	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0026b	51		 push	 ecx
  0026c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00271	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN27@check_airc:
  00278	6a 04		 push	 4
  0027a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0027d	52		 push	 edx
  0027e	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv180[ebp], 1116
  00285	8b 4d b4	 mov	 ecx, DWORD PTR tv187[ebp]
  00288	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0028f	ff d2		 call	 edx
  00291	85 c0		 test	 eax, eax
  00293	75 04		 jne	 SHORT $LN6@check_airc

; 139  : 	{
; 140  : 		#if DEBUG_MODULE
; 141  : 
; 142  : 		debug_log ("AC_TGT: entity %s not allowed to engage enemy, its not airborne", get_local_entity_string (en, STRING_TYPE_FULL_NAME));
; 143  : 
; 144  : 		#endif
; 145  : 
; 146  : 		return FALSE;

  00295	33 c0		 xor	 eax, eax
  00297	eb 05		 jmp	 SHORT $LN1@check_airc
$LN6@check_airc:

; 147  : 	}
; 148  : 
; 149  : 	return TRUE;

  00299	b8 01 00 00 00	 mov	 eax, 1
$LN1@check_airc:

; 150  : }

  0029e	5f		 pop	 edi
  0029f	5e		 pop	 esi
  002a0	5b		 pop	 ebx
  002a1	8b e5		 mov	 esp, ebp
  002a3	5d		 pop	 ebp
  002a4	c2 04 00	 ret	 4
?check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z ENDP ; check_aircraft_target_scan_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
;	COMDAT ?get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z
_TEXT	SEGMENT
tv812 = -212						; size = 4
tv531 = -208						; size = 4
tv476 = -208						; size = 4
tv454 = -208						; size = 4
tv432 = -208						; size = 4
tv410 = -208						; size = 4
tv391 = -208						; size = 4
tv370 = -208						; size = 4
tv348 = -208						; size = 4
tv328 = -208						; size = 4
tv307 = -208						; size = 4
tv288 = -208						; size = 4
tv269 = -208						; size = 4
tv250 = -208						; size = 4
tv155 = -208						; size = 4
tv135 = -208						; size = 4
tv83 = -208						; size = 4
tv523 = -204						; size = 4
tv500 = -204						; size = 4
tv469 = -204						; size = 4
tv447 = -204						; size = 4
tv425 = -204						; size = 4
tv403 = -204						; size = 4
tv384 = -204						; size = 4
tv362 = -204						; size = 4
tv341 = -204						; size = 4
tv320 = -204						; size = 4
tv300 = -204						; size = 4
tv281 = -204						; size = 4
tv262 = -204						; size = 4
tv242 = -204						; size = 4
tv235 = -204						; size = 4
tv147 = -204						; size = 4
tv95 = -204						; size = 4
tv75 = -204						; size = 4
_adj_range$1 = -136					; size = 4
_source_air_scan_range$ = -132				; size = 4
_best_target_result$ = -128				; size = 4
_target_result$ = -124					; size = 4
_target_range$ = -120					; size = 4
_cos_angle$ = -116					; size = 4
_target_vector$ = -112					; size = 12
_target_position$ = -100				; size = 4
_source_position$ = -96					; size = 4
_attitude$ = -92					; size = 36
_sec$ = -56						; size = 4
_group$ = -52						; size = 4
_target$ = -48						; size = 4
_best_target$ = -44					; size = 4
_best_group$ = -40					; size = 4
_z_sec$ = -36						; size = 4
_x_sec$ = -32						; size = 4
_z_sec_max$ = -28					; size = 4
_x_sec_max$ = -24					; size = 4
_z_sec_min$ = -20					; size = 4
_x_sec_min$ = -16					; size = 4
_z_sec_org$ = -12					; size = 4
_x_sec_org$ = -8					; size = 4
_source_side$ = -4					; size = 4
_source$ = 8						; size = 4
_target_count$ = 12					; size = 4
?get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z PROC ; get_aircraft_air_to_air_scan_group_targets, COMDAT

; 540  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 00 00
	00		 sub	 esp, 212		; 000000d4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 541  : 	int
; 542  : 		source_side,
; 543  : 		x_sec_org,
; 544  : 		z_sec_org,
; 545  : 		x_sec_min,
; 546  : 		z_sec_min,
; 547  : 		x_sec_max,
; 548  : 		z_sec_max,
; 549  : 		x_sec,
; 550  : 		z_sec;
; 551  : 
; 552  : 	entity
; 553  : 		*best_group,
; 554  : 		*best_target,
; 555  : 		*target,
; 556  : 		*group,
; 557  : 		*sec;
; 558  : 
; 559  : 	matrix3x3
; 560  : 		attitude;
; 561  : 
; 562  : 	vec3d
; 563  : 		*source_position,
; 564  : 		*target_position,
; 565  : 		target_vector;
; 566  : 
; 567  : 	float
; 568  : 		cos_angle,
; 569  : 		target_range,
; 570  : 		target_result,
; 571  : 		best_target_result,
; 572  : 		source_air_scan_range;
; 573  : 
; 574  : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN11@get_aircra
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00017	83 c0 22	 add	 eax, 34			; 00000022H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@get_aircra:

; 575  : 
; 576  : 	(*target_count) = 0;

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 577  : 
; 578  : 	best_group = NULL;

  00033	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _best_group$[ebp], 0

; 579  : 
; 580  : 	group = NULL;

  0003a	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _group$[ebp], 0

; 581  : 
; 582  : 	best_target = NULL;

  00041	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 583  : 
; 584  : 	best_target_result = FLT_MAX;

  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  00050	f3 0f 11 45 80	 movss	 DWORD PTR _best_target_result$[ebp], xmm0

; 585  : 
; 586  : 	source_side = get_local_entity_int_value (source, INT_TYPE_SIDE);

  00055	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00059	74 0d		 je	 SHORT $LN30@get_aircra
  0005b	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00066	eb 24		 jmp	 SHORT $LN31@get_aircra
$LN30@get_aircra:
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0006e	83 c2 2e	 add	 edx, 46			; 0000002eH
  00071	52		 push	 edx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00082	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN31@get_aircra:
  0008c	b9 01 00 00 00	 mov	 ecx, 1
  00091	85 c9		 test	 ecx, ecx
  00093	74 0c		 je	 SHORT $LN32@get_aircra
  00095	c7 85 30 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  0009f	eb 24		 jmp	 SHORT $LN33@get_aircra
$LN32@get_aircra:
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  000a7	83 c2 2e	 add	 edx, 46			; 0000002eH
  000aa	52		 push	 edx
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000bb	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN33@get_aircra:
  000c5	68 bb 00 00 00	 push	 187			; 000000bbH
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000cd	51		 push	 ecx
  000ce	69 95 34 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000d8	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000de	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e5	ff d1		 call	 ecx
  000e7	89 45 fc	 mov	 DWORD PTR _source_side$[ebp], eax

; 587  : 
; 588  : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  000ea	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  000ee	74 0d		 je	 SHORT $LN34@get_aircra
  000f0	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  000f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f5	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000fb	eb 24		 jmp	 SHORT $LN35@get_aircra
$LN34@get_aircra:
  000fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00103	83 c2 30	 add	 edx, 48			; 00000030H
  00106	52		 push	 edx
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00117	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN35@get_aircra:
  00121	b9 01 00 00 00	 mov	 ecx, 1
  00126	85 c9		 test	 ecx, ecx
  00128	74 0c		 je	 SHORT $LN36@get_aircra
  0012a	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv135[ebp], 8
  00134	eb 24		 jmp	 SHORT $LN37@get_aircra
$LN36@get_aircra:
  00136	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0013c	83 c2 30	 add	 edx, 48			; 00000030H
  0013f	52		 push	 edx
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00150	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN37@get_aircra:
  0015a	6a 08		 push	 8
  0015c	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0015f	51		 push	 ecx
  00160	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv95[ebp], 96
  00167	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  0016d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00174	ff d1		 call	 ecx
  00176	89 45 a0	 mov	 DWORD PTR _source_position$[ebp], eax

; 589  : 
; 590  : 	source_air_scan_range = get_local_entity_float_value (source, FLOAT_TYPE_AIR_SCAN_RANGE);

  00179	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0017d	74 0d		 je	 SHORT $LN38@get_aircra
  0017f	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00182	8b 08		 mov	 ecx, DWORD PTR [eax]
  00184	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  0018a	eb 24		 jmp	 SHORT $LN39@get_aircra
$LN38@get_aircra:
  0018c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00192	83 c2 32	 add	 edx, 50			; 00000032H
  00195	52		 push	 edx
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a6	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN39@get_aircra:
  001b0	b9 01 00 00 00	 mov	 ecx, 1
  001b5	85 c9		 test	 ecx, ecx
  001b7	74 0c		 je	 SHORT $LN40@get_aircra
  001b9	c7 85 30 ff ff
	ff 05 00 00 00	 mov	 DWORD PTR tv155[ebp], 5
  001c3	eb 24		 jmp	 SHORT $LN41@get_aircra
$LN40@get_aircra:
  001c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  001cb	83 c2 32	 add	 edx, 50			; 00000032H
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001df	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN41@get_aircra:
  001e9	6a 05		 push	 5
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  001ee	51		 push	 ecx
  001ef	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv147[ebp], 700
  001f9	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv155[ebp]
  001ff	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00206	ff d1		 call	 ecx
  00208	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR _source_air_scan_range$[ebp]

; 591  : 
; 592  : 	if (source_air_scan_range == 0.0)

  0020e	f3 0f 5a 85 7c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00216	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0021e	9f		 lahf
  0021f	f6 c4 44	 test	 ah, 68			; 00000044H
  00222	7a 07		 jp	 SHORT $LN12@get_aircra

; 593  : 	{
; 594  : 		return NULL;

  00224	33 c0		 xor	 eax, eax
  00226	e9 70 0b 00 00	 jmp	 $LN1@get_aircra
$LN12@get_aircra:

; 595  : 	}
; 596  : 
; 597  : 	source_air_scan_range *= source_air_scan_range;

  0022b	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00233	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  0023b	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _source_air_scan_range$[ebp], xmm0

; 598  : 
; 599  : 	////////////////////////////////////////
; 600  : 	//
; 601  : 	// get sector scan area
; 602  : 	//
; 603  : 	////////////////////////////////////////
; 604  : 
; 605  : 	get_x_sector (x_sec_org, source_position->x);

  00243	8d 45 f8	 lea	 eax, DWORD PTR _x_sec_org$[ebp]
  00246	50		 push	 eax
  00247	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0024a	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0024e	51		 push	 ecx
  0024f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00254	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00259	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  0025c	99		 cdq
  0025d	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00263	89 45 f8	 mov	 DWORD PTR _x_sec_org$[ebp], eax

; 606  : 	get_z_sector (z_sec_org, source_position->z);

  00266	8d 45 f4	 lea	 eax, DWORD PTR _z_sec_org$[ebp]
  00269	50		 push	 eax
  0026a	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0026d	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00272	51		 push	 ecx
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0027d	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00280	99		 cdq
  00281	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00287	89 45 f4	 mov	 DWORD PTR _z_sec_org$[ebp], eax

; 607  : 
; 608  : 	ASSERT (sector_inside_map_area (x_sec_org, z_sec_org));

  0028a	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  0028d	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00293	7c 21		 jl	 SHORT $LN14@get_aircra
  00295	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  00298	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0029e	7f 16		 jg	 SHORT $LN14@get_aircra
  002a0	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  002a3	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  002a9	7c 0b		 jl	 SHORT $LN14@get_aircra
  002ab	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  002ae	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  002b4	7e 18		 jle	 SHORT $LN13@get_aircra
$LN14@get_aircra:
  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  002bb	83 c0 44	 add	 eax, 68			; 00000044H
  002be	50		 push	 eax
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
  002c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_aircra:

; 609  : 
; 610  : 	get_x_sector (x_sec_min, source_position->x - source_air_scan_range);

  002ce	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  002d1	50		 push	 eax
  002d2	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  002d5	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  002d9	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  002e1	51		 push	 ecx
  002e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e7	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  002ec	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  002ef	99		 cdq
  002f0	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  002f6	89 45 f0	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 611  : 	get_z_sector (z_sec_min, source_position->z - source_air_scan_range);

  002f9	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  002fc	50		 push	 eax
  002fd	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00300	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00305	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  0030d	51		 push	 ecx
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00318	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  0031b	99		 cdq
  0031c	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00322	89 45 ec	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 612  : 
; 613  : 	get_x_sector (x_sec_max, source_position->x + source_air_scan_range);

  00325	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  00328	50		 push	 eax
  00329	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0032c	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00330	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00338	51		 push	 ecx
  00339	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033e	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00343	8b 45 e8	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  00346	99		 cdq
  00347	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0034d	89 45 e8	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 614  : 	get_z_sector (z_sec_max, source_position->z + source_air_scan_range);

  00350	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  00353	50		 push	 eax
  00354	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00357	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0035c	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00364	51		 push	 ecx
  00365	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036a	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0036f	8b 45 e4	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  00372	99		 cdq
  00373	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00379	89 45 e4	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 615  : 
; 616  : 	x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  0037c	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  00381	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0038a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038c	89 4d f0	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 617  : 	z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  0038f	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  00394	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0039d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039f	89 4d ec	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 618  : 
; 619  : 	x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  003a2	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  003a7	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  003b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b2	89 4d e8	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 620  : 	z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  003b5	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  003ba	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  003c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c5	89 4d e4	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 621  : 
; 622  : 	////////////////////////////////////////
; 623  : 	//
; 624  : 	// sector scan
; 625  : 	//
; 626  : 	////////////////////////////////////////
; 627  : 
; 628  : 	for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  003c8	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  003cb	89 45 dc	 mov	 DWORD PTR _z_sec$[ebp], eax
  003ce	eb 09		 jmp	 SHORT $LN4@get_aircra
$LN2@get_aircra:
  003d0	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  003d3	83 c0 01	 add	 eax, 1
  003d6	89 45 dc	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@get_aircra:
  003d9	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  003dc	3b 45 e4	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  003df	0f 8f b3 09 00
	00		 jg	 $LN3@get_aircra

; 629  : 	{
; 630  : 		for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  003e5	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  003e8	89 45 e0	 mov	 DWORD PTR _x_sec$[ebp], eax
  003eb	eb 09		 jmp	 SHORT $LN7@get_aircra
$LN5@get_aircra:
  003ed	8b 45 e0	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003f0	83 c0 01	 add	 eax, 1
  003f3	89 45 e0	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@get_aircra:
  003f6	8b 45 e0	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003f9	3b 45 e8	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  003fc	0f 8f 91 09 00
	00		 jg	 $LN6@get_aircra

; 631  : 		{
; 632  : 			sec = get_local_raw_sector_entity (x_sec, z_sec);

  00402	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00405	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0040c	03 45 e0	 add	 eax, DWORD PTR _x_sec$[ebp]
  0040f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00415	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00419	74 1d		 je	 SHORT $LN42@get_aircra
  0041b	8b 55 dc	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0041e	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00425	03 55 e0	 add	 edx, DWORD PTR _x_sec$[ebp]
  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0042d	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00430	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  00436	eb 24		 jmp	 SHORT $LN43@get_aircra
$LN42@get_aircra:
  00438	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0043e	83 c2 5c	 add	 edx, 92			; 0000005cH
  00441	52		 push	 edx
  00442	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00447	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0044c	50		 push	 eax
  0044d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00452	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv235[ebp], 0
$LN43@get_aircra:
  0045c	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv235[ebp]
  00462	89 4d c8	 mov	 DWORD PTR _sec$[ebp], ecx

; 633  : 
; 634  : 			target = get_local_entity_first_child (sec, LIST_TYPE_SECTOR);

  00465	83 7d c8 00	 cmp	 DWORD PTR _sec$[ebp], 0
  00469	74 0d		 je	 SHORT $LN44@get_aircra
  0046b	8b 45 c8	 mov	 eax, DWORD PTR _sec$[ebp]
  0046e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00470	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv242[ebp], ecx
  00476	eb 24		 jmp	 SHORT $LN45@get_aircra
$LN44@get_aircra:
  00478	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0047e	83 c2 5e	 add	 edx, 94			; 0000005eH
  00481	52		 push	 edx
  00482	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0048c	50		 push	 eax
  0048d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00492	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN45@get_aircra:
  0049c	b9 01 00 00 00	 mov	 ecx, 1
  004a1	85 c9		 test	 ecx, ecx
  004a3	74 0c		 je	 SHORT $LN46@get_aircra
  004a5	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv250[ebp], 33 ; 00000021H
  004af	eb 24		 jmp	 SHORT $LN47@get_aircra
$LN46@get_aircra:
  004b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  004b7	83 c2 5e	 add	 edx, 94			; 0000005eH
  004ba	52		 push	 edx
  004bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004c5	50		 push	 eax
  004c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004cb	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN47@get_aircra:
  004d5	6a 21		 push	 33			; 00000021H
  004d7	8b 4d c8	 mov	 ecx, DWORD PTR _sec$[ebp]
  004da	51		 push	 ecx
  004db	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv242[ebp], 180
  004e5	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv250[ebp]
  004eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  004f2	ff d1		 call	 ecx
  004f4	89 45 d0	 mov	 DWORD PTR _target$[ebp], eax

; 635  : 
; 636  : 			if (target)

  004f7	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  004fb	0f 84 8d 08 00
	00		 je	 $LN9@get_aircra
$LN10@get_aircra:

; 637  : 			{
; 638  : 				do
; 639  : 				{
; 640  : 					////////////////////////////////////////
; 641  : 					//
; 642  : 					// simple target select criteria
; 643  : 					//
; 644  : 					////////////////////////////////////////
; 645  : 
; 646  : 					if (get_local_entity_int_value (target, INT_TYPE_SIDE) == source_side)

  00501	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00505	74 0d		 je	 SHORT $LN48@get_aircra
  00507	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0050a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0050c	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  00512	eb 20		 jmp	 SHORT $LN49@get_aircra
$LN48@get_aircra:
  00514	68 86 02 00 00	 push	 646			; 00000286H
  00519	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00524	52		 push	 edx
  00525	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0052a	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN49@get_aircra:
  00534	b8 01 00 00 00	 mov	 eax, 1
  00539	85 c0		 test	 eax, eax
  0053b	74 0c		 je	 SHORT $LN50@get_aircra
  0053d	c7 85 30 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv269[ebp], 187 ; 000000bbH
  00547	eb 20		 jmp	 SHORT $LN51@get_aircra
$LN50@get_aircra:
  00549	68 86 02 00 00	 push	 646			; 00000286H
  0054e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00553	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00559	51		 push	 ecx
  0055a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0055f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN51@get_aircra:
  00569	68 bb 00 00 00	 push	 187			; 000000bbH
  0056e	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00571	52		 push	 edx
  00572	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv262[ebp], 1116
  0057c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv269[ebp]
  00582	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00589	ff d2		 call	 edx
  0058b	3b 45 fc	 cmp	 eax, DWORD PTR _source_side$[ebp]
  0058e	75 05		 jne	 SHORT $LN16@get_aircra

; 647  : 					{
; 648  : 						continue;

  00590	e9 57 07 00 00	 jmp	 $LN28@get_aircra
$LN16@get_aircra:

; 649  : 					}
; 650  : 
; 651  : 					if (!get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  00595	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00599	74 0d		 je	 SHORT $LN52@get_aircra
  0059b	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0059e	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a0	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv281[ebp], ecx
  005a6	eb 20		 jmp	 SHORT $LN53@get_aircra
$LN52@get_aircra:
  005a8	68 8b 02 00 00	 push	 651			; 0000028bH
  005ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005b8	52		 push	 edx
  005b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005be	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN53@get_aircra:
  005c8	b8 01 00 00 00	 mov	 eax, 1
  005cd	85 c0		 test	 eax, eax
  005cf	74 0c		 je	 SHORT $LN54@get_aircra
  005d1	c7 85 30 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv288[ebp], 4
  005db	eb 20		 jmp	 SHORT $LN55@get_aircra
$LN54@get_aircra:
  005dd	68 8b 02 00 00	 push	 651			; 0000028bH
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005ed	51		 push	 ecx
  005ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f3	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN55@get_aircra:
  005fd	6a 04		 push	 4
  005ff	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00602	52		 push	 edx
  00603	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv281[ebp], 1116
  0060d	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv288[ebp]
  00613	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0061a	ff d2		 call	 edx
  0061c	85 c0		 test	 eax, eax
  0061e	75 05		 jne	 SHORT $LN17@get_aircra

; 652  : 					{
; 653  : 						continue;

  00620	e9 c7 06 00 00	 jmp	 $LN28@get_aircra
$LN17@get_aircra:

; 654  : 					}
; 655  : 
; 656  : 					if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_INVALID)

  00625	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00629	74 0d		 je	 SHORT $LN56@get_aircra
  0062b	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0062e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00630	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv300[ebp], ecx
  00636	eb 20		 jmp	 SHORT $LN57@get_aircra
$LN56@get_aircra:
  00638	68 90 02 00 00	 push	 656			; 00000290H
  0063d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00642	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00648	52		 push	 edx
  00649	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0064e	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv300[ebp], 0
$LN57@get_aircra:
  00658	b8 01 00 00 00	 mov	 eax, 1
  0065d	85 c0		 test	 eax, eax
  0065f	74 0c		 je	 SHORT $LN58@get_aircra
  00661	c7 85 30 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv307[ebp], 214 ; 000000d6H
  0066b	eb 20		 jmp	 SHORT $LN59@get_aircra
$LN58@get_aircra:
  0066d	68 90 02 00 00	 push	 656			; 00000290H
  00672	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00677	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0067d	51		 push	 ecx
  0067e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00683	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv307[ebp], 0
$LN59@get_aircra:
  0068d	68 d6 00 00 00	 push	 214			; 000000d6H
  00692	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00695	52		 push	 edx
  00696	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv300[ebp], 1116
  006a0	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv307[ebp]
  006a6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006ad	ff d2		 call	 edx
  006af	85 c0		 test	 eax, eax
  006b1	75 05		 jne	 SHORT $LN18@get_aircra

; 657  : 					{
; 658  : 						continue;

  006b3	e9 34 06 00 00	 jmp	 $LN28@get_aircra
$LN18@get_aircra:

; 659  : 					}
; 660  : 
; 661  : 					group = get_local_entity_parent (target, LIST_TYPE_MEMBER);

  006b8	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  006bc	74 0d		 je	 SHORT $LN60@get_aircra
  006be	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  006c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  006c3	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv320[ebp], ecx
  006c9	eb 24		 jmp	 SHORT $LN61@get_aircra
$LN60@get_aircra:
  006cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  006d1	83 c2 79	 add	 edx, 121		; 00000079H
  006d4	52		 push	 edx
  006d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  006da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006df	50		 push	 eax
  006e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e5	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv320[ebp], 0
$LN61@get_aircra:
  006ef	b9 01 00 00 00	 mov	 ecx, 1
  006f4	85 c9		 test	 ecx, ecx
  006f6	74 0c		 je	 SHORT $LN62@get_aircra
  006f8	c7 85 30 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv328[ebp], 25 ; 00000019H
  00702	eb 24		 jmp	 SHORT $LN63@get_aircra
$LN62@get_aircra:
  00704	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0070a	83 c2 79	 add	 edx, 121		; 00000079H
  0070d	52		 push	 edx
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00713	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00718	50		 push	 eax
  00719	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0071e	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv328[ebp], 0
$LN63@get_aircra:
  00728	6a 19		 push	 25			; 00000019H
  0072a	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  0072d	51		 push	 ecx
  0072e	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv320[ebp], 180
  00738	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv328[ebp]
  0073e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00745	ff d1		 call	 ecx
  00747	89 45 cc	 mov	 DWORD PTR _group$[ebp], eax

; 662  : 
; 663  : 					if (!group)

  0074a	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  0074e	75 05		 jne	 SHORT $LN19@get_aircra

; 664  : 					{
; 665  : 						continue;

  00750	e9 97 05 00 00	 jmp	 $LN28@get_aircra
$LN19@get_aircra:

; 666  : 					}
; 667  : 
; 668  : 					if (group == best_group)

  00755	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  00758	3b 45 d8	 cmp	 eax, DWORD PTR _best_group$[ebp]
  0075b	75 05		 jne	 SHORT $LN20@get_aircra

; 669  : 					{
; 670  : 						continue;

  0075d	e9 8a 05 00 00	 jmp	 $LN28@get_aircra
$LN20@get_aircra:

; 671  : 					}
; 672  : 
; 673  : 					if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00762	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00766	74 0d		 je	 SHORT $LN64@get_aircra
  00768	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0076b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076d	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv341[ebp], ecx
  00773	eb 20		 jmp	 SHORT $LN65@get_aircra
$LN64@get_aircra:
  00775	68 a1 02 00 00	 push	 673			; 000002a1H
  0077a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0077f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00785	52		 push	 edx
  00786	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078b	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv341[ebp], 0
$LN65@get_aircra:
  00795	b8 01 00 00 00	 mov	 eax, 1
  0079a	85 c0		 test	 eax, eax
  0079c	74 0c		 je	 SHORT $LN66@get_aircra
  0079e	c7 85 30 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv348[ebp], 7
  007a8	eb 20		 jmp	 SHORT $LN67@get_aircra
$LN66@get_aircra:
  007aa	68 a1 02 00 00	 push	 673			; 000002a1H
  007af	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  007b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007ba	51		 push	 ecx
  007bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007c0	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv348[ebp], 0
$LN67@get_aircra:
  007ca	6a 07		 push	 7
  007cc	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  007cf	52		 push	 edx
  007d0	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv341[ebp], 1116
  007da	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv348[ebp]
  007e0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007e7	ff d2		 call	 edx
  007e9	85 c0		 test	 eax, eax
  007eb	75 05		 jne	 SHORT $LN21@get_aircra

; 674  : 					{
; 675  : 						continue;

  007ed	e9 fa 04 00 00	 jmp	 $LN28@get_aircra
$LN21@get_aircra:

; 676  : 					}
; 677  : 
; 678  : 					if (target == source)

  007f2	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  007f5	3b 45 08	 cmp	 eax, DWORD PTR _source$[ebp]
  007f8	75 05		 jne	 SHORT $LN22@get_aircra

; 679  : 					{
; 680  : 						continue;

  007fa	e9 ed 04 00 00	 jmp	 $LN28@get_aircra
$LN22@get_aircra:

; 681  : 					}
; 682  : 
; 683  : 					target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  007ff	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00803	74 0d		 je	 SHORT $LN68@get_aircra
  00805	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00808	8b 08		 mov	 ecx, DWORD PTR [eax]
  0080a	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv362[ebp], ecx
  00810	eb 27		 jmp	 SHORT $LN69@get_aircra
$LN68@get_aircra:
  00812	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00818	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  0081e	52		 push	 edx
  0081f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00824	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00829	50		 push	 eax
  0082a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082f	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv362[ebp], 0
$LN69@get_aircra:
  00839	b9 01 00 00 00	 mov	 ecx, 1
  0083e	85 c9		 test	 ecx, ecx
  00840	74 0c		 je	 SHORT $LN70@get_aircra
  00842	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv370[ebp], 8
  0084c	eb 27		 jmp	 SHORT $LN71@get_aircra
$LN70@get_aircra:
  0084e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00854	81 c2 8f 00 00
	00		 add	 edx, 143		; 0000008fH
  0085a	52		 push	 edx
  0085b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00860	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00865	50		 push	 eax
  00866	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0086b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv370[ebp], 0
$LN71@get_aircra:
  00875	6a 08		 push	 8
  00877	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  0087a	51		 push	 ecx
  0087b	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv362[ebp], 96
  00882	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv370[ebp]
  00888	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0088f	ff d1		 call	 ecx
  00891	89 45 9c	 mov	 DWORD PTR _target_position$[ebp], eax

; 684  : 
; 685  : 					target_range = get_sqr_2d_range (source_position, target_position);

  00894	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00897	50		 push	 eax
  00898	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0089b	51		 push	 ecx
  0089c	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  008a1	d9 5d 88	 fstp	 DWORD PTR _target_range$[ebp]

; 686  : 
; 687  : 					//
; 688  : 					// adjust range if target is player - each jammer / radar turned off allows player to fly 10% closer
; 689  : 					//
; 690  : 					{
; 691  : 						float
; 692  : 							adj_range;
; 693  : 
; 694  : 						adj_range = target_range;

  008a4	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  008a9	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _adj_range$1[ebp], xmm0

; 695  : 
; 696  : 						if (get_local_entity_int_value (target, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  008b1	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  008b5	74 0d		 je	 SHORT $LN72@get_aircra
  008b7	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  008ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  008bc	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv384[ebp], ecx
  008c2	eb 20		 jmp	 SHORT $LN73@get_aircra
$LN72@get_aircra:
  008c4	68 b8 02 00 00	 push	 696			; 000002b8H
  008c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008d4	52		 push	 edx
  008d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008da	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv384[ebp], 0
$LN73@get_aircra:
  008e4	b8 01 00 00 00	 mov	 eax, 1
  008e9	85 c0		 test	 eax, eax
  008eb	74 0c		 je	 SHORT $LN74@get_aircra
  008ed	c7 85 30 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv391[ebp], 156 ; 0000009cH
  008f7	eb 20		 jmp	 SHORT $LN75@get_aircra
$LN74@get_aircra:
  008f9	68 b8 02 00 00	 push	 696			; 000002b8H
  008fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00903	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00909	51		 push	 ecx
  0090a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0090f	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv391[ebp], 0
$LN75@get_aircra:
  00919	68 9c 00 00 00	 push	 156			; 0000009cH
  0091e	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00921	52		 push	 edx
  00922	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv384[ebp], 1116
  0092c	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv391[ebp]
  00932	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00939	ff d2		 call	 edx
  0093b	85 c0		 test	 eax, eax
  0093d	0f 84 fb 01 00
	00		 je	 $LN26@get_aircra

; 697  : 						{
; 698  : 							if (!get_local_entity_int_value (target, INT_TYPE_RADAR_ON))

  00943	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00947	74 0d		 je	 SHORT $LN76@get_aircra
  00949	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0094c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0094e	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv403[ebp], ecx
  00954	eb 20		 jmp	 SHORT $LN77@get_aircra
$LN76@get_aircra:
  00956	68 ba 02 00 00	 push	 698			; 000002baH
  0095b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00960	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00966	52		 push	 edx
  00967	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0096c	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv403[ebp], 0
$LN77@get_aircra:
  00976	b8 01 00 00 00	 mov	 eax, 1
  0097b	85 c0		 test	 eax, eax
  0097d	74 0c		 je	 SHORT $LN78@get_aircra
  0097f	c7 85 30 ff ff
	ff a9 00 00 00	 mov	 DWORD PTR tv410[ebp], 169 ; 000000a9H
  00989	eb 20		 jmp	 SHORT $LN79@get_aircra
$LN78@get_aircra:
  0098b	68 ba 02 00 00	 push	 698			; 000002baH
  00990	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00995	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0099b	51		 push	 ecx
  0099c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a1	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv410[ebp], 0
$LN79@get_aircra:
  009ab	68 a9 00 00 00	 push	 169			; 000000a9H
  009b0	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  009b3	52		 push	 edx
  009b4	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv403[ebp], 1116
  009be	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv410[ebp]
  009c4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009cb	ff d2		 call	 edx
  009cd	85 c0		 test	 eax, eax
  009cf	75 1c		 jne	 SHORT $LN24@get_aircra

; 699  : 							{
; 700  : 								adj_range *= 1.1;

  009d1	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _adj_range$1[ebp]
  009d9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  009e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009e5	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _adj_range$1[ebp], xmm0
$LN24@get_aircra:

; 701  : 							}
; 702  : 							if (!get_local_entity_int_value (target, INT_TYPE_RADAR_JAMMER_ON))

  009ed	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  009f1	74 0d		 je	 SHORT $LN80@get_aircra
  009f3	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  009f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  009f8	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv425[ebp], ecx
  009fe	eb 20		 jmp	 SHORT $LN81@get_aircra
$LN80@get_aircra:
  00a00	68 be 02 00 00	 push	 702			; 000002beH
  00a05	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a0a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a10	52		 push	 edx
  00a11	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a16	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN81@get_aircra:
  00a20	b8 01 00 00 00	 mov	 eax, 1
  00a25	85 c0		 test	 eax, eax
  00a27	74 0c		 je	 SHORT $LN82@get_aircra
  00a29	c7 85 30 ff ff
	ff a8 00 00 00	 mov	 DWORD PTR tv432[ebp], 168 ; 000000a8H
  00a33	eb 20		 jmp	 SHORT $LN83@get_aircra
$LN82@get_aircra:
  00a35	68 be 02 00 00	 push	 702			; 000002beH
  00a3a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a3f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a45	51		 push	 ecx
  00a46	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a4b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv432[ebp], 0
$LN83@get_aircra:
  00a55	68 a8 00 00 00	 push	 168			; 000000a8H
  00a5a	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00a5d	52		 push	 edx
  00a5e	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv425[ebp], 1116
  00a68	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv432[ebp]
  00a6e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a75	ff d2		 call	 edx
  00a77	85 c0		 test	 eax, eax
  00a79	75 1c		 jne	 SHORT $LN25@get_aircra

; 703  : 							{
; 704  : 								adj_range *= 1.1;

  00a7b	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _adj_range$1[ebp]
  00a83	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  00a8b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a8f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _adj_range$1[ebp], xmm0
$LN25@get_aircra:

; 705  : 							}
; 706  : 							if (!get_local_entity_int_value (target, INT_TYPE_INFRA_RED_JAMMER_ON))

  00a97	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a9b	74 0d		 je	 SHORT $LN84@get_aircra
  00a9d	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00aa0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00aa2	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv447[ebp], ecx
  00aa8	eb 20		 jmp	 SHORT $LN85@get_aircra
$LN84@get_aircra:
  00aaa	68 c2 02 00 00	 push	 706			; 000002c2H
  00aaf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ab4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00aba	52		 push	 edx
  00abb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ac0	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv447[ebp], 0
$LN85@get_aircra:
  00aca	b8 01 00 00 00	 mov	 eax, 1
  00acf	85 c0		 test	 eax, eax
  00ad1	74 0c		 je	 SHORT $LN86@get_aircra
  00ad3	c7 85 30 ff ff
	ff 68 00 00 00	 mov	 DWORD PTR tv454[ebp], 104 ; 00000068H
  00add	eb 20		 jmp	 SHORT $LN87@get_aircra
$LN86@get_aircra:
  00adf	68 c2 02 00 00	 push	 706			; 000002c2H
  00ae4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ae9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00aef	51		 push	 ecx
  00af0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00af5	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv454[ebp], 0
$LN87@get_aircra:
  00aff	6a 68		 push	 104			; 00000068H
  00b01	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00b04	52		 push	 edx
  00b05	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv447[ebp], 1116
  00b0f	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv454[ebp]
  00b15	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00b1c	ff d2		 call	 edx
  00b1e	85 c0		 test	 eax, eax
  00b20	75 1c		 jne	 SHORT $LN26@get_aircra

; 707  : 							{
; 708  : 								adj_range *= 1.1;

  00b22	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _adj_range$1[ebp]
  00b2a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff199999999999a
  00b32	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b36	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _adj_range$1[ebp], xmm0
$LN26@get_aircra:

; 709  : 							}
; 710  : 						}
; 711  : 
; 712  : 						if (adj_range > (source_air_scan_range * get_local_entity_float_value (target, FLOAT_TYPE_RADAR_STEALTH_FACTOR)))

  00b3e	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b42	74 0d		 je	 SHORT $LN88@get_aircra
  00b44	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00b47	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b49	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv469[ebp], ecx
  00b4f	eb 20		 jmp	 SHORT $LN89@get_aircra
$LN88@get_aircra:
  00b51	68 c8 02 00 00	 push	 712			; 000002c8H
  00b56	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b5b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b61	52		 push	 edx
  00b62	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b67	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv469[ebp], 0
$LN89@get_aircra:
  00b71	b8 01 00 00 00	 mov	 eax, 1
  00b76	85 c0		 test	 eax, eax
  00b78	74 0c		 je	 SHORT $LN90@get_aircra
  00b7a	c7 85 30 ff ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv476[ebp], 106 ; 0000006aH
  00b84	eb 20		 jmp	 SHORT $LN91@get_aircra
$LN90@get_aircra:
  00b86	68 c8 02 00 00	 push	 712			; 000002c8H
  00b8b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b90	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b96	51		 push	 ecx
  00b97	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b9c	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv476[ebp], 0
$LN91@get_aircra:
  00ba6	6a 6a		 push	 106			; 0000006aH
  00ba8	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00bab	52		 push	 edx
  00bac	69 85 34 ff ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv469[ebp], 700
  00bb6	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv476[ebp]
  00bbc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00bc3	ff d2		 call	 edx
  00bc5	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR tv812[ebp]
  00bcb	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv812[ebp]
  00bd3	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _source_air_scan_range$[ebp]
  00bdb	f3 0f 10 8d 78
	ff ff ff	 movss	 xmm1, DWORD PTR _adj_range$1[ebp]
  00be3	0f 2f c8	 comiss	 xmm1, xmm0
  00be6	76 05		 jbe	 SHORT $LN27@get_aircra

; 713  : 						{
; 714  : 							continue;

  00be8	e9 ff 00 00 00	 jmp	 $LN28@get_aircra
$LN27@get_aircra:

; 715  : 						}
; 716  : 					}
; 717  : 
; 718  : 					(*target_count) ++;

  00bed	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  00bf0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bf2	83 c1 01	 add	 ecx, 1
  00bf5	8b 55 0c	 mov	 edx, DWORD PTR _target_count$[ebp]
  00bf8	89 0a		 mov	 DWORD PTR [edx], ecx

; 719  : 
; 720  : 					target_vector.x = target_position->x - source_position->x;

  00bfa	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00bfd	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00c00	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c04	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00c08	f3 0f 11 45 90	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 721  : 					target_vector.y = target_position->y - source_position->y;

  00c0d	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00c10	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00c13	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00c18	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00c1d	f3 0f 11 45 94	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 722  : 					target_vector.z = target_position->z - source_position->z;

  00c22	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00c25	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00c28	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00c2d	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00c32	f3 0f 11 45 98	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0

; 723  : 
; 724  : 					get_local_entity_attitude_matrix (source, attitude);

  00c37	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00c3b	74 0d		 je	 SHORT $LN92@get_aircra
  00c3d	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00c40	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c42	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv500[ebp], ecx
  00c48	eb 27		 jmp	 SHORT $LN93@get_aircra
$LN92@get_aircra:
  00c4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00c50	81 c2 b8 00 00
	00		 add	 edx, 184		; 000000b8H
  00c56	52		 push	 edx
  00c57	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c61	50		 push	 eax
  00c62	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c67	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv500[ebp], 0
$LN93@get_aircra:
  00c71	8d 4d a4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00c74	51		 push	 ecx
  00c75	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00c78	52		 push	 edx
  00c79	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv500[ebp]
  00c7f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00c86	ff d1		 call	 ecx

; 725  : 
; 726  : 					cos_angle = get_3d_vector_dot_product (&target_vector, (vec3d *) &attitude [2]);

  00c88	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00c8d	d1 e0		 shl	 eax, 1
  00c8f	8d 4c 05 a4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  00c93	51		 push	 ecx
  00c94	8d 55 90	 lea	 edx, DWORD PTR _target_vector$[ebp]
  00c97	52		 push	 edx
  00c98	e8 00 00 00 00	 call	 ?get_3d_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_vector_dot_product
  00c9d	d9 5d 8c	 fstp	 DWORD PTR _cos_angle$[ebp]

; 727  : 
; 728  : 					//
; 729  : 					//
; 730  : 					//
; 731  : 
; 732  : 					target_result = target_range * (2.0 - (cos_angle + 1.0));

  00ca0	f3 0f 5a 45 88	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00ca5	f3 0f 5a 4d 8c	 cvtss2sd xmm1, DWORD PTR _cos_angle$[ebp]
  00caa	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00cb2	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4000000000000000
  00cba	f2 0f 5c d1	 subsd	 xmm2, xmm1
  00cbe	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  00cc2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00cc6	f3 0f 11 45 84	 movss	 DWORD PTR _target_result$[ebp], xmm0

; 733  : 
; 734  : 					//
; 735  : 					//
; 736  : 					//
; 737  : 
; 738  : 					if (target_result < best_target_result)

  00ccb	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _best_target_result$[ebp]
  00cd0	0f 2f 45 84	 comiss	 xmm0, DWORD PTR _target_result$[ebp]
  00cd4	76 16		 jbe	 SHORT $LN28@get_aircra

; 739  : 					{
; 740  : 						best_target_result = target_result;

  00cd6	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _target_result$[ebp]
  00cdb	f3 0f 11 45 80	 movss	 DWORD PTR _best_target_result$[ebp], xmm0

; 741  : 
; 742  : 						best_target = target;

  00ce0	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00ce3	89 45 d4	 mov	 DWORD PTR _best_target$[ebp], eax

; 743  : 
; 744  : 						best_group = group;

  00ce6	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  00ce9	89 45 d8	 mov	 DWORD PTR _best_group$[ebp], eax
$LN28@get_aircra:

; 745  : 					}
; 746  : 				}
; 747  : 				while (target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR));

  00cec	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00cf0	74 0d		 je	 SHORT $LN94@get_aircra
  00cf2	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00cf5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cf7	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv523[ebp], ecx
  00cfd	eb 27		 jmp	 SHORT $LN95@get_aircra
$LN94@get_aircra:
  00cff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00d05	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  00d0b	52		 push	 edx
  00d0c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d11	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d16	50		 push	 eax
  00d17	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d1c	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv523[ebp], 0
$LN95@get_aircra:
  00d26	b9 01 00 00 00	 mov	 ecx, 1
  00d2b	85 c9		 test	 ecx, ecx
  00d2d	74 0c		 je	 SHORT $LN96@get_aircra
  00d2f	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv531[ebp], 33 ; 00000021H
  00d39	eb 27		 jmp	 SHORT $LN97@get_aircra
$LN96@get_aircra:
  00d3b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00d41	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  00d47	52		 push	 edx
  00d48	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00d52	50		 push	 eax
  00d53	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d58	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv531[ebp], 0
$LN97@get_aircra:
  00d62	6a 21		 push	 33			; 00000021H
  00d64	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  00d67	51		 push	 ecx
  00d68	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv523[ebp], 180
  00d72	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv531[ebp]
  00d78	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00d7f	ff d1		 call	 ecx
  00d81	89 45 d0	 mov	 DWORD PTR _target$[ebp], eax
  00d84	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00d88	0f 85 73 f7 ff
	ff		 jne	 $LN10@get_aircra
$LN9@get_aircra:

; 748  : 			}
; 749  : 		}

  00d8e	e9 5a f6 ff ff	 jmp	 $LN5@get_aircra
$LN6@get_aircra:

; 750  : 	}

  00d93	e9 38 f6 ff ff	 jmp	 $LN2@get_aircra
$LN3@get_aircra:

; 751  : 
; 752  : 	return (best_group);

  00d98	8b 45 d8	 mov	 eax, DWORD PTR _best_group$[ebp]
$LN1@get_aircra:

; 753  : }

  00d9b	5f		 pop	 edi
  00d9c	5e		 pop	 esi
  00d9d	5b		 pop	 ebx
  00d9e	8b e5		 mov	 esp, ebp
  00da0	5d		 pop	 ebp
  00da1	c2 08 00	 ret	 8
?get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ENDP ; get_aircraft_air_to_air_scan_group_targets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
;	COMDAT ?get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z
_TEXT	SEGMENT
tv465 = -204						; size = 4
tv408 = -204						; size = 4
tv386 = -204						; size = 4
tv366 = -204						; size = 4
tv345 = -204						; size = 4
tv326 = -204						; size = 4
tv307 = -204						; size = 4
tv288 = -204						; size = 4
tv269 = -204						; size = 4
tv250 = -204						; size = 4
tv155 = -204						; size = 4
tv135 = -204						; size = 4
tv83 = -204						; size = 4
tv457 = -200						; size = 4
tv434 = -200						; size = 4
tv400 = -200						; size = 4
tv379 = -200						; size = 4
tv358 = -200						; size = 4
tv338 = -200						; size = 4
tv319 = -200						; size = 4
tv300 = -200						; size = 4
tv281 = -200						; size = 4
tv262 = -200						; size = 4
tv242 = -200						; size = 4
tv235 = -200						; size = 4
tv147 = -200						; size = 4
tv95 = -200						; size = 4
tv75 = -200						; size = 4
_source_surface_scan_range$ = -132			; size = 4
_best_target_result$ = -128				; size = 4
_target_result$ = -124					; size = 4
_target_range$ = -120					; size = 4
_cos_angle$ = -116					; size = 4
_target_vector$ = -112					; size = 12
_target_position$ = -100				; size = 4
_source_position$ = -96					; size = 4
_attitude$ = -92					; size = 36
_sec$ = -56						; size = 4
_group$ = -52						; size = 4
_target$ = -48						; size = 4
_best_target$ = -44					; size = 4
_best_group$ = -40					; size = 4
_z_sec$ = -36						; size = 4
_x_sec$ = -32						; size = 4
_z_sec_max$ = -28					; size = 4
_x_sec_max$ = -24					; size = 4
_z_sec_min$ = -20					; size = 4
_x_sec_min$ = -16					; size = 4
_z_sec_org$ = -12					; size = 4
_x_sec_org$ = -8					; size = 4
_source_side$ = -4					; size = 4
_source$ = 8						; size = 4
_target_count$ = 12					; size = 4
?get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z PROC ; get_aircraft_air_to_surface_scan_group_targets, COMDAT

; 332  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 333  : 	int
; 334  : 		source_side,
; 335  : 		x_sec_org,
; 336  : 		z_sec_org,
; 337  : 		x_sec_min,
; 338  : 		z_sec_min,
; 339  : 		x_sec_max,
; 340  : 		z_sec_max,
; 341  : 		x_sec,
; 342  : 		z_sec;
; 343  : 
; 344  : 	entity
; 345  : 		*best_group,
; 346  : 		*best_target,
; 347  : 		*target,
; 348  : 		*group,
; 349  : 		*sec;
; 350  : 
; 351  : 	matrix3x3
; 352  : 		attitude;
; 353  : 
; 354  : 	vec3d
; 355  : 		*source_position,
; 356  : 		*target_position,
; 357  : 		target_vector;
; 358  : 
; 359  : 	float
; 360  : 		cos_angle,
; 361  : 		target_range,
; 362  : 		target_result,
; 363  : 		best_target_result,
; 364  : 		source_surface_scan_range;
; 365  : 
; 366  : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN11@get_aircra
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00017	83 c0 22	 add	 eax, 34			; 00000022H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@get_aircra:

; 367  : 
; 368  : 	(*target_count) = 0;

  0002a	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 369  : 
; 370  : 	group = NULL;

  00033	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _group$[ebp], 0

; 371  : 
; 372  : 	best_group = NULL;

  0003a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _best_group$[ebp], 0

; 373  : 
; 374  : 	best_target = NULL;

  00041	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 375  : 
; 376  : 	best_target_result = FLT_MAX;

  00048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  00050	f3 0f 11 45 80	 movss	 DWORD PTR _best_target_result$[ebp], xmm0

; 377  : 
; 378  : 	source_side = get_local_entity_int_value (source, INT_TYPE_SIDE);

  00055	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00059	74 0d		 je	 SHORT $LN27@get_aircra
  0005b	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00066	eb 24		 jmp	 SHORT $LN28@get_aircra
$LN27@get_aircra:
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0006e	83 c2 2e	 add	 edx, 46			; 0000002eH
  00071	52		 push	 edx
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00082	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN28@get_aircra:
  0008c	b9 01 00 00 00	 mov	 ecx, 1
  00091	85 c9		 test	 ecx, ecx
  00093	74 0c		 je	 SHORT $LN29@get_aircra
  00095	c7 85 34 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  0009f	eb 24		 jmp	 SHORT $LN30@get_aircra
$LN29@get_aircra:
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  000a7	83 c2 2e	 add	 edx, 46			; 0000002eH
  000aa	52		 push	 edx
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000bb	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN30@get_aircra:
  000c5	68 bb 00 00 00	 push	 187			; 000000bbH
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000cd	51		 push	 ecx
  000ce	69 95 38 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000d8	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000de	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000e5	ff d1		 call	 ecx
  000e7	89 45 fc	 mov	 DWORD PTR _source_side$[ebp], eax

; 379  : 
; 380  : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  000ea	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  000ee	74 0d		 je	 SHORT $LN31@get_aircra
  000f0	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  000f3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f5	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000fb	eb 24		 jmp	 SHORT $LN32@get_aircra
$LN31@get_aircra:
  000fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00103	83 c2 30	 add	 edx, 48			; 00000030H
  00106	52		 push	 edx
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00117	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN32@get_aircra:
  00121	b9 01 00 00 00	 mov	 ecx, 1
  00126	85 c9		 test	 ecx, ecx
  00128	74 0c		 je	 SHORT $LN33@get_aircra
  0012a	c7 85 34 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv135[ebp], 8
  00134	eb 24		 jmp	 SHORT $LN34@get_aircra
$LN33@get_aircra:
  00136	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0013c	83 c2 30	 add	 edx, 48			; 00000030H
  0013f	52		 push	 edx
  00140	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00150	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN34@get_aircra:
  0015a	6a 08		 push	 8
  0015c	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0015f	51		 push	 ecx
  00160	6b 95 38 ff ff
	ff 60		 imul	 edx, DWORD PTR tv95[ebp], 96
  00167	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  0016d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00174	ff d1		 call	 ecx
  00176	89 45 a0	 mov	 DWORD PTR _source_position$[ebp], eax

; 381  : 
; 382  : 	source_surface_scan_range = get_local_entity_float_value (source, FLOAT_TYPE_SURFACE_SCAN_RANGE);

  00179	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0017d	74 0d		 je	 SHORT $LN35@get_aircra
  0017f	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00182	8b 08		 mov	 ecx, DWORD PTR [eax]
  00184	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv147[ebp], ecx
  0018a	eb 24		 jmp	 SHORT $LN36@get_aircra
$LN35@get_aircra:
  0018c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00192	83 c2 32	 add	 edx, 50			; 00000032H
  00195	52		 push	 edx
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a6	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv147[ebp], 0
$LN36@get_aircra:
  001b0	b9 01 00 00 00	 mov	 ecx, 1
  001b5	85 c9		 test	 ecx, ecx
  001b7	74 0c		 je	 SHORT $LN37@get_aircra
  001b9	c7 85 34 ff ff
	ff 7f 00 00 00	 mov	 DWORD PTR tv155[ebp], 127 ; 0000007fH
  001c3	eb 24		 jmp	 SHORT $LN38@get_aircra
$LN37@get_aircra:
  001c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  001cb	83 c2 32	 add	 edx, 50			; 00000032H
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001df	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv155[ebp], 0
$LN38@get_aircra:
  001e9	6a 7f		 push	 127			; 0000007fH
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  001ee	51		 push	 ecx
  001ef	69 95 38 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv147[ebp], 700
  001f9	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv155[ebp]
  001ff	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00206	ff d1		 call	 ecx
  00208	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR _source_surface_scan_range$[ebp]

; 383  : 
; 384  : 	if (source_surface_scan_range == 0.0)

  0020e	f3 0f 5a 85 7c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00216	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0021e	9f		 lahf
  0021f	f6 c4 44	 test	 ah, 68			; 00000044H
  00222	7a 07		 jp	 SHORT $LN12@get_aircra

; 385  : 	{
; 386  : 		return NULL;

  00224	33 c0		 xor	 eax, eax
  00226	e9 5f 09 00 00	 jmp	 $LN1@get_aircra
$LN12@get_aircra:

; 387  : 	}
; 388  : 
; 389  : 	source_surface_scan_range *= source_surface_scan_range;

  0022b	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00233	f3 0f 59 85 7c
	ff ff ff	 mulss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  0023b	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _source_surface_scan_range$[ebp], xmm0

; 390  : 
; 391  : 	////////////////////////////////////////
; 392  : 	//
; 393  : 	// get sector scan area
; 394  : 	//
; 395  : 	////////////////////////////////////////
; 396  : 
; 397  : 	get_x_sector (x_sec_org, source_position->x);

  00243	8d 45 f8	 lea	 eax, DWORD PTR _x_sec_org$[ebp]
  00246	50		 push	 eax
  00247	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0024a	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0024e	51		 push	 ecx
  0024f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00254	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00259	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  0025c	99		 cdq
  0025d	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00263	89 45 f8	 mov	 DWORD PTR _x_sec_org$[ebp], eax

; 398  : 	get_z_sector (z_sec_org, source_position->z);

  00266	8d 45 f4	 lea	 eax, DWORD PTR _z_sec_org$[ebp]
  00269	50		 push	 eax
  0026a	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0026d	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00272	51		 push	 ecx
  00273	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00278	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0027d	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  00280	99		 cdq
  00281	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00287	89 45 f4	 mov	 DWORD PTR _z_sec_org$[ebp], eax

; 399  : 
; 400  : 	ASSERT (sector_inside_map_area (x_sec_org, z_sec_org));

  0028a	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  0028d	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20
  00293	7c 21		 jl	 SHORT $LN14@get_aircra
  00295	8b 45 f8	 mov	 eax, DWORD PTR _x_sec_org$[ebp]
  00298	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28
  0029e	7f 16		 jg	 SHORT $LN14@get_aircra
  002a0	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  002a3	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24
  002a9	7c 0b		 jl	 SHORT $LN14@get_aircra
  002ab	8b 45 f4	 mov	 eax, DWORD PTR _z_sec_org$[ebp]
  002ae	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32
  002b4	7e 18		 jle	 SHORT $LN13@get_aircra
$LN14@get_aircra:
  002b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  002bb	83 c0 44	 add	 eax, 68			; 00000044H
  002be	50		 push	 eax
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@BFGIEGOM@sector_inside_map_area?5?$CIx_sec_o@
  002c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_aircra:

; 401  : 
; 402  : 	get_x_sector (x_sec_min, source_position->x - source_surface_scan_range);

  002ce	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  002d1	50		 push	 eax
  002d2	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  002d5	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  002d9	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  002e1	51		 push	 ecx
  002e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e7	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  002ec	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  002ef	99		 cdq
  002f0	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  002f6	89 45 f0	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 403  : 	get_z_sector (z_sec_min, source_position->z - source_surface_scan_range);

  002f9	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  002fc	50		 push	 eax
  002fd	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00300	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00305	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  0030d	51		 push	 ecx
  0030e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00313	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00318	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  0031b	99		 cdq
  0031c	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00322	89 45 ec	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 404  : 
; 405  : 	get_x_sector (x_sec_max, source_position->x + source_surface_scan_range);

  00325	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  00328	50		 push	 eax
  00329	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0032c	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00330	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00338	51		 push	 ecx
  00339	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033e	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00343	8b 45 e8	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  00346	99		 cdq
  00347	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0034d	89 45 e8	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 406  : 	get_z_sector (z_sec_max, source_position->z + source_surface_scan_range);

  00350	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  00353	50		 push	 eax
  00354	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00357	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0035c	f3 0f 58 85 7c
	ff ff ff	 addss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  00364	51		 push	 ecx
  00365	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036a	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0036f	8b 45 e4	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  00372	99		 cdq
  00373	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00379	89 45 e4	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 407  : 
; 408  : 	x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  0037c	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  00381	8d 45 f0	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00384	50		 push	 eax
  00385	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0038a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038c	89 4d f0	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 409  : 	z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  0038f	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  00394	8d 45 ec	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0039d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0039f	89 4d ec	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 410  : 
; 411  : 	x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  003a2	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  003a7	8d 45 e8	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  003b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b2	89 4d e8	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 412  : 	z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  003b5	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  003ba	8d 45 e4	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  003c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003c5	89 4d e4	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 413  : 
; 414  : 	////////////////////////////////////////
; 415  : 	//
; 416  : 	// sector scan
; 417  : 	//
; 418  : 	////////////////////////////////////////
; 419  : 
; 420  : 	for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  003c8	8b 45 ec	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  003cb	89 45 dc	 mov	 DWORD PTR _z_sec$[ebp], eax
  003ce	eb 09		 jmp	 SHORT $LN4@get_aircra
$LN2@get_aircra:
  003d0	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  003d3	83 c0 01	 add	 eax, 1
  003d6	89 45 dc	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@get_aircra:
  003d9	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  003dc	3b 45 e4	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  003df	0f 8f a2 07 00
	00		 jg	 $LN3@get_aircra

; 421  : 	{
; 422  : 		for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  003e5	8b 45 f0	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  003e8	89 45 e0	 mov	 DWORD PTR _x_sec$[ebp], eax
  003eb	eb 09		 jmp	 SHORT $LN7@get_aircra
$LN5@get_aircra:
  003ed	8b 45 e0	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003f0	83 c0 01	 add	 eax, 1
  003f3	89 45 e0	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@get_aircra:
  003f6	8b 45 e0	 mov	 eax, DWORD PTR _x_sec$[ebp]
  003f9	3b 45 e8	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  003fc	0f 8f 80 07 00
	00		 jg	 $LN6@get_aircra

; 423  : 		{
; 424  : 			sec = get_local_raw_sector_entity (x_sec, z_sec);

  00402	8b 45 dc	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00405	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0040c	03 45 e0	 add	 eax, DWORD PTR _x_sec$[ebp]
  0040f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00415	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00419	74 1d		 je	 SHORT $LN39@get_aircra
  0041b	8b 55 dc	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0041e	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00425	03 55 e0	 add	 edx, DWORD PTR _x_sec$[ebp]
  00428	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0042d	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00430	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  00436	eb 24		 jmp	 SHORT $LN40@get_aircra
$LN39@get_aircra:
  00438	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0043e	83 c2 5c	 add	 edx, 92			; 0000005cH
  00441	52		 push	 edx
  00442	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00447	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0044c	50		 push	 eax
  0044d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00452	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv235[ebp], 0
$LN40@get_aircra:
  0045c	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv235[ebp]
  00462	89 4d c8	 mov	 DWORD PTR _sec$[ebp], ecx

; 425  : 
; 426  : 			target = get_local_entity_first_child (sec, LIST_TYPE_SECTOR);

  00465	83 7d c8 00	 cmp	 DWORD PTR _sec$[ebp], 0
  00469	74 0d		 je	 SHORT $LN41@get_aircra
  0046b	8b 45 c8	 mov	 eax, DWORD PTR _sec$[ebp]
  0046e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00470	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv242[ebp], ecx
  00476	eb 24		 jmp	 SHORT $LN42@get_aircra
$LN41@get_aircra:
  00478	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0047e	83 c2 5e	 add	 edx, 94			; 0000005eH
  00481	52		 push	 edx
  00482	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00487	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0048c	50		 push	 eax
  0048d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00492	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv242[ebp], 0
$LN42@get_aircra:
  0049c	b9 01 00 00 00	 mov	 ecx, 1
  004a1	85 c9		 test	 ecx, ecx
  004a3	74 0c		 je	 SHORT $LN43@get_aircra
  004a5	c7 85 34 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv250[ebp], 33 ; 00000021H
  004af	eb 24		 jmp	 SHORT $LN44@get_aircra
$LN43@get_aircra:
  004b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  004b7	83 c2 5e	 add	 edx, 94			; 0000005eH
  004ba	52		 push	 edx
  004bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004c5	50		 push	 eax
  004c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004cb	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN44@get_aircra:
  004d5	6a 21		 push	 33			; 00000021H
  004d7	8b 4d c8	 mov	 ecx, DWORD PTR _sec$[ebp]
  004da	51		 push	 ecx
  004db	69 95 38 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv242[ebp], 180
  004e5	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv250[ebp]
  004eb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  004f2	ff d1		 call	 ecx
  004f4	89 45 d0	 mov	 DWORD PTR _target$[ebp], eax

; 427  : 
; 428  : 			if (target)

  004f7	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  004fb	0f 84 7c 06 00
	00		 je	 $LN9@get_aircra
$LN10@get_aircra:

; 429  : 			{
; 430  : 				do
; 431  : 				{
; 432  : 					////////////////////////////////////////
; 433  : 					//
; 434  : 					// simple target select criteria
; 435  : 					//
; 436  : 					////////////////////////////////////////
; 437  : 
; 438  : 					if (get_local_entity_int_value (target, INT_TYPE_SIDE) == source_side)

  00501	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00505	74 0d		 je	 SHORT $LN45@get_aircra
  00507	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0050a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0050c	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  00512	eb 20		 jmp	 SHORT $LN46@get_aircra
$LN45@get_aircra:
  00514	68 b6 01 00 00	 push	 438			; 000001b6H
  00519	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00524	52		 push	 edx
  00525	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0052a	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN46@get_aircra:
  00534	b8 01 00 00 00	 mov	 eax, 1
  00539	85 c0		 test	 eax, eax
  0053b	74 0c		 je	 SHORT $LN47@get_aircra
  0053d	c7 85 34 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv269[ebp], 187 ; 000000bbH
  00547	eb 20		 jmp	 SHORT $LN48@get_aircra
$LN47@get_aircra:
  00549	68 b6 01 00 00	 push	 438			; 000001b6H
  0054e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00553	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00559	51		 push	 ecx
  0055a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0055f	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN48@get_aircra:
  00569	68 bb 00 00 00	 push	 187			; 000000bbH
  0056e	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00571	52		 push	 edx
  00572	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv262[ebp], 1116
  0057c	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv269[ebp]
  00582	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00589	ff d2		 call	 edx
  0058b	3b 45 fc	 cmp	 eax, DWORD PTR _source_side$[ebp]
  0058e	75 05		 jne	 SHORT $LN16@get_aircra

; 439  : 					{
; 440  : 						continue;

  00590	e9 46 05 00 00	 jmp	 $LN25@get_aircra
$LN16@get_aircra:

; 441  : 					}
; 442  : 
; 443  : 					//
; 444  : 					// Allow vehicles and aircraft....
; 445  : 					//
; 446  : 						
; 447  : 					if ((!get_local_entity_int_value (target, INT_TYPE_IDENTIFY_AIRCRAFT)) && 

  00595	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00599	74 0d		 je	 SHORT $LN49@get_aircra
  0059b	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0059e	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a0	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv281[ebp], ecx
  005a6	eb 20		 jmp	 SHORT $LN50@get_aircra
$LN49@get_aircra:
  005a8	68 bf 01 00 00	 push	 447			; 000001bfH
  005ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005b8	52		 push	 edx
  005b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005be	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN50@get_aircra:
  005c8	b8 01 00 00 00	 mov	 eax, 1
  005cd	85 c0		 test	 eax, eax
  005cf	74 0c		 je	 SHORT $LN51@get_aircra
  005d1	c7 85 34 ff ff
	ff 57 00 00 00	 mov	 DWORD PTR tv288[ebp], 87 ; 00000057H
  005db	eb 20		 jmp	 SHORT $LN52@get_aircra
$LN51@get_aircra:
  005dd	68 bf 01 00 00	 push	 447			; 000001bfH
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005ed	51		 push	 ecx
  005ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f3	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN52@get_aircra:
  005fd	6a 57		 push	 87			; 00000057H
  005ff	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00602	52		 push	 edx
  00603	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv281[ebp], 1116
  0060d	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv288[ebp]
  00613	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0061a	ff d2		 call	 edx
  0061c	85 c0		 test	 eax, eax
  0061e	0f 85 90 00 00
	00		 jne	 $LN17@get_aircra
  00624	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00628	74 0d		 je	 SHORT $LN53@get_aircra
  0062a	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0062d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0062f	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv300[ebp], ecx
  00635	eb 20		 jmp	 SHORT $LN54@get_aircra
$LN53@get_aircra:
  00637	68 c0 01 00 00	 push	 448			; 000001c0H
  0063c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00641	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00647	52		 push	 edx
  00648	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0064d	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv300[ebp], 0
$LN54@get_aircra:
  00657	b8 01 00 00 00	 mov	 eax, 1
  0065c	85 c0		 test	 eax, eax
  0065e	74 0c		 je	 SHORT $LN55@get_aircra
  00660	c7 85 34 ff ff
	ff 60 00 00 00	 mov	 DWORD PTR tv307[ebp], 96 ; 00000060H
  0066a	eb 20		 jmp	 SHORT $LN56@get_aircra
$LN55@get_aircra:
  0066c	68 c0 01 00 00	 push	 448			; 000001c0H
  00671	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00676	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0067c	51		 push	 ecx
  0067d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00682	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv307[ebp], 0
$LN56@get_aircra:
  0068c	6a 60		 push	 96			; 00000060H
  0068e	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00691	52		 push	 edx
  00692	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv300[ebp], 1116
  0069c	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv307[ebp]
  006a2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006a9	ff d2		 call	 edx
  006ab	85 c0		 test	 eax, eax
  006ad	75 05		 jne	 SHORT $LN17@get_aircra

; 448  : 							(!get_local_entity_int_value (target, INT_TYPE_IDENTIFY_VEHICLE)))
; 449  : 					{
; 450  : 						continue;

  006af	e9 27 04 00 00	 jmp	 $LN25@get_aircra
$LN17@get_aircra:

; 451  : 					}
; 452  : 
; 453  : 					//
; 454  : 					// ... But only aircraft that are on the ground
; 455  : 					//
; 456  : 
; 457  : 					if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  006b4	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  006b8	74 0d		 je	 SHORT $LN57@get_aircra
  006ba	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  006bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  006bf	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv319[ebp], ecx
  006c5	eb 20		 jmp	 SHORT $LN58@get_aircra
$LN57@get_aircra:
  006c7	68 c9 01 00 00	 push	 457			; 000001c9H
  006cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006d7	52		 push	 edx
  006d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006dd	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv319[ebp], 0
$LN58@get_aircra:
  006e7	b8 01 00 00 00	 mov	 eax, 1
  006ec	85 c0		 test	 eax, eax
  006ee	74 0c		 je	 SHORT $LN59@get_aircra
  006f0	c7 85 34 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv326[ebp], 4
  006fa	eb 20		 jmp	 SHORT $LN60@get_aircra
$LN59@get_aircra:
  006fc	68 c9 01 00 00	 push	 457			; 000001c9H
  00701	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00706	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0070c	51		 push	 ecx
  0070d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00712	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv326[ebp], 0
$LN60@get_aircra:
  0071c	6a 04		 push	 4
  0071e	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00721	52		 push	 edx
  00722	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv319[ebp], 1116
  0072c	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv326[ebp]
  00732	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00739	ff d2		 call	 edx
  0073b	85 c0		 test	 eax, eax
  0073d	74 05		 je	 SHORT $LN18@get_aircra

; 458  : 					{
; 459  : 						continue;

  0073f	e9 97 03 00 00	 jmp	 $LN25@get_aircra
$LN18@get_aircra:

; 460  : 					}
; 461  : 
; 462  : 					if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_INVALID)

  00744	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00748	74 0d		 je	 SHORT $LN61@get_aircra
  0074a	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0074d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0074f	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv338[ebp], ecx
  00755	eb 20		 jmp	 SHORT $LN62@get_aircra
$LN61@get_aircra:
  00757	68 ce 01 00 00	 push	 462			; 000001ceH
  0075c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00761	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00767	52		 push	 edx
  00768	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0076d	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN62@get_aircra:
  00777	b8 01 00 00 00	 mov	 eax, 1
  0077c	85 c0		 test	 eax, eax
  0077e	74 0c		 je	 SHORT $LN63@get_aircra
  00780	c7 85 34 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv345[ebp], 214 ; 000000d6H
  0078a	eb 20		 jmp	 SHORT $LN64@get_aircra
$LN63@get_aircra:
  0078c	68 ce 01 00 00	 push	 462			; 000001ceH
  00791	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00796	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0079c	51		 push	 ecx
  0079d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007a2	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv345[ebp], 0
$LN64@get_aircra:
  007ac	68 d6 00 00 00	 push	 214			; 000000d6H
  007b1	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  007b4	52		 push	 edx
  007b5	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv338[ebp], 1116
  007bf	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv345[ebp]
  007c5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  007cc	ff d2		 call	 edx
  007ce	85 c0		 test	 eax, eax
  007d0	75 05		 jne	 SHORT $LN19@get_aircra

; 463  : 					{
; 464  : 						continue;

  007d2	e9 04 03 00 00	 jmp	 $LN25@get_aircra
$LN19@get_aircra:

; 465  : 					}
; 466  : 
; 467  : 					group = get_local_entity_parent (target, LIST_TYPE_MEMBER);

  007d7	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  007db	74 0d		 je	 SHORT $LN65@get_aircra
  007dd	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  007e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  007e2	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv358[ebp], ecx
  007e8	eb 27		 jmp	 SHORT $LN66@get_aircra
$LN65@get_aircra:
  007ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  007f0	81 c2 87 00 00
	00		 add	 edx, 135		; 00000087H
  007f6	52		 push	 edx
  007f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  007fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00801	50		 push	 eax
  00802	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00807	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv358[ebp], 0
$LN66@get_aircra:
  00811	b9 01 00 00 00	 mov	 ecx, 1
  00816	85 c9		 test	 ecx, ecx
  00818	74 0c		 je	 SHORT $LN67@get_aircra
  0081a	c7 85 34 ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv366[ebp], 25 ; 00000019H
  00824	eb 27		 jmp	 SHORT $LN68@get_aircra
$LN67@get_aircra:
  00826	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0082c	81 c2 87 00 00
	00		 add	 edx, 135		; 00000087H
  00832	52		 push	 edx
  00833	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00838	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0083d	50		 push	 eax
  0083e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00843	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv366[ebp], 0
$LN68@get_aircra:
  0084d	6a 19		 push	 25			; 00000019H
  0084f	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  00852	51		 push	 ecx
  00853	69 95 38 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv358[ebp], 180
  0085d	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv366[ebp]
  00863	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0086a	ff d1		 call	 ecx
  0086c	89 45 cc	 mov	 DWORD PTR _group$[ebp], eax

; 468  : 
; 469  : 					if (!group)

  0086f	83 7d cc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00873	75 05		 jne	 SHORT $LN20@get_aircra

; 470  : 					{
; 471  : 						continue;

  00875	e9 61 02 00 00	 jmp	 $LN25@get_aircra
$LN20@get_aircra:

; 472  : 					}
; 473  : 
; 474  : 					if (group == best_group)

  0087a	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  0087d	3b 45 d8	 cmp	 eax, DWORD PTR _best_group$[ebp]
  00880	75 05		 jne	 SHORT $LN21@get_aircra

; 475  : 					{
; 476  : 						continue;

  00882	e9 54 02 00 00	 jmp	 $LN25@get_aircra
$LN21@get_aircra:

; 477  : 					}
; 478  : 
; 479  : 					if (!get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00887	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  0088b	74 0d		 je	 SHORT $LN69@get_aircra
  0088d	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00890	8b 08		 mov	 ecx, DWORD PTR [eax]
  00892	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv379[ebp], ecx
  00898	eb 20		 jmp	 SHORT $LN70@get_aircra
$LN69@get_aircra:
  0089a	68 df 01 00 00	 push	 479			; 000001dfH
  0089f	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008aa	52		 push	 edx
  008ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008b0	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv379[ebp], 0
$LN70@get_aircra:
  008ba	b8 01 00 00 00	 mov	 eax, 1
  008bf	85 c0		 test	 eax, eax
  008c1	74 0c		 je	 SHORT $LN71@get_aircra
  008c3	c7 85 34 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv386[ebp], 7
  008cd	eb 20		 jmp	 SHORT $LN72@get_aircra
$LN71@get_aircra:
  008cf	68 df 01 00 00	 push	 479			; 000001dfH
  008d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008df	51		 push	 ecx
  008e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e5	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv386[ebp], 0
$LN72@get_aircra:
  008ef	6a 07		 push	 7
  008f1	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  008f4	52		 push	 edx
  008f5	69 85 38 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv379[ebp], 1116
  008ff	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv386[ebp]
  00905	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0090c	ff d2		 call	 edx
  0090e	85 c0		 test	 eax, eax
  00910	75 05		 jne	 SHORT $LN22@get_aircra

; 480  : 					{
; 481  : 						continue;

  00912	e9 c4 01 00 00	 jmp	 $LN25@get_aircra
$LN22@get_aircra:

; 482  : 					}
; 483  : 
; 484  : 					if (target == source)

  00917	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0091a	3b 45 08	 cmp	 eax, DWORD PTR _source$[ebp]
  0091d	75 05		 jne	 SHORT $LN23@get_aircra

; 485  : 					{
; 486  : 						continue;

  0091f	e9 b7 01 00 00	 jmp	 $LN25@get_aircra
$LN23@get_aircra:

; 487  : 					}
; 488  : 
; 489  : 					target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00924	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00928	74 0d		 je	 SHORT $LN73@get_aircra
  0092a	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  0092d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0092f	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv400[ebp], ecx
  00935	eb 27		 jmp	 SHORT $LN74@get_aircra
$LN73@get_aircra:
  00937	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  0093d	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00943	52		 push	 edx
  00944	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00949	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0094e	50		 push	 eax
  0094f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00954	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv400[ebp], 0
$LN74@get_aircra:
  0095e	b9 01 00 00 00	 mov	 ecx, 1
  00963	85 c9		 test	 ecx, ecx
  00965	74 0c		 je	 SHORT $LN75@get_aircra
  00967	c7 85 34 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv408[ebp], 8
  00971	eb 27		 jmp	 SHORT $LN76@get_aircra
$LN75@get_aircra:
  00973	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00979	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  0097f	52		 push	 edx
  00980	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00985	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0098a	50		 push	 eax
  0098b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00990	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv408[ebp], 0
$LN76@get_aircra:
  0099a	6a 08		 push	 8
  0099c	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  0099f	51		 push	 ecx
  009a0	6b 95 38 ff ff
	ff 60		 imul	 edx, DWORD PTR tv400[ebp], 96
  009a7	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv408[ebp]
  009ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  009b4	ff d1		 call	 ecx
  009b6	89 45 9c	 mov	 DWORD PTR _target_position$[ebp], eax

; 490  : 
; 491  : 					target_range = get_sqr_2d_range (source_position, target_position);

  009b9	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  009bc	50		 push	 eax
  009bd	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  009c0	51		 push	 ecx
  009c1	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  009c6	d9 5d 88	 fstp	 DWORD PTR _target_range$[ebp]

; 492  : 
; 493  : 					if (target_range > source_surface_scan_range)

  009c9	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  009ce	0f 2f 85 7c ff
	ff ff		 comiss	 xmm0, DWORD PTR _source_surface_scan_range$[ebp]
  009d5	76 05		 jbe	 SHORT $LN24@get_aircra

; 494  : 					{
; 495  : 						continue;

  009d7	e9 ff 00 00 00	 jmp	 $LN25@get_aircra
$LN24@get_aircra:

; 496  : 					}
; 497  : 
; 498  : 					(*target_count) ++;

  009dc	8b 45 0c	 mov	 eax, DWORD PTR _target_count$[ebp]
  009df	8b 08		 mov	 ecx, DWORD PTR [eax]
  009e1	83 c1 01	 add	 ecx, 1
  009e4	8b 55 0c	 mov	 edx, DWORD PTR _target_count$[ebp]
  009e7	89 0a		 mov	 DWORD PTR [edx], ecx

; 499  : 
; 500  : 					target_vector.x = target_position->x - source_position->x;

  009e9	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  009ec	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  009ef	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  009f3	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  009f7	f3 0f 11 45 90	 movss	 DWORD PTR _target_vector$[ebp], xmm0

; 501  : 					target_vector.y = target_position->y - source_position->y;

  009fc	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  009ff	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00a02	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00a07	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00a0c	f3 0f 11 45 94	 movss	 DWORD PTR _target_vector$[ebp+4], xmm0

; 502  : 					target_vector.z = target_position->z - source_position->z;

  00a11	8b 45 9c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00a14	8b 4d a0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00a17	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a1c	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00a21	f3 0f 11 45 98	 movss	 DWORD PTR _target_vector$[ebp+8], xmm0

; 503  : 
; 504  : 					get_local_entity_attitude_matrix (source, attitude);

  00a26	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00a2a	74 0d		 je	 SHORT $LN77@get_aircra
  00a2c	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00a2f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a31	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv434[ebp], ecx
  00a37	eb 27		 jmp	 SHORT $LN78@get_aircra
$LN77@get_aircra:
  00a39	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00a3f	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  00a45	52		 push	 edx
  00a46	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a50	50		 push	 eax
  00a51	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a56	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv434[ebp], 0
$LN78@get_aircra:
  00a60	8d 4d a4	 lea	 ecx, DWORD PTR _attitude$[ebp]
  00a63	51		 push	 ecx
  00a64	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00a67	52		 push	 edx
  00a68	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv434[ebp]
  00a6e	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00a75	ff d1		 call	 ecx

; 505  : 
; 506  : 					cos_angle = get_3d_vector_dot_product (&target_vector, (vec3d *) &attitude [2]);

  00a77	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00a7c	d1 e0		 shl	 eax, 1
  00a7e	8d 4c 05 a4	 lea	 ecx, DWORD PTR _attitude$[ebp+eax]
  00a82	51		 push	 ecx
  00a83	8d 55 90	 lea	 edx, DWORD PTR _target_vector$[ebp]
  00a86	52		 push	 edx
  00a87	e8 00 00 00 00	 call	 ?get_3d_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_vector_dot_product
  00a8c	d9 5d 8c	 fstp	 DWORD PTR _cos_angle$[ebp]

; 507  : 
; 508  : 					//
; 509  : 					//
; 510  : 					//
; 511  : 
; 512  : 					target_result = target_range * (2.0 - (cos_angle + 1.0));

  00a8f	f3 0f 5a 45 88	 cvtss2sd xmm0, DWORD PTR _target_range$[ebp]
  00a94	f3 0f 5a 4d 8c	 cvtss2sd xmm1, DWORD PTR _cos_angle$[ebp]
  00a99	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00aa1	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@4000000000000000
  00aa9	f2 0f 5c d1	 subsd	 xmm2, xmm1
  00aad	f2 0f 59 c2	 mulsd	 xmm0, xmm2
  00ab1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00ab5	f3 0f 11 45 84	 movss	 DWORD PTR _target_result$[ebp], xmm0

; 513  : 
; 514  : 					//
; 515  : 					//
; 516  : 					//
; 517  : 
; 518  : 					if (target_result < best_target_result)

  00aba	f3 0f 10 45 80	 movss	 xmm0, DWORD PTR _best_target_result$[ebp]
  00abf	0f 2f 45 84	 comiss	 xmm0, DWORD PTR _target_result$[ebp]
  00ac3	76 16		 jbe	 SHORT $LN25@get_aircra

; 519  : 					{
; 520  : 						best_target_result = target_result;

  00ac5	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _target_result$[ebp]
  00aca	f3 0f 11 45 80	 movss	 DWORD PTR _best_target_result$[ebp], xmm0

; 521  : 
; 522  : 						best_target = target;

  00acf	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00ad2	89 45 d4	 mov	 DWORD PTR _best_target$[ebp], eax

; 523  : 
; 524  : 						best_group = group;

  00ad5	8b 45 cc	 mov	 eax, DWORD PTR _group$[ebp]
  00ad8	89 45 d8	 mov	 DWORD PTR _best_group$[ebp], eax
$LN25@get_aircra:

; 525  : 					}
; 526  : 				}
; 527  : 				while (target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR));

  00adb	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00adf	74 0d		 je	 SHORT $LN79@get_aircra
  00ae1	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00ae4	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ae6	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv457[ebp], ecx
  00aec	eb 27		 jmp	 SHORT $LN80@get_aircra
$LN79@get_aircra:
  00aee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00af4	81 c2 c3 00 00
	00		 add	 edx, 195		; 000000c3H
  00afa	52		 push	 edx
  00afb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b00	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b05	50		 push	 eax
  00b06	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b0b	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv457[ebp], 0
$LN80@get_aircra:
  00b15	b9 01 00 00 00	 mov	 ecx, 1
  00b1a	85 c9		 test	 ecx, ecx
  00b1c	74 0c		 je	 SHORT $LN81@get_aircra
  00b1e	c7 85 34 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv465[ebp], 33 ; 00000021H
  00b28	eb 27		 jmp	 SHORT $LN82@get_aircra
$LN81@get_aircra:
  00b2a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU2@PAH@Z@4JA
  00b30	81 c2 c3 00 00
	00		 add	 edx, 195		; 000000c3H
  00b36	52		 push	 edx
  00b37	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b3c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b41	50		 push	 eax
  00b42	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b47	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv465[ebp], 0
$LN82@get_aircra:
  00b51	6a 21		 push	 33			; 00000021H
  00b53	8b 4d d0	 mov	 ecx, DWORD PTR _target$[ebp]
  00b56	51		 push	 ecx
  00b57	69 95 38 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv457[ebp], 180
  00b61	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv465[ebp]
  00b67	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b6e	ff d1		 call	 ecx
  00b70	89 45 d0	 mov	 DWORD PTR _target$[ebp], eax
  00b73	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b77	0f 85 84 f9 ff
	ff		 jne	 $LN10@get_aircra
$LN9@get_aircra:

; 528  : 			}
; 529  : 		}

  00b7d	e9 6b f8 ff ff	 jmp	 $LN5@get_aircra
$LN6@get_aircra:

; 530  : 	}

  00b82	e9 49 f8 ff ff	 jmp	 $LN2@get_aircra
$LN3@get_aircra:

; 531  : 
; 532  : 	return (best_group);

  00b87	8b 45 d8	 mov	 eax, DWORD PTR _best_group$[ebp]
$LN1@get_aircra:

; 533  : }

  00b8a	5f		 pop	 edi
  00b8b	5e		 pop	 esi
  00b8c	5b		 pop	 ebx
  00b8d	8b e5		 mov	 esp, ebp
  00b8f	5d		 pop	 ebp
  00b90	c2 08 00	 ret	 8
?get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ENDP ; get_aircraft_air_to_surface_scan_group_targets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
;	COMDAT ?aircraft_target_scan@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv262 = -104						; size = 4
tv254 = -100						; size = 4
tv241 = -96						; size = 4
tv214 = -96						; size = 4
tv194 = -96						; size = 4
tv173 = -96						; size = 4
tv154 = -96						; size = 4
tv132 = -96						; size = 4
tv233 = -92						; size = 4
tv220 = -92						; size = 4
tv206 = -92						; size = 4
tv186 = -92						; size = 4
tv166 = -92						; size = 4
tv147 = -92						; size = 4
tv93 = -92						; size = 4
_target_source$ = -24					; size = 4
_target_count$ = -20					; size = 4
_target_group$ = -16					; size = 4
_group$ = -12						; size = 4
_task$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?aircraft_target_scan@@YGXPAUENTITY@@@Z PROC		; aircraft_target_scan, COMDAT

; 169  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 170  : 	aircraft
; 171  : 		*raw;
; 172  : 
; 173  : 	entity
; 174  : 		*task,
; 175  : 		*group,
; 176  : 		*target_group;
; 177  : 
; 178  : 	int
; 179  : 		target_count;
; 180  : 
; 181  : 	task_target_source_types
; 182  : 		target_source;
; 183  : 
; 184  : 	raw = (aircraft *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 185  : 
; 186  : 	raw->target_scan_timer -= get_delta_time (); 

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	f3 0f 10 80 f8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+248]
  0001d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00028	f3 0f 11 81 f8
	00 00 00	 movss	 DWORD PTR [ecx+248], xmm0

; 187  : 		
; 188  : 	if (raw->target_scan_timer > 0.0)

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	f3 0f 5a 80 f8
	00 00 00	 cvtss2sd xmm0, DWORD PTR [eax+248]
  0003b	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00043	76 05		 jbe	 SHORT $LN4@aircraft_t

; 189  : 	{
; 190  : 		return;

  00045	e9 8c 04 00 00	 jmp	 $LN1@aircraft_t
$LN4@aircraft_t:

; 191  : 	}
; 192  : 
; 193  : 	//
; 194  : 	// reset target_scan_timer (okay to use a random number as this is a server only variable)
; 195  : 	//
; 196  : 		
; 197  : 	raw->target_scan_timer = aircraft_database[raw->mob.sub_type].target_scan_delay * ((frand1 () + 1.0) * 0.5);

  0004a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00054	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00059	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00064	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00067	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0006d	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00071	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00079	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00081	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00089	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0008c	69 02 f4 00 00
	00		 imul	 eax, DWORD PTR [edx], 244
  00092	f3 0f 5a 88 b8
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+184]
  0009a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0009e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000a2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000a5	f3 0f 11 81 f8
	00 00 00	 movss	 DWORD PTR [ecx+248], xmm0

; 198  : 		
; 199  : 	//
; 200  : 	// Only task leader of primary task to do targetting
; 201  : 	// (This will stop things landing/taking off from scanning, as well as group members that are already engaging)
; 202  : 	//
; 203  : 
; 204  : 	if (!get_local_entity_int_value (en, INT_TYPE_TASK_LEADER))

  000ad	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b1	74 0a		 je	 SHORT $LN16@aircraft_t
  000b3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	89 4d a4	 mov	 DWORD PTR tv93[ebp], ecx
  000bb	eb 1d		 jmp	 SHORT $LN17@aircraft_t
$LN16@aircraft_t:
  000bd	68 cc 00 00 00	 push	 204			; 000000ccH
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN17@aircraft_t:
  000da	b8 01 00 00 00	 mov	 eax, 1
  000df	85 c0		 test	 eax, eax
  000e1	74 09		 je	 SHORT $LN18@aircraft_t
  000e3	c7 45 a0 dd 00
	00 00		 mov	 DWORD PTR tv132[ebp], 221 ; 000000ddH
  000ea	eb 1d		 jmp	 SHORT $LN19@aircraft_t
$LN18@aircraft_t:
  000ec	68 cc 00 00 00	 push	 204			; 000000ccH
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN19@aircraft_t:
  00109	68 dd 00 00 00	 push	 221			; 000000ddH
  0010e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00111	52		 push	 edx
  00112	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  00119	8b 4d a0	 mov	 ecx, DWORD PTR tv132[ebp]
  0011c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00123	ff d2		 call	 edx
  00125	85 c0		 test	 eax, eax
  00127	75 05		 jne	 SHORT $LN5@aircraft_t

; 205  : 	{
; 206  : 		return;

  00129	e9 a8 03 00 00	 jmp	 $LN1@aircraft_t
$LN5@aircraft_t:

; 207  : 	}
; 208  : 
; 209  : 	task = get_local_entity_current_task (en);

  0012e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?get_local_entity_current_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_current_task
  00137	89 45 f8	 mov	 DWORD PTR _task$[ebp], eax

; 210  : 
; 211  : 	if (!task)

  0013a	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  0013e	75 05		 jne	 SHORT $LN6@aircraft_t

; 212  : 	{
; 213  : 		return;

  00140	e9 91 03 00 00	 jmp	 $LN1@aircraft_t
$LN6@aircraft_t:

; 214  : 	}
; 215  : 
; 216  : 	if (!get_local_entity_int_value (task, INT_TYPE_PRIMARY_TASK))

  00145	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  00149	74 0a		 je	 SHORT $LN20@aircraft_t
  0014b	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  0014e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00150	89 4d a4	 mov	 DWORD PTR tv147[ebp], ecx
  00153	eb 1d		 jmp	 SHORT $LN21@aircraft_t
$LN20@aircraft_t:
  00155	68 d8 00 00 00	 push	 216			; 000000d8H
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00165	52		 push	 edx
  00166	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016b	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN21@aircraft_t:
  00172	b8 01 00 00 00	 mov	 eax, 1
  00177	85 c0		 test	 eax, eax
  00179	74 09		 je	 SHORT $LN22@aircraft_t
  0017b	c7 45 a0 a3 00
	00 00		 mov	 DWORD PTR tv154[ebp], 163 ; 000000a3H
  00182	eb 1d		 jmp	 SHORT $LN23@aircraft_t
$LN22@aircraft_t:
  00184	68 d8 00 00 00	 push	 216			; 000000d8H
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019a	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN23@aircraft_t:
  001a1	68 a3 00 00 00	 push	 163			; 000000a3H
  001a6	8b 55 f8	 mov	 edx, DWORD PTR _task$[ebp]
  001a9	52		 push	 edx
  001aa	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv147[ebp], 1116
  001b1	8b 4d a0	 mov	 ecx, DWORD PTR tv154[ebp]
  001b4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001bb	ff d2		 call	 edx
  001bd	85 c0		 test	 eax, eax
  001bf	75 05		 jne	 SHORT $LN7@aircraft_t

; 217  : 	{
; 218  : 		return;

  001c1	e9 10 03 00 00	 jmp	 $LN1@aircraft_t
$LN7@aircraft_t:

; 219  : 	}
; 220  : 
; 221  : 	//
; 222  : 	// If task leader human, don't do any scanning
; 223  : 	//
; 224  : 
; 225  : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  001c6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001ca	74 0a		 je	 SHORT $LN24@aircraft_t
  001cc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001cf	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d1	89 4d a4	 mov	 DWORD PTR tv166[ebp], ecx
  001d4	eb 1d		 jmp	 SHORT $LN25@aircraft_t
$LN24@aircraft_t:
  001d6	68 e1 00 00 00	 push	 225			; 000000e1H
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e6	52		 push	 edx
  001e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ec	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN25@aircraft_t:
  001f3	b8 01 00 00 00	 mov	 eax, 1
  001f8	85 c0		 test	 eax, eax
  001fa	74 09		 je	 SHORT $LN26@aircraft_t
  001fc	c7 45 a0 9c 00
	00 00		 mov	 DWORD PTR tv173[ebp], 156 ; 0000009cH
  00203	eb 1d		 jmp	 SHORT $LN27@aircraft_t
$LN26@aircraft_t:
  00205	68 e1 00 00 00	 push	 225			; 000000e1H
  0020a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00215	51		 push	 ecx
  00216	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021b	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN27@aircraft_t:
  00222	68 9c 00 00 00	 push	 156			; 0000009cH
  00227	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0022a	52		 push	 edx
  0022b	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv166[ebp], 1116
  00232	8b 4d a0	 mov	 ecx, DWORD PTR tv173[ebp]
  00235	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0023c	ff d2		 call	 edx
  0023e	85 c0		 test	 eax, eax
  00240	74 05		 je	 SHORT $LN8@aircraft_t

; 226  : 	{
; 227  : 		return;

  00242	e9 8f 02 00 00	 jmp	 $LN1@aircraft_t
$LN8@aircraft_t:

; 228  : 	}
; 229  : 
; 230  : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00247	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0024b	74 0a		 je	 SHORT $LN28@aircraft_t
  0024d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	89 4d a4	 mov	 DWORD PTR tv186[ebp], ecx
  00255	eb 21		 jmp	 SHORT $LN29@aircraft_t
$LN28@aircraft_t:
  00257	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  0025d	83 c2 3d	 add	 edx, 61			; 0000003dH
  00260	52		 push	 edx
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00266	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00271	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN29@aircraft_t:
  00278	b9 01 00 00 00	 mov	 ecx, 1
  0027d	85 c9		 test	 ecx, ecx
  0027f	74 09		 je	 SHORT $LN30@aircraft_t
  00281	c7 45 a0 19 00
	00 00		 mov	 DWORD PTR tv194[ebp], 25 ; 00000019H
  00288	eb 21		 jmp	 SHORT $LN31@aircraft_t
$LN30@aircraft_t:
  0028a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  00290	83 c2 3d	 add	 edx, 61			; 0000003dH
  00293	52		 push	 edx
  00294	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a4	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN31@aircraft_t:
  002ab	6a 19		 push	 25			; 00000019H
  002ad	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002b0	51		 push	 ecx
  002b1	69 55 a4 b4 00
	00 00		 imul	 edx, DWORD PTR tv186[ebp], 180
  002b8	8b 45 a0	 mov	 eax, DWORD PTR tv194[ebp]
  002bb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002c2	ff d1		 call	 ecx
  002c4	89 45 f4	 mov	 DWORD PTR _group$[ebp], eax

; 231  : 
; 232  : 	//
; 233  : 	// What type of target does task allow 
; 234  : 	//
; 235  : 
; 236  : 	target_source = (task_target_source_types) get_local_entity_int_value (task, INT_TYPE_TASK_TARGET_SOURCE);

  002c7	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  002cb	74 0a		 je	 SHORT $LN32@aircraft_t
  002cd	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  002d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d2	89 4d a4	 mov	 DWORD PTR tv206[ebp], ecx
  002d5	eb 21		 jmp	 SHORT $LN33@aircraft_t
$LN32@aircraft_t:
  002d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  002dd	83 c2 43	 add	 edx, 67			; 00000043H
  002e0	52		 push	 edx
  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  002e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f1	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv206[ebp], 0
$LN33@aircraft_t:
  002f8	b9 01 00 00 00	 mov	 ecx, 1
  002fd	85 c9		 test	 ecx, ecx
  002ff	74 09		 je	 SHORT $LN34@aircraft_t
  00301	c7 45 a0 e5 00
	00 00		 mov	 DWORD PTR tv214[ebp], 229 ; 000000e5H
  00308	eb 21		 jmp	 SHORT $LN35@aircraft_t
$LN34@aircraft_t:
  0030a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  00310	83 c2 43	 add	 edx, 67			; 00000043H
  00313	52		 push	 edx
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00319	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0031e	50		 push	 eax
  0031f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00324	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv214[ebp], 0
$LN35@aircraft_t:
  0032b	68 e5 00 00 00	 push	 229			; 000000e5H
  00330	8b 4d f8	 mov	 ecx, DWORD PTR _task$[ebp]
  00333	51		 push	 ecx
  00334	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv206[ebp], 1116
  0033b	8b 45 a0	 mov	 eax, DWORD PTR tv214[ebp]
  0033e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00345	ff d1		 call	 ecx
  00347	89 45 e8	 mov	 DWORD PTR _target_source$[ebp], eax

; 237  : 
; 238  : 	switch (target_source)

  0034a	8b 45 e8	 mov	 eax, DWORD PTR _target_source$[ebp]
  0034d	89 45 a4	 mov	 DWORD PTR tv220[ebp], eax
  00350	83 7d a4 04	 cmp	 DWORD PTR tv220[ebp], 4
  00354	0f 87 7c 01 00
	00		 ja	 $LN2@aircraft_t
  0035a	8b 4d a4	 mov	 ecx, DWORD PTR tv220[ebp]
  0035d	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN44@aircraft_t[ecx*4]
$LN9@aircraft_t:

; 239  : 	{
; 240  : 		case TASK_TARGET_SOURCE_TASK_OBJECTIVE:
; 241  : 		{
; 242  : 			return; 

  00364	e9 6d 01 00 00	 jmp	 $LN1@aircraft_t
$LN10@aircraft_t:

; 243  : 		}
; 244  : 
; 245  : 		case TASK_TARGET_SOURCE_SCAN_ALL:
; 246  : 		case TASK_TARGET_SOURCE_SCAN_AIR:
; 247  : 		{
; 248  : 			//
; 249  : 			// Just notify force entity of targets
; 250  : 			//
; 251  : 
; 252  : 			target_group = get_aircraft_air_to_air_scan_group_targets (en, &target_count);

  00369	8d 45 ec	 lea	 eax, DWORD PTR _target_count$[ebp]
  0036c	50		 push	 eax
  0036d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00370	51		 push	 ecx
  00371	e8 00 00 00 00	 call	 ?get_aircraft_air_to_air_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_aircraft_air_to_air_scan_group_targets
  00376	89 45 f0	 mov	 DWORD PTR _target_group$[ebp], eax

; 253  : 
; 254  : 			if ((target_group) && (target_count > 0))

  00379	83 7d f0 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  0037d	0f 84 20 01 00
	00		 je	 $LN11@aircraft_t
  00383	83 7d ec 00	 cmp	 DWORD PTR _target_count$[ebp], 0
  00387	0f 8e 16 01 00
	00		 jle	 $LN11@aircraft_t

; 255  : 			{
; 256  : 				ai_log ("AC_TGT: %s doing %s Scanned %d air targets", get_local_entity_string (en, STRING_TYPE_FULL_NAME), get_local_entity_string (task, STRING_TYPE_FULL_NAME), target_count);

  0038d	83 7d f8 00	 cmp	 DWORD PTR _task$[ebp], 0
  00391	74 0a		 je	 SHORT $LN36@aircraft_t
  00393	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  00396	8b 08		 mov	 ecx, DWORD PTR [eax]
  00398	89 4d a4	 mov	 DWORD PTR tv233[ebp], ecx
  0039b	eb 21		 jmp	 SHORT $LN37@aircraft_t
$LN36@aircraft_t:
  0039d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  003a3	83 c2 57	 add	 edx, 87			; 00000057H
  003a6	52		 push	 edx
  003a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b1	50		 push	 eax
  003b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003b7	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv233[ebp], 0
$LN37@aircraft_t:
  003be	b9 01 00 00 00	 mov	 ecx, 1
  003c3	85 c9		 test	 ecx, ecx
  003c5	74 09		 je	 SHORT $LN38@aircraft_t
  003c7	c7 45 a0 03 00
	00 00		 mov	 DWORD PTR tv241[ebp], 3
  003ce	eb 21		 jmp	 SHORT $LN39@aircraft_t
$LN38@aircraft_t:
  003d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  003d6	83 c2 57	 add	 edx, 87			; 00000057H
  003d9	52		 push	 edx
  003da	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  003df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  003e4	50		 push	 eax
  003e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ea	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv241[ebp], 0
$LN39@aircraft_t:
  003f1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003f5	74 0a		 je	 SHORT $LN40@aircraft_t
  003f7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003fa	8b 11		 mov	 edx, DWORD PTR [ecx]
  003fc	89 55 9c	 mov	 DWORD PTR tv254[ebp], edx
  003ff	eb 21		 jmp	 SHORT $LN41@aircraft_t
$LN40@aircraft_t:
  00401	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  00406	83 c0 57	 add	 eax, 87			; 00000057H
  00409	50		 push	 eax
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00415	51		 push	 ecx
  00416	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0041b	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv254[ebp], 0
$LN41@aircraft_t:
  00422	ba 01 00 00 00	 mov	 edx, 1
  00427	85 d2		 test	 edx, edx
  00429	74 09		 je	 SHORT $LN42@aircraft_t
  0042b	c7 45 98 03 00
	00 00		 mov	 DWORD PTR tv262[ebp], 3
  00432	eb 21		 jmp	 SHORT $LN43@aircraft_t
$LN42@aircraft_t:
  00434	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??aircraft_target_scan@@YGXPAUENTITY@@@Z@4JA
  00439	83 c0 57	 add	 eax, 87			; 00000057H
  0043c	50		 push	 eax
  0043d	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@IECBMHDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00442	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00448	51		 push	 ecx
  00449	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044e	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv262[ebp], 0
$LN43@aircraft_t:
  00455	8b 55 ec	 mov	 edx, DWORD PTR _target_count$[ebp]
  00458	52		 push	 edx
  00459	6a 03		 push	 3
  0045b	8b 45 f8	 mov	 eax, DWORD PTR _task$[ebp]
  0045e	50		 push	 eax
  0045f	6b 4d a4 34	 imul	 ecx, DWORD PTR tv233[ebp], 52
  00463	8b 55 a0	 mov	 edx, DWORD PTR tv241[ebp]
  00466	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[ecx+edx*4]
  0046d	ff d0		 call	 eax
  0046f	50		 push	 eax
  00470	6a 03		 push	 3
  00472	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00475	51		 push	 ecx
  00476	6b 55 9c 34	 imul	 edx, DWORD PTR tv254[ebp], 52
  0047a	8b 45 98	 mov	 eax, DWORD PTR tv262[ebp]
  0047d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[edx+eax*4]
  00484	ff d1		 call	 ecx
  00486	50		 push	 eax
  00487	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@OLLKNOIO@AC_TGT?3?5?$CFs?5doing?5?$CFs?5Scanned?5?$CFd?5@
  0048c	e8 00 00 00 00	 call	 ?ai_log@@YAXPBDZZ	; ai_log
  00491	83 c4 10	 add	 esp, 16			; 00000010H

; 257  : 
; 258  : 				#if DEBUG_MODULE
; 259  : 	
; 260  : 				debug_log ("AC_TGT: %s(%d) Scanned %d air group targets", entity_type_names [en->type], en, target_count);
; 261  : 	
; 262  : 				#endif
; 263  : 	
; 264  : 				/////////////////////////////////////////////////////////////////
; 265  : 				//
; 266  : 				// SPECIAL_EFFECT_HOOK FOR AIR TARGETS SIGHTED
; 267  : 				//
; 268  : 				/////////////////////////////////////////////////////////////////
; 269  : 
; 270  : 				/////////////////////////////////////////////////////////////////
; 271  : 				//
; 272  : 				//
; 273  : 				/////////////////////////////////////////////////////////////////
; 274  : 
; 275  : 				engage_targets_in_group (group, target_group, TRUE);

  00494	6a 01		 push	 1
  00496	8b 45 f0	 mov	 eax, DWORD PTR _target_group$[ebp]
  00499	50		 push	 eax
  0049a	8b 4d f4	 mov	 ecx, DWORD PTR _group$[ebp]
  0049d	51		 push	 ecx
  0049e	e8 00 00 00 00	 call	 ?engage_targets_in_group@@YGHPAUENTITY@@0H@Z ; engage_targets_in_group
$LN11@aircraft_t:

; 276  : 			}
; 277  : 
; 278  : 			if (target_source == TASK_TARGET_SOURCE_SCAN_AIR)

  004a3	83 7d e8 00	 cmp	 DWORD PTR _target_source$[ebp], 0
  004a7	75 02		 jne	 SHORT $LN12@aircraft_t

; 279  : 			{
; 280  : 
; 281  : 				break;

  004a9	eb 2b		 jmp	 SHORT $LN2@aircraft_t
$LN12@aircraft_t:

; 282  : 			}
; 283  : 		}
; 284  : 
; 285  : 		case TASK_TARGET_SOURCE_SCAN_GROUND:
; 286  : 		{
; 287  : 			//
; 288  : 			// Just notify force entity of targets
; 289  : 			//
; 290  : 
; 291  : 			#if DEBUG_MODULE
; 292  : 
; 293  : 			debug_log ("AC_TGT: %s(%d) Scanning ground", entity_type_names [en->type], en);
; 294  : 
; 295  : 			#endif
; 296  : 
; 297  : 			target_group = get_aircraft_air_to_surface_scan_group_targets (en, &target_count);

  004ab	8d 45 ec	 lea	 eax, DWORD PTR _target_count$[ebp]
  004ae	50		 push	 eax
  004af	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004b2	51		 push	 ecx
  004b3	e8 00 00 00 00	 call	 ?get_aircraft_air_to_surface_scan_group_targets@@YGPAUENTITY@@PAU1@PAH@Z ; get_aircraft_air_to_surface_scan_group_targets
  004b8	89 45 f0	 mov	 DWORD PTR _target_group$[ebp], eax

; 298  : 
; 299  : 			if ((target_group) && (target_count > 0))

  004bb	83 7d f0 00	 cmp	 DWORD PTR _target_group$[ebp], 0
  004bf	74 15		 je	 SHORT $LN14@aircraft_t
  004c1	83 7d ec 00	 cmp	 DWORD PTR _target_count$[ebp], 0
  004c5	7e 0f		 jle	 SHORT $LN14@aircraft_t

; 300  : 			{
; 301  : 	
; 302  : 				#if DEBUG_MODULE
; 303  : 	
; 304  : 				debug_log ("AC_TGT: %s(%d) Scanned %d ground group targets %s", entity_type_names [en->type], en, target_count, entity_sub_type_group_names [get_local_entity_int_value (tgt, INT_TYPE_ENTITY_SUB_TYPE)]);
; 305  : 	
; 306  : 				#endif
; 307  : 
; 308  : 				/////////////////////////////////////////////////////////////////
; 309  : 				//
; 310  : 				// SPECIAL_EFFECT_HOOK FOR GROUND TARGETS SIGHTED
; 311  : 				//
; 312  : 				/////////////////////////////////////////////////////////////////
; 313  : 	
; 314  : 				/////////////////////////////////////////////////////////////////
; 315  : 				//
; 316  : 				//
; 317  : 				/////////////////////////////////////////////////////////////////
; 318  : 
; 319  : 				engage_targets_in_group (group, target_group, TRUE);

  004c7	6a 01		 push	 1
  004c9	8b 45 f0	 mov	 eax, DWORD PTR _target_group$[ebp]
  004cc	50		 push	 eax
  004cd	8b 4d f4	 mov	 ecx, DWORD PTR _group$[ebp]
  004d0	51		 push	 ecx
  004d1	e8 00 00 00 00	 call	 ?engage_targets_in_group@@YGHPAUENTITY@@0H@Z ; engage_targets_in_group
$LN14@aircraft_t:
$LN2@aircraft_t:
$LN1@aircraft_t:

; 320  : 			}
; 321  : 
; 322  : 			break;
; 323  : 		}
; 324  : 	}
; 325  : }

  004d6	5f		 pop	 edi
  004d7	5e		 pop	 esi
  004d8	5b		 pop	 ebx
  004d9	8b e5		 mov	 esp, ebp
  004db	5d		 pop	 ebp
  004dc	c2 04 00	 ret	 4
  004df	90		 npad	 1
$LN44@aircraft_t:
  004e0	00 00 00 00	 DD	 $LN10@aircraft_t
  004e4	00 00 00 00	 DD	 $LN10@aircraft_t
  004e8	00 00 00 00	 DD	 $LN12@aircraft_t
  004ec	00 00 00 00	 DD	 $LN2@aircraft_t
  004f0	00 00 00 00	 DD	 $LN9@aircraft_t
?aircraft_target_scan@@YGXPAUENTITY@@@Z ENDP		; aircraft_target_scan
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\ac_tgt.c
;	COMDAT ?update_aircraft_target_scan@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
?update_aircraft_target_scan@@YGXPAUENTITY@@@Z PROC	; update_aircraft_target_scan, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 158  : 	if (check_aircraft_target_scan_valid (en))

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?check_aircraft_target_scan_valid@@YGHPAUENTITY@@@Z ; check_aircraft_target_scan_valid
  00012	85 c0		 test	 eax, eax
  00014	74 09		 je	 SHORT $LN1@update_air

; 159  : 	{
; 160  : 		aircraft_target_scan (en);

  00016	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?aircraft_target_scan@@YGXPAUENTITY@@@Z ; aircraft_target_scan
$LN1@update_air:

; 161  : 	}
; 162  : }

  0001f	5f		 pop	 edi
  00020	5e		 pop	 esi
  00021	5b		 pop	 ebx
  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c2 04 00	 ret	 4
?update_aircraft_target_scan@@YGXPAUENTITY@@@Z ENDP	; update_aircraft_target_scan
_TEXT	ENDS
END
