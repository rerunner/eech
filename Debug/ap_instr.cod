; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CA@JPJNIOCL@Cannot?5draw?5instrument?5on?5panel@ ; `string'
;	COMDAT ??_C@_0CA@JPJNIOCL@Cannot?5draw?5instrument?5on?5panel@
CONST	SEGMENT
??_C@_0CA@JPJNIOCL@Cannot?5draw?5instrument?5on?5panel@ DB 'Cannot draw i'
	DB	'nstrument on panel', 00H			; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_fmodf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?initialise_apache_instrument_colours@@YGXXZ	; initialise_apache_instrument_colours
PUBLIC	?set_apache_instrument_colours@@YGXXZ		; set_apache_instrument_colours
PUBLIC	?draw_apache_fixed_cockpit_airspeed_indicator_needle@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_fixed_cockpit_airspeed_indicator_needle
PUBLIC	?draw_apache_fixed_cockpit_barometric_altimeter_needle@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_fixed_cockpit_barometric_altimeter_needle
PUBLIC	?draw_apache_fixed_cockpit_barometric_altimeter_digits@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_fixed_cockpit_barometric_altimeter_digits
PUBLIC	?draw_apache_fixed_cockpit_clock_hands@@YGXW4COCKPIT_PANELS@@@Z ; draw_apache_fixed_cockpit_clock_hands
PUBLIC	?get_apache_virtual_cockpit_adi_angles@@YGXQAY02MPAM11@Z ; get_apache_virtual_cockpit_adi_angles
PUBLIC	?get_apache_virtual_cockpit_adi_slip_indicator_needle_value@@YGMXZ ; get_apache_virtual_cockpit_adi_slip_indicator_needle_value
PUBLIC	?get_apache_virtual_cockpit_airspeed_indicator_needle_value@@YGMXZ ; get_apache_virtual_cockpit_airspeed_indicator_needle_value
PUBLIC	?get_apache_virtual_cockpit_barometric_altimeter_needle_value@@YGMXZ ; get_apache_virtual_cockpit_barometric_altimeter_needle_value
PUBLIC	?get_apache_virtual_cockpit_clock_hand_values@@YGXPAM00@Z ; get_apache_virtual_cockpit_clock_hand_values
PUBLIC	?draw_apache_altitude_counter@@YGXXZ		; draw_apache_altitude_counter
PUBLIC	?initialise_altitude_counter@@YGXXZ		; initialise_altitude_counter
PUBLIC	?deinitialise_altitude_counter@@YGXXZ		; deinitialise_altitude_counter
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??get_clock_hand_values@@YGXPAM00@Z@4JA ; `get_clock_hand_values'::`1'::__LINE__Var
PUBLIC	??_C@_04OGKJMPGK@?$CF02d@			; `string'
PUBLIC	__real@38d1b717
PUBLIC	__real@3a83126f
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3f91111111111111
PUBLIC	__real@3f91df46a0000000
PUBLIC	__real@3f947ae147ae147b
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc3333333333333
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fd6571848000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe0c15236000000
PUBLIC	__real@3fefd5b5cd000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff0c15236000000
PUBLIC	__real@3ff226c3ba800000
PUBLIC	__real@3ff26e40d5000000
PUBLIC	__real@3ff85d84
PUBLIC	__real@3ff921fb51000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400056168e400000
PUBLIC	__real@4004866b1bc00000
PUBLIC	__real@4004f1a6c3800000
PUBLIC	__real@400d524fde800000
PUBLIC	__real@400dbd8b86400000
PUBLIC	__real@4012d97c7cc00000
PUBLIC	__real@4018000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@403e000000000000
PUBLIC	__real@40400000
PUBLIC	__real@4044000000000000
PUBLIC	__real@4049000000000000
PUBLIC	__real@404e000000000000
PUBLIC	__real@4051f948
PUBLIC	__real@4059000000000000
PUBLIC	__real@4062c00000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@406f400000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@407b600000000000
PUBLIC	__real@407baffbe76c8b44
PUBLIC	__real@4082180000000000
PUBLIC	__real@4082380000000000
PUBLIC	__real@40825ffdf3b645a2
PUBLIC	__real@408f400000000000
PUBLIC	__real@40a00000
PUBLIC	__real@40f86a0000000000
PUBLIC	__real@41300000
PUBLIC	__real@41400000
PUBLIC	__real@41500000
PUBLIC	__real@41800000
PUBLIC	__real@41a00000
PUBLIC	__real@42000000
PUBLIC	__real@42340000
PUBLIC	__real@42480000
PUBLIC	__real@425c0000
PUBLIC	__real@42920000
PUBLIC	__real@42c80000
PUBLIC	__real@437a0000
PUBLIC	__real@438c8000
PUBLIC	__real@439e8000
PUBLIC	__real@43a68000
PUBLIC	__real@43ae8000
PUBLIC	__real@43c10000
PUBLIC	__real@43c20000
PUBLIC	__real@43c48000
PUBLIC	__real@43cd8000
PUBLIC	__real@43d70000
PUBLIC	__real@43dc0000
PUBLIC	__real@43eb8000
PUBLIC	__real@44054000
PUBLIC	__real@44134000
PUBLIC	__real@4415c000
PUBLIC	__real@44610000
PUBLIC	__real@44750000
PUBLIC	__real@447a0000
PUBLIC	__real@461bf000
PUBLIC	__real@461c4000
PUBLIC	__real@47c35000
PUBLIC	__real@bf79bc65c28f5c29
PUBLIC	__real@bfbaceea00000000
PUBLIC	__real@bfe0c15240000000
PUBLIC	__real@c03e000000000000
PUBLIC	__real@c2200000
PUBLIC	__real@c2480000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_fmod:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_system_texture_screen
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?set_pixel@@YGXHHUREAL_COLOUR@@@Z:PROC		; set_pixel
EXTRN	?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z:PROC ; flush_screen_texture_graphics
EXTRN	?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z:PROC ; set_mono_font_type
EXTRN	?set_mono_font_position@@YGXMM@Z:PROC		; set_mono_font_position
EXTRN	?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z:PROC	; set_mono_font_colour
EXTRN	?print_mono_font_char@@YGXD@Z:PROC		; print_mono_font_char
EXTRN	?print_mono_font_string@@YGXPBD@Z:PROC		; print_mono_font_string
EXTRN	?get_analogue_clock_values@@YGXMPAM00@Z:PROC	; get_analogue_clock_values
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?custom_3d_models@@3Uinstalled_custom_3d_models@@A:QWORD ; custom_3d_models
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?ix_640_480@@3HA:DWORD				; ix_640_480
EXTRN	?iy_640_480@@3HA:DWORD				; iy_640_480
EXTRN	?fx_640_480@@3MA:DWORD				; fx_640_480
EXTRN	?fy_640_480@@3MA:DWORD				; fy_640_480
EXTRN	?test_cockpit_instruments@@3HA:DWORD		; test_cockpit_instruments
EXTRN	?draw_virtual_cockpit_needles_on_fixed_cockpits@@3HA:DWORD ; draw_virtual_cockpit_needles_on_fixed_cockpits
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?white_needle_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; white_needle_colour
?red_needle_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; red_needle_colour
?white_digit_colour@@3UREAL_COLOUR@@A DD 01H DUP (?)	; white_digit_colour
?white_needle_colour_level1@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_needle_colour_level1
?red_needle_colour_level1@@3UREAL_COLOUR@@A DD 01H DUP (?) ; red_needle_colour_level1
?white_digit_colour_level1@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_digit_colour_level1
?white_needle_colour_level2@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_needle_colour_level2
?red_needle_colour_level2@@3UREAL_COLOUR@@A DD 01H DUP (?) ; red_needle_colour_level2
?white_digit_colour_level2@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_digit_colour_level2
?white_needle_colour_level3@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_needle_colour_level3
?red_needle_colour_level3@@3UREAL_COLOUR@@A DD 01H DUP (?) ; red_needle_colour_level3
?white_digit_colour_level3@@3UREAL_COLOUR@@A DD 01H DUP (?) ; white_digit_colour_level3
?altitude_counter_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; altitude_counter_screen
?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA DD 01H DUP (?) ; `get_barometric_altimeter_needle_value'::`5'::value
?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA DD 01H DUP (?) ; `get_barometric_altimeter_digital_value'::`5'::value
?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA DD 01H DUP (?) ; `get_clock_hand_values'::`5'::hour_value
?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA DD 01H DUP (?) ; `get_clock_hand_values'::`5'::second_value
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c2480000
CONST	SEGMENT
__real@c2480000 DD 0c2480000r			; -50
CONST	ENDS
;	COMDAT __real@c2200000
CONST	SEGMENT
__real@c2200000 DD 0c2200000r			; -40
CONST	ENDS
;	COMDAT __real@c03e000000000000
CONST	SEGMENT
__real@c03e000000000000 DQ 0c03e000000000000r	; -30
CONST	ENDS
;	COMDAT __real@bfe0c15240000000
CONST	SEGMENT
__real@bfe0c15240000000 DQ 0bfe0c15240000000r	; -0.523599
CONST	ENDS
;	COMDAT __real@bfbaceea00000000
CONST	SEGMENT
__real@bfbaceea00000000 DQ 0bfbaceea00000000r	; -0.10472
CONST	ENDS
;	COMDAT __real@bf79bc65c28f5c29
CONST	SEGMENT
__real@bf79bc65c28f5c29 DQ 0bf79bc65c28f5c29r	; -0.00628319
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@461c4000
CONST	SEGMENT
__real@461c4000 DD 0461c4000r			; 10000
CONST	ENDS
;	COMDAT __real@461bf000
CONST	SEGMENT
__real@461bf000 DD 0461bf000r			; 9980
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@44750000
CONST	SEGMENT
__real@44750000 DD 044750000r			; 980
CONST	ENDS
;	COMDAT __real@44610000
CONST	SEGMENT
__real@44610000 DD 044610000r			; 900
CONST	ENDS
;	COMDAT __real@4415c000
CONST	SEGMENT
__real@4415c000 DD 04415c000r			; 599
CONST	ENDS
;	COMDAT __real@44134000
CONST	SEGMENT
__real@44134000 DD 044134000r			; 589
CONST	ENDS
;	COMDAT __real@44054000
CONST	SEGMENT
__real@44054000 DD 044054000r			; 533
CONST	ENDS
;	COMDAT __real@43eb8000
CONST	SEGMENT
__real@43eb8000 DD 043eb8000r			; 471
CONST	ENDS
;	COMDAT __real@43dc0000
CONST	SEGMENT
__real@43dc0000 DD 043dc0000r			; 440
CONST	ENDS
;	COMDAT __real@43d70000
CONST	SEGMENT
__real@43d70000 DD 043d70000r			; 430
CONST	ENDS
;	COMDAT __real@43cd8000
CONST	SEGMENT
__real@43cd8000 DD 043cd8000r			; 411
CONST	ENDS
;	COMDAT __real@43c48000
CONST	SEGMENT
__real@43c48000 DD 043c48000r			; 393
CONST	ENDS
;	COMDAT __real@43c20000
CONST	SEGMENT
__real@43c20000 DD 043c20000r			; 388
CONST	ENDS
;	COMDAT __real@43c10000
CONST	SEGMENT
__real@43c10000 DD 043c10000r			; 386
CONST	ENDS
;	COMDAT __real@43ae8000
CONST	SEGMENT
__real@43ae8000 DD 043ae8000r			; 349
CONST	ENDS
;	COMDAT __real@43a68000
CONST	SEGMENT
__real@43a68000 DD 043a68000r			; 333
CONST	ENDS
;	COMDAT __real@439e8000
CONST	SEGMENT
__real@439e8000 DD 0439e8000r			; 317
CONST	ENDS
;	COMDAT __real@438c8000
CONST	SEGMENT
__real@438c8000 DD 0438c8000r			; 281
CONST	ENDS
;	COMDAT __real@437a0000
CONST	SEGMENT
__real@437a0000 DD 0437a0000r			; 250
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42920000
CONST	SEGMENT
__real@42920000 DD 042920000r			; 73
CONST	ENDS
;	COMDAT __real@425c0000
CONST	SEGMENT
__real@425c0000 DD 0425c0000r			; 55
CONST	ENDS
;	COMDAT __real@42480000
CONST	SEGMENT
__real@42480000 DD 042480000r			; 50
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@41800000
CONST	SEGMENT
__real@41800000 DD 041800000r			; 16
CONST	ENDS
;	COMDAT __real@41500000
CONST	SEGMENT
__real@41500000 DD 041500000r			; 13
CONST	ENDS
;	COMDAT __real@41400000
CONST	SEGMENT
__real@41400000 DD 041400000r			; 12
CONST	ENDS
;	COMDAT __real@41300000
CONST	SEGMENT
__real@41300000 DD 041300000r			; 11
CONST	ENDS
;	COMDAT __real@40f86a0000000000
CONST	SEGMENT
__real@40f86a0000000000 DQ 040f86a0000000000r	; 100000
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@40825ffdf3b645a2
CONST	SEGMENT
__real@40825ffdf3b645a2 DQ 040825ffdf3b645a2r	; 587.999
CONST	ENDS
;	COMDAT __real@4082380000000000
CONST	SEGMENT
__real@4082380000000000 DQ 04082380000000000r	; 583
CONST	ENDS
;	COMDAT __real@4082180000000000
CONST	SEGMENT
__real@4082180000000000 DQ 04082180000000000r	; 579
CONST	ENDS
;	COMDAT __real@407baffbe76c8b44
CONST	SEGMENT
__real@407baffbe76c8b44 DQ 0407baffbe76c8b44r	; 442.999
CONST	ENDS
;	COMDAT __real@407b600000000000
CONST	SEGMENT
__real@407b600000000000 DQ 0407b600000000000r	; 438
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@406f400000000000
CONST	SEGMENT
__real@406f400000000000 DQ 0406f400000000000r	; 250
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4062c00000000000
CONST	SEGMENT
__real@4062c00000000000 DQ 04062c00000000000r	; 150
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4051f948
CONST	SEGMENT
__real@4051f948 DD 04051f948r			; 3.28084
CONST	ENDS
;	COMDAT __real@404e000000000000
CONST	SEGMENT
__real@404e000000000000 DQ 0404e000000000000r	; 60
CONST	ENDS
;	COMDAT __real@4049000000000000
CONST	SEGMENT
__real@4049000000000000 DQ 04049000000000000r	; 50
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@403e000000000000
CONST	SEGMENT
__real@403e000000000000 DQ 0403e000000000000r	; 30
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4012d97c7cc00000
CONST	SEGMENT
__real@4012d97c7cc00000 DQ 04012d97c7cc00000r	; 4.71239
CONST	ENDS
;	COMDAT __real@400dbd8b86400000
CONST	SEGMENT
__real@400dbd8b86400000 DQ 0400dbd8b86400000r	; 3.71755
CONST	ENDS
;	COMDAT __real@400d524fde800000
CONST	SEGMENT
__real@400d524fde800000 DQ 0400d524fde800000r	; 3.66519
CONST	ENDS
;	COMDAT __real@4004f1a6c3800000
CONST	SEGMENT
__real@4004f1a6c3800000 DQ 04004f1a6c3800000r	; 2.61799
CONST	ENDS
;	COMDAT __real@4004866b1bc00000
CONST	SEGMENT
__real@4004866b1bc00000 DQ 04004866b1bc00000r	; 2.56563
CONST	ENDS
;	COMDAT __real@400056168e400000
CONST	SEGMENT
__real@400056168e400000 DQ 0400056168e400000r	; 2.04204
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff921fb51000000
CONST	SEGMENT
__real@3ff921fb51000000 DQ 03ff921fb51000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff85d84
CONST	SEGMENT
__real@3ff85d84 DD 03ff85d84r			; 1.94035
CONST	ENDS
;	COMDAT __real@3ff26e40d5000000
CONST	SEGMENT
__real@3ff26e40d5000000 DQ 03ff26e40d5000000r	; 1.15192
CONST	ENDS
;	COMDAT __real@3ff226c3ba800000
CONST	SEGMENT
__real@3ff226c3ba800000 DQ 03ff226c3ba800000r	; 1.13446
CONST	ENDS
;	COMDAT __real@3ff0c15236000000
CONST	SEGMENT
__real@3ff0c15236000000 DQ 03ff0c15236000000r	; 1.0472
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fefd5b5cd000000
CONST	SEGMENT
__real@3fefd5b5cd000000 DQ 03fefd5b5cd000000r	; 0.994838
CONST	ENDS
;	COMDAT __real@3fe0c15236000000
CONST	SEGMENT
__real@3fe0c15236000000 DQ 03fe0c15236000000r	; 0.523599
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd6571848000000
CONST	SEGMENT
__real@3fd6571848000000 DQ 03fd6571848000000r	; 0.349066
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3f947ae147ae147b
CONST	SEGMENT
__real@3f947ae147ae147b DQ 03f947ae147ae147br	; 0.02
CONST	ENDS
;	COMDAT __real@3f91df46a0000000
CONST	SEGMENT
__real@3f91df46a0000000 DQ 03f91df46a0000000r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f91111111111111
CONST	SEGMENT
__real@3f91111111111111 DQ 03f91111111111111r	; 0.0166667
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT ??_C@_04OGKJMPGK@?$CF02d@
CONST	SEGMENT
??_C@_04OGKJMPGK@?$CF02d@ DB '%02d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_clock_hand_values@@YGXPAM00@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_clock_hand_values@@YGXPAM00@Z@4JA DD 0155H ; `get_clock_hand_values'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_'
	DB	'instr.c', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?instrument_error@@3PADA DD FLAT:??_C@_0CA@JPJNIOCL@Cannot?5draw?5instrument?5on?5panel@ ; instrument_error
?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA DD 0c2200000r ; -40 ; `get_adi_slip_indicator_needle_value'::`5'::value
?airspeed_indicator_needle_scale_down_20_ahead@@3PAUSCALE_DATA@@A DW 0215H ; airspeed_indicator_needle_scale_down_20_ahead
	DW	019cH
	DD	000000000r			; 0
	DW	0216H
	DW	019cH
	DD	03ff62762r			; 1.92308
	DW	0217H
	DW	019cH
	DD	040762762r			; 3.84615
	DW	0218H
	DW	019cH
	DD	040b89d8ar			; 5.76923
	DW	0219H
	DW	019cH
	DD	040f62762r			; 7.69231
	DW	021aH
	DW	019dH
	DD	04119d89er			; 9.61539
	DW	021bH
	DW	019dH
	DD	041389d8ar			; 11.5385
	DW	021cH
	DW	019dH
	DD	041576276r			; 13.4615
	DW	021dH
	DW	019dH
	DD	041762762r			; 15.3846
	DW	021eH
	DW	019eH
	DD	0418a7627r			; 17.3077
	DW	021fH
	DW	019eH
	DD	04199d89er			; 19.2308
	DW	0220H
	DW	019eH
	DD	041a93b14r			; 21.1538
	DW	0221H
	DW	019fH
	DD	041b89d8ar			; 23.0769
	DW	0222H
	DW	019fH
	DD	041c80000r			; 25
	DW	0223H
	DW	01a0H
	DD	041d76276r			; 26.9231
	DW	0224H
	DW	01a0H
	DD	041e6c4ecr			; 28.8462
	DW	0225H
	DW	01a1H
	DD	041f62762r			; 30.7692
	DW	0226H
	DW	01a2H
	DD	04202c4ecr			; 32.6923
	DW	0227H
	DW	01a2H
	DD	0420a7627r			; 34.6154
	DW	0228H
	DW	01a3H
	DD	042122762r			; 36.5385
	DW	0229H
	DW	01a4H
	DD	04219d89er			; 38.4615
	DW	022aH
	DW	01a5H
	DD	0422189d9r			; 40.3846
	DW	022bH
	DW	01a6H
	DD	042293b14r			; 42.3077
	DW	022bH
	DW	01a7H
	DD	04230ec4fr			; 44.2308
	DW	022cH
	DW	01a8H
	DD	042389d8ar			; 46.1538
	DW	022dH
	DW	01a9H
	DD	042404ec5r			; 48.0769
	DW	022dH
	DW	01aaH
	DD	042480000r			; 50
	DW	022eH
	DW	01abH
	DD	0424d0000r			; 51.25
	DW	022eH
	DW	01acH
	DD	042520000r			; 52.5
	DW	022fH
	DW	01adH
	DD	042570000r			; 53.75
	DW	022fH
	DW	01aeH
	DD	0425c0000r			; 55
	DW	0230H
	DW	01afH
	DD	042610000r			; 56.25
	DW	0230H
	DW	01b0H
	DD	042660000r			; 57.5
	DW	0230H
	DW	01b1H
	DD	0426b0000r			; 58.75
	DW	0230H
	DW	01b2H
	DD	042700000r			; 60
	DW	0231H
	DW	01b3H
	DD	042750000r			; 61.25
	DW	0231H
	DW	01b4H
	DD	0427a0000r			; 62.5
	DW	0231H
	DW	01b5H
	DD	0427f0000r			; 63.75
	DW	0231H
	DW	01b6H
	DD	042820000r			; 65
	DW	0231H
	DW	01b7H
	DD	042848000r			; 66.25
	DW	0231H
	DW	01b8H
	DD	042870000r			; 67.5
	DW	0231H
	DW	01b9H
	DD	042898000r			; 68.75
	DW	0231H
	DW	01baH
	DD	0428c0000r			; 70
	DW	0231H
	DW	01bbH
	DD	0428e8000r			; 71.25
	DW	0231H
	DW	01bcH
	DD	042910000r			; 72.5
	DW	0231H
	DW	01bdH
	DD	042938000r			; 73.75
	DW	0231H
	DW	01beH
	DD	042960000r			; 75
	DW	0230H
	DW	01bfH
	DD	042988000r			; 76.25
	DW	0230H
	DW	01c0H
	DD	0429b0000r			; 77.5
	DW	0230H
	DW	01c1H
	DD	0429d8000r			; 78.75
	DW	0230H
	DW	01c2H
	DD	042a00000r			; 80
	DW	022fH
	DW	01c3H
	DD	042a28000r			; 81.25
	DW	022fH
	DW	01c4H
	DD	042a50000r			; 82.5
	DW	022eH
	DW	01c5H
	DD	042a78000r			; 83.75
	DW	022eH
	DW	01c6H
	DD	042aa0000r			; 85
	DW	022dH
	DW	01c7H
	DD	042ac8000r			; 86.25
	DW	022dH
	DW	01c8H
	DD	042af0000r			; 87.5
	DW	022cH
	DW	01c9H
	DD	042b18000r			; 88.75
	DW	022bH
	DW	01caH
	DD	042b40000r			; 90
	DW	022aH
	DW	01cbH
	DD	042b68000r			; 91.25
	DW	0229H
	DW	01ccH
	DD	042b90000r			; 92.5
	DW	0228H
	DW	01cdH
	DD	042bb8000r			; 93.75
	DW	0227H
	DW	01ceH
	DD	042be0000r			; 95
	DW	0226H
	DW	01cfH
	DD	042c08000r			; 96.25
	DW	0225H
	DW	01d0H
	DD	042c30000r			; 97.5
	DW	0224H
	DW	01d0H
	DD	042c58000r			; 98.75
	DW	0223H
	DW	01d1H
	DD	042c80000r			; 100
	DW	0222H
	DW	01d1H
	DD	042cb9249r			; 101.786
	DW	0221H
	DW	01d2H
	DD	042cf2492r			; 103.571
	DW	0220H
	DW	01d2H
	DD	042d2b6dbr			; 105.357
	DW	021fH
	DW	01d3H
	DD	042d64925r			; 107.143
	DW	021eH
	DW	01d3H
	DD	042d9db6er			; 108.929
	DW	021dH
	DW	01d3H
	DD	042dd6db7r			; 110.714
	DW	021cH
	DW	01d4H
	DD	042e10000r			; 112.5
	DW	021bH
	DW	01d4H
	DD	042e49249r			; 114.286
	DW	021aH
	DW	01d4H
	DD	042e82492r			; 116.071
	DW	0219H
	DW	01d4H
	DD	042ebb6dbr			; 117.857
	DW	0218H
	DW	01d4H
	DD	042ef4925r			; 119.643
	DW	0217H
	DW	01d4H
	DD	042f2db6er			; 121.429
	DW	0216H
	DW	01d4H
	DD	042f66db7r			; 123.214
	DW	0215H
	DW	01d4H
	DD	042fa0000r			; 125
	DW	0214H
	DW	01d4H
	DD	042fd9249r			; 126.786
	DW	0213H
	DW	01d4H
	DD	043009249r			; 128.571
	DW	0212H
	DW	01d4H
	DD	043025b6er			; 130.357
	DW	0211H
	DW	01d4H
	DD	043042492r			; 132.143
	DW	0210H
	DW	01d4H
	DD	04305edb7r			; 133.929
	DW	020fH
	DW	01d4H
	DD	04307b6dbr			; 135.714
	DW	020eH
	DW	01d4H
	DD	043098000r			; 137.5
	DW	020dH
	DW	01d3H
	DD	0430b4925r			; 139.286
	DW	020cH
	DW	01d3H
	DD	0430d1249r			; 141.071
	DW	020bH
	DW	01d3H
	DD	0430edb6er			; 142.857
	DW	020aH
	DW	01d2H
	DD	04310a492r			; 144.643
	DW	0209H
	DW	01d2H
	DD	043126db7r			; 146.429
	DW	0208H
	DW	01d1H
	DD	0431436dbr			; 148.214
	DW	0207H
	DW	01d1H
	DD	043160000r			; 150
	DW	0206H
	DW	01d0H
	DD	04317ec4fr			; 151.923
	DW	0205H
	DW	01d0H
	DD	04319d89er			; 153.846
	DW	0204H
	DW	01cfH
	DD	0431bc4ecr			; 155.769
	DW	0203H
	DW	01ceH
	DD	0431db13br			; 157.692
	DW	0202H
	DW	01cdH
	DD	0431f9d8ar			; 159.615
	DW	0201H
	DW	01ccH
	DD	0432189d9r			; 161.538
	DW	0200H
	DW	01cbH
	DD	043237627r			; 163.462
	DW	01ffH
	DW	01caH
	DD	043256276r			; 165.385
	DW	01feH
	DW	01c9H
	DD	043274ec5r			; 167.308
	DW	01feH
	DW	01c8H
	DD	043293b14r			; 169.231
	DW	01fdH
	DW	01c7H
	DD	0432b2762r			; 171.154
	DW	01fcH
	DW	01c6H
	DD	0432d13b1r			; 173.077
	DW	01fcH
	DW	01c5H
	DD	0432f0000r			; 175
	DW	01fbH
	DW	01c4H
	DD	04330ec4fr			; 176.923
	DW	01fbH
	DW	01c3H
	DD	04332d89er			; 178.846
	DW	01fbH
	DW	01c2H
	DD	04334c4ecr			; 180.769
	DW	01faH
	DW	01c1H
	DD	04336b13br			; 182.692
	DW	01faH
	DW	01c0H
	DD	043389d8ar			; 184.615
	DW	01faH
	DW	01bfH
	DD	0433a89d9r			; 186.538
	DW	01f9H
	DW	01beH
	DD	0433c7627r			; 188.462
	DW	01f9H
	DW	01bdH
	DD	0433e6276r			; 190.385
	DW	01f9H
	DW	01bcH
	DD	043404ec5r			; 192.308
	DW	01f9H
	DW	01bbH
	DD	043423b14r			; 194.231
	DW	01f9H
	DW	01baH
	DD	043442762r			; 196.154
	DW	01f9H
	DW	01b9H
	DD	0434613b1r			; 198.077
	DW	01f9H
	DW	01b8H
	DD	043480000r			; 200
	DW	01f9H
	DW	01b7H
	DD	04349ec4fr			; 201.923
	DW	01f9H
	DW	01b6H
	DD	0434bd89er			; 203.846
	DW	01f9H
	DW	01b5H
	DD	0434dc4ecr			; 205.769
	DW	01f9H
	DW	01b4H
	DD	0434fb13br			; 207.692
	DW	01f9H
	DW	01b3H
	DD	043519d8ar			; 209.615
	DW	01faH
	DW	01b2H
	DD	0435389d9r			; 211.538
	DW	01faH
	DW	01b1H
	DD	043557627r			; 213.462
	DW	01faH
	DW	01b0H
	DD	043576276r			; 215.385
	DW	01faH
	DW	01afH
	DD	043594ec5r			; 217.308
	DW	01fbH
	DW	01aeH
	DD	0435b3b14r			; 219.231
	DW	01fbH
	DW	01adH
	DD	0435d2762r			; 221.154
	DW	01fcH
	DW	01acH
	DD	0435f13b1r			; 223.077
	DW	01fcH
	DW	01abH
	DD	043610000r			; 225
	DW	01fdH
	DW	01aaH
	DD	04362ec4fr			; 226.923
	DW	01fdH
	DW	01a9H
	DD	04364d89er			; 228.846
	DW	01feH
	DW	01a8H
	DD	04366c4ecr			; 230.769
	DW	01ffH
	DW	01a7H
	DD	04368b13br			; 232.692
	DW	01ffH
	DW	01a6H
	DD	0436a9d8ar			; 234.615
	DW	0200H
	DW	01a5H
	DD	0436c89d9r			; 236.538
	DW	0201H
	DW	01a4H
	DD	0436e7627r			; 238.462
	DW	0202H
	DW	01a3H
	DD	043706276r			; 240.385
	DW	0203H
	DW	01a3H
	DD	043724ec5r			; 242.308
	DW	0204H
	DW	01a2H
	DD	043743b14r			; 244.231
	DW	0205H
	DW	01a1H
	DD	043762762r			; 246.154
	DW	0206H
	DW	01a0H
	DD	0437813b1r			; 248.077
	DW	0207H
	DW	01a0H
	DD	0437a0000r			; 250
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?airspeed_indicator_needle_scale_down_20_right_30@@3PAUSCALE_DATA@@A DW 0114H ; airspeed_indicator_needle_scale_down_20_right_30
	DW	0182H
	DD	000000000r			; 0
	DW	0115H
	DW	0182H
	DD	0400b2164r			; 2.17391
	DW	0116H
	DW	0181H
	DD	0408b2164r			; 4.34783
	DW	0117H
	DW	0181H
	DD	040d0b216r			; 6.52174
	DW	0118H
	DW	0181H
	DD	0410b2164r			; 8.69565
	DW	0119H
	DW	0181H
	DD	0412de9bdr			; 10.8696
	DW	011aH
	DW	0181H
	DD	04150b216r			; 13.0435
	DW	011bH
	DW	0181H
	DD	041737a6fr			; 15.2174
	DW	011cH
	DW	0181H
	DD	0418b2164r			; 17.3913
	DW	011dH
	DW	0181H
	DD	0419c8591r			; 19.5652
	DW	011eH
	DW	0181H
	DD	041ade9bdr			; 21.7391
	DW	011fH
	DW	0181H
	DD	041bf4dear			; 23.913
	DW	0120H
	DW	0181H
	DD	041d0b216r			; 26.087
	DW	0121H
	DW	0181H
	DD	041e21643r			; 28.2609
	DW	0122H
	DW	0182H
	DD	041f37a6fr			; 30.4348
	DW	0123H
	DW	0182H
	DD	042026f4er			; 32.6087
	DW	0124H
	DW	0183H
	DD	0420b2164r			; 34.7826
	DW	0125H
	DW	0183H
	DD	04213d37ar			; 36.9565
	DW	0126H
	DW	0184H
	DD	0421c8591r			; 39.1304
	DW	0127H
	DW	0184H
	DD	0422537a7r			; 41.3043
	DW	0128H
	DW	0185H
	DD	0422de9bdr			; 43.4783
	DW	0129H
	DW	0186H
	DD	042369bd3r			; 45.6522
	DW	012aH
	DW	0187H
	DD	0423f4dear			; 47.8261
	DW	012bH
	DW	0188H
	DD	042480000r			; 50
	DW	012cH
	DW	0189H
	DD	0424d67c9r			; 51.3514
	DW	012cH
	DW	018aH
	DD	04252cf91r			; 52.7027
	DW	012dH
	DW	018bH
	DD	04258375ar			; 54.0541
	DW	012dH
	DW	018cH
	DD	0425d9f23r			; 55.4054
	DW	012eH
	DW	018dH
	DD	0426306ebr			; 56.7568
	DW	012eH
	DW	018eH
	DD	042686eb4r			; 58.1081
	DW	012fH
	DW	018fH
	DD	0426dd67dr			; 59.4595
	DW	012fH
	DW	0190H
	DD	042733e45r			; 60.8108
	DW	012fH
	DW	0191H
	DD	04278a60er			; 62.1622
	DW	0130H
	DW	0192H
	DD	0427e0dd6r			; 63.5135
	DW	0130H
	DW	0193H
	DD	04281bad0r			; 64.8649
	DW	0130H
	DW	0194H
	DD	042846eb4r			; 66.2162
	DW	0130H
	DW	0195H
	DD	042872298r			; 67.5676
	DW	0130H
	DW	0196H
	DD	04289d67dr			; 68.9189
	DW	0130H
	DW	0197H
	DD	0428c8a61r			; 70.2703
	DW	0130H
	DW	0198H
	DD	0428f3e45r			; 71.6216
	DW	0130H
	DW	0199H
	DD	04291f22ar			; 72.973
	DW	0130H
	DW	019aH
	DD	04294a60er			; 74.3243
	DW	0130H
	DW	019bH
	DD	0429759f2r			; 75.6757
	DW	0130H
	DW	019cH
	DD	0429a0dd6r			; 77.027
	DW	0130H
	DW	019dH
	DD	0429cc1bbr			; 78.3784
	DW	0130H
	DW	019eH
	DD	0429f759fr			; 79.7297
	DW	012fH
	DW	019fH
	DD	042a22983r			; 81.0811
	DW	012fH
	DW	01a0H
	DD	042a4dd68r			; 82.4324
	DW	012fH
	DW	01a1H
	DD	042a7914cr			; 83.7838
	DW	012eH
	DW	01a2H
	DD	042aa4530r			; 85.1351
	DW	012eH
	DW	01a3H
	DD	042acf915r			; 86.4865
	DW	012eH
	DW	01a4H
	DD	042afacf9r			; 87.8378
	DW	012dH
	DW	01a5H
	DD	042b260ddr			; 89.1892
	DW	012dH
	DW	01a6H
	DD	042b514c2r			; 90.5405
	DW	012cH
	DW	01a7H
	DD	042b7c8a6r			; 91.8919
	DW	012cH
	DW	01a8H
	DD	042ba7c8ar			; 93.2432
	DW	012bH
	DW	01a9H
	DD	042bd306fr			; 94.5946
	DW	012bH
	DW	01aaH
	DD	042bfe453r			; 95.9459
	DW	012aH
	DW	01abH
	DD	042c29837r			; 97.2973
	DW	0129H
	DW	01acH
	DD	042c54c1cr			; 98.6487
	DW	0128H
	DW	01adH
	DD	042c80000r			; 100
	DW	0127H
	DW	01aeH
	DD	042cc590br			; 102.174
	DW	0126H
	DW	01afH
	DD	042d0b216r			; 104.348
	DW	0125H
	DW	01b0H
	DD	042d50b21r			; 106.522
	DW	0124H
	DW	01b1H
	DD	042d9642dr			; 108.696
	DW	0123H
	DW	01b2H
	DD	042ddbd38r			; 110.87
	DW	0122H
	DW	01b2H
	DD	042e21643r			; 113.043
	DW	0121H
	DW	01b3H
	DD	042e66f4er			; 115.217
	DW	0120H
	DW	01b3H
	DD	042eac859r			; 117.391
	DW	011fH
	DW	01b4H
	DD	042ef2164r			; 119.565
	DW	011eH
	DW	01b4H
	DD	042f37a6fr			; 121.739
	DW	011dH
	DW	01b5H
	DD	042f7d37ar			; 123.913
	DW	011cH
	DW	01b5H
	DD	042fc2c86r			; 126.087
	DW	011bH
	DW	01b5H
	DD	0430042c8r			; 128.261
	DW	011aH
	DW	01b5H
	DD	043026f4er			; 130.435
	DW	0119H
	DW	01b6H
	DD	043049bd3r			; 132.609
	DW	0118H
	DW	01b6H
	DD	04306c859r			; 134.783
	DW	0117H
	DW	01b6H
	DD	04308f4dfr			; 136.957
	DW	0116H
	DW	01b6H
	DD	0430b2164r			; 139.13
	DW	0115H
	DW	01b6H
	DD	0430d4dear			; 141.304
	DW	0114H
	DW	01b6H
	DD	0430f7a6fr			; 143.478
	DW	0113H
	DW	01b6H
	DD	04311a6f5r			; 145.652
	DW	0112H
	DW	01b6H
	DD	04313d37ar			; 147.826
	DW	0111H
	DW	01b6H
	DD	043160000r			; 150
	DW	0110H
	DW	01b5H
	DD	043182c86r			; 152.174
	DW	010fH
	DW	01b5H
	DD	0431a590br			; 154.348
	DW	010eH
	DW	01b5H
	DD	0431c8591r			; 156.522
	DW	010dH
	DW	01b4H
	DD	0431eb216r			; 158.696
	DW	010cH
	DW	01b4H
	DD	04320de9cr			; 160.87
	DW	010bH
	DW	01b3H
	DD	043230b21r			; 163.043
	DW	010aH
	DW	01b3H
	DD	0432537a7r			; 165.217
	DW	0109H
	DW	01b2H
	DD	04327642dr			; 167.391
	DW	0108H
	DW	01b1H
	DD	0432990b2r			; 169.565
	DW	0107H
	DW	01b0H
	DD	0432bbd38r			; 171.739
	DW	0106H
	DW	01afH
	DD	0432de9bdr			; 173.913
	DW	0105H
	DW	01aeH
	DD	043301643r			; 176.087
	DW	0105H
	DW	01adH
	DD	0433242c8r			; 178.261
	DW	0104H
	DW	01acH
	DD	043346f4er			; 180.435
	DW	0103H
	DW	01abH
	DD	043369bd3r			; 182.609
	DW	0103H
	DW	01aaH
	DD	04338c859r			; 184.783
	DW	0102H
	DW	01a9H
	DD	0433af4dfr			; 186.957
	DW	0102H
	DW	01a8H
	DD	0433d2164r			; 189.13
	DW	0102H
	DW	01a7H
	DD	0433f4dear			; 191.304
	DW	0101H
	DW	01a6H
	DD	043417a6fr			; 193.478
	DW	0101H
	DW	01a5H
	DD	04343a6f5r			; 195.652
	DW	0101H
	DW	01a4H
	DD	04345d37ar			; 197.826
	DW	0101H
	DW	01a3H
	DD	043480000r			; 200
	DW	0101H
	DW	01a2H
	DD	04349ec4fr			; 201.923
	DW	0101H
	DW	01a1H
	DD	0434bd89er			; 203.846
	DW	0101H
	DW	01a0H
	DD	0434dc4ecr			; 205.769
	DW	0100H
	DW	019fH
	DD	0434fb13br			; 207.692
	DW	0100H
	DW	019eH
	DD	043519d8ar			; 209.615
	DW	0101H
	DW	019dH
	DD	0435389d9r			; 211.538
	DW	0101H
	DW	019cH
	DD	043557627r			; 213.462
	DW	0101H
	DW	019bH
	DD	043576276r			; 215.385
	DW	0101H
	DW	019aH
	DD	043594ec5r			; 217.308
	DW	0101H
	DW	0199H
	DD	0435b3b14r			; 219.231
	DW	0101H
	DW	0198H
	DD	0435d2762r			; 221.154
	DW	0101H
	DW	0197H
	DD	0435f13b1r			; 223.077
	DW	0102H
	DW	0196H
	DD	043610000r			; 225
	DW	0102H
	DW	0195H
	DD	04362ec4fr			; 226.923
	DW	0102H
	DW	0194H
	DD	04364d89er			; 228.846
	DW	0103H
	DW	0193H
	DD	04366c4ecr			; 230.769
	DW	0103H
	DW	0192H
	DD	04368b13br			; 232.692
	DW	0104H
	DW	0191H
	DD	0436a9d8ar			; 234.615
	DW	0104H
	DW	0190H
	DD	0436c89d9r			; 236.538
	DW	0105H
	DW	018fH
	DD	0436e7627r			; 238.462
	DW	0105H
	DW	018eH
	DD	043706276r			; 240.385
	DW	0106H
	DW	018dH
	DD	043724ec5r			; 242.308
	DW	0107H
	DW	018cH
	DD	043743b14r			; 244.231
	DW	0107H
	DW	018bH
	DD	043762762r			; 246.154
	DW	0108H
	DW	018aH
	DD	0437813b1r			; 248.077
	DW	0109H
	DW	0189H
	DD	0437a0000r			; 250
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?airspeed_indicator_needle_scale_down_20_right_60@@3PAUSCALE_DATA@@A DW 00H ; airspeed_indicator_needle_scale_down_20_right_60
	DW	01bcH
	DD	000000000r			; 0
	DW	01H
	DW	01bcH
	DD	03fce739dr			; 1.6129
	DW	02H
	DW	01bbH
	DD	0404e739dr			; 3.22581
	DW	03H
	DW	01bbH
	DD	0409ad6b6r			; 4.83871
	DW	04H
	DW	01baH
	DD	040ce739dr			; 6.45161
	DW	05H
	DW	01baH
	DD	041010842r			; 8.06452
	DW	06H
	DW	01b9H
	DD	0411ad6b6r			; 9.67742
	DW	07H
	DW	01b9H
	DD	04134a529r			; 11.2903
	DW	08H
	DW	01b8H
	DD	0414e739dr			; 12.9032
	DW	09H
	DW	01b8H
	DD	041684211r			; 14.5161
	DW	0aH
	DW	01b8H
	DD	041810842r			; 16.129
	DW	0bH
	DW	01b8H
	DD	0418def7cr			; 17.7419
	DW	0cH
	DW	01b7H
	DD	0419ad6b6r			; 19.3548
	DW	0dH
	DW	01b7H
	DD	041a7bdefr			; 20.9677
	DW	0eH
	DW	01b7H
	DD	041b4a529r			; 22.5806
	DW	0fH
	DW	01b7H
	DD	041c18c63r			; 24.1935
	DW	010H
	DW	01b7H
	DD	041ce739dr			; 25.8065
	DW	011H
	DW	01b7H
	DD	041db5ad7r			; 27.4194
	DW	012H
	DW	01b7H
	DD	041e84211r			; 29.0323
	DW	013H
	DW	01b7H
	DD	041f5294ar			; 30.6452
	DW	014H
	DW	01b7H
	DD	042010842r			; 32.2581
	DW	015H
	DW	01b7H
	DD	042077bdfr			; 33.871
	DW	016H
	DW	01b7H
	DD	0420def7cr			; 35.4839
	DW	017H
	DW	01b7H
	DD	042146319r			; 37.0968
	DW	018H
	DW	01b7H
	DD	0421ad6b6r			; 38.7097
	DW	019H
	DW	01b7H
	DD	042214a53r			; 40.3226
	DW	01aH
	DW	01b8H
	DD	04227bdefr			; 41.9355
	DW	01bH
	DW	01b8H
	DD	0422e318cr			; 43.5484
	DW	01cH
	DW	01b8H
	DD	04234a529r			; 45.1613
	DW	01dH
	DW	01b9H
	DD	0423b18c6r			; 46.7742
	DW	01eH
	DW	01b9H
	DD	042418c63r			; 48.3871
	DW	01fH
	DW	01baH
	DD	042480000r			; 50
	DW	020H
	DW	01bbH
	DD	0424ca1afr			; 51.1579
	DW	021H
	DW	01bbH
	DD	04251435er			; 52.3158
	DW	022H
	DW	01bcH
	DD	04255e50dr			; 53.4737
	DW	023H
	DW	01bdH
	DD	0425a86bdr			; 54.6316
	DW	024H
	DW	01beH
	DD	0425f286cr			; 55.7895
	DW	025H
	DW	01bfH
	DD	04263ca1br			; 56.9474
	DW	025H
	DW	01c0H
	DD	042686bcar			; 58.1053
	DW	026H
	DW	01c1H
	DD	0426d0d79r			; 59.2632
	DW	027H
	DW	01c2H
	DD	04271af28r			; 60.4211
	DW	027H
	DW	01c3H
	DD	0427650d8r			; 61.5789
	DW	028H
	DW	01c4H
	DD	0427af287r			; 62.7368
	DW	028H
	DW	01c5H
	DD	0427f9436r			; 63.8947
	DW	028H
	DW	01c6H
	DD	042821af3r			; 65.0526
	DW	029H
	DW	01c7H
	DD	042846bcar			; 66.2105
	DW	029H
	DW	01c8H
	DD	04286bca2r			; 67.3684
	DW	029H
	DW	01c9H
	DD	042890d79r			; 68.5263
	DW	029H
	DW	01caH
	DD	0428b5e51r			; 69.6842
	DW	02aH
	DW	01cbH
	DD	0428daf28r			; 70.8421
	DW	02aH
	DW	01ccH
	DD	042900000r			; 72
	DW	02aH
	DW	01cdH
	DD	0429250d8r			; 73.1579
	DW	02aH
	DW	01ceH
	DD	04294a1afr			; 74.3158
	DW	02aH
	DW	01cfH
	DD	04296f287r			; 75.4737
	DW	02aH
	DW	01d0H
	DD	04299435er			; 76.6316
	DW	02aH
	DW	01d1H
	DD	0429b9436r			; 77.7895
	DW	02aH
	DW	01d2H
	DD	0429de50dr			; 78.9474
	DW	02aH
	DW	01d3H
	DD	042a035e5r			; 80.1053
	DW	02aH
	DW	01d4H
	DD	042a286bdr			; 81.2632
	DW	029H
	DW	01d5H
	DD	042a4d794r			; 82.4211
	DW	029H
	DW	01d6H
	DD	042a7286cr			; 83.5789
	DW	029H
	DW	01d7H
	DD	042a97943r			; 84.7368
	DW	029H
	DW	01d8H
	DD	042abca1br			; 85.8947
	DW	029H
	DW	01d9H
	DD	042ae1af3r			; 87.0526
	DW	028H
	DW	01daH
	DD	042b06bcar			; 88.2105
	DW	028H
	DW	01dbH
	DD	042b2bca2r			; 89.3684
	DW	028H
	DW	01dcH
	DD	042b50d79r			; 90.5263
	DW	027H
	DW	01ddH
	DD	042b75e51r			; 91.6842
	DW	027H
	DW	01deH
	DD	042b9af28r			; 92.8421
	DW	026H
	DW	01dfH
	DD	042bc0000r			; 94
	DW	025H
	DW	01dfH
	DD	042bd1746r			; 94.5455
	DW	024H
	DW	01dfH
	DD	042be2e8cr			; 95.0909
	DW	023H
	DW	01dfH
	DD	042bf45d1r			; 95.6364
	DW	022H
	DW	01dfH
	DD	042c05d17r			; 96.1818
	DW	021H
	DW	01dfH
	DD	042c1745dr			; 96.7273
	DW	020H
	DW	01dfH
	DD	042c28ba3r			; 97.2727
	DW	01fH
	DW	01dfH
	DD	042c3a2e9r			; 97.8182
	DW	01eH
	DW	01dfH
	DD	042c4ba2fr			; 98.3636
	DW	01dH
	DW	01dfH
	DD	042c5d174r			; 98.9091
	DW	01cH
	DW	01dfH
	DD	042c6e8bar			; 99.4545
	DW	01bH
	DW	01dfH
	DD	042c80000r			; 100
	DW	01aH
	DW	01dfH
	DD	042ceaaabr			; 103.333
	DW	019H
	DW	01dfH
	DD	042d55555r			; 106.667
	DW	018H
	DW	01dfH
	DD	042dc0000r			; 110
	DW	017H
	DW	01dfH
	DD	042e2aaabr			; 113.333
	DW	016H
	DW	01dfH
	DD	042e95555r			; 116.667
	DW	015H
	DW	01dfH
	DD	042f00000r			; 120
	DW	014H
	DW	01dfH
	DD	042f6aaabr			; 123.333
	DW	013H
	DW	01dfH
	DD	042fd5555r			; 126.667
	DW	012H
	DW	01dfH
	DD	043020000r			; 130
	DW	011H
	DW	01dfH
	DD	043055555r			; 133.333
	DW	010H
	DW	01dfH
	DD	04308aaabr			; 136.667
	DW	0fH
	DW	01dfH
	DD	0430c0000r			; 140
	DW	0eH
	DW	01dfH
	DD	0430f5555r			; 143.333
	DW	0dH
	DW	01dfH
	DD	04312aaabr			; 146.667
	DW	0cH
	DW	01dfH
	DD	043160000r			; 150
	DW	0bH
	DW	01dfH
	DD	0431a2aabr			; 154.167
	DW	0aH
	DW	01dfH
	DD	0431e5555r			; 158.333
	DW	09H
	DW	01dfH
	DD	043228000r			; 162.5
	DW	08H
	DW	01dfH
	DD	04326aaabr			; 166.667
	DW	07H
	DW	01dfH
	DD	0432ad555r			; 170.833
	DW	06H
	DW	01dfH
	DD	0432f0000r			; 175
	DW	05H
	DW	01dfH
	DD	043332aabr			; 179.167
	DW	04H
	DW	01dfH
	DD	043375555r			; 183.333
	DW	03H
	DW	01dfH
	DD	0433b8000r			; 187.5
	DW	02H
	DW	01dfH
	DD	0433faaabr			; 191.667
	DW	01H
	DW	01dfH
	DD	04343d555r			; 195.833
	DW	00H
	DW	01deH
	DD	043480000r			; 200
	DW	00H
	DW	01ddH
	DD	0434b5555r			; 203.333
	DW	00H
	DW	01dcH
	DD	0434eaaabr			; 206.667
	DW	00H
	DW	01dbH
	DD	043520000r			; 210
	DW	00H
	DW	01daH
	DD	043555555r			; 213.333
	DW	00H
	DW	01d9H
	DD	04358aaabr			; 216.667
	DW	00H
	DW	01d8H
	DD	0435c0000r			; 220
	DW	00H
	DW	01d7H
	DD	0435f5555r			; 223.333
	DW	00H
	DW	01d6H
	DD	04362aaabr			; 226.667
	DW	00H
	DW	01d5H
	DD	043660000r			; 230
	DW	00H
	DW	01d4H
	DD	043695555r			; 233.333
	DW	00H
	DW	01d3H
	DD	0436caaabr			; 236.667
	DW	00H
	DW	01d2H
	DD	043700000r			; 240
	DW	00H
	DW	01d1H
	DD	043735555r			; 243.333
	DW	00H
	DW	01d0H
	DD	04376aaabr			; 246.667
	DW	00H
	DW	01cfH
	DD	0437a0000r			; 250
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?barometric_altimeter_needle_scale_down_20_ahead@@3PAUSCALE_DATA@@A DW 0257H ; barometric_altimeter_needle_scale_down_20_ahead
	DW	019cH
	DD	000000000r			; 0
	DW	0258H
	DW	019cH
	DD	040bc3c3cr			; 5.88235
	DW	0259H
	DW	019cH
	DD	0413c3c3cr			; 11.7647
	DW	025aH
	DW	019cH
	DD	0418d2d2dr			; 17.6471
	DW	025bH
	DW	019cH
	DD	041bc3c3cr			; 23.5294
	DW	025cH
	DW	019dH
	DD	041eb4b4br			; 29.4118
	DW	025dH
	DW	019dH
	DD	0420d2d2dr			; 35.2941
	DW	025eH
	DW	019dH
	DD	04224b4b5r			; 41.1765
	DW	025fH
	DW	019dH
	DD	0423c3c3cr			; 47.0588
	DW	0260H
	DW	019eH
	DD	04253c3c4r			; 52.9412
	DW	0261H
	DW	019eH
	DD	0426b4b4br			; 58.8235
	DW	0262H
	DW	019eH
	DD	042816969r			; 64.7059
	DW	0263H
	DW	019fH
	DD	0428d2d2dr			; 70.5882
	DW	0264H
	DW	019fH
	DD	04298f0f1r			; 76.4706
	DW	0265H
	DW	01a0H
	DD	042a4b4b5r			; 82.3529
	DW	0266H
	DW	01a0H
	DD	042b07878r			; 88.2353
	DW	0267H
	DW	01a1H
	DD	042bc3c3cr			; 94.1176
	DW	0268H
	DW	01a2H
	DD	042c80000r			; 100
	DW	0269H
	DW	01a3H
	DD	042d55555r			; 106.667
	DW	026aH
	DW	01a3H
	DD	042e2aaabr			; 113.333
	DW	026bH
	DW	01a4H
	DD	042f00000r			; 120
	DW	026cH
	DW	01a5H
	DD	042fd5555r			; 126.667
	DW	026dH
	DW	01a6H
	DD	043055555r			; 133.333
	DW	026dH
	DW	01a7H
	DD	0430c0000r			; 140
	DW	026eH
	DW	01a8H
	DD	04312aaabr			; 146.667
	DW	026fH
	DW	01a9H
	DD	043195555r			; 153.333
	DW	026fH
	DW	01aaH
	DD	043200000r			; 160
	DW	0270H
	DW	01abH
	DD	04326aaabr			; 166.667
	DW	0270H
	DW	01acH
	DD	0432d5555r			; 173.333
	DW	0271H
	DW	01adH
	DD	043340000r			; 180
	DW	0271H
	DW	01aeH
	DD	0433aaaabr			; 186.667
	DW	0272H
	DW	01afH
	DD	043415555r			; 193.333
	DW	0272H
	DW	01b0H
	DD	043480000r			; 200
	DW	0272H
	DW	01b1H
	DD	0434de1e2r			; 205.882
	DW	0272H
	DW	01b2H
	DD	04353c3c4r			; 211.765
	DW	0273H
	DW	01b3H
	DD	04359a5a6r			; 217.647
	DW	0273H
	DW	01b4H
	DD	0435f8788r			; 223.529
	DW	0273H
	DW	01b5H
	DD	043656969r			; 229.412
	DW	0273H
	DW	01b6H
	DD	0436b4b4br			; 235.294
	DW	0273H
	DW	01b7H
	DD	043712d2dr			; 241.176
	DW	0273H
	DW	01b8H
	DD	043770f0fr			; 247.059
	DW	0273H
	DW	01b9H
	DD	0437cf0f1r			; 252.941
	DW	0273H
	DW	01baH
	DD	043816969r			; 258.824
	DW	0273H
	DW	01bbH
	DD	043845a5ar			; 264.706
	DW	0273H
	DW	01bcH
	DD	043874b4br			; 270.588
	DW	0273H
	DW	01bdH
	DD	0438a3c3cr			; 276.471
	DW	0273H
	DW	01beH
	DD	0438d2d2dr			; 282.353
	DW	0272H
	DW	01bfH
	DD	043901e1er			; 288.235
	DW	0272H
	DW	01c0H
	DD	043930f0fr			; 294.118
	DW	0272H
	DW	01c1H
	DD	043960000r			; 300
	DW	0271H
	DW	01c2H
	DD	043999249r			; 307.143
	DW	0271H
	DW	01c3H
	DD	0439d2492r			; 314.286
	DW	0271H
	DW	01c4H
	DD	043a0b6dbr			; 321.429
	DW	0270H
	DW	01c5H
	DD	043a44925r			; 328.571
	DW	0270H
	DW	01c6H
	DD	043a7db6er			; 335.714
	DW	026fH
	DW	01c7H
	DD	043ab6db7r			; 342.857
	DW	026eH
	DW	01c8H
	DD	043af0000r			; 350
	DW	026eH
	DW	01c9H
	DD	043b29249r			; 357.143
	DW	026dH
	DW	01caH
	DD	043b62492r			; 364.286
	DW	026cH
	DW	01cbH
	DD	043b9b6dbr			; 371.429
	DW	026bH
	DW	01ccH
	DD	043bd4925r			; 378.571
	DW	026aH
	DW	01cdH
	DD	043c0db6er			; 385.714
	DW	0269H
	DW	01ceH
	DD	043c46db7r			; 392.857
	DW	0268H
	DW	01cfH
	DD	043c80000r			; 400
	DW	0267H
	DW	01d0H
	DD	043caf0f1r			; 405.882
	DW	0266H
	DW	01d0H
	DD	043cde1e2r			; 411.765
	DW	0265H
	DW	01d1H
	DD	043d0d2d3r			; 417.647
	DW	0264H
	DW	01d1H
	DD	043d3c3c4r			; 423.529
	DW	0263H
	DW	01d2H
	DD	043d6b4b5r			; 429.412
	DW	0262H
	DW	01d2H
	DD	043d9a5a6r			; 435.294
	DW	0261H
	DW	01d3H
	DD	043dc9697r			; 441.176
	DW	0260H
	DW	01d3H
	DD	043df8788r			; 447.059
	DW	025fH
	DW	01d3H
	DD	043e27878r			; 452.941
	DW	025eH
	DW	01d4H
	DD	043e56969r			; 458.824
	DW	025dH
	DW	01d4H
	DD	043e85a5ar			; 464.706
	DW	025cH
	DW	01d4H
	DD	043eb4b4br			; 470.588
	DW	025bH
	DW	01d4H
	DD	043ee3c3cr			; 476.471
	DW	025aH
	DW	01d4H
	DD	043f12d2dr			; 482.353
	DW	0259H
	DW	01d4H
	DD	043f41e1er			; 488.235
	DW	0258H
	DW	01d4H
	DD	043f70f0fr			; 494.118
	DW	0257H
	DW	01d4H
	DD	043fa0000r			; 500
	DW	0256H
	DW	01d4H
	DD	043fcf0f1r			; 505.882
	DW	0255H
	DW	01d4H
	DD	043ffe1e2r			; 511.765
	DW	0254H
	DW	01d4H
	DD	044016969r			; 517.647
	DW	0253H
	DW	01d4H
	DD	04402e1e2r			; 523.529
	DW	0252H
	DW	01d4H
	DD	044045a5ar			; 529.412
	DW	0251H
	DW	01d4H
	DD	04405d2d3r			; 535.294
	DW	0250H
	DW	01d4H
	DD	044074b4br			; 541.176
	DW	024fH
	DW	01d3H
	DD	04408c3c4r			; 547.059
	DW	024eH
	DW	01d3H
	DD	0440a3c3cr			; 552.941
	DW	024dH
	DW	01d3H
	DD	0440bb4b5r			; 558.824
	DW	024cH
	DW	01d2H
	DD	0440d2d2dr			; 564.706
	DW	024bH
	DW	01d2H
	DD	0440ea5a6r			; 570.588
	DW	024aH
	DW	01d1H
	DD	044101e1er			; 576.471
	DW	0249H
	DW	01d1H
	DD	044119697r			; 582.353
	DW	0248H
	DW	01d0H
	DD	044130f0fr			; 588.235
	DW	0247H
	DW	01d0H
	DD	044148788r			; 594.118
	DW	0246H
	DW	01cfH
	DD	044160000r			; 600
	DW	0245H
	DW	01ceH
	DD	04417c925r			; 607.143
	DW	0244H
	DW	01cdH
	DD	044199249r			; 614.286
	DW	0243H
	DW	01ccH
	DD	0441b5b6er			; 621.429
	DW	0242H
	DW	01cbH
	DD	0441d2492r			; 628.571
	DW	0241H
	DW	01caH
	DD	0441eedb7r			; 635.714
	DW	0240H
	DW	01c9H
	DD	04420b6dbr			; 642.857
	DW	023fH
	DW	01c8H
	DD	044228000r			; 650
	DW	023fH
	DW	01c7H
	DD	044244925r			; 657.143
	DW	023eH
	DW	01c6H
	DD	044261249r			; 664.286
	DW	023eH
	DW	01c5H
	DD	04427db6er			; 671.429
	DW	023dH
	DW	01c4H
	DD	04429a492r			; 678.571
	DW	023dH
	DW	01c3H
	DD	0442b6db7r			; 685.714
	DW	023cH
	DW	01c2H
	DD	0442d36dbr			; 692.857
	DW	023cH
	DW	01c1H
	DD	0442f0000r			; 700
	DW	023cH
	DW	01c0H
	DD	044307878r			; 705.882
	DW	023cH
	DW	01bfH
	DD	04431f0f1r			; 711.765
	DW	023bH
	DW	01beH
	DD	044336969r			; 717.647
	DW	023bH
	DW	01bdH
	DD	04434e1e2r			; 723.529
	DW	023bH
	DW	01bcH
	DD	044365a5ar			; 729.412
	DW	023bH
	DW	01bbH
	DD	04437d2d3r			; 735.294
	DW	023bH
	DW	01baH
	DD	044394b4br			; 741.176
	DW	023bH
	DW	01b9H
	DD	0443ac3c4r			; 747.059
	DW	023bH
	DW	01b8H
	DD	0443c3c3cr			; 752.941
	DW	023bH
	DW	01b7H
	DD	0443db4b5r			; 758.824
	DW	023bH
	DW	01b6H
	DD	0443f2d2dr			; 764.706
	DW	023bH
	DW	01b5H
	DD	04440a5a6r			; 770.588
	DW	023bH
	DW	01b4H
	DD	044421e1er			; 776.471
	DW	023bH
	DW	01b3H
	DD	044439697r			; 782.353
	DW	023bH
	DW	01b2H
	DD	044450f0fr			; 788.235
	DW	023cH
	DW	01b1H
	DD	044468788r			; 794.118
	DW	023cH
	DW	01b0H
	DD	044480000r			; 800
	DW	023cH
	DW	01afH
	DD	04449aaabr			; 806.667
	DW	023dH
	DW	01aeH
	DD	0444b5555r			; 813.333
	DW	023dH
	DW	01adH
	DD	0444d0000r			; 820
	DW	023eH
	DW	01acH
	DD	0444eaaabr			; 826.667
	DW	023eH
	DW	01abH
	DD	044505555r			; 833.333
	DW	023fH
	DW	01aaH
	DD	044520000r			; 840
	DW	023fH
	DW	01a9H
	DD	04453aaabr			; 846.667
	DW	0240H
	DW	01a8H
	DD	044555555r			; 853.333
	DW	0241H
	DW	01a7H
	DD	044570000r			; 860
	DW	0241H
	DW	01a6H
	DD	04458aaabr			; 866.667
	DW	0242H
	DW	01a5H
	DD	0445a5555r			; 873.333
	DW	0243H
	DW	01a4H
	DD	0445c0000r			; 880
	DW	0244H
	DW	01a3H
	DD	0445daaabr			; 886.667
	DW	0245H
	DW	01a2H
	DD	0445f5555r			; 893.333
	DW	0246H
	DW	01a2H
	DD	044610000r			; 900
	DW	0247H
	DW	01a1H
	DD	044627878r			; 905.882
	DW	0248H
	DW	01a0H
	DD	04463f0f1r			; 911.765
	DW	0249H
	DW	01a0H
	DD	044656969r			; 917.647
	DW	024aH
	DW	019fH
	DD	04466e1e2r			; 923.529
	DW	024bH
	DW	019fH
	DD	044685a5ar			; 929.412
	DW	024cH
	DW	019eH
	DD	04469d2d3r			; 935.294
	DW	024dH
	DW	019eH
	DD	0446b4b4br			; 941.176
	DW	024eH
	DW	019eH
	DD	0446cc3c4r			; 947.059
	DW	024fH
	DW	019dH
	DD	0446e3c3cr			; 952.941
	DW	0250H
	DW	019dH
	DD	0446fb4b5r			; 958.824
	DW	0251H
	DW	019dH
	DD	044712d2dr			; 964.706
	DW	0252H
	DW	019dH
	DD	04472a5a6r			; 970.588
	DW	0253H
	DW	019cH
	DD	044741e1er			; 976.471
	DW	0254H
	DW	019cH
	DD	044759697r			; 982.353
	DW	0255H
	DW	019cH
	DD	044770f0fr			; 988.235
	DW	0256H
	DW	019cH
	DD	044788788r			; 994.118
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?barometric_altimeter_needle_scale_down_20_right_30@@3PAUSCALE_DATA@@A DW 0149H ; barometric_altimeter_needle_scale_down_20_right_30
	DW	0171H
	DD	000000000r			; 0
	DW	014aH
	DW	0170H
	DD	040f62762r			; 7.69231
	DW	014bH
	DW	0170H
	DD	041762762r			; 15.3846
	DW	014cH
	DW	0170H
	DD	041b89d8ar			; 23.0769
	DW	014dH
	DW	0170H
	DD	041f62762r			; 30.7692
	DW	014eH
	DW	0170H
	DD	04219d89er			; 38.4615
	DW	014fH
	DW	0170H
	DD	042389d8ar			; 46.1538
	DW	0150H
	DW	0170H
	DD	042576276r			; 53.8462
	DW	0151H
	DW	0170H
	DD	042762762r			; 61.5385
	DW	0152H
	DW	0170H
	DD	0428a7627r			; 69.2308
	DW	0153H
	DW	0170H
	DD	04299d89er			; 76.9231
	DW	0154H
	DW	0170H
	DD	042a93b14r			; 84.6154
	DW	0155H
	DW	0171H
	DD	042b89d8ar			; 92.3077
	DW	0156H
	DW	0171H
	DD	042c80000r			; 100
	DW	0157H
	DW	0172H
	DD	042d8aaabr			; 108.333
	DW	0158H
	DW	0172H
	DD	042e95555r			; 116.667
	DW	0159H
	DW	0173H
	DD	042fa0000r			; 125
	DW	015aH
	DW	0173H
	DD	043055555r			; 133.333
	DW	015bH
	DW	0174H
	DD	0430daaabr			; 141.667
	DW	015cH
	DW	0175H
	DD	043160000r			; 150
	DW	015dH
	DW	0176H
	DD	0431e5555r			; 158.333
	DW	015eH
	DW	0177H
	DD	04326aaabr			; 166.667
	DW	015eH
	DW	0178H
	DD	0432f0000r			; 175
	DW	015fH
	DW	0179H
	DD	043375555r			; 183.333
	DW	015fH
	DW	017aH
	DD	0433faaabr			; 191.667
	DW	0160H
	DW	017bH
	DD	043480000r			; 200
	DW	0160H
	DW	017cH
	DD	0434f2492r			; 207.143
	DW	0161H
	DW	017dH
	DD	043564925r			; 214.286
	DW	0161H
	DW	017eH
	DD	0435d6db7r			; 221.429
	DW	0161H
	DW	017fH
	DD	043649249r			; 228.571
	DW	0162H
	DW	0180H
	DD	0436bb6dbr			; 235.714
	DW	0162H
	DW	0181H
	DD	04372db6er			; 242.857
	DW	0162H
	DW	0182H
	DD	0437a0000r			; 250
	DW	0162H
	DW	0183H
	DD	043809249r			; 257.143
	DW	0162H
	DW	0184H
	DD	043842492r			; 264.286
	DW	0162H
	DW	0185H
	DD	04387b6dbr			; 271.429
	DW	0162H
	DW	0186H
	DD	0438b4925r			; 278.571
	DW	0162H
	DW	0187H
	DD	0438edb6er			; 285.714
	DW	0162H
	DW	0188H
	DD	043926db7r			; 292.857
	DW	0162H
	DW	0189H
	DD	043960000r			; 300
	DW	0162H
	DW	018aH
	DD	043995555r			; 306.667
	DW	0162H
	DW	018bH
	DD	0439caaabr			; 313.333
	DW	0162H
	DW	018cH
	DD	043a00000r			; 320
	DW	0161H
	DW	018dH
	DD	043a35555r			; 326.667
	DW	0161H
	DW	018eH
	DD	043a6aaabr			; 333.333
	DW	0161H
	DW	018fH
	DD	043aa0000r			; 340
	DW	0161H
	DW	0190H
	DD	043ad5555r			; 346.667
	DW	0160H
	DW	0191H
	DD	043b0aaabr			; 353.333
	DW	0160H
	DW	0192H
	DD	043b40000r			; 360
	DW	015fH
	DW	0193H
	DD	043b75555r			; 366.667
	DW	015fH
	DW	0194H
	DD	043baaaabr			; 373.333
	DW	015eH
	DW	0195H
	DD	043be0000r			; 380
	DW	015eH
	DW	0196H
	DD	043c15555r			; 386.667
	DW	015dH
	DW	0197H
	DD	043c4aaabr			; 393.333
	DW	015dH
	DW	0198H
	DD	043c80000r			; 400
	DW	015cH
	DW	0199H
	DD	043cc2aabr			; 408.333
	DW	015bH
	DW	019aH
	DD	043d05555r			; 416.667
	DW	015aH
	DW	019bH
	DD	043d48000r			; 425
	DW	0159H
	DW	019cH
	DD	043d8aaabr			; 433.333
	DW	0158H
	DW	019dH
	DD	043dcd555r			; 441.667
	DW	0157H
	DW	019eH
	DD	043e10000r			; 450
	DW	0156H
	DW	019eH
	DD	043e52aabr			; 458.333
	DW	0155H
	DW	019fH
	DD	043e95555r			; 466.667
	DW	0154H
	DW	01a0H
	DD	043ed8000r			; 475
	DW	0153H
	DW	01a0H
	DD	043f1aaabr			; 483.333
	DW	0152H
	DW	01a1H
	DD	043f5d555r			; 491.667
	DW	0151H
	DW	01a1H
	DD	043fa0000r			; 500
	DW	0150H
	DW	01a1H
	DD	043fdd89er			; 507.692
	DW	014fH
	DW	01a2H
	DD	04400d89er			; 515.385
	DW	014eH
	DW	01a2H
	DD	04402c4ecr			; 523.077
	DW	014dH
	DW	01a2H
	DD	04404b13br			; 530.769
	DW	014cH
	DW	01a2H
	DD	044069d8ar			; 538.462
	DW	014bH
	DW	01a2H
	DD	0440889d9r			; 546.154
	DW	014aH
	DW	01a2H
	DD	0440a7627r			; 553.846
	DW	0149H
	DW	01a2H
	DD	0440c6276r			; 561.538
	DW	0148H
	DW	01a2H
	DD	0440e4ec5r			; 569.231
	DW	0147H
	DW	01a2H
	DD	044103b14r			; 576.923
	DW	0146H
	DW	01a2H
	DD	044122762r			; 584.615
	DW	0145H
	DW	01a1H
	DD	0441413b1r			; 592.308
	DW	0144H
	DW	01a1H
	DD	044160000r			; 600
	DW	0143H
	DW	01a1H
	DD	0441845d1r			; 609.091
	DW	0142H
	DW	01a0H
	DD	0441a8ba3r			; 618.182
	DW	0141H
	DW	01a0H
	DD	0441cd174r			; 627.273
	DW	0140H
	DW	019fH
	DD	0441f1746r			; 636.364
	DW	013fH
	DW	019eH
	DD	044215d17r			; 645.455
	DW	013eH
	DW	019dH
	DD	04423a2e9r			; 654.545
	DW	013dH
	DW	019cH
	DD	04425e8bar			; 663.636
	DW	013cH
	DW	019bH
	DD	044282e8cr			; 672.727
	DW	013bH
	DW	019aH
	DD	0442a745dr			; 681.818
	DW	013bH
	DW	0199H
	DD	0442cba2fr			; 690.909
	DW	013aH
	DW	0198H
	DD	0442f0000r			; 700
	DW	013aH
	DW	0197H
	DD	044309000r			; 706.25
	DW	0139H
	DW	0196H
	DD	044322000r			; 712.5
	DW	0139H
	DW	0195H
	DD	04433b000r			; 718.75
	DW	0138H
	DW	0194H
	DD	044354000r			; 725
	DW	0138H
	DW	0193H
	DD	04436d000r			; 731.25
	DW	0138H
	DW	0192H
	DD	044386000r			; 737.5
	DW	0138H
	DW	0191H
	DD	04439f000r			; 743.75
	DW	0137H
	DW	0190H
	DD	0443b8000r			; 750
	DW	0137H
	DW	018fH
	DD	0443d1000r			; 756.25
	DW	0137H
	DW	018eH
	DD	0443ea000r			; 762.5
	DW	0137H
	DW	018dH
	DD	044403000r			; 768.75
	DW	0137H
	DW	018cH
	DD	04441c000r			; 775
	DW	0137H
	DW	018bH
	DD	044435000r			; 781.25
	DW	0137H
	DW	018aH
	DD	04444e000r			; 787.5
	DW	0137H
	DW	0189H
	DD	044467000r			; 793.75
	DW	0137H
	DW	0188H
	DD	044480000r			; 800
	DW	0137H
	DW	0187H
	DD	04449aaabr			; 806.667
	DW	0138H
	DW	0186H
	DD	0444b5555r			; 813.333
	DW	0138H
	DW	0185H
	DD	0444d0000r			; 820
	DW	0138H
	DW	0184H
	DD	0444eaaabr			; 826.667
	DW	0138H
	DW	0183H
	DD	044505555r			; 833.333
	DW	0139H
	DW	0182H
	DD	044520000r			; 840
	DW	0139H
	DW	0181H
	DD	04453aaabr			; 846.667
	DW	0139H
	DW	0180H
	DD	044555555r			; 853.333
	DW	013aH
	DW	017fH
	DD	044570000r			; 860
	DW	013aH
	DW	017eH
	DD	04458aaabr			; 866.667
	DW	013bH
	DW	017dH
	DD	0445a5555r			; 873.333
	DW	013bH
	DW	017cH
	DD	0445c0000r			; 880
	DW	013cH
	DW	017bH
	DD	0445daaabr			; 886.667
	DW	013dH
	DW	017aH
	DD	0445f5555r			; 893.333
	DW	013dH
	DW	0179H
	DD	044610000r			; 900
	DW	013eH
	DW	0178H
	DD	044631555r			; 908.333
	DW	013fH
	DW	0177H
	DD	044652aabr			; 916.667
	DW	0140H
	DW	0176H
	DD	044674000r			; 925
	DW	0141H
	DW	0175H
	DD	044695555r			; 933.333
	DW	0142H
	DW	0174H
	DD	0446b6aabr			; 941.667
	DW	0143H
	DW	0173H
	DD	0446d8000r			; 950
	DW	0144H
	DW	0173H
	DD	0446f9555r			; 958.333
	DW	0145H
	DW	0172H
	DD	04471aaabr			; 966.667
	DW	0146H
	DW	0172H
	DD	04473c000r			; 975
	DW	0147H
	DW	0171H
	DD	04475d555r			; 983.333
	DW	0148H
	DW	0171H
	DD	04477eaabr			; 991.667
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?barometric_altimeter_needle_scale_down_20_right_60@@3PAUSCALE_DATA@@A DW 03fH ; barometric_altimeter_needle_scale_down_20_right_60
	DW	0195H
	DD	000000000r			; 0
	DW	040H
	DW	0195H
	DD	040c80000r			; 6.25
	DW	041H
	DW	0194H
	DD	041480000r			; 12.5
	DW	042H
	DW	0194H
	DD	041960000r			; 18.75
	DW	043H
	DW	0193H
	DD	041c80000r			; 25
	DW	044H
	DW	0193H
	DD	041fa0000r			; 31.25
	DW	045H
	DW	0193H
	DD	042160000r			; 37.5
	DW	046H
	DW	0192H
	DD	0422f0000r			; 43.75
	DW	047H
	DW	0192H
	DD	042480000r			; 50
	DW	048H
	DW	0192H
	DD	042610000r			; 56.25
	DW	049H
	DW	0192H
	DD	0427a0000r			; 62.5
	DW	04aH
	DW	0192H
	DD	042898000r			; 68.75
	DW	04bH
	DW	0191H
	DD	042960000r			; 75
	DW	04cH
	DW	0191H
	DD	042a28000r			; 81.25
	DW	04dH
	DW	0191H
	DD	042af0000r			; 87.5
	DW	04eH
	DW	0191H
	DD	042bb8000r			; 93.75
	DW	04fH
	DW	0192H
	DD	042c80000r			; 100
	DW	050H
	DW	0192H
	DD	042d76276r			; 107.692
	DW	051H
	DW	0192H
	DD	042e6c4ecr			; 115.385
	DW	052H
	DW	0192H
	DD	042f62762r			; 123.077
	DW	053H
	DW	0192H
	DD	04302c4ecr			; 130.769
	DW	054H
	DW	0193H
	DD	0430a7627r			; 138.462
	DW	055H
	DW	0193H
	DD	043122762r			; 146.154
	DW	056H
	DW	0194H
	DD	04319d89er			; 153.846
	DW	057H
	DW	0194H
	DD	0432189d9r			; 161.538
	DW	058H
	DW	0195H
	DD	043293b14r			; 169.231
	DW	059H
	DW	0195H
	DD	04330ec4fr			; 176.923
	DW	05aH
	DW	0196H
	DD	043389d8ar			; 184.615
	DW	05bH
	DW	0197H
	DD	043404ec5r			; 192.308
	DW	05cH
	DW	0198H
	DD	043480000r			; 200
	DW	05dH
	DW	0199H
	DD	0434eaaabr			; 206.667
	DW	05dH
	DW	019aH
	DD	043555555r			; 213.333
	DW	05eH
	DW	019bH
	DD	0435c0000r			; 220
	DW	05fH
	DW	019cH
	DD	04362aaabr			; 226.667
	DW	05fH
	DW	019dH
	DD	043695555r			; 233.333
	DW	060H
	DW	019eH
	DD	043700000r			; 240
	DW	060H
	DW	019fH
	DD	04376aaabr			; 246.667
	DW	060H
	DW	01a0H
	DD	0437d5555r			; 253.333
	DW	061H
	DW	01a1H
	DD	043820000r			; 260
	DW	061H
	DW	01a2H
	DD	043855555r			; 266.667
	DW	061H
	DW	01a3H
	DD	04388aaabr			; 273.333
	DW	061H
	DW	01a4H
	DD	0438c0000r			; 280
	DW	062H
	DW	01a5H
	DD	0438f5555r			; 286.667
	DW	062H
	DW	01a6H
	DD	04392aaabr			; 293.333
	DW	062H
	DW	01a7H
	DD	043960000r			; 300
	DW	062H
	DW	01a8H
	DD	04398f0f1r			; 305.882
	DW	062H
	DW	01a9H
	DD	0439be1e2r			; 311.765
	DW	062H
	DW	01aaH
	DD	0439ed2d3r			; 317.647
	DW	062H
	DW	01abH
	DD	043a1c3c4r			; 323.529
	DW	062H
	DW	01acH
	DD	043a4b4b5r			; 329.412
	DW	062H
	DW	01adH
	DD	043a7a5a6r			; 335.294
	DW	062H
	DW	01aeH
	DD	043aa9697r			; 341.176
	DW	061H
	DW	01afH
	DD	043ad8788r			; 347.059
	DW	061H
	DW	01b0H
	DD	043b07878r			; 352.941
	DW	061H
	DW	01b1H
	DD	043b36969r			; 358.824
	DW	061H
	DW	01b2H
	DD	043b65a5ar			; 364.706
	DW	060H
	DW	01b3H
	DD	043b94b4br			; 370.588
	DW	060H
	DW	01b4H
	DD	043bc3c3cr			; 376.471
	DW	060H
	DW	01b5H
	DD	043bf2d2dr			; 382.353
	DW	05fH
	DW	01b6H
	DD	043c21e1er			; 388.235
	DW	05fH
	DW	01b7H
	DD	043c50f0fr			; 394.118
	DW	05fH
	DW	01b8H
	DD	043c80000r			; 400
	DW	05eH
	DW	01b9H
	DD	043cb5555r			; 406.667
	DW	05eH
	DW	01baH
	DD	043ceaaabr			; 413.333
	DW	05dH
	DW	01bbH
	DD	043d20000r			; 420
	DW	05dH
	DW	01bcH
	DD	043d55555r			; 426.667
	DW	05cH
	DW	01bdH
	DD	043d8aaabr			; 433.333
	DW	05bH
	DW	01beH
	DD	043dc0000r			; 440
	DW	05bH
	DW	01bfH
	DD	043df5555r			; 446.667
	DW	05aH
	DW	01c0H
	DD	043e2aaabr			; 453.333
	DW	059H
	DW	01c1H
	DD	043e60000r			; 460
	DW	058H
	DW	01c2H
	DD	043e95555r			; 466.667
	DW	057H
	DW	01c3H
	DD	043ecaaabr			; 473.333
	DW	056H
	DW	01c4H
	DD	043f00000r			; 480
	DW	055H
	DW	01c5H
	DD	043f35555r			; 486.667
	DW	054H
	DW	01c6H
	DD	043f6aaabr			; 493.333
	DW	053H
	DW	01c6H
	DD	043fa0000r			; 500
	DW	052H
	DW	01c7H
	DD	043fd2000r			; 506.25
	DW	051H
	DW	01c8H
	DD	044002000r			; 512.5
	DW	050H
	DW	01c8H
	DD	04401b000r			; 518.75
	DW	04fH
	DW	01c9H
	DD	044034000r			; 525
	DW	04eH
	DW	01c9H
	DD	04404d000r			; 531.25
	DW	04dH
	DW	01caH
	DD	044066000r			; 537.5
	DW	04cH
	DW	01caH
	DD	04407f000r			; 543.75
	DW	04bH
	DW	01caH
	DD	044098000r			; 550
	DW	04aH
	DW	01cbH
	DD	0440b1000r			; 556.25
	DW	049H
	DW	01cbH
	DD	0440ca000r			; 562.5
	DW	048H
	DW	01cbH
	DD	0440e3000r			; 568.75
	DW	047H
	DW	01cbH
	DD	0440fc000r			; 575
	DW	046H
	DW	01cbH
	DD	044115000r			; 581.25
	DW	045H
	DW	01cbH
	DD	04412e000r			; 587.5
	DW	044H
	DW	01ccH
	DD	044147000r			; 593.75
	DW	043H
	DW	01ccH
	DD	044160000r			; 600
	DW	042H
	DW	01cbH
	DD	04417c925r			; 607.143
	DW	041H
	DW	01cbH
	DD	044199249r			; 614.286
	DW	040H
	DW	01cbH
	DD	0441b5b6er			; 621.429
	DW	03fH
	DW	01cbH
	DD	0441d2492r			; 628.571
	DW	03eH
	DW	01cbH
	DD	0441eedb7r			; 635.714
	DW	03dH
	DW	01caH
	DD	04420b6dbr			; 642.857
	DW	03cH
	DW	01caH
	DD	044228000r			; 650
	DW	03bH
	DW	01caH
	DD	044244925r			; 657.143
	DW	03aH
	DW	01c9H
	DD	044261249r			; 664.286
	DW	039H
	DW	01c9H
	DD	04427db6er			; 671.429
	DW	038H
	DW	01c8H
	DD	04429a492r			; 678.571
	DW	037H
	DW	01c7H
	DD	0442b6db7r			; 685.714
	DW	036H
	DW	01c7H
	DD	0442d36dbr			; 692.857
	DW	035H
	DW	01c6H
	DD	0442f0000r			; 700
	DW	034H
	DW	01c5H
	DD	044307878r			; 705.882
	DW	034H
	DW	01c4H
	DD	04431f0f1r			; 711.765
	DW	033H
	DW	01c3H
	DD	044336969r			; 717.647
	DW	032H
	DW	01c2H
	DD	04434e1e2r			; 723.529
	DW	032H
	DW	01c1H
	DD	044365a5ar			; 729.412
	DW	031H
	DW	01c0H
	DD	04437d2d3r			; 735.294
	DW	031H
	DW	01bfH
	DD	044394b4br			; 741.176
	DW	030H
	DW	01beH
	DD	0443ac3c4r			; 747.059
	DW	030H
	DW	01bdH
	DD	0443c3c3cr			; 752.941
	DW	030H
	DW	01bcH
	DD	0443db4b5r			; 758.824
	DW	02fH
	DW	01bbH
	DD	0443f2d2dr			; 764.706
	DW	02fH
	DW	01baH
	DD	04440a5a6r			; 770.588
	DW	02fH
	DW	01b9H
	DD	044421e1er			; 776.471
	DW	02fH
	DW	01b8H
	DD	044439697r			; 782.353
	DW	02fH
	DW	01b7H
	DD	044450f0fr			; 788.235
	DW	02fH
	DW	01b6H
	DD	044468788r			; 794.118
	DW	02eH
	DW	01b5H
	DD	044480000r			; 800
	DW	02eH
	DW	01b4H
	DD	04449638er			; 805.556
	DW	02eH
	DW	01b3H
	DD	0444ac71cr			; 811.111
	DW	02eH
	DW	01b2H
	DD	0444c2aabr			; 816.667
	DW	02fH
	DW	01b1H
	DD	0444d8e39r			; 822.222
	DW	02fH
	DW	01b0H
	DD	0444ef1c7r			; 827.778
	DW	02fH
	DW	01afH
	DD	044505555r			; 833.333
	DW	02fH
	DW	01aeH
	DD	04451b8e4r			; 838.889
	DW	02fH
	DW	01adH
	DD	044531c72r			; 844.444
	DW	02fH
	DW	01acH
	DD	044548000r			; 850
	DW	030H
	DW	01abH
	DD	04455e38er			; 855.556
	DW	030H
	DW	01aaH
	DD	04457471cr			; 861.111
	DW	030H
	DW	01a9H
	DD	04458aaabr			; 866.667
	DW	030H
	DW	01a8H
	DD	0445a0e39r			; 872.222
	DW	031H
	DW	01a7H
	DD	0445b71c7r			; 877.778
	DW	031H
	DW	01a6H
	DD	0445cd555r			; 883.333
	DW	032H
	DW	01a5H
	DD	0445e38e4r			; 888.889
	DW	032H
	DW	01a4H
	DD	0445f9c72r			; 894.444
	DW	033H
	DW	01a3H
	DD	044610000r			; 900
	DW	033H
	DW	01a2H
	DD	04462aaabr			; 906.667
	DW	034H
	DW	01a1H
	DD	044645555r			; 913.333
	DW	034H
	DW	01a0H
	DD	044660000r			; 920
	DW	035H
	DW	019fH
	DD	04467aaabr			; 926.667
	DW	036H
	DW	019eH
	DD	044695555r			; 933.333
	DW	036H
	DW	019dH
	DD	0446b0000r			; 940
	DW	037H
	DW	019cH
	DD	0446caaabr			; 946.667
	DW	038H
	DW	019bH
	DD	0446e5555r			; 953.333
	DW	039H
	DW	019aH
	DD	044700000r			; 960
	DW	03aH
	DW	0199H
	DD	04471aaabr			; 966.667
	DW	03bH
	DW	0198H
	DD	044735555r			; 973.333
	DW	03cH
	DW	0198H
	DD	044750000r			; 980
	DW	03dH
	DW	0197H
	DD	04476aaabr			; 986.667
	DW	03eH
	DW	0196H
	DD	044785555r			; 993.333
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_large_hand_scale_down_20_ahead@@3PAUSCALE_DATA@@A DW 02dH ; clock_large_hand_scale_down_20_ahead
	DW	0171H
	DD	000000000r			; 0
	DW	02eH
	DW	0171H
	DD	03f0e38e4r			; 0.555556
	DW	02fH
	DW	0171H
	DD	03f8e38e4r			; 1.11111
	DW	030H
	DW	0172H
	DD	03fd55555r			; 1.66667
	DW	031H
	DW	0172H
	DD	0400e38e4r			; 2.22222
	DW	032H
	DW	0172H
	DD	04031c71cr			; 2.77778
	DW	033H
	DW	0172H
	DD	040555555r			; 3.33333
	DW	034H
	DW	0173H
	DD	04078e38er			; 3.88889
	DW	035H
	DW	0173H
	DD	0408e38e4r			; 4.44444
	DW	036H
	DW	0174H
	DD	040a00000r			; 5
	DW	037H
	DW	0174H
	DD	040b6db6er			; 5.71429
	DW	038H
	DW	0175H
	DD	040cdb6dbr			; 6.42857
	DW	039H
	DW	0176H
	DD	040e49249r			; 7.14286
	DW	03aH
	DW	0177H
	DD	040fb6db7r			; 7.85714
	DW	03bH
	DW	0178H
	DD	041092492r			; 8.57143
	DW	03cH
	DW	0179H
	DD	041149249r			; 9.28571
	DW	03cH
	DW	017aH
	DD	041200000r			; 10
	DW	03dH
	DW	017bH
	DD	041280000r			; 10.5
	DW	03dH
	DW	017cH
	DD	041300000r			; 11
	DW	03eH
	DW	017dH
	DD	041380000r			; 11.5
	DW	03eH
	DW	017eH
	DD	041400000r			; 12
	DW	03eH
	DW	017fH
	DD	041480000r			; 12.5
	DW	03fH
	DW	0180H
	DD	041500000r			; 13
	DW	03fH
	DW	0181H
	DD	041580000r			; 13.5
	DW	03fH
	DW	0182H
	DD	041600000r			; 14
	DW	03fH
	DW	0183H
	DD	041680000r			; 14.5
	DW	03fH
	DW	0184H
	DD	041700000r			; 15
	DW	03fH
	DW	0185H
	DD	04178e38er			; 15.5556
	DW	03fH
	DW	0186H
	DD	04180e38er			; 16.1111
	DW	03fH
	DW	0187H
	DD	041855555r			; 16.6667
	DW	03eH
	DW	0188H
	DD	04189c71cr			; 17.2222
	DW	03eH
	DW	0189H
	DD	0418e38e4r			; 17.7778
	DW	03eH
	DW	018aH
	DD	04192aaabr			; 18.3333
	DW	03dH
	DW	018bH
	DD	041971c72r			; 18.8889
	DW	03dH
	DW	018cH
	DD	0419b8e39r			; 19.4444
	DW	03dH
	DW	018dH
	DD	041a00000r			; 20
	DW	03cH
	DW	018eH
	DD	041a5b6dbr			; 20.7143
	DW	03bH
	DW	018fH
	DD	041ab6db7r			; 21.4286
	DW	03aH
	DW	0190H
	DD	041b12492r			; 22.1429
	DW	039H
	DW	0191H
	DD	041b6db6er			; 22.8571
	DW	038H
	DW	0192H
	DD	041bc9249r			; 23.5714
	DW	037H
	DW	0193H
	DD	041c24925r			; 24.2857
	DW	036H
	DW	0194H
	DD	041c80000r			; 25
	DW	035H
	DW	0194H
	DD	041cc71c7r			; 25.5556
	DW	034H
	DW	0195H
	DD	041d0e38er			; 26.1111
	DW	033H
	DW	0195H
	DD	041d55555r			; 26.6667
	DW	032H
	DW	0195H
	DD	041d9c71cr			; 27.2222
	DW	031H
	DW	0196H
	DD	041de38e4r			; 27.7778
	DW	030H
	DW	0196H
	DD	041e2aaabr			; 28.3333
	DW	02fH
	DW	0196H
	DD	041e71c72r			; 28.8889
	DW	02eH
	DW	0196H
	DD	041eb8e39r			; 29.4444
	DW	02dH
	DW	0196H
	DD	041f00000r			; 30
	DW	02cH
	DW	0196H
	DD	041f40000r			; 30.5
	DW	02bH
	DW	0196H
	DD	041f80000r			; 31
	DW	02aH
	DW	0196H
	DD	041fc0000r			; 31.5
	DW	029H
	DW	0196H
	DD	042000000r			; 32
	DW	028H
	DW	0196H
	DD	042020000r			; 32.5
	DW	027H
	DW	0195H
	DD	042040000r			; 33
	DW	026H
	DW	0195H
	DD	042060000r			; 33.5
	DW	025H
	DW	0195H
	DD	042080000r			; 34
	DW	024H
	DW	0194H
	DD	0420a0000r			; 34.5
	DW	023H
	DW	0194H
	DD	0420c0000r			; 35
	DW	022H
	DW	0193H
	DD	0420edb6er			; 35.7143
	DW	021H
	DW	0192H
	DD	04211b6dbr			; 36.4286
	DW	020H
	DW	0191H
	DD	042149249r			; 37.1429
	DW	01fH
	DW	0190H
	DD	042176db7r			; 37.8571
	DW	01eH
	DW	018fH
	DD	0421a4925r			; 38.5714
	DW	01dH
	DW	018eH
	DD	0421d2492r			; 39.2857
	DW	01cH
	DW	018dH
	DD	042200000r			; 40
	DW	01cH
	DW	018cH
	DD	0422238e4r			; 40.5556
	DW	01bH
	DW	018bH
	DD	0422471c7r			; 41.1111
	DW	01bH
	DW	018aH
	DD	04226aaabr			; 41.6667
	DW	01bH
	DW	0189H
	DD	04228e38er			; 42.2222
	DW	01bH
	DW	0188H
	DD	0422b1c72r			; 42.7778
	DW	01aH
	DW	0187H
	DD	0422d5555r			; 43.3333
	DW	01aH
	DW	0186H
	DD	0422f8e39r			; 43.8889
	DW	01aH
	DW	0185H
	DD	04231c71cr			; 44.4444
	DW	01aH
	DW	0184H
	DD	042340000r			; 45
	DW	01aH
	DW	0183H
	DD	042360000r			; 45.5
	DW	01aH
	DW	0182H
	DD	042380000r			; 46
	DW	01aH
	DW	0181H
	DD	0423a0000r			; 46.5
	DW	01aH
	DW	0180H
	DD	0423c0000r			; 47
	DW	01bH
	DW	017fH
	DD	0423e0000r			; 47.5
	DW	01bH
	DW	017eH
	DD	042400000r			; 48
	DW	01bH
	DW	017dH
	DD	042420000r			; 48.5
	DW	01cH
	DW	017cH
	DD	042440000r			; 49
	DW	01cH
	DW	017bH
	DD	042460000r			; 49.5
	DW	01dH
	DW	017aH
	DD	042480000r			; 50
	DW	01dH
	DW	0179H
	DD	0424adb6er			; 50.7143
	DW	01eH
	DW	0178H
	DD	0424db6dbr			; 51.4286
	DW	01fH
	DW	0177H
	DD	042509249r			; 52.1429
	DW	020H
	DW	0176H
	DD	042536db7r			; 52.8571
	DW	021H
	DW	0175H
	DD	042564925r			; 53.5714
	DW	022H
	DW	0174H
	DD	042592492r			; 54.2857
	DW	023H
	DW	0174H
	DD	0425c0000r			; 55
	DW	024H
	DW	0173H
	DD	0425e0000r			; 55.5
	DW	025H
	DW	0173H
	DD	042600000r			; 56
	DW	026H
	DW	0172H
	DD	042620000r			; 56.5
	DW	027H
	DW	0172H
	DD	042640000r			; 57
	DW	028H
	DW	0172H
	DD	042660000r			; 57.5
	DW	029H
	DW	0172H
	DD	042680000r			; 58
	DW	02aH
	DW	0171H
	DD	0426a0000r			; 58.5
	DW	02bH
	DW	0171H
	DD	0426c0000r			; 59
	DW	02cH
	DW	0171H
	DD	0426e0000r			; 59.5
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_small_hand_scale_down_20_ahead@@3PAUSCALE_DATA@@A DW 02dH ; clock_small_hand_scale_down_20_ahead
	DW	017aH
	DD	000000000r			; 0
	DW	02eH
	DW	017aH
	DD	03e4ccccdr			; 0.2
	DW	02fH
	DW	017aH
	DD	03ecccccdr			; 0.4
	DW	030H
	DW	017bH
	DD	03f19999ar			; 0.6
	DW	031H
	DW	017bH
	DD	03f4ccccdr			; 0.8
	DW	032H
	DW	017bH
	DD	03f800000r			; 1
	DW	033H
	DW	017cH
	DD	03fa00000r			; 1.25
	DW	034H
	DW	017dH
	DD	03fc00000r			; 1.5
	DW	035H
	DW	017eH
	DD	03fe00000r			; 1.75
	DW	035H
	DW	017fH
	DD	040000000r			; 2
	DW	035H
	DW	0180H
	DD	0400ccccdr			; 2.2
	DW	036H
	DW	0181H
	DD	04019999ar			; 2.4
	DW	036H
	DW	0182H
	DD	040266666r			; 2.6
	DW	036H
	DW	0183H
	DD	040333333r			; 2.8
	DW	036H
	DW	0184H
	DD	040400000r			; 3
	DW	036H
	DW	0185H
	DD	0404ccccdr			; 3.2
	DW	036H
	DW	0186H
	DD	04059999ar			; 3.4
	DW	036H
	DW	0187H
	DD	040666666r			; 3.6
	DW	035H
	DW	0188H
	DD	040733333r			; 3.8
	DW	035H
	DW	0189H
	DD	040800000r			; 4
	DW	034H
	DW	018aH
	DD	0408aaaabr			; 4.33333
	DW	033H
	DW	018bH
	DD	040955555r			; 4.66667
	DW	032H
	DW	018cH
	DD	040a00000r			; 5
	DW	031H
	DW	018cH
	DD	040a66666r			; 5.2
	DW	030H
	DW	018dH
	DD	040accccdr			; 5.4
	DW	02fH
	DW	018dH
	DD	040b33333r			; 5.6
	DW	02eH
	DW	018dH
	DD	040b9999ar			; 5.8
	DW	02dH
	DW	018dH
	DD	040c00000r			; 6
	DW	02cH
	DW	018dH
	DD	040c66666r			; 6.2
	DW	02bH
	DW	018dH
	DD	040cccccdr			; 6.4
	DW	02aH
	DW	018dH
	DD	040d33333r			; 6.6
	DW	029H
	DW	018dH
	DD	040d9999ar			; 6.8
	DW	028H
	DW	018cH
	DD	040e00000r			; 7
	DW	027H
	DW	018cH
	DD	040e80000r			; 7.25
	DW	026H
	DW	018bH
	DD	040f00000r			; 7.5
	DW	025H
	DW	018aH
	DD	040f80000r			; 7.75
	DW	024H
	DW	0189H
	DD	041000000r			; 8
	DW	024H
	DW	0188H
	DD	041033333r			; 8.2
	DW	023H
	DW	0187H
	DD	041066666r			; 8.4
	DW	023H
	DW	0186H
	DD	04109999ar			; 8.6
	DW	023H
	DW	0185H
	DD	0410ccccdr			; 8.8
	DW	023H
	DW	0184H
	DD	041100000r			; 9
	DW	023H
	DW	0183H
	DD	041133333r			; 9.2
	DW	023H
	DW	0182H
	DD	041166666r			; 9.4
	DW	023H
	DW	0181H
	DD	04119999ar			; 9.6
	DW	024H
	DW	0180H
	DD	0411ccccdr			; 9.8
	DW	024H
	DW	017fH
	DD	041200000r			; 10
	DW	025H
	DW	017eH
	DD	041240000r			; 10.25
	DW	026H
	DW	017dH
	DD	041280000r			; 10.5
	DW	027H
	DW	017cH
	DD	0412c0000r			; 10.75
	DW	028H
	DW	017bH
	DD	041300000r			; 11
	DW	029H
	DW	017bH
	DD	041333333r			; 11.2
	DW	02aH
	DW	017aH
	DD	041366666r			; 11.4
	DW	02bH
	DW	017aH
	DD	04139999ar			; 11.6
	DW	02cH
	DW	017aH
	DD	0413ccccdr			; 11.8
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_large_hand_scale_down_20_left_30@@3PAUSCALE_DATA@@A DW 0140H ; clock_large_hand_scale_down_20_left_30
	DW	014dH
	DD	000000000r			; 0
	DW	0141H
	DW	014dH
	DD	03f36db6er			; 0.714286
	DW	0142H
	DW	014dH
	DD	03fb6db6er			; 1.42857
	DW	0143H
	DW	014eH
	DD	040092492r			; 2.14286
	DW	0144H
	DW	014eH
	DD	04036db6er			; 2.85714
	DW	0145H
	DW	014fH
	DD	040649249r			; 3.57143
	DW	0146H
	DW	0150H
	DD	040892492r			; 4.28571
	DW	0147H
	DW	0151H
	DD	040a00000r			; 5
	DW	0148H
	DW	0152H
	DD	040b6db6er			; 5.71429
	DW	0149H
	DW	0153H
	DD	040cdb6dbr			; 6.42857
	DW	0149H
	DW	0154H
	DD	040e49249r			; 7.14286
	DW	014aH
	DW	0155H
	DD	040fb6db7r			; 7.85714
	DW	014aH
	DW	0156H
	DD	041092492r			; 8.57143
	DW	014bH
	DW	0157H
	DD	041149249r			; 9.28571
	DW	014bH
	DW	0158H
	DD	041200000r			; 10
	DW	014bH
	DW	0159H
	DD	04128e38er			; 10.5556
	DW	014bH
	DW	015aH
	DD	04131c71cr			; 11.1111
	DW	014cH
	DW	015bH
	DD	0413aaaabr			; 11.6667
	DW	014cH
	DW	015cH
	DD	041438e39r			; 12.2222
	DW	014cH
	DW	015dH
	DD	0414c71c7r			; 12.7778
	DW	014cH
	DW	015eH
	DD	041555555r			; 13.3333
	DW	014cH
	DW	015fH
	DD	0415e38e4r			; 13.8889
	DW	014cH
	DW	0160H
	DD	041671c72r			; 14.4444
	DW	014bH
	DW	0161H
	DD	041700000r			; 15
	DW	014bH
	DW	0162H
	DD	0417a0000r			; 15.625
	DW	014bH
	DW	0163H
	DD	041820000r			; 16.25
	DW	014bH
	DW	0164H
	DD	041870000r			; 16.875
	DW	014aH
	DW	0165H
	DD	0418c0000r			; 17.5
	DW	014aH
	DW	0166H
	DD	041910000r			; 18.125
	DW	0149H
	DW	0167H
	DD	041960000r			; 18.75
	DW	0149H
	DW	0168H
	DD	0419b0000r			; 19.375
	DW	0148H
	DW	0169H
	DD	041a00000r			; 20
	DW	0147H
	DW	016aH
	DD	041a6aaabr			; 20.8333
	DW	0146H
	DW	016bH
	DD	041ad5555r			; 21.6667
	DW	0145H
	DW	016bH
	DD	041b40000r			; 22.5
	DW	0144H
	DW	016cH
	DD	041baaaabr			; 23.3333
	DW	0143H
	DW	016cH
	DD	041c15555r			; 24.1667
	DW	0142H
	DW	016dH
	DD	041c80000r			; 25
	DW	0141H
	DW	016dH
	DD	041cd0000r			; 25.625
	DW	0140H
	DW	016dH
	DD	041d20000r			; 26.25
	DW	013fH
	DW	016dH
	DD	041d70000r			; 26.875
	DW	013eH
	DW	016dH
	DD	041dc0000r			; 27.5
	DW	013dH
	DW	016dH
	DD	041e10000r			; 28.125
	DW	013cH
	DW	016dH
	DD	041e60000r			; 28.75
	DW	013bH
	DW	016dH
	DD	041eb0000r			; 29.375
	DW	013aH
	DW	016cH
	DD	041f00000r			; 30
	DW	0139H
	DW	016cH
	DD	041f6aaabr			; 30.8333
	DW	0138H
	DW	016bH
	DD	041fd5555r			; 31.6667
	DW	0137H
	DW	016bH
	DD	042020000r			; 32.5
	DW	0136H
	DW	016aH
	DD	042055555r			; 33.3333
	DW	0135H
	DW	0169H
	DD	04208aaabr			; 34.1667
	DW	0134H
	DW	0168H
	DD	0420c0000r			; 35
	DW	0133H
	DW	0167H
	DD	0420edb6er			; 35.7143
	DW	0132H
	DW	0166H
	DD	04211b6dbr			; 36.4286
	DW	0132H
	DW	0165H
	DD	042149249r			; 37.1429
	DW	0131H
	DW	0164H
	DD	042176db7r			; 37.8571
	DW	0131H
	DW	0163H
	DD	0421a4925r			; 38.5714
	DW	0130H
	DW	0162H
	DD	0421d2492r			; 39.2857
	DW	0130H
	DW	0161H
	DD	042200000r			; 40
	DW	0130H
	DW	0160H
	DD	0422238e4r			; 40.5556
	DW	012fH
	DW	015fH
	DD	0422471c7r			; 41.1111
	DW	012fH
	DW	015eH
	DD	04226aaabr			; 41.6667
	DW	012fH
	DW	015dH
	DD	04228e38er			; 42.2222
	DW	012fH
	DW	015cH
	DD	0422b1c72r			; 42.7778
	DW	012fH
	DW	015bH
	DD	0422d5555r			; 43.3333
	DW	012fH
	DW	015aH
	DD	0422f8e39r			; 43.8889
	DW	012fH
	DW	0159H
	DD	04231c71cr			; 44.4444
	DW	012fH
	DW	0158H
	DD	042340000r			; 45
	DW	0130H
	DW	0157H
	DD	04236db6er			; 45.7143
	DW	0130H
	DW	0156H
	DD	04239b6dbr			; 46.4286
	DW	0130H
	DW	0155H
	DD	0423c9249r			; 47.1429
	DW	0131H
	DW	0154H
	DD	0423f6db7r			; 47.8571
	DW	0131H
	DW	0153H
	DD	042424925r			; 48.5714
	DW	0132H
	DW	0152H
	DD	042452492r			; 49.2857
	DW	0132H
	DW	0151H
	DD	042480000r			; 50
	DW	0133H
	DW	0150H
	DD	0424adb6er			; 50.7143
	DW	0134H
	DW	014fH
	DD	0424db6dbr			; 51.4286
	DW	0135H
	DW	014eH
	DD	042509249r			; 52.1429
	DW	0136H
	DW	014eH
	DD	042536db7r			; 52.8571
	DW	0137H
	DW	014dH
	DD	042564925r			; 53.5714
	DW	0138H
	DW	014dH
	DD	042592492r			; 54.2857
	DW	0139H
	DW	014dH
	DD	0425c0000r			; 55
	DW	013aH
	DW	014cH
	DD	0425edb6er			; 55.7143
	DW	013bH
	DW	014cH
	DD	04261b6dbr			; 56.4286
	DW	013cH
	DW	014cH
	DD	042649249r			; 57.1429
	DW	013dH
	DW	014cH
	DD	042676db7r			; 57.8571
	DW	013eH
	DW	014cH
	DD	0426a4925r			; 58.5714
	DW	013fH
	DW	014cH
	DD	0426d2492r			; 59.2857
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_small_hand_scale_down_20_left_30@@3PAUSCALE_DATA@@A DW 013fH ; clock_small_hand_scale_down_20_left_30
	DW	0154H
	DD	000000000r			; 0
	DW	0140H
	DW	0155H
	DD	03e800000r			; 0.25
	DW	0141H
	DW	0155H
	DD	03f000000r			; 0.5
	DW	0142H
	DW	0156H
	DD	03f400000r			; 0.75
	DW	0143H
	DW	0156H
	DD	03f800000r			; 1
	DW	0144H
	DW	0157H
	DD	03fa00000r			; 1.25
	DW	0144H
	DW	0158H
	DD	03fc00000r			; 1.5
	DW	0145H
	DW	0159H
	DD	03fe00000r			; 1.75
	DW	0145H
	DW	015aH
	DD	040000000r			; 2
	DW	0145H
	DW	015bH
	DD	0400ccccdr			; 2.2
	DW	0145H
	DW	015cH
	DD	04019999ar			; 2.4
	DW	0145H
	DW	015dH
	DD	040266666r			; 2.6
	DW	0145H
	DW	015eH
	DD	040333333r			; 2.8
	DW	0145H
	DW	015fH
	DD	040400000r			; 3
	DW	0145H
	DW	0160H
	DD	040500000r			; 3.25
	DW	0145H
	DW	0161H
	DD	040600000r			; 3.5
	DW	0144H
	DW	0162H
	DD	040700000r			; 3.75
	DW	0143H
	DW	0163H
	DD	040800000r			; 4
	DW	0142H
	DW	0164H
	DD	040880000r			; 4.25
	DW	0141H
	DW	0164H
	DD	040900000r			; 4.5
	DW	0140H
	DW	0165H
	DD	040980000r			; 4.75
	DW	013fH
	DW	0165H
	DD	040a00000r			; 5
	DW	013eH
	DW	0165H
	DD	040a80000r			; 5.25
	DW	013dH
	DW	0165H
	DD	040b00000r			; 5.5
	DW	013cH
	DW	0165H
	DD	040b80000r			; 5.75
	DW	013bH
	DW	0165H
	DD	040c00000r			; 6
	DW	013aH
	DW	0165H
	DD	040caaaabr			; 6.33333
	DW	0139H
	DW	0164H
	DD	040d55555r			; 6.66667
	DW	0138H
	DW	0163H
	DD	040e00000r			; 7
	DW	0137H
	DW	0162H
	DD	040e80000r			; 7.25
	DW	0136H
	DW	0161H
	DD	040f00000r			; 7.5
	DW	0136H
	DW	0160H
	DD	040f80000r			; 7.75
	DW	0135H
	DW	015fH
	DD	041000000r			; 8
	DW	0135H
	DW	015eH
	DD	041033333r			; 8.2
	DW	0135H
	DW	015dH
	DD	041066666r			; 8.4
	DW	0135H
	DW	015cH
	DD	04109999ar			; 8.6
	DW	0135H
	DW	015bH
	DD	0410ccccdr			; 8.8
	DW	0135H
	DW	015aH
	DD	041100000r			; 9
	DW	0135H
	DW	0159H
	DD	041140000r			; 9.25
	DW	0136H
	DW	0158H
	DD	041180000r			; 9.5
	DW	0136H
	DW	0157H
	DD	0411c0000r			; 9.75
	DW	0137H
	DW	0156H
	DD	041200000r			; 10
	DW	0138H
	DW	0156H
	DD	041240000r			; 10.25
	DW	0139H
	DW	0155H
	DD	041280000r			; 10.5
	DW	013aH
	DW	0155H
	DD	0412c0000r			; 10.75
	DW	013bH
	DW	0154H
	DD	041300000r			; 11
	DW	013cH
	DW	0154H
	DD	041340000r			; 11.25
	DW	013dH
	DW	0154H
	DD	041380000r			; 11.5
	DW	013eH
	DW	0154H
	DD	0413c0000r			; 11.75
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_large_hand_scale_down_20_left_60@@3PAUSCALE_DATA@@A DW 0254H ; clock_large_hand_scale_down_20_left_60
	DW	0172H
	DD	000000000r			; 0
	DW	0255H
	DW	0172H
	DD	03f36db6er			; 0.714286
	DW	0256H
	DW	0173H
	DD	03fb6db6er			; 1.42857
	DW	0257H
	DW	0174H
	DD	040092492r			; 2.14286
	DW	0258H
	DW	0175H
	DD	04036db6er			; 2.85714
	DW	0259H
	DW	0176H
	DD	040649249r			; 3.57143
	DW	025aH
	DW	0177H
	DD	040892492r			; 4.28571
	DW	025bH
	DW	0178H
	DD	040a00000r			; 5
	DW	025cH
	DW	0179H
	DD	040b00000r			; 5.5
	DW	025cH
	DW	017aH
	DD	040c00000r			; 6
	DW	025dH
	DW	017bH
	DD	040d00000r			; 6.5
	DW	025dH
	DW	017cH
	DD	040e00000r			; 7
	DW	025eH
	DW	017dH
	DD	040f00000r			; 7.5
	DW	025eH
	DW	017eH
	DD	041000000r			; 8
	DW	025eH
	DW	017fH
	DD	041080000r			; 8.5
	DW	025fH
	DW	0180H
	DD	041100000r			; 9
	DW	025fH
	DW	0181H
	DD	041180000r			; 9.5
	DW	025fH
	DW	0182H
	DD	041200000r			; 10
	DW	025fH
	DW	0183H
	DD	041280000r			; 10.5
	DW	025fH
	DW	0184H
	DD	041300000r			; 11
	DW	025fH
	DW	0185H
	DD	041380000r			; 11.5
	DW	025fH
	DW	0186H
	DD	041400000r			; 12
	DW	025fH
	DW	0187H
	DD	041480000r			; 12.5
	DW	025fH
	DW	0188H
	DD	041500000r			; 13
	DW	025fH
	DW	0189H
	DD	041580000r			; 13.5
	DW	025eH
	DW	018aH
	DD	041600000r			; 14
	DW	025eH
	DW	018bH
	DD	041680000r			; 14.5
	DW	025eH
	DW	018cH
	DD	041700000r			; 15
	DW	025dH
	DW	018dH
	DD	0417b6db7r			; 15.7143
	DW	025dH
	DW	018eH
	DD	041836db7r			; 16.4286
	DW	025cH
	DW	018fH
	DD	041892492r			; 17.1429
	DW	025bH
	DW	0190H
	DD	0418edb6er			; 17.8571
	DW	025aH
	DW	0191H
	DD	041949249r			; 18.5714
	DW	0259H
	DW	0192H
	DD	0419a4925r			; 19.2857
	DW	0258H
	DW	0193H
	DD	041a00000r			; 20
	DW	0257H
	DW	0194H
	DD	041a471c7r			; 20.5556
	DW	0256H
	DW	0194H
	DD	041a8e38er			; 21.1111
	DW	0255H
	DW	0194H
	DD	041ad5555r			; 21.6667
	DW	0254H
	DW	0195H
	DD	041b1c71cr			; 22.2222
	DW	0253H
	DW	0195H
	DD	041b638e4r			; 22.7778
	DW	0252H
	DW	0195H
	DD	041baaaabr			; 23.3333
	DW	0251H
	DW	0195H
	DD	041bf1c72r			; 23.8889
	DW	0250H
	DW	0195H
	DD	041c38e39r			; 24.4444
	DW	024fH
	DW	0195H
	DD	041c80000r			; 25
	DW	024eH
	DW	0195H
	DD	041cc71c7r			; 25.5556
	DW	024dH
	DW	0195H
	DD	041d0e38er			; 26.1111
	DW	024cH
	DW	0195H
	DD	041d55555r			; 26.6667
	DW	024bH
	DW	0195H
	DD	041d9c71cr			; 27.2222
	DW	024aH
	DW	0195H
	DD	041de38e4r			; 27.7778
	DW	0249H
	DW	0194H
	DD	041e2aaabr			; 28.3333
	DW	0248H
	DW	0194H
	DD	041e71c72r			; 28.8889
	DW	0247H
	DW	0193H
	DD	041eb8e39r			; 29.4444
	DW	0246H
	DW	0193H
	DD	041f00000r			; 30
	DW	0245H
	DW	0192H
	DD	041f50000r			; 30.625
	DW	0244H
	DW	0191H
	DD	041fa0000r			; 31.25
	DW	0243H
	DW	0191H
	DD	041ff0000r			; 31.875
	DW	0242H
	DW	0190H
	DD	042020000r			; 32.5
	DW	0241H
	DW	018fH
	DD	042048000r			; 33.125
	DW	0241H
	DW	018eH
	DD	042070000r			; 33.75
	DW	0240H
	DW	018dH
	DD	042098000r			; 34.375
	DW	023fH
	DW	018cH
	DD	0420c0000r			; 35
	DW	023eH
	DW	018bH
	DD	0420e0000r			; 35.5
	DW	023eH
	DW	018aH
	DD	042100000r			; 36
	DW	023dH
	DW	0189H
	DD	042120000r			; 36.5
	DW	023dH
	DW	0188H
	DD	042140000r			; 37
	DW	023dH
	DW	0187H
	DD	042160000r			; 37.5
	DW	023cH
	DW	0186H
	DD	042180000r			; 38
	DW	023cH
	DW	0185H
	DD	0421a0000r			; 38.5
	DW	023cH
	DW	0184H
	DD	0421c0000r			; 39
	DW	023cH
	DW	0183H
	DD	0421e0000r			; 39.5
	DW	023cH
	DW	0182H
	DD	042200000r			; 40
	DW	023cH
	DW	0181H
	DD	0422238e4r			; 40.5556
	DW	023bH
	DW	0180H
	DD	0422471c7r			; 41.1111
	DW	023cH
	DW	017fH
	DD	04226aaabr			; 41.6667
	DW	023cH
	DW	017eH
	DD	04228e38er			; 42.2222
	DW	023cH
	DW	017dH
	DD	0422b1c72r			; 42.7778
	DW	023cH
	DW	017cH
	DD	0422d5555r			; 43.3333
	DW	023cH
	DW	017bH
	DD	0422f8e39r			; 43.8889
	DW	023cH
	DW	017aH
	DD	04231c71cr			; 44.4444
	DW	023dH
	DW	0179H
	DD	042340000r			; 45
	DW	023dH
	DW	0178H
	DD	04236db6er			; 45.7143
	DW	023eH
	DW	0177H
	DD	04239b6dbr			; 46.4286
	DW	023eH
	DW	0176H
	DD	0423c9249r			; 47.1429
	DW	023fH
	DW	0175H
	DD	0423f6db7r			; 47.8571
	DW	0240H
	DW	0174H
	DD	042424925r			; 48.5714
	DW	0241H
	DW	0173H
	DD	042452492r			; 49.2857
	DW	0242H
	DW	0172H
	DD	042480000r			; 50
	DW	0243H
	DW	0172H
	DD	0424a38e4r			; 50.5556
	DW	0244H
	DW	0171H
	DD	0424c71c7r			; 51.1111
	DW	0245H
	DW	0171H
	DD	0424eaaabr			; 51.6667
	DW	0246H
	DW	0170H
	DD	04250e38er			; 52.2222
	DW	0247H
	DW	0170H
	DD	042531c72r			; 52.7778
	DW	0248H
	DW	0170H
	DD	042555555r			; 53.3333
	DW	0249H
	DW	016fH
	DD	042578e39r			; 53.8889
	DW	024aH
	DW	016fH
	DD	04259c71cr			; 54.4444
	DW	024bH
	DW	016fH
	DD	0425c0000r			; 55
	DW	024cH
	DW	016fH
	DD	0425e38e4r			; 55.5556
	DW	024dH
	DW	016fH
	DD	0426071c7r			; 56.1111
	DW	024eH
	DW	0170H
	DD	04262aaabr			; 56.6667
	DW	024fH
	DW	0170H
	DD	04264e38er			; 57.2222
	DW	0250H
	DW	0170H
	DD	042671c72r			; 57.7778
	DW	0251H
	DW	0170H
	DD	042695555r			; 58.3333
	DW	0252H
	DW	0171H
	DD	0426b8e39r			; 58.8889
	DW	0253H
	DW	0171H
	DD	0426dc71cr			; 59.4444
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?clock_small_hand_scale_down_20_left_60@@3PAUSCALE_DATA@@A DW 0251H ; clock_small_hand_scale_down_20_left_60
	DW	0179H
	DD	000000000r			; 0
	DW	0252H
	DW	017aH
	DD	03e4ccccdr			; 0.2
	DW	0253H
	DW	017aH
	DD	03ecccccdr			; 0.4
	DW	0254H
	DW	017bH
	DD	03f19999ar			; 0.6
	DW	0254H
	DW	017cH
	DD	03f4ccccdr			; 0.8
	DW	0255H
	DW	017dH
	DD	03f800000r			; 1
	DW	0255H
	DW	017eH
	DD	03f99999ar			; 1.2
	DW	0255H
	DW	017fH
	DD	03fb33333r			; 1.4
	DW	0256H
	DW	0180H
	DD	03fcccccdr			; 1.6
	DW	0256H
	DW	0181H
	DD	03fe66666r			; 1.8
	DW	0256H
	DW	0182H
	DD	040000000r			; 2
	DW	0256H
	DW	0183H
	DD	0400aaaabr			; 2.16667
	DW	0256H
	DW	0184H
	DD	040155555r			; 2.33333
	DW	0256H
	DW	0185H
	DD	040200000r			; 2.5
	DW	0256H
	DW	0186H
	DD	0402aaaabr			; 2.66667
	DW	0256H
	DW	0187H
	DD	040355555r			; 2.83333
	DW	0256H
	DW	0188H
	DD	040400000r			; 3
	DW	0255H
	DW	0189H
	DD	040555555r			; 3.33333
	DW	0254H
	DW	018aH
	DD	0406aaaabr			; 3.66667
	DW	0253H
	DW	018bH
	DD	040800000r			; 4
	DW	0252H
	DW	018bH
	DD	040866666r			; 4.2
	DW	0251H
	DW	018cH
	DD	0408ccccdr			; 4.4
	DW	0250H
	DW	018cH
	DD	040933333r			; 4.6
	DW	024fH
	DW	018cH
	DD	04099999ar			; 4.8
	DW	024eH
	DW	018cH
	DD	040a00000r			; 5
	DW	024dH
	DW	018cH
	DD	040a66666r			; 5.2
	DW	024cH
	DW	018cH
	DD	040accccdr			; 5.4
	DW	024bH
	DW	018cH
	DD	040b33333r			; 5.6
	DW	024aH
	DW	018bH
	DD	040b9999ar			; 5.8
	DW	0249H
	DW	018bH
	DD	040c00000r			; 6
	DW	0248H
	DW	018aH
	DD	040c80000r			; 6.25
	DW	0247H
	DW	0189H
	DD	040d00000r			; 6.5
	DW	0246H
	DW	0188H
	DD	040d80000r			; 6.75
	DW	0245H
	DW	0187H
	DD	040e00000r			; 7
	DW	0245H
	DW	0186H
	DD	040e66666r			; 7.2
	DW	0244H
	DW	0185H
	DD	040eccccdr			; 7.4
	DW	0244H
	DW	0184H
	DD	040f33333r			; 7.6
	DW	0244H
	DW	0183H
	DD	040f9999ar			; 7.8
	DW	0244H
	DW	0182H
	DD	041000000r			; 8
	DW	0244H
	DW	0181H
	DD	041033333r			; 8.2
	DW	0244H
	DW	0180H
	DD	041066666r			; 8.4
	DW	0244H
	DW	017fH
	DD	04109999ar			; 8.6
	DW	0244H
	DW	017eH
	DD	0410ccccdr			; 8.8
	DW	0244H
	DW	017dH
	DD	041100000r			; 9
	DW	0245H
	DW	017cH
	DD	041140000r			; 9.25
	DW	0245H
	DW	017bH
	DD	041180000r			; 9.5
	DW	0246H
	DW	017aH
	DD	0411c0000r			; 9.75
	DW	0247H
	DW	0179H
	DD	041200000r			; 10
	DW	0248H
	DW	0179H
	DD	041233333r			; 10.2
	DW	0249H
	DW	0179H
	DD	041266666r			; 10.4
	DW	024aH
	DW	0179H
	DD	04129999ar			; 10.6
	DW	024bH
	DW	0178H
	DD	0412ccccdr			; 10.8
	DW	024cH
	DW	0178H
	DD	041300000r			; 11
	DW	024dH
	DW	0178H
	DD	041333333r			; 11.2
	DW	024eH
	DW	0179H
	DD	041366666r			; 11.4
	DW	024fH
	DW	0179H
	DD	04139999ar			; 11.6
	DW	0250H
	DW	0179H
	DD	0413ccccdr			; 11.8
	DW	00H
	DW	00H
	DD	07f7fffffr			; 3.40282e+38
?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA DD 0c2480000r ; -50 ; `get_airspeed_indicator_needle_value'::`5'::value
?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA DD 041f00000r ; 30 ; `get_clock_hand_values'::`5'::minute_value
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_altitude_counter_digits@@YGXXZ
_TEXT	SEGMENT
_buffer$ = -52						; size = 20
_altitude$ = -32					; size = 4
_fg_colour$ = -28					; size = 4
_y_max$ = -24						; size = 4
_x_max$ = -20						; size = 4
_y_min$ = -16						; size = 4
_x_min$ = -12						; size = 4
_y_org$ = -8						; size = 4
_x_org$ = -4						; size = 4
?draw_altitude_counter_digits@@YGXXZ PROC		; draw_altitude_counter_digits, COMDAT

; 1059 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1060 : 	float
; 1061 : 		x_org = 0.0,

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _x_org$[ebp], xmm0

; 1062 : 		y_org = 0.0,

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 f8	 movss	 DWORD PTR _y_org$[ebp], xmm0

; 1063 : 		x_min,
; 1064 : 		y_min,
; 1065 : 		x_max,
; 1066 : 		y_max;
; 1067 : 
; 1068 : 	rgb_colour
; 1069 : 		fg_colour;
; 1070 : 
; 1071 : 	int
; 1072 : 		altitude = (int)(feet(current_flight_dynamics->barometric_altitude.value) / 100.0) % 100;

  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0001e	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00026	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  0002e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00032	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  0003a	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0003e	99		 cdq
  0003f	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  00044	f7 f9		 idiv	 ecx
  00046	89 55 e0	 mov	 DWORD PTR _altitude$[ebp], edx

; 1073 : 
; 1074 : 	char
; 1075 : 		buffer[20];
; 1076 : 
; 1077 : 	x_min = x_org;

  00049	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_org$[ebp]
  0004e	f3 0f 11 45 f4	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 1078 : 	y_min = y_org;

  00053	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_org$[ebp]
  00058	f3 0f 11 45 f0	 movss	 DWORD PTR _y_min$[ebp], xmm0

; 1079 : 	x_max = x_org + ALTITUDE_COUNTER_WIDTH - 0.001;

  0005d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x_org$[ebp]
  00062	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42000000
  0006a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0006e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00076	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007a	f3 0f 11 45 ec	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 1080 : 	y_max = y_org + ALTITUDE_COUNTER_HEIGHT - 0.001;

  0007f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y_org$[ebp]
  00084	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@41800000
  0008c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00090	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  00098	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009c	f3 0f 11 45 e8	 movss	 DWORD PTR _y_max$[ebp], xmm0

; 1081 : 
; 1082 : 	set_viewport (x_min, y_min, x_max, y_max);

  000a1	51		 push	 ecx
  000a2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y_max$[ebp]
  000a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ac	51		 push	 ecx
  000ad	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  000b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b7	51		 push	 ecx
  000b8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_min$[ebp]
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	51		 push	 ecx
  000c3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  000c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cd	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 1083 : 
; 1084 : 	set_rgb_colour(fg_colour, 180, 180, 180, 255);

  000d2	c6 45 e6 b4	 mov	 BYTE PTR _fg_colour$[ebp+2], 180 ; 000000b4H
  000d6	c6 45 e5 b4	 mov	 BYTE PTR _fg_colour$[ebp+1], 180 ; 000000b4H
  000da	c6 45 e4 b4	 mov	 BYTE PTR _fg_colour$[ebp], 180 ; 000000b4H
  000de	c6 45 e7 ff	 mov	 BYTE PTR _fg_colour$[ebp+3], 255 ; 000000ffH

; 1085 : 	set_mono_font_colour(fg_colour);

  000e2	8b 45 e4	 mov	 eax, DWORD PTR _fg_colour$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 1086 : 
; 1087 : 	sprintf(buffer, "%02d", altitude);

  000eb	8b 45 e0	 mov	 eax, DWORD PTR _altitude$[ebp]
  000ee	50		 push	 eax
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_04OGKJMPGK@?$CF02d@
  000f4	8d 4d cc	 lea	 ecx, DWORD PTR _buffer$[ebp]
  000f7	51		 push	 ecx
  000f8	e8 00 00 00 00	 call	 _sprintf
  000fd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1088 : 
; 1089 : 	set_mono_font_type (MONO_FONT_TYPE_8X14);

  00100	6a 06		 push	 6
  00102	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 1090 : 	set_mono_font_position(13.0, 3.0);

  00107	51		 push	 ecx
  00108	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00110	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00115	51		 push	 ecx
  00116	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41500000
  0011e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00123	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position

; 1091 : 
; 1092 : 	print_mono_font_string(buffer);

  00128	8d 45 cc	 lea	 eax, DWORD PTR _buffer$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?print_mono_font_string@@YGXPBD@Z ; print_mono_font_string

; 1093 : }

  00131	5f		 pop	 edi
  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
?draw_altitude_counter_digits@@YGXXZ ENDP		; draw_altitude_counter_digits
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?test_scale@@YGXPAUSCALE_DATA@@MMM@Z
_TEXT	SEGMENT
_value$ = -4						; size = 4
_scale$ = 8						; size = 4
_first$ = 12						; size = 4
_last$ = 16						; size = 4
_step$ = 20						; size = 4
?test_scale@@YGXPAUSCALE_DATA@@MMM@Z PROC		; test_scale, COMDAT

; 421  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 422  : 	float
; 423  : 		value;
; 424  : 
; 425  : 	for (value = first; value <= last; value += step)

  00009	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _first$[ebp]
  0000e	f3 0f 11 45 fc	 movss	 DWORD PTR _value$[ebp], xmm0
  00013	eb 0f		 jmp	 SHORT $LN4@test_scale
$LN2@test_scale:
  00015	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _value$[ebp]
  0001a	f3 0f 58 45 14	 addss	 xmm0, DWORD PTR _step$[ebp]
  0001f	f3 0f 11 45 fc	 movss	 DWORD PTR _value$[ebp], xmm0
$LN4@test_scale:
  00024	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _last$[ebp]
  00029	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _value$[ebp]
  0002d	72 3f		 jb	 SHORT $LN3@test_scale

; 426  : 	{
; 427  : 		scale = find_scale_value (scale, value);

  0002f	51		 push	 ecx
  00030	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _value$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	8b 45 08	 mov	 eax, DWORD PTR _scale$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  00043	89 45 08	 mov	 DWORD PTR _scale$[ebp], eax

; 428  : 
; 429  : 		set_pixel (ix_640_480 + scale->x, iy_640_480 + scale->y, sys_col_red);

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  0004b	50		 push	 eax
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _scale$[ebp]
  0004f	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  00053	03 15 00 00 00
	00		 add	 edx, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00059	52		 push	 edx
  0005a	8b 45 08	 mov	 eax, DWORD PTR _scale$[ebp]
  0005d	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00060	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel

; 430  : 	}

  0006c	eb a7		 jmp	 SHORT $LN2@test_scale
$LN3@test_scale:

; 431  : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 10 00	 ret	 16			; 00000010H
?test_scale@@YGXPAUSCALE_DATA@@MMM@Z ENDP		; test_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z
_TEXT	SEGMENT
_scale$ = 8						; size = 4
_value$ = 12						; size = 4
?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z PROC	; find_scale_value, COMDAT

; 407  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
$LN2@find_scale:

; 408  : 	while (value >= (scale+1)->value)

  00009	8b 45 08	 mov	 eax, DWORD PTR _scale$[ebp]
  0000c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _value$[ebp]
  00011	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  00015	72 0b		 jb	 SHORT $LN3@find_scale

; 409  : 	{
; 410  : 		scale++;

  00017	8b 45 08	 mov	 eax, DWORD PTR _scale$[ebp]
  0001a	83 c0 08	 add	 eax, 8
  0001d	89 45 08	 mov	 DWORD PTR _scale$[ebp], eax

; 411  : 	}

  00020	eb e7		 jmp	 SHORT $LN2@find_scale
$LN3@find_scale:

; 412  : 
; 413  : 	return (scale);

  00022	8b 45 08	 mov	 eax, DWORD PTR _scale$[ebp]

; 414  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ENDP	; find_scale_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_clock_hand_values@@YGXPAM00@Z
_TEXT	SEGMENT
tv94 = -88						; size = 4
tv86 = -84						; size = 4
_second_hand_value$ = -16				; size = 4
_minute_hand_value$ = -12				; size = 4
_hour_hand_value$ = -8					; size = 4
_time_of_day$ = -4					; size = 4
_hours$ = 8						; size = 4
_minutes$ = 12						; size = 4
_seconds$ = 16						; size = 4
?get_clock_hand_values@@YGXPAM00@Z PROC			; get_clock_hand_values, COMDAT

; 341  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 342  : 	float
; 343  : 		time_of_day,
; 344  : 		hour_hand_value,
; 345  : 		minute_hand_value,
; 346  : 		second_hand_value;
; 347  : 
; 348  : 	if (test_cockpit_instruments)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00010	0f 84 d7 00 00
	00		 je	 $LN2@get_clock_

; 349  : 	{
; 350  : 		static float
; 351  : 			hour_value = 0.0,
; 352  : 			minute_value = 30.0,
; 353  : 			second_value = 0.0;
; 354  : 
; 355  : 		hour_value += 0.1;

  00016	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  0001e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00026	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0

; 356  : 
; 357  : 		if (hour_value >= 12.0)

  00032	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  0003a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4028000000000000
  00042	72 0b		 jb	 SHORT $LN4@get_clock_

; 358  : 		{
; 359  : 			hour_value = 0.0;

  00044	0f 57 c0	 xorps	 xmm0, xmm0
  00047	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0
$LN4@get_clock_:

; 360  : 		}
; 361  : 
; 362  : 		minute_value += 0.5;

  0004f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  00057	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0005f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00063	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0

; 363  : 
; 364  : 		if (minute_value >= 60.0)

  0006b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  00073	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@404e000000000000
  0007b	72 0b		 jb	 SHORT $LN5@get_clock_

; 365  : 		{
; 366  : 			minute_value = 0.0;

  0007d	0f 57 c0	 xorps	 xmm0, xmm0
  00080	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0
$LN5@get_clock_:

; 367  : 		}
; 368  : 
; 369  : 		second_value += 1.0;

  00088	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  00090	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00098	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0

; 370  : 
; 371  : 		if (second_value >= 60.0)

  000a4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  000ac	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@404e000000000000
  000b4	72 0b		 jb	 SHORT $LN6@get_clock_

; 372  : 		{
; 373  : 			second_value = 0.0;

  000b6	0f 57 c0	 xorps	 xmm0, xmm0
  000b9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA, xmm0
$LN6@get_clock_:

; 374  : 		}
; 375  : 
; 376  : 		hour_hand_value = hour_value;

  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?hour_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR _hour_hand_value$[ebp], xmm0

; 377  : 
; 378  : 		minute_hand_value = minute_value;

  000ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?minute_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  000d6	f3 0f 11 45 f4	 movss	 DWORD PTR _minute_hand_value$[ebp], xmm0

; 379  : 
; 380  : 		second_hand_value = second_value;

  000db	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?second_value@?4??get_clock_hand_values@@YGXPAM00@Z@4MA
  000e3	f3 0f 11 45 f0	 movss	 DWORD PTR _second_hand_value$[ebp], xmm0

; 381  : 	}
; 382  : 	else

  000e8	e9 a7 00 00 00	 jmp	 $LN3@get_clock_
$LN2@get_clock_:

; 383  : 	{
; 384  : 		time_of_day = get_local_entity_float_value (get_session_entity (), FLOAT_TYPE_TIME_OF_DAY);

  000ed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  000f4	74 0c		 je	 SHORT $LN8@get_clock_
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	89 4d ac	 mov	 DWORD PTR tv86[ebp], ecx
  00100	eb 21		 jmp	 SHORT $LN9@get_clock_
$LN8@get_clock_:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_clock_hand_values@@YGXPAM00@Z@4JA
  00108	83 c2 2b	 add	 edx, 43			; 0000002bH
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN9@get_clock_:
  00123	b9 01 00 00 00	 mov	 ecx, 1
  00128	85 c9		 test	 ecx, ecx
  0012a	74 09		 je	 SHORT $LN10@get_clock_
  0012c	c7 45 a8 8e 00
	00 00		 mov	 DWORD PTR tv94[ebp], 142 ; 0000008eH
  00133	eb 21		 jmp	 SHORT $LN11@get_clock_
$LN10@get_clock_:
  00135	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_clock_hand_values@@YGXPAM00@Z@4JA
  0013b	83 c2 2b	 add	 edx, 43			; 0000002bH
  0013e	52		 push	 edx
  0013f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00149	50		 push	 eax
  0014a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN11@get_clock_:
  00156	68 8e 00 00 00	 push	 142			; 0000008eH
  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00161	51		 push	 ecx
  00162	69 55 ac bc 02
	00 00		 imul	 edx, DWORD PTR tv86[ebp], 700
  00169	8b 45 a8	 mov	 eax, DWORD PTR tv94[ebp]
  0016c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00173	ff d1		 call	 ecx
  00175	d9 5d fc	 fstp	 DWORD PTR _time_of_day$[ebp]

; 385  : 
; 386  : 		get_analogue_clock_values (time_of_day, &hour_hand_value, &minute_hand_value, &second_hand_value);

  00178	8d 45 f0	 lea	 eax, DWORD PTR _second_hand_value$[ebp]
  0017b	50		 push	 eax
  0017c	8d 4d f4	 lea	 ecx, DWORD PTR _minute_hand_value$[ebp]
  0017f	51		 push	 ecx
  00180	8d 55 f8	 lea	 edx, DWORD PTR _hour_hand_value$[ebp]
  00183	52		 push	 edx
  00184	51		 push	 ecx
  00185	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  0018a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018f	e8 00 00 00 00	 call	 ?get_analogue_clock_values@@YGXMPAM00@Z ; get_analogue_clock_values
$LN3@get_clock_:

; 387  : 	}
; 388  : 
; 389  : 	*hours = hour_hand_value;

  00194	8b 45 08	 mov	 eax, DWORD PTR _hours$[ebp]
  00197	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _hour_hand_value$[ebp]
  0019c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 390  : 
; 391  : 	*minutes = minute_hand_value;

  001a0	8b 45 0c	 mov	 eax, DWORD PTR _minutes$[ebp]
  001a3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _minute_hand_value$[ebp]
  001a8	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 392  : 
; 393  : 	*seconds = second_hand_value;

  001ac	8b 45 10	 mov	 eax, DWORD PTR _seconds$[ebp]
  001af	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _second_hand_value$[ebp]
  001b4	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 394  : }

  001b8	5f		 pop	 edi
  001b9	5e		 pop	 esi
  001ba	5b		 pop	 ebx
  001bb	8b e5		 mov	 esp, ebp
  001bd	5d		 pop	 ebp
  001be	c2 0c 00	 ret	 12			; 0000000cH
?get_clock_hand_values@@YGXPAM00@Z ENDP			; get_clock_hand_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_barometric_altimeter_digital_value@@YGMXZ
_TEXT	SEGMENT
_altimeter_digital_value$ = -4				; size = 4
?get_barometric_altimeter_digital_value@@YGMXZ PROC	; get_barometric_altimeter_digital_value, COMDAT

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 311  : 	float
; 312  : 		altimeter_digital_value;
; 313  : 
; 314  : 	if (test_cockpit_instruments)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00010	74 48		 je	 SHORT $LN2@get_barome

; 315  : 	{
; 316  : 		static float
; 317  : 			value = 0.0;
; 318  : 
; 319  : 		value += 10.0;

  00012	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA
  0001a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4024000000000000
  00022	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA, xmm0

; 320  : 
; 321  : 		if (value > 100000.0)

  0002e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA
  00036	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@40f86a0000000000
  0003e	76 0b		 jbe	 SHORT $LN4@get_barome

; 322  : 		{
; 323  : 			value = 0.0;

  00040	0f 57 c0	 xorps	 xmm0, xmm0
  00043	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA, xmm0
$LN4@get_barome:

; 324  : 		}
; 325  : 
; 326  : 		altimeter_digital_value = value;

  0004b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_digital_value@@YGMXZ@4MA
  00053	f3 0f 11 45 fc	 movss	 DWORD PTR _altimeter_digital_value$[ebp], xmm0

; 327  : 	}
; 328  : 	else

  00058	eb 1a		 jmp	 SHORT $LN3@get_barome
$LN2@get_barome:

; 329  : 	{
; 330  : 		altimeter_digital_value = feet (current_flight_dynamics->barometric_altitude.value);

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005f	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00067	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  0006f	f3 0f 11 45 fc	 movss	 DWORD PTR _altimeter_digital_value$[ebp], xmm0
$LN3@get_barome:

; 331  : 	}
; 332  : 
; 333  : 	return (altimeter_digital_value);

  00074	d9 45 fc	 fld	 DWORD PTR _altimeter_digital_value$[ebp]

; 334  : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
?get_barometric_altimeter_digital_value@@YGMXZ ENDP	; get_barometric_altimeter_digital_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_barometric_altimeter_needle_value@@YGMXZ
_TEXT	SEGMENT
_altimeter_needle_value$ = -4				; size = 4
?get_barometric_altimeter_needle_value@@YGMXZ PROC	; get_barometric_altimeter_needle_value, COMDAT

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 	float
; 281  : 		altimeter_needle_value;
; 282  : 
; 283  : 	if (test_cockpit_instruments)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00010	74 48		 je	 SHORT $LN2@get_barome

; 284  : 	{
; 285  : 		static float
; 286  : 			value = 0.0;
; 287  : 
; 288  : 		value += 10.0;

  00012	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA
  0001a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4024000000000000
  00022	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA, xmm0

; 289  : 
; 290  : 		if (value > 1000.0)

  0002e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA
  00036	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@408f400000000000
  0003e	76 0b		 jbe	 SHORT $LN4@get_barome

; 291  : 		{
; 292  : 			value = 0.0;

  00040	0f 57 c0	 xorps	 xmm0, xmm0
  00043	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA, xmm0
$LN4@get_barome:

; 293  : 		}
; 294  : 
; 295  : 		altimeter_needle_value = value;

  0004b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?value@?4??get_barometric_altimeter_needle_value@@YGMXZ@4MA
  00053	f3 0f 11 45 fc	 movss	 DWORD PTR _altimeter_needle_value$[ebp], xmm0

; 296  : 	}
; 297  : 	else

  00058	eb 31		 jmp	 SHORT $LN3@get_barome
$LN2@get_barome:

; 298  : 	{
; 299  : 		altimeter_needle_value = fmod (feet (current_flight_dynamics->barometric_altitude.value), 1000.0f);

  0005a	51		 push	 ecx
  0005b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  00063	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0006d	f3 0f 10 80 2c
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9260]
  00075	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@4051f948
  0007d	51		 push	 ecx
  0007e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00083	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  00088	d9 5d fc	 fstp	 DWORD PTR _altimeter_needle_value$[ebp]
$LN3@get_barome:

; 300  : 	}
; 301  : 
; 302  : 	return (altimeter_needle_value);

  0008b	d9 45 fc	 fld	 DWORD PTR _altimeter_needle_value$[ebp]

; 303  : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
?get_barometric_altimeter_needle_value@@YGMXZ ENDP	; get_barometric_altimeter_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_airspeed_indicator_needle_value@@YGMXZ
_TEXT	SEGMENT
tv78 = -84						; size = 8
tv79 = -76						; size = 8
_airspeed_needle_value$ = -4				; size = 4
?get_airspeed_indicator_needle_value@@YGMXZ PROC	; get_airspeed_indicator_needle_value, COMDAT

; 246  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 247  : 	float
; 248  : 		airspeed_needle_value;
; 249  : 
; 250  : 	if (test_cockpit_instruments)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00010	74 4d		 je	 SHORT $LN2@get_airspe

; 251  : 	{
; 252  : 		static float
; 253  : 			value = -50.0;
; 254  : 
; 255  : 		value += 2.0;

  00012	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA
  0001a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4000000000000000
  00022	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA, xmm0

; 256  : 
; 257  : 		if (value > 300.0)

  0002e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA
  00036	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4072c00000000000
  0003e	76 10		 jbe	 SHORT $LN4@get_airspe

; 258  : 		{
; 259  : 			value = -50.0;

  00040	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2480000
  00048	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA, xmm0
$LN4@get_airspe:

; 260  : 		}
; 261  : 
; 262  : 		airspeed_needle_value = value;

  00050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?value@?4??get_airspeed_indicator_needle_value@@YGMXZ@4MA
  00058	f3 0f 11 45 fc	 movss	 DWORD PTR _airspeed_needle_value$[ebp], xmm0

; 263  : 	}
; 264  : 	else

  0005d	eb 1a		 jmp	 SHORT $LN3@get_airspe
$LN2@get_airspe:

; 265  : 	{
; 266  : 		airspeed_needle_value = knots (current_flight_dynamics->indicated_airspeed.value);

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00064	f3 0f 10 80 fc
	23 00 00	 movss	 xmm0, DWORD PTR [eax+9212]
  0006c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ff85d84
  00074	f3 0f 11 45 fc	 movss	 DWORD PTR _airspeed_needle_value$[ebp], xmm0
$LN3@get_airspe:

; 267  : 	}
; 268  : 
; 269  : 	airspeed_needle_value = bound (airspeed_needle_value, 0.0, 250.0);

  00079	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  0007e	0f 57 c9	 xorps	 xmm1, xmm1
  00081	66 0f 2f c8	 comisd	 xmm1, xmm0
  00085	76 0a		 jbe	 SHORT $LN8@get_airspe
  00087	0f 57 c0	 xorps	 xmm0, xmm0
  0008a	f2 0f 11 45 b4	 movsd	 QWORD PTR tv79[ebp], xmm0
  0008f	eb 32		 jmp	 SHORT $LN9@get_airspe
$LN8@get_airspe:
  00091	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00096	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@406f400000000000
  0009e	76 0f		 jbe	 SHORT $LN6@get_airspe
  000a0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@406f400000000000
  000a8	f2 0f 11 45 ac	 movsd	 QWORD PTR tv78[ebp], xmm0
  000ad	eb 0a		 jmp	 SHORT $LN7@get_airspe
$LN6@get_airspe:
  000af	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  000b4	f2 0f 11 45 ac	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN7@get_airspe:
  000b9	f2 0f 10 45 ac	 movsd	 xmm0, QWORD PTR tv78[ebp]
  000be	f2 0f 11 45 b4	 movsd	 QWORD PTR tv79[ebp], xmm0
$LN9@get_airspe:
  000c3	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv79[ebp]
  000c8	f3 0f 11 45 fc	 movss	 DWORD PTR _airspeed_needle_value$[ebp], xmm0

; 270  : 
; 271  : 	return (airspeed_needle_value);

  000cd	d9 45 fc	 fld	 DWORD PTR _airspeed_needle_value$[ebp]

; 272  : }

  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
?get_airspeed_indicator_needle_value@@YGMXZ ENDP	; get_airspeed_indicator_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_adi_slip_indicator_needle_value@@YGMXZ
_TEXT	SEGMENT
tv78 = -84						; size = 8
tv79 = -76						; size = 8
_slip_needle_value$ = -4				; size = 4
?get_adi_slip_indicator_needle_value@@YGMXZ PROC	; get_adi_slip_indicator_needle_value, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 	float
; 215  : 		slip_needle_value;
; 216  : 
; 217  : 	if (test_cockpit_instruments)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00010	74 4d		 je	 SHORT $LN2@get_adi_sl

; 218  : 	{
; 219  : 		static float
; 220  : 			value = -40.0;
; 221  : 
; 222  : 		value += 1.0;

  00012	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA
  0001a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00022	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00026	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA, xmm0

; 223  : 
; 224  : 		if (value > 40.0)

  0002e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA
  00036	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4044000000000000
  0003e	76 10		 jbe	 SHORT $LN4@get_adi_sl

; 225  : 		{
; 226  : 			value = -40.0;

  00040	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2200000
  00048	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA, xmm0
$LN4@get_adi_sl:

; 227  : 		}
; 228  : 
; 229  : 		slip_needle_value = value;

  00050	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?value@?4??get_adi_slip_indicator_needle_value@@YGMXZ@4MA
  00058	f3 0f 11 45 fc	 movss	 DWORD PTR _slip_needle_value$[ebp], xmm0

; 230  : 	}
; 231  : 	else

  0005d	eb 1a		 jmp	 SHORT $LN3@get_adi_sl
$LN2@get_adi_sl:

; 232  : 	{
; 233  : 		slip_needle_value = knots (current_flight_dynamics->indicated_slip.value);

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00064	f3 0f 10 80 14
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9236]
  0006c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ff85d84
  00074	f3 0f 11 45 fc	 movss	 DWORD PTR _slip_needle_value$[ebp], xmm0
$LN3@get_adi_sl:

; 234  : 	}
; 235  : 
; 236  : 	slip_needle_value = bound (slip_needle_value, -30.0, 30.0);

  00079	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _slip_needle_value$[ebp]
  0007e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c03e000000000000
  00086	66 0f 2f c8	 comisd	 xmm1, xmm0
  0008a	76 0f		 jbe	 SHORT $LN8@get_adi_sl
  0008c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c03e000000000000
  00094	f2 0f 11 45 b4	 movsd	 QWORD PTR tv79[ebp], xmm0
  00099	eb 32		 jmp	 SHORT $LN9@get_adi_sl
$LN8@get_adi_sl:
  0009b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _slip_needle_value$[ebp]
  000a0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@403e000000000000
  000a8	76 0f		 jbe	 SHORT $LN6@get_adi_sl
  000aa	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@403e000000000000
  000b2	f2 0f 11 45 ac	 movsd	 QWORD PTR tv78[ebp], xmm0
  000b7	eb 0a		 jmp	 SHORT $LN7@get_adi_sl
$LN6@get_adi_sl:
  000b9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _slip_needle_value$[ebp]
  000be	f2 0f 11 45 ac	 movsd	 QWORD PTR tv78[ebp], xmm0
$LN7@get_adi_sl:
  000c3	f2 0f 10 45 ac	 movsd	 xmm0, QWORD PTR tv78[ebp]
  000c8	f2 0f 11 45 b4	 movsd	 QWORD PTR tv79[ebp], xmm0
$LN9@get_adi_sl:
  000cd	f2 0f 5a 45 b4	 cvtsd2ss xmm0, QWORD PTR tv79[ebp]
  000d2	f3 0f 11 45 fc	 movss	 DWORD PTR _slip_needle_value$[ebp], xmm0

; 237  : 
; 238  : 	return (slip_needle_value);

  000d7	d9 45 fc	 fld	 DWORD PTR _slip_needle_value$[ebp]

; 239  : }

  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5b		 pop	 ebx
  000dd	8b e5		 mov	 esp, ebp
  000df	5d		 pop	 ebp
  000e0	c3		 ret	 0
?get_adi_slip_indicator_needle_value@@YGMXZ ENDP	; get_adi_slip_indicator_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?deinitialise_altitude_counter@@YGXXZ
_TEXT	SEGMENT
?deinitialise_altitude_counter@@YGXXZ PROC		; deinitialise_altitude_counter, COMDAT

; 1131 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1132 : 	destroy_screen(altitude_counter_screen);	

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 1133 : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?deinitialise_altitude_counter@@YGXXZ ENDP		; deinitialise_altitude_counter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?initialise_altitude_counter@@YGXXZ
_TEXT	SEGMENT
?initialise_altitude_counter@@YGXXZ PROC		; initialise_altitude_counter, COMDAT

; 1125 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1126 : 	altitude_counter_screen = create_system_texture_screen(ALTITUDE_COUNTER_WIDTH, ALTITUDE_COUNTER_HEIGHT, TEXTURE_INDEX_AVCKPT_ALTITUDE_COUNTER, TEXTURE_TYPE_NOALPHA);

  00009	6a 01		 push	 1
  0000b	68 0c 09 00 00	 push	 2316			; 0000090cH
  00010	6a 10		 push	 16			; 00000010H
  00012	6a 20		 push	 32			; 00000020H
  00014	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A, eax

; 1127 : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?initialise_altitude_counter@@YGXXZ ENDP		; initialise_altitude_counter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_apache_altitude_counter@@YGXXZ
_TEXT	SEGMENT
_bg_colour$1 = -4					; size = 4
?draw_apache_altitude_counter@@YGXXZ PROC		; draw_apache_altitude_counter, COMDAT

; 1100 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1101 : 	set_active_screen (altitude_counter_screen);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 1102 : 
; 1103 : 	if (lock_screen (altitude_counter_screen))

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0001f	85 c0		 test	 eax, eax
  00021	74 3c		 je	 SHORT $LN2@draw_apach

; 1104 : 	{
; 1105 : 		rgb_colour
; 1106 : 			bg_colour;
; 1107 : 			
; 1108 : 		set_rgb_colour(bg_colour, 20, 20, 25, 255);

  00023	c6 45 fe 14	 mov	 BYTE PTR _bg_colour$1[ebp+2], 20 ; 00000014H
  00027	c6 45 fd 14	 mov	 BYTE PTR _bg_colour$1[ebp+1], 20 ; 00000014H
  0002b	c6 45 fc 19	 mov	 BYTE PTR _bg_colour$1[ebp], 25 ; 00000019H
  0002f	c6 45 ff ff	 mov	 BYTE PTR _bg_colour$1[ebp+3], 255 ; 000000ffH

; 1109 : 		set_block (0, 0, ALTITUDE_COUNTER_WIDTH - 1, ALTITUDE_COUNTER_HEIGHT - 1, bg_colour);

  00033	8b 45 fc	 mov	 eax, DWORD PTR _bg_colour$1[ebp]
  00036	50		 push	 eax
  00037	6a 0f		 push	 15			; 0000000fH
  00039	6a 1f		 push	 31			; 0000001fH
  0003b	6a 00		 push	 0
  0003d	6a 00		 push	 0
  0003f	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 1110 : 
; 1111 : 		draw_altitude_counter_digits();

  00044	e8 00 00 00 00	 call	 ?draw_altitude_counter_digits@@YGXXZ ; draw_altitude_counter_digits

; 1112 : 
; 1113 : 		flush_screen_texture_graphics(altitude_counter_screen);

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 1114 : 		unlock_screen (altitude_counter_screen);

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?altitude_counter_screen@@3PAUSCREEN@@A
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN2@draw_apach:

; 1115 : 	}
; 1116 : 
; 1117 : 	set_active_screen (video_screen);

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 1118 : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?draw_apache_altitude_counter@@YGXXZ ENDP		; draw_apache_altitude_counter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_apache_virtual_cockpit_clock_hand_values@@YGXPAM00@Z
_TEXT	SEGMENT
_second_hand_value$ = -12				; size = 4
_minute_hand_value$ = -8				; size = 4
_hour_hand_value$ = -4					; size = 4
_hours$ = 8						; size = 4
_minutes$ = 12						; size = 4
_seconds$ = 16						; size = 4
?get_apache_virtual_cockpit_clock_hand_values@@YGXPAM00@Z PROC ; get_apache_virtual_cockpit_clock_hand_values, COMDAT

; 1033 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1034 : 	float
; 1035 : 		hour_hand_value,
; 1036 : 		minute_hand_value,
; 1037 : 		second_hand_value;
; 1038 : 
; 1039 : 	get_clock_hand_values (&hour_hand_value, &minute_hand_value, &second_hand_value);

  00009	8d 45 f4	 lea	 eax, DWORD PTR _second_hand_value$[ebp]
  0000c	50		 push	 eax
  0000d	8d 4d f8	 lea	 ecx, DWORD PTR _minute_hand_value$[ebp]
  00010	51		 push	 ecx
  00011	8d 55 fc	 lea	 edx, DWORD PTR _hour_hand_value$[ebp]
  00014	52		 push	 edx
  00015	e8 00 00 00 00	 call	 ?get_clock_hand_values@@YGXPAM00@Z ; get_clock_hand_values

; 1040 : 
; 1041 : 	hour_hand_value *= -PI2 / 12.0;

  0001a	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _hour_hand_value$[ebp]
  0001f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0c15240000000
  00027	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002b	f3 0f 11 45 fc	 movss	 DWORD PTR _hour_hand_value$[ebp], xmm0

; 1042 : 
; 1043 : 	minute_hand_value *= -PI2 / 60.0;

  00030	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _minute_hand_value$[ebp]
  00035	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfbaceea00000000
  0003d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00041	f3 0f 11 45 f8	 movss	 DWORD PTR _minute_hand_value$[ebp], xmm0

; 1044 : 
; 1045 : 	second_hand_value *= -PI2 / 60.0;

  00046	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _second_hand_value$[ebp]
  0004b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfbaceea00000000
  00053	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00057	f3 0f 11 45 f4	 movss	 DWORD PTR _second_hand_value$[ebp], xmm0

; 1046 : 
; 1047 : 	*hours = hour_hand_value;

  0005c	8b 45 08	 mov	 eax, DWORD PTR _hours$[ebp]
  0005f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _hour_hand_value$[ebp]
  00064	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1048 : 
; 1049 : 	*minutes = minute_hand_value;

  00068	8b 45 0c	 mov	 eax, DWORD PTR _minutes$[ebp]
  0006b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _minute_hand_value$[ebp]
  00070	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1050 : 
; 1051 : 	*seconds = second_hand_value;

  00074	8b 45 10	 mov	 eax, DWORD PTR _seconds$[ebp]
  00077	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _second_hand_value$[ebp]
  0007c	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1052 : }

  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	5b		 pop	 ebx
  00083	8b e5		 mov	 esp, ebp
  00085	5d		 pop	 ebp
  00086	c2 0c 00	 ret	 12			; 0000000cH
?get_apache_virtual_cockpit_clock_hand_values@@YGXPAM00@Z ENDP ; get_apache_virtual_cockpit_clock_hand_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_apache_virtual_cockpit_barometric_altimeter_needle_value@@YGMXZ
_TEXT	SEGMENT
_altimeter_needle_value$ = -4				; size = 4
?get_apache_virtual_cockpit_barometric_altimeter_needle_value@@YGMXZ PROC ; get_apache_virtual_cockpit_barometric_altimeter_needle_value, COMDAT

; 1017 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1018 : 	float
; 1019 : 		altimeter_needle_value;
; 1020 : 
; 1021 : 	altimeter_needle_value = get_barometric_altimeter_needle_value ();

  00009	e8 00 00 00 00	 call	 ?get_barometric_altimeter_needle_value@@YGMXZ ; get_barometric_altimeter_needle_value
  0000e	d9 5d fc	 fstp	 DWORD PTR _altimeter_needle_value$[ebp]

; 1022 : 
; 1023 : 	altimeter_needle_value *= -PI2 / 1000.0;

  00011	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _altimeter_needle_value$[ebp]
  00016	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bf79bc65c28f5c29
  0001e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00022	f3 0f 11 45 fc	 movss	 DWORD PTR _altimeter_needle_value$[ebp], xmm0

; 1024 : 
; 1025 : 	return (altimeter_needle_value);

  00027	d9 45 fc	 fld	 DWORD PTR _altimeter_needle_value$[ebp]

; 1026 : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?get_apache_virtual_cockpit_barometric_altimeter_needle_value@@YGMXZ ENDP ; get_apache_virtual_cockpit_barometric_altimeter_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_apache_virtual_cockpit_airspeed_indicator_needle_value@@YGMXZ
_TEXT	SEGMENT
tv215 = -80						; size = 4
_roll$ = -12						; size = 4
_fraction$ = -8						; size = 4
_airspeed_needle_value$ = -4				; size = 4
?get_apache_virtual_cockpit_airspeed_indicator_needle_value@@YGMXZ PROC ; get_apache_virtual_cockpit_airspeed_indicator_needle_value, COMDAT

; 924  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 925  : 	float
; 926  : 		airspeed_needle_value,
; 927  : 		fraction,
; 928  : 		roll;
; 929  : 
; 930  : 	airspeed_needle_value = get_airspeed_indicator_needle_value ();

  00009	e8 00 00 00 00	 call	 ?get_airspeed_indicator_needle_value@@YGMXZ ; get_airspeed_indicator_needle_value
  0000e	d9 5d fc	 fstp	 DWORD PTR _airspeed_needle_value$[ebp]

; 931  : 
; 932  : 	//
; 933  : 	// non-linear scale
; 934  : 	//
; 935  : 	if (custom_3d_models.arneh_ah64d_cockpit)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A, 0
  00018	0f 84 d2 01 00
	00		 je	 $LN2@get_apache

; 936  : 	{
; 937  : 		if (airspeed_needle_value <= 20.0)

  0001e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00023	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4034000000000000
  0002b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002f	72 31		 jb	 SHORT $LN4@get_apache

; 938  : 		{
; 939  : 			fraction = airspeed_needle_value * (1.0 / 20.0);

  00031	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00036	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0003e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00042	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 940  : 	
; 941  : 			roll = fraction * rad (10.0);

  00047	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  0004c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc6571848000000
  00054	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00058	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  0005d	e9 89 01 00 00	 jmp	 $LN13@get_apache
$LN4@get_apache:

; 942  : 		}
; 943  : 		else if (airspeed_needle_value <= 40.0)

  00062	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00067	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4044000000000000
  0006f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00073	72 41		 jb	 SHORT $LN6@get_apache

; 944  : 		{
; 945  : 			fraction = (airspeed_needle_value - 20.0) * (1.0 / 20.0);

  00075	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  0007a	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  00082	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0008a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008e	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 946  : 	
; 947  : 			roll = (fraction * (rad (30.0) - rad (10.0))) + rad (10.0);

  00093	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  00098	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd6571848000000
  000a0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc6571848000000
  000a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ac	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  000b1	e9 35 01 00 00	 jmp	 $LN13@get_apache
$LN6@get_apache:

; 948  : 		}
; 949  : 		else if (airspeed_needle_value <= 100.0)

  000b6	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  000bb	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  000c3	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c7	72 41		 jb	 SHORT $LN8@get_apache

; 950  : 		{
; 951  : 			fraction = (airspeed_needle_value - 40.0) * (1.0 / 60.0);

  000c9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  000ce	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4044000000000000
  000d6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91111111111111
  000de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e2	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 952  : 	
; 953  : 			roll = (fraction * (rad (147.0) - rad (30.0))) + rad (30.0);

  000e7	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  000ec	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@400056168e400000
  000f4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0c15236000000
  000fc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00100	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  00105	e9 e1 00 00 00	 jmp	 $LN13@get_apache
$LN8@get_apache:

; 954  : 		}
; 955  : 		else if (airspeed_needle_value <= 150.0)

  0010a	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  0010f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4062c00000000000
  00117	66 0f 2f c8	 comisd	 xmm1, xmm0
  0011b	72 41		 jb	 SHORT $LN10@get_apache

; 956  : 		{
; 957  : 			fraction = (airspeed_needle_value - 100.0) * (1.0 / 50.0);

  0011d	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00122	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4059000000000000
  0012a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00132	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00136	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 958  : 	
; 959  : 			roll = (fraction * (rad (213.0) - rad (147.0))) + rad (147.0);

  0013b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  00140	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff26e40d5000000
  00148	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4004866b1bc00000
  00150	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00154	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  00159	e9 8d 00 00 00	 jmp	 $LN13@get_apache
$LN10@get_apache:

; 960  : 		}
; 961  : 		else if (airspeed_needle_value <= 200.0)

  0015e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00163	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4069000000000000
  0016b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0016f	72 3e		 jb	 SHORT $LN12@get_apache

; 962  : 		{
; 963  : 			fraction = (airspeed_needle_value - 150.0) * (1.0 / 50.0);

  00171	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00176	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4062c00000000000
  0017e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00186	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0018a	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 964  : 	
; 965  : 			roll = (fraction * (rad (270.0) - rad (213.0))) + rad (213.0);

  0018f	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  00194	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fefd5b5cd000000
  0019c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@400dbd8b86400000
  001a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a8	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0

; 966  : 		}
; 967  : 		else

  001ad	eb 3c		 jmp	 SHORT $LN13@get_apache
$LN12@get_apache:

; 968  : 		{
; 969  : 			fraction = (airspeed_needle_value - 200.0) * (1.0 / 50.0);

  001af	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  001b4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4069000000000000
  001bc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  001c4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c8	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 970  : 	
; 971  : 			roll = (fraction * (rad (335.0) - rad (270.0))) + rad (270.0);

  001cd	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  001d2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff226c3ba800000
  001da	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4012d97c7cc00000
  001e2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001e6	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
$LN13@get_apache:

; 972  : 		}
; 973  : 	}
; 974  : 	else

  001eb	e9 79 01 00 00	 jmp	 $LN21@get_apache
$LN2@get_apache:

; 975  : 	{
; 976  : 		if (airspeed_needle_value <= 50.0)

  001f0	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  001f5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4049000000000000
  001fd	66 0f 2f c8	 comisd	 xmm1, xmm0
  00201	72 31		 jb	 SHORT $LN14@get_apache

; 977  : 		{
; 978  : 			fraction = airspeed_needle_value * (1.0 / 50.0);

  00203	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00208	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00210	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00214	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 979  : 	
; 980  : 			roll = fraction * rad (60.0);

  00219	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  0021e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  00226	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022a	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  0022f	e9 35 01 00 00	 jmp	 $LN21@get_apache
$LN14@get_apache:

; 981  : 		}
; 982  : 		else if (airspeed_needle_value <= 100.0)

  00234	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00239	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00241	66 0f 2f c8	 comisd	 xmm1, xmm0
  00245	72 41		 jb	 SHORT $LN16@get_apache

; 983  : 		{
; 984  : 			fraction = (airspeed_needle_value - 50.0) * (1.0 / 50.0);

  00247	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  0024c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4049000000000000
  00254	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  0025c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00260	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 985  : 	
; 986  : 			roll = (fraction * (rad (150.0) - rad (60.0))) + rad (60.0);

  00265	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  0026a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb51000000
  00272	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  0027a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027e	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  00283	e9 e1 00 00 00	 jmp	 $LN21@get_apache
$LN16@get_apache:

; 987  : 		}
; 988  : 		else if (airspeed_needle_value <= 150.0)

  00288	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  0028d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4062c00000000000
  00295	66 0f 2f c8	 comisd	 xmm1, xmm0
  00299	72 41		 jb	 SHORT $LN18@get_apache

; 989  : 		{
; 990  : 			fraction = (airspeed_needle_value - 100.0) * (1.0 / 50.0);

  0029b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  002a0	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4059000000000000
  002a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  002b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b4	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 991  : 	
; 992  : 			roll = (fraction * (rad (210.0) - rad (150.0))) + rad (150.0);

  002b9	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  002be	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  002c6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4004f1a6c3800000
  002ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002d2	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
  002d7	e9 8d 00 00 00	 jmp	 $LN21@get_apache
$LN18@get_apache:

; 993  : 		}
; 994  : 		else if (airspeed_needle_value <= 200.0)

  002dc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  002e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4069000000000000
  002e9	66 0f 2f c8	 comisd	 xmm1, xmm0
  002ed	72 3e		 jb	 SHORT $LN20@get_apache

; 995  : 		{
; 996  : 			fraction = (airspeed_needle_value - 150.0) * (1.0 / 50.0);

  002ef	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  002f4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4062c00000000000
  002fc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00304	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00308	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 997  : 	
; 998  : 			roll = (fraction * (rad (270.0) - rad (210.0))) + rad (210.0);

  0030d	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  00312	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  0031a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@400d524fde800000
  00322	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00326	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0

; 999  : 		}
; 1000 : 		else

  0032b	eb 3c		 jmp	 SHORT $LN21@get_apache
$LN20@get_apache:

; 1001 : 		{
; 1002 : 			fraction = (airspeed_needle_value - 200.0) * (1.0 / 50.0);

  0032d	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  00332	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4069000000000000
  0033a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00342	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00346	f3 0f 11 45 f8	 movss	 DWORD PTR _fraction$[ebp], xmm0

; 1003 : 	
; 1004 : 			roll = (fraction * (rad (330.0) - rad (270.0))) + rad (270.0);

  0034b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _fraction$[ebp]
  00350	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0c15236000000
  00358	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4012d97c7cc00000
  00360	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00364	f3 0f 11 45 f4	 movss	 DWORD PTR _roll$[ebp], xmm0
$LN21@get_apache:

; 1005 : 		}
; 1006 : 	}
; 1007 : 
; 1008 : 
; 1009 : 	return (-roll);

  00369	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0036e	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00375	f3 0f 11 45 b0	 movss	 DWORD PTR tv215[ebp], xmm0
  0037a	d9 45 b0	 fld	 DWORD PTR tv215[ebp]

; 1010 : }

  0037d	5f		 pop	 edi
  0037e	5e		 pop	 esi
  0037f	5b		 pop	 ebx
  00380	8b e5		 mov	 esp, ebp
  00382	5d		 pop	 ebp
  00383	c3		 ret	 0
?get_apache_virtual_cockpit_airspeed_indicator_needle_value@@YGMXZ ENDP ; get_apache_virtual_cockpit_airspeed_indicator_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_apache_virtual_cockpit_adi_slip_indicator_needle_value@@YGMXZ
_TEXT	SEGMENT
_slip_needle_value$ = -4				; size = 4
?get_apache_virtual_cockpit_adi_slip_indicator_needle_value@@YGMXZ PROC ; get_apache_virtual_cockpit_adi_slip_indicator_needle_value, COMDAT

; 908  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 909  : 	float
; 910  : 		slip_needle_value;
; 911  : 
; 912  : 	slip_needle_value = get_adi_slip_indicator_needle_value ();

  00009	e8 00 00 00 00	 call	 ?get_adi_slip_indicator_needle_value@@YGMXZ ; get_adi_slip_indicator_needle_value
  0000e	d9 5d fc	 fstp	 DWORD PTR _slip_needle_value$[ebp]

; 913  : 
; 914  : 	slip_needle_value *= rad (30.0) / 30.0;

  00011	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _slip_needle_value$[ebp]
  00016	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  0001e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00022	f3 0f 11 45 fc	 movss	 DWORD PTR _slip_needle_value$[ebp], xmm0

; 915  : 
; 916  : 	return (slip_needle_value);

  00027	d9 45 fc	 fld	 DWORD PTR _slip_needle_value$[ebp]

; 917  : }

  0002a	5f		 pop	 edi
  0002b	5e		 pop	 esi
  0002c	5b		 pop	 ebx
  0002d	8b e5		 mov	 esp, ebp
  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?get_apache_virtual_cockpit_adi_slip_indicator_needle_value@@YGMXZ ENDP ; get_apache_virtual_cockpit_adi_slip_indicator_needle_value
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?get_apache_virtual_cockpit_adi_angles@@YGXQAY02MPAM11@Z
_TEXT	SEGMENT
tv273 = -176						; size = 4
_result$ = -108						; size = 36
_heading_rotation$ = -72				; size = 36
_inverse_attitude$ = -36				; size = 36
_attitude$ = 8						; size = 4
_heading$ = 12						; size = 4
_pitch$ = 16						; size = 4
_roll$ = 20						; size = 4
?get_apache_virtual_cockpit_adi_angles@@YGXQAY02MPAM11@Z PROC ; get_apache_virtual_cockpit_adi_angles, COMDAT

; 868  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 00 00
	00		 sub	 esp, 176		; 000000b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 869  : 	matrix3x3
; 870  : 		inverse_attitude,
; 871  : 		heading_rotation,
; 872  : 		result;
; 873  : 
; 874  : 	//
; 875  : 	// get inverse attitude (attiude * inverse attitude = identity) which aligns the ADI with the world axis
; 876  : 	//
; 877  : 
; 878  : 	inverse_attitude[0][0] = attitude[0][0];

  0000c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00011	6b c8 00	 imul	 ecx, eax, 0
  00014	03 4d 08	 add	 ecx, DWORD PTR _attitude$[ebp]
  00017	ba 04 00 00 00	 mov	 edx, 4
  0001c	6b c2 00	 imul	 eax, edx, 0
  0001f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00024	6b d2 00	 imul	 edx, edx, 0
  00027	8d 54 15 dc	 lea	 edx, DWORD PTR _inverse_attitude$[ebp+edx]
  0002b	be 04 00 00 00	 mov	 esi, 4
  00030	6b f6 00	 imul	 esi, esi, 0
  00033	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00036	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 879  : 	inverse_attitude[1][0] = attitude[0][1];

  00039	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 08	 add	 ecx, DWORD PTR _attitude$[ebp]
  00044	ba 04 00 00 00	 mov	 edx, 4
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00051	c1 e0 00	 shl	 eax, 0
  00054	8d 44 05 dc	 lea	 eax, DWORD PTR _inverse_attitude$[ebp+eax]
  00058	be 04 00 00 00	 mov	 esi, 4
  0005d	6b f6 00	 imul	 esi, esi, 0
  00060	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  00063	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 880  : 	inverse_attitude[2][0] = attitude[0][2];

  00066	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0006b	6b c8 00	 imul	 ecx, eax, 0
  0006e	03 4d 08	 add	 ecx, DWORD PTR _attitude$[ebp]
  00071	ba 04 00 00 00	 mov	 edx, 4
  00076	d1 e2		 shl	 edx, 1
  00078	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0007d	d1 e0		 shl	 eax, 1
  0007f	8d 44 05 dc	 lea	 eax, DWORD PTR _inverse_attitude$[ebp+eax]
  00083	be 04 00 00 00	 mov	 esi, 4
  00088	6b f6 00	 imul	 esi, esi, 0
  0008b	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0008e	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 881  : 	inverse_attitude[0][1] = attitude[1][0];

  00091	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00096	c1 e0 00	 shl	 eax, 0
  00099	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  0009c	b9 04 00 00 00	 mov	 ecx, 4
  000a1	6b d1 00	 imul	 edx, ecx, 0
  000a4	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000a9	6b c9 00	 imul	 ecx, ecx, 0
  000ac	8d 4c 0d dc	 lea	 ecx, DWORD PTR _inverse_attitude$[ebp+ecx]
  000b0	be 04 00 00 00	 mov	 esi, 4
  000b5	c1 e6 00	 shl	 esi, 0
  000b8	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  000bb	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 882  : 	inverse_attitude[1][1] = attitude[1][1];

  000be	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000c3	c1 e0 00	 shl	 eax, 0
  000c6	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  000c9	b9 04 00 00 00	 mov	 ecx, 4
  000ce	c1 e1 00	 shl	 ecx, 0
  000d1	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000d6	c1 e2 00	 shl	 edx, 0
  000d9	8d 54 15 dc	 lea	 edx, DWORD PTR _inverse_attitude$[ebp+edx]
  000dd	be 04 00 00 00	 mov	 esi, 4
  000e2	c1 e6 00	 shl	 esi, 0
  000e5	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  000e8	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 883  : 	inverse_attitude[2][1] = attitude[1][2];

  000eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f0	c1 e0 00	 shl	 eax, 0
  000f3	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  000f6	b9 04 00 00 00	 mov	 ecx, 4
  000fb	d1 e1		 shl	 ecx, 1
  000fd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00102	d1 e2		 shl	 edx, 1
  00104	8d 54 15 dc	 lea	 edx, DWORD PTR _inverse_attitude$[ebp+edx]
  00108	be 04 00 00 00	 mov	 esi, 4
  0010d	c1 e6 00	 shl	 esi, 0
  00110	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00113	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 884  : 	inverse_attitude[0][2] = attitude[2][0];

  00116	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011b	d1 e0		 shl	 eax, 1
  0011d	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  00120	b9 04 00 00 00	 mov	 ecx, 4
  00125	6b d1 00	 imul	 edx, ecx, 0
  00128	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0012d	6b c9 00	 imul	 ecx, ecx, 0
  00130	8d 4c 0d dc	 lea	 ecx, DWORD PTR _inverse_attitude$[ebp+ecx]
  00134	be 04 00 00 00	 mov	 esi, 4
  00139	d1 e6		 shl	 esi, 1
  0013b	8b 14 10	 mov	 edx, DWORD PTR [eax+edx]
  0013e	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 885  : 	inverse_attitude[1][2] = attitude[2][1];

  00141	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00146	d1 e0		 shl	 eax, 1
  00148	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  0014b	b9 04 00 00 00	 mov	 ecx, 4
  00150	c1 e1 00	 shl	 ecx, 0
  00153	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00158	c1 e2 00	 shl	 edx, 0
  0015b	8d 54 15 dc	 lea	 edx, DWORD PTR _inverse_attitude$[ebp+edx]
  0015f	be 04 00 00 00	 mov	 esi, 4
  00164	d1 e6		 shl	 esi, 1
  00166	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00169	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 886  : 	inverse_attitude[2][2] = attitude[2][2];

  0016c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00171	d1 e0		 shl	 eax, 1
  00173	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  00176	b9 04 00 00 00	 mov	 ecx, 4
  0017b	d1 e1		 shl	 ecx, 1
  0017d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00182	d1 e2		 shl	 edx, 1
  00184	8d 54 15 dc	 lea	 edx, DWORD PTR _inverse_attitude$[ebp+edx]
  00188	be 04 00 00 00	 mov	 esi, 4
  0018d	d1 e6		 shl	 esi, 1
  0018f	8b 04 08	 mov	 eax, DWORD PTR [eax+ecx]
  00192	89 04 32	 mov	 DWORD PTR [edx+esi], eax

; 887  : 
; 888  : 	//
; 889  : 	// rotate heading so that the ADI pitch markings face the pilot
; 890  : 	//
; 891  : 
; 892  : 	get_3d_transformation_matrix (heading_rotation, get_heading_from_attitude_matrix (attitude), 0.0, 0.0);

  00195	51		 push	 ecx
  00196	0f 57 c0	 xorps	 xmm0, xmm0
  00199	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019e	51		 push	 ecx
  0019f	0f 57 c0	 xorps	 xmm0, xmm0
  001a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ac	d1 e0		 shl	 eax, 1
  001ae	03 45 08	 add	 eax, DWORD PTR _attitude$[ebp]
  001b1	b9 04 00 00 00	 mov	 ecx, 4
  001b6	d1 e1		 shl	 ecx, 1
  001b8	51		 push	 ecx
  001b9	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001c8	d1 e2		 shl	 edx, 1
  001ca	03 55 08	 add	 edx, DWORD PTR _attitude$[ebp]
  001cd	b8 04 00 00 00	 mov	 eax, 4
  001d2	6b c8 00	 imul	 ecx, eax, 0
  001d5	51		 push	 ecx
  001d6	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001e5	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR tv273[ebp]
  001eb	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv273[ebp]
  001f3	51		 push	 ecx
  001f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f9	8d 55 b8	 lea	 edx, DWORD PTR _heading_rotation$[ebp]
  001fc	52		 push	 edx
  001fd	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 893  : 
; 894  : 	multiply_matrix3x3_matrix3x3 (result, heading_rotation, inverse_attitude);

  00202	8d 45 dc	 lea	 eax, DWORD PTR _inverse_attitude$[ebp]
  00205	50		 push	 eax
  00206	8d 4d b8	 lea	 ecx, DWORD PTR _heading_rotation$[ebp]
  00209	51		 push	 ecx
  0020a	8d 55 94	 lea	 edx, DWORD PTR _result$[ebp]
  0020d	52		 push	 edx
  0020e	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 895  : 
; 896  : 	*heading = get_heading_from_attitude_matrix (result);

  00213	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00218	d1 e0		 shl	 eax, 1
  0021a	8d 4c 05 94	 lea	 ecx, DWORD PTR _result$[ebp+eax]
  0021e	ba 04 00 00 00	 mov	 edx, 4
  00223	d1 e2		 shl	 edx, 1
  00225	51		 push	 ecx
  00226	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0022b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00230	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00235	d1 e0		 shl	 eax, 1
  00237	8d 4c 05 94	 lea	 ecx, DWORD PTR _result$[ebp+eax]
  0023b	ba 04 00 00 00	 mov	 edx, 4
  00240	6b c2 00	 imul	 eax, edx, 0
  00243	51		 push	 ecx
  00244	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00249	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024e	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00253	8b 4d 0c	 mov	 ecx, DWORD PTR _heading$[ebp]
  00256	d9 19		 fstp	 DWORD PTR [ecx]

; 897  : 
; 898  : 	*pitch = get_pitch_from_attitude_matrix (result);

  00258	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0025d	d1 e0		 shl	 eax, 1
  0025f	8d 4c 05 94	 lea	 ecx, DWORD PTR _result$[ebp+eax]
  00263	ba 04 00 00 00	 mov	 edx, 4
  00268	c1 e2 00	 shl	 edx, 0
  0026b	51		 push	 ecx
  0026c	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00271	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00276	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  0027b	8b 45 10	 mov	 eax, DWORD PTR _pitch$[ebp]
  0027e	d9 18		 fstp	 DWORD PTR [eax]

; 899  : 
; 900  : 	*roll = get_roll_from_attitude_matrix (result);

  00280	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00285	c1 e0 00	 shl	 eax, 0
  00288	8d 4c 05 94	 lea	 ecx, DWORD PTR _result$[ebp+eax]
  0028c	ba 04 00 00 00	 mov	 edx, 4
  00291	c1 e2 00	 shl	 edx, 0
  00294	51		 push	 ecx
  00295	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0029a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a4	6b c8 00	 imul	 ecx, eax, 0
  002a7	8d 54 0d 94	 lea	 edx, DWORD PTR _result$[ebp+ecx]
  002ab	b8 04 00 00 00	 mov	 eax, 4
  002b0	c1 e0 00	 shl	 eax, 0
  002b3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002b8	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002bf	51		 push	 ecx
  002c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c5	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  002ca	8b 4d 14	 mov	 ecx, DWORD PTR _roll$[ebp]
  002cd	d9 19		 fstp	 DWORD PTR [ecx]

; 901  : }

  002cf	5f		 pop	 edi
  002d0	5e		 pop	 esi
  002d1	5b		 pop	 ebx
  002d2	8b e5		 mov	 esp, ebp
  002d4	5d		 pop	 ebp
  002d5	c2 10 00	 ret	 16			; 00000010H
?get_apache_virtual_cockpit_adi_angles@@YGXQAY02MPAM11@Z ENDP ; get_apache_virtual_cockpit_adi_angles
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_apache_fixed_cockpit_clock_hands@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv68 = -104						; size = 4
_p$ = -36						; size = 4
_second_hand_scale$ = -32				; size = 4
_minute_hand_scale$ = -28				; size = 4
_hour_hand_scale$ = -24					; size = 4
_y_centre$ = -20					; size = 4
_x_centre$ = -16					; size = 4
_second_hand_value$ = -12				; size = 4
_minute_hand_value$ = -8				; size = 4
_hour_hand_value$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_apache_fixed_cockpit_clock_hands@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_fixed_cockpit_clock_hands, COMDAT

; 750  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 751  : 	float
; 752  : 		hour_hand_value,
; 753  : 		minute_hand_value,
; 754  : 		second_hand_value,
; 755  : 		x_centre,
; 756  : 		y_centre;
; 757  : 
; 758  : 	scale_data
; 759  : 		*hour_hand_scale,
; 760  : 		*minute_hand_scale,
; 761  : 		*second_hand_scale,
; 762  : 		*p;
; 763  : 
; 764  : 	if (draw_virtual_cockpit_needles_on_fixed_cockpits)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_virtual_cockpit_needles_on_fixed_cockpits@@3HA, 0 ; draw_virtual_cockpit_needles_on_fixed_cockpits
  00010	74 05		 je	 SHORT $LN4@draw_apach

; 765  : 	{
; 766  : 		return;

  00012	e9 da 02 00 00	 jmp	 $LN1@draw_apach
$LN4@draw_apach:

; 767  : 	}
; 768  : 
; 769  : 	get_clock_hand_values (&hour_hand_value, &minute_hand_value, &second_hand_value);

  00017	8d 45 f4	 lea	 eax, DWORD PTR _second_hand_value$[ebp]
  0001a	50		 push	 eax
  0001b	8d 4d f8	 lea	 ecx, DWORD PTR _minute_hand_value$[ebp]
  0001e	51		 push	 ecx
  0001f	8d 55 fc	 lea	 edx, DWORD PTR _hour_hand_value$[ebp]
  00022	52		 push	 edx
  00023	e8 00 00 00 00	 call	 ?get_clock_hand_values@@YGXPAM00@Z ; get_clock_hand_values

; 770  : 
; 771  : 	switch (panel)

  00028	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  0002b	89 45 98	 mov	 DWORD PTR tv68[ebp], eax
  0002e	83 7d 98 16	 cmp	 DWORD PTR tv68[ebp], 22	; 00000016H
  00032	74 73		 je	 SHORT $LN7@draw_apach
  00034	83 7d 98 17	 cmp	 DWORD PTR tv68[ebp], 23	; 00000017H
  00038	74 3c		 je	 SHORT $LN6@draw_apach
  0003a	83 7d 98 18	 cmp	 DWORD PTR tv68[ebp], 24	; 00000018H
  0003e	74 05		 je	 SHORT $LN5@draw_apach
  00040	e9 93 00 00 00	 jmp	 $LN8@draw_apach
$LN5@draw_apach:

; 772  : 	{
; 773  : 		////////////////////////////////////////
; 774  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 775  : 		////////////////////////////////////////
; 776  : 		{
; 777  : 			x_centre = 45.0;

  00045	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42340000
  0004d	f3 0f 11 45 f0	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 778  : 
; 779  : 			y_centre = 388.0;

  00052	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c20000
  0005a	f3 0f 11 45 ec	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 780  : 
; 781  : 			hour_hand_scale = clock_small_hand_scale_down_20_ahead;

  0005f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hour_hand_scale$[ebp], OFFSET ?clock_small_hand_scale_down_20_ahead@@3PAUSCALE_DATA@@A

; 782  : 
; 783  : 			minute_hand_scale = clock_large_hand_scale_down_20_ahead;

  00066	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _minute_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_ahead@@3PAUSCALE_DATA@@A

; 784  : 
; 785  : 			second_hand_scale = clock_large_hand_scale_down_20_ahead;

  0006d	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _second_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_ahead@@3PAUSCALE_DATA@@A

; 786  : 
; 787  : 			break;

  00074	eb 70		 jmp	 SHORT $LN2@draw_apach
$LN6@draw_apach:

; 788  : 		}
; 789  : 		////////////////////////////////////////
; 790  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 791  : 		////////////////////////////////////////
; 792  : 		{
; 793  : 			x_centre = 317.0;

  00076	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@439e8000
  0007e	f3 0f 11 45 f0	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 794  : 
; 795  : 			y_centre = 349.0;

  00083	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43ae8000
  0008b	f3 0f 11 45 ec	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 796  : 
; 797  : 			hour_hand_scale = clock_small_hand_scale_down_20_left_30;

  00090	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hour_hand_scale$[ebp], OFFSET ?clock_small_hand_scale_down_20_left_30@@3PAUSCALE_DATA@@A

; 798  : 
; 799  : 			minute_hand_scale = clock_large_hand_scale_down_20_left_30;

  00097	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _minute_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_left_30@@3PAUSCALE_DATA@@A

; 800  : 
; 801  : 			second_hand_scale = clock_large_hand_scale_down_20_left_30;

  0009e	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _second_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_left_30@@3PAUSCALE_DATA@@A

; 802  : 
; 803  : 			break;

  000a5	eb 3f		 jmp	 SHORT $LN2@draw_apach
$LN7@draw_apach:

; 804  : 		}
; 805  : 		////////////////////////////////////////
; 806  : 		case COCKPIT_PANEL_DOWN20_LEFT60:
; 807  : 		////////////////////////////////////////
; 808  : 		{
; 809  : 			x_centre = 589.0;

  000a7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44134000
  000af	f3 0f 11 45 f0	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 810  : 
; 811  : 			y_centre = 386.0;

  000b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c10000
  000bc	f3 0f 11 45 ec	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 812  : 
; 813  : 			hour_hand_scale = clock_small_hand_scale_down_20_left_60;

  000c1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _hour_hand_scale$[ebp], OFFSET ?clock_small_hand_scale_down_20_left_60@@3PAUSCALE_DATA@@A

; 814  : 
; 815  : 			minute_hand_scale = clock_large_hand_scale_down_20_left_60;

  000c8	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _minute_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_left_60@@3PAUSCALE_DATA@@A

; 816  : 
; 817  : 			second_hand_scale = clock_large_hand_scale_down_20_left_60;

  000cf	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _second_hand_scale$[ebp], OFFSET ?clock_large_hand_scale_down_20_left_60@@3PAUSCALE_DATA@@A

; 818  : 
; 819  : 			break;

  000d6	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN8@draw_apach:

; 820  : 		}
; 821  : 		////////////////////////////////////////
; 822  : 		default:
; 823  : 		////////////////////////////////////////
; 824  : 		{
; 825  : 			debug_fatal (instrument_error);

  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instrument_error@@3PADA
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e3	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 826  : 
; 827  : 			break;
; 828  : 		}
; 829  : 	}
; 830  : 
; 831  : 	//
; 832  : 	// draw second hand over minute hand over hour hand
; 833  : 	//
; 834  : 
; 835  : 	p = find_scale_value (hour_hand_scale, hour_hand_value);

  000e6	51		 push	 ecx
  000e7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _hour_hand_value$[ebp]
  000ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f1	8b 45 e8	 mov	 eax, DWORD PTR _hour_hand_scale$[ebp]
  000f4	50		 push	 eax
  000f5	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  000fa	89 45 dc	 mov	 DWORD PTR _p$[ebp], eax

; 836  : 
; 837  : 	draw_line (fx_640_480 + x_centre, fy_640_480 + y_centre, fx_640_480 + p->x, fy_640_480 + p->y, white_needle_colour);

  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A
  00102	50		 push	 eax
  00103	8b 4d dc	 mov	 ecx, DWORD PTR _p$[ebp]
  00106	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  0010a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0010e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  00116	51		 push	 ecx
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	8b 45 dc	 mov	 eax, DWORD PTR _p$[ebp]
  0011f	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00122	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00126	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  0012e	51		 push	 ecx
  0012f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00134	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  0013c	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  00141	51		 push	 ecx
  00142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  0014f	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  00154	51		 push	 ecx
  00155	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015a	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 838  : 
; 839  : 	p = find_scale_value (minute_hand_scale, minute_hand_value);

  0015f	51		 push	 ecx
  00160	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _minute_hand_value$[ebp]
  00165	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016a	8b 45 e4	 mov	 eax, DWORD PTR _minute_hand_scale$[ebp]
  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  00173	89 45 dc	 mov	 DWORD PTR _p$[ebp], eax

; 840  : 
; 841  : 	draw_line (fx_640_480 + x_centre, fy_640_480 + y_centre, fx_640_480 + p->x, fy_640_480 + p->y, white_needle_colour);

  00176	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A
  0017b	50		 push	 eax
  0017c	8b 4d dc	 mov	 ecx, DWORD PTR _p$[ebp]
  0017f	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  00183	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00187	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  0018f	51		 push	 ecx
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	8b 45 dc	 mov	 eax, DWORD PTR _p$[ebp]
  00198	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  0019b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0019f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  001a7	51		 push	 ecx
  001a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ad	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  001b5	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  001ba	51		 push	 ecx
  001bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  001c8	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  001cd	51		 push	 ecx
  001ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d3	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 842  : 
; 843  : 	p = find_scale_value (second_hand_scale, second_hand_value);

  001d8	51		 push	 ecx
  001d9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _second_hand_value$[ebp]
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	8b 45 e0	 mov	 eax, DWORD PTR _second_hand_scale$[ebp]
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  001ec	89 45 dc	 mov	 DWORD PTR _p$[ebp], eax

; 844  : 
; 845  : 	draw_line (fx_640_480 + x_centre, fy_640_480 + y_centre, fx_640_480 + p->x, fy_640_480 + p->y, red_needle_colour);

  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?red_needle_colour@@3UREAL_COLOUR@@A
  001f4	50		 push	 eax
  001f5	8b 4d dc	 mov	 ecx, DWORD PTR _p$[ebp]
  001f8	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  001fc	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00200	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  00208	51		 push	 ecx
  00209	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020e	8b 45 dc	 mov	 eax, DWORD PTR _p$[ebp]
  00211	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  00214	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00218	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  00220	51		 push	 ecx
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  0022e	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  00233	51		 push	 ecx
  00234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00239	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  00241	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  00246	51		 push	 ecx
  00247	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024c	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 846  : 
; 847  : 	if (test_cockpit_instruments && DEBUG_MODULE)

  00251	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00258	0f 84 93 00 00
	00		 je	 $LN9@draw_apach
  0025e	33 c0		 xor	 eax, eax
  00260	0f 84 8b 00 00
	00		 je	 $LN9@draw_apach

; 848  : 	{
; 849  : 		test_scale (minute_hand_scale, 0.0, 55.0, 5.0);

  00266	51		 push	 ecx
  00267	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  0026f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00274	51		 push	 ecx
  00275	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@425c0000
  0027d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00282	51		 push	 ecx
  00283	0f 57 c0	 xorps	 xmm0, xmm0
  00286	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0028b	8b 45 e4	 mov	 eax, DWORD PTR _minute_hand_scale$[ebp]
  0028e	50		 push	 eax
  0028f	e8 00 00 00 00	 call	 ?test_scale@@YGXPAUSCALE_DATA@@MMM@Z ; test_scale

; 850  : 
; 851  : 		test_scale (hour_hand_scale, 0.0, 11.0, 1.0);

  00294	51		 push	 ecx
  00295	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0029d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002a2	51		 push	 ecx
  002a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41300000
  002ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b0	51		 push	 ecx
  002b1	0f 57 c0	 xorps	 xmm0, xmm0
  002b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b9	8b 45 e8	 mov	 eax, DWORD PTR _hour_hand_scale$[ebp]
  002bc	50		 push	 eax
  002bd	e8 00 00 00 00	 call	 ?test_scale@@YGXPAUSCALE_DATA@@MMM@Z ; test_scale

; 852  : 
; 853  : 		set_pixel (ix_640_480 + x_centre, iy_640_480 + y_centre, sys_col_red);

  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  002c7	50		 push	 eax
  002c8	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  002d0	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  002d5	f3 0f 2c c8	 cvttss2si ecx, xmm0
  002d9	51		 push	 ecx
  002da	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  002e2	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  002e7	f3 0f 2c d0	 cvttss2si edx, xmm0
  002eb	52		 push	 edx
  002ec	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel
$LN9@draw_apach:
$LN1@draw_apach:

; 854  : 	}
; 855  : }

  002f1	5f		 pop	 edi
  002f2	5e		 pop	 esi
  002f3	5b		 pop	 ebx
  002f4	8b e5		 mov	 esp, ebp
  002f6	5d		 pop	 ebp
  002f7	c2 04 00	 ret	 4
?draw_apache_fixed_cockpit_clock_hands@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_fixed_cockpit_clock_hands
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_apache_fixed_cockpit_barometric_altimeter_digits@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv65 = -88						; size = 4
_fractional_digit$ = -20				; size = 4
_whole_digit$ = -16					; size = 4
_y$ = -12						; size = 4
_x$ = -8						; size = 4
_altimeter_digital_value$ = -4				; size = 4
_panel$ = 8						; size = 4
?draw_apache_fixed_cockpit_barometric_altimeter_digits@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_fixed_cockpit_barometric_altimeter_digits, COMDAT

; 602  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 603  : 	float
; 604  : 		altimeter_digital_value,
; 605  : 		x,
; 606  : 		y,
; 607  : 		whole_digit,
; 608  : 		fractional_digit;
; 609  : 
; 610  : 	altimeter_digital_value = get_barometric_altimeter_digital_value ();

  00009	e8 00 00 00 00	 call	 ?get_barometric_altimeter_digital_value@@YGMXZ ; get_barometric_altimeter_digital_value
  0000e	d9 5d fc	 fstp	 DWORD PTR _altimeter_digital_value$[ebp]

; 611  : 
; 612  : 	switch (panel)

  00011	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00014	89 45 a8	 mov	 DWORD PTR tv65[ebp], eax
  00017	83 7d a8 18	 cmp	 DWORD PTR tv65[ebp], 24	; 00000018H
  0001b	74 05		 je	 SHORT $LN4@draw_apach
  0001d	e9 f7 07 00 00	 jmp	 $LN13@draw_apach
$LN4@draw_apach:

; 613  : 	{
; 614  : 		////////////////////////////////////////
; 615  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 616  : 		////////////////////////////////////////
; 617  : 		{
; 618  : 			set_mono_font_type (MONO_FONT_TYPE_3X6);

  00022	6a 00		 push	 0
  00024	e8 00 00 00 00	 call	 ?set_mono_font_type@@YGXW4MONO_FONT_TYPES@@@Z ; set_mono_font_type

; 619  : 
; 620  : 			set_mono_font_colour (white_digit_colour);

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_digit_colour@@3UREAL_COLOUR@@A
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?set_mono_font_colour@@YGXUREAL_COLOUR@@@Z ; set_mono_font_colour

; 621  : 
; 622  : 			set_viewport (fx_640_480 + 579.0, fy_640_480 + 438.0, fx_640_480 + 587.999, fy_640_480 + 442.999);

  00034	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fy_640_480@@3MA
  0003c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@407baffbe76c8b44
  00044	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00048	51		 push	 ecx
  00049	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fx_640_480@@3MA
  00056	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40825ffdf3b645a2
  0005e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00062	51		 push	 ecx
  00063	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00068	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fy_640_480@@3MA
  00070	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@407b600000000000
  00078	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007c	51		 push	 ecx
  0007d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00082	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fx_640_480@@3MA
  0008a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4082180000000000
  00092	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00096	51		 push	 ecx
  00097	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009c	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 623  : 
; 624  : 			////////////////////////////////////////
; 625  : 			//
; 626  : 			// 1,000's digit
; 627  : 			//
; 628  : 			////////////////////////////////////////
; 629  : 
; 630  : 			#define ONE_REV		  				(10000.0f)
; 631  : 			#define ONE_TENTH_REV				((ONE_REV) / 10.0f)
; 632  : 			#define ONE_OVER_ONE_TENTH_REV	(1.0f / (ONE_TENTH_REV))
; 633  : 			#define DIGIT_CHANGE_THRESHOLD	(20.0f)
; 634  : 
; 635  : 			x = fx_640_480 + 583.0;

  000a1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fx_640_480@@3MA
  000a9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4082380000000000
  000b1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b5	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 636  : 			y = fy_640_480 + 438.0 + 6.0;

  000ba	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fy_640_480@@3MA
  000c2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@407b600000000000
  000ca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4018000000000000
  000d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d6	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 637  : 
; 638  : 			whole_digit = fmod (altimeter_digital_value, ONE_REV);

  000db	51		 push	 ecx
  000dc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c4000
  000e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e9	51		 push	 ecx
  000ea	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  000f9	d9 5d f0	 fstp	 DWORD PTR _whole_digit$[ebp]

; 639  : 
; 640  : 			fractional_digit = fmod (altimeter_digital_value, ONE_TENTH_REV);

  000fc	51		 push	 ecx
  000fd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  00105	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010a	51		 push	 ecx
  0010b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  00110	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00115	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  0011a	d9 5d ec	 fstp	 DWORD PTR _fractional_digit$[ebp]

; 641  : 
; 642  : 			y += (float) ((int) (whole_digit * ONE_OVER_ONE_TENTH_REV)) * 6.0;

  0011d	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _whole_digit$[ebp]
  00122	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3a83126f
  0012a	f3 0f 2c c0	 cvttss2si eax, xmm0
  0012e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00132	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00136	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4018000000000000
  0013e	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  00143	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00147	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0014b	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 643  : 
; 644  : 			//
; 645  : 			// rotate digits near change-over point (except at bottom zero)
; 646  : 			//
; 647  : 
; 648  : 			if (altimeter_digital_value >= DIGIT_CHANGE_THRESHOLD)

  00150	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  00155	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@41a00000
  0015c	72 74		 jb	 SHORT $LN8@draw_apach

; 649  : 			{
; 650  : 				if (fractional_digit <= DIGIT_CHANGE_THRESHOLD)

  0015e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  00166	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  0016a	72 2d		 jb	 SHORT $LN6@draw_apach

; 651  : 				{
; 652  : 					y += (fractional_digit - DIGIT_CHANGE_THRESHOLD) * (3.0 / DIGIT_CHANGE_THRESHOLD);

  0016c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  00171	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@41a00000
  00179	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0017d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00185	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  0018a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0018e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00192	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0
  00197	eb 39		 jmp	 SHORT $LN8@draw_apach
$LN6@draw_apach:

; 653  : 				}
; 654  : 				else if (fractional_digit >= (ONE_TENTH_REV - DIGIT_CHANGE_THRESHOLD))

  00199	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  0019e	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@44750000
  001a5	72 2b		 jb	 SHORT $LN8@draw_apach

; 655  : 				{
; 656  : 					y += (fractional_digit - (ONE_TENTH_REV - DIGIT_CHANGE_THRESHOLD)) * (3.0 / DIGIT_CHANGE_THRESHOLD);

  001a7	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  001ac	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@44750000
  001b4	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001b8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc3333333333333
  001c0	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  001c5	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001c9	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001cd	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0
$LN8@draw_apach:

; 657  : 				}
; 658  : 			}
; 659  : 
; 660  : 			set_mono_font_position (x, y); print_mono_font_char ('9'); y -= 6.0;

  001d2	51		 push	 ecx
  001d3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	51		 push	 ecx
  001de	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  001ed	6a 39		 push	 57			; 00000039H
  001ef	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  001f4	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  001f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00201	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00205	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 661  : 			set_mono_font_position (x, y); print_mono_font_char ('0'); y -= 6.0;

  0020a	51		 push	 ecx
  0020b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00210	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00215	51		 push	 ecx
  00216	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0021b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00220	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00225	6a 30		 push	 48			; 00000030H
  00227	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0022c	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00231	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00239	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0023d	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 662  : 			set_mono_font_position (x, y); print_mono_font_char ('1'); y -= 6.0;

  00242	51		 push	 ecx
  00243	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00248	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024d	51		 push	 ecx
  0024e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00253	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00258	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  0025d	6a 31		 push	 49			; 00000031H
  0025f	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  00264	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00269	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00271	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00275	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 663  : 			set_mono_font_position (x, y); print_mono_font_char ('2'); y -= 6.0;

  0027a	51		 push	 ecx
  0027b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00280	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00285	51		 push	 ecx
  00286	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0028b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00290	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00295	6a 32		 push	 50			; 00000032H
  00297	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0029c	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002a1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  002a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ad	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 664  : 			set_mono_font_position (x, y); print_mono_font_char ('3'); y -= 6.0;

  002b2	51		 push	 ecx
  002b3	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  002b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bd	51		 push	 ecx
  002be	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  002c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c8	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  002cd	6a 33		 push	 51			; 00000033H
  002cf	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  002d4	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  002d9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  002e1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e5	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 665  : 			set_mono_font_position (x, y); print_mono_font_char ('4'); y -= 6.0;

  002ea	51		 push	 ecx
  002eb	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  002f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f5	51		 push	 ecx
  002f6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  002fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00300	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00305	6a 34		 push	 52			; 00000034H
  00307	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0030c	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00311	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00319	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0031d	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 666  : 			set_mono_font_position (x, y); print_mono_font_char ('5'); y -= 6.0;

  00322	51		 push	 ecx
  00323	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	51		 push	 ecx
  0032e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00333	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00338	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  0033d	6a 35		 push	 53			; 00000035H
  0033f	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  00344	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00349	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00351	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00355	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 667  : 			set_mono_font_position (x, y); print_mono_font_char ('6'); y -= 6.0;

  0035a	51		 push	 ecx
  0035b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00360	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00365	51		 push	 ecx
  00366	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0036b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00370	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00375	6a 36		 push	 54			; 00000036H
  00377	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0037c	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00381	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00389	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0038d	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 668  : 			set_mono_font_position (x, y); print_mono_font_char ('7'); y -= 6.0;

  00392	51		 push	 ecx
  00393	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00398	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039d	51		 push	 ecx
  0039e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  003a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a8	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  003ad	6a 37		 push	 55			; 00000037H
  003af	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  003b4	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003b9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  003c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003c5	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 669  : 			set_mono_font_position (x, y); print_mono_font_char ('8'); y -= 6.0;

  003ca	51		 push	 ecx
  003cb	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  003d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d5	51		 push	 ecx
  003d6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  003db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003e0	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  003e5	6a 38		 push	 56			; 00000038H
  003e7	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  003ec	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  003f1	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  003f9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003fd	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 670  : 			set_mono_font_position (x, y); print_mono_font_char ('9'); y -= 6.0;

  00402	51		 push	 ecx
  00403	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00408	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040d	51		 push	 ecx
  0040e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00413	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00418	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  0041d	6a 39		 push	 57			; 00000039H
  0041f	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  00424	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00429	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00431	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00435	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 671  : 			set_mono_font_position (x, y); print_mono_font_char ('0');

  0043a	51		 push	 ecx
  0043b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00440	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00445	51		 push	 ecx
  00446	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0044b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00450	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00455	6a 30		 push	 48			; 00000030H
  00457	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 672  : 
; 673  : 			#undef ONE_REV
; 674  : 			#undef ONE_TENTH_REV
; 675  : 			#undef ONE_OVER_ONE_TENTH_REV
; 676  : 			#undef DIGIT_CHANGE_THRESHOLD
; 677  : 
; 678  : 			////////////////////////////////////////
; 679  : 			//
; 680  : 			// 10,000's digit
; 681  : 			//
; 682  : 			////////////////////////////////////////
; 683  : 
; 684  : 			#define ONE_REV		  				(100000.0f)
; 685  : 			#define ONE_TENTH_REV				((ONE_REV) / 10.0f)
; 686  : 			#define ONE_OVER_ONE_TENTH_REV	(1.0f / (ONE_TENTH_REV))
; 687  : 			#define DIGIT_CHANGE_THRESHOLD	(20.0f)
; 688  : 
; 689  : 			x = fx_640_480 + 579.0;

  0045c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fx_640_480@@3MA
  00464	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4082180000000000
  0046c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00470	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 690  : 			y = fy_640_480 + 438.0 + 6.0;

  00475	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?fy_640_480@@3MA
  0047d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@407b600000000000
  00485	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4018000000000000
  0048d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00491	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 691  : 
; 692  : 			whole_digit = fmod (altimeter_digital_value, ONE_REV);

  00496	51		 push	 ecx
  00497	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47c35000
  0049f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a4	51		 push	 ecx
  004a5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  004aa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004af	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  004b4	d9 5d f0	 fstp	 DWORD PTR _whole_digit$[ebp]

; 693  : 
; 694  : 			fractional_digit = fmod (altimeter_digital_value, ONE_TENTH_REV);

  004b7	51		 push	 ecx
  004b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@461c4000
  004c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c5	51		 push	 ecx
  004c6	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  004cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d0	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  004d5	d9 5d ec	 fstp	 DWORD PTR _fractional_digit$[ebp]

; 695  : 
; 696  : 			y += (float) ((int) (whole_digit * ONE_OVER_ONE_TENTH_REV)) * 6.0;

  004d8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _whole_digit$[ebp]
  004dd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@38d1b717
  004e5	f3 0f 2c c0	 cvttss2si eax, xmm0
  004e9	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  004ed	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  004f1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4018000000000000
  004f9	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  004fe	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00502	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00506	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 697  : 
; 698  : 			//
; 699  : 			// rotate digits near change-over point (except at bottom zero)
; 700  : 			//
; 701  : 
; 702  : 			if (altimeter_digital_value >= DIGIT_CHANGE_THRESHOLD)

  0050b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_digital_value$[ebp]
  00510	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@41a00000
  00517	72 74		 jb	 SHORT $LN12@draw_apach

; 703  : 			{
; 704  : 				if (fractional_digit <= DIGIT_CHANGE_THRESHOLD)

  00519	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41a00000
  00521	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  00525	72 2d		 jb	 SHORT $LN10@draw_apach

; 705  : 				{
; 706  : 					y += (fractional_digit - DIGIT_CHANGE_THRESHOLD) * (3.0 / DIGIT_CHANGE_THRESHOLD);

  00527	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  0052c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@41a00000
  00534	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00538	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc3333333333333
  00540	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  00545	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00549	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0054d	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0
  00552	eb 39		 jmp	 SHORT $LN12@draw_apach
$LN10@draw_apach:

; 707  : 				}
; 708  : 				else if (fractional_digit >= (ONE_TENTH_REV - DIGIT_CHANGE_THRESHOLD))

  00554	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  00559	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@461bf000
  00560	72 2b		 jb	 SHORT $LN12@draw_apach

; 709  : 				{
; 710  : 					y += (fractional_digit - (ONE_TENTH_REV - DIGIT_CHANGE_THRESHOLD)) * (3.0 / DIGIT_CHANGE_THRESHOLD);

  00562	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fractional_digit$[ebp]
  00567	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@461bf000
  0056f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00573	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fc3333333333333
  0057b	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _y$[ebp]
  00580	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00584	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00588	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0
$LN12@draw_apach:

; 711  : 				}
; 712  : 			}
; 713  : 
; 714  : 			set_mono_font_position (x, y); print_mono_font_char ('9'); y -= 6.0;

  0058d	51		 push	 ecx
  0058e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00593	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00598	51		 push	 ecx
  00599	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0059e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a3	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  005a8	6a 39		 push	 57			; 00000039H
  005aa	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  005af	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005b4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  005bc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005c0	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 715  : 			set_mono_font_position (x, y); print_mono_font_char ('0'); y -= 6.0;

  005c5	51		 push	 ecx
  005c6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  005cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d0	51		 push	 ecx
  005d1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  005d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005db	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  005e0	6a 30		 push	 48			; 00000030H
  005e2	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  005e7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  005ec	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  005f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005f8	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 716  : 			set_mono_font_position (x, y); print_mono_font_char ('1'); y -= 6.0;

  005fd	51		 push	 ecx
  005fe	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00603	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00608	51		 push	 ecx
  00609	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0060e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00613	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00618	6a 31		 push	 49			; 00000031H
  0061a	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0061f	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00624	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  0062c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00630	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 717  : 			set_mono_font_position (x, y); print_mono_font_char ('2'); y -= 6.0;

  00635	51		 push	 ecx
  00636	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  0063b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00640	51		 push	 ecx
  00641	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00646	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064b	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00650	6a 32		 push	 50			; 00000032H
  00652	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  00657	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0065c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00664	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00668	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 718  : 			set_mono_font_position (x, y); print_mono_font_char ('3'); y -= 6.0;

  0066d	51		 push	 ecx
  0066e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00673	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00678	51		 push	 ecx
  00679	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0067e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00683	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00688	6a 33		 push	 51			; 00000033H
  0068a	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0068f	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00694	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  0069c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006a0	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 719  : 			set_mono_font_position (x, y); print_mono_font_char ('4'); y -= 6.0;

  006a5	51		 push	 ecx
  006a6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  006ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b0	51		 push	 ecx
  006b1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  006b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bb	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  006c0	6a 34		 push	 52			; 00000034H
  006c2	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  006c7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  006cc	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  006d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006d8	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 720  : 			set_mono_font_position (x, y); print_mono_font_char ('5'); y -= 6.0;

  006dd	51		 push	 ecx
  006de	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  006e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006e8	51		 push	 ecx
  006e9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  006ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f3	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  006f8	6a 35		 push	 53			; 00000035H
  006fa	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  006ff	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00704	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  0070c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00710	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 721  : 			set_mono_font_position (x, y); print_mono_font_char ('6'); y -= 6.0;

  00715	51		 push	 ecx
  00716	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  0071b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00720	51		 push	 ecx
  00721	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00726	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0072b	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00730	6a 36		 push	 54			; 00000036H
  00732	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  00737	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  0073c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  00744	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00748	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 722  : 			set_mono_font_position (x, y); print_mono_font_char ('7'); y -= 6.0;

  0074d	51		 push	 ecx
  0074e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00753	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00758	51		 push	 ecx
  00759	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  0075e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00763	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00768	6a 37		 push	 55			; 00000037H
  0076a	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  0076f	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  00774	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  0077c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00780	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 723  : 			set_mono_font_position (x, y); print_mono_font_char ('8'); y -= 6.0;

  00785	51		 push	 ecx
  00786	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  0078b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00790	51		 push	 ecx
  00791	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00796	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0079b	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  007a0	6a 38		 push	 56			; 00000038H
  007a2	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  007a7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007ac	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  007b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007b8	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 724  : 			set_mono_font_position (x, y); print_mono_font_char ('9'); y -= 6.0;

  007bd	51		 push	 ecx
  007be	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  007c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007c8	51		 push	 ecx
  007c9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  007ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007d3	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  007d8	6a 39		 push	 57			; 00000039H
  007da	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char
  007df	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y$[ebp]
  007e4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4018000000000000
  007ec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007f0	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 725  : 			set_mono_font_position (x, y); print_mono_font_char ('0');

  007f5	51		 push	 ecx
  007f6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  007fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00800	51		 push	 ecx
  00801	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00806	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0080b	e8 00 00 00 00	 call	 ?set_mono_font_position@@YGXMM@Z ; set_mono_font_position
  00810	6a 30		 push	 48			; 00000030H
  00812	e8 00 00 00 00	 call	 ?print_mono_font_char@@YGXD@Z ; print_mono_font_char

; 726  : 
; 727  : 			#undef ONE_REV
; 728  : 			#undef ONE_TENTH_REV
; 729  : 			#undef ONE_OVER_ONE_TENTH_REV
; 730  : 			#undef DIGIT_CHANGE_THRESHOLD
; 731  : 
; 732  : 			break;

  00817	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN13@draw_apach:

; 733  : 		}
; 734  : 		////////////////////////////////////////
; 735  : 		default:
; 736  : 		////////////////////////////////////////
; 737  : 		{
; 738  : 			debug_fatal (instrument_error);

  00819	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instrument_error@@3PADA
  0081e	50		 push	 eax
  0081f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00824	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 739  : 
; 740  : 			break;
; 741  : 		}
; 742  : 	}
; 743  : }

  00827	5f		 pop	 edi
  00828	5e		 pop	 esi
  00829	5b		 pop	 ebx
  0082a	8b e5		 mov	 esp, ebp
  0082c	5d		 pop	 ebp
  0082d	c2 04 00	 ret	 4
?draw_apache_fixed_cockpit_barometric_altimeter_digits@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_fixed_cockpit_barometric_altimeter_digits
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_apache_fixed_cockpit_barometric_altimeter_needle@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv66 = -88						; size = 4
_p$ = -20						; size = 4
_altimeter_needle_scale$ = -16				; size = 4
_y_centre$ = -12					; size = 4
_x_centre$ = -8						; size = 4
_altimeter_needle_value$ = -4				; size = 4
_panel$ = 8						; size = 4
?draw_apache_fixed_cockpit_barometric_altimeter_needle@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_fixed_cockpit_barometric_altimeter_needle, COMDAT

; 520  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 521  : 	float
; 522  : 		altimeter_needle_value,
; 523  : 		x_centre,
; 524  : 		y_centre;
; 525  : 
; 526  : 	scale_data
; 527  : 		*altimeter_needle_scale,
; 528  : 		*p;
; 529  : 
; 530  : 	if (draw_virtual_cockpit_needles_on_fixed_cockpits)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_virtual_cockpit_needles_on_fixed_cockpits@@3HA, 0 ; draw_virtual_cockpit_needles_on_fixed_cockpits
  00010	74 05		 je	 SHORT $LN4@draw_apach

; 531  : 	{
; 532  : 		return;

  00012	e9 7c 01 00 00	 jmp	 $LN1@draw_apach
$LN4@draw_apach:

; 533  : 	}
; 534  : 
; 535  : 	altimeter_needle_value = get_barometric_altimeter_needle_value ();

  00017	e8 00 00 00 00	 call	 ?get_barometric_altimeter_needle_value@@YGMXZ ; get_barometric_altimeter_needle_value
  0001c	d9 5d fc	 fstp	 DWORD PTR _altimeter_needle_value$[ebp]

; 536  : 
; 537  : 	switch (panel)

  0001f	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00022	89 45 a8	 mov	 DWORD PTR tv66[ebp], eax
  00025	83 7d a8 18	 cmp	 DWORD PTR tv66[ebp], 24	; 00000018H
  00029	74 0e		 je	 SHORT $LN5@draw_apach
  0002b	83 7d a8 19	 cmp	 DWORD PTR tv66[ebp], 25	; 00000019H
  0002f	74 2b		 je	 SHORT $LN6@draw_apach
  00031	83 7d a8 1a	 cmp	 DWORD PTR tv66[ebp], 26	; 0000001aH
  00035	74 48		 je	 SHORT $LN7@draw_apach
  00037	eb 69		 jmp	 SHORT $LN8@draw_apach
$LN5@draw_apach:

; 538  : 	{
; 539  : 		////////////////////////////////////////
; 540  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 541  : 		////////////////////////////////////////
; 542  : 		{
; 543  : 			x_centre = 599.0;

  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4415c000
  00041	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 544  : 
; 545  : 			y_centre = 440.0;

  00046	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43dc0000
  0004e	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 546  : 
; 547  : 			altimeter_needle_scale = barometric_altimeter_needle_scale_down_20_ahead;

  00053	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _altimeter_needle_scale$[ebp], OFFSET ?barometric_altimeter_needle_scale_down_20_ahead@@3PAUSCALE_DATA@@A

; 548  : 
; 549  : 			break;

  0005a	eb 54		 jmp	 SHORT $LN2@draw_apach
$LN6@draw_apach:

; 550  : 		}
; 551  : 		////////////////////////////////////////
; 552  : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 553  : 		////////////////////////////////////////
; 554  : 		{
; 555  : 			x_centre = 333.0;

  0005c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43a68000
  00064	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 556  : 
; 557  : 			y_centre = 393.0;

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c48000
  00071	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 558  : 
; 559  : 			altimeter_needle_scale = barometric_altimeter_needle_scale_down_20_right_30;

  00076	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _altimeter_needle_scale$[ebp], OFFSET ?barometric_altimeter_needle_scale_down_20_right_30@@3PAUSCALE_DATA@@A

; 560  : 
; 561  : 			break;

  0007d	eb 31		 jmp	 SHORT $LN2@draw_apach
$LN7@draw_apach:

; 562  : 		}
; 563  : 		////////////////////////////////////////
; 564  : 		case COCKPIT_PANEL_DOWN20_RIGHT60:
; 565  : 		////////////////////////////////////////
; 566  : 		{
; 567  : 			x_centre = 73.0;

  0007f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42920000
  00087	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 568  : 
; 569  : 			y_centre = 430.0;

  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43d70000
  00094	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 570  : 
; 571  : 			altimeter_needle_scale = barometric_altimeter_needle_scale_down_20_right_60;

  00099	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _altimeter_needle_scale$[ebp], OFFSET ?barometric_altimeter_needle_scale_down_20_right_60@@3PAUSCALE_DATA@@A

; 572  : 
; 573  : 			break;

  000a0	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN8@draw_apach:

; 574  : 		}
; 575  : 		////////////////////////////////////////
; 576  : 		default:
; 577  : 		////////////////////////////////////////
; 578  : 		{
; 579  : 			debug_fatal (instrument_error);

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instrument_error@@3PADA
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000ad	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 580  : 
; 581  : 			break;
; 582  : 		}
; 583  : 	}
; 584  : 
; 585  : 	p = find_scale_value (altimeter_needle_scale, altimeter_needle_value);

  000b0	51		 push	 ecx
  000b1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _altimeter_needle_value$[ebp]
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	8b 45 f0	 mov	 eax, DWORD PTR _altimeter_needle_scale$[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  000c4	89 45 ec	 mov	 DWORD PTR _p$[ebp], eax

; 586  : 
; 587  : 	draw_line (fx_640_480 + x_centre, fy_640_480 + y_centre, fx_640_480 + p->x, fy_640_480 + p->y, white_needle_colour);

  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A
  000cc	50		 push	 eax
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _p$[ebp]
  000d0	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  000d4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000d8	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  000e0	51		 push	 ecx
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  000e9	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  000ec	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000f0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  000f8	51		 push	 ecx
  000f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  00106	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  0010b	51		 push	 ecx
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  00119	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  0011e	51		 push	 ecx
  0011f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00124	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 588  : 
; 589  : 	if (test_cockpit_instruments && DEBUG_MODULE)

  00129	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00130	74 61		 je	 SHORT $LN9@draw_apach
  00132	33 c0		 xor	 eax, eax
  00134	74 5d		 je	 SHORT $LN9@draw_apach

; 590  : 	{
; 591  : 		test_scale (altimeter_needle_scale, 0.0, 900.0, 100.0);

  00136	51		 push	 ecx
  00137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  0013f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00144	51		 push	 ecx
  00145	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44610000
  0014d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00152	51		 push	 ecx
  00153	0f 57 c0	 xorps	 xmm0, xmm0
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	8b 45 f0	 mov	 eax, DWORD PTR _altimeter_needle_scale$[ebp]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?test_scale@@YGXPAUSCALE_DATA@@MMM@Z ; test_scale

; 592  : 
; 593  : 		set_pixel (ix_640_480 + x_centre, iy_640_480 + y_centre, sys_col_red);

  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00169	50		 push	 eax
  0016a	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00172	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  00177	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0017b	51		 push	 ecx
  0017c	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00184	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  00189	f3 0f 2c d0	 cvttss2si edx, xmm0
  0018d	52		 push	 edx
  0018e	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel
$LN9@draw_apach:
$LN1@draw_apach:

; 594  : 	}
; 595  : }

  00193	5f		 pop	 edi
  00194	5e		 pop	 esi
  00195	5b		 pop	 ebx
  00196	8b e5		 mov	 esp, ebp
  00198	5d		 pop	 ebp
  00199	c2 04 00	 ret	 4
?draw_apache_fixed_cockpit_barometric_altimeter_needle@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_fixed_cockpit_barometric_altimeter_needle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?draw_apache_fixed_cockpit_airspeed_indicator_needle@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv66 = -88						; size = 4
_p$ = -20						; size = 4
_airspeed_needle_scale$ = -16				; size = 4
_y_centre$ = -12					; size = 4
_x_centre$ = -8						; size = 4
_airspeed_needle_value$ = -4				; size = 4
_panel$ = 8						; size = 4
?draw_apache_fixed_cockpit_airspeed_indicator_needle@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_apache_fixed_cockpit_airspeed_indicator_needle, COMDAT

; 438  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 439  : 	float
; 440  : 		airspeed_needle_value,
; 441  : 		x_centre,
; 442  : 		y_centre;
; 443  : 
; 444  : 	scale_data
; 445  : 		*airspeed_needle_scale,
; 446  : 		*p;
; 447  : 
; 448  : 	if (draw_virtual_cockpit_needles_on_fixed_cockpits)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_virtual_cockpit_needles_on_fixed_cockpits@@3HA, 0 ; draw_virtual_cockpit_needles_on_fixed_cockpits
  00010	74 05		 je	 SHORT $LN4@draw_apach

; 449  : 	{
; 450  : 		return;

  00012	e9 7c 01 00 00	 jmp	 $LN1@draw_apach
$LN4@draw_apach:

; 451  : 	}
; 452  : 
; 453  : 	airspeed_needle_value = get_airspeed_indicator_needle_value ();

  00017	e8 00 00 00 00	 call	 ?get_airspeed_indicator_needle_value@@YGMXZ ; get_airspeed_indicator_needle_value
  0001c	d9 5d fc	 fstp	 DWORD PTR _airspeed_needle_value$[ebp]

; 454  : 
; 455  : 	switch (panel)

  0001f	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00022	89 45 a8	 mov	 DWORD PTR tv66[ebp], eax
  00025	83 7d a8 18	 cmp	 DWORD PTR tv66[ebp], 24	; 00000018H
  00029	74 0e		 je	 SHORT $LN5@draw_apach
  0002b	83 7d a8 19	 cmp	 DWORD PTR tv66[ebp], 25	; 00000019H
  0002f	74 2b		 je	 SHORT $LN6@draw_apach
  00031	83 7d a8 1a	 cmp	 DWORD PTR tv66[ebp], 26	; 0000001aH
  00035	74 48		 je	 SHORT $LN7@draw_apach
  00037	eb 69		 jmp	 SHORT $LN8@draw_apach
$LN5@draw_apach:

; 456  : 	{
; 457  : 		////////////////////////////////////////
; 458  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 459  : 		////////////////////////////////////////
; 460  : 		{
; 461  : 			x_centre = 533.0;

  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44054000
  00041	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 462  : 
; 463  : 			y_centre = 440.0;

  00046	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43dc0000
  0004e	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 464  : 
; 465  : 			airspeed_needle_scale = airspeed_indicator_needle_scale_down_20_ahead;

  00053	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _airspeed_needle_scale$[ebp], OFFSET ?airspeed_indicator_needle_scale_down_20_ahead@@3PAUSCALE_DATA@@A

; 466  : 
; 467  : 			break;

  0005a	eb 54		 jmp	 SHORT $LN2@draw_apach
$LN6@draw_apach:

; 468  : 		}
; 469  : 		////////////////////////////////////////
; 470  : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 471  : 		////////////////////////////////////////
; 472  : 		{
; 473  : 			x_centre = 281.0;

  0005c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@438c8000
  00064	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 474  : 
; 475  : 			y_centre = 411.0;

  00069	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43cd8000
  00071	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 476  : 
; 477  : 			airspeed_needle_scale = airspeed_indicator_needle_scale_down_20_right_30;

  00076	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _airspeed_needle_scale$[ebp], OFFSET ?airspeed_indicator_needle_scale_down_20_right_30@@3PAUSCALE_DATA@@A

; 478  : 
; 479  : 			break;

  0007d	eb 31		 jmp	 SHORT $LN2@draw_apach
$LN7@draw_apach:

; 480  : 		}
; 481  : 		////////////////////////////////////////
; 482  : 		case COCKPIT_PANEL_DOWN20_RIGHT60:
; 483  : 		////////////////////////////////////////
; 484  : 		{
; 485  : 			x_centre = 12.0;

  0007f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41400000
  00087	f3 0f 11 45 f8	 movss	 DWORD PTR _x_centre$[ebp], xmm0

; 486  : 
; 487  : 			y_centre = 471.0;

  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43eb8000
  00094	f3 0f 11 45 f4	 movss	 DWORD PTR _y_centre$[ebp], xmm0

; 488  : 
; 489  : 			airspeed_needle_scale = airspeed_indicator_needle_scale_down_20_right_60;

  00099	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _airspeed_needle_scale$[ebp], OFFSET ?airspeed_indicator_needle_scale_down_20_right_60@@3PAUSCALE_DATA@@A

; 490  : 
; 491  : 			break;

  000a0	eb 0e		 jmp	 SHORT $LN2@draw_apach
$LN8@draw_apach:

; 492  : 		}
; 493  : 		////////////////////////////////////////
; 494  : 		default:
; 495  : 		////////////////////////////////////////
; 496  : 		{
; 497  : 			debug_fatal (instrument_error);

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?instrument_error@@3PADA
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000ad	83 c4 04	 add	 esp, 4
$LN2@draw_apach:

; 498  : 
; 499  : 			break;
; 500  : 		}
; 501  : 	}
; 502  : 
; 503  : 	p = find_scale_value (airspeed_needle_scale, airspeed_needle_value);

  000b0	51		 push	 ecx
  000b1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _airspeed_needle_value$[ebp]
  000b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bb	8b 45 f0	 mov	 eax, DWORD PTR _airspeed_needle_scale$[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ?find_scale_value@@YGPAUSCALE_DATA@@PAU1@M@Z ; find_scale_value
  000c4	89 45 ec	 mov	 DWORD PTR _p$[ebp], eax

; 504  : 
; 505  : 	draw_line (fx_640_480 + x_centre, fy_640_480 + y_centre, fx_640_480 + p->x, fy_640_480 + p->y, white_needle_colour);

  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A
  000cc	50		 push	 eax
  000cd	8b 4d ec	 mov	 ecx, DWORD PTR _p$[ebp]
  000d0	0f bf 51 02	 movsx	 edx, WORD PTR [ecx+2]
  000d4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000d8	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  000e0	51		 push	 ecx
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	8b 45 ec	 mov	 eax, DWORD PTR _p$[ebp]
  000e9	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  000ec	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000f0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  000f8	51		 push	 ecx
  000f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fe	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fy_640_480@@3MA
  00106	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  0010b	51		 push	 ecx
  0010c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00111	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?fx_640_480@@3MA
  00119	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  0011e	51		 push	 ecx
  0011f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00124	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 506  : 
; 507  : 	if (test_cockpit_instruments && DEBUG_MODULE)

  00129	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00130	74 61		 je	 SHORT $LN9@draw_apach
  00132	33 c0		 xor	 eax, eax
  00134	74 5d		 je	 SHORT $LN9@draw_apach

; 508  : 	{
; 509  : 		test_scale (airspeed_needle_scale, 0.0, 250.0, 50.0);

  00136	51		 push	 ecx
  00137	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42480000
  0013f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00144	51		 push	 ecx
  00145	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437a0000
  0014d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00152	51		 push	 ecx
  00153	0f 57 c0	 xorps	 xmm0, xmm0
  00156	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015b	8b 45 f0	 mov	 eax, DWORD PTR _airspeed_needle_scale$[ebp]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?test_scale@@YGXPAUSCALE_DATA@@MMM@Z ; test_scale

; 510  : 
; 511  : 		set_pixel (ix_640_480 + x_centre, iy_640_480 + y_centre, sys_col_red);

  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00169	50		 push	 eax
  0016a	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00172	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _y_centre$[ebp]
  00177	f3 0f 2c c8	 cvttss2si ecx, xmm0
  0017b	51		 push	 ecx
  0017c	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00184	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _x_centre$[ebp]
  00189	f3 0f 2c d0	 cvttss2si edx, xmm0
  0018d	52		 push	 edx
  0018e	e8 00 00 00 00	 call	 ?set_pixel@@YGXHHUREAL_COLOUR@@@Z ; set_pixel
$LN9@draw_apach:
$LN1@draw_apach:

; 512  : 	}
; 513  : }

  00193	5f		 pop	 edi
  00194	5e		 pop	 esi
  00195	5b		 pop	 ebx
  00196	8b e5		 mov	 esp, ebp
  00198	5d		 pop	 ebp
  00199	c2 04 00	 ret	 4
?draw_apache_fixed_cockpit_airspeed_indicator_needle@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_apache_fixed_cockpit_airspeed_indicator_needle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?set_apache_instrument_colours@@YGXXZ
_TEXT	SEGMENT
tv82 = -76						; size = 4
tv76 = -72						; size = 4
tv69 = -68						; size = 4
?set_apache_instrument_colours@@YGXXZ PROC		; set_apache_instrument_colours, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 157  : 	switch (get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE))

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	74 0c		 je	 SHORT $LN9@set_apache
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
  0001c	eb 1d		 jmp	 SHORT $LN10@set_apache
$LN9@set_apache:
  0001e	68 9d 00 00 00	 push	 157			; 0000009dH
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002e	52		 push	 edx
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00034	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN10@set_apache:
  0003b	b8 01 00 00 00	 mov	 eax, 1
  00040	85 c0		 test	 eax, eax
  00042	74 09		 je	 SHORT $LN11@set_apache
  00044	c7 45 b8 27 00
	00 00		 mov	 DWORD PTR tv76[ebp], 39	; 00000027H
  0004b	eb 1d		 jmp	 SHORT $LN12@set_apache
$LN11@set_apache:
  0004d	68 9d 00 00 00	 push	 157			; 0000009dH
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@MMOMIHHI@c?3?2users?2nhv90?2projects?2eech?2ap@
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00063	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN12@set_apache:
  0006a	6a 27		 push	 39			; 00000027H
  0006c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00072	52		 push	 edx
  00073	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  0007a	8b 4d b8	 mov	 ecx, DWORD PTR tv76[ebp]
  0007d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00084	ff d2		 call	 edx
  00086	89 45 b4	 mov	 DWORD PTR tv82[ebp], eax
  00089	83 7d b4 03	 cmp	 DWORD PTR tv82[ebp], 3
  0008d	0f 87 88 00 00
	00		 ja	 $LN1@set_apache
  00093	8b 45 b4	 mov	 eax, DWORD PTR tv82[ebp]
  00096	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN13@set_apache[eax*4]
$LN4@set_apache:

; 158  : 	{
; 159  : 		case DAY_SEGMENT_TYPE_DAWN:
; 160  : 		{
; 161  : 			white_needle_colour	= white_needle_colour_level2;

  0009d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A, eax

; 162  : 			red_needle_colour		= red_needle_colour_level2;

  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A
  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?red_needle_colour@@3UREAL_COLOUR@@A, eax

; 163  : 			white_digit_colour	= white_digit_colour_level2;

  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A
  000b6	a3 00 00 00 00	 mov	 DWORD PTR ?white_digit_colour@@3UREAL_COLOUR@@A, eax

; 164  : 
; 165  : 			break;

  000bb	eb 5e		 jmp	 SHORT $LN1@set_apache
$LN5@set_apache:

; 166  : 		}
; 167  : 		case DAY_SEGMENT_TYPE_DAY:
; 168  : 		{
; 169  : 			white_needle_colour	= white_needle_colour_level1;

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour_level1@@3UREAL_COLOUR@@A
  000c2	a3 00 00 00 00	 mov	 DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A, eax

; 170  : 			red_needle_colour		= red_needle_colour_level1;

  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?red_needle_colour_level1@@3UREAL_COLOUR@@A
  000cc	a3 00 00 00 00	 mov	 DWORD PTR ?red_needle_colour@@3UREAL_COLOUR@@A, eax

; 171  : 			white_digit_colour	= white_digit_colour_level1;

  000d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_digit_colour_level1@@3UREAL_COLOUR@@A
  000d6	a3 00 00 00 00	 mov	 DWORD PTR ?white_digit_colour@@3UREAL_COLOUR@@A, eax

; 172  : 
; 173  : 			break;

  000db	eb 3e		 jmp	 SHORT $LN1@set_apache
$LN6@set_apache:

; 174  : 		}
; 175  : 		case DAY_SEGMENT_TYPE_DUSK:
; 176  : 		{
; 177  : 			white_needle_colour	= white_needle_colour_level2;

  000dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A
  000e2	a3 00 00 00 00	 mov	 DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A, eax

; 178  : 			red_needle_colour		= red_needle_colour_level2;

  000e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A
  000ec	a3 00 00 00 00	 mov	 DWORD PTR ?red_needle_colour@@3UREAL_COLOUR@@A, eax

; 179  : 			white_digit_colour	= white_digit_colour_level2;

  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A
  000f6	a3 00 00 00 00	 mov	 DWORD PTR ?white_digit_colour@@3UREAL_COLOUR@@A, eax

; 180  : 
; 181  : 			break;

  000fb	eb 1e		 jmp	 SHORT $LN1@set_apache
$LN7@set_apache:

; 182  : 		}
; 183  : 		case DAY_SEGMENT_TYPE_NIGHT:
; 184  : 		{
; 185  : 			white_needle_colour	= white_needle_colour_level3;

  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_needle_colour_level3@@3UREAL_COLOUR@@A
  00102	a3 00 00 00 00	 mov	 DWORD PTR ?white_needle_colour@@3UREAL_COLOUR@@A, eax

; 186  : 			red_needle_colour		= red_needle_colour_level3;

  00107	a1 00 00 00 00	 mov	 eax, DWORD PTR ?red_needle_colour_level3@@3UREAL_COLOUR@@A
  0010c	a3 00 00 00 00	 mov	 DWORD PTR ?red_needle_colour@@3UREAL_COLOUR@@A, eax

; 187  : 			white_digit_colour	= white_digit_colour_level3;

  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?white_digit_colour_level3@@3UREAL_COLOUR@@A
  00116	a3 00 00 00 00	 mov	 DWORD PTR ?white_digit_colour@@3UREAL_COLOUR@@A, eax
$LN1@set_apache:

; 188  : 
; 189  : 			break;
; 190  : 		}
; 191  : 	}
; 192  : 
; 193  : 	#if DEMO_VERSION
; 194  : 
; 195  : 	white_needle_colour	= white_needle_colour_level1;
; 196  : 	red_needle_colour		= red_needle_colour_level1;
; 197  : 	white_digit_colour	= white_digit_colour_level1;
; 198  : 
; 199  : 	#endif
; 200  : }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
  00122	66 90		 npad	 2
$LN13@set_apache:
  00124	00 00 00 00	 DD	 $LN4@set_apache
  00128	00 00 00 00	 DD	 $LN5@set_apache
  0012c	00 00 00 00	 DD	 $LN6@set_apache
  00130	00 00 00 00	 DD	 $LN7@set_apache
?set_apache_instrument_colours@@YGXXZ ENDP		; set_apache_instrument_colours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\apache\ap_instr.c
;	COMDAT ?initialise_apache_instrument_colours@@YGXXZ
_TEXT	SEGMENT
?initialise_apache_instrument_colours@@YGXXZ PROC	; initialise_apache_instrument_colours, COMDAT

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 140  : 	set_rgb_colour (white_needle_colour_level1, 200, 200, 200, 0);

  00009	c6 05 02 00 00
	00 c8		 mov	 BYTE PTR ?white_needle_colour_level1@@3UREAL_COLOUR@@A+2, 200 ; 000000c8H
  00010	c6 05 01 00 00
	00 c8		 mov	 BYTE PTR ?white_needle_colour_level1@@3UREAL_COLOUR@@A+1, 200 ; 000000c8H
  00017	c6 05 00 00 00
	00 c8		 mov	 BYTE PTR ?white_needle_colour_level1@@3UREAL_COLOUR@@A, 200 ; 000000c8H
  0001e	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level1@@3UREAL_COLOUR@@A+3, 0

; 141  : 	set_rgb_colour (red_needle_colour_level1,   188,  58,  26, 0);

  00025	c6 05 02 00 00
	00 bc		 mov	 BYTE PTR ?red_needle_colour_level1@@3UREAL_COLOUR@@A+2, 188 ; 000000bcH
  0002c	c6 05 01 00 00
	00 3a		 mov	 BYTE PTR ?red_needle_colour_level1@@3UREAL_COLOUR@@A+1, 58 ; 0000003aH
  00033	c6 05 00 00 00
	00 1a		 mov	 BYTE PTR ?red_needle_colour_level1@@3UREAL_COLOUR@@A, 26 ; 0000001aH
  0003a	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level1@@3UREAL_COLOUR@@A+3, 0

; 142  : 	set_rgb_colour (white_digit_colour_level1,  200, 200, 200, 0);

  00041	c6 05 02 00 00
	00 c8		 mov	 BYTE PTR ?white_digit_colour_level1@@3UREAL_COLOUR@@A+2, 200 ; 000000c8H
  00048	c6 05 01 00 00
	00 c8		 mov	 BYTE PTR ?white_digit_colour_level1@@3UREAL_COLOUR@@A+1, 200 ; 000000c8H
  0004f	c6 05 00 00 00
	00 c8		 mov	 BYTE PTR ?white_digit_colour_level1@@3UREAL_COLOUR@@A, 200 ; 000000c8H
  00056	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level1@@3UREAL_COLOUR@@A+3, 0

; 143  : 	set_rgb_colour (white_needle_colour_level2, 192,   0,   0, 0);

  0005d	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  00064	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A+1, 0
  0006b	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A, 0
  00072	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level2@@3UREAL_COLOUR@@A+3, 0

; 144  : 	set_rgb_colour (red_needle_colour_level2,   192,   0,   0, 0);

  00079	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  00080	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A+1, 0
  00087	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A, 0
  0008e	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level2@@3UREAL_COLOUR@@A+3, 0

; 145  : 	set_rgb_colour (white_digit_colour_level2,  192,   0,   0, 0);

  00095	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  0009c	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A+1, 0
  000a3	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A, 0
  000aa	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level2@@3UREAL_COLOUR@@A+3, 0

; 146  : 	set_rgb_colour (white_needle_colour_level3, 192,   0,   0, 0);

  000b1	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?white_needle_colour_level3@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  000b8	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level3@@3UREAL_COLOUR@@A+1, 0
  000bf	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level3@@3UREAL_COLOUR@@A, 0
  000c6	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_needle_colour_level3@@3UREAL_COLOUR@@A+3, 0

; 147  : 	set_rgb_colour (red_needle_colour_level3,   192,   0,   0, 0);

  000cd	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?red_needle_colour_level3@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  000d4	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level3@@3UREAL_COLOUR@@A+1, 0
  000db	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level3@@3UREAL_COLOUR@@A, 0
  000e2	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?red_needle_colour_level3@@3UREAL_COLOUR@@A+3, 0

; 148  : 	set_rgb_colour (white_digit_colour_level3,  192,   0,   0, 0);

  000e9	c6 05 02 00 00
	00 c0		 mov	 BYTE PTR ?white_digit_colour_level3@@3UREAL_COLOUR@@A+2, 192 ; 000000c0H
  000f0	c6 05 01 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level3@@3UREAL_COLOUR@@A+1, 0
  000f7	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level3@@3UREAL_COLOUR@@A, 0
  000fe	c6 05 03 00 00
	00 00		 mov	 BYTE PTR ?white_digit_colour_level3@@3UREAL_COLOUR@@A+3, 0

; 149  : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c3		 ret	 0
?initialise_apache_instrument_colours@@YGXXZ ENDP	; initialise_apache_instrument_colours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
