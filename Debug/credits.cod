; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\credits\credits.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?credits_screen@@3PAUUI_OBJECT@@A		; credits_screen
PUBLIC	?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A	; credits_screen_graphic
_BSS	SEGMENT
?credits_screen@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; credits_screen
?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A DD 01H DUP (?) ; credits_screen_graphic
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?initialise_credits_screen@@YGXXZ		; initialise_credits_screen
PUBLIC	?notify_credits_screen@@YGXPAUUI_OBJECT@@PAX@Z	; notify_credits_screen
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0CA@ONIJELCJ@graphics?2ui?2cohokum?2credits?4psd@ ; `string'
PUBLIC	??_C@_07GDHHDJMO@Credits@			; `string'
PUBLIC	??_C@_0N@OIIGJLME@Credits?5Code@		; `string'
PUBLIC	??_C@_05NIOKAMLD@?$CFs?$DO?$DO?$DO@		; `string'
PUBLIC	??_C@_0BB@NBPPGJPH@Credits?5Graphics@		; `string'
PUBLIC	??_C@_05NJDNCFCK@?$DM?$DM?$DM?$CFs@		; `string'
PUBLIC	??_C@_0O@GLPMAEH@Credits?5Music@		; `string'
PUBLIC	??_C@_05LMLILOOH@UI_OK@				; `string'
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d8b4396
PUBLIC	__real@3e343958
PUBLIC	__real@3e3851ec
PUBLIC	__real@3e6e978d
PUBLIC	__real@3e89374c
PUBLIC	__real@3e989375
PUBLIC	__real@3f0f9db2
PUBLIC	__real@3f249ba6
PUBLIC	__real@3f476c8b
PUBLIC	__real@3f800000
PUBLIC	__real@3f999999a0000000
PUBLIC	__real@3fa374bc60000000
PUBLIC	__real@3fa3f7cee0000000
PUBLIC	__real@3fa99999a0000000
PUBLIC	__real@3fc3333340000000
PUBLIC	__real@3fea872b00000000
PUBLIC	__real@3fed9999a0000000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	?blit_front_buffer_to_render_buffer@@YGXXZ:PROC	; blit_front_buffer_to_render_buffer
EXTRN	?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z:PROC ; create_texture_graphic
EXTRN	?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z:PROC ; destroy_texture_graphic
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?reset_time_values@@YGXPAUUI_OBJECT@@@Z:PROC	; reset_time_values
EXTRN	?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z:PROC	; pop_ui_screen
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z:PROC ; preprocess_translation_object_size
EXTRN	?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_drawable
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_texture_graphic
EXTRN	?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_graphic_type
EXTRN	?ui_screen_title_text_colour@@3UREAL_COLOUR@@A:DWORD ; ui_screen_title_text_colour
EXTRN	?ui_option_text_default_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_text_default_colour
EXTRN	?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_text_hilite_colour
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@3fed9999a0000000
CONST	SEGMENT
__real@3fed9999a0000000 DQ 03fed9999a0000000r	; 0.925
CONST	ENDS
;	COMDAT __real@3fea872b00000000
CONST	SEGMENT
__real@3fea872b00000000 DQ 03fea872b00000000r	; 0.829
CONST	ENDS
;	COMDAT __real@3fc3333340000000
CONST	SEGMENT
__real@3fc3333340000000 DQ 03fc3333340000000r	; 0.15
CONST	ENDS
;	COMDAT __real@3fa99999a0000000
CONST	SEGMENT
__real@3fa99999a0000000 DQ 03fa99999a0000000r	; 0.05
CONST	ENDS
;	COMDAT __real@3fa3f7cee0000000
CONST	SEGMENT
__real@3fa3f7cee0000000 DQ 03fa3f7cee0000000r	; 0.039
CONST	ENDS
;	COMDAT __real@3fa374bc60000000
CONST	SEGMENT
__real@3fa374bc60000000 DQ 03fa374bc60000000r	; 0.038
CONST	ENDS
;	COMDAT __real@3f999999a0000000
CONST	SEGMENT
__real@3f999999a0000000 DQ 03f999999a0000000r	; 0.025
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f476c8b
CONST	SEGMENT
__real@3f476c8b DD 03f476c8br			; 0.779
CONST	ENDS
;	COMDAT __real@3f249ba6
CONST	SEGMENT
__real@3f249ba6 DD 03f249ba6r			; 0.643
CONST	ENDS
;	COMDAT __real@3f0f9db2
CONST	SEGMENT
__real@3f0f9db2 DD 03f0f9db2r			; 0.561
CONST	ENDS
;	COMDAT __real@3e989375
CONST	SEGMENT
__real@3e989375 DD 03e989375r			; 0.298
CONST	ENDS
;	COMDAT __real@3e89374c
CONST	SEGMENT
__real@3e89374c DD 03e89374cr			; 0.268
CONST	ENDS
;	COMDAT __real@3e6e978d
CONST	SEGMENT
__real@3e6e978d DD 03e6e978dr			; 0.233
CONST	ENDS
;	COMDAT __real@3e3851ec
CONST	SEGMENT
__real@3e3851ec DD 03e3851ecr			; 0.18
CONST	ENDS
;	COMDAT __real@3e343958
CONST	SEGMENT
__real@3e343958 DD 03e343958r			; 0.176
CONST	ENDS
;	COMDAT __real@3d8b4396
CONST	SEGMENT
__real@3d8b4396 DD 03d8b4396r			; 0.068
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT ??_C@_05LMLILOOH@UI_OK@
CONST	SEGMENT
??_C@_05LMLILOOH@UI_OK@ DB 'UI_OK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLPMAEH@Credits?5Music@
CONST	SEGMENT
??_C@_0O@GLPMAEH@Credits?5Music@ DB 'Credits Music', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NJDNCFCK@?$DM?$DM?$DM?$CFs@
CONST	SEGMENT
??_C@_05NJDNCFCK@?$DM?$DM?$DM?$CFs@ DB '<<<%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NBPPGJPH@Credits?5Graphics@
CONST	SEGMENT
??_C@_0BB@NBPPGJPH@Credits?5Graphics@ DB 'Credits Graphics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05NIOKAMLD@?$CFs?$DO?$DO?$DO@
CONST	SEGMENT
??_C@_05NIOKAMLD@?$CFs?$DO?$DO?$DO@ DB '%s>>>', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIIGJLME@Credits?5Code@
CONST	SEGMENT
??_C@_0N@OIIGJLME@Credits?5Code@ DB 'Credits Code', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GDHHDJMO@Credits@
CONST	SEGMENT
??_C@_07GDHHDJMO@Credits@ DB 'Credits', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ONIJELCJ@graphics?2ui?2cohokum?2credits?4psd@
CONST	SEGMENT
??_C@_0CA@ONIJELCJ@graphics?2ui?2cohokum?2credits?4psd@ DB 'graphics\ui\c'
	DB	'ohokum\credits.psd', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\credits\credits.c
;	COMDAT ?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_select_player_exit_button, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 293  : 	if ((int) arg == BUTTON_STATE_UP)

  00009	83 7d 0c 01	 cmp	 DWORD PTR _arg$[ebp], 1
  0000d	75 22		 jne	 SHORT $LN2@notify_sel

; 294  : 	{
; 295  : 		set_ui_object_redraw (credits_screen, TRUE);

  0000f	6a 01		 push	 1
  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00016	50		 push	 eax
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00026	ff d0		 call	 eax

; 296  : 
; 297  : 		pop_ui_screen (SCREEN_POP_ACTUAL);

  00028	6a 00		 push	 0
  0002a	e8 00 00 00 00	 call	 ?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z ; pop_ui_screen

; 298  : 	}
; 299  : 	else 

  0002f	eb 19		 jmp	 SHORT $LN3@notify_sel
$LN2@notify_sel:

; 300  : 	{
; 301  : 		set_ui_object_redraw (credits_screen, TRUE);

  00031	6a 01		 push	 1
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00038	50		 push	 eax
  00039	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00048	ff d0		 call	 eax
$LN3@notify_sel:

; 302  : 	}
; 303  : 
; 304  : 	set_ui_object_graphic_type (obj, UI_OBJECT_ALPHA_GRAPHIC);

  0004a	6a 03		 push	 3
  0004c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004f	50		 push	 eax
  00050	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0005c	ff d0		 call	 eax

; 305  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 08 00	 ret	 8
?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_select_player_exit_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\credits\credits.c
;	COMDAT ?notify_credits_screen@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_credits_screen@@YGXPAUUI_OBJECT@@PAX@Z PROC	; notify_credits_screen, COMDAT

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   : 
; 98   : 	if ( get_ui_object_drawable ( obj ) )

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	74 5d		 je	 SHORT $LN2@notify_cre

; 99   : 	{
; 100  : 		
; 101  : 		//
; 102  : 		// Setup screen graphics
; 103  : 		//
; 104  : 	
; 105  : 		blit_front_buffer_to_render_buffer ();

  0001f	e8 00 00 00 00	 call	 ?blit_front_buffer_to_render_buffer@@YGXXZ ; blit_front_buffer_to_render_buffer

; 106  : 	
; 107  : 		if (credits_screen_graphic)

  00024	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; credits_screen_graphic
  0002b	74 15		 je	 SHORT $LN4@notify_cre

; 108  : 		{
; 109  : 		
; 110  : 			destroy_texture_graphic (credits_screen_graphic);

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; credits_screen_graphic
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z ; destroy_texture_graphic

; 111  : 	
; 112  : 			credits_screen_graphic = NULL;

  00038	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; credits_screen_graphic
$LN4@notify_cre:

; 113  : 		}
; 114  : 		
; 115  : 		credits_screen_graphic = create_texture_graphic ("graphics\\ui\\cohokum\\credits.psd");

  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@ONIJELCJ@graphics?2ui?2cohokum?2credits?4psd@
  00047	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  0004c	a3 00 00 00 00	 mov	 DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, eax ; credits_screen_graphic

; 116  : 		
; 117  : 		set_ui_object_texture_graphic (credits_screen, credits_screen_graphic);

  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; credits_screen_graphic
  00056	50		 push	 eax
  00057	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  0005d	51		 push	 ecx
  0005e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00064	8b 02		 mov	 eax, DWORD PTR [edx]
  00066	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[eax*4]
  0006d	ff d1		 call	 ecx

; 118  : 		
; 119  : 		reset_time_values (credits_screen);

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?reset_time_values@@YGXPAUUI_OBJECT@@@Z ; reset_time_values

; 120  : 	}
; 121  : 	else

  0007a	eb 1e		 jmp	 SHORT $LN1@notify_cre
$LN2@notify_cre:

; 122  : 	{
; 123  : 
; 124  : 		if (credits_screen_graphic)

  0007c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; credits_screen_graphic
  00083	74 15		 je	 SHORT $LN1@notify_cre

; 125  : 		{
; 126  : 	
; 127  : 			destroy_texture_graphic (credits_screen_graphic);

  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; credits_screen_graphic
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z ; destroy_texture_graphic

; 128  : 
; 129  : 			credits_screen_graphic = NULL;

  00090	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?credits_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; credits_screen_graphic
$LN1@notify_cre:

; 130  : 		}
; 131  : 	}
; 132  : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
?notify_credits_screen@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; notify_credits_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\credits\credits.c
;	COMDAT ?initialise_credits_screen@@YGXXZ
_TEXT	SEGMENT
_string$ = -276						; size = 256
_y2$ = -20						; size = 4
_x2$ = -16						; size = 4
_y1$ = -12						; size = 4
_x1$ = -8						; size = 4
_temp$ = -4						; size = 4
?initialise_credits_screen@@YGXXZ PROC			; initialise_credits_screen, COMDAT

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 140  : 	ui_object
; 141  : 		*temp;
; 142  : 
; 143  : 	float
; 144  : 		x1,
; 145  : 		y1,
; 146  : 		x2,
; 147  : 		y2;
; 148  : 
; 149  : 	char
; 150  : 		string [256];
; 151  : 
; 152  : 	x2 = 1.0;

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00014	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 153  : 	y2 = 1.0;

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00021	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 154  : 
; 155  : 	/////////////////////////////////////////////////////////////////
; 156  : 
; 157  :    credits_screen = create_ui_object

  00026	6a 11		 push	 17			; 00000011H
  00028	68 00 00 00 00	 push	 OFFSET ?notify_credits_screen@@YGXPAUUI_OBJECT@@PAX@Z ; notify_credits_screen
  0002d	6a 16		 push	 22			; 00000016H
  0002f	6a 04		 push	 4
  00031	6a 2f		 push	 47			; 0000002fH
  00033	6a 00		 push	 0
  00035	6a 30		 push	 48			; 00000030H
  00037	68 f4 01 00 00	 push	 500			; 000001f4H
  0003c	6a 4d		 push	 77			; 0000004dH
  0003e	68 ff 00 00 00	 push	 255			; 000000ffH
  00043	68 ff 00 00 00	 push	 255			; 000000ffH
  00048	68 ff 00 00 00	 push	 255			; 000000ffH
  0004d	68 ff 00 00 00	 push	 255			; 000000ffH
  00052	6a 0a		 push	 10			; 0000000aH
  00054	6a 00		 push	 0
  00056	68 ff 00 00 00	 push	 255			; 000000ffH
  0005b	68 ff 00 00 00	 push	 255			; 000000ffH
  00060	68 ff 00 00 00	 push	 255			; 000000ffH
  00065	6a 0b		 push	 11			; 0000000bH
  00067	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  0006c	83 ec 08	 sub	 esp, 8
  0006f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00074	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00079	83 ec 08	 sub	 esp, 8
  0007c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00081	6a 59		 push	 89			; 00000059H
  00083	83 ec 08	 sub	 esp, 8
  00086	0f 57 c0	 xorps	 xmm0, xmm0
  00089	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008e	83 ec 08	 sub	 esp, 8
  00091	0f 57 c0	 xorps	 xmm0, xmm0
  00094	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00099	6a 58		 push	 88			; 00000058H
  0009b	6a 06		 push	 6
  0009d	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  000a2	83 c4 78	 add	 esp, 120		; 00000078H
  000a5	a3 00 00 00 00	 mov	 DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A, eax ; credits_screen

; 158  :             (
; 159  :                UI_TYPE_SCREEN,
; 160  : 					UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 161  : 					UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 162  : 					UI_ATTR_COLOUR_START (255, 255, 255, 0),
; 163  : 					UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 164  : 					UI_ATTR_TIME_LENGTH (500),
; 165  : 					UI_ATTR_OFFSET_TIME (0),
; 166  : 					UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_DISPLAYED),
; 167  : 					UI_ATTR_FUNCTION (notify_credits_screen),
; 168  :                UI_ATTR_END
; 169  :             );
; 170  : 
; 171  :    create_ui_object

  000aa	6a 11		 push	 17			; 00000011H
  000ac	6a 01		 push	 1
  000ae	6a 07		 push	 7
  000b0	6a 00		 push	 0
  000b2	6a 1b		 push	 27			; 0000001bH
  000b4	68 ff 00 00 00	 push	 255			; 000000ffH
  000b9	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A
  000c0	50		 push	 eax
  000c1	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+1
  000c8	51		 push	 ecx
  000c9	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+2
  000d0	52		 push	 edx
  000d1	6a 14		 push	 20			; 00000014H
  000d3	6a 00		 push	 0
  000d5	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A
  000dc	50		 push	 eax
  000dd	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+1
  000e4	51		 push	 ecx
  000e5	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+2
  000ec	52		 push	 edx
  000ed	6a 15		 push	 21			; 00000015H
  000ef	6a 07		 push	 7
  000f1	6a 4b		 push	 75			; 0000004bH
  000f3	6a 0c		 push	 12			; 0000000cH
  000f5	6a 12		 push	 18			; 00000012H
  000f7	68 00 00 00 00	 push	 OFFSET ??_C@_07GDHHDJMO@Credits@
  000fc	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00101	50		 push	 eax
  00102	6a 4a		 push	 74			; 0000004aH
  00104	83 ec 08	 sub	 esp, 8
  00107	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa3f7cee0000000
  0010f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00114	83 ec 08	 sub	 esp, 8
  00117	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fed9999a0000000
  0011f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00124	6a 59		 push	 89			; 00000059H
  00126	83 ec 08	 sub	 esp, 8
  00129	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa3f7cee0000000
  00131	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00136	83 ec 08	 sub	 esp, 8
  00139	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f999999a0000000
  00141	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00146	6a 58		 push	 88			; 00000058H
  00148	6a 00		 push	 0
  0014a	6a 30		 push	 48			; 00000030H
  0014c	6a 00		 push	 0
  0014e	6a 4d		 push	 77			; 0000004dH
  00150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00155	50		 push	 eax
  00156	6a 32		 push	 50			; 00000032H
  00158	6a 05		 push	 5
  0015a	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0015f	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H

; 172  :             (
; 173  :                UI_TYPE_TEXT,
; 174  :                UI_ATTR_PARENT (credits_screen),
; 175  : 					UI_ATTR_TIME_LENGTH (0),
; 176  : 					UI_ATTR_OFFSET_TIME (0),
; 177  :                UI_ATTR_VIRTUAL_POSITION (TITLE_TEXT_POSITION_X, TITLE_TEXT_POSITION_Y),
; 178  : 					UI_ATTR_VIRTUAL_SIZE (TITLE_TEXT_WIDTH, TITLE_TEXT_HEIGHT),
; 179  : 					UI_ATTR_TEXT (get_trans ("Credits")),
; 180  : 					UI_ATTR_FONT_TYPE (UI_FONT_IMPACT_22),
; 181  : 					UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_BOTTOM),
; 182  :                UI_ATTR_FONT_COLOUR_START (ui_screen_title_text_colour.r, ui_screen_title_text_colour.g, ui_screen_title_text_colour.b, 0),
; 183  :                UI_ATTR_FONT_COLOUR_END (ui_screen_title_text_colour.r, ui_screen_title_text_colour.g, ui_screen_title_text_colour.b, 255),
; 184  : 					UI_ATTR_HIGHLIGHTABLE (FALSE),
; 185  : 					UI_ATTR_CLEAR (TRUE),
; 186  :                UI_ATTR_END
; 187  :             );
; 188  : 
; 189  : 	x1 = 0.068;

  00165	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d8b4396
  0016d	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 190  : 	y1 = 0.298;

  00172	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e989375
  0017a	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 191  : 	x2 = 0.180;

  0017f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e3851ec
  00187	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 192  : 	y2 = 0.040;

  0018c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  00194	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 193  : 
; 194  : 
; 195  : 	sprintf (string, "%s>>>", get_trans ("Credits Code"));

  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OIIGJLME@Credits?5Code@
  0019e	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  001a3	50		 push	 eax
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_05NIOKAMLD@?$CFs?$DO?$DO?$DO@
  001a9	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 _sprintf
  001b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 196  : 
; 197  :    temp = create_ui_object

  001b8	6a 11		 push	 17			; 00000011H
  001ba	6a 01		 push	 1
  001bc	6a 07		 push	 7
  001be	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  001c4	50		 push	 eax
  001c5	6a 4a		 push	 74			; 0000004aH
  001c7	6a 02		 push	 2
  001c9	6a 4b		 push	 75			; 0000004bH
  001cb	68 ff 00 00 00	 push	 255			; 000000ffH
  001d0	68 ae 00 00 00	 push	 174			; 000000aeH
  001d5	6a 58		 push	 88			; 00000058H
  001d7	6a 66		 push	 102			; 00000066H
  001d9	6a 14		 push	 20			; 00000014H
  001db	6a 00		 push	 0
  001dd	68 ae 00 00 00	 push	 174			; 000000aeH
  001e2	6a 58		 push	 88			; 00000058H
  001e4	6a 66		 push	 102			; 00000066H
  001e6	6a 15		 push	 21			; 00000015H
  001e8	6a 08		 push	 8
  001ea	6a 12		 push	 18			; 00000012H
  001ec	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  001f1	83 ec 08	 sub	 esp, 8
  001f4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001f9	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  001fe	83 ec 08	 sub	 esp, 8
  00201	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00206	6a 59		 push	 89			; 00000059H
  00208	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0020d	83 ec 08	 sub	 esp, 8
  00210	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00215	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0021a	83 ec 08	 sub	 esp, 8
  0021d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00222	6a 58		 push	 88			; 00000058H
  00224	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  0022a	51		 push	 ecx
  0022b	6a 32		 push	 50			; 00000032H
  0022d	6a 01		 push	 1
  0022f	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00234	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  0023a	89 45 fc	 mov	 DWORD PTR _temp$[ebp], eax

; 198  : 	(
; 199  : 		UI_TYPE_AREA,
; 200  : 		UI_ATTR_PARENT (credits_screen),
; 201  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 202  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 203  : 		UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 204  :       UI_ATTR_FONT_COLOUR_START (102, 88, 174, 0),
; 205  :       UI_ATTR_FONT_COLOUR_END (102, 88, 174, 255),
; 206  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 207  : 		UI_ATTR_TEXT (string),
; 208  : 		UI_ATTR_CLEAR (TRUE),
; 209  : 		UI_ATTR_END
; 210  : 	);
; 211  : 
; 212  : 	preprocess_translation_object_size (temp, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  0023d	6a 02		 push	 2
  0023f	6a 00		 push	 0
  00241	6a 00		 push	 0
  00243	6a 00		 push	 0
  00245	8b 45 fc	 mov	 eax, DWORD PTR _temp$[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 213  : 
; 214  : 	x1 = 0.643;

  0024e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f249ba6
  00256	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 215  : 	y1 = 0.561;

  0025b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f0f9db2
  00263	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 216  : 	x2 = 0.233;

  00268	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6e978d
  00270	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 217  : 	y2 = 0.040;

  00275	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  0027d	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 218  : 
; 219  : 	sprintf (string, "<<<%s", get_trans ("Credits Graphics"));

  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NBPPGJPH@Credits?5Graphics@
  00287	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0028c	50		 push	 eax
  0028d	68 00 00 00 00	 push	 OFFSET ??_C@_05NJDNCFCK@?$DM?$DM?$DM?$CFs@
  00292	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  00298	50		 push	 eax
  00299	e8 00 00 00 00	 call	 _sprintf
  0029e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 220  : 
; 221  :    temp = create_ui_object

  002a1	6a 11		 push	 17			; 00000011H
  002a3	6a 01		 push	 1
  002a5	6a 07		 push	 7
  002a7	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  002ad	50		 push	 eax
  002ae	6a 4a		 push	 74			; 0000004aH
  002b0	6a 01		 push	 1
  002b2	6a 4b		 push	 75			; 0000004bH
  002b4	68 ff 00 00 00	 push	 255			; 000000ffH
  002b9	68 ae 00 00 00	 push	 174			; 000000aeH
  002be	6a 58		 push	 88			; 00000058H
  002c0	6a 66		 push	 102			; 00000066H
  002c2	6a 14		 push	 20			; 00000014H
  002c4	6a 00		 push	 0
  002c6	68 ae 00 00 00	 push	 174			; 000000aeH
  002cb	6a 58		 push	 88			; 00000058H
  002cd	6a 66		 push	 102			; 00000066H
  002cf	6a 15		 push	 21			; 00000015H
  002d1	6a 08		 push	 8
  002d3	6a 12		 push	 18			; 00000012H
  002d5	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  002da	83 ec 08	 sub	 esp, 8
  002dd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002e2	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  002e7	83 ec 08	 sub	 esp, 8
  002ea	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002ef	6a 59		 push	 89			; 00000059H
  002f1	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  002f6	83 ec 08	 sub	 esp, 8
  002f9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002fe	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00303	83 ec 08	 sub	 esp, 8
  00306	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0030b	6a 58		 push	 88			; 00000058H
  0030d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00313	51		 push	 ecx
  00314	6a 32		 push	 50			; 00000032H
  00316	6a 01		 push	 1
  00318	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0031d	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  00323	89 45 fc	 mov	 DWORD PTR _temp$[ebp], eax

; 222  : 	(
; 223  : 		UI_TYPE_AREA,
; 224  : 		UI_ATTR_PARENT (credits_screen),
; 225  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 226  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 227  : 		UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 228  :       UI_ATTR_FONT_COLOUR_START (102, 88, 174, 0),
; 229  :       UI_ATTR_FONT_COLOUR_END (102, 88, 174, 255),
; 230  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 231  : 		UI_ATTR_TEXT (string),
; 232  : 		UI_ATTR_CLEAR (TRUE),
; 233  : 		UI_ATTR_END
; 234  : 	);
; 235  : 
; 236  : 	preprocess_translation_object_size (temp, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  00326	6a 02		 push	 2
  00328	6a 00		 push	 0
  0032a	6a 00		 push	 0
  0032c	6a 00		 push	 0
  0032e	8b 45 fc	 mov	 eax, DWORD PTR _temp$[ebp]
  00331	50		 push	 eax
  00332	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 237  : 
; 238  : 	x1 = 0.268;

  00337	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e89374c
  0033f	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 239  : 	y1 = 0.779;

  00344	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f476c8b
  0034c	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 240  : 	x2 = 0.176;

  00351	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e343958
  00359	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 241  : 	y2 = 0.040;

  0035e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  00366	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 242  : 
; 243  : 	sprintf (string, "%s>>>", get_trans ("Credits Music"));

  0036b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GLPMAEH@Credits?5Music@
  00370	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00375	50		 push	 eax
  00376	68 00 00 00 00	 push	 OFFSET ??_C@_05NIOKAMLD@?$CFs?$DO?$DO?$DO@
  0037b	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 _sprintf
  00387	83 c4 0c	 add	 esp, 12			; 0000000cH

; 244  : 
; 245  :    temp = create_ui_object

  0038a	6a 11		 push	 17			; 00000011H
  0038c	6a 01		 push	 1
  0038e	6a 07		 push	 7
  00390	8d 85 ec fe ff
	ff		 lea	 eax, DWORD PTR _string$[ebp]
  00396	50		 push	 eax
  00397	6a 4a		 push	 74			; 0000004aH
  00399	6a 02		 push	 2
  0039b	6a 4b		 push	 75			; 0000004bH
  0039d	68 ff 00 00 00	 push	 255			; 000000ffH
  003a2	68 ae 00 00 00	 push	 174			; 000000aeH
  003a7	6a 58		 push	 88			; 00000058H
  003a9	6a 66		 push	 102			; 00000066H
  003ab	6a 14		 push	 20			; 00000014H
  003ad	6a 00		 push	 0
  003af	68 ae 00 00 00	 push	 174			; 000000aeH
  003b4	6a 58		 push	 88			; 00000058H
  003b6	6a 66		 push	 102			; 00000066H
  003b8	6a 15		 push	 21			; 00000015H
  003ba	6a 08		 push	 8
  003bc	6a 12		 push	 18			; 00000012H
  003be	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  003c3	83 ec 08	 sub	 esp, 8
  003c6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003cb	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  003d0	83 ec 08	 sub	 esp, 8
  003d3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003d8	6a 59		 push	 89			; 00000059H
  003da	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  003df	83 ec 08	 sub	 esp, 8
  003e2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003e7	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  003ec	83 ec 08	 sub	 esp, 8
  003ef	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003f4	6a 58		 push	 88			; 00000058H
  003f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  003fc	51		 push	 ecx
  003fd	6a 32		 push	 50			; 00000032H
  003ff	6a 01		 push	 1
  00401	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00406	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  0040c	89 45 fc	 mov	 DWORD PTR _temp$[ebp], eax

; 246  : 	(
; 247  : 		UI_TYPE_AREA,
; 248  : 		UI_ATTR_PARENT (credits_screen),
; 249  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 250  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 251  : 		UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 252  :       UI_ATTR_FONT_COLOUR_START (102, 88, 174, 0),
; 253  :       UI_ATTR_FONT_COLOUR_END (102, 88, 174, 255),
; 254  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 255  : 		UI_ATTR_TEXT (string),
; 256  : 		UI_ATTR_CLEAR (TRUE),
; 257  : 		UI_ATTR_END
; 258  : 	);
; 259  : 
; 260  : 	preprocess_translation_object_size (temp, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  0040f	6a 02		 push	 2
  00411	6a 00		 push	 0
  00413	6a 00		 push	 0
  00415	6a 00		 push	 0
  00417	8b 45 fc	 mov	 eax, DWORD PTR _temp$[ebp]
  0041a	50		 push	 eax
  0041b	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 261  : 
; 262  : 	/////////////////////////////////////////////////////////////////
; 263  : 	// Ok Button
; 264  : 
; 265  : 	create_ui_object

  00420	6a 11		 push	 17			; 00000011H
  00422	6a 01		 push	 1
  00424	6a 07		 push	 7
  00426	6a 01		 push	 1
  00428	6a 1b		 push	 27			; 0000001bH
  0042a	68 ff 00 00 00	 push	 255			; 000000ffH
  0042f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00436	50		 push	 eax
  00437	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0043e	51		 push	 ecx
  0043f	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00446	52		 push	 edx
  00447	6a 22		 push	 34			; 00000022H
  00449	6a 00		 push	 0
  0044b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00452	50		 push	 eax
  00453	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0045a	51		 push	 ecx
  0045b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00462	52		 push	 edx
  00463	6a 23		 push	 35			; 00000023H
  00465	68 ff 00 00 00	 push	 255			; 000000ffH
  0046a	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00471	50		 push	 eax
  00472	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00479	51		 push	 ecx
  0047a	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00481	52		 push	 edx
  00482	6a 14		 push	 20			; 00000014H
  00484	6a 00		 push	 0
  00486	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0048d	50		 push	 eax
  0048e	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00495	51		 push	 ecx
  00496	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0049d	52		 push	 edx
  0049e	6a 15		 push	 21			; 00000015H
  004a0	6a 01		 push	 1
  004a2	6a 4b		 push	 75			; 0000004bH
  004a4	6a 08		 push	 8
  004a6	6a 12		 push	 18			; 00000012H
  004a8	68 00 00 00 00	 push	 OFFSET ?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_select_player_exit_button
  004ad	6a 16		 push	 22			; 00000016H
  004af	6a 01		 push	 1
  004b1	6a 2f		 push	 47			; 0000002fH
  004b3	68 00 00 00 00	 push	 OFFSET ??_C@_05LMLILOOH@UI_OK@
  004b8	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  004bd	50		 push	 eax
  004be	6a 4a		 push	 74			; 0000004aH
  004c0	83 ec 08	 sub	 esp, 8
  004c3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa99999a0000000
  004cb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004d0	83 ec 08	 sub	 esp, 8
  004d3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc3333340000000
  004db	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004e0	6a 59		 push	 89			; 00000059H
  004e2	83 ec 08	 sub	 esp, 8
  004e5	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fea872b00000000
  004ed	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004f2	83 ec 08	 sub	 esp, 8
  004f5	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa374bc60000000
  004fd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00502	6a 58		 push	 88			; 00000058H
  00504	a1 00 00 00 00	 mov	 eax, DWORD PTR ?credits_screen@@3PAUUI_OBJECT@@A ; credits_screen
  00509	50		 push	 eax
  0050a	6a 32		 push	 50			; 00000032H
  0050c	6a 02		 push	 2
  0050e	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00513	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H

; 266  : 			(
; 267  : 				UI_TYPE_BUTTON,
; 268  : 				UI_ATTR_PARENT (credits_screen),
; 269  : 				UI_ATTR_VIRTUAL_POSITION (OPTIONS_OK_BUTTON_POS_X, OPTIONS_OK_BUTTON_POS_Y),
; 270  : 				UI_ATTR_VIRTUAL_SIZE (OPTIONS_OK_BUTTON_X, OPTIONS_OK_BUTTON_Y),
; 271  : 				UI_ATTR_TEXT (get_trans("UI_OK")),
; 272  : 				UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_UP),
; 273  : 				UI_ATTR_FUNCTION (notify_select_player_exit_button),
; 274  : 				UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 275  : 				UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 276  :            	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 277  :            	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 278  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 279  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 280  : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 281  : 				UI_ATTR_CLEAR (TRUE),
; 282  : 				UI_ATTR_END
; 283  : 			);
; 284  : 			
; 285  : }

  00519	5f		 pop	 edi
  0051a	5e		 pop	 esi
  0051b	5b		 pop	 ebx
  0051c	8b e5		 mov	 esp, ebp
  0051e	5d		 pop	 ebp
  0051f	c3		 ret	 0
?initialise_credits_screen@@YGXXZ ENDP			; initialise_credits_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
