; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_atan2f
PUBLIC	_fmodf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?fmod@@YGMMM@Z					; fmod
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?load_local_entity_weapon_config@@YGXPAUENTITY@@@Z ; load_local_entity_weapon_config
PUBLIC	?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
PUBLIC	?detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z ; detach_local_entity_weapon
PUBLIC	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z	; update_entity_weapon_systems
PUBLIC	?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ; animate_and_draw_entity_muzzle_flash_effect
PUBLIC	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors
PUBLIC	?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z ; get_local_entity_selected_weapon_to_target_offsets
PUBLIC	?get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z ; get_local_entity_selected_weapon_viewpoint
PUBLIC	?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z ; get_target_intercept_point
PUBLIC	?get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z ; get_local_entity_weapon_ammunition_available
PUBLIC	?get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_salvo_size
PUBLIC	?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z ; suppress_ineffective_ship_weapons
PUBLIC	?create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z ; create_weapon_launched_sound_effects
PUBLIC	?guidance_type_can_use_point_lock@@YGHW4WEAPON_GUIDANCE_TYPES@@@Z ; guidance_type_can_use_point_lock
PUBLIC	?get_number_of_pods_firing@@YGIPAUENTITY@@H@Z	; get_number_of_pods_firing
PUBLIC	?get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z ; get_next_pylon_to_launch
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA ; `load_local_entity_weapon_config'::`1'::__LINE__Var
PUBLIC	??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@ ; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA ; `get_local_entity_weapon_available'::`1'::__LINE__Var
PUBLIC	??_C@_08EAFLGIKM@launcher@			; `string'
PUBLIC	??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@ ; `string'
PUBLIC	??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@ ; `string'
PUBLIC	?__LINE__Var@?0??get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z@4JA ; `get_next_pylon_to_launch'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA ; `detach_local_entity_weapon'::`1'::__LINE__Var
PUBLIC	??_C@_0DE@BKCKEPLP@weapon_sub_type?5?$CB?$DN?5ENTITY_SUB_T@ ; `string'
PUBLIC	??_C@_02HPPNELPJ@vp@				; `string'
PUBLIC	??_C@_0P@DFFDGLE@burst_size?5?$DO?50@		; `string'
PUBLIC	??_C@_06DDNABPCD@inst3d@			; `string'
PUBLIC	?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA ; `get_intercept_point'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@JIMDMIFB@pitch_device_position@	; `string'
PUBLIC	??_C@_06JJLAMBGK@target@			; `string'
PUBLIC	??_C@_0BA@NMPFNFPN@intercept_point@		; `string'
PUBLIC	?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA ; `get_ballistic_intercept_point_and_angle_of_projection'::`1'::__LINE__Var
PUBLIC	??_C@_0BE@GNBBINKD@angle_of_projection@		; `string'
PUBLIC	?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA ; `get_number_of_pods_firing'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA ; `get_lead_and_ballistic_intercept_point_and_angle_of_projection'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA ; `get_pitch_device_to_target_vector'::`1'::__LINE__Var
PUBLIC	??_C@_06OEKOLKIL@source@			; `string'
PUBLIC	??_C@_0O@BKDHEPCN@target_vector@		; `string'
PUBLIC	??_C@_0CA@CJHFGCNA@WEAPON_AIMING_TYPE_NONE?5invalid@ ; `string'
PUBLIC	?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA ; `update_entity_weapon_systems'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@KLNCKIOI@entity_sub_type_weapon_valid?5?$CIs@ ; `string'
PUBLIC	??_C@_0DJ@MGJJNOPJ@Cannot?5locate?5device?5to?5rotate?5@ ; `string'
PUBLIC	??_C@_0BP@JPLIEHBK@source?5?$DN?$DN?5get_gunship_entity?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0CL@NEEMCCLK@Aiming?5for?5point?5lock?5at?5?$CF?40f?0?5@ ; `string'
PUBLIC	??_C@_04LFLEPBN@mask@				; `string'
PUBLIC	??_C@_0CG@JPODKHFL@control_package?5?$DM?5NUM_WEAPON_PA@ ; `string'
PUBLIC	?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA ; `animate_and_draw_entity_muzzle_flash_effect'::`1'::__LINE__Var
PUBLIC	??_C@_0O@KABNCNAA@entity_inst3d@		; `string'
PUBLIC	??_C@_0BE@HENJBLJH@elapsed_time?5?$DO?$DN?50?40@ ; `string'
PUBLIC	?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA ; `update_entity_weapon_system_weapon_and_target_vectors'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@OEFCOBGC@launcher?9?$DOtype?5?$CB?$DN?5ENTITY_TYPE_W@ ; `string'
PUBLIC	??_C@_0BC@OBLDNNN@weapon_vector_ptr@		; `string'
PUBLIC	??_C@_0BM@IMBAFCIG@weapon_to_target_vector_ptr@	; `string'
PUBLIC	??_C@_0EK@EJGGAOLJ@get_local_entity_int_value?$CIlaun@ ; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA ; `get_local_entity_selected_weapon_to_target_offsets'::`1'::__LINE__Var
PUBLIC	??_C@_0P@MMIDLJAA@heading_offset@		; `string'
PUBLIC	??_C@_0N@CJPGCHFJ@pitch_offset@			; `string'
PUBLIC	?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA ; `get_local_entity_selected_weapon_viewpoint'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA ; `get_target_intercept_point'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA ; `get_local_entity_weapon_ammunition_available'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA ; `get_local_entity_weapon_salvo_size'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA ; `suppress_ineffective_ship_weapons'::`1'::__LINE__Var
PUBLIC	??_C@_0EE@GIGDDCJP@get_local_entity_int_value?5?$CIsou@ ; `string'
PUBLIC	?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA ; `create_weapon_launched_sound_effects'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3e32b8c2
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f50624dd2f1a9fc
PUBLIC	__real@3f800000
PUBLIC	__real@3fb851ec
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fba1887a0000000
PUBLIC	__real@3fd33333
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@4041eb85
PUBLIC	__real@40490fdb
PUBLIC	__real@40c90fdb
PUBLIC	__real@447a0000
PUBLIC	__real@bf800000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@c00921fb51000000
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan2:PROC
EXTRN	_fmod:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ:PROC ; debug_colour_log
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z:PROC ; normalise_3d_vector_given_magnitude
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z:PROC ; multiply_transpose_matrix3x3_vec3d
EXTRN	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z:PROC ; multiply_matrix3x3_matrix3x3
EXTRN	?get_2d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_2d_range
EXTRN	?get_3d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_3d_range
EXTRN	?get_angle_of_projection@@YGHPBUVEC3D@@0MPAM@Z:PROC ; get_angle_of_projection
EXTRN	?get_angle_of_projection_with_range@@YGHPBUVEC3D@@0MPAMM@Z:PROC ; get_angle_of_projection_with_range
EXTRN	?set_texture_animation_frame_on_object@@YGHPAUOBJECT_3D_INSTANCE@@W4TEXTURE_ANIMATION_INDICES@@H@Z:PROC ; set_texture_animation_frame_on_object
EXTRN	?get_texture_animation_number_of_frames@@YGHW4TEXTURE_ANIMATION_INDICES@@@Z:PROC ; get_texture_animation_number_of_frames
EXTRN	?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z:PROC ; get_3d_sub_object_world_viewpoint
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z:PROC ; find_object_3d_sub_object_from_sub_object
EXTRN	?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; construct_temporary_3d_object
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?get_local_entity_vec3d_magnitude@@YGMPAUENTITY@@W4VEC3D_TYPES@@@Z:PROC ; get_local_entity_vec3d_magnitude
EXTRN	?open_entity_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; open_entity_weapon_system_ready
EXTRN	?close_entity_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; close_entity_weapon_system_ready
EXTRN	?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_entity_target_point
EXTRN	?reset_entity_weapon_config_animation@@YGXPAUENTITY@@@Z:PROC ; reset_entity_weapon_config_animation
EXTRN	?set_comanche_stub_wing_visibility@@YGXPAUENTITY@@@Z:PROC ; set_comanche_stub_wing_visibility
EXTRN	?get_ballistic_pitch_deflection@@YGHHMMPAM0HH@Z:PROC ; get_ballistic_pitch_deflection
EXTRN	?resume_client_server_continuous_weapon_sound_effect@@YGHPAUENTITY@@H@Z:PROC ; resume_client_server_continuous_weapon_sound_effect
EXTRN	?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_client_server_sound_effect_entity
EXTRN	?get_range_finder@@YG?AW4rangefinding_system@@XZ:PROC ; get_range_finder
EXTRN	?repair_gunship_weapon_damage@@YGXXZ:PROC	; repair_gunship_weapon_damage
EXTRN	?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z:PROC ; get_triangulated_by_position_range
EXTRN	?get_eo_tracking_point@@YGPAUVEC3D@@XZ:PROC	; get_eo_tracking_point
EXTRN	?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z:PROC	; eo_tracking_point_valid
EXTRN	?get_range_to_target@@YGMXZ:PROC		; get_range_to_target
EXTRN	?is_using_eo_system@@YGHH@Z:PROC		; is_using_eo_system
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?command_line_cannontrack@@3HA:DWORD		; command_line_cannontrack
EXTRN	?new_gunship@@3QBDB:BYTE			; new_gunship
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA:BYTE ; fn_get_local_entity_attitude_matrix
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_client_server_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A:BYTE ; weapon_config_database
EXTRN	?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A:BYTE ; muzzle_flash_animation_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?pilot_head_pitch@@3MA:DWORD			; pilot_head_pitch
EXTRN	?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; target_acquisition_system
EXTRN	?eo_azimuth@@3MA:DWORD				; eo_azimuth
EXTRN	?eo_elevation@@3MA:DWORD			; eo_elevation
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@c00921fb51000000
CONST	SEGMENT
__real@c00921fb51000000 DQ 0c00921fb51000000r	; -3.14159
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@4041eb85
CONST	SEGMENT
__real@4041eb85 DD 04041eb85r			; 3.03
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd33333
CONST	SEGMENT
__real@3fd33333 DD 03fd33333r			; 1.65
CONST	ENDS
;	COMDAT __real@3fba1887a0000000
CONST	SEGMENT
__real@3fba1887a0000000 DQ 03fba1887a0000000r	; 0.101937
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb851ec
CONST	SEGMENT
__real@3fb851ec DD 03fb851ecr			; 1.44
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f50624dd2f1a9fc
CONST	SEGMENT
__real@3f50624dd2f1a9fc DQ 03f50624dd2f1a9fcr	; 0.001
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3e32b8c2
CONST	SEGMENT
__real@3e32b8c2 DD 03e32b8c2r			; 0.174533
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA DD 0c4eH ; `create_weapon_launched_sound_effects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EE@GIGDDCJP@get_local_entity_int_value?5?$CIsou@
CONST	SEGMENT
??_C@_0EE@GIGDDCJP@get_local_entity_int_value?5?$CIsou@ DB 'get_local_ent'
	DB	'ity_int_value (source, INT_TYPE_IDENTIFY_SHIP_VEHICLE)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA DD 0ae7H ; `suppress_ineffective_ship_weapons'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA DD 0aa1H ; `get_local_entity_weapon_salvo_size'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA DD 0a5dH ; `get_local_entity_weapon_ammunition_available'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA DD 0a36H ; `get_target_intercept_point'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA DD 09caH ; `get_local_entity_selected_weapon_viewpoint'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@CJPGCHFJ@pitch_offset@
CONST	SEGMENT
??_C@_0N@CJPGCHFJ@pitch_offset@ DB 'pitch_offset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MMIDLJAA@heading_offset@
CONST	SEGMENT
??_C@_0P@MMIDLJAA@heading_offset@ DB 'heading_offset', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA DD 093fH ; `get_local_entity_selected_weapon_to_target_offsets'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EK@EJGGAOLJ@get_local_entity_int_value?$CIlaun@
CONST	SEGMENT
??_C@_0EK@EJGGAOLJ@get_local_entity_int_value?$CIlaun@ DB 'get_local_enti'
	DB	'ty_int_value(launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IMBAFCIG@weapon_to_target_vector_ptr@
CONST	SEGMENT
??_C@_0BM@IMBAFCIG@weapon_to_target_vector_ptr@ DB 'weapon_to_target_vect'
	DB	'or_ptr', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OBLDNNN@weapon_vector_ptr@
CONST	SEGMENT
??_C@_0BC@OBLDNNN@weapon_vector_ptr@ DB 'weapon_vector_ptr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OEFCOBGC@launcher?9?$DOtype?5?$CB?$DN?5ENTITY_TYPE_W@
CONST	SEGMENT
??_C@_0CF@OEFCOBGC@launcher?9?$DOtype?5?$CB?$DN?5ENTITY_TYPE_W@ DB 'launc'
	DB	'her->type != ENTITY_TYPE_WEAPON', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA DD 0898H ; `update_entity_weapon_system_weapon_and_target_vectors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@HENJBLJH@elapsed_time?5?$DO?$DN?50?40@
CONST	SEGMENT
??_C@_0BE@HENJBLJH@elapsed_time?5?$DO?$DN?50?40@ DB 'elapsed_time >= 0.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KABNCNAA@entity_inst3d@
CONST	SEGMENT
??_C@_0O@KABNCNAA@entity_inst3d@ DB 'entity_inst3d', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA DD 07e0H ; `animate_and_draw_entity_muzzle_flash_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CG@JPODKHFL@control_package?5?$DM?5NUM_WEAPON_PA@
CONST	SEGMENT
??_C@_0CG@JPODKHFL@control_package?5?$DM?5NUM_WEAPON_PA@ DB 'control_pack'
	DB	'age < NUM_WEAPON_PACKAGES', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LFLEPBN@mask@
CONST	SEGMENT
??_C@_04LFLEPBN@mask@ DB 'mask', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NEEMCCLK@Aiming?5for?5point?5lock?5at?5?$CF?40f?0?5@
CONST	SEGMENT
??_C@_0CL@NEEMCCLK@Aiming?5for?5point?5lock?5at?5?$CF?40f?0?5@ DB 'Aiming'
	DB	' for point lock at %.0f, %.0f,  %.0f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JPLIEHBK@source?5?$DN?$DN?5get_gunship_entity?$CI?$CJ@
CONST	SEGMENT
??_C@_0BP@JPLIEHBK@source?5?$DN?$DN?5get_gunship_entity?$CI?$CJ@ DB 'sour'
	DB	'ce == get_gunship_entity()', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MGJJNOPJ@Cannot?5locate?5device?5to?5rotate?5@
CONST	SEGMENT
??_C@_0DJ@MGJJNOPJ@Cannot?5locate?5device?5to?5rotate?5@ DB 'Cannot locat'
	DB	'e device to rotate (name = %s, package = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KLNCKIOI@entity_sub_type_weapon_valid?5?$CIs@
CONST	SEGMENT
??_C@_0CP@KLNCKIOI@entity_sub_type_weapon_valid?5?$CIs@ DB 'entity_sub_ty'
	DB	'pe_weapon_valid (selected_weapon)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA DD 04e2H ; `update_entity_weapon_systems'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@CJHFGCNA@WEAPON_AIMING_TYPE_NONE?5invalid@
CONST	SEGMENT
??_C@_0CA@CJHFGCNA@WEAPON_AIMING_TYPE_NONE?5invalid@ DB 'WEAPON_AIMING_TY'
	DB	'PE_NONE invalid', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BKDHEPCN@target_vector@
CONST	SEGMENT
??_C@_0O@BKDHEPCN@target_vector@ DB 'target_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEKOLKIL@source@
CONST	SEGMENT
??_C@_06OEKOLKIL@source@ DB 'source', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA DD 0442H ; `get_pitch_device_to_target_vector'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA DD 03a9H ; `get_lead_and_ballistic_intercept_point_and_angle_of_projection'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA DD 0387H ; `get_number_of_pods_firing'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@GNBBINKD@angle_of_projection@
CONST	SEGMENT
??_C@_0BE@GNBBINKD@angle_of_projection@ DB 'angle_of_projection', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA DD 02edH ; `get_ballistic_intercept_point_and_angle_of_projection'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@NMPFNFPN@intercept_point@
CONST	SEGMENT
??_C@_0BA@NMPFNFPN@intercept_point@ DB 'intercept_point', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJLAMBGK@target@
CONST	SEGMENT
??_C@_06JJLAMBGK@target@ DB 'target', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JIMDMIFB@pitch_device_position@
CONST	SEGMENT
??_C@_0BG@JIMDMIFB@pitch_device_position@ DB 'pitch_device_position', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA DD 02afH ; `get_intercept_point'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06DDNABPCD@inst3d@
CONST	SEGMENT
??_C@_06DDNABPCD@inst3d@ DB 'inst3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFFDGLE@burst_size?5?$DO?50@
CONST	SEGMENT
??_C@_0P@DFFDGLE@burst_size?5?$DO?50@ DB 'burst_size > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HPPNELPJ@vp@
CONST	SEGMENT
??_C@_02HPPNELPJ@vp@ DB 'vp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BKCKEPLP@weapon_sub_type?5?$CB?$DN?5ENTITY_SUB_T@
CONST	SEGMENT
??_C@_0DE@BKCKEPLP@weapon_sub_type?5?$CB?$DN?5ENTITY_SUB_T@ DB 'weapon_su'
	DB	'b_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA DD 0148H ; `detach_local_entity_weapon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z@4JA DD 0124H ; `get_next_pylon_to_launch'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
CONST	SEGMENT
??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@ DB 'package_s'
	DB	'tatus[package].number <= weapon_config_database[config_type]['
	DB	'package].number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
CONST	SEGMENT
??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@ DB 'entity_sub_ty'
	DB	'pe_weapon_valid (weapon_sub_type)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EAFLGIKM@launcher@
CONST	SEGMENT
??_C@_08EAFLGIKM@launcher@ DB 'launcher', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA DD 0edH ; `get_local_entity_weapon_available'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
CONST	SEGMENT
??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@ DB 'weapon_config'
	DB	'_type_valid (config_type)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.'
	DB	'c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA DD 069H ; `load_local_entity_weapon_config'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z
_TEXT	SEGMENT
tv481 = -160						; size = 4
tv436 = -160						; size = 4
tv286 = -156						; size = 4
tv267 = -156						; size = 4
tv170 = -156						; size = 4
tv142 = -156						; size = 4
tv279 = -152						; size = 4
tv259 = -152						; size = 4
tv162 = -152						; size = 4
tv135 = -152						; size = 4
tv128 = -152						; size = 4
_error$1 = -84						; size = 4
_max_range$2 = -80					; size = 4
_target_range$3 = -76					; size = 4
_m$ = -72						; size = 36
_target_position$ = -36					; size = 12
_pitch$ = -24						; size = 4
_heading$ = -20						; size = 4
_dz$ = -16						; size = 4
_dx$ = -12						; size = 4
_weapon_velocity$ = -8					; size = 4
_result$ = -4						; size = 4
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_weapon_sub_type$ = 16					; size = 4
_pitch_device_position$ = 20				; size = 4
_target_vector$ = 24					; size = 4
?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z PROC ; get_pitch_device_to_target_vector, COMDAT

; 1090 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1091 : 	int
; 1092 : 		result;
; 1093 : 
; 1094 : 	float
; 1095 : 		weapon_velocity,
; 1096 : 		dx,
; 1097 : 		dz,
; 1098 : 		heading,
; 1099 : 		pitch;
; 1100 : 
; 1101 : 	vec3d
; 1102 : 		target_position;
; 1103 : 
; 1104 : 	matrix3x3
; 1105 : 		m;
; 1106 : 
; 1107 : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@get_pitch_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00017	83 c0 11	 add	 eax, 17			; 00000011H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_pitch_:

; 1108 : 	ASSERT (target);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN5@get_pitch_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00035	83 c0 12	 add	 eax, 18			; 00000012H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_pitch_:

; 1109 : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00048	83 7d 10 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0004c	7c 06		 jl	 SHORT $LN7@get_pitch_
  0004e	83 7d 10 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  00052	7c 18		 jl	 SHORT $LN6@get_pitch_
$LN7@get_pitch_:
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00059	83 c0 13	 add	 eax, 19			; 00000013H
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_pitch_:

; 1110 : 	ASSERT (pitch_device_position);

  0006c	83 7d 14 00	 cmp	 DWORD PTR _pitch_device_position$[ebp], 0
  00070	75 18		 jne	 SHORT $LN8@get_pitch_
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00077	83 c0 14	 add	 eax, 20			; 00000014H
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JIMDMIFB@pitch_device_position@
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@get_pitch_:

; 1111 : 	ASSERT (target_vector);

  0008a	83 7d 18 00	 cmp	 DWORD PTR _target_vector$[ebp], 0
  0008e	75 18		 jne	 SHORT $LN9@get_pitch_
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00095	83 c0 15	 add	 eax, 21			; 00000015H
  00098	50		 push	 eax
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BKDHEPCN@target_vector@
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@get_pitch_:

; 1112 : 
; 1113 : 	result = FALSE;

  000a8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 1114 : 
; 1115 : 	target_vector->x = 0.0;

  000af	8b 45 18	 mov	 eax, DWORD PTR _target_vector$[ebp]
  000b2	0f 57 c0	 xorps	 xmm0, xmm0
  000b5	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1116 : 	target_vector->y = 0.0;

  000b9	8b 45 18	 mov	 eax, DWORD PTR _target_vector$[ebp]
  000bc	0f 57 c0	 xorps	 xmm0, xmm0
  000bf	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1117 : 	target_vector->z = 0.0;

  000c4	8b 45 18	 mov	 eax, DWORD PTR _target_vector$[ebp]
  000c7	0f 57 c0	 xorps	 xmm0, xmm0
  000ca	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1118 : 
; 1119 : 	switch (weapon_database[weapon_sub_type].aiming_type)

  000cf	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  000d6	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28]
  000dc	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000e2	83 bd 68 ff ff
	ff 03		 cmp	 DWORD PTR tv128[ebp], 3
  000e9	0f 87 9d 06 00
	00		 ja	 $LN2@get_pitch_
  000ef	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR tv128[ebp]
  000f5	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN43@get_pitch_[edx*4]
$LN10@get_pitch_:

; 1120 : 	{
; 1121 : 		////////////////////////////////////////
; 1122 : 		case WEAPON_AIMING_TYPE_NONE:
; 1123 : 		////////////////////////////////////////
; 1124 : 		{
; 1125 : 			debug_fatal ("WEAPON_AIMING_TYPE_NONE invalid");

  000fc	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@CJHFGCNA@WEAPON_AIMING_TYPE_NONE?5invalid@
  00101	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00106	83 c4 04	 add	 esp, 4

; 1126 : 
; 1127 : 			break;

  00109	e9 7e 06 00 00	 jmp	 $LN2@get_pitch_
$LN11@get_pitch_:

; 1128 : 		}
; 1129 : 		////////////////////////////////////////
; 1130 : 		case WEAPON_AIMING_TYPE_CALC_INTERCEPT_POINT:
; 1131 : 		////////////////////////////////////////
; 1132 : 		{
; 1133 : 			// arneh - this is the old aiming code, and unused with newer GWUT-files
; 1134 : 			if (get_local_entity_int_value (target, INT_TYPE_IDENTIFY_MOBILE))

  0010e	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  00112	74 0d		 je	 SHORT $LN27@get_pitch_
  00114	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  00117	8b 08		 mov	 ecx, DWORD PTR [eax]
  00119	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv135[ebp], ecx
  0011f	eb 20		 jmp	 SHORT $LN28@get_pitch_
$LN27@get_pitch_:
  00121	68 6e 04 00 00	 push	 1134			; 0000046eH
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00131	52		 push	 edx
  00132	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00137	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN28@get_pitch_:
  00141	b8 01 00 00 00	 mov	 eax, 1
  00146	85 c0		 test	 eax, eax
  00148	74 0c		 je	 SHORT $LN29@get_pitch_
  0014a	c7 85 64 ff ff
	ff 5d 00 00 00	 mov	 DWORD PTR tv142[ebp], 93 ; 0000005dH
  00154	eb 20		 jmp	 SHORT $LN30@get_pitch_
$LN29@get_pitch_:
  00156	68 6e 04 00 00	 push	 1134			; 0000046eH
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00160	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00166	51		 push	 ecx
  00167	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016c	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN30@get_pitch_:
  00176	6a 5d		 push	 93			; 0000005dH
  00178	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  0017b	52		 push	 edx
  0017c	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv135[ebp], 1116
  00186	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv142[ebp]
  0018c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00193	ff d2		 call	 edx
  00195	85 c0		 test	 eax, eax
  00197	0f 84 f0 00 00
	00		 je	 $LN12@get_pitch_

; 1135 : 			{
; 1136 : 				weapon_velocity = weapon_database[weapon_sub_type].cruise_velocity;

  0019d	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  001a4	f3 0f 10 80 ac
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172]
  001ac	f3 0f 11 45 f8	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0

; 1137 : 
; 1138 : 				if (weapon_database[weapon_sub_type].acquire_parent_forward_velocity)

  001b1	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  001b8	83 b8 64 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+100], 0
  001bf	0f 84 aa 00 00
	00		 je	 $LN14@get_pitch_

; 1139 : 				{
; 1140 : 					weapon_velocity += get_local_entity_float_value (source, FLOAT_TYPE_VELOCITY);

  001c5	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  001c9	74 0d		 je	 SHORT $LN31@get_pitch_
  001cb	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], ecx
  001d6	eb 24		 jmp	 SHORT $LN32@get_pitch_
$LN31@get_pitch_:
  001d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  001de	83 c2 32	 add	 edx, 50			; 00000032H
  001e1	52		 push	 edx
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f2	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN32@get_pitch_:
  001fc	b9 01 00 00 00	 mov	 ecx, 1
  00201	85 c9		 test	 ecx, ecx
  00203	74 0c		 je	 SHORT $LN33@get_pitch_
  00205	c7 85 64 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv170[ebp], 147 ; 00000093H
  0020f	eb 24		 jmp	 SHORT $LN34@get_pitch_
$LN33@get_pitch_:
  00211	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00217	83 c2 32	 add	 edx, 50			; 00000032H
  0021a	52		 push	 edx
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00220	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022b	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN34@get_pitch_:
  00235	68 93 00 00 00	 push	 147			; 00000093H
  0023a	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0023d	51		 push	 ecx
  0023e	69 95 68 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv162[ebp], 700
  00248	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv170[ebp]
  0024e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00255	ff d1		 call	 ecx
  00257	d9 9d 60 ff ff
	ff		 fstp	 DWORD PTR tv436[ebp]
  0025d	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv436[ebp]
  00265	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  0026a	f3 0f 11 45 f8	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0
$LN14@get_pitch_:

; 1141 : 				}
; 1142 : 
; 1143 : 				get_intercept_point (pitch_device_position, weapon_velocity, target, &target_position);

  0026f	8d 45 dc	 lea	 eax, DWORD PTR _target_position$[ebp]
  00272	50		 push	 eax
  00273	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  00276	51		 push	 ecx
  00277	51		 push	 ecx
  00278	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  0027d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00282	8b 55 14	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  00285	52		 push	 edx
  00286	e8 00 00 00 00	 call	 ?get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z ; get_intercept_point

; 1144 : 			}
; 1145 : 			else

  0028b	eb 0d		 jmp	 SHORT $LN13@get_pitch_
$LN12@get_pitch_:

; 1146 : 			{
; 1147 : 				get_local_entity_target_point (target, &target_position);

  0028d	8d 45 dc	 lea	 eax, DWORD PTR _target_position$[ebp]
  00290	50		 push	 eax
  00291	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  00294	51		 push	 ecx
  00295	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point
$LN13@get_pitch_:

; 1148 : 			}
; 1149 : 
; 1150 : 			////////////////////////////////////////
; 1151 : 			//
; 1152 : 			// disperse tracer effect
; 1153 : 			//
; 1154 : 
; 1155 : 			if (weapon_database[weapon_sub_type].gun_shake)

  0029a	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  002a1	83 b8 54 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+84], 0
  002a8	0f 84 49 01 00
	00		 je	 $LN15@get_pitch_

; 1156 : 			{
; 1157 : 				float
; 1158 : 					target_range,
; 1159 : 					max_range,
; 1160 : 					error;
; 1161 : 
; 1162 : 				target_range = get_3d_range (&target_position, pitch_device_position);

  002ae	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  002b1	50		 push	 eax
  002b2	8d 4d dc	 lea	 ecx, DWORD PTR _target_position$[ebp]
  002b5	51		 push	 ecx
  002b6	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  002bb	d9 5d b4	 fstp	 DWORD PTR _target_range$3[ebp]

; 1163 : 
; 1164 : 				max_range = weapon_database[weapon_sub_type].max_range;

  002be	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  002c5	f3 0f 10 80 90
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]
  002cd	f3 0f 11 45 b0	 movss	 DWORD PTR _max_range$2[ebp], xmm0

; 1165 : 
; 1166 : 				target_range = min (target_range, max_range);

  002d2	8d 45 b0	 lea	 eax, DWORD PTR _max_range$2[ebp]
  002d5	50		 push	 eax
  002d6	8d 4d b4	 lea	 ecx, DWORD PTR _target_range$3[ebp]
  002d9	51		 push	 ecx
  002da	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  002df	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  002e3	f3 0f 11 45 b4	 movss	 DWORD PTR _target_range$3[ebp], xmm0

; 1167 : 
; 1168 : 				error = 3.0 * target_range / max_range;

  002e8	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _target_range$3[ebp]
  002ed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4008000000000000
  002f5	f3 0f 5a 4d b0	 cvtss2sd xmm1, DWORD PTR _max_range$2[ebp]
  002fa	f2 0f 5e c1	 divsd	 xmm0, xmm1
  002fe	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00302	f3 0f 11 45 ac	 movss	 DWORD PTR _error$1[ebp], xmm0

; 1169 : 
; 1170 : 				target_position.x += error * sfrand1 ();

  00307	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00311	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00316	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0031b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00321	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00324	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0032a	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00330	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00334	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0033c	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _error$1[ebp]
  00341	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00345	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _target_position$[ebp]
  0034a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0034e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00352	f3 0f 11 45 dc	 movss	 DWORD PTR _target_position$[ebp], xmm0

; 1171 : 				target_position.y += error * sfrand1 ();

  00357	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00361	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00366	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0036b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00371	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00374	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0037a	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00380	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00384	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  0038c	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _error$1[ebp]
  00391	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00395	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _target_position$[ebp+4]
  0039a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0039e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003a2	f3 0f 11 45 e0	 movss	 DWORD PTR _target_position$[ebp+4], xmm0

; 1172 : 				target_position.z += error * sfrand1 ();

  003a7	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  003b1	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  003b6	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  003bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  003c1	c1 f9 10	 sar	 ecx, 16			; 00000010H
  003c4	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  003ca	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  003d0	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  003d4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  003dc	f3 0f 5a 4d ac	 cvtss2sd xmm1, DWORD PTR _error$1[ebp]
  003e1	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  003e5	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _target_position$[ebp+8]
  003ea	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003ee	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003f2	f3 0f 11 45 e4	 movss	 DWORD PTR _target_position$[ebp+8], xmm0
$LN15@get_pitch_:

; 1173 : 			}
; 1174 : 
; 1175 : 			//
; 1176 : 			////////////////////////////////////////
; 1177 : 
; 1178 : 			target_vector->x = target_position.x - pitch_device_position->x;

  003f7	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  003fa	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  003ff	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00403	8b 4d 18	 mov	 ecx, DWORD PTR _target_vector$[ebp]
  00406	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1179 : 			target_vector->y = target_position.y - pitch_device_position->y;

  0040a	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  0040d	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_position$[ebp+4]
  00412	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00417	8b 4d 18	 mov	 ecx, DWORD PTR _target_vector$[ebp]
  0041a	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1180 : 			target_vector->z = target_position.z - pitch_device_position->z;

  0041f	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  00422	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00427	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0042c	8b 4d 18	 mov	 ecx, DWORD PTR _target_vector$[ebp]
  0042f	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1181 : 
; 1182 : 			result = TRUE;

  00434	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1

; 1183 : 
; 1184 : 			break;

  0043b	e9 4c 03 00 00	 jmp	 $LN2@get_pitch_
$LN16@get_pitch_:

; 1185 : 		}
; 1186 : 		////////////////////////////////////////
; 1187 : 		case WEAPON_AIMING_TYPE_CALC_ANGLE_OF_PROJECTION:
; 1188 : 		case WEAPON_AIMING_TYPE_CALC_LEAD_AND_BALLISTIC:
; 1189 : 		////////////////////////////////////////
; 1190 : 		{
; 1191 : 			weapon_velocity = weapon_database[weapon_sub_type].cruise_velocity;

  00440	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00447	f3 0f 10 80 ac
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172]
  0044f	f3 0f 11 45 f8	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0

; 1192 : 
; 1193 : 			if (weapon_database[weapon_sub_type].acquire_parent_forward_velocity)

  00454	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  0045b	83 b8 64 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+100], 0
  00462	0f 84 aa 00 00
	00		 je	 $LN17@get_pitch_

; 1194 : 			{
; 1195 : 				weapon_velocity += get_local_entity_float_value (source, FLOAT_TYPE_VELOCITY);

  00468	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0046c	74 0d		 je	 SHORT $LN35@get_pitch_
  0046e	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00471	8b 08		 mov	 ecx, DWORD PTR [eax]
  00473	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv259[ebp], ecx
  00479	eb 24		 jmp	 SHORT $LN36@get_pitch_
$LN35@get_pitch_:
  0047b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  00481	83 c2 69	 add	 edx, 105		; 00000069H
  00484	52		 push	 edx
  00485	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0048f	50		 push	 eax
  00490	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00495	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN36@get_pitch_:
  0049f	b9 01 00 00 00	 mov	 ecx, 1
  004a4	85 c9		 test	 ecx, ecx
  004a6	74 0c		 je	 SHORT $LN37@get_pitch_
  004a8	c7 85 64 ff ff
	ff 93 00 00 00	 mov	 DWORD PTR tv267[ebp], 147 ; 00000093H
  004b2	eb 24		 jmp	 SHORT $LN38@get_pitch_
$LN37@get_pitch_:
  004b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z@4JA
  004ba	83 c2 69	 add	 edx, 105		; 00000069H
  004bd	52		 push	 edx
  004be	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ce	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN38@get_pitch_:
  004d8	68 93 00 00 00	 push	 147			; 00000093H
  004dd	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  004e0	51		 push	 ecx
  004e1	69 95 68 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv259[ebp], 700
  004eb	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv267[ebp]
  004f1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  004f8	ff d1		 call	 ecx
  004fa	d9 9d 60 ff ff
	ff		 fstp	 DWORD PTR tv481[ebp]
  00500	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR tv481[ebp]
  00508	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  0050d	f3 0f 11 45 f8	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0
$LN17@get_pitch_:

; 1196 : 			}
; 1197 : 
; 1198 : 			if (get_local_entity_int_value (target, INT_TYPE_IDENTIFY_MOBILE))

  00512	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  00516	74 0d		 je	 SHORT $LN39@get_pitch_
  00518	8b 45 0c	 mov	 eax, DWORD PTR _target$[ebp]
  0051b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0051d	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv279[ebp], ecx
  00523	eb 20		 jmp	 SHORT $LN40@get_pitch_
$LN39@get_pitch_:
  00525	68 ae 04 00 00	 push	 1198			; 000004aeH
  0052a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00535	52		 push	 edx
  00536	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053b	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv279[ebp], 0
$LN40@get_pitch_:
  00545	b8 01 00 00 00	 mov	 eax, 1
  0054a	85 c0		 test	 eax, eax
  0054c	74 0c		 je	 SHORT $LN41@get_pitch_
  0054e	c7 85 64 ff ff
	ff 5d 00 00 00	 mov	 DWORD PTR tv286[ebp], 93 ; 0000005dH
  00558	eb 20		 jmp	 SHORT $LN42@get_pitch_
$LN41@get_pitch_:
  0055a	68 ae 04 00 00	 push	 1198			; 000004aeH
  0055f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00564	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0056a	51		 push	 ecx
  0056b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00570	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv286[ebp], 0
$LN42@get_pitch_:
  0057a	6a 5d		 push	 93			; 0000005dH
  0057c	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  0057f	52		 push	 edx
  00580	69 85 68 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv279[ebp], 1116
  0058a	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv286[ebp]
  00590	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00597	ff d2		 call	 edx
  00599	85 c0		 test	 eax, eax
  0059b	74 69		 je	 SHORT $LN18@get_pitch_

; 1199 : 			{
; 1200 : 				if (weapon_database[weapon_sub_type].aiming_type == WEAPON_AIMING_TYPE_CALC_ANGLE_OF_PROJECTION)

  0059d	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  005a4	83 b8 1c 00 00
	00 02		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28], 2
  005ab	75 29		 jne	 SHORT $LN20@get_pitch_

; 1201 : 					result = get_ballistic_intercept_point_and_angle_of_projection (pitch_device_position, weapon_velocity, source, target, &target_position, &pitch);

  005ad	8d 45 e8	 lea	 eax, DWORD PTR _pitch$[ebp]
  005b0	50		 push	 eax
  005b1	8d 4d dc	 lea	 ecx, DWORD PTR _target_position$[ebp]
  005b4	51		 push	 ecx
  005b5	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  005b8	52		 push	 edx
  005b9	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  005bc	50		 push	 eax
  005bd	51		 push	 ecx
  005be	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  005c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c8	8b 4d 14	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  005cb	51		 push	 ecx
  005cc	e8 00 00 00 00	 call	 ?get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z ; get_ballistic_intercept_point_and_angle_of_projection
  005d1	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 1202 : 				else

  005d4	eb 2b		 jmp	 SHORT $LN21@get_pitch_
$LN20@get_pitch_:

; 1203 : 					result = get_lead_and_ballistic_intercept_point_and_angle_of_projection (pitch_device_position, weapon_sub_type, weapon_velocity, source, target, &target_position, &pitch);

  005d6	8d 45 e8	 lea	 eax, DWORD PTR _pitch$[ebp]
  005d9	50		 push	 eax
  005da	8d 4d dc	 lea	 ecx, DWORD PTR _target_position$[ebp]
  005dd	51		 push	 ecx
  005de	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  005e1	52		 push	 edx
  005e2	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  005e5	50		 push	 eax
  005e6	51		 push	 ecx
  005e7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  005ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f1	8b 4d 10	 mov	 ecx, DWORD PTR _weapon_sub_type$[ebp]
  005f4	51		 push	 ecx
  005f5	8b 55 14	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  005f8	52		 push	 edx
  005f9	e8 00 00 00 00	 call	 ?get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z ; get_lead_and_ballistic_intercept_point_and_angle_of_projection
  005fe	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax
$LN21@get_pitch_:

; 1204 : 			}
; 1205 : 			else

  00601	e9 c1 00 00 00	 jmp	 $LN24@get_pitch_
$LN18@get_pitch_:

; 1206 : 			{
; 1207 : 				get_local_entity_target_point (target, &target_position);

  00606	8d 45 dc	 lea	 eax, DWORD PTR _target_position$[ebp]
  00609	50		 push	 eax
  0060a	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  0060d	51		 push	 ecx
  0060e	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 1208 : 
; 1209 : 				//
; 1210 : 				// target point differs to position so test inside map area before terrain elevation check
; 1211 : 				//
; 1212 : 
; 1213 : 				if (point_inside_map_area (&target_position))

  00613	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  00618	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0061f	72 4a		 jb	 SHORT $LN22@get_pitch_
  00621	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00629	0f 2f 45 dc	 comiss	 xmm0, DWORD PTR _target_position$[ebp]
  0062d	72 3c		 jb	 SHORT $LN22@get_pitch_
  0062f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00634	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0063b	72 2e		 jb	 SHORT $LN22@get_pitch_
  0063d	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00645	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00649	72 20		 jb	 SHORT $LN22@get_pitch_

; 1214 : 				{
; 1215 : 					target_position.y = get_3d_terrain_elevation (target_position.x, target_position.z);

  0064b	6a 00		 push	 0
  0064d	51		 push	 ecx
  0064e	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  00653	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00658	51		 push	 ecx
  00659	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  0065e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00663	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00668	d9 5d e0	 fstp	 DWORD PTR _target_position$[ebp+4]
$LN22@get_pitch_:

; 1216 : 				}
; 1217 : 
; 1218 : 				if (weapon_database[weapon_sub_type].aiming_type == WEAPON_AIMING_TYPE_CALC_ANGLE_OF_PROJECTION)

  0066b	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00672	83 b8 1c 00 00
	00 02		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28], 2
  00679	75 21		 jne	 SHORT $LN23@get_pitch_

; 1219 : 					result = get_angle_of_projection (pitch_device_position, &target_position, weapon_velocity, &pitch);

  0067b	8d 45 e8	 lea	 eax, DWORD PTR _pitch$[ebp]
  0067e	50		 push	 eax
  0067f	51		 push	 ecx
  00680	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  00685	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068a	8d 4d dc	 lea	 ecx, DWORD PTR _target_position$[ebp]
  0068d	51		 push	 ecx
  0068e	8b 55 14	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  00691	52		 push	 edx
  00692	e8 00 00 00 00	 call	 ?get_angle_of_projection@@YGHPBUVEC3D@@0MPAM@Z ; get_angle_of_projection
  00697	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 1220 : 				else

  0069a	eb 2b		 jmp	 SHORT $LN24@get_pitch_
$LN23@get_pitch_:

; 1221 : 					result = get_lead_and_ballistic_intercept_point_and_angle_of_projection (pitch_device_position, weapon_sub_type, weapon_velocity, source, target, &target_position, &pitch);

  0069c	8d 45 e8	 lea	 eax, DWORD PTR _pitch$[ebp]
  0069f	50		 push	 eax
  006a0	8d 4d dc	 lea	 ecx, DWORD PTR _target_position$[ebp]
  006a3	51		 push	 ecx
  006a4	8b 55 0c	 mov	 edx, DWORD PTR _target$[ebp]
  006a7	52		 push	 edx
  006a8	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  006ab	50		 push	 eax
  006ac	51		 push	 ecx
  006ad	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  006b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b7	8b 4d 10	 mov	 ecx, DWORD PTR _weapon_sub_type$[ebp]
  006ba	51		 push	 ecx
  006bb	8b 55 14	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  006be	52		 push	 edx
  006bf	e8 00 00 00 00	 call	 ?get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z ; get_lead_and_ballistic_intercept_point_and_angle_of_projection
  006c4	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax
$LN24@get_pitch_:

; 1222 : 			}
; 1223 : 
; 1224 : 			if (result)

  006c7	83 7d fc 00	 cmp	 DWORD PTR _result$[ebp], 0
  006cb	0f 84 bb 00 00
	00		 je	 $LN25@get_pitch_

; 1225 : 			{
; 1226 : 				dx = target_position.x - pitch_device_position->x;

  006d1	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  006d4	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  006d9	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  006dd	f3 0f 11 45 f4	 movss	 DWORD PTR _dx$[ebp], xmm0

; 1227 : 				dz = target_position.z - pitch_device_position->z;

  006e2	8b 45 14	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  006e5	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  006ea	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  006ef	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 1228 : 
; 1229 : 				heading = atan2 (dx, dz);

  006f4	51		 push	 ecx
  006f5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  006fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ff	51		 push	 ecx
  00700	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00705	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0070a	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0070f	d9 5d ec	 fstp	 DWORD PTR _heading$[ebp]

; 1230 : 
; 1231 : 				get_3d_transformation_matrix (m, heading, pitch, 0.0);

  00712	51		 push	 ecx
  00713	0f 57 c0	 xorps	 xmm0, xmm0
  00716	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0071b	51		 push	 ecx
  0071c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00721	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00726	51		 push	 ecx
  00727	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0072c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00731	8d 45 b8	 lea	 eax, DWORD PTR _m$[ebp]
  00734	50		 push	 eax
  00735	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1232 : 
; 1233 : 				target_vector->x = m[2][0];

  0073a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0073f	d1 e0		 shl	 eax, 1
  00741	8d 4c 05 b8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00745	ba 04 00 00 00	 mov	 edx, 4
  0074a	6b c2 00	 imul	 eax, edx, 0
  0074d	8b 55 18	 mov	 edx, DWORD PTR _target_vector$[ebp]
  00750	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00753	89 02		 mov	 DWORD PTR [edx], eax

; 1234 : 				target_vector->y = m[2][1];

  00755	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0075a	d1 e0		 shl	 eax, 1
  0075c	8d 4c 05 b8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00760	ba 04 00 00 00	 mov	 edx, 4
  00765	c1 e2 00	 shl	 edx, 0
  00768	8b 45 18	 mov	 eax, DWORD PTR _target_vector$[ebp]
  0076b	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0076e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 1235 : 				target_vector->z = m[2][2];

  00771	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00776	d1 e0		 shl	 eax, 1
  00778	8d 4c 05 b8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0077c	ba 04 00 00 00	 mov	 edx, 4
  00781	d1 e2		 shl	 edx, 1
  00783	8b 45 18	 mov	 eax, DWORD PTR _target_vector$[ebp]
  00786	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  00789	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$LN25@get_pitch_:
$LN2@get_pitch_:

; 1236 : 			}
; 1237 : 
; 1238 : 			break;
; 1239 : 		}
; 1240 : 	}
; 1241 : 
; 1242 : 	return (result);

  0078c	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 1243 : }

  0078f	5f		 pop	 edi
  00790	5e		 pop	 esi
  00791	5b		 pop	 ebx
  00792	8b e5		 mov	 esp, ebp
  00794	5d		 pop	 ebp
  00795	c2 14 00	 ret	 20			; 00000014H
$LN43@get_pitch_:
  00798	00 00 00 00	 DD	 $LN10@get_pitch_
  0079c	00 00 00 00	 DD	 $LN11@get_pitch_
  007a0	00 00 00 00	 DD	 $LN16@get_pitch_
  007a4	00 00 00 00	 DD	 $LN16@get_pitch_
?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z ENDP ; get_pitch_device_to_target_vector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z
_TEXT	SEGMENT
tv181 = -148						; size = 4
tv132 = -148						; size = 4
tv195 = -144						; size = 4
tv193 = -144						; size = 4
tv173 = -144						; size = 4
tv141 = -144						; size = 4
tv92 = -144						; size = 4
_time_of_flight$1 = -76					; size = 4
_simplified$2 = -72					; size = 4
_target_true_velocity$3 = -68				; size = 4
_target_motion_vector$ = -64				; size = 12
_new_intercept_point$ = -52				; size = 12
_current_target_position$ = -40				; size = 12
_target_move_distance$ = -28				; size = 4
_time_of_flight$ = -24					; size = 4
_range$ = -20						; size = 4
_number_of_iterations$ = -16				; size = 4
_result$ = -12						; size = 4
_triangulate_range$ = -8				; size = 4
_airborne_target$ = -4					; size = 4
_pitch_device_position$ = 8				; size = 4
_wpn_type$ = 12						; size = 4
_weapon_velocity$ = 16					; size = 4
_source$ = 20						; size = 4
_target$ = 24						; size = 4
_intercept_point$ = 28					; size = 4
_angle_of_projection$ = 32				; size = 4
?get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z PROC ; get_lead_and_ballistic_intercept_point_and_angle_of_projection, COMDAT

; 937  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 938  : 	int
; 939  : 		airborne_target,
; 940  : 		triangulate_range,
; 941  : 		result,
; 942  : 		number_of_iterations;
; 943  : 
; 944  : 	float
; 945  : 		range,
; 946  : 		time_of_flight,
; 947  : 		target_move_distance;
; 948  : 
; 949  : 	vec3d
; 950  : 		current_target_position,
; 951  : 		new_intercept_point,
; 952  : 		target_motion_vector;
; 953  : 
; 954  : 	ASSERT (pitch_device_position);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pitch_device_position$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@get_lead_a
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  00017	83 c0 11	 add	 eax, 17			; 00000011H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JIMDMIFB@pitch_device_position@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_lead_a:

; 955  : 
; 956  : 	ASSERT (target);

  0002a	83 7d 18 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN5@get_lead_a
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  00035	83 c0 13	 add	 eax, 19			; 00000013H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_lead_a:

; 957  : 
; 958  : 	ASSERT (intercept_point);

  00048	83 7d 1c 00	 cmp	 DWORD PTR _intercept_point$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN6@get_lead_a
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  00053	83 c0 15	 add	 eax, 21			; 00000015H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NMPFNFPN@intercept_point@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_lead_a:

; 959  : 
; 960  : 	ASSERT (angle_of_projection);

  00066	83 7d 20 00	 cmp	 DWORD PTR _angle_of_projection$[ebp], 0
  0006a	75 18		 jne	 SHORT $LN7@get_lead_a
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  00071	83 c0 17	 add	 eax, 23			; 00000017H
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GNBBINKD@angle_of_projection@
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_lead_a:

; 961  : 
; 962  : 	result = FALSE;

  00084	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 963  : 
; 964  : 	*angle_of_projection = 0.0;

  0008b	8b 45 20	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  0008e	0f 57 c0	 xorps	 xmm0, xmm0
  00091	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 965  : 
; 966  : 	get_local_entity_target_point (target, &current_target_position);

  00095	8d 45 d8	 lea	 eax, DWORD PTR _current_target_position$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 18	 mov	 ecx, DWORD PTR _target$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 967  : 	*intercept_point = current_target_position;

  000a2	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000a5	8b 4d d8	 mov	 ecx, DWORD PTR _current_target_position$[ebp]
  000a8	89 08		 mov	 DWORD PTR [eax], ecx
  000aa	8b 55 dc	 mov	 edx, DWORD PTR _current_target_position$[ebp+4]
  000ad	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000b0	8b 4d e0	 mov	 ecx, DWORD PTR _current_target_position$[ebp+8]
  000b3	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 968  : 
; 969  : 	airborne_target = get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT);

  000b6	83 7d 18 00	 cmp	 DWORD PTR _target$[ebp], 0
  000ba	74 0d		 je	 SHORT $LN28@get_lead_a
  000bc	8b 45 18	 mov	 eax, DWORD PTR _target$[ebp]
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000c7	eb 24		 jmp	 SHORT $LN29@get_lead_a
$LN28@get_lead_a:
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  000cf	83 c2 20	 add	 edx, 32			; 00000020H
  000d2	52		 push	 edx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN29@get_lead_a:
  000ed	b9 01 00 00 00	 mov	 ecx, 1
  000f2	85 c9		 test	 ecx, ecx
  000f4	74 0c		 je	 SHORT $LN30@get_lead_a
  000f6	c7 85 6c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv132[ebp], 4
  00100	eb 24		 jmp	 SHORT $LN31@get_lead_a
$LN30@get_lead_a:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  00108	83 c2 20	 add	 edx, 32			; 00000020H
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN31@get_lead_a:
  00126	6a 04		 push	 4
  00128	8b 4d 18	 mov	 ecx, DWORD PTR _target$[ebp]
  0012b	51		 push	 ecx
  0012c	69 95 70 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv92[ebp], 1116
  00136	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv132[ebp]
  0013c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00143	ff d1		 call	 ecx
  00145	89 45 fc	 mov	 DWORD PTR _airborne_target$[ebp], eax

; 970  : 
; 971  : 	triangulate_range = (source == get_gunship_entity() && get_range_finder() == RANGEFINDER_TRIANGULATION);

  00148	8b 45 14	 mov	 eax, DWORD PTR _source$[ebp]
  0014b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00151	75 16		 jne	 SHORT $LN32@get_lead_a
  00153	e8 00 00 00 00	 call	 ?get_range_finder@@YG?AW4rangefinding_system@@XZ ; get_range_finder
  00158	83 f8 02	 cmp	 eax, 2
  0015b	75 0c		 jne	 SHORT $LN32@get_lead_a
  0015d	c7 85 70 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv141[ebp], 1
  00167	eb 0a		 jmp	 SHORT $LN33@get_lead_a
$LN32@get_lead_a:
  00169	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN33@get_lead_a:
  00173	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv141[ebp]
  00179	89 4d f8	 mov	 DWORD PTR _triangulate_range$[ebp], ecx

; 972  : 	if (triangulate_range)

  0017c	83 7d f8 00	 cmp	 DWORD PTR _triangulate_range$[ebp], 0
  00180	74 32		 je	 SHORT $LN8@get_lead_a

; 973  : 	{
; 974  : 		range = get_triangulated_by_position_range(pitch_device_position, intercept_point);

  00182	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00185	50		 push	 eax
  00186	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  00189	51		 push	 ecx
  0018a	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
  0018f	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]

; 975  : 		if (range == -1.0)

  00192	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  00197	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  0019f	9f		 lahf
  001a0	f6 c4 44	 test	 ah, 68			; 00000044H
  001a3	7a 0d		 jp	 SHORT $LN10@get_lead_a

; 976  : 			range = 1000.0;  // use 1000 meters if unable to triangulate range

  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  001ad	f3 0f 11 45 ec	 movss	 DWORD PTR _range$[ebp], xmm0
$LN10@get_lead_a:

; 977  : 		#if DEBUG_MODULE
; 978  : 		debug_log("triangulated range: %.0f (real range: %.0f)", range, get_2d_range (pitch_device_position, intercept_point));
; 979  : 		#endif
; 980  : 	}
; 981  : 	else

  001b2	eb 10		 jmp	 SHORT $LN9@get_lead_a
$LN8@get_lead_a:

; 982  : 		range = get_2d_range (pitch_device_position, intercept_point);

  001b4	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001b7	50		 push	 eax
  001b8	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  001bb	51		 push	 ecx
  001bc	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  001c1	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]
$LN9@get_lead_a:

; 983  : 
; 984  : 	if (range < 0.001)

  001c4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  001c9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3f50624dd2f1a9fc
  001d1	66 0f 2f c8	 comisd	 xmm1, xmm0
  001d5	76 07		 jbe	 SHORT $LN11@get_lead_a

; 985  : 		return FALSE;

  001d7	33 c0		 xor	 eax, eax
  001d9	e9 3d 03 00 00	 jmp	 $LN1@get_lead_a
$LN11@get_lead_a:

; 986  : 
; 987  : 	//
; 988  : 	// target point differs to position so test inside map area before terrain elevation check
; 989  : 	//
; 990  : 
; 991  : 	if (point_inside_map_area (intercept_point))

  001de	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001e1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001e5	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  001ec	0f 82 07 03 00
	00		 jb	 $LN12@get_lead_a
  001f2	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001f5	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001fd	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00200	0f 82 f3 02 00
	00		 jb	 $LN12@get_lead_a
  00206	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00209	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0020e	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00215	0f 82 de 02 00
	00		 jb	 $LN12@get_lead_a
  0021b	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  0021e	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00226	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0022a	0f 82 c9 02 00
	00		 jb	 $LN12@get_lead_a

; 992  : 	{
; 993  : 		float target_true_velocity = 0.0;

  00230	0f 57 c0	 xorps	 xmm0, xmm0
  00233	f3 0f 11 45 bc	 movss	 DWORD PTR _target_true_velocity$3[ebp], xmm0

; 994  : 
; 995  : 		if (target)

  00238	83 7d 18 00	 cmp	 DWORD PTR _target$[ebp], 0
  0023c	74 0e		 je	 SHORT $LN14@get_lead_a

; 996  : 			target_true_velocity = get_local_entity_vec3d_magnitude (target, VEC3D_TYPE_MOTION_VECTOR);

  0023e	6a 06		 push	 6
  00240	8b 45 18	 mov	 eax, DWORD PTR _target$[ebp]
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ?get_local_entity_vec3d_magnitude@@YGMPAUENTITY@@W4VEC3D_TYPES@@@Z ; get_local_entity_vec3d_magnitude
  00249	d9 5d bc	 fstp	 DWORD PTR _target_true_velocity$3[ebp]
$LN14@get_lead_a:

; 997  : 
; 998  : 		#if DEBUG_MODULE
; 999  : 		debug_log("Aiming at target moving at %.1f m/s", target_true_velocity);
; 1000 : 		#endif
; 1001 : 
; 1002 : 		if (target_true_velocity > 0.1)

  0024c	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _target_true_velocity$3[ebp]
  00251	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  00259	0f 86 53 02 00
	00		 jbe	 $LN15@get_lead_a

; 1003 : 		{
; 1004 : 			//
; 1005 : 			// moving target
; 1006 : 			//
; 1007 : 
; 1008 : 			result = TRUE;

  0025f	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1

; 1009 : 
; 1010 : 			get_local_entity_vec3d (target, VEC3D_TYPE_MOTION_VECTOR, &target_motion_vector);

  00266	83 7d 18 00	 cmp	 DWORD PTR _target$[ebp], 0
  0026a	74 0d		 je	 SHORT $LN34@get_lead_a
  0026c	8b 45 18	 mov	 eax, DWORD PTR _target$[ebp]
  0026f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00271	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv173[ebp], ecx
  00277	eb 24		 jmp	 SHORT $LN35@get_lead_a
$LN34@get_lead_a:
  00279	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  0027f	83 c2 49	 add	 edx, 73			; 00000049H
  00282	52		 push	 edx
  00283	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00288	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028d	50		 push	 eax
  0028e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00293	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv173[ebp], 0
$LN35@get_lead_a:
  0029d	b9 01 00 00 00	 mov	 ecx, 1
  002a2	85 c9		 test	 ecx, ecx
  002a4	74 0c		 je	 SHORT $LN36@get_lead_a
  002a6	c7 85 6c ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv181[ebp], 6
  002b0	eb 24		 jmp	 SHORT $LN37@get_lead_a
$LN36@get_lead_a:
  002b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z@4JA
  002b8	83 c2 49	 add	 edx, 73			; 00000049H
  002bb	52		 push	 edx
  002bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002c6	50		 push	 eax
  002c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cc	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv181[ebp], 0
$LN37@get_lead_a:
  002d6	8d 4d c0	 lea	 ecx, DWORD PTR _target_motion_vector$[ebp]
  002d9	51		 push	 ecx
  002da	6a 06		 push	 6
  002dc	8b 55 18	 mov	 edx, DWORD PTR _target$[ebp]
  002df	52		 push	 edx
  002e0	6b 85 70 ff ff
	ff 60		 imul	 eax, DWORD PTR tv173[ebp], 96
  002e7	8b 8d 6c ff ff
	ff		 mov	 ecx, DWORD PTR tv181[ebp]
  002ed	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002f4	ff d2		 call	 edx

; 1011 : 			normalise_3d_vector_given_magnitude (&target_motion_vector, target_true_velocity);

  002f6	51		 push	 ecx
  002f7	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _target_true_velocity$3[ebp]
  002fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00301	8d 45 c0	 lea	 eax, DWORD PTR _target_motion_vector$[ebp]
  00304	50		 push	 eax
  00305	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 1012 : 			new_intercept_point = *intercept_point;

  0030a	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  0030d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030f	89 4d cc	 mov	 DWORD PTR _new_intercept_point$[ebp], ecx
  00312	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00315	89 55 d0	 mov	 DWORD PTR _new_intercept_point$[ebp+4], edx
  00318	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0031b	89 45 d4	 mov	 DWORD PTR _new_intercept_point$[ebp+8], eax

; 1013 : 
; 1014 : 			// refine ballistic calulation
; 1015 : 			if (source == get_gunship_entity())

  0031e	8b 45 14	 mov	 eax, DWORD PTR _source$[ebp]
  00321	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00327	75 09		 jne	 SHORT $LN17@get_lead_a

; 1016 : 				number_of_iterations = 5;

  00329	c7 45 f0 05 00
	00 00		 mov	 DWORD PTR _number_of_iterations$[ebp], 5

; 1017 : 			else

  00330	eb 07		 jmp	 SHORT $LN18@get_lead_a
$LN17@get_lead_a:

; 1018 : 				number_of_iterations = 3;

  00332	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _number_of_iterations$[ebp], 3
$LN18@get_lead_a:

; 1019 : 			while (number_of_iterations--)

  00339	8b 45 f0	 mov	 eax, DWORD PTR _number_of_iterations$[ebp]
  0033c	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv193[ebp], eax
  00342	8b 4d f0	 mov	 ecx, DWORD PTR _number_of_iterations$[ebp]
  00345	83 e9 01	 sub	 ecx, 1
  00348	89 4d f0	 mov	 DWORD PTR _number_of_iterations$[ebp], ecx
  0034b	83 bd 70 ff ff
	ff 00		 cmp	 DWORD PTR tv193[ebp], 0
  00352	0f 84 58 01 00
	00		 je	 $LN3@get_lead_a

; 1020 : 			{
; 1021 : 				int simplified = (number_of_iterations > 1);   // only calculate with highest accuracy the last time

  00358	83 7d f0 01	 cmp	 DWORD PTR _number_of_iterations$[ebp], 1
  0035c	7e 0c		 jle	 SHORT $LN38@get_lead_a
  0035e	c7 85 70 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv195[ebp], 1
  00368	eb 0a		 jmp	 SHORT $LN39@get_lead_a
$LN38@get_lead_a:
  0036a	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN39@get_lead_a:
  00374	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv195[ebp]
  0037a	89 45 b8	 mov	 DWORD PTR _simplified$2[ebp], eax

; 1022 : 				if (!get_ballistic_pitch_deflection(wpn_type, range, pitch_device_position->y - intercept_point->y, angle_of_projection, &time_of_flight, simplified, FALSE))

  0037d	6a 00		 push	 0
  0037f	8b 45 b8	 mov	 eax, DWORD PTR _simplified$2[ebp]
  00382	50		 push	 eax
  00383	8d 4d e8	 lea	 ecx, DWORD PTR _time_of_flight$[ebp]
  00386	51		 push	 ecx
  00387	8b 55 20	 mov	 edx, DWORD PTR _angle_of_projection$[ebp]
  0038a	52		 push	 edx
  0038b	8b 45 08	 mov	 eax, DWORD PTR _pitch_device_position$[ebp]
  0038e	8b 4d 1c	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  00391	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00396	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0039b	51		 push	 ecx
  0039c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a1	51		 push	 ecx
  003a2	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _range$[ebp]
  003a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ac	8b 55 0c	 mov	 edx, DWORD PTR _wpn_type$[ebp]
  003af	52		 push	 edx
  003b0	e8 00 00 00 00	 call	 ?get_ballistic_pitch_deflection@@YGHHMMPAM0HH@Z ; get_ballistic_pitch_deflection
  003b5	85 c0		 test	 eax, eax
  003b7	75 07		 jne	 SHORT $LN19@get_lead_a

; 1023 : 					return FALSE;

  003b9	33 c0		 xor	 eax, eax
  003bb	e9 5b 01 00 00	 jmp	 $LN1@get_lead_a
$LN19@get_lead_a:

; 1024 : 				*intercept_point = new_intercept_point;

  003c0	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  003c3	8b 4d cc	 mov	 ecx, DWORD PTR _new_intercept_point$[ebp]
  003c6	89 08		 mov	 DWORD PTR [eax], ecx
  003c8	8b 55 d0	 mov	 edx, DWORD PTR _new_intercept_point$[ebp+4]
  003cb	89 50 04	 mov	 DWORD PTR [eax+4], edx
  003ce	8b 4d d4	 mov	 ecx, DWORD PTR _new_intercept_point$[ebp+8]
  003d1	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 1025 : 
; 1026 : 				if (number_of_iterations > 0)

  003d4	83 7d f0 00	 cmp	 DWORD PTR _number_of_iterations$[ebp], 0
  003d8	0f 8e cd 00 00
	00		 jle	 $LN24@get_lead_a

; 1027 : 				{
; 1028 : 					if (triangulate_range)

  003de	83 7d f8 00	 cmp	 DWORD PTR _triangulate_range$[ebp], 0
  003e2	74 32		 je	 SHORT $LN21@get_lead_a

; 1029 : 					{
; 1030 : 						range = get_triangulated_by_position_range(pitch_device_position, intercept_point);

  003e4	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  003e7	50		 push	 eax
  003e8	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  003eb	51		 push	 ecx
  003ec	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
  003f1	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]

; 1031 : 						if (range == -1.0)

  003f4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  003f9	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  00401	9f		 lahf
  00402	f6 c4 44	 test	 ah, 68			; 00000044H
  00405	7a 0d		 jp	 SHORT $LN23@get_lead_a

; 1032 : 							range = 1000.0;  // use 200 meters if unable to triangulate range

  00407	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  0040f	f3 0f 11 45 ec	 movss	 DWORD PTR _range$[ebp], xmm0
$LN23@get_lead_a:

; 1033 : 					}
; 1034 : 					else

  00414	eb 10		 jmp	 SHORT $LN22@get_lead_a
$LN21@get_lead_a:

; 1035 : 						range = get_2d_range (pitch_device_position, intercept_point);

  00416	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00419	50		 push	 eax
  0041a	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  0041d	51		 push	 ecx
  0041e	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  00423	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]
$LN22@get_lead_a:

; 1036 : 
; 1037 : 					target_move_distance = time_of_flight * target_true_velocity;

  00426	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _time_of_flight$[ebp]
  0042b	f3 0f 59 45 bc	 mulss	 xmm0, DWORD PTR _target_true_velocity$3[ebp]
  00430	f3 0f 11 45 e4	 movss	 DWORD PTR _target_move_distance$[ebp], xmm0

; 1038 : 
; 1039 : 					new_intercept_point.x = current_target_position.x + (target_motion_vector.x * target_move_distance);

  00435	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp]
  0043a	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  0043f	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _current_target_position$[ebp]
  00444	f3 0f 11 45 cc	 movss	 DWORD PTR _new_intercept_point$[ebp], xmm0

; 1040 : 					new_intercept_point.y = current_target_position.y + (target_motion_vector.y * target_move_distance);

  00449	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+4]
  0044e	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  00453	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _current_target_position$[ebp+4]
  00458	f3 0f 11 45 d0	 movss	 DWORD PTR _new_intercept_point$[ebp+4], xmm0

; 1041 : 					new_intercept_point.z = current_target_position.z + (target_motion_vector.z * target_move_distance);

  0045d	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+8]
  00462	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  00467	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _current_target_position$[ebp+8]
  0046c	f3 0f 11 45 d4	 movss	 DWORD PTR _new_intercept_point$[ebp+8], xmm0

; 1042 : 
; 1043 : 					#ifdef DEBUG_MODULE
; 1044 : //					debug_log("intercept point range: %.0f, ToF: %.2f, position: (%.0f, %.0f, %.0f)", range, time_of_flight, new_intercept_point.x, new_intercept_point.z, new_intercept_point.y);
; 1045 : 					#endif
; 1046 : 					if (!point_inside_map_area (&new_intercept_point))

  00471	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp]
  00476	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0047d	72 2a		 jb	 SHORT $LN25@get_lead_a
  0047f	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00487	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _new_intercept_point$[ebp]
  0048b	72 1c		 jb	 SHORT $LN25@get_lead_a
  0048d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp+8]
  00492	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00499	72 0e		 jb	 SHORT $LN25@get_lead_a
  0049b	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  004a3	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _new_intercept_point$[ebp+8]
  004a7	73 02		 jae	 SHORT $LN24@get_lead_a
$LN25@get_lead_a:

; 1047 : 						break;

  004a9	eb 05		 jmp	 SHORT $LN3@get_lead_a
$LN24@get_lead_a:

; 1048 : 				}
; 1049 : 			}

  004ab	e9 89 fe ff ff	 jmp	 $LN18@get_lead_a
$LN3@get_lead_a:

; 1050 : 			#ifdef DEBUG_MODULE
; 1051 : //			debug_log("intercept point range: %.0f, ToF: %.2f, position: (%.0f, %.0f, %.0f)", range, time_of_flight, new_intercept_point.x, new_intercept_point.z, new_intercept_point.y);
; 1052 : 			#endif
; 1053 : 		}
; 1054 : 		else

  004b0	eb 45		 jmp	 SHORT $LN26@get_lead_a
$LN15@get_lead_a:

; 1055 : 		{
; 1056 : 			float time_of_flight;
; 1057 : 			//
; 1058 : 			// stationary target
; 1059 : 			//
; 1060 : 
; 1061 : 			result = TRUE;

  004b2	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1

; 1062 : 			if (!get_ballistic_pitch_deflection(wpn_type, range, pitch_device_position->y - intercept_point->y, angle_of_projection, &time_of_flight, FALSE, FALSE))

  004b9	6a 00		 push	 0
  004bb	6a 00		 push	 0
  004bd	8d 45 b4	 lea	 eax, DWORD PTR _time_of_flight$1[ebp]
  004c0	50		 push	 eax
  004c1	8b 4d 20	 mov	 ecx, DWORD PTR _angle_of_projection$[ebp]
  004c4	51		 push	 ecx
  004c5	8b 55 08	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  004c8	8b 45 1c	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  004cb	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  004d0	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  004d5	51		 push	 ecx
  004d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004db	51		 push	 ecx
  004dc	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _range$[ebp]
  004e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e6	8b 4d 0c	 mov	 ecx, DWORD PTR _wpn_type$[ebp]
  004e9	51		 push	 ecx
  004ea	e8 00 00 00 00	 call	 ?get_ballistic_pitch_deflection@@YGHHMMPAM0HH@Z ; get_ballistic_pitch_deflection
  004ef	85 c0		 test	 eax, eax
  004f1	75 04		 jne	 SHORT $LN26@get_lead_a

; 1063 : 				return FALSE;

  004f3	33 c0		 xor	 eax, eax
  004f5	eb 24		 jmp	 SHORT $LN1@get_lead_a
$LN26@get_lead_a:

; 1064 : 		}
; 1065 : 	}
; 1066 : 	else

  004f7	eb 1f		 jmp	 SHORT $LN13@get_lead_a
$LN12@get_lead_a:

; 1067 : 	{
; 1068 : 		//
; 1069 : 		// target off map
; 1070 : 		//
; 1071 : 
; 1072 : 		result = get_angle_of_projection (pitch_device_position, intercept_point, weapon_velocity, angle_of_projection);

  004f9	8b 45 20	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  004fc	50		 push	 eax
  004fd	51		 push	 ecx
  004fe	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  00503	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00508	8b 4d 1c	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  0050b	51		 push	 ecx
  0050c	8b 55 08	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  0050f	52		 push	 edx
  00510	e8 00 00 00 00	 call	 ?get_angle_of_projection@@YGHPBUVEC3D@@0MPAM@Z ; get_angle_of_projection
  00515	89 45 f4	 mov	 DWORD PTR _result$[ebp], eax
$LN13@get_lead_a:

; 1073 : 	}
; 1074 : 
; 1075 : 	return (result);

  00518	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]
$LN1@get_lead_a:

; 1076 : }

  0051b	5f		 pop	 edi
  0051c	5e		 pop	 esi
  0051d	5b		 pop	 ebx
  0051e	8b e5		 mov	 esp, ebp
  00520	5d		 pop	 ebp
  00521	c2 1c 00	 ret	 28			; 0000001cH
?get_lead_and_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@HMPAUENTITY@@10PAM@Z ENDP ; get_lead_and_ballistic_intercept_point_and_angle_of_projection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z
_TEXT	SEGMENT
tv406 = -152						; size = 8
tv438 = -144						; size = 8
tv188 = -144						; size = 4
tv132 = -144						; size = 4
tv199 = -140						; size = 4
tv180 = -140						; size = 4
tv141 = -140						; size = 4
tv92 = -140						; size = 4
_target_motion_vector$ = -72				; size = 12
_new_intercept_point$ = -60				; size = 12
_current_target_position$ = -48				; size = 12
_target_move_distance$ = -36				; size = 4
_target_true_velocity$ = -32				; size = 4
_time_of_flight$ = -28					; size = 4
_new_pitch$ = -24					; size = 4
_range$ = -20						; size = 4
_number_of_iterations$ = -16				; size = 4
_result$ = -12						; size = 4
_triangulate_range$ = -8				; size = 4
_airborne_target$ = -4					; size = 4
_pitch_device_position$ = 8				; size = 4
_weapon_velocity$ = 12					; size = 4
_source$ = 16						; size = 4
_target$ = 20						; size = 4
_intercept_point$ = 24					; size = 4
_angle_of_projection$ = 28				; size = 4
?get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z PROC ; get_ballistic_intercept_point_and_angle_of_projection, COMDAT

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 750  : 	int
; 751  : 		airborne_target,
; 752  : 		triangulate_range,
; 753  : 		result,
; 754  : 		number_of_iterations;
; 755  : 
; 756  : 	float
; 757  : 		range,
; 758  : 		new_pitch,
; 759  : 		time_of_flight,
; 760  : 		target_true_velocity,
; 761  : 		target_move_distance;
; 762  : 
; 763  : 	vec3d
; 764  : 		current_target_position,
; 765  : 		new_intercept_point,
; 766  : 		target_motion_vector;
; 767  : 
; 768  : 	ASSERT (pitch_device_position);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _pitch_device_position$[ebp], 0
  00010	75 18		 jne	 SHORT $LN4@get_ballis
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  00017	83 c0 13	 add	 eax, 19			; 00000013H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JIMDMIFB@pitch_device_position@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_ballis:

; 769  : 
; 770  : 	ASSERT (target);

  0002a	83 7d 14 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN5@get_ballis
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  00035	83 c0 15	 add	 eax, 21			; 00000015H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_ballis:

; 771  : 
; 772  : 	ASSERT (intercept_point);

  00048	83 7d 18 00	 cmp	 DWORD PTR _intercept_point$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN6@get_ballis
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  00053	83 c0 17	 add	 eax, 23			; 00000017H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NMPFNFPN@intercept_point@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_ballis:

; 773  : 
; 774  : 	ASSERT (angle_of_projection);

  00066	83 7d 1c 00	 cmp	 DWORD PTR _angle_of_projection$[ebp], 0
  0006a	75 18		 jne	 SHORT $LN7@get_ballis
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  00071	83 c0 19	 add	 eax, 25			; 00000019H
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GNBBINKD@angle_of_projection@
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_ballis:

; 775  : 
; 776  : 	result = FALSE;

  00084	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 777  : 
; 778  : 	*angle_of_projection = 0.0;

  0008b	8b 45 1c	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  0008e	0f 57 c0	 xorps	 xmm0, xmm0
  00091	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 779  : 
; 780  : 	get_local_entity_target_point (target, &current_target_position);

  00095	8d 45 d0	 lea	 eax, DWORD PTR _current_target_position$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 14	 mov	 ecx, DWORD PTR _target$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 781  : 	*intercept_point = current_target_position;

  000a2	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000a5	8b 4d d0	 mov	 ecx, DWORD PTR _current_target_position$[ebp]
  000a8	89 08		 mov	 DWORD PTR [eax], ecx
  000aa	8b 55 d4	 mov	 edx, DWORD PTR _current_target_position$[ebp+4]
  000ad	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000b0	8b 4d d8	 mov	 ecx, DWORD PTR _current_target_position$[ebp+8]
  000b3	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 782  : 
; 783  : 	airborne_target = get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT);

  000b6	83 7d 14 00	 cmp	 DWORD PTR _target$[ebp], 0
  000ba	74 0d		 je	 SHORT $LN28@get_ballis
  000bc	8b 45 14	 mov	 eax, DWORD PTR _target$[ebp]
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000c7	eb 24		 jmp	 SHORT $LN29@get_ballis
$LN28@get_ballis:
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  000cf	83 c2 22	 add	 edx, 34			; 00000022H
  000d2	52		 push	 edx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv92[ebp], 0
$LN29@get_ballis:
  000ed	b9 01 00 00 00	 mov	 ecx, 1
  000f2	85 c9		 test	 ecx, ecx
  000f4	74 0c		 je	 SHORT $LN30@get_ballis
  000f6	c7 85 70 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv132[ebp], 4
  00100	eb 24		 jmp	 SHORT $LN31@get_ballis
$LN30@get_ballis:
  00102	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  00108	83 c2 22	 add	 edx, 34			; 00000022H
  0010b	52		 push	 edx
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00111	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011c	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN31@get_ballis:
  00126	6a 04		 push	 4
  00128	8b 4d 14	 mov	 ecx, DWORD PTR _target$[ebp]
  0012b	51		 push	 ecx
  0012c	69 95 74 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv92[ebp], 1116
  00136	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv132[ebp]
  0013c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00143	ff d1		 call	 ecx
  00145	89 45 fc	 mov	 DWORD PTR _airborne_target$[ebp], eax

; 784  : 
; 785  : 	triangulate_range = (source == get_gunship_entity() && get_range_finder() == RANGEFINDER_TRIANGULATION);

  00148	8b 45 10	 mov	 eax, DWORD PTR _source$[ebp]
  0014b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00151	75 16		 jne	 SHORT $LN32@get_ballis
  00153	e8 00 00 00 00	 call	 ?get_range_finder@@YG?AW4rangefinding_system@@XZ ; get_range_finder
  00158	83 f8 02	 cmp	 eax, 2
  0015b	75 0c		 jne	 SHORT $LN32@get_ballis
  0015d	c7 85 74 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv141[ebp], 1
  00167	eb 0a		 jmp	 SHORT $LN33@get_ballis
$LN32@get_ballis:
  00169	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN33@get_ballis:
  00173	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv141[ebp]
  00179	89 4d f8	 mov	 DWORD PTR _triangulate_range$[ebp], ecx

; 786  : 	if (triangulate_range)

  0017c	83 7d f8 00	 cmp	 DWORD PTR _triangulate_range$[ebp], 0
  00180	74 32		 je	 SHORT $LN8@get_ballis

; 787  : 	{
; 788  : 		range = get_triangulated_by_position_range(pitch_device_position, intercept_point);

  00182	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00185	50		 push	 eax
  00186	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  00189	51		 push	 ecx
  0018a	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
  0018f	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]

; 789  : 		if (range == -1.0)

  00192	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  00197	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  0019f	9f		 lahf
  001a0	f6 c4 44	 test	 ah, 68			; 00000044H
  001a3	7a 0d		 jp	 SHORT $LN10@get_ballis

; 790  : 			range = 1000.0;  // use 1000 meters if unable to triangulate range

  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  001ad	f3 0f 11 45 ec	 movss	 DWORD PTR _range$[ebp], xmm0
$LN10@get_ballis:

; 791  : 		#if DEBUG_MODULE
; 792  : 		debug_log("triangulated range: %.0f (real range: %.0f)", range, get_2d_range (pitch_device_position, intercept_point));
; 793  : 		#endif
; 794  : 	}
; 795  : 	else

  001b2	eb 10		 jmp	 SHORT $LN9@get_ballis
$LN8@get_ballis:

; 796  : 		range = get_2d_range (pitch_device_position, intercept_point);

  001b4	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001b7	50		 push	 eax
  001b8	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  001bb	51		 push	 ecx
  001bc	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  001c1	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]
$LN9@get_ballis:

; 797  : 
; 798  : 	//
; 799  : 	// target point differs to position so test inside map area before terrain elevation check
; 800  : 	//
; 801  : 
; 802  : 	if (point_inside_map_area (intercept_point))

  001c4	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001c7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  001cb	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  001d2	0f 82 4f 03 00
	00		 jb	 $LN11@get_ballis
  001d8	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001db	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  001e3	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  001e6	0f 82 3b 03 00
	00		 jb	 $LN11@get_ballis
  001ec	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001ef	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  001f4	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001fb	0f 82 26 03 00
	00		 jb	 $LN11@get_ballis
  00201	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00204	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0020c	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00210	0f 82 11 03 00
	00		 jb	 $LN11@get_ballis

; 803  : 	{
; 804  : 		if (!airborne_target)

  00216	83 7d fc 00	 cmp	 DWORD PTR _airborne_target$[ebp], 0
  0021a	75 28		 jne	 SHORT $LN13@get_ballis

; 805  : 			intercept_point->y = get_3d_terrain_elevation (intercept_point->x, intercept_point->z);

  0021c	6a 00		 push	 0
  0021e	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00221	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00226	51		 push	 ecx
  00227	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022c	8b 4d 18	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  0022f	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00233	51		 push	 ecx
  00234	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00239	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0023e	8b 55 18	 mov	 edx, DWORD PTR _intercept_point$[ebp]
  00241	d9 5a 04	 fstp	 DWORD PTR [edx+4]
$LN13@get_ballis:

; 806  : 
; 807  : 		target_true_velocity = get_local_entity_vec3d_magnitude (target, VEC3D_TYPE_MOTION_VECTOR);

  00244	6a 06		 push	 6
  00246	8b 45 14	 mov	 eax, DWORD PTR _target$[ebp]
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?get_local_entity_vec3d_magnitude@@YGMPAUENTITY@@W4VEC3D_TYPES@@@Z ; get_local_entity_vec3d_magnitude
  0024f	d9 5d e0	 fstp	 DWORD PTR _target_true_velocity$[ebp]

; 808  : 
; 809  : 		if (target_true_velocity > 0.001)

  00252	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _target_true_velocity$[ebp]
  00257	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0025f	0f 86 a1 02 00
	00		 jbe	 $LN14@get_ballis

; 810  : 		{
; 811  : 			//
; 812  : 			// moving target
; 813  : 			//
; 814  : 
; 815  : 			get_local_entity_vec3d (target, VEC3D_TYPE_MOTION_VECTOR, &target_motion_vector);

  00265	83 7d 14 00	 cmp	 DWORD PTR _target$[ebp], 0
  00269	74 0d		 je	 SHORT $LN34@get_ballis
  0026b	8b 45 14	 mov	 eax, DWORD PTR _target$[ebp]
  0026e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00270	89 8d 74 ff ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  00276	eb 24		 jmp	 SHORT $LN35@get_ballis
$LN34@get_ballis:
  00278	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  0027e	83 c2 42	 add	 edx, 66			; 00000042H
  00281	52		 push	 edx
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0028c	50		 push	 eax
  0028d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00292	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN35@get_ballis:
  0029c	b9 01 00 00 00	 mov	 ecx, 1
  002a1	85 c9		 test	 ecx, ecx
  002a3	74 0c		 je	 SHORT $LN36@get_ballis
  002a5	c7 85 70 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv188[ebp], 6
  002af	eb 24		 jmp	 SHORT $LN37@get_ballis
$LN36@get_ballis:
  002b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z@4JA
  002b7	83 c2 42	 add	 edx, 66			; 00000042H
  002ba	52		 push	 edx
  002bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002c5	50		 push	 eax
  002c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cb	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN37@get_ballis:
  002d5	8d 4d b8	 lea	 ecx, DWORD PTR _target_motion_vector$[ebp]
  002d8	51		 push	 ecx
  002d9	6a 06		 push	 6
  002db	8b 55 14	 mov	 edx, DWORD PTR _target$[ebp]
  002de	52		 push	 edx
  002df	6b 85 74 ff ff
	ff 60		 imul	 eax, DWORD PTR tv180[ebp], 96
  002e6	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv188[ebp]
  002ec	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002f3	ff d2		 call	 edx

; 816  : 
; 817  : 			normalise_3d_vector_given_magnitude (&target_motion_vector, target_true_velocity);

  002f5	51		 push	 ecx
  002f6	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_true_velocity$[ebp]
  002fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00300	8d 45 b8	 lea	 eax, DWORD PTR _target_motion_vector$[ebp]
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ?normalise_3d_vector_given_magnitude@@YGXPAUVEC3D@@M@Z ; normalise_3d_vector_given_magnitude

; 818  : 
; 819  : 			new_intercept_point = *intercept_point;

  00309	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  0030c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030e	89 4d c4	 mov	 DWORD PTR _new_intercept_point$[ebp], ecx
  00311	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00314	89 55 c8	 mov	 DWORD PTR _new_intercept_point$[ebp+4], edx
  00317	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0031a	89 45 cc	 mov	 DWORD PTR _new_intercept_point$[ebp+8], eax

; 820  : 
; 821  : 			number_of_iterations = 3;

  0031d	c7 45 f0 03 00
	00 00		 mov	 DWORD PTR _number_of_iterations$[ebp], 3
$LN2@get_ballis:

; 822  : 
; 823  : 			// refine ballistic calulation
; 824  : 			while (number_of_iterations--)

  00324	8b 45 f0	 mov	 eax, DWORD PTR _number_of_iterations$[ebp]
  00327	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv199[ebp], eax
  0032d	8b 4d f0	 mov	 ecx, DWORD PTR _number_of_iterations$[ebp]
  00330	83 e9 01	 sub	 ecx, 1
  00333	89 4d f0	 mov	 DWORD PTR _number_of_iterations$[ebp], ecx
  00336	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR tv199[ebp], 0
  0033d	0f 84 c1 01 00
	00		 je	 $LN3@get_ballis

; 825  : 			{
; 826  : 				if (get_angle_of_projection_with_range(pitch_device_position, &new_intercept_point, weapon_velocity, &new_pitch, range))

  00343	51		 push	 ecx
  00344	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _range$[ebp]
  00349	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034e	8d 45 e8	 lea	 eax, DWORD PTR _new_pitch$[ebp]
  00351	50		 push	 eax
  00352	51		 push	 ecx
  00353	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  00358	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035d	8d 4d c4	 lea	 ecx, DWORD PTR _new_intercept_point$[ebp]
  00360	51		 push	 ecx
  00361	8b 55 08	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  00364	52		 push	 edx
  00365	e8 00 00 00 00	 call	 ?get_angle_of_projection_with_range@@YGHPBUVEC3D@@0MPAMM@Z ; get_angle_of_projection_with_range
  0036a	85 c0		 test	 eax, eax
  0036c	0f 84 8b 01 00
	00		 je	 $LN16@get_ballis

; 827  : 				{
; 828  : 					result = TRUE;

  00372	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1

; 829  : 
; 830  : 					*angle_of_projection = new_pitch;

  00379	8b 45 1c	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  0037c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _new_pitch$[ebp]
  00381	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 831  : 
; 832  : 					*intercept_point = new_intercept_point;

  00385	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00388	8b 4d c4	 mov	 ecx, DWORD PTR _new_intercept_point$[ebp]
  0038b	89 08		 mov	 DWORD PTR [eax], ecx
  0038d	8b 55 c8	 mov	 edx, DWORD PTR _new_intercept_point$[ebp+4]
  00390	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00393	8b 4d cc	 mov	 ecx, DWORD PTR _new_intercept_point$[ebp+8]
  00396	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 833  : 
; 834  : 					if (number_of_iterations > 0)

  00399	83 7d f0 00	 cmp	 DWORD PTR _number_of_iterations$[ebp], 0
  0039d	0f 8e 58 01 00
	00		 jle	 $LN25@get_ballis

; 835  : 					{
; 836  : 						if (triangulate_range)

  003a3	83 7d f8 00	 cmp	 DWORD PTR _triangulate_range$[ebp], 0
  003a7	74 32		 je	 SHORT $LN19@get_ballis

; 837  : 						{
; 838  : 							range = get_triangulated_by_position_range(pitch_device_position, intercept_point);

  003a9	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  003ac	50		 push	 eax
  003ad	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  003b0	51		 push	 ecx
  003b1	e8 00 00 00 00	 call	 ?get_triangulated_by_position_range@@YGMPAUVEC3D@@0@Z ; get_triangulated_by_position_range
  003b6	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]

; 839  : 							if (range == -1.0)

  003b9	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  003be	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@bff0000000000000
  003c6	9f		 lahf
  003c7	f6 c4 44	 test	 ah, 68			; 00000044H
  003ca	7a 0d		 jp	 SHORT $LN21@get_ballis

; 840  : 								range = 1000.0;  // use 1000 meters if unable to triangulate range

  003cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  003d4	f3 0f 11 45 ec	 movss	 DWORD PTR _range$[ebp], xmm0
$LN21@get_ballis:

; 841  : 						}
; 842  : 						else

  003d9	eb 10		 jmp	 SHORT $LN20@get_ballis
$LN19@get_ballis:

; 843  : 							range = get_2d_range (pitch_device_position, intercept_point);

  003db	8b 45 18	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  003de	50		 push	 eax
  003df	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  003e2	51		 push	 ecx
  003e3	e8 00 00 00 00	 call	 ?get_2d_range@@YGMPBUVEC3D@@0@Z ; get_2d_range
  003e8	d9 5d ec	 fstp	 DWORD PTR _range$[ebp]
$LN20@get_ballis:

; 844  : 
; 845  : 						if (airborne_target)

  003eb	83 7d fc 00	 cmp	 DWORD PTR _airborne_target$[ebp], 0
  003ef	74 11		 je	 SHORT $LN22@get_ballis

; 846  : 							// no use calulating ballistic trajectory to point on ground at target's distance
; 847  : 							time_of_flight = range / weapon_velocity;

  003f1	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _range$[ebp]
  003f6	f3 0f 5e 45 0c	 divss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  003fb	f3 0f 11 45 e4	 movss	 DWORD PTR _time_of_flight$[ebp], xmm0

; 848  : 						else

  00400	eb 4c		 jmp	 SHORT $LN23@get_ballis
$LN22@get_ballis:

; 849  : 							time_of_flight = 2.0 * weapon_velocity * sin (new_pitch) * ONE_OVER_G;

  00402	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _weapon_velocity$[ebp]
  00407	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  0040f	51		 push	 ecx
  00410	f3 0f 10 4d e8	 movss	 xmm1, DWORD PTR _new_pitch$[ebp]
  00415	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  0041a	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv438[ebp], xmm0
  00422	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00427	dd 9d 68 ff ff
	ff		 fstp	 QWORD PTR tv406[ebp]
  0042d	f2 0f 10 85 70
	ff ff ff	 movsd	 xmm0, QWORD PTR tv438[ebp]
  00435	f2 0f 59 85 68
	ff ff ff	 mulsd	 xmm0, QWORD PTR tv406[ebp]
  0043d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fba1887a0000000
  00445	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00449	f3 0f 11 45 e4	 movss	 DWORD PTR _time_of_flight$[ebp], xmm0
$LN23@get_ballis:

; 850  : 
; 851  : 						target_move_distance = time_of_flight * target_true_velocity;

  0044e	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _time_of_flight$[ebp]
  00453	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _target_true_velocity$[ebp]
  00458	f3 0f 11 45 dc	 movss	 DWORD PTR _target_move_distance$[ebp], xmm0

; 852  : 
; 853  : 						new_intercept_point.x = current_target_position.x + (target_motion_vector.x * target_move_distance);

  0045d	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp]
  00462	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  00467	f3 0f 58 45 d0	 addss	 xmm0, DWORD PTR _current_target_position$[ebp]
  0046c	f3 0f 11 45 c4	 movss	 DWORD PTR _new_intercept_point$[ebp], xmm0

; 854  : 						new_intercept_point.y = current_target_position.y + (target_motion_vector.y * target_move_distance);

  00471	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+4]
  00476	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  0047b	f3 0f 58 45 d4	 addss	 xmm0, DWORD PTR _current_target_position$[ebp+4]
  00480	f3 0f 11 45 c8	 movss	 DWORD PTR _new_intercept_point$[ebp+4], xmm0

; 855  : 						new_intercept_point.z = current_target_position.z + (target_motion_vector.z * target_move_distance);

  00485	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+8]
  0048a	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  0048f	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _current_target_position$[ebp+8]
  00494	f3 0f 11 45 cc	 movss	 DWORD PTR _new_intercept_point$[ebp+8], xmm0

; 856  : 
; 857  : 						#if DEBUG_MODULE
; 858  : 						debug_log("intercept point range: %.0f, ToF: %.2f, position: (%.0f, %.0f, %.0f)", range, time_of_flight, new_intercept_point.x, new_intercept_point.z, new_intercept_point.y);
; 859  : 						#endif
; 860  : 						if (point_inside_map_area (&new_intercept_point))

  00499	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp]
  0049e	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  004a5	72 52		 jb	 SHORT $LN24@get_ballis
  004a7	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  004af	0f 2f 45 c4	 comiss	 xmm0, DWORD PTR _new_intercept_point$[ebp]
  004b3	72 44		 jb	 SHORT $LN24@get_ballis
  004b5	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp+8]
  004ba	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  004c1	72 36		 jb	 SHORT $LN24@get_ballis
  004c3	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  004cb	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _new_intercept_point$[ebp+8]
  004cf	72 28		 jb	 SHORT $LN24@get_ballis

; 861  : 						{
; 862  : 							if (!airborne_target)

  004d1	83 7d fc 00	 cmp	 DWORD PTR _airborne_target$[ebp], 0
  004d5	75 20		 jne	 SHORT $LN26@get_ballis

; 863  : 								new_intercept_point.y = get_3d_terrain_elevation (new_intercept_point.x, new_intercept_point.z);

  004d7	6a 00		 push	 0
  004d9	51		 push	 ecx
  004da	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp+8]
  004df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e4	51		 push	 ecx
  004e5	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _new_intercept_point$[ebp]
  004ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ef	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  004f4	d9 5d c8	 fstp	 DWORD PTR _new_intercept_point$[ebp+4]
$LN26@get_ballis:

; 864  : 						}
; 865  : 						else

  004f7	eb 02		 jmp	 SHORT $LN25@get_ballis
$LN24@get_ballis:

; 866  : 						{
; 867  : 							break;

  004f9	eb 09		 jmp	 SHORT $LN3@get_ballis
$LN25@get_ballis:

; 868  : 						}
; 869  : 					}
; 870  : 				}
; 871  : 				else

  004fb	eb 02		 jmp	 SHORT $LN17@get_ballis
$LN16@get_ballis:

; 872  : 				{
; 873  : 					break;

  004fd	eb 05		 jmp	 SHORT $LN3@get_ballis
$LN17@get_ballis:

; 874  : 				}
; 875  : 			}

  004ff	e9 20 fe ff ff	 jmp	 $LN2@get_ballis
$LN3@get_ballis:

; 876  : 		}
; 877  : 		else

  00504	eb 1f		 jmp	 SHORT $LN15@get_ballis
$LN14@get_ballis:

; 878  : 		{
; 879  : 			//
; 880  : 			// stationary target
; 881  : 			//
; 882  : 
; 883  : 			result = get_angle_of_projection (pitch_device_position, intercept_point, weapon_velocity, angle_of_projection);

  00506	8b 45 1c	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  00509	50		 push	 eax
  0050a	51		 push	 ecx
  0050b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  00510	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00515	8b 4d 18	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  00518	51		 push	 ecx
  00519	8b 55 08	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  0051c	52		 push	 edx
  0051d	e8 00 00 00 00	 call	 ?get_angle_of_projection@@YGHPBUVEC3D@@0MPAM@Z ; get_angle_of_projection
  00522	89 45 f4	 mov	 DWORD PTR _result$[ebp], eax
$LN15@get_ballis:

; 884  : 		}
; 885  : 	}
; 886  : 	else

  00525	eb 1f		 jmp	 SHORT $LN12@get_ballis
$LN11@get_ballis:

; 887  : 	{
; 888  : 		//
; 889  : 		// target off map
; 890  : 		//
; 891  : 
; 892  : 		result = get_angle_of_projection (pitch_device_position, intercept_point, weapon_velocity, angle_of_projection);

  00527	8b 45 1c	 mov	 eax, DWORD PTR _angle_of_projection$[ebp]
  0052a	50		 push	 eax
  0052b	51		 push	 ecx
  0052c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  00531	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00536	8b 4d 18	 mov	 ecx, DWORD PTR _intercept_point$[ebp]
  00539	51		 push	 ecx
  0053a	8b 55 08	 mov	 edx, DWORD PTR _pitch_device_position$[ebp]
  0053d	52		 push	 edx
  0053e	e8 00 00 00 00	 call	 ?get_angle_of_projection@@YGHPBUVEC3D@@0MPAM@Z ; get_angle_of_projection
  00543	89 45 f4	 mov	 DWORD PTR _result$[ebp], eax
$LN12@get_ballis:

; 893  : 	}
; 894  : 
; 895  : 	return (result);

  00546	8b 45 f4	 mov	 eax, DWORD PTR _result$[ebp]

; 896  : }

  00549	5f		 pop	 edi
  0054a	5e		 pop	 esi
  0054b	5b		 pop	 ebx
  0054c	8b e5		 mov	 esp, ebp
  0054e	5d		 pop	 ebp
  0054f	c2 18 00	 ret	 24			; 00000018H
?get_ballistic_intercept_point_and_angle_of_projection@@YGHPAUVEC3D@@MPAUENTITY@@10PAM@Z ENDP ; get_ballistic_intercept_point_and_angle_of_projection
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z
_TEXT	SEGMENT
tv137 = -112						; size = 4
tv230 = -108						; size = 4
tv146 = -108						; size = 4
tv129 = -108						; size = 4
_target_motion_vector$ = -40				; size = 12
_target_position$ = -28					; size = 12
_target_move_distance$ = -16				; size = 4
_velocity_ratio$ = -12					; size = 4
_target_true_velocity$ = -8				; size = 4
_number_of_iterations$ = -4				; size = 4
_pitch_device_position$ = 8				; size = 4
_weapon_velocity$ = 12					; size = 4
_target$ = 16						; size = 4
_intercept_point$ = 20					; size = 4
?get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z PROC	; get_intercept_point, COMDAT

; 687  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 688  : 	int
; 689  : 		number_of_iterations;
; 690  : 
; 691  : 	float
; 692  : 		target_true_velocity,
; 693  : 		velocity_ratio,
; 694  : 		target_move_distance;
; 695  : 
; 696  : 	vec3d
; 697  : 		target_position,
; 698  : 		target_motion_vector;
; 699  : 
; 700  : 	ASSERT (pitch_device_position);

  00009	83 7d 08 00	 cmp	 DWORD PTR _pitch_device_position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_interc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
  00014	83 c0 0d	 add	 eax, 13			; 0000000dH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JIMDMIFB@pitch_device_position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_interc:

; 701  : 
; 702  : 	ASSERT (target);

  00027	83 7d 10 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN5@get_interc
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
  00032	83 c0 0f	 add	 eax, 15			; 0000000fH
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_interc:

; 703  : 
; 704  : 	ASSERT (intercept_point);

  00045	83 7d 14 00	 cmp	 DWORD PTR _intercept_point$[ebp], 0
  00049	75 18		 jne	 SHORT $LN6@get_interc
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
  00050	83 c0 11	 add	 eax, 17			; 00000011H
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NMPFNFPN@intercept_point@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_interc:

; 705  : 
; 706  : 	get_local_entity_target_point (target, intercept_point);

  00063	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 10	 mov	 ecx, DWORD PTR _target$[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?get_local_entity_target_point@@YGXPAUENTITY@@PAUVEC3D@@@Z ; get_local_entity_target_point

; 707  : 
; 708  : 	target_true_velocity = get_local_entity_vec3d_magnitude (target, VEC3D_TYPE_MOTION_VECTOR);

  00070	6a 06		 push	 6
  00072	8b 45 10	 mov	 eax, DWORD PTR _target$[ebp]
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?get_local_entity_vec3d_magnitude@@YGMPAUENTITY@@W4VEC3D_TYPES@@@Z ; get_local_entity_vec3d_magnitude
  0007b	d9 5d f8	 fstp	 DWORD PTR _target_true_velocity$[ebp]

; 709  : 
; 710  : 	if ((weapon_velocity > 0.001) && (target_true_velocity > 0.001))

  0007e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _weapon_velocity$[ebp]
  00083	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0008b	0f 86 4f 01 00
	00		 jbe	 $LN3@get_interc
  00091	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _target_true_velocity$[ebp]
  00096	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f50624dd2f1a9fc
  0009e	0f 86 3c 01 00
	00		 jbe	 $LN3@get_interc

; 711  : 	{
; 712  : 		if (target_true_velocity < weapon_velocity)

  000a4	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  000a9	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _target_true_velocity$[ebp]
  000ad	0f 86 2d 01 00
	00		 jbe	 $LN3@get_interc

; 713  : 		{
; 714  : 			velocity_ratio = target_true_velocity / weapon_velocity;

  000b3	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _target_true_velocity$[ebp]
  000b8	f3 0f 5e 45 0c	 divss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  000bd	f3 0f 11 45 f4	 movss	 DWORD PTR _velocity_ratio$[ebp], xmm0

; 715  : 
; 716  : 			target_position = *intercept_point;

  000c2	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d e4	 mov	 DWORD PTR _target_position$[ebp], ecx
  000ca	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000cd	89 55 e8	 mov	 DWORD PTR _target_position$[ebp+4], edx
  000d0	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  000d3	89 45 ec	 mov	 DWORD PTR _target_position$[ebp+8], eax

; 717  : 
; 718  : 			get_local_entity_vec3d (target, VEC3D_TYPE_MOTION_VECTOR, &target_motion_vector);

  000d6	83 7d 10 00	 cmp	 DWORD PTR _target$[ebp], 0
  000da	74 0a		 je	 SHORT $LN10@get_interc
  000dc	8b 45 10	 mov	 eax, DWORD PTR _target$[ebp]
  000df	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e1	89 4d 94	 mov	 DWORD PTR tv129[ebp], ecx
  000e4	eb 21		 jmp	 SHORT $LN11@get_interc
$LN10@get_interc:
  000e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
  000ec	83 c2 1f	 add	 edx, 31			; 0000001fH
  000ef	52		 push	 edx
  000f0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fa	50		 push	 eax
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN11@get_interc:
  00107	b9 01 00 00 00	 mov	 ecx, 1
  0010c	85 c9		 test	 ecx, ecx
  0010e	74 09		 je	 SHORT $LN12@get_interc
  00110	c7 45 90 06 00
	00 00		 mov	 DWORD PTR tv137[ebp], 6
  00117	eb 21		 jmp	 SHORT $LN13@get_interc
$LN12@get_interc:
  00119	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z@4JA
  0011f	83 c2 1f	 add	 edx, 31			; 0000001fH
  00122	52		 push	 edx
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00133	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN13@get_interc:
  0013a	8d 4d d8	 lea	 ecx, DWORD PTR _target_motion_vector$[ebp]
  0013d	51		 push	 ecx
  0013e	6a 06		 push	 6
  00140	8b 55 10	 mov	 edx, DWORD PTR _target$[ebp]
  00143	52		 push	 edx
  00144	6b 45 94 60	 imul	 eax, DWORD PTR tv129[ebp], 96
  00148	8b 4d 90	 mov	 ecx, DWORD PTR tv137[ebp]
  0014b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00152	ff d2		 call	 edx

; 719  : 
; 720  : 			normalise_3d_vector (&target_motion_vector);

  00154	8d 45 d8	 lea	 eax, DWORD PTR _target_motion_vector$[ebp]
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  0015d	dd d8		 fstp	 ST(0)

; 721  : 
; 722  : 			number_of_iterations = 3;

  0015f	c7 45 fc 03 00
	00 00		 mov	 DWORD PTR _number_of_iterations$[ebp], 3
$LN2@get_interc:

; 723  : 
; 724  : 			while (number_of_iterations--)

  00166	8b 45 fc	 mov	 eax, DWORD PTR _number_of_iterations$[ebp]
  00169	89 45 94	 mov	 DWORD PTR tv146[ebp], eax
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR _number_of_iterations$[ebp]
  0016f	83 e9 01	 sub	 ecx, 1
  00172	89 4d fc	 mov	 DWORD PTR _number_of_iterations$[ebp], ecx
  00175	83 7d 94 00	 cmp	 DWORD PTR tv146[ebp], 0
  00179	74 65		 je	 SHORT $LN3@get_interc

; 725  : 			{
; 726  : 				target_move_distance = get_3d_range (pitch_device_position, intercept_point) * velocity_ratio;

  0017b	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  0017e	50		 push	 eax
  0017f	8b 4d 08	 mov	 ecx, DWORD PTR _pitch_device_position$[ebp]
  00182	51		 push	 ecx
  00183	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  00188	d9 5d 94	 fstp	 DWORD PTR tv230[ebp]
  0018b	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR tv230[ebp]
  00190	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _velocity_ratio$[ebp]
  00195	f3 0f 11 45 f0	 movss	 DWORD PTR _target_move_distance$[ebp], xmm0

; 727  : 
; 728  : 				intercept_point->x = target_position.x + (target_motion_vector.x * target_move_distance);

  0019a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp]
  0019f	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  001a4	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _target_position$[ebp]
  001a9	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001ac	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 729  : 				intercept_point->y = target_position.y + (target_motion_vector.y * target_move_distance);

  001b0	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+4]
  001b5	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  001ba	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _target_position$[ebp+4]
  001bf	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001c2	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 730  : 				intercept_point->z = target_position.z + (target_motion_vector.z * target_move_distance);

  001c7	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_motion_vector$[ebp+8]
  001cc	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _target_move_distance$[ebp]
  001d1	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _target_position$[ebp+8]
  001d6	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001d9	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 731  : 			}

  001de	eb 86		 jmp	 SHORT $LN2@get_interc
$LN3@get_interc:

; 732  : 		}
; 733  : 	}
; 734  : }

  001e0	5f		 pop	 edi
  001e1	5e		 pop	 esi
  001e2	5b		 pop	 ebx
  001e3	8b e5		 mov	 esp, ebp
  001e5	5d		 pop	 ebp
  001e6	c2 10 00	 ret	 16			; 00000010H
?get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z ENDP	; get_intercept_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z
_TEXT	SEGMENT
_best_package$ = -8					; size = 4
_package$ = -4						; size = 4
_weapon_type$ = 8					; size = 4
_config_type$ = 12					; size = 4
_package_status$ = 16					; size = 4
_number$ = 20						; size = 4
?get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z PROC ; get_next_pylon_to_launch, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 293  : 	int package, best_package = 0;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _best_package$[ebp], 0

; 294  : 
; 295  : 	*number = 0;

  00010	8b 45 14	 mov	 eax, DWORD PTR _number$[ebp]
  00013	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 296  : 
; 297  : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00019	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00020	eb 09		 jmp	 SHORT $LN4@get_next_p
$LN2@get_next_p:
  00022	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00025	83 c0 01	 add	 eax, 1
  00028	89 45 fc	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_next_p:
  0002b	83 7d fc 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  0002f	0f 8d ad 00 00
	00		 jge	 $LN3@get_next_p

; 298  : 	{
; 299  : 		if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00035	69 45 0c 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0003c	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00040	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  00048	75 05		 jne	 SHORT $LN5@get_next_p

; 300  : 		{
; 301  : 			break;

  0004a	e9 93 00 00 00	 jmp	 $LN3@get_next_p
$LN5@get_next_p:

; 302  : 		}
; 303  : 
; 304  : 		ASSERT (package_status[package].number <= weapon_config_database[config_type][package].number);

  0004f	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00052	c1 e0 04	 shl	 eax, 4
  00055	8b 4d 10	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00058	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0005c	69 45 0c 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00063	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00067	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  0006e	7e 18		 jle	 SHORT $LN6@get_next_p
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z@4JA
  00075	83 c0 0c	 add	 eax, 12			; 0000000cH
  00078	50		 push	 eax
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  00083	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_next_p:

; 305  : 
; 306  : 		if (weapon_config_database[config_type][package].sub_type == weapon_type)

  00088	69 45 0c 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0008f	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00093	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  0009a	3b 55 08	 cmp	 edx, DWORD PTR _weapon_type$[ebp]
  0009d	75 3e		 jne	 SHORT $LN7@get_next_p

; 307  : 		{
; 308  : 			if (!package_status[package].damaged)

  0009f	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  000a2	c1 e0 04	 shl	 eax, 4
  000a5	8b 4d 10	 mov	 ecx, DWORD PTR _package_status$[ebp]
  000a8	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  000ad	85 d2		 test	 edx, edx
  000af	75 2c		 jne	 SHORT $LN7@get_next_p

; 309  : 			{
; 310  : 				if (package_status[package].number > *number)

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  000b4	c1 e0 04	 shl	 eax, 4
  000b7	8b 4d 10	 mov	 ecx, DWORD PTR _package_status$[ebp]
  000ba	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  000be	8b 45 14	 mov	 eax, DWORD PTR _number$[ebp]
  000c1	3b 10		 cmp	 edx, DWORD PTR [eax]
  000c3	7e 18		 jle	 SHORT $LN7@get_next_p

; 311  : 				{
; 312  : 					*number = package_status[package].number;

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  000c8	c1 e0 04	 shl	 eax, 4
  000cb	8b 4d 10	 mov	 ecx, DWORD PTR _package_status$[ebp]
  000ce	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  000d2	8b 45 14	 mov	 eax, DWORD PTR _number$[ebp]
  000d5	89 10		 mov	 DWORD PTR [eax], edx

; 313  : 
; 314  : 					best_package = package;

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  000da	89 45 f8	 mov	 DWORD PTR _best_package$[ebp], eax
$LN7@get_next_p:

; 315  : 				}
; 316  : 			}
; 317  : 		}
; 318  : 	}

  000dd	e9 40 ff ff ff	 jmp	 $LN2@get_next_p
$LN3@get_next_p:

; 319  : 
; 320  : 	return best_package;

  000e2	8b 45 f8	 mov	 eax, DWORD PTR _best_package$[ebp]

; 321  : }

  000e5	5f		 pop	 edi
  000e6	5e		 pop	 esi
  000e7	5b		 pop	 ebx
  000e8	8b e5		 mov	 esp, ebp
  000ea	5d		 pop	 ebp
  000eb	c2 10 00	 ret	 16			; 00000010H
?get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z ENDP ; get_next_pylon_to_launch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_viewpoint_from_weapon@@YGHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@HPAUOBJECT_3D_INSTANCE@@PAUVIEWPOINT@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@4@Z
_TEXT	SEGMENT
_config_type$ = 8					; size = 4
_package_status$ = 12					; size = 4
_package$ = 16						; size = 4
_inst3d$ = 20						; size = 4
_vp$ = 24						; size = 4
_search_weapon_system_heading$ = 28			; size = 4
_search_weapon_system_pitch$ = 32			; size = 4
?get_viewpoint_from_weapon@@YGHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@HPAUOBJECT_3D_INSTANCE@@PAUVIEWPOINT@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@4@Z PROC ; get_viewpoint_from_weapon, COMDAT

; 200  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 201  : 	search_weapon_system_heading->search_depth = weapon_config_database[config_type][package].heading_depth;

  00009	69 45 08 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00010	6b 4d 10 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00014	8b 55 1c	 mov	 edx, DWORD PTR _search_weapon_system_heading$[ebp]
  00017	8b 84 08 08 00
	00 00		 mov	 eax, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  0001e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 202  : 	search_weapon_system_heading->search_object = inst3d;

  00021	8b 45 1c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00027	89 08		 mov	 DWORD PTR [eax], ecx

; 203  : 	search_weapon_system_heading->sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  00029	8b 45 1c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  0002c	c7 40 0c 03 00
	00 00		 mov	 DWORD PTR [eax+12], 3

; 204  : 
; 205  : 	if (find_object_3d_sub_object (search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00033	8b 45 1c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0003c	83 f8 01	 cmp	 eax, 1
  0003f	0f 85 90 00 00
	00		 jne	 $LN3@get_viewpo

; 206  : 	{
; 207  : 		search_weapon_system_pitch->search_depth = weapon_config_database[config_type][package].pitch_depth;

  00045	69 45 08 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0004c	6b 4d 10 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00050	8b 55 20	 mov	 edx, DWORD PTR _search_weapon_system_pitch$[ebp]
  00053	8b 84 08 0c 00
	00 00		 mov	 eax, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  0005a	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 208  : 		search_weapon_system_pitch->sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  0005d	8b 45 20	 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  00060	c7 40 0c 1c 00
	00 00		 mov	 DWORD PTR [eax+12], 28	; 0000001cH

; 209  : 
; 210  : 		if (find_object_3d_sub_object_from_sub_object (search_weapon_system_heading, search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00067	8b 45 20	 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d 1c	 mov	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00074	83 f8 01	 cmp	 eax, 1
  00077	75 5c		 jne	 SHORT $LN3@get_viewpo

; 211  : 		{
; 212  : 			//
; 213  : 			// get viewpoint of unrotated heading and pitch devices
; 214  : 			//
; 215  : 
; 216  : 			search_weapon_system_heading->result_sub_object->relative_heading = 0.0;

  00079	8b 45 1c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	0f 57 c0	 xorps	 xmm0, xmm0
  00082	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 217  : 			search_weapon_system_pitch->result_sub_object->relative_pitch = 0.0;

  00087	8b 45 20	 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0008a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0008d	0f 57 c0	 xorps	 xmm0, xmm0
  00090	f3 0f 11 41 1c	 movss	 DWORD PTR [ecx+28], xmm0

; 218  : 
; 219  : 			get_3d_sub_object_world_viewpoint (search_weapon_system_pitch->result_sub_object, vp);

  00095	8b 45 18	 mov	 eax, DWORD PTR _vp$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 20	 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp]
  0009c	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 220  : 
; 221  : 			// reset heading and pitch
; 222  : 			search_weapon_system_heading->result_sub_object->relative_heading = package_status->weapon_system_heading;

  000a5	8b 45 1c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _package_status$[ebp]
  000ae	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000b1	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 223  : 			search_weapon_system_pitch->result_sub_object->relative_pitch = -package_status->weapon_system_pitch;

  000b4	8b 45 0c	 mov	 eax, DWORD PTR _package_status$[ebp]
  000b7	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000bc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000c3	8b 4d 20	 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp]
  000c6	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000c9	f3 0f 11 42 1c	 movss	 DWORD PTR [edx+28], xmm0

; 224  : 
; 225  : 			return TRUE;

  000ce	b8 01 00 00 00	 mov	 eax, 1
  000d3	eb 02		 jmp	 SHORT $LN1@get_viewpo
$LN3@get_viewpo:

; 226  : 		}
; 227  : 	}
; 228  : 
; 229  : 	return FALSE;

  000d5	33 c0		 xor	 eax, eax
$LN1@get_viewpo:

; 230  : }

  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 1c 00	 ret	 28			; 0000001cH
?get_viewpoint_from_weapon@@YGHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@HPAUOBJECT_3D_INSTANCE@@PAUVIEWPOINT@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@4@Z ENDP ; get_viewpoint_from_weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_number_of_pods_firing@@YGIPAUENTITY@@H@Z
_TEXT	SEGMENT
tv130 = -88						; size = 4
tv78 = -88						; size = 4
tv90 = -84						; size = 4
tv70 = -84						; size = 4
_number$ = -16						; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_weapon_type$ = 12					; size = 4
?get_number_of_pods_firing@@YGIPAUENTITY@@H@Z PROC	; get_number_of_pods_firing, COMDAT

; 903  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 904  : 	weapon_package_status *package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN10@get_number
  0000f	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d ac	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN11@get_number
$LN10@get_number:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
  0001f	83 c2 01	 add	 edx, 1
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN11@get_number:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN12@get_number
  00043	c7 45 a8 13 00
	00 00		 mov	 DWORD PTR tv78[ebp], 19	; 00000013H
  0004a	eb 21		 jmp	 SHORT $LN13@get_number
$LN12@get_number:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
  00052	83 c2 01	 add	 edx, 1
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN13@get_number:
  0006d	6a 13		 push	 19			; 00000013H
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00072	51		 push	 ecx
  00073	6b 55 ac 50	 imul	 edx, DWORD PTR tv70[ebp], 80
  00077	8b 45 a8	 mov	 eax, DWORD PTR tv78[ebp]
  0007a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00081	ff d1		 call	 ecx
  00083	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 905  : 	weapon_config_types config_type = (weapon_config_types) get_local_entity_int_value(launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  00086	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0008a	74 0a		 je	 SHORT $LN14@get_number
  0008c	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	89 4d ac	 mov	 DWORD PTR tv90[ebp], ecx
  00094	eb 21		 jmp	 SHORT $LN15@get_number
$LN14@get_number:
  00096	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
  0009c	83 c2 02	 add	 edx, 2
  0009f	52		 push	 edx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b0	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN15@get_number:
  000b7	b9 01 00 00 00	 mov	 ecx, 1
  000bc	85 c9		 test	 ecx, ecx
  000be	74 09		 je	 SHORT $LN16@get_number
  000c0	c7 45 a8 05 01
	00 00		 mov	 DWORD PTR tv130[ebp], 261 ; 00000105H
  000c7	eb 21		 jmp	 SHORT $LN17@get_number
$LN16@get_number:
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
  000cf	83 c2 02	 add	 edx, 2
  000d2	52		 push	 edx
  000d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000dd	50		 push	 eax
  000de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e3	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN17@get_number:
  000ea	68 05 01 00 00	 push	 261			; 00000105H
  000ef	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000f2	51		 push	 ecx
  000f3	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv90[ebp], 1116
  000fa	8b 45 a8	 mov	 eax, DWORD PTR tv130[ebp]
  000fd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00104	ff d1		 call	 ecx
  00106	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 906  : 	int package, number = 0;

  00109	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _number$[ebp], 0

; 907  : 
; 908  : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00110	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00117	eb 09		 jmp	 SHORT $LN4@get_number
$LN2@get_number:
  00119	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  0011c	83 c0 01	 add	 eax, 1
  0011f	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_number:
  00122	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00126	0f 8d 9b 00 00
	00		 jge	 $LN3@get_number

; 909  : 	{
; 910  : 		if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0012c	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00133	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00137	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  0013f	75 05		 jne	 SHORT $LN5@get_number

; 911  : 			break;

  00141	e9 81 00 00 00	 jmp	 $LN3@get_number
$LN5@get_number:

; 912  : 
; 913  : 		ASSERT(package_status[package].number <= weapon_config_database[config_type][package].number);

  00146	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00149	c1 e0 04	 shl	 eax, 4
  0014c	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0014f	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00153	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0015a	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0015e	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  00165	7e 18		 jle	 SHORT $LN6@get_number
  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_number_of_pods_firing@@YGIPAUENTITY@@H@Z@4JA
  0016c	83 c0 0a	 add	 eax, 10			; 0000000aH
  0016f	50		 push	 eax
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00175	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  0017a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_number:

; 914  : 
; 915  : 		if (weapon_config_database[config_type][package].sub_type == weapon_type)

  0017f	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00186	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0018a	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00191	3b 55 0c	 cmp	 edx, DWORD PTR _weapon_type$[ebp]
  00194	75 2c		 jne	 SHORT $LN7@get_number

; 916  : 			if (!package_status[package].damaged && package_status[package].number > 0)

  00196	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00199	c1 e0 04	 shl	 eax, 4
  0019c	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0019f	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  001a4	85 d2		 test	 edx, edx
  001a6	75 1a		 jne	 SHORT $LN7@get_number
  001a8	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001ab	c1 e0 04	 shl	 eax, 4
  001ae	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001b1	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  001b5	85 d2		 test	 edx, edx
  001b7	7e 09		 jle	 SHORT $LN7@get_number

; 917  : 				number++;

  001b9	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]
  001bc	83 c0 01	 add	 eax, 1
  001bf	89 45 f0	 mov	 DWORD PTR _number$[ebp], eax
$LN7@get_number:

; 918  : 	}

  001c2	e9 52 ff ff ff	 jmp	 $LN2@get_number
$LN3@get_number:

; 919  : 
; 920  : 	return number;

  001c7	8b 45 f0	 mov	 eax, DWORD PTR _number$[ebp]

; 921  : }

  001ca	5f		 pop	 edi
  001cb	5e		 pop	 esi
  001cc	5b		 pop	 ebx
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c2 08 00	 ret	 8
?get_number_of_pods_firing@@YGIPAUENTITY@@H@Z ENDP	; get_number_of_pods_firing
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?guidance_type_can_use_point_lock@@YGHW4WEAPON_GUIDANCE_TYPES@@@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_type$ = 8						; size = 4
?guidance_type_can_use_point_lock@@YGHW4WEAPON_GUIDANCE_TYPES@@@Z PROC ; guidance_type_can_use_point_lock, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 	switch (type)

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00012	83 e9 04	 sub	 ecx, 4
  00015	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  00018	83 7d bc 04	 cmp	 DWORD PTR tv64[ebp], 4
  0001c	77 0a		 ja	 SHORT $LN4@guidance_t
  0001e	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00021	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN7@guidance_t[edx*4]
$LN4@guidance_t:

; 84   : 	{
; 85   : 	case WEAPON_GUIDANCE_TYPE_NONE:
; 86   : 	case WEAPON_GUIDANCE_TYPE_PASSIVE_INFRA_RED:					// fire and forget
; 87   : 	case WEAPON_GUIDANCE_TYPE_SEMI_ACTIVE_RADAR:					// illumination source
; 88   : 	case WEAPON_GUIDANCE_TYPE_ACTIVE_LASER:							// fire and forget
; 89   : 	case WEAPON_GUIDANCE_TYPE_ACTIVE_RADAR:							// fire and forget
; 90   : 	default:
; 91   : 		return FALSE;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 05		 jmp	 SHORT $LN1@guidance_t
$LN5@guidance_t:

; 92   : 	case WEAPON_GUIDANCE_TYPE_SEMI_ACTIVE_LASER:					// illumination source
; 93   : 	case WEAPON_GUIDANCE_TYPE_SEMI_ACTIVE_LASER_BEAM_RIDING:   // illumination source
; 94   : 	case WEAPON_GUIDANCE_TYPE_RADIO_COMMAND:							// control source
; 95   : 	case WEAPON_GUIDANCE_TYPE_WIRE_GUIDED:   						// control source
; 96   : 		return TRUE;

  0002c	b8 01 00 00 00	 mov	 eax, 1
$LN1@guidance_t:

; 97   : 	}
; 98   : }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c2 04 00	 ret	 4
  0003a	66 90		 npad	 2
$LN7@guidance_t:
  0003c	00 00 00 00	 DD	 $LN5@guidance_t
  00040	00 00 00 00	 DD	 $LN5@guidance_t
  00044	00 00 00 00	 DD	 $LN4@guidance_t
  00048	00 00 00 00	 DD	 $LN5@guidance_t
  0004c	00 00 00 00	 DD	 $LN5@guidance_t
?guidance_type_can_use_point_lock@@YGHW4WEAPON_GUIDANCE_TYPES@@@Z ENDP ; guidance_type_can_use_point_lock
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z
_TEXT	SEGMENT
tv193 = -88						; size = 4
tv136 = -88						; size = 4
tv78 = -88						; size = 4
tv185 = -84						; size = 4
tv129 = -84						; size = 4
tv70 = -84						; size = 4
_position$ = -16					; size = 4
_launch_sound_effect$ = -12				; size = 4
_sound_effect_sub_type$ = -8				; size = 4
_looping$ = -4						; size = 4
_launcher$ = 8						; size = 4
_weapon_sub_type$ = 12					; size = 4
?create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z PROC ; create_weapon_launched_sound_effects, COMDAT

; 3150 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3151 : 	int
; 3152 : 		looping;
; 3153 : 
; 3154 : 	entity_sub_types
; 3155 : 		sound_effect_sub_type;
; 3156 : 
; 3157 : 	sound_sample_indices
; 3158 : 		launch_sound_effect;
; 3159 : 
; 3160 : 	vec3d
; 3161 : 		*position;
; 3162 : 
; 3163 : 	position = get_local_entity_vec3d_ptr (launcher, VEC3D_TYPE_POSITION);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN12@create_wea
  0000f	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d ac	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN13@create_wea
$LN12@create_wea:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA
  0001f	83 c2 0d	 add	 edx, 13			; 0000000dH
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@create_wea:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN14@create_wea
  00043	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv78[ebp], 8
  0004a	eb 21		 jmp	 SHORT $LN15@create_wea
$LN14@create_wea:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA
  00052	83 c2 0d	 add	 edx, 13			; 0000000dH
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@create_wea:
  0006d	6a 08		 push	 8
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00072	51		 push	 ecx
  00073	6b 55 ac 60	 imul	 edx, DWORD PTR tv70[ebp], 96
  00077	8b 45 a8	 mov	 eax, DWORD PTR tv78[ebp]
  0007a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00081	ff d1		 call	 ecx
  00083	89 45 f0	 mov	 DWORD PTR _position$[ebp], eax

; 3164 : 
; 3165 : 	//
; 3166 : 	// launch sounds
; 3167 : 	//
; 3168 : 
; 3169 : 	if (resume_client_server_continuous_weapon_sound_effect (launcher, weapon_sub_type))

  00086	8b 45 0c	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  00089	50		 push	 eax
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0008d	51		 push	 ecx
  0008e	e8 00 00 00 00	 call	 ?resume_client_server_continuous_weapon_sound_effect@@YGHPAUENTITY@@H@Z ; resume_client_server_continuous_weapon_sound_effect
  00093	85 c0		 test	 eax, eax
  00095	74 05		 je	 SHORT $LN2@create_wea

; 3170 : 	{
; 3171 : 	}
; 3172 : 	else

  00097	e9 25 02 00 00	 jmp	 $LN10@create_wea
$LN2@create_wea:

; 3173 : 	{
; 3174 : 		sound_effect_sub_type = weapon_database[weapon_sub_type].launch_sound_effect_sub_type;

  0009c	69 45 0c e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  000a3	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+44]
  000a9	89 4d f8	 mov	 DWORD PTR _sound_effect_sub_type$[ebp], ecx

; 3175 : 
; 3176 : 		if (sound_effect_sub_type == ENTITY_SUB_TYPE_EFFECT_SOUND_MISC)

  000ac	83 7d f8 1a	 cmp	 DWORD PTR _sound_effect_sub_type$[ebp], 26 ; 0000001aH
  000b0	75 09		 jne	 SHORT $LN4@create_wea

; 3177 : 		{
; 3178 : 			looping = FALSE;

  000b2	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _looping$[ebp], 0

; 3179 : 		}
; 3180 : 		else

  000b9	eb 07		 jmp	 SHORT $LN5@create_wea
$LN4@create_wea:

; 3181 : 		{
; 3182 : 			looping = TRUE;

  000bb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _looping$[ebp], 1
$LN5@create_wea:

; 3183 : 		}
; 3184 : 
; 3185 : 		if (get_local_entity_int_value (launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  000c2	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000c6	74 0a		 je	 SHORT $LN16@create_wea
  000c8	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cd	89 4d ac	 mov	 DWORD PTR tv129[ebp], ecx
  000d0	eb 1d		 jmp	 SHORT $LN17@create_wea
$LN16@create_wea:
  000d2	68 71 0c 00 00	 push	 3185			; 00000c71H
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e8	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN17@create_wea:
  000ef	b8 01 00 00 00	 mov	 eax, 1
  000f4	85 c0		 test	 eax, eax
  000f6	74 09		 je	 SHORT $LN18@create_wea
  000f8	c7 45 a8 9c 00
	00 00		 mov	 DWORD PTR tv136[ebp], 156 ; 0000009cH
  000ff	eb 1d		 jmp	 SHORT $LN19@create_wea
$LN18@create_wea:
  00101	68 71 0c 00 00	 push	 3185			; 00000c71H
  00106	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00111	51		 push	 ecx
  00112	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00117	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN19@create_wea:
  0011e	68 9c 00 00 00	 push	 156			; 0000009cH
  00123	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00126	52		 push	 edx
  00127	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv129[ebp], 1116
  0012e	8b 4d a8	 mov	 ecx, DWORD PTR tv136[ebp]
  00131	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00138	ff d2		 call	 edx
  0013a	85 c0		 test	 eax, eax
  0013c	0f 84 ab 00 00
	00		 je	 $LN6@create_wea

; 3186 : 		{
; 3187 : 			//
; 3188 : 			// interior sound
; 3189 : 			//
; 3190 : 
; 3191 : 			launch_sound_effect = weapon_database[weapon_sub_type].interior_launch_sound_effect;

  00142	69 45 0c e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00149	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+48]
  0014f	89 4d f4	 mov	 DWORD PTR _launch_sound_effect$[ebp], ecx

; 3192 : 
; 3193 : 			if (launch_sound_effect != SOUND_SAMPLE_INDEX_NONE)

  00152	83 7d f4 00	 cmp	 DWORD PTR _launch_sound_effect$[ebp], 0
  00156	74 3d		 je	 SHORT $LN8@create_wea

; 3194 : 			{
; 3195 : 				create_client_server_sound_effect_entity

  00158	8d 45 f4	 lea	 eax, DWORD PTR _launch_sound_effect$[ebp]
  0015b	50		 push	 eax
  0015c	6a 01		 push	 1
  0015e	8b 4d fc	 mov	 ecx, DWORD PTR _looping$[ebp]
  00161	51		 push	 ecx
  00162	6a 01		 push	 1
  00164	51		 push	 ecx
  00165	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0016d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00172	51		 push	 ecx
  00173	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0017b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00180	6a 00		 push	 0
  00182	6a 01		 push	 1
  00184	6a 00		 push	 0
  00186	8b 55 f8	 mov	 edx, DWORD PTR _sound_effect_sub_type$[ebp]
  00189	52		 push	 edx
  0018a	6a 00		 push	 0
  0018c	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN8@create_wea:

; 3196 : 				(
; 3197 : 					launcher,
; 3198 : 					ENTITY_SIDE_NEUTRAL,
; 3199 : 					sound_effect_sub_type,
; 3200 : 					SOUND_CHANNEL_SOUND_EFFECT,
; 3201 : 					SOUND_LOCALITY_INTERIOR,
; 3202 : 					NULL,												// position
; 3203 : 					1.0,												// amplification
; 3204 : 					1.0,												// Werewolf pitch
; 3205 : 					TRUE,												// valid sound effect
; 3206 : 					looping,											// looping
; 3207 : 					1,													// sample count
; 3208 : 					&launch_sound_effect							// sample index list
; 3209 : 				);
; 3210 : 			}
; 3211 : 
; 3212 : 			//
; 3213 : 			// exterior sound
; 3214 : 			//
; 3215 : 
; 3216 : 			launch_sound_effect = weapon_database[weapon_sub_type].exterior_launch_sound_effect;

  00195	69 45 0c e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  0019c	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+52]
  001a2	89 4d f4	 mov	 DWORD PTR _launch_sound_effect$[ebp], ecx

; 3217 : 
; 3218 : 			if (launch_sound_effect != SOUND_SAMPLE_INDEX_NONE)

  001a5	83 7d f4 00	 cmp	 DWORD PTR _launch_sound_effect$[ebp], 0
  001a9	74 3d		 je	 SHORT $LN9@create_wea

; 3219 : 			{
; 3220 : 				create_client_server_sound_effect_entity

  001ab	8d 45 f4	 lea	 eax, DWORD PTR _launch_sound_effect$[ebp]
  001ae	50		 push	 eax
  001af	6a 01		 push	 1
  001b1	8b 4d fc	 mov	 ecx, DWORD PTR _looping$[ebp]
  001b4	51		 push	 ecx
  001b5	6a 01		 push	 1
  001b7	51		 push	 ecx
  001b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c5	51		 push	 ecx
  001c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d3	6a 00		 push	 0
  001d5	6a 02		 push	 2
  001d7	6a 00		 push	 0
  001d9	8b 55 f8	 mov	 edx, DWORD PTR _sound_effect_sub_type$[ebp]
  001dc	52		 push	 edx
  001dd	6a 00		 push	 0
  001df	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN9@create_wea:

; 3221 : 				(
; 3222 : 					launcher,
; 3223 : 					ENTITY_SIDE_NEUTRAL,
; 3224 : 					sound_effect_sub_type,
; 3225 : 					SOUND_CHANNEL_SOUND_EFFECT,
; 3226 : 					SOUND_LOCALITY_EXTERIOR,
; 3227 : 					NULL,												// position
; 3228 : 					1.0,												// amplification
; 3229 : 					1.0,												// Werewolf pitch
; 3230 : 					TRUE,												// valid sound effect
; 3231 : 					looping,											// looping
; 3232 : 					1,													// sample count
; 3233 : 					&launch_sound_effect							// sample index list
; 3234 : 				);
; 3235 : 			}
; 3236 : 		}
; 3237 : 		else

  001e8	e9 d4 00 00 00	 jmp	 $LN10@create_wea
$LN6@create_wea:

; 3238 : 		{
; 3239 : 			//
; 3240 : 			// normal sound
; 3241 : 			//
; 3242 : 
; 3243 : 			launch_sound_effect = weapon_database[weapon_sub_type].exterior_launch_sound_effect;

  001ed	69 45 0c e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  001f4	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+52]
  001fa	89 4d f4	 mov	 DWORD PTR _launch_sound_effect$[ebp], ecx

; 3244 : 
; 3245 : 			if (launch_sound_effect != SOUND_SAMPLE_INDEX_NONE)

  001fd	83 7d f4 00	 cmp	 DWORD PTR _launch_sound_effect$[ebp], 0
  00201	0f 84 ba 00 00
	00		 je	 $LN10@create_wea

; 3246 : 			{
; 3247 : 				position = get_local_entity_vec3d_ptr (launcher, VEC3D_TYPE_POSITION);

  00207	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0020b	74 0a		 je	 SHORT $LN20@create_wea
  0020d	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00210	8b 08		 mov	 ecx, DWORD PTR [eax]
  00212	89 4d ac	 mov	 DWORD PTR tv185[ebp], ecx
  00215	eb 21		 jmp	 SHORT $LN21@create_wea
$LN20@create_wea:
  00217	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA
  0021d	83 c2 61	 add	 edx, 97			; 00000061H
  00220	52		 push	 edx
  00221	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022b	50		 push	 eax
  0022c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00231	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN21@create_wea:
  00238	b9 01 00 00 00	 mov	 ecx, 1
  0023d	85 c9		 test	 ecx, ecx
  0023f	74 09		 je	 SHORT $LN22@create_wea
  00241	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv193[ebp], 8
  00248	eb 21		 jmp	 SHORT $LN23@create_wea
$LN22@create_wea:
  0024a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z@4JA
  00250	83 c2 61	 add	 edx, 97			; 00000061H
  00253	52		 push	 edx
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00259	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00264	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN23@create_wea:
  0026b	6a 08		 push	 8
  0026d	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00270	51		 push	 ecx
  00271	6b 55 ac 60	 imul	 edx, DWORD PTR tv185[ebp], 96
  00275	8b 45 a8	 mov	 eax, DWORD PTR tv193[ebp]
  00278	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0027f	ff d1		 call	 ecx
  00281	89 45 f0	 mov	 DWORD PTR _position$[ebp], eax

; 3248 : 
; 3249 : 				create_client_server_sound_effect_entity

  00284	8d 45 f4	 lea	 eax, DWORD PTR _launch_sound_effect$[ebp]
  00287	50		 push	 eax
  00288	6a 01		 push	 1
  0028a	8b 4d fc	 mov	 ecx, DWORD PTR _looping$[ebp]
  0028d	51		 push	 ecx
  0028e	6a 01		 push	 1
  00290	51		 push	 ecx
  00291	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00299	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0029e	51		 push	 ecx
  0029f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	6a 00		 push	 0
  002ae	6a 00		 push	 0
  002b0	6a 00		 push	 0
  002b2	8b 55 f8	 mov	 edx, DWORD PTR _sound_effect_sub_type$[ebp]
  002b5	52		 push	 edx
  002b6	6a 00		 push	 0
  002b8	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  002bb	50		 push	 eax
  002bc	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN10@create_wea:

; 3250 : 				(
; 3251 : 					launcher,
; 3252 : 					ENTITY_SIDE_NEUTRAL,
; 3253 : 					sound_effect_sub_type,
; 3254 : 					SOUND_CHANNEL_SOUND_EFFECT,
; 3255 : 					SOUND_LOCALITY_ALL,
; 3256 : 					NULL,												// position
; 3257 : 					1.0,												// amplification
; 3258 : 					1.0,												// Werewolf pitch
; 3259 : 					TRUE,												// valid sound effect
; 3260 : 					looping,											// looping
; 3261 : 					1,													// sample count
; 3262 : 					&launch_sound_effect							// sample index list
; 3263 : 				);
; 3264 : 			}
; 3265 : 		}
; 3266 : 	}
; 3267 : }

  002c1	5f		 pop	 edi
  002c2	5e		 pop	 esi
  002c3	5b		 pop	 ebx
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 08 00	 ret	 8
?create_weapon_launched_sound_effects@@YGXPAUENTITY@@H@Z ENDP ; create_weapon_launched_sound_effects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv313 = -308						; size = 4
tv288 = -308						; size = 4
tv247 = -308						; size = 4
tv226 = -308						; size = 4
tv199 = -308						; size = 4
tv161 = -308						; size = 4
tv140 = -308						; size = 4
tv83 = -308						; size = 4
tv327 = -304						; size = 4
tv305 = -304						; size = 4
tv280 = -304						; size = 4
tv239 = -304						; size = 4
tv218 = -304						; size = 4
tv191 = -304						; size = 4
tv153 = -304						; size = 4
tv132 = -304						; size = 4
tv75 = -304						; size = 4
_vp$ = -236						; size = 48
_config_type$ = -188					; size = 4
_package_status$ = -184					; size = 4
_selected_weapon$ = -180				; size = 4
_search_weapon_system_pitch$ = -176			; size = 56
_search_weapon_system_heading$ = -120			; size = 56
_inst3d$ = -64						; size = 4
_target_position$ = -60					; size = 12
_target$ = -48						; size = 4
_normalised_bearing$ = -44				; size = 4
_normalised_max_heading$ = -40				; size = 4
_bearing$ = -36						; size = 4
_max_heading$ = -32					; size = 4
_min_heading$ = -28					; size = 4
_heading$ = -24						; size = 4
_dz$ = -20						; size = 4
_dx$ = -16						; size = 4
_num_effective_weapons$ = -12				; size = 4
_num_weapon_instances$ = -8				; size = 4
_package$ = -4						; size = 4
_source$ = 8						; size = 4
?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z PROC ; suppress_ineffective_ship_weapons, COMDAT

; 2791 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 01 00
	00		 sub	 esp, 308		; 00000134H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2792 : 	int
; 2793 : 		package,
; 2794 : 		num_weapon_instances,
; 2795 : 		num_effective_weapons;
; 2796 : 
; 2797 : 	float
; 2798 : 		dx,
; 2799 : 		dz,
; 2800 : 		heading,
; 2801 : 		min_heading,
; 2802 : 		max_heading,
; 2803 : 		bearing,
; 2804 : 		normalised_max_heading,
; 2805 : 		normalised_bearing;
; 2806 : 
; 2807 : 	entity
; 2808 : 		*target;
; 2809 : 
; 2810 : 	vec3d
; 2811 : 		target_position;
; 2812 : 
; 2813 : 	object_3d_instance
; 2814 : 		*inst3d;
; 2815 : 
; 2816 : 	object_3d_sub_object_search_data
; 2817 : 		search_weapon_system_heading,
; 2818 : 		search_weapon_system_pitch;
; 2819 : 
; 2820 : 	entity_sub_types
; 2821 : 		selected_weapon;
; 2822 : 
; 2823 : 	weapon_package_status
; 2824 : 		*package_status;
; 2825 : 
; 2826 : 	weapon_config_types
; 2827 : 		config_type;
; 2828 : 
; 2829 : 	viewpoint
; 2830 : 		vp;
; 2831 : 
; 2832 : 	#if DEBUG_MODULE_EFFECTIVE_SHIP_WEAPONS
; 2833 : 
; 2834 : 	rgb_colour
; 2835 : 		heading_line_colour,
; 2836 : 		min_heading_line_colour,
; 2837 : 		max_heading_line_colour;
; 2838 : 
; 2839 : 	#endif
; 2840 : 
; 2841 : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN14@suppress_i
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 32	 add	 eax, 50			; 00000032H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@suppress_i:

; 2842 : 
; 2843 : 	ASSERT (get_local_entity_int_value (source, INT_TYPE_IDENTIFY_SHIP_VEHICLE));

  0002a	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0002e	74 0d		 je	 SHORT $LN50@suppress_i
  00030	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  0003b	eb 24		 jmp	 SHORT $LN51@suppress_i
$LN50@suppress_i:
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00043	83 c2 34	 add	 edx, 52			; 00000034H
  00046	52		 push	 edx
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00057	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN51@suppress_i:
  00061	b9 01 00 00 00	 mov	 ecx, 1
  00066	85 c9		 test	 ecx, ecx
  00068	74 0c		 je	 SHORT $LN52@suppress_i
  0006a	c7 85 cc fe ff
	ff 5f 00 00 00	 mov	 DWORD PTR tv83[ebp], 95	; 0000005fH
  00074	eb 24		 jmp	 SHORT $LN53@suppress_i
$LN52@suppress_i:
  00076	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  0007c	83 c2 34	 add	 edx, 52			; 00000034H
  0007f	52		 push	 edx
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0008a	50		 push	 eax
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN53@suppress_i:
  0009a	6a 5f		 push	 95			; 0000005fH
  0009c	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0009f	51		 push	 ecx
  000a0	69 95 d0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000aa	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000b0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000b7	ff d1		 call	 ecx
  000b9	85 c0		 test	 eax, eax
  000bb	75 18		 jne	 SHORT $LN15@suppress_i
  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  000c2	83 c0 34	 add	 eax, 52			; 00000034H
  000c5	50		 push	 eax
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@GIGDDCJP@get_local_entity_int_value?5?$CIsou@
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@suppress_i:

; 2844 : 
; 2845 : 	//
; 2846 : 	// check valid package status
; 2847 : 	//
; 2848 : 
; 2849 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (source, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  000d5	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  000d9	74 0d		 je	 SHORT $LN54@suppress_i
  000db	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  000de	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e0	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv132[ebp], ecx
  000e6	eb 24		 jmp	 SHORT $LN55@suppress_i
$LN54@suppress_i:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  000ee	83 c2 3a	 add	 edx, 58			; 0000003aH
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv132[ebp], 0
$LN55@suppress_i:
  0010c	b9 01 00 00 00	 mov	 ecx, 1
  00111	85 c9		 test	 ecx, ecx
  00113	74 0c		 je	 SHORT $LN56@suppress_i
  00115	c7 85 cc fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv140[ebp], 19 ; 00000013H
  0011f	eb 24		 jmp	 SHORT $LN57@suppress_i
$LN56@suppress_i:
  00121	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00127	83 c2 3a	 add	 edx, 58			; 0000003aH
  0012a	52		 push	 edx
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00135	50		 push	 eax
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013b	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv140[ebp], 0
$LN57@suppress_i:
  00145	6a 13		 push	 19			; 00000013H
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0014a	51		 push	 ecx
  0014b	6b 95 d0 fe ff
	ff 50		 imul	 edx, DWORD PTR tv132[ebp], 80
  00152	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv140[ebp]
  00158	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0015f	ff d1		 call	 ecx
  00161	89 85 48 ff ff
	ff		 mov	 DWORD PTR _package_status$[ebp], eax

; 2850 : 
; 2851 : 	if (!package_status)

  00167	83 bd 48 ff ff
	ff 00		 cmp	 DWORD PTR _package_status$[ebp], 0
  0016e	75 05		 jne	 SHORT $LN16@suppress_i

; 2852 : 	{
; 2853 : 		return;

  00170	e9 1c 09 00 00	 jmp	 $LN1@suppress_i
$LN16@suppress_i:

; 2854 : 	}
; 2855 : 
; 2856 : 	//
; 2857 : 	// get config type
; 2858 : 	//
; 2859 : 
; 2860 : 	config_type = (weapon_config_types) get_local_entity_int_value (source, INT_TYPE_WEAPON_CONFIG_TYPE);

  00175	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00179	74 0d		 je	 SHORT $LN58@suppress_i
  0017b	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0017e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00180	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv153[ebp], ecx
  00186	eb 24		 jmp	 SHORT $LN59@suppress_i
$LN58@suppress_i:
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  0018e	83 c2 45	 add	 edx, 69			; 00000045H
  00191	52		 push	 edx
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a2	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv153[ebp], 0
$LN59@suppress_i:
  001ac	b9 01 00 00 00	 mov	 ecx, 1
  001b1	85 c9		 test	 ecx, ecx
  001b3	74 0c		 je	 SHORT $LN60@suppress_i
  001b5	c7 85 cc fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv161[ebp], 261 ; 00000105H
  001bf	eb 24		 jmp	 SHORT $LN61@suppress_i
$LN60@suppress_i:
  001c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  001c7	83 c2 45	 add	 edx, 69			; 00000045H
  001ca	52		 push	 edx
  001cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d5	50		 push	 eax
  001d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001db	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv161[ebp], 0
$LN61@suppress_i:
  001e5	68 05 01 00 00	 push	 261			; 00000105H
  001ea	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  001ed	51		 push	 ecx
  001ee	69 95 d0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv153[ebp], 1116
  001f8	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv161[ebp]
  001fe	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00205	ff d1		 call	 ecx
  00207	89 85 44 ff ff
	ff		 mov	 DWORD PTR _config_type$[ebp], eax

; 2861 : 
; 2862 : 	ASSERT (weapon_config_type_valid (config_type));

  0020d	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _config_type$[ebp], 0
  00214	7c 0c		 jl	 SHORT $LN18@suppress_i
  00216	81 bd 44 ff ff
	ff cc 02 00 00	 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  00220	7c 18		 jl	 SHORT $LN17@suppress_i
$LN18@suppress_i:
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00227	83 c0 47	 add	 eax, 71			; 00000047H
  0022a	50		 push	 eax
  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00230	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00235	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@suppress_i:

; 2863 : 
; 2864 : 	//
; 2865 : 	// set all packages to undamaged
; 2866 : 	//
; 2867 : 
; 2868 : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  0023a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00241	eb 09		 jmp	 SHORT $LN4@suppress_i
$LN2@suppress_i:
  00243	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00246	83 c0 01	 add	 eax, 1
  00249	89 45 fc	 mov	 DWORD PTR _package$[ebp], eax
$LN4@suppress_i:
  0024c	83 7d fc 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00250	7d 2f		 jge	 SHORT $LN3@suppress_i

; 2869 : 	{
; 2870 : 		if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00252	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0025c	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00260	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  00268	75 02		 jne	 SHORT $LN19@suppress_i

; 2871 : 		{
; 2872 : 			break;

  0026a	eb 15		 jmp	 SHORT $LN3@suppress_i
$LN19@suppress_i:

; 2873 : 		}
; 2874 : 
; 2875 : 		package_status[package].damaged = FALSE;

  0026c	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  0026f	c1 e0 04	 shl	 eax, 4
  00272	33 c9		 xor	 ecx, ecx
  00274	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _package_status$[ebp]
  0027a	66 89 4c 02 02	 mov	 WORD PTR [edx+eax+2], cx

; 2876 : 	}

  0027f	eb c2		 jmp	 SHORT $LN2@suppress_i
$LN3@suppress_i:

; 2877 : 
; 2878 : 	//
; 2879 : 	// check valid config type
; 2880 : 	//
; 2881 : 
; 2882 : 	if (config_type == WEAPON_CONFIG_TYPE_UNARMED)

  00281	83 bd 44 ff ff
	ff 00		 cmp	 DWORD PTR _config_type$[ebp], 0
  00288	75 05		 jne	 SHORT $LN20@suppress_i

; 2883 : 	{
; 2884 : 		return;

  0028a	e9 02 08 00 00	 jmp	 $LN1@suppress_i
$LN20@suppress_i:

; 2885 : 	}
; 2886 : 
; 2887 : 	//
; 2888 : 	// check valid selected weapon
; 2889 : 	//
; 2890 : 
; 2891 : 	selected_weapon = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  0028f	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00293	74 0d		 je	 SHORT $LN62@suppress_i
  00295	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00298	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029a	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv191[ebp], ecx
  002a0	eb 24		 jmp	 SHORT $LN63@suppress_i
$LN62@suppress_i:
  002a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  002a8	83 c2 64	 add	 edx, 100		; 00000064H
  002ab	52		 push	 edx
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002b6	50		 push	 eax
  002b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bc	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv191[ebp], 0
$LN63@suppress_i:
  002c6	b9 01 00 00 00	 mov	 ecx, 1
  002cb	85 c9		 test	 ecx, ecx
  002cd	74 0c		 je	 SHORT $LN64@suppress_i
  002cf	c7 85 cc fe ff
	ff b8 00 00 00	 mov	 DWORD PTR tv199[ebp], 184 ; 000000b8H
  002d9	eb 24		 jmp	 SHORT $LN65@suppress_i
$LN64@suppress_i:
  002db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  002e1	83 c2 64	 add	 edx, 100		; 00000064H
  002e4	52		 push	 edx
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f5	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv199[ebp], 0
$LN65@suppress_i:
  002ff	68 b8 00 00 00	 push	 184			; 000000b8H
  00304	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00307	51		 push	 ecx
  00308	69 95 d0 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv191[ebp], 1116
  00312	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv199[ebp]
  00318	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0031f	ff d1		 call	 ecx
  00321	89 85 4c ff ff
	ff		 mov	 DWORD PTR _selected_weapon$[ebp], eax

; 2892 : 
; 2893 : 	ASSERT (entity_sub_type_weapon_valid (selected_weapon));

  00327	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR _selected_weapon$[ebp], 0
  0032e	7c 09		 jl	 SHORT $LN22@suppress_i
  00330	83 bd 4c ff ff
	ff 4c		 cmp	 DWORD PTR _selected_weapon$[ebp], 76 ; 0000004cH
  00337	7c 18		 jl	 SHORT $LN21@suppress_i
$LN22@suppress_i:
  00339	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  0033e	83 c0 66	 add	 eax, 102		; 00000066H
  00341	50		 push	 eax
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KLNCKIOI@entity_sub_type_weapon_valid?5?$CIs@
  0034c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@suppress_i:

; 2894 : 
; 2895 : 	if (selected_weapon == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00351	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR _selected_weapon$[ebp], 0
  00358	75 05		 jne	 SHORT $LN23@suppress_i

; 2896 : 	{
; 2897 : 		return;

  0035a	e9 32 07 00 00	 jmp	 $LN1@suppress_i
$LN23@suppress_i:

; 2898 : 	}
; 2899 : 
; 2900 : 	//
; 2901 : 	// check valid target
; 2902 : 	//
; 2903 : 
; 2904 : 	target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  0035f	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00363	74 0d		 je	 SHORT $LN66@suppress_i
  00365	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00368	8b 08		 mov	 ecx, DWORD PTR [eax]
  0036a	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv218[ebp], ecx
  00370	eb 24		 jmp	 SHORT $LN67@suppress_i
$LN66@suppress_i:
  00372	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00378	83 c2 71	 add	 edx, 113		; 00000071H
  0037b	52		 push	 edx
  0037c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00381	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00386	50		 push	 eax
  00387	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0038c	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
$LN67@suppress_i:
  00396	b9 01 00 00 00	 mov	 ecx, 1
  0039b	85 c9		 test	 ecx, ecx
  0039d	74 0c		 je	 SHORT $LN68@suppress_i
  0039f	c7 85 cc fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv226[ebp], 38 ; 00000026H
  003a9	eb 24		 jmp	 SHORT $LN69@suppress_i
$LN68@suppress_i:
  003ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  003b1	83 c2 71	 add	 edx, 113		; 00000071H
  003b4	52		 push	 edx
  003b5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c5	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv226[ebp], 0
$LN69@suppress_i:
  003cf	6a 26		 push	 38			; 00000026H
  003d1	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  003d4	51		 push	 ecx
  003d5	69 95 d0 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv218[ebp], 180
  003df	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv226[ebp]
  003e5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003ec	ff d1		 call	 ecx
  003ee	89 45 d0	 mov	 DWORD PTR _target$[ebp], eax

; 2905 : 
; 2906 : 	if (!target)

  003f1	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  003f5	75 05		 jne	 SHORT $LN24@suppress_i

; 2907 : 	{
; 2908 : 		return;

  003f7	e9 95 06 00 00	 jmp	 $LN1@suppress_i
$LN24@suppress_i:

; 2909 : 	}
; 2910 : 
; 2911 : 	get_local_entity_vec3d (target, VEC3D_TYPE_POSITION, &target_position);

  003fc	83 7d d0 00	 cmp	 DWORD PTR _target$[ebp], 0
  00400	74 0d		 je	 SHORT $LN70@suppress_i
  00402	8b 45 d0	 mov	 eax, DWORD PTR _target$[ebp]
  00405	8b 08		 mov	 ecx, DWORD PTR [eax]
  00407	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv239[ebp], ecx
  0040d	eb 24		 jmp	 SHORT $LN71@suppress_i
$LN70@suppress_i:
  0040f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00415	83 c2 78	 add	 edx, 120		; 00000078H
  00418	52		 push	 edx
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00429	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv239[ebp], 0
$LN71@suppress_i:
  00433	b9 01 00 00 00	 mov	 ecx, 1
  00438	85 c9		 test	 ecx, ecx
  0043a	74 0c		 je	 SHORT $LN72@suppress_i
  0043c	c7 85 cc fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv247[ebp], 8
  00446	eb 24		 jmp	 SHORT $LN73@suppress_i
$LN72@suppress_i:
  00448	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  0044e	83 c2 78	 add	 edx, 120		; 00000078H
  00451	52		 push	 edx
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00457	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0045c	50		 push	 eax
  0045d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00462	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv247[ebp], 0
$LN73@suppress_i:
  0046c	8d 4d c4	 lea	 ecx, DWORD PTR _target_position$[ebp]
  0046f	51		 push	 ecx
  00470	6a 08		 push	 8
  00472	8b 55 d0	 mov	 edx, DWORD PTR _target$[ebp]
  00475	52		 push	 edx
  00476	6b 85 d0 fe ff
	ff 60		 imul	 eax, DWORD PTR tv239[ebp], 96
  0047d	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv247[ebp]
  00483	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0048a	ff d2		 call	 edx

; 2912 : 
; 2913 : 	//
; 2914 : 	// check more than one instance of the selected weapon type is available (so that the weapon type is always available)
; 2915 : 	//
; 2916 : 
; 2917 : 	num_weapon_instances = 0;

  0048c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _num_weapon_instances$[ebp], 0

; 2918 : 
; 2919 : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00493	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0049a	eb 09		 jmp	 SHORT $LN7@suppress_i
$LN5@suppress_i:
  0049c	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  0049f	83 c0 01	 add	 eax, 1
  004a2	89 45 fc	 mov	 DWORD PTR _package$[ebp], eax
$LN7@suppress_i:
  004a5	83 7d fc 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  004a9	7d 56		 jge	 SHORT $LN6@suppress_i

; 2920 : 	{
; 2921 : 		if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  004ab	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  004b5	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  004b9	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  004c1	75 02		 jne	 SHORT $LN25@suppress_i

; 2922 : 		{
; 2923 : 			break;

  004c3	eb 3c		 jmp	 SHORT $LN6@suppress_i
$LN25@suppress_i:

; 2924 : 		}
; 2925 : 
; 2926 : 		if (weapon_config_database[config_type][package].sub_type == selected_weapon)

  004c5	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  004cf	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  004d3	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  004da	3b 95 4c ff ff
	ff		 cmp	 edx, DWORD PTR _selected_weapon$[ebp]
  004e0	75 1d		 jne	 SHORT $LN27@suppress_i

; 2927 : 		{
; 2928 : 			if (package_status[package].number > 0)

  004e2	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  004e5	c1 e0 04	 shl	 eax, 4
  004e8	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _package_status$[ebp]
  004ee	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  004f2	85 d2		 test	 edx, edx
  004f4	7e 09		 jle	 SHORT $LN27@suppress_i

; 2929 : 			{
; 2930 : 				num_weapon_instances++;

  004f6	8b 45 f8	 mov	 eax, DWORD PTR _num_weapon_instances$[ebp]
  004f9	83 c0 01	 add	 eax, 1
  004fc	89 45 f8	 mov	 DWORD PTR _num_weapon_instances$[ebp], eax
$LN27@suppress_i:

; 2931 : 			}
; 2932 : 		}
; 2933 : 	}

  004ff	eb 9b		 jmp	 SHORT $LN5@suppress_i
$LN6@suppress_i:

; 2934 : 
; 2935 : 	if (num_weapon_instances <= 1)

  00501	83 7d f8 01	 cmp	 DWORD PTR _num_weapon_instances$[ebp], 1
  00505	7f 05		 jg	 SHORT $LN28@suppress_i

; 2936 : 	{
; 2937 : 		return;

  00507	e9 85 05 00 00	 jmp	 $LN1@suppress_i
$LN28@suppress_i:

; 2938 : 	}
; 2939 : 
; 2940 : 	//
; 2941 : 	// update the source's 3D instance position and attitude (in case it has not been drawn yet)
; 2942 : 	//
; 2943 : 
; 2944 : 	inst3d = (object_3d_instance *) get_local_entity_ptr_value (source, PTR_TYPE_INSTANCE_3D_OBJECT);

  0050c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00510	74 0d		 je	 SHORT $LN74@suppress_i
  00512	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00515	8b 08		 mov	 ecx, DWORD PTR [eax]
  00517	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv280[ebp], ecx
  0051d	eb 27		 jmp	 SHORT $LN75@suppress_i
$LN74@suppress_i:
  0051f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00525	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  0052b	52		 push	 edx
  0052c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00531	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00536	50		 push	 eax
  00537	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053c	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv280[ebp], 0
$LN75@suppress_i:
  00546	b9 01 00 00 00	 mov	 ecx, 1
  0054b	85 c9		 test	 ecx, ecx
  0054d	74 0c		 je	 SHORT $LN76@suppress_i
  0054f	c7 85 cc fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv288[ebp], 2
  00559	eb 27		 jmp	 SHORT $LN77@suppress_i
$LN76@suppress_i:
  0055b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00561	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00567	52		 push	 edx
  00568	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0056d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00572	50		 push	 eax
  00573	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00578	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv288[ebp], 0
$LN77@suppress_i:
  00582	6a 02		 push	 2
  00584	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00587	51		 push	 ecx
  00588	6b 95 d0 fe ff
	ff 50		 imul	 edx, DWORD PTR tv280[ebp], 80
  0058f	8b 85 cc fe ff
	ff		 mov	 eax, DWORD PTR tv288[ebp]
  00595	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0059c	ff d1		 call	 ecx
  0059e	89 45 c0	 mov	 DWORD PTR _inst3d$[ebp], eax

; 2945 : 
; 2946 : 	ASSERT (inst3d);

  005a1	83 7d c0 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  005a5	75 1a		 jne	 SHORT $LN29@suppress_i
  005a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  005ac	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  005b1	50		 push	 eax
  005b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b7	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  005bc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN29@suppress_i:

; 2947 : 
; 2948 : 	get_local_entity_vec3d (source, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  005c1	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  005c5	74 0d		 je	 SHORT $LN78@suppress_i
  005c7	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  005ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  005cc	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv305[ebp], ecx
  005d2	eb 27		 jmp	 SHORT $LN79@suppress_i
$LN78@suppress_i:
  005d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  005da	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  005e0	52		 push	 edx
  005e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005eb	50		 push	 eax
  005ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f1	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv305[ebp], 0
$LN79@suppress_i:
  005fb	b9 01 00 00 00	 mov	 ecx, 1
  00600	85 c9		 test	 ecx, ecx
  00602	74 0c		 je	 SHORT $LN80@suppress_i
  00604	c7 85 cc fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv313[ebp], 8
  0060e	eb 27		 jmp	 SHORT $LN81@suppress_i
$LN80@suppress_i:
  00610	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00616	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  0061c	52		 push	 edx
  0061d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00622	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00627	50		 push	 eax
  00628	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0062d	c7 85 cc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv313[ebp], 0
$LN81@suppress_i:
  00637	8b 4d c0	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0063a	83 c1 08	 add	 ecx, 8
  0063d	51		 push	 ecx
  0063e	6a 08		 push	 8
  00640	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00643	52		 push	 edx
  00644	6b 85 d0 fe ff
	ff 60		 imul	 eax, DWORD PTR tv305[ebp], 96
  0064b	8b 8d cc fe ff
	ff		 mov	 ecx, DWORD PTR tv313[ebp]
  00651	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00658	ff d2		 call	 edx

; 2949 : 
; 2950 : 	get_local_entity_attitude_matrix (source, inst3d->vp.attitude);

  0065a	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0065e	74 0d		 je	 SHORT $LN82@suppress_i
  00660	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00663	8b 08		 mov	 ecx, DWORD PTR [eax]
  00665	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv327[ebp], ecx
  0066b	eb 27		 jmp	 SHORT $LN83@suppress_i
$LN82@suppress_i:
  0066d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z@4JA
  00673	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  00679	52		 push	 edx
  0067a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0067f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00684	50		 push	 eax
  00685	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0068a	c7 85 d0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv327[ebp], 0
$LN83@suppress_i:
  00694	8b 4d c0	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00697	83 c1 14	 add	 ecx, 20			; 00000014H
  0069a	51		 push	 ecx
  0069b	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  0069e	52		 push	 edx
  0069f	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR tv327[ebp]
  006a5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  006ac	ff d1		 call	 ecx

; 2951 : 
; 2952 : 	//
; 2953 : 	// check each instance of the selected weapon to see if the target is within its view cone
; 2954 : 	//
; 2955 : 
; 2956 : 	num_effective_weapons = 0;

  006ae	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _num_effective_weapons$[ebp], 0

; 2957 : 
; 2958 : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  006b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  006bc	eb 09		 jmp	 SHORT $LN10@suppress_i
$LN8@suppress_i:
  006be	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  006c1	83 c0 01	 add	 eax, 1
  006c4	89 45 fc	 mov	 DWORD PTR _package$[ebp], eax
$LN10@suppress_i:
  006c7	83 7d fc 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  006cb	0f 8d 73 03 00
	00		 jge	 $LN9@suppress_i

; 2959 : 	{
; 2960 : 		if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  006d1	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  006db	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  006df	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  006e7	75 05		 jne	 SHORT $LN30@suppress_i

; 2961 : 		{
; 2962 : 			break;

  006e9	e9 56 03 00 00	 jmp	 $LN9@suppress_i
$LN30@suppress_i:

; 2963 : 		}
; 2964 : 
; 2965 : 		if (weapon_config_database[config_type][package].sub_type == selected_weapon)

  006ee	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  006f8	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  006fc	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00703	3b 95 4c ff ff
	ff		 cmp	 edx, DWORD PTR _selected_weapon$[ebp]
  00709	0f 85 30 03 00
	00		 jne	 $LN46@suppress_i

; 2966 : 		{
; 2967 : 			if (package_status[package].number > 0)

  0070f	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00712	c1 e0 04	 shl	 eax, 4
  00715	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _package_status$[ebp]
  0071b	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0071f	85 d2		 test	 edx, edx
  00721	0f 8e 18 03 00
	00		 jle	 $LN46@suppress_i

; 2968 : 			{
; 2969 : 				search_weapon_system_heading.search_depth = weapon_config_database[config_type][package].heading_depth;

  00727	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00731	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00735	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  0073c	89 55 90	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 2970 : 				search_weapon_system_heading.search_object = inst3d;

  0073f	8b 45 c0	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00742	89 45 88	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 2971 : 				search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  00745	c7 45 94 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 2972 : 
; 2973 : 				if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0074c	8d 45 88	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  0074f	50		 push	 eax
  00750	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00755	83 f8 01	 cmp	 eax, 1
  00758	0f 85 e1 02 00
	00		 jne	 $LN46@suppress_i

; 2974 : 				{
; 2975 : 					search_weapon_system_pitch.search_depth = weapon_config_database[config_type][package].pitch_depth;

  0075e	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00768	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0076c	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  00773	89 95 58 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 2976 : 					search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  00779	c7 85 5c ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 2977 : 
; 2978 : 					if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00783	8d 85 50 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  00789	50		 push	 eax
  0078a	8d 4d 88	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  0078d	51		 push	 ecx
  0078e	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00793	83 f8 01	 cmp	 eax, 1
  00796	0f 85 a3 02 00
	00		 jne	 $LN46@suppress_i

; 2979 : 					{
; 2980 : 						//
; 2981 : 						// get viewpoint of unrotated heading and pitch devices
; 2982 : 						//
; 2983 : 
; 2984 : 						search_weapon_system_heading.result_sub_object->relative_heading = 0.0;

  0079c	8b 45 8c	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp+4]
  0079f	0f 57 c0	 xorps	 xmm0, xmm0
  007a2	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 2985 : 
; 2986 : 						search_weapon_system_pitch.result_sub_object->relative_pitch = 0.0;

  007a7	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  007ad	0f 57 c0	 xorps	 xmm0, xmm0
  007b0	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 2987 : 
; 2988 : 						get_3d_sub_object_world_viewpoint (search_weapon_system_pitch.result_sub_object, &vp);

  007b5	8d 85 14 ff ff
	ff		 lea	 eax, DWORD PTR _vp$[ebp]
  007bb	50		 push	 eax
  007bc	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  007c2	51		 push	 ecx
  007c3	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 2989 : 
; 2990 : 						search_weapon_system_heading.result_sub_object->relative_heading = package_status[package].weapon_system_heading;

  007c8	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  007cb	c1 e0 04	 shl	 eax, 4
  007ce	8b 4d 8c	 mov	 ecx, DWORD PTR _search_weapon_system_heading$[ebp+4]
  007d1	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _package_status$[ebp]
  007d7	8b 44 02 04	 mov	 eax, DWORD PTR [edx+eax+4]
  007db	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 2991 : 
; 2992 : 						search_weapon_system_pitch.result_sub_object->relative_pitch = -package_status[package].weapon_system_pitch;

  007de	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  007e1	c1 e0 04	 shl	 eax, 4
  007e4	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _package_status$[ebp]
  007ea	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  007f0	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  007f7	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  007fd	f3 0f 11 42 1c	 movss	 DWORD PTR [edx+28], xmm0

; 2993 : 
; 2994 : 						//
; 2995 : 						// (keep angles in range 0 to 360 degrees)
; 2996 : 						//
; 2997 : 
; 2998 : 						heading = get_heading_from_attitude_matrix (vp.attitude);

  00802	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00807	d1 e0		 shl	 eax, 1
  00809	8d 8c 05 20 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00810	ba 04 00 00 00	 mov	 edx, 4
  00815	d1 e2		 shl	 edx, 1
  00817	51		 push	 ecx
  00818	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0081d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00822	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00827	d1 e0		 shl	 eax, 1
  00829	8d 8c 05 20 ff
	ff ff		 lea	 ecx, DWORD PTR _vp$[ebp+eax+12]
  00830	ba 04 00 00 00	 mov	 edx, 4
  00835	6b c2 00	 imul	 eax, edx, 0
  00838	51		 push	 ecx
  00839	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0083e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00843	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00848	d9 5d e8	 fstp	 DWORD PTR _heading$[ebp]

; 2999 : 
; 3000 : 						if (heading < 0.0)

  0084b	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  00850	0f 57 c9	 xorps	 xmm1, xmm1
  00853	66 0f 2f c8	 comisd	 xmm1, xmm0
  00857	76 16		 jbe	 SHORT $LN35@suppress_i

; 3001 : 						{
; 3002 : 							heading += rad (360.0);

  00859	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  0085e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00866	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0086a	f3 0f 11 45 e8	 movss	 DWORD PTR _heading$[ebp], xmm0
$LN35@suppress_i:

; 3003 : 						}
; 3004 : 
; 3005 : 						min_heading = heading + weapon_config_database[config_type][package].min_heading_limit;

  0086f	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00879	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0087d	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00882	f3 0f 58 84 08
	24 00 00 00	 addss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+36]
  0088b	f3 0f 11 45 e4	 movss	 DWORD PTR _min_heading$[ebp], xmm0

; 3006 : 
; 3007 : 						if (min_heading < 0.0)

  00890	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _min_heading$[ebp]
  00895	0f 57 c9	 xorps	 xmm1, xmm1
  00898	66 0f 2f c8	 comisd	 xmm1, xmm0
  0089c	76 18		 jbe	 SHORT $LN36@suppress_i

; 3008 : 						{
; 3009 : 							min_heading += rad (360.0);

  0089e	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _min_heading$[ebp]
  008a3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  008ab	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008af	f3 0f 11 45 e4	 movss	 DWORD PTR _min_heading$[ebp], xmm0
  008b4	eb 25		 jmp	 SHORT $LN38@suppress_i
$LN36@suppress_i:

; 3010 : 						}
; 3011 : 						else if (min_heading > rad (360.0))

  008b6	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _min_heading$[ebp]
  008bb	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@401921fb51000000
  008c3	76 16		 jbe	 SHORT $LN38@suppress_i

; 3012 : 						{
; 3013 : 							min_heading -= rad (360.0);

  008c5	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _min_heading$[ebp]
  008ca	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  008d2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  008d6	f3 0f 11 45 e4	 movss	 DWORD PTR _min_heading$[ebp], xmm0
$LN38@suppress_i:

; 3014 : 						}
; 3015 : 
; 3016 : 						max_heading = heading + weapon_config_database[config_type][package].max_heading_limit;

  008db	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  008e5	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  008e9	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _heading$[ebp]
  008ee	f3 0f 58 84 08
	28 00 00 00	 addss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+40]
  008f7	f3 0f 11 45 e0	 movss	 DWORD PTR _max_heading$[ebp], xmm0

; 3017 : 
; 3018 : 						if (max_heading < 0.0)

  008fc	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _max_heading$[ebp]
  00901	0f 57 c9	 xorps	 xmm1, xmm1
  00904	66 0f 2f c8	 comisd	 xmm1, xmm0
  00908	76 18		 jbe	 SHORT $LN39@suppress_i

; 3019 : 						{
; 3020 : 							max_heading += rad (360.0);

  0090a	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _max_heading$[ebp]
  0090f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00917	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0091b	f3 0f 11 45 e0	 movss	 DWORD PTR _max_heading$[ebp], xmm0
  00920	eb 25		 jmp	 SHORT $LN41@suppress_i
$LN39@suppress_i:

; 3021 : 						}
; 3022 : 						else if (max_heading > rad (360.0))

  00922	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _max_heading$[ebp]
  00927	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@401921fb51000000
  0092f	76 16		 jbe	 SHORT $LN41@suppress_i

; 3023 : 						{
; 3024 : 							max_heading -= rad (360.0);

  00931	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _max_heading$[ebp]
  00936	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0093e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00942	f3 0f 11 45 e0	 movss	 DWORD PTR _max_heading$[ebp], xmm0
$LN41@suppress_i:

; 3025 : 						}
; 3026 : 
; 3027 : 						dx = target_position.x - vp.x;

  00947	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _target_position$[ebp]
  0094c	f3 0f 5c 85 14
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00954	f3 0f 11 45 f0	 movss	 DWORD PTR _dx$[ebp], xmm0

; 3028 : 						dz = target_position.z - vp.z;

  00959	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _target_position$[ebp+8]
  0095e	f3 0f 5c 85 1c
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00966	f3 0f 11 45 ec	 movss	 DWORD PTR _dz$[ebp], xmm0

; 3029 : 
; 3030 : 						bearing = atan2 (dx, dz);

  0096b	51		 push	 ecx
  0096c	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00971	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00976	51		 push	 ecx
  00977	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0097c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00981	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00986	d9 5d dc	 fstp	 DWORD PTR _bearing$[ebp]

; 3031 : 
; 3032 : 						if (bearing < 0.0)

  00989	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _bearing$[ebp]
  0098e	0f 57 c9	 xorps	 xmm1, xmm1
  00991	66 0f 2f c8	 comisd	 xmm1, xmm0
  00995	76 16		 jbe	 SHORT $LN42@suppress_i

; 3033 : 						{
; 3034 : 							bearing += rad (360.0);

  00997	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _bearing$[ebp]
  0099c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  009a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009a8	f3 0f 11 45 dc	 movss	 DWORD PTR _bearing$[ebp], xmm0
$LN42@suppress_i:

; 3035 : 						}
; 3036 : 
; 3037 : 						normalised_max_heading = max_heading - min_heading;

  009ad	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _max_heading$[ebp]
  009b2	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _min_heading$[ebp]
  009b7	f3 0f 11 45 d8	 movss	 DWORD PTR _normalised_max_heading$[ebp], xmm0

; 3038 : 
; 3039 : 						if (normalised_max_heading < 0.0)

  009bc	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _normalised_max_heading$[ebp]
  009c1	0f 57 c9	 xorps	 xmm1, xmm1
  009c4	66 0f 2f c8	 comisd	 xmm1, xmm0
  009c8	76 16		 jbe	 SHORT $LN43@suppress_i

; 3040 : 						{
; 3041 : 							normalised_max_heading += rad (360.0);

  009ca	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _normalised_max_heading$[ebp]
  009cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  009d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  009db	f3 0f 11 45 d8	 movss	 DWORD PTR _normalised_max_heading$[ebp], xmm0
$LN43@suppress_i:

; 3042 : 						}
; 3043 : 
; 3044 : 						normalised_bearing = bearing - min_heading;

  009e0	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  009e5	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _min_heading$[ebp]
  009ea	f3 0f 11 45 d4	 movss	 DWORD PTR _normalised_bearing$[ebp], xmm0

; 3045 : 
; 3046 : 						if (normalised_bearing < 0.0)

  009ef	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _normalised_bearing$[ebp]
  009f4	0f 57 c9	 xorps	 xmm1, xmm1
  009f7	66 0f 2f c8	 comisd	 xmm1, xmm0
  009fb	76 16		 jbe	 SHORT $LN44@suppress_i

; 3047 : 						{
; 3048 : 							normalised_bearing += rad (360.0);

  009fd	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _normalised_bearing$[ebp]
  00a02	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00a0a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a0e	f3 0f 11 45 d4	 movss	 DWORD PTR _normalised_bearing$[ebp], xmm0
$LN44@suppress_i:

; 3049 : 						}
; 3050 : 
; 3051 : 						if (normalised_bearing <= normalised_max_heading)

  00a13	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _normalised_max_heading$[ebp]
  00a18	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _normalised_bearing$[ebp]
  00a1c	72 0b		 jb	 SHORT $LN45@suppress_i

; 3052 : 						{
; 3053 : 							num_effective_weapons++;

  00a1e	8b 45 f4	 mov	 eax, DWORD PTR _num_effective_weapons$[ebp]
  00a21	83 c0 01	 add	 eax, 1
  00a24	89 45 f4	 mov	 DWORD PTR _num_effective_weapons$[ebp], eax

; 3054 : 
; 3055 : 							#if DEBUG_MODULE_EFFECTIVE_SHIP_WEAPONS
; 3056 : 
; 3057 : 							heading_line_colour = sys_col_green;
; 3058 : 							min_heading_line_colour = sys_col_yellow;
; 3059 : 							max_heading_line_colour = sys_col_amber;
; 3060 : 
; 3061 : 							#endif
; 3062 : 						}
; 3063 : 						else

  00a27	eb 16		 jmp	 SHORT $LN46@suppress_i
$LN45@suppress_i:

; 3064 : 						{
; 3065 : 							package_status[package].damaged = TRUE;

  00a29	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00a2c	c1 e0 04	 shl	 eax, 4
  00a2f	b9 01 00 00 00	 mov	 ecx, 1
  00a34	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _package_status$[ebp]
  00a3a	66 89 4c 02 02	 mov	 WORD PTR [edx+eax+2], cx
$LN46@suppress_i:

; 3066 : 
; 3067 : 							#if DEBUG_MODULE_EFFECTIVE_SHIP_WEAPONS
; 3068 : 
; 3069 : 							heading_line_colour = sys_col_red;
; 3070 : 							min_heading_line_colour = sys_col_cyan;
; 3071 : 							max_heading_line_colour = sys_col_magenta;
; 3072 : 
; 3073 : 							#endif
; 3074 : 						}
; 3075 : 
; 3076 : 						#if DEBUG_MODULE_EFFECTIVE_SHIP_WEAPONS
; 3077 : 
; 3078 : 						if (source == get_external_view_entity ())
; 3079 : 						{
; 3080 : 							float
; 3081 : 								heading;
; 3082 : 
; 3083 : 							vec3d
; 3084 : 								p2;
; 3085 : 
; 3086 : 							matrix3x3
; 3087 : 								m;
; 3088 : 
; 3089 : 							heading = get_heading_from_attitude_matrix (vp.attitude);
; 3090 : 
; 3091 : 							p2 = vp.position;
; 3092 : 
; 3093 : 							p2.x += vp.zv.x * 2000.0;
; 3094 : 							p2.y += vp.zv.y * 2000.0;
; 3095 : 							p2.z += vp.zv.z * 2000.0;
; 3096 : 
; 3097 : 							create_debug_3d_line (&vp.position, &p2, heading_line_colour, 0.0);
; 3098 : 
; 3099 : 							get_arbitrary_rotation_matrix (m, &vp.yv, heading + weapon_config_database[config_type][package].min_heading_limit);
; 3100 : 
; 3101 : 							p2 = vp.position;
; 3102 : 
; 3103 : 							p2.x += m[0][2] * 2000.0;
; 3104 : 							p2.y += m[1][2] * 2000.0;
; 3105 : 							p2.z += m[2][2] * 2000.0;
; 3106 : 
; 3107 : 							create_debug_3d_line (&vp.position, &p2, min_heading_line_colour, 0.0);
; 3108 : 
; 3109 : 							get_arbitrary_rotation_matrix (m, &vp.yv, heading + weapon_config_database[config_type][package].max_heading_limit);
; 3110 : 
; 3111 : 							p2 = vp.position;
; 3112 : 
; 3113 : 							p2.x += m[0][2] * 2000.0;
; 3114 : 							p2.y += m[1][2] * 2000.0;
; 3115 : 							p2.z += m[2][2] * 2000.0;
; 3116 : 
; 3117 : 							create_debug_3d_line (&vp.position, &p2, max_heading_line_colour, 0.0);
; 3118 : 						}
; 3119 : 
; 3120 : 						#endif
; 3121 : 					}
; 3122 : 				}
; 3123 : 			}
; 3124 : 		}
; 3125 : 	}

  00a3f	e9 7a fc ff ff	 jmp	 $LN8@suppress_i
$LN9@suppress_i:

; 3126 : 
; 3127 : 	//
; 3128 : 	// if no effective weapons are available then tag them all as undamaged (so the weapon type is still available)
; 3129 : 	//
; 3130 : 
; 3131 : 	if (num_effective_weapons == 0)

  00a44	83 7d f4 00	 cmp	 DWORD PTR _num_effective_weapons$[ebp], 0
  00a48	75 47		 jne	 SHORT $LN12@suppress_i

; 3132 : 	{
; 3133 : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00a4a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00a51	eb 09		 jmp	 SHORT $LN13@suppress_i
$LN11@suppress_i:
  00a53	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00a56	83 c0 01	 add	 eax, 1
  00a59	89 45 fc	 mov	 DWORD PTR _package$[ebp], eax
$LN13@suppress_i:
  00a5c	83 7d fc 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00a60	7d 2f		 jge	 SHORT $LN12@suppress_i

; 3134 : 		{
; 3135 : 			if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00a62	69 85 44 ff ff
	ff 80 09 00 00	 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00a6c	6b 4d fc 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00a70	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  00a78	75 02		 jne	 SHORT $LN48@suppress_i

; 3136 : 			{
; 3137 : 				break;

  00a7a	eb 15		 jmp	 SHORT $LN12@suppress_i
$LN48@suppress_i:

; 3138 : 			}
; 3139 : 
; 3140 : 			package_status[package].damaged = FALSE;

  00a7c	8b 45 fc	 mov	 eax, DWORD PTR _package$[ebp]
  00a7f	c1 e0 04	 shl	 eax, 4
  00a82	33 c9		 xor	 ecx, ecx
  00a84	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR _package_status$[ebp]
  00a8a	66 89 4c 02 02	 mov	 WORD PTR [edx+eax+2], cx

; 3141 : 		}

  00a8f	eb c2		 jmp	 SHORT $LN11@suppress_i
$LN12@suppress_i:
$LN1@suppress_i:

; 3142 : 	}
; 3143 : }

  00a91	5f		 pop	 edi
  00a92	5e		 pop	 esi
  00a93	5b		 pop	 ebx
  00a94	8b e5		 mov	 esp, ebp
  00a96	5d		 pop	 ebp
  00a97	c2 04 00	 ret	 4
?suppress_ineffective_ship_weapons@@YGXPAUENTITY@@@Z ENDP ; suppress_ineffective_ship_weapons
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z
_TEXT	SEGMENT
tv143 = -84						; size = 4
tv90 = -84						; size = 4
tv135 = -80						; size = 4
tv82 = -80						; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_weapon_sub_type$ = 12					; size = 4
?get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z PROC ; get_local_entity_weapon_salvo_size, COMDAT

; 2721 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2722 : 	weapon_package_status
; 2723 : 		*package_status;
; 2724 : 
; 2725 : 	weapon_config_types
; 2726 : 		config_type;
; 2727 : 
; 2728 : 	int
; 2729 : 		package;
; 2730 : 
; 2731 : 	ASSERT (launcher);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 2732 : 
; 2733 : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00027	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN7@get_local_
  0002d	83 7d 0c 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  00031	7c 18		 jl	 SHORT $LN6@get_local_
$LN7@get_local_:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  00038	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 2734 : 
; 2735 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0004b	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0004f	0f 84 b0 01 00
	00		 je	 $LN8@get_local_

; 2736 : 	{
; 2737 : 		package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00055	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00059	74 0a		 je	 SHORT $LN17@get_local_
  0005b	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	89 4d b0	 mov	 DWORD PTR tv82[ebp], ecx
  00063	eb 21		 jmp	 SHORT $LN18@get_local_
$LN17@get_local_:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  0006b	83 c2 10	 add	 edx, 16			; 00000010H
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN18@get_local_:
  00086	b9 01 00 00 00	 mov	 ecx, 1
  0008b	85 c9		 test	 ecx, ecx
  0008d	74 09		 je	 SHORT $LN19@get_local_
  0008f	c7 45 ac 13 00
	00 00		 mov	 DWORD PTR tv90[ebp], 19	; 00000013H
  00096	eb 21		 jmp	 SHORT $LN20@get_local_
$LN19@get_local_:
  00098	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  0009e	83 c2 10	 add	 edx, 16			; 00000010H
  000a1	52		 push	 edx
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN20@get_local_:
  000b9	6a 13		 push	 19			; 00000013H
  000bb	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000be	51		 push	 ecx
  000bf	6b 55 b0 50	 imul	 edx, DWORD PTR tv82[ebp], 80
  000c3	8b 45 ac	 mov	 eax, DWORD PTR tv90[ebp]
  000c6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000cd	ff d1		 call	 ecx
  000cf	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2738 : 
; 2739 : 		if (package_status)

  000d2	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000d6	0f 84 29 01 00
	00		 je	 $LN8@get_local_

; 2740 : 		{
; 2741 : 			config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  000dc	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000e0	74 0a		 je	 SHORT $LN21@get_local_
  000e2	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	89 4d b0	 mov	 DWORD PTR tv135[ebp], ecx
  000ea	eb 21		 jmp	 SHORT $LN22@get_local_
$LN21@get_local_:
  000ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  000f2	83 c2 14	 add	 edx, 20			; 00000014H
  000f5	52		 push	 edx
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00106	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN22@get_local_:
  0010d	b9 01 00 00 00	 mov	 ecx, 1
  00112	85 c9		 test	 ecx, ecx
  00114	74 09		 je	 SHORT $LN23@get_local_
  00116	c7 45 ac 05 01
	00 00		 mov	 DWORD PTR tv143[ebp], 261 ; 00000105H
  0011d	eb 21		 jmp	 SHORT $LN24@get_local_
$LN23@get_local_:
  0011f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  00125	83 c2 14	 add	 edx, 20			; 00000014H
  00128	52		 push	 edx
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00139	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN24@get_local_:
  00140	68 05 01 00 00	 push	 261			; 00000105H
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00148	51		 push	 ecx
  00149	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 1116
  00150	8b 45 ac	 mov	 eax, DWORD PTR tv143[ebp]
  00153	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0015a	ff d1		 call	 ecx
  0015c	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 2742 : 
; 2743 : 			ASSERT (weapon_config_type_valid (config_type));

  0015f	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00163	7c 09		 jl	 SHORT $LN11@get_local_
  00165	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  0016c	7c 18		 jl	 SHORT $LN10@get_local_
$LN11@get_local_:
  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z@4JA
  00173	83 c0 16	 add	 eax, 22			; 00000016H
  00176	50		 push	 eax
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00181	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_local_:

; 2744 : 
; 2745 : 			for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00186	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0018d	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  0018f	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00192	83 c0 01	 add	 eax, 1
  00195	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  00198	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  0019c	7d 67		 jge	 SHORT $LN8@get_local_

; 2746 : 			{
; 2747 : 				if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0019e	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001a5	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001a9	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  001b1	75 02		 jne	 SHORT $LN12@get_local_

; 2748 : 				{
; 2749 : 					break;

  001b3	eb 50		 jmp	 SHORT $LN8@get_local_
$LN12@get_local_:

; 2750 : 				}
; 2751 : 
; 2752 : 				if (weapon_config_database[config_type][package].sub_type == weapon_sub_type)

  001b5	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001bc	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001c0	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  001c7	3b 55 0c	 cmp	 edx, DWORD PTR _weapon_sub_type$[ebp]
  001ca	75 37		 jne	 SHORT $LN13@get_local_

; 2753 : 				{
; 2754 : 					if (!package_status[package].damaged)

  001cc	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001cf	c1 e0 04	 shl	 eax, 4
  001d2	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001d5	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  001da	85 d2		 test	 edx, edx
  001dc	75 25		 jne	 SHORT $LN13@get_local_

; 2755 : 					{
; 2756 : 						if (package_status[package].number > 0)

  001de	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001e1	c1 e0 04	 shl	 eax, 4
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001e7	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  001eb	85 d2		 test	 edx, edx
  001ed	7e 14		 jle	 SHORT $LN13@get_local_

; 2757 : 						{
; 2758 : 							return (weapon_config_database[config_type][package].salvo_size);

  001ef	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001f6	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001fa	8b 84 08 1c 00
	00 00		 mov	 eax, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+28]
  00201	eb 07		 jmp	 SHORT $LN1@get_local_
$LN13@get_local_:

; 2759 : 						}
; 2760 : 					}
; 2761 : 				}
; 2762 : 			}

  00203	eb 8a		 jmp	 SHORT $LN2@get_local_
$LN8@get_local_:

; 2763 : 		}
; 2764 : 	}
; 2765 : 
; 2766 : 	return (1);

  00205	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_local_:

; 2767 : }

  0020a	5f		 pop	 edi
  0020b	5e		 pop	 esi
  0020c	5b		 pop	 ebx
  0020d	8b e5		 mov	 esp, ebp
  0020f	5d		 pop	 ebp
  00210	c2 08 00	 ret	 8
?get_local_entity_weapon_salvo_size@@YGHPAUENTITY@@H@Z ENDP ; get_local_entity_weapon_salvo_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv136 = -88						; size = 4
tv83 = -88						; size = 4
tv128 = -84						; size = 4
tv75 = -84						; size = 4
_weapon_type$ = -16					; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
?get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z PROC ; get_local_entity_weapon_ammunition_available, COMDAT

; 2653 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2654 : 	weapon_package_status
; 2655 : 		*package_status;
; 2656 : 
; 2657 : 	weapon_config_types
; 2658 : 		config_type;
; 2659 : 
; 2660 : 	int
; 2661 : 		package;
; 2662 : 
; 2663 : 	entity_sub_types
; 2664 : 		weapon_type;
; 2665 : 
; 2666 : 	ASSERT (launcher);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 0d	 add	 eax, 13			; 0000000dH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 2667 : 
; 2668 : 	//
; 2669 : 	// get list of weapons available on the launcher
; 2670 : 	//
; 2671 : 
; 2672 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00027	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN14@get_local_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d ac	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN15@get_local_
$LN14@get_local_:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 13	 add	 edx, 19			; 00000013H
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN15@get_local_:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN16@get_local_
  00061	c7 45 a8 13 00
	00 00		 mov	 DWORD PTR tv83[ebp], 19	; 00000013H
  00068	eb 21		 jmp	 SHORT $LN17@get_local_
$LN16@get_local_:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 13	 add	 edx, 19			; 00000013H
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN17@get_local_:
  0008b	6a 13		 push	 19			; 00000013H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00090	51		 push	 ecx
  00091	6b 55 ac 50	 imul	 edx, DWORD PTR tv75[ebp], 80
  00095	8b 45 a8	 mov	 eax, DWORD PTR tv83[ebp]
  00098	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0009f	ff d1		 call	 ecx
  000a1	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2673 : 
; 2674 : 	if (!package_status)

  000a4	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000a8	75 07		 jne	 SHORT $LN6@get_local_

; 2675 : 	{
; 2676 : 		return FALSE;

  000aa	33 c0		 xor	 eax, eax
  000ac	e9 4b 01 00 00	 jmp	 $LN1@get_local_
$LN6@get_local_:

; 2677 : 	}
; 2678 : 
; 2679 : 	config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  000b1	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000b5	74 0a		 je	 SHORT $LN18@get_local_
  000b7	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	89 4d ac	 mov	 DWORD PTR tv128[ebp], ecx
  000bf	eb 21		 jmp	 SHORT $LN19@get_local_
$LN18@get_local_:
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  000c7	83 c2 1a	 add	 edx, 26			; 0000001aH
  000ca	52		 push	 edx
  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN19@get_local_:
  000e2	b9 01 00 00 00	 mov	 ecx, 1
  000e7	85 c9		 test	 ecx, ecx
  000e9	74 09		 je	 SHORT $LN20@get_local_
  000eb	c7 45 a8 05 01
	00 00		 mov	 DWORD PTR tv136[ebp], 261 ; 00000105H
  000f2	eb 21		 jmp	 SHORT $LN21@get_local_
$LN20@get_local_:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  000fa	83 c2 1a	 add	 edx, 26			; 0000001aH
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN21@get_local_:
  00115	68 05 01 00 00	 push	 261			; 00000105H
  0011a	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0011d	51		 push	 ecx
  0011e	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 1116
  00125	8b 45 a8	 mov	 eax, DWORD PTR tv136[ebp]
  00128	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0012f	ff d1		 call	 ecx
  00131	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 2680 : 
; 2681 : 	ASSERT (weapon_config_type_valid (config_type));

  00134	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00138	7c 09		 jl	 SHORT $LN8@get_local_
  0013a	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  00141	7c 18		 jl	 SHORT $LN7@get_local_
$LN8@get_local_:
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  00148	83 c0 1c	 add	 eax, 28			; 0000001cH
  0014b	50		 push	 eax
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00151	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00156	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_local_:

; 2682 : 
; 2683 : 	for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  0015b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00162	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  00164	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00167	83 c0 01	 add	 eax, 1
  0016a	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  0016d	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00171	0f 8d 83 00 00
	00		 jge	 $LN3@get_local_

; 2684 : 	{
; 2685 : 		weapon_type = weapon_config_database[config_type][package].sub_type;

  00177	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0017e	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00182	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00189	89 55 f0	 mov	 DWORD PTR _weapon_type$[ebp], edx

; 2686 : 
; 2687 : 		//
; 2688 : 		// check package is valid
; 2689 : 		//
; 2690 : 
; 2691 : 		if (weapon_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0018c	83 7d f0 00	 cmp	 DWORD PTR _weapon_type$[ebp], 0
  00190	74 63		 je	 SHORT $LN9@get_local_

; 2692 : 		{
; 2693 : 			ASSERT (package_status[package].number <= weapon_config_database[config_type][package].number);

  00192	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00195	c1 e0 04	 shl	 eax, 4
  00198	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0019b	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0019f	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001a6	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001aa	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  001b1	7e 18		 jle	 SHORT $LN10@get_local_
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z@4JA
  001b8	83 c0 28	 add	 eax, 40			; 00000028H
  001bb	50		 push	 eax
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  001c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_local_:

; 2694 : 
; 2695 : 			//
; 2696 : 			// check package is not damaged
; 2697 : 			//
; 2698 : 
; 2699 : 			if (!package_status[package].damaged)

  001cb	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001ce	c1 e0 04	 shl	 eax, 4
  001d1	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001d4	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  001d9	85 d2		 test	 edx, edx
  001db	75 18		 jne	 SHORT $LN9@get_local_

; 2700 : 			{
; 2701 : 				//
; 2702 : 				// check package has rounds left
; 2703 : 				//
; 2704 : 
; 2705 : 				if (package_status[package].number > 0)

  001dd	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001e0	c1 e0 04	 shl	 eax, 4
  001e3	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001e6	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  001ea	85 d2		 test	 edx, edx
  001ec	7e 07		 jle	 SHORT $LN9@get_local_

; 2706 : 				{
; 2707 : 					return TRUE;

  001ee	b8 01 00 00 00	 mov	 eax, 1
  001f3	eb 07		 jmp	 SHORT $LN1@get_local_
$LN9@get_local_:

; 2708 : 				}
; 2709 : 			}
; 2710 : 		}
; 2711 : 	}

  001f5	e9 6a ff ff ff	 jmp	 $LN2@get_local_
$LN3@get_local_:

; 2712 : 
; 2713 : 	return FALSE;

  001fa	33 c0		 xor	 eax, eax
$LN1@get_local_:

; 2714 : }

  001fc	5f		 pop	 edi
  001fd	5e		 pop	 esi
  001fe	5b		 pop	 ebx
  001ff	8b e5		 mov	 esp, ebp
  00201	5d		 pop	 ebp
  00202	c2 04 00	 ret	 4
?get_local_entity_weapon_ammunition_available@@YGHPAUENTITY@@@Z ENDP ; get_local_entity_weapon_ammunition_available
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z
_TEXT	SEGMENT
tv199 = -84						; size = 4
tv159 = -80						; size = 4
tv131 = -80						; size = 4
tv151 = -76						; size = 4
tv91 = -76						; size = 4
_source_position$ = -8					; size = 4
_weapon_velocity$ = -4					; size = 4
_source$ = 8						; size = 4
_target$ = 12						; size = 4
_weapon_sub_type$ = 16					; size = 4
_intercept_point$ = 20					; size = 4
?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z PROC ; get_target_intercept_point, COMDAT

; 2614 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2615 : 	float
; 2616 : 		weapon_velocity;
; 2617 : 
; 2618 : 	vec3d
; 2619 : 		*source_position;
; 2620 : 
; 2621 : 	ASSERT (source);

  00009	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_target
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_target:

; 2622 : 
; 2623 : 	ASSERT (target);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_target
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  00032	83 c0 09	 add	 eax, 9
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_target:

; 2624 : 
; 2625 : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00045	83 7d 10 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00049	7c 06		 jl	 SHORT $LN5@get_target
  0004b	83 7d 10 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  0004f	7c 18		 jl	 SHORT $LN4@get_target
$LN5@get_target:
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  00056	83 c0 0b	 add	 eax, 11			; 0000000bH
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_target:

; 2626 : 
; 2627 : 	ASSERT (intercept_point);

  00069	83 7d 14 00	 cmp	 DWORD PTR _intercept_point$[ebp], 0
  0006d	75 18		 jne	 SHORT $LN6@get_target
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  00074	83 c0 0d	 add	 eax, 13			; 0000000dH
  00077	50		 push	 eax
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NMPFNFPN@intercept_point@
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_target:

; 2628 : 
; 2629 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00087	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0008b	74 0a		 je	 SHORT $LN11@get_target
  0008d	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00090	8b 08		 mov	 ecx, DWORD PTR [eax]
  00092	89 4d b4	 mov	 DWORD PTR tv91[ebp], ecx
  00095	eb 21		 jmp	 SHORT $LN12@get_target
$LN11@get_target:
  00097	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  0009d	83 c2 0f	 add	 edx, 15			; 0000000fH
  000a0	52		 push	 edx
  000a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b1	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN12@get_target:
  000b8	b9 01 00 00 00	 mov	 ecx, 1
  000bd	85 c9		 test	 ecx, ecx
  000bf	74 09		 je	 SHORT $LN13@get_target
  000c1	c7 45 b0 08 00
	00 00		 mov	 DWORD PTR tv131[ebp], 8
  000c8	eb 21		 jmp	 SHORT $LN14@get_target
$LN13@get_target:
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  000d0	83 c2 0f	 add	 edx, 15			; 0000000fH
  000d3	52		 push	 edx
  000d4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN14@get_target:
  000eb	6a 08		 push	 8
  000ed	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000f0	51		 push	 ecx
  000f1	6b 55 b4 60	 imul	 edx, DWORD PTR tv91[ebp], 96
  000f5	8b 45 b0	 mov	 eax, DWORD PTR tv131[ebp]
  000f8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000ff	ff d1		 call	 ecx
  00101	89 45 f8	 mov	 DWORD PTR _source_position$[ebp], eax

; 2630 : 
; 2631 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00104	83 7d 10 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00108	0f 84 bc 00 00
	00		 je	 $LN7@get_target

; 2632 : 	{
; 2633 : 		weapon_velocity = weapon_database[weapon_sub_type].cruise_velocity;

  0010e	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00115	f3 0f 10 80 ac
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172]
  0011d	f3 0f 11 45 fc	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0

; 2634 : 
; 2635 : 		if (weapon_database[weapon_sub_type].acquire_parent_forward_velocity)

  00122	69 45 10 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00129	83 b8 64 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+100], 0
  00130	0f 84 92 00 00
	00		 je	 $LN9@get_target

; 2636 : 		{
; 2637 : 			weapon_velocity += get_local_entity_float_value (source, FLOAT_TYPE_VELOCITY);

  00136	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0013a	74 0a		 je	 SHORT $LN15@get_target
  0013c	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0013f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00141	89 4d b4	 mov	 DWORD PTR tv151[ebp], ecx
  00144	eb 21		 jmp	 SHORT $LN16@get_target
$LN15@get_target:
  00146	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  0014c	83 c2 17	 add	 edx, 23			; 00000017H
  0014f	52		 push	 edx
  00150	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00155	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00160	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN16@get_target:
  00167	b9 01 00 00 00	 mov	 ecx, 1
  0016c	85 c9		 test	 ecx, ecx
  0016e	74 09		 je	 SHORT $LN17@get_target
  00170	c7 45 b0 93 00
	00 00		 mov	 DWORD PTR tv159[ebp], 147 ; 00000093H
  00177	eb 21		 jmp	 SHORT $LN18@get_target
$LN17@get_target:
  00179	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z@4JA
  0017f	83 c2 17	 add	 edx, 23			; 00000017H
  00182	52		 push	 edx
  00183	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00188	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00193	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN18@get_target:
  0019a	68 93 00 00 00	 push	 147			; 00000093H
  0019f	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  001a2	51		 push	 ecx
  001a3	69 55 b4 bc 02
	00 00		 imul	 edx, DWORD PTR tv151[ebp], 700
  001aa	8b 45 b0	 mov	 eax, DWORD PTR tv159[ebp]
  001ad	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001b4	ff d1		 call	 ecx
  001b6	d9 5d ac	 fstp	 DWORD PTR tv199[ebp]
  001b9	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv199[ebp]
  001be	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  001c3	f3 0f 11 45 fc	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0
$LN9@get_target:

; 2638 : 		}
; 2639 : 	}
; 2640 : 	else

  001c8	eb 08		 jmp	 SHORT $LN8@get_target
$LN7@get_target:

; 2641 : 	{
; 2642 : 		weapon_velocity = 0.0;

  001ca	0f 57 c0	 xorps	 xmm0, xmm0
  001cd	f3 0f 11 45 fc	 movss	 DWORD PTR _weapon_velocity$[ebp], xmm0
$LN8@get_target:

; 2643 : 	}
; 2644 : 
; 2645 : 	get_intercept_point (source_position, weapon_velocity, target, intercept_point);

  001d2	8b 45 14	 mov	 eax, DWORD PTR _intercept_point$[ebp]
  001d5	50		 push	 eax
  001d6	8b 4d 0c	 mov	 ecx, DWORD PTR _target$[ebp]
  001d9	51		 push	 ecx
  001da	51		 push	 ecx
  001db	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _weapon_velocity$[ebp]
  001e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e5	8b 55 f8	 mov	 edx, DWORD PTR _source_position$[ebp]
  001e8	52		 push	 edx
  001e9	e8 00 00 00 00	 call	 ?get_intercept_point@@YGXPAUVEC3D@@MPAUENTITY@@0@Z ; get_intercept_point

; 2646 : }

  001ee	5f		 pop	 edi
  001ef	5e		 pop	 esi
  001f0	5b		 pop	 ebx
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c2 10 00	 ret	 16			; 00000010H
?get_target_intercept_point@@YGXPAUENTITY@@0HPAUVEC3D@@@Z ENDP ; get_target_intercept_point
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z
_TEXT	SEGMENT
tv236 = -216						; size = 4
tv211 = -216						; size = 4
tv162 = -216						; size = 4
tv141 = -216						; size = 4
tv88 = -216						; size = 4
tv250 = -212						; size = 4
tv228 = -212						; size = 4
tv203 = -212						; size = 4
tv154 = -212						; size = 4
tv133 = -212						; size = 4
tv80 = -212						; size = 4
_search_weapon_system_pitch$ = -144			; size = 56
_search_weapon_system_heading$ = -88			; size = 56
_inst3d$ = -32						; size = 4
_found_package_number$ = -28				; size = 4
_found_package$ = -24					; size = 4
_package$ = -20						; size = 4
_result$ = -16						; size = 4
_config_type$ = -12					; size = 4
_weapon_sub_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_vp$ = 12						; size = 4
?get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z PROC ; get_local_entity_selected_weapon_viewpoint, COMDAT

; 2506 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2507 : 	weapon_package_status
; 2508 : 		*package_status;
; 2509 : 
; 2510 : 	entity_sub_types
; 2511 : 		weapon_sub_type;
; 2512 : 
; 2513 : 	weapon_config_types
; 2514 : 		config_type;
; 2515 : 
; 2516 : 	int
; 2517 : 		result,
; 2518 : 		package,
; 2519 : 		found_package,
; 2520 : 		found_package_number;
; 2521 : 
; 2522 : 	object_3d_instance
; 2523 : 		*inst3d;
; 2524 : 
; 2525 : 	object_3d_sub_object_search_data
; 2526 : 		search_weapon_system_heading,
; 2527 : 		search_weapon_system_pitch;
; 2528 : 
; 2529 : 	ASSERT (launcher);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00010	75 18		 jne	 SHORT $LN5@get_local_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00017	83 c0 17	 add	 eax, 23			; 00000017H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 2530 : 
; 2531 : 	ASSERT (vp);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _vp$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN6@get_local_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00035	83 c0 19	 add	 eax, 25			; 00000019H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_02HPPNELPJ@vp@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 2532 : 
; 2533 : 	result = FALSE;

  00048	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 2534 : 
; 2535 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  0004f	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00053	74 0d		 je	 SHORT $LN18@get_local_
  00055	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00060	eb 24		 jmp	 SHORT $LN19@get_local_
$LN18@get_local_:
  00062	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00068	83 c2 1d	 add	 edx, 29			; 0000001dH
  0006b	52		 push	 edx
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv80[ebp], 0
$LN19@get_local_:
  00086	b9 01 00 00 00	 mov	 ecx, 1
  0008b	85 c9		 test	 ecx, ecx
  0008d	74 0c		 je	 SHORT $LN20@get_local_
  0008f	c7 85 28 ff ff
	ff 13 00 00 00	 mov	 DWORD PTR tv88[ebp], 19	; 00000013H
  00099	eb 24		 jmp	 SHORT $LN21@get_local_
$LN20@get_local_:
  0009b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  000a1	83 c2 1d	 add	 edx, 29			; 0000001dH
  000a4	52		 push	 edx
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b5	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv88[ebp], 0
$LN21@get_local_:
  000bf	6a 13		 push	 19			; 00000013H
  000c1	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000c4	51		 push	 ecx
  000c5	6b 95 2c ff ff
	ff 50		 imul	 edx, DWORD PTR tv80[ebp], 80
  000cc	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv88[ebp]
  000d2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000d9	ff d1		 call	 ecx
  000db	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2536 : 
; 2537 : 	if (package_status)

  000de	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000e2	0f 84 d6 03 00
	00		 je	 $LN7@get_local_

; 2538 : 	{
; 2539 : 		weapon_sub_type = get_local_entity_int_value (launcher, INT_TYPE_SELECTED_WEAPON);

  000e8	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000ec	74 0d		 je	 SHORT $LN22@get_local_
  000ee	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f3	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv133[ebp], ecx
  000f9	eb 24		 jmp	 SHORT $LN23@get_local_
$LN22@get_local_:
  000fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00101	83 c2 21	 add	 edx, 33			; 00000021H
  00104	52		 push	 edx
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00115	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv133[ebp], 0
$LN23@get_local_:
  0011f	b9 01 00 00 00	 mov	 ecx, 1
  00124	85 c9		 test	 ecx, ecx
  00126	74 0c		 je	 SHORT $LN24@get_local_
  00128	c7 85 28 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv141[ebp], 184 ; 000000b8H
  00132	eb 24		 jmp	 SHORT $LN25@get_local_
$LN24@get_local_:
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  0013a	83 c2 21	 add	 edx, 33			; 00000021H
  0013d	52		 push	 edx
  0013e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014e	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv141[ebp], 0
$LN25@get_local_:
  00158	68 b8 00 00 00	 push	 184			; 000000b8H
  0015d	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00160	51		 push	 ecx
  00161	69 95 2c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv133[ebp], 1116
  0016b	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv141[ebp]
  00171	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00178	ff d1		 call	 ecx
  0017a	89 45 f8	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 2540 : 
; 2541 : 		if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0017d	83 7d f8 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00181	0f 84 37 03 00
	00		 je	 $LN7@get_local_

; 2542 : 		{
; 2543 : 			config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  00187	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0018b	74 0d		 je	 SHORT $LN26@get_local_
  0018d	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00190	8b 08		 mov	 ecx, DWORD PTR [eax]
  00192	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv154[ebp], ecx
  00198	eb 24		 jmp	 SHORT $LN27@get_local_
$LN26@get_local_:
  0019a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  001a0	83 c2 25	 add	 edx, 37			; 00000025H
  001a3	52		 push	 edx
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b4	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
$LN27@get_local_:
  001be	b9 01 00 00 00	 mov	 ecx, 1
  001c3	85 c9		 test	 ecx, ecx
  001c5	74 0c		 je	 SHORT $LN28@get_local_
  001c7	c7 85 28 ff ff
	ff 05 01 00 00	 mov	 DWORD PTR tv162[ebp], 261 ; 00000105H
  001d1	eb 24		 jmp	 SHORT $LN29@get_local_
$LN28@get_local_:
  001d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  001d9	83 c2 25	 add	 edx, 37			; 00000025H
  001dc	52		 push	 edx
  001dd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ed	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
$LN29@get_local_:
  001f7	68 05 01 00 00	 push	 261			; 00000105H
  001fc	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  001ff	51		 push	 ecx
  00200	69 95 2c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv154[ebp], 1116
  0020a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv162[ebp]
  00210	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00217	ff d1		 call	 ecx
  00219	89 45 f4	 mov	 DWORD PTR _config_type$[ebp], eax

; 2544 : 
; 2545 : 			//
; 2546 : 			// find undamaged package with most weapons remaining
; 2547 : 			//
; 2548 : 
; 2549 : 			found_package_number = 0;

  0021c	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _found_package_number$[ebp], 0

; 2550 : 
; 2551 : 			for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00223	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0022a	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  0022c	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  0022f	83 c0 01	 add	 eax, 1
  00232	89 45 ec	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  00235	83 7d ec 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00239	7d 6a		 jge	 SHORT $LN3@get_local_

; 2552 : 			{
; 2553 : 				if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0023b	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00242	6b 4d ec 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00246	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  0024e	75 02		 jne	 SHORT $LN9@get_local_

; 2554 : 				{
; 2555 : 					break;

  00250	eb 53		 jmp	 SHORT $LN3@get_local_
$LN9@get_local_:

; 2556 : 				}
; 2557 : 
; 2558 : 				if (weapon_config_database[config_type][package].sub_type == weapon_sub_type)

  00252	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00259	6b 4d ec 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0025d	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00264	3b 55 f8	 cmp	 edx, DWORD PTR _weapon_sub_type$[ebp]
  00267	75 3a		 jne	 SHORT $LN10@get_local_

; 2559 : 				{
; 2560 : 					if (!package_status[package].damaged)

  00269	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  0026c	c1 e0 04	 shl	 eax, 4
  0026f	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00272	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  00277	85 d2		 test	 edx, edx
  00279	75 28		 jne	 SHORT $LN10@get_local_

; 2561 : 					{
; 2562 : 						if (package_status[package].number > found_package_number)

  0027b	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  0027e	c1 e0 04	 shl	 eax, 4
  00281	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00284	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00288	3b 55 e4	 cmp	 edx, DWORD PTR _found_package_number$[ebp]
  0028b	7e 16		 jle	 SHORT $LN10@get_local_

; 2563 : 						{
; 2564 : 							found_package = package;

  0028d	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  00290	89 45 e8	 mov	 DWORD PTR _found_package$[ebp], eax

; 2565 : 
; 2566 : 							found_package_number = package_status[package].number;

  00293	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  00296	c1 e0 04	 shl	 eax, 4
  00299	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0029c	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  002a0	89 55 e4	 mov	 DWORD PTR _found_package_number$[ebp], edx
$LN10@get_local_:

; 2567 : 						}
; 2568 : 					}
; 2569 : 				}
; 2570 : 			}

  002a3	eb 87		 jmp	 SHORT $LN2@get_local_
$LN3@get_local_:

; 2571 : 
; 2572 : 			if (found_package_number > 0)

  002a5	83 7d e4 00	 cmp	 DWORD PTR _found_package_number$[ebp], 0
  002a9	0f 8e 0f 02 00
	00		 jle	 $LN7@get_local_

; 2573 : 			{
; 2574 : 				inst3d = (object_3d_instance *) get_local_entity_ptr_value (launcher, PTR_TYPE_INSTANCE_3D_OBJECT);

  002af	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  002b3	74 0d		 je	 SHORT $LN30@get_local_
  002b5	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  002b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ba	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv203[ebp], ecx
  002c0	eb 24		 jmp	 SHORT $LN31@get_local_
$LN30@get_local_:
  002c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  002c8	83 c2 44	 add	 edx, 68			; 00000044H
  002cb	52		 push	 edx
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002d6	50		 push	 eax
  002d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002dc	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN31@get_local_:
  002e6	b9 01 00 00 00	 mov	 ecx, 1
  002eb	85 c9		 test	 ecx, ecx
  002ed	74 0c		 je	 SHORT $LN32@get_local_
  002ef	c7 85 28 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv211[ebp], 2
  002f9	eb 24		 jmp	 SHORT $LN33@get_local_
$LN32@get_local_:
  002fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00301	83 c2 44	 add	 edx, 68			; 00000044H
  00304	52		 push	 edx
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0030a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00315	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv211[ebp], 0
$LN33@get_local_:
  0031f	6a 02		 push	 2
  00321	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00324	51		 push	 ecx
  00325	6b 95 2c ff ff
	ff 50		 imul	 edx, DWORD PTR tv203[ebp], 80
  0032c	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv211[ebp]
  00332	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00339	ff d1		 call	 ecx
  0033b	89 45 e0	 mov	 DWORD PTR _inst3d$[ebp], eax

; 2575 : 
; 2576 : 				ASSERT (inst3d);

  0033e	83 7d e0 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00342	75 18		 jne	 SHORT $LN14@get_local_
  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00349	83 c0 46	 add	 eax, 70			; 00000046H
  0034c	50		 push	 eax
  0034d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00352	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00357	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@get_local_:

; 2577 : 
; 2578 : 				//
; 2579 : 				// ensure that the 3D instance viewpoint is up to date (the object may not have been drawn)
; 2580 : 				//
; 2581 : 
; 2582 : 				get_local_entity_vec3d (launcher, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  0035c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00360	74 0d		 je	 SHORT $LN34@get_local_
  00362	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00365	8b 08		 mov	 ecx, DWORD PTR [eax]
  00367	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv228[ebp], ecx
  0036d	eb 24		 jmp	 SHORT $LN35@get_local_
$LN34@get_local_:
  0036f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00375	83 c2 4c	 add	 edx, 76			; 0000004cH
  00378	52		 push	 edx
  00379	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00383	50		 push	 eax
  00384	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00389	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv228[ebp], 0
$LN35@get_local_:
  00393	b9 01 00 00 00	 mov	 ecx, 1
  00398	85 c9		 test	 ecx, ecx
  0039a	74 0c		 je	 SHORT $LN36@get_local_
  0039c	c7 85 28 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv236[ebp], 8
  003a6	eb 24		 jmp	 SHORT $LN37@get_local_
$LN36@get_local_:
  003a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  003ae	83 c2 4c	 add	 edx, 76			; 0000004cH
  003b1	52		 push	 edx
  003b2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003bc	50		 push	 eax
  003bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c2	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv236[ebp], 0
$LN37@get_local_:
  003cc	8b 4d e0	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  003cf	83 c1 08	 add	 ecx, 8
  003d2	51		 push	 ecx
  003d3	6a 08		 push	 8
  003d5	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  003d8	52		 push	 edx
  003d9	6b 85 2c ff ff
	ff 60		 imul	 eax, DWORD PTR tv228[ebp], 96
  003e0	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR tv236[ebp]
  003e6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  003ed	ff d2		 call	 edx

; 2583 : 
; 2584 : 				get_local_entity_attitude_matrix (launcher, inst3d->vp.attitude);

  003ef	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  003f3	74 0d		 je	 SHORT $LN38@get_local_
  003f5	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  003f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  003fa	89 8d 2c ff ff
	ff		 mov	 DWORD PTR tv250[ebp], ecx
  00400	eb 24		 jmp	 SHORT $LN39@get_local_
$LN38@get_local_:
  00402	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z@4JA
  00408	83 c2 4e	 add	 edx, 78			; 0000004eH
  0040b	52		 push	 edx
  0040c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00411	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00416	50		 push	 eax
  00417	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0041c	c7 85 2c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv250[ebp], 0
$LN39@get_local_:
  00426	8b 4d e0	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00429	83 c1 14	 add	 ecx, 20			; 00000014H
  0042c	51		 push	 ecx
  0042d	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00430	52		 push	 edx
  00431	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR tv250[ebp]
  00437	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  0043e	ff d1		 call	 ecx

; 2585 : 
; 2586 : 				search_weapon_system_heading.search_depth = weapon_config_database[config_type][found_package].heading_depth;

  00440	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00447	6b 4d e8 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0044b	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  00452	89 55 b0	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 2587 : 				search_weapon_system_heading.search_object = inst3d;

  00455	8b 45 e0	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00458	89 45 a8	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 2588 : 				search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  0045b	c7 45 b4 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 2589 : 
; 2590 : 				if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00462	8d 45 a8	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0046b	83 f8 01	 cmp	 eax, 1
  0046e	75 4e		 jne	 SHORT $LN7@get_local_

; 2591 : 				{
; 2592 : 					search_weapon_system_pitch.search_depth = weapon_config_database[config_type][found_package].pitch_depth;

  00470	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00477	6b 4d e8 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0047b	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  00482	89 95 78 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 2593 : 					search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  00488	c7 85 7c ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 2594 : 
; 2595 : 					if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00492	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  00498	50		 push	 eax
  00499	8d 4d a8	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  0049c	51		 push	 ecx
  0049d	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  004a2	83 f8 01	 cmp	 eax, 1
  004a5	75 17		 jne	 SHORT $LN7@get_local_

; 2596 : 					{
; 2597 : 						get_3d_sub_object_world_viewpoint (search_weapon_system_pitch.result_sub_object, vp);

  004a7	8b 45 0c	 mov	 eax, DWORD PTR _vp$[ebp]
  004aa	50		 push	 eax
  004ab	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  004b1	51		 push	 ecx
  004b2	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 2598 : 
; 2599 : 						result = TRUE;

  004b7	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@get_local_:

; 2600 : 					}
; 2601 : 				}
; 2602 : 			}
; 2603 : 		}
; 2604 : 	}
; 2605 : 
; 2606 : 	return (result);

  004be	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]

; 2607 : }

  004c1	5f		 pop	 edi
  004c2	5e		 pop	 esi
  004c3	5b		 pop	 ebx
  004c4	8b e5		 mov	 esp, ebp
  004c6	5d		 pop	 ebp
  004c7	c2 08 00	 ret	 8
?get_local_entity_selected_weapon_viewpoint@@YGHPAUENTITY@@PAUVIEWPOINT@@@Z ENDP ; get_local_entity_selected_weapon_viewpoint
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z
_TEXT	SEGMENT
tv262 = -296						; size = 4
tv237 = -296						; size = 4
tv188 = -296						; size = 4
tv167 = -296						; size = 4
tv146 = -296						; size = 4
tv93 = -296						; size = 4
tv276 = -292						; size = 4
tv254 = -292						; size = 4
tv229 = -292						; size = 4
tv180 = -292						; size = 4
tv159 = -292						; size = 4
tv138 = -292						; size = 4
tv85 = -292						; size = 4
_target$ = -224						; size = 4
_offset_vector$ = -220					; size = 12
_weapon_to_target_vector$ = -208			; size = 12
_vp$ = -196						; size = 48
_search_weapon_system_pitch$ = -148			; size = 56
_search_weapon_system_heading$ = -92			; size = 56
_inst3d$ = -36						; size = 4
_flat_range$ = -32					; size = 4
_found_package_number$ = -28				; size = 4
_found_package$ = -24					; size = 4
_package$ = -20						; size = 4
_result$ = -16						; size = 4
_config_type$ = -12					; size = 4
_weapon_sub_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_heading_offset$ = 12					; size = 4
_pitch_offset$ = 16					; size = 4
?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z PROC ; get_local_entity_selected_weapon_to_target_offsets, COMDAT

; 2367 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2368 : 	weapon_package_status
; 2369 : 		*package_status;
; 2370 : 
; 2371 : 	entity_sub_types
; 2372 : 		weapon_sub_type;
; 2373 : 
; 2374 : 	weapon_config_types
; 2375 : 		config_type;
; 2376 : 
; 2377 : 	int
; 2378 : 		result,
; 2379 : 		package,
; 2380 : 		found_package,
; 2381 : 		found_package_number;
; 2382 : 
; 2383 : 	float
; 2384 : 		flat_range;
; 2385 : 
; 2386 : 	object_3d_instance
; 2387 : 		*inst3d;
; 2388 : 
; 2389 : 	object_3d_sub_object_search_data
; 2390 : 		search_weapon_system_heading,
; 2391 : 		search_weapon_system_pitch;
; 2392 : 
; 2393 : 	viewpoint
; 2394 : 		vp;
; 2395 : 
; 2396 : 	vec3d
; 2397 : 		weapon_to_target_vector,
; 2398 : 		offset_vector;
; 2399 : 
; 2400 : 	entity
; 2401 : 		*target;
; 2402 : 
; 2403 : 	ASSERT (launcher);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00010	75 18		 jne	 SHORT $LN5@get_local_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00017	83 c0 24	 add	 eax, 36			; 00000024H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 2404 : 
; 2405 : 	ASSERT (heading_offset);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _heading_offset$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN6@get_local_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00035	83 c0 26	 add	 eax, 38			; 00000026H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MMIDLJAA@heading_offset@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 2406 : 
; 2407 : 	ASSERT (pitch_offset);

  00048	83 7d 10 00	 cmp	 DWORD PTR _pitch_offset$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN7@get_local_
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00053	83 c0 28	 add	 eax, 40			; 00000028H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJPGCHFJ@pitch_offset@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@get_local_:

; 2408 : 
; 2409 : 	result = FALSE;

  00066	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 2410 : 
; 2411 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  0006d	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00071	74 0d		 je	 SHORT $LN21@get_local_
  00073	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv85[ebp], ecx
  0007e	eb 24		 jmp	 SHORT $LN22@get_local_
$LN21@get_local_:
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00086	83 c2 2c	 add	 edx, 44			; 0000002cH
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009a	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv85[ebp], 0
$LN22@get_local_:
  000a4	b9 01 00 00 00	 mov	 ecx, 1
  000a9	85 c9		 test	 ecx, ecx
  000ab	74 0c		 je	 SHORT $LN23@get_local_
  000ad	c7 85 d8 fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv93[ebp], 19	; 00000013H
  000b7	eb 24		 jmp	 SHORT $LN24@get_local_
$LN23@get_local_:
  000b9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  000bf	83 c2 2c	 add	 edx, 44			; 0000002cH
  000c2	52		 push	 edx
  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d3	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN24@get_local_:
  000dd	6a 13		 push	 19			; 00000013H
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000e2	51		 push	 ecx
  000e3	6b 95 dc fe ff
	ff 50		 imul	 edx, DWORD PTR tv85[ebp], 80
  000ea	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  000f0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000f7	ff d1		 call	 ecx
  000f9	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2412 : 
; 2413 : 	if (package_status)

  000fc	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  00100	0f 84 42 05 00
	00		 je	 $LN19@get_local_

; 2414 : 	{
; 2415 : 		weapon_sub_type = get_local_entity_int_value (launcher, INT_TYPE_SELECTED_WEAPON);

  00106	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0010a	74 0d		 je	 SHORT $LN25@get_local_
  0010c	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0010f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00111	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  00117	eb 24		 jmp	 SHORT $LN26@get_local_
$LN25@get_local_:
  00119	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  0011f	83 c2 30	 add	 edx, 48			; 00000030H
  00122	52		 push	 edx
  00123	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00133	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN26@get_local_:
  0013d	b9 01 00 00 00	 mov	 ecx, 1
  00142	85 c9		 test	 ecx, ecx
  00144	74 0c		 je	 SHORT $LN27@get_local_
  00146	c7 85 d8 fe ff
	ff b8 00 00 00	 mov	 DWORD PTR tv146[ebp], 184 ; 000000b8H
  00150	eb 24		 jmp	 SHORT $LN28@get_local_
$LN27@get_local_:
  00152	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00158	83 c2 30	 add	 edx, 48			; 00000030H
  0015b	52		 push	 edx
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00161	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016c	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN28@get_local_:
  00176	68 b8 00 00 00	 push	 184			; 000000b8H
  0017b	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0017e	51		 push	 ecx
  0017f	69 95 dc fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv138[ebp], 1116
  00189	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  0018f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00196	ff d1		 call	 ecx
  00198	89 45 f8	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 2416 : 
; 2417 : 		if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0019b	83 7d f8 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0019f	0f 84 a3 04 00
	00		 je	 $LN19@get_local_

; 2418 : 		{
; 2419 : 			target = get_local_entity_parent (launcher, LIST_TYPE_TARGET);

  001a5	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  001a9	74 0d		 je	 SHORT $LN29@get_local_
  001ab	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  001ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b0	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv159[ebp], ecx
  001b6	eb 24		 jmp	 SHORT $LN30@get_local_
$LN29@get_local_:
  001b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  001be	83 c2 34	 add	 edx, 52			; 00000034H
  001c1	52		 push	 edx
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001cc	50		 push	 eax
  001cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d2	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv159[ebp], 0
$LN30@get_local_:
  001dc	b9 01 00 00 00	 mov	 ecx, 1
  001e1	85 c9		 test	 ecx, ecx
  001e3	74 0c		 je	 SHORT $LN31@get_local_
  001e5	c7 85 d8 fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv167[ebp], 38 ; 00000026H
  001ef	eb 24		 jmp	 SHORT $LN32@get_local_
$LN31@get_local_:
  001f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  001f7	83 c2 34	 add	 edx, 52			; 00000034H
  001fa	52		 push	 edx
  001fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00205	50		 push	 eax
  00206	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020b	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv167[ebp], 0
$LN32@get_local_:
  00215	6a 26		 push	 38			; 00000026H
  00217	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0021a	51		 push	 ecx
  0021b	69 95 dc fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv159[ebp], 180
  00225	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv167[ebp]
  0022b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00232	ff d1		 call	 ecx
  00234	89 85 20 ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2420 : 
; 2421 : 			if (target)

  0023a	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00241	0f 84 01 04 00
	00		 je	 $LN19@get_local_

; 2422 : 			{
; 2423 : 				config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  00247	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0024b	74 0d		 je	 SHORT $LN33@get_local_
  0024d	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00250	8b 08		 mov	 ecx, DWORD PTR [eax]
  00252	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv180[ebp], ecx
  00258	eb 24		 jmp	 SHORT $LN34@get_local_
$LN33@get_local_:
  0025a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00260	83 c2 38	 add	 edx, 56			; 00000038H
  00263	52		 push	 edx
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00269	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026e	50		 push	 eax
  0026f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00274	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
$LN34@get_local_:
  0027e	b9 01 00 00 00	 mov	 ecx, 1
  00283	85 c9		 test	 ecx, ecx
  00285	74 0c		 je	 SHORT $LN35@get_local_
  00287	c7 85 d8 fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv188[ebp], 261 ; 00000105H
  00291	eb 24		 jmp	 SHORT $LN36@get_local_
$LN35@get_local_:
  00293	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00299	83 c2 38	 add	 edx, 56			; 00000038H
  0029c	52		 push	 edx
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a7	50		 push	 eax
  002a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ad	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv188[ebp], 0
$LN36@get_local_:
  002b7	68 05 01 00 00	 push	 261			; 00000105H
  002bc	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  002bf	51		 push	 ecx
  002c0	69 95 dc fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv180[ebp], 1116
  002ca	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv188[ebp]
  002d0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002d7	ff d1		 call	 ecx
  002d9	89 45 f4	 mov	 DWORD PTR _config_type$[ebp], eax

; 2424 : 
; 2425 : 				//
; 2426 : 				// find undamaged package with most weapons remaining
; 2427 : 				//
; 2428 : 
; 2429 : 				found_package_number = 0;

  002dc	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _found_package_number$[ebp], 0

; 2430 : 
; 2431 : 				for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  002e3	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  002ea	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  002ec	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  002ef	83 c0 01	 add	 eax, 1
  002f2	89 45 ec	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  002f5	83 7d ec 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  002f9	7d 6a		 jge	 SHORT $LN3@get_local_

; 2432 : 				{
; 2433 : 					if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  002fb	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00302	6b 4d ec 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00306	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  0030e	75 02		 jne	 SHORT $LN11@get_local_

; 2434 : 					{
; 2435 : 						break;

  00310	eb 53		 jmp	 SHORT $LN3@get_local_
$LN11@get_local_:

; 2436 : 					}
; 2437 : 
; 2438 : 					if (weapon_config_database[config_type][package].sub_type == weapon_sub_type)

  00312	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00319	6b 4d ec 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0031d	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00324	3b 55 f8	 cmp	 edx, DWORD PTR _weapon_sub_type$[ebp]
  00327	75 3a		 jne	 SHORT $LN14@get_local_

; 2439 : 					{
; 2440 : 						if (!package_status[package].damaged)

  00329	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  0032c	c1 e0 04	 shl	 eax, 4
  0032f	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00332	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  00337	85 d2		 test	 edx, edx
  00339	75 28		 jne	 SHORT $LN14@get_local_

; 2441 : 						{
; 2442 : 							if (package_status[package].number > found_package_number)

  0033b	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  0033e	c1 e0 04	 shl	 eax, 4
  00341	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00344	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00348	3b 55 e4	 cmp	 edx, DWORD PTR _found_package_number$[ebp]
  0034b	7e 16		 jle	 SHORT $LN14@get_local_

; 2443 : 							{
; 2444 : 								found_package = package;

  0034d	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  00350	89 45 e8	 mov	 DWORD PTR _found_package$[ebp], eax

; 2445 : 
; 2446 : 								found_package_number = package_status[package].number;

  00353	8b 45 ec	 mov	 eax, DWORD PTR _package$[ebp]
  00356	c1 e0 04	 shl	 eax, 4
  00359	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0035c	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00360	89 55 e4	 mov	 DWORD PTR _found_package_number$[ebp], edx
$LN14@get_local_:

; 2447 : 							}
; 2448 : 						}
; 2449 : 					}
; 2450 : 				}

  00363	eb 87		 jmp	 SHORT $LN2@get_local_
$LN3@get_local_:

; 2451 : 
; 2452 : 				if (found_package_number > 0)

  00365	83 7d e4 00	 cmp	 DWORD PTR _found_package_number$[ebp], 0
  00369	0f 8e d9 02 00
	00		 jle	 $LN19@get_local_

; 2453 : 				{
; 2454 : 					inst3d = (object_3d_instance *) get_local_entity_ptr_value (launcher, PTR_TYPE_INSTANCE_3D_OBJECT);

  0036f	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00373	74 0d		 je	 SHORT $LN37@get_local_
  00375	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00378	8b 08		 mov	 ecx, DWORD PTR [eax]
  0037a	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv229[ebp], ecx
  00380	eb 24		 jmp	 SHORT $LN38@get_local_
$LN37@get_local_:
  00382	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00388	83 c2 57	 add	 edx, 87			; 00000057H
  0038b	52		 push	 edx
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00391	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00396	50		 push	 eax
  00397	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039c	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv229[ebp], 0
$LN38@get_local_:
  003a6	b9 01 00 00 00	 mov	 ecx, 1
  003ab	85 c9		 test	 ecx, ecx
  003ad	74 0c		 je	 SHORT $LN39@get_local_
  003af	c7 85 d8 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv237[ebp], 2
  003b9	eb 24		 jmp	 SHORT $LN40@get_local_
$LN39@get_local_:
  003bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  003c1	83 c2 57	 add	 edx, 87			; 00000057H
  003c4	52		 push	 edx
  003c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d5	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv237[ebp], 0
$LN40@get_local_:
  003df	6a 02		 push	 2
  003e1	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  003e4	51		 push	 ecx
  003e5	6b 95 dc fe ff
	ff 50		 imul	 edx, DWORD PTR tv229[ebp], 80
  003ec	8b 85 d8 fe ff
	ff		 mov	 eax, DWORD PTR tv237[ebp]
  003f2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  003f9	ff d1		 call	 ecx
  003fb	89 45 dc	 mov	 DWORD PTR _inst3d$[ebp], eax

; 2455 : 
; 2456 : 					ASSERT (inst3d);

  003fe	83 7d dc 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00402	75 18		 jne	 SHORT $LN16@get_local_
  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00409	83 c0 59	 add	 eax, 89			; 00000059H
  0040c	50		 push	 eax
  0040d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00412	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00417	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@get_local_:

; 2457 : 
; 2458 : 					//
; 2459 : 					// ensure that the 3D instance viewpoint is up to date (the object may not have been drawn)
; 2460 : 					//
; 2461 : 
; 2462 : 					get_local_entity_vec3d (launcher, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  0041c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00420	74 0d		 je	 SHORT $LN41@get_local_
  00422	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00425	8b 08		 mov	 ecx, DWORD PTR [eax]
  00427	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv254[ebp], ecx
  0042d	eb 24		 jmp	 SHORT $LN42@get_local_
$LN41@get_local_:
  0042f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  00435	83 c2 5f	 add	 edx, 95			; 0000005fH
  00438	52		 push	 edx
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0043e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00443	50		 push	 eax
  00444	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00449	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv254[ebp], 0
$LN42@get_local_:
  00453	b9 01 00 00 00	 mov	 ecx, 1
  00458	85 c9		 test	 ecx, ecx
  0045a	74 0c		 je	 SHORT $LN43@get_local_
  0045c	c7 85 d8 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv262[ebp], 8
  00466	eb 24		 jmp	 SHORT $LN44@get_local_
$LN43@get_local_:
  00468	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  0046e	83 c2 5f	 add	 edx, 95			; 0000005fH
  00471	52		 push	 edx
  00472	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00477	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0047c	50		 push	 eax
  0047d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00482	c7 85 d8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN44@get_local_:
  0048c	8b 4d dc	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0048f	83 c1 08	 add	 ecx, 8
  00492	51		 push	 ecx
  00493	6a 08		 push	 8
  00495	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00498	52		 push	 edx
  00499	6b 85 dc fe ff
	ff 60		 imul	 eax, DWORD PTR tv254[ebp], 96
  004a0	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv262[ebp]
  004a6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004ad	ff d2		 call	 edx

; 2463 : 
; 2464 : 					get_local_entity_attitude_matrix (launcher, inst3d->vp.attitude);

  004af	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  004b3	74 0d		 je	 SHORT $LN45@get_local_
  004b5	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  004b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004ba	89 8d dc fe ff
	ff		 mov	 DWORD PTR tv276[ebp], ecx
  004c0	eb 24		 jmp	 SHORT $LN46@get_local_
$LN45@get_local_:
  004c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z@4JA
  004c8	83 c2 61	 add	 edx, 97			; 00000061H
  004cb	52		 push	 edx
  004cc	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004d6	50		 push	 eax
  004d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004dc	c7 85 dc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv276[ebp], 0
$LN46@get_local_:
  004e6	8b 4d dc	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  004e9	83 c1 14	 add	 ecx, 20			; 00000014H
  004ec	51		 push	 ecx
  004ed	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  004f0	52		 push	 edx
  004f1	8b 85 dc fe ff
	ff		 mov	 eax, DWORD PTR tv276[ebp]
  004f7	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  004fe	ff d1		 call	 ecx

; 2465 : 
; 2466 : 					search_weapon_system_heading.search_depth = weapon_config_database[config_type][found_package].heading_depth;

  00500	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00507	6b 4d e8 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0050b	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  00512	89 55 ac	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 2467 : 					search_weapon_system_heading.search_object = inst3d;

  00515	8b 45 dc	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00518	89 45 a4	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 2468 : 					search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  0051b	c7 45 b0 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 2469 : 
; 2470 : 					if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00522	8d 45 a4	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  00525	50		 push	 eax
  00526	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0052b	83 f8 01	 cmp	 eax, 1
  0052e	0f 85 14 01 00
	00		 jne	 $LN19@get_local_

; 2471 : 					{
; 2472 : 						search_weapon_system_pitch.search_depth = weapon_config_database[config_type][found_package].pitch_depth;

  00534	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0053b	6b 4d e8 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0053f	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  00546	89 95 74 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 2473 : 						search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  0054c	c7 85 78 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 2474 : 
; 2475 : 						if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00556	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0055c	50		 push	 eax
  0055d	8d 4d a4	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  00560	51		 push	 ecx
  00561	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00566	83 f8 01	 cmp	 eax, 1
  00569	0f 85 d9 00 00
	00		 jne	 $LN19@get_local_

; 2476 : 						{
; 2477 : 							get_3d_sub_object_world_viewpoint (search_weapon_system_pitch.result_sub_object, &vp);

  0056f	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _vp$[ebp]
  00575	50		 push	 eax
  00576	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  0057c	51		 push	 ecx
  0057d	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 2478 : 
; 2479 : 							if (get_pitch_device_to_target_vector (launcher, target, weapon_sub_type, &vp.position, &weapon_to_target_vector))

  00582	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _weapon_to_target_vector$[ebp]
  00588	50		 push	 eax
  00589	8d 8d 3c ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp]
  0058f	51		 push	 ecx
  00590	8b 55 f8	 mov	 edx, DWORD PTR _weapon_sub_type$[ebp]
  00593	52		 push	 edx
  00594	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  0059a	50		 push	 eax
  0059b	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0059e	51		 push	 ecx
  0059f	e8 00 00 00 00	 call	 ?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z ; get_pitch_device_to_target_vector
  005a4	85 c0		 test	 eax, eax
  005a6	0f 84 9c 00 00
	00		 je	 $LN19@get_local_

; 2480 : 							{
; 2481 : 								multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &weapon_to_target_vector);

  005ac	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _weapon_to_target_vector$[ebp]
  005b2	50		 push	 eax
  005b3	8d 8d 48 ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp+12]
  005b9	51		 push	 ecx
  005ba	8d 95 24 ff ff
	ff		 lea	 edx, DWORD PTR _offset_vector$[ebp]
  005c0	52		 push	 edx
  005c1	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 2482 : 
; 2483 : 								*heading_offset = atan2 (offset_vector.x, offset_vector.z);

  005c6	51		 push	 ecx
  005c7	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+8]
  005cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d4	51		 push	 ecx
  005d5	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  005dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e2	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  005e7	8b 45 0c	 mov	 eax, DWORD PTR _heading_offset$[ebp]
  005ea	d9 18		 fstp	 DWORD PTR [eax]

; 2484 : 
; 2485 : 								flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  005ec	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _offset_vector$[ebp]
  005f4	f3 0f 59 85 24
	ff ff ff	 mulss	 xmm0, DWORD PTR _offset_vector$[ebp]
  005fc	f3 0f 10 8d 2c
	ff ff ff	 movss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  00604	f3 0f 59 8d 2c
	ff ff ff	 mulss	 xmm1, DWORD PTR _offset_vector$[ebp+8]
  0060c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00610	51		 push	 ecx
  00611	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00616	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  0061b	d9 5d e0	 fstp	 DWORD PTR _flat_range$[ebp]

; 2486 : 
; 2487 : 								*pitch_offset = atan2 (offset_vector.y, flat_range);

  0061e	51		 push	 ecx
  0061f	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00624	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00629	51		 push	 ecx
  0062a	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _offset_vector$[ebp+4]
  00632	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00637	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0063c	8b 45 10	 mov	 eax, DWORD PTR _pitch_offset$[ebp]
  0063f	d9 18		 fstp	 DWORD PTR [eax]

; 2488 : 
; 2489 : 								result = TRUE;

  00641	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN19@get_local_:

; 2490 : 							}
; 2491 : 						}
; 2492 : 					}
; 2493 : 				}
; 2494 : 			}
; 2495 : 		}
; 2496 : 	}
; 2497 : 
; 2498 : 	return (result);

  00648	8b 45 f0	 mov	 eax, DWORD PTR _result$[ebp]

; 2499 : }

  0064b	5f		 pop	 edi
  0064c	5e		 pop	 esi
  0064d	5b		 pop	 ebx
  0064e	8b e5		 mov	 esp, ebp
  00650	5d		 pop	 ebp
  00651	c2 0c 00	 ret	 12			; 0000000cH
?get_local_entity_selected_weapon_to_target_offsets@@YGHPAUENTITY@@PAM1@Z ENDP ; get_local_entity_selected_weapon_to_target_offsets
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv526 = -288						; size = 4
tv447 = -288						; size = 4
tv426 = -288						; size = 4
tv405 = -288						; size = 4
tv353 = -288						; size = 4
tv328 = -288						; size = 4
tv279 = -288						; size = 4
tv258 = -288						; size = 4
tv239 = -288						; size = 4
tv218 = -288						; size = 4
tv197 = -288						; size = 4
tv171 = -288						; size = 4
tv146 = -288						; size = 4
tv89 = -288						; size = 4
tv518 = -284						; size = 4
tv439 = -284						; size = 4
tv418 = -284						; size = 4
tv398 = -284						; size = 4
tv367 = -284						; size = 4
tv345 = -284						; size = 4
tv320 = -284						; size = 4
tv271 = -284						; size = 4
tv251 = -284						; size = 4
tv231 = -284						; size = 4
tv210 = -284						; size = 4
tv189 = -284						; size = 4
tv163 = -284						; size = 4
tv138 = -284						; size = 4
tv81 = -284						; size = 4
_tracking_point$1 = -216				; size = 4
_target$ = -212						; size = 4
_weapon_to_target_vector_ptr$ = -208			; size = 4
_weapon_vector_ptr$ = -204				; size = 4
_weapon_to_target_vector$ = -200			; size = 12
_vp$ = -188						; size = 48
_search_weapon_system_pitch$ = -140			; size = 56
_search_weapon_system_heading$ = -84			; size = 56
_inst3d$ = -28						; size = 4
_found_package_number$ = -24				; size = 4
_found_package$ = -20					; size = 4
_package$ = -16						; size = 4
_config_type$ = -12					; size = 4
_weapon_sub_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z PROC ; update_entity_weapon_system_weapon_and_target_vectors, COMDAT

; 2200 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2201 : 	weapon_package_status
; 2202 : 		*package_status;
; 2203 : 
; 2204 : 	entity_sub_types
; 2205 : 		weapon_sub_type;
; 2206 : 
; 2207 : 	weapon_config_types
; 2208 : 		config_type;
; 2209 : 
; 2210 : 	int
; 2211 : 		package,
; 2212 : 		found_package,
; 2213 : 		found_package_number;
; 2214 : 
; 2215 : 	object_3d_instance
; 2216 : 		*inst3d;
; 2217 : 
; 2218 : 	object_3d_sub_object_search_data
; 2219 : 		search_weapon_system_heading,
; 2220 : 		search_weapon_system_pitch;
; 2221 : 
; 2222 : 	viewpoint
; 2223 : 		vp;
; 2224 : 
; 2225 : 	vec3d
; 2226 : 		weapon_to_target_vector,
; 2227 : 		*weapon_vector_ptr,
; 2228 : 		*weapon_to_target_vector_ptr;
; 2229 : 
; 2230 : 	entity
; 2231 : 		*target;
; 2232 : 
; 2233 : 	ASSERT (launcher);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00010	75 18		 jne	 SHORT $LN5@update_ent
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 21	 add	 eax, 33			; 00000021H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_ent:

; 2234 : 	ASSERT(launcher->type != ENTITY_TYPE_WEAPON);

  0002a	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0002d	83 38 25	 cmp	 DWORD PTR [eax], 37	; 00000025H
  00030	75 18		 jne	 SHORT $LN6@update_ent
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00037	83 c0 22	 add	 eax, 34			; 00000022H
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@OEFCOBGC@launcher?9?$DOtype?5?$CB?$DN?5ENTITY_TYPE_W@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@update_ent:

; 2235 : 
; 2236 : 	weapon_vector_ptr = get_local_entity_vec3d_ptr (launcher, VEC3D_TYPE_WEAPON_VECTOR);

  0004a	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0004e	74 0d		 je	 SHORT $LN29@update_ent
  00050	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv81[ebp], ecx
  0005b	eb 24		 jmp	 SHORT $LN30@update_ent
$LN29@update_ent:
  0005d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00063	83 c2 24	 add	 edx, 36			; 00000024H
  00066	52		 push	 edx
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00077	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN30@update_ent:
  00081	b9 01 00 00 00	 mov	 ecx, 1
  00086	85 c9		 test	 ecx, ecx
  00088	74 0c		 je	 SHORT $LN31@update_ent
  0008a	c7 85 e0 fe ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv89[ebp], 14	; 0000000eH
  00094	eb 24		 jmp	 SHORT $LN32@update_ent
$LN31@update_ent:
  00096	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0009c	83 c2 24	 add	 edx, 36			; 00000024H
  0009f	52		 push	 edx
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000aa	50		 push	 eax
  000ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b0	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN32@update_ent:
  000ba	6a 0e		 push	 14			; 0000000eH
  000bc	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000bf	51		 push	 ecx
  000c0	6b 95 e4 fe ff
	ff 60		 imul	 edx, DWORD PTR tv81[ebp], 96
  000c7	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv89[ebp]
  000cd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000d4	ff d1		 call	 ecx
  000d6	89 85 34 ff ff
	ff		 mov	 DWORD PTR _weapon_vector_ptr$[ebp], eax

; 2237 : 
; 2238 : 	ASSERT (weapon_vector_ptr);

  000dc	83 bd 34 ff ff
	ff 00		 cmp	 DWORD PTR _weapon_vector_ptr$[ebp], 0
  000e3	75 18		 jne	 SHORT $LN7@update_ent
  000e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  000ea	83 c0 26	 add	 eax, 38			; 00000026H
  000ed	50		 push	 eax
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OBLDNNN@weapon_vector_ptr@
  000f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@update_ent:

; 2239 : 
; 2240 : 	weapon_to_target_vector_ptr = get_local_entity_vec3d_ptr (launcher, VEC3D_TYPE_WEAPON_TO_TARGET_VECTOR);

  000fd	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00101	74 0d		 je	 SHORT $LN33@update_ent
  00103	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00106	8b 08		 mov	 ecx, DWORD PTR [eax]
  00108	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv138[ebp], ecx
  0010e	eb 24		 jmp	 SHORT $LN34@update_ent
$LN33@update_ent:
  00110	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00116	83 c2 28	 add	 edx, 40			; 00000028H
  00119	52		 push	 edx
  0011a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012a	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
$LN34@update_ent:
  00134	b9 01 00 00 00	 mov	 ecx, 1
  00139	85 c9		 test	 ecx, ecx
  0013b	74 0c		 je	 SHORT $LN35@update_ent
  0013d	c7 85 e0 fe ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv146[ebp], 13 ; 0000000dH
  00147	eb 24		 jmp	 SHORT $LN36@update_ent
$LN35@update_ent:
  00149	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0014f	83 c2 28	 add	 edx, 40			; 00000028H
  00152	52		 push	 edx
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00163	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
$LN36@update_ent:
  0016d	6a 0d		 push	 13			; 0000000dH
  0016f	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00172	51		 push	 ecx
  00173	6b 95 e4 fe ff
	ff 60		 imul	 edx, DWORD PTR tv138[ebp], 96
  0017a	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  00180	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00187	ff d1		 call	 ecx
  00189	89 85 30 ff ff
	ff		 mov	 DWORD PTR _weapon_to_target_vector_ptr$[ebp], eax

; 2241 : 
; 2242 : 	ASSERT (weapon_to_target_vector_ptr);

  0018f	83 bd 30 ff ff
	ff 00		 cmp	 DWORD PTR _weapon_to_target_vector_ptr$[ebp], 0
  00196	75 18		 jne	 SHORT $LN8@update_ent
  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0019d	83 c0 2a	 add	 eax, 42			; 0000002aH
  001a0	50		 push	 eax
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IMBAFCIG@weapon_to_target_vector_ptr@
  001ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@update_ent:

; 2243 : 
; 2244 : 	//
; 2245 : 	// set default values (force 180 degree error)
; 2246 : 	//
; 2247 : 
; 2248 : 	set_local_entity_int_value (launcher, INT_TYPE_WEAPON_AND_TARGET_VECTORS_VALID, FALSE);

  001b0	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  001b4	74 0d		 je	 SHORT $LN37@update_ent
  001b6	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  001b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  001bb	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv163[ebp], ecx
  001c1	eb 24		 jmp	 SHORT $LN38@update_ent
$LN37@update_ent:
  001c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  001c9	83 c2 30	 add	 edx, 48			; 00000030H
  001cc	52		 push	 edx
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001dd	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv163[ebp], 0
$LN38@update_ent:
  001e7	b9 01 00 00 00	 mov	 ecx, 1
  001ec	85 c9		 test	 ecx, ecx
  001ee	74 0c		 je	 SHORT $LN39@update_ent
  001f0	c7 85 e0 fe ff
	ff 02 01 00 00	 mov	 DWORD PTR tv171[ebp], 258 ; 00000102H
  001fa	eb 24		 jmp	 SHORT $LN40@update_ent
$LN39@update_ent:
  001fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00202	83 c2 30	 add	 edx, 48			; 00000030H
  00205	52		 push	 edx
  00206	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00210	50		 push	 eax
  00211	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00216	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv171[ebp], 0
$LN40@update_ent:
  00220	6a 00		 push	 0
  00222	68 02 01 00 00	 push	 258			; 00000102H
  00227	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0022a	51		 push	 ecx
  0022b	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv163[ebp], 1116
  00235	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv171[ebp]
  0023b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00242	ff d1		 call	 ecx

; 2249 : 
; 2250 : 	weapon_vector_ptr->x = 0.0;

  00244	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_vector_ptr$[ebp]
  0024a	0f 57 c0	 xorps	 xmm0, xmm0
  0024d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 2251 : 	weapon_vector_ptr->y = 0.0;

  00251	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_vector_ptr$[ebp]
  00257	0f 57 c0	 xorps	 xmm0, xmm0
  0025a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2252 : 	weapon_vector_ptr->z = 1.0;

  0025f	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_vector_ptr$[ebp]
  00265	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0026d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2253 : 
; 2254 : 	weapon_to_target_vector_ptr->x = 0.0;

  00272	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_to_target_vector_ptr$[ebp]
  00278	0f 57 c0	 xorps	 xmm0, xmm0
  0027b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 2255 : 	weapon_to_target_vector_ptr->y = 0.0;

  0027f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_to_target_vector_ptr$[ebp]
  00285	0f 57 c0	 xorps	 xmm0, xmm0
  00288	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 2256 : 	weapon_to_target_vector_ptr->z = -1.0;

  0028d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_to_target_vector_ptr$[ebp]
  00293	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0029b	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2257 : 
; 2258 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  002a0	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  002a4	74 0d		 je	 SHORT $LN41@update_ent
  002a6	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  002a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ab	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv189[ebp], ecx
  002b1	eb 24		 jmp	 SHORT $LN42@update_ent
$LN41@update_ent:
  002b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  002b9	83 c2 3a	 add	 edx, 58			; 0000003aH
  002bc	52		 push	 edx
  002bd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cd	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN42@update_ent:
  002d7	b9 01 00 00 00	 mov	 ecx, 1
  002dc	85 c9		 test	 ecx, ecx
  002de	74 0c		 je	 SHORT $LN43@update_ent
  002e0	c7 85 e0 fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv197[ebp], 19 ; 00000013H
  002ea	eb 24		 jmp	 SHORT $LN44@update_ent
$LN43@update_ent:
  002ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  002f2	83 c2 3a	 add	 edx, 58			; 0000003aH
  002f5	52		 push	 edx
  002f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00300	50		 push	 eax
  00301	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00306	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv197[ebp], 0
$LN44@update_ent:
  00310	6a 13		 push	 19			; 00000013H
  00312	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00315	51		 push	 ecx
  00316	6b 95 e4 fe ff
	ff 50		 imul	 edx, DWORD PTR tv189[ebp], 80
  0031d	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv197[ebp]
  00323	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0032a	ff d1		 call	 ecx
  0032c	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2259 : 
; 2260 : 	if (package_status)

  0032f	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  00333	0f 84 9f 08 00
	00		 je	 $LN20@update_ent

; 2261 : 	{
; 2262 : 		weapon_sub_type = get_local_entity_int_value (launcher, INT_TYPE_SELECTED_WEAPON);

  00339	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0033d	74 0d		 je	 SHORT $LN45@update_ent
  0033f	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00342	8b 08		 mov	 ecx, DWORD PTR [eax]
  00344	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv210[ebp], ecx
  0034a	eb 24		 jmp	 SHORT $LN46@update_ent
$LN45@update_ent:
  0034c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00352	83 c2 3e	 add	 edx, 62			; 0000003eH
  00355	52		 push	 edx
  00356	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0035b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00366	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv210[ebp], 0
$LN46@update_ent:
  00370	b9 01 00 00 00	 mov	 ecx, 1
  00375	85 c9		 test	 ecx, ecx
  00377	74 0c		 je	 SHORT $LN47@update_ent
  00379	c7 85 e0 fe ff
	ff b8 00 00 00	 mov	 DWORD PTR tv218[ebp], 184 ; 000000b8H
  00383	eb 24		 jmp	 SHORT $LN48@update_ent
$LN47@update_ent:
  00385	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0038b	83 c2 3e	 add	 edx, 62			; 0000003eH
  0038e	52		 push	 edx
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00399	50		 push	 eax
  0039a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0039f	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv218[ebp], 0
$LN48@update_ent:
  003a9	68 b8 00 00 00	 push	 184			; 000000b8H
  003ae	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  003b1	51		 push	 ecx
  003b2	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv210[ebp], 1116
  003bc	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv218[ebp]
  003c2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003c9	ff d1		 call	 ecx
  003cb	89 45 f8	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 2263 : 
; 2264 : 		if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  003ce	83 7d f8 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  003d2	0f 84 00 08 00
	00		 je	 $LN20@update_ent

; 2265 : 		{
; 2266 : 			target = get_local_entity_parent (launcher, LIST_TYPE_TARGET);

  003d8	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  003dc	74 0d		 je	 SHORT $LN49@update_ent
  003de	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  003e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e3	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv231[ebp], ecx
  003e9	eb 24		 jmp	 SHORT $LN50@update_ent
$LN49@update_ent:
  003eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  003f1	83 c2 42	 add	 edx, 66			; 00000042H
  003f4	52		 push	 edx
  003f5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003ff	50		 push	 eax
  00400	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00405	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv231[ebp], 0
$LN50@update_ent:
  0040f	b9 01 00 00 00	 mov	 ecx, 1
  00414	85 c9		 test	 ecx, ecx
  00416	74 0c		 je	 SHORT $LN51@update_ent
  00418	c7 85 e0 fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv239[ebp], 38 ; 00000026H
  00422	eb 24		 jmp	 SHORT $LN52@update_ent
$LN51@update_ent:
  00424	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0042a	83 c2 42	 add	 edx, 66			; 00000042H
  0042d	52		 push	 edx
  0042e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00433	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043e	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv239[ebp], 0
$LN52@update_ent:
  00448	6a 26		 push	 38			; 00000026H
  0044a	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0044d	51		 push	 ecx
  0044e	69 95 e4 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv231[ebp], 180
  00458	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv239[ebp]
  0045e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00465	ff d1		 call	 ecx
  00467	89 85 2c ff ff
	ff		 mov	 DWORD PTR _target$[ebp], eax

; 2267 : 
; 2268 : 			if (target || get_local_entity_int_value(launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  0046d	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00474	0f 85 92 00 00
	00		 jne	 $LN12@update_ent
  0047a	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0047e	74 0d		 je	 SHORT $LN53@update_ent
  00480	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00483	8b 08		 mov	 ecx, DWORD PTR [eax]
  00485	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv251[ebp], ecx
  0048b	eb 20		 jmp	 SHORT $LN54@update_ent
$LN53@update_ent:
  0048d	68 dc 08 00 00	 push	 2268			; 000008dcH
  00492	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00497	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0049d	52		 push	 edx
  0049e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a3	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv251[ebp], 0
$LN54@update_ent:
  004ad	b8 01 00 00 00	 mov	 eax, 1
  004b2	85 c0		 test	 eax, eax
  004b4	74 0c		 je	 SHORT $LN55@update_ent
  004b6	c7 85 e0 fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv258[ebp], 156 ; 0000009cH
  004c0	eb 20		 jmp	 SHORT $LN56@update_ent
$LN55@update_ent:
  004c2	68 dc 08 00 00	 push	 2268			; 000008dcH
  004c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004d2	51		 push	 ecx
  004d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d8	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv258[ebp], 0
$LN56@update_ent:
  004e2	68 9c 00 00 00	 push	 156			; 0000009cH
  004e7	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  004ea	52		 push	 edx
  004eb	69 85 e4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv251[ebp], 1116
  004f5	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv258[ebp]
  004fb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00502	ff d2		 call	 edx
  00504	85 c0		 test	 eax, eax
  00506	0f 84 cc 06 00
	00		 je	 $LN20@update_ent
$LN12@update_ent:

; 2269 : 			{
; 2270 : 				config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  0050c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00510	74 0d		 je	 SHORT $LN57@update_ent
  00512	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00515	8b 08		 mov	 ecx, DWORD PTR [eax]
  00517	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv271[ebp], ecx
  0051d	eb 24		 jmp	 SHORT $LN58@update_ent
$LN57@update_ent:
  0051f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00525	83 c2 46	 add	 edx, 70			; 00000046H
  00528	52		 push	 edx
  00529	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0052e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00533	50		 push	 eax
  00534	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00539	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv271[ebp], 0
$LN58@update_ent:
  00543	b9 01 00 00 00	 mov	 ecx, 1
  00548	85 c9		 test	 ecx, ecx
  0054a	74 0c		 je	 SHORT $LN59@update_ent
  0054c	c7 85 e0 fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv279[ebp], 261 ; 00000105H
  00556	eb 24		 jmp	 SHORT $LN60@update_ent
$LN59@update_ent:
  00558	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0055e	83 c2 46	 add	 edx, 70			; 00000046H
  00561	52		 push	 edx
  00562	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00567	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0056c	50		 push	 eax
  0056d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00572	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv279[ebp], 0
$LN60@update_ent:
  0057c	68 05 01 00 00	 push	 261			; 00000105H
  00581	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00584	51		 push	 ecx
  00585	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv271[ebp], 1116
  0058f	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv279[ebp]
  00595	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0059c	ff d1		 call	 ecx
  0059e	89 45 f4	 mov	 DWORD PTR _config_type$[ebp], eax

; 2271 : 
; 2272 : 				//
; 2273 : 				// find undamaged package with most weapons remaining
; 2274 : 				//
; 2275 : 
; 2276 : 				found_package_number = 0;

  005a1	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _found_package_number$[ebp], 0

; 2277 : 
; 2278 : 				for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  005a8	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  005af	eb 09		 jmp	 SHORT $LN4@update_ent
$LN2@update_ent:
  005b1	8b 45 f0	 mov	 eax, DWORD PTR _package$[ebp]
  005b4	83 c0 01	 add	 eax, 1
  005b7	89 45 f0	 mov	 DWORD PTR _package$[ebp], eax
$LN4@update_ent:
  005ba	83 7d f0 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  005be	7d 6a		 jge	 SHORT $LN3@update_ent

; 2279 : 				{
; 2280 : 					if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  005c0	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  005c7	6b 4d f0 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  005cb	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  005d3	75 02		 jne	 SHORT $LN13@update_ent

; 2281 : 					{
; 2282 : 						break;

  005d5	eb 53		 jmp	 SHORT $LN3@update_ent
$LN13@update_ent:

; 2283 : 					}
; 2284 : 
; 2285 : 					if (weapon_config_database[config_type][package].sub_type == weapon_sub_type)

  005d7	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  005de	6b 4d f0 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  005e2	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  005e9	3b 55 f8	 cmp	 edx, DWORD PTR _weapon_sub_type$[ebp]
  005ec	75 3a		 jne	 SHORT $LN16@update_ent

; 2286 : 					{
; 2287 : 						if (!package_status[package].damaged)

  005ee	8b 45 f0	 mov	 eax, DWORD PTR _package$[ebp]
  005f1	c1 e0 04	 shl	 eax, 4
  005f4	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  005f7	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  005fc	85 d2		 test	 edx, edx
  005fe	75 28		 jne	 SHORT $LN16@update_ent

; 2288 : 						{
; 2289 : 							if (package_status[package].number > found_package_number)

  00600	8b 45 f0	 mov	 eax, DWORD PTR _package$[ebp]
  00603	c1 e0 04	 shl	 eax, 4
  00606	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00609	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  0060d	3b 55 e8	 cmp	 edx, DWORD PTR _found_package_number$[ebp]
  00610	7e 16		 jle	 SHORT $LN16@update_ent

; 2290 : 							{
; 2291 : 								found_package = package;

  00612	8b 45 f0	 mov	 eax, DWORD PTR _package$[ebp]
  00615	89 45 ec	 mov	 DWORD PTR _found_package$[ebp], eax

; 2292 : 
; 2293 : 								found_package_number = package_status[package].number;

  00618	8b 45 f0	 mov	 eax, DWORD PTR _package$[ebp]
  0061b	c1 e0 04	 shl	 eax, 4
  0061e	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00621	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00625	89 55 e8	 mov	 DWORD PTR _found_package_number$[ebp], edx
$LN16@update_ent:

; 2294 : 							}
; 2295 : 						}
; 2296 : 					}
; 2297 : 				}

  00628	eb 87		 jmp	 SHORT $LN2@update_ent
$LN3@update_ent:

; 2298 : 
; 2299 : 				if (found_package_number > 0)

  0062a	83 7d e8 00	 cmp	 DWORD PTR _found_package_number$[ebp], 0
  0062e	0f 8e a4 05 00
	00		 jle	 $LN20@update_ent

; 2300 : 				{
; 2301 : 					inst3d = (object_3d_instance *) get_local_entity_ptr_value (launcher, PTR_TYPE_INSTANCE_3D_OBJECT);

  00634	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00638	74 0d		 je	 SHORT $LN61@update_ent
  0063a	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0063d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0063f	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv320[ebp], ecx
  00645	eb 24		 jmp	 SHORT $LN62@update_ent
$LN61@update_ent:
  00647	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0064d	83 c2 65	 add	 edx, 101		; 00000065H
  00650	52		 push	 edx
  00651	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00656	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0065b	50		 push	 eax
  0065c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00661	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv320[ebp], 0
$LN62@update_ent:
  0066b	b9 01 00 00 00	 mov	 ecx, 1
  00670	85 c9		 test	 ecx, ecx
  00672	74 0c		 je	 SHORT $LN63@update_ent
  00674	c7 85 e0 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv328[ebp], 2
  0067e	eb 24		 jmp	 SHORT $LN64@update_ent
$LN63@update_ent:
  00680	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00686	83 c2 65	 add	 edx, 101		; 00000065H
  00689	52		 push	 edx
  0068a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0068f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00694	50		 push	 eax
  00695	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069a	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv328[ebp], 0
$LN64@update_ent:
  006a4	6a 02		 push	 2
  006a6	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  006a9	51		 push	 ecx
  006aa	6b 95 e4 fe ff
	ff 50		 imul	 edx, DWORD PTR tv320[ebp], 80
  006b1	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv328[ebp]
  006b7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  006be	ff d1		 call	 ecx
  006c0	89 45 e4	 mov	 DWORD PTR _inst3d$[ebp], eax

; 2302 : 
; 2303 : 					ASSERT (inst3d);

  006c3	83 7d e4 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  006c7	75 18		 jne	 SHORT $LN18@update_ent
  006c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  006ce	83 c0 67	 add	 eax, 103		; 00000067H
  006d1	50		 push	 eax
  006d2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d7	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  006dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@update_ent:

; 2304 : 
; 2305 : 					//
; 2306 : 					// ensure that the 3D instance viewpoint is up to date (the object may not have been drawn)
; 2307 : 					//
; 2308 : 
; 2309 : 					get_local_entity_vec3d (launcher, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  006e1	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  006e5	74 0d		 je	 SHORT $LN65@update_ent
  006e7	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  006ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  006ec	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv345[ebp], ecx
  006f2	eb 24		 jmp	 SHORT $LN66@update_ent
$LN65@update_ent:
  006f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  006fa	83 c2 6d	 add	 edx, 109		; 0000006dH
  006fd	52		 push	 edx
  006fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00703	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00708	50		 push	 eax
  00709	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0070e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv345[ebp], 0
$LN66@update_ent:
  00718	b9 01 00 00 00	 mov	 ecx, 1
  0071d	85 c9		 test	 ecx, ecx
  0071f	74 0c		 je	 SHORT $LN67@update_ent
  00721	c7 85 e0 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv353[ebp], 8
  0072b	eb 24		 jmp	 SHORT $LN68@update_ent
$LN67@update_ent:
  0072d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00733	83 c2 6d	 add	 edx, 109		; 0000006dH
  00736	52		 push	 edx
  00737	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0073c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00741	50		 push	 eax
  00742	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00747	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv353[ebp], 0
$LN68@update_ent:
  00751	8b 4d e4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00754	83 c1 08	 add	 ecx, 8
  00757	51		 push	 ecx
  00758	6a 08		 push	 8
  0075a	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  0075d	52		 push	 edx
  0075e	6b 85 e4 fe ff
	ff 60		 imul	 eax, DWORD PTR tv345[ebp], 96
  00765	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv353[ebp]
  0076b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00772	ff d2		 call	 edx

; 2310 : 
; 2311 : 					get_local_entity_attitude_matrix (launcher, inst3d->vp.attitude);

  00774	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00778	74 0d		 je	 SHORT $LN69@update_ent
  0077a	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0077d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0077f	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv367[ebp], ecx
  00785	eb 24		 jmp	 SHORT $LN70@update_ent
$LN69@update_ent:
  00787	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0078d	83 c2 6f	 add	 edx, 111		; 0000006fH
  00790	52		 push	 edx
  00791	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00796	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0079b	50		 push	 eax
  0079c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007a1	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv367[ebp], 0
$LN70@update_ent:
  007ab	8b 4d e4	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  007ae	83 c1 14	 add	 ecx, 20			; 00000014H
  007b1	51		 push	 ecx
  007b2	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  007b5	52		 push	 edx
  007b6	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv367[ebp]
  007bc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  007c3	ff d1		 call	 ecx

; 2312 : 
; 2313 : 					search_weapon_system_heading.search_depth = weapon_config_database[config_type][found_package].heading_depth;

  007c5	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  007cc	6b 4d ec 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  007d0	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  007d7	89 55 b4	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 2314 : 					search_weapon_system_heading.search_object = inst3d;

  007da	8b 45 e4	 mov	 eax, DWORD PTR _inst3d$[ebp]
  007dd	89 45 ac	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 2315 : 					search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  007e0	c7 45 b8 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 2316 : 
; 2317 : 					if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  007e7	8d 45 ac	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  007ea	50		 push	 eax
  007eb	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  007f0	83 f8 01	 cmp	 eax, 1
  007f3	0f 85 df 03 00
	00		 jne	 $LN20@update_ent

; 2318 : 					{
; 2319 : 						search_weapon_system_pitch.search_depth = weapon_config_database[config_type][found_package].pitch_depth;

  007f9	69 45 f4 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00800	6b 4d ec 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  00804	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  0080b	89 95 7c ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 2320 : 						search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  00811	c7 45 80 1c 00
	00 00		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 2321 : 
; 2322 : 						if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00818	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0081e	50		 push	 eax
  0081f	8d 4d ac	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  00822	51		 push	 ecx
  00823	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00828	83 f8 01	 cmp	 eax, 1
  0082b	0f 85 a7 03 00
	00		 jne	 $LN20@update_ent

; 2323 : 						{
; 2324 : 							vec3d* tracking_point = NULL;

  00831	c7 85 28 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _tracking_point$1[ebp], 0

; 2325 : 							get_3d_sub_object_world_viewpoint (search_weapon_system_pitch.result_sub_object, &vp);

  0083b	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _vp$[ebp]
  00841	50		 push	 eax
  00842	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  00848	51		 push	 ecx
  00849	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 2326 : 
; 2327 : 							if (get_local_entity_int_value(launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  0084e	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00852	74 0d		 je	 SHORT $LN71@update_ent
  00854	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00857	8b 08		 mov	 ecx, DWORD PTR [eax]
  00859	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv398[ebp], ecx
  0085f	eb 20		 jmp	 SHORT $LN72@update_ent
$LN71@update_ent:
  00861	68 17 09 00 00	 push	 2327			; 00000917H
  00866	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0086b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00871	52		 push	 edx
  00872	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00877	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv398[ebp], 0
$LN72@update_ent:
  00881	b8 01 00 00 00	 mov	 eax, 1
  00886	85 c0		 test	 eax, eax
  00888	74 0c		 je	 SHORT $LN73@update_ent
  0088a	c7 85 e0 fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv405[ebp], 156 ; 0000009cH
  00894	eb 20		 jmp	 SHORT $LN74@update_ent
$LN73@update_ent:
  00896	68 17 09 00 00	 push	 2327			; 00000917H
  0089b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  008a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008a6	51		 push	 ecx
  008a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008ac	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv405[ebp], 0
$LN74@update_ent:
  008b6	68 9c 00 00 00	 push	 156			; 0000009cH
  008bb	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  008be	52		 push	 edx
  008bf	69 85 e4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv398[ebp], 1116
  008c9	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv405[ebp]
  008cf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  008d6	ff d2		 call	 edx
  008d8	85 c0		 test	 eax, eax
  008da	0f 84 98 00 00
	00		 je	 $LN21@update_ent

; 2328 : 								tracking_point = get_local_entity_vec3d_ptr(launcher, VEC3D_TYPE_EO_TRACKING_POINT);

  008e0	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  008e4	74 0d		 je	 SHORT $LN75@update_ent
  008e6	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  008e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  008eb	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv418[ebp], ecx
  008f1	eb 27		 jmp	 SHORT $LN76@update_ent
$LN75@update_ent:
  008f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  008f9	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  008ff	52		 push	 edx
  00900	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00905	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0090a	50		 push	 eax
  0090b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00910	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv418[ebp], 0
$LN76@update_ent:
  0091a	b9 01 00 00 00	 mov	 ecx, 1
  0091f	85 c9		 test	 ecx, ecx
  00921	74 0c		 je	 SHORT $LN77@update_ent
  00923	c7 85 e0 fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv426[ebp], 3
  0092d	eb 27		 jmp	 SHORT $LN78@update_ent
$LN77@update_ent:
  0092f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00935	81 c2 80 00 00
	00		 add	 edx, 128		; 00000080H
  0093b	52		 push	 edx
  0093c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00941	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00946	50		 push	 eax
  00947	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0094c	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv426[ebp], 0
$LN78@update_ent:
  00956	6a 03		 push	 3
  00958	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0095b	51		 push	 ecx
  0095c	6b 95 e4 fe ff
	ff 60		 imul	 edx, DWORD PTR tv418[ebp], 96
  00963	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv426[ebp]
  00969	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00970	ff d1		 call	 ecx
  00972	89 85 28 ff ff
	ff		 mov	 DWORD PTR _tracking_point$1[ebp], eax
$LN21@update_ent:

; 2329 : 
; 2330 : 							if (tracking_point)  // use get vector to EO tracking point, if any

  00978	83 bd 28 ff ff
	ff 00		 cmp	 DWORD PTR _tracking_point$1[ebp], 0
  0097f	0f 84 1d 01 00
	00		 je	 $LN22@update_ent

; 2331 : 							{
; 2332 : 								ASSERT(get_local_entity_int_value(launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI);  // only player aircraft have tracking point

  00985	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00989	74 0d		 je	 SHORT $LN79@update_ent
  0098b	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0098e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00990	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv439[ebp], ecx
  00996	eb 27		 jmp	 SHORT $LN80@update_ent
$LN79@update_ent:
  00998	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  0099e	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  009a4	52		 push	 edx
  009a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009af	50		 push	 eax
  009b0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009b5	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv439[ebp], 0
$LN80@update_ent:
  009bf	b9 01 00 00 00	 mov	 ecx, 1
  009c4	85 c9		 test	 ecx, ecx
  009c6	74 0c		 je	 SHORT $LN81@update_ent
  009c8	c7 85 e0 fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv447[ebp], 156 ; 0000009cH
  009d2	eb 27		 jmp	 SHORT $LN82@update_ent
$LN81@update_ent:
  009d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  009da	81 c2 84 00 00
	00		 add	 edx, 132		; 00000084H
  009e0	52		 push	 edx
  009e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009eb	50		 push	 eax
  009ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f1	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv447[ebp], 0
$LN82@update_ent:
  009fb	68 9c 00 00 00	 push	 156			; 0000009cH
  00a00	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00a03	51		 push	 ecx
  00a04	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv439[ebp], 1116
  00a0e	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv447[ebp]
  00a14	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00a1b	ff d1		 call	 ecx
  00a1d	85 c0		 test	 eax, eax
  00a1f	75 1a		 jne	 SHORT $LN24@update_ent
  00a21	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00a26	05 84 00 00 00	 add	 eax, 132		; 00000084H
  00a2b	50		 push	 eax
  00a2c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a31	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@EJGGAOLJ@get_local_entity_int_value?$CIlaun@
  00a36	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN24@update_ent:

; 2333 : 
; 2334 : 								if (!eo_tracking_point_valid(tracking_point))

  00a3b	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  00a41	50		 push	 eax
  00a42	e8 00 00 00 00	 call	 ?eo_tracking_point_valid@@YGHPAUVEC3D@@@Z ; eo_tracking_point_valid
  00a47	85 c0		 test	 eax, eax
  00a49	75 05		 jne	 SHORT $LN25@update_ent

; 2335 : 									return;

  00a4b	e9 88 01 00 00	 jmp	 $LN1@update_ent
$LN25@update_ent:

; 2336 : 
; 2337 : 								weapon_to_target_vector.x = tracking_point->x - vp.position.x;

  00a50	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  00a56	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00a5a	f3 0f 5c 85 44
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  00a62	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _weapon_to_target_vector$[ebp], xmm0

; 2338 : 								weapon_to_target_vector.y = tracking_point->y - vp.position.y;

  00a6a	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  00a70	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00a75	f3 0f 5c 85 48
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+4]
  00a7d	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _weapon_to_target_vector$[ebp+4], xmm0

; 2339 : 								weapon_to_target_vector.z = tracking_point->z - vp.position.z;

  00a85	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _tracking_point$1[ebp]
  00a8b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a90	f3 0f 5c 85 4c
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  00a98	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _weapon_to_target_vector$[ebp+8], xmm0

; 2340 : 							}
; 2341 : 							else

  00aa0	eb 4e		 jmp	 SHORT $LN27@update_ent
$LN22@update_ent:

; 2342 : 							{
; 2343 : 								ASSERT(target);

  00aa2	83 bd 2c ff ff
	ff 00		 cmp	 DWORD PTR _target$[ebp], 0
  00aa9	75 1a		 jne	 SHORT $LN26@update_ent
  00aab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00ab0	05 8f 00 00 00	 add	 eax, 143		; 0000008fH
  00ab5	50		 push	 eax
  00ab6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00abb	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00ac0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN26@update_ent:

; 2344 : 								if (!get_pitch_device_to_target_vector (launcher, target, weapon_sub_type, &vp.position, &weapon_to_target_vector))

  00ac5	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _weapon_to_target_vector$[ebp]
  00acb	50		 push	 eax
  00acc	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp]
  00ad2	51		 push	 ecx
  00ad3	8b 55 f8	 mov	 edx, DWORD PTR _weapon_sub_type$[ebp]
  00ad6	52		 push	 edx
  00ad7	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _target$[ebp]
  00add	50		 push	 eax
  00ade	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00ae1	51		 push	 ecx
  00ae2	e8 00 00 00 00	 call	 ?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z ; get_pitch_device_to_target_vector
  00ae7	85 c0		 test	 eax, eax
  00ae9	75 05		 jne	 SHORT $LN27@update_ent

; 2345 : 									return;

  00aeb	e9 e8 00 00 00	 jmp	 $LN1@update_ent
$LN27@update_ent:

; 2346 : 							}
; 2347 : 
; 2348 : 							normalise_3d_vector (&weapon_to_target_vector);

  00af0	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _weapon_to_target_vector$[ebp]
  00af6	50		 push	 eax
  00af7	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  00afc	dd d8		 fstp	 ST(0)

; 2349 : 
; 2350 : 							*weapon_vector_ptr = vp.zv;

  00afe	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_vector_ptr$[ebp]
  00b04	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _vp$[ebp+36]
  00b0a	89 08		 mov	 DWORD PTR [eax], ecx
  00b0c	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR _vp$[ebp+40]
  00b12	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b15	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR _vp$[ebp+44]
  00b1b	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2351 : 							*weapon_to_target_vector_ptr = weapon_to_target_vector;

  00b1e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _weapon_to_target_vector_ptr$[ebp]
  00b24	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon_to_target_vector$[ebp]
  00b2a	89 08		 mov	 DWORD PTR [eax], ecx
  00b2c	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _weapon_to_target_vector$[ebp+4]
  00b32	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00b35	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _weapon_to_target_vector$[ebp+8]
  00b3b	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 2352 : 
; 2353 : 							set_local_entity_int_value (launcher, INT_TYPE_WEAPON_AND_TARGET_VECTORS_VALID, TRUE);

  00b3e	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00b42	74 0d		 je	 SHORT $LN83@update_ent
  00b44	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00b47	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b49	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv518[ebp], ecx
  00b4f	eb 27		 jmp	 SHORT $LN84@update_ent
$LN83@update_ent:
  00b51	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00b57	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00b5d	52		 push	 edx
  00b5e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b68	50		 push	 eax
  00b69	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b6e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv518[ebp], 0
$LN84@update_ent:
  00b78	b9 01 00 00 00	 mov	 ecx, 1
  00b7d	85 c9		 test	 ecx, ecx
  00b7f	74 0c		 je	 SHORT $LN85@update_ent
  00b81	c7 85 e0 fe ff
	ff 02 01 00 00	 mov	 DWORD PTR tv526[ebp], 258 ; 00000102H
  00b8b	eb 27		 jmp	 SHORT $LN86@update_ent
$LN85@update_ent:
  00b8d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z@4JA
  00b93	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00b99	52		 push	 edx
  00b9a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b9f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ba4	50		 push	 eax
  00ba5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00baa	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv526[ebp], 0
$LN86@update_ent:
  00bb4	6a 01		 push	 1
  00bb6	68 02 01 00 00	 push	 258			; 00000102H
  00bbb	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00bbe	51		 push	 ecx
  00bbf	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv518[ebp], 1116
  00bc9	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv526[ebp]
  00bcf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00bd6	ff d1		 call	 ecx
$LN20@update_ent:
$LN1@update_ent:

; 2354 : 						}
; 2355 : 					}
; 2356 : 				}
; 2357 : 			}
; 2358 : 		}
; 2359 : 	}
; 2360 : }

  00bd8	5f		 pop	 edi
  00bd9	5e		 pop	 esi
  00bda	5b		 pop	 ebx
  00bdb	8b e5		 mov	 esp, ebp
  00bdd	5d		 pop	 ebp
  00bde	c2 04 00	 ret	 4
?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ENDP ; update_entity_weapon_system_weapon_and_target_vectors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv270 = -288						; size = 4
tv176 = -288						; size = 4
tv150 = -288						; size = 4
tv129 = -288						; size = 4
tv76 = -288						; size = 4
tv284 = -284						; size = 4
tv262 = -284						; size = 4
tv168 = -284						; size = 4
tv142 = -284						; size = 4
tv89 = -284						; size = 4
tv69 = -284						; size = 4
_texture_animation_index$ = -216			; size = 4
_muzzle_flash_type$ = -212				; size = 4
_search_weapon_system_muzzle$ = -208			; size = 56
_search_weapon_system_pitch$ = -152			; size = 56
_search_weapon_system_heading$ = -96			; size = 56
_effect_inst3d$ = -40					; size = 4
_entity_inst3d$ = -36					; size = 4
_muzzle_rotation_angle$ = -32				; size = 4
_elapsed_time$ = -28					; size = 4
_duration$ = -24					; size = 4
_current_frame$ = -20					; size = 4
_num_frames$ = -16					; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_en$ = 8						; size = 4
?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z PROC ; animate_and_draw_entity_muzzle_flash_effect, COMDAT

; 2016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2017 : 	weapon_package_status
; 2018 : 		*package_status;
; 2019 : 
; 2020 : 	weapon_config_types
; 2021 : 		config_type;
; 2022 : 
; 2023 : 	int
; 2024 : 		package,
; 2025 : 		num_frames,
; 2026 : 		current_frame;
; 2027 : 
; 2028 : 	float
; 2029 : 		duration,
; 2030 : 		elapsed_time,
; 2031 : 		muzzle_rotation_angle;
; 2032 : 
; 2033 : 	object_3d_instance
; 2034 : 		*entity_inst3d,
; 2035 : 		*effect_inst3d;
; 2036 : 
; 2037 : 	object_3d_sub_object_search_data
; 2038 : 		search_weapon_system_heading,
; 2039 : 		search_weapon_system_pitch,
; 2040 : 		search_weapon_system_muzzle;
; 2041 : 
; 2042 : 	muzzle_flash_types
; 2043 : 		muzzle_flash_type;
; 2044 : 
; 2045 : 	texture_animation_indices
; 2046 : 		texture_animation_index;
; 2047 : 
; 2048 : 	if (!get_local_entity_int_value (en, INT_TYPE_ALIVE))

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	74 0d		 je	 SHORT $LN23@animate_an
  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv69[ebp], ecx
  0001d	eb 20		 jmp	 SHORT $LN24@animate_an
$LN23@animate_an:
  0001f	68 00 08 00 00	 push	 2048			; 00000800H
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00029	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00035	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv69[ebp], 0
$LN24@animate_an:
  0003f	b8 01 00 00 00	 mov	 eax, 1
  00044	85 c0		 test	 eax, eax
  00046	74 0c		 je	 SHORT $LN25@animate_an
  00048	c7 85 e0 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv76[ebp], 7
  00052	eb 20		 jmp	 SHORT $LN26@animate_an
$LN25@animate_an:
  00054	68 00 08 00 00	 push	 2048			; 00000800H
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00064	51		 push	 ecx
  00065	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006a	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv76[ebp], 0
$LN26@animate_an:
  00074	6a 07		 push	 7
  00076	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00079	52		 push	 edx
  0007a	69 85 e4 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv69[ebp], 1116
  00084	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv76[ebp]
  0008a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00091	ff d2		 call	 edx
  00093	85 c0		 test	 eax, eax
  00095	75 05		 jne	 SHORT $LN5@animate_an

; 2049 : 	{
; 2050 : 		return;

  00097	e9 45 06 00 00	 jmp	 $LN1@animate_an
$LN5@animate_an:

; 2051 : 	}
; 2052 : 
; 2053 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (en, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  0009c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a0	74 0d		 je	 SHORT $LN27@animate_an
  000a2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a7	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv89[ebp], ecx
  000ad	eb 24		 jmp	 SHORT $LN28@animate_an
$LN27@animate_an:
  000af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  000b5	83 c2 25	 add	 edx, 37			; 00000025H
  000b8	52		 push	 edx
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c9	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv89[ebp], 0
$LN28@animate_an:
  000d3	b9 01 00 00 00	 mov	 ecx, 1
  000d8	85 c9		 test	 ecx, ecx
  000da	74 0c		 je	 SHORT $LN29@animate_an
  000dc	c7 85 e0 fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv129[ebp], 19 ; 00000013H
  000e6	eb 24		 jmp	 SHORT $LN30@animate_an
$LN29@animate_an:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  000ee	83 c2 25	 add	 edx, 37			; 00000025H
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN30@animate_an:
  0010c	6a 13		 push	 19			; 00000013H
  0010e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00111	51		 push	 ecx
  00112	6b 95 e4 fe ff
	ff 50		 imul	 edx, DWORD PTR tv89[ebp], 80
  00119	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv129[ebp]
  0011f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00126	ff d1		 call	 ecx
  00128	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 2054 : 
; 2055 : 	if (package_status)

  0012b	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  0012f	0f 84 ac 05 00
	00		 je	 $LN3@animate_an

; 2056 : 	{
; 2057 : 		config_type = (weapon_config_types) get_local_entity_int_value (en, INT_TYPE_WEAPON_CONFIG_TYPE);

  00135	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00139	74 0d		 je	 SHORT $LN31@animate_an
  0013b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0013e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00140	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  00146	eb 24		 jmp	 SHORT $LN32@animate_an
$LN31@animate_an:
  00148	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  0014e	83 c2 29	 add	 edx, 41			; 00000029H
  00151	52		 push	 edx
  00152	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00162	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN32@animate_an:
  0016c	b9 01 00 00 00	 mov	 ecx, 1
  00171	85 c9		 test	 ecx, ecx
  00173	74 0c		 je	 SHORT $LN33@animate_an
  00175	c7 85 e0 fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv150[ebp], 261 ; 00000105H
  0017f	eb 24		 jmp	 SHORT $LN34@animate_an
$LN33@animate_an:
  00181	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  00187	83 c2 29	 add	 edx, 41			; 00000029H
  0018a	52		 push	 edx
  0018b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00195	50		 push	 eax
  00196	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019b	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN34@animate_an:
  001a5	68 05 01 00 00	 push	 261			; 00000105H
  001aa	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ad	51		 push	 ecx
  001ae	69 95 e4 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv142[ebp], 1116
  001b8	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001be	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001c5	ff d1		 call	 ecx
  001c7	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 2058 : 
; 2059 : 		ASSERT (weapon_config_type_valid (config_type));

  001ca	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  001ce	7c 09		 jl	 SHORT $LN8@animate_an
  001d0	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  001d7	7c 18		 jl	 SHORT $LN7@animate_an
$LN8@animate_an:
  001d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  001de	83 c0 2b	 add	 eax, 43			; 0000002bH
  001e1	50		 push	 eax
  001e2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  001ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@animate_an:

; 2060 : 
; 2061 : 		entity_inst3d = (object_3d_instance *) get_local_entity_ptr_value (en, PTR_TYPE_INSTANCE_3D_OBJECT);

  001f1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001f5	74 0d		 je	 SHORT $LN35@animate_an
  001f7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fc	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv168[ebp], ecx
  00202	eb 24		 jmp	 SHORT $LN36@animate_an
$LN35@animate_an:
  00204	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  0020a	83 c2 2d	 add	 edx, 45			; 0000002dH
  0020d	52		 push	 edx
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00213	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00218	50		 push	 eax
  00219	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv168[ebp], 0
$LN36@animate_an:
  00228	b9 01 00 00 00	 mov	 ecx, 1
  0022d	85 c9		 test	 ecx, ecx
  0022f	74 0c		 je	 SHORT $LN37@animate_an
  00231	c7 85 e0 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv176[ebp], 2
  0023b	eb 24		 jmp	 SHORT $LN38@animate_an
$LN37@animate_an:
  0023d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  00243	83 c2 2d	 add	 edx, 45			; 0000002dH
  00246	52		 push	 edx
  00247	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00257	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN38@animate_an:
  00261	6a 02		 push	 2
  00263	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00266	51		 push	 ecx
  00267	6b 95 e4 fe ff
	ff 50		 imul	 edx, DWORD PTR tv168[ebp], 80
  0026e	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  00274	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0027b	ff d1		 call	 ecx
  0027d	89 45 dc	 mov	 DWORD PTR _entity_inst3d$[ebp], eax

; 2062 : 
; 2063 : 		ASSERT (entity_inst3d);

  00280	83 7d dc 00	 cmp	 DWORD PTR _entity_inst3d$[ebp], 0
  00284	75 18		 jne	 SHORT $LN9@animate_an
  00286	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  0028b	83 c0 2f	 add	 eax, 47			; 0000002fH
  0028e	50		 push	 eax
  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00294	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KABNCNAA@entity_inst3d@
  00299	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@animate_an:

; 2064 : 
; 2065 : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  0029e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  002a5	eb 09		 jmp	 SHORT $LN4@animate_an
$LN2@animate_an:
  002a7	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  002aa	83 c0 01	 add	 eax, 1
  002ad	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@animate_an:
  002b0	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  002b4	0f 8d 27 04 00
	00		 jge	 $LN3@animate_an

; 2066 : 		{
; 2067 : 			if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  002ba	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  002c1	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  002c5	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  002cd	75 05		 jne	 SHORT $LN10@animate_an

; 2068 : 			{
; 2069 : 				break;

  002cf	e9 0d 04 00 00	 jmp	 $LN3@animate_an
$LN10@animate_an:

; 2070 : 			}
; 2071 : 
; 2072 : 			if (weapon_config_database[config_type][package].muzzle_flash_type != MUZZLE_FLASH_INVALID)

  002d4	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  002db	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  002df	83 bc 08 48 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+72], 0
  002e7	0f 84 ef 03 00
	00		 je	 $LN21@animate_an

; 2073 : 			{
; 2074 : 				if (package_status[package].muzzle_flash_timer != 0.0)

  002ed	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  002f0	c1 e0 04	 shl	 eax, 4
  002f3	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  002f6	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  002fc	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00304	9f		 lahf
  00305	f6 c4 44	 test	 ah, 68			; 00000044H
  00308	0f 8b ce 03 00
	00		 jnp	 $LN21@animate_an

; 2075 : 				{
; 2076 : 					//
; 2077 : 					// unlock timer
; 2078 : 					//
; 2079 : 
; 2080 : 					if (package_status[package].muzzle_flash_timer < 0.0)

  0030e	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00311	c1 e0 04	 shl	 eax, 4
  00314	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00317	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  0031d	0f 57 c9	 xorps	 xmm1, xmm1
  00320	66 0f 2f c8	 comisd	 xmm1, xmm0
  00324	76 25		 jbe	 SHORT $LN13@animate_an

; 2081 : 					{
; 2082 : 						package_status[package].muzzle_flash_timer = -package_status[package].muzzle_flash_timer;

  00326	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00329	c1 e0 04	 shl	 eax, 4
  0032c	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0032f	f3 0f 10 44 01
	0c		 movss	 xmm0, DWORD PTR [ecx+eax+12]
  00335	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0033c	8b 55 f4	 mov	 edx, DWORD PTR _package$[ebp]
  0033f	c1 e2 04	 shl	 edx, 4
  00342	8b 45 fc	 mov	 eax, DWORD PTR _package_status$[ebp]
  00345	f3 0f 11 44 10
	0c		 movss	 DWORD PTR [eax+edx+12], xmm0
$LN13@animate_an:

; 2083 : 					}
; 2084 : 
; 2085 : 					search_weapon_system_heading.search_depth = weapon_config_database[config_type][package].heading_depth;

  0034b	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00352	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00356	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  0035d	89 55 a8	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 2086 : 					search_weapon_system_heading.search_object = entity_inst3d;

  00360	8b 45 dc	 mov	 eax, DWORD PTR _entity_inst3d$[ebp]
  00363	89 45 a0	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 2087 : 					search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  00366	c7 45 ac 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 2088 : 
; 2089 : 					if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0036d	8d 45 a0	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  00370	50		 push	 eax
  00371	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00376	83 f8 01	 cmp	 eax, 1
  00379	0f 85 5d 03 00
	00		 jne	 $LN21@animate_an

; 2090 : 					{
; 2091 : 						search_weapon_system_pitch.search_depth = weapon_config_database[config_type][package].pitch_depth;

  0037f	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00386	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0038a	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  00391	89 95 70 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 2092 : 						search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  00397	c7 85 74 ff ff
	ff 1c 00 00 00	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 2093 : 
; 2094 : 						if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  003a1	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  003a7	50		 push	 eax
  003a8	8d 4d a0	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  003ab	51		 push	 ecx
  003ac	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  003b1	83 f8 01	 cmp	 eax, 1
  003b4	0f 85 22 03 00
	00		 jne	 $LN21@animate_an

; 2095 : 						{
; 2096 : 							search_weapon_system_muzzle.search_depth = weapon_config_database[config_type][package].muzzle_depth;

  003ba	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  003c1	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  003c5	8b 94 08 10 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+16]
  003cc	89 95 38 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_muzzle$[ebp+8], edx

; 2097 : 							search_weapon_system_muzzle.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_MUZZLE;

  003d2	c7 85 3c ff ff
	ff 1f 00 00 00	 mov	 DWORD PTR _search_weapon_system_muzzle$[ebp+12], 31 ; 0000001fH

; 2098 : 
; 2099 : 							if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_pitch, &search_weapon_system_muzzle) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  003dc	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_muzzle$[ebp]
  003e2	50		 push	 eax
  003e3	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp]
  003e9	51		 push	 ecx
  003ea	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  003ef	83 f8 01	 cmp	 eax, 1
  003f2	0f 85 e4 02 00
	00		 jne	 $LN21@animate_an

; 2100 : 							{
; 2101 : 								muzzle_flash_type = weapon_config_database[config_type][package].muzzle_flash_type;

  003f8	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  003ff	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00403	8b 94 08 48 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+72]
  0040a	89 95 2c ff ff
	ff		 mov	 DWORD PTR _muzzle_flash_type$[ebp], edx

; 2102 : 
; 2103 : 								effect_inst3d = construct_temporary_3d_object (muzzle_flash_animation_database[muzzle_flash_type].object_3d_index_number, TRUE);

  00410	6a 01		 push	 1
  00412	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _muzzle_flash_type$[ebp]
  00418	c1 e0 04	 shl	 eax, 4
  0041b	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A[eax]
  00421	51		 push	 ecx
  00422	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  00427	89 45 d8	 mov	 DWORD PTR _effect_inst3d$[ebp], eax

; 2104 : 
; 2105 : 								if (effect_inst3d)

  0042a	83 7d d8 00	 cmp	 DWORD PTR _effect_inst3d$[ebp], 0
  0042e	0f 84 a8 02 00
	00		 je	 $LN21@animate_an

; 2106 : 								{
; 2107 : 									//
; 2108 : 									// ensure that the 3D instance viewpoint is up to date (the object may not have been drawn)
; 2109 : 									//
; 2110 : 
; 2111 : 									get_local_entity_vec3d (en, VEC3D_TYPE_POSITION, &entity_inst3d->vp.position);

  00434	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00438	74 0d		 je	 SHORT $LN39@animate_an
  0043a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0043d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0043f	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv262[ebp], ecx
  00445	eb 24		 jmp	 SHORT $LN40@animate_an
$LN39@animate_an:
  00447	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  0044d	83 c2 5f	 add	 edx, 95			; 0000005fH
  00450	52		 push	 edx
  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0045b	50		 push	 eax
  0045c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00461	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv262[ebp], 0
$LN40@animate_an:
  0046b	b9 01 00 00 00	 mov	 ecx, 1
  00470	85 c9		 test	 ecx, ecx
  00472	74 0c		 je	 SHORT $LN41@animate_an
  00474	c7 85 e0 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv270[ebp], 8
  0047e	eb 24		 jmp	 SHORT $LN42@animate_an
$LN41@animate_an:
  00480	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  00486	83 c2 5f	 add	 edx, 95			; 0000005fH
  00489	52		 push	 edx
  0048a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00494	50		 push	 eax
  00495	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0049a	c7 85 e0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv270[ebp], 0
$LN42@animate_an:
  004a4	8b 4d dc	 mov	 ecx, DWORD PTR _entity_inst3d$[ebp]
  004a7	83 c1 08	 add	 ecx, 8
  004aa	51		 push	 ecx
  004ab	6a 08		 push	 8
  004ad	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004b0	52		 push	 edx
  004b1	6b 85 e4 fe ff
	ff 60		 imul	 eax, DWORD PTR tv262[ebp], 96
  004b8	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR tv270[ebp]
  004be	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004c5	ff d2		 call	 edx

; 2112 : 
; 2113 : 									get_local_entity_attitude_matrix (en, entity_inst3d->vp.attitude);

  004c7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004cb	74 0d		 je	 SHORT $LN43@animate_an
  004cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d2	89 8d e4 fe ff
	ff		 mov	 DWORD PTR tv284[ebp], ecx
  004d8	eb 24		 jmp	 SHORT $LN44@animate_an
$LN43@animate_an:
  004da	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  004e0	83 c2 61	 add	 edx, 97			; 00000061H
  004e3	52		 push	 edx
  004e4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ee	50		 push	 eax
  004ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f4	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv284[ebp], 0
$LN44@animate_an:
  004fe	8b 4d dc	 mov	 ecx, DWORD PTR _entity_inst3d$[ebp]
  00501	83 c1 14	 add	 ecx, 20			; 00000014H
  00504	51		 push	 ecx
  00505	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00508	52		 push	 edx
  00509	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv284[ebp]
  0050f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00516	ff d1		 call	 ecx

; 2114 : 
; 2115 : 									//
; 2116 : 									// viewpoint
; 2117 : 									//
; 2118 : 
; 2119 : 									get_3d_sub_object_world_viewpoint (search_weapon_system_muzzle.result_sub_object, &effect_inst3d->vp);

  00518	8b 45 d8	 mov	 eax, DWORD PTR _effect_inst3d$[ebp]
  0051b	83 c0 08	 add	 eax, 8
  0051e	50		 push	 eax
  0051f	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_muzzle$[ebp+4]
  00525	51		 push	 ecx
  00526	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 2120 : 
; 2121 : 									//
; 2122 : 									// timing info
; 2123 : 									//
; 2124 : 
; 2125 : 									duration = muzzle_flash_animation_database[muzzle_flash_type].muzzle_flash_duration;

  0052b	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _muzzle_flash_type$[ebp]
  00531	c1 e0 04	 shl	 eax, 4
  00534	f3 0f 10 80 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A[eax+12]
  0053c	f3 0f 11 45 e8	 movss	 DWORD PTR _duration$[ebp], xmm0

; 2126 : 
; 2127 : 									elapsed_time = duration - package_status[package].muzzle_flash_timer;

  00541	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00544	c1 e0 04	 shl	 eax, 4
  00547	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0054a	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _duration$[ebp]
  0054f	f3 0f 5c 44 01
	0c		 subss	 xmm0, DWORD PTR [ecx+eax+12]
  00555	f3 0f 11 45 e4	 movss	 DWORD PTR _elapsed_time$[ebp], xmm0

; 2128 : 
; 2129 : 									ASSERT (elapsed_time >= 0.0);

  0055a	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _elapsed_time$[ebp]
  0055f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00567	73 18		 jae	 SHORT $LN18@animate_an
  00569	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z@4JA
  0056e	83 c0 71	 add	 eax, 113		; 00000071H
  00571	50		 push	 eax
  00572	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00577	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HENJBLJH@elapsed_time?5?$DO?$DN?50?40@
  0057c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@animate_an:

; 2130 : 
; 2131 : 									//
; 2132 : 									// animate texture 1
; 2133 : 									//
; 2134 : 
; 2135 : 									texture_animation_index = muzzle_flash_animation_database[muzzle_flash_type].texture_animation_index1;

  00581	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _muzzle_flash_type$[ebp]
  00587	c1 e0 04	 shl	 eax, 4
  0058a	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A[eax+4]
  00590	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _texture_animation_index$[ebp], ecx

; 2136 : 
; 2137 : 									if (texture_animation_index != TEXTURE_ANIMATION_INDEX_LAST)

  00596	81 bd 28 ff ff
	ff 92 00 00 00	 cmp	 DWORD PTR _texture_animation_index$[ebp], 146 ; 00000092H
  005a0	74 39		 je	 SHORT $LN19@animate_an

; 2138 : 									{
; 2139 : 										num_frames = get_texture_animation_number_of_frames (texture_animation_index);

  005a2	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _texture_animation_index$[ebp]
  005a8	50		 push	 eax
  005a9	e8 00 00 00 00	 call	 ?get_texture_animation_number_of_frames@@YGHW4TEXTURE_ANIMATION_INDICES@@@Z ; get_texture_animation_number_of_frames
  005ae	89 45 f0	 mov	 DWORD PTR _num_frames$[ebp], eax

; 2140 : 
; 2141 : 										current_frame = (int) ((elapsed_time * num_frames) / duration);

  005b1	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _num_frames$[ebp]
  005b6	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _elapsed_time$[ebp]
  005bb	f3 0f 5e 45 e8	 divss	 xmm0, DWORD PTR _duration$[ebp]
  005c0	f3 0f 2c c0	 cvttss2si eax, xmm0
  005c4	89 45 ec	 mov	 DWORD PTR _current_frame$[ebp], eax

; 2142 : 
; 2143 : 										set_texture_animation_frame_on_object (effect_inst3d, texture_animation_index, current_frame);

  005c7	8b 45 ec	 mov	 eax, DWORD PTR _current_frame$[ebp]
  005ca	50		 push	 eax
  005cb	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _texture_animation_index$[ebp]
  005d1	51		 push	 ecx
  005d2	8b 55 d8	 mov	 edx, DWORD PTR _effect_inst3d$[ebp]
  005d5	52		 push	 edx
  005d6	e8 00 00 00 00	 call	 ?set_texture_animation_frame_on_object@@YGHPAUOBJECT_3D_INSTANCE@@W4TEXTURE_ANIMATION_INDICES@@H@Z ; set_texture_animation_frame_on_object
$LN19@animate_an:

; 2144 : 									}
; 2145 : 
; 2146 : 									//
; 2147 : 									// animate texture 2
; 2148 : 									//
; 2149 : 
; 2150 : 									texture_animation_index = muzzle_flash_animation_database[muzzle_flash_type].texture_animation_index2;

  005db	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR _muzzle_flash_type$[ebp]
  005e1	c1 e0 04	 shl	 eax, 4
  005e4	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A[eax+8]
  005ea	89 8d 28 ff ff
	ff		 mov	 DWORD PTR _texture_animation_index$[ebp], ecx

; 2151 : 
; 2152 : 									if (texture_animation_index != TEXTURE_ANIMATION_INDEX_LAST)

  005f0	81 bd 28 ff ff
	ff 92 00 00 00	 cmp	 DWORD PTR _texture_animation_index$[ebp], 146 ; 00000092H
  005fa	74 39		 je	 SHORT $LN20@animate_an

; 2153 : 									{
; 2154 : 										num_frames = get_texture_animation_number_of_frames (texture_animation_index);

  005fc	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR _texture_animation_index$[ebp]
  00602	50		 push	 eax
  00603	e8 00 00 00 00	 call	 ?get_texture_animation_number_of_frames@@YGHW4TEXTURE_ANIMATION_INDICES@@@Z ; get_texture_animation_number_of_frames
  00608	89 45 f0	 mov	 DWORD PTR _num_frames$[ebp], eax

; 2155 : 
; 2156 : 										current_frame = (int) ((elapsed_time * num_frames) / duration);

  0060b	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _num_frames$[ebp]
  00610	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _elapsed_time$[ebp]
  00615	f3 0f 5e 45 e8	 divss	 xmm0, DWORD PTR _duration$[ebp]
  0061a	f3 0f 2c c0	 cvttss2si eax, xmm0
  0061e	89 45 ec	 mov	 DWORD PTR _current_frame$[ebp], eax

; 2157 : 
; 2158 : 										set_texture_animation_frame_on_object (effect_inst3d, texture_animation_index, current_frame);

  00621	8b 45 ec	 mov	 eax, DWORD PTR _current_frame$[ebp]
  00624	50		 push	 eax
  00625	8b 8d 28 ff ff
	ff		 mov	 ecx, DWORD PTR _texture_animation_index$[ebp]
  0062b	51		 push	 ecx
  0062c	8b 55 d8	 mov	 edx, DWORD PTR _effect_inst3d$[ebp]
  0062f	52		 push	 edx
  00630	e8 00 00 00 00	 call	 ?set_texture_animation_frame_on_object@@YGHPAUOBJECT_3D_INSTANCE@@W4TEXTURE_ANIMATION_INDICES@@H@Z ; set_texture_animation_frame_on_object
$LN20@animate_an:

; 2159 : 									}
; 2160 : 
; 2161 : 									//
; 2162 : 									// draw
; 2163 : 									//
; 2164 : 
; 2165 : 									effect_inst3d->object_has_shadow = FALSE;

  00635	8b 45 d8	 mov	 eax, DWORD PTR _effect_inst3d$[ebp]
  00638	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0063b	83 e1 fb	 and	 ecx, -5			; fffffffbH
  0063e	8b 55 d8	 mov	 edx, DWORD PTR _effect_inst3d$[ebp]
  00641	89 4a 50	 mov	 DWORD PTR [edx+80], ecx

; 2166 : 
; 2167 : 									insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, effect_inst3d);

  00644	51		 push	 ecx
  00645	0f 57 c0	 xorps	 xmm0, xmm0
  00648	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0064d	8b 45 d8	 mov	 eax, DWORD PTR _effect_inst3d$[ebp]
  00650	50		 push	 eax
  00651	6a 01		 push	 1
  00653	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene

; 2168 : 
; 2169 : 									//
; 2170 : 									// rotate muzzle
; 2171 : 									//
; 2172 : 
; 2173 : 									muzzle_rotation_angle = weapon_config_database[config_type][package].muzzle_rotate_rate;

  00658	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0065f	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  00663	f3 0f 10 84 08
	38 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+56]
  0066c	f3 0f 11 45 e0	 movss	 DWORD PTR _muzzle_rotation_angle$[ebp], xmm0

; 2174 : 
; 2175 : 									if (muzzle_rotation_angle != 0.0)

  00671	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _muzzle_rotation_angle$[ebp]
  00676	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0067e	9f		 lahf
  0067f	f6 c4 44	 test	 ah, 68			; 00000044H
  00682	7b 58		 jnp	 SHORT $LN21@animate_an

; 2176 : 									{
; 2177 : 										muzzle_rotation_angle *= get_delta_time ();

  00684	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _muzzle_rotation_angle$[ebp]
  00689	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00691	f3 0f 11 45 e0	 movss	 DWORD PTR _muzzle_rotation_angle$[ebp], xmm0

; 2178 : 
; 2179 : 										muzzle_rotation_angle += search_weapon_system_muzzle.result_sub_object->relative_roll;

  00696	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _search_weapon_system_muzzle$[ebp+4]
  0069c	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _muzzle_rotation_angle$[ebp]
  006a1	f3 0f 58 40 20	 addss	 xmm0, DWORD PTR [eax+32]
  006a6	f3 0f 11 45 e0	 movss	 DWORD PTR _muzzle_rotation_angle$[ebp], xmm0

; 2180 : 
; 2181 : 										muzzle_rotation_angle = wrap_angle (muzzle_rotation_angle);

  006ab	51		 push	 ecx
  006ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40c90fdb
  006b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b9	51		 push	 ecx
  006ba	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _muzzle_rotation_angle$[ebp]
  006bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c4	e8 00 00 00 00	 call	 ?fmod@@YGMMM@Z		; fmod
  006c9	d9 5d e0	 fstp	 DWORD PTR _muzzle_rotation_angle$[ebp]

; 2182 : 
; 2183 : 										search_weapon_system_muzzle.result_sub_object->relative_roll = muzzle_rotation_angle;

  006cc	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _search_weapon_system_muzzle$[ebp+4]
  006d2	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _muzzle_rotation_angle$[ebp]
  006d7	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0
$LN21@animate_an:

; 2184 : 									}
; 2185 : 								}
; 2186 : 							}
; 2187 : 						}
; 2188 : 					}
; 2189 : 				}
; 2190 : 			}
; 2191 : 		}

  006dc	e9 c6 fb ff ff	 jmp	 $LN2@animate_an
$LN3@animate_an:
$LN1@animate_an:

; 2192 : 	}
; 2193 : }

  006e1	5f		 pop	 edi
  006e2	5e		 pop	 esi
  006e3	5b		 pop	 ebx
  006e4	8b e5		 mov	 esp, ebp
  006e6	5d		 pop	 ebp
  006e7	c2 04 00	 ret	 4
?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ENDP ; animate_and_draw_entity_muzzle_flash_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv1674 = -488						; size = 4
tv1660 = -488						; size = 4
tv1416 = -488						; size = 4
tv1091 = -484						; size = 4
tv1065 = -484						; size = 4
tv969 = -484						; size = 4
tv945 = -484						; size = 4
tv917 = -484						; size = 4
tv897 = -484						; size = 4
tv876 = -484						; size = 4
tv857 = -484						; size = 4
tv836 = -484						; size = 4
tv814 = -484						; size = 4
tv741 = -484						; size = 4
tv596 = -484						; size = 4
tv577 = -484						; size = 4
tv559 = -484						; size = 4
tv537 = -484						; size = 4
tv504 = -484						; size = 4
tv455 = -484						; size = 4
tv416 = -484						; size = 4
tv312 = -484						; size = 4
tv269 = -484						; size = 4
tv234 = -484						; size = 4
tv209 = -484						; size = 4
tv183 = -484						; size = 4
tv156 = -484						; size = 4
tv135 = -484						; size = 4
tv83 = -484						; size = 4
tv1092 = -480						; size = 4
tv1066 = -480						; size = 4
tv970 = -480						; size = 4
tv946 = -480						; size = 4
tv909 = -480						; size = 4
tv889 = -480						; size = 4
tv869 = -480						; size = 4
tv850 = -480						; size = 4
tv828 = -480						; size = 4
tv806 = -480						; size = 4
tv733 = -480						; size = 4
tv650 = -480						; size = 4
tv647 = -480						; size = 4
tv605 = -480						; size = 4
tv589 = -480						; size = 4
tv570 = -480						; size = 4
tv551 = -480						; size = 4
tv538 = -480						; size = 4
tv505 = -480						; size = 4
tv447 = -480						; size = 4
tv409 = -480						; size = 4
tv304 = -480						; size = 4
tv261 = -480						; size = 4
tv248 = -480						; size = 4
tv226 = -480						; size = 4
tv201 = -480						; size = 4
tv175 = -480						; size = 4
tv148 = -480						; size = 4
tv95 = -480						; size = 4
tv75 = -480						; size = 4
$T1 = -476						; size = 4
_control_package$2 = -408				; size = 4
_i$3 = -404						; size = 4
_mask$4 = -400						; size = 4
_pitch_share_mask$5 = -396				; size = 4
_control_package$6 = -392				; size = 4
_i$7 = -388						; size = 4
_mask$8 = -384						; size = 4
_heading_share_mask$9 = -380				; size = 4
_tracking_vector$10 = -376				; size = 12
_offset_vector$11 = -364				; size = 12
_heading$12 = -352					; size = 4
_dz$13 = -348						; size = 4
_dx$14 = -344						; size = 4
_m$15 = -340						; size = 36
_range$16 = -304					; size = 4
_height_diff$17 = -300					; size = 4
_dummy$18 = -296					; size = 4
_pitch$19 = -292					; size = 4
_tracking_point$20 = -288				; size = 4
_use_eo_sight_for_direction$21 = -284			; size = 4
_min_pitch$22 = -280					; size = 4
_offset_vector$23 = -276				; size = 12
_mask$24 = -264						; size = 4
_weapon_system_pitch_returned$25 = -260			; size = 4
_weapon_system_heading_returned$26 = -256		; size = 4
_make_selected_weapon_system_ready$27 = -252		; size = 4
_found_weapon_system_ready_device$28 = -248		; size = 4
_flat_range$ = -244					; size = 4
_new_pitch_offset$ = -240				; size = 4
_new_heading_offset$ = -236				; size = 4
_pitch_rate_delta_time$ = -232				; size = 4
_heading_rate_delta_time$ = -228			; size = 4
_delta_pitch_offset$ = -224				; size = 4
_delta_heading_offset$ = -220				; size = 4
_required_pitch_offset$ = -216				; size = 4
_required_heading_offset$ = -212			; size = 4
_selected_weapon_mask$ = -208				; size = 4
_selected_weapon_system_ready$ = -204			; size = 4
_located_heading_and_pitch_devices$ = -200		; size = 4
_package$ = -196					; size = 4
_target_vector$ = -192					; size = 12
_vp$ = -180						; size = 48
_search_weapon_system_pitch$ = -132			; size = 56
_search_weapon_system_heading$ = -76			; size = 56
_inst3d$ = -20						; size = 4
_config_type$ = -16					; size = 4
_package_status$ = -12					; size = 4
_selected_weapon$ = -8					; size = 4
_target$ = -4						; size = 4
_source$ = 8						; size = 4
?update_entity_weapon_systems@@YGXPAUENTITY@@@Z PROC	; update_entity_weapon_systems, COMDAT

; 1250 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 01 00
	00		 sub	 esp, 488		; 000001e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1251 : 	entity
; 1252 : 		*target;
; 1253 : 
; 1254 : 	entity_sub_types
; 1255 : 		selected_weapon;
; 1256 : 
; 1257 : 	weapon_package_status
; 1258 : 		*package_status;
; 1259 : 
; 1260 : 	weapon_config_types
; 1261 : 		config_type;
; 1262 : 
; 1263 : 	object_3d_instance
; 1264 : 		*inst3d;
; 1265 : 
; 1266 : 	object_3d_sub_object_search_data
; 1267 : 		search_weapon_system_heading,
; 1268 : 		search_weapon_system_pitch;
; 1269 : 
; 1270 : 	viewpoint
; 1271 : 		vp;
; 1272 : 
; 1273 : 	vec3d
; 1274 : 		target_vector;
; 1275 : 
; 1276 : 	int
; 1277 : 		package,
; 1278 : 		located_heading_and_pitch_devices,
; 1279 : 		selected_weapon_system_ready;
; 1280 : 
; 1281 : 	unsigned int
; 1282 : 		selected_weapon_mask;
; 1283 : 
; 1284 : 	float
; 1285 : 		required_heading_offset,
; 1286 : 		required_pitch_offset,
; 1287 : 		delta_heading_offset,
; 1288 : 		delta_pitch_offset,
; 1289 : 		heading_rate_delta_time,
; 1290 : 		pitch_rate_delta_time,
; 1291 : 		new_heading_offset,
; 1292 : 		new_pitch_offset,
; 1293 : 		flat_range;
; 1294 : 
; 1295 : 	ASSERT (source);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00010	75 18		 jne	 SHORT $LN28@update_ent
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 2d	 add	 eax, 45			; 0000002dH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06OEKOLKIL@source@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN28@update_ent:

; 1296 : 
; 1297 : 	//
; 1298 : 	// assume that the selected weapon system is ready
; 1299 : 	//
; 1300 : 
; 1301 : 	selected_weapon_system_ready = TRUE;

  0002a	c7 85 34 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _selected_weapon_system_ready$[ebp], 1

; 1302 : 
; 1303 : 	set_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON_SYSTEM_READY, TRUE);

  00034	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00038	74 0d		 je	 SHORT $LN122@update_ent
  0003a	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv75[ebp], ecx
  00045	eb 24		 jmp	 SHORT $LN123@update_ent
$LN122@update_ent:
  00047	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0004d	83 c2 35	 add	 edx, 53			; 00000035H
  00050	52		 push	 edx
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00061	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv75[ebp], 0
$LN123@update_ent:
  0006b	b9 01 00 00 00	 mov	 ecx, 1
  00070	85 c9		 test	 ecx, ecx
  00072	74 0c		 je	 SHORT $LN124@update_ent
  00074	c7 85 1c fe ff
	ff b9 00 00 00	 mov	 DWORD PTR tv83[ebp], 185 ; 000000b9H
  0007e	eb 24		 jmp	 SHORT $LN125@update_ent
$LN124@update_ent:
  00080	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00086	83 c2 35	 add	 edx, 53			; 00000035H
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009a	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv83[ebp], 0
$LN125@update_ent:
  000a4	6a 01		 push	 1
  000a6	68 b9 00 00 00	 push	 185			; 000000b9H
  000ab	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  000ae	51		 push	 ecx
  000af	69 95 20 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv75[ebp], 1116
  000b9	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv83[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx

; 1304 : 
; 1305 : 	////////////////////////////////////////
; 1306 : 
; 1307 : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (source, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  000c8	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  000cc	74 0d		 je	 SHORT $LN126@update_ent
  000ce	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  000d1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d3	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000d9	eb 24		 jmp	 SHORT $LN127@update_ent
$LN126@update_ent:
  000db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  000e1	83 c2 39	 add	 edx, 57			; 00000039H
  000e4	52		 push	 edx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f5	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN127@update_ent:
  000ff	b9 01 00 00 00	 mov	 ecx, 1
  00104	85 c9		 test	 ecx, ecx
  00106	74 0c		 je	 SHORT $LN128@update_ent
  00108	c7 85 1c fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv135[ebp], 19 ; 00000013H
  00112	eb 24		 jmp	 SHORT $LN129@update_ent
$LN128@update_ent:
  00114	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0011a	83 c2 39	 add	 edx, 57			; 00000039H
  0011d	52		 push	 edx
  0011e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00123	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012e	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN129@update_ent:
  00138	6a 13		 push	 19			; 00000013H
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0013d	51		 push	 ecx
  0013e	6b 95 20 fe ff
	ff 50		 imul	 edx, DWORD PTR tv95[ebp], 80
  00145	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv135[ebp]
  0014b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00152	ff d1		 call	 ecx
  00154	89 45 f4	 mov	 DWORD PTR _package_status$[ebp], eax

; 1308 : 
; 1309 : 	if (package_status)

  00157	83 7d f4 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  0015b	0f 84 5a 20 00
	00		 je	 $LN12@update_ent

; 1310 : 	{
; 1311 : 		////////////////////////////////////////
; 1312 : 
; 1313 : 		config_type = (weapon_config_types) get_local_entity_int_value (source, INT_TYPE_WEAPON_CONFIG_TYPE);

  00161	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00165	74 0d		 je	 SHORT $LN130@update_ent
  00167	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0016a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016c	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv148[ebp], ecx
  00172	eb 24		 jmp	 SHORT $LN131@update_ent
$LN130@update_ent:
  00174	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0017a	83 c2 3f	 add	 edx, 63			; 0000003fH
  0017d	52		 push	 edx
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00183	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018e	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN131@update_ent:
  00198	b9 01 00 00 00	 mov	 ecx, 1
  0019d	85 c9		 test	 ecx, ecx
  0019f	74 0c		 je	 SHORT $LN132@update_ent
  001a1	c7 85 1c fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv156[ebp], 261 ; 00000105H
  001ab	eb 24		 jmp	 SHORT $LN133@update_ent
$LN132@update_ent:
  001ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  001b3	83 c2 3f	 add	 edx, 63			; 0000003fH
  001b6	52		 push	 edx
  001b7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c1	50		 push	 eax
  001c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c7	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN133@update_ent:
  001d1	68 05 01 00 00	 push	 261			; 00000105H
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  001d9	51		 push	 ecx
  001da	69 95 20 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv148[ebp], 1116
  001e4	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv156[ebp]
  001ea	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f1	ff d1		 call	 ecx
  001f3	89 45 f0	 mov	 DWORD PTR _config_type$[ebp], eax

; 1314 : 
; 1315 : 		ASSERT (weapon_config_type_valid (config_type));

  001f6	83 7d f0 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  001fa	7c 09		 jl	 SHORT $LN31@update_ent
  001fc	81 7d f0 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  00203	7c 18		 jl	 SHORT $LN30@update_ent
$LN31@update_ent:
  00205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0020a	83 c0 41	 add	 eax, 65			; 00000041H
  0020d	50		 push	 eax
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00218	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN30@update_ent:

; 1316 : 
; 1317 : 		if (config_type != WEAPON_CONFIG_TYPE_UNARMED)

  0021d	83 7d f0 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00221	0f 84 94 1f 00
	00		 je	 $LN12@update_ent

; 1318 : 		{
; 1319 : 			selected_weapon = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  00227	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  0022b	74 0d		 je	 SHORT $LN134@update_ent
  0022d	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00230	8b 08		 mov	 ecx, DWORD PTR [eax]
  00232	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv175[ebp], ecx
  00238	eb 24		 jmp	 SHORT $LN135@update_ent
$LN134@update_ent:
  0023a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00240	83 c2 45	 add	 edx, 69			; 00000045H
  00243	52		 push	 edx
  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00254	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN135@update_ent:
  0025e	b9 01 00 00 00	 mov	 ecx, 1
  00263	85 c9		 test	 ecx, ecx
  00265	74 0c		 je	 SHORT $LN136@update_ent
  00267	c7 85 1c fe ff
	ff b8 00 00 00	 mov	 DWORD PTR tv183[ebp], 184 ; 000000b8H
  00271	eb 24		 jmp	 SHORT $LN137@update_ent
$LN136@update_ent:
  00273	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00279	83 c2 45	 add	 edx, 69			; 00000045H
  0027c	52		 push	 edx
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028d	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN137@update_ent:
  00297	68 b8 00 00 00	 push	 184			; 000000b8H
  0029c	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0029f	51		 push	 ecx
  002a0	69 95 20 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv175[ebp], 1116
  002aa	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv183[ebp]
  002b0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002b7	ff d1		 call	 ecx
  002b9	89 45 f8	 mov	 DWORD PTR _selected_weapon$[ebp], eax

; 1320 : 
; 1321 : 			ASSERT (entity_sub_type_weapon_valid (selected_weapon));

  002bc	83 7d f8 00	 cmp	 DWORD PTR _selected_weapon$[ebp], 0
  002c0	7c 06		 jl	 SHORT $LN34@update_ent
  002c2	83 7d f8 4c	 cmp	 DWORD PTR _selected_weapon$[ebp], 76 ; 0000004cH
  002c6	7c 18		 jl	 SHORT $LN33@update_ent
$LN34@update_ent:
  002c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  002cd	83 c0 47	 add	 eax, 71			; 00000047H
  002d0	50		 push	 eax
  002d1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KLNCKIOI@entity_sub_type_weapon_valid?5?$CIs@
  002db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN33@update_ent:

; 1322 : 
; 1323 : 			////////////////////////////////////////
; 1324 : 
; 1325 : 			inst3d = (object_3d_instance *) get_local_entity_ptr_value (source, PTR_TYPE_INSTANCE_3D_OBJECT);

  002e0	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  002e4	74 0d		 je	 SHORT $LN138@update_ent
  002e6	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  002e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002eb	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv201[ebp], ecx
  002f1	eb 24		 jmp	 SHORT $LN139@update_ent
$LN138@update_ent:
  002f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  002f9	83 c2 4b	 add	 edx, 75			; 0000004bH
  002fc	52		 push	 edx
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030d	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv201[ebp], 0
$LN139@update_ent:
  00317	b9 01 00 00 00	 mov	 ecx, 1
  0031c	85 c9		 test	 ecx, ecx
  0031e	74 0c		 je	 SHORT $LN140@update_ent
  00320	c7 85 1c fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv209[ebp], 2
  0032a	eb 24		 jmp	 SHORT $LN141@update_ent
$LN140@update_ent:
  0032c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00332	83 c2 4b	 add	 edx, 75			; 0000004bH
  00335	52		 push	 edx
  00336	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0033b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00346	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv209[ebp], 0
$LN141@update_ent:
  00350	6a 02		 push	 2
  00352	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00355	51		 push	 ecx
  00356	6b 95 20 fe ff
	ff 50		 imul	 edx, DWORD PTR tv201[ebp], 80
  0035d	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv209[ebp]
  00363	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0036a	ff d1		 call	 ecx
  0036c	89 45 ec	 mov	 DWORD PTR _inst3d$[ebp], eax

; 1326 : 
; 1327 : 			ASSERT (inst3d);

  0036f	83 7d ec 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  00373	75 18		 jne	 SHORT $LN35@update_ent
  00375	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0037a	83 c0 4d	 add	 eax, 77			; 0000004dH
  0037d	50		 push	 eax
  0037e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00383	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  00388	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN35@update_ent:

; 1328 : 
; 1329 : 			get_local_entity_vec3d (source, VEC3D_TYPE_POSITION, &inst3d->vp.position);

  0038d	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00391	74 0d		 je	 SHORT $LN142@update_ent
  00393	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00396	8b 08		 mov	 ecx, DWORD PTR [eax]
  00398	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv226[ebp], ecx
  0039e	eb 24		 jmp	 SHORT $LN143@update_ent
$LN142@update_ent:
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  003a6	83 c2 4f	 add	 edx, 79			; 0000004fH
  003a9	52		 push	 edx
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b4	50		 push	 eax
  003b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ba	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv226[ebp], 0
$LN143@update_ent:
  003c4	b9 01 00 00 00	 mov	 ecx, 1
  003c9	85 c9		 test	 ecx, ecx
  003cb	74 0c		 je	 SHORT $LN144@update_ent
  003cd	c7 85 1c fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv234[ebp], 8
  003d7	eb 24		 jmp	 SHORT $LN145@update_ent
$LN144@update_ent:
  003d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  003df	83 c2 4f	 add	 edx, 79			; 0000004fH
  003e2	52		 push	 edx
  003e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  003ed	50		 push	 eax
  003ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f3	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN145@update_ent:
  003fd	8b 4d ec	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  00400	83 c1 08	 add	 ecx, 8
  00403	51		 push	 ecx
  00404	6a 08		 push	 8
  00406	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00409	52		 push	 edx
  0040a	6b 85 20 fe ff
	ff 60		 imul	 eax, DWORD PTR tv226[ebp], 96
  00411	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv234[ebp]
  00417	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  0041e	ff d2		 call	 edx

; 1330 : 
; 1331 : 			get_local_entity_attitude_matrix (source, inst3d->vp.attitude);

  00420	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00424	74 0d		 je	 SHORT $LN146@update_ent
  00426	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00429	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042b	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], ecx
  00431	eb 24		 jmp	 SHORT $LN147@update_ent
$LN146@update_ent:
  00433	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00439	83 c2 51	 add	 edx, 81			; 00000051H
  0043c	52		 push	 edx
  0043d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00442	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00447	50		 push	 eax
  00448	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044d	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN147@update_ent:
  00457	8b 4d ec	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  0045a	83 c1 14	 add	 ecx, 20			; 00000014H
  0045d	51		 push	 ecx
  0045e	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00461	52		 push	 edx
  00462	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv248[ebp]
  00468	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  0046f	ff d1		 call	 ecx

; 1332 : 
; 1333 : 			////////////////////////////////////////
; 1334 : 
; 1335 : 			target = get_local_entity_parent (source, LIST_TYPE_TARGET);

  00471	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00475	74 0d		 je	 SHORT $LN148@update_ent
  00477	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0047a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0047c	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv261[ebp], ecx
  00482	eb 24		 jmp	 SHORT $LN149@update_ent
$LN148@update_ent:
  00484	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0048a	83 c2 55	 add	 edx, 85			; 00000055H
  0048d	52		 push	 edx
  0048e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00493	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00498	50		 push	 eax
  00499	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0049e	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv261[ebp], 0
$LN149@update_ent:
  004a8	b9 01 00 00 00	 mov	 ecx, 1
  004ad	85 c9		 test	 ecx, ecx
  004af	74 0c		 je	 SHORT $LN150@update_ent
  004b1	c7 85 1c fe ff
	ff 26 00 00 00	 mov	 DWORD PTR tv269[ebp], 38 ; 00000026H
  004bb	eb 24		 jmp	 SHORT $LN151@update_ent
$LN150@update_ent:
  004bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  004c3	83 c2 55	 add	 edx, 85			; 00000055H
  004c6	52		 push	 edx
  004c7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  004cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d7	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv269[ebp], 0
$LN151@update_ent:
  004e1	6a 26		 push	 38			; 00000026H
  004e3	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  004e6	51		 push	 ecx
  004e7	69 95 20 fe ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv261[ebp], 180
  004f1	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv269[ebp]
  004f7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  004fe	ff d1		 call	 ecx
  00500	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 1336 : 
; 1337 : 			////////////////////////////////////////////////////////////////////////////////
; 1338 : 			//
; 1339 : 			// Open and close weapon system ready devices.
; 1340 : 			//
; 1341 : 			// If the selected weapon system needs to be opened then all weapons with weapon
; 1342 : 			// system ready devices are opened.
; 1343 : 			//
; 1344 : 			// Some attempt is made to prevent the weapon aiming code wrestling with the weapon
; 1345 : 			// system ready code but where there are shared heading and pitch devices this is
; 1346 : 			// not always possible.
; 1347 : 			//
; 1348 : 			////////////////////////////////////////////////////////////////////////////////
; 1349 : 			{
; 1350 : 				int
; 1351 : 					found_weapon_system_ready_device,
; 1352 : 					make_selected_weapon_system_ready,
; 1353 : 					weapon_system_heading_returned,
; 1354 : 					weapon_system_pitch_returned;
; 1355 : 
; 1356 : 				//
; 1357 : 				// are there any weapon system ready devices? are any of these the selected weapon?
; 1358 : 				//
; 1359 : 
; 1360 : 				found_weapon_system_ready_device = FALSE;

  00503	c7 85 08 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _found_weapon_system_ready_device$28[ebp], 0

; 1361 : 
; 1362 : 				make_selected_weapon_system_ready = FALSE;

  0050d	c7 85 04 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _make_selected_weapon_system_ready$27[ebp], 0

; 1363 : 
; 1364 : 				for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00517	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _package$[ebp], 0
  00521	eb 0f		 jmp	 SHORT $LN4@update_ent
$LN2@update_ent:
  00523	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00529	83 c0 01	 add	 eax, 1
  0052c	89 85 3c ff ff
	ff		 mov	 DWORD PTR _package$[ebp], eax
$LN4@update_ent:
  00532	83 bd 3c ff ff
	ff 20		 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00539	7d 62		 jge	 SHORT $LN3@update_ent

; 1365 : 				{
; 1366 : 					if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0053b	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00542	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00549	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  00551	75 02		 jne	 SHORT $LN36@update_ent

; 1367 : 					{
; 1368 : 						break;

  00553	eb 48		 jmp	 SHORT $LN3@update_ent
$LN36@update_ent:

; 1369 : 					}
; 1370 : 
; 1371 : 					if (weapon_config_database[config_type][package].make_weapon_system_ready)

  00555	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0055c	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00563	83 bc 08 14 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+20], 0
  0056b	74 2e		 je	 SHORT $LN38@update_ent

; 1372 : 					{
; 1373 : 						found_weapon_system_ready_device = TRUE;

  0056d	c7 85 08 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _found_weapon_system_ready_device$28[ebp], 1

; 1374 : 
; 1375 : 						if (weapon_config_database[config_type][package].sub_type == selected_weapon)

  00577	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0057e	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00585	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  0058c	3b 55 f8	 cmp	 edx, DWORD PTR _selected_weapon$[ebp]
  0058f	75 0a		 jne	 SHORT $LN38@update_ent

; 1376 : 						{
; 1377 : 							make_selected_weapon_system_ready = TRUE;

  00591	c7 85 04 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _make_selected_weapon_system_ready$27[ebp], 1
$LN38@update_ent:

; 1378 : 						}
; 1379 : 					}
; 1380 : 				}

  0059b	eb 86		 jmp	 SHORT $LN2@update_ent
$LN3@update_ent:

; 1381 : 
; 1382 : 				//
; 1383 : 				// open and close weapon system ready devices
; 1384 : 				//
; 1385 : 
; 1386 : 				if (found_weapon_system_ready_device)

  0059d	83 bd 08 ff ff
	ff 00		 cmp	 DWORD PTR _found_weapon_system_ready_device$28[ebp], 0
  005a4	0f 84 d2 01 00
	00		 je	 $LN48@update_ent

; 1387 : 				{
; 1388 : 					if (make_selected_weapon_system_ready)

  005aa	83 bd 04 ff ff
	ff 00		 cmp	 DWORD PTR _make_selected_weapon_system_ready$27[ebp], 0
  005b1	0f 84 ac 00 00
	00		 je	 $LN40@update_ent

; 1389 : 					{
; 1390 : 						//
; 1391 : 						// open all weapon system ready devices and get a true indication of their ready state
; 1392 : 						//
; 1393 : 
; 1394 : 						open_entity_weapon_system_ready (source);

  005b7	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  005ba	50		 push	 eax
  005bb	e8 00 00 00 00	 call	 ?open_entity_weapon_system_ready@@YGXPAUENTITY@@@Z ; open_entity_weapon_system_ready

; 1395 : 
; 1396 : 						selected_weapon_system_ready = get_local_entity_int_value (source, INT_TYPE_WEAPON_SYSTEM_READY);

  005c0	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  005c4	74 0d		 je	 SHORT $LN152@update_ent
  005c6	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  005c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  005cb	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv304[ebp], ecx
  005d1	eb 27		 jmp	 SHORT $LN153@update_ent
$LN152@update_ent:
  005d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  005d9	81 c2 92 00 00
	00		 add	 edx, 146		; 00000092H
  005df	52		 push	 edx
  005e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  005e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005ea	50		 push	 eax
  005eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f0	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN153@update_ent:
  005fa	b9 01 00 00 00	 mov	 ecx, 1
  005ff	85 c9		 test	 ecx, ecx
  00601	74 0c		 je	 SHORT $LN154@update_ent
  00603	c7 85 1c fe ff
	ff 0f 01 00 00	 mov	 DWORD PTR tv312[ebp], 271 ; 0000010fH
  0060d	eb 27		 jmp	 SHORT $LN155@update_ent
$LN154@update_ent:
  0060f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00615	81 c2 92 00 00
	00		 add	 edx, 146		; 00000092H
  0061b	52		 push	 edx
  0061c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00621	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00626	50		 push	 eax
  00627	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0062c	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv312[ebp], 0
$LN155@update_ent:
  00636	68 0f 01 00 00	 push	 271			; 0000010fH
  0063b	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0063e	51		 push	 ecx
  0063f	69 95 20 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv304[ebp], 1116
  00649	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv312[ebp]
  0064f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00656	ff d1		 call	 ecx
  00658	89 85 34 ff ff
	ff		 mov	 DWORD PTR _selected_weapon_system_ready$[ebp], eax

; 1397 : 					}
; 1398 : 					else

  0065e	e9 19 01 00 00	 jmp	 $LN48@update_ent
$LN40@update_ent:

; 1399 : 					{
; 1400 : 						//
; 1401 : 						// before closing all weapon system ready devices, return heading and pitch devices to their rest position
; 1402 : 						//
; 1403 : 
; 1404 : 						weapon_system_heading_returned = TRUE;

  00663	c7 85 00 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _weapon_system_heading_returned$26[ebp], 1

; 1405 : 
; 1406 : 						weapon_system_pitch_returned = TRUE;

  0066d	c7 85 fc fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _weapon_system_pitch_returned$25[ebp], 1

; 1407 : 
; 1408 : 						for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00677	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _package$[ebp], 0
  00681	eb 0f		 jmp	 SHORT $LN7@update_ent
$LN5@update_ent:
  00683	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00689	83 c0 01	 add	 eax, 1
  0068c	89 85 3c ff ff
	ff		 mov	 DWORD PTR _package$[ebp], eax
$LN7@update_ent:
  00692	83 bd 3c ff ff
	ff 20		 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00699	0f 8d c2 00 00
	00		 jge	 $LN6@update_ent

; 1409 : 						{
; 1410 : 							if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0069f	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  006a6	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  006ad	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  006b5	75 05		 jne	 SHORT $LN42@update_ent

; 1411 : 							{
; 1412 : 								break;

  006b7	e9 a5 00 00 00	 jmp	 $LN6@update_ent
$LN42@update_ent:

; 1413 : 							}
; 1414 : 
; 1415 : 							if (weapon_config_database[config_type][package].make_weapon_system_ready)

  006bc	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  006c3	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  006ca	83 bc 08 14 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+20], 0
  006d2	0f 84 84 00 00
	00		 je	 $LN47@update_ent

; 1416 : 							{
; 1417 : 								//
; 1418 : 								// ignore shared devices
; 1419 : 								//
; 1420 : 
; 1421 : 								if (!weapon_config_database[config_type][package].heading_share_mask)

  006d8	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  006df	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  006e6	83 bc 08 40 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+64], 0
  006ee	75 2a		 jne	 SHORT $LN45@update_ent

; 1422 : 								{
; 1423 : 									if (package_status[package].weapon_system_heading != 0.0)

  006f0	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  006f6	c1 e0 04	 shl	 eax, 4
  006f9	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  006fc	f3 0f 5a 44 01
	04		 cvtss2sd xmm0, DWORD PTR [ecx+eax+4]
  00702	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0070a	9f		 lahf
  0070b	f6 c4 44	 test	 ah, 68			; 00000044H
  0070e	7b 0a		 jnp	 SHORT $LN45@update_ent

; 1424 : 									{
; 1425 : 										weapon_system_heading_returned = FALSE;

  00710	c7 85 00 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _weapon_system_heading_returned$26[ebp], 0
$LN45@update_ent:

; 1426 : 									}
; 1427 : 								}
; 1428 : 
; 1429 : 								if (!weapon_config_database[config_type][package].pitch_share_mask)

  0071a	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00721	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00728	83 bc 08 44 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+68], 0
  00730	75 2a		 jne	 SHORT $LN47@update_ent

; 1430 : 								{
; 1431 : 									if (package_status[package].weapon_system_pitch != 0.0)

  00732	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00738	c1 e0 04	 shl	 eax, 4
  0073b	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0073e	f3 0f 5a 44 01
	08		 cvtss2sd xmm0, DWORD PTR [ecx+eax+8]
  00744	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0074c	9f		 lahf
  0074d	f6 c4 44	 test	 ah, 68			; 00000044H
  00750	7b 0a		 jnp	 SHORT $LN47@update_ent

; 1432 : 									{
; 1433 : 										weapon_system_pitch_returned = FALSE;

  00752	c7 85 fc fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _weapon_system_pitch_returned$25[ebp], 0
$LN47@update_ent:

; 1434 : 									}
; 1435 : 								}
; 1436 : 							}
; 1437 : 						}

  0075c	e9 22 ff ff ff	 jmp	 $LN5@update_ent
$LN6@update_ent:

; 1438 : 
; 1439 : 						if (weapon_system_heading_returned && weapon_system_pitch_returned)

  00761	83 bd 00 ff ff
	ff 00		 cmp	 DWORD PTR _weapon_system_heading_returned$26[ebp], 0
  00768	74 12		 je	 SHORT $LN48@update_ent
  0076a	83 bd fc fe ff
	ff 00		 cmp	 DWORD PTR _weapon_system_pitch_returned$25[ebp], 0
  00771	74 09		 je	 SHORT $LN48@update_ent

; 1440 : 						{
; 1441 : 							close_entity_weapon_system_ready (source);

  00773	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00776	50		 push	 eax
  00777	e8 00 00 00 00	 call	 ?close_entity_weapon_system_ready@@YGXPAUENTITY@@@Z ; close_entity_weapon_system_ready
$LN48@update_ent:

; 1442 : 						}
; 1443 : 					}
; 1444 : 				}
; 1445 : 			}
; 1446 : 
; 1447 : 			////////////////////////////////////////
; 1448 : 			//
; 1449 : 			// selected weapons take priority in shared heading and pitch devices
; 1450 : 			//
; 1451 : 			////////////////////////////////////////
; 1452 : 			{
; 1453 : 				unsigned int
; 1454 : 					mask;
; 1455 : 
; 1456 : 				selected_weapon_mask = 0;

  0077c	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _selected_weapon_mask$[ebp], 0

; 1457 : 
; 1458 : 				mask = 1;

  00786	c7 85 f8 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _mask$24[ebp], 1

; 1459 : 
; 1460 : 				for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00790	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _package$[ebp], 0
  0079a	eb 0f		 jmp	 SHORT $LN10@update_ent
$LN8@update_ent:
  0079c	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  007a2	83 c0 01	 add	 eax, 1
  007a5	89 85 3c ff ff
	ff		 mov	 DWORD PTR _package$[ebp], eax
$LN10@update_ent:
  007ab	83 bd 3c ff ff
	ff 20		 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  007b2	7d 6d		 jge	 SHORT $LN9@update_ent

; 1461 : 				{
; 1462 : 					if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  007b4	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  007bb	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  007c2	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  007ca	75 02		 jne	 SHORT $LN49@update_ent

; 1463 : 					{
; 1464 : 						break;

  007cc	eb 53		 jmp	 SHORT $LN9@update_ent
$LN49@update_ent:

; 1465 : 					}
; 1466 : 
; 1467 : 					if (weapon_config_database[config_type][package].sub_type == selected_weapon)

  007ce	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  007d5	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  007dc	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  007e3	3b 55 f8	 cmp	 edx, DWORD PTR _selected_weapon$[ebp]
  007e6	75 26		 jne	 SHORT $LN51@update_ent

; 1468 : 					{
; 1469 : 						if (package_status[package].number > 0)

  007e8	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  007ee	c1 e0 04	 shl	 eax, 4
  007f1	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  007f4	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  007f8	85 d2		 test	 edx, edx
  007fa	7e 12		 jle	 SHORT $LN51@update_ent

; 1470 : 						{
; 1471 : 							selected_weapon_mask |= mask;

  007fc	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _selected_weapon_mask$[ebp]
  00802	0b 85 f8 fe ff
	ff		 or	 eax, DWORD PTR _mask$24[ebp]
  00808	89 85 30 ff ff
	ff		 mov	 DWORD PTR _selected_weapon_mask$[ebp], eax
$LN51@update_ent:

; 1472 : 						}
; 1473 : 					}
; 1474 : 
; 1475 : 					mask <<= 1;

  0080e	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _mask$24[ebp]
  00814	d1 e0		 shl	 eax, 1
  00816	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _mask$24[ebp], eax

; 1476 : 				}

  0081c	e9 7b ff ff ff	 jmp	 $LN8@update_ent
$LN9@update_ent:

; 1477 : 			}
; 1478 : 
; 1479 : 			////////////////////////////////////////////////////////////////////////////////
; 1480 : 			//
; 1481 : 			// rotate and animate weapon systems
; 1482 : 			//
; 1483 : 			////////////////////////////////////////////////////////////////////////////////
; 1484 : 
; 1485 : 			for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00821	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _package$[ebp], 0
  0082b	eb 0f		 jmp	 SHORT $LN13@update_ent
$LN11@update_ent:
  0082d	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00833	83 c0 01	 add	 eax, 1
  00836	89 85 3c ff ff
	ff		 mov	 DWORD PTR _package$[ebp], eax
$LN13@update_ent:
  0083c	83 bd 3c ff ff
	ff 20		 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00843	0f 8d 72 19 00
	00		 jge	 $LN12@update_ent

; 1486 : 			{
; 1487 : 				if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00849	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00850	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00857	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  0085f	75 05		 jne	 SHORT $LN52@update_ent

; 1488 : 				{
; 1489 : 					break;

  00861	e9 55 19 00 00	 jmp	 $LN12@update_ent
$LN52@update_ent:

; 1490 : 				}
; 1491 : 
; 1492 : 				////////////////////////////////////////
; 1493 : 				//
; 1494 : 				// rotate heading and pitch
; 1495 : 				//
; 1496 : 				////////////////////////////////////////
; 1497 : 
; 1498 : 				if (weapon_config_database[config_type][package].rotate)

  00866	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0086d	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00874	83 bc 08 18 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+24], 0
  0087c	0f 84 58 18 00
	00		 je	 $LN108@update_ent

; 1499 : 				{
; 1500 : 					located_heading_and_pitch_devices = FALSE;

  00882	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _located_heading_and_pitch_devices$[ebp], 0

; 1501 : 
; 1502 : 					required_heading_offset = 0.0;

  0088c	0f 57 c0	 xorps	 xmm0, xmm0
  0088f	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1503 : 
; 1504 : 					required_pitch_offset = 0.0;

  00897	0f 57 c0	 xorps	 xmm0, xmm0
  0089a	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0

; 1505 : 
; 1506 : 					if (weapon_config_database[config_type][package].sub_type == selected_weapon)

  008a2	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  008a9	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  008b0	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  008b7	3b 55 f8	 cmp	 edx, DWORD PTR _selected_weapon$[ebp]
  008ba	0f 85 de 10 00
	00		 jne	 $LN64@update_ent

; 1507 : 					{
; 1508 : 						if (selected_weapon_system_ready)

  008c0	83 bd 34 ff ff
	ff 00		 cmp	 DWORD PTR _selected_weapon_system_ready$[ebp], 0
  008c7	0f 84 47 04 00
	00		 je	 $LN55@update_ent

; 1509 : 						{
; 1510 : 							if (package_status[package].number > 0)

  008cd	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  008d3	c1 e0 04	 shl	 eax, 4
  008d6	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  008d9	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  008dd	85 d2		 test	 edx, edx
  008df	0f 8e 2a 04 00
	00		 jle	 $LN61@update_ent

; 1511 : 							{
; 1512 : 								if (get_local_entity_float_value (source, FLOAT_TYPE_VELOCITY) < weapon_config_database[config_type][package].rotate_inhibit_velocity)

  008e5	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  008e9	74 0d		 je	 SHORT $LN156@update_ent
  008eb	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  008ee	8b 08		 mov	 ecx, DWORD PTR [eax]
  008f0	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv409[ebp], ecx
  008f6	eb 20		 jmp	 SHORT $LN157@update_ent
$LN156@update_ent:
  008f8	68 e8 05 00 00	 push	 1512			; 000005e8H
  008fd	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00902	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00908	52		 push	 edx
  00909	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0090e	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN157@update_ent:
  00918	b8 01 00 00 00	 mov	 eax, 1
  0091d	85 c0		 test	 eax, eax
  0091f	74 0c		 je	 SHORT $LN158@update_ent
  00921	c7 85 1c fe ff
	ff 93 00 00 00	 mov	 DWORD PTR tv416[ebp], 147 ; 00000093H
  0092b	eb 20		 jmp	 SHORT $LN159@update_ent
$LN158@update_ent:
  0092d	68 e8 05 00 00	 push	 1512			; 000005e8H
  00932	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00937	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0093d	51		 push	 ecx
  0093e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00943	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv416[ebp], 0
$LN159@update_ent:
  0094d	68 93 00 00 00	 push	 147			; 00000093H
  00952	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00955	52		 push	 edx
  00956	69 85 20 fe ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv409[ebp], 700
  00960	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv416[ebp]
  00966	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0096d	ff d2		 call	 edx
  0096f	d9 9d 18 fe ff
	ff		 fstp	 DWORD PTR tv1416[ebp]
  00975	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0097c	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00983	f3 0f 10 84 08
	3c 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+60]
  0098c	0f 2f 85 18 fe
	ff ff		 comiss	 xmm0, DWORD PTR tv1416[ebp]
  00993	0f 86 76 03 00
	00		 jbe	 $LN61@update_ent

; 1513 : 								{
; 1514 : 									if (target)

  00999	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  0099d	0f 84 6c 03 00
	00		 je	 $LN61@update_ent

; 1515 : 									{
; 1516 : 										located_heading_and_pitch_devices =

  009a3	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  009a9	50		 push	 eax
  009aa	8d 4d b4	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  009ad	51		 push	 ecx
  009ae	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  009b4	52		 push	 edx
  009b5	8b 45 ec	 mov	 eax, DWORD PTR _inst3d$[ebp]
  009b8	50		 push	 eax
  009b9	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _package$[ebp]
  009bf	51		 push	 ecx
  009c0	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _package$[ebp]
  009c6	c1 e2 04	 shl	 edx, 4
  009c9	03 55 f4	 add	 edx, DWORD PTR _package_status$[ebp]
  009cc	52		 push	 edx
  009cd	8b 45 f0	 mov	 eax, DWORD PTR _config_type$[ebp]
  009d0	50		 push	 eax
  009d1	e8 00 00 00 00	 call	 ?get_viewpoint_from_weapon@@YGHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@HPAUOBJECT_3D_INSTANCE@@PAUVIEWPOINT@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@4@Z ; get_viewpoint_from_weapon
  009d6	89 85 38 ff ff
	ff		 mov	 DWORD PTR _located_heading_and_pitch_devices$[ebp], eax

; 1517 : 											get_viewpoint_from_weapon(config_type, &package_status[package], package, inst3d, &vp, &search_weapon_system_heading, &search_weapon_system_pitch);
; 1518 : 
; 1519 : 										if (!located_heading_and_pitch_devices)

  009dc	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR _located_heading_and_pitch_devices$[ebp], 0
  009e3	0f 85 ae 00 00
	00		 jne	 $LN60@update_ent

; 1520 : 										{
; 1521 : 											debug_colour_log (DEBUG_COLOUR_AMBER, "Cannot locate device to rotate (name = %s, package = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), package);

  009e9	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  009ed	74 0d		 je	 SHORT $LN160@update_ent
  009ef	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  009f2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009f4	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv447[ebp], ecx
  009fa	eb 27		 jmp	 SHORT $LN161@update_ent
$LN160@update_ent:
  009fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00a02	81 c2 0f 01 00
	00		 add	 edx, 271		; 0000010fH
  00a08	52		 push	 edx
  00a09	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a13	50		 push	 eax
  00a14	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a19	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv447[ebp], 0
$LN161@update_ent:
  00a23	b9 01 00 00 00	 mov	 ecx, 1
  00a28	85 c9		 test	 ecx, ecx
  00a2a	74 0c		 je	 SHORT $LN162@update_ent
  00a2c	c7 85 1c fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv455[ebp], 3
  00a36	eb 27		 jmp	 SHORT $LN163@update_ent
$LN162@update_ent:
  00a38	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00a3e	81 c2 0f 01 00
	00		 add	 edx, 271		; 0000010fH
  00a44	52		 push	 edx
  00a45	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00a4f	50		 push	 eax
  00a50	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a55	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv455[ebp], 0
$LN163@update_ent:
  00a5f	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _package$[ebp]
  00a65	51		 push	 ecx
  00a66	6a 03		 push	 3
  00a68	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00a6b	52		 push	 edx
  00a6c	6b 85 20 fe ff
	ff 34		 imul	 eax, DWORD PTR tv447[ebp], 52
  00a73	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv455[ebp]
  00a79	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  00a80	ff d2		 call	 edx
  00a82	50		 push	 eax
  00a83	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@MGJJNOPJ@Cannot?5locate?5device?5to?5rotate?5@
  00a88	6a 17		 push	 23			; 00000017H
  00a8a	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  00a8f	83 c4 10	 add	 esp, 16			; 00000010H

; 1522 : 
; 1523 : 											return;

  00a92	e9 24 17 00 00	 jmp	 $LN1@update_ent
$LN60@update_ent:

; 1524 : 										}
; 1525 : 
; 1526 : 										//
; 1527 : 										// get pitch device to target vector
; 1528 : 										//
; 1529 : 										// (using the unrotated pitch device position is not pin-point accurate but is close enough)
; 1530 : 										//
; 1531 : 
; 1532 : 										if (get_pitch_device_to_target_vector (source, target, selected_weapon, &vp.position, &target_vector))

  00a97	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _target_vector$[ebp]
  00a9d	50		 push	 eax
  00a9e	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp]
  00aa4	51		 push	 ecx
  00aa5	8b 55 f8	 mov	 edx, DWORD PTR _selected_weapon$[ebp]
  00aa8	52		 push	 edx
  00aa9	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00aac	50		 push	 eax
  00aad	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00ab0	51		 push	 ecx
  00ab1	e8 00 00 00 00	 call	 ?get_pitch_device_to_target_vector@@YGHPAUENTITY@@0HPAUVEC3D@@1@Z ; get_pitch_device_to_target_vector
  00ab6	85 c0		 test	 eax, eax
  00ab8	0f 84 51 02 00
	00		 je	 $LN61@update_ent

; 1533 : 										{
; 1534 : 											vec3d offset_vector;
; 1535 : 											float min_pitch = weapon_config_database[config_type][package].min_pitch_limit;

  00abe	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00ac5	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00acc	f3 0f 10 84 08
	30 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+48]
  00ad5	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _min_pitch$22[ebp], xmm0

; 1536 : 
; 1537 : 											//
; 1538 : 											// get heading and pitch offsets
; 1539 : 											//
; 1540 : 
; 1541 : 											multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &target_vector);

  00add	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _target_vector$[ebp]
  00ae3	50		 push	 eax
  00ae4	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp+12]
  00aea	51		 push	 ecx
  00aeb	8d 95 ec fe ff
	ff		 lea	 edx, DWORD PTR _offset_vector$23[ebp]
  00af1	52		 push	 edx
  00af2	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1542 : 
; 1543 : 											required_heading_offset = atan2 (offset_vector.x, offset_vector.z);

  00af7	51		 push	 ecx
  00af8	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$23[ebp+8]
  00b00	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b05	51		 push	 ecx
  00b06	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$23[ebp]
  00b0e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b13	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00b18	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _required_heading_offset$[ebp]

; 1544 : 											required_heading_offset = bound

  00b1e	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00b25	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00b2c	f3 0f 10 84 08
	24 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+36]
  00b35	0f 2f 85 2c ff
	ff ff		 comiss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  00b3c	76 21		 jbe	 SHORT $LN166@update_ent
  00b3e	69 55 f0 80 09
	00 00		 imul	 edx, DWORD PTR _config_type$[ebp], 2432
  00b45	6b 85 3c ff ff
	ff 4c		 imul	 eax, DWORD PTR _package$[ebp], 76
  00b4c	f3 0f 10 84 02
	24 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[edx+eax+36]
  00b55	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv505[ebp], xmm0
  00b5d	eb 61		 jmp	 SHORT $LN167@update_ent
$LN166@update_ent:
  00b5f	69 4d f0 80 09
	00 00		 imul	 ecx, DWORD PTR _config_type$[ebp], 2432
  00b66	6b 95 3c ff ff
	ff 4c		 imul	 edx, DWORD PTR _package$[ebp], 76
  00b6d	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  00b75	0f 2f 84 11 28
	00 00 00	 comiss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[ecx+edx+40]
  00b7d	76 21		 jbe	 SHORT $LN164@update_ent
  00b7f	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00b86	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00b8d	f3 0f 10 84 08
	28 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+40]
  00b96	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv504[ebp], xmm0
  00b9e	eb 10		 jmp	 SHORT $LN165@update_ent
$LN164@update_ent:
  00ba0	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  00ba8	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv504[ebp], xmm0
$LN165@update_ent:
  00bb0	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv504[ebp]
  00bb8	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv505[ebp], xmm0
$LN167@update_ent:
  00bc0	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv505[ebp]
  00bc8	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1545 : 											(
; 1546 : 												required_heading_offset,
; 1547 : 												weapon_config_database[config_type][package].min_heading_limit,
; 1548 : 												weapon_config_database[config_type][package].max_heading_limit
; 1549 : 											);
; 1550 : 
; 1551 : 											flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  00bd0	f3 0f 10 85 ec
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$23[ebp]
  00bd8	f3 0f 59 85 ec
	fe ff ff	 mulss	 xmm0, DWORD PTR _offset_vector$23[ebp]
  00be0	f3 0f 10 8d f4
	fe ff ff	 movss	 xmm1, DWORD PTR _offset_vector$23[ebp+8]
  00be8	f3 0f 59 8d f4
	fe ff ff	 mulss	 xmm1, DWORD PTR _offset_vector$23[ebp+8]
  00bf0	f3 0f 58 c1	 addss	 xmm0, xmm1
  00bf4	51		 push	 ecx
  00bf5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bfa	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00bff	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR _flat_range$[ebp]

; 1552 : 
; 1553 : 											required_pitch_offset = atan2 (offset_vector.y, flat_range);

  00c05	51		 push	 ecx
  00c06	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00c0e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c13	51		 push	 ecx
  00c14	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$23[ebp+4]
  00c1c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c21	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00c26	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR _required_pitch_offset$[ebp]

; 1554 : 
; 1555 : 											// fire ground launched missiles with slight climb angle to avoid missile hitting ground as often
; 1556 : 											if (weapon_database[selected_weapon].guidance_type != WEAPON_GUIDANCE_TYPE_NONE
; 1557 : 												&& (source->type == ENTITY_TYPE_ANTI_AIRCRAFT || source->type == ENTITY_TYPE_ROUTED_VEHICLE))

  00c2c	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _selected_weapon$[ebp], 224
  00c33	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+24], 0
  00c3a	74 3f		 je	 SHORT $LN62@update_ent
  00c3c	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00c3f	83 38 01	 cmp	 DWORD PTR [eax], 1
  00c42	74 08		 je	 SHORT $LN63@update_ent
  00c44	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00c47	83 38 17	 cmp	 DWORD PTR [eax], 23	; 00000017H
  00c4a	75 2f		 jne	 SHORT $LN62@update_ent
$LN63@update_ent:

; 1558 : 											{
; 1559 : 												min_pitch = max(rad(10.0f), min_pitch);

  00c4c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e32b8c2
  00c54	f3 0f 11 85 24
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00c5c	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _min_pitch$22[ebp]
  00c62	50		 push	 eax
  00c63	8d 8d 24 fe ff
	ff		 lea	 ecx, DWORD PTR $T1[ebp]
  00c69	51		 push	 ecx
  00c6a	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00c6f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00c73	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _min_pitch$22[ebp], xmm0
$LN62@update_ent:

; 1560 : 											}
; 1561 : 
; 1562 : 											required_pitch_offset = bound

  00c7b	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _min_pitch$22[ebp]
  00c83	0f 2f 85 28 ff
	ff ff		 comiss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  00c8a	76 12		 jbe	 SHORT $LN170@update_ent
  00c8c	f3 0f 10 85 e8
	fe ff ff	 movss	 xmm0, DWORD PTR _min_pitch$22[ebp]
  00c94	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv538[ebp], xmm0
  00c9c	eb 61		 jmp	 SHORT $LN171@update_ent
$LN170@update_ent:
  00c9e	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00ca5	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00cac	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  00cb4	0f 2f 84 08 34
	00 00 00	 comiss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+52]
  00cbc	76 21		 jbe	 SHORT $LN168@update_ent
  00cbe	69 55 f0 80 09
	00 00		 imul	 edx, DWORD PTR _config_type$[ebp], 2432
  00cc5	6b 85 3c ff ff
	ff 4c		 imul	 eax, DWORD PTR _package$[ebp], 76
  00ccc	f3 0f 10 84 02
	34 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[edx+eax+52]
  00cd5	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv537[ebp], xmm0
  00cdd	eb 10		 jmp	 SHORT $LN169@update_ent
$LN168@update_ent:
  00cdf	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  00ce7	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv537[ebp], xmm0
$LN169@update_ent:
  00cef	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv537[ebp]
  00cf7	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv538[ebp], xmm0
$LN171@update_ent:
  00cff	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv538[ebp]
  00d07	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0
$LN61@update_ent:

; 1563 : 											(
; 1564 : 												required_pitch_offset,
; 1565 : 												min_pitch,
; 1566 : 												weapon_config_database[config_type][package].max_pitch_limit
; 1567 : 											);
; 1568 : 										}
; 1569 : 									}
; 1570 : 								}
; 1571 : 							}
; 1572 : 						}
; 1573 : 						else

  00d0f	e9 ce 00 00 00	 jmp	 $LN56@update_ent
$LN55@update_ent:

; 1574 : 						{
; 1575 : 							//
; 1576 : 							// weapon system ready device is not ready, hold the current position
; 1577 : 							//
; 1578 : 
; 1579 : 							required_heading_offset = package_status[package].weapon_system_heading;

  00d14	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00d1a	c1 e0 04	 shl	 eax, 4
  00d1d	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00d20	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  00d26	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1580 : 
; 1581 : 							required_pitch_offset = package_status[package].weapon_system_pitch;

  00d2e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  00d34	c1 e0 04	 shl	 eax, 4
  00d37	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00d3a	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  00d40	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0

; 1582 : 
; 1583 : 							set_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON_SYSTEM_READY, FALSE);

  00d48	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00d4c	74 0d		 je	 SHORT $LN172@update_ent
  00d4e	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00d51	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d53	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv551[ebp], ecx
  00d59	eb 27		 jmp	 SHORT $LN173@update_ent
$LN172@update_ent:
  00d5b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00d61	81 c2 4d 01 00
	00		 add	 edx, 333		; 0000014dH
  00d67	52		 push	 edx
  00d68	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d72	50		 push	 eax
  00d73	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d78	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv551[ebp], 0
$LN173@update_ent:
  00d82	b9 01 00 00 00	 mov	 ecx, 1
  00d87	85 c9		 test	 ecx, ecx
  00d89	74 0c		 je	 SHORT $LN174@update_ent
  00d8b	c7 85 1c fe ff
	ff b9 00 00 00	 mov	 DWORD PTR tv559[ebp], 185 ; 000000b9H
  00d95	eb 27		 jmp	 SHORT $LN175@update_ent
$LN174@update_ent:
  00d97	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  00d9d	81 c2 4d 01 00
	00		 add	 edx, 333		; 0000014dH
  00da3	52		 push	 edx
  00da4	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00da9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00dae	50		 push	 eax
  00daf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00db4	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv559[ebp], 0
$LN175@update_ent:
  00dbe	6a 00		 push	 0
  00dc0	68 b9 00 00 00	 push	 185			; 000000b9H
  00dc5	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  00dc8	51		 push	 ecx
  00dc9	69 95 20 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv551[ebp], 1116
  00dd3	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv559[ebp]
  00dd9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00de0	ff d1		 call	 ecx
$LN56@update_ent:

; 1584 : 						}
; 1585 : 
; 1586 : 						// 050320 Jabberwock - Cannon tracking - major restructuring for MP
; 1587 : 
; 1588 : 						if (get_local_entity_int_value (source, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00de2	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00de6	74 0d		 je	 SHORT $LN176@update_ent
  00de8	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00deb	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ded	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv570[ebp], ecx
  00df3	eb 20		 jmp	 SHORT $LN177@update_ent
$LN176@update_ent:
  00df5	68 34 06 00 00	 push	 1588			; 00000634H
  00dfa	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dff	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e05	52		 push	 edx
  00e06	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e0b	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv570[ebp], 0
$LN177@update_ent:
  00e15	b8 01 00 00 00	 mov	 eax, 1
  00e1a	85 c0		 test	 eax, eax
  00e1c	74 0c		 je	 SHORT $LN178@update_ent
  00e1e	c7 85 1c fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv577[ebp], 156 ; 0000009cH
  00e28	eb 20		 jmp	 SHORT $LN179@update_ent
$LN178@update_ent:
  00e2a	68 34 06 00 00	 push	 1588			; 00000634H
  00e2f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e34	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e3a	51		 push	 ecx
  00e3b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e40	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv577[ebp], 0
$LN179@update_ent:
  00e4a	68 9c 00 00 00	 push	 156			; 0000009cH
  00e4f	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00e52	52		 push	 edx
  00e53	69 85 20 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv570[ebp], 1116
  00e5d	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv577[ebp]
  00e63	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e6a	ff d2		 call	 edx
  00e6c	85 c0		 test	 eax, eax
  00e6e	0f 84 2a 0b 00
	00		 je	 $LN64@update_ent

; 1589 : 						{
; 1590 : 							if (get_local_entity_int_value (source, INT_TYPE_PLAYER) == ENTITY_PLAYER_LOCAL) // Jabberwock 050128 Bug removed!

  00e74	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  00e78	74 0d		 je	 SHORT $LN180@update_ent
  00e7a	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  00e7d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e7f	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv589[ebp], ecx
  00e85	eb 20		 jmp	 SHORT $LN181@update_ent
$LN180@update_ent:
  00e87	68 36 06 00 00	 push	 1590			; 00000636H
  00e8c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e91	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e97	52		 push	 edx
  00e98	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e9d	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv589[ebp], 0
$LN181@update_ent:
  00ea7	b8 01 00 00 00	 mov	 eax, 1
  00eac	85 c0		 test	 eax, eax
  00eae	74 0c		 je	 SHORT $LN182@update_ent
  00eb0	c7 85 1c fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv596[ebp], 156 ; 0000009cH
  00eba	eb 20		 jmp	 SHORT $LN183@update_ent
$LN182@update_ent:
  00ebc	68 36 06 00 00	 push	 1590			; 00000636H
  00ec1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ec6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ecc	51		 push	 ecx
  00ecd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ed2	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv596[ebp], 0
$LN183@update_ent:
  00edc	68 9c 00 00 00	 push	 156			; 0000009cH
  00ee1	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  00ee4	52		 push	 edx
  00ee5	69 85 20 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv589[ebp], 1116
  00eef	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv596[ebp]
  00ef5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00efc	ff d2		 call	 edx
  00efe	83 f8 01	 cmp	 eax, 1
  00f01	0f 85 a4 06 00
	00		 jne	 $LN65@update_ent

; 1591 : 							{
; 1592 : 								int use_eo_sight_for_direction = is_using_eo_system(command_line_cannontrack != 2);

  00f07	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?command_line_cannontrack@@3HA, 2 ; command_line_cannontrack
  00f0e	74 0c		 je	 SHORT $LN184@update_ent
  00f10	c7 85 20 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv605[ebp], 1
  00f1a	eb 0a		 jmp	 SHORT $LN185@update_ent
$LN184@update_ent:
  00f1c	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv605[ebp], 0
$LN185@update_ent:
  00f26	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv605[ebp]
  00f2c	50		 push	 eax
  00f2d	e8 00 00 00 00	 call	 ?is_using_eo_system@@YGHH@Z ; is_using_eo_system
  00f32	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _use_eo_sight_for_direction$21[ebp], eax

; 1593 : 
; 1594 : 								// Mi-24's nose gun which doesn't have as good aiming devices as other helicopters
; 1595 : 								if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_9A642_12P7MM_ROUND)

  00f38	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00f3f	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  00f46	83 bc 08 00 00
	00 00 0d	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 13 ; 0000000dH
  00f4e	0f 85 88 00 00
	00		 jne	 $LN67@update_ent

; 1596 : 								{
; 1597 : 									target = NULL;

  00f54	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _target$[ebp], 0

; 1598 : 									// in EO view fire along EO line of sight
; 1599 : 									use_eo_sight_for_direction = target_acquisition_system != TARGET_ACQUISITION_SYSTEM_HMS && view_mode == VIEW_MODE_VIRTUAL_COCKPIT_PERISCOPE;

  00f5b	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 10 ; target_acquisition_system, 0000000aH
  00f62	74 15		 je	 SHORT $LN186@update_ent
  00f64	83 3d 00 00 00
	00 25		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 37 ; view_mode, 00000025H
  00f6b	75 0c		 jne	 SHORT $LN186@update_ent
  00f6d	c7 85 20 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv647[ebp], 1
  00f77	eb 0a		 jmp	 SHORT $LN187@update_ent
$LN186@update_ent:
  00f79	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv647[ebp], 0
$LN187@update_ent:
  00f83	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv647[ebp]
  00f89	89 85 e4 fe ff
	ff		 mov	 DWORD PTR _use_eo_sight_for_direction$21[ebp], eax

; 1600 : 
; 1601 : 									  // in HMS mode gun follows head, simulates co-pilot aiming
; 1602 : 									if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_HMS)

  00f8f	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 10 ; target_acquisition_system, 0000000aH
  00f96	75 29		 jne	 SHORT $LN69@update_ent

; 1603 : 									{
; 1604 : 										required_heading_offset = -pilot_head_heading;

  00f98	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  00fa0	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00fa7	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1605 : 										required_pitch_offset = pilot_head_pitch;

  00faf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00fb7	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0

; 1606 : 									}
; 1607 : 									else  // fire straight ahead, where the pilot has a sight

  00fbf	eb 16		 jmp	 SHORT $LN70@update_ent
$LN69@update_ent:

; 1608 : 									{
; 1609 : 										required_heading_offset = 0.0;

  00fc1	0f 57 c0	 xorps	 xmm0, xmm0
  00fc4	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1610 : 										required_pitch_offset = 0.0;

  00fcc	0f 57 c0	 xorps	 xmm0, xmm0
  00fcf	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0
$LN70@update_ent:

; 1611 : 									}
; 1612 : 								}
; 1613 : 								else

  00fd7	e9 93 00 00 00	 jmp	 $LN14@update_ent
$LN67@update_ent:

; 1614 : 									switch (command_line_cannontrack)

  00fdc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_cannontrack@@3HA ; command_line_cannontrack
  00fe1	89 85 20 fe ff
	ff		 mov	 DWORD PTR tv650[ebp], eax
  00fe7	83 bd 20 fe ff
	ff 01		 cmp	 DWORD PTR tv650[ebp], 1
  00fee	74 0b		 je	 SHORT $LN71@update_ent
  00ff0	83 bd 20 fe ff
	ff 02		 cmp	 DWORD PTR tv650[ebp], 2
  00ff7	74 34		 je	 SHORT $LN73@update_ent
  00ff9	eb 74		 jmp	 SHORT $LN14@update_ent
$LN71@update_ent:

; 1615 : 									{
; 1616 : 										case 1:
; 1617 : 										{
; 1618 : 											if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_OFF)

  00ffb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 0 ; target_acquisition_system
  01002	75 27		 jne	 SHORT $LN72@update_ent

; 1619 : 											{
; 1620 : 												required_heading_offset = -pilot_head_heading;

  01004	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0100c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01013	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1621 : 												required_pitch_offset = pilot_head_pitch;

  0101b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  01023	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0
$LN72@update_ent:

; 1622 : 											}
; 1623 : 											break;

  0102b	eb 42		 jmp	 SHORT $LN14@update_ent
$LN73@update_ent:

; 1624 : 										}
; 1625 : 
; 1626 : 										case 2:
; 1627 : 										{
; 1628 : 											if ((target_acquisition_system == TARGET_ACQUISITION_SYSTEM_IHADSS) || (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_HIDSS) || (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_HMS))

  0102d	83 3d 00 00 00
	00 08		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 8 ; target_acquisition_system
  01034	74 12		 je	 SHORT $LN75@update_ent
  01036	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 9 ; target_acquisition_system
  0103d	74 09		 je	 SHORT $LN75@update_ent
  0103f	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 10 ; target_acquisition_system, 0000000aH
  01046	75 27		 jne	 SHORT $LN74@update_ent
$LN75@update_ent:

; 1629 : 											{
; 1630 : 												required_heading_offset = -pilot_head_heading;

  01048	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_heading@@3MA
  01050	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01057	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1631 : 												required_pitch_offset = pilot_head_pitch;

  0105f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  01067	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0
$LN74@update_ent:
$LN14@update_ent:

; 1632 : 											}
; 1633 : 											break;
; 1634 : 										}
; 1635 : 									}
; 1636 : 
; 1637 : 								// slave to EO system if it is active (and doesn't have a target)
; 1638 : 								if (!target && use_eo_sight_for_direction)

  0106f	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  01073	0f 85 d5 03 00
	00		 jne	 $LN82@update_ent
  01079	83 bd e4 fe ff
	ff 00		 cmp	 DWORD PTR _use_eo_sight_for_direction$21[ebp], 0
  01080	0f 84 c8 03 00
	00		 je	 $LN82@update_ent

; 1639 : 								{
; 1640 : 									vec3d* tracking_point = get_eo_tracking_point();

  01086	e8 00 00 00 00	 call	 ?get_eo_tracking_point@@YGPAUVEC3D@@XZ ; get_eo_tracking_point
  0108b	89 85 e0 fe ff
	ff		 mov	 DWORD PTR _tracking_point$20[ebp], eax

; 1641 : 
; 1642 : 									ASSERT(source == get_gunship_entity());

  01091	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  01094	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0109a	74 1a		 je	 SHORT $LN77@update_ent
  0109c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  010a1	05 88 01 00 00	 add	 eax, 392		; 00000188H
  010a6	50		 push	 eax
  010a7	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@JPLIEHBK@source?5?$DN?$DN?5get_gunship_entity?$CI?$CJ@
  010b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN77@update_ent:

; 1643 : 
; 1644 : 									required_heading_offset = eo_azimuth;

  010b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_azimuth@@3MA
  010be	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1645 : 									required_pitch_offset = eo_elevation;

  010c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?eo_elevation@@3MA
  010ce	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0

; 1646 : 
; 1647 : 									// if using point lock, then aim for that point
; 1648 : 									if (tracking_point && weapon_database[selected_weapon].aiming_type == WEAPON_AIMING_TYPE_CALC_LEAD_AND_BALLISTIC)

  010d6	83 bd e0 fe ff
	ff 00		 cmp	 DWORD PTR _tracking_point$20[ebp], 0
  010dd	0f 84 6b 03 00
	00		 je	 $LN82@update_ent
  010e3	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _selected_weapon$[ebp], 224
  010ea	83 b8 1c 00 00
	00 03		 cmp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28], 3
  010f1	0f 85 57 03 00
	00		 jne	 $LN82@update_ent

; 1649 : 									{
; 1650 : 										float pitch, dummy;
; 1651 : 										float height_diff;
; 1652 : 										float range;
; 1653 : 
; 1654 : 										#ifdef DEBUG_MODULE
; 1655 : 										debug_log("Aiming for point lock at %.0f, %.0f,  %.0f", tracking_point->x, tracking_point->y, tracking_point->z);

  010f7	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _tracking_point$20[ebp]
  010fd	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  01102	83 ec 08	 sub	 esp, 8
  01105	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0110a	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _tracking_point$20[ebp]
  01110	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  01115	83 ec 08	 sub	 esp, 8
  01118	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0111d	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _tracking_point$20[ebp]
  01123	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  01127	83 ec 08	 sub	 esp, 8
  0112a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0112f	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@NEEMCCLK@Aiming?5for?5point?5lock?5at?5?$CF?40f?0?5@
  01134	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  01139	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1656 : 										#endif
; 1657 : 
; 1658 : 										// if we don't already have it we need to get the viewpoint of the weapon
; 1659 : 										if (!located_heading_and_pitch_devices)

  0113c	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR _located_heading_and_pitch_devices$[ebp], 0
  01143	0f 85 ed 00 00
	00		 jne	 $LN80@update_ent

; 1660 : 										{
; 1661 : 											located_heading_and_pitch_devices =

  01149	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0114f	50		 push	 eax
  01150	8d 4d b4	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  01153	51		 push	 ecx
  01154	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _vp$[ebp]
  0115a	52		 push	 edx
  0115b	8b 45 ec	 mov	 eax, DWORD PTR _inst3d$[ebp]
  0115e	50		 push	 eax
  0115f	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _package$[ebp]
  01165	51		 push	 ecx
  01166	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _package$[ebp]
  0116c	c1 e2 04	 shl	 edx, 4
  0116f	03 55 f4	 add	 edx, DWORD PTR _package_status$[ebp]
  01172	52		 push	 edx
  01173	8b 45 f0	 mov	 eax, DWORD PTR _config_type$[ebp]
  01176	50		 push	 eax
  01177	e8 00 00 00 00	 call	 ?get_viewpoint_from_weapon@@YGHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@HPAUOBJECT_3D_INSTANCE@@PAUVIEWPOINT@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@4@Z ; get_viewpoint_from_weapon
  0117c	89 85 38 ff ff
	ff		 mov	 DWORD PTR _located_heading_and_pitch_devices$[ebp], eax

; 1662 : 												get_viewpoint_from_weapon(config_type, &package_status[package], package, inst3d, &vp, &search_weapon_system_heading, &search_weapon_system_pitch);
; 1663 : 
; 1664 : 											if (!located_heading_and_pitch_devices)

  01182	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR _located_heading_and_pitch_devices$[ebp], 0
  01189	0f 85 a7 00 00
	00		 jne	 $LN80@update_ent

; 1665 : 												debug_fatal("Cannot locate device to rotate (name = %s, package = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), package);

  0118f	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  01193	74 0d		 je	 SHORT $LN188@update_ent
  01195	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  01198	8b 08		 mov	 ecx, DWORD PTR [eax]
  0119a	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv733[ebp], ecx
  011a0	eb 27		 jmp	 SHORT $LN189@update_ent
$LN188@update_ent:
  011a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  011a8	81 c2 9f 01 00
	00		 add	 edx, 415		; 0000019fH
  011ae	52		 push	 edx
  011af	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  011b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  011b9	50		 push	 eax
  011ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011bf	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv733[ebp], 0
$LN189@update_ent:
  011c9	b9 01 00 00 00	 mov	 ecx, 1
  011ce	85 c9		 test	 ecx, ecx
  011d0	74 0c		 je	 SHORT $LN190@update_ent
  011d2	c7 85 1c fe ff
	ff 03 00 00 00	 mov	 DWORD PTR tv741[ebp], 3
  011dc	eb 27		 jmp	 SHORT $LN191@update_ent
$LN190@update_ent:
  011de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  011e4	81 c2 9f 01 00
	00		 add	 edx, 415		; 0000019fH
  011ea	52		 push	 edx
  011eb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  011f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  011f5	50		 push	 eax
  011f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011fb	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv741[ebp], 0
$LN191@update_ent:
  01205	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _package$[ebp]
  0120b	51		 push	 ecx
  0120c	6a 03		 push	 3
  0120e	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  01211	52		 push	 edx
  01212	6b 85 20 fe ff
	ff 34		 imul	 eax, DWORD PTR tv733[ebp], 52
  01219	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv741[ebp]
  0121f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  01226	ff d2		 call	 edx
  01228	50		 push	 eax
  01229	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@MGJJNOPJ@Cannot?5locate?5device?5to?5rotate?5@
  0122e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  01233	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN80@update_ent:

; 1666 : 										}
; 1667 : 
; 1668 : 										height_diff = vp.position.y - tracking_point->y;

  01236	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _tracking_point$20[ebp]
  0123c	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _vp$[ebp+4]
  01244	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  01249	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _height_diff$17[ebp], xmm0

; 1669 : 										range = get_range_to_target();

  01251	e8 00 00 00 00	 call	 ?get_range_to_target@@YGMXZ ; get_range_to_target
  01256	d9 9d d0 fe ff
	ff		 fstp	 DWORD PTR _range$16[ebp]

; 1670 : 
; 1671 : 										if (range <= 0.0)

  0125c	f3 0f 5a 85 d0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _range$16[ebp]
  01264	0f 57 c9	 xorps	 xmm1, xmm1
  01267	66 0f 2f c8	 comisd	 xmm1, xmm0
  0126b	72 10		 jb	 SHORT $LN81@update_ent

; 1672 : 											range = 1000.0;   // use 1000 meters if unable to determine range

  0126d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@447a0000
  01275	f3 0f 11 85 d0
	fe ff ff	 movss	 DWORD PTR _range$16[ebp], xmm0
$LN81@update_ent:

; 1673 : 
; 1674 : 										// adjust weapon elevation for range
; 1675 : 										if (get_ballistic_pitch_deflection(selected_weapon, range, height_diff, &pitch, &dummy, FALSE, FALSE))

  0127d	6a 00		 push	 0
  0127f	6a 00		 push	 0
  01281	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _dummy$18[ebp]
  01287	50		 push	 eax
  01288	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _pitch$19[ebp]
  0128e	51		 push	 ecx
  0128f	51		 push	 ecx
  01290	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _height_diff$17[ebp]
  01298	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0129d	51		 push	 ecx
  0129e	f3 0f 10 85 d0
	fe ff ff	 movss	 xmm0, DWORD PTR _range$16[ebp]
  012a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012ab	8b 55 f8	 mov	 edx, DWORD PTR _selected_weapon$[ebp]
  012ae	52		 push	 edx
  012af	e8 00 00 00 00	 call	 ?get_ballistic_pitch_deflection@@YGHHMMPAM0HH@Z ; get_ballistic_pitch_deflection
  012b4	85 c0		 test	 eax, eax
  012b6	0f 84 92 01 00
	00		 je	 $LN82@update_ent

; 1676 : 										{
; 1677 : 											matrix3x3 m;
; 1678 : 											float dx, dz;
; 1679 : 											float heading;
; 1680 : 											vec3d offset_vector, tracking_vector;
; 1681 : 
; 1682 : 											// get heading and pitch offsets
; 1683 : 
; 1684 : 											dx = tracking_point->x - vp.position.x;

  012bc	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _tracking_point$20[ebp]
  012c2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  012c6	f3 0f 5c 85 4c
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp]
  012ce	f3 0f 11 85 a8
	fe ff ff	 movss	 DWORD PTR _dx$14[ebp], xmm0

; 1685 : 											dz = tracking_point->z - vp.position.z;

  012d6	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR _tracking_point$20[ebp]
  012dc	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  012e1	f3 0f 5c 85 54
	ff ff ff	 subss	 xmm0, DWORD PTR _vp$[ebp+8]
  012e9	f3 0f 11 85 a4
	fe ff ff	 movss	 DWORD PTR _dz$13[ebp], xmm0

; 1686 : 
; 1687 : 											heading = atan2 (dx, dz);

  012f1	51		 push	 ecx
  012f2	f3 0f 10 85 a4
	fe ff ff	 movss	 xmm0, DWORD PTR _dz$13[ebp]
  012fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  012ff	51		 push	 ecx
  01300	f3 0f 10 85 a8
	fe ff ff	 movss	 xmm0, DWORD PTR _dx$14[ebp]
  01308	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0130d	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  01312	d9 9d a0 fe ff
	ff		 fstp	 DWORD PTR _heading$12[ebp]

; 1688 : 
; 1689 : 											// need to adjust for the gun's attitude, as the helicopter may not fly level all the time
; 1690 : 											get_3d_transformation_matrix (m, heading, pitch, 0.0);

  01318	51		 push	 ecx
  01319	0f 57 c0	 xorps	 xmm0, xmm0
  0131c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01321	51		 push	 ecx
  01322	f3 0f 10 85 dc
	fe ff ff	 movss	 xmm0, DWORD PTR _pitch$19[ebp]
  0132a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0132f	51		 push	 ecx
  01330	f3 0f 10 85 a0
	fe ff ff	 movss	 xmm0, DWORD PTR _heading$12[ebp]
  01338	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0133d	8d 85 ac fe ff
	ff		 lea	 eax, DWORD PTR _m$15[ebp]
  01343	50		 push	 eax
  01344	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1691 : 
; 1692 : 											tracking_vector.x = m[2][0];

  01349	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0134e	d1 e0		 shl	 eax, 1
  01350	8d 8c 05 ac fe
	ff ff		 lea	 ecx, DWORD PTR _m$15[ebp+eax]
  01357	ba 04 00 00 00	 mov	 edx, 4
  0135c	6b c2 00	 imul	 eax, edx, 0
  0135f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  01364	f3 0f 11 85 88
	fe ff ff	 movss	 DWORD PTR _tracking_vector$10[ebp], xmm0

; 1693 : 											tracking_vector.y = m[2][1];

  0136c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01371	d1 e0		 shl	 eax, 1
  01373	8d 8c 05 ac fe
	ff ff		 lea	 ecx, DWORD PTR _m$15[ebp+eax]
  0137a	ba 04 00 00 00	 mov	 edx, 4
  0137f	c1 e2 00	 shl	 edx, 0
  01382	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  01387	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR _tracking_vector$10[ebp+4], xmm0

; 1694 : 											tracking_vector.z = m[2][2];

  0138f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  01394	d1 e0		 shl	 eax, 1
  01396	8d 8c 05 ac fe
	ff ff		 lea	 ecx, DWORD PTR _m$15[ebp+eax]
  0139d	ba 04 00 00 00	 mov	 edx, 4
  013a2	d1 e2		 shl	 edx, 1
  013a4	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  013a9	f3 0f 11 85 90
	fe ff ff	 movss	 DWORD PTR _tracking_vector$10[ebp+8], xmm0

; 1695 : 
; 1696 : 											multiply_transpose_matrix3x3_vec3d (&offset_vector, vp.attitude, &tracking_vector);

  013b1	8d 85 88 fe ff
	ff		 lea	 eax, DWORD PTR _tracking_vector$10[ebp]
  013b7	50		 push	 eax
  013b8	8d 8d 58 ff ff
	ff		 lea	 ecx, DWORD PTR _vp$[ebp+12]
  013be	51		 push	 ecx
  013bf	8d 95 94 fe ff
	ff		 lea	 edx, DWORD PTR _offset_vector$11[ebp]
  013c5	52		 push	 edx
  013c6	e8 00 00 00 00	 call	 ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d

; 1697 : 
; 1698 : 											required_heading_offset = atan2 (offset_vector.x, offset_vector.z);

  013cb	51		 push	 ecx
  013cc	f3 0f 10 85 9c
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$11[ebp+8]
  013d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  013d9	51		 push	 ecx
  013da	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$11[ebp]
  013e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  013e7	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  013ec	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _required_heading_offset$[ebp]

; 1699 : 
; 1700 : 											flat_range = sqrt ((offset_vector.x * offset_vector.x) + (offset_vector.z * offset_vector.z));

  013f2	f3 0f 10 85 94
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$11[ebp]
  013fa	f3 0f 59 85 94
	fe ff ff	 mulss	 xmm0, DWORD PTR _offset_vector$11[ebp]
  01402	f3 0f 10 8d 9c
	fe ff ff	 movss	 xmm1, DWORD PTR _offset_vector$11[ebp+8]
  0140a	f3 0f 59 8d 9c
	fe ff ff	 mulss	 xmm1, DWORD PTR _offset_vector$11[ebp+8]
  01412	f3 0f 58 c1	 addss	 xmm0, xmm1
  01416	51		 push	 ecx
  01417	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0141c	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  01421	d9 9d 0c ff ff
	ff		 fstp	 DWORD PTR _flat_range$[ebp]

; 1701 : 											required_pitch_offset = atan2 (offset_vector.y, flat_range);

  01427	51		 push	 ecx
  01428	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  01430	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01435	51		 push	 ecx
  01436	f3 0f 10 85 98
	fe ff ff	 movss	 xmm0, DWORD PTR _offset_vector$11[ebp+4]
  0143e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01443	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  01448	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR _required_pitch_offset$[ebp]
$LN82@update_ent:

; 1702 : 										}
; 1703 : 									}
; 1704 : 								}
; 1705 : 
; 1706 : 								set_client_server_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_HEADING, required_heading_offset);

  0144e	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  01452	74 0d		 je	 SHORT $LN192@update_ent
  01454	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  01457	8b 08		 mov	 ecx, DWORD PTR [eax]
  01459	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv806[ebp], ecx
  0145f	eb 27		 jmp	 SHORT $LN193@update_ent
$LN192@update_ent:
  01461	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01467	81 c2 c8 01 00
	00		 add	 edx, 456		; 000001c8H
  0146d	52		 push	 edx
  0146e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01473	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01478	50		 push	 eax
  01479	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0147e	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv806[ebp], 0
$LN193@update_ent:
  01488	b9 01 00 00 00	 mov	 ecx, 1
  0148d	85 c9		 test	 ecx, ecx
  0148f	74 0c		 je	 SHORT $LN194@update_ent
  01491	c7 85 1c fe ff
	ff 55 00 00 00	 mov	 DWORD PTR tv814[ebp], 85 ; 00000055H
  0149b	eb 27		 jmp	 SHORT $LN195@update_ent
$LN194@update_ent:
  0149d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  014a3	81 c2 c8 01 00
	00		 add	 edx, 456		; 000001c8H
  014a9	52		 push	 edx
  014aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  014af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  014b4	50		 push	 eax
  014b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  014ba	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv814[ebp], 0
$LN195@update_ent:
  014c4	51		 push	 ecx
  014c5	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  014cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  014d2	6a 55		 push	 85			; 00000055H
  014d4	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  014d7	51		 push	 ecx
  014d8	69 95 20 fe ff
	ff 78 05 00 00	 imul	 edx, DWORD PTR tv806[ebp], 1400
  014e2	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv814[ebp]
  014e8	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  014ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  014f5	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  014f8	ff d0		 call	 eax

; 1707 : 								set_client_server_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_PITCH, required_pitch_offset);

  014fa	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  014fe	74 0d		 je	 SHORT $LN196@update_ent
  01500	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  01503	8b 08		 mov	 ecx, DWORD PTR [eax]
  01505	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv828[ebp], ecx
  0150b	eb 27		 jmp	 SHORT $LN197@update_ent
$LN196@update_ent:
  0150d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01513	81 c2 c9 01 00
	00		 add	 edx, 457		; 000001c9H
  01519	52		 push	 edx
  0151a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0151f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01524	50		 push	 eax
  01525	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0152a	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv828[ebp], 0
$LN197@update_ent:
  01534	b9 01 00 00 00	 mov	 ecx, 1
  01539	85 c9		 test	 ecx, ecx
  0153b	74 0c		 je	 SHORT $LN198@update_ent
  0153d	c7 85 1c fe ff
	ff 56 00 00 00	 mov	 DWORD PTR tv836[ebp], 86 ; 00000056H
  01547	eb 27		 jmp	 SHORT $LN199@update_ent
$LN198@update_ent:
  01549	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0154f	81 c2 c9 01 00
	00		 add	 edx, 457		; 000001c9H
  01555	52		 push	 edx
  01556	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0155b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01560	50		 push	 eax
  01561	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01566	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv836[ebp], 0
$LN199@update_ent:
  01570	51		 push	 ecx
  01571	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  01579	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0157e	6a 56		 push	 86			; 00000056H
  01580	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  01583	51		 push	 ecx
  01584	69 95 20 fe ff
	ff 78 05 00 00	 imul	 edx, DWORD PTR tv828[ebp], 1400
  0158e	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv836[ebp]
  01594	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  0159b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  015a1	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  015a4	ff d0		 call	 eax

; 1708 : 							}
; 1709 : 							else

  015a6	e9 8f 02 00 00	 jmp	 $LN83@update_ent
$LN65@update_ent:

; 1710 : 							{
; 1711 : 								if ((get_comms_model () == COMMS_MODEL_SERVER) && (get_local_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_HEADING) || get_local_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_PITCH)))

  015ab	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  015b2	0f 85 82 02 00
	00		 jne	 $LN83@update_ent
  015b8	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  015bc	74 0d		 je	 SHORT $LN200@update_ent
  015be	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  015c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  015c3	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv850[ebp], ecx
  015c9	eb 20		 jmp	 SHORT $LN201@update_ent
$LN200@update_ent:
  015cb	68 af 06 00 00	 push	 1711			; 000006afH
  015d0	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  015d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  015db	52		 push	 edx
  015dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  015e1	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv850[ebp], 0
$LN201@update_ent:
  015eb	b8 01 00 00 00	 mov	 eax, 1
  015f0	85 c0		 test	 eax, eax
  015f2	74 0c		 je	 SHORT $LN202@update_ent
  015f4	c7 85 1c fe ff
	ff 55 00 00 00	 mov	 DWORD PTR tv857[ebp], 85 ; 00000055H
  015fe	eb 20		 jmp	 SHORT $LN203@update_ent
$LN202@update_ent:
  01600	68 af 06 00 00	 push	 1711			; 000006afH
  01605	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0160a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01610	51		 push	 ecx
  01611	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01616	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv857[ebp], 0
$LN203@update_ent:
  01620	6a 55		 push	 85			; 00000055H
  01622	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  01625	52		 push	 edx
  01626	69 85 20 fe ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv850[ebp], 700
  01630	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv857[ebp]
  01636	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0163d	ff d2		 call	 edx
  0163f	d9 9d 18 fe ff
	ff		 fstp	 DWORD PTR tv1660[ebp]
  01645	f3 0f 10 85 18
	fe ff ff	 movss	 xmm0, DWORD PTR tv1660[ebp]
  0164d	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  01654	9f		 lahf
  01655	f6 c4 44	 test	 ah, 68			; 00000044H
  01658	0f 8a a6 00 00
	00		 jp	 $LN84@update_ent
  0165e	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  01662	74 0d		 je	 SHORT $LN204@update_ent
  01664	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  01667	8b 08		 mov	 ecx, DWORD PTR [eax]
  01669	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv869[ebp], ecx
  0166f	eb 20		 jmp	 SHORT $LN205@update_ent
$LN204@update_ent:
  01671	68 af 06 00 00	 push	 1711			; 000006afH
  01676	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0167b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01681	52		 push	 edx
  01682	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01687	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv869[ebp], 0
$LN205@update_ent:
  01691	b8 01 00 00 00	 mov	 eax, 1
  01696	85 c0		 test	 eax, eax
  01698	74 0c		 je	 SHORT $LN206@update_ent
  0169a	c7 85 1c fe ff
	ff 56 00 00 00	 mov	 DWORD PTR tv876[ebp], 86 ; 00000056H
  016a4	eb 20		 jmp	 SHORT $LN207@update_ent
$LN206@update_ent:
  016a6	68 af 06 00 00	 push	 1711			; 000006afH
  016ab	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  016b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  016b6	51		 push	 ecx
  016b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  016bc	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv876[ebp], 0
$LN207@update_ent:
  016c6	6a 56		 push	 86			; 00000056H
  016c8	8b 55 08	 mov	 edx, DWORD PTR _source$[ebp]
  016cb	52		 push	 edx
  016cc	69 85 20 fe ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv869[ebp], 700
  016d6	8b 8d 1c fe ff
	ff		 mov	 ecx, DWORD PTR tv876[ebp]
  016dc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  016e3	ff d2		 call	 edx
  016e5	d9 9d 18 fe ff
	ff		 fstp	 DWORD PTR tv1674[ebp]
  016eb	f3 0f 10 85 18
	fe ff ff	 movss	 xmm0, DWORD PTR tv1674[ebp]
  016f3	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  016fa	9f		 lahf
  016fb	f6 c4 44	 test	 ah, 68			; 00000044H
  016fe	0f 8b 36 01 00
	00		 jnp	 $LN83@update_ent
$LN84@update_ent:

; 1712 : 								{
; 1713 : 									required_heading_offset = get_local_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_HEADING);

  01704	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  01708	74 0d		 je	 SHORT $LN208@update_ent
  0170a	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  0170d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0170f	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv889[ebp], ecx
  01715	eb 27		 jmp	 SHORT $LN209@update_ent
$LN208@update_ent:
  01717	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  0171d	81 c2 cf 01 00
	00		 add	 edx, 463		; 000001cfH
  01723	52		 push	 edx
  01724	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01729	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0172e	50		 push	 eax
  0172f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01734	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv889[ebp], 0
$LN209@update_ent:
  0173e	b9 01 00 00 00	 mov	 ecx, 1
  01743	85 c9		 test	 ecx, ecx
  01745	74 0c		 je	 SHORT $LN210@update_ent
  01747	c7 85 1c fe ff
	ff 55 00 00 00	 mov	 DWORD PTR tv897[ebp], 85 ; 00000055H
  01751	eb 27		 jmp	 SHORT $LN211@update_ent
$LN210@update_ent:
  01753	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01759	81 c2 cf 01 00
	00		 add	 edx, 463		; 000001cfH
  0175f	52		 push	 edx
  01760	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01765	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0176a	50		 push	 eax
  0176b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01770	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv897[ebp], 0
$LN211@update_ent:
  0177a	6a 55		 push	 85			; 00000055H
  0177c	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0177f	51		 push	 ecx
  01780	69 95 20 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv889[ebp], 700
  0178a	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv897[ebp]
  01790	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01797	ff d1		 call	 ecx
  01799	d9 9d 2c ff ff
	ff		 fstp	 DWORD PTR _required_heading_offset$[ebp]

; 1714 : 
; 1715 : 									required_pitch_offset = get_local_entity_float_value (source, FLOAT_TYPE_PLAYER_WEAPON_PITCH);

  0179f	83 7d 08 00	 cmp	 DWORD PTR _source$[ebp], 0
  017a3	74 0d		 je	 SHORT $LN212@update_ent
  017a5	8b 45 08	 mov	 eax, DWORD PTR _source$[ebp]
  017a8	8b 08		 mov	 ecx, DWORD PTR [eax]
  017aa	89 8d 20 fe ff
	ff		 mov	 DWORD PTR tv909[ebp], ecx
  017b0	eb 27		 jmp	 SHORT $LN213@update_ent
$LN212@update_ent:
  017b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  017b8	81 c2 d1 01 00
	00		 add	 edx, 465		; 000001d1H
  017be	52		 push	 edx
  017bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  017c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  017c9	50		 push	 eax
  017ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  017cf	c7 85 20 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv909[ebp], 0
$LN213@update_ent:
  017d9	b9 01 00 00 00	 mov	 ecx, 1
  017de	85 c9		 test	 ecx, ecx
  017e0	74 0c		 je	 SHORT $LN214@update_ent
  017e2	c7 85 1c fe ff
	ff 56 00 00 00	 mov	 DWORD PTR tv917[ebp], 86 ; 00000056H
  017ec	eb 27		 jmp	 SHORT $LN215@update_ent
$LN214@update_ent:
  017ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  017f4	81 c2 d1 01 00
	00		 add	 edx, 465		; 000001d1H
  017fa	52		 push	 edx
  017fb	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01800	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  01805	50		 push	 eax
  01806	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0180b	c7 85 1c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv917[ebp], 0
$LN215@update_ent:
  01815	6a 56		 push	 86			; 00000056H
  01817	8b 4d 08	 mov	 ecx, DWORD PTR _source$[ebp]
  0181a	51		 push	 ecx
  0181b	69 95 20 fe ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv909[ebp], 700
  01825	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv917[ebp]
  0182b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  01832	ff d1		 call	 ecx
  01834	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR _required_pitch_offset$[ebp]
$LN83@update_ent:

; 1716 : 								}
; 1717 : 							}
; 1718 : 							required_heading_offset = bound

  0183a	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01841	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01848	f3 0f 10 84 08
	24 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+36]
  01851	0f 2f 85 2c ff
	ff ff		 comiss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  01858	76 21		 jbe	 SHORT $LN218@update_ent
  0185a	69 55 f0 80 09
	00 00		 imul	 edx, DWORD PTR _config_type$[ebp], 2432
  01861	6b 85 3c ff ff
	ff 4c		 imul	 eax, DWORD PTR _package$[ebp], 76
  01868	f3 0f 10 84 02
	24 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[edx+eax+36]
  01871	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv946[ebp], xmm0
  01879	eb 61		 jmp	 SHORT $LN219@update_ent
$LN218@update_ent:
  0187b	69 4d f0 80 09
	00 00		 imul	 ecx, DWORD PTR _config_type$[ebp], 2432
  01882	6b 95 3c ff ff
	ff 4c		 imul	 edx, DWORD PTR _package$[ebp], 76
  01889	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  01891	0f 2f 84 11 28
	00 00 00	 comiss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[ecx+edx+40]
  01899	76 21		 jbe	 SHORT $LN216@update_ent
  0189b	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  018a2	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  018a9	f3 0f 10 84 08
	28 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+40]
  018b2	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv945[ebp], xmm0
  018ba	eb 10		 jmp	 SHORT $LN217@update_ent
$LN216@update_ent:
  018bc	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  018c4	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv945[ebp], xmm0
$LN217@update_ent:
  018cc	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv945[ebp]
  018d4	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv946[ebp], xmm0
$LN219@update_ent:
  018dc	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv946[ebp]
  018e4	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _required_heading_offset$[ebp], xmm0

; 1719 : 							(
; 1720 : 								required_heading_offset,
; 1721 : 								weapon_config_database[config_type][package].min_heading_limit,
; 1722 : 								weapon_config_database[config_type][package].max_heading_limit
; 1723 : 							);
; 1724 : 
; 1725 : 							required_pitch_offset = bound

  018ec	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  018f3	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  018fa	f3 0f 10 84 08
	30 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+48]
  01903	0f 2f 85 28 ff
	ff ff		 comiss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  0190a	76 21		 jbe	 SHORT $LN222@update_ent
  0190c	69 55 f0 80 09
	00 00		 imul	 edx, DWORD PTR _config_type$[ebp], 2432
  01913	6b 85 3c ff ff
	ff 4c		 imul	 eax, DWORD PTR _package$[ebp], 76
  0191a	f3 0f 10 84 02
	30 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[edx+eax+48]
  01923	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv970[ebp], xmm0
  0192b	eb 61		 jmp	 SHORT $LN223@update_ent
$LN222@update_ent:
  0192d	69 4d f0 80 09
	00 00		 imul	 ecx, DWORD PTR _config_type$[ebp], 2432
  01934	6b 95 3c ff ff
	ff 4c		 imul	 edx, DWORD PTR _package$[ebp], 76
  0193b	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  01943	0f 2f 84 11 34
	00 00 00	 comiss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[ecx+edx+52]
  0194b	76 21		 jbe	 SHORT $LN220@update_ent
  0194d	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01954	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  0195b	f3 0f 10 84 08
	34 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+52]
  01964	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv969[ebp], xmm0
  0196c	eb 10		 jmp	 SHORT $LN221@update_ent
$LN220@update_ent:
  0196e	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  01976	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv969[ebp], xmm0
$LN221@update_ent:
  0197e	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv969[ebp]
  01986	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv970[ebp], xmm0
$LN223@update_ent:
  0198e	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv970[ebp]
  01996	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _required_pitch_offset$[ebp], xmm0
$LN64@update_ent:

; 1726 : 							(
; 1727 : 								required_pitch_offset,
; 1728 : 								weapon_config_database[config_type][package].min_pitch_limit,
; 1729 : 								weapon_config_database[config_type][package].max_pitch_limit
; 1730 : 							);
; 1731 : 
; 1732 : 						}
; 1733 : 					// 050320 Jabberwock ends
; 1734 : 					}
; 1735 : 
; 1736 : 						//set_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON_SYSTEM_READY, FALSE);
; 1737 : 
; 1738 : 
; 1739 : 					if ((required_heading_offset != package_status[package].weapon_system_heading) || (required_pitch_offset != package_status[package].weapon_system_pitch))

  0199e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  019a4	c1 e0 04	 shl	 eax, 4
  019a7	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  019aa	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  019b2	0f 2e 44 01 04	 ucomiss xmm0, DWORD PTR [ecx+eax+4]
  019b7	9f		 lahf
  019b8	f6 c4 44	 test	 ah, 68			; 00000044H
  019bb	7a 23		 jp	 SHORT $LN86@update_ent
  019bd	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  019c3	c1 e0 04	 shl	 eax, 4
  019c6	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  019c9	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  019d1	0f 2e 44 01 08	 ucomiss xmm0, DWORD PTR [ecx+eax+8]
  019d6	9f		 lahf
  019d7	f6 c4 44	 test	 ah, 68			; 00000044H
  019da	0f 8b fa 06 00
	00		 jnp	 $LN108@update_ent
$LN86@update_ent:

; 1740 : 					{
; 1741 : 						if (!located_heading_and_pitch_devices)

  019e0	83 bd 38 ff ff
	ff 00		 cmp	 DWORD PTR _located_heading_and_pitch_devices$[ebp], 0
  019e7	75 73		 jne	 SHORT $LN89@update_ent

; 1742 : 						{
; 1743 : 							search_weapon_system_heading.search_depth = weapon_config_database[config_type][package].heading_depth;

  019e9	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  019f0	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  019f7	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  019fe	89 55 bc	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 1744 : 							search_weapon_system_heading.search_object = inst3d;

  01a01	8b 45 ec	 mov	 eax, DWORD PTR _inst3d$[ebp]
  01a04	89 45 b4	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 1745 : 							search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  01a07	c7 45 c0 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 1746 : 
; 1747 : 							if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  01a0e	8d 45 b4	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  01a11	50		 push	 eax
  01a12	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  01a17	83 f8 01	 cmp	 eax, 1
  01a1a	75 3b		 jne	 SHORT $LN88@update_ent

; 1748 : 							{
; 1749 : 								search_weapon_system_pitch.search_depth = weapon_config_database[config_type][package].pitch_depth;

  01a1c	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01a23	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01a2a	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  01a31	89 55 84	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 1750 : 								search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  01a34	c7 45 88 1c 00
	00 00		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 1751 : 
; 1752 : 								if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) != SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  01a3b	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  01a41	50		 push	 eax
  01a42	8d 4d b4	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  01a45	51		 push	 ecx
  01a46	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  01a4b	83 f8 01	 cmp	 eax, 1
  01a4e	74 05		 je	 SHORT $LN90@update_ent

; 1753 : 								{
; 1754 : //									debug_colour_log (DEBUG_COLOUR_AMBER, "Cannot locate pitch device to rotate (name = %s, package = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), package);
; 1755 : 
; 1756 : 									return;

  01a50	e9 66 07 00 00	 jmp	 $LN1@update_ent
$LN90@update_ent:

; 1757 : 								}
; 1758 : 							}
; 1759 : 							else

  01a55	eb 05		 jmp	 SHORT $LN89@update_ent
$LN88@update_ent:

; 1760 : 							{
; 1761 : //								debug_colour_log (DEBUG_COLOUR_AMBER, "Cannot locate heading device to rotate (name = %s, package = %d)", get_local_entity_string (source, STRING_TYPE_FULL_NAME), package);
; 1762 : 
; 1763 : 								return;

  01a57	e9 5f 07 00 00	 jmp	 $LN1@update_ent
$LN89@update_ent:

; 1764 : 							}
; 1765 : 						}
; 1766 : 
; 1767 : 						delta_heading_offset = required_heading_offset - package_status[package].weapon_system_heading;

  01a5c	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01a62	c1 e0 04	 shl	 eax, 4
  01a65	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01a68	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _required_heading_offset$[ebp]
  01a70	f3 0f 5c 44 01
	04		 subss	 xmm0, DWORD PTR [ecx+eax+4]
  01a76	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _delta_heading_offset$[ebp], xmm0

; 1768 : 
; 1769 : 						if
; 1770 : 						(
; 1771 : 							(weapon_config_database[config_type][package].min_heading_limit == (float) rad (-180.0)) &&

  01a7e	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01a85	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01a8c	f3 0f 10 84 08
	24 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+36]
  01a95	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@c0490fdb
  01a9c	9f		 lahf
  01a9d	f6 c4 44	 test	 ah, 68			; 00000044H
  01aa0	0f 8a 86 00 00
	00		 jp	 $LN94@update_ent
  01aa6	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01aad	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01ab4	f3 0f 10 84 08
	28 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+40]
  01abd	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@40490fdb
  01ac4	9f		 lahf
  01ac5	f6 c4 44	 test	 ah, 68			; 00000044H
  01ac8	7a 62		 jp	 SHORT $LN94@update_ent

; 1772 : 							(weapon_config_database[config_type][package].max_heading_limit == (float) rad (180.0))
; 1773 : 						)
; 1774 : 						{
; 1775 : 							if (delta_heading_offset > rad (180.0))

  01aca	f3 0f 5a 85 24
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01ad2	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  01ada	76 1e		 jbe	 SHORT $LN92@update_ent

; 1776 : 							{
; 1777 : 								delta_heading_offset -= rad (360.0);

  01adc	f3 0f 5a 85 24
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01ae4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  01aec	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01af0	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _delta_heading_offset$[ebp], xmm0
  01af8	eb 32		 jmp	 SHORT $LN94@update_ent
$LN92@update_ent:

; 1778 : 							}
; 1779 : 							else if (delta_heading_offset < rad (-180.0))

  01afa	f3 0f 5a 85 24
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01b02	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  01b0a	66 0f 2f c8	 comisd	 xmm1, xmm0
  01b0e	76 1c		 jbe	 SHORT $LN94@update_ent

; 1780 : 							{
; 1781 : 								delta_heading_offset += rad (360.0);

  01b10	f3 0f 5a 85 24
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01b18	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  01b20	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01b24	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _delta_heading_offset$[ebp], xmm0
$LN94@update_ent:

; 1782 : 							}
; 1783 : 						}
; 1784 : 
; 1785 : 						heading_rate_delta_time = weapon_config_database[config_type][package].heading_rate * get_delta_time ();

  01b2c	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01b33	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01b3a	f3 0f 10 84 08
	20 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+32]
  01b43	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  01b4b	f3 0f 11 85 1c
	ff ff ff	 movss	 DWORD PTR _heading_rate_delta_time$[ebp], xmm0

; 1786 : 
; 1787 : 						delta_heading_offset = bound (delta_heading_offset, -heading_rate_delta_time, heading_rate_delta_time);

  01b53	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _heading_rate_delta_time$[ebp]
  01b5b	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01b62	0f 2f 85 24 ff
	ff ff		 comiss	 xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01b69	76 19		 jbe	 SHORT $LN226@update_ent
  01b6b	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _heading_rate_delta_time$[ebp]
  01b73	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01b7a	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv1066[ebp], xmm0
  01b82	eb 43		 jmp	 SHORT $LN227@update_ent
$LN226@update_ent:
  01b84	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01b8c	0f 2f 85 1c ff
	ff ff		 comiss	 xmm0, DWORD PTR _heading_rate_delta_time$[ebp]
  01b93	76 12		 jbe	 SHORT $LN224@update_ent
  01b95	f3 0f 10 85 1c
	ff ff ff	 movss	 xmm0, DWORD PTR _heading_rate_delta_time$[ebp]
  01b9d	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv1065[ebp], xmm0
  01ba5	eb 10		 jmp	 SHORT $LN225@update_ent
$LN224@update_ent:
  01ba7	f3 0f 10 85 24
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01baf	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv1065[ebp], xmm0
$LN225@update_ent:
  01bb7	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv1065[ebp]
  01bbf	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv1066[ebp], xmm0
$LN227@update_ent:
  01bc7	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv1066[ebp]
  01bcf	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _delta_heading_offset$[ebp], xmm0

; 1788 : 
; 1789 : 						new_heading_offset = package_status[package].weapon_system_heading + delta_heading_offset;

  01bd7	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01bdd	c1 e0 04	 shl	 eax, 4
  01be0	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01be3	f3 0f 10 44 01
	04		 movss	 xmm0, DWORD PTR [ecx+eax+4]
  01be9	f3 0f 58 85 24
	ff ff ff	 addss	 xmm0, DWORD PTR _delta_heading_offset$[ebp]
  01bf1	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _new_heading_offset$[ebp], xmm0

; 1790 : 
; 1791 : 						if (new_heading_offset > rad (180.0))

  01bf9	f3 0f 5a 85 14
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _new_heading_offset$[ebp]
  01c01	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  01c09	76 1a		 jbe	 SHORT $LN95@update_ent

; 1792 : 						{
; 1793 : 							new_heading_offset -= rad (360);

  01c0b	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01c13	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40c90fdb
  01c1b	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _new_heading_offset$[ebp], xmm0
  01c23	eb 2e		 jmp	 SHORT $LN97@update_ent
$LN95@update_ent:

; 1794 : 						}
; 1795 : 						else if (new_heading_offset < rad (-180.0))

  01c25	f3 0f 5a 85 14
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _new_heading_offset$[ebp]
  01c2d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  01c35	66 0f 2f c8	 comisd	 xmm1, xmm0
  01c39	76 18		 jbe	 SHORT $LN97@update_ent

; 1796 : 						{
; 1797 : 							new_heading_offset += rad (360);

  01c3b	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01c43	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  01c4b	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _new_heading_offset$[ebp], xmm0
$LN97@update_ent:

; 1798 : 						}
; 1799 : 
; 1800 : 						////////////////////////////////////////
; 1801 : 
; 1802 : 						delta_pitch_offset = required_pitch_offset - package_status[package].weapon_system_pitch;

  01c53	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01c59	c1 e0 04	 shl	 eax, 4
  01c5c	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01c5f	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _required_pitch_offset$[ebp]
  01c67	f3 0f 5c 44 01
	08		 subss	 xmm0, DWORD PTR [ecx+eax+8]
  01c6d	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _delta_pitch_offset$[ebp], xmm0

; 1803 : 
; 1804 : 						pitch_rate_delta_time = weapon_config_database[config_type][package].pitch_rate * get_delta_time ();

  01c75	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01c7c	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01c83	f3 0f 10 84 08
	2c 00 00 00	 movss	 xmm0, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+44]
  01c8c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  01c94	f3 0f 11 85 18
	ff ff ff	 movss	 DWORD PTR _pitch_rate_delta_time$[ebp], xmm0

; 1805 : 
; 1806 : 						delta_pitch_offset = bound (delta_pitch_offset, -pitch_rate_delta_time, pitch_rate_delta_time);

  01c9c	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _pitch_rate_delta_time$[ebp]
  01ca4	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01cab	0f 2f 85 20 ff
	ff ff		 comiss	 xmm0, DWORD PTR _delta_pitch_offset$[ebp]
  01cb2	76 19		 jbe	 SHORT $LN230@update_ent
  01cb4	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _pitch_rate_delta_time$[ebp]
  01cbc	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  01cc3	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv1092[ebp], xmm0
  01ccb	eb 43		 jmp	 SHORT $LN231@update_ent
$LN230@update_ent:
  01ccd	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_pitch_offset$[ebp]
  01cd5	0f 2f 85 18 ff
	ff ff		 comiss	 xmm0, DWORD PTR _pitch_rate_delta_time$[ebp]
  01cdc	76 12		 jbe	 SHORT $LN228@update_ent
  01cde	f3 0f 10 85 18
	ff ff ff	 movss	 xmm0, DWORD PTR _pitch_rate_delta_time$[ebp]
  01ce6	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv1091[ebp], xmm0
  01cee	eb 10		 jmp	 SHORT $LN229@update_ent
$LN228@update_ent:
  01cf0	f3 0f 10 85 20
	ff ff ff	 movss	 xmm0, DWORD PTR _delta_pitch_offset$[ebp]
  01cf8	f3 0f 11 85 1c
	fe ff ff	 movss	 DWORD PTR tv1091[ebp], xmm0
$LN229@update_ent:
  01d00	f3 0f 10 85 1c
	fe ff ff	 movss	 xmm0, DWORD PTR tv1091[ebp]
  01d08	f3 0f 11 85 20
	fe ff ff	 movss	 DWORD PTR tv1092[ebp], xmm0
$LN231@update_ent:
  01d10	f3 0f 10 85 20
	fe ff ff	 movss	 xmm0, DWORD PTR tv1092[ebp]
  01d18	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _delta_pitch_offset$[ebp], xmm0

; 1807 : 
; 1808 : 						new_pitch_offset = package_status[package].weapon_system_pitch + delta_pitch_offset;

  01d20	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01d26	c1 e0 04	 shl	 eax, 4
  01d29	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01d2c	f3 0f 10 44 01
	08		 movss	 xmm0, DWORD PTR [ecx+eax+8]
  01d32	f3 0f 58 85 20
	ff ff ff	 addss	 xmm0, DWORD PTR _delta_pitch_offset$[ebp]
  01d3a	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _new_pitch_offset$[ebp], xmm0

; 1809 : 
; 1810 : 						////////////////////////////////////////
; 1811 : 						//
; 1812 : 						// shared heading devices arbitrate for control
; 1813 : 						//
; 1814 : 						////////////////////////////////////////
; 1815 : 
; 1816 : 						if (weapon_config_database[config_type][package].heading_share_mask)

  01d42	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01d49	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01d50	83 bc 08 40 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+64], 0
  01d58	0f 84 7f 01 00
	00		 je	 $LN98@update_ent

; 1817 : 						{
; 1818 : 							unsigned int
; 1819 : 								heading_share_mask,
; 1820 : 								mask;
; 1821 : 
; 1822 : 							int
; 1823 : 								i,
; 1824 : 								control_package;
; 1825 : 
; 1826 : 							heading_share_mask = weapon_config_database[config_type][package].heading_share_mask;

  01d5e	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01d65	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01d6c	8b 94 08 40 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+64]
  01d73	89 95 84 fe ff
	ff		 mov	 DWORD PTR _heading_share_mask$9[ebp], edx

; 1827 : 
; 1828 : 							//
; 1829 : 							// selected weapon packages take priority
; 1830 : 							//
; 1831 : 
; 1832 : 							mask = selected_weapon_mask & heading_share_mask;

  01d79	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _selected_weapon_mask$[ebp]
  01d7f	23 85 84 fe ff
	ff		 and	 eax, DWORD PTR _heading_share_mask$9[ebp]
  01d85	89 85 80 fe ff
	ff		 mov	 DWORD PTR _mask$8[ebp], eax

; 1833 : 
; 1834 : 							if (!mask)

  01d8b	75 0c		 jne	 SHORT $LN100@update_ent

; 1835 : 							{
; 1836 : 								mask = heading_share_mask;

  01d8d	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR _heading_share_mask$9[ebp]
  01d93	89 85 80 fe ff
	ff		 mov	 DWORD PTR _mask$8[ebp], eax
$LN100@update_ent:

; 1837 : 							}
; 1838 : 
; 1839 : 							ASSERT (mask);

  01d99	83 bd 80 fe ff
	ff 00		 cmp	 DWORD PTR _mask$8[ebp], 0
  01da0	75 1a		 jne	 SHORT $LN101@update_ent
  01da2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01da7	05 4d 02 00 00	 add	 eax, 589		; 0000024dH
  01dac	50		 push	 eax
  01dad	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01db2	68 00 00 00 00	 push	 OFFSET ??_C@_04LFLEPBN@mask@
  01db7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN101@update_ent:

; 1840 : 
; 1841 : 							//
; 1842 : 							// first shared package encountered takes control of the heading device
; 1843 : 							//
; 1844 : 
; 1845 : 							control_package = 0;

  01dbc	c7 85 78 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _control_package$6[ebp], 0

; 1846 : 
; 1847 : 							for (i = 0; i < NUM_WEAPON_PACKAGES; i++)

  01dc6	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$7[ebp], 0
  01dd0	eb 0f		 jmp	 SHORT $LN18@update_ent
$LN16@update_ent:
  01dd2	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  01dd8	83 c0 01	 add	 eax, 1
  01ddb	89 85 7c fe ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
$LN18@update_ent:
  01de1	83 bd 7c fe ff
	ff 20		 cmp	 DWORD PTR _i$7[ebp], 32	; 00000020H
  01de8	7d 2c		 jge	 SHORT $LN17@update_ent

; 1848 : 							{
; 1849 : 								if (mask & 1)

  01dea	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _mask$8[ebp]
  01df0	83 e0 01	 and	 eax, 1
  01df3	74 02		 je	 SHORT $LN102@update_ent

; 1850 : 								{
; 1851 : 									break;

  01df5	eb 1f		 jmp	 SHORT $LN17@update_ent
$LN102@update_ent:

; 1852 : 								}
; 1853 : 
; 1854 : 								control_package++;

  01df7	8b 85 78 fe ff
	ff		 mov	 eax, DWORD PTR _control_package$6[ebp]
  01dfd	83 c0 01	 add	 eax, 1
  01e00	89 85 78 fe ff
	ff		 mov	 DWORD PTR _control_package$6[ebp], eax

; 1855 : 
; 1856 : 								mask >>= 1;

  01e06	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _mask$8[ebp]
  01e0c	d1 e8		 shr	 eax, 1
  01e0e	89 85 80 fe ff
	ff		 mov	 DWORD PTR _mask$8[ebp], eax

; 1857 : 							}

  01e14	eb bc		 jmp	 SHORT $LN16@update_ent
$LN17@update_ent:

; 1858 : 
; 1859 : 							ASSERT (control_package < NUM_WEAPON_PACKAGES);

  01e16	83 bd 78 fe ff
	ff 20		 cmp	 DWORD PTR _control_package$6[ebp], 32 ; 00000020H
  01e1d	7c 1a		 jl	 SHORT $LN103@update_ent
  01e1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01e24	05 61 02 00 00	 add	 eax, 609		; 00000261H
  01e29	50		 push	 eax
  01e2a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01e2f	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JPODKHFL@control_package?5?$DM?5NUM_WEAPON_PA@
  01e34	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN103@update_ent:

; 1860 : 
; 1861 : 							//
; 1862 : 							// set heading value in all shared devices
; 1863 : 							//
; 1864 : 
; 1865 : 							if (package == control_package)

  01e39	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01e3f	3b 85 78 fe ff
	ff		 cmp	 eax, DWORD PTR _control_package$6[ebp]
  01e45	0f 85 90 00 00
	00		 jne	 $LN104@update_ent

; 1866 : 							{
; 1867 : 								mask = 1;

  01e4b	c7 85 80 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _mask$8[ebp], 1

; 1868 : 
; 1869 : 								for (i = 0; i < NUM_WEAPON_PACKAGES; i++)

  01e55	c7 85 7c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$7[ebp], 0
  01e5f	eb 0f		 jmp	 SHORT $LN21@update_ent
$LN19@update_ent:
  01e61	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  01e67	83 c0 01	 add	 eax, 1
  01e6a	89 85 7c fe ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
$LN21@update_ent:
  01e70	83 bd 7c fe ff
	ff 20		 cmp	 DWORD PTR _i$7[ebp], 32	; 00000020H
  01e77	7d 52		 jge	 SHORT $LN20@update_ent

; 1870 : 								{
; 1871 : 									if (weapon_config_database[config_type][i].number == 0)

  01e79	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01e80	6b 8d 7c fe ff
	ff 4c		 imul	 ecx, DWORD PTR _i$7[ebp], 76
  01e87	83 bc 08 04 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4], 0
  01e8f	75 02		 jne	 SHORT $LN105@update_ent

; 1872 : 									{
; 1873 : 										break;

  01e91	eb 38		 jmp	 SHORT $LN20@update_ent
$LN105@update_ent:

; 1874 : 									}
; 1875 : 
; 1876 : 									if (mask & heading_share_mask)

  01e93	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _mask$8[ebp]
  01e99	23 85 84 fe ff
	ff		 and	 eax, DWORD PTR _heading_share_mask$9[ebp]
  01e9f	74 1a		 je	 SHORT $LN106@update_ent

; 1877 : 									{
; 1878 : 										package_status[i].weapon_system_heading = new_heading_offset;

  01ea1	8b 85 7c fe ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  01ea7	c1 e0 04	 shl	 eax, 4
  01eaa	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01ead	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01eb5	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0
$LN106@update_ent:

; 1879 : 									}
; 1880 : 
; 1881 : 									mask <<= 1;

  01ebb	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR _mask$8[ebp]
  01ec1	d1 e0		 shl	 eax, 1
  01ec3	89 85 80 fe ff
	ff		 mov	 DWORD PTR _mask$8[ebp], eax

; 1882 : 								}

  01ec9	eb 96		 jmp	 SHORT $LN19@update_ent
$LN20@update_ent:

; 1883 : 
; 1884 : 								search_weapon_system_heading.result_sub_object->relative_heading = new_heading_offset;

  01ecb	8b 45 b8	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp+4]
  01ece	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01ed6	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
$LN104@update_ent:

; 1885 : 							}
; 1886 : 						}
; 1887 : 						else

  01edb	eb 2a		 jmp	 SHORT $LN99@update_ent
$LN98@update_ent:

; 1888 : 						{
; 1889 : 							package_status[package].weapon_system_heading = new_heading_offset;

  01edd	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  01ee3	c1 e0 04	 shl	 eax, 4
  01ee6	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  01ee9	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01ef1	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0

; 1890 : 
; 1891 : 							search_weapon_system_heading.result_sub_object->relative_heading = new_heading_offset;

  01ef7	8b 45 b8	 mov	 eax, DWORD PTR _search_weapon_system_heading$[ebp+4]
  01efa	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _new_heading_offset$[ebp]
  01f02	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0
$LN99@update_ent:

; 1892 : 						}
; 1893 : 
; 1894 : 						////////////////////////////////////////
; 1895 : 						//
; 1896 : 						// shared pitch devices arbitrate for control
; 1897 : 						//
; 1898 : 						////////////////////////////////////////
; 1899 : 
; 1900 : 						if (weapon_config_database[config_type][package].pitch_share_mask)

  01f07	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01f0e	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01f15	83 bc 08 44 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+68], 0
  01f1d	0f 84 86 01 00
	00		 je	 $LN107@update_ent

; 1901 : 						{
; 1902 : 							unsigned int
; 1903 : 								pitch_share_mask,
; 1904 : 								mask;
; 1905 : 
; 1906 : 							int
; 1907 : 								i,
; 1908 : 								control_package;
; 1909 : 
; 1910 : 							pitch_share_mask = weapon_config_database[config_type][package].pitch_share_mask;

  01f23	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  01f2a	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  01f31	8b 94 08 44 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+68]
  01f38	89 95 74 fe ff
	ff		 mov	 DWORD PTR _pitch_share_mask$5[ebp], edx

; 1911 : 
; 1912 : 							//
; 1913 : 							// selected weapon packages take priority
; 1914 : 							//
; 1915 : 
; 1916 : 							mask = selected_weapon_mask & pitch_share_mask;

  01f3e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _selected_weapon_mask$[ebp]
  01f44	23 85 74 fe ff
	ff		 and	 eax, DWORD PTR _pitch_share_mask$5[ebp]
  01f4a	89 85 70 fe ff
	ff		 mov	 DWORD PTR _mask$4[ebp], eax

; 1917 : 
; 1918 : 							if (!mask)

  01f50	75 0c		 jne	 SHORT $LN109@update_ent

; 1919 : 							{
; 1920 : 								mask = pitch_share_mask;

  01f52	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR _pitch_share_mask$5[ebp]
  01f58	89 85 70 fe ff
	ff		 mov	 DWORD PTR _mask$4[ebp], eax
$LN109@update_ent:

; 1921 : 							}
; 1922 : 
; 1923 : 							ASSERT (mask);

  01f5e	83 bd 70 fe ff
	ff 00		 cmp	 DWORD PTR _mask$4[ebp], 0
  01f65	75 1a		 jne	 SHORT $LN110@update_ent
  01f67	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01f6c	05 a1 02 00 00	 add	 eax, 673		; 000002a1H
  01f71	50		 push	 eax
  01f72	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01f77	68 00 00 00 00	 push	 OFFSET ??_C@_04LFLEPBN@mask@
  01f7c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN110@update_ent:

; 1924 : 
; 1925 : 							//
; 1926 : 							// first shared package encountered takes control of the pitch device
; 1927 : 							//
; 1928 : 
; 1929 : 							control_package = 0;

  01f81	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _control_package$2[ebp], 0

; 1930 : 
; 1931 : 							for (i = 0; i < NUM_WEAPON_PACKAGES; i++)

  01f8b	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$3[ebp], 0
  01f95	eb 0f		 jmp	 SHORT $LN24@update_ent
$LN22@update_ent:
  01f97	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  01f9d	83 c0 01	 add	 eax, 1
  01fa0	89 85 6c fe ff
	ff		 mov	 DWORD PTR _i$3[ebp], eax
$LN24@update_ent:
  01fa6	83 bd 6c fe ff
	ff 20		 cmp	 DWORD PTR _i$3[ebp], 32	; 00000020H
  01fad	7d 2c		 jge	 SHORT $LN23@update_ent

; 1932 : 							{
; 1933 : 								if (mask & 1)

  01faf	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _mask$4[ebp]
  01fb5	83 e0 01	 and	 eax, 1
  01fb8	74 02		 je	 SHORT $LN111@update_ent

; 1934 : 								{
; 1935 : 									break;

  01fba	eb 1f		 jmp	 SHORT $LN23@update_ent
$LN111@update_ent:

; 1936 : 								}
; 1937 : 
; 1938 : 								control_package++;

  01fbc	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR _control_package$2[ebp]
  01fc2	83 c0 01	 add	 eax, 1
  01fc5	89 85 68 fe ff
	ff		 mov	 DWORD PTR _control_package$2[ebp], eax

; 1939 : 
; 1940 : 								mask >>= 1;

  01fcb	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _mask$4[ebp]
  01fd1	d1 e8		 shr	 eax, 1
  01fd3	89 85 70 fe ff
	ff		 mov	 DWORD PTR _mask$4[ebp], eax

; 1941 : 							}

  01fd9	eb bc		 jmp	 SHORT $LN22@update_ent
$LN23@update_ent:

; 1942 : 
; 1943 : 							ASSERT (control_package < NUM_WEAPON_PACKAGES);

  01fdb	83 bd 68 fe ff
	ff 20		 cmp	 DWORD PTR _control_package$2[ebp], 32 ; 00000020H
  01fe2	7c 1a		 jl	 SHORT $LN112@update_ent
  01fe4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_entity_weapon_systems@@YGXPAUENTITY@@@Z@4JA
  01fe9	05 b5 02 00 00	 add	 eax, 693		; 000002b5H
  01fee	50		 push	 eax
  01fef	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  01ff4	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@JPODKHFL@control_package?5?$DM?5NUM_WEAPON_PA@
  01ff9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN112@update_ent:

; 1944 : 
; 1945 : 							//
; 1946 : 							// set pitch value in all shared devices
; 1947 : 							//
; 1948 : 
; 1949 : 							if (package == control_package)

  01ffe	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  02004	3b 85 68 fe ff
	ff		 cmp	 eax, DWORD PTR _control_package$2[ebp]
  0200a	0f 85 97 00 00
	00		 jne	 $LN113@update_ent

; 1950 : 							{
; 1951 : 								mask = 1;

  02010	c7 85 70 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR _mask$4[ebp], 1

; 1952 : 
; 1953 : 								for (i = 0; i < NUM_WEAPON_PACKAGES; i++)

  0201a	c7 85 6c fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$3[ebp], 0
  02024	eb 0f		 jmp	 SHORT $LN27@update_ent
$LN25@update_ent:
  02026	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  0202c	83 c0 01	 add	 eax, 1
  0202f	89 85 6c fe ff
	ff		 mov	 DWORD PTR _i$3[ebp], eax
$LN27@update_ent:
  02035	83 bd 6c fe ff
	ff 20		 cmp	 DWORD PTR _i$3[ebp], 32	; 00000020H
  0203c	7d 52		 jge	 SHORT $LN26@update_ent

; 1954 : 								{
; 1955 : 									if (weapon_config_database[config_type][i].number == 0)

  0203e	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  02045	6b 8d 6c fe ff
	ff 4c		 imul	 ecx, DWORD PTR _i$3[ebp], 76
  0204c	83 bc 08 04 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4], 0
  02054	75 02		 jne	 SHORT $LN114@update_ent

; 1956 : 									{
; 1957 : 										break;

  02056	eb 38		 jmp	 SHORT $LN26@update_ent
$LN114@update_ent:

; 1958 : 									}
; 1959 : 
; 1960 : 									if (mask & pitch_share_mask)

  02058	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _mask$4[ebp]
  0205e	23 85 74 fe ff
	ff		 and	 eax, DWORD PTR _pitch_share_mask$5[ebp]
  02064	74 1a		 je	 SHORT $LN115@update_ent

; 1961 : 									{
; 1962 : 										package_status[i].weapon_system_pitch = new_pitch_offset;

  02066	8b 85 6c fe ff
	ff		 mov	 eax, DWORD PTR _i$3[ebp]
  0206c	c1 e0 04	 shl	 eax, 4
  0206f	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  02072	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _new_pitch_offset$[ebp]
  0207a	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0
$LN115@update_ent:

; 1963 : 									}
; 1964 : 
; 1965 : 									mask <<= 1;

  02080	8b 85 70 fe ff
	ff		 mov	 eax, DWORD PTR _mask$4[ebp]
  02086	d1 e0		 shl	 eax, 1
  02088	89 85 70 fe ff
	ff		 mov	 DWORD PTR _mask$4[ebp], eax

; 1966 : 								}

  0208e	eb 96		 jmp	 SHORT $LN25@update_ent
$LN26@update_ent:

; 1967 : 
; 1968 : 								search_weapon_system_pitch.result_sub_object->relative_pitch = -new_pitch_offset;

  02090	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _new_pitch_offset$[ebp]
  02098	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0209f	8b 45 80	 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  020a2	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0
$LN113@update_ent:

; 1969 : 							}
; 1970 : 						}
; 1971 : 						else

  020a7	eb 31		 jmp	 SHORT $LN108@update_ent
$LN107@update_ent:

; 1972 : 						{
; 1973 : 							package_status[package].weapon_system_pitch = new_pitch_offset;

  020a9	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  020af	c1 e0 04	 shl	 eax, 4
  020b2	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  020b5	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _new_pitch_offset$[ebp]
  020bd	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1974 : 
; 1975 : 							search_weapon_system_pitch.result_sub_object->relative_pitch = -new_pitch_offset;

  020c3	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _new_pitch_offset$[ebp]
  020cb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  020d2	8b 45 80	 mov	 eax, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  020d5	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0
$LN108@update_ent:

; 1976 : 						}
; 1977 : 					}
; 1978 : 				}
; 1979 : 
; 1980 : 				////////////////////////////////////////
; 1981 : 				//
; 1982 : 				// update animations
; 1983 : 				//
; 1984 : 				////////////////////////////////////////
; 1985 : 
; 1986 : 				if (weapon_config_database[config_type][package].muzzle_flash_type != MUZZLE_FLASH_INVALID)

  020da	69 45 f0 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  020e1	6b 8d 3c ff ff
	ff 4c		 imul	 ecx, DWORD PTR _package$[ebp], 76
  020e8	83 bc 08 48 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+72], 0
  020f0	0f 84 c0 00 00
	00		 je	 $LN120@update_ent

; 1987 : 				{
; 1988 : 					if (package_status[package].muzzle_flash_timer > 0.0)

  020f6	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  020fc	c1 e0 04	 shl	 eax, 4
  020ff	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  02102	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  02108	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  02110	76 5e		 jbe	 SHORT $LN117@update_ent

; 1989 : 					{
; 1990 : 						package_status[package].muzzle_flash_timer -= get_delta_time ();

  02112	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  02118	c1 e0 04	 shl	 eax, 4
  0211b	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0211e	f3 0f 10 44 01
	0c		 movss	 xmm0, DWORD PTR [ecx+eax+12]
  02124	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0212c	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _package$[ebp]
  02132	c1 e2 04	 shl	 edx, 4
  02135	8b 45 f4	 mov	 eax, DWORD PTR _package_status$[ebp]
  02138	f3 0f 11 44 10
	0c		 movss	 DWORD PTR [eax+edx+12], xmm0

; 1991 : 
; 1992 : 						if (package_status[package].muzzle_flash_timer < 0.0)

  0213e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  02144	c1 e0 04	 shl	 eax, 4
  02147	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0214a	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  02150	0f 57 c9	 xorps	 xmm1, xmm1
  02153	66 0f 2f c8	 comisd	 xmm1, xmm0
  02157	76 15		 jbe	 SHORT $LN119@update_ent

; 1993 : 						{
; 1994 : 							package_status[package].muzzle_flash_timer = 0.0;

  02159	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  0215f	c1 e0 04	 shl	 eax, 4
  02162	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  02165	0f 57 c0	 xorps	 xmm0, xmm0
  02168	f3 0f 11 44 01
	0c		 movss	 DWORD PTR [ecx+eax+12], xmm0
$LN119@update_ent:

; 1995 : 						}
; 1996 : 					}

  0216e	eb 46		 jmp	 SHORT $LN120@update_ent
$LN117@update_ent:

; 1997 : 					else if (package_status[package].muzzle_flash_timer < 0.0)

  02170	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  02176	c1 e0 04	 shl	 eax, 4
  02179	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0217c	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  02182	0f 57 c9	 xorps	 xmm1, xmm1
  02185	66 0f 2f c8	 comisd	 xmm1, xmm0
  02189	76 2b		 jbe	 SHORT $LN120@update_ent

; 1998 : 					{
; 1999 : 						//
; 2000 : 						// unlock timer
; 2001 : 						//
; 2002 : 
; 2003 : 						package_status[package].muzzle_flash_timer = -package_status[package].muzzle_flash_timer;

  0218b	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR _package$[ebp]
  02191	c1 e0 04	 shl	 eax, 4
  02194	8b 4d f4	 mov	 ecx, DWORD PTR _package_status$[ebp]
  02197	f3 0f 10 44 01
	0c		 movss	 xmm0, DWORD PTR [ecx+eax+12]
  0219d	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  021a4	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR _package$[ebp]
  021aa	c1 e2 04	 shl	 edx, 4
  021ad	8b 45 f4	 mov	 eax, DWORD PTR _package_status$[ebp]
  021b0	f3 0f 11 44 10
	0c		 movss	 DWORD PTR [eax+edx+12], xmm0
$LN120@update_ent:

; 2004 : 					}
; 2005 : 				}
; 2006 : 			}

  021b6	e9 72 e6 ff ff	 jmp	 $LN11@update_ent
$LN12@update_ent:
$LN1@update_ent:

; 2007 : 		}
; 2008 : 	}
; 2009 : }

  021bb	5f		 pop	 edi
  021bc	5e		 pop	 esi
  021bd	5b		 pop	 ebx
  021be	8b e5		 mov	 esp, ebp
  021c0	5d		 pop	 ebp
  021c1	c2 04 00	 ret	 4
?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ENDP	; update_entity_weapon_systems
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z
_TEXT	SEGMENT
tv506 = -412						; size = 4
tv328 = -412						; size = 4
tv222 = -412						; size = 4
tv190 = -412						; size = 4
tv169 = -412						; size = 4
tv136 = -412						; size = 4
tv551 = -408						; size = 4
tv498 = -408						; size = 4
tv395 = -408						; size = 4
tv339 = -408						; size = 4
tv321 = -408						; size = 4
tv214 = -408						; size = 4
tv182 = -408						; size = 4
tv161 = -408						; size = 4
tv149 = -408						; size = 4
tv128 = -408						; size = 4
_dz$1 = -340						; size = 4
_length$2 = -336					; size = 4
_roll$3 = -332						; size = 4
_m2$4 = -328						; size = 36
_m1$5 = -292						; size = 36
_terrain_elevation$ = -256				; size = 4
_muzzle_flash_type$ = -252				; size = 4
_search_weapon_system_muzzle$ = -248			; size = 56
_search_weapon_system_weapon$ = -192			; size = 56
_search_weapon_system_pitch$ = -136			; size = 56
_search_weapon_system_heading$ = -80			; size = 56
_inst3d$ = -24						; size = 4
_found_package_number$ = -20				; size = 4
_found_package$ = -16					; size = 4
_found$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_weapon_sub_type$ = 12					; size = 4
_burst_size$ = 16					; size = 4
_vp$ = 20						; size = 4
?detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z PROC ; detach_local_entity_weapon, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 01 00
	00		 sub	 esp, 412		; 0000019cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 329  : 	weapon_package_status
; 330  : 		*package_status;
; 331  : 
; 332  : 	weapon_config_types
; 333  : 		config_type;
; 334  : 
; 335  : 	int
; 336  : 		found,
; 337  : 		found_package,
; 338  : 		found_package_number;
; 339  : 
; 340  : 	object_3d_instance
; 341  : 		*inst3d;
; 342  : 
; 343  : 	object_3d_sub_object_search_data
; 344  : 		search_weapon_system_heading,
; 345  : 		search_weapon_system_pitch,
; 346  : 		search_weapon_system_weapon,
; 347  : 		search_weapon_system_muzzle;
; 348  : 
; 349  : 	muzzle_flash_types
; 350  : 		muzzle_flash_type;
; 351  : 
; 352  : 	float
; 353  : 		terrain_elevation;
; 354  : 
; 355  : 	ASSERT (launcher);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00010	75 18		 jne	 SHORT $LN6@detach_loc
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00017	83 c0 1b	 add	 eax, 27			; 0000001bH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@detach_loc:

; 356  : 
; 357  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0002e	7c 06		 jl	 SHORT $LN8@detach_loc
  00030	83 7d 0c 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  00034	7c 18		 jl	 SHORT $LN7@detach_loc
$LN8@detach_loc:
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  0003b	83 c0 1d	 add	 eax, 29			; 0000001dH
  0003e	50		 push	 eax
  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00049	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@detach_loc:

; 358  : 
; 359  : 	ASSERT (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  0004e	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00052	75 18		 jne	 SHORT $LN9@detach_loc
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00059	83 c0 1f	 add	 eax, 31			; 0000001fH
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BKCKEPLP@weapon_sub_type?5?$CB?$DN?5ENTITY_SUB_T@
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@detach_loc:

; 360  : 
; 361  : 	ASSERT (vp);

  0006c	83 7d 14 00	 cmp	 DWORD PTR _vp$[ebp], 0
  00070	75 18		 jne	 SHORT $LN10@detach_loc
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00077	83 c0 21	 add	 eax, 33			; 00000021H
  0007a	50		 push	 eax
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_02HPPNELPJ@vp@
  00085	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@detach_loc:

; 362  : 
; 363  : 	ASSERT (burst_size > 0);

  0008a	83 7d 10 00	 cmp	 DWORD PTR _burst_size$[ebp], 0
  0008e	7f 18		 jg	 SHORT $LN11@detach_loc
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00095	83 c0 23	 add	 eax, 35			; 00000023H
  00098	50		 push	 eax
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DFFDGLE@burst_size?5?$DO?50@
  000a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@detach_loc:

; 364  : 
; 365  : 	//
; 366  : 	// set viewpoint to launcher origin
; 367  : 	//
; 368  : 
; 369  : 	get_local_entity_vec3d (launcher, VEC3D_TYPE_POSITION, &vp->position);

  000a8	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000ac	74 0d		 je	 SHORT $LN39@detach_loc
  000ae	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000b9	eb 24		 jmp	 SHORT $LN40@detach_loc
$LN39@detach_loc:
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  000c1	83 c2 29	 add	 edx, 41			; 00000029H
  000c4	52		 push	 edx
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN40@detach_loc:
  000df	b9 01 00 00 00	 mov	 ecx, 1
  000e4	85 c9		 test	 ecx, ecx
  000e6	74 0c		 je	 SHORT $LN41@detach_loc
  000e8	c7 85 64 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv136[ebp], 8
  000f2	eb 24		 jmp	 SHORT $LN42@detach_loc
$LN41@detach_loc:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  000fa	83 c2 29	 add	 edx, 41			; 00000029H
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN42@detach_loc:
  00118	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  0011b	51		 push	 ecx
  0011c	6a 08		 push	 8
  0011e	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00121	52		 push	 edx
  00122	6b 85 68 fe ff
	ff 60		 imul	 eax, DWORD PTR tv128[ebp], 96
  00129	8b 8d 64 fe ff
	ff		 mov	 ecx, DWORD PTR tv136[ebp]
  0012f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00136	ff d2		 call	 edx

; 370  : 
; 371  : 	get_local_entity_attitude_matrix (launcher, vp->attitude);

  00138	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0013c	74 0d		 je	 SHORT $LN43@detach_loc
  0013e	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00141	8b 08		 mov	 ecx, DWORD PTR [eax]
  00143	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv149[ebp], ecx
  00149	eb 24		 jmp	 SHORT $LN44@detach_loc
$LN43@detach_loc:
  0014b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00151	83 c2 2b	 add	 edx, 43			; 0000002bH
  00154	52		 push	 edx
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00165	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN44@detach_loc:
  0016f	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00172	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00175	51		 push	 ecx
  00176	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00179	52		 push	 edx
  0017a	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR tv149[ebp]
  00180	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00187	ff d1		 call	 ecx

; 372  : 
; 373  : 	found = FALSE;

  00189	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _found$[ebp], 0

; 374  : 
; 375  : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00190	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00194	74 0d		 je	 SHORT $LN45@detach_loc
  00196	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00199	8b 08		 mov	 ecx, DWORD PTR [eax]
  0019b	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv161[ebp], ecx
  001a1	eb 24		 jmp	 SHORT $LN46@detach_loc
$LN45@detach_loc:
  001a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  001a9	83 c2 2f	 add	 edx, 47			; 0000002fH
  001ac	52		 push	 edx
  001ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001bd	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv161[ebp], 0
$LN46@detach_loc:
  001c7	b9 01 00 00 00	 mov	 ecx, 1
  001cc	85 c9		 test	 ecx, ecx
  001ce	74 0c		 je	 SHORT $LN47@detach_loc
  001d0	c7 85 64 fe ff
	ff 13 00 00 00	 mov	 DWORD PTR tv169[ebp], 19 ; 00000013H
  001da	eb 24		 jmp	 SHORT $LN48@detach_loc
$LN47@detach_loc:
  001dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  001e2	83 c2 2f	 add	 edx, 47			; 0000002fH
  001e5	52		 push	 edx
  001e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  001f0	50		 push	 eax
  001f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f6	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN48@detach_loc:
  00200	6a 13		 push	 19			; 00000013H
  00202	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00205	51		 push	 ecx
  00206	6b 95 68 fe ff
	ff 50		 imul	 edx, DWORD PTR tv161[ebp], 80
  0020d	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR tv169[ebp]
  00213	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0021a	ff d1		 call	 ecx
  0021c	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 376  : 
; 377  : 	if (package_status)

  0021f	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  00223	0f 84 af 06 00
	00		 je	 $LN32@detach_loc

; 378  : 	{
; 379  : 		config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  00229	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0022d	74 0d		 je	 SHORT $LN49@detach_loc
  0022f	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00232	8b 08		 mov	 ecx, DWORD PTR [eax]
  00234	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv182[ebp], ecx
  0023a	eb 24		 jmp	 SHORT $LN50@detach_loc
$LN49@detach_loc:
  0023c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00242	83 c2 33	 add	 edx, 51			; 00000033H
  00245	52		 push	 edx
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00250	50		 push	 eax
  00251	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00256	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv182[ebp], 0
$LN50@detach_loc:
  00260	b9 01 00 00 00	 mov	 ecx, 1
  00265	85 c9		 test	 ecx, ecx
  00267	74 0c		 je	 SHORT $LN51@detach_loc
  00269	c7 85 64 fe ff
	ff 05 01 00 00	 mov	 DWORD PTR tv190[ebp], 261 ; 00000105H
  00273	eb 24		 jmp	 SHORT $LN52@detach_loc
$LN51@detach_loc:
  00275	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  0027b	83 c2 33	 add	 edx, 51			; 00000033H
  0027e	52		 push	 edx
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00284	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028f	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv190[ebp], 0
$LN52@detach_loc:
  00299	68 05 01 00 00	 push	 261			; 00000105H
  0029e	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  002a1	51		 push	 ecx
  002a2	69 95 68 fe ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv182[ebp], 1116
  002ac	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR tv190[ebp]
  002b2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002b9	ff d1		 call	 ecx
  002bb	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 380  : 
; 381  : 		ASSERT (weapon_config_type_valid (config_type));

  002be	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  002c2	7c 09		 jl	 SHORT $LN14@detach_loc
  002c4	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  002cb	7c 18		 jl	 SHORT $LN13@detach_loc
$LN14@detach_loc:
  002cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  002d2	83 c0 35	 add	 eax, 53			; 00000035H
  002d5	50		 push	 eax
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  002e0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@detach_loc:

; 382  : 
; 383  : 		//
; 384  : 		// find undamaged package with most weapons remaining
; 385  : 		//
; 386  : 
; 387  : 		found_package = get_next_pylon_to_launch(weapon_sub_type, config_type, package_status, &found_package_number);

  002e5	8d 45 ec	 lea	 eax, DWORD PTR _found_package_number$[ebp]
  002e8	50		 push	 eax
  002e9	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  002ec	51		 push	 ecx
  002ed	8b 55 f8	 mov	 edx, DWORD PTR _config_type$[ebp]
  002f0	52		 push	 edx
  002f1	8b 45 0c	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?get_next_pylon_to_launch@@YGHHW4WEAPON_CONFIG_TYPES@@PAUWEAPON_PACKAGE_STATUS@@PAH@Z ; get_next_pylon_to_launch
  002fa	89 45 f0	 mov	 DWORD PTR _found_package$[ebp], eax

; 388  : 
; 389  : 		//
; 390  : 		// detach weapon
; 391  : 		//
; 392  : 		if (found_package_number > 0)

  002fd	83 7d ec 00	 cmp	 DWORD PTR _found_package_number$[ebp], 0
  00301	0f 8e d1 05 00
	00		 jle	 $LN32@detach_loc

; 393  : 		{
; 394  : 			inst3d = (object_3d_instance *) get_local_entity_ptr_value (launcher, PTR_TYPE_INSTANCE_3D_OBJECT);

  00307	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0030b	74 0d		 je	 SHORT $LN53@detach_loc
  0030d	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00310	8b 08		 mov	 ecx, DWORD PTR [eax]
  00312	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv214[ebp], ecx
  00318	eb 24		 jmp	 SHORT $LN54@detach_loc
$LN53@detach_loc:
  0031a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00320	83 c2 42	 add	 edx, 66			; 00000042H
  00323	52		 push	 edx
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00329	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032e	50		 push	 eax
  0032f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00334	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN54@detach_loc:
  0033e	b9 01 00 00 00	 mov	 ecx, 1
  00343	85 c9		 test	 ecx, ecx
  00345	74 0c		 je	 SHORT $LN55@detach_loc
  00347	c7 85 64 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv222[ebp], 2
  00351	eb 24		 jmp	 SHORT $LN56@detach_loc
$LN55@detach_loc:
  00353	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00359	83 c2 42	 add	 edx, 66			; 00000042H
  0035c	52		 push	 edx
  0035d	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00362	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036d	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv222[ebp], 0
$LN56@detach_loc:
  00377	6a 02		 push	 2
  00379	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  0037c	51		 push	 ecx
  0037d	6b 95 68 fe ff
	ff 50		 imul	 edx, DWORD PTR tv214[ebp], 80
  00384	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR tv222[ebp]
  0038a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00391	ff d1		 call	 ecx
  00393	89 45 e8	 mov	 DWORD PTR _inst3d$[ebp], eax

; 395  : 
; 396  : 			ASSERT (inst3d);

  00396	83 7d e8 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0039a	75 18		 jne	 SHORT $LN16@detach_loc
  0039c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  003a1	83 c0 44	 add	 eax, 68			; 00000044H
  003a4	50		 push	 eax
  003a5	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_06DDNABPCD@inst3d@
  003af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@detach_loc:

; 397  : 
; 398  : 			//
; 399  : 			// ensure that the 3D instance viewpoint is up to date (the object may not have been drawn)
; 400  : 			//
; 401  : 
; 402  : 			memcpy (&inst3d->vp, vp, sizeof (viewpoint));

  003b4	6a 30		 push	 48			; 00000030H
  003b6	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  003b9	50		 push	 eax
  003ba	8b 4d e8	 mov	 ecx, DWORD PTR _inst3d$[ebp]
  003bd	83 c1 08	 add	 ecx, 8
  003c0	51		 push	 ecx
  003c1	e8 00 00 00 00	 call	 _memcpy
  003c6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 			search_weapon_system_heading.search_depth = weapon_config_database[config_type][found_package].heading_depth;

  003c9	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  003d0	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  003d4	8b 94 08 08 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+8]
  003db	89 55 b8	 mov	 DWORD PTR _search_weapon_system_heading$[ebp+8], edx

; 405  : 			search_weapon_system_heading.search_object = inst3d;

  003de	8b 45 e8	 mov	 eax, DWORD PTR _inst3d$[ebp]
  003e1	89 45 b0	 mov	 DWORD PTR _search_weapon_system_heading$[ebp], eax

; 406  : 			search_weapon_system_heading.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_HEADING;

  003e4	c7 45 bc 03 00
	00 00		 mov	 DWORD PTR _search_weapon_system_heading$[ebp+12], 3

; 407  : 
; 408  : 			if (find_object_3d_sub_object (&search_weapon_system_heading) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  003eb	8d 45 b0	 lea	 eax, DWORD PTR _search_weapon_system_heading$[ebp]
  003ee	50		 push	 eax
  003ef	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  003f4	83 f8 01	 cmp	 eax, 1
  003f7	0f 85 9b 04 00
	00		 jne	 $LN18@detach_loc

; 409  : 			{
; 410  : 				search_weapon_system_pitch.search_depth = weapon_config_database[config_type][found_package].pitch_depth;

  003fd	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00404	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  00408	8b 94 08 0c 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+12]
  0040f	89 55 80	 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+8], edx

; 411  : 				search_weapon_system_pitch.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_PITCH;

  00412	c7 45 84 1c 00
	00 00		 mov	 DWORD PTR _search_weapon_system_pitch$[ebp+12], 28 ; 0000001cH

; 412  : 
; 413  : 				if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_heading, &search_weapon_system_pitch) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00419	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_pitch$[ebp]
  0041f	50		 push	 eax
  00420	8d 4d b0	 lea	 ecx, DWORD PTR _search_weapon_system_heading$[ebp]
  00423	51		 push	 ecx
  00424	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00429	83 f8 01	 cmp	 eax, 1
  0042c	0f 85 66 04 00
	00		 jne	 $LN18@detach_loc

; 414  : 				{
; 415  : 					search_weapon_system_weapon.search_depth = weapon_config_database[config_type][found_package].number - package_status[found_package].number;

  00432	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00439	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0043d	8b 55 f0	 mov	 edx, DWORD PTR _found_package$[ebp]
  00440	c1 e2 04	 shl	 edx, 4
  00443	8b 75 fc	 mov	 esi, DWORD PTR _package_status$[ebp]
  00446	0f b7 14 16	 movzx	 edx, WORD PTR [esi+edx]
  0044a	8b 84 08 04 00
	00 00		 mov	 eax, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  00451	2b c2		 sub	 eax, edx
  00453	89 85 48 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_weapon$[ebp+8], eax

; 416  : 					search_weapon_system_weapon.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_WEAPON;

  00459	c7 85 4c ff ff
	ff 1d 00 00 00	 mov	 DWORD PTR _search_weapon_system_weapon$[ebp+12], 29 ; 0000001dH

; 417  : 
; 418  : 					if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_pitch, &search_weapon_system_weapon) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00463	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_weapon$[ebp]
  00469	50		 push	 eax
  0046a	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp]
  00470	51		 push	 ecx
  00471	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  00476	83 f8 01	 cmp	 eax, 1
  00479	75 2a		 jne	 SHORT $LN19@detach_loc

; 419  : 					{
; 420  : 						search_weapon_system_weapon.result_sub_object->visible_object = FALSE;

  0047b	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _search_weapon_system_weapon$[ebp+4]
  00481	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00484	83 e1 fe	 and	 ecx, -2			; fffffffeH
  00487	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR _search_weapon_system_weapon$[ebp+4]
  0048d	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 421  : 
; 422  : 						get_3d_sub_object_world_viewpoint (search_weapon_system_weapon.result_sub_object, vp);

  00490	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00493	50		 push	 eax
  00494	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_weapon$[ebp+4]
  0049a	51		 push	 ecx
  0049b	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 423  : 
; 424  : 						#if DEBUG_MODULE
; 425  : 
; 426  : 						debug_log
; 427  : 						(
; 428  : 							"Detach weapon as WEAPON device (h = %d, p = %d, w = %d, x = %.2f, y = %.2f, z = %.2f)",
; 429  : 							search_weapon_system_heading.search_depth,
; 430  : 							search_weapon_system_pitch.search_depth,
; 431  : 							search_weapon_system_weapon.search_depth,
; 432  : 							vp->position.x,
; 433  : 							vp->position.y,
; 434  : 							vp->position.z
; 435  : 						);
; 436  : 
; 437  : 						#endif
; 438  : 					}
; 439  : 					else

  004a0	e9 ec 03 00 00	 jmp	 $LN22@detach_loc
$LN19@detach_loc:

; 440  : 					{
; 441  : 						search_weapon_system_muzzle.search_depth = weapon_config_database[config_type][found_package].muzzle_depth;

  004a5	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  004ac	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  004b0	8b 94 08 10 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+16]
  004b7	89 95 10 ff ff
	ff		 mov	 DWORD PTR _search_weapon_system_muzzle$[ebp+8], edx

; 442  : 						search_weapon_system_muzzle.sub_object_index = OBJECT_3D_SUB_OBJECT_WEAPON_SYSTEM_MUZZLE;

  004bd	c7 85 14 ff ff
	ff 1f 00 00 00	 mov	 DWORD PTR _search_weapon_system_muzzle$[ebp+12], 31 ; 0000001fH

; 443  : 
; 444  : 						if (find_object_3d_sub_object_from_sub_object (&search_weapon_system_pitch, &search_weapon_system_muzzle) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  004c7	8d 85 08 ff ff
	ff		 lea	 eax, DWORD PTR _search_weapon_system_muzzle$[ebp]
  004cd	50		 push	 eax
  004ce	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp]
  004d4	51		 push	 ecx
  004d5	e8 00 00 00 00	 call	 ?find_object_3d_sub_object_from_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@0@Z ; find_object_3d_sub_object_from_sub_object
  004da	83 f8 01	 cmp	 eax, 1
  004dd	0f 85 9e 03 00
	00		 jne	 $LN21@detach_loc

; 445  : 						{
; 446  : 							get_3d_sub_object_world_viewpoint (search_weapon_system_muzzle.result_sub_object, vp);

  004e3	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  004e6	50		 push	 eax
  004e7	8b 8d 0c ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_muzzle$[ebp+4]
  004ed	51		 push	 ecx
  004ee	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint

; 447  : 
; 448  : 							////////////////////////////////////////
; 449  : 							//
; 450  : 							// ADD AN OFFSET TO THE ROCKET LAUNCH POSITION
; 451  : 							//
; 452  : 							// This has been added for the Comanche and Hokum cockpits
; 453  : 							// as the stub wing weapons are clearly visible from the cockpit.
; 454  : 							//
; 455  : 							// Ideally any values would have been added to the weapon database.
; 456  : 							//
; 457  : 							// The rotational firing order will be constant multi-player but the
; 458  : 							// z-offset is not. This could have been accomplished by passing the
; 459  : 							// weapon entity pointer and using its index as the random number
; 460  : 							// seed.
; 461  : 							//
; 462  : 							////////////////////////////////////////
; 463  : 
; 464  : 							if (get_local_entity_int_value (launcher, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  004f3	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  004f7	74 0d		 je	 SHORT $LN57@detach_loc
  004f9	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  004fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fe	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv321[ebp], ecx
  00504	eb 20		 jmp	 SHORT $LN58@detach_loc
$LN57@detach_loc:
  00506	68 d0 01 00 00	 push	 464			; 000001d0H
  0050b	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00510	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00516	52		 push	 edx
  00517	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051c	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv321[ebp], 0
$LN58@detach_loc:
  00526	b8 01 00 00 00	 mov	 eax, 1
  0052b	85 c0		 test	 eax, eax
  0052d	74 0c		 je	 SHORT $LN59@detach_loc
  0052f	c7 85 64 fe ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv328[ebp], 156 ; 0000009cH
  00539	eb 20		 jmp	 SHORT $LN60@detach_loc
$LN59@detach_loc:
  0053b	68 d0 01 00 00	 push	 464			; 000001d0H
  00540	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00545	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0054b	51		 push	 ecx
  0054c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00551	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv328[ebp], 0
$LN60@detach_loc:
  0055b	68 9c 00 00 00	 push	 156			; 0000009cH
  00560	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00563	52		 push	 edx
  00564	69 85 68 fe ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv321[ebp], 1116
  0056e	8b 8d 64 fe ff
	ff		 mov	 ecx, DWORD PTR tv328[ebp]
  00574	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0057b	ff d2		 call	 edx
  0057d	85 c0		 test	 eax, eax
  0057f	0f 84 89 02 00
	00		 je	 $LN2@detach_loc

; 465  : 							{
; 466  : 								if (get_comanche_hokum_gunship ())

  00585	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0058a	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR ?new_gunship@@3QBDB[eax]
  00591	85 c9		 test	 ecx, ecx
  00593	0f 84 75 02 00
	00		 je	 $LN2@detach_loc

; 467  : 								{
; 468  : 									switch (weapon_sub_type)

  00599	8b 45 0c	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  0059c	89 85 68 fe ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  005a2	8b 8d 68 fe ff
	ff		 mov	 ecx, DWORD PTR tv339[ebp]
  005a8	83 e9 1e	 sub	 ecx, 30			; 0000001eH
  005ab	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv339[ebp], ecx
  005b1	83 bd 68 fe ff
	ff 05		 cmp	 DWORD PTR tv339[ebp], 5
  005b8	0f 87 50 02 00
	00		 ja	 $LN2@detach_loc
  005be	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR tv339[ebp]
  005c4	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN67@detach_loc[edx]
  005cb	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN68@detach_loc[eax*4]
$LN25@detach_loc:

; 469  : 									{
; 470  : 										case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 471  : 										case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 472  : 										case ENTITY_SUB_TYPE_WEAPON_S8:
; 473  : 										case ENTITY_SUB_TYPE_WEAPON_S13:
; 474  : 										{
; 475  : 											matrix3x3
; 476  : 												m1,
; 477  : 												m2;
; 478  : 
; 479  : 											float
; 480  : 												roll,
; 481  : 												length,
; 482  : 												dz;
; 483  : 
; 484  : 											roll = ((float) package_status[found_package].number * rad (360.0)) / (float) weapon_config_database[config_type][found_package].number;

  005d2	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  005d5	c1 e0 04	 shl	 eax, 4
  005d8	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  005db	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  005df	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  005e3	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  005e7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@401921fb51000000
  005ef	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  005f6	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  005fa	f3 0f 2a 8c 08
	04 00 00 00	 cvtsi2ss xmm1, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  00603	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00607	f2 0f 5e c1	 divsd	 xmm0, xmm1
  0060b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0060f	f3 0f 11 85 b4
	fe ff ff	 movss	 DWORD PTR _roll$3[ebp], xmm0

; 485  : 
; 486  : 											get_3d_transformation_matrix (m1, 0.0, 0.0, roll);

  00617	51		 push	 ecx
  00618	f3 0f 10 85 b4
	fe ff ff	 movss	 xmm0, DWORD PTR _roll$3[ebp]
  00620	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00625	51		 push	 ecx
  00626	0f 57 c0	 xorps	 xmm0, xmm0
  00629	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062e	51		 push	 ecx
  0062f	0f 57 c0	 xorps	 xmm0, xmm0
  00632	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00637	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _m1$5[ebp]
  0063d	50		 push	 eax
  0063e	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 487  : 
; 488  : 											multiply_matrix3x3_matrix3x3 (m2, m1, vp->attitude);

  00643	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00646	83 c0 0c	 add	 eax, 12			; 0000000cH
  00649	50		 push	 eax
  0064a	8d 8d dc fe ff
	ff		 lea	 ecx, DWORD PTR _m1$5[ebp]
  00650	51		 push	 ecx
  00651	8d 95 b8 fe ff
	ff		 lea	 edx, DWORD PTR _m2$4[ebp]
  00657	52		 push	 edx
  00658	e8 00 00 00 00	 call	 ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3

; 489  : 
; 490  : 											memcpy (vp->attitude, m2, sizeof (matrix3x3));

  0065d	6a 24		 push	 36			; 00000024H
  0065f	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _m2$4[ebp]
  00665	50		 push	 eax
  00666	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00669	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0066c	51		 push	 ecx
  0066d	e8 00 00 00 00	 call	 _memcpy
  00672	83 c4 0c	 add	 esp, 12			; 0000000cH

; 491  : 
; 492  : 											vp->x += vp->xv.x * 0.1;

  00675	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00678	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0067d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00685	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00688	f3 0f 5a 09	 cvtss2sd xmm1, DWORD PTR [ecx]
  0068c	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00690	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00694	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  00697	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 493  : 											vp->y += vp->xv.y * 0.1;

  0069b	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  0069e	f3 0f 5a 40 10	 cvtss2sd xmm0, DWORD PTR [eax+16]
  006a3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006ab	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  006ae	f3 0f 5a 49 04	 cvtss2sd xmm1, DWORD PTR [ecx+4]
  006b3	f2 0f 58 c8	 addsd	 xmm1, xmm0
  006b7	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  006bb	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  006be	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 494  : 											vp->z += vp->xv.z * 0.1;

  006c3	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  006c6	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  006cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb999999999999a
  006d3	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  006d6	f3 0f 5a 49 08	 cvtss2sd xmm1, DWORD PTR [ecx+8]
  006db	f2 0f 58 c8	 addsd	 xmm1, xmm0
  006df	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  006e3	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  006e6	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0

; 495  : 
; 496  : 											switch (weapon_sub_type)

  006eb	8b 45 0c	 mov	 eax, DWORD PTR _weapon_sub_type$[ebp]
  006ee	89 85 68 fe ff
	ff		 mov	 DWORD PTR tv395[ebp], eax
  006f4	8b 8d 68 fe ff
	ff		 mov	 ecx, DWORD PTR tv395[ebp]
  006fa	83 e9 1e	 sub	 ecx, 30			; 0000001eH
  006fd	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv395[ebp], ecx
  00703	83 bd 68 fe ff
	ff 05		 cmp	 DWORD PTR tv395[ebp], 5
  0070a	77 41		 ja	 SHORT $LN4@detach_loc
  0070c	8b 95 68 fe ff
	ff		 mov	 edx, DWORD PTR tv395[ebp]
  00712	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN69@detach_loc[edx*4]
$LN26@detach_loc:

; 497  : 											{
; 498  : 												case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M255:
; 499  : 												case ENTITY_SUB_TYPE_WEAPON_HYDRA70_M261:
; 500  : 												{
; 501  : 													length = 1.44;	// weapon length

  00719	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fb851ec
  00721	f3 0f 11 85 b0
	fe ff ff	 movss	 DWORD PTR _length$2[ebp], xmm0

; 502  : 
; 503  : 													break;

  00729	eb 22		 jmp	 SHORT $LN4@detach_loc
$LN27@detach_loc:

; 504  : 												}
; 505  : 												case ENTITY_SUB_TYPE_WEAPON_S8:
; 506  : 												{
; 507  : 													length = 1.65;	// weapon length

  0072b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fd33333
  00733	f3 0f 11 85 b0
	fe ff ff	 movss	 DWORD PTR _length$2[ebp], xmm0

; 508  : 
; 509  : 													break;

  0073b	eb 10		 jmp	 SHORT $LN4@detach_loc
$LN28@detach_loc:

; 510  : 												}
; 511  : 												case ENTITY_SUB_TYPE_WEAPON_S13:
; 512  : 												{
; 513  : 													length = 3.03;	// weapon length

  0073d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4041eb85
  00745	f3 0f 11 85 b0
	fe ff ff	 movss	 DWORD PTR _length$2[ebp], xmm0
$LN4@detach_loc:

; 514  : 
; 515  : 													break;
; 516  : 												}
; 517  : 											}
; 518  : 
; 519  : 											dz = (length * 0.6) + (frand1 () * length * 0.5);

  0074d	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00757	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0075c	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00761	f3 0f 5a 85 b0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _length$2[ebp]
  00769	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0076f	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00772	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00778	f2 0f 2a c9	 cvtsi2sd xmm1, ecx
  0077c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3f00002000400080
  00784	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00788	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00790	f3 0f 5a 85 b0
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _length$2[ebp]
  00798	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe3333333333333
  007a0	f2 0f 58 c1	 addsd	 xmm0, xmm1
  007a4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007a8	f3 0f 11 85 ac
	fe ff ff	 movss	 DWORD PTR _dz$1[ebp], xmm0

; 520  : 
; 521  : 											vp->x += vp->zv.x * dz;

  007b0	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  007b3	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  007b8	f3 0f 59 85 ac
	fe ff ff	 mulss	 xmm0, DWORD PTR _dz$1[ebp]
  007c0	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  007c3	f3 0f 58 01	 addss	 xmm0, DWORD PTR [ecx]
  007c7	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  007ca	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 522  : 											vp->y += vp->zv.y * dz;

  007ce	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  007d1	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  007d6	f3 0f 59 85 ac
	fe ff ff	 mulss	 xmm0, DWORD PTR _dz$1[ebp]
  007de	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  007e1	f3 0f 58 41 04	 addss	 xmm0, DWORD PTR [ecx+4]
  007e6	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  007e9	f3 0f 11 42 04	 movss	 DWORD PTR [edx+4], xmm0

; 523  : 											vp->z += vp->zv.z * dz;

  007ee	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  007f1	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  007f6	f3 0f 59 85 ac
	fe ff ff	 mulss	 xmm0, DWORD PTR _dz$1[ebp]
  007fe	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00801	f3 0f 58 41 08	 addss	 xmm0, DWORD PTR [ecx+8]
  00806	8b 55 14	 mov	 edx, DWORD PTR _vp$[ebp]
  00809	f3 0f 11 42 08	 movss	 DWORD PTR [edx+8], xmm0
$LN2@detach_loc:

; 524  : 
; 525  : 											break;
; 526  : 										}
; 527  : 									}
; 528  : 								}
; 529  : 							}
; 530  : 
; 531  : 							//
; 532  : 							// muzzle flash effect
; 533  : 							//
; 534  : 
; 535  : 							if (weapon_config_database[config_type][found_package].muzzle_flash_type != MUZZLE_FLASH_INVALID)

  0080e	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00815	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  00819	83 bc 08 48 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+72], 0
  00821	74 5c		 je	 SHORT $LN30@detach_loc

; 536  : 							{
; 537  : 								//
; 538  : 								// do not interrupt an on-going animation
; 539  : 								//
; 540  : 
; 541  : 								if (package_status[found_package].muzzle_flash_timer == 0.0)

  00823	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  00826	c1 e0 04	 shl	 eax, 4
  00829	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  0082c	f3 0f 5a 44 01
	0c		 cvtss2sd xmm0, DWORD PTR [ecx+eax+12]
  00832	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  0083a	9f		 lahf
  0083b	f6 c4 44	 test	 ah, 68			; 00000044H
  0083e	7a 3f		 jp	 SHORT $LN30@detach_loc

; 542  : 								{
; 543  : 									muzzle_flash_type = weapon_config_database[config_type][found_package].muzzle_flash_type;

  00840	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  00847	6b 4d f0 4c	 imul	 ecx, DWORD PTR _found_package$[ebp], 76
  0084b	8b 94 08 48 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+72]
  00852	89 95 04 ff ff
	ff		 mov	 DWORD PTR _muzzle_flash_type$[ebp], edx

; 544  : 
; 545  : 									//
; 546  : 									// lock timer for one frame by making value negative (ensures first animation frame is drawn)
; 547  : 									//
; 548  : 
; 549  : 									package_status[found_package].muzzle_flash_timer = -muzzle_flash_animation_database[muzzle_flash_type].muzzle_flash_duration;

  00858	8b 85 04 ff ff
	ff		 mov	 eax, DWORD PTR _muzzle_flash_type$[ebp]
  0085e	c1 e0 04	 shl	 eax, 4
  00861	f3 0f 10 80 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?muzzle_flash_animation_database@@3PAUMUZZLE_FLASH_ANIMATION@@A[eax+12]
  00869	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00870	8b 4d f0	 mov	 ecx, DWORD PTR _found_package$[ebp]
  00873	c1 e1 04	 shl	 ecx, 4
  00876	8b 55 fc	 mov	 edx, DWORD PTR _package_status$[ebp]
  00879	f3 0f 11 44 0a
	0c		 movss	 DWORD PTR [edx+ecx+12], xmm0
$LN30@detach_loc:

; 550  : 								}
; 551  : 							}
; 552  : 
; 553  : 							#if DEBUG_MODULE
; 554  : 
; 555  : 							debug_log
; 556  : 							(
; 557  : 								"Detach weapon as MUZZLE device (h = %d, p = %d, m = %d, x = %.2f, y = %.2f, z = %.2f)",
; 558  : 								search_weapon_system_heading.search_depth,
; 559  : 								search_weapon_system_pitch.search_depth,
; 560  : 								search_weapon_system_muzzle.search_depth,
; 561  : 								vp->position.x,
; 562  : 								vp->position.y,
; 563  : 								vp->position.z
; 564  : 							);
; 565  : 
; 566  : 							#endif
; 567  : 						}
; 568  : 						else

  0087f	eb 10		 jmp	 SHORT $LN22@detach_loc
$LN21@detach_loc:

; 569  : 						{
; 570  : 							get_3d_sub_object_world_viewpoint (search_weapon_system_pitch.result_sub_object, vp);

  00881	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00884	50		 push	 eax
  00885	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _search_weapon_system_pitch$[ebp+4]
  0088b	51		 push	 ecx
  0088c	e8 00 00 00 00	 call	 ?get_3d_sub_object_world_viewpoint@@YGXPAUOBJECT_3D_SUB_INSTANCE@@PAUVIEWPOINT@@@Z ; get_3d_sub_object_world_viewpoint
$LN22@detach_loc:

; 571  : 
; 572  : 							#if DEBUG_MODULE
; 573  : 
; 574  : 							debug_log
; 575  : 							(
; 576  : 								"Detach weapon as PITCH device (h = %d, p = %d, x = %.2f, y = %.2f, z = %.2f)",
; 577  : 								search_weapon_system_heading.search_depth,
; 578  : 								search_weapon_system_pitch.search_depth,
; 579  : 								vp->position.x,
; 580  : 								vp->position.y,
; 581  : 								vp->position.z
; 582  : 							);
; 583  : 
; 584  : 							#endif
; 585  : 						}
; 586  : 					}
; 587  : 
; 588  : 					found = TRUE;

  00891	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _found$[ebp], 1
$LN18@detach_loc:

; 589  : 				}
; 590  : 			}
; 591  : 
; 592  : 			//
; 593  : 			// update number of weapons
; 594  : 			//
; 595  : 
; 596  : 			if (burst_size <= package_status[found_package].number)

  00898	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  0089b	c1 e0 04	 shl	 eax, 4
  0089e	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  008a1	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  008a5	39 55 10	 cmp	 DWORD PTR _burst_size$[ebp], edx
  008a8	7f 1f		 jg	 SHORT $LN31@detach_loc

; 597  : 			{
; 598  : 				package_status[found_package].number -= burst_size;

  008aa	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  008ad	c1 e0 04	 shl	 eax, 4
  008b0	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  008b3	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  008b7	2b 55 10	 sub	 edx, DWORD PTR _burst_size$[ebp]
  008ba	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  008bd	c1 e0 04	 shl	 eax, 4
  008c0	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  008c3	66 89 14 01	 mov	 WORD PTR [ecx+eax], dx

; 599  : 			}
; 600  : 			else

  008c7	eb 0f		 jmp	 SHORT $LN32@detach_loc
$LN31@detach_loc:

; 601  : 			{
; 602  : 				package_status[found_package].number = 0;

  008c9	8b 45 f0	 mov	 eax, DWORD PTR _found_package$[ebp]
  008cc	c1 e0 04	 shl	 eax, 4
  008cf	33 c9		 xor	 ecx, ecx
  008d1	8b 55 fc	 mov	 edx, DWORD PTR _package_status$[ebp]
  008d4	66 89 0c 02	 mov	 WORD PTR [edx+eax], cx
$LN32@detach_loc:

; 603  : 			}
; 604  : 		}
; 605  : 	}
; 606  : 
; 607  : 	//
; 608  : 	// if the position is outside of the map volume then reset the viewpoint to the launcher origin
; 609  : 	//
; 610  : 
; 611  : 	if (found)

  008d8	83 7d f4 00	 cmp	 DWORD PTR _found$[ebp], 0
  008dc	0f 84 52 01 00
	00		 je	 $LN33@detach_loc

; 612  : 	{
; 613  : 		if (!point_inside_map_volume (&vp->position))

  008e2	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  008e5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008e9	0f 2f 05 24 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  008f0	72 58		 jb	 SHORT $LN36@detach_loc
  008f2	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  008f5	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  008fd	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  00900	72 48		 jb	 SHORT $LN36@detach_loc
  00902	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00905	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0090a	0f 2f 05 28 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  00911	72 37		 jb	 SHORT $LN36@detach_loc
  00913	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00916	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  0091e	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  00922	72 26		 jb	 SHORT $LN36@detach_loc
  00924	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00927	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0092c	0f 2f 05 2c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00933	72 15		 jb	 SHORT $LN36@detach_loc
  00935	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00938	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00940	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  00944	0f 83 ea 00 00
	00		 jae	 $LN35@detach_loc
$LN36@detach_loc:

; 614  : 		{
; 615  : 			//
; 616  : 			// the launcher origin must be on the map (else the position would debug fatal)
; 617  : 			//
; 618  : 
; 619  : 			get_local_entity_vec3d (launcher, VEC3D_TYPE_POSITION, &vp->position);

  0094a	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0094e	74 0d		 je	 SHORT $LN61@detach_loc
  00950	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  00953	8b 08		 mov	 ecx, DWORD PTR [eax]
  00955	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv498[ebp], ecx
  0095b	eb 27		 jmp	 SHORT $LN62@detach_loc
$LN61@detach_loc:
  0095d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  00963	81 c2 23 01 00
	00		 add	 edx, 291		; 00000123H
  00969	52		 push	 edx
  0096a	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0096f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00974	50		 push	 eax
  00975	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0097a	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv498[ebp], 0
$LN62@detach_loc:
  00984	b9 01 00 00 00	 mov	 ecx, 1
  00989	85 c9		 test	 ecx, ecx
  0098b	74 0c		 je	 SHORT $LN63@detach_loc
  0098d	c7 85 64 fe ff
	ff 08 00 00 00	 mov	 DWORD PTR tv506[ebp], 8
  00997	eb 27		 jmp	 SHORT $LN64@detach_loc
$LN63@detach_loc:
  00999	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  0099f	81 c2 23 01 00
	00		 add	 edx, 291		; 00000123H
  009a5	52		 push	 edx
  009a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  009b0	50		 push	 eax
  009b1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009b6	c7 85 64 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv506[ebp], 0
$LN64@detach_loc:
  009c0	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  009c3	51		 push	 ecx
  009c4	6a 08		 push	 8
  009c6	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  009c9	52		 push	 edx
  009ca	6b 85 68 fe ff
	ff 60		 imul	 eax, DWORD PTR tv498[ebp], 96
  009d1	8b 8d 64 fe ff
	ff		 mov	 ecx, DWORD PTR tv506[ebp]
  009d7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  009de	ff d2		 call	 edx

; 620  : 
; 621  : 			get_local_entity_attitude_matrix (launcher, vp->attitude);

  009e0	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  009e4	74 0d		 je	 SHORT $LN65@detach_loc
  009e6	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  009e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  009eb	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv551[ebp], ecx
  009f1	eb 27		 jmp	 SHORT $LN66@detach_loc
$LN65@detach_loc:
  009f3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z@4JA
  009f9	81 c2 25 01 00
	00		 add	 edx, 293		; 00000125H
  009ff	52		 push	 edx
  00a00	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a0a	50		 push	 eax
  00a0b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a10	c7 85 68 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv551[ebp], 0
$LN66@detach_loc:
  00a1a	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00a1d	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00a20	51		 push	 ecx
  00a21	8b 55 08	 mov	 edx, DWORD PTR _launcher$[ebp]
  00a24	52		 push	 edx
  00a25	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR tv551[ebp]
  00a2b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_attitude_matrix@@3PAP6GXPAUENTITY@@QAY02M@ZA[eax*4]
  00a32	ff d1		 call	 ecx
$LN35@detach_loc:
$LN33@detach_loc:

; 622  : 
; 623  : 			#if DEBUG_MODULE
; 624  : 
; 625  : 			debug_log
; 626  : 			(
; 627  : 				"Position outside map volume - detach weapon as ORIGIN device (x = %.2f, y = %.2f, z = %.2f)",
; 628  : 				vp->position.x,
; 629  : 				vp->position.y,
; 630  : 				vp->position.z
; 631  : 			);
; 632  : 
; 633  : 			#endif
; 634  : 		}
; 635  : 	}
; 636  : 	else
; 637  : 	{
; 638  : 		#if DEBUG_MODULE
; 639  : 
; 640  : 		debug_log
; 641  : 		(
; 642  : 			"Detach weapon as ORIGIN device (x = %.2f, y = %.2f, z = %.2f)",
; 643  : 			vp->position.x,
; 644  : 			vp->position.y,
; 645  : 			vp->position.z
; 646  : 		);
; 647  : 
; 648  : 		#endif
; 649  : 	}
; 650  : 
; 651  : 	//
; 652  : 	// ensure that the weapon is above ground
; 653  : 	//
; 654  : 
; 655  : 	terrain_elevation = get_3d_terrain_elevation (vp->position.x, vp->position.z);

  00a34	6a 00		 push	 0
  00a36	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00a39	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00a3e	51		 push	 ecx
  00a3f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a44	8b 4d 14	 mov	 ecx, DWORD PTR _vp$[ebp]
  00a47	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00a4b	51		 push	 ecx
  00a4c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a51	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00a56	d9 9d 00 ff ff
	ff		 fstp	 DWORD PTR _terrain_elevation$[ebp]

; 656  : 
; 657  : 	if (vp->position.y < terrain_elevation)

  00a5c	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00a5f	f3 0f 10 85 00
	ff ff ff	 movss	 xmm0, DWORD PTR _terrain_elevation$[ebp]
  00a67	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  00a6b	76 1c		 jbe	 SHORT $LN37@detach_loc

; 658  : 	{
; 659  : 		vp->position.y = terrain_elevation + 1.0;

  00a6d	f3 0f 5a 85 00
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _terrain_elevation$[ebp]
  00a75	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00a7d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00a81	8b 45 14	 mov	 eax, DWORD PTR _vp$[ebp]
  00a84	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
$LN37@detach_loc:

; 660  : 
; 661  : 		#if DEBUG_MODULE
; 662  : 
; 663  : 		debug_colour_log
; 664  : 		(
; 665  : 			DEBUG_COLOUR_RED,
; 666  : 			"WARNING! Weapon below ground (repositioned above) (x = %.2f, y = %.2f, z = %.2f)",
; 667  : 			vp->position.x,
; 668  : 			vp->position.y,
; 669  : 			vp->position.z
; 670  : 		);
; 671  : 
; 672  : 		#endif
; 673  : 	}
; 674  : }

  00a89	5f		 pop	 edi
  00a8a	5e		 pop	 esi
  00a8b	5b		 pop	 ebx
  00a8c	8b e5		 mov	 esp, ebp
  00a8e	5d		 pop	 ebp
  00a8f	c2 10 00	 ret	 16			; 00000010H
  00a92	66 90		 npad	 2
$LN68@detach_loc:
  00a94	00 00 00 00	 DD	 $LN25@detach_loc
  00a98	00 00 00 00	 DD	 $LN2@detach_loc
$LN67@detach_loc:
  00a9c	00		 DB	 0
  00a9d	00		 DB	 0
  00a9e	01		 DB	 1
  00a9f	01		 DB	 1
  00aa0	00		 DB	 0
  00aa1	00		 DB	 0
  00aa2	66 90		 npad	 2
$LN69@detach_loc:
  00aa4	00 00 00 00	 DD	 $LN26@detach_loc
  00aa8	00 00 00 00	 DD	 $LN26@detach_loc
  00aac	00 00 00 00	 DD	 $LN4@detach_loc
  00ab0	00 00 00 00	 DD	 $LN4@detach_loc
  00ab4	00 00 00 00	 DD	 $LN27@detach_loc
  00ab8	00 00 00 00	 DD	 $LN28@detach_loc
?detach_local_entity_weapon@@YGXPAUENTITY@@HHPAUVIEWPOINT@@@Z ENDP ; detach_local_entity_weapon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z
_TEXT	SEGMENT
tv143 = -84						; size = 4
tv90 = -84						; size = 4
tv135 = -80						; size = 4
tv82 = -80						; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_launcher$ = 8						; size = 4
_weapon_sub_type$ = 12					; size = 4
?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z PROC ; get_local_entity_weapon_available, COMDAT

; 237  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 238  : 	weapon_package_status
; 239  : 		*package_status;
; 240  : 
; 241  : 	weapon_config_types
; 242  : 		config_type;
; 243  : 
; 244  : 	int
; 245  : 		package;
; 246  : 
; 247  : 	ASSERT (launcher);

  00009	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@get_local_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08EAFLGIKM@launcher@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@get_local_:

; 248  : 
; 249  : 	ASSERT (entity_sub_type_weapon_valid (weapon_sub_type));

  00027	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN7@get_local_
  0002d	83 7d 0c 4c	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 76 ; 0000004cH
  00031	7c 18		 jl	 SHORT $LN6@get_local_
$LN7@get_local_:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  00038	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@MAFEAOFK@entity_sub_type_weapon_valid?5?$CIw@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@get_local_:

; 250  : 
; 251  : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0004b	83 7d 0c 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  0004f	0f 84 e3 01 00
	00		 je	 $LN8@get_local_

; 252  : 	{
; 253  : 		package_status = (weapon_package_status *) get_local_entity_ptr_value (launcher, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00055	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  00059	74 0a		 je	 SHORT $LN18@get_local_
  0005b	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  0005e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00060	89 4d b0	 mov	 DWORD PTR tv82[ebp], ecx
  00063	eb 21		 jmp	 SHORT $LN19@get_local_
$LN18@get_local_:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  0006b	83 c2 10	 add	 edx, 16			; 00000010H
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN19@get_local_:
  00086	b9 01 00 00 00	 mov	 ecx, 1
  0008b	85 c9		 test	 ecx, ecx
  0008d	74 09		 je	 SHORT $LN20@get_local_
  0008f	c7 45 ac 13 00
	00 00		 mov	 DWORD PTR tv90[ebp], 19	; 00000013H
  00096	eb 21		 jmp	 SHORT $LN21@get_local_
$LN20@get_local_:
  00098	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  0009e	83 c2 10	 add	 edx, 16			; 00000010H
  000a1	52		 push	 edx
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN21@get_local_:
  000b9	6a 13		 push	 19			; 00000013H
  000bb	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  000be	51		 push	 ecx
  000bf	6b 55 b0 50	 imul	 edx, DWORD PTR tv82[ebp], 80
  000c3	8b 45 ac	 mov	 eax, DWORD PTR tv90[ebp]
  000c6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  000cd	ff d1		 call	 ecx
  000cf	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 254  : 
; 255  : 		if (package_status)

  000d2	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000d6	0f 84 5c 01 00
	00		 je	 $LN8@get_local_

; 256  : 		{
; 257  : 			config_type = (weapon_config_types) get_local_entity_int_value (launcher, INT_TYPE_WEAPON_CONFIG_TYPE);

  000dc	83 7d 08 00	 cmp	 DWORD PTR _launcher$[ebp], 0
  000e0	74 0a		 je	 SHORT $LN22@get_local_
  000e2	8b 45 08	 mov	 eax, DWORD PTR _launcher$[ebp]
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	89 4d b0	 mov	 DWORD PTR tv135[ebp], ecx
  000ea	eb 21		 jmp	 SHORT $LN23@get_local_
$LN22@get_local_:
  000ec	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  000f2	83 c2 14	 add	 edx, 20			; 00000014H
  000f5	52		 push	 edx
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00106	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN23@get_local_:
  0010d	b9 01 00 00 00	 mov	 ecx, 1
  00112	85 c9		 test	 ecx, ecx
  00114	74 09		 je	 SHORT $LN24@get_local_
  00116	c7 45 ac 05 01
	00 00		 mov	 DWORD PTR tv143[ebp], 261 ; 00000105H
  0011d	eb 21		 jmp	 SHORT $LN25@get_local_
$LN24@get_local_:
  0011f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  00125	83 c2 14	 add	 edx, 20			; 00000014H
  00128	52		 push	 edx
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00139	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN25@get_local_:
  00140	68 05 01 00 00	 push	 261			; 00000105H
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _launcher$[ebp]
  00148	51		 push	 ecx
  00149	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 1116
  00150	8b 45 ac	 mov	 eax, DWORD PTR tv143[ebp]
  00153	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0015a	ff d1		 call	 ecx
  0015c	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 258  : 
; 259  : 			ASSERT (weapon_config_type_valid (config_type));

  0015f	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00163	7c 09		 jl	 SHORT $LN11@get_local_
  00165	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  0016c	7c 18		 jl	 SHORT $LN10@get_local_
$LN11@get_local_:
  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  00173	83 c0 16	 add	 eax, 22			; 00000016H
  00176	50		 push	 eax
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00181	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_local_:

; 260  : 
; 261  : 			for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  00186	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  0018d	eb 09		 jmp	 SHORT $LN4@get_local_
$LN2@get_local_:
  0018f	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00192	83 c0 01	 add	 eax, 1
  00195	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@get_local_:
  00198	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  0019c	0f 8d 96 00 00
	00		 jge	 $LN8@get_local_

; 262  : 			{
; 263  : 				if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  001a2	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001a9	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001ad	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  001b5	75 02		 jne	 SHORT $LN12@get_local_

; 264  : 				{
; 265  : 					break;

  001b7	eb 7f		 jmp	 SHORT $LN8@get_local_
$LN12@get_local_:

; 266  : 				}
; 267  : 
; 268  : 				ASSERT (package_status[package].number <= weapon_config_database[config_type][package].number);

  001b9	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001bc	c1 e0 04	 shl	 eax, 4
  001bf	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  001c2	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  001c6	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001cd	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001d1	3b 94 08 04 00
	00 00		 cmp	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  001d8	7e 18		 jle	 SHORT $LN13@get_local_
  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z@4JA
  001df	83 c0 1f	 add	 eax, 31			; 0000001fH
  001e2	50		 push	 eax
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@GEBDIPMM@package_status?$FLpackage?$FN?4number?5@
  001ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@get_local_:

; 269  : 
; 270  : 				if (weapon_config_database[config_type][package].sub_type == weapon_sub_type)

  001f2	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001f9	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001fd	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  00204	3b 55 0c	 cmp	 edx, DWORD PTR _weapon_sub_type$[ebp]
  00207	75 2a		 jne	 SHORT $LN14@get_local_

; 271  : 				{
; 272  : 					if (!package_status[package].damaged)

  00209	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  0020c	c1 e0 04	 shl	 eax, 4
  0020f	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00212	0f b7 54 01 02	 movzx	 edx, WORD PTR [ecx+eax+2]
  00217	85 d2		 test	 edx, edx
  00219	75 18		 jne	 SHORT $LN14@get_local_

; 273  : 					{
; 274  : 						if (package_status[package].number > 0)

  0021b	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  0021e	c1 e0 04	 shl	 eax, 4
  00221	8b 4d fc	 mov	 ecx, DWORD PTR _package_status$[ebp]
  00224	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  00228	85 d2		 test	 edx, edx
  0022a	7e 07		 jle	 SHORT $LN14@get_local_

; 275  : 						{
; 276  : 							return (TRUE);

  0022c	b8 01 00 00 00	 mov	 eax, 1
  00231	eb 07		 jmp	 SHORT $LN1@get_local_
$LN14@get_local_:

; 277  : 						}
; 278  : 					}
; 279  : 				}
; 280  : 			}

  00233	e9 57 ff ff ff	 jmp	 $LN2@get_local_
$LN8@get_local_:

; 281  : 		}
; 282  : 	}
; 283  : 
; 284  : 	return (FALSE);

  00238	33 c0		 xor	 eax, eax
$LN1@get_local_:

; 285  : }

  0023a	5f		 pop	 edi
  0023b	5e		 pop	 esi
  0023c	5b		 pop	 ebx
  0023d	8b e5		 mov	 esp, ebp
  0023f	5d		 pop	 ebp
  00240	c2 08 00	 ret	 8
?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ENDP ; get_local_entity_weapon_available
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\weapon\weapon.c
;	COMDAT ?load_local_entity_weapon_config@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv206 = -84						; size = 4
tv183 = -84						; size = 4
tv139 = -84						; size = 4
tv83 = -84						; size = 4
tv198 = -80						; size = 4
tv176 = -80						; size = 4
tv131 = -80						; size = 4
tv75 = -80						; size = 4
_package$ = -12						; size = 4
_config_type$ = -8					; size = 4
_package_status$ = -4					; size = 4
_en$ = 8						; size = 4
?load_local_entity_weapon_config@@YGXPAUENTITY@@@Z PROC	; load_local_entity_weapon_config, COMDAT

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 106  : 	weapon_package_status
; 107  : 		*package_status;
; 108  : 
; 109  : 	weapon_config_types
; 110  : 		config_type;
; 111  : 
; 112  : 	int
; 113  : 		package;
; 114  : 
; 115  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@load_local
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@load_local:

; 116  : 
; 117  : 	package_status = (weapon_package_status *) get_local_entity_ptr_value (en, PTR_TYPE_WEAPON_PACKAGE_STATUS_ARRAY);

  00027	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN13@load_local
  0002d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN14@load_local
$LN13@load_local:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  0003d	83 c2 0c	 add	 edx, 12			; 0000000cH
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN14@load_local:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN15@load_local
  00061	c7 45 ac 13 00
	00 00		 mov	 DWORD PTR tv83[ebp], 19	; 00000013H
  00068	eb 21		 jmp	 SHORT $LN16@load_local
$LN15@load_local:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  00070	83 c2 0c	 add	 edx, 12			; 0000000cH
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN16@load_local:
  0008b	6a 13		 push	 19			; 00000013H
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00090	51		 push	 ecx
  00091	6b 55 b0 50	 imul	 edx, DWORD PTR tv75[ebp], 80
  00095	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  00098	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  0009f	ff d1		 call	 ecx
  000a1	89 45 fc	 mov	 DWORD PTR _package_status$[ebp], eax

; 118  : 
; 119  : 	if (package_status)

  000a4	83 7d fc 00	 cmp	 DWORD PTR _package_status$[ebp], 0
  000a8	0f 84 1e 01 00
	00		 je	 $LN6@load_local

; 120  : 	{
; 121  : 		memset (package_status, 0, SIZE_WEAPON_PACKAGE_STATUS_ARRAY);

  000ae	68 00 02 00 00	 push	 512			; 00000200H
  000b3	6a 00		 push	 0
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _package_status$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 _memset
  000be	83 c4 0c	 add	 esp, 12			; 0000000cH

; 122  : 
; 123  : 		config_type = (weapon_config_types) get_local_entity_int_value (en, INT_TYPE_WEAPON_CONFIG_TYPE);

  000c1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c5	74 0a		 je	 SHORT $LN17@load_local
  000c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cc	89 4d b0	 mov	 DWORD PTR tv131[ebp], ecx
  000cf	eb 21		 jmp	 SHORT $LN18@load_local
$LN17@load_local:
  000d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  000d7	83 c2 12	 add	 edx, 18			; 00000012H
  000da	52		 push	 edx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000eb	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN18@load_local:
  000f2	b9 01 00 00 00	 mov	 ecx, 1
  000f7	85 c9		 test	 ecx, ecx
  000f9	74 09		 je	 SHORT $LN19@load_local
  000fb	c7 45 ac 05 01
	00 00		 mov	 DWORD PTR tv139[ebp], 261 ; 00000105H
  00102	eb 21		 jmp	 SHORT $LN20@load_local
$LN19@load_local:
  00104	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  0010a	83 c2 12	 add	 edx, 18			; 00000012H
  0010d	52		 push	 edx
  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN20@load_local:
  00125	68 05 01 00 00	 push	 261			; 00000105H
  0012a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0012d	51		 push	 ecx
  0012e	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv131[ebp], 1116
  00135	8b 45 ac	 mov	 eax, DWORD PTR tv139[ebp]
  00138	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0013f	ff d1		 call	 ecx
  00141	89 45 f8	 mov	 DWORD PTR _config_type$[ebp], eax

; 124  : 
; 125  : 		ASSERT (weapon_config_type_valid (config_type));

  00144	83 7d f8 00	 cmp	 DWORD PTR _config_type$[ebp], 0
  00148	7c 09		 jl	 SHORT $LN8@load_local
  0014a	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _config_type$[ebp], 716 ; 000002ccH
  00151	7c 18		 jl	 SHORT $LN7@load_local
$LN8@load_local:
  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  00158	83 c0 14	 add	 eax, 20			; 00000014H
  0015b	50		 push	 eax
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@EBNCOBJM@weapon_config_type_valid?5?$CIconfi@
  00166	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@load_local:

; 126  : 
; 127  : 		#if DEBUG_MODULE
; 128  : 
; 129  : 		debug_log ("Loading weapon config (entity = %d, config = %d)", get_local_entity_index (en), config_type);
; 130  : 
; 131  : 		#endif
; 132  : 
; 133  : 		for (package = 0; package < NUM_WEAPON_PACKAGES; package++)

  0016b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _package$[ebp], 0
  00172	eb 09		 jmp	 SHORT $LN4@load_local
$LN2@load_local:
  00174	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  00177	83 c0 01	 add	 eax, 1
  0017a	89 45 f4	 mov	 DWORD PTR _package$[ebp], eax
$LN4@load_local:
  0017d	83 7d f4 20	 cmp	 DWORD PTR _package$[ebp], 32 ; 00000020H
  00181	7d 49		 jge	 SHORT $LN6@load_local

; 134  : 		{
; 135  : 			if (weapon_config_database[config_type][package].sub_type == ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  00183	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  0018a	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  0018e	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  00196	75 02		 jne	 SHORT $LN9@load_local

; 136  : 			{
; 137  : 				break;

  00198	eb 32		 jmp	 SHORT $LN6@load_local
$LN9@load_local:

; 138  : 			}
; 139  : 
; 140  : 			package_status[package].number = weapon_config_database[config_type][package].number;

  0019a	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _config_type$[ebp], 2432
  001a1	6b 4d f4 4c	 imul	 ecx, DWORD PTR _package$[ebp], 76
  001a5	8b 55 f4	 mov	 edx, DWORD PTR _package$[ebp]
  001a8	c1 e2 04	 shl	 edx, 4
  001ab	8b 75 fc	 mov	 esi, DWORD PTR _package_status$[ebp]
  001ae	66 8b 84 08 04
	00 00 00	 mov	 ax, WORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  001b6	66 89 04 16	 mov	 WORD PTR [esi+edx], ax

; 141  : 
; 142  : 			package_status[package].damaged = FALSE;

  001ba	8b 45 f4	 mov	 eax, DWORD PTR _package$[ebp]
  001bd	c1 e0 04	 shl	 eax, 4
  001c0	33 c9		 xor	 ecx, ecx
  001c2	8b 55 fc	 mov	 edx, DWORD PTR _package_status$[ebp]
  001c5	66 89 4c 02 02	 mov	 WORD PTR [edx+eax+2], cx

; 143  : 		}

  001ca	eb a8		 jmp	 SHORT $LN2@load_local
$LN6@load_local:

; 144  : 	}
; 145  : 
; 146  : 	////////////////////////////////////////
; 147  : 	//
; 148  : 
; 149  : 	if (!get_local_entity_weapon_available (en, get_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON)))

  001cc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001d0	74 0a		 je	 SHORT $LN21@load_local
  001d2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d7	89 4d b0	 mov	 DWORD PTR tv176[ebp], ecx
  001da	eb 1d		 jmp	 SHORT $LN22@load_local
$LN21@load_local:
  001dc	68 95 00 00 00	 push	 149			; 00000095H
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ec	52		 push	 edx
  001ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv176[ebp], 0
$LN22@load_local:
  001f9	b8 01 00 00 00	 mov	 eax, 1
  001fe	85 c0		 test	 eax, eax
  00200	74 09		 je	 SHORT $LN23@load_local
  00202	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv183[ebp], 184 ; 000000b8H
  00209	eb 1d		 jmp	 SHORT $LN24@load_local
$LN23@load_local:
  0020b	68 95 00 00 00	 push	 149			; 00000095H
  00210	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00215	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0021b	51		 push	 ecx
  0021c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00221	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN24@load_local:
  00228	68 b8 00 00 00	 push	 184			; 000000b8H
  0022d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00230	52		 push	 edx
  00231	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv176[ebp], 1116
  00238	8b 4d ac	 mov	 ecx, DWORD PTR tv183[ebp]
  0023b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00242	ff d2		 call	 edx
  00244	50		 push	 eax
  00245	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00248	50		 push	 eax
  00249	e8 00 00 00 00	 call	 ?get_local_entity_weapon_available@@YGHPAUENTITY@@H@Z ; get_local_entity_weapon_available
  0024e	85 c0		 test	 eax, eax
  00250	0f 85 82 00 00
	00		 jne	 $LN10@load_local

; 150  : 	{
; 151  : 		#if 0
; 152  : 		{
; 153  : 			entity_sub_types
; 154  : 				weapon_sub_type;
; 155  : 
; 156  : 			weapon_sub_type = get_local_entity_int_value (en, INT_TYPE_DEFAULT_WEAPON_TYPE);
; 157  : 
; 158  : 			if (!get_local_entity_weapon_available (en, weapon_sub_type))
; 159  : 			{
; 160  : 				weapon_sub_type = get_first_available_weapon_sub_type (en);
; 161  : 			}
; 162  : 
; 163  : 			set_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON, weapon_sub_type);
; 164  : 		}
; 165  : 		#else
; 166  : 		{
; 167  : 			set_local_entity_int_value (en, INT_TYPE_SELECTED_WEAPON, ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  00256	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0025a	74 0a		 je	 SHORT $LN25@load_local
  0025c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0025f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00261	89 4d b0	 mov	 DWORD PTR tv198[ebp], ecx
  00264	eb 21		 jmp	 SHORT $LN26@load_local
$LN25@load_local:
  00266	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  0026c	83 c2 3e	 add	 edx, 62			; 0000003eH
  0026f	52		 push	 edx
  00270	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00275	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0027a	50		 push	 eax
  0027b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00280	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv198[ebp], 0
$LN26@load_local:
  00287	b9 01 00 00 00	 mov	 ecx, 1
  0028c	85 c9		 test	 ecx, ecx
  0028e	74 09		 je	 SHORT $LN27@load_local
  00290	c7 45 ac b8 00
	00 00		 mov	 DWORD PTR tv206[ebp], 184 ; 000000b8H
  00297	eb 21		 jmp	 SHORT $LN28@load_local
$LN27@load_local:
  00299	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??load_local_entity_weapon_config@@YGXPAUENTITY@@@Z@4JA
  0029f	83 c2 3e	 add	 edx, 62			; 0000003eH
  002a2	52		 push	 edx
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_0EK@LKBNKFPA@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv206[ebp], 0
$LN28@load_local:
  002ba	6a 00		 push	 0
  002bc	68 b8 00 00 00	 push	 184			; 000000b8H
  002c1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002c4	51		 push	 ecx
  002c5	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv198[ebp], 1116
  002cc	8b 45 ac	 mov	 eax, DWORD PTR tv206[ebp]
  002cf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  002d6	ff d1		 call	 ecx
$LN10@load_local:

; 168  : 		}
; 169  : 		#endif
; 170  : 	}
; 171  : 
; 172  : 	//
; 173  : 	////////////////////////////////////////
; 174  : 
; 175  : 	reset_entity_weapon_config_animation (en);

  002d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002db	50		 push	 eax
  002dc	e8 00 00 00 00	 call	 ?reset_entity_weapon_config_animation@@YGXPAUENTITY@@@Z ; reset_entity_weapon_config_animation

; 176  : 
; 177  : 	if (en == get_gunship_entity ())

  002e1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002e4	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002ea	75 05		 jne	 SHORT $LN11@load_local

; 178  : 	{
; 179  : 		repair_gunship_weapon_damage ();

  002ec	e8 00 00 00 00	 call	 ?repair_gunship_weapon_damage@@YGXXZ ; repair_gunship_weapon_damage
$LN11@load_local:

; 180  : 	}
; 181  : 
; 182  : 	////////////////////////////////////////
; 183  : 	//
; 184  : 	// set Comanche stub wing visibility (not a very elegant solution)
; 185  : 	//
; 186  : 	////////////////////////////////////////
; 187  : 
; 188  : 	set_comanche_stub_wing_visibility (en);

  002f1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?set_comanche_stub_wing_visibility@@YGXPAUENTITY@@@Z ; set_comanche_stub_wing_visibility

; 189  : }

  002fa	5f		 pop	 edi
  002fb	5e		 pop	 esi
  002fc	5b		 pop	 ebx
  002fd	8b e5		 mov	 esp, ebp
  002ff	5d		 pop	 ebp
  00300	c2 04 00	 ret	 4
?load_local_entity_weapon_config@@YGXPAUENTITY@@@Z ENDP	; load_local_entity_weapon_config
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fmod@@YGMMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
__Yx$ = 12						; size = 4
?fmod@@YGMMM@Z PROC					; fmod, COMDAT

; 143  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	return (_CSTD fmodf(_Xx, _Yx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _fmodf
  00024	83 c4 08	 add	 esp, 8

; 145  : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?fmod@@YGMMM@Z ENDP					; fmod
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fmodf
_TEXT	SEGMENT
tv74 = -68						; size = 4
__X$ = 8						; size = 4
__Y$ = 12						; size = 4
_fmodf	PROC						; COMDAT

; 690  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 691  :             return (float)fmod(_X, _Y);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _fmod
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 692  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_fmodf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
