; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gwutcfg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?INCLUDE_WEAPON_TYPES@@3HA			; INCLUDE_WEAPON_TYPES
PUBLIC	?WRITE_HEADER@@3HA				; WRITE_HEADER
PUBLIC	?READ_HEADER@@3HA				; READ_HEADER
_BSS	SEGMENT
?INCLUDE_WEAPON_TYPES@@3HA DD 01H DUP (?)		; INCLUDE_WEAPON_TYPES
?WRITE_HEADER@@3HA DD 01H DUP (?)			; WRITE_HEADER
?READ_HEADER@@3HA DD 01H DUP (?)			; READ_HEADER
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	__vfscanf_l
PUBLIC	_fscanf
PUBLIC	?strstr@@YAPADQADQBD@Z				; strstr
PUBLIC	_acosf
PUBLIC	_cosf
PUBLIC	?acos@@YGMM@Z					; acos
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?DumpGWutInfo@@YGXPBD@Z				; DumpGWutInfo
PUBLIC	?ReadGWutInfo@@YGXPBD@Z				; ReadGWutInfo
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_04DBHEMPKL@GWUT@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0M@DKAFMAAL@?$FLAIRCRAFT?$FN?6@		; `string'
PUBLIC	??_C@_09LBCPNCLI@full_name@			; `string'
PUBLIC	??_C@_03CGNBMCEI@?$CFs?0@			; `string'
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	??_C@_0BL@LPABPCFJ@default_weapon_config_type@	; `string'
PUBLIC	??_C@_0BH@NHDBAFKJ@min_weapon_config_type@	; `string'
PUBLIC	??_C@_0BH@NDKLDEID@max_weapon_config_type@	; `string'
PUBLIC	??_C@_0BO@EGCLMAJK@air_to_air_weapon_config_type@ ; `string'
PUBLIC	??_C@_0CC@GMHHKJPN@air_to_surface_weapon_config_ty@ ; `string'
PUBLIC	??_C@_0BJ@IBOCPANC@scout_weapon_config_type@	; `string'
PUBLIC	??_C@_0BE@GAKPEDIG@default_weapon_type@		; `string'
PUBLIC	??_C@_0BD@KFEIDFO@target_symbol_type@		; `string'
PUBLIC	??_C@_0BF@CMHOELLN@target_priority_type@	; `string'
PUBLIC	??_C@_0BE@NPOJFGGJ@force_info_catagory@		; `string'
PUBLIC	??_C@_0M@CJJNFLM@threat_type@			; `string'
PUBLIC	??_C@_0CF@INDHHFLP@centre_of_gravity_to_ground_dis@ ; `string'
PUBLIC	??_C@_0CP@LIHEKIBI@centre_of_gravity_to_ground_dis@ ; `string'
PUBLIC	??_C@_0BI@KGGBNFKF@chase_view_min_distance@	; `string'
PUBLIC	??_C@_0BI@OGCOKNND@chase_view_max_distance@	; `string'
PUBLIC	??_C@_0BN@PIJDHCNC@chase_view_min_distance_test@ ; `string'
PUBLIC	??_C@_0BN@KLDFGKDG@chase_view_max_distance_test@ ; `string'
PUBLIC	??_C@_0BA@OLEKGHHO@cruise_velocity@		; `string'
PUBLIC	??_C@_0BA@IMJCDPMB@cruise_altitude@		; `string'
PUBLIC	??_C@_0BA@LAKKDKLB@attack_altitude@		; `string'
PUBLIC	??_C@_0BG@OGFMJPKK@destroyed_bank_offset@	; `string'
PUBLIC	??_C@_0BH@GKPMHBAM@destroyed_pitch_offset@	; `string'
PUBLIC	??_C@_0P@JKIIHMOB@fuselage_angle@		; `string'
PUBLIC	??_C@_0BB@CCPNGAIP@liftoff_velocity@		; `string'
PUBLIC	??_C@_0BH@LIPCLOFP@main_rotor_shaft_angle@	; `string'
PUBLIC	??_C@_0BF@CMAFDPJF@main_rotor_direction@	; `string'
PUBLIC	??_C@_0BN@LJAAFAJN@main_rotor_blade_droop_angle@ ; `string'
PUBLIC	??_C@_0BE@MNADIOKK@propellor_direction@		; `string'
PUBLIC	??_C@_0O@MJEOGANB@max_turn_rate@		; `string'
PUBLIC	??_C@_08OCBGELPM@max_roll@			; `string'
PUBLIC	??_C@_0BM@HPMEGNJI@max_vertical_turn_allowance@	; `string'
PUBLIC	??_C@_0BB@GBEPPNPB@avoidance_radius@		; `string'
PUBLIC	??_C@_05IGDAEEJD@g_max@				; `string'
PUBLIC	??_C@_0N@PKCIOEFJ@power_output@			; `string'
PUBLIC	??_C@_0BF@NIBNMMBC@tail_rotor_direction@	; `string'
PUBLIC	??_C@_0N@KPEEILEF@recon_radius@			; `string'
PUBLIC	??_C@_0BC@BBBJKKMK@target_scan_delay@		; `string'
PUBLIC	??_C@_0P@PICBLDJ@air_scan_range@		; `string'
PUBLIC	??_C@_0BD@DFEIMDEP@surface_scan_range@		; `string'
PUBLIC	??_C@_0BM@HBABFPLO@potential_air_to_air_threat@	; `string'
PUBLIC	??_C@_0CA@LKMEIEEE@potential_air_to_surface_threat@ ; `string'
PUBLIC	??_C@_0N@KDBGCMLI@ammo_economy@			; `string'
PUBLIC	??_C@_0BE@EILOBNPM@fuel_default_weight@		; `string'
PUBLIC	??_C@_0N@IFIFOLKE@fuel_economy@			; `string'
PUBLIC	??_C@_0BG@OILIBHNK@number_of_main_rotors@	; `string'
PUBLIC	??_C@_0BC@DKOOLAJE@main_rotor_radius@		; `string'
PUBLIC	??_C@_0BF@JPIPGBMH@initial_damage_level@	; `string'
PUBLIC	??_C@_0BC@IPAJHBFC@explosive_quality@		; `string'
PUBLIC	??_C@_0BA@IMMJCANI@explosive_power@		; `string'
PUBLIC	??_C@_0BF@OPPGPJDA@offensive_capability@	; `string'
PUBLIC	??_C@_0BE@LJBAGENL@player_controllable@		; `string'
PUBLIC	??_C@_0N@OMGKPKMJ@points_value@			; `string'
PUBLIC	??_C@_03OFAPEBGM@?$CFs?6@			; `string'
PUBLIC	??_C@_03DPLIHHLN@?$CFd?0@			; `string'
PUBLIC	??_C@_0P@IDGCIBNB@?5?0?5?0?5?0?5?0?5?0?5?0?5?0@	; `string'
PUBLIC	??_C@_03DNPOMJOE@?$CFg?0@			; `string'
PUBLIC	??_C@_03PMGGPEJJ@?$CFd?6@			; `string'
PUBLIC	??_C@_0M@KIJKODCH@?$FLVEHICLES?$FN?6@		; `string'
PUBLIC	??_C@_0M@NDGIMNEF@target_type@			; `string'
PUBLIC	??_C@_0BH@PFMMOFND@carries_smoke_grenades@	; `string'
PUBLIC	??_C@_0M@EIBFPEPD@axle_length@			; `string'
PUBLIC	??_C@_0BB@GCPDPIAG@max_acceleration@		; `string'
PUBLIC	??_C@_0P@NMHJCNEO@air_scan_floor@		; `string'
PUBLIC	??_C@_0BB@IIEJPLCJ@air_scan_ceiling@		; `string'
PUBLIC	??_C@_0CA@FPEGBEK@potential_surface_to_air_threat@ ; `string'
PUBLIC	??_C@_0CE@KDJGGNPD@potential_surface_to_surface_th@ ; `string'
PUBLIC	??_C@_0N@OGAPEKED@armour_front@			; `string'
PUBLIC	??_C@_0M@PLMHAJCM@armour_side@			; `string'
PUBLIC	??_C@_0M@IPDJNJFJ@armour_rear@			; `string'
PUBLIC	??_C@_0BI@LIMIOFIN@warhead_effective_class@	; `string'
PUBLIC	??_C@_0P@JLMIAFOO@?$CFs?5Unarmed?5US?0@		; `string'
PUBLIC	??_C@_0BA@DJFAOHC@?$CFs?5Standing?5US?0@	; `string'
PUBLIC	??_C@_0BA@PIFPFEDF@?$CFs?5Kneeling?5US?0@	; `string'
PUBLIC	??_C@_0BA@PBLBJGGA@?$CFs?5Unarmed?5CIS?0@	; `string'
PUBLIC	??_C@_0BB@IJABEAE@?$CFs?5Standing?5CIS?0@	; `string'
PUBLIC	??_C@_0BB@OANDAKGN@?$CFs?5Kneeling?5CIS?0@	; `string'
PUBLIC	??_C@_0M@OMHFOILL@?$CFs?5Covered?0@		; `string'
PUBLIC	??_C@_08EMKOFBJB@?$CFs?5Open?0@			; `string'
PUBLIC	??_C@_08KAFEPAPG@?5?0?5?0?5?0?5?0@		; `string'
PUBLIC	??_C@_0L@JIDGEPHK@?$FLWEAPONS?$FN?6@		; `string'
PUBLIC	??_C@_0O@LDNBMKIO@guidance_type@		; `string'
PUBLIC	??_C@_0M@OICLCNBO@aiming_type@			; `string'
PUBLIC	??_C@_0L@PNKIBKJK@decoy_type@			; `string'
PUBLIC	??_C@_0N@DOAPKEMB@warhead_type@			; `string'
PUBLIC	??_C@_0BG@MFIFEALF@report_ammo_low_count@	; `string'
PUBLIC	??_C@_09HOOAENGL@gun_shake@			; `string'
PUBLIC	??_C@_0BH@JCEFMAHM@soft_damage_capability@	; `string'
PUBLIC	??_C@_0BH@JHACPNNJ@hard_damage_capability@	; `string'
PUBLIC	??_C@_0BB@GGHOFCFK@smoke_trail_type@		; `string'
PUBLIC	??_C@_0CA@BGMLJGNH@acquire_parent_forward_velocity@ ; `string'
PUBLIC	??_C@_0P@JIAABPMB@ignore_gravity@		; `string'
PUBLIC	??_C@_0BG@PAFLPEOM@survive_ground_impact@	; `string'
PUBLIC	??_C@_0BK@JGEFAOLG@in_flight_collision_check@	; `string'
PUBLIC	??_C@_0BA@IIAOCNLL@viewable_weapon@		; `string'
PUBLIC	??_C@_0BB@KOPLBPAJ@boresight_weapon@		; `string'
PUBLIC	??_C@_0BI@KGIEMPFM@hellfire_flight_profile@	; `string'
PUBLIC	??_C@_0BI@BDOGIFDO@weapon_class_air_to_air@	; `string'
PUBLIC	??_C@_0BM@CCIDHLLB@weapon_class_air_to_surface@	; `string'
PUBLIC	??_C@_0BM@GGOBIAKP@weapon_class_surface_to_air@	; `string'
PUBLIC	??_C@_0CA@EOJKCMOP@weapon_class_surface_to_surface@ ; `string'
PUBLIC	??_C@_0BD@BDAAKCNH@weapon_class_decoy@		; `string'
PUBLIC	??_C@_0BD@BKLOADK@weapon_class_cargo@		; `string'
PUBLIC	??_C@_0BE@JPIDGIGC@weapon_class_debris@		; `string'
PUBLIC	??_C@_06CMCBKMCB@weight@			; `string'
PUBLIC	??_C@_09LEADDECB@min_range@			; `string'
PUBLIC	??_C@_09LFAPKOJF@max_range@			; `string'
PUBLIC	??_C@_0BA@MJOCNFFF@effective_range@		; `string'
PUBLIC	??_C@_0P@EDAFPOCA@min_range_loal@		; `string'
PUBLIC	??_C@_0P@GELOJJBB@max_range_loal@		; `string'
PUBLIC	??_C@_0BG@HFMCPOCL@max_range_error_ratio@	; `string'
PUBLIC	??_C@_0BA@HBBMJCKA@muzzle_velocity@		; `string'
PUBLIC	??_C@_0BK@EGMAGNBE@muzzle_velocity_max_error@	; `string'
PUBLIC	??_C@_09KJIOOHDO@burn_time@			; `string'
PUBLIC	??_C@_0M@IJHIGDHN@cruise_time@			; `string'
PUBLIC	??_C@_0BG@GOJCGEML@cruise_time_max_error@	; `string'
PUBLIC	??_C@_0N@DFFMOLKF@inhibit_time@			; `string'
PUBLIC	??_C@_0P@IMCJNFCO@burst_duration@		; `string'
PUBLIC	??_C@_0N@EONMFIGF@rate_of_fire@			; `string'
PUBLIC	??_C@_0M@KJEAPNOM@reload_time@			; `string'
PUBLIC	??_C@_0BH@BJIJPPLG@max_launch_angle_error@	; `string'
PUBLIC	??_C@_0BB@MEHCDDGB@max_seeker_limit@		; `string'
PUBLIC	??_C@_0M@MMJCOPID@drag_factor@			; `string'
PUBLIC	??_C@_0BC@KLAAKNAP@spiral_flightpath@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0M@NAMNMOIC@?$FLKEYSITES?$FN?6@		; `string'
PUBLIC	??_C@_0BC@COIJDJHI@ammo_supply_level@		; `string'
PUBLIC	??_C@_0BC@FMIIBAMJ@fuel_supply_level@		; `string'
PUBLIC	??_C@_0L@KEGEKCCP@importance@			; `string'
PUBLIC	??_C@_0BD@NBOKJPKH@minimum_efficiency@		; `string'
PUBLIC	??_C@_0BC@ILHHLDFC@importance_radius@		; `string'
PUBLIC	??_C@_0BE@HMOICOIG@air_coverage_radius@		; `string'
PUBLIC	??_C@_0P@IDGCIJHM@recon_distance@		; `string'
PUBLIC	??_C@_0BG@LKBBPNNG@sector_side_max_value@	; `string'
PUBLIC	??_C@_0BD@DCEABLMI@align_with_terrain@		; `string'
PUBLIC	??_C@_0BF@IMNGHFEI@hidden_by_fog_of_war@	; `string'
PUBLIC	??_C@_0BD@EFMJJBFC@air_force_capacity@		; `string'
PUBLIC	??_C@_0BC@GLNILKF@report_ammo_level@		; `string'
PUBLIC	??_C@_0BC@COKIPKMB@report_fuel_level@		; `string'
PUBLIC	??_C@_0BC@BHEOLLGL@assign_task_count@		; `string'
PUBLIC	??_C@_0BD@JONLMBPK@reserve_task_count@		; `string'
PUBLIC	??_C@_0N@KGJMNGM@requires_cap@			; `string'
PUBLIC	??_C@_0BA@JIPJJKGJ@requires_barcap@		; `string'
PUBLIC	??_C@_0L@NNOEGAMK@repairable@			; `string'
PUBLIC	??_C@_0L@FBLJAGPI@oca_target@			; `string'
PUBLIC	??_C@_0N@JAIMJONJ@recon_target@			; `string'
PUBLIC	??_C@_0BF@PGGFEFGM@ground_strike_target@	; `string'
PUBLIC	??_C@_0BD@FOKMDMIB@ship_strike_target@		; `string'
PUBLIC	??_C@_0BH@CJMKLCMJ@troop_insertion_target@	; `string'
PUBLIC	??_C@_0BD@JNFEJGLN@campaign_objective@		; `string'
PUBLIC	??_C@_09GBFBNGHJ@?$FLGROUPS?$FN?6@		; `string'
PUBLIC	??_C@_0P@BCLPCKM@group_category@		; `string'
PUBLIC	??_C@_0BD@FLDLBCPM@registry_list_type@		; `string'
PUBLIC	??_C@_0BA@GBJNKDPI@group_list_type@		; `string'
PUBLIC	??_C@_0O@JCHJIBFM@movement_type@		; `string'
PUBLIC	??_C@_0BF@OLMMGMAM@default_landing_type@	; `string'
PUBLIC	??_C@_0BE@OBOBIGBK@default_entity_type@		; `string'
PUBLIC	??_C@_0BM@KLLIJLIO@default_blue_force_sub_type@	; `string'
PUBLIC	??_C@_0BL@JDKOPMF@default_red_force_sub_type@	; `string'
PUBLIC	??_C@_0BI@COFDFHKL@default_group_formation@	; `string'
PUBLIC	??_C@_0BH@GPNCCHHF@default_group_division@	; `string'
PUBLIC	??_C@_0BM@GEDHBNEF@maximum_groups_per_division@	; `string'
PUBLIC	??_C@_0O@JDKIKICA@rearming_time@		; `string'
PUBLIC	??_C@_0P@DLPFKFCE@frontline_flag@		; `string'
PUBLIC	??_C@_0BB@KHAFLDIA@local_only_group@		; `string'
PUBLIC	??_C@_0BF@OKHKAOBE@default_engage_enemy@	; `string'
PUBLIC	??_C@_0L@MJJEHKFI@amalgamate@			; `string'
PUBLIC	??_C@_0BA@EAMCIPPF@platoon_id_type@		; `string'
PUBLIC	??_C@_0BF@JFFLMA@maximum_member_count@		; `string'
PUBLIC	??_C@_0BD@KDACILON@minimum_idle_count@		; `string'
PUBLIC	??_C@_0BA@EMGGLJKG@resupply_source@		; `string'
PUBLIC	??_C@_0BH@FCHAANCE@ai_air_attack_strength@	; `string'
PUBLIC	??_C@_0BK@MHOPBBGP@ai_ground_attack_strength@	; `string'
PUBLIC	??_C@_0BC@PILNPBAP@ai_movement_speed@		; `string'
PUBLIC	??_C@_0BE@HHIFKNOH@ai_movement_stealth@		; `string'
PUBLIC	??_C@_0P@KCADHAOC@ai_cargo_space@		; `string'
PUBLIC	??_C@_0P@CBIEFNJM@ai_troop_space@		; `string'
PUBLIC	??_C@_08OOLPMJMC@Infantry@			; `string'
PUBLIC	??_C@_08JNCEGBEK@?$CIstatic?$CJ@		; `string'
PUBLIC	??_C@_06ELALIEHK@?$CFs?5?$CFs?0@		; `string'
PUBLIC	??_C@_07OPIBMAFN@?$CIgroup?$CJ@			; `string'
PUBLIC	??_C@_08NECBKLKJ@?$CIpatrol?$CJ@		; `string'
PUBLIC	??_C@_08DIOLFBCP@?$FLTASKS?$FN?6@		; `string'
PUBLIC	??_C@_0O@LOLCGDBM@task_category@		; `string'
PUBLIC	??_C@_0O@PHLPMOJE@task_priority@		; `string'
PUBLIC	??_C@_0BC@KOCHPEJA@difficulty_rating@		; `string'
PUBLIC	??_C@_0BK@MIANEGBE@task_default_target_class@	; `string'
PUBLIC	??_C@_0BL@NCCIFNOO@task_default_target_source@	; `string'
PUBLIC	??_C@_0BJ@KHGACEBL@task_default_target_type@	; `string'
PUBLIC	??_C@_0BE@PINIPHCI@task_objective_info@		; `string'
PUBLIC	??_C@_0BF@BDNALNGL@minimum_member_count@	; `string'
PUBLIC	??_C@_0BE@GBJCPEJB@rules_of_engagement@		; `string'
PUBLIC	??_C@_0N@NMFLJCAH@engage_enemy@			; `string'
PUBLIC	??_C@_0BK@JKFOCKDD@escort_required_threshold@	; `string'
PUBLIC	??_C@_0BD@GELBBEHP@add_start_waypoint@		; `string'
PUBLIC	??_C@_0N@PDLNGDDD@primary_task@			; `string'
PUBLIC	??_C@_09NKMFGGLB@solo_task@			; `string'
PUBLIC	??_C@_0BA@PFCBFGIE@persistent_task@		; `string'
PUBLIC	??_C@_0N@JLKCCAEP@visible_task@			; `string'
PUBLIC	??_C@_0BL@CFEDIIIK@keysite_air_force_capacity@	; `string'
PUBLIC	??_C@_0P@PPGPJFNA@assess_landing@		; `string'
PUBLIC	??_C@_0BC@NILPEGCL@task_route_search@		; `string'
PUBLIC	??_C@_0BA@BNGCDKAC@perform_debrief@		; `string'
PUBLIC	??_C@_0BG@JEGIBEA@delay_task_assignment@	; `string'
PUBLIC	??_C@_0BH@KFAJDPKI@task_objective_preview@	; `string'
PUBLIC	??_C@_0BK@DJIBFJGN@counts_towards_player_log@	; `string'
PUBLIC	??_C@_0BC@EJCHKHJJ@wait_for_end_task@		; `string'
PUBLIC	??_C@_0BG@GIDFMNAL@player_reserve_factor@	; `string'
PUBLIC	??_C@_0BN@BIKJLLEJ@task_pass_percentage_partial@ ; `string'
PUBLIC	??_C@_0BN@IHNDFIOD@task_pass_percentage_success@ ; `string'
PUBLIC	??_C@_0BF@BPHOJLMP@task_completed_score@	; `string'
PUBLIC	??_C@_0BH@FJKBKNH@landing_type_fixedwing@	; `string'
PUBLIC	??_C@_0BO@LKIKKLFB@landing_type_fixedw_transport@ ; `string'
PUBLIC	??_C@_0BI@JAIACDLN@landing_type_helicopter@	; `string'
PUBLIC	??_C@_0BE@NIFAGE@landing_type_ground@		; `string'
PUBLIC	??_C@_0BE@JBDDNFBK@landing_type_people@		; `string'
PUBLIC	??_C@_0BB@FPDPBDJE@landing_type_sea@		; `string'
PUBLIC	??_C@_0N@OIGCLPCO@?$FLWAYPOINTS?$FN?6@		; `string'
PUBLIC	??_C@_0BK@IBOMPAFN@verbose_operational_state@	; `string'
PUBLIC	??_C@_0BO@BPGDDJNL@mobile_follow_waypoint_offset@ ; `string'
PUBLIC	??_C@_0BI@GACMBDBB@waypoint_action_message@	; `string'
PUBLIC	??_C@_0BJ@GLEIPLPL@waypoint_reached_message@	; `string'
PUBLIC	??_C@_0BO@OFCJNKJF@waypoint_reached_return_value@ ; `string'
PUBLIC	??_C@_0BB@MFKNECBC@planner_moveable@		; `string'
PUBLIC	??_C@_0BD@MICANFGD@objective_waypoint@		; `string'
PUBLIC	??_C@_0BF@DAGIKPNA@player_skip_waypoint@	; `string'
PUBLIC	??_C@_0BG@NJPOIMLE@check_waypoint_action@	; `string'
PUBLIC	??_C@_0P@MOAANCBG@guide_sub_type@		; `string'
PUBLIC	??_C@_0CG@IDAFLCKN@fw_minimum_previous_waypoint_di@ ; `string'
PUBLIC	??_C@_0BB@EINBFIKI@fw_action_radius@		; `string'
PUBLIC	??_C@_0BC@MNHABDKH@fw_reached_radius@		; `string'
PUBLIC	??_C@_0M@EHPMFCHE@fw_velocity@			; `string'
PUBLIC	??_C@_0BK@LBENMCD@fw_criteria_last_to_reach@	; `string'
PUBLIC	??_C@_0BL@DKBDBFHG@fw_criteria_transmit_recon@	; `string'
PUBLIC	??_C@_0BB@NHAILGCL@fw_position_type@		; `string'
PUBLIC	??_C@_0BB@KGHCIFOD@fw_movement_type@		; `string'
PUBLIC	??_C@_0CG@KDNLECPH@hc_minimum_previous_waypoint_di@ ; `string'
PUBLIC	??_C@_0BB@DLODNCCH@hc_action_radius@		; `string'
PUBLIC	??_C@_0BC@LAAELPJM@hc_reached_radius@		; `string'
PUBLIC	??_C@_0M@LAOCDGCD@hc_velocity@			; `string'
PUBLIC	??_C@_0BK@MCEJEBLL@hc_criteria_last_to_reach@	; `string'
PUBLIC	??_C@_0BL@MEAOFDJN@hc_criteria_transmit_recon@	; `string'
PUBLIC	??_C@_0BB@KEDKDMKE@hc_position_type@		; `string'
PUBLIC	??_C@_0BB@NFEAAPGM@hc_movement_type@		; `string'
PUBLIC	??_C@_0CG@ONPHKLJE@rv_minimum_previous_waypoint_di@ ; `string'
PUBLIC	??_C@_0BB@ICOAHHIL@rv_action_radius@		; `string'
PUBLIC	??_C@_0BC@GPNNFDPK@rv_reached_radius@		; `string'
PUBLIC	??_C@_0M@IJGMFLDH@rv_velocity@			; `string'
PUBLIC	??_C@_0BK@COFJIBIL@rv_criteria_last_to_reach@	; `string'
PUBLIC	??_C@_0BL@OCDLHDPB@rv_criteria_transmit_recon@	; `string'
PUBLIC	??_C@_0BB@BNDJJJAI@rv_position_type@		; `string'
PUBLIC	??_C@_0BB@GMEDKKMA@rv_movement_type@		; `string'
PUBLIC	??_C@_0CG@GKCHNJHF@sh_minimum_previous_waypoint_di@ ; `string'
PUBLIC	??_C@_0BB@MDODHEPN@sh_action_radius@		; `string'
PUBLIC	??_C@_0BC@NGPKIEPA@sh_reached_radius@		; `string'
PUBLIC	??_C@_0M@OOEJPIJF@sh_velocity@			; `string'
PUBLIC	??_C@_0BK@NGIDPPGD@sh_criteria_last_to_reach@	; `string'
PUBLIC	??_C@_0BL@EMBCMDMF@sh_criteria_transmit_recon@	; `string'
PUBLIC	??_C@_0BB@FMDKJKHO@sh_position_type@		; `string'
PUBLIC	??_C@_0BB@CNEAKJLG@sh_movement_type@		; `string'
PUBLIC	??_C@_0BC@IMGFEMAB@?$FLGUIDE?5CRITERIA?$FN?6@	; `string'
PUBLIC	??_C@_0L@GKOAHKMI@evade_fire@			; `string'
PUBLIC	??_C@_0BB@MIINBMP@follow_formation@		; `string'
PUBLIC	??_C@_0O@ODADLCJE@position_type@		; `string'
PUBLIC	??_C@_0BE@GPEOGHOC@terrain_follow_mode@		; `string'
PUBLIC	??_C@_0N@OEGNPOAB@Radius_valid@			; `string'
PUBLIC	??_C@_0N@OIEKJFFE@Radius_value@			; `string'
PUBLIC	??_C@_0O@OECMCAIJ@Heading_valid@		; `string'
PUBLIC	??_C@_0O@OIALELNM@Heading_value@		; `string'
PUBLIC	??_C@_0P@GOHOCMBA@Altitude_valid@		; `string'
PUBLIC	??_C@_0P@GCFJEHEF@Altitude_value@		; `string'
PUBLIC	??_C@_0BE@HBAFGJOD@Transmit_Data_valid@		; `string'
PUBLIC	??_C@_0BE@HNCCACLG@Transmit_Data_value@		; `string'
PUBLIC	??_C@_0BE@BKOIBMOJ@Last_To_Reach_valid@		; `string'
PUBLIC	??_C@_0BE@BGMPHHLM@Last_To_Reach_value@		; `string'
PUBLIC	??_C@_0BE@ENHEGHOJ@Weapon_Vector_valid@		; `string'
PUBLIC	??_C@_0BE@EBFDAMLM@Weapon_Vector_value@		; `string'
PUBLIC	??_C@_0BC@GIMAOECP@Navigation_Direct@		; `string'
PUBLIC	??_C@_03OMLJOFL@?0?$CFs@			; `string'
PUBLIC	??_C@_0BD@GOHADIKK@Navigation_Virtual@		; `string'
PUBLIC	??_C@_0BC@KOFNCMMP@Navigation_Routed@		; `string'
PUBLIC	??_C@_0BE@JODGBIEP@Navigation_Altitude@		; `string'
PUBLIC	??_C@_0P@CIJFCCND@Landing_Direct@		; `string'
PUBLIC	??_C@_06PPFLONGD@Landed@			; `string'
PUBLIC	??_C@_0BD@IFIHKDND@Attack_AA_Move_Six@		; `string'
PUBLIC	??_C@_0BG@CEIDADGB@Attack_AA_Move_Circle@	; `string'
PUBLIC	??_C@_0BJ@IDDMCDNB@Attack_AA_Fire_Intercept@	; `string'
PUBLIC	??_C@_0BD@OPMIKBDB@Attack_AG_Approach@		; `string'
PUBLIC	??_C@_0BF@BBBGLPOB@Attack_AG_Seek_Cover@	; `string'
PUBLIC	??_C@_0BH@KLFBGBHB@Attack_AG_Fly_To_Cover@	; `string'
PUBLIC	??_C@_0BF@OMIOMDLI@Attack_AG_Take_Cover@	; `string'
PUBLIC	??_C@_0BA@OADKGPHF@Attack_AG_Climb@		; `string'
PUBLIC	??_C@_0P@BGGHCJBJ@Attack_AG_Dive@		; `string'
PUBLIC	??_C@_0P@GLKONCKF@Attack_AG_Fire@		; `string'
PUBLIC	??_C@_0BH@KFINIPEB@Attack_AG_Fire_Virtual@	; `string'
PUBLIC	??_C@_0BE@GGEOGEAH@Attack_AG_Disengage@		; `string'
PUBLIC	??_C@_0BM@OAJEMKBJ@Attack_AG_Disengage_Virtual@	; `string'
PUBLIC	??_C@_0BB@OCOKBHCL@Attack_AG_Egress@		; `string'
PUBLIC	??_C@_0BF@OPFDLBPB@Attack_AG_Hasty_Fire@	; `string'
PUBLIC	??_C@_0BL@DHDDPJOC@Attack_AG_Hasty_Take_Cover@	; `string'
PUBLIC	??_C@_03LEIBKMN@?0?$CFd@			; `string'
PUBLIC	??_C@_03CAGFEJAO@?0?$CFg@			; `string'
PUBLIC	??_C@_07DOLECJID@?$FLAMMO?$FN?6@		; `string'
PUBLIC	??_C@_0GI@MJEEBEGA@Aircraft?5?2?5Vehicle?0min?5weapon?5c@ ; `string'
PUBLIC	??_C@_0JN@FJNLEFNG@weapon?0ammo?0weapon?0ammo?0weapon?0@ ; `string'
PUBLIC	??_C@_08BCFLBFEP@?$FLRADAR?$FN?6@		; `string'
PUBLIC	??_C@_0FA@NEPEELBH@Aircraft?0Radar?5Range?51?0Radar?5Ra@ ; `string'
PUBLIC	??_C@_0CF@JFLFJHDL@0?0Comanche?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0@ ; `string'
PUBLIC	??_C@_0CD@KIJNGCJE@1?0Apache?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?4@ ; `string'
PUBLIC	??_C@_0CH@LHBHJIMP@2?0Black?5Hawk?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@ ; `string'
PUBLIC	??_C@_0CC@FOBOEEHP@3?0Hokum?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@ ; `string'
PUBLIC	??_C@_0BN@IKIJOFML@4?0Havoc?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@ ; `string'
PUBLIC	??_C@_0BM@BOJEHICG@5?0Hind?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@ ; `string'
PUBLIC	??_C@_0BM@MDAGHBHJ@?$FLWEAPON?5TYPES?5CONFIG?5INFO?$FN?6@ ; `string'
PUBLIC	??_C@_0BG@OFIPCFPM@weapon?5config?5type?5nr@	; `string'
PUBLIC	??_C@_0N@ENDKFCNC@carrier?5name@		; `string'
PUBLIC	??_C@_0M@BDAONJEI@weapon?5name@			; `string'
PUBLIC	??_C@_09MOOPJLEO@weapon?5nr@			; `string'
PUBLIC	??_C@_06JACIFLFI@?$CFd?0?$CFs?0@		; `string'
PUBLIC	??_C@_06IJEBOOKN@?$CFd?0?$CFd?0@		; `string'
PUBLIC	??_C@_02NODKCLPH@0?6@				; `string'
PUBLIC	??_C@_0BE@MJKAALHL@?$FLEnd?5of?5GWUT?5file?$FN?6@ ; `string'
PUBLIC	??_C@_0N@NEEIEGPN@dumpgwut?4txt@		; `string'
PUBLIC	??_C@_0BC@KOCDPDLA@Dumping?5file?3?5?$CFs?6@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0CA@POJFLOKO@Error?5opening?5GWUT?5file?3?5?$FL?5?$CFs?5?$FN@ ; `string'
PUBLIC	??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@		; `string'
PUBLIC	??_C@_0CG@GNDAFGFP@GWUT?5file?5?$CFs?5has?5the?5wrong?5head@ ; `string'
PUBLIC	??_C@_0L@BNOJJLLD@?$FLVEHICLES?$FN@		; `string'
PUBLIC	??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@	; `string'
PUBLIC	??_C@_01IHBHIGKO@?0@				; `string'
PUBLIC	??_C@_09ELKCPFM@?$FLWEAPONS?$FN@		; `string'
PUBLIC	??_C@_06IPGPIAII@?$CFd?5?$CFd?6@		; `string'
PUBLIC	??_C@_0L@ENANJMPL@?$FLKEYSITES?$FN@		; `string'
PUBLIC	??_C@_08NKPMEDMA@?$FLGROUPS?$FN@		; `string'
PUBLIC	??_C@_07NDEGACLM@?$FLTASKS?$FN@			; `string'
PUBLIC	??_C@_0M@DKLOPEFJ@?$FLWAYPOINTS?$FN@		; `string'
PUBLIC	??_C@_0BB@FGOFBLEA@?$FLGUIDE?5CRITERIA?$FN@	; `string'
PUBLIC	??_C@_06DKILLBPJ@?$FLAMMO?$FN@			; `string'
PUBLIC	??_C@_07MCJPGEH@?$FLRADAR?$FN@			; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3c8efa35
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3f91df46a0000000
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@42652ee0
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__feof:PROC
EXTRN	__imp__fflush:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fputs:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	__imp__atof:PROC
EXTRN	__imp__atoi:PROC
EXTRN	_strstr:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__strtok:PROC
EXTRN	_acos:PROC
EXTRN	_cos:PROC
EXTRN	_exp:PROC
EXTRN	_log:PROC
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A:BYTE ; weapon_config_database
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?guide_database@@3PAUGUIDE_DATA@@A:BYTE		; guide_database
EXTRN	?keysite_database@@3PAUKEYSITE_DATA@@A:BYTE	; keysite_database
EXTRN	?task_database@@3PAUTASK_DATA@@A:BYTE		; task_database
EXTRN	?waypoint_database@@3PAUWAYPOINT_DATA@@A:BYTE	; waypoint_database
EXTRN	?radar_range_apache@@3PAMA:BYTE			; radar_range_apache
EXTRN	?radar_range_comanche@@3PAMA:BYTE		; radar_range_comanche
EXTRN	?radar_range_havoc@@3PAMA:BYTE			; radar_range_havoc
EXTRN	?radar_range_hokum@@3PAMA:BYTE			; radar_range_hokum
EXTRN	?radar_range_blackhawk@@3PAMA:BYTE		; radar_range_blackhawk
EXTRN	?radar_range_hind@@3PAMA:BYTE			; radar_range_hind
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3f91df46a0000000
CONST	SEGMENT
__real@3f91df46a0000000 DQ 03f91df46a0000000r	; 0.0174533
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3c8efa35
CONST	SEGMENT
__real@3c8efa35 DD 03c8efa35r			; 0.0174533
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_07MCJPGEH@?$FLRADAR?$FN@
CONST	SEGMENT
??_C@_07MCJPGEH@?$FLRADAR?$FN@ DB '[RADAR]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DKILLBPJ@?$FLAMMO?$FN@
CONST	SEGMENT
??_C@_06DKILLBPJ@?$FLAMMO?$FN@ DB '[AMMO]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FGOFBLEA@?$FLGUIDE?5CRITERIA?$FN@
CONST	SEGMENT
??_C@_0BB@FGOFBLEA@?$FLGUIDE?5CRITERIA?$FN@ DB '[GUIDE CRITERIA]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKLOPEFJ@?$FLWAYPOINTS?$FN@
CONST	SEGMENT
??_C@_0M@DKLOPEFJ@?$FLWAYPOINTS?$FN@ DB '[WAYPOINTS]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07NDEGACLM@?$FLTASKS?$FN@
CONST	SEGMENT
??_C@_07NDEGACLM@?$FLTASKS?$FN@ DB '[TASKS]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NKPMEDMA@?$FLGROUPS?$FN@
CONST	SEGMENT
??_C@_08NKPMEDMA@?$FLGROUPS?$FN@ DB '[GROUPS]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ENANJMPL@?$FLKEYSITES?$FN@
CONST	SEGMENT
??_C@_0L@ENANJMPL@?$FLKEYSITES?$FN@ DB '[KEYSITES]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IPGPIAII@?$CFd?5?$CFd?6@
CONST	SEGMENT
??_C@_06IPGPIAII@?$CFd?5?$CFd?6@ DB '%d %d', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ELKCPFM@?$FLWEAPONS?$FN@
CONST	SEGMENT
??_C@_09ELKCPFM@?$FLWEAPONS?$FN@ DB '[WEAPONS]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01IHBHIGKO@?0@
CONST	SEGMENT
??_C@_01IHBHIGKO@?0@ DB ',', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
CONST	SEGMENT
??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@ DB '[End of GWUT file]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BNOJJLLD@?$FLVEHICLES?$FN@
CONST	SEGMENT
??_C@_0L@BNOJJLLD@?$FLVEHICLES?$FN@ DB '[VEHICLES]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GNDAFGFP@GWUT?5file?5?$CFs?5has?5the?5wrong?5head@
CONST	SEGMENT
??_C@_0CG@GNDAFGFP@GWUT?5file?5?$CFs?5has?5the?5wrong?5head@ DB 'GWUT fil'
	DB	'e %s has the wrong header: %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
CONST	SEGMENT
??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@ DB '%[^', 0aH, ']', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@POJFLOKO@Error?5opening?5GWUT?5file?3?5?$FL?5?$CFs?5?$FN@
CONST	SEGMENT
??_C@_0CA@POJFLOKO@Error?5opening?5GWUT?5file?3?5?$FL?5?$CFs?5?$FN@ DB 'E'
	DB	'rror opening GWUT file: [ %s ]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOCDPDLA@Dumping?5file?3?5?$CFs?6@
CONST	SEGMENT
??_C@_0BC@KOCDPDLA@Dumping?5file?3?5?$CFs?6@ DB 'Dumping file: %s', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NEEIEGPN@dumpgwut?4txt@
CONST	SEGMENT
??_C@_0N@NEEIEGPN@dumpgwut?4txt@ DB 'dumpgwut.txt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJKAALHL@?$FLEnd?5of?5GWUT?5file?$FN?6@
CONST	SEGMENT
??_C@_0BE@MJKAALHL@?$FLEnd?5of?5GWUT?5file?$FN?6@ DB '[End of GWUT file]', 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02NODKCLPH@0?6@
CONST	SEGMENT
??_C@_02NODKCLPH@0?6@ DB '0', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IJEBOOKN@?$CFd?0?$CFd?0@
CONST	SEGMENT
??_C@_06IJEBOOKN@?$CFd?0?$CFd?0@ DB '%d,%d,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06JACIFLFI@?$CFd?0?$CFs?0@
CONST	SEGMENT
??_C@_06JACIFLFI@?$CFd?0?$CFs?0@ DB '%d,%s,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MOOPJLEO@weapon?5nr@
CONST	SEGMENT
??_C@_09MOOPJLEO@weapon?5nr@ DB 'weapon nr', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BDAONJEI@weapon?5name@
CONST	SEGMENT
??_C@_0M@BDAONJEI@weapon?5name@ DB 'weapon name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENDKFCNC@carrier?5name@
CONST	SEGMENT
??_C@_0N@ENDKFCNC@carrier?5name@ DB 'carrier name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OFIPCFPM@weapon?5config?5type?5nr@
CONST	SEGMENT
??_C@_0BG@OFIPCFPM@weapon?5config?5type?5nr@ DB 'weapon config type nr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@MDAGHBHJ@?$FLWEAPON?5TYPES?5CONFIG?5INFO?$FN?6@
CONST	SEGMENT
??_C@_0BM@MDAGHBHJ@?$FLWEAPON?5TYPES?5CONFIG?5INFO?$FN?6@ DB '[WEAPON TYP'
	DB	'ES CONFIG INFO]', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BOJEHICG@5?0Hind?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@
CONST	SEGMENT
??_C@_0BM@BOJEHICG@5?0Hind?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@ DB '5'
	DB	',Hind,%.0f,%.0f,%.0f,%.0f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IKIJOFML@4?0Havoc?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@
CONST	SEGMENT
??_C@_0BN@IKIJOFML@4?0Havoc?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@ DB '4'
	DB	',Havoc,%.0f,%.0f,%.0f,%.0f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@FOBOEEHP@3?0Hokum?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@
CONST	SEGMENT
??_C@_0CC@FOBOEEHP@3?0Hokum?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@ DB '3'
	DB	',Hokum,%.0f,%.0f,%.0f,%.0f,%.0f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LHBHJIMP@2?0Black?5Hawk?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@
CONST	SEGMENT
??_C@_0CH@LHBHJIMP@2?0Black?5Hawk?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@ DB '2'
	DB	',Black Hawk,%.0f,%.0f,%.0f,%.0f,%.0f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KIJNGCJE@1?0Apache?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?4@
CONST	SEGMENT
??_C@_0CD@KIJNGCJE@1?0Apache?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?4@ DB '1'
	DB	',Apache,%.0f,%.0f,%.0f,%.0f,%.0f', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JFLFJHDL@0?0Comanche?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0@
CONST	SEGMENT
??_C@_0CF@JFLFJHDL@0?0Comanche?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0@ DB '0'
	DB	',Comanche,%.0f,%.0f,%.0f,%.0f,%.0f', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@NEPEELBH@Aircraft?0Radar?5Range?51?0Radar?5Ra@
CONST	SEGMENT
??_C@_0FA@NEPEELBH@Aircraft?0Radar?5Range?51?0Radar?5Ra@ DB 'Aircraft,Rad'
	DB	'ar Range 1,Radar Range 2,Radar Range 3,Radar Range 4,Radar Ra'
	DB	'nge 5', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08BCFLBFEP@?$FLRADAR?$FN?6@
CONST	SEGMENT
??_C@_08BCFLBFEP@?$FLRADAR?$FN?6@ DB '[RADAR]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0JN@FJNLEFNG@weapon?0ammo?0weapon?0ammo?0weapon?0@
CONST	SEGMENT
??_C@_0JN@FJNLEFNG@weapon?0ammo?0weapon?0ammo?0weapon?0@ DB 'weapon,ammo,'
	DB	'weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,w'
	DB	'eapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,we'
	DB	'apon,ammo,weapon,ammo', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@MJEEBEGA@Aircraft?5?2?5Vehicle?0min?5weapon?5c@
CONST	SEGMENT
??_C@_0GI@MJEEBEGA@Aircraft?5?2?5Vehicle?0min?5weapon?5c@ DB 'Aircraft \ '
	DB	'Vehicle,min weapon config,max weapon config,weapon,ammo,weapo'
	DB	'n,ammo,weapon,ammo,weapon,ammo,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DOLECJID@?$FLAMMO?$FN?6@
CONST	SEGMENT
??_C@_07DOLECJID@?$FLAMMO?$FN?6@ DB '[AMMO]', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03CAGFEJAO@?0?$CFg@
CONST	SEGMENT
??_C@_03CAGFEJAO@?0?$CFg@ DB ',%g', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03LEIBKMN@?0?$CFd@
CONST	SEGMENT
??_C@_03LEIBKMN@?0?$CFd@ DB ',%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DHDDPJOC@Attack_AG_Hasty_Take_Cover@
CONST	SEGMENT
??_C@_0BL@DHDDPJOC@Attack_AG_Hasty_Take_Cover@ DB 'Attack_AG_Hasty_Take_C'
	DB	'over', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OPFDLBPB@Attack_AG_Hasty_Fire@
CONST	SEGMENT
??_C@_0BF@OPFDLBPB@Attack_AG_Hasty_Fire@ DB 'Attack_AG_Hasty_Fire', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OCOKBHCL@Attack_AG_Egress@
CONST	SEGMENT
??_C@_0BB@OCOKBHCL@Attack_AG_Egress@ DB 'Attack_AG_Egress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OAJEMKBJ@Attack_AG_Disengage_Virtual@
CONST	SEGMENT
??_C@_0BM@OAJEMKBJ@Attack_AG_Disengage_Virtual@ DB 'Attack_AG_Disengage_V'
	DB	'irtual', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GGEOGEAH@Attack_AG_Disengage@
CONST	SEGMENT
??_C@_0BE@GGEOGEAH@Attack_AG_Disengage@ DB 'Attack_AG_Disengage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KFINIPEB@Attack_AG_Fire_Virtual@
CONST	SEGMENT
??_C@_0BH@KFINIPEB@Attack_AG_Fire_Virtual@ DB 'Attack_AG_Fire_Virtual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GLKONCKF@Attack_AG_Fire@
CONST	SEGMENT
??_C@_0P@GLKONCKF@Attack_AG_Fire@ DB 'Attack_AG_Fire', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BGGHCJBJ@Attack_AG_Dive@
CONST	SEGMENT
??_C@_0P@BGGHCJBJ@Attack_AG_Dive@ DB 'Attack_AG_Dive', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OADKGPHF@Attack_AG_Climb@
CONST	SEGMENT
??_C@_0BA@OADKGPHF@Attack_AG_Climb@ DB 'Attack_AG_Climb', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OMIOMDLI@Attack_AG_Take_Cover@
CONST	SEGMENT
??_C@_0BF@OMIOMDLI@Attack_AG_Take_Cover@ DB 'Attack_AG_Take_Cover', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KLFBGBHB@Attack_AG_Fly_To_Cover@
CONST	SEGMENT
??_C@_0BH@KLFBGBHB@Attack_AG_Fly_To_Cover@ DB 'Attack_AG_Fly_To_Cover', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BBBGLPOB@Attack_AG_Seek_Cover@
CONST	SEGMENT
??_C@_0BF@BBBGLPOB@Attack_AG_Seek_Cover@ DB 'Attack_AG_Seek_Cover', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OPMIKBDB@Attack_AG_Approach@
CONST	SEGMENT
??_C@_0BD@OPMIKBDB@Attack_AG_Approach@ DB 'Attack_AG_Approach', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IDDMCDNB@Attack_AA_Fire_Intercept@
CONST	SEGMENT
??_C@_0BJ@IDDMCDNB@Attack_AA_Fire_Intercept@ DB 'Attack_AA_Fire_Intercept'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CEIDADGB@Attack_AA_Move_Circle@
CONST	SEGMENT
??_C@_0BG@CEIDADGB@Attack_AA_Move_Circle@ DB 'Attack_AA_Move_Circle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IFIHKDND@Attack_AA_Move_Six@
CONST	SEGMENT
??_C@_0BD@IFIHKDND@Attack_AA_Move_Six@ DB 'Attack_AA_Move_Six', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06PPFLONGD@Landed@
CONST	SEGMENT
??_C@_06PPFLONGD@Landed@ DB 'Landed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CIJFCCND@Landing_Direct@
CONST	SEGMENT
??_C@_0P@CIJFCCND@Landing_Direct@ DB 'Landing_Direct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JODGBIEP@Navigation_Altitude@
CONST	SEGMENT
??_C@_0BE@JODGBIEP@Navigation_Altitude@ DB 'Navigation_Altitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOFNCMMP@Navigation_Routed@
CONST	SEGMENT
??_C@_0BC@KOFNCMMP@Navigation_Routed@ DB 'Navigation_Routed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GOHADIKK@Navigation_Virtual@
CONST	SEGMENT
??_C@_0BD@GOHADIKK@Navigation_Virtual@ DB 'Navigation_Virtual', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OMLJOFL@?0?$CFs@
CONST	SEGMENT
??_C@_03OMLJOFL@?0?$CFs@ DB ',%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GIMAOECP@Navigation_Direct@
CONST	SEGMENT
??_C@_0BC@GIMAOECP@Navigation_Direct@ DB 'Navigation_Direct', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EBFDAMLM@Weapon_Vector_value@
CONST	SEGMENT
??_C@_0BE@EBFDAMLM@Weapon_Vector_value@ DB 'Weapon_Vector_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ENHEGHOJ@Weapon_Vector_valid@
CONST	SEGMENT
??_C@_0BE@ENHEGHOJ@Weapon_Vector_valid@ DB 'Weapon_Vector_valid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BGMPHHLM@Last_To_Reach_value@
CONST	SEGMENT
??_C@_0BE@BGMPHHLM@Last_To_Reach_value@ DB 'Last_To_Reach_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BKOIBMOJ@Last_To_Reach_valid@
CONST	SEGMENT
??_C@_0BE@BKOIBMOJ@Last_To_Reach_valid@ DB 'Last_To_Reach_valid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HNCCACLG@Transmit_Data_value@
CONST	SEGMENT
??_C@_0BE@HNCCACLG@Transmit_Data_value@ DB 'Transmit_Data_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HBAFGJOD@Transmit_Data_valid@
CONST	SEGMENT
??_C@_0BE@HBAFGJOD@Transmit_Data_valid@ DB 'Transmit_Data_valid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GCFJEHEF@Altitude_value@
CONST	SEGMENT
??_C@_0P@GCFJEHEF@Altitude_value@ DB 'Altitude_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GOHOCMBA@Altitude_valid@
CONST	SEGMENT
??_C@_0P@GOHOCMBA@Altitude_valid@ DB 'Altitude_valid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OIALELNM@Heading_value@
CONST	SEGMENT
??_C@_0O@OIALELNM@Heading_value@ DB 'Heading_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OECMCAIJ@Heading_valid@
CONST	SEGMENT
??_C@_0O@OECMCAIJ@Heading_valid@ DB 'Heading_valid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIEKJFFE@Radius_value@
CONST	SEGMENT
??_C@_0N@OIEKJFFE@Radius_value@ DB 'Radius_value', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OEGNPOAB@Radius_valid@
CONST	SEGMENT
??_C@_0N@OEGNPOAB@Radius_valid@ DB 'Radius_valid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GPEOGHOC@terrain_follow_mode@
CONST	SEGMENT
??_C@_0BE@GPEOGHOC@terrain_follow_mode@ DB 'terrain_follow_mode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ODADLCJE@position_type@
CONST	SEGMENT
??_C@_0O@ODADLCJE@position_type@ DB 'position_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MIINBMP@follow_formation@
CONST	SEGMENT
??_C@_0BB@MIINBMP@follow_formation@ DB 'follow_formation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKOAHKMI@evade_fire@
CONST	SEGMENT
??_C@_0L@GKOAHKMI@evade_fire@ DB 'evade_fire', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IMGFEMAB@?$FLGUIDE?5CRITERIA?$FN?6@
CONST	SEGMENT
??_C@_0BC@IMGFEMAB@?$FLGUIDE?5CRITERIA?$FN?6@ DB '[GUIDE CRITERIA]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CNEAKJLG@sh_movement_type@
CONST	SEGMENT
??_C@_0BB@CNEAKJLG@sh_movement_type@ DB 'sh_movement_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FMDKJKHO@sh_position_type@
CONST	SEGMENT
??_C@_0BB@FMDKJKHO@sh_position_type@ DB 'sh_position_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EMBCMDMF@sh_criteria_transmit_recon@
CONST	SEGMENT
??_C@_0BL@EMBCMDMF@sh_criteria_transmit_recon@ DB 'sh_criteria_transmit_r'
	DB	'econ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NGIDPPGD@sh_criteria_last_to_reach@
CONST	SEGMENT
??_C@_0BK@NGIDPPGD@sh_criteria_last_to_reach@ DB 'sh_criteria_last_to_rea'
	DB	'ch', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OOEJPIJF@sh_velocity@
CONST	SEGMENT
??_C@_0M@OOEJPIJF@sh_velocity@ DB 'sh_velocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NGPKIEPA@sh_reached_radius@
CONST	SEGMENT
??_C@_0BC@NGPKIEPA@sh_reached_radius@ DB 'sh_reached_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MDODHEPN@sh_action_radius@
CONST	SEGMENT
??_C@_0BB@MDODHEPN@sh_action_radius@ DB 'sh_action_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@GKCHNJHF@sh_minimum_previous_waypoint_di@
CONST	SEGMENT
??_C@_0CG@GKCHNJHF@sh_minimum_previous_waypoint_di@ DB 'sh_minimum_previo'
	DB	'us_waypoint_distance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMEDKKMA@rv_movement_type@
CONST	SEGMENT
??_C@_0BB@GMEDKKMA@rv_movement_type@ DB 'rv_movement_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BNDJJJAI@rv_position_type@
CONST	SEGMENT
??_C@_0BB@BNDJJJAI@rv_position_type@ DB 'rv_position_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@OCDLHDPB@rv_criteria_transmit_recon@
CONST	SEGMENT
??_C@_0BL@OCDLHDPB@rv_criteria_transmit_recon@ DB 'rv_criteria_transmit_r'
	DB	'econ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@COFJIBIL@rv_criteria_last_to_reach@
CONST	SEGMENT
??_C@_0BK@COFJIBIL@rv_criteria_last_to_reach@ DB 'rv_criteria_last_to_rea'
	DB	'ch', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IJGMFLDH@rv_velocity@
CONST	SEGMENT
??_C@_0M@IJGMFLDH@rv_velocity@ DB 'rv_velocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GPNNFDPK@rv_reached_radius@
CONST	SEGMENT
??_C@_0BC@GPNNFDPK@rv_reached_radius@ DB 'rv_reached_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@ICOAHHIL@rv_action_radius@
CONST	SEGMENT
??_C@_0BB@ICOAHHIL@rv_action_radius@ DB 'rv_action_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@ONPHKLJE@rv_minimum_previous_waypoint_di@
CONST	SEGMENT
??_C@_0CG@ONPHKLJE@rv_minimum_previous_waypoint_di@ DB 'rv_minimum_previo'
	DB	'us_waypoint_distance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NFEAAPGM@hc_movement_type@
CONST	SEGMENT
??_C@_0BB@NFEAAPGM@hc_movement_type@ DB 'hc_movement_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KEDKDMKE@hc_position_type@
CONST	SEGMENT
??_C@_0BB@KEDKDMKE@hc_position_type@ DB 'hc_position_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MEAOFDJN@hc_criteria_transmit_recon@
CONST	SEGMENT
??_C@_0BL@MEAOFDJN@hc_criteria_transmit_recon@ DB 'hc_criteria_transmit_r'
	DB	'econ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MCEJEBLL@hc_criteria_last_to_reach@
CONST	SEGMENT
??_C@_0BK@MCEJEBLL@hc_criteria_last_to_reach@ DB 'hc_criteria_last_to_rea'
	DB	'ch', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LAOCDGCD@hc_velocity@
CONST	SEGMENT
??_C@_0M@LAOCDGCD@hc_velocity@ DB 'hc_velocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LAAELPJM@hc_reached_radius@
CONST	SEGMENT
??_C@_0BC@LAAELPJM@hc_reached_radius@ DB 'hc_reached_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DLODNCCH@hc_action_radius@
CONST	SEGMENT
??_C@_0BB@DLODNCCH@hc_action_radius@ DB 'hc_action_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KDNLECPH@hc_minimum_previous_waypoint_di@
CONST	SEGMENT
??_C@_0CG@KDNLECPH@hc_minimum_previous_waypoint_di@ DB 'hc_minimum_previo'
	DB	'us_waypoint_distance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KGHCIFOD@fw_movement_type@
CONST	SEGMENT
??_C@_0BB@KGHCIFOD@fw_movement_type@ DB 'fw_movement_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NHAILGCL@fw_position_type@
CONST	SEGMENT
??_C@_0BB@NHAILGCL@fw_position_type@ DB 'fw_position_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DKBDBFHG@fw_criteria_transmit_recon@
CONST	SEGMENT
??_C@_0BL@DKBDBFHG@fw_criteria_transmit_recon@ DB 'fw_criteria_transmit_r'
	DB	'econ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LBENMCD@fw_criteria_last_to_reach@
CONST	SEGMENT
??_C@_0BK@LBENMCD@fw_criteria_last_to_reach@ DB 'fw_criteria_last_to_reac'
	DB	'h', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EHPMFCHE@fw_velocity@
CONST	SEGMENT
??_C@_0M@EHPMFCHE@fw_velocity@ DB 'fw_velocity', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNHABDKH@fw_reached_radius@
CONST	SEGMENT
??_C@_0BC@MNHABDKH@fw_reached_radius@ DB 'fw_reached_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EINBFIKI@fw_action_radius@
CONST	SEGMENT
??_C@_0BB@EINBFIKI@fw_action_radius@ DB 'fw_action_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@IDAFLCKN@fw_minimum_previous_waypoint_di@
CONST	SEGMENT
??_C@_0CG@IDAFLCKN@fw_minimum_previous_waypoint_di@ DB 'fw_minimum_previo'
	DB	'us_waypoint_distance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MOAANCBG@guide_sub_type@
CONST	SEGMENT
??_C@_0P@MOAANCBG@guide_sub_type@ DB 'guide_sub_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NJPOIMLE@check_waypoint_action@
CONST	SEGMENT
??_C@_0BG@NJPOIMLE@check_waypoint_action@ DB 'check_waypoint_action', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DAGIKPNA@player_skip_waypoint@
CONST	SEGMENT
??_C@_0BF@DAGIKPNA@player_skip_waypoint@ DB 'player_skip_waypoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MICANFGD@objective_waypoint@
CONST	SEGMENT
??_C@_0BD@MICANFGD@objective_waypoint@ DB 'objective_waypoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MFKNECBC@planner_moveable@
CONST	SEGMENT
??_C@_0BB@MFKNECBC@planner_moveable@ DB 'planner_moveable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OFCJNKJF@waypoint_reached_return_value@
CONST	SEGMENT
??_C@_0BO@OFCJNKJF@waypoint_reached_return_value@ DB 'waypoint_reached_re'
	DB	'turn_value', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GLEIPLPL@waypoint_reached_message@
CONST	SEGMENT
??_C@_0BJ@GLEIPLPL@waypoint_reached_message@ DB 'waypoint_reached_message'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GACMBDBB@waypoint_action_message@
CONST	SEGMENT
??_C@_0BI@GACMBDBB@waypoint_action_message@ DB 'waypoint_action_message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BPGDDJNL@mobile_follow_waypoint_offset@
CONST	SEGMENT
??_C@_0BO@BPGDDJNL@mobile_follow_waypoint_offset@ DB 'mobile_follow_waypo'
	DB	'int_offset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IBOMPAFN@verbose_operational_state@
CONST	SEGMENT
??_C@_0BK@IBOMPAFN@verbose_operational_state@ DB 'verbose_operational_sta'
	DB	'te', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OIGCLPCO@?$FLWAYPOINTS?$FN?6@
CONST	SEGMENT
??_C@_0N@OIGCLPCO@?$FLWAYPOINTS?$FN?6@ DB '[WAYPOINTS]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FPDPBDJE@landing_type_sea@
CONST	SEGMENT
??_C@_0BB@FPDPBDJE@landing_type_sea@ DB 'landing_type_sea', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JBDDNFBK@landing_type_people@
CONST	SEGMENT
??_C@_0BE@JBDDNFBK@landing_type_people@ DB 'landing_type_people', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIFAGE@landing_type_ground@
CONST	SEGMENT
??_C@_0BE@NIFAGE@landing_type_ground@ DB 'landing_type_ground', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JAIACDLN@landing_type_helicopter@
CONST	SEGMENT
??_C@_0BI@JAIACDLN@landing_type_helicopter@ DB 'landing_type_helicopter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@LKIKKLFB@landing_type_fixedw_transport@
CONST	SEGMENT
??_C@_0BO@LKIKKLFB@landing_type_fixedw_transport@ DB 'landing_type_fixedw'
	DB	'_transport', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FJKBKNH@landing_type_fixedwing@
CONST	SEGMENT
??_C@_0BH@FJKBKNH@landing_type_fixedwing@ DB 'landing_type_fixedwing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BPHOJLMP@task_completed_score@
CONST	SEGMENT
??_C@_0BF@BPHOJLMP@task_completed_score@ DB 'task_completed_score', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@IHNDFIOD@task_pass_percentage_success@
CONST	SEGMENT
??_C@_0BN@IHNDFIOD@task_pass_percentage_success@ DB 'task_pass_percentage'
	DB	'_success', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@BIKJLLEJ@task_pass_percentage_partial@
CONST	SEGMENT
??_C@_0BN@BIKJLLEJ@task_pass_percentage_partial@ DB 'task_pass_percentage'
	DB	'_partial', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GIDFMNAL@player_reserve_factor@
CONST	SEGMENT
??_C@_0BG@GIDFMNAL@player_reserve_factor@ DB 'player_reserve_factor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJCHKHJJ@wait_for_end_task@
CONST	SEGMENT
??_C@_0BC@EJCHKHJJ@wait_for_end_task@ DB 'wait_for_end_task', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DJIBFJGN@counts_towards_player_log@
CONST	SEGMENT
??_C@_0BK@DJIBFJGN@counts_towards_player_log@ DB 'counts_towards_player_l'
	DB	'og', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KFAJDPKI@task_objective_preview@
CONST	SEGMENT
??_C@_0BH@KFAJDPKI@task_objective_preview@ DB 'task_objective_preview', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JEGIBEA@delay_task_assignment@
CONST	SEGMENT
??_C@_0BG@JEGIBEA@delay_task_assignment@ DB 'delay_task_assignment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BNGCDKAC@perform_debrief@
CONST	SEGMENT
??_C@_0BA@BNGCDKAC@perform_debrief@ DB 'perform_debrief', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NILPEGCL@task_route_search@
CONST	SEGMENT
??_C@_0BC@NILPEGCL@task_route_search@ DB 'task_route_search', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PPGPJFNA@assess_landing@
CONST	SEGMENT
??_C@_0P@PPGPJFNA@assess_landing@ DB 'assess_landing', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CFEDIIIK@keysite_air_force_capacity@
CONST	SEGMENT
??_C@_0BL@CFEDIIIK@keysite_air_force_capacity@ DB 'keysite_air_force_capa'
	DB	'city', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JLKCCAEP@visible_task@
CONST	SEGMENT
??_C@_0N@JLKCCAEP@visible_task@ DB 'visible_task', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFCBFGIE@persistent_task@
CONST	SEGMENT
??_C@_0BA@PFCBFGIE@persistent_task@ DB 'persistent_task', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NKMFGGLB@solo_task@
CONST	SEGMENT
??_C@_09NKMFGGLB@solo_task@ DB 'solo_task', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PDLNGDDD@primary_task@
CONST	SEGMENT
??_C@_0N@PDLNGDDD@primary_task@ DB 'primary_task', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GELBBEHP@add_start_waypoint@
CONST	SEGMENT
??_C@_0BD@GELBBEHP@add_start_waypoint@ DB 'add_start_waypoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JKFOCKDD@escort_required_threshold@
CONST	SEGMENT
??_C@_0BK@JKFOCKDD@escort_required_threshold@ DB 'escort_required_thresho'
	DB	'ld', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMFLJCAH@engage_enemy@
CONST	SEGMENT
??_C@_0N@NMFLJCAH@engage_enemy@ DB 'engage_enemy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBJCPEJB@rules_of_engagement@
CONST	SEGMENT
??_C@_0BE@GBJCPEJB@rules_of_engagement@ DB 'rules_of_engagement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BDNALNGL@minimum_member_count@
CONST	SEGMENT
??_C@_0BF@BDNALNGL@minimum_member_count@ DB 'minimum_member_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PINIPHCI@task_objective_info@
CONST	SEGMENT
??_C@_0BE@PINIPHCI@task_objective_info@ DB 'task_objective_info', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KHGACEBL@task_default_target_type@
CONST	SEGMENT
??_C@_0BJ@KHGACEBL@task_default_target_type@ DB 'task_default_target_type'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NCCIFNOO@task_default_target_source@
CONST	SEGMENT
??_C@_0BL@NCCIFNOO@task_default_target_source@ DB 'task_default_target_so'
	DB	'urce', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MIANEGBE@task_default_target_class@
CONST	SEGMENT
??_C@_0BK@MIANEGBE@task_default_target_class@ DB 'task_default_target_cla'
	DB	'ss', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOCHPEJA@difficulty_rating@
CONST	SEGMENT
??_C@_0BC@KOCHPEJA@difficulty_rating@ DB 'difficulty_rating', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PHLPMOJE@task_priority@
CONST	SEGMENT
??_C@_0O@PHLPMOJE@task_priority@ DB 'task_priority', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LOLCGDBM@task_category@
CONST	SEGMENT
??_C@_0O@LOLCGDBM@task_category@ DB 'task_category', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DIOLFBCP@?$FLTASKS?$FN?6@
CONST	SEGMENT
??_C@_08DIOLFBCP@?$FLTASKS?$FN?6@ DB '[TASKS]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NECBKLKJ@?$CIpatrol?$CJ@
CONST	SEGMENT
??_C@_08NECBKLKJ@?$CIpatrol?$CJ@ DB '(patrol)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OPIBMAFN@?$CIgroup?$CJ@
CONST	SEGMENT
??_C@_07OPIBMAFN@?$CIgroup?$CJ@ DB '(group)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELALIEHK@?$CFs?5?$CFs?0@
CONST	SEGMENT
??_C@_06ELALIEHK@?$CFs?5?$CFs?0@ DB '%s %s,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JNCEGBEK@?$CIstatic?$CJ@
CONST	SEGMENT
??_C@_08JNCEGBEK@?$CIstatic?$CJ@ DB '(static)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08OOLPMJMC@Infantry@
CONST	SEGMENT
??_C@_08OOLPMJMC@Infantry@ DB 'Infantry', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CBIEFNJM@ai_troop_space@
CONST	SEGMENT
??_C@_0P@CBIEFNJM@ai_troop_space@ DB 'ai_troop_space', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCADHAOC@ai_cargo_space@
CONST	SEGMENT
??_C@_0P@KCADHAOC@ai_cargo_space@ DB 'ai_cargo_space', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HHIFKNOH@ai_movement_stealth@
CONST	SEGMENT
??_C@_0BE@HHIFKNOH@ai_movement_stealth@ DB 'ai_movement_stealth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PILNPBAP@ai_movement_speed@
CONST	SEGMENT
??_C@_0BC@PILNPBAP@ai_movement_speed@ DB 'ai_movement_speed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MHOPBBGP@ai_ground_attack_strength@
CONST	SEGMENT
??_C@_0BK@MHOPBBGP@ai_ground_attack_strength@ DB 'ai_ground_attack_streng'
	DB	'th', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FCHAANCE@ai_air_attack_strength@
CONST	SEGMENT
??_C@_0BH@FCHAANCE@ai_air_attack_strength@ DB 'ai_air_attack_strength', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EMGGLJKG@resupply_source@
CONST	SEGMENT
??_C@_0BA@EMGGLJKG@resupply_source@ DB 'resupply_source', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KDACILON@minimum_idle_count@
CONST	SEGMENT
??_C@_0BD@KDACILON@minimum_idle_count@ DB 'minimum_idle_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JFFLMA@maximum_member_count@
CONST	SEGMENT
??_C@_0BF@JFFLMA@maximum_member_count@ DB 'maximum_member_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EAMCIPPF@platoon_id_type@
CONST	SEGMENT
??_C@_0BA@EAMCIPPF@platoon_id_type@ DB 'platoon_id_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MJJEHKFI@amalgamate@
CONST	SEGMENT
??_C@_0L@MJJEHKFI@amalgamate@ DB 'amalgamate', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OKHKAOBE@default_engage_enemy@
CONST	SEGMENT
??_C@_0BF@OKHKAOBE@default_engage_enemy@ DB 'default_engage_enemy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KHAFLDIA@local_only_group@
CONST	SEGMENT
??_C@_0BB@KHAFLDIA@local_only_group@ DB 'local_only_group', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLPFKFCE@frontline_flag@
CONST	SEGMENT
??_C@_0P@DLPFKFCE@frontline_flag@ DB 'frontline_flag', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JDKIKICA@rearming_time@
CONST	SEGMENT
??_C@_0O@JDKIKICA@rearming_time@ DB 'rearming_time', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GEDHBNEF@maximum_groups_per_division@
CONST	SEGMENT
??_C@_0BM@GEDHBNEF@maximum_groups_per_division@ DB 'maximum_groups_per_di'
	DB	'vision', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GPNCCHHF@default_group_division@
CONST	SEGMENT
??_C@_0BH@GPNCCHHF@default_group_division@ DB 'default_group_division', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COFDFHKL@default_group_formation@
CONST	SEGMENT
??_C@_0BI@COFDFHKL@default_group_formation@ DB 'default_group_formation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JDKOPMF@default_red_force_sub_type@
CONST	SEGMENT
??_C@_0BL@JDKOPMF@default_red_force_sub_type@ DB 'default_red_force_sub_t'
	DB	'ype', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KLLIJLIO@default_blue_force_sub_type@
CONST	SEGMENT
??_C@_0BM@KLLIJLIO@default_blue_force_sub_type@ DB 'default_blue_force_su'
	DB	'b_type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OBOBIGBK@default_entity_type@
CONST	SEGMENT
??_C@_0BE@OBOBIGBK@default_entity_type@ DB 'default_entity_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OLMMGMAM@default_landing_type@
CONST	SEGMENT
??_C@_0BF@OLMMGMAM@default_landing_type@ DB 'default_landing_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCHJIBFM@movement_type@
CONST	SEGMENT
??_C@_0O@JCHJIBFM@movement_type@ DB 'movement_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GBJNKDPI@group_list_type@
CONST	SEGMENT
??_C@_0BA@GBJNKDPI@group_list_type@ DB 'group_list_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FLDLBCPM@registry_list_type@
CONST	SEGMENT
??_C@_0BD@FLDLBCPM@registry_list_type@ DB 'registry_list_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BCLPCKM@group_category@
CONST	SEGMENT
??_C@_0P@BCLPCKM@group_category@ DB 'group_category', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GBFBNGHJ@?$FLGROUPS?$FN?6@
CONST	SEGMENT
??_C@_09GBFBNGHJ@?$FLGROUPS?$FN?6@ DB '[GROUPS]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JNFEJGLN@campaign_objective@
CONST	SEGMENT
??_C@_0BD@JNFEJGLN@campaign_objective@ DB 'campaign_objective', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CJMKLCMJ@troop_insertion_target@
CONST	SEGMENT
??_C@_0BH@CJMKLCMJ@troop_insertion_target@ DB 'troop_insertion_target', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FOKMDMIB@ship_strike_target@
CONST	SEGMENT
??_C@_0BD@FOKMDMIB@ship_strike_target@ DB 'ship_strike_target', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PGGFEFGM@ground_strike_target@
CONST	SEGMENT
??_C@_0BF@PGGFEFGM@ground_strike_target@ DB 'ground_strike_target', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAIMJONJ@recon_target@
CONST	SEGMENT
??_C@_0N@JAIMJONJ@recon_target@ DB 'recon_target', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBLJAGPI@oca_target@
CONST	SEGMENT
??_C@_0L@FBLJAGPI@oca_target@ DB 'oca_target', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NNOEGAMK@repairable@
CONST	SEGMENT
??_C@_0L@NNOEGAMK@repairable@ DB 'repairable', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIPJJKGJ@requires_barcap@
CONST	SEGMENT
??_C@_0BA@JIPJJKGJ@requires_barcap@ DB 'requires_barcap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KGJMNGM@requires_cap@
CONST	SEGMENT
??_C@_0N@KGJMNGM@requires_cap@ DB 'requires_cap', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JONLMBPK@reserve_task_count@
CONST	SEGMENT
??_C@_0BD@JONLMBPK@reserve_task_count@ DB 'reserve_task_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BHEOLLGL@assign_task_count@
CONST	SEGMENT
??_C@_0BC@BHEOLLGL@assign_task_count@ DB 'assign_task_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@COKIPKMB@report_fuel_level@
CONST	SEGMENT
??_C@_0BC@COKIPKMB@report_fuel_level@ DB 'report_fuel_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GLNILKF@report_ammo_level@
CONST	SEGMENT
??_C@_0BC@GLNILKF@report_ammo_level@ DB 'report_ammo_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFMJJBFC@air_force_capacity@
CONST	SEGMENT
??_C@_0BD@EFMJJBFC@air_force_capacity@ DB 'air_force_capacity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IMNGHFEI@hidden_by_fog_of_war@
CONST	SEGMENT
??_C@_0BF@IMNGHFEI@hidden_by_fog_of_war@ DB 'hidden_by_fog_of_war', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DCEABLMI@align_with_terrain@
CONST	SEGMENT
??_C@_0BD@DCEABLMI@align_with_terrain@ DB 'align_with_terrain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LKBBPNNG@sector_side_max_value@
CONST	SEGMENT
??_C@_0BG@LKBBPNNG@sector_side_max_value@ DB 'sector_side_max_value', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IDGCIJHM@recon_distance@
CONST	SEGMENT
??_C@_0P@IDGCIJHM@recon_distance@ DB 'recon_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HMOICOIG@air_coverage_radius@
CONST	SEGMENT
??_C@_0BE@HMOICOIG@air_coverage_radius@ DB 'air_coverage_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ILHHLDFC@importance_radius@
CONST	SEGMENT
??_C@_0BC@ILHHLDFC@importance_radius@ DB 'importance_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NBOKJPKH@minimum_efficiency@
CONST	SEGMENT
??_C@_0BD@NBOKJPKH@minimum_efficiency@ DB 'minimum_efficiency', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KEGEKCCP@importance@
CONST	SEGMENT
??_C@_0L@KEGEKCCP@importance@ DB 'importance', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FMIIBAMJ@fuel_supply_level@
CONST	SEGMENT
??_C@_0BC@FMIIBAMJ@fuel_supply_level@ DB 'fuel_supply_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@COIJDJHI@ammo_supply_level@
CONST	SEGMENT
??_C@_0BC@COIJDJHI@ammo_supply_level@ DB 'ammo_supply_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NAMNMOIC@?$FLKEYSITES?$FN?6@
CONST	SEGMENT
??_C@_0M@NAMNMOIC@?$FLKEYSITES?$FN?6@ DB '[KEYSITES]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KLAAKNAP@spiral_flightpath@
CONST	SEGMENT
??_C@_0BC@KLAAKNAP@spiral_flightpath@ DB 'spiral_flightpath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MMJCOPID@drag_factor@
CONST	SEGMENT
??_C@_0M@MMJCOPID@drag_factor@ DB 'drag_factor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MEHCDDGB@max_seeker_limit@
CONST	SEGMENT
??_C@_0BB@MEHCDDGB@max_seeker_limit@ DB 'max_seeker_limit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BJIJPPLG@max_launch_angle_error@
CONST	SEGMENT
??_C@_0BH@BJIJPPLG@max_launch_angle_error@ DB 'max_launch_angle_error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KJEAPNOM@reload_time@
CONST	SEGMENT
??_C@_0M@KJEAPNOM@reload_time@ DB 'reload_time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EONMFIGF@rate_of_fire@
CONST	SEGMENT
??_C@_0N@EONMFIGF@rate_of_fire@ DB 'rate_of_fire', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IMCJNFCO@burst_duration@
CONST	SEGMENT
??_C@_0P@IMCJNFCO@burst_duration@ DB 'burst_duration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DFFMOLKF@inhibit_time@
CONST	SEGMENT
??_C@_0N@DFFMOLKF@inhibit_time@ DB 'inhibit_time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GOJCGEML@cruise_time_max_error@
CONST	SEGMENT
??_C@_0BG@GOJCGEML@cruise_time_max_error@ DB 'cruise_time_max_error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IJHIGDHN@cruise_time@
CONST	SEGMENT
??_C@_0M@IJHIGDHN@cruise_time@ DB 'cruise_time', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KJIOOHDO@burn_time@
CONST	SEGMENT
??_C@_09KJIOOHDO@burn_time@ DB 'burn_time', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EGMAGNBE@muzzle_velocity_max_error@
CONST	SEGMENT
??_C@_0BK@EGMAGNBE@muzzle_velocity_max_error@ DB 'muzzle_velocity_max_err'
	DB	'or', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBBMJCKA@muzzle_velocity@
CONST	SEGMENT
??_C@_0BA@HBBMJCKA@muzzle_velocity@ DB 'muzzle_velocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HFMCPOCL@max_range_error_ratio@
CONST	SEGMENT
??_C@_0BG@HFMCPOCL@max_range_error_ratio@ DB 'max_range_error_ratio', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GELOJJBB@max_range_loal@
CONST	SEGMENT
??_C@_0P@GELOJJBB@max_range_loal@ DB 'max_range_loal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EDAFPOCA@min_range_loal@
CONST	SEGMENT
??_C@_0P@EDAFPOCA@min_range_loal@ DB 'min_range_loal', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MJOCNFFF@effective_range@
CONST	SEGMENT
??_C@_0BA@MJOCNFFF@effective_range@ DB 'effective_range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09LFAPKOJF@max_range@
CONST	SEGMENT
??_C@_09LFAPKOJF@max_range@ DB 'max_range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09LEADDECB@min_range@
CONST	SEGMENT
??_C@_09LEADDECB@min_range@ DB 'min_range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CMCBKMCB@weight@
CONST	SEGMENT
??_C@_06CMCBKMCB@weight@ DB 'weight', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JPIDGIGC@weapon_class_debris@
CONST	SEGMENT
??_C@_0BE@JPIDGIGC@weapon_class_debris@ DB 'weapon_class_debris', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKLOADK@weapon_class_cargo@
CONST	SEGMENT
??_C@_0BD@BKLOADK@weapon_class_cargo@ DB 'weapon_class_cargo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDAAKCNH@weapon_class_decoy@
CONST	SEGMENT
??_C@_0BD@BDAAKCNH@weapon_class_decoy@ DB 'weapon_class_decoy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@EOJKCMOP@weapon_class_surface_to_surface@
CONST	SEGMENT
??_C@_0CA@EOJKCMOP@weapon_class_surface_to_surface@ DB 'weapon_class_surf'
	DB	'ace_to_surface', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GGOBIAKP@weapon_class_surface_to_air@
CONST	SEGMENT
??_C@_0BM@GGOBIAKP@weapon_class_surface_to_air@ DB 'weapon_class_surface_'
	DB	'to_air', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CCIDHLLB@weapon_class_air_to_surface@
CONST	SEGMENT
??_C@_0BM@CCIDHLLB@weapon_class_air_to_surface@ DB 'weapon_class_air_to_s'
	DB	'urface', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BDOGIFDO@weapon_class_air_to_air@
CONST	SEGMENT
??_C@_0BI@BDOGIFDO@weapon_class_air_to_air@ DB 'weapon_class_air_to_air', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KGIEMPFM@hellfire_flight_profile@
CONST	SEGMENT
??_C@_0BI@KGIEMPFM@hellfire_flight_profile@ DB 'hellfire_flight_profile', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KOPLBPAJ@boresight_weapon@
CONST	SEGMENT
??_C@_0BB@KOPLBPAJ@boresight_weapon@ DB 'boresight_weapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIAOCNLL@viewable_weapon@
CONST	SEGMENT
??_C@_0BA@IIAOCNLL@viewable_weapon@ DB 'viewable_weapon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JGEFAOLG@in_flight_collision_check@
CONST	SEGMENT
??_C@_0BK@JGEFAOLG@in_flight_collision_check@ DB 'in_flight_collision_che'
	DB	'ck', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PAFLPEOM@survive_ground_impact@
CONST	SEGMENT
??_C@_0BG@PAFLPEOM@survive_ground_impact@ DB 'survive_ground_impact', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JIAABPMB@ignore_gravity@
CONST	SEGMENT
??_C@_0P@JIAABPMB@ignore_gravity@ DB 'ignore_gravity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@BGMLJGNH@acquire_parent_forward_velocity@
CONST	SEGMENT
??_C@_0CA@BGMLJGNH@acquire_parent_forward_velocity@ DB 'acquire_parent_fo'
	DB	'rward_velocity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GGHOFCFK@smoke_trail_type@
CONST	SEGMENT
??_C@_0BB@GGHOFCFK@smoke_trail_type@ DB 'smoke_trail_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JHACPNNJ@hard_damage_capability@
CONST	SEGMENT
??_C@_0BH@JHACPNNJ@hard_damage_capability@ DB 'hard_damage_capability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCEFMAHM@soft_damage_capability@
CONST	SEGMENT
??_C@_0BH@JCEFMAHM@soft_damage_capability@ DB 'soft_damage_capability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HOOAENGL@gun_shake@
CONST	SEGMENT
??_C@_09HOOAENGL@gun_shake@ DB 'gun_shake', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MFIFEALF@report_ammo_low_count@
CONST	SEGMENT
??_C@_0BG@MFIFEALF@report_ammo_low_count@ DB 'report_ammo_low_count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DOAPKEMB@warhead_type@
CONST	SEGMENT
??_C@_0N@DOAPKEMB@warhead_type@ DB 'warhead_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PNKIBKJK@decoy_type@
CONST	SEGMENT
??_C@_0L@PNKIBKJK@decoy_type@ DB 'decoy_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OICLCNBO@aiming_type@
CONST	SEGMENT
??_C@_0M@OICLCNBO@aiming_type@ DB 'aiming_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LDNBMKIO@guidance_type@
CONST	SEGMENT
??_C@_0O@LDNBMKIO@guidance_type@ DB 'guidance_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JIDGEPHK@?$FLWEAPONS?$FN?6@
CONST	SEGMENT
??_C@_0L@JIDGEPHK@?$FLWEAPONS?$FN?6@ DB '[WEAPONS]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KAFEPAPG@?5?0?5?0?5?0?5?0@
CONST	SEGMENT
??_C@_08KAFEPAPG@?5?0?5?0?5?0?5?0@ DB ' , , , ,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EMKOFBJB@?$CFs?5Open?0@
CONST	SEGMENT
??_C@_08EMKOFBJB@?$CFs?5Open?0@ DB '%s Open,', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OMHFOILL@?$CFs?5Covered?0@
CONST	SEGMENT
??_C@_0M@OMHFOILL@?$CFs?5Covered?0@ DB '%s Covered,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OANDAKGN@?$CFs?5Kneeling?5CIS?0@
CONST	SEGMENT
??_C@_0BB@OANDAKGN@?$CFs?5Kneeling?5CIS?0@ DB '%s Kneeling CIS,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IJABEAE@?$CFs?5Standing?5CIS?0@
CONST	SEGMENT
??_C@_0BB@IJABEAE@?$CFs?5Standing?5CIS?0@ DB '%s Standing CIS,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PBLBJGGA@?$CFs?5Unarmed?5CIS?0@
CONST	SEGMENT
??_C@_0BA@PBLBJGGA@?$CFs?5Unarmed?5CIS?0@ DB '%s Unarmed CIS,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PIFPFEDF@?$CFs?5Kneeling?5US?0@
CONST	SEGMENT
??_C@_0BA@PIFPFEDF@?$CFs?5Kneeling?5US?0@ DB '%s Kneeling US,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DJFAOHC@?$CFs?5Standing?5US?0@
CONST	SEGMENT
??_C@_0BA@DJFAOHC@?$CFs?5Standing?5US?0@ DB '%s Standing US,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLMIAFOO@?$CFs?5Unarmed?5US?0@
CONST	SEGMENT
??_C@_0P@JLMIAFOO@?$CFs?5Unarmed?5US?0@ DB '%s Unarmed US,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LIMIOFIN@warhead_effective_class@
CONST	SEGMENT
??_C@_0BI@LIMIOFIN@warhead_effective_class@ DB 'warhead_effective_class', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IPDJNJFJ@armour_rear@
CONST	SEGMENT
??_C@_0M@IPDJNJFJ@armour_rear@ DB 'armour_rear', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PLMHAJCM@armour_side@
CONST	SEGMENT
??_C@_0M@PLMHAJCM@armour_side@ DB 'armour_side', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGAPEKED@armour_front@
CONST	SEGMENT
??_C@_0N@OGAPEKED@armour_front@ DB 'armour_front', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KDJGGNPD@potential_surface_to_surface_th@
CONST	SEGMENT
??_C@_0CE@KDJGGNPD@potential_surface_to_surface_th@ DB 'potential_surface'
	DB	'_to_surface_threat', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FPEGBEK@potential_surface_to_air_threat@
CONST	SEGMENT
??_C@_0CA@FPEGBEK@potential_surface_to_air_threat@ DB 'potential_surface_'
	DB	'to_air_threat', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IIEJPLCJ@air_scan_ceiling@
CONST	SEGMENT
??_C@_0BB@IIEJPLCJ@air_scan_ceiling@ DB 'air_scan_ceiling', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NMHJCNEO@air_scan_floor@
CONST	SEGMENT
??_C@_0P@NMHJCNEO@air_scan_floor@ DB 'air_scan_floor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GCPDPIAG@max_acceleration@
CONST	SEGMENT
??_C@_0BB@GCPDPIAG@max_acceleration@ DB 'max_acceleration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EIBFPEPD@axle_length@
CONST	SEGMENT
??_C@_0M@EIBFPEPD@axle_length@ DB 'axle_length', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PFMMOFND@carries_smoke_grenades@
CONST	SEGMENT
??_C@_0BH@PFMMOFND@carries_smoke_grenades@ DB 'carries_smoke_grenades', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NDGIMNEF@target_type@
CONST	SEGMENT
??_C@_0M@NDGIMNEF@target_type@ DB 'target_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KIJKODCH@?$FLVEHICLES?$FN?6@
CONST	SEGMENT
??_C@_0M@KIJKODCH@?$FLVEHICLES?$FN?6@ DB '[VEHICLES]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PMGGPEJJ@?$CFd?6@
CONST	SEGMENT
??_C@_03PMGGPEJJ@?$CFd?6@ DB '%d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DNPOMJOE@?$CFg?0@
CONST	SEGMENT
??_C@_03DNPOMJOE@?$CFg?0@ DB '%g,', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IDGCIBNB@?5?0?5?0?5?0?5?0?5?0?5?0?5?0@
CONST	SEGMENT
??_C@_0P@IDGCIBNB@?5?0?5?0?5?0?5?0?5?0?5?0?5?0@ DB ' , , , , , , ,', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DPLIHHLN@?$CFd?0@
CONST	SEGMENT
??_C@_03DPLIHHLN@?$CFd?0@ DB '%d,', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OFAPEBGM@?$CFs?6@
CONST	SEGMENT
??_C@_03OFAPEBGM@?$CFs?6@ DB '%s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OMGKPKMJ@points_value@
CONST	SEGMENT
??_C@_0N@OMGKPKMJ@points_value@ DB 'points_value', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LJBAGENL@player_controllable@
CONST	SEGMENT
??_C@_0BE@LJBAGENL@player_controllable@ DB 'player_controllable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OPPGPJDA@offensive_capability@
CONST	SEGMENT
??_C@_0BF@OPPGPJDA@offensive_capability@ DB 'offensive_capability', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMMJCANI@explosive_power@
CONST	SEGMENT
??_C@_0BA@IMMJCANI@explosive_power@ DB 'explosive_power', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IPAJHBFC@explosive_quality@
CONST	SEGMENT
??_C@_0BC@IPAJHBFC@explosive_quality@ DB 'explosive_quality', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JPIPGBMH@initial_damage_level@
CONST	SEGMENT
??_C@_0BF@JPIPGBMH@initial_damage_level@ DB 'initial_damage_level', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKOOLAJE@main_rotor_radius@
CONST	SEGMENT
??_C@_0BC@DKOOLAJE@main_rotor_radius@ DB 'main_rotor_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OILIBHNK@number_of_main_rotors@
CONST	SEGMENT
??_C@_0BG@OILIBHNK@number_of_main_rotors@ DB 'number_of_main_rotors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IFIFOLKE@fuel_economy@
CONST	SEGMENT
??_C@_0N@IFIFOLKE@fuel_economy@ DB 'fuel_economy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EILOBNPM@fuel_default_weight@
CONST	SEGMENT
??_C@_0BE@EILOBNPM@fuel_default_weight@ DB 'fuel_default_weight', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDBGCMLI@ammo_economy@
CONST	SEGMENT
??_C@_0N@KDBGCMLI@ammo_economy@ DB 'ammo_economy', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LKMEIEEE@potential_air_to_surface_threat@
CONST	SEGMENT
??_C@_0CA@LKMEIEEE@potential_air_to_surface_threat@ DB 'potential_air_to_'
	DB	'surface_threat', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HBABFPLO@potential_air_to_air_threat@
CONST	SEGMENT
??_C@_0BM@HBABFPLO@potential_air_to_air_threat@ DB 'potential_air_to_air_'
	DB	'threat', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFEIMDEP@surface_scan_range@
CONST	SEGMENT
??_C@_0BD@DFEIMDEP@surface_scan_range@ DB 'surface_scan_range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PICBLDJ@air_scan_range@
CONST	SEGMENT
??_C@_0P@PICBLDJ@air_scan_range@ DB 'air_scan_range', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BBBJKKMK@target_scan_delay@
CONST	SEGMENT
??_C@_0BC@BBBJKKMK@target_scan_delay@ DB 'target_scan_delay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KPEEILEF@recon_radius@
CONST	SEGMENT
??_C@_0N@KPEEILEF@recon_radius@ DB 'recon_radius', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NIBNMMBC@tail_rotor_direction@
CONST	SEGMENT
??_C@_0BF@NIBNMMBC@tail_rotor_direction@ DB 'tail_rotor_direction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PKCIOEFJ@power_output@
CONST	SEGMENT
??_C@_0N@PKCIOEFJ@power_output@ DB 'power_output', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05IGDAEEJD@g_max@
CONST	SEGMENT
??_C@_05IGDAEEJD@g_max@ DB 'g_max', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBEPPNPB@avoidance_radius@
CONST	SEGMENT
??_C@_0BB@GBEPPNPB@avoidance_radius@ DB 'avoidance_radius', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HPMEGNJI@max_vertical_turn_allowance@
CONST	SEGMENT
??_C@_0BM@HPMEGNJI@max_vertical_turn_allowance@ DB 'max_vertical_turn_all'
	DB	'owance', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08OCBGELPM@max_roll@
CONST	SEGMENT
??_C@_08OCBGELPM@max_roll@ DB 'max_roll', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MJEOGANB@max_turn_rate@
CONST	SEGMENT
??_C@_0O@MJEOGANB@max_turn_rate@ DB 'max_turn_rate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MNADIOKK@propellor_direction@
CONST	SEGMENT
??_C@_0BE@MNADIOKK@propellor_direction@ DB 'propellor_direction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LJAAFAJN@main_rotor_blade_droop_angle@
CONST	SEGMENT
??_C@_0BN@LJAAFAJN@main_rotor_blade_droop_angle@ DB 'main_rotor_blade_dro'
	DB	'op_angle', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CMAFDPJF@main_rotor_direction@
CONST	SEGMENT
??_C@_0BF@CMAFDPJF@main_rotor_direction@ DB 'main_rotor_direction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LIPCLOFP@main_rotor_shaft_angle@
CONST	SEGMENT
??_C@_0BH@LIPCLOFP@main_rotor_shaft_angle@ DB 'main_rotor_shaft_angle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CCPNGAIP@liftoff_velocity@
CONST	SEGMENT
??_C@_0BB@CCPNGAIP@liftoff_velocity@ DB 'liftoff_velocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JKIIHMOB@fuselage_angle@
CONST	SEGMENT
??_C@_0P@JKIIHMOB@fuselage_angle@ DB 'fuselage_angle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKPMHBAM@destroyed_pitch_offset@
CONST	SEGMENT
??_C@_0BH@GKPMHBAM@destroyed_pitch_offset@ DB 'destroyed_pitch_offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OGFMJPKK@destroyed_bank_offset@
CONST	SEGMENT
??_C@_0BG@OGFMJPKK@destroyed_bank_offset@ DB 'destroyed_bank_offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LAKKDKLB@attack_altitude@
CONST	SEGMENT
??_C@_0BA@LAKKDKLB@attack_altitude@ DB 'attack_altitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMJCDPMB@cruise_altitude@
CONST	SEGMENT
??_C@_0BA@IMJCDPMB@cruise_altitude@ DB 'cruise_altitude', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OLEKGHHO@cruise_velocity@
CONST	SEGMENT
??_C@_0BA@OLEKGHHO@cruise_velocity@ DB 'cruise_velocity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KLDFGKDG@chase_view_max_distance_test@
CONST	SEGMENT
??_C@_0BN@KLDFGKDG@chase_view_max_distance_test@ DB 'chase_view_max_dista'
	DB	'nce_test', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PIJDHCNC@chase_view_min_distance_test@
CONST	SEGMENT
??_C@_0BN@PIJDHCNC@chase_view_min_distance_test@ DB 'chase_view_min_dista'
	DB	'nce_test', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OGCOKNND@chase_view_max_distance@
CONST	SEGMENT
??_C@_0BI@OGCOKNND@chase_view_max_distance@ DB 'chase_view_max_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KGGBNFKF@chase_view_min_distance@
CONST	SEGMENT
??_C@_0BI@KGGBNFKF@chase_view_min_distance@ DB 'chase_view_min_distance', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LIHEKIBI@centre_of_gravity_to_ground_dis@
CONST	SEGMENT
??_C@_0CP@LIHEKIBI@centre_of_gravity_to_ground_dis@ DB 'centre_of_gravity'
	DB	'_to_ground_distance_destroyed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@INDHHFLP@centre_of_gravity_to_ground_dis@
CONST	SEGMENT
??_C@_0CF@INDHHFLP@centre_of_gravity_to_ground_dis@ DB 'centre_of_gravity'
	DB	'_to_ground_distance', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CJJNFLM@threat_type@
CONST	SEGMENT
??_C@_0M@CJJNFLM@threat_type@ DB 'threat_type', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NPOJFGGJ@force_info_catagory@
CONST	SEGMENT
??_C@_0BE@NPOJFGGJ@force_info_catagory@ DB 'force_info_catagory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CMHOELLN@target_priority_type@
CONST	SEGMENT
??_C@_0BF@CMHOELLN@target_priority_type@ DB 'target_priority_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KFEIDFO@target_symbol_type@
CONST	SEGMENT
??_C@_0BD@KFEIDFO@target_symbol_type@ DB 'target_symbol_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GAKPEDIG@default_weapon_type@
CONST	SEGMENT
??_C@_0BE@GAKPEDIG@default_weapon_type@ DB 'default_weapon_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IBOCPANC@scout_weapon_config_type@
CONST	SEGMENT
??_C@_0BJ@IBOCPANC@scout_weapon_config_type@ DB 'scout_weapon_config_type'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@GMHHKJPN@air_to_surface_weapon_config_ty@
CONST	SEGMENT
??_C@_0CC@GMHHKJPN@air_to_surface_weapon_config_ty@ DB 'air_to_surface_we'
	DB	'apon_config_type', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EGCLMAJK@air_to_air_weapon_config_type@
CONST	SEGMENT
??_C@_0BO@EGCLMAJK@air_to_air_weapon_config_type@ DB 'air_to_air_weapon_c'
	DB	'onfig_type', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NDKLDEID@max_weapon_config_type@
CONST	SEGMENT
??_C@_0BH@NDKLDEID@max_weapon_config_type@ DB 'max_weapon_config_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NHDBAFKJ@min_weapon_config_type@
CONST	SEGMENT
??_C@_0BH@NHDBAFKJ@min_weapon_config_type@ DB 'min_weapon_config_type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LPABPCFJ@default_weapon_config_type@
CONST	SEGMENT
??_C@_0BL@LPABPCFJ@default_weapon_config_type@ DB 'default_weapon_config_'
	DB	'type', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CGNBMCEI@?$CFs?0@
CONST	SEGMENT
??_C@_03CGNBMCEI@?$CFs?0@ DB '%s,', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09LBCPNCLI@full_name@
CONST	SEGMENT
??_C@_09LBCPNCLI@full_name@ DB 'full_name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DKAFMAAL@?$FLAIRCRAFT?$FN?6@
CONST	SEGMENT
??_C@_0M@DKAFMAAL@?$FLAIRCRAFT?$FN?6@ DB '[AIRCRAFT]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04DBHEMPKL@GWUT@
CONST	SEGMENT
??_C@_04DBHEMPKL@GWUT@ DB 'GWUT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gwutcfg.c
;	COMDAT ?ReadGWutInfo@@YGXPBD@Z
_TEXT	SEGMENT
tv4812 = -2428						; size = 8
tv4327 = -2428						; size = 8
tv4807 = -2420						; size = 8
tv4322 = -2420						; size = 8
tv5459 = -2412						; size = 8
tv5457 = -2412						; size = 8
tv5232 = -2408						; size = 8
tv4510 = -2408						; size = 8
tv4252 = -2408						; size = 8
tv4109 = -2408						; size = 8
tv4088 = -2408						; size = 8
tv4083 = -2408						; size = 8
tv4074 = -2408						; size = 8
tv4065 = -2408						; size = 8
tv4056 = -2408						; size = 8
tv4051 = -2408						; size = 8
tv4046 = -2408						; size = 8
tv1444 = -2408						; size = 8
tv5448 = -2404						; size = 4
tv5443 = -2404						; size = 4
tv5438 = -2404						; size = 4
tv5433 = -2404						; size = 4
tv5428 = -2404						; size = 4
tv5423 = -2404						; size = 4
tv5418 = -2404						; size = 4
tv5413 = -2404						; size = 4
tv5408 = -2404						; size = 4
tv5403 = -2404						; size = 4
tv5398 = -2404						; size = 4
tv5393 = -2404						; size = 4
tv5388 = -2404						; size = 4
tv5383 = -2404						; size = 4
tv5378 = -2404						; size = 4
tv5373 = -2404						; size = 4
tv5368 = -2404						; size = 4
tv5363 = -2404						; size = 4
tv5358 = -2404						; size = 4
tv5353 = -2404						; size = 4
tv5348 = -2404						; size = 4
tv5343 = -2404						; size = 4
tv5338 = -2404						; size = 4
tv5333 = -2404						; size = 4
tv5328 = -2404						; size = 4
tv5323 = -2404						; size = 4
tv5318 = -2404						; size = 4
tv5313 = -2404						; size = 4
tv5265 = -2404						; size = 4
tv5257 = -2404						; size = 4
tv5249 = -2404						; size = 4
tv5241 = -2404						; size = 4
tv5224 = -2404						; size = 4
tv5153 = -2404						; size = 4
tv5149 = -2404						; size = 4
tv5145 = -2404						; size = 4
tv5141 = -2404						; size = 4
tv5117 = -2404						; size = 4
tv5113 = -2404						; size = 4
tv5109 = -2404						; size = 4
tv5105 = -2404						; size = 4
tv5081 = -2404						; size = 4
tv5077 = -2404						; size = 4
tv5073 = -2404						; size = 4
tv5069 = -2404						; size = 4
tv5045 = -2404						; size = 4
tv5041 = -2404						; size = 4
tv5037 = -2404						; size = 4
tv5033 = -2404						; size = 4
tv4586 = -2404						; size = 4
tv4582 = -2404						; size = 4
tv4578 = -2404						; size = 4
tv4574 = -2404						; size = 4
tv4570 = -2404						; size = 4
tv4566 = -2404						; size = 4
tv4562 = -2404						; size = 4
tv4558 = -2404						; size = 4
tv4528 = -2404						; size = 4
tv4515 = -2404						; size = 4
tv4506 = -2404						; size = 4
tv4500 = -2404						; size = 4
tv4496 = -2404						; size = 4
tv4492 = -2404						; size = 4
tv4488 = -2404						; size = 4
tv4484 = -2404						; size = 4
tv4480 = -2404						; size = 4
tv4476 = -2404						; size = 4
tv4472 = -2404						; size = 4
tv4468 = -2404						; size = 4
tv4464 = -2404						; size = 4
tv4460 = -2404						; size = 4
tv4456 = -2404						; size = 4
tv4452 = -2404						; size = 4
tv4448 = -2404						; size = 4
tv4444 = -2404						; size = 4
tv4440 = -2404						; size = 4
tv4436 = -2404						; size = 4
tv4313 = -2404						; size = 4
tv4309 = -2404						; size = 4
tv4305 = -2404						; size = 4
tv4301 = -2404						; size = 4
tv4297 = -2404						; size = 4
tv4293 = -2404						; size = 4
tv4289 = -2404						; size = 4
tv4285 = -2404						; size = 4
tv4281 = -2404						; size = 4
tv4277 = -2404						; size = 4
tv4273 = -2404						; size = 4
tv4269 = -2404						; size = 4
tv4265 = -2404						; size = 4
tv4261 = -2404						; size = 4
tv4257 = -2404						; size = 4
tv4248 = -2404						; size = 4
tv4244 = -2404						; size = 4
tv4240 = -2404						; size = 4
tv4236 = -2404						; size = 4
tv4232 = -2404						; size = 4
tv4228 = -2404						; size = 4
tv4224 = -2404						; size = 4
tv4154 = -2404						; size = 4
tv4150 = -2404						; size = 4
tv4146 = -2404						; size = 4
tv4142 = -2404						; size = 4
tv4138 = -2404						; size = 4
tv4134 = -2404						; size = 4
tv4130 = -2404						; size = 4
tv4126 = -2404						; size = 4
tv4122 = -2404						; size = 4
tv4118 = -2404						; size = 4
tv4114 = -2404						; size = 4
tv4105 = -2404						; size = 4
tv4101 = -2404						; size = 4
tv4097 = -2404						; size = 4
tv4093 = -2404						; size = 4
tv4079 = -2404						; size = 4
tv4070 = -2404						; size = 4
tv4061 = -2404						; size = 4
tv4042 = -2404						; size = 4
tv4038 = -2404						; size = 4
tv4034 = -2404						; size = 4
tv4030 = -2404						; size = 4
tv4026 = -2404						; size = 4
tv4022 = -2404						; size = 4
tv4018 = -2404						; size = 4
tv4014 = -2404						; size = 4
tv4010 = -2404						; size = 4
tv3442 = -2404						; size = 4
tv3426 = -2404						; size = 4
tv3410 = -2404						; size = 4
tv3395 = -2404						; size = 4
tv3338 = -2404						; size = 4
tv3322 = -2404						; size = 4
tv3306 = -2404						; size = 4
tv3291 = -2404						; size = 4
tv3239 = -2404						; size = 4
tv3223 = -2404						; size = 4
tv3207 = -2404						; size = 4
tv3192 = -2404						; size = 4
tv3140 = -2404						; size = 4
tv3124 = -2404						; size = 4
tv3108 = -2404						; size = 4
tv3093 = -2404						; size = 4
tv3041 = -2404						; size = 4
tv3025 = -2404						; size = 4
tv3009 = -2404						; size = 4
tv2994 = -2404						; size = 4
tv2935 = -2404						; size = 4
tv2919 = -2404						; size = 4
tv2903 = -2404						; size = 4
tv2887 = -2404						; size = 4
tv2871 = -2404						; size = 4
tv2855 = -2404						; size = 4
tv2839 = -2404						; size = 4
tv2823 = -2404						; size = 4
tv2808 = -2404						; size = 4
tv2646 = -2404						; size = 4
tv2630 = -2404						; size = 4
tv2614 = -2404						; size = 4
tv2598 = -2404						; size = 4
tv2582 = -2404						; size = 4
tv2566 = -2404						; size = 4
tv2550 = -2404						; size = 4
tv2534 = -2404						; size = 4
tv2518 = -2404						; size = 4
tv2502 = -2404						; size = 4
tv2486 = -2404						; size = 4
tv2470 = -2404						; size = 4
tv2454 = -2404						; size = 4
tv2438 = -2404						; size = 4
tv2422 = -2404						; size = 4
tv2406 = -2404						; size = 4
tv2391 = -2404						; size = 4
tv2375 = -2404						; size = 4
tv2359 = -2404						; size = 4
tv2343 = -2404						; size = 4
tv2327 = -2404						; size = 4
tv2312 = -2404						; size = 4
tv2294 = -2404						; size = 4
tv2272 = -2404						; size = 4
tv2257 = -2404						; size = 4
tv2121 = -2404						; size = 4
tv2105 = -2404						; size = 4
tv2089 = -2404						; size = 4
tv2073 = -2404						; size = 4
tv2057 = -2404						; size = 4
tv2041 = -2404						; size = 4
tv2025 = -2404						; size = 4
tv2010 = -2404						; size = 4
tv1856 = -2404						; size = 4
tv1840 = -2404						; size = 4
tv1824 = -2404						; size = 4
tv1808 = -2404						; size = 4
tv1792 = -2404						; size = 4
tv1776 = -2404						; size = 4
tv1760 = -2404						; size = 4
tv1744 = -2404						; size = 4
tv1728 = -2404						; size = 4
tv1712 = -2404						; size = 4
tv1696 = -2404						; size = 4
tv1664 = -2404						; size = 4
tv1648 = -2404						; size = 4
tv1632 = -2404						; size = 4
tv1042 = -2404						; size = 4
tv1026 = -2404						; size = 4
tv1010 = -2404						; size = 4
tv995 = -2404						; size = 4
tv975 = -2404						; size = 4
tv624 = -2404						; size = 4
tv603 = -2404						; size = 4
tv587 = -2404						; size = 4
tv572 = -2404						; size = 4
_seeker_limit$1 = -2080					; size = 4
_testdump$ = -2076					; size = 4
_p$ = -2072						; size = 4
_buf$ = -2068						; size = 2048
_k$ = -20						; size = 4
_j$ = -16						; size = 4
_i$ = -12						; size = 4
_fout$ = -8						; size = 4
_f$ = -4						; size = 4
_fname$ = 8						; size = 4
?ReadGWutInfo@@YGXPBD@Z PROC				; ReadGWutInfo, COMDAT

; 1174 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 7c 09 00
	00		 sub	 esp, 2428		; 0000097cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1175 : 	FILE *f;
; 1176 : 	FILE *fout;
; 1177 : 	int i, j, k;
; 1178 : 	char buf[2048];
; 1179 : 	char *p;
; 1180 : 	int testdump = 0;

  0000c	c7 85 e4 f7 ff
	ff 00 00 00 00	 mov	 DWORD PTR _testdump$[ebp], 0

; 1181 : 
; 1182 : 	READ_HEADER = 0;

  00016	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER

; 1183 : 
; 1184 : 	if (testdump)

  00020	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  00027	74 2b		 je	 SHORT $LN22@ReadGWutIn

; 1185 : 	{
; 1186 : 		fout = fopen("dumpgwut.txt","w");

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NEEIEGPN@dumpgwut?4txt@
  00033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00039	83 c4 08	 add	 esp, 8
  0003c	89 45 f8	 mov	 DWORD PTR _fout$[ebp], eax

; 1187 : 		fprintf(fout,"Dumping file: %s\n",fname);

  0003f	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  00042	50		 push	 eax
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KOCDPDLA@Dumping?5file?3?5?$CFs?6@
  00048	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0004b	51		 push	 ecx
  0004c	e8 00 00 00 00	 call	 _fprintf
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN22@ReadGWutIn:

; 1188 : 	}
; 1189 : /*
; 1190 : //VJ 040322 moved to the function parse_WUT_file
; 1191 : 
; 1192 : 	if (!file_exist(fname))
; 1193 : 	{
; 1194 : 		debug_fatal("WUT filename error",fname);
; 1195 : 		return;
; 1196 : 	}
; 1197 : */
; 1198 : 	f = fopen(fname, "r");

  00054	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00059	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  0005c	50		 push	 eax
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  00063	83 c4 08	 add	 esp, 8
  00066	89 45 fc	 mov	 DWORD PTR _f$[ebp], eax

; 1199 : 	if (!f)

  00069	83 7d fc 00	 cmp	 DWORD PTR _f$[ebp], 0
  0006d	75 16		 jne	 SHORT $LN23@ReadGWutIn

; 1200 : 	{
; 1201 : 		debug_fatal("Error opening GWUT file: [ %s ]",fname);

  0006f	8b 45 08	 mov	 eax, DWORD PTR _fname$[ebp]
  00072	50		 push	 eax
  00073	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@POJFLOKO@Error?5opening?5GWUT?5file?3?5?$FL?5?$CFs?5?$FN@
  00078	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0007d	83 c4 08	 add	 esp, 8

; 1202 : 		return;

  00080	e9 b3 51 00 00	 jmp	 $LN1@ReadGWutIn
$LN23@ReadGWutIn:

; 1203 : 	}
; 1204 : 
; 1205 : 	fscanf(f,"%[^\n]\n",buf);

  00085	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0008b	50		 push	 eax
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00091	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 _fscanf
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1206 : 	// read file header
; 1207 : 	TESTDUMP(buf);

  0009d	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  000a4	74 25		 je	 SHORT $LN24@ReadGWutIn
  000a6	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  000b2	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  000b5	51		 push	 ecx
  000b6	e8 00 00 00 00	 call	 _fprintf
  000bb	83 c4 0c	 add	 esp, 12			; 0000000cH
  000be	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  000c1	50		 push	 eax
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  000c8	83 c4 04	 add	 esp, 4
$LN24@ReadGWutIn:

; 1208 : 
; 1209 : 	if (!strstr(buf,CURRENT_HEADER))

  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_04DBHEMPKL@GWUT@
  000d0	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?strstr@@YAPADQADQBD@Z	; strstr
  000dc	83 c4 08	 add	 esp, 8
  000df	85 c0		 test	 eax, eax
  000e1	75 1d		 jne	 SHORT $LN25@ReadGWutIn

; 1210 : 	{
; 1211 : 		debug_fatal("GWUT file %s has the wrong header: %s",fname,buf);

  000e3	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000e9	50		 push	 eax
  000ea	8b 4d 08	 mov	 ecx, DWORD PTR _fname$[ebp]
  000ed	51		 push	 ecx
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GNDAFGFP@GWUT?5file?5?$CFs?5has?5the?5wrong?5head@
  000f3	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000f8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1212 : 		return;

  000fb	e9 38 51 00 00	 jmp	 $LN1@ReadGWutIn
$LN25@ReadGWutIn:

; 1213 : 	}
; 1214 : 
; 1215 : 	fscanf(f,"%[^\n]\n",buf);

  00100	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00106	50		 push	 eax
  00107	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0010f	51		 push	 ecx
  00110	e8 00 00 00 00	 call	 _fscanf
  00115	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1216 : 	 //skip [AIRCRAFT] string
; 1217 : 	TESTDUMP(buf);

  00118	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0011f	74 25		 je	 SHORT $LN26@ReadGWutIn
  00121	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00127	50		 push	 eax
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0012d	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 _fprintf
  00136	83 c4 0c	 add	 esp, 12			; 0000000cH
  00139	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  0013c	50		 push	 eax
  0013d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00143	83 c4 04	 add	 esp, 4
$LN26@ReadGWutIn:

; 1218 : 
; 1219 : 	if (READ_HEADER)

  00146	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  0014d	74 18		 je	 SHORT $LN27@ReadGWutIn

; 1220 : 		fscanf(f,"%[^\n]\n",buf);

  0014f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00155	50		 push	 eax
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0015b	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0015e	51		 push	 ecx
  0015f	e8 00 00 00 00	 call	 _fscanf
  00164	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN27@ReadGWutIn:

; 1221 : 	TESTDUMP(buf);

  00167	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0016e	74 25		 je	 SHORT $LN28@ReadGWutIn
  00170	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00176	50		 push	 eax
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0017c	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0017f	51		 push	 ecx
  00180	e8 00 00 00 00	 call	 _fprintf
  00185	83 c4 0c	 add	 esp, 12			; 0000000cH
  00188	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  0018b	50		 push	 eax
  0018c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00192	83 c4 04	 add	 esp, 4
$LN28@ReadGWutIn:

; 1222 : 
; 1223 : 	fscanf(f,"%[^\n]\n",buf);

  00195	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0019b	50		 push	 eax
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  001a1	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  001a4	51		 push	 ecx
  001a5	e8 00 00 00 00	 call	 _fscanf
  001aa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1224 : 	 //read first values
; 1225 : 	TESTDUMP(buf);

  001ad	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  001b4	74 25		 je	 SHORT $LN29@ReadGWutIn
  001b6	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001bc	50		 push	 eax
  001bd	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  001c2	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  001c5	51		 push	 ecx
  001c6	e8 00 00 00 00	 call	 _fprintf
  001cb	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ce	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  001d1	50		 push	 eax
  001d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  001d8	83 c4 04	 add	 esp, 4
$LN29@ReadGWutIn:

; 1226 : 
; 1227 : 	//[AIRCRAFT]
; 1228 : 	while (!(strcmp(buf,"[VEHICLES]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BNOJJLLD@?$FLVEHICLES?$FN@
  001e0	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 _strcmp
  001ec	83 c4 08	 add	 esp, 8
  001ef	85 c0		 test	 eax, eax
  001f1	0f 84 16 0b 00
	00		 je	 $LN3@ReadGWutIn
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  001fc	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00202	50		 push	 eax
  00203	e8 00 00 00 00	 call	 _strcmp
  00208	83 c4 08	 add	 esp, 8
  0020b	85 c0		 test	 eax, eax
  0020d	0f 84 fa 0a 00
	00		 je	 $LN3@ReadGWutIn

; 1229 : 	{
; 1230 : 		p = strtok(buf,",");

  00213	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00218	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0021e	50		 push	 eax
  0021f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00225	83 c4 08	 add	 esp, 8
  00228	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1231 : 		i = atoi(p);

  0022e	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  00234	50		 push	 eax
  00235	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0023b	83 c4 04	 add	 esp, 4
  0023e	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1232 : 		//get entity number
; 1233 : 		p = strtok(NULL,",");

  00241	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00246	6a 00		 push	 0
  00248	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0024e	83 c4 08	 add	 esp, 8
  00251	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1234 : 		//skip full name
; 1235 : 		aircraft_database[i].force                                         = ( entity_forces ) IntValue(p);

  00257	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0025c	6a 00		 push	 0
  0025e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00264	83 c4 08	 add	 esp, 8
  00267	50		 push	 eax
  00268	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0026e	83 c4 04	 add	 esp, 4
  00271	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  00278	89 81 18 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+24], eax

; 1236 : 		/*  Don't read weapons configs, the numbers have changed, so will be wrong in GWUT file! */
; 1237 : 		/*aircraft_database[i].default_weapon_config_type                    = */IntValue(p);

  0027e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00283	6a 00		 push	 0
  00285	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0028b	83 c4 08	 add	 esp, 8
  0028e	50		 push	 eax
  0028f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00295	83 c4 04	 add	 esp, 4

; 1238 : 		/*aircraft_database[i].min_weapon_config_type                        = */ IntValue(p);

  00298	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0029d	6a 00		 push	 0
  0029f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  002a5	83 c4 08	 add	 esp, 8
  002a8	50		 push	 eax
  002a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  002af	83 c4 04	 add	 esp, 4

; 1239 : 		/*aircraft_database[i].max_weapon_config_type                        = */  IntValue(p);

  002b2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  002b7	6a 00		 push	 0
  002b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  002bf	83 c4 08	 add	 esp, 8
  002c2	50		 push	 eax
  002c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  002c9	83 c4 04	 add	 esp, 4

; 1240 : 		/*aircraft_database[i].air_to_air_weapon_config_type                 = */IntValue(p);

  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  002d1	6a 00		 push	 0
  002d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  002d9	83 c4 08	 add	 esp, 8
  002dc	50		 push	 eax
  002dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  002e3	83 c4 04	 add	 esp, 4

; 1241 : 		/*aircraft_database[i].air_to_surface_weapon_config_type             = */IntValue(p);

  002e6	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  002eb	6a 00		 push	 0
  002ed	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  002f3	83 c4 08	 add	 esp, 8
  002f6	50		 push	 eax
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  002fd	83 c4 04	 add	 esp, 4

; 1242 : 		/*aircraft_database[i].scout_weapon_config_type                      = */IntValue(p);

  00300	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00305	6a 00		 push	 0
  00307	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0030d	83 c4 08	 add	 esp, 8
  00310	50		 push	 eax
  00311	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00317	83 c4 04	 add	 esp, 4

; 1243 : 		/*aircraft_database[i].default_weapon_type                           = */IntValue(p);

  0031a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0031f	6a 00		 push	 0
  00321	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00327	83 c4 08	 add	 esp, 8
  0032a	50		 push	 eax
  0032b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00331	83 c4 04	 add	 esp, 4

; 1244 : 		aircraft_database[i].target_symbol_type                            = ( target_symbol_types ) IntValue(p);

  00334	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00339	6a 00		 push	 0
  0033b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00341	83 c4 08	 add	 esp, 8
  00344	50		 push	 eax
  00345	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0034b	83 c4 04	 add	 esp, 4
  0034e	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  00355	89 81 38 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+56], eax

; 1245 : 		aircraft_database[i].target_priority_type                          = ( target_priority_types ) IntValue(p);

  0035b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00360	6a 00		 push	 0
  00362	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00368	83 c4 08	 add	 esp, 8
  0036b	50		 push	 eax
  0036c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00372	83 c4 04	 add	 esp, 4
  00375	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  0037c	89 81 3c 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+60], eax

; 1246 : 		aircraft_database[i].force_info_catagory                           = ( force_info_catagories ) IntValue(p);

  00382	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00387	6a 00		 push	 0
  00389	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0038f	83 c4 08	 add	 esp, 8
  00392	50		 push	 eax
  00393	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00399	83 c4 04	 add	 esp, 4
  0039c	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  003a3	89 81 40 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+64], eax

; 1247 : 		aircraft_database[i].threat_type                                   = ( threat_types ) IntValue(p);

  003a9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  003ae	6a 00		 push	 0
  003b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  003b6	83 c4 08	 add	 esp, 8
  003b9	50		 push	 eax
  003ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  003c0	83 c4 04	 add	 esp, 4
  003c3	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  003ca	89 81 44 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+68], eax

; 1248 : 		aircraft_database[i].centre_of_gravity_to_ground_distance          = FloatValue(p);

  003d0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  003d5	6a 00		 push	 0
  003d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  003dd	83 c4 08	 add	 esp, 8
  003e0	50		 push	 eax
  003e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  003e7	83 c4 04	 add	 esp, 4
  003ea	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4010[ebp]
  003f0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4010[ebp]
  003f6	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  003fd	d9 98 54 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+84]

; 1249 : 		aircraft_database[i].centre_of_gravity_to_ground_distance_destroyed= FloatValue(p);

  00403	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00408	6a 00		 push	 0
  0040a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00410	83 c4 08	 add	 esp, 8
  00413	50		 push	 eax
  00414	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0041a	83 c4 04	 add	 esp, 4
  0041d	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4014[ebp]
  00423	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4014[ebp]
  00429	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00430	d9 98 58 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+88]

; 1250 : 		aircraft_database[i].chase_view_min_distance                       = FloatValue(p);

  00436	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0043b	6a 00		 push	 0
  0043d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00443	83 c4 08	 add	 esp, 8
  00446	50		 push	 eax
  00447	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0044d	83 c4 04	 add	 esp, 4
  00450	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4018[ebp]
  00456	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4018[ebp]
  0045c	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00463	d9 98 5c 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+92]

; 1251 : 		aircraft_database[i].chase_view_max_distance                       = FloatValue(p);

  00469	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0046e	6a 00		 push	 0
  00470	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00476	83 c4 08	 add	 esp, 8
  00479	50		 push	 eax
  0047a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00480	83 c4 04	 add	 esp, 4
  00483	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4022[ebp]
  00489	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4022[ebp]
  0048f	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00496	d9 98 60 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+96]

; 1252 : 		aircraft_database[i].chase_view_min_distance_test                  = FloatValue(p);

  0049c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  004a1	6a 00		 push	 0
  004a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  004a9	83 c4 08	 add	 esp, 8
  004ac	50		 push	 eax
  004ad	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  004b3	83 c4 04	 add	 esp, 4
  004b6	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4026[ebp]
  004bc	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4026[ebp]
  004c2	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  004c9	d9 98 64 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+100]

; 1253 : 		aircraft_database[i].chase_view_max_distance_test                  = FloatValue(p);

  004cf	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  004d4	6a 00		 push	 0
  004d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  004dc	83 c4 08	 add	 esp, 8
  004df	50		 push	 eax
  004e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  004e6	83 c4 04	 add	 esp, 4
  004e9	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4030[ebp]
  004ef	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4030[ebp]
  004f5	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  004fc	d9 98 68 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+104]

; 1254 : 		aircraft_database[i].cruise_velocity                               = FloatValue(p);

  00502	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00507	6a 00		 push	 0
  00509	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0050f	83 c4 08	 add	 esp, 8
  00512	50		 push	 eax
  00513	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00519	83 c4 04	 add	 esp, 4
  0051c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4034[ebp]
  00522	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4034[ebp]
  00528	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0052f	d9 98 6c 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+108]

; 1255 : 		aircraft_database[i].cruise_altitude                               = FloatValue(p);

  00535	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0053a	6a 00		 push	 0
  0053c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00542	83 c4 08	 add	 esp, 8
  00545	50		 push	 eax
  00546	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0054c	83 c4 04	 add	 esp, 4
  0054f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4038[ebp]
  00555	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4038[ebp]
  0055b	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00562	d9 98 70 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+112]

; 1256 : 		aircraft_database[i].attack_altitude                               = FloatValue(p);

  00568	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0056d	6a 00		 push	 0
  0056f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00575	83 c4 08	 add	 esp, 8
  00578	50		 push	 eax
  00579	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0057f	83 c4 04	 add	 esp, 4
  00582	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4042[ebp]
  00588	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4042[ebp]
  0058e	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00595	d9 98 74 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+116]

; 1257 : 		aircraft_database[i].destroyed_bank_offset                         = rad (FloatValue(p));

  0059b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  005a0	6a 00		 push	 0
  005a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  005a8	83 c4 08	 add	 esp, 8
  005ab	50		 push	 eax
  005ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  005b2	83 c4 04	 add	 esp, 4
  005b5	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4046[ebp]
  005bb	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4046[ebp]
  005c3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  005cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005cf	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005d6	f3 0f 11 80 78
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+120], xmm0

; 1258 : 		aircraft_database[i].destroyed_pitch_offset                        = rad (FloatValue(p));

  005de	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  005e3	6a 00		 push	 0
  005e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  005eb	83 c4 08	 add	 esp, 8
  005ee	50		 push	 eax
  005ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  005f5	83 c4 04	 add	 esp, 4
  005f8	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4051[ebp]
  005fe	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4051[ebp]
  00606	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  0060e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00612	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00619	f3 0f 11 80 7c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+124], xmm0

; 1259 : 		aircraft_database[i].fuselage_angle                                = rad (FloatValue(p));

  00621	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00626	6a 00		 push	 0
  00628	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0062e	83 c4 08	 add	 esp, 8
  00631	50		 push	 eax
  00632	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00638	83 c4 04	 add	 esp, 4
  0063b	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4056[ebp]
  00641	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4056[ebp]
  00649	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  00651	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00655	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0065c	f3 0f 11 80 80
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+128], xmm0

; 1260 : 		aircraft_database[i].liftoff_velocity                              = FloatValue(p);

  00664	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00669	6a 00		 push	 0
  0066b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00671	83 c4 08	 add	 esp, 8
  00674	50		 push	 eax
  00675	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0067b	83 c4 04	 add	 esp, 4
  0067e	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4061[ebp]
  00684	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4061[ebp]
  0068a	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00691	d9 98 84 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+132]

; 1261 : 		aircraft_database[i].main_rotor_shaft_angle                        = rad (FloatValue(p));

  00697	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0069c	6a 00		 push	 0
  0069e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  006a4	83 c4 08	 add	 esp, 8
  006a7	50		 push	 eax
  006a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  006ae	83 c4 04	 add	 esp, 4
  006b1	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4065[ebp]
  006b7	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4065[ebp]
  006bf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  006c7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006cb	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006d2	f3 0f 11 80 88
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+136], xmm0

; 1262 : 		aircraft_database[i].main_rotor_direction                          = FloatValue(p);

  006da	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  006df	6a 00		 push	 0
  006e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  006e7	83 c4 08	 add	 esp, 8
  006ea	50		 push	 eax
  006eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  006f1	83 c4 04	 add	 esp, 4
  006f4	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4070[ebp]
  006fa	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4070[ebp]
  00700	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00707	d9 98 8c 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+140]

; 1263 : 		aircraft_database[i].main_rotor_blade_droop_angle                  = rad (FloatValue(p));

  0070d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00712	6a 00		 push	 0
  00714	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0071a	83 c4 08	 add	 esp, 8
  0071d	50		 push	 eax
  0071e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00724	83 c4 04	 add	 esp, 4
  00727	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4074[ebp]
  0072d	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4074[ebp]
  00735	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  0073d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00741	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00748	f3 0f 11 80 90
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+144], xmm0

; 1264 : 		aircraft_database[i].propellor_direction                           = FloatValue(p);

  00750	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00755	6a 00		 push	 0
  00757	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0075d	83 c4 08	 add	 esp, 8
  00760	50		 push	 eax
  00761	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00767	83 c4 04	 add	 esp, 4
  0076a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4079[ebp]
  00770	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4079[ebp]
  00776	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0077d	d9 98 94 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+148]

; 1265 : 		aircraft_database[i].max_turn_rate                                 = rad (FloatValue(p));

  00783	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00788	6a 00		 push	 0
  0078a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00790	83 c4 08	 add	 esp, 8
  00793	50		 push	 eax
  00794	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0079a	83 c4 04	 add	 esp, 4
  0079d	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4083[ebp]
  007a3	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4083[ebp]
  007ab	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  007b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007b7	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  007be	f3 0f 11 80 98
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+152], xmm0

; 1266 : 		aircraft_database[i].max_roll                                      = rad (FloatValue(p));

  007c6	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  007cb	6a 00		 push	 0
  007cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  007d3	83 c4 08	 add	 esp, 8
  007d6	50		 push	 eax
  007d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  007dd	83 c4 04	 add	 esp, 4
  007e0	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4088[ebp]
  007e6	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4088[ebp]
  007ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  007f6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  007fa	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00801	f3 0f 11 80 9c
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+156], xmm0

; 1267 : 		aircraft_database[i].max_vertical_turn_allowance                   = FloatValue(p);

  00809	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0080e	6a 00		 push	 0
  00810	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00816	83 c4 08	 add	 esp, 8
  00819	50		 push	 eax
  0081a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00820	83 c4 04	 add	 esp, 4
  00823	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4093[ebp]
  00829	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4093[ebp]
  0082f	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00836	d9 98 a0 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+160]

; 1268 : 		aircraft_database[i].avoidance_radius                              = FloatValue(p);

  0083c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00841	6a 00		 push	 0
  00843	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00849	83 c4 08	 add	 esp, 8
  0084c	50		 push	 eax
  0084d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00853	83 c4 04	 add	 esp, 4
  00856	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4097[ebp]
  0085c	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4097[ebp]
  00862	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00869	d9 98 a4 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+164]

; 1269 : 		aircraft_database[i].g_max                                         = FloatValue(p);

  0086f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00874	6a 00		 push	 0
  00876	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0087c	83 c4 08	 add	 esp, 8
  0087f	50		 push	 eax
  00880	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00886	83 c4 04	 add	 esp, 4
  00889	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4101[ebp]
  0088f	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4101[ebp]
  00895	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0089c	d9 98 a8 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+168]

; 1270 : 		aircraft_database[i].power_output                                  = FloatValue(p);

  008a2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  008a7	6a 00		 push	 0
  008a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  008af	83 c4 08	 add	 esp, 8
  008b2	50		 push	 eax
  008b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  008b9	83 c4 04	 add	 esp, 4
  008bc	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4105[ebp]
  008c2	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4105[ebp]
  008c8	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  008cf	d9 98 ac 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+172]

; 1271 : 		aircraft_database[i].tail_rotor_direction                          = rad (FloatValue(p));

  008d5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  008da	6a 00		 push	 0
  008dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  008e2	83 c4 08	 add	 esp, 8
  008e5	50		 push	 eax
  008e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  008ec	83 c4 04	 add	 esp, 4
  008ef	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4109[ebp]
  008f5	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4109[ebp]
  008fd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  00905	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00909	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00910	f3 0f 11 80 b0
	00 00 00	 movss	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+176], xmm0

; 1272 : 		aircraft_database[i].recon_radius                                  = FloatValue(p);

  00918	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0091d	6a 00		 push	 0
  0091f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00925	83 c4 08	 add	 esp, 8
  00928	50		 push	 eax
  00929	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0092f	83 c4 04	 add	 esp, 4
  00932	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4114[ebp]
  00938	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4114[ebp]
  0093e	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00945	d9 98 b4 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+180]

; 1273 : 		aircraft_database[i].target_scan_delay                             = FloatValue(p);

  0094b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00950	6a 00		 push	 0
  00952	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00958	83 c4 08	 add	 esp, 8
  0095b	50		 push	 eax
  0095c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00962	83 c4 04	 add	 esp, 4
  00965	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4118[ebp]
  0096b	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4118[ebp]
  00971	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00978	d9 98 b8 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+184]

; 1274 : 		aircraft_database[i].air_scan_range                                = FloatValue(p);

  0097e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00983	6a 00		 push	 0
  00985	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0098b	83 c4 08	 add	 esp, 8
  0098e	50		 push	 eax
  0098f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00995	83 c4 04	 add	 esp, 4
  00998	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4122[ebp]
  0099e	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4122[ebp]
  009a4	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  009ab	d9 98 bc 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+188]

; 1275 : 		aircraft_database[i].surface_scan_range                            = FloatValue(p);

  009b1	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  009b6	6a 00		 push	 0
  009b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  009be	83 c4 08	 add	 esp, 8
  009c1	50		 push	 eax
  009c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  009c8	83 c4 04	 add	 esp, 4
  009cb	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4126[ebp]
  009d1	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4126[ebp]
  009d7	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  009de	d9 98 c0 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+192]

; 1276 : 		aircraft_database[i].potential_air_to_air_threat                   = FloatValue(p);

  009e4	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  009e9	6a 00		 push	 0
  009eb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  009f1	83 c4 08	 add	 esp, 8
  009f4	50		 push	 eax
  009f5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  009fb	83 c4 04	 add	 esp, 4
  009fe	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4130[ebp]
  00a04	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4130[ebp]
  00a0a	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a11	d9 98 c4 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+196]

; 1277 : 		aircraft_database[i].potential_air_to_surface_threat               = FloatValue(p);

  00a17	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00a1c	6a 00		 push	 0
  00a1e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00a24	83 c4 08	 add	 esp, 8
  00a27	50		 push	 eax
  00a28	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00a2e	83 c4 04	 add	 esp, 4
  00a31	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4134[ebp]
  00a37	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4134[ebp]
  00a3d	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a44	d9 98 c8 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+200]

; 1278 : 		aircraft_database[i].ammo_economy                                  = FloatValue(p);

  00a4a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00a4f	6a 00		 push	 0
  00a51	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00a57	83 c4 08	 add	 esp, 8
  00a5a	50		 push	 eax
  00a5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00a61	83 c4 04	 add	 esp, 4
  00a64	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4138[ebp]
  00a6a	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4138[ebp]
  00a70	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a77	d9 98 cc 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+204]

; 1279 : 		aircraft_database[i].fuel_default_weight                           = FloatValue(p);

  00a7d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00a82	6a 00		 push	 0
  00a84	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00a8a	83 c4 08	 add	 esp, 8
  00a8d	50		 push	 eax
  00a8e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00a94	83 c4 04	 add	 esp, 4
  00a97	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4142[ebp]
  00a9d	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4142[ebp]
  00aa3	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00aaa	d9 98 d0 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+208]

; 1280 : 		aircraft_database[i].fuel_economy                                  = FloatValue(p);

  00ab0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00ab5	6a 00		 push	 0
  00ab7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00abd	83 c4 08	 add	 esp, 8
  00ac0	50		 push	 eax
  00ac1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00ac7	83 c4 04	 add	 esp, 4
  00aca	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4146[ebp]
  00ad0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4146[ebp]
  00ad6	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00add	d9 98 d4 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+212]

; 1281 : 		aircraft_database[i].number_of_main_rotors                         = FloatValue(p);

  00ae3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00ae8	6a 00		 push	 0
  00aea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00af0	83 c4 08	 add	 esp, 8
  00af3	50		 push	 eax
  00af4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00afa	83 c4 04	 add	 esp, 4
  00afd	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4150[ebp]
  00b03	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4150[ebp]
  00b09	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b10	d9 98 d8 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+216]

; 1282 : 		aircraft_database[i].main_rotor_radius                             = FloatValue(p);

  00b16	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00b1b	6a 00		 push	 0
  00b1d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00b23	83 c4 08	 add	 esp, 8
  00b26	50		 push	 eax
  00b27	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00b2d	83 c4 04	 add	 esp, 4
  00b30	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4154[ebp]
  00b36	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4154[ebp]
  00b3c	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b43	d9 98 dc 00 00
	00		 fstp	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+220]

; 1283 : 		aircraft_database[i].initial_damage_level                          = IntValue(p);

  00b49	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00b4e	6a 00		 push	 0
  00b50	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00b56	83 c4 08	 add	 esp, 8
  00b59	50		 push	 eax
  00b5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00b60	83 c4 04	 add	 esp, 4
  00b63	69 4d f4 f4 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 244
  00b6a	89 81 e0 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[ecx+224], eax

; 1284 : 		aircraft_database[i].explosive_quality                             = IntValue(p);

  00b70	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00b75	6a 00		 push	 0
  00b77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00b7d	83 c4 08	 add	 esp, 8
  00b80	50		 push	 eax
  00b81	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00b87	83 c4 04	 add	 esp, 4
  00b8a	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv572[ebp], eax
  00b90	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b97	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv572[ebp]
  00b9d	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00ba0	8b 90 e4 00 00
	00		 mov	 edx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00ba6	83 e2 f0	 and	 edx, -16		; fffffff0H
  00ba9	0b d1		 or	 edx, ecx
  00bab	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00bb2	89 90 e4 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228], edx

; 1285 : 		aircraft_database[i].explosive_power                               = IntValue(p);

  00bb8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00bbd	6a 00		 push	 0
  00bbf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00bc5	83 c4 08	 add	 esp, 8
  00bc8	50		 push	 eax
  00bc9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00bcf	83 c4 04	 add	 esp, 4
  00bd2	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv587[ebp], eax
  00bd8	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00bdf	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv587[ebp]
  00be5	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00be8	c1 e1 04	 shl	 ecx, 4
  00beb	8b 90 e4 00 00
	00		 mov	 edx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00bf1	81 e2 0f ff ff
	ff		 and	 edx, -241		; ffffff0fH
  00bf7	0b d1		 or	 edx, ecx
  00bf9	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c00	89 90 e4 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228], edx

; 1286 : 		aircraft_database[i].offensive_capability                          = IntValue(p);

  00c06	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00c0b	6a 00		 push	 0
  00c0d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00c13	83 c4 08	 add	 esp, 8
  00c16	50		 push	 eax
  00c17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00c1d	83 c4 04	 add	 esp, 4
  00c20	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv603[ebp], eax
  00c26	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c2d	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv603[ebp]
  00c33	83 e1 01	 and	 ecx, 1
  00c36	c1 e1 08	 shl	 ecx, 8
  00c39	8b 90 e4 00 00
	00		 mov	 edx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00c3f	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  00c45	0b d1		 or	 edx, ecx
  00c47	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c4e	89 90 e4 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228], edx

; 1287 : //VJ 010604 skip player controlable because of FAA setting in eech.ini, k acts as dummy
; 1288 : 		k = IntValue(p);

  00c54	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00c59	6a 00		 push	 0
  00c5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00c61	83 c4 08	 add	 esp, 8
  00c64	50		 push	 eax
  00c65	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00c6b	83 c4 04	 add	 esp, 4
  00c6e	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax

; 1289 : //		aircraft_database[i].player_controllable                           = IntValue(p);
; 1290 : 		aircraft_database[i].points_value                                  = IntValue(p);

  00c71	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00c76	6a 00		 push	 0
  00c78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00c7e	83 c4 08	 add	 esp, 8
  00c81	50		 push	 eax
  00c82	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00c88	83 c4 04	 add	 esp, 4
  00c8b	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv624[ebp], eax
  00c91	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c98	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv624[ebp]
  00c9e	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00ca4	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00ca7	8b 90 e4 00 00
	00		 mov	 edx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00cad	81 e2 ff 03 c0
	ff		 and	 edx, -4193281		; ffc003ffH
  00cb3	0b d1		 or	 edx, ecx
  00cb5	69 45 f4 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00cbc	89 90 e4 00 00
	00		 mov	 DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228], edx

; 1291 : 
; 1292 : 		fscanf(f,"%[^\n]\n",buf);

  00cc2	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00cc8	50		 push	 eax
  00cc9	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00cce	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00cd1	51		 push	 ecx
  00cd2	e8 00 00 00 00	 call	 _fscanf
  00cd7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1293 : 		TESTDUMP(buf);

  00cda	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  00ce1	74 25		 je	 SHORT $LN30@ReadGWutIn
  00ce3	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00ce9	50		 push	 eax
  00cea	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  00cef	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  00cf2	51		 push	 ecx
  00cf3	e8 00 00 00 00	 call	 _fprintf
  00cf8	83 c4 0c	 add	 esp, 12			; 0000000cH
  00cfb	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  00cfe	50		 push	 eax
  00cff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00d05	83 c4 04	 add	 esp, 4
$LN30@ReadGWutIn:

; 1294 : 	}

  00d08	e9 ce f4 ff ff	 jmp	 $LN29@ReadGWutIn
$LN3@ReadGWutIn:

; 1295 : 
; 1296 : 	// READ [VEHICLES]
; 1297 : 
; 1298 : 	if (READ_HEADER)

  00d0d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  00d14	74 18		 je	 SHORT $LN31@ReadGWutIn

; 1299 : 		fscanf(f,"%[^\n]\n",buf);

  00d16	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00d1c	50		 push	 eax
  00d1d	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00d22	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00d25	51		 push	 ecx
  00d26	e8 00 00 00 00	 call	 _fscanf
  00d2b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN31@ReadGWutIn:

; 1300 : 	TESTDUMP(buf);

  00d2e	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  00d35	74 25		 je	 SHORT $LN32@ReadGWutIn
  00d37	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00d3d	50		 push	 eax
  00d3e	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  00d43	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  00d46	51		 push	 ecx
  00d47	e8 00 00 00 00	 call	 _fprintf
  00d4c	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d4f	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  00d52	50		 push	 eax
  00d53	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00d59	83 c4 04	 add	 esp, 4
$LN32@ReadGWutIn:

; 1301 : 
; 1302 : 	fscanf(f,"%[^\n]\n",buf);

  00d5c	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00d62	50		 push	 eax
  00d63	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  00d68	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  00d6b	51		 push	 ecx
  00d6c	e8 00 00 00 00	 call	 _fscanf
  00d71	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1303 : 	// read first values
; 1304 : 	TESTDUMP(buf);

  00d74	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  00d7b	74 25		 je	 SHORT $LN33@ReadGWutIn
  00d7d	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00d83	50		 push	 eax
  00d84	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  00d89	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  00d8c	51		 push	 ecx
  00d8d	e8 00 00 00 00	 call	 _fprintf
  00d92	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d95	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  00d98	50		 push	 eax
  00d99	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  00d9f	83 c4 04	 add	 esp, 4
$LN33@ReadGWutIn:

; 1305 : 
; 1306 : 	while (!(strcmp(buf,"[WEAPONS]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  00da2	68 00 00 00 00	 push	 OFFSET ??_C@_09ELKCPFM@?$FLWEAPONS?$FN@
  00da7	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00dad	50		 push	 eax
  00dae	e8 00 00 00 00	 call	 _strcmp
  00db3	83 c4 08	 add	 esp, 8
  00db6	85 c0		 test	 eax, eax
  00db8	0f 84 ff 08 00
	00		 je	 $LN5@ReadGWutIn
  00dbe	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  00dc3	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00dc9	50		 push	 eax
  00dca	e8 00 00 00 00	 call	 _strcmp
  00dcf	83 c4 08	 add	 esp, 8
  00dd2	85 c0		 test	 eax, eax
  00dd4	0f 84 e3 08 00
	00		 je	 $LN5@ReadGWutIn

; 1307 : 	{
; 1308 : 		p = strtok(buf,",");

  00dda	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00ddf	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00de5	50		 push	 eax
  00de6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00dec	83 c4 08	 add	 esp, 8
  00def	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1309 : 		i = atoi(p);

  00df5	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  00dfb	50		 push	 eax
  00dfc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00e02	83 c4 04	 add	 esp, 4
  00e05	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1310 : 		//get entity number
; 1311 : 		p = strtok(NULL,",");

  00e08	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e0d	6a 00		 push	 0
  00e0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00e15	83 c4 08	 add	 esp, 8
  00e18	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1312 : 		//skip full name
; 1313 : 
; 1314 : 		vehicle_database[i].force                               = ( entity_forces ) IntValue(p);

  00e1e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e23	6a 00		 push	 0
  00e25	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00e2b	83 c4 08	 add	 esp, 8
  00e2e	50		 push	 eax
  00e2f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00e35	83 c4 04	 add	 esp, 4
  00e38	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00e3f	89 81 14 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+20], eax

; 1315 : 		/*  Don't read weapons configs, the numbers have changed, so will be wrong in GWUT file! */
; 1316 : 		/*vehicle_database[i].default_weapon_config_type          = */IntValue(p);

  00e45	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e4a	6a 00		 push	 0
  00e4c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00e52	83 c4 08	 add	 esp, 8
  00e55	50		 push	 eax
  00e56	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00e5c	83 c4 04	 add	 esp, 4

; 1317 : 		/*vehicle_database[i].min_weapon_config_type              = */IntValue(p);

  00e5f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e64	6a 00		 push	 0
  00e66	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00e6c	83 c4 08	 add	 esp, 8
  00e6f	50		 push	 eax
  00e70	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00e76	83 c4 04	 add	 esp, 4

; 1318 : 		/*vehicle_database[i].max_weapon_config_type              = */IntValue(p);

  00e79	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e7e	6a 00		 push	 0
  00e80	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00e86	83 c4 08	 add	 esp, 8
  00e89	50		 push	 eax
  00e8a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00e90	83 c4 04	 add	 esp, 4

; 1319 : 		/*vehicle_database[i].default_weapon_type                 = */IntValue(p);

  00e93	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00e98	6a 00		 push	 0
  00e9a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00ea0	83 c4 08	 add	 esp, 8
  00ea3	50		 push	 eax
  00ea4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00eaa	83 c4 04	 add	 esp, 4

; 1320 : 		vehicle_database[i].target_type                         = ( target_types ) IntValue(p);

  00ead	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00eb2	6a 00		 push	 0
  00eb4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00eba	83 c4 08	 add	 esp, 8
  00ebd	50		 push	 eax
  00ebe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00ec4	83 c4 04	 add	 esp, 4
  00ec7	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00ece	89 81 28 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+40], eax

; 1321 : 		vehicle_database[i].target_symbol_type                  = ( target_symbol_types ) IntValue(p);

  00ed4	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00ed9	6a 00		 push	 0
  00edb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00ee1	83 c4 08	 add	 esp, 8
  00ee4	50		 push	 eax
  00ee5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00eeb	83 c4 04	 add	 esp, 4
  00eee	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00ef5	89 81 2c 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+44], eax

; 1322 : 		vehicle_database[i].target_priority_type                = ( target_priority_types ) IntValue(p);

  00efb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00f00	6a 00		 push	 0
  00f02	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00f08	83 c4 08	 add	 esp, 8
  00f0b	50		 push	 eax
  00f0c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00f12	83 c4 04	 add	 esp, 4
  00f15	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00f1c	89 81 30 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+48], eax

; 1323 : 		vehicle_database[i].force_info_catagory                 = ( force_info_catagories ) IntValue(p);

  00f22	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00f27	6a 00		 push	 0
  00f29	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00f2f	83 c4 08	 add	 esp, 8
  00f32	50		 push	 eax
  00f33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00f39	83 c4 04	 add	 esp, 4
  00f3c	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00f43	89 81 34 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+52], eax

; 1324 : 		vehicle_database[i].threat_type                         = ( threat_types ) IntValue(p);

  00f49	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00f4e	6a 00		 push	 0
  00f50	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00f56	83 c4 08	 add	 esp, 8
  00f59	50		 push	 eax
  00f5a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00f60	83 c4 04	 add	 esp, 4
  00f63	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00f6a	89 81 38 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+56], eax

; 1325 : 		vehicle_database[i].carries_smoke_grenades              = IntValue(p);

  00f70	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00f75	6a 00		 push	 0
  00f77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00f7d	83 c4 08	 add	 esp, 8
  00f80	50		 push	 eax
  00f81	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  00f87	83 c4 04	 add	 esp, 4
  00f8a	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  00f91	89 81 48 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+72], eax

; 1326 : 		vehicle_database[i].chase_view_min_distance             = FloatValue(p);

  00f97	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00f9c	6a 00		 push	 0
  00f9e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00fa4	83 c4 08	 add	 esp, 8
  00fa7	50		 push	 eax
  00fa8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00fae	83 c4 04	 add	 esp, 4
  00fb1	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4224[ebp]
  00fb7	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4224[ebp]
  00fbd	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00fc4	d9 98 4c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+76]

; 1327 : 		vehicle_database[i].chase_view_max_distance             = FloatValue(p);

  00fca	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  00fcf	6a 00		 push	 0
  00fd1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  00fd7	83 c4 08	 add	 esp, 8
  00fda	50		 push	 eax
  00fdb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  00fe1	83 c4 04	 add	 esp, 4
  00fe4	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4228[ebp]
  00fea	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4228[ebp]
  00ff0	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  00ff7	d9 98 50 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+80]

; 1328 : 		vehicle_database[i].chase_view_min_distance_test        = FloatValue(p);

  00ffd	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01002	6a 00		 push	 0
  01004	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0100a	83 c4 08	 add	 esp, 8
  0100d	50		 push	 eax
  0100e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01014	83 c4 04	 add	 esp, 4
  01017	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4232[ebp]
  0101d	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4232[ebp]
  01023	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0102a	d9 98 54 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+84]

; 1329 : 		vehicle_database[i].chase_view_max_distance_test        = FloatValue(p);

  01030	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01035	6a 00		 push	 0
  01037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0103d	83 c4 08	 add	 esp, 8
  01040	50		 push	 eax
  01041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01047	83 c4 04	 add	 esp, 4
  0104a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4236[ebp]
  01050	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4236[ebp]
  01056	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0105d	d9 98 58 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+88]

; 1330 : 		vehicle_database[i].cruise_velocity                     = FloatValue(p);

  01063	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01068	6a 00		 push	 0
  0106a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01070	83 c4 08	 add	 esp, 8
  01073	50		 push	 eax
  01074	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0107a	83 c4 04	 add	 esp, 4
  0107d	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4240[ebp]
  01083	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4240[ebp]
  01089	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01090	d9 98 5c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+92]

; 1331 : 		vehicle_database[i].axle_length                         = FloatValue(p);

  01096	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0109b	6a 00		 push	 0
  0109d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  010a3	83 c4 08	 add	 esp, 8
  010a6	50		 push	 eax
  010a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  010ad	83 c4 04	 add	 esp, 4
  010b0	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4244[ebp]
  010b6	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4244[ebp]
  010bc	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  010c3	d9 98 60 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+96]

; 1332 : 		vehicle_database[i].max_acceleration                    = FloatValue(p);

  010c9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  010ce	6a 00		 push	 0
  010d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  010d6	83 c4 08	 add	 esp, 8
  010d9	50		 push	 eax
  010da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  010e0	83 c4 04	 add	 esp, 4
  010e3	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4248[ebp]
  010e9	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4248[ebp]
  010ef	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  010f6	d9 98 64 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+100]

; 1333 : 		vehicle_database[i].max_turn_rate                       = rad (FloatValue(p));

  010fc	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01101	6a 00		 push	 0
  01103	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01109	83 c4 08	 add	 esp, 8
  0110c	50		 push	 eax
  0110d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01113	83 c4 04	 add	 esp, 4
  01116	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4252[ebp]
  0111c	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4252[ebp]
  01124	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  0112c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01130	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01137	f3 0f 11 80 68
	00 00 00	 movss	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+104], xmm0

; 1334 : 		vehicle_database[i].g_max                               = FloatValue(p);

  0113f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01144	6a 00		 push	 0
  01146	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0114c	83 c4 08	 add	 esp, 8
  0114f	50		 push	 eax
  01150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01156	83 c4 04	 add	 esp, 4
  01159	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4257[ebp]
  0115f	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4257[ebp]
  01165	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0116c	d9 98 6c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+108]

; 1335 : 		vehicle_database[i].power_output                        = FloatValue(p);

  01172	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01177	6a 00		 push	 0
  01179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0117f	83 c4 08	 add	 esp, 8
  01182	50		 push	 eax
  01183	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01189	83 c4 04	 add	 esp, 4
  0118c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4261[ebp]
  01192	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4261[ebp]
  01198	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0119f	d9 98 70 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+112]

; 1336 : 		vehicle_database[i].recon_radius                        = FloatValue(p);

  011a5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  011aa	6a 00		 push	 0
  011ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  011b2	83 c4 08	 add	 esp, 8
  011b5	50		 push	 eax
  011b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  011bc	83 c4 04	 add	 esp, 4
  011bf	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4265[ebp]
  011c5	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4265[ebp]
  011cb	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  011d2	d9 98 74 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+116]

; 1337 : 		vehicle_database[i].target_scan_delay                   = FloatValue(p);

  011d8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  011dd	6a 00		 push	 0
  011df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  011e5	83 c4 08	 add	 esp, 8
  011e8	50		 push	 eax
  011e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  011ef	83 c4 04	 add	 esp, 4
  011f2	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4269[ebp]
  011f8	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4269[ebp]
  011fe	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01205	d9 98 78 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+120]

; 1338 : 		vehicle_database[i].air_scan_floor                      = FloatValue(p);

  0120b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01210	6a 00		 push	 0
  01212	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01218	83 c4 08	 add	 esp, 8
  0121b	50		 push	 eax
  0121c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01222	83 c4 04	 add	 esp, 4
  01225	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4273[ebp]
  0122b	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4273[ebp]
  01231	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01238	d9 98 7c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+124]

; 1339 : 		vehicle_database[i].air_scan_ceiling                    = FloatValue(p);

  0123e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01243	6a 00		 push	 0
  01245	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0124b	83 c4 08	 add	 esp, 8
  0124e	50		 push	 eax
  0124f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01255	83 c4 04	 add	 esp, 4
  01258	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4277[ebp]
  0125e	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4277[ebp]
  01264	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0126b	d9 98 80 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+128]

; 1340 : 		vehicle_database[i].air_scan_range                      = FloatValue(p);

  01271	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01276	6a 00		 push	 0
  01278	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0127e	83 c4 08	 add	 esp, 8
  01281	50		 push	 eax
  01282	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01288	83 c4 04	 add	 esp, 4
  0128b	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4281[ebp]
  01291	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4281[ebp]
  01297	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0129e	d9 98 84 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+132]

; 1341 : 		vehicle_database[i].surface_scan_range                  = FloatValue(p);

  012a4	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  012a9	6a 00		 push	 0
  012ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  012b1	83 c4 08	 add	 esp, 8
  012b4	50		 push	 eax
  012b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  012bb	83 c4 04	 add	 esp, 4
  012be	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4285[ebp]
  012c4	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4285[ebp]
  012ca	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  012d1	d9 98 88 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+136]

; 1342 : 		vehicle_database[i].potential_surface_to_air_threat     = FloatValue(p);

  012d7	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  012dc	6a 00		 push	 0
  012de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  012e4	83 c4 08	 add	 esp, 8
  012e7	50		 push	 eax
  012e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  012ee	83 c4 04	 add	 esp, 4
  012f1	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4289[ebp]
  012f7	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4289[ebp]
  012fd	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01304	d9 98 8c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+140]

; 1343 : 		vehicle_database[i].potential_surface_to_surface_threat = FloatValue(p);

  0130a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0130f	6a 00		 push	 0
  01311	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01317	83 c4 08	 add	 esp, 8
  0131a	50		 push	 eax
  0131b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01321	83 c4 04	 add	 esp, 4
  01324	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4293[ebp]
  0132a	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4293[ebp]
  01330	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01337	d9 98 90 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+144]

; 1344 : 		vehicle_database[i].ammo_economy                        = FloatValue(p);

  0133d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01342	6a 00		 push	 0
  01344	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0134a	83 c4 08	 add	 esp, 8
  0134d	50		 push	 eax
  0134e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01354	83 c4 04	 add	 esp, 4
  01357	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4297[ebp]
  0135d	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4297[ebp]
  01363	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0136a	d9 98 94 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+148]

; 1345 : 		vehicle_database[i].fuel_economy                        = FloatValue(p);

  01370	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01375	6a 00		 push	 0
  01377	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0137d	83 c4 08	 add	 esp, 8
  01380	50		 push	 eax
  01381	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01387	83 c4 04	 add	 esp, 4
  0138a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4301[ebp]
  01390	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4301[ebp]
  01396	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0139d	d9 98 98 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+152]

; 1346 : 		vehicle_database[i].armour_front                        = FloatValue(p);

  013a3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  013a8	6a 00		 push	 0
  013aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  013b0	83 c4 08	 add	 esp, 8
  013b3	50		 push	 eax
  013b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  013ba	83 c4 04	 add	 esp, 4
  013bd	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4305[ebp]
  013c3	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4305[ebp]
  013c9	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  013d0	d9 98 9c 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+156]

; 1347 : 		vehicle_database[i].armour_side                         = FloatValue(p);

  013d6	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  013db	6a 00		 push	 0
  013dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  013e3	83 c4 08	 add	 esp, 8
  013e6	50		 push	 eax
  013e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  013ed	83 c4 04	 add	 esp, 4
  013f0	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4309[ebp]
  013f6	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4309[ebp]
  013fc	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01403	d9 98 a0 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+160]

; 1348 : 		vehicle_database[i].armour_rear                         = FloatValue(p);

  01409	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0140e	6a 00		 push	 0
  01410	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01416	83 c4 08	 add	 esp, 8
  01419	50		 push	 eax
  0141a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01420	83 c4 04	 add	 esp, 4
  01423	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4313[ebp]
  01429	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4313[ebp]
  0142f	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01436	d9 98 a4 00 00
	00		 fstp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+164]

; 1349 : 		vehicle_database[i].initial_damage_level                = IntValue(p);

  0143c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01441	6a 00		 push	 0
  01443	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01449	83 c4 08	 add	 esp, 8
  0144c	50		 push	 eax
  0144d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01453	83 c4 04	 add	 esp, 4
  01456	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  0145d	89 81 a8 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+168], eax

; 1350 : 		j = IntValue(p); k = BinToInt(j);

  01463	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01468	6a 00		 push	 0
  0146a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01470	83 c4 08	 add	 esp, 8
  01473	50		 push	 eax
  01474	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0147a	83 c4 04	 add	 esp, 4
  0147d	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01480	83 7d f0 00	 cmp	 DWORD PTR _j$[ebp], 0
  01484	75 0c		 jne	 SHORT $LN95@ReadGWutIn
  01486	c7 85 9c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv975[ebp], 0
  01490	eb 66		 jmp	 SHORT $LN96@ReadGWutIn
$LN95@ReadGWutIn:
  01492	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR _j$[ebp]
  01497	83 ec 08	 sub	 esp, 8
  0149a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  014a2	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  014a7	f2 0f 11 85 94
	f6 ff ff	 movsd	 QWORD PTR tv5457[ebp], xmm0
  014af	e8 00 00 00 00	 call	 _log
  014b4	83 c4 08	 add	 esp, 8
  014b7	dd 9d 8c f6 ff
	ff		 fstp	 QWORD PTR tv4322[ebp]
  014bd	f2 0f 10 85 94
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv5457[ebp]
  014c5	f2 0f 59 85 8c
	f6 ff ff	 mulsd	 xmm0, QWORD PTR tv4322[ebp]
  014cd	83 ec 08	 sub	 esp, 8
  014d0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  014d5	e8 00 00 00 00	 call	 _exp
  014da	83 c4 08	 add	 esp, 8
  014dd	dd 9d 84 f6 ff
	ff		 fstp	 QWORD PTR tv4327[ebp]
  014e3	f2 0f 10 85 84
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4327[ebp]
  014eb	f2 0f 2c c0	 cvttsd2si eax, xmm0
  014ef	83 c0 01	 add	 eax, 1
  014f2	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv975[ebp], eax
$LN96@ReadGWutIn:
  014f8	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv975[ebp]
  014fe	89 4d ec	 mov	 DWORD PTR _k$[ebp], ecx

; 1351 : 		if (testdump) fprintf(fout,"%d %d\n",vehicle_database[i].warhead_effective_class, k);

  01501	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  01508	74 23		 je	 SHORT $LN34@ReadGWutIn
  0150a	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  0150d	50		 push	 eax
  0150e	69 4d f4 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  01515	8b 91 ac 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+172]
  0151b	52		 push	 edx
  0151c	68 00 00 00 00	 push	 OFFSET ??_C@_06IPGPIAII@?$CFd?5?$CFd?6@
  01521	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  01524	50		 push	 eax
  01525	e8 00 00 00 00	 call	 _fprintf
  0152a	83 c4 10	 add	 esp, 16			; 00000010H
$LN34@ReadGWutIn:

; 1352 : 		vehicle_database[i].warhead_effective_class             = k;

  0152d	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01534	8b 4d ec	 mov	 ecx, DWORD PTR _k$[ebp]
  01537	89 88 ac 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+172], ecx

; 1353 : 		vehicle_database[i].explosive_quality                   = IntValue(p);

  0153d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01542	6a 00		 push	 0
  01544	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0154a	83 c4 08	 add	 esp, 8
  0154d	50		 push	 eax
  0154e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01554	83 c4 04	 add	 esp, 4
  01557	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv995[ebp], eax
  0155d	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01564	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv995[ebp]
  0156a	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0156d	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  01573	83 e2 f0	 and	 edx, -16		; fffffff0H
  01576	0b d1		 or	 edx, ecx
  01578	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0157f	89 90 b0 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176], edx

; 1354 : 		vehicle_database[i].explosive_power                     = IntValue(p);

  01585	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0158a	6a 00		 push	 0
  0158c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01592	83 c4 08	 add	 esp, 8
  01595	50		 push	 eax
  01596	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0159c	83 c4 04	 add	 esp, 4
  0159f	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1010[ebp], eax
  015a5	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  015ac	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1010[ebp]
  015b2	83 e1 0f	 and	 ecx, 15			; 0000000fH
  015b5	c1 e1 04	 shl	 ecx, 4
  015b8	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  015be	81 e2 0f ff ff
	ff		 and	 edx, -241		; ffffff0fH
  015c4	0b d1		 or	 edx, ecx
  015c6	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  015cd	89 90 b0 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176], edx

; 1355 : 		vehicle_database[i].offensive_capability                = IntValue(p);

  015d3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  015d8	6a 00		 push	 0
  015da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  015e0	83 c4 08	 add	 esp, 8
  015e3	50		 push	 eax
  015e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  015ea	83 c4 04	 add	 esp, 4
  015ed	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1026[ebp], eax
  015f3	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  015fa	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1026[ebp]
  01600	83 e1 01	 and	 ecx, 1
  01603	c1 e1 08	 shl	 ecx, 8
  01606	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  0160c	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  01612	0b d1		 or	 edx, ecx
  01614	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0161b	89 90 b0 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176], edx

; 1356 : 		vehicle_database[i].points_value                        = IntValue(p);

  01621	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01626	6a 00		 push	 0
  01628	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0162e	83 c4 08	 add	 esp, 8
  01631	50		 push	 eax
  01632	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01638	83 c4 04	 add	 esp, 4
  0163b	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1042[ebp], eax
  01641	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01648	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1042[ebp]
  0164e	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  01654	c1 e1 09	 shl	 ecx, 9
  01657	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  0165d	81 e2 ff 01 e0
	ff		 and	 edx, -2096641		; ffe001ffH
  01663	0b d1		 or	 edx, ecx
  01665	69 45 f4 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0166c	89 90 b0 00 00
	00		 mov	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176], edx

; 1357 : 
; 1358 : 		fscanf(f,"%[^\n]\n",buf);

  01672	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01678	50		 push	 eax
  01679	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0167e	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  01681	51		 push	 ecx
  01682	e8 00 00 00 00	 call	 _fscanf
  01687	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1359 : 		TESTDUMP(buf);

  0168a	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  01691	74 25		 je	 SHORT $LN35@ReadGWutIn
  01693	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01699	50		 push	 eax
  0169a	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0169f	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  016a2	51		 push	 ecx
  016a3	e8 00 00 00 00	 call	 _fprintf
  016a8	83 c4 0c	 add	 esp, 12			; 0000000cH
  016ab	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  016ae	50		 push	 eax
  016af	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  016b5	83 c4 04	 add	 esp, 4
$LN35@ReadGWutIn:

; 1360 : 
; 1361 : 	}

  016b8	e9 e5 f6 ff ff	 jmp	 $LN33@ReadGWutIn
$LN5@ReadGWutIn:

; 1362 : 
; 1363 : 	//read WEAPONS
; 1364 : 
; 1365 : 	if (READ_HEADER)

  016bd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  016c4	74 18		 je	 SHORT $LN36@ReadGWutIn

; 1366 : 		fscanf(f,"%[^\n]\n",buf);

  016c6	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  016cc	50		 push	 eax
  016cd	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  016d2	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  016d5	51		 push	 ecx
  016d6	e8 00 00 00 00	 call	 _fscanf
  016db	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN36@ReadGWutIn:

; 1367 : 	TESTDUMP(buf);

  016de	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  016e5	74 25		 je	 SHORT $LN37@ReadGWutIn
  016e7	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  016ed	50		 push	 eax
  016ee	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  016f3	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  016f6	51		 push	 ecx
  016f7	e8 00 00 00 00	 call	 _fprintf
  016fc	83 c4 0c	 add	 esp, 12			; 0000000cH
  016ff	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  01702	50		 push	 eax
  01703	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  01709	83 c4 04	 add	 esp, 4
$LN37@ReadGWutIn:

; 1368 : 
; 1369 : 	fscanf(f,"%[^\n]\n",buf);

  0170c	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01712	50		 push	 eax
  01713	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  01718	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0171b	51		 push	 ecx
  0171c	e8 00 00 00 00	 call	 _fscanf
  01721	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1370 : 	// read first values
; 1371 : 	TESTDUMP(buf);

  01724	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0172b	74 25		 je	 SHORT $LN38@ReadGWutIn
  0172d	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01733	50		 push	 eax
  01734	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  01739	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0173c	51		 push	 ecx
  0173d	e8 00 00 00 00	 call	 _fprintf
  01742	83 c4 0c	 add	 esp, 12			; 0000000cH
  01745	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  01748	50		 push	 eax
  01749	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  0174f	83 c4 04	 add	 esp, 4
$LN38@ReadGWutIn:

; 1372 : 
; 1373 : 	while (!(strcmp(buf,"[KEYSITES]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  01752	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ENANJMPL@?$FLKEYSITES?$FN@
  01757	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0175d	50		 push	 eax
  0175e	e8 00 00 00 00	 call	 _strcmp
  01763	83 c4 08	 add	 esp, 8
  01766	85 c0		 test	 eax, eax
  01768	0f 84 d6 09 00
	00		 je	 $LN7@ReadGWutIn
  0176e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  01773	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01779	50		 push	 eax
  0177a	e8 00 00 00 00	 call	 _strcmp
  0177f	83 c4 08	 add	 esp, 8
  01782	85 c0		 test	 eax, eax
  01784	0f 84 ba 09 00
	00		 je	 $LN7@ReadGWutIn

; 1374 : 	{
; 1375 : 		p = strtok(buf,",");

  0178a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0178f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  01795	50		 push	 eax
  01796	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0179c	83 c4 08	 add	 esp, 8
  0179f	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1376 : 		i = atoi(p);

  017a5	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  017ab	50		 push	 eax
  017ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  017b2	83 c4 04	 add	 esp, 4
  017b5	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1377 : 		//get entity number
; 1378 : 		p = strtok(NULL,",");

  017b8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  017bd	6a 00		 push	 0
  017bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  017c5	83 c4 08	 add	 esp, 8
  017c8	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1379 : 		//skip full name
; 1380 : 
; 1381 : 		weapon_database[i].guidance_type                   = ( weapon_guidance_types ) IntValue(p);

  017ce	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  017d3	6a 00		 push	 0
  017d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  017db	83 c4 08	 add	 esp, 8
  017de	50		 push	 eax
  017df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  017e5	83 c4 04	 add	 esp, 4
  017e8	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  017ef	89 81 18 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+24], eax

; 1382 : 		weapon_database[i].aiming_type                     = ( weapon_aiming_types ) IntValue(p);

  017f5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  017fa	6a 00		 push	 0
  017fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01802	83 c4 08	 add	 esp, 8
  01805	50		 push	 eax
  01806	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0180c	83 c4 04	 add	 esp, 4
  0180f	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01816	89 81 1c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+28], eax

; 1383 : 		weapon_database[i].decoy_type                      = ( weapon_decoy_types ) IntValue(p);

  0181c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01821	6a 00		 push	 0
  01823	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01829	83 c4 08	 add	 esp, 8
  0182c	50		 push	 eax
  0182d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01833	83 c4 04	 add	 esp, 4
  01836	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  0183d	89 81 20 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+32], eax

; 1384 : 		weapon_database[i].warhead_type                    = ( weapon_warhead_types ) IntValue(p);

  01843	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01848	6a 00		 push	 0
  0184a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01850	83 c4 08	 add	 esp, 8
  01853	50		 push	 eax
  01854	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0185a	83 c4 04	 add	 esp, 4
  0185d	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01864	89 81 24 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+36], eax

; 1385 : 		weapon_database[i].threat_type                     = ( threat_types ) IntValue(p);

  0186a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0186f	6a 00		 push	 0
  01871	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01877	83 c4 08	 add	 esp, 8
  0187a	50		 push	 eax
  0187b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01881	83 c4 04	 add	 esp, 4
  01884	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  0188b	89 81 28 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+40], eax

; 1386 : 		weapon_database[i].report_ammo_low_count           = IntValue(p);

  01891	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01896	6a 00		 push	 0
  01898	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0189e	83 c4 08	 add	 esp, 8
  018a1	50		 push	 eax
  018a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  018a8	83 c4 04	 add	 esp, 4
  018ab	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  018b2	89 81 50 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+80], eax

; 1387 : 		weapon_database[i].gun_shake                       = IntValue(p);

  018b8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  018bd	6a 00		 push	 0
  018bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  018c5	83 c4 08	 add	 esp, 8
  018c8	50		 push	 eax
  018c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  018cf	83 c4 04	 add	 esp, 4
  018d2	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  018d9	89 81 54 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+84], eax

; 1388 : 		weapon_database[i].soft_damage_capability          = IntValue(p);

  018df	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  018e4	6a 00		 push	 0
  018e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  018ec	83 c4 08	 add	 esp, 8
  018ef	50		 push	 eax
  018f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  018f6	83 c4 04	 add	 esp, 4
  018f9	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01900	89 81 58 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+88], eax

; 1389 : 		weapon_database[i].hard_damage_capability          = IntValue(p);

  01906	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0190b	6a 00		 push	 0
  0190d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01913	83 c4 08	 add	 esp, 8
  01916	50		 push	 eax
  01917	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0191d	83 c4 04	 add	 esp, 4
  01920	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01927	89 81 5c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+92], eax

; 1390 : 		weapon_database[i].smoke_trail_type                = IntValue(p);

  0192d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01932	6a 00		 push	 0
  01934	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0193a	83 c4 08	 add	 esp, 8
  0193d	50		 push	 eax
  0193e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01944	83 c4 04	 add	 esp, 4
  01947	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  0194e	89 81 60 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+96], eax

; 1391 : 		weapon_database[i].acquire_parent_forward_velocity = IntValue(p);

  01954	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01959	6a 00		 push	 0
  0195b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01961	83 c4 08	 add	 esp, 8
  01964	50		 push	 eax
  01965	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0196b	83 c4 04	 add	 esp, 4
  0196e	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01975	89 81 64 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+100], eax

; 1392 : 		weapon_database[i].ignore_gravity                  = IntValue(p);

  0197b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01980	6a 00		 push	 0
  01982	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01988	83 c4 08	 add	 esp, 8
  0198b	50		 push	 eax
  0198c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01992	83 c4 04	 add	 esp, 4
  01995	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  0199c	89 81 68 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+104], eax

; 1393 : 		weapon_database[i].survive_ground_impact           = IntValue(p);

  019a2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  019a7	6a 00		 push	 0
  019a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  019af	83 c4 08	 add	 esp, 8
  019b2	50		 push	 eax
  019b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  019b9	83 c4 04	 add	 esp, 4
  019bc	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  019c3	89 81 6c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+108], eax

; 1394 : 		weapon_database[i].in_flight_collision_check       = IntValue(p);

  019c9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  019ce	6a 00		 push	 0
  019d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  019d6	83 c4 08	 add	 esp, 8
  019d9	50		 push	 eax
  019da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  019e0	83 c4 04	 add	 esp, 4
  019e3	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  019ea	89 81 70 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+112], eax

; 1395 : 		weapon_database[i].viewable_weapon                 = IntValue(p);

  019f0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  019f5	6a 00		 push	 0
  019f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  019fd	83 c4 08	 add	 esp, 8
  01a00	50		 push	 eax
  01a01	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01a07	83 c4 04	 add	 esp, 4
  01a0a	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01a11	89 81 74 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+116], eax

; 1396 : 		weapon_database[i].boresight_weapon                = IntValue(p);

  01a17	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01a1c	6a 00		 push	 0
  01a1e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01a24	83 c4 08	 add	 esp, 8
  01a27	50		 push	 eax
  01a28	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01a2e	83 c4 04	 add	 esp, 4
  01a31	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01a38	89 81 78 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+120], eax

; 1397 : 		weapon_database[i].hellfire_flight_profile         = IntValue(p);

  01a3e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01a43	6a 00		 push	 0
  01a45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01a4b	83 c4 08	 add	 esp, 8
  01a4e	50		 push	 eax
  01a4f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01a55	83 c4 04	 add	 esp, 4
  01a58	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01a5f	89 81 7c 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+124], eax

; 1398 : 		k = 0;

  01a65	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0

; 1399 : 		j = IntValue(p); if (j == 1) k = 1;

  01a6c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01a71	6a 00		 push	 0
  01a73	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01a79	83 c4 08	 add	 esp, 8
  01a7c	50		 push	 eax
  01a7d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01a83	83 c4 04	 add	 esp, 4
  01a86	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01a89	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01a8d	75 07		 jne	 SHORT $LN39@ReadGWutIn
  01a8f	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _k$[ebp], 1
$LN39@ReadGWutIn:

; 1400 : 		j = IntValue(p); if (j == 1) k = k | 2;

  01a96	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01a9b	6a 00		 push	 0
  01a9d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01aa3	83 c4 08	 add	 esp, 8
  01aa6	50		 push	 eax
  01aa7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01aad	83 c4 04	 add	 esp, 4
  01ab0	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01ab3	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01ab7	75 09		 jne	 SHORT $LN40@ReadGWutIn
  01ab9	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01abc	83 c8 02	 or	 eax, 2
  01abf	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN40@ReadGWutIn:

; 1401 : 		j = IntValue(p); if (j == 1) k = k | 4;

  01ac2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01ac7	6a 00		 push	 0
  01ac9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01acf	83 c4 08	 add	 esp, 8
  01ad2	50		 push	 eax
  01ad3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01ad9	83 c4 04	 add	 esp, 4
  01adc	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01adf	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01ae3	75 09		 jne	 SHORT $LN41@ReadGWutIn
  01ae5	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01ae8	83 c8 04	 or	 eax, 4
  01aeb	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN41@ReadGWutIn:

; 1402 : 		j = IntValue(p); if (j == 1) k = k | 8;

  01aee	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01af3	6a 00		 push	 0
  01af5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01afb	83 c4 08	 add	 esp, 8
  01afe	50		 push	 eax
  01aff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01b05	83 c4 04	 add	 esp, 4
  01b08	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01b0b	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01b0f	75 09		 jne	 SHORT $LN42@ReadGWutIn
  01b11	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01b14	83 c8 08	 or	 eax, 8
  01b17	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN42@ReadGWutIn:

; 1403 : 		j = IntValue(p); if (j == 1) k = k | 16;

  01b1a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01b1f	6a 00		 push	 0
  01b21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01b27	83 c4 08	 add	 esp, 8
  01b2a	50		 push	 eax
  01b2b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01b31	83 c4 04	 add	 esp, 4
  01b34	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01b37	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01b3b	75 09		 jne	 SHORT $LN43@ReadGWutIn
  01b3d	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01b40	83 c8 10	 or	 eax, 16			; 00000010H
  01b43	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN43@ReadGWutIn:

; 1404 : 		j = IntValue(p); if (j == 1) k = k | 32;

  01b46	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01b4b	6a 00		 push	 0
  01b4d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01b53	83 c4 08	 add	 esp, 8
  01b56	50		 push	 eax
  01b57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01b5d	83 c4 04	 add	 esp, 4
  01b60	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01b63	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01b67	75 09		 jne	 SHORT $LN44@ReadGWutIn
  01b69	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01b6c	83 c8 20	 or	 eax, 32			; 00000020H
  01b6f	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN44@ReadGWutIn:

; 1405 : 		j = IntValue(p); if (j == 1) k = k | 64;

  01b72	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01b77	6a 00		 push	 0
  01b79	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01b7f	83 c4 08	 add	 esp, 8
  01b82	50		 push	 eax
  01b83	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  01b89	83 c4 04	 add	 esp, 4
  01b8c	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  01b8f	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  01b93	75 09		 jne	 SHORT $LN45@ReadGWutIn
  01b95	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  01b98	83 c8 40	 or	 eax, 64			; 00000040H
  01b9b	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN45@ReadGWutIn:

; 1406 : //    fprintf(fout,"%d %d\n",weapon_database[i].weapon_class, k);
; 1407 : 		weapon_database[i].weapon_class = k;

  01b9e	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ba5	8b 4d ec	 mov	 ecx, DWORD PTR _k$[ebp]
  01ba8	89 88 84 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132], ecx

; 1408 : 		weapon_database[i].weight                    = FloatValue(p);

  01bae	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01bb3	6a 00		 push	 0
  01bb5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01bbb	83 c4 08	 add	 esp, 8
  01bbe	50		 push	 eax
  01bbf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01bc5	83 c4 04	 add	 esp, 4
  01bc8	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4436[ebp]
  01bce	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4436[ebp]
  01bd4	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01bdb	d9 98 88 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+136]

; 1409 : 		weapon_database[i].min_range                 = FloatValue(p);

  01be1	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01be6	6a 00		 push	 0
  01be8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01bee	83 c4 08	 add	 esp, 8
  01bf1	50		 push	 eax
  01bf2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01bf8	83 c4 04	 add	 esp, 4
  01bfb	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4440[ebp]
  01c01	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4440[ebp]
  01c07	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c0e	d9 98 8c 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140]

; 1410 : 		weapon_database[i].max_range                 = FloatValue(p);

  01c14	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01c19	6a 00		 push	 0
  01c1b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01c21	83 c4 08	 add	 esp, 8
  01c24	50		 push	 eax
  01c25	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01c2b	83 c4 04	 add	 esp, 4
  01c2e	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4444[ebp]
  01c34	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4444[ebp]
  01c3a	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c41	d9 98 90 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]

; 1411 : 		weapon_database[i].effective_range           = FloatValue(p);

  01c47	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01c4c	6a 00		 push	 0
  01c4e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01c54	83 c4 08	 add	 esp, 8
  01c57	50		 push	 eax
  01c58	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01c5e	83 c4 04	 add	 esp, 4
  01c61	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4448[ebp]
  01c67	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4448[ebp]
  01c6d	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c74	d9 98 94 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+148]

; 1412 : 		weapon_database[i].min_range_loal            = FloatValue(p);

  01c7a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01c7f	6a 00		 push	 0
  01c81	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01c87	83 c4 08	 add	 esp, 8
  01c8a	50		 push	 eax
  01c8b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01c91	83 c4 04	 add	 esp, 4
  01c94	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4452[ebp]
  01c9a	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4452[ebp]
  01ca0	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ca7	d9 98 98 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+152]

; 1413 : 		weapon_database[i].max_range_loal            = FloatValue(p);

  01cad	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01cb2	6a 00		 push	 0
  01cb4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01cba	83 c4 08	 add	 esp, 8
  01cbd	50		 push	 eax
  01cbe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01cc4	83 c4 04	 add	 esp, 4
  01cc7	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4456[ebp]
  01ccd	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4456[ebp]
  01cd3	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01cda	d9 98 9c 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+156]

; 1414 : 		weapon_database[i].max_range_error_ratio     = FloatValue(p);

  01ce0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01ce5	6a 00		 push	 0
  01ce7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01ced	83 c4 08	 add	 esp, 8
  01cf0	50		 push	 eax
  01cf1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01cf7	83 c4 04	 add	 esp, 4
  01cfa	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4460[ebp]
  01d00	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4460[ebp]
  01d06	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d0d	d9 98 a0 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+160]

; 1415 : 		weapon_database[i].muzzle_velocity           = FloatValue(p);

  01d13	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01d18	6a 00		 push	 0
  01d1a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01d20	83 c4 08	 add	 esp, 8
  01d23	50		 push	 eax
  01d24	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01d2a	83 c4 04	 add	 esp, 4
  01d2d	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4464[ebp]
  01d33	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4464[ebp]
  01d39	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d40	d9 98 a4 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+164]

; 1416 : 		weapon_database[i].muzzle_velocity_max_error = FloatValue(p);

  01d46	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01d4b	6a 00		 push	 0
  01d4d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01d53	83 c4 08	 add	 esp, 8
  01d56	50		 push	 eax
  01d57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01d5d	83 c4 04	 add	 esp, 4
  01d60	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4468[ebp]
  01d66	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4468[ebp]
  01d6c	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d73	d9 98 a8 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+168]

; 1417 : 		weapon_database[i].cruise_velocity           = FloatValue(p);

  01d79	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01d7e	6a 00		 push	 0
  01d80	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01d86	83 c4 08	 add	 esp, 8
  01d89	50		 push	 eax
  01d8a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01d90	83 c4 04	 add	 esp, 4
  01d93	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4472[ebp]
  01d99	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4472[ebp]
  01d9f	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01da6	d9 98 ac 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172]

; 1418 : 		weapon_database[i].g_max                     = FloatValue(p);

  01dac	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01db1	6a 00		 push	 0
  01db3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01db9	83 c4 08	 add	 esp, 8
  01dbc	50		 push	 eax
  01dbd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01dc3	83 c4 04	 add	 esp, 4
  01dc6	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4476[ebp]
  01dcc	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4476[ebp]
  01dd2	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01dd9	d9 98 b0 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+176]

; 1419 : 		weapon_database[i].burn_time                 = FloatValue(p);

  01ddf	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01de4	6a 00		 push	 0
  01de6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01dec	83 c4 08	 add	 esp, 8
  01def	50		 push	 eax
  01df0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01df6	83 c4 04	 add	 esp, 4
  01df9	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4480[ebp]
  01dff	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4480[ebp]
  01e05	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e0c	d9 98 b4 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+180]

; 1420 : 		weapon_database[i].cruise_time               = FloatValue(p);

  01e12	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01e17	6a 00		 push	 0
  01e19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01e1f	83 c4 08	 add	 esp, 8
  01e22	50		 push	 eax
  01e23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01e29	83 c4 04	 add	 esp, 4
  01e2c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4484[ebp]
  01e32	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4484[ebp]
  01e38	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e3f	d9 98 b8 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+184]

; 1421 : 		weapon_database[i].cruise_time_max_error     = FloatValue(p);

  01e45	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01e4a	6a 00		 push	 0
  01e4c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01e52	83 c4 08	 add	 esp, 8
  01e55	50		 push	 eax
  01e56	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01e5c	83 c4 04	 add	 esp, 4
  01e5f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4488[ebp]
  01e65	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4488[ebp]
  01e6b	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e72	d9 98 bc 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+188]

; 1422 : 		weapon_database[i].inhibit_time              = FloatValue(p);

  01e78	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01e7d	6a 00		 push	 0
  01e7f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01e85	83 c4 08	 add	 esp, 8
  01e88	50		 push	 eax
  01e89	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01e8f	83 c4 04	 add	 esp, 4
  01e92	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4492[ebp]
  01e98	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4492[ebp]
  01e9e	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ea5	d9 98 c0 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+192]

; 1423 : 		weapon_database[i].burst_duration            = FloatValue(p);

  01eab	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01eb0	6a 00		 push	 0
  01eb2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01eb8	83 c4 08	 add	 esp, 8
  01ebb	50		 push	 eax
  01ebc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01ec2	83 c4 04	 add	 esp, 4
  01ec5	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4496[ebp]
  01ecb	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4496[ebp]
  01ed1	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ed8	d9 98 c4 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+196]

; 1424 : 		weapon_database[i].rate_of_fire              = FloatValue(p);

  01ede	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01ee3	6a 00		 push	 0
  01ee5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01eeb	83 c4 08	 add	 esp, 8
  01eee	50		 push	 eax
  01eef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01ef5	83 c4 04	 add	 esp, 4
  01ef8	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4500[ebp]
  01efe	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4500[ebp]
  01f04	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01f0b	d9 98 c8 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+200]

; 1425 : 		weapon_database[i].inverse_rate_of_fire		 = (weapon_database[i].rate_of_fire > 0.0) ? (1.0 / weapon_database[i].rate_of_fire) : 0.01;

  01f11	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01f18	f3 0f 5a 80 c8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+200]
  01f20	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  01f28	76 25		 jbe	 SHORT $LN97@ReadGWutIn
  01f2a	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  01f31	f3 0f 5a 81 c8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+200]
  01f39	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  01f41	f2 0f 5e c8	 divsd	 xmm1, xmm0
  01f45	f2 0f 11 8d 98
	f6 ff ff	 movsd	 QWORD PTR tv1444[ebp], xmm1
  01f4d	eb 10		 jmp	 SHORT $LN98@ReadGWutIn
$LN97@ReadGWutIn:
  01f4f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  01f57	f2 0f 11 85 98
	f6 ff ff	 movsd	 QWORD PTR tv1444[ebp], xmm0
$LN98@ReadGWutIn:
  01f5f	f2 0f 5a 85 98
	f6 ff ff	 cvtsd2ss xmm0, QWORD PTR tv1444[ebp]
  01f67	69 55 f4 e0 00
	00 00		 imul	 edx, DWORD PTR _i$[ebp], 224
  01f6e	f3 0f 11 82 dc
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[edx+220], xmm0

; 1426 : 		weapon_database[i].reload_time               = FloatValue(p);

  01f76	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01f7b	6a 00		 push	 0
  01f7d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01f83	83 c4 08	 add	 esp, 8
  01f86	50		 push	 eax
  01f87	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01f8d	83 c4 04	 add	 esp, 4
  01f90	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4506[ebp]
  01f96	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4506[ebp]
  01f9c	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01fa3	d9 98 cc 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+204]

; 1427 : 		weapon_database[i].max_launch_angle_error    = rad(FloatValue(p));

  01fa9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  01fae	6a 00		 push	 0
  01fb0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  01fb6	83 c4 08	 add	 esp, 8
  01fb9	50		 push	 eax
  01fba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  01fc0	83 c4 04	 add	 esp, 4
  01fc3	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv4510[ebp]
  01fc9	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4510[ebp]
  01fd1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  01fd9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  01fdd	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01fe4	f3 0f 11 80 d0
	00 00 00	 movss	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208], xmm0

; 1428 : 		weapon_database[i].max_seeker_limit			 = cos(weapon_database[i].max_launch_angle_error + 0.25);

  01fec	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ff3	f3 0f 5a 80 d0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208]
  01ffb	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd0000000000000
  02003	83 ec 08	 sub	 esp, 8
  02006	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0200b	e8 00 00 00 00	 call	 _cos
  02010	83 c4 08	 add	 esp, 8
  02013	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4515[ebp]
  02019	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4515[ebp]
  0201f	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  02026	d9 99 d4 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+212]

; 1429 : 
; 1430 : 		// these values were introduced later, so might not exists in old GWUT files
; 1431 : 		p = strtok(NULL,",");

  0202c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02031	6a 00		 push	 0
  02033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02039	83 c4 08	 add	 esp, 8
  0203c	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1432 : 		if (p)

  02042	83 bd e8 f7 ff
	ff 00		 cmp	 DWORD PTR _p$[ebp], 0
  02049	0f 84 aa 00 00
	00		 je	 $LN46@ReadGWutIn

; 1433 : 		{
; 1434 : 			float seeker_limit = atof(p);

  0204f	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  02055	50		 push	 eax
  02056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0205c	83 c4 04	 add	 esp, 4
  0205f	d9 9d e0 f7 ff
	ff		 fstp	 DWORD PTR _seeker_limit$1[ebp]

; 1435 : 			if (seeker_limit > 0.0)

  02065	f3 0f 5a 85 e0
	f7 ff ff	 cvtss2sd xmm0, DWORD PTR _seeker_limit$1[ebp]
  0206d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  02075	76 28		 jbe	 SHORT $LN47@ReadGWutIn

; 1436 : 				weapon_database[i].max_seeker_limit		 = cos(rad(seeker_limit));

  02077	f3 0f 10 85 e0
	f7 ff ff	 movss	 xmm0, DWORD PTR _seeker_limit$1[ebp]
  0207f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3c8efa35
  02087	51		 push	 ecx
  02088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0208d	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  02092	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02099	d9 98 d4 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+212]
$LN47@ReadGWutIn:

; 1437 : 			weapon_database[i].drag_factor			 = FloatValue(p);

  0209f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  020a4	6a 00		 push	 0
  020a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  020ac	83 c4 08	 add	 esp, 8
  020af	50		 push	 eax
  020b0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  020b6	83 c4 04	 add	 esp, 4
  020b9	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4528[ebp]
  020bf	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4528[ebp]
  020c5	69 45 f4 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  020cc	d9 98 d8 00 00
	00		 fstp	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+216]

; 1438 : 			weapon_database[i].spiral_flightpath	 = IntValue(p);

  020d2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  020d7	6a 00		 push	 0
  020d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  020df	83 c4 08	 add	 esp, 8
  020e2	50		 push	 eax
  020e3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  020e9	83 c4 04	 add	 esp, 4
  020ec	69 4d f4 e0 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 224
  020f3	89 81 80 00 00
	00		 mov	 DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[ecx+128], eax
$LN46@ReadGWutIn:

; 1439 : 		}
; 1440 : 
; 1441 : 		fscanf(f,"%[^\n]\n",buf);

  020f9	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  020ff	50		 push	 eax
  02100	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02105	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02108	51		 push	 ecx
  02109	e8 00 00 00 00	 call	 _fscanf
  0210e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1442 : 		TESTDUMP(buf);

  02111	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  02118	74 25		 je	 SHORT $LN48@ReadGWutIn
  0211a	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02120	50		 push	 eax
  02121	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02126	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02129	51		 push	 ecx
  0212a	e8 00 00 00 00	 call	 _fprintf
  0212f	83 c4 0c	 add	 esp, 12			; 0000000cH
  02132	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02135	50		 push	 eax
  02136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  0213c	83 c4 04	 add	 esp, 4
$LN48@ReadGWutIn:

; 1443 : 	}

  0213f	e9 0e f6 ff ff	 jmp	 $LN38@ReadGWutIn
$LN7@ReadGWutIn:

; 1444 : 
; 1445 : 	//read KEYSITES
; 1446 : 
; 1447 : 	if (READ_HEADER)

  02144	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  0214b	74 18		 je	 SHORT $LN49@ReadGWutIn

; 1448 : 		fscanf(f,"%[^\n]\n",buf);

  0214d	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02153	50		 push	 eax
  02154	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02159	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0215c	51		 push	 ecx
  0215d	e8 00 00 00 00	 call	 _fscanf
  02162	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN49@ReadGWutIn:

; 1449 : 	TESTDUMP(buf);

  02165	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0216c	74 25		 je	 SHORT $LN50@ReadGWutIn
  0216e	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02174	50		 push	 eax
  02175	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0217a	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0217d	51		 push	 ecx
  0217e	e8 00 00 00 00	 call	 _fprintf
  02183	83 c4 0c	 add	 esp, 12			; 0000000cH
  02186	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02189	50		 push	 eax
  0218a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02190	83 c4 04	 add	 esp, 4
$LN50@ReadGWutIn:

; 1450 : 
; 1451 : 	fscanf(f,"%[^\n]\n",buf);

  02193	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02199	50		 push	 eax
  0219a	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0219f	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  021a2	51		 push	 ecx
  021a3	e8 00 00 00 00	 call	 _fscanf
  021a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1452 : 	// read first values
; 1453 : 	TESTDUMP(buf);

  021ab	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  021b2	74 25		 je	 SHORT $LN51@ReadGWutIn
  021b4	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  021ba	50		 push	 eax
  021bb	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  021c0	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  021c3	51		 push	 ecx
  021c4	e8 00 00 00 00	 call	 _fprintf
  021c9	83 c4 0c	 add	 esp, 12			; 0000000cH
  021cc	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  021cf	50		 push	 eax
  021d0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  021d6	83 c4 04	 add	 esp, 4
$LN51@ReadGWutIn:

; 1454 : 
; 1455 : 	while (!(strcmp(buf,"[GROUPS]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  021d9	68 00 00 00 00	 push	 OFFSET ??_C@_08NKPMEDMA@?$FLGROUPS?$FN@
  021de	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  021e4	50		 push	 eax
  021e5	e8 00 00 00 00	 call	 _strcmp
  021ea	83 c4 08	 add	 esp, 8
  021ed	85 c0		 test	 eax, eax
  021ef	0f 84 56 06 00
	00		 je	 $LN9@ReadGWutIn
  021f5	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  021fa	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02200	50		 push	 eax
  02201	e8 00 00 00 00	 call	 _strcmp
  02206	83 c4 08	 add	 esp, 8
  02209	85 c0		 test	 eax, eax
  0220b	0f 84 3a 06 00
	00		 je	 $LN9@ReadGWutIn

; 1456 : 	{
; 1457 : 		p = strtok(buf,",");

  02211	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02216	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0221c	50		 push	 eax
  0221d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02223	83 c4 08	 add	 esp, 8
  02226	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1458 : 		i = atoi(p);

  0222c	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  02232	50		 push	 eax
  02233	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02239	83 c4 04	 add	 esp, 4
  0223c	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1459 : 		//get entity number
; 1460 : 		p = strtok(NULL,",");

  0223f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02244	6a 00		 push	 0
  02246	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0224c	83 c4 08	 add	 esp, 8
  0224f	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1461 : 		//skip full name
; 1462 : 
; 1463 : 		keysite_database[i].default_supply_usage.ammo_supply_level= FloatValue(p);

  02255	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0225a	6a 00		 push	 0
  0225c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02262	83 c4 08	 add	 esp, 8
  02265	50		 push	 eax
  02266	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0226c	83 c4 04	 add	 esp, 4
  0226f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4558[ebp]
  02275	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4558[ebp]
  0227b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0227f	d9 98 10 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+16]

; 1464 : 		keysite_database[i].default_supply_usage.fuel_supply_level= FloatValue(p);

  02285	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0228a	6a 00		 push	 0
  0228c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02292	83 c4 08	 add	 esp, 8
  02295	50		 push	 eax
  02296	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0229c	83 c4 04	 add	 esp, 4
  0229f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4562[ebp]
  022a5	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4562[ebp]
  022ab	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  022af	d9 98 14 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+20]

; 1465 : 		keysite_database[i].importance                            = FloatValue(p);

  022b5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  022ba	6a 00		 push	 0
  022bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  022c2	83 c4 08	 add	 esp, 8
  022c5	50		 push	 eax
  022c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  022cc	83 c4 04	 add	 esp, 4
  022cf	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4566[ebp]
  022d5	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4566[ebp]
  022db	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  022df	d9 98 18 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+24]

; 1466 : 		keysite_database[i].minimum_efficiency                    = FloatValue(p);

  022e5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  022ea	6a 00		 push	 0
  022ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  022f2	83 c4 08	 add	 esp, 8
  022f5	50		 push	 eax
  022f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  022fc	83 c4 04	 add	 esp, 4
  022ff	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4570[ebp]
  02305	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4570[ebp]
  0230b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0230f	d9 98 1c 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+28]

; 1467 : 		keysite_database[i].importance_radius                     = FloatValue(p);

  02315	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0231a	6a 00		 push	 0
  0231c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02322	83 c4 08	 add	 esp, 8
  02325	50		 push	 eax
  02326	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0232c	83 c4 04	 add	 esp, 4
  0232f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4574[ebp]
  02335	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4574[ebp]
  0233b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0233f	d9 98 20 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+32]

; 1468 : 		keysite_database[i].air_coverage_radius                   = FloatValue(p);

  02345	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0234a	6a 00		 push	 0
  0234c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02352	83 c4 08	 add	 esp, 8
  02355	50		 push	 eax
  02356	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0235c	83 c4 04	 add	 esp, 4
  0235f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4578[ebp]
  02365	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4578[ebp]
  0236b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0236f	d9 98 24 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+36]

; 1469 : 		keysite_database[i].recon_distance                        = FloatValue(p);

  02375	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0237a	6a 00		 push	 0
  0237c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02382	83 c4 08	 add	 esp, 8
  02385	50		 push	 eax
  02386	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0238c	83 c4 04	 add	 esp, 4
  0238f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4582[ebp]
  02395	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4582[ebp]
  0239b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0239f	d9 98 28 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+40]

; 1470 : 		keysite_database[i].sector_side_max_value                 = FloatValue(p);

  023a5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  023aa	6a 00		 push	 0
  023ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  023b2	83 c4 08	 add	 esp, 8
  023b5	50		 push	 eax
  023b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  023bc	83 c4 04	 add	 esp, 4
  023bf	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv4586[ebp]
  023c5	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv4586[ebp]
  023cb	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  023cf	d9 98 2c 00 00
	00		 fstp	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+44]

; 1471 : 		keysite_database[i].align_with_terrain                    = IntValue(p);

  023d5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  023da	6a 00		 push	 0
  023dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  023e2	83 c4 08	 add	 esp, 8
  023e5	50		 push	 eax
  023e6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  023ec	83 c4 04	 add	 esp, 4
  023ef	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1632[ebp], eax
  023f5	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  023f9	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1632[ebp]
  023ff	83 e1 01	 and	 ecx, 1
  02402	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  02405	8b 90 30 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  0240b	81 e2 ff ef ff
	ff		 and	 edx, -4097		; ffffefffH
  02411	0b d1		 or	 edx, ecx
  02413	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02417	89 90 30 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48], edx

; 1472 : 		keysite_database[i].hidden_by_fog_of_war                  = IntValue(p);

  0241d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02422	6a 00		 push	 0
  02424	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0242a	83 c4 08	 add	 esp, 8
  0242d	50		 push	 eax
  0242e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02434	83 c4 04	 add	 esp, 4
  02437	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1648[ebp], eax
  0243d	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02441	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1648[ebp]
  02447	83 e1 01	 and	 ecx, 1
  0244a	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  0244d	8b 90 30 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  02453	81 e2 ff bf ff
	ff		 and	 edx, -16385		; ffffbfffH
  02459	0b d1		 or	 edx, ecx
  0245b	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0245f	89 90 30 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48], edx

; 1473 : 		keysite_database[i].air_force_capacity                    = IntValue(p);

  02465	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0246a	6a 00		 push	 0
  0246c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02472	83 c4 08	 add	 esp, 8
  02475	50		 push	 eax
  02476	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0247c	83 c4 04	 add	 esp, 4
  0247f	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1664[ebp], eax
  02485	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02489	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1664[ebp]
  0248f	83 e1 03	 and	 ecx, 3
  02492	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  02495	8b 90 30 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  0249b	81 e2 ff 7f fe
	ff		 and	 edx, -98305		; fffe7fffH
  024a1	0b d1		 or	 edx, ecx
  024a3	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  024a7	89 90 30 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48], edx

; 1474 : 		keysite_database[i].report_ammo_level                     = IntValue(p);

  024ad	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  024b2	6a 00		 push	 0
  024b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  024ba	83 c4 08	 add	 esp, 8
  024bd	50		 push	 eax
  024be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  024c4	83 c4 04	 add	 esp, 4
  024c7	6b 4d f4 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  024cb	89 81 34 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+52], eax

; 1475 : 		keysite_database[i].report_fuel_level                     = IntValue(p);

  024d1	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  024d6	6a 00		 push	 0
  024d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  024de	83 c4 08	 add	 esp, 8
  024e1	50		 push	 eax
  024e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  024e8	83 c4 04	 add	 esp, 4
  024eb	6b 4d f4 44	 imul	 ecx, DWORD PTR _i$[ebp], 68
  024ef	89 81 3c 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[ecx+60], eax

; 1476 : 		keysite_database[i].assign_task_count                     = IntValue(p);

  024f5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  024fa	6a 00		 push	 0
  024fc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02502	83 c4 08	 add	 esp, 8
  02505	50		 push	 eax
  02506	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0250c	83 c4 04	 add	 esp, 4
  0250f	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1696[ebp], eax
  02515	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02519	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1696[ebp]
  0251f	83 e1 03	 and	 ecx, 3
  02522	d1 e1		 shl	 ecx, 1
  02524	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0252a	83 e2 f9	 and	 edx, -7			; fffffff9H
  0252d	0b d1		 or	 edx, ecx
  0252f	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02533	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1477 : 		keysite_database[i].reserve_task_count                    = IntValue(p);

  02539	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0253e	6a 00		 push	 0
  02540	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02546	83 c4 08	 add	 esp, 8
  02549	50		 push	 eax
  0254a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02550	83 c4 04	 add	 esp, 4
  02553	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1712[ebp], eax
  02559	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0255d	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1712[ebp]
  02563	83 e1 03	 and	 ecx, 3
  02566	c1 e1 03	 shl	 ecx, 3
  02569	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0256f	83 e2 e7	 and	 edx, -25		; ffffffe7H
  02572	0b d1		 or	 edx, ecx
  02574	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02578	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1478 : 		keysite_database[i].requires_cap                          = IntValue(p);

  0257e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02583	6a 00		 push	 0
  02585	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0258b	83 c4 08	 add	 esp, 8
  0258e	50		 push	 eax
  0258f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02595	83 c4 04	 add	 esp, 4
  02598	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1728[ebp], eax
  0259e	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  025a2	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1728[ebp]
  025a8	83 e1 01	 and	 ecx, 1
  025ab	c1 e1 05	 shl	 ecx, 5
  025ae	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  025b4	83 e2 df	 and	 edx, -33		; ffffffdfH
  025b7	0b d1		 or	 edx, ecx
  025b9	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  025bd	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1479 : 		keysite_database[i].requires_barcap                       = IntValue(p);

  025c3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  025c8	6a 00		 push	 0
  025ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  025d0	83 c4 08	 add	 esp, 8
  025d3	50		 push	 eax
  025d4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  025da	83 c4 04	 add	 esp, 4
  025dd	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1744[ebp], eax
  025e3	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  025e7	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1744[ebp]
  025ed	83 e1 01	 and	 ecx, 1
  025f0	c1 e1 06	 shl	 ecx, 6
  025f3	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  025f9	83 e2 bf	 and	 edx, -65		; ffffffbfH
  025fc	0b d1		 or	 edx, ecx
  025fe	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02602	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1480 : 		keysite_database[i].repairable                            = IntValue(p);

  02608	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0260d	6a 00		 push	 0
  0260f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02615	83 c4 08	 add	 esp, 8
  02618	50		 push	 eax
  02619	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0261f	83 c4 04	 add	 esp, 4
  02622	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1760[ebp], eax
  02628	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0262c	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1760[ebp]
  02632	83 e1 01	 and	 ecx, 1
  02635	c1 e1 07	 shl	 ecx, 7
  02638	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0263e	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  02644	0b d1		 or	 edx, ecx
  02646	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0264a	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1481 : 		keysite_database[i].oca_target                            = IntValue(p);

  02650	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02655	6a 00		 push	 0
  02657	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0265d	83 c4 08	 add	 esp, 8
  02660	50		 push	 eax
  02661	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02667	83 c4 04	 add	 esp, 4
  0266a	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1776[ebp], eax
  02670	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02674	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1776[ebp]
  0267a	83 e1 01	 and	 ecx, 1
  0267d	c1 e1 08	 shl	 ecx, 8
  02680	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  02686	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  0268c	0b d1		 or	 edx, ecx
  0268e	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02692	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1482 : 		keysite_database[i].recon_target                          = IntValue(p);

  02698	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0269d	6a 00		 push	 0
  0269f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  026a5	83 c4 08	 add	 esp, 8
  026a8	50		 push	 eax
  026a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  026af	83 c4 04	 add	 esp, 4
  026b2	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1792[ebp], eax
  026b8	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  026bc	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1792[ebp]
  026c2	83 e1 01	 and	 ecx, 1
  026c5	c1 e1 09	 shl	 ecx, 9
  026c8	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  026ce	81 e2 ff fd ff
	ff		 and	 edx, -513		; fffffdffH
  026d4	0b d1		 or	 edx, ecx
  026d6	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  026da	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1483 : 		keysite_database[i].ground_strike_target                  = IntValue(p);

  026e0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  026e5	6a 00		 push	 0
  026e7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  026ed	83 c4 08	 add	 esp, 8
  026f0	50		 push	 eax
  026f1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  026f7	83 c4 04	 add	 esp, 4
  026fa	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1808[ebp], eax
  02700	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02704	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1808[ebp]
  0270a	83 e1 01	 and	 ecx, 1
  0270d	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  02710	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  02716	81 e2 ff fb ff
	ff		 and	 edx, -1025		; fffffbffH
  0271c	0b d1		 or	 edx, ecx
  0271e	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02722	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1484 : 		keysite_database[i].ship_strike_target                    = IntValue(p);

  02728	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0272d	6a 00		 push	 0
  0272f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02735	83 c4 08	 add	 esp, 8
  02738	50		 push	 eax
  02739	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0273f	83 c4 04	 add	 esp, 4
  02742	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1824[ebp], eax
  02748	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0274c	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1824[ebp]
  02752	83 e1 01	 and	 ecx, 1
  02755	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  02758	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0275e	81 e2 ff f7 ff
	ff		 and	 edx, -2049		; fffff7ffH
  02764	0b d1		 or	 edx, ecx
  02766	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0276a	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1485 : 		keysite_database[i].troop_insertion_target                = IntValue(p);

  02770	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02775	6a 00		 push	 0
  02777	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0277d	83 c4 08	 add	 esp, 8
  02780	50		 push	 eax
  02781	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02787	83 c4 04	 add	 esp, 4
  0278a	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1840[ebp], eax
  02790	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02794	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1840[ebp]
  0279a	83 e1 01	 and	 ecx, 1
  0279d	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  027a0	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  027a6	81 e2 ff ef ff
	ff		 and	 edx, -4097		; ffffefffH
  027ac	0b d1		 or	 edx, ecx
  027ae	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027b2	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1486 : 		keysite_database[i].campaign_objective                    = IntValue(p);

  027b8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  027bd	6a 00		 push	 0
  027bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  027c5	83 c4 08	 add	 esp, 8
  027c8	50		 push	 eax
  027c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  027cf	83 c4 04	 add	 esp, 4
  027d2	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv1856[ebp], eax
  027d8	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027dc	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv1856[ebp]
  027e2	83 e1 01	 and	 ecx, 1
  027e5	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  027e8	8b 90 40 00 00
	00		 mov	 edx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  027ee	81 e2 ff df ff
	ff		 and	 edx, -8193		; ffffdfffH
  027f4	0b d1		 or	 edx, ecx
  027f6	6b 45 f4 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027fa	89 90 40 00 00
	00		 mov	 DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64], edx

; 1487 : 
; 1488 : 		fscanf(f,"%[^\n]\n",buf);

  02800	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02806	50		 push	 eax
  02807	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0280c	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0280f	51		 push	 ecx
  02810	e8 00 00 00 00	 call	 _fscanf
  02815	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1489 : 		TESTDUMP(buf);

  02818	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0281f	74 25		 je	 SHORT $LN52@ReadGWutIn
  02821	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02827	50		 push	 eax
  02828	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0282d	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02830	51		 push	 ecx
  02831	e8 00 00 00 00	 call	 _fprintf
  02836	83 c4 0c	 add	 esp, 12			; 0000000cH
  02839	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  0283c	50		 push	 eax
  0283d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02843	83 c4 04	 add	 esp, 4
$LN52@ReadGWutIn:

; 1490 : 	}

  02846	e9 8e f9 ff ff	 jmp	 $LN51@ReadGWutIn
$LN9@ReadGWutIn:

; 1491 : 
; 1492 : 	//read GROUPS
; 1493 : 
; 1494 : 	if (READ_HEADER)

  0284b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  02852	74 18		 je	 SHORT $LN53@ReadGWutIn

; 1495 : 		fscanf(f,"%[^\n]\n",buf);

  02854	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0285a	50		 push	 eax
  0285b	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02860	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02863	51		 push	 ecx
  02864	e8 00 00 00 00	 call	 _fscanf
  02869	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN53@ReadGWutIn:

; 1496 : 	TESTDUMP(buf);

  0286c	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  02873	74 25		 je	 SHORT $LN54@ReadGWutIn
  02875	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0287b	50		 push	 eax
  0287c	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02881	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02884	51		 push	 ecx
  02885	e8 00 00 00 00	 call	 _fprintf
  0288a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0288d	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02890	50		 push	 eax
  02891	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02897	83 c4 04	 add	 esp, 4
$LN54@ReadGWutIn:

; 1497 : 
; 1498 : 	fscanf(f,"%[^\n]\n",buf);

  0289a	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  028a0	50		 push	 eax
  028a1	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  028a6	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  028a9	51		 push	 ecx
  028aa	e8 00 00 00 00	 call	 _fscanf
  028af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1499 : 	// read first values
; 1500 : 	TESTDUMP(buf);

  028b2	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  028b9	74 25		 je	 SHORT $LN55@ReadGWutIn
  028bb	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  028c1	50		 push	 eax
  028c2	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  028c7	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  028ca	51		 push	 ecx
  028cb	e8 00 00 00 00	 call	 _fprintf
  028d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  028d3	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  028d6	50		 push	 eax
  028d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  028dd	83 c4 04	 add	 esp, 4
$LN55@ReadGWutIn:

; 1501 : 
; 1502 : 	while (!(strcmp(buf,"[TASKS]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  028e0	68 00 00 00 00	 push	 OFFSET ??_C@_07NDEGACLM@?$FLTASKS?$FN@
  028e5	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  028eb	50		 push	 eax
  028ec	e8 00 00 00 00	 call	 _strcmp
  028f1	83 c4 08	 add	 esp, 8
  028f4	85 c0		 test	 eax, eax
  028f6	0f 84 6a 05 00
	00		 je	 $LN11@ReadGWutIn
  028fc	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  02901	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02907	50		 push	 eax
  02908	e8 00 00 00 00	 call	 _strcmp
  0290d	83 c4 08	 add	 esp, 8
  02910	85 c0		 test	 eax, eax
  02912	0f 84 4e 05 00
	00		 je	 $LN11@ReadGWutIn

; 1503 : 	{
; 1504 : 		p = strtok(buf,",");

  02918	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0291d	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02923	50		 push	 eax
  02924	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0292a	83 c4 08	 add	 esp, 8
  0292d	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1505 : 		i = atoi(p);

  02933	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  02939	50		 push	 eax
  0293a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02940	83 c4 04	 add	 esp, 4
  02943	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1506 : 		//get entity number
; 1507 : 		p = strtok(NULL,",");

  02946	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0294b	6a 00		 push	 0
  0294d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02953	83 c4 08	 add	 esp, 8
  02956	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1508 : 		//skip full name
; 1509 : 
; 1510 : 		group_database[i].group_category                  = ( group_category_types ) IntValue(p);

  0295c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02961	6a 00		 push	 0
  02963	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02969	83 c4 08	 add	 esp, 8
  0296c	50		 push	 eax
  0296d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02973	83 c4 04	 add	 esp, 4
  02976	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  0297a	89 81 08 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+8], eax

; 1511 : 		group_database[i].registry_list_type              = ( list_types ) IntValue(p);

  02980	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02985	6a 00		 push	 0
  02987	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0298d	83 c4 08	 add	 esp, 8
  02990	50		 push	 eax
  02991	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02997	83 c4 04	 add	 esp, 4
  0299a	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  0299e	89 81 0c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+12], eax

; 1512 : 		group_database[i].group_list_type                 = ( list_types ) IntValue(p);

  029a4	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  029a9	6a 00		 push	 0
  029ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  029b1	83 c4 08	 add	 esp, 8
  029b4	50		 push	 eax
  029b5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  029bb	83 c4 04	 add	 esp, 4
  029be	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  029c2	89 81 10 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+16], eax

; 1513 : 		group_database[i].movement_type                   = ( movement_types ) IntValue(p);

  029c8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  029cd	6a 00		 push	 0
  029cf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  029d5	83 c4 08	 add	 esp, 8
  029d8	50		 push	 eax
  029d9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  029df	83 c4 04	 add	 esp, 4
  029e2	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  029e6	89 81 14 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+20], eax

; 1514 : 		group_database[i].default_landing_type            = IntValue(p);

  029ec	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  029f1	6a 00		 push	 0
  029f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  029f9	83 c4 08	 add	 esp, 8
  029fc	50		 push	 eax
  029fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02a03	83 c4 04	 add	 esp, 4
  02a06	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02a0a	89 81 18 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+24], eax

; 1515 : 		group_database[i].default_entity_type             = ( entity_types ) IntValue(p);

  02a10	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02a15	6a 00		 push	 0
  02a17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02a1d	83 c4 08	 add	 esp, 8
  02a20	50		 push	 eax
  02a21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02a27	83 c4 04	 add	 esp, 4
  02a2a	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02a2e	89 81 1c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+28], eax

; 1516 : 		group_database[i].default_blue_force_sub_type     = IntValue(p);

  02a34	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02a39	6a 00		 push	 0
  02a3b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02a41	83 c4 08	 add	 esp, 8
  02a44	50		 push	 eax
  02a45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02a4b	83 c4 04	 add	 esp, 4
  02a4e	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02a52	89 81 20 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+32], eax

; 1517 : 		group_database[i].default_red_force_sub_type      = IntValue(p);

  02a58	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02a5d	6a 00		 push	 0
  02a5f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02a65	83 c4 08	 add	 esp, 8
  02a68	50		 push	 eax
  02a69	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02a6f	83 c4 04	 add	 esp, 4
  02a72	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02a76	89 81 24 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+36], eax

; 1518 : 		group_database[i].default_group_formation         = ( formation_types ) IntValue(p);

  02a7c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02a81	6a 00		 push	 0
  02a83	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02a89	83 c4 08	 add	 esp, 8
  02a8c	50		 push	 eax
  02a8d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02a93	83 c4 04	 add	 esp, 4
  02a96	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02a9a	89 81 28 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+40], eax

; 1519 : 		group_database[i].default_group_division          = IntValue(p);

  02aa0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02aa5	6a 00		 push	 0
  02aa7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02aad	83 c4 08	 add	 esp, 8
  02ab0	50		 push	 eax
  02ab1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02ab7	83 c4 04	 add	 esp, 4
  02aba	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02abe	89 81 2c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+44], eax

; 1520 : 		group_database[i].maximum_groups_per_division     = IntValue(p);

  02ac4	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02ac9	6a 00		 push	 0
  02acb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02ad1	83 c4 08	 add	 esp, 8
  02ad4	50		 push	 eax
  02ad5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02adb	83 c4 04	 add	 esp, 4
  02ade	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02ae2	89 81 30 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+48], eax

; 1521 : 		group_database[i].rearming_time                   = IntValue(p);

  02ae8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02aed	6a 00		 push	 0
  02aef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02af5	83 c4 08	 add	 esp, 8
  02af8	50		 push	 eax
  02af9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02aff	83 c4 04	 add	 esp, 4
  02b02	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  02b06	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02b0a	f3 0f 11 80 44
	00 00 00	 movss	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+68], xmm0

; 1522 : 		group_database[i].frontline_flag                  = IntValue(p);

  02b12	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02b17	6a 00		 push	 0
  02b19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02b1f	83 c4 08	 add	 esp, 8
  02b22	50		 push	 eax
  02b23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02b29	83 c4 04	 add	 esp, 4
  02b2c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2010[ebp], eax
  02b32	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02b36	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2010[ebp]
  02b3c	83 e1 03	 and	 ecx, 3
  02b3f	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02b45	83 e2 fc	 and	 edx, -4			; fffffffcH
  02b48	0b d1		 or	 edx, ecx
  02b4a	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02b4e	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1523 : 		group_database[i].local_only_group                = IntValue(p);

  02b54	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02b59	6a 00		 push	 0
  02b5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02b61	83 c4 08	 add	 esp, 8
  02b64	50		 push	 eax
  02b65	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02b6b	83 c4 04	 add	 esp, 4
  02b6e	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2025[ebp], eax
  02b74	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02b78	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2025[ebp]
  02b7e	83 e1 01	 and	 ecx, 1
  02b81	c1 e1 02	 shl	 ecx, 2
  02b84	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02b8a	83 e2 fb	 and	 edx, -5			; fffffffbH
  02b8d	0b d1		 or	 edx, ecx
  02b8f	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02b93	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1524 : 		group_database[i].default_engage_enemy            = IntValue(p);

  02b99	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02b9e	6a 00		 push	 0
  02ba0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02ba6	83 c4 08	 add	 esp, 8
  02ba9	50		 push	 eax
  02baa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02bb0	83 c4 04	 add	 esp, 4
  02bb3	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2041[ebp], eax
  02bb9	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02bbd	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2041[ebp]
  02bc3	83 e1 01	 and	 ecx, 1
  02bc6	c1 e1 03	 shl	 ecx, 3
  02bc9	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02bcf	83 e2 f7	 and	 edx, -9			; fffffff7H
  02bd2	0b d1		 or	 edx, ecx
  02bd4	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02bd8	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1525 : 		group_database[i].amalgamate                      = IntValue(p);

  02bde	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02be3	6a 00		 push	 0
  02be5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02beb	83 c4 08	 add	 esp, 8
  02bee	50		 push	 eax
  02bef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02bf5	83 c4 04	 add	 esp, 4
  02bf8	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2057[ebp], eax
  02bfe	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c02	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2057[ebp]
  02c08	83 e1 01	 and	 ecx, 1
  02c0b	c1 e1 04	 shl	 ecx, 4
  02c0e	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02c14	83 e2 ef	 and	 edx, -17		; ffffffefH
  02c17	0b d1		 or	 edx, ecx
  02c19	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c1d	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1526 : 		group_database[i].platoon_id_type                 = IntValue(p);

  02c23	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02c28	6a 00		 push	 0
  02c2a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02c30	83 c4 08	 add	 esp, 8
  02c33	50		 push	 eax
  02c34	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02c3a	83 c4 04	 add	 esp, 4
  02c3d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2073[ebp], eax
  02c43	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c47	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2073[ebp]
  02c4d	83 e1 07	 and	 ecx, 7
  02c50	c1 e1 05	 shl	 ecx, 5
  02c53	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02c59	81 e2 1f ff ff
	ff		 and	 edx, -225		; ffffff1fH
  02c5f	0b d1		 or	 edx, ecx
  02c61	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c65	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1527 : 		group_database[i].maximum_member_count            = IntValue(p);

  02c6b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02c70	6a 00		 push	 0
  02c72	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02c78	83 c4 08	 add	 esp, 8
  02c7b	50		 push	 eax
  02c7c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02c82	83 c4 04	 add	 esp, 4
  02c85	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2089[ebp], eax
  02c8b	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c8f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2089[ebp]
  02c95	83 e1 1f	 and	 ecx, 31			; 0000001fH
  02c98	c1 e1 08	 shl	 ecx, 8
  02c9b	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02ca1	81 e2 ff e0 ff
	ff		 and	 edx, -7937		; ffffe0ffH
  02ca7	0b d1		 or	 edx, ecx
  02ca9	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02cad	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1528 : 		group_database[i].minimum_idle_count              = IntValue(p);

  02cb3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02cb8	6a 00		 push	 0
  02cba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02cc0	83 c4 08	 add	 esp, 8
  02cc3	50		 push	 eax
  02cc4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02cca	83 c4 04	 add	 esp, 4
  02ccd	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2105[ebp], eax
  02cd3	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02cd7	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2105[ebp]
  02cdd	83 e1 0f	 and	 ecx, 15			; 0000000fH
  02ce0	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  02ce3	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02ce9	81 e2 ff 1f fe
	ff		 and	 edx, -122881		; fffe1fffH
  02cef	0b d1		 or	 edx, ecx
  02cf1	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02cf5	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1529 : 		group_database[i].resupply_source                 = IntValue(p);

  02cfb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02d00	6a 00		 push	 0
  02d02	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02d08	83 c4 08	 add	 esp, 8
  02d0b	50		 push	 eax
  02d0c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02d12	83 c4 04	 add	 esp, 4
  02d15	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2121[ebp], eax
  02d1b	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d1f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2121[ebp]
  02d25	83 e1 07	 and	 ecx, 7
  02d28	c1 e1 11	 shl	 ecx, 17			; 00000011H
  02d2b	8b 90 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02d31	81 e2 ff ff f1
	ff		 and	 edx, -917505		; fff1ffffH
  02d37	0b d1		 or	 edx, ecx
  02d39	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d3d	89 90 48 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72], edx

; 1530 : 		group_database[i].ai_stats.air_attack_strength    = IntValue(p);

  02d43	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02d48	6a 00		 push	 0
  02d4a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02d50	83 c4 08	 add	 esp, 8
  02d53	50		 push	 eax
  02d54	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02d5a	83 c4 04	 add	 esp, 4
  02d5d	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02d61	89 81 4c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+76], eax

; 1531 : 		group_database[i].ai_stats.ground_attack_strength = IntValue(p);

  02d67	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02d6c	6a 00		 push	 0
  02d6e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02d74	83 c4 08	 add	 esp, 8
  02d77	50		 push	 eax
  02d78	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02d7e	83 c4 04	 add	 esp, 4
  02d81	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02d85	89 81 50 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+80], eax

; 1532 : 		group_database[i].ai_stats.movement_speed         = IntValue(p);

  02d8b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02d90	6a 00		 push	 0
  02d92	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02d98	83 c4 08	 add	 esp, 8
  02d9b	50		 push	 eax
  02d9c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02da2	83 c4 04	 add	 esp, 4
  02da5	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02da9	89 81 54 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+84], eax

; 1533 : 		group_database[i].ai_stats.movement_stealth       = IntValue(p);

  02daf	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02db4	6a 00		 push	 0
  02db6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02dbc	83 c4 08	 add	 esp, 8
  02dbf	50		 push	 eax
  02dc0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02dc6	83 c4 04	 add	 esp, 4
  02dc9	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02dcd	89 81 58 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+88], eax

; 1534 : 		group_database[i].ai_stats.cargo_space            = IntValue(p);

  02dd3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02dd8	6a 00		 push	 0
  02dda	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02de0	83 c4 08	 add	 esp, 8
  02de3	50		 push	 eax
  02de4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02dea	83 c4 04	 add	 esp, 4
  02ded	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02df1	89 81 5c 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+92], eax

; 1535 : 		group_database[i].ai_stats.troop_space            = IntValue(p);

  02df7	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02dfc	6a 00		 push	 0
  02dfe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02e04	83 c4 08	 add	 esp, 8
  02e07	50		 push	 eax
  02e08	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02e0e	83 c4 04	 add	 esp, 4
  02e11	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  02e15	89 81 60 00 00
	00		 mov	 DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+96], eax

; 1536 : 
; 1537 : 		fscanf(f,"%[^\n]\n",buf);

  02e1b	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02e21	50		 push	 eax
  02e22	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02e27	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02e2a	51		 push	 ecx
  02e2b	e8 00 00 00 00	 call	 _fscanf
  02e30	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1538 : 		TESTDUMP(buf);

  02e33	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  02e3a	74 25		 je	 SHORT $LN56@ReadGWutIn
  02e3c	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02e42	50		 push	 eax
  02e43	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02e48	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02e4b	51		 push	 ecx
  02e4c	e8 00 00 00 00	 call	 _fprintf
  02e51	83 c4 0c	 add	 esp, 12			; 0000000cH
  02e54	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02e57	50		 push	 eax
  02e58	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02e5e	83 c4 04	 add	 esp, 4
$LN56@ReadGWutIn:

; 1539 : 	}

  02e61	e9 7a fa ff ff	 jmp	 $LN55@ReadGWutIn
$LN11@ReadGWutIn:

; 1540 : 
; 1541 : 	//read TASKS
; 1542 : 
; 1543 : 	if (READ_HEADER)

  02e66	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  02e6d	74 18		 je	 SHORT $LN57@ReadGWutIn

; 1544 : 		fscanf(f,"%[^\n]\n",buf);

  02e6f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02e75	50		 push	 eax
  02e76	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02e7b	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02e7e	51		 push	 ecx
  02e7f	e8 00 00 00 00	 call	 _fscanf
  02e84	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN57@ReadGWutIn:

; 1545 : 	TESTDUMP(buf);

  02e87	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  02e8e	74 25		 je	 SHORT $LN58@ReadGWutIn
  02e90	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02e96	50		 push	 eax
  02e97	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02e9c	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02e9f	51		 push	 ecx
  02ea0	e8 00 00 00 00	 call	 _fprintf
  02ea5	83 c4 0c	 add	 esp, 12			; 0000000cH
  02ea8	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02eab	50		 push	 eax
  02eac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02eb2	83 c4 04	 add	 esp, 4
$LN58@ReadGWutIn:

; 1546 : 
; 1547 : 	fscanf(f,"%[^\n]\n",buf);

  02eb5	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02ebb	50		 push	 eax
  02ebc	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  02ec1	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  02ec4	51		 push	 ecx
  02ec5	e8 00 00 00 00	 call	 _fscanf
  02eca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1548 : 	// read first values
; 1549 : 	TESTDUMP(buf);

  02ecd	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  02ed4	74 25		 je	 SHORT $LN59@ReadGWutIn
  02ed6	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02edc	50		 push	 eax
  02edd	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02ee2	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  02ee5	51		 push	 ecx
  02ee6	e8 00 00 00 00	 call	 _fprintf
  02eeb	83 c4 0c	 add	 esp, 12			; 0000000cH
  02eee	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  02ef1	50		 push	 eax
  02ef2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  02ef8	83 c4 04	 add	 esp, 4
$LN59@ReadGWutIn:

; 1550 : 
; 1551 : 	while (!(strcmp(buf,"[WAYPOINTS]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  02efb	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DKLOPEFJ@?$FLWAYPOINTS?$FN@
  02f00	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02f06	50		 push	 eax
  02f07	e8 00 00 00 00	 call	 _strcmp
  02f0c	83 c4 08	 add	 esp, 8
  02f0f	85 c0		 test	 eax, eax
  02f11	0f 84 85 0a 00
	00		 je	 $LN13@ReadGWutIn
  02f17	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  02f1c	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02f22	50		 push	 eax
  02f23	e8 00 00 00 00	 call	 _strcmp
  02f28	83 c4 08	 add	 esp, 8
  02f2b	85 c0		 test	 eax, eax
  02f2d	0f 84 69 0a 00
	00		 je	 $LN13@ReadGWutIn

; 1552 : 	{
; 1553 : 		p = strtok(buf,",");

  02f33	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02f38	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  02f3e	50		 push	 eax
  02f3f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02f45	83 c4 08	 add	 esp, 8
  02f48	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1554 : 		i = atoi(p);

  02f4e	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  02f54	50		 push	 eax
  02f55	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02f5b	83 c4 04	 add	 esp, 4
  02f5e	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1555 : 		//get entity number
; 1556 : 		p = strtok(NULL,",");

  02f61	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02f66	6a 00		 push	 0
  02f68	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02f6e	83 c4 08	 add	 esp, 8
  02f71	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1557 : 		//skip full name
; 1558 : 
; 1559 : 		task_database[i].task_category                   = ( task_category_types ) IntValue(p);

  02f77	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02f7c	6a 00		 push	 0
  02f7e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02f84	83 c4 08	 add	 esp, 8
  02f87	50		 push	 eax
  02f88	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02f8e	83 c4 04	 add	 esp, 4
  02f91	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02f95	89 81 0c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+12], eax

; 1560 : 		task_database[i].task_priority                   = IntValue(p);

  02f9b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02fa0	6a 00		 push	 0
  02fa2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02fa8	83 c4 08	 add	 esp, 8
  02fab	50		 push	 eax
  02fac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02fb2	83 c4 04	 add	 esp, 4
  02fb5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  02fb9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  02fbd	f3 0f 11 80 10
	00 00 00	 movss	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+16], xmm0

; 1561 : 		task_database[i].difficulty_rating               = IntValue(p);

  02fc5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02fca	6a 00		 push	 0
  02fcc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02fd2	83 c4 08	 add	 esp, 8
  02fd5	50		 push	 eax
  02fd6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  02fdc	83 c4 04	 add	 esp, 4
  02fdf	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  02fe3	89 81 14 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+20], eax

; 1562 : 		task_database[i].task_default_target_class       = IntValue(p);

  02fe9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  02fee	6a 00		 push	 0
  02ff0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  02ff6	83 c4 08	 add	 esp, 8
  02ff9	50		 push	 eax
  02ffa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03000	83 c4 04	 add	 esp, 4
  03003	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2257[ebp], eax
  03009	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0300d	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2257[ebp]
  03013	83 e1 03	 and	 ecx, 3
  03016	8b 90 18 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24]
  0301c	83 e2 fc	 and	 edx, -4			; fffffffcH
  0301f	0b d1		 or	 edx, ecx
  03021	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03025	89 90 18 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24], edx

; 1563 : 		task_database[i].task_default_target_source      = IntValue(p);

  0302b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03030	6a 00		 push	 0
  03032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03038	83 c4 08	 add	 esp, 8
  0303b	50		 push	 eax
  0303c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03042	83 c4 04	 add	 esp, 4
  03045	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2272[ebp], eax
  0304b	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0304f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2272[ebp]
  03055	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03058	c1 e1 02	 shl	 ecx, 2
  0305b	8b 90 18 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24]
  03061	83 e2 c3	 and	 edx, -61		; ffffffc3H
  03064	0b d1		 or	 edx, ecx
  03066	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0306a	89 90 18 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24], edx

; 1564 : 		j = IntValue(p); k = BinToInt(j);

  03070	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03075	6a 00		 push	 0
  03077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0307d	83 c4 08	 add	 esp, 8
  03080	50		 push	 eax
  03081	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03087	83 c4 04	 add	 esp, 4
  0308a	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  0308d	83 7d f0 00	 cmp	 DWORD PTR _j$[ebp], 0
  03091	75 0c		 jne	 SHORT $LN99@ReadGWutIn
  03093	c7 85 9c f6 ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2294[ebp], 0
  0309d	eb 66		 jmp	 SHORT $LN100@ReadGWutIn
$LN99@ReadGWutIn:
  0309f	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR _j$[ebp]
  030a4	83 ec 08	 sub	 esp, 8
  030a7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  030af	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  030b4	f2 0f 11 85 94
	f6 ff ff	 movsd	 QWORD PTR tv5459[ebp], xmm0
  030bc	e8 00 00 00 00	 call	 _log
  030c1	83 c4 08	 add	 esp, 8
  030c4	dd 9d 8c f6 ff
	ff		 fstp	 QWORD PTR tv4807[ebp]
  030ca	f2 0f 10 85 94
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv5459[ebp]
  030d2	f2 0f 59 85 8c
	f6 ff ff	 mulsd	 xmm0, QWORD PTR tv4807[ebp]
  030da	83 ec 08	 sub	 esp, 8
  030dd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  030e2	e8 00 00 00 00	 call	 _exp
  030e7	83 c4 08	 add	 esp, 8
  030ea	dd 9d 84 f6 ff
	ff		 fstp	 QWORD PTR tv4812[ebp]
  030f0	f2 0f 10 85 84
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv4812[ebp]
  030f8	f2 0f 2c c0	 cvttsd2si eax, xmm0
  030fc	83 c0 01	 add	 eax, 1
  030ff	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2294[ebp], eax
$LN100@ReadGWutIn:
  03105	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2294[ebp]
  0310b	89 4d ec	 mov	 DWORD PTR _k$[ebp], ecx

; 1565 : 		task_database[i].task_default_target_type = k;

  0310e	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03112	8b 4d ec	 mov	 ecx, DWORD PTR _k$[ebp]
  03115	8b 90 1c 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0311b	83 e2 00	 and	 edx, 0
  0311e	0b d1		 or	 edx, ecx
  03120	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03124	89 90 1c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28], edx

; 1566 : 		task_database[i].task_objective_info             = IntValue(p);

  0312a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0312f	6a 00		 push	 0
  03131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03137	83 c4 08	 add	 esp, 8
  0313a	50		 push	 eax
  0313b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03141	83 c4 04	 add	 esp, 4
  03144	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2312[ebp], eax
  0314a	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0314e	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2312[ebp]
  03154	83 e1 03	 and	 ecx, 3
  03157	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  0315d	83 e2 fc	 and	 edx, -4			; fffffffcH
  03160	0b d1		 or	 edx, ecx
  03162	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03166	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 1567 : 		task_database[i].minimum_member_count            = IntValue(p);

  0316c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03171	6a 00		 push	 0
  03173	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03179	83 c4 08	 add	 esp, 8
  0317c	50		 push	 eax
  0317d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03183	83 c4 04	 add	 esp, 4
  03186	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2327[ebp], eax
  0318c	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03190	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2327[ebp]
  03196	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03199	c1 e1 02	 shl	 ecx, 2
  0319c	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  031a2	83 e2 c3	 and	 edx, -61		; ffffffc3H
  031a5	0b d1		 or	 edx, ecx
  031a7	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  031ab	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 1568 : 		task_database[i].rules_of_engagement             = IntValue(p);

  031b1	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  031b6	6a 00		 push	 0
  031b8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  031be	83 c4 08	 add	 esp, 8
  031c1	50		 push	 eax
  031c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  031c8	83 c4 04	 add	 esp, 4
  031cb	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2343[ebp], eax
  031d1	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  031d5	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2343[ebp]
  031db	83 e1 03	 and	 ecx, 3
  031de	c1 e1 06	 shl	 ecx, 6
  031e1	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  031e7	81 e2 3f ff ff
	ff		 and	 edx, -193		; ffffff3fH
  031ed	0b d1		 or	 edx, ecx
  031ef	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  031f3	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 1569 : 		task_database[i].engage_enemy                    = IntValue(p);

  031f9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  031fe	6a 00		 push	 0
  03200	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03206	83 c4 08	 add	 esp, 8
  03209	50		 push	 eax
  0320a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03210	83 c4 04	 add	 esp, 4
  03213	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2359[ebp], eax
  03219	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0321d	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2359[ebp]
  03223	83 e1 01	 and	 ecx, 1
  03226	c1 e1 08	 shl	 ecx, 8
  03229	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  0322f	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  03235	0b d1		 or	 edx, ecx
  03237	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0323b	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 1570 : 		task_database[i].escort_required_threshold       = IntValue(p);

  03241	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03246	6a 00		 push	 0
  03248	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0324e	83 c4 08	 add	 esp, 8
  03251	50		 push	 eax
  03252	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03258	83 c4 04	 add	 esp, 4
  0325b	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2375[ebp], eax
  03261	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03265	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2375[ebp]
  0326b	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0326e	c1 e1 09	 shl	 ecx, 9
  03271	8b 90 20 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03277	81 e2 ff e1 ff
	ff		 and	 edx, -7681		; ffffe1ffH
  0327d	0b d1		 or	 edx, ecx
  0327f	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03283	89 90 20 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32], edx

; 1571 : 		task_database[i].add_start_waypoint              = IntValue(p);

  03289	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0328e	6a 00		 push	 0
  03290	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03296	83 c4 08	 add	 esp, 8
  03299	50		 push	 eax
  0329a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  032a0	83 c4 04	 add	 esp, 4
  032a3	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2391[ebp], eax
  032a9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  032ad	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2391[ebp]
  032b3	83 e1 01	 and	 ecx, 1
  032b6	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  032bc	83 e2 fe	 and	 edx, -2			; fffffffeH
  032bf	0b d1		 or	 edx, ecx
  032c1	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  032c5	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1572 : 		task_database[i].primary_task                    = IntValue(p);

  032cb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  032d0	6a 00		 push	 0
  032d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  032d8	83 c4 08	 add	 esp, 8
  032db	50		 push	 eax
  032dc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  032e2	83 c4 04	 add	 esp, 4
  032e5	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2406[ebp], eax
  032eb	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  032ef	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2406[ebp]
  032f5	83 e1 01	 and	 ecx, 1
  032f8	d1 e1		 shl	 ecx, 1
  032fa	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03300	83 e2 fd	 and	 edx, -3			; fffffffdH
  03303	0b d1		 or	 edx, ecx
  03305	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03309	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1573 : 		task_database[i].solo_task                       = IntValue(p);

  0330f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03314	6a 00		 push	 0
  03316	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0331c	83 c4 08	 add	 esp, 8
  0331f	50		 push	 eax
  03320	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03326	83 c4 04	 add	 esp, 4
  03329	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2422[ebp], eax
  0332f	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03333	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2422[ebp]
  03339	83 e1 01	 and	 ecx, 1
  0333c	c1 e1 02	 shl	 ecx, 2
  0333f	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03345	83 e2 fb	 and	 edx, -5			; fffffffbH
  03348	0b d1		 or	 edx, ecx
  0334a	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0334e	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1574 : 		task_database[i].persistent_task                 = IntValue(p);

  03354	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03359	6a 00		 push	 0
  0335b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03361	83 c4 08	 add	 esp, 8
  03364	50		 push	 eax
  03365	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0336b	83 c4 04	 add	 esp, 4
  0336e	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2438[ebp], eax
  03374	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03378	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2438[ebp]
  0337e	83 e1 01	 and	 ecx, 1
  03381	c1 e1 03	 shl	 ecx, 3
  03384	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0338a	83 e2 f7	 and	 edx, -9			; fffffff7H
  0338d	0b d1		 or	 edx, ecx
  0338f	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03393	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1575 : 		task_database[i].visible_task                    = IntValue(p);

  03399	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0339e	6a 00		 push	 0
  033a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  033a6	83 c4 08	 add	 esp, 8
  033a9	50		 push	 eax
  033aa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  033b0	83 c4 04	 add	 esp, 4
  033b3	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2454[ebp], eax
  033b9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  033bd	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2454[ebp]
  033c3	83 e1 01	 and	 ecx, 1
  033c6	c1 e1 04	 shl	 ecx, 4
  033c9	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  033cf	83 e2 ef	 and	 edx, -17		; ffffffefH
  033d2	0b d1		 or	 edx, ecx
  033d4	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  033d8	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1576 : 		task_database[i].keysite_air_force_capacity      = IntValue(p);

  033de	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  033e3	6a 00		 push	 0
  033e5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  033eb	83 c4 08	 add	 esp, 8
  033ee	50		 push	 eax
  033ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  033f5	83 c4 04	 add	 esp, 4
  033f8	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2470[ebp], eax
  033fe	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03402	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2470[ebp]
  03408	83 e1 03	 and	 ecx, 3
  0340b	c1 e1 05	 shl	 ecx, 5
  0340e	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03414	83 e2 9f	 and	 edx, -97		; ffffff9fH
  03417	0b d1		 or	 edx, ecx
  03419	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0341d	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1577 : 		task_database[i].assess_landing                  = IntValue(p);

  03423	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03428	6a 00		 push	 0
  0342a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03430	83 c4 08	 add	 esp, 8
  03433	50		 push	 eax
  03434	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0343a	83 c4 04	 add	 esp, 4
  0343d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2486[ebp], eax
  03443	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03447	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2486[ebp]
  0344d	83 e1 01	 and	 ecx, 1
  03450	c1 e1 07	 shl	 ecx, 7
  03453	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03459	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  0345f	0b d1		 or	 edx, ecx
  03461	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03465	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1578 : 		task_database[i].task_route_search               = IntValue(p);

  0346b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03470	6a 00		 push	 0
  03472	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03478	83 c4 08	 add	 esp, 8
  0347b	50		 push	 eax
  0347c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03482	83 c4 04	 add	 esp, 4
  03485	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2502[ebp], eax
  0348b	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0348f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2502[ebp]
  03495	83 e1 01	 and	 ecx, 1
  03498	c1 e1 08	 shl	 ecx, 8
  0349b	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  034a1	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  034a7	0b d1		 or	 edx, ecx
  034a9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  034ad	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1579 : 		task_database[i].perform_debrief                 = IntValue(p);

  034b3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  034b8	6a 00		 push	 0
  034ba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  034c0	83 c4 08	 add	 esp, 8
  034c3	50		 push	 eax
  034c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  034ca	83 c4 04	 add	 esp, 4
  034cd	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2518[ebp], eax
  034d3	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  034d7	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2518[ebp]
  034dd	83 e1 01	 and	 ecx, 1
  034e0	c1 e1 09	 shl	 ecx, 9
  034e3	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  034e9	81 e2 ff fd ff
	ff		 and	 edx, -513		; fffffdffH
  034ef	0b d1		 or	 edx, ecx
  034f1	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  034f5	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1580 : 		task_database[i].delay_task_assignment           = IntValue(p);

  034fb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03500	6a 00		 push	 0
  03502	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03508	83 c4 08	 add	 esp, 8
  0350b	50		 push	 eax
  0350c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03512	83 c4 04	 add	 esp, 4
  03515	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2534[ebp], eax
  0351b	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0351f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2534[ebp]
  03525	83 e1 01	 and	 ecx, 1
  03528	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  0352b	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03531	81 e2 ff fb ff
	ff		 and	 edx, -1025		; fffffbffH
  03537	0b d1		 or	 edx, ecx
  03539	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0353d	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1581 : 		task_database[i].task_objective_preview          = IntValue(p);

  03543	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03548	6a 00		 push	 0
  0354a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03550	83 c4 08	 add	 esp, 8
  03553	50		 push	 eax
  03554	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0355a	83 c4 04	 add	 esp, 4
  0355d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2550[ebp], eax
  03563	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03567	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2550[ebp]
  0356d	83 e1 03	 and	 ecx, 3
  03570	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  03573	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03579	81 e2 ff e7 ff
	ff		 and	 edx, -6145		; ffffe7ffH
  0357f	0b d1		 or	 edx, ecx
  03581	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03585	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1582 : 		task_database[i].counts_towards_player_log       = IntValue(p);

  0358b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03590	6a 00		 push	 0
  03592	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03598	83 c4 08	 add	 esp, 8
  0359b	50		 push	 eax
  0359c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  035a2	83 c4 04	 add	 esp, 4
  035a5	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2566[ebp], eax
  035ab	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035af	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2566[ebp]
  035b5	83 e1 01	 and	 ecx, 1
  035b8	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  035bb	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  035c1	81 e2 ff df ff
	ff		 and	 edx, -8193		; ffffdfffH
  035c7	0b d1		 or	 edx, ecx
  035c9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035cd	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1583 : 		task_database[i].wait_for_end_task               = IntValue(p);

  035d3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  035d8	6a 00		 push	 0
  035da	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  035e0	83 c4 08	 add	 esp, 8
  035e3	50		 push	 eax
  035e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  035ea	83 c4 04	 add	 esp, 4
  035ed	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2582[ebp], eax
  035f3	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035f7	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2582[ebp]
  035fd	83 e1 01	 and	 ecx, 1
  03600	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  03603	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03609	81 e2 ff bf ff
	ff		 and	 edx, -16385		; ffffbfffH
  0360f	0b d1		 or	 edx, ecx
  03611	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03615	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1584 : 		task_database[i].player_reserve_factor           = IntValue(p);

  0361b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03620	6a 00		 push	 0
  03622	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03628	83 c4 08	 add	 esp, 8
  0362b	50		 push	 eax
  0362c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03632	83 c4 04	 add	 esp, 4
  03635	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2598[ebp], eax
  0363b	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0363f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2598[ebp]
  03645	83 e1 07	 and	 ecx, 7
  03648	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  0364b	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03651	81 e2 ff 7f fc
	ff		 and	 edx, -229377		; fffc7fffH
  03657	0b d1		 or	 edx, ecx
  03659	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0365d	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1585 : 		task_database[i].task_pass_percentage_partial    = IntValue(p);

  03663	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03668	6a 00		 push	 0
  0366a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03670	83 c4 08	 add	 esp, 8
  03673	50		 push	 eax
  03674	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0367a	83 c4 04	 add	 esp, 4
  0367d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2614[ebp], eax
  03683	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03687	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2614[ebp]
  0368d	83 e1 7f	 and	 ecx, 127		; 0000007fH
  03690	c1 e1 12	 shl	 ecx, 18			; 00000012H
  03693	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03699	81 e2 ff ff 03
	fe		 and	 edx, -33292289		; fe03ffffH
  0369f	0b d1		 or	 edx, ecx
  036a1	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036a5	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1586 : 		task_database[i].task_pass_percentage_success    = IntValue(p);

  036ab	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  036b0	6a 00		 push	 0
  036b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  036b8	83 c4 08	 add	 esp, 8
  036bb	50		 push	 eax
  036bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  036c2	83 c4 04	 add	 esp, 4
  036c5	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2630[ebp], eax
  036cb	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036cf	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2630[ebp]
  036d5	83 e1 7f	 and	 ecx, 127		; 0000007fH
  036d8	c1 e1 19	 shl	 ecx, 25			; 00000019H
  036db	8b 90 28 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  036e1	81 e2 ff ff ff
	01		 and	 edx, 33554431		; 01ffffffH
  036e7	0b d1		 or	 edx, ecx
  036e9	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036ed	89 90 28 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40], edx

; 1587 : 		task_database[i].task_completed_score            = IntValue(p);

  036f3	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  036f8	6a 00		 push	 0
  036fa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03700	83 c4 08	 add	 esp, 8
  03703	50		 push	 eax
  03704	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0370a	83 c4 04	 add	 esp, 4
  0370d	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2646[ebp], eax
  03713	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03717	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2646[ebp]
  0371d	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  03723	8b 90 2c 00 00
	00		 mov	 edx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+44]
  03729	81 e2 00 00 ff
	ff		 and	 edx, -65536		; ffff0000H
  0372f	0b d1		 or	 edx, ecx
  03731	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03735	89 90 2c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+44], edx

; 1588 : 		task_database[i].movement_type                   = ( movement_types ) IntValue(p);

  0373b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03740	6a 00		 push	 0
  03742	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03748	83 c4 08	 add	 esp, 8
  0374b	50		 push	 eax
  0374c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03752	83 c4 04	 add	 esp, 4
  03755	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  03759	89 81 30 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+48], eax

; 1589 : 		k = 0;

  0375f	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0

; 1590 : 		j = IntValue(p); if (j == 1) k = 1;

  03766	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0376b	6a 00		 push	 0
  0376d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03773	83 c4 08	 add	 esp, 8
  03776	50		 push	 eax
  03777	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0377d	83 c4 04	 add	 esp, 4
  03780	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  03783	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  03787	75 07		 jne	 SHORT $LN60@ReadGWutIn
  03789	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _k$[ebp], 1
$LN60@ReadGWutIn:

; 1591 : 		j = IntValue(p); if (j == 1) k = k | 2;

  03790	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03795	6a 00		 push	 0
  03797	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0379d	83 c4 08	 add	 esp, 8
  037a0	50		 push	 eax
  037a1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  037a7	83 c4 04	 add	 esp, 4
  037aa	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  037ad	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  037b1	75 09		 jne	 SHORT $LN61@ReadGWutIn
  037b3	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  037b6	83 c8 02	 or	 eax, 2
  037b9	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN61@ReadGWutIn:

; 1592 : 		j = IntValue(p); if (j == 1) k = k | 4;

  037bc	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  037c1	6a 00		 push	 0
  037c3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  037c9	83 c4 08	 add	 esp, 8
  037cc	50		 push	 eax
  037cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  037d3	83 c4 04	 add	 esp, 4
  037d6	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  037d9	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  037dd	75 09		 jne	 SHORT $LN62@ReadGWutIn
  037df	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  037e2	83 c8 04	 or	 eax, 4
  037e5	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN62@ReadGWutIn:

; 1593 : 		j = IntValue(p); if (j == 1) k = k | 8;

  037e8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  037ed	6a 00		 push	 0
  037ef	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  037f5	83 c4 08	 add	 esp, 8
  037f8	50		 push	 eax
  037f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  037ff	83 c4 04	 add	 esp, 4
  03802	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  03805	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  03809	75 09		 jne	 SHORT $LN63@ReadGWutIn
  0380b	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  0380e	83 c8 08	 or	 eax, 8
  03811	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN63@ReadGWutIn:

; 1594 : 		j = IntValue(p); if (j == 1) k = k | 16;

  03814	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03819	6a 00		 push	 0
  0381b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03821	83 c4 08	 add	 esp, 8
  03824	50		 push	 eax
  03825	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0382b	83 c4 04	 add	 esp, 4
  0382e	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  03831	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  03835	75 09		 jne	 SHORT $LN64@ReadGWutIn
  03837	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  0383a	83 c8 10	 or	 eax, 16			; 00000010H
  0383d	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN64@ReadGWutIn:

; 1595 : 		j = IntValue(p); if (j == 1) k = k | 32;

  03840	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03845	6a 00		 push	 0
  03847	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0384d	83 c4 08	 add	 esp, 8
  03850	50		 push	 eax
  03851	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03857	83 c4 04	 add	 esp, 4
  0385a	89 45 f0	 mov	 DWORD PTR _j$[ebp], eax
  0385d	83 7d f0 01	 cmp	 DWORD PTR _j$[ebp], 1
  03861	75 09		 jne	 SHORT $LN65@ReadGWutIn
  03863	8b 45 ec	 mov	 eax, DWORD PTR _k$[ebp]
  03866	83 c8 20	 or	 eax, 32			; 00000020H
  03869	89 45 ec	 mov	 DWORD PTR _k$[ebp], eax
$LN65@ReadGWutIn:

; 1596 : //    fprintf(fout,"%d %d\n",task_database[i].landing_types, k);
; 1597 : 		task_database[i].landing_types = k;

  0386c	6b 45 f4 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03870	8b 4d ec	 mov	 ecx, DWORD PTR _k$[ebp]
  03873	89 88 34 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52], ecx

; 1598 : 		task_database[i].ai_stats.air_attack_strength    = IntValue(p);

  03879	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0387e	6a 00		 push	 0
  03880	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03886	83 c4 08	 add	 esp, 8
  03889	50		 push	 eax
  0388a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03890	83 c4 04	 add	 esp, 4
  03893	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  03897	89 81 38 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+56], eax

; 1599 : 		task_database[i].ai_stats.ground_attack_strength = IntValue(p);

  0389d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  038a2	6a 00		 push	 0
  038a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  038aa	83 c4 08	 add	 esp, 8
  038ad	50		 push	 eax
  038ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  038b4	83 c4 04	 add	 esp, 4
  038b7	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  038bb	89 81 3c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+60], eax

; 1600 : 		task_database[i].ai_stats.movement_speed         = IntValue(p);

  038c1	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  038c6	6a 00		 push	 0
  038c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  038ce	83 c4 08	 add	 esp, 8
  038d1	50		 push	 eax
  038d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  038d8	83 c4 04	 add	 esp, 4
  038db	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  038df	89 81 40 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+64], eax

; 1601 : 		task_database[i].ai_stats.movement_stealth       = IntValue(p);

  038e5	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  038ea	6a 00		 push	 0
  038ec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  038f2	83 c4 08	 add	 esp, 8
  038f5	50		 push	 eax
  038f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  038fc	83 c4 04	 add	 esp, 4
  038ff	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  03903	89 81 44 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+68], eax

; 1602 : 		task_database[i].ai_stats.cargo_space            = IntValue(p);

  03909	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0390e	6a 00		 push	 0
  03910	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03916	83 c4 08	 add	 esp, 8
  03919	50		 push	 eax
  0391a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03920	83 c4 04	 add	 esp, 4
  03923	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  03927	89 81 48 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+72], eax

; 1603 : 		task_database[i].ai_stats.troop_space            = IntValue(p);

  0392d	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03932	6a 00		 push	 0
  03934	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0393a	83 c4 08	 add	 esp, 8
  0393d	50		 push	 eax
  0393e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03944	83 c4 04	 add	 esp, 4
  03947	6b 4d f4 50	 imul	 ecx, DWORD PTR _i$[ebp], 80
  0394b	89 81 4c 00 00
	00		 mov	 DWORD PTR ?task_database@@3PAUTASK_DATA@@A[ecx+76], eax

; 1604 : 
; 1605 : 		fscanf(f,"%[^\n]\n",buf);

  03951	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03957	50		 push	 eax
  03958	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0395d	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  03960	51		 push	 ecx
  03961	e8 00 00 00 00	 call	 _fscanf
  03966	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1606 : 		TESTDUMP(buf);

  03969	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  03970	74 25		 je	 SHORT $LN66@ReadGWutIn
  03972	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03978	50		 push	 eax
  03979	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0397e	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  03981	51		 push	 ecx
  03982	e8 00 00 00 00	 call	 _fprintf
  03987	83 c4 0c	 add	 esp, 12			; 0000000cH
  0398a	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  0398d	50		 push	 eax
  0398e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  03994	83 c4 04	 add	 esp, 4
$LN66@ReadGWutIn:

; 1607 : 	}

  03997	e9 5f f5 ff ff	 jmp	 $LN59@ReadGWutIn
$LN13@ReadGWutIn:

; 1608 : 
; 1609 : 	//read WAYPOINTS
; 1610 : 
; 1611 : 	if (READ_HEADER)

  0399c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  039a3	74 18		 je	 SHORT $LN67@ReadGWutIn

; 1612 : 		fscanf(f,"%[^\n]\n",buf);

  039a5	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  039ab	50		 push	 eax
  039ac	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  039b1	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  039b4	51		 push	 ecx
  039b5	e8 00 00 00 00	 call	 _fscanf
  039ba	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN67@ReadGWutIn:

; 1613 : 	TESTDUMP(buf);

  039bd	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  039c4	74 25		 je	 SHORT $LN68@ReadGWutIn
  039c6	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  039cc	50		 push	 eax
  039cd	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  039d2	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  039d5	51		 push	 ecx
  039d6	e8 00 00 00 00	 call	 _fprintf
  039db	83 c4 0c	 add	 esp, 12			; 0000000cH
  039de	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  039e1	50		 push	 eax
  039e2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  039e8	83 c4 04	 add	 esp, 4
$LN68@ReadGWutIn:

; 1614 : 
; 1615 : 	fscanf(f,"%[^\n]\n",buf);

  039eb	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  039f1	50		 push	 eax
  039f2	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  039f7	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  039fa	51		 push	 ecx
  039fb	e8 00 00 00 00	 call	 _fscanf
  03a00	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1616 : 	// read first values
; 1617 : 	TESTDUMP(buf);

  03a03	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  03a0a	74 25		 je	 SHORT $LN69@ReadGWutIn
  03a0c	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03a12	50		 push	 eax
  03a13	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  03a18	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  03a1b	51		 push	 ecx
  03a1c	e8 00 00 00 00	 call	 _fprintf
  03a21	83 c4 0c	 add	 esp, 12			; 0000000cH
  03a24	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  03a27	50		 push	 eax
  03a28	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  03a2e	83 c4 04	 add	 esp, 4
$LN69@ReadGWutIn:

; 1618 : 
; 1619 : 	while (!(strcmp(buf,"[GUIDE CRITERIA]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  03a31	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FGOFBLEA@?$FLGUIDE?5CRITERIA?$FN@
  03a36	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03a3c	50		 push	 eax
  03a3d	e8 00 00 00 00	 call	 _strcmp
  03a42	83 c4 08	 add	 esp, 8
  03a45	85 c0		 test	 eax, eax
  03a47	0f 84 8e 0a 00
	00		 je	 $LN15@ReadGWutIn
  03a4d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  03a52	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03a58	50		 push	 eax
  03a59	e8 00 00 00 00	 call	 _strcmp
  03a5e	83 c4 08	 add	 esp, 8
  03a61	85 c0		 test	 eax, eax
  03a63	0f 84 72 0a 00
	00		 je	 $LN15@ReadGWutIn

; 1620 : 	{
; 1621 : 		p = strtok(buf,",");

  03a69	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03a6e	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  03a74	50		 push	 eax
  03a75	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03a7b	83 c4 08	 add	 esp, 8
  03a7e	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1622 : 		i = atoi(p);

  03a84	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  03a8a	50		 push	 eax
  03a8b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03a91	83 c4 04	 add	 esp, 4
  03a94	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1623 : 		//get entity number
; 1624 : 		p = strtok(NULL,",");

  03a97	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03a9c	6a 00		 push	 0
  03a9e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03aa4	83 c4 08	 add	 esp, 8
  03aa7	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1625 : 		//skip full name
; 1626 : 
; 1627 : 		waypoint_database[i].verbose_operational_state              = IntValue(p);

  03aad	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03ab2	6a 00		 push	 0
  03ab4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03aba	83 c4 08	 add	 esp, 8
  03abd	50		 push	 eax
  03abe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03ac4	83 c4 04	 add	 esp, 4
  03ac7	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2808[ebp], eax
  03acd	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ad1	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2808[ebp]
  03ad7	83 e1 3f	 and	 ecx, 63			; 0000003fH
  03ada	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03ae0	83 e2 c0	 and	 edx, -64		; ffffffc0H
  03ae3	0b d1		 or	 edx, ecx
  03ae5	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ae9	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1628 : 		waypoint_database[i].mobile_follow_waypoint_offset          = IntValue(p);

  03aef	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03af4	6a 00		 push	 0
  03af6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03afc	83 c4 08	 add	 esp, 8
  03aff	50		 push	 eax
  03b00	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03b06	83 c4 04	 add	 esp, 4
  03b09	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2823[ebp], eax
  03b0f	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03b13	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2823[ebp]
  03b19	83 e1 01	 and	 ecx, 1
  03b1c	c1 e1 06	 shl	 ecx, 6
  03b1f	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03b25	83 e2 bf	 and	 edx, -65		; ffffffbfH
  03b28	0b d1		 or	 edx, ecx
  03b2a	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03b2e	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1629 : 		waypoint_database[i].waypoint_action_message                = IntValue(p);

  03b34	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03b39	6a 00		 push	 0
  03b3b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03b41	83 c4 08	 add	 esp, 8
  03b44	50		 push	 eax
  03b45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03b4b	83 c4 04	 add	 esp, 4
  03b4e	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2839[ebp], eax
  03b54	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03b58	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2839[ebp]
  03b5e	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  03b64	c1 e1 07	 shl	 ecx, 7
  03b67	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03b6d	81 e2 7f 00 ff
	ff		 and	 edx, -65409		; ffff007fH
  03b73	0b d1		 or	 edx, ecx
  03b75	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03b79	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1630 : 		waypoint_database[i].waypoint_reached_message               = IntValue(p);

  03b7f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03b84	6a 00		 push	 0
  03b86	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03b8c	83 c4 08	 add	 esp, 8
  03b8f	50		 push	 eax
  03b90	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03b96	83 c4 04	 add	 esp, 4
  03b99	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2855[ebp], eax
  03b9f	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ba3	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2855[ebp]
  03ba9	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  03baf	c1 e1 10	 shl	 ecx, 16			; 00000010H
  03bb2	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03bb8	81 e2 ff ff 00
	fe		 and	 edx, -33488897		; fe00ffffH
  03bbe	0b d1		 or	 edx, ecx
  03bc0	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03bc4	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1631 : 		waypoint_database[i].waypoint_reached_return_value          = IntValue(p);

  03bca	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03bcf	6a 00		 push	 0
  03bd1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03bd7	83 c4 08	 add	 esp, 8
  03bda	50		 push	 eax
  03bdb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03be1	83 c4 04	 add	 esp, 4
  03be4	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2871[ebp], eax
  03bea	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03bee	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2871[ebp]
  03bf4	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03bf7	c1 e1 19	 shl	 ecx, 25			; 00000019H
  03bfa	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03c00	81 e2 ff ff ff
	e1		 and	 edx, -503316481		; e1ffffffH
  03c06	0b d1		 or	 edx, ecx
  03c08	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03c0c	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1632 : 		waypoint_database[i].planner_moveable                       = IntValue(p);

  03c12	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03c17	6a 00		 push	 0
  03c19	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03c1f	83 c4 08	 add	 esp, 8
  03c22	50		 push	 eax
  03c23	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03c29	83 c4 04	 add	 esp, 4
  03c2c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2887[ebp], eax
  03c32	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03c36	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2887[ebp]
  03c3c	83 e1 01	 and	 ecx, 1
  03c3f	c1 e1 1d	 shl	 ecx, 29			; 0000001dH
  03c42	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03c48	81 e2 ff ff ff
	df		 and	 edx, -536870913		; dfffffffH
  03c4e	0b d1		 or	 edx, ecx
  03c50	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03c54	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1633 : 		waypoint_database[i].objective_waypoint                     = IntValue(p);

  03c5a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03c5f	6a 00		 push	 0
  03c61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03c67	83 c4 08	 add	 esp, 8
  03c6a	50		 push	 eax
  03c6b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03c71	83 c4 04	 add	 esp, 4
  03c74	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2903[ebp], eax
  03c7a	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03c7e	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2903[ebp]
  03c84	83 e1 01	 and	 ecx, 1
  03c87	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  03c8a	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03c90	81 e2 ff ff ff
	bf		 and	 edx, -1073741825	; bfffffffH
  03c96	0b d1		 or	 edx, ecx
  03c98	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03c9c	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1634 : 		waypoint_database[i].player_skip_waypoint                   = IntValue(p);

  03ca2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03ca7	6a 00		 push	 0
  03ca9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03caf	83 c4 08	 add	 esp, 8
  03cb2	50		 push	 eax
  03cb3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03cb9	83 c4 04	 add	 esp, 4
  03cbc	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2919[ebp], eax
  03cc2	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03cc6	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2919[ebp]
  03ccc	83 e1 01	 and	 ecx, 1
  03ccf	c1 e1 1f	 shl	 ecx, 31			; 0000001fH
  03cd2	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03cd8	81 e2 ff ff ff
	7f		 and	 edx, 2147483647		; 7fffffffH
  03cde	0b d1		 or	 edx, ecx
  03ce0	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ce4	89 90 04 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4], edx

; 1635 : 		waypoint_database[i].check_waypoint_action                  = IntValue(p);

  03cea	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03cef	6a 00		 push	 0
  03cf1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03cf7	83 c4 08	 add	 esp, 8
  03cfa	50		 push	 eax
  03cfb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03d01	83 c4 04	 add	 esp, 4
  03d04	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2935[ebp], eax
  03d0a	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03d0e	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2935[ebp]
  03d14	83 e1 01	 and	 ecx, 1
  03d17	8b 90 08 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+8]
  03d1d	83 e2 fe	 and	 edx, -2			; fffffffeH
  03d20	0b d1		 or	 edx, ecx
  03d22	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03d26	89 90 08 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+8], edx

; 1636 : 		waypoint_database[i].guide_sub_type                         = IntValue(p);

  03d2c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03d31	6a 00		 push	 0
  03d33	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03d39	83 c4 08	 add	 esp, 8
  03d3c	50		 push	 eax
  03d3d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03d43	83 c4 04	 add	 esp, 4
  03d46	6b 4d f4 64	 imul	 ecx, DWORD PTR _i$[ebp], 100
  03d4a	89 81 0c 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[ecx+12], eax

; 1637 : 		waypoint_database[i].fw_minimum_previous_waypoint_distance  = FloatValue(p);

  03d50	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03d55	6a 00		 push	 0
  03d57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03d5d	83 c4 08	 add	 esp, 8
  03d60	50		 push	 eax
  03d61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03d67	83 c4 04	 add	 esp, 4
  03d6a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5033[ebp]
  03d70	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5033[ebp]
  03d76	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03d7a	d9 98 14 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+20]

; 1638 : 		waypoint_database[i].fw_action_radius                       = FloatValue(p);

  03d80	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03d85	6a 00		 push	 0
  03d87	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03d8d	83 c4 08	 add	 esp, 8
  03d90	50		 push	 eax
  03d91	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03d97	83 c4 04	 add	 esp, 4
  03d9a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5037[ebp]
  03da0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5037[ebp]
  03da6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03daa	d9 98 18 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+24]

; 1639 : 		waypoint_database[i].fw_reached_radius                      = FloatValue(p);

  03db0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03db5	6a 00		 push	 0
  03db7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03dbd	83 c4 08	 add	 esp, 8
  03dc0	50		 push	 eax
  03dc1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03dc7	83 c4 04	 add	 esp, 4
  03dca	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5041[ebp]
  03dd0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5041[ebp]
  03dd6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03dda	d9 98 1c 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+28]

; 1640 : 		waypoint_database[i].fw_velocity                            = FloatValue(p);

  03de0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03de5	6a 00		 push	 0
  03de7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03ded	83 c4 08	 add	 esp, 8
  03df0	50		 push	 eax
  03df1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03df7	83 c4 04	 add	 esp, 4
  03dfa	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5045[ebp]
  03e00	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5045[ebp]
  03e06	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e0a	d9 98 20 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+32]

; 1641 : 		waypoint_database[i].fw_criteria_last_to_reach              = IntValue(p);

  03e10	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03e15	6a 00		 push	 0
  03e17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03e1d	83 c4 08	 add	 esp, 8
  03e20	50		 push	 eax
  03e21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03e27	83 c4 04	 add	 esp, 4
  03e2a	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv2994[ebp], eax
  03e30	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e34	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv2994[ebp]
  03e3a	83 e1 01	 and	 ecx, 1
  03e3d	8b 90 24 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03e43	83 e2 fe	 and	 edx, -2			; fffffffeH
  03e46	0b d1		 or	 edx, ecx
  03e48	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e4c	89 90 24 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36], edx

; 1642 : 		waypoint_database[i].fw_criteria_transmit_recon             = IntValue(p);

  03e52	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03e57	6a 00		 push	 0
  03e59	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03e5f	83 c4 08	 add	 esp, 8
  03e62	50		 push	 eax
  03e63	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03e69	83 c4 04	 add	 esp, 4
  03e6c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3009[ebp], eax
  03e72	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e76	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3009[ebp]
  03e7c	83 e1 01	 and	 ecx, 1
  03e7f	d1 e1		 shl	 ecx, 1
  03e81	8b 90 24 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03e87	83 e2 fd	 and	 edx, -3			; fffffffdH
  03e8a	0b d1		 or	 edx, ecx
  03e8c	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e90	89 90 24 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36], edx

; 1643 : 		waypoint_database[i].fw_position_type                       = IntValue(p);

  03e96	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03e9b	6a 00		 push	 0
  03e9d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03ea3	83 c4 08	 add	 esp, 8
  03ea6	50		 push	 eax
  03ea7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03ead	83 c4 04	 add	 esp, 4
  03eb0	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3025[ebp], eax
  03eb6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03eba	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3025[ebp]
  03ec0	83 e1 03	 and	 ecx, 3
  03ec3	c1 e1 02	 shl	 ecx, 2
  03ec6	8b 90 24 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03ecc	83 e2 f3	 and	 edx, -13		; fffffff3H
  03ecf	0b d1		 or	 edx, ecx
  03ed1	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ed5	89 90 24 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36], edx

; 1644 : 		waypoint_database[i].fw_movement_type                       = IntValue(p);

  03edb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03ee0	6a 00		 push	 0
  03ee2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03ee8	83 c4 08	 add	 esp, 8
  03eeb	50		 push	 eax
  03eec	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03ef2	83 c4 04	 add	 esp, 4
  03ef5	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3041[ebp], eax
  03efb	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03eff	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3041[ebp]
  03f05	83 e1 07	 and	 ecx, 7
  03f08	c1 e1 04	 shl	 ecx, 4
  03f0b	8b 90 24 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03f11	83 e2 8f	 and	 edx, -113		; ffffff8fH
  03f14	0b d1		 or	 edx, ecx
  03f16	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f1a	89 90 24 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36], edx

; 1645 : 		waypoint_database[i].hc_minimum_previous_waypoint_distance  = FloatValue(p);

  03f20	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03f25	6a 00		 push	 0
  03f27	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03f2d	83 c4 08	 add	 esp, 8
  03f30	50		 push	 eax
  03f31	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03f37	83 c4 04	 add	 esp, 4
  03f3a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5069[ebp]
  03f40	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5069[ebp]
  03f46	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f4a	d9 98 28 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+40]

; 1646 : 		waypoint_database[i].hc_action_radius                       = FloatValue(p);

  03f50	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03f55	6a 00		 push	 0
  03f57	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03f5d	83 c4 08	 add	 esp, 8
  03f60	50		 push	 eax
  03f61	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03f67	83 c4 04	 add	 esp, 4
  03f6a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5073[ebp]
  03f70	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5073[ebp]
  03f76	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f7a	d9 98 2c 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+44]

; 1647 : 		waypoint_database[i].hc_reached_radius                      = FloatValue(p);

  03f80	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03f85	6a 00		 push	 0
  03f87	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03f8d	83 c4 08	 add	 esp, 8
  03f90	50		 push	 eax
  03f91	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03f97	83 c4 04	 add	 esp, 4
  03f9a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5077[ebp]
  03fa0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5077[ebp]
  03fa6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03faa	d9 98 30 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+48]

; 1648 : 		waypoint_database[i].hc_velocity                            = FloatValue(p);

  03fb0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03fb5	6a 00		 push	 0
  03fb7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03fbd	83 c4 08	 add	 esp, 8
  03fc0	50		 push	 eax
  03fc1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  03fc7	83 c4 04	 add	 esp, 4
  03fca	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5081[ebp]
  03fd0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5081[ebp]
  03fd6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03fda	d9 98 34 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+52]

; 1649 : 		waypoint_database[i].hc_criteria_last_to_reach              = IntValue(p);

  03fe0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  03fe5	6a 00		 push	 0
  03fe7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  03fed	83 c4 08	 add	 esp, 8
  03ff0	50		 push	 eax
  03ff1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  03ff7	83 c4 04	 add	 esp, 4
  03ffa	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3093[ebp], eax
  04000	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04004	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3093[ebp]
  0400a	83 e1 01	 and	 ecx, 1
  0400d	8b 90 38 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  04013	83 e2 fe	 and	 edx, -2			; fffffffeH
  04016	0b d1		 or	 edx, ecx
  04018	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0401c	89 90 38 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56], edx

; 1650 : 		waypoint_database[i].hc_criteria_transmit_recon             = IntValue(p);

  04022	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04027	6a 00		 push	 0
  04029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0402f	83 c4 08	 add	 esp, 8
  04032	50		 push	 eax
  04033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04039	83 c4 04	 add	 esp, 4
  0403c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3108[ebp], eax
  04042	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04046	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3108[ebp]
  0404c	83 e1 01	 and	 ecx, 1
  0404f	d1 e1		 shl	 ecx, 1
  04051	8b 90 38 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  04057	83 e2 fd	 and	 edx, -3			; fffffffdH
  0405a	0b d1		 or	 edx, ecx
  0405c	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04060	89 90 38 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56], edx

; 1651 : 		waypoint_database[i].hc_position_type                       = IntValue(p);

  04066	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0406b	6a 00		 push	 0
  0406d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04073	83 c4 08	 add	 esp, 8
  04076	50		 push	 eax
  04077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0407d	83 c4 04	 add	 esp, 4
  04080	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3124[ebp], eax
  04086	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0408a	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3124[ebp]
  04090	83 e1 03	 and	 ecx, 3
  04093	c1 e1 02	 shl	 ecx, 2
  04096	8b 90 38 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  0409c	83 e2 f3	 and	 edx, -13		; fffffff3H
  0409f	0b d1		 or	 edx, ecx
  040a1	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040a5	89 90 38 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56], edx

; 1652 : 		waypoint_database[i].hc_movement_type                       = IntValue(p);

  040ab	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  040b0	6a 00		 push	 0
  040b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  040b8	83 c4 08	 add	 esp, 8
  040bb	50		 push	 eax
  040bc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  040c2	83 c4 04	 add	 esp, 4
  040c5	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3140[ebp], eax
  040cb	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040cf	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3140[ebp]
  040d5	83 e1 07	 and	 ecx, 7
  040d8	c1 e1 04	 shl	 ecx, 4
  040db	8b 90 38 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  040e1	83 e2 8f	 and	 edx, -113		; ffffff8fH
  040e4	0b d1		 or	 edx, ecx
  040e6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040ea	89 90 38 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56], edx

; 1653 : 		waypoint_database[i].rv_minimum_previous_waypoint_distance  = FloatValue(p);

  040f0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  040f5	6a 00		 push	 0
  040f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  040fd	83 c4 08	 add	 esp, 8
  04100	50		 push	 eax
  04101	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04107	83 c4 04	 add	 esp, 4
  0410a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5105[ebp]
  04110	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5105[ebp]
  04116	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0411a	d9 98 3c 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+60]

; 1654 : 		waypoint_database[i].rv_action_radius                       = FloatValue(p);

  04120	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04125	6a 00		 push	 0
  04127	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0412d	83 c4 08	 add	 esp, 8
  04130	50		 push	 eax
  04131	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04137	83 c4 04	 add	 esp, 4
  0413a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5109[ebp]
  04140	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5109[ebp]
  04146	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0414a	d9 98 40 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+64]

; 1655 : 		waypoint_database[i].rv_reached_radius                      = FloatValue(p);

  04150	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04155	6a 00		 push	 0
  04157	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0415d	83 c4 08	 add	 esp, 8
  04160	50		 push	 eax
  04161	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04167	83 c4 04	 add	 esp, 4
  0416a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5113[ebp]
  04170	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5113[ebp]
  04176	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0417a	d9 98 44 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+68]

; 1656 : 		waypoint_database[i].rv_velocity                            = FloatValue(p);

  04180	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04185	6a 00		 push	 0
  04187	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0418d	83 c4 08	 add	 esp, 8
  04190	50		 push	 eax
  04191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04197	83 c4 04	 add	 esp, 4
  0419a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5117[ebp]
  041a0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5117[ebp]
  041a6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041aa	d9 98 48 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+72]

; 1657 : 		waypoint_database[i].rv_criteria_last_to_reach              = IntValue(p);

  041b0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  041b5	6a 00		 push	 0
  041b7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  041bd	83 c4 08	 add	 esp, 8
  041c0	50		 push	 eax
  041c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  041c7	83 c4 04	 add	 esp, 4
  041ca	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3192[ebp], eax
  041d0	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041d4	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3192[ebp]
  041da	83 e1 01	 and	 ecx, 1
  041dd	8b 90 4c 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  041e3	83 e2 fe	 and	 edx, -2			; fffffffeH
  041e6	0b d1		 or	 edx, ecx
  041e8	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041ec	89 90 4c 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76], edx

; 1658 : 		waypoint_database[i].rv_criteria_transmit_recon             = IntValue(p);

  041f2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  041f7	6a 00		 push	 0
  041f9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  041ff	83 c4 08	 add	 esp, 8
  04202	50		 push	 eax
  04203	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04209	83 c4 04	 add	 esp, 4
  0420c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3207[ebp], eax
  04212	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04216	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3207[ebp]
  0421c	83 e1 01	 and	 ecx, 1
  0421f	d1 e1		 shl	 ecx, 1
  04221	8b 90 4c 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  04227	83 e2 fd	 and	 edx, -3			; fffffffdH
  0422a	0b d1		 or	 edx, ecx
  0422c	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04230	89 90 4c 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76], edx

; 1659 : 		waypoint_database[i].rv_position_type                       = IntValue(p);

  04236	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0423b	6a 00		 push	 0
  0423d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04243	83 c4 08	 add	 esp, 8
  04246	50		 push	 eax
  04247	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0424d	83 c4 04	 add	 esp, 4
  04250	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3223[ebp], eax
  04256	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0425a	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3223[ebp]
  04260	83 e1 03	 and	 ecx, 3
  04263	c1 e1 02	 shl	 ecx, 2
  04266	8b 90 4c 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  0426c	83 e2 f3	 and	 edx, -13		; fffffff3H
  0426f	0b d1		 or	 edx, ecx
  04271	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04275	89 90 4c 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76], edx

; 1660 : 		waypoint_database[i].rv_movement_type                       = IntValue(p);

  0427b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04280	6a 00		 push	 0
  04282	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04288	83 c4 08	 add	 esp, 8
  0428b	50		 push	 eax
  0428c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04292	83 c4 04	 add	 esp, 4
  04295	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3239[ebp], eax
  0429b	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0429f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3239[ebp]
  042a5	83 e1 07	 and	 ecx, 7
  042a8	c1 e1 04	 shl	 ecx, 4
  042ab	8b 90 4c 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  042b1	83 e2 8f	 and	 edx, -113		; ffffff8fH
  042b4	0b d1		 or	 edx, ecx
  042b6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  042ba	89 90 4c 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76], edx

; 1661 : 		waypoint_database[i].sh_minimum_previous_waypoint_distance  = FloatValue(p);

  042c0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  042c5	6a 00		 push	 0
  042c7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  042cd	83 c4 08	 add	 esp, 8
  042d0	50		 push	 eax
  042d1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  042d7	83 c4 04	 add	 esp, 4
  042da	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5141[ebp]
  042e0	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5141[ebp]
  042e6	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  042ea	d9 98 50 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+80]

; 1662 : 		waypoint_database[i].sh_action_radius                       = FloatValue(p);

  042f0	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  042f5	6a 00		 push	 0
  042f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  042fd	83 c4 08	 add	 esp, 8
  04300	50		 push	 eax
  04301	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04307	83 c4 04	 add	 esp, 4
  0430a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5145[ebp]
  04310	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5145[ebp]
  04316	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0431a	d9 98 54 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+84]

; 1663 : 		waypoint_database[i].sh_reached_radius                      = FloatValue(p);

  04320	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04325	6a 00		 push	 0
  04327	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0432d	83 c4 08	 add	 esp, 8
  04330	50		 push	 eax
  04331	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04337	83 c4 04	 add	 esp, 4
  0433a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5149[ebp]
  04340	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5149[ebp]
  04346	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0434a	d9 98 58 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+88]

; 1664 : 		waypoint_database[i].sh_velocity                            = FloatValue(p);

  04350	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04355	6a 00		 push	 0
  04357	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0435d	83 c4 08	 add	 esp, 8
  04360	50		 push	 eax
  04361	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04367	83 c4 04	 add	 esp, 4
  0436a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5153[ebp]
  04370	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5153[ebp]
  04376	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0437a	d9 98 5c 00 00
	00		 fstp	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+92]

; 1665 : 		waypoint_database[i].sh_criteria_last_to_reach              = IntValue(p);

  04380	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04385	6a 00		 push	 0
  04387	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0438d	83 c4 08	 add	 esp, 8
  04390	50		 push	 eax
  04391	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04397	83 c4 04	 add	 esp, 4
  0439a	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3291[ebp], eax
  043a0	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  043a4	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3291[ebp]
  043aa	83 e1 01	 and	 ecx, 1
  043ad	8b 90 60 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  043b3	83 e2 fe	 and	 edx, -2			; fffffffeH
  043b6	0b d1		 or	 edx, ecx
  043b8	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  043bc	89 90 60 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96], edx

; 1666 : 		waypoint_database[i].sh_criteria_transmit_recon             = IntValue(p);

  043c2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  043c7	6a 00		 push	 0
  043c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  043cf	83 c4 08	 add	 esp, 8
  043d2	50		 push	 eax
  043d3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  043d9	83 c4 04	 add	 esp, 4
  043dc	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3306[ebp], eax
  043e2	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  043e6	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3306[ebp]
  043ec	83 e1 01	 and	 ecx, 1
  043ef	d1 e1		 shl	 ecx, 1
  043f1	8b 90 60 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  043f7	83 e2 fd	 and	 edx, -3			; fffffffdH
  043fa	0b d1		 or	 edx, ecx
  043fc	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04400	89 90 60 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96], edx

; 1667 : 		waypoint_database[i].sh_position_type                       = IntValue(p);

  04406	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0440b	6a 00		 push	 0
  0440d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04413	83 c4 08	 add	 esp, 8
  04416	50		 push	 eax
  04417	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0441d	83 c4 04	 add	 esp, 4
  04420	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3322[ebp], eax
  04426	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0442a	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3322[ebp]
  04430	83 e1 03	 and	 ecx, 3
  04433	c1 e1 02	 shl	 ecx, 2
  04436	8b 90 60 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  0443c	83 e2 f3	 and	 edx, -13		; fffffff3H
  0443f	0b d1		 or	 edx, ecx
  04441	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04445	89 90 60 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96], edx

; 1668 : 		waypoint_database[i].sh_movement_type                       = IntValue(p);

  0444b	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04450	6a 00		 push	 0
  04452	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04458	83 c4 08	 add	 esp, 8
  0445b	50		 push	 eax
  0445c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04462	83 c4 04	 add	 esp, 4
  04465	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3338[ebp], eax
  0446b	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0446f	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3338[ebp]
  04475	83 e1 07	 and	 ecx, 7
  04478	c1 e1 04	 shl	 ecx, 4
  0447b	8b 90 60 00 00
	00		 mov	 edx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  04481	83 e2 8f	 and	 edx, -113		; ffffff8fH
  04484	0b d1		 or	 edx, ecx
  04486	6b 45 f4 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0448a	89 90 60 00 00
	00		 mov	 DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96], edx

; 1669 : 
; 1670 : 		fscanf(f,"%[^\n]\n",buf);

  04490	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04496	50		 push	 eax
  04497	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0449c	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0449f	51		 push	 ecx
  044a0	e8 00 00 00 00	 call	 _fscanf
  044a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1671 : 		TESTDUMP(buf);

  044a8	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  044af	74 25		 je	 SHORT $LN70@ReadGWutIn
  044b1	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  044b7	50		 push	 eax
  044b8	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  044bd	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  044c0	51		 push	 ecx
  044c1	e8 00 00 00 00	 call	 _fprintf
  044c6	83 c4 0c	 add	 esp, 12			; 0000000cH
  044c9	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  044cc	50		 push	 eax
  044cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  044d3	83 c4 04	 add	 esp, 4
$LN70@ReadGWutIn:

; 1672 : 	}

  044d6	e9 56 f5 ff ff	 jmp	 $LN69@ReadGWutIn
$LN15@ReadGWutIn:

; 1673 : 
; 1674 : 
; 1675 : 	//read GUIDE CRITERIA
; 1676 : 
; 1677 : 	if (READ_HEADER)

  044db	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  044e2	74 18		 je	 SHORT $LN71@ReadGWutIn

; 1678 : 		fscanf(f,"%[^\n]\n",buf);

  044e4	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  044ea	50		 push	 eax
  044eb	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  044f0	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  044f3	51		 push	 ecx
  044f4	e8 00 00 00 00	 call	 _fscanf
  044f9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN71@ReadGWutIn:

; 1679 : 	TESTDUMP(buf);

  044fc	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04503	74 25		 je	 SHORT $LN72@ReadGWutIn
  04505	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0450b	50		 push	 eax
  0450c	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04511	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  04514	51		 push	 ecx
  04515	e8 00 00 00 00	 call	 _fprintf
  0451a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0451d	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04520	50		 push	 eax
  04521	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04527	83 c4 04	 add	 esp, 4
$LN72@ReadGWutIn:

; 1680 : 
; 1681 : 	fscanf(f,"%[^\n]\n",buf);

  0452a	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04530	50		 push	 eax
  04531	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  04536	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  04539	51		 push	 ecx
  0453a	e8 00 00 00 00	 call	 _fscanf
  0453f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1682 : 	// read first values
; 1683 : 	TESTDUMP(buf);

  04542	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04549	74 25		 je	 SHORT $LN73@ReadGWutIn
  0454b	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04551	50		 push	 eax
  04552	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04557	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0455a	51		 push	 ecx
  0455b	e8 00 00 00 00	 call	 _fprintf
  04560	83 c4 0c	 add	 esp, 12			; 0000000cH
  04563	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04566	50		 push	 eax
  04567	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  0456d	83 c4 04	 add	 esp, 4
$LN73@ReadGWutIn:

; 1684 : 
; 1685 : 	while (!(strcmp(buf,"[AMMO]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  04570	68 00 00 00 00	 push	 OFFSET ??_C@_06DKILLBPJ@?$FLAMMO?$FN@
  04575	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0457b	50		 push	 eax
  0457c	e8 00 00 00 00	 call	 _strcmp
  04581	83 c4 08	 add	 esp, 8
  04584	85 c0		 test	 eax, eax
  04586	0f 84 2d 04 00
	00		 je	 $LN17@ReadGWutIn
  0458c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  04591	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04597	50		 push	 eax
  04598	e8 00 00 00 00	 call	 _strcmp
  0459d	83 c4 08	 add	 esp, 8
  045a0	85 c0		 test	 eax, eax
  045a2	0f 84 11 04 00
	00		 je	 $LN17@ReadGWutIn

; 1686 : 	{
; 1687 : 		p = strtok(buf,",");

  045a8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  045ad	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  045b3	50		 push	 eax
  045b4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  045ba	83 c4 08	 add	 esp, 8
  045bd	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1688 : 		i = atoi(p);

  045c3	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  045c9	50		 push	 eax
  045ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  045d0	83 c4 04	 add	 esp, 4
  045d3	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1689 : 		//get entity number
; 1690 : 		p = strtok(NULL,",");

  045d6	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  045db	6a 00		 push	 0
  045dd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  045e3	83 c4 08	 add	 esp, 8
  045e6	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1691 : 		//skip full name
; 1692 : 
; 1693 : 		guide_database[i].evade_fire                 = IntValue(p);

  045ec	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  045f1	6a 00		 push	 0
  045f3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  045f9	83 c4 08	 add	 esp, 8
  045fc	50		 push	 eax
  045fd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04603	83 c4 04	 add	 esp, 4
  04606	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3395[ebp], eax
  0460c	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04610	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3395[ebp]
  04616	83 e1 01	 and	 ecx, 1
  04619	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  0461f	83 e2 fe	 and	 edx, -2			; fffffffeH
  04622	0b d1		 or	 edx, ecx
  04624	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04628	89 90 00 00 00
	00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax], edx

; 1694 : 		guide_database[i].follow_formation           = IntValue(p);

  0462e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04633	6a 00		 push	 0
  04635	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0463b	83 c4 08	 add	 esp, 8
  0463e	50		 push	 eax
  0463f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04645	83 c4 04	 add	 esp, 4
  04648	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3410[ebp], eax
  0464e	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04652	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3410[ebp]
  04658	83 e1 01	 and	 ecx, 1
  0465b	d1 e1		 shl	 ecx, 1
  0465d	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  04663	83 e2 fd	 and	 edx, -3			; fffffffdH
  04666	0b d1		 or	 edx, ecx
  04668	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0466c	89 90 00 00 00
	00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax], edx

; 1695 : 		guide_database[i].position_type              = IntValue(p);

  04672	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04677	6a 00		 push	 0
  04679	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0467f	83 c4 08	 add	 esp, 8
  04682	50		 push	 eax
  04683	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04689	83 c4 04	 add	 esp, 4
  0468c	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3426[ebp], eax
  04692	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04696	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3426[ebp]
  0469c	83 e1 07	 and	 ecx, 7
  0469f	c1 e1 02	 shl	 ecx, 2
  046a2	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  046a8	83 e2 e3	 and	 edx, -29		; ffffffe3H
  046ab	0b d1		 or	 edx, ecx
  046ad	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  046b1	89 90 00 00 00
	00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax], edx

; 1696 : 		guide_database[i].terrain_follow_mode        = IntValue(p);

  046b7	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  046bc	6a 00		 push	 0
  046be	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  046c4	83 c4 08	 add	 esp, 8
  046c7	50		 push	 eax
  046c8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  046ce	83 c4 04	 add	 esp, 4
  046d1	89 85 9c f6 ff
	ff		 mov	 DWORD PTR tv3442[ebp], eax
  046d7	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  046db	8b 8d 9c f6 ff
	ff		 mov	 ecx, DWORD PTR tv3442[ebp]
  046e1	83 e1 03	 and	 ecx, 3
  046e4	c1 e1 05	 shl	 ecx, 5
  046e7	8b 90 00 00 00
	00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  046ed	83 e2 9f	 and	 edx, -97		; ffffff9fH
  046f0	0b d1		 or	 edx, ecx
  046f2	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  046f6	89 90 00 00 00
	00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax], edx

; 1697 : 		guide_database[i].criteria[0].valid          = IntValue(p);

  046fc	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04701	6a 00		 push	 0
  04703	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04709	83 c4 08	 add	 esp, 8
  0470c	50		 push	 eax
  0470d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04713	83 c4 04	 add	 esp, 4
  04716	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  0471a	ba 08 00 00 00	 mov	 edx, 8
  0471f	6b d2 00	 imul	 edx, edx, 0
  04722	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1698 : 		guide_database[i].criteria[0].value          = FloatValue(p);

  04729	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0472e	6a 00		 push	 0
  04730	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04736	83 c4 08	 add	 esp, 8
  04739	50		 push	 eax
  0473a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04740	83 c4 04	 add	 esp, 4
  04743	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5224[ebp]
  04749	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5224[ebp]
  0474f	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04753	b9 08 00 00 00	 mov	 ecx, 8
  04758	6b d1 00	 imul	 edx, ecx, 0
  0475b	d9 9c 10 08 00
	00 00		 fstp	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]

; 1699 : 		guide_database[i].criteria[1].valid          = IntValue(p);

  04762	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04767	6a 00		 push	 0
  04769	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0476f	83 c4 08	 add	 esp, 8
  04772	50		 push	 eax
  04773	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04779	83 c4 04	 add	 esp, 4
  0477c	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  04780	ba 08 00 00 00	 mov	 edx, 8
  04785	c1 e2 00	 shl	 edx, 0
  04788	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1700 : 		guide_database[i].criteria[1].value          = rad (FloatValue(p));

  0478f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04794	6a 00		 push	 0
  04796	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0479c	83 c4 08	 add	 esp, 8
  0479f	50		 push	 eax
  047a0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  047a6	83 c4 04	 add	 esp, 4
  047a9	dd 9d 98 f6 ff
	ff		 fstp	 QWORD PTR tv5232[ebp]
  047af	f2 0f 10 85 98
	f6 ff ff	 movsd	 xmm0, QWORD PTR tv5232[ebp]
  047b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f91df46a0000000
  047bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  047c3	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  047c7	b9 08 00 00 00	 mov	 ecx, 8
  047cc	c1 e1 00	 shl	 ecx, 0
  047cf	f3 0f 11 84 08
	08 00 00 00	 movss	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8], xmm0

; 1701 : 		guide_database[i].criteria[2].valid          = IntValue(p);

  047d8	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  047dd	6a 00		 push	 0
  047df	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  047e5	83 c4 08	 add	 esp, 8
  047e8	50		 push	 eax
  047e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  047ef	83 c4 04	 add	 esp, 4
  047f2	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  047f6	ba 08 00 00 00	 mov	 edx, 8
  047fb	d1 e2		 shl	 edx, 1
  047fd	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1702 : 		guide_database[i].criteria[2].value          = FloatValue(p);

  04804	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04809	6a 00		 push	 0
  0480b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04811	83 c4 08	 add	 esp, 8
  04814	50		 push	 eax
  04815	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0481b	83 c4 04	 add	 esp, 4
  0481e	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5241[ebp]
  04824	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5241[ebp]
  0482a	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0482e	b9 08 00 00 00	 mov	 ecx, 8
  04833	d1 e1		 shl	 ecx, 1
  04835	d9 9c 08 08 00
	00 00		 fstp	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8]

; 1703 : 		guide_database[i].criteria[3].valid          = IntValue(p);

  0483c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04841	6a 00		 push	 0
  04843	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04849	83 c4 08	 add	 esp, 8
  0484c	50		 push	 eax
  0484d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04853	83 c4 04	 add	 esp, 4
  04856	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  0485a	ba 08 00 00 00	 mov	 edx, 8
  0485f	6b d2 03	 imul	 edx, edx, 3
  04862	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1704 : 		guide_database[i].criteria[3].value          = FloatValue(p);

  04869	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0486e	6a 00		 push	 0
  04870	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04876	83 c4 08	 add	 esp, 8
  04879	50		 push	 eax
  0487a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04880	83 c4 04	 add	 esp, 4
  04883	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5249[ebp]
  04889	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5249[ebp]
  0488f	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04893	b9 08 00 00 00	 mov	 ecx, 8
  04898	6b d1 03	 imul	 edx, ecx, 3
  0489b	d9 9c 10 08 00
	00 00		 fstp	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]

; 1705 : 		guide_database[i].criteria[4].valid          = IntValue(p);

  048a2	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  048a7	6a 00		 push	 0
  048a9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  048af	83 c4 08	 add	 esp, 8
  048b2	50		 push	 eax
  048b3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  048b9	83 c4 04	 add	 esp, 4
  048bc	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  048c0	ba 08 00 00 00	 mov	 edx, 8
  048c5	c1 e2 02	 shl	 edx, 2
  048c8	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1706 : 		guide_database[i].criteria[4].value          = FloatValue(p);

  048cf	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  048d4	6a 00		 push	 0
  048d6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  048dc	83 c4 08	 add	 esp, 8
  048df	50		 push	 eax
  048e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  048e6	83 c4 04	 add	 esp, 4
  048e9	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5257[ebp]
  048ef	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5257[ebp]
  048f5	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  048f9	b9 08 00 00 00	 mov	 ecx, 8
  048fe	c1 e1 02	 shl	 ecx, 2
  04901	d9 9c 08 08 00
	00 00		 fstp	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8]

; 1707 : 		guide_database[i].criteria[5].valid          = IntValue(p);

  04908	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0490d	6a 00		 push	 0
  0490f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04915	83 c4 08	 add	 esp, 8
  04918	50		 push	 eax
  04919	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  0491f	83 c4 04	 add	 esp, 4
  04922	6b 4d f4 34	 imul	 ecx, DWORD PTR _i$[ebp], 52
  04926	ba 08 00 00 00	 mov	 edx, 8
  0492b	6b d2 05	 imul	 edx, edx, 5
  0492e	89 84 11 04 00
	00 00		 mov	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[ecx+edx+4], eax

; 1708 : 		guide_database[i].criteria[5].value          = FloatValue(p);

  04935	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0493a	6a 00		 push	 0
  0493c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04942	83 c4 08	 add	 esp, 8
  04945	50		 push	 eax
  04946	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0494c	83 c4 04	 add	 esp, 4
  0494f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5265[ebp]
  04955	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5265[ebp]
  0495b	6b 45 f4 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0495f	b9 08 00 00 00	 mov	 ecx, 8
  04964	6b d1 05	 imul	 edx, ecx, 5
  04967	d9 9c 10 08 00
	00 00		 fstp	 DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]

; 1709 : 
; 1710 : 		fscanf(f,"%[^\n]\n",buf);

  0496e	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04974	50		 push	 eax
  04975	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  0497a	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  0497d	51		 push	 ecx
  0497e	e8 00 00 00 00	 call	 _fscanf
  04983	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1711 : 		TESTDUMP(buf);

  04986	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  0498d	74 25		 je	 SHORT $LN74@ReadGWutIn
  0498f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04995	50		 push	 eax
  04996	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0499b	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  0499e	51		 push	 ecx
  0499f	e8 00 00 00 00	 call	 _fprintf
  049a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  049a7	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  049aa	50		 push	 eax
  049ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  049b1	83 c4 04	 add	 esp, 4
$LN74@ReadGWutIn:

; 1712 : 	}

  049b4	e9 b7 fb ff ff	 jmp	 $LN73@ReadGWutIn
$LN17@ReadGWutIn:

; 1713 : 
; 1714 : 	//read AMMO
; 1715 : 
; 1716 : 	if (READ_HEADER)

  049b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  049c0	74 18		 je	 SHORT $LN75@ReadGWutIn

; 1717 : 		fscanf(f,"%[^\n]\n",buf);

  049c2	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  049c8	50		 push	 eax
  049c9	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  049ce	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  049d1	51		 push	 ecx
  049d2	e8 00 00 00 00	 call	 _fscanf
  049d7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN75@ReadGWutIn:

; 1718 : 	TESTDUMP(buf);

  049da	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  049e1	74 25		 je	 SHORT $LN76@ReadGWutIn
  049e3	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  049e9	50		 push	 eax
  049ea	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  049ef	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  049f2	51		 push	 ecx
  049f3	e8 00 00 00 00	 call	 _fprintf
  049f8	83 c4 0c	 add	 esp, 12			; 0000000cH
  049fb	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  049fe	50		 push	 eax
  049ff	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04a05	83 c4 04	 add	 esp, 4
$LN76@ReadGWutIn:

; 1719 : 
; 1720 : 	fscanf(f,"%[^\n]\n",buf);

  04a08	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04a0e	50		 push	 eax
  04a0f	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  04a14	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  04a17	51		 push	 ecx
  04a18	e8 00 00 00 00	 call	 _fscanf
  04a1d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1721 : 	// read first values
; 1722 : 	TESTDUMP(buf);

  04a20	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04a27	74 25		 je	 SHORT $LN77@ReadGWutIn
  04a29	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04a2f	50		 push	 eax
  04a30	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04a35	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  04a38	51		 push	 ecx
  04a39	e8 00 00 00 00	 call	 _fprintf
  04a3e	83 c4 0c	 add	 esp, 12			; 0000000cH
  04a41	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04a44	50		 push	 eax
  04a45	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04a4b	83 c4 04	 add	 esp, 4
$LN77@ReadGWutIn:

; 1723 : 
; 1724 : 	while (!(strcmp(buf,"[RADAR]")==0) && !(strcmp(buf,"[End of GWUT file]")==0))

  04a4e	68 00 00 00 00	 push	 OFFSET ??_C@_07MCJPGEH@?$FLRADAR?$FN@
  04a53	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04a59	50		 push	 eax
  04a5a	e8 00 00 00 00	 call	 _strcmp
  04a5f	83 c4 08	 add	 esp, 8
  04a62	85 c0		 test	 eax, eax
  04a64	74 60		 je	 SHORT $LN19@ReadGWutIn
  04a66	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  04a6b	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04a71	50		 push	 eax
  04a72	e8 00 00 00 00	 call	 _strcmp
  04a77	83 c4 08	 add	 esp, 8
  04a7a	85 c0		 test	 eax, eax
  04a7c	74 48		 je	 SHORT $LN19@ReadGWutIn

; 1725 : 	{
; 1726 : /* Don't read weapons configs, they are not in sync with the implementation, and
; 1727 :  * were very little flexible in any case */
; 1728 : #if 0
; 1729 : 		int minwn, maxwn;
; 1730 : 		int w[48], a[48];
; 1731 : 		int anr = -1;
; 1732 : 
; 1733 : 		p = strtok(buf,",");
; 1734 : 		anr = atoi(p);
; 1735 : 		// aircraft/vehicle number
; 1736 : 		p = strtok(NULL,",");
; 1737 : 		// skip aircraft/vehicle name
; 1738 : 		p = strtok(NULL,",");
; 1739 : 		minwn = atoi(p);
; 1740 : 		//min weapon confg nr
; 1741 : 		p = strtok(NULL,",");
; 1742 : 		maxwn = atoi(p);
; 1743 : 		//max weapon confg nr
; 1744 : 
; 1745 : 		for (k = 0; k < 48; k++)
; 1746 : 		{
; 1747 : 			w[k] = 0;
; 1748 : 			a[k] = 0;
; 1749 : 		}
; 1750 : 
; 1751 : 		k = 0;
; 1752 : 		while (p && k < 48)
; 1753 : 		{
; 1754 : 			//read all weapons info
; 1755 : 			p = strtok(NULL,",");
; 1756 : 			if (p)
; 1757 : 				w[k] = atoi(p);
; 1758 : 			p = strtok(NULL,",");
; 1759 : 			if (p)
; 1760 : 				a[k] = atoi(p);
; 1761 : 			k++;
; 1762 : 		}
; 1763 : 
; 1764 : 	// for (k = 0; k < 32; k++)
; 1765 : 	// if (w[k] > 0)
; 1766 : 	// fprintf(fout,"%d %d ",w[k],a[k]);
; 1767 : 	// fprintf(fout, "\n");
; 1768 : 
; 1769 : 		//get weapon info
; 1770 : 		for (i = minwn; i <= maxwn; i++)
; 1771 : 		{
; 1772 : 			for (j = 0; j < NUM_WEAPON_PACKAGES; j++)
; 1773 : 				if(weapon_config_database[i][j].sub_type > 0)
; 1774 : 				{
; 1775 : 					for (k = 0; k < 48; k++)
; 1776 : 					if (w[k] > 0)
; 1777 : 					{
; 1778 : 						int wtype = w[k];
; 1779 : 						int L1=-1, L2=-1;
; 1780 : 						if (w[k] > 99)
; 1781 : 						{
; 1782 : 							L2 = (int)floor(wtype/100);
; 1783 : 							if (anr == 0 || anr == 1 || anr == 4 || anr == 5 || anr == 20)
; 1784 : 							{
; 1785 : 								if (L2 == 1) L1 = 0;
; 1786 : 								if (L2 == 3) L1 = 2;
; 1787 : 								if (L2 == 5) L1 = 4;
; 1788 : 							}
; 1789 : 							if (anr == 2)
; 1790 : 							{
; 1791 : 								if (L2 == 1) L1 = 0;
; 1792 : 								if (L2 == 8) L1 = 5;
; 1793 : 								if (L2 == 9) L1 = 6;
; 1794 : 								if (L2 == 7) L1 = 10;
; 1795 : 							}
; 1796 : 							if (anr == 3 || anr == 21)
; 1797 : 							{
; 1798 : 								if (L2 == 2) L1 = 1;
; 1799 : 								if (L2 == 4) L1 = 3;
; 1800 : 							}
; 1801 : 							wtype = wtype - L2*100;
; 1802 : 							if (testdump)
; 1803 : 							fprintf(fout,"anr %d pack nr %d L1 %d L2 %d wtype %d w[k]%d \n",anr,i,L1,L2,wtype,w[k]);
; 1804 : 						}
; 1805 : 
; 1806 : 						if (weapon_config_database[i][j].sub_type == wtype) //w[k])
; 1807 : 						{
; 1808 : 							if (L1 < 0)
; 1809 : 								weapon_config_database[i][j].number = a[k];
; 1810 : 							else
; 1811 : 							{
; 1812 : 							if (weapon_config_database[i][j].heading_depth == L1 || weapon_config_database[i][j].heading_depth == L1)
; 1813 : 								weapon_config_database[i][j].number = a[k];
; 1814 : 							}
; 1815 : 
; 1816 : 							if (testdump)
; 1817 : 		                fprintf(fout,"%d %d %d %d \n",i,j,weapon_config_database[i][j].sub_type,weapon_config_database[i][j].number);
; 1818 : 						}
; 1819 : 					}
; 1820 : 				}
; 1821 : 		}
; 1822 : #endif
; 1823 : 		fscanf(f,"%[^\n]\n",buf);

  04a7e	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04a84	50		 push	 eax
  04a85	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  04a8a	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  04a8d	51		 push	 ecx
  04a8e	e8 00 00 00 00	 call	 _fscanf
  04a93	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1824 : 		TESTDUMP(buf);

  04a96	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04a9d	74 25		 je	 SHORT $LN78@ReadGWutIn
  04a9f	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04aa5	50		 push	 eax
  04aa6	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04aab	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  04aae	51		 push	 ecx
  04aaf	e8 00 00 00 00	 call	 _fprintf
  04ab4	83 c4 0c	 add	 esp, 12			; 0000000cH
  04ab7	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04aba	50		 push	 eax
  04abb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04ac1	83 c4 04	 add	 esp, 4
$LN78@ReadGWutIn:

; 1825 : 	}

  04ac4	eb 88		 jmp	 SHORT $LN77@ReadGWutIn
$LN19@ReadGWutIn:

; 1826 : 
; 1827 : 	//read RADAR
; 1828 : 
; 1829 : 	if (READ_HEADER)

  04ac6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?READ_HEADER@@3HA, 0 ; READ_HEADER
  04acd	74 18		 je	 SHORT $LN79@ReadGWutIn

; 1830 : 		fscanf(f,"%[^\n]\n",buf);

  04acf	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04ad5	50		 push	 eax
  04ad6	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  04adb	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  04ade	51		 push	 ecx
  04adf	e8 00 00 00 00	 call	 _fscanf
  04ae4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN79@ReadGWutIn:

; 1831 : 	TESTDUMP(buf);

  04ae7	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04aee	74 25		 je	 SHORT $LN80@ReadGWutIn
  04af0	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04af6	50		 push	 eax
  04af7	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04afc	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  04aff	51		 push	 ecx
  04b00	e8 00 00 00 00	 call	 _fprintf
  04b05	83 c4 0c	 add	 esp, 12			; 0000000cH
  04b08	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04b0b	50		 push	 eax
  04b0c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04b12	83 c4 04	 add	 esp, 4
$LN80@ReadGWutIn:

; 1832 : 
; 1833 : 	fscanf(f,"%[^\n]\n",buf);

  04b15	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04b1b	50		 push	 eax
  04b1c	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  04b21	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  04b24	51		 push	 ecx
  04b25	e8 00 00 00 00	 call	 _fscanf
  04b2a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1834 : 	// read first values
; 1835 : 	TESTDUMP(buf);

  04b2d	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  04b34	74 25		 je	 SHORT $LN81@ReadGWutIn
  04b36	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04b3c	50		 push	 eax
  04b3d	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  04b42	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  04b45	51		 push	 ecx
  04b46	e8 00 00 00 00	 call	 _fprintf
  04b4b	83 c4 0c	 add	 esp, 12			; 0000000cH
  04b4e	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  04b51	50		 push	 eax
  04b52	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  04b58	83 c4 04	 add	 esp, 4
$LN81@ReadGWutIn:

; 1836 : 
; 1837 : 	while (!feof(f) && !(strcmp(buf,"[End of GWUT file]")==0))

  04b5b	8b 45 fc	 mov	 eax, DWORD PTR _f$[ebp]
  04b5e	50		 push	 eax
  04b5f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__feof
  04b65	83 c4 04	 add	 esp, 4
  04b68	85 c0		 test	 eax, eax
  04b6a	0f 85 a5 06 00
	00		 jne	 $LN21@ReadGWutIn
  04b70	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EMPOBEGN@?$FLEnd?5of?5GWUT?5file?$FN@
  04b75	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04b7b	50		 push	 eax
  04b7c	e8 00 00 00 00	 call	 _strcmp
  04b81	83 c4 08	 add	 esp, 8
  04b84	85 c0		 test	 eax, eax
  04b86	0f 84 89 06 00
	00		 je	 $LN21@ReadGWutIn

; 1838 : 	{
; 1839 : 		p = strtok(buf,",");

  04b8c	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04b91	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  04b97	50		 push	 eax
  04b98	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04b9e	83 c4 08	 add	 esp, 8
  04ba1	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1840 : 		i = atoi(p);

  04ba7	8b 85 e8 f7 ff
	ff		 mov	 eax, DWORD PTR _p$[ebp]
  04bad	50		 push	 eax
  04bae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atoi
  04bb4	83 c4 04	 add	 esp, 4
  04bb7	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax

; 1841 : //    fprintf(fout,"%d\n",i);
; 1842 : 		//get entity number
; 1843 : 		p = strtok(NULL,",");

  04bba	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04bbf	6a 00		 push	 0
  04bc1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04bc7	83 c4 08	 add	 esp, 8
  04bca	89 85 e8 f7 ff
	ff		 mov	 DWORD PTR _p$[ebp], eax

; 1844 : 		//skip full name
; 1845 : 
; 1846 : 		if (i == 0) {

  04bd0	83 7d f4 00	 cmp	 DWORD PTR _i$[ebp], 0
  04bd4	0f 85 08 01 00
	00		 jne	 $LN82@ReadGWutIn

; 1847 : 				radar_range_apache[0] = FloatValue(p);

  04bda	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04bdf	6a 00		 push	 0
  04be1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04be7	83 c4 08	 add	 esp, 8
  04bea	50		 push	 eax
  04beb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04bf1	83 c4 04	 add	 esp, 4
  04bf4	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5313[ebp]
  04bfa	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5313[ebp]
  04c00	b8 04 00 00 00	 mov	 eax, 4
  04c05	6b c8 00	 imul	 ecx, eax, 0
  04c08	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_apache@@3PAMA[ecx]

; 1848 : 				radar_range_apache[1] = FloatValue(p);

  04c0e	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04c13	6a 00		 push	 0
  04c15	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04c1b	83 c4 08	 add	 esp, 8
  04c1e	50		 push	 eax
  04c1f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04c25	83 c4 04	 add	 esp, 4
  04c28	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5318[ebp]
  04c2e	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5318[ebp]
  04c34	b8 04 00 00 00	 mov	 eax, 4
  04c39	c1 e0 00	 shl	 eax, 0
  04c3c	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_apache@@3PAMA[eax]

; 1849 : 				radar_range_apache[2] = FloatValue(p);

  04c42	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04c47	6a 00		 push	 0
  04c49	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04c4f	83 c4 08	 add	 esp, 8
  04c52	50		 push	 eax
  04c53	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04c59	83 c4 04	 add	 esp, 4
  04c5c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5323[ebp]
  04c62	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5323[ebp]
  04c68	b8 04 00 00 00	 mov	 eax, 4
  04c6d	d1 e0		 shl	 eax, 1
  04c6f	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_apache@@3PAMA[eax]

; 1850 : 				radar_range_apache[3] = FloatValue(p);

  04c75	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04c7a	6a 00		 push	 0
  04c7c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04c82	83 c4 08	 add	 esp, 8
  04c85	50		 push	 eax
  04c86	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04c8c	83 c4 04	 add	 esp, 4
  04c8f	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5328[ebp]
  04c95	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5328[ebp]
  04c9b	b8 04 00 00 00	 mov	 eax, 4
  04ca0	6b c8 03	 imul	 ecx, eax, 3
  04ca3	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_apache@@3PAMA[ecx]

; 1851 : 				radar_range_apache[4] = FloatValue(p);

  04ca9	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04cae	6a 00		 push	 0
  04cb0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04cb6	83 c4 08	 add	 esp, 8
  04cb9	50		 push	 eax
  04cba	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04cc0	83 c4 04	 add	 esp, 4
  04cc3	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5333[ebp]
  04cc9	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5333[ebp]
  04ccf	b8 04 00 00 00	 mov	 eax, 4
  04cd4	c1 e0 02	 shl	 eax, 2
  04cd7	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_apache@@3PAMA[eax]

; 1852 : 		} else

  04cdd	e9 0f 04 00 00	 jmp	 $LN90@ReadGWutIn
$LN82@ReadGWutIn:

; 1853 : 		if (i == 1) {

  04ce2	83 7d f4 01	 cmp	 DWORD PTR _i$[ebp], 1
  04ce6	0f 85 08 01 00
	00		 jne	 $LN84@ReadGWutIn

; 1854 : 				radar_range_comanche[0] = FloatValue(p);

  04cec	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04cf1	6a 00		 push	 0
  04cf3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04cf9	83 c4 08	 add	 esp, 8
  04cfc	50		 push	 eax
  04cfd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04d03	83 c4 04	 add	 esp, 4
  04d06	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5338[ebp]
  04d0c	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5338[ebp]
  04d12	b8 04 00 00 00	 mov	 eax, 4
  04d17	6b c8 00	 imul	 ecx, eax, 0
  04d1a	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_comanche@@3PAMA[ecx]

; 1855 : 				radar_range_comanche[1] = FloatValue(p);

  04d20	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04d25	6a 00		 push	 0
  04d27	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04d2d	83 c4 08	 add	 esp, 8
  04d30	50		 push	 eax
  04d31	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04d37	83 c4 04	 add	 esp, 4
  04d3a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5343[ebp]
  04d40	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5343[ebp]
  04d46	b8 04 00 00 00	 mov	 eax, 4
  04d4b	c1 e0 00	 shl	 eax, 0
  04d4e	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_comanche@@3PAMA[eax]

; 1856 : 				radar_range_comanche[2] = FloatValue(p);

  04d54	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04d59	6a 00		 push	 0
  04d5b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04d61	83 c4 08	 add	 esp, 8
  04d64	50		 push	 eax
  04d65	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04d6b	83 c4 04	 add	 esp, 4
  04d6e	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5348[ebp]
  04d74	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5348[ebp]
  04d7a	b8 04 00 00 00	 mov	 eax, 4
  04d7f	d1 e0		 shl	 eax, 1
  04d81	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_comanche@@3PAMA[eax]

; 1857 : 				radar_range_comanche[3] = FloatValue(p);

  04d87	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04d8c	6a 00		 push	 0
  04d8e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04d94	83 c4 08	 add	 esp, 8
  04d97	50		 push	 eax
  04d98	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04d9e	83 c4 04	 add	 esp, 4
  04da1	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5353[ebp]
  04da7	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5353[ebp]
  04dad	b8 04 00 00 00	 mov	 eax, 4
  04db2	6b c8 03	 imul	 ecx, eax, 3
  04db5	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_comanche@@3PAMA[ecx]

; 1858 : 				radar_range_comanche[4] = FloatValue(p);

  04dbb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04dc0	6a 00		 push	 0
  04dc2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04dc8	83 c4 08	 add	 esp, 8
  04dcb	50		 push	 eax
  04dcc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04dd2	83 c4 04	 add	 esp, 4
  04dd5	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5358[ebp]
  04ddb	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5358[ebp]
  04de1	b8 04 00 00 00	 mov	 eax, 4
  04de6	c1 e0 02	 shl	 eax, 2
  04de9	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_comanche@@3PAMA[eax]

; 1859 : 		} else

  04def	e9 fd 02 00 00	 jmp	 $LN90@ReadGWutIn
$LN84@ReadGWutIn:

; 1860 : 		if (i == 2) {

  04df4	83 7d f4 02	 cmp	 DWORD PTR _i$[ebp], 2
  04df8	0f 85 08 01 00
	00		 jne	 $LN86@ReadGWutIn

; 1861 : 				radar_range_blackhawk[0] = FloatValue(p);

  04dfe	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04e03	6a 00		 push	 0
  04e05	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04e0b	83 c4 08	 add	 esp, 8
  04e0e	50		 push	 eax
  04e0f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04e15	83 c4 04	 add	 esp, 4
  04e18	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5363[ebp]
  04e1e	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5363[ebp]
  04e24	b8 04 00 00 00	 mov	 eax, 4
  04e29	6b c8 00	 imul	 ecx, eax, 0
  04e2c	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_blackhawk@@3PAMA[ecx]

; 1862 : 				radar_range_blackhawk[1] = FloatValue(p);

  04e32	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04e37	6a 00		 push	 0
  04e39	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04e3f	83 c4 08	 add	 esp, 8
  04e42	50		 push	 eax
  04e43	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04e49	83 c4 04	 add	 esp, 4
  04e4c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5368[ebp]
  04e52	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5368[ebp]
  04e58	b8 04 00 00 00	 mov	 eax, 4
  04e5d	c1 e0 00	 shl	 eax, 0
  04e60	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]

; 1863 : 				radar_range_blackhawk[2] = FloatValue(p);

  04e66	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04e6b	6a 00		 push	 0
  04e6d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04e73	83 c4 08	 add	 esp, 8
  04e76	50		 push	 eax
  04e77	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04e7d	83 c4 04	 add	 esp, 4
  04e80	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5373[ebp]
  04e86	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5373[ebp]
  04e8c	b8 04 00 00 00	 mov	 eax, 4
  04e91	d1 e0		 shl	 eax, 1
  04e93	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]

; 1864 : 				radar_range_blackhawk[3] = FloatValue(p);

  04e99	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04e9e	6a 00		 push	 0
  04ea0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04ea6	83 c4 08	 add	 esp, 8
  04ea9	50		 push	 eax
  04eaa	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04eb0	83 c4 04	 add	 esp, 4
  04eb3	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5378[ebp]
  04eb9	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5378[ebp]
  04ebf	b8 04 00 00 00	 mov	 eax, 4
  04ec4	6b c8 03	 imul	 ecx, eax, 3
  04ec7	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_blackhawk@@3PAMA[ecx]

; 1865 : 				radar_range_blackhawk[4] = FloatValue(p);

  04ecd	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04ed2	6a 00		 push	 0
  04ed4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04eda	83 c4 08	 add	 esp, 8
  04edd	50		 push	 eax
  04ede	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04ee4	83 c4 04	 add	 esp, 4
  04ee7	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5383[ebp]
  04eed	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5383[ebp]
  04ef3	b8 04 00 00 00	 mov	 eax, 4
  04ef8	c1 e0 02	 shl	 eax, 2
  04efb	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]

; 1866 : 		} else

  04f01	e9 eb 01 00 00	 jmp	 $LN90@ReadGWutIn
$LN86@ReadGWutIn:

; 1867 : 		if (i == 3) {

  04f06	83 7d f4 03	 cmp	 DWORD PTR _i$[ebp], 3
  04f0a	0f 85 08 01 00
	00		 jne	 $LN88@ReadGWutIn

; 1868 : 				radar_range_hokum[0] = FloatValue(p);

  04f10	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04f15	6a 00		 push	 0
  04f17	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04f1d	83 c4 08	 add	 esp, 8
  04f20	50		 push	 eax
  04f21	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04f27	83 c4 04	 add	 esp, 4
  04f2a	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5388[ebp]
  04f30	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5388[ebp]
  04f36	b8 04 00 00 00	 mov	 eax, 4
  04f3b	6b c8 00	 imul	 ecx, eax, 0
  04f3e	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hokum@@3PAMA[ecx]

; 1869 : 				radar_range_hokum[1] = FloatValue(p);

  04f44	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04f49	6a 00		 push	 0
  04f4b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04f51	83 c4 08	 add	 esp, 8
  04f54	50		 push	 eax
  04f55	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04f5b	83 c4 04	 add	 esp, 4
  04f5e	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5393[ebp]
  04f64	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5393[ebp]
  04f6a	b8 04 00 00 00	 mov	 eax, 4
  04f6f	c1 e0 00	 shl	 eax, 0
  04f72	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hokum@@3PAMA[eax]

; 1870 : 				radar_range_hokum[2] = FloatValue(p);

  04f78	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04f7d	6a 00		 push	 0
  04f7f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04f85	83 c4 08	 add	 esp, 8
  04f88	50		 push	 eax
  04f89	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04f8f	83 c4 04	 add	 esp, 4
  04f92	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5398[ebp]
  04f98	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5398[ebp]
  04f9e	b8 04 00 00 00	 mov	 eax, 4
  04fa3	d1 e0		 shl	 eax, 1
  04fa5	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hokum@@3PAMA[eax]

; 1871 : 				radar_range_hokum[3] = FloatValue(p);

  04fab	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04fb0	6a 00		 push	 0
  04fb2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04fb8	83 c4 08	 add	 esp, 8
  04fbb	50		 push	 eax
  04fbc	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04fc2	83 c4 04	 add	 esp, 4
  04fc5	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5403[ebp]
  04fcb	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5403[ebp]
  04fd1	b8 04 00 00 00	 mov	 eax, 4
  04fd6	6b c8 03	 imul	 ecx, eax, 3
  04fd9	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hokum@@3PAMA[ecx]

; 1872 : 				radar_range_hokum[4] = FloatValue(p);

  04fdf	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  04fe4	6a 00		 push	 0
  04fe6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  04fec	83 c4 08	 add	 esp, 8
  04fef	50		 push	 eax
  04ff0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  04ff6	83 c4 04	 add	 esp, 4
  04ff9	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5408[ebp]
  04fff	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5408[ebp]
  05005	b8 04 00 00 00	 mov	 eax, 4
  0500a	c1 e0 02	 shl	 eax, 2
  0500d	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hokum@@3PAMA[eax]

; 1873 : 		}  else

  05013	e9 d9 00 00 00	 jmp	 $LN90@ReadGWutIn
$LN88@ReadGWutIn:

; 1874 : 		if (i == 4) {

  05018	83 7d f4 04	 cmp	 DWORD PTR _i$[ebp], 4
  0501c	0f 85 cf 00 00
	00		 jne	 $LN90@ReadGWutIn

; 1875 : 				radar_range_havoc[0] = FloatValue(p);

  05022	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  05027	6a 00		 push	 0
  05029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0502f	83 c4 08	 add	 esp, 8
  05032	50		 push	 eax
  05033	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  05039	83 c4 04	 add	 esp, 4
  0503c	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5413[ebp]
  05042	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5413[ebp]
  05048	b8 04 00 00 00	 mov	 eax, 4
  0504d	6b c8 00	 imul	 ecx, eax, 0
  05050	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_havoc@@3PAMA[ecx]

; 1876 : 				radar_range_havoc[1] = FloatValue(p);

  05056	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0505b	6a 00		 push	 0
  0505d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  05063	83 c4 08	 add	 esp, 8
  05066	50		 push	 eax
  05067	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0506d	83 c4 04	 add	 esp, 4
  05070	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5418[ebp]
  05076	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5418[ebp]
  0507c	b8 04 00 00 00	 mov	 eax, 4
  05081	c1 e0 00	 shl	 eax, 0
  05084	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_havoc@@3PAMA[eax]

; 1877 : 				radar_range_havoc[2] = FloatValue(p);

  0508a	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0508f	6a 00		 push	 0
  05091	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  05097	83 c4 08	 add	 esp, 8
  0509a	50		 push	 eax
  0509b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  050a1	83 c4 04	 add	 esp, 4
  050a4	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5423[ebp]
  050aa	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5423[ebp]
  050b0	b8 04 00 00 00	 mov	 eax, 4
  050b5	d1 e0		 shl	 eax, 1
  050b7	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_havoc@@3PAMA[eax]

; 1878 : 				radar_range_havoc[3] = FloatValue(p);

  050bd	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  050c2	6a 00		 push	 0
  050c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  050ca	83 c4 08	 add	 esp, 8
  050cd	50		 push	 eax
  050ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  050d4	83 c4 04	 add	 esp, 4
  050d7	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5428[ebp]
  050dd	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5428[ebp]
  050e3	b8 04 00 00 00	 mov	 eax, 4
  050e8	6b c8 03	 imul	 ecx, eax, 3
  050eb	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_havoc@@3PAMA[ecx]
$LN90@ReadGWutIn:

; 1879 : 		}
; 1880 : 		if (i == 5) {

  050f1	83 7d f4 05	 cmp	 DWORD PTR _i$[ebp], 5
  050f5	0f 85 cf 00 00
	00		 jne	 $LN91@ReadGWutIn

; 1881 : 				radar_range_hind[0] = FloatValue(p);

  050fb	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  05100	6a 00		 push	 0
  05102	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  05108	83 c4 08	 add	 esp, 8
  0510b	50		 push	 eax
  0510c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  05112	83 c4 04	 add	 esp, 4
  05115	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5433[ebp]
  0511b	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5433[ebp]
  05121	b8 04 00 00 00	 mov	 eax, 4
  05126	6b c8 00	 imul	 ecx, eax, 0
  05129	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hind@@3PAMA[ecx]

; 1882 : 				radar_range_hind[1] = FloatValue(p);

  0512f	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  05134	6a 00		 push	 0
  05136	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  0513c	83 c4 08	 add	 esp, 8
  0513f	50		 push	 eax
  05140	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  05146	83 c4 04	 add	 esp, 4
  05149	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5438[ebp]
  0514f	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5438[ebp]
  05155	b8 04 00 00 00	 mov	 eax, 4
  0515a	c1 e0 00	 shl	 eax, 0
  0515d	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hind@@3PAMA[eax]

; 1883 : 				radar_range_hind[2] = FloatValue(p);

  05163	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  05168	6a 00		 push	 0
  0516a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  05170	83 c4 08	 add	 esp, 8
  05173	50		 push	 eax
  05174	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  0517a	83 c4 04	 add	 esp, 4
  0517d	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5443[ebp]
  05183	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5443[ebp]
  05189	b8 04 00 00 00	 mov	 eax, 4
  0518e	d1 e0		 shl	 eax, 1
  05190	d9 98 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hind@@3PAMA[eax]

; 1884 : 				radar_range_hind[3] = FloatValue(p);

  05196	68 00 00 00 00	 push	 OFFSET ??_C@_01IHBHIGKO@?0@
  0519b	6a 00		 push	 0
  0519d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strtok
  051a3	83 c4 08	 add	 esp, 8
  051a6	50		 push	 eax
  051a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__atof
  051ad	83 c4 04	 add	 esp, 4
  051b0	d9 9d 9c f6 ff
	ff		 fstp	 DWORD PTR tv5448[ebp]
  051b6	d9 85 9c f6 ff
	ff		 fld	 DWORD PTR tv5448[ebp]
  051bc	b8 04 00 00 00	 mov	 eax, 4
  051c1	6b c8 03	 imul	 ecx, eax, 3
  051c4	d9 99 00 00 00
	00		 fstp	 DWORD PTR ?radar_range_hind@@3PAMA[ecx]
$LN91@ReadGWutIn:

; 1885 : 			}
; 1886 : 
; 1887 : 		fscanf(f,"%[^\n]\n",buf);

  051ca	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  051d0	50		 push	 eax
  051d1	68 00 00 00 00	 push	 OFFSET ??_C@_06OPEKAKCJ@?$CF?$FL?$FO?6?$FN?6@
  051d6	8b 4d fc	 mov	 ecx, DWORD PTR _f$[ebp]
  051d9	51		 push	 ecx
  051da	e8 00 00 00 00	 call	 _fscanf
  051df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1888 : 		TESTDUMP(buf);

  051e2	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  051e9	74 25		 je	 SHORT $LN92@ReadGWutIn
  051eb	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  051f1	50		 push	 eax
  051f2	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  051f7	8b 4d f8	 mov	 ecx, DWORD PTR _fout$[ebp]
  051fa	51		 push	 ecx
  051fb	e8 00 00 00 00	 call	 _fprintf
  05200	83 c4 0c	 add	 esp, 12			; 0000000cH
  05203	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  05206	50		 push	 eax
  05207	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fflush
  0520d	83 c4 04	 add	 esp, 4
$LN92@ReadGWutIn:

; 1889 : 	}

  05210	e9 46 f9 ff ff	 jmp	 $LN81@ReadGWutIn
$LN21@ReadGWutIn:

; 1890 : 
; 1891 : 	fclose(f);

  05215	8b 45 fc	 mov	 eax, DWORD PTR _f$[ebp]
  05218	50		 push	 eax
  05219	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  0521f	83 c4 04	 add	 esp, 4

; 1892 : 	if (testdump) fclose(fout);

  05222	83 bd e4 f7 ff
	ff 00		 cmp	 DWORD PTR _testdump$[ebp], 0
  05229	74 0d		 je	 SHORT $LN93@ReadGWutIn
  0522b	8b 45 f8	 mov	 eax, DWORD PTR _fout$[ebp]
  0522e	50		 push	 eax
  0522f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  05235	83 c4 04	 add	 esp, 4
$LN93@ReadGWutIn:
$LN1@ReadGWutIn:

; 1893 : 
; 1894 : }

  05238	5f		 pop	 edi
  05239	5e		 pop	 esi
  0523a	5b		 pop	 ebx
  0523b	8b e5		 mov	 esp, ebp
  0523d	5d		 pop	 ebp
  0523e	c2 04 00	 ret	 4
?ReadGWutInfo@@YGXPBD@Z ENDP				; ReadGWutInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gwutcfg.c
;	COMDAT ?DumpGWutInfo@@YGXPBD@Z
_TEXT	SEGMENT
tv4605 = -112						; size = 8
tv4188 = -108						; size = 8
tv5003 = -104						; size = 8
tv5001 = -100						; size = 8
tv4599 = -96						; size = 8
tv4182 = -92						; size = 8
tv4592 = -88						; size = 4
tv4351 = -84						; size = 4
tv3355 = -84						; size = 4
tv2543 = -84						; size = 4
tv1516 = -84						; size = 4
tv1507 = -84						; size = 4
tv1498 = -84						; size = 4
tv1489 = -84						; size = 4
tv1480 = -84						; size = 4
tv1471 = -84						; size = 4
tv1462 = -84						; size = 4
tv1101 = -84						; size = 4
tv815 = -84						; size = 4
_k$ = -16						; size = 4
_j$ = -12						; size = 4
_i$ = -8						; size = 4
_fout$ = -4						; size = 4
_filename$ = 8						; size = 4
?DumpGWutInfo@@YGXPBD@Z PROC				; DumpGWutInfo, COMDAT

; 90   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 91   : 	  FILE *fout;
; 92   : 	  int i, j, k;
; 93   : 
; 94   : 	INCLUDE_WEAPON_TYPES = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?INCLUDE_WEAPON_TYPES@@3HA, 0 ; INCLUDE_WEAPON_TYPES

; 95   : 	WRITE_HEADER = 0;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER

; 96   : 
; 97   : 	 fout = fopen(filename,"w");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  00022	8b 45 08	 mov	 eax, DWORD PTR _filename$[ebp]
  00025	50		 push	 eax
  00026	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fopen
  0002c	83 c4 08	 add	 esp, 8
  0002f	89 45 fc	 mov	 DWORD PTR _fout$[ebp], eax

; 98   : 
; 99   : 	fprintf(fout,CURRENT_HEADER);

  00032	68 00 00 00 00	 push	 OFFSET ??_C@_04DBHEMPKL@GWUT@
  00037	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 _fprintf
  00040	83 c4 08	 add	 esp, 8

; 100  : 	fprintf(fout,"\n");

  00043	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  00048	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _fprintf
  00051	83 c4 08	 add	 esp, 8

; 101  : 
; 102  : //aphavoc\source\entity\mobile\aircraft\ac_dbase.h
; 103  : 	fprintf(fout,"[AIRCRAFT]\n");

  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DKAFMAAL@?$FLAIRCRAFT?$FN?6@
  00059	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 _fprintf
  00062	83 c4 08	 add	 esp, 8

; 104  : 	if (WRITE_HEADER) {

  00065	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  0006c	0f 84 a4 04 00
	00		 je	 $LN39@DumpGWutIn

; 105  : 	fprintf(fout,"%s,","full_name");

  00072	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0007c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 _fprintf
  00085	83 c4 0c	 add	 esp, 12			; 0000000cH

; 106  : 	fprintf(fout,"%s,","force");

  00088	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  0008d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00092	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 _fprintf
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 107  : 	fprintf(fout,"%s,","default_weapon_config_type");

  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LPABPCFJ@default_weapon_config_type@
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  000a8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _fprintf
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 108  : 	fprintf(fout,"%s,","min_weapon_config_type");

  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NHDBAFKJ@min_weapon_config_type@
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  000be	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 _fprintf
  000c7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 109  : 	fprintf(fout,"%s,","max_weapon_config_type");

  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NDKLDEID@max_weapon_config_type@
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  000d4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 _fprintf
  000dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 110  : 	fprintf(fout,"%s,","air_to_air_weapon_config_type");

  000e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@EGCLMAJK@air_to_air_weapon_config_type@
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  000ea	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 _fprintf
  000f3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 111  : 	fprintf(fout,"%s,","air_to_surface_weapon_config_type");

  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@GMHHKJPN@air_to_surface_weapon_config_ty@
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00100	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 _fprintf
  00109	83 c4 0c	 add	 esp, 12			; 0000000cH

; 112  : 	fprintf(fout,"%s,","scout_weapon_config_type");

  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IBOCPANC@scout_weapon_config_type@
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00116	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 _fprintf
  0011f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 113  : 	fprintf(fout,"%s,","default_weapon_type");

  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GAKPEDIG@default_weapon_type@
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0012c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 _fprintf
  00135	83 c4 0c	 add	 esp, 12			; 0000000cH

; 114  : 	fprintf(fout,"%s,","target_symbol_type");

  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KFEIDFO@target_symbol_type@
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00142	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00145	50		 push	 eax
  00146	e8 00 00 00 00	 call	 _fprintf
  0014b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 115  : 	fprintf(fout,"%s,","target_priority_type");

  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CMHOELLN@target_priority_type@
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00158	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 _fprintf
  00161	83 c4 0c	 add	 esp, 12			; 0000000cH

; 116  : 	fprintf(fout,"%s,","force_info_catagory");

  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NPOJFGGJ@force_info_catagory@
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0016e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 _fprintf
  00177	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : 	fprintf(fout,"%s,","threat_type");

  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CJJNFLM@threat_type@
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00184	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 _fprintf
  0018d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 118  : 	//fprintf(fout,"%s,","view_category");
; 119  : 	//fprintf(fout,"%s,","view_type");
; 120  : 	//fprintf(fout,"%s,","map_icon");
; 121  : 	fprintf(fout,"%s,","centre_of_gravity_to_ground_distance");

  00190	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@INDHHFLP@centre_of_gravity_to_ground_dis@
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0019a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 _fprintf
  001a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 122  : 	fprintf(fout,"%s,","centre_of_gravity_to_ground_distance_destroyed");

  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@LIHEKIBI@centre_of_gravity_to_ground_dis@
  001ab	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  001b0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 _fprintf
  001b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 123  : 	fprintf(fout,"%s,","chase_view_min_distance");

  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KGGBNFKF@chase_view_min_distance@
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  001c6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 _fprintf
  001cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 124  : 	fprintf(fout,"%s,","chase_view_max_distance");

  001d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@OGCOKNND@chase_view_max_distance@
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  001dc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 _fprintf
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 125  : 	fprintf(fout,"%s,","chase_view_min_distance_test");

  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PIJDHCNC@chase_view_min_distance_test@
  001ed	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  001f2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 _fprintf
  001fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 126  : 	fprintf(fout,"%s,","chase_view_max_distance_test");

  001fe	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KLDFGKDG@chase_view_max_distance_test@
  00203	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00208	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0020b	50		 push	 eax
  0020c	e8 00 00 00 00	 call	 _fprintf
  00211	83 c4 0c	 add	 esp, 12			; 0000000cH

; 127  : 	fprintf(fout,"%s,","cruise_velocity");

  00214	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OLEKGHHO@cruise_velocity@
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0021e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 _fprintf
  00227	83 c4 0c	 add	 esp, 12			; 0000000cH

; 128  : 	fprintf(fout,"%s,","cruise_altitude");

  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IMJCDPMB@cruise_altitude@
  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00234	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 _fprintf
  0023d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 129  : 	fprintf(fout,"%s,","attack_altitude");

  00240	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LAKKDKLB@attack_altitude@
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0024a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0024d	50		 push	 eax
  0024e	e8 00 00 00 00	 call	 _fprintf
  00253	83 c4 0c	 add	 esp, 12			; 0000000cH

; 130  : 	fprintf(fout,"%s,","destroyed_bank_offset");

  00256	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OGFMJPKK@destroyed_bank_offset@
  0025b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00260	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 _fprintf
  00269	83 c4 0c	 add	 esp, 12			; 0000000cH

; 131  : 	fprintf(fout,"%s,","destroyed_pitch_offset");

  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GKPMHBAM@destroyed_pitch_offset@
  00271	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00276	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00279	50		 push	 eax
  0027a	e8 00 00 00 00	 call	 _fprintf
  0027f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 132  : 	fprintf(fout,"%s,","fuselage_angle");

  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JKIIHMOB@fuselage_angle@
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0028c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 _fprintf
  00295	83 c4 0c	 add	 esp, 12			; 0000000cH

; 133  : 	fprintf(fout,"%s,","liftoff_velocity");

  00298	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CCPNGAIP@liftoff_velocity@
  0029d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  002a2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  002a5	50		 push	 eax
  002a6	e8 00 00 00 00	 call	 _fprintf
  002ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 134  : 	fprintf(fout,"%s,","main_rotor_shaft_angle");

  002ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LIPCLOFP@main_rotor_shaft_angle@
  002b3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  002b8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  002bb	50		 push	 eax
  002bc	e8 00 00 00 00	 call	 _fprintf
  002c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 135  : 	fprintf(fout,"%s,","main_rotor_direction");

  002c4	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CMAFDPJF@main_rotor_direction@
  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  002ce	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 _fprintf
  002d7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 136  : 	fprintf(fout,"%s,","main_rotor_blade_droop_angle");

  002da	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LJAAFAJN@main_rotor_blade_droop_angle@
  002df	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  002e4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  002e7	50		 push	 eax
  002e8	e8 00 00 00 00	 call	 _fprintf
  002ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 137  : 	fprintf(fout,"%s,","propellor_direction");

  002f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MNADIOKK@propellor_direction@
  002f5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  002fa	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  002fd	50		 push	 eax
  002fe	e8 00 00 00 00	 call	 _fprintf
  00303	83 c4 0c	 add	 esp, 12			; 0000000cH

; 138  : 	fprintf(fout,"%s,","max_turn_rate");

  00306	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MJEOGANB@max_turn_rate@
  0030b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00310	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00313	50		 push	 eax
  00314	e8 00 00 00 00	 call	 _fprintf
  00319	83 c4 0c	 add	 esp, 12			; 0000000cH

; 139  : 	fprintf(fout,"%s,","max_roll");

  0031c	68 00 00 00 00	 push	 OFFSET ??_C@_08OCBGELPM@max_roll@
  00321	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00326	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00329	50		 push	 eax
  0032a	e8 00 00 00 00	 call	 _fprintf
  0032f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 140  : 	fprintf(fout,"%s,","max_vertical_turn_allowance");

  00332	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HPMEGNJI@max_vertical_turn_allowance@
  00337	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0033c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0033f	50		 push	 eax
  00340	e8 00 00 00 00	 call	 _fprintf
  00345	83 c4 0c	 add	 esp, 12			; 0000000cH

; 141  : 	fprintf(fout,"%s,","avoidance_radius");

  00348	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GBEPPNPB@avoidance_radius@
  0034d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00352	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00355	50		 push	 eax
  00356	e8 00 00 00 00	 call	 _fprintf
  0035b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 142  : 	fprintf(fout,"%s,","g_max");

  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_05IGDAEEJD@g_max@
  00363	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00368	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 _fprintf
  00371	83 c4 0c	 add	 esp, 12			; 0000000cH

; 143  : 	fprintf(fout,"%s,","power_output");

  00374	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PKCIOEFJ@power_output@
  00379	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0037e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 _fprintf
  00387	83 c4 0c	 add	 esp, 12			; 0000000cH

; 144  : 	fprintf(fout,"%s,","tail_rotor_direction");

  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NIBNMMBC@tail_rotor_direction@
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00394	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 _fprintf
  0039d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 145  : 	fprintf(fout,"%s,","recon_radius");

  003a0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KPEEILEF@recon_radius@
  003a5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  003aa	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  003ad	50		 push	 eax
  003ae	e8 00 00 00 00	 call	 _fprintf
  003b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 146  : 	fprintf(fout,"%s,","target_scan_delay");

  003b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BBBJKKMK@target_scan_delay@
  003bb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  003c0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  003c3	50		 push	 eax
  003c4	e8 00 00 00 00	 call	 _fprintf
  003c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 147  : 	fprintf(fout,"%s,","air_scan_range");

  003cc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PICBLDJ@air_scan_range@
  003d1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  003d6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  003d9	50		 push	 eax
  003da	e8 00 00 00 00	 call	 _fprintf
  003df	83 c4 0c	 add	 esp, 12			; 0000000cH

; 148  : 	fprintf(fout,"%s,","surface_scan_range");

  003e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DFEIMDEP@surface_scan_range@
  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  003ec	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  003ef	50		 push	 eax
  003f0	e8 00 00 00 00	 call	 _fprintf
  003f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : 	fprintf(fout,"%s,","potential_air_to_air_threat");

  003f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HBABFPLO@potential_air_to_air_threat@
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00402	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00405	50		 push	 eax
  00406	e8 00 00 00 00	 call	 _fprintf
  0040b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 150  : 	fprintf(fout,"%s,","potential_air_to_surface_threat");

  0040e	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@LKMEIEEE@potential_air_to_surface_threat@
  00413	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00418	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 _fprintf
  00421	83 c4 0c	 add	 esp, 12			; 0000000cH

; 151  : 	fprintf(fout,"%s,","ammo_economy");

  00424	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KDBGCMLI@ammo_economy@
  00429	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0042e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00431	50		 push	 eax
  00432	e8 00 00 00 00	 call	 _fprintf
  00437	83 c4 0c	 add	 esp, 12			; 0000000cH

; 152  : 	fprintf(fout,"%s,","fuel_default_weight");

  0043a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EILOBNPM@fuel_default_weight@
  0043f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00444	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00447	50		 push	 eax
  00448	e8 00 00 00 00	 call	 _fprintf
  0044d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 153  : 	fprintf(fout,"%s,","fuel_economy");

  00450	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IFIFOLKE@fuel_economy@
  00455	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0045a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0045d	50		 push	 eax
  0045e	e8 00 00 00 00	 call	 _fprintf
  00463	83 c4 0c	 add	 esp, 12			; 0000000cH

; 154  : 	fprintf(fout,"%s,","number_of_main_rotors");

  00466	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OILIBHNK@number_of_main_rotors@
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00470	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00473	50		 push	 eax
  00474	e8 00 00 00 00	 call	 _fprintf
  00479	83 c4 0c	 add	 esp, 12			; 0000000cH

; 155  : 	fprintf(fout,"%s,","main_rotor_radius");

  0047c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DKOOLAJE@main_rotor_radius@
  00481	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00486	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00489	50		 push	 eax
  0048a	e8 00 00 00 00	 call	 _fprintf
  0048f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 156  : 	fprintf(fout,"%s,","initial_damage_level");

  00492	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JPIPGBMH@initial_damage_level@
  00497	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0049c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0049f	50		 push	 eax
  004a0	e8 00 00 00 00	 call	 _fprintf
  004a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 157  : 	fprintf(fout,"%s,","explosive_quality");

  004a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IPAJHBFC@explosive_quality@
  004ad	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  004b2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  004b5	50		 push	 eax
  004b6	e8 00 00 00 00	 call	 _fprintf
  004bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 158  : 	fprintf(fout,"%s,","explosive_power");

  004be	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IMMJCANI@explosive_power@
  004c3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  004c8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  004cb	50		 push	 eax
  004cc	e8 00 00 00 00	 call	 _fprintf
  004d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 159  : 	fprintf(fout,"%s,","offensive_capability");

  004d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OPPGPJDA@offensive_capability@
  004d9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  004de	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  004e1	50		 push	 eax
  004e2	e8 00 00 00 00	 call	 _fprintf
  004e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 160  : 	fprintf(fout,"%s,","player_controllable");

  004ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LJBAGENL@player_controllable@
  004ef	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  004f4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  004f7	50		 push	 eax
  004f8	e8 00 00 00 00	 call	 _fprintf
  004fd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 	fprintf(fout,"%s\n","points_value");

  00500	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMGKPKMJ@points_value@
  00505	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0050a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0050d	50		 push	 eax
  0050e	e8 00 00 00 00	 call	 _fprintf
  00513	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN39@DumpGWutIn:

; 162  : 	}
; 163  :   for (i = 0; i < NUM_ENTITY_SUB_TYPE_AIRCRAFT; i++)

  00516	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0051d	eb 09		 jmp	 SHORT $LN4@DumpGWutIn
$LN2@DumpGWutIn:
  0051f	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00522	83 c0 01	 add	 eax, 1
  00525	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@DumpGWutIn:
  00528	83 7d f8 20	 cmp	 DWORD PTR _i$[ebp], 32	; 00000020H
  0052c	0f 8d 95 07 00
	00		 jge	 $LN3@DumpGWutIn

; 164  :   {
; 165  : 		fprintf(fout,"%d,",i);

  00532	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00535	50		 push	 eax
  00536	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0053b	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0053e	51		 push	 ecx
  0053f	e8 00 00 00 00	 call	 _fprintf
  00544	83 c4 0c	 add	 esp, 12			; 0000000cH

; 166  : 		fprintf(fout,"%s,",aircraft_database[i].full_name);

  00547	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0054e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax]
  00554	51		 push	 ecx
  00555	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0055a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0055d	52		 push	 edx
  0055e	e8 00 00 00 00	 call	 _fprintf
  00563	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 		fprintf(fout,"%d,",aircraft_database[i].force);

  00566	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0056d	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+24]
  00573	51		 push	 ecx
  00574	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00579	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0057c	52		 push	 edx
  0057d	e8 00 00 00 00	 call	 _fprintf
  00582	83 c4 0c	 add	 esp, 12			; 0000000cH

; 168  : 		/*  Don't write weapons configs, the numbers have changed, so will be wrong in GWUT file! */
; 169  : #if 0
; 170  : 		fprintf(fout,"%d,",aircraft_database[i].default_weapon_config_type);
; 171  : 		fprintf(fout,"%d,",aircraft_database[i].min_weapon_config_type);
; 172  : 		fprintf(fout,"%d,",aircraft_database[i].max_weapon_config_type);
; 173  : 		fprintf(fout,"%d,",aircraft_database[i].air_to_air_weapon_config_type);
; 174  : 		fprintf(fout,"%d,",aircraft_database[i].air_to_surface_weapon_config_type);
; 175  : 		fprintf(fout,"%d,",aircraft_database[i].scout_weapon_config_type);
; 176  : 		fprintf(fout,"%d,",aircraft_database[i].default_weapon_type);
; 177  : #else
; 178  : 		fprintf(fout," , , , , , , ,");

  00585	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IDGCIBNB@?5?0?5?0?5?0?5?0?5?0?5?0?5?0@
  0058a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0058d	50		 push	 eax
  0058e	e8 00 00 00 00	 call	 _fprintf
  00593	83 c4 08	 add	 esp, 8

; 179  : #endif
; 180  : 		fprintf(fout,"%d,",aircraft_database[i].target_symbol_type);

  00596	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0059d	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+56]
  005a3	51		 push	 ecx
  005a4	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  005a9	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  005ac	52		 push	 edx
  005ad	e8 00 00 00 00	 call	 _fprintf
  005b2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 181  : 		fprintf(fout,"%d,",aircraft_database[i].target_priority_type);

  005b5	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005bc	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+60]
  005c2	51		 push	 ecx
  005c3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  005c8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  005cb	52		 push	 edx
  005cc	e8 00 00 00 00	 call	 _fprintf
  005d1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 182  : 		fprintf(fout,"%d,",aircraft_database[i].force_info_catagory);

  005d4	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005db	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+64]
  005e1	51		 push	 ecx
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  005e7	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  005ea	52		 push	 edx
  005eb	e8 00 00 00 00	 call	 _fprintf
  005f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 183  : 		fprintf(fout,"%d,",aircraft_database[i].threat_type);

  005f3	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  005fa	8b 88 44 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+68]
  00600	51		 push	 ecx
  00601	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00606	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00609	52		 push	 edx
  0060a	e8 00 00 00 00	 call	 _fprintf
  0060f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 184  : 		//fprintf(fout,"%d,",aircraft_database[i].view_category);
; 185  : 		//fprintf(fout,"%d,",aircraft_database[i].view_type);
; 186  : 		//fprintf(fout,"%d,",aircraft_database[i].map_icon);
; 187  : 		fprintf(fout,"%g,",aircraft_database[i].centre_of_gravity_to_ground_distance);

  00612	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00619	f3 0f 5a 80 54
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+84]
  00621	83 ec 08	 sub	 esp, 8
  00624	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00629	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0062e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00631	51		 push	 ecx
  00632	e8 00 00 00 00	 call	 _fprintf
  00637	83 c4 10	 add	 esp, 16			; 00000010H

; 188  : 		fprintf(fout,"%g,",aircraft_database[i].centre_of_gravity_to_ground_distance_destroyed);

  0063a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00641	f3 0f 5a 80 58
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+88]
  00649	83 ec 08	 sub	 esp, 8
  0064c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00651	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00656	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00659	51		 push	 ecx
  0065a	e8 00 00 00 00	 call	 _fprintf
  0065f	83 c4 10	 add	 esp, 16			; 00000010H

; 189  : 		fprintf(fout,"%g,",aircraft_database[i].chase_view_min_distance);

  00662	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00669	f3 0f 5a 80 5c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+92]
  00671	83 ec 08	 sub	 esp, 8
  00674	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00679	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0067e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00681	51		 push	 ecx
  00682	e8 00 00 00 00	 call	 _fprintf
  00687	83 c4 10	 add	 esp, 16			; 00000010H

; 190  : 		fprintf(fout,"%g,",aircraft_database[i].chase_view_max_distance);

  0068a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00691	f3 0f 5a 80 60
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+96]
  00699	83 ec 08	 sub	 esp, 8
  0069c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006a1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  006a6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  006a9	51		 push	 ecx
  006aa	e8 00 00 00 00	 call	 _fprintf
  006af	83 c4 10	 add	 esp, 16			; 00000010H

; 191  : 		fprintf(fout,"%g,",aircraft_database[i].chase_view_min_distance_test);

  006b2	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006b9	f3 0f 5a 80 64
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+100]
  006c1	83 ec 08	 sub	 esp, 8
  006c4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006c9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  006ce	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  006d1	51		 push	 ecx
  006d2	e8 00 00 00 00	 call	 _fprintf
  006d7	83 c4 10	 add	 esp, 16			; 00000010H

; 192  : 		fprintf(fout,"%g,",aircraft_database[i].chase_view_max_distance_test);

  006da	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  006e1	f3 0f 5a 80 68
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+104]
  006e9	83 ec 08	 sub	 esp, 8
  006ec	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006f1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  006f6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  006f9	51		 push	 ecx
  006fa	e8 00 00 00 00	 call	 _fprintf
  006ff	83 c4 10	 add	 esp, 16			; 00000010H

; 193  : 		fprintf(fout,"%g,",aircraft_database[i].cruise_velocity);

  00702	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00709	f3 0f 5a 80 6c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+108]
  00711	83 ec 08	 sub	 esp, 8
  00714	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00719	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0071e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00721	51		 push	 ecx
  00722	e8 00 00 00 00	 call	 _fprintf
  00727	83 c4 10	 add	 esp, 16			; 00000010H

; 194  : 		fprintf(fout,"%g,",aircraft_database[i].cruise_altitude);

  0072a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00731	f3 0f 5a 80 70
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+112]
  00739	83 ec 08	 sub	 esp, 8
  0073c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00741	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00746	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00749	51		 push	 ecx
  0074a	e8 00 00 00 00	 call	 _fprintf
  0074f	83 c4 10	 add	 esp, 16			; 00000010H

; 195  : 		fprintf(fout,"%g,",aircraft_database[i].attack_altitude);

  00752	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00759	f3 0f 5a 80 74
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+116]
  00761	83 ec 08	 sub	 esp, 8
  00764	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00769	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0076e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00771	51		 push	 ecx
  00772	e8 00 00 00 00	 call	 _fprintf
  00777	83 c4 10	 add	 esp, 16			; 00000010H

; 196  : 		fprintf(fout,"%g,",deg(aircraft_database[i].destroyed_bank_offset));

  0077a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00781	f3 0f 10 80 78
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+120]
  00789	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00791	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00795	83 ec 08	 sub	 esp, 8
  00798	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  007a2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  007a5	51		 push	 ecx
  007a6	e8 00 00 00 00	 call	 _fprintf
  007ab	83 c4 10	 add	 esp, 16			; 00000010H

; 197  : 		fprintf(fout,"%g,",deg(aircraft_database[i].destroyed_pitch_offset));

  007ae	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  007b5	f3 0f 10 80 7c
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+124]
  007bd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  007c5	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  007c9	83 ec 08	 sub	 esp, 8
  007cc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  007d1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  007d6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  007d9	51		 push	 ecx
  007da	e8 00 00 00 00	 call	 _fprintf
  007df	83 c4 10	 add	 esp, 16			; 00000010H

; 198  : 		fprintf(fout,"%g,",deg(aircraft_database[i].fuselage_angle));

  007e2	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  007e9	f3 0f 10 80 80
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+128]
  007f1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  007f9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  007fd	83 ec 08	 sub	 esp, 8
  00800	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00805	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0080a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0080d	51		 push	 ecx
  0080e	e8 00 00 00 00	 call	 _fprintf
  00813	83 c4 10	 add	 esp, 16			; 00000010H

; 199  : 		fprintf(fout,"%g,",aircraft_database[i].liftoff_velocity);

  00816	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0081d	f3 0f 5a 80 84
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+132]
  00825	83 ec 08	 sub	 esp, 8
  00828	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0082d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00832	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00835	51		 push	 ecx
  00836	e8 00 00 00 00	 call	 _fprintf
  0083b	83 c4 10	 add	 esp, 16			; 00000010H

; 200  : 		fprintf(fout,"%g,",deg(aircraft_database[i].main_rotor_shaft_angle));

  0083e	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00845	f3 0f 10 80 88
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+136]
  0084d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00855	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00859	83 ec 08	 sub	 esp, 8
  0085c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00861	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00866	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00869	51		 push	 ecx
  0086a	e8 00 00 00 00	 call	 _fprintf
  0086f	83 c4 10	 add	 esp, 16			; 00000010H

; 201  : 		fprintf(fout,"%g,",aircraft_database[i].main_rotor_direction);

  00872	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00879	f3 0f 5a 80 8c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+140]
  00881	83 ec 08	 sub	 esp, 8
  00884	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00889	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0088e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00891	51		 push	 ecx
  00892	e8 00 00 00 00	 call	 _fprintf
  00897	83 c4 10	 add	 esp, 16			; 00000010H

; 202  : 		fprintf(fout,"%g,",deg(aircraft_database[i].main_rotor_blade_droop_angle));

  0089a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  008a1	f3 0f 10 80 90
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+144]
  008a9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  008b1	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  008b5	83 ec 08	 sub	 esp, 8
  008b8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  008bd	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  008c2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  008c5	51		 push	 ecx
  008c6	e8 00 00 00 00	 call	 _fprintf
  008cb	83 c4 10	 add	 esp, 16			; 00000010H

; 203  : 		fprintf(fout,"%g,",aircraft_database[i].propellor_direction);

  008ce	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  008d5	f3 0f 5a 80 94
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+148]
  008dd	83 ec 08	 sub	 esp, 8
  008e0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  008e5	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  008ea	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  008ed	51		 push	 ecx
  008ee	e8 00 00 00 00	 call	 _fprintf
  008f3	83 c4 10	 add	 esp, 16			; 00000010H

; 204  : 		fprintf(fout,"%g,",deg(aircraft_database[i].max_turn_rate));

  008f6	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  008fd	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+152]
  00905	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0090d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00911	83 ec 08	 sub	 esp, 8
  00914	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00919	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0091e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00921	51		 push	 ecx
  00922	e8 00 00 00 00	 call	 _fprintf
  00927	83 c4 10	 add	 esp, 16			; 00000010H

; 205  : 		fprintf(fout,"%g,",deg(aircraft_database[i].max_roll));

  0092a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00931	f3 0f 10 80 9c
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+156]
  00939	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00941	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00945	83 ec 08	 sub	 esp, 8
  00948	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0094d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00952	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00955	51		 push	 ecx
  00956	e8 00 00 00 00	 call	 _fprintf
  0095b	83 c4 10	 add	 esp, 16			; 00000010H

; 206  : 		fprintf(fout,"%g,",aircraft_database[i].max_vertical_turn_allowance);

  0095e	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00965	f3 0f 5a 80 a0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+160]
  0096d	83 ec 08	 sub	 esp, 8
  00970	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00975	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0097a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0097d	51		 push	 ecx
  0097e	e8 00 00 00 00	 call	 _fprintf
  00983	83 c4 10	 add	 esp, 16			; 00000010H

; 207  : 		fprintf(fout,"%g,",aircraft_database[i].avoidance_radius);

  00986	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  0098d	f3 0f 5a 80 a4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+164]
  00995	83 ec 08	 sub	 esp, 8
  00998	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0099d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  009a2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  009a5	51		 push	 ecx
  009a6	e8 00 00 00 00	 call	 _fprintf
  009ab	83 c4 10	 add	 esp, 16			; 00000010H

; 208  : 		fprintf(fout,"%g,",aircraft_database[i].g_max);

  009ae	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  009b5	f3 0f 5a 80 a8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+168]
  009bd	83 ec 08	 sub	 esp, 8
  009c0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009c5	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  009ca	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  009cd	51		 push	 ecx
  009ce	e8 00 00 00 00	 call	 _fprintf
  009d3	83 c4 10	 add	 esp, 16			; 00000010H

; 209  : 		fprintf(fout,"%g,",aircraft_database[i].power_output);

  009d6	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  009dd	f3 0f 5a 80 ac
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+172]
  009e5	83 ec 08	 sub	 esp, 8
  009e8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009ed	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  009f2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  009f5	51		 push	 ecx
  009f6	e8 00 00 00 00	 call	 _fprintf
  009fb	83 c4 10	 add	 esp, 16			; 00000010H

; 210  : 		fprintf(fout,"%g,",deg(aircraft_database[i].tail_rotor_direction));

  009fe	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a05	f3 0f 10 80 b0
	00 00 00	 movss	 xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+176]
  00a0d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00a15	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a19	83 ec 08	 sub	 esp, 8
  00a1c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a21	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00a26	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00a29	51		 push	 ecx
  00a2a	e8 00 00 00 00	 call	 _fprintf
  00a2f	83 c4 10	 add	 esp, 16			; 00000010H

; 211  : 		fprintf(fout,"%g,",aircraft_database[i].recon_radius);

  00a32	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a39	f3 0f 5a 80 b4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+180]
  00a41	83 ec 08	 sub	 esp, 8
  00a44	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a49	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00a4e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00a51	51		 push	 ecx
  00a52	e8 00 00 00 00	 call	 _fprintf
  00a57	83 c4 10	 add	 esp, 16			; 00000010H

; 212  : 		fprintf(fout,"%g,",aircraft_database[i].target_scan_delay);

  00a5a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a61	f3 0f 5a 80 b8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+184]
  00a69	83 ec 08	 sub	 esp, 8
  00a6c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a71	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00a76	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00a79	51		 push	 ecx
  00a7a	e8 00 00 00 00	 call	 _fprintf
  00a7f	83 c4 10	 add	 esp, 16			; 00000010H

; 213  : 		fprintf(fout,"%g,",aircraft_database[i].air_scan_range);

  00a82	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00a89	f3 0f 5a 80 bc
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+188]
  00a91	83 ec 08	 sub	 esp, 8
  00a94	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a99	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00a9e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00aa1	51		 push	 ecx
  00aa2	e8 00 00 00 00	 call	 _fprintf
  00aa7	83 c4 10	 add	 esp, 16			; 00000010H

; 214  : 		fprintf(fout,"%g,",aircraft_database[i].surface_scan_range);

  00aaa	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00ab1	f3 0f 5a 80 c0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+192]
  00ab9	83 ec 08	 sub	 esp, 8
  00abc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ac1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00ac6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00ac9	51		 push	 ecx
  00aca	e8 00 00 00 00	 call	 _fprintf
  00acf	83 c4 10	 add	 esp, 16			; 00000010H

; 215  : 		fprintf(fout,"%g,",aircraft_database[i].potential_air_to_air_threat);

  00ad2	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00ad9	f3 0f 5a 80 c4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+196]
  00ae1	83 ec 08	 sub	 esp, 8
  00ae4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ae9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00aee	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00af1	51		 push	 ecx
  00af2	e8 00 00 00 00	 call	 _fprintf
  00af7	83 c4 10	 add	 esp, 16			; 00000010H

; 216  : 		fprintf(fout,"%g,",aircraft_database[i].potential_air_to_surface_threat);

  00afa	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b01	f3 0f 5a 80 c8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+200]
  00b09	83 ec 08	 sub	 esp, 8
  00b0c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00b11	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00b16	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00b19	51		 push	 ecx
  00b1a	e8 00 00 00 00	 call	 _fprintf
  00b1f	83 c4 10	 add	 esp, 16			; 00000010H

; 217  : 		fprintf(fout,"%g,",aircraft_database[i].ammo_economy);

  00b22	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b29	f3 0f 5a 80 cc
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+204]
  00b31	83 ec 08	 sub	 esp, 8
  00b34	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00b39	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00b3e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00b41	51		 push	 ecx
  00b42	e8 00 00 00 00	 call	 _fprintf
  00b47	83 c4 10	 add	 esp, 16			; 00000010H

; 218  : 		fprintf(fout,"%g,",aircraft_database[i].fuel_default_weight);

  00b4a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b51	f3 0f 5a 80 d0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+208]
  00b59	83 ec 08	 sub	 esp, 8
  00b5c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00b61	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00b66	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00b69	51		 push	 ecx
  00b6a	e8 00 00 00 00	 call	 _fprintf
  00b6f	83 c4 10	 add	 esp, 16			; 00000010H

; 219  : 		fprintf(fout,"%g,",aircraft_database[i].fuel_economy);

  00b72	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00b79	f3 0f 5a 80 d4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+212]
  00b81	83 ec 08	 sub	 esp, 8
  00b84	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00b89	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00b8e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00b91	51		 push	 ecx
  00b92	e8 00 00 00 00	 call	 _fprintf
  00b97	83 c4 10	 add	 esp, 16			; 00000010H

; 220  : 		fprintf(fout,"%g,",aircraft_database[i].number_of_main_rotors);

  00b9a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00ba1	f3 0f 5a 80 d8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+216]
  00ba9	83 ec 08	 sub	 esp, 8
  00bac	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00bb1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00bb6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00bb9	51		 push	 ecx
  00bba	e8 00 00 00 00	 call	 _fprintf
  00bbf	83 c4 10	 add	 esp, 16			; 00000010H

; 221  : 		fprintf(fout,"%g,",aircraft_database[i].main_rotor_radius);

  00bc2	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00bc9	f3 0f 5a 80 dc
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+220]
  00bd1	83 ec 08	 sub	 esp, 8
  00bd4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00bd9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  00bde	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  00be1	51		 push	 ecx
  00be2	e8 00 00 00 00	 call	 _fprintf
  00be7	83 c4 10	 add	 esp, 16			; 00000010H

; 222  : 		fprintf(fout,"%d,",aircraft_database[i].initial_damage_level);

  00bea	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00bf1	8b 88 e0 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+224]
  00bf7	51		 push	 ecx
  00bf8	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00bfd	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00c00	52		 push	 edx
  00c01	e8 00 00 00 00	 call	 _fprintf
  00c06	83 c4 0c	 add	 esp, 12			; 0000000cH

; 223  : 		fprintf(fout,"%d,",aircraft_database[i].explosive_quality);

  00c09	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c10	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00c16	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00c19	51		 push	 ecx
  00c1a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00c1f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00c22	52		 push	 edx
  00c23	e8 00 00 00 00	 call	 _fprintf
  00c28	83 c4 0c	 add	 esp, 12			; 0000000cH

; 224  : 		fprintf(fout,"%d,",aircraft_database[i].explosive_power);

  00c2b	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c32	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00c38	c1 e9 04	 shr	 ecx, 4
  00c3b	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00c3e	51		 push	 ecx
  00c3f	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00c44	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00c47	52		 push	 edx
  00c48	e8 00 00 00 00	 call	 _fprintf
  00c4d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 225  : 		fprintf(fout,"%d,",aircraft_database[i].offensive_capability);//y/n  : 1,

  00c50	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c57	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00c5d	c1 e9 08	 shr	 ecx, 8
  00c60	83 e1 01	 and	 ecx, 1
  00c63	51		 push	 ecx
  00c64	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00c69	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00c6c	52		 push	 edx
  00c6d	e8 00 00 00 00	 call	 _fprintf
  00c72	83 c4 0c	 add	 esp, 12			; 0000000cH

; 226  : 		fprintf(fout,"%d,",aircraft_database[i].player_controllable);//y/n   : 1,

  00c75	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00c7c	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00c82	c1 e9 09	 shr	 ecx, 9
  00c85	83 e1 01	 and	 ecx, 1
  00c88	51		 push	 ecx
  00c89	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  00c8e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00c91	52		 push	 edx
  00c92	e8 00 00 00 00	 call	 _fprintf
  00c97	83 c4 0c	 add	 esp, 12			; 0000000cH

; 227  : 		fprintf(fout,"%d\n",aircraft_database[i].points_value);//???         : 12;

  00c9a	69 45 f8 f4 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 244
  00ca1	8b 88 e4 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+228]
  00ca7	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00caa	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00cb0	51		 push	 ecx
  00cb1	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  00cb6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  00cb9	52		 push	 edx
  00cba	e8 00 00 00 00	 call	 _fprintf
  00cbf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 228  : 	}

  00cc2	e9 58 f8 ff ff	 jmp	 $LN2@DumpGWutIn
$LN3@DumpGWutIn:

; 229  : 
; 230  : //aphavoc\source\entity\mobile\vehicle\vh_dbase.h
; 231  : 	fprintf(fout,"[VEHICLES]\n");

  00cc7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KIJKODCH@?$FLVEHICLES?$FN?6@
  00ccc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00ccf	50		 push	 eax
  00cd0	e8 00 00 00 00	 call	 _fprintf
  00cd5	83 c4 08	 add	 esp, 8

; 232  : 	if (WRITE_HEADER) {

  00cd8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  00cdf	0f 84 86 03 00
	00		 je	 $LN40@DumpGWutIn

; 233  : 	fprintf(fout,"%s,","full_name");

  00ce5	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  00cea	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00cef	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00cf2	50		 push	 eax
  00cf3	e8 00 00 00 00	 call	 _fprintf
  00cf8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 234  : 	fprintf(fout,"%s,","force");

  00cfb	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00d00	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d05	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d08	50		 push	 eax
  00d09	e8 00 00 00 00	 call	 _fprintf
  00d0e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 235  : 	fprintf(fout,"%s,","default_weapon_config_type");

  00d11	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LPABPCFJ@default_weapon_config_type@
  00d16	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d1b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d1e	50		 push	 eax
  00d1f	e8 00 00 00 00	 call	 _fprintf
  00d24	83 c4 0c	 add	 esp, 12			; 0000000cH

; 236  : 	fprintf(fout,"%s,","min_weapon_config_type");

  00d27	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NHDBAFKJ@min_weapon_config_type@
  00d2c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d31	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d34	50		 push	 eax
  00d35	e8 00 00 00 00	 call	 _fprintf
  00d3a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 237  : 	fprintf(fout,"%s,","max_weapon_config_type");

  00d3d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NDKLDEID@max_weapon_config_type@
  00d42	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d47	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d4a	50		 push	 eax
  00d4b	e8 00 00 00 00	 call	 _fprintf
  00d50	83 c4 0c	 add	 esp, 12			; 0000000cH

; 238  : 	fprintf(fout,"%s,","default_weapon_type");

  00d53	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GAKPEDIG@default_weapon_type@
  00d58	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d5d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d60	50		 push	 eax
  00d61	e8 00 00 00 00	 call	 _fprintf
  00d66	83 c4 0c	 add	 esp, 12			; 0000000cH

; 239  : 	fprintf(fout,"%s,","target_type");

  00d69	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NDGIMNEF@target_type@
  00d6e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d73	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d76	50		 push	 eax
  00d77	e8 00 00 00 00	 call	 _fprintf
  00d7c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 240  : 	fprintf(fout,"%s,","target_symbol_type");

  00d7f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KFEIDFO@target_symbol_type@
  00d84	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d89	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00d8c	50		 push	 eax
  00d8d	e8 00 00 00 00	 call	 _fprintf
  00d92	83 c4 0c	 add	 esp, 12			; 0000000cH

; 241  : 	fprintf(fout,"%s,","target_priority_type");

  00d95	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CMHOELLN@target_priority_type@
  00d9a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00d9f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00da2	50		 push	 eax
  00da3	e8 00 00 00 00	 call	 _fprintf
  00da8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 242  : 	fprintf(fout,"%s,","force_info_catagory");

  00dab	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NPOJFGGJ@force_info_catagory@
  00db0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00db5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00db8	50		 push	 eax
  00db9	e8 00 00 00 00	 call	 _fprintf
  00dbe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 243  : 	fprintf(fout,"%s,","threat_type");

  00dc1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CJJNFLM@threat_type@
  00dc6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00dcb	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00dce	50		 push	 eax
  00dcf	e8 00 00 00 00	 call	 _fprintf
  00dd4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 244  : 	//fprintf(fout,"%s,","view_category");
; 245  : 	//fprintf(fout,"%s,","view_type");
; 246  : 	//fprintf(fout,"%s,","map_icon");
; 247  : 	fprintf(fout,"%s,","carries_smoke_grenades");

  00dd7	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PFMMOFND@carries_smoke_grenades@
  00ddc	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00de1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00de4	50		 push	 eax
  00de5	e8 00 00 00 00	 call	 _fprintf
  00dea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 248  : 	fprintf(fout,"%s,","chase_view_min_distance");

  00ded	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KGGBNFKF@chase_view_min_distance@
  00df2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00df7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00dfa	50		 push	 eax
  00dfb	e8 00 00 00 00	 call	 _fprintf
  00e00	83 c4 0c	 add	 esp, 12			; 0000000cH

; 249  : 	fprintf(fout,"%s,","chase_view_max_distance");

  00e03	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@OGCOKNND@chase_view_max_distance@
  00e08	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e0d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e10	50		 push	 eax
  00e11	e8 00 00 00 00	 call	 _fprintf
  00e16	83 c4 0c	 add	 esp, 12			; 0000000cH

; 250  : 	fprintf(fout,"%s,","chase_view_min_distance_test");

  00e19	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@PIJDHCNC@chase_view_min_distance_test@
  00e1e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e23	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e26	50		 push	 eax
  00e27	e8 00 00 00 00	 call	 _fprintf
  00e2c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 251  : 	fprintf(fout,"%s,","chase_view_max_distance_test");

  00e2f	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KLDFGKDG@chase_view_max_distance_test@
  00e34	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e39	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e3c	50		 push	 eax
  00e3d	e8 00 00 00 00	 call	 _fprintf
  00e42	83 c4 0c	 add	 esp, 12			; 0000000cH

; 252  : 	fprintf(fout,"%s,","cruise_velocity");

  00e45	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OLEKGHHO@cruise_velocity@
  00e4a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e4f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e52	50		 push	 eax
  00e53	e8 00 00 00 00	 call	 _fprintf
  00e58	83 c4 0c	 add	 esp, 12			; 0000000cH

; 253  : 	fprintf(fout,"%s,","axle_length");

  00e5b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EIBFPEPD@axle_length@
  00e60	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e65	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e68	50		 push	 eax
  00e69	e8 00 00 00 00	 call	 _fprintf
  00e6e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 	fprintf(fout,"%s,","max_acceleration");

  00e71	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GCPDPIAG@max_acceleration@
  00e76	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e7b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e7e	50		 push	 eax
  00e7f	e8 00 00 00 00	 call	 _fprintf
  00e84	83 c4 0c	 add	 esp, 12			; 0000000cH

; 255  : 	fprintf(fout,"%s,","max_turn_rate");

  00e87	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MJEOGANB@max_turn_rate@
  00e8c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00e91	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00e94	50		 push	 eax
  00e95	e8 00 00 00 00	 call	 _fprintf
  00e9a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 256  : 	fprintf(fout,"%s,","g_max");

  00e9d	68 00 00 00 00	 push	 OFFSET ??_C@_05IGDAEEJD@g_max@
  00ea2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00ea7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00eaa	50		 push	 eax
  00eab	e8 00 00 00 00	 call	 _fprintf
  00eb0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 257  : 	fprintf(fout,"%s,","power_output");

  00eb3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PKCIOEFJ@power_output@
  00eb8	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00ebd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00ec0	50		 push	 eax
  00ec1	e8 00 00 00 00	 call	 _fprintf
  00ec6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 258  : 	fprintf(fout,"%s,","recon_radius");

  00ec9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KPEEILEF@recon_radius@
  00ece	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00ed3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00ed6	50		 push	 eax
  00ed7	e8 00 00 00 00	 call	 _fprintf
  00edc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 259  : 	fprintf(fout,"%s,","target_scan_delay");

  00edf	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BBBJKKMK@target_scan_delay@
  00ee4	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00ee9	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00eec	50		 push	 eax
  00eed	e8 00 00 00 00	 call	 _fprintf
  00ef2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 260  : 	fprintf(fout,"%s,","air_scan_floor");

  00ef5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NMHJCNEO@air_scan_floor@
  00efa	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00eff	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f02	50		 push	 eax
  00f03	e8 00 00 00 00	 call	 _fprintf
  00f08	83 c4 0c	 add	 esp, 12			; 0000000cH

; 261  : 	fprintf(fout,"%s,","air_scan_ceiling");

  00f0b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IIEJPLCJ@air_scan_ceiling@
  00f10	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f15	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f18	50		 push	 eax
  00f19	e8 00 00 00 00	 call	 _fprintf
  00f1e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 262  : 	fprintf(fout,"%s,","air_scan_range");

  00f21	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PICBLDJ@air_scan_range@
  00f26	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f2b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f2e	50		 push	 eax
  00f2f	e8 00 00 00 00	 call	 _fprintf
  00f34	83 c4 0c	 add	 esp, 12			; 0000000cH

; 263  : 	fprintf(fout,"%s,","surface_scan_range");

  00f37	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DFEIMDEP@surface_scan_range@
  00f3c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f41	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f44	50		 push	 eax
  00f45	e8 00 00 00 00	 call	 _fprintf
  00f4a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 264  : 	fprintf(fout,"%s,","potential_surface_to_air_threat");

  00f4d	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FPEGBEK@potential_surface_to_air_threat@
  00f52	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f57	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f5a	50		 push	 eax
  00f5b	e8 00 00 00 00	 call	 _fprintf
  00f60	83 c4 0c	 add	 esp, 12			; 0000000cH

; 265  : 	fprintf(fout,"%s,","potential_surface_to_surface_threat");

  00f63	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@KDJGGNPD@potential_surface_to_surface_th@
  00f68	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f6d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f70	50		 push	 eax
  00f71	e8 00 00 00 00	 call	 _fprintf
  00f76	83 c4 0c	 add	 esp, 12			; 0000000cH

; 266  : 	fprintf(fout,"%s,","ammo_economy");

  00f79	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KDBGCMLI@ammo_economy@
  00f7e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f83	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f86	50		 push	 eax
  00f87	e8 00 00 00 00	 call	 _fprintf
  00f8c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 267  : 	fprintf(fout,"%s,","fuel_economy");

  00f8f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IFIFOLKE@fuel_economy@
  00f94	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00f99	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00f9c	50		 push	 eax
  00f9d	e8 00 00 00 00	 call	 _fprintf
  00fa2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 268  : 	fprintf(fout,"%s,","armour_front");

  00fa5	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OGAPEKED@armour_front@
  00faa	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00faf	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00fb2	50		 push	 eax
  00fb3	e8 00 00 00 00	 call	 _fprintf
  00fb8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 269  : 	fprintf(fout,"%s,","armour_side");

  00fbb	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PLMHAJCM@armour_side@
  00fc0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00fc5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00fc8	50		 push	 eax
  00fc9	e8 00 00 00 00	 call	 _fprintf
  00fce	83 c4 0c	 add	 esp, 12			; 0000000cH

; 270  : 	fprintf(fout,"%s,","armour_rear");

  00fd1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IPDJNJFJ@armour_rear@
  00fd6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00fdb	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00fde	50		 push	 eax
  00fdf	e8 00 00 00 00	 call	 _fprintf
  00fe4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 271  : 	fprintf(fout,"%s,","initial_damage_level");

  00fe7	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JPIPGBMH@initial_damage_level@
  00fec	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  00ff1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  00ff4	50		 push	 eax
  00ff5	e8 00 00 00 00	 call	 _fprintf
  00ffa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 272  : 	fprintf(fout,"%s,","warhead_effective_class");

  00ffd	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LIMIOFIN@warhead_effective_class@
  01002	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01007	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0100a	50		 push	 eax
  0100b	e8 00 00 00 00	 call	 _fprintf
  01010	83 c4 0c	 add	 esp, 12			; 0000000cH

; 273  : 	fprintf(fout,"%s,","explosive_quality");

  01013	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IPAJHBFC@explosive_quality@
  01018	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0101d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01020	50		 push	 eax
  01021	e8 00 00 00 00	 call	 _fprintf
  01026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 274  : 	fprintf(fout,"%s,","explosive_power");

  01029	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IMMJCANI@explosive_power@
  0102e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01033	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01036	50		 push	 eax
  01037	e8 00 00 00 00	 call	 _fprintf
  0103c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 275  : 	fprintf(fout,"%s,","offensive_capability");

  0103f	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OPPGPJDA@offensive_capability@
  01044	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01049	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0104c	50		 push	 eax
  0104d	e8 00 00 00 00	 call	 _fprintf
  01052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 276  : 	fprintf(fout,"%s\n","points_value");

  01055	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OMGKPKMJ@points_value@
  0105a	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0105f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01062	50		 push	 eax
  01063	e8 00 00 00 00	 call	 _fprintf
  01068	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN40@DumpGWutIn:

; 277  : 	}
; 278  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_VEHICLES; i++)

  0106b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01072	eb 09		 jmp	 SHORT $LN7@DumpGWutIn
$LN5@DumpGWutIn:
  01074	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01077	83 c0 01	 add	 eax, 1
  0107a	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN7@DumpGWutIn:
  0107d	83 7d f8 26	 cmp	 DWORD PTR _i$[ebp], 38	; 00000026H
  01081	0f 8d 51 07 00
	00		 jge	 $LN6@DumpGWutIn

; 279  : 	{
; 280  : 		fprintf(fout,"%d,",i);

  01087	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  0108a	50		 push	 eax
  0108b	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01090	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01093	51		 push	 ecx
  01094	e8 00 00 00 00	 call	 _fprintf
  01099	83 c4 0c	 add	 esp, 12			; 0000000cH

; 281  : 		switch(vehicle_database[i].default_3d_shape) {

  0109c	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  010a3	8b 88 10 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+16]
  010a9	89 4d ac	 mov	 DWORD PTR tv815[ebp], ecx
  010ac	8b 55 ac	 mov	 edx, DWORD PTR tv815[ebp]
  010af	81 ea fd 09 00
	00		 sub	 edx, 2557		; 000009fdH
  010b5	89 55 ac	 mov	 DWORD PTR tv815[ebp], edx
  010b8	81 7d ac 92 00
	00 00		 cmp	 DWORD PTR tv815[ebp], 146 ; 00000092H
  010bf	0f 87 28 01 00
	00		 ja	 $LN49@DumpGWutIn
  010c5	8b 45 ac	 mov	 eax, DWORD PTR tv815[ebp]
  010c8	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN119@DumpGWutIn[eax]
  010cf	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN120@DumpGWutIn[ecx*4]
$LN41@DumpGWutIn:

; 282  : 			case OBJECT_3D_US_MARINE_WALK: fprintf(fout,"%s Unarmed US,",vehicle_database[i].full_name);   break;

  010d6	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  010dd	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  010e3	51		 push	 ecx
  010e4	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JLMIAFOO@?$CFs?5Unarmed?5US?0@
  010e9	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  010ec	52		 push	 edx
  010ed	e8 00 00 00 00	 call	 _fprintf
  010f2	83 c4 0c	 add	 esp, 12			; 0000000cH
  010f5	e9 12 01 00 00	 jmp	 $LN8@DumpGWutIn
$LN42@DumpGWutIn:

; 283  : 			case OBJECT_3D_US_MARINE_STANDING: fprintf(fout,"%s Standing US,",vehicle_database[i].full_name);  break;

  010fa	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01101	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  01107	51		 push	 ecx
  01108	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DJFAOHC@?$CFs?5Standing?5US?0@
  0110d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01110	52		 push	 edx
  01111	e8 00 00 00 00	 call	 _fprintf
  01116	83 c4 0c	 add	 esp, 12			; 0000000cH
  01119	e9 ee 00 00 00	 jmp	 $LN8@DumpGWutIn
$LN43@DumpGWutIn:

; 284  : 			case OBJECT_3D_US_MARINE_KNEELING: fprintf(fout,"%s Kneeling US,",vehicle_database[i].full_name);  break;

  0111e	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01125	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  0112b	51		 push	 ecx
  0112c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PIFPFEDF@?$CFs?5Kneeling?5US?0@
  01131	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01134	52		 push	 edx
  01135	e8 00 00 00 00	 call	 _fprintf
  0113a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0113d	e9 ca 00 00 00	 jmp	 $LN8@DumpGWutIn
$LN44@DumpGWutIn:

; 285  : 			case OBJECT_3D_CIS_MARINE_WALK: fprintf(fout,"%s Unarmed CIS,",vehicle_database[i].full_name); break;

  01142	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01149	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  0114f	51		 push	 ecx
  01150	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PBLBJGGA@?$CFs?5Unarmed?5CIS?0@
  01155	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01158	52		 push	 edx
  01159	e8 00 00 00 00	 call	 _fprintf
  0115e	83 c4 0c	 add	 esp, 12			; 0000000cH
  01161	e9 a6 00 00 00	 jmp	 $LN8@DumpGWutIn
$LN45@DumpGWutIn:

; 286  : 			case OBJECT_3D_RUSSIAN_MARINE_STANDING: fprintf(fout,"%s Standing CIS,",vehicle_database[i].full_name);break;

  01166	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0116d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  01173	51		 push	 ecx
  01174	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IJABEAE@?$CFs?5Standing?5CIS?0@
  01179	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0117c	52		 push	 edx
  0117d	e8 00 00 00 00	 call	 _fprintf
  01182	83 c4 0c	 add	 esp, 12			; 0000000cH
  01185	e9 82 00 00 00	 jmp	 $LN8@DumpGWutIn
$LN46@DumpGWutIn:

; 287  : 			case OBJECT_3D_RUSSIAN_MARINE_KNEELING: fprintf(fout,"%s Kneeling CIS,",vehicle_database[i].full_name);break;

  0118a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01191	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  01197	51		 push	 ecx
  01198	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OANDAKGN@?$CFs?5Kneeling?5CIS?0@
  0119d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  011a0	52		 push	 edx
  011a1	e8 00 00 00 00	 call	 _fprintf
  011a6	83 c4 0c	 add	 esp, 12			; 0000000cH
  011a9	eb 61		 jmp	 SHORT $LN8@DumpGWutIn
$LN47@DumpGWutIn:

; 288  : 			case OBJECT_3D_M_923A1_COVERED: fprintf(fout,"%s Covered,",vehicle_database[i].full_name); break;

  011ab	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  011b2	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  011b8	51		 push	 ecx
  011b9	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OMHFOILL@?$CFs?5Covered?0@
  011be	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  011c1	52		 push	 edx
  011c2	e8 00 00 00 00	 call	 _fprintf
  011c7	83 c4 0c	 add	 esp, 12			; 0000000cH
  011ca	eb 40		 jmp	 SHORT $LN8@DumpGWutIn
$LN48@DumpGWutIn:

; 289  : 			case OBJECT_3D_M_923A1_OPEN: fprintf(fout,"%s Open,",vehicle_database[i].full_name); break;

  011cc	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  011d3	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  011d9	51		 push	 ecx
  011da	68 00 00 00 00	 push	 OFFSET ??_C@_08EMKOFBJB@?$CFs?5Open?0@
  011df	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  011e2	52		 push	 edx
  011e3	e8 00 00 00 00	 call	 _fprintf
  011e8	83 c4 0c	 add	 esp, 12			; 0000000cH
  011eb	eb 1f		 jmp	 SHORT $LN8@DumpGWutIn
$LN49@DumpGWutIn:

; 290  : 			default: fprintf(fout,"%s,",vehicle_database[i].full_name);

  011ed	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  011f4	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  011fa	51		 push	 ecx
  011fb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01200	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01203	52		 push	 edx
  01204	e8 00 00 00 00	 call	 _fprintf
  01209	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@DumpGWutIn:

; 291  : 		}
; 292  : 		fprintf(fout,"%d,",vehicle_database[i].force);

  0120c	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01213	8b 88 14 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+20]
  01219	51		 push	 ecx
  0121a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0121f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01222	52		 push	 edx
  01223	e8 00 00 00 00	 call	 _fprintf
  01228	83 c4 0c	 add	 esp, 12			; 0000000cH

; 293  : 		/*  Don't write weapons configs, the numbers have changed, so will be wrong in GWUT file! */
; 294  : #if 0
; 295  : 		fprintf(fout,"%d,",vehicle_database[i].default_weapon_config_type);
; 296  : 		fprintf(fout,"%d,",vehicle_database[i].min_weapon_config_type);
; 297  : 		fprintf(fout,"%d,",vehicle_database[i].max_weapon_config_type);
; 298  : 		fprintf(fout,"%d,",vehicle_database[i].default_weapon_type);
; 299  : #else
; 300  : 		fprintf(fout," , , , ,");

  0122b	68 00 00 00 00	 push	 OFFSET ??_C@_08KAFEPAPG@?5?0?5?0?5?0?5?0@
  01230	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01233	50		 push	 eax
  01234	e8 00 00 00 00	 call	 _fprintf
  01239	83 c4 08	 add	 esp, 8

; 301  : #endif
; 302  : 		fprintf(fout,"%d,",vehicle_database[i].target_type);

  0123c	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01243	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+40]
  01249	51		 push	 ecx
  0124a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0124f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01252	52		 push	 edx
  01253	e8 00 00 00 00	 call	 _fprintf
  01258	83 c4 0c	 add	 esp, 12			; 0000000cH

; 303  : 		fprintf(fout,"%d,",vehicle_database[i].target_symbol_type);

  0125b	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01262	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+44]
  01268	51		 push	 ecx
  01269	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0126e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01271	52		 push	 edx
  01272	e8 00 00 00 00	 call	 _fprintf
  01277	83 c4 0c	 add	 esp, 12			; 0000000cH

; 304  : 		fprintf(fout,"%d,",vehicle_database[i].target_priority_type);

  0127a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01281	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+48]
  01287	51		 push	 ecx
  01288	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0128d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01290	52		 push	 edx
  01291	e8 00 00 00 00	 call	 _fprintf
  01296	83 c4 0c	 add	 esp, 12			; 0000000cH

; 305  : 		fprintf(fout,"%d,",vehicle_database[i].force_info_catagory);

  01299	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  012a0	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+52]
  012a6	51		 push	 ecx
  012a7	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  012ac	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  012af	52		 push	 edx
  012b0	e8 00 00 00 00	 call	 _fprintf
  012b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 306  : 		fprintf(fout,"%d,",vehicle_database[i].threat_type);

  012b8	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  012bf	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+56]
  012c5	51		 push	 ecx
  012c6	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  012cb	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  012ce	52		 push	 edx
  012cf	e8 00 00 00 00	 call	 _fprintf
  012d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 307  : 		//fprintf(fout,"%d,",vehicle_database[i].view_category);
; 308  : 		//fprintf(fout,"%d,",vehicle_database[i].view_type);
; 309  : 		//fprintf(fout,"%d,",vehicle_database[i].map_icon);
; 310  : 		fprintf(fout,"%d,",vehicle_database[i].carries_smoke_grenades);

  012d7	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  012de	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+72]
  012e4	51		 push	 ecx
  012e5	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  012ea	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  012ed	52		 push	 edx
  012ee	e8 00 00 00 00	 call	 _fprintf
  012f3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  : 		fprintf(fout,"%g,",vehicle_database[i].chase_view_min_distance);

  012f6	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  012fd	f3 0f 5a 80 4c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+76]
  01305	83 ec 08	 sub	 esp, 8
  01308	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0130d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01312	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01315	51		 push	 ecx
  01316	e8 00 00 00 00	 call	 _fprintf
  0131b	83 c4 10	 add	 esp, 16			; 00000010H

; 312  : 		fprintf(fout,"%g,",vehicle_database[i].chase_view_max_distance);

  0131e	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01325	f3 0f 5a 80 50
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+80]
  0132d	83 ec 08	 sub	 esp, 8
  01330	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01335	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0133a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0133d	51		 push	 ecx
  0133e	e8 00 00 00 00	 call	 _fprintf
  01343	83 c4 10	 add	 esp, 16			; 00000010H

; 313  : 		fprintf(fout,"%g,",vehicle_database[i].chase_view_min_distance_test);

  01346	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0134d	f3 0f 5a 80 54
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+84]
  01355	83 ec 08	 sub	 esp, 8
  01358	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0135d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01362	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01365	51		 push	 ecx
  01366	e8 00 00 00 00	 call	 _fprintf
  0136b	83 c4 10	 add	 esp, 16			; 00000010H

; 314  : 		fprintf(fout,"%g,",vehicle_database[i].chase_view_max_distance_test);

  0136e	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01375	f3 0f 5a 80 58
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+88]
  0137d	83 ec 08	 sub	 esp, 8
  01380	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01385	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0138a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0138d	51		 push	 ecx
  0138e	e8 00 00 00 00	 call	 _fprintf
  01393	83 c4 10	 add	 esp, 16			; 00000010H

; 315  : 		fprintf(fout,"%g,",vehicle_database[i].cruise_velocity);

  01396	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0139d	f3 0f 5a 80 5c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+92]
  013a5	83 ec 08	 sub	 esp, 8
  013a8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  013ad	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  013b2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  013b5	51		 push	 ecx
  013b6	e8 00 00 00 00	 call	 _fprintf
  013bb	83 c4 10	 add	 esp, 16			; 00000010H

; 316  : 		fprintf(fout,"%g,",vehicle_database[i].axle_length);

  013be	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  013c5	f3 0f 5a 80 60
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+96]
  013cd	83 ec 08	 sub	 esp, 8
  013d0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  013d5	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  013da	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  013dd	51		 push	 ecx
  013de	e8 00 00 00 00	 call	 _fprintf
  013e3	83 c4 10	 add	 esp, 16			; 00000010H

; 317  : 		fprintf(fout,"%g,",vehicle_database[i].max_acceleration);

  013e6	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  013ed	f3 0f 5a 80 64
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+100]
  013f5	83 ec 08	 sub	 esp, 8
  013f8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  013fd	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01402	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01405	51		 push	 ecx
  01406	e8 00 00 00 00	 call	 _fprintf
  0140b	83 c4 10	 add	 esp, 16			; 00000010H

; 318  : 		fprintf(fout,"%g,",deg(vehicle_database[i].max_turn_rate));

  0140e	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01415	f3 0f 10 80 68
	00 00 00	 movss	 xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+104]
  0141d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  01425	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01429	83 ec 08	 sub	 esp, 8
  0142c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01431	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01436	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01439	51		 push	 ecx
  0143a	e8 00 00 00 00	 call	 _fprintf
  0143f	83 c4 10	 add	 esp, 16			; 00000010H

; 319  : 		fprintf(fout,"%g,",vehicle_database[i].g_max);

  01442	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01449	f3 0f 5a 80 6c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+108]
  01451	83 ec 08	 sub	 esp, 8
  01454	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01459	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0145e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01461	51		 push	 ecx
  01462	e8 00 00 00 00	 call	 _fprintf
  01467	83 c4 10	 add	 esp, 16			; 00000010H

; 320  : 		fprintf(fout,"%g,",vehicle_database[i].power_output);

  0146a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01471	f3 0f 5a 80 70
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+112]
  01479	83 ec 08	 sub	 esp, 8
  0147c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01481	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01486	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01489	51		 push	 ecx
  0148a	e8 00 00 00 00	 call	 _fprintf
  0148f	83 c4 10	 add	 esp, 16			; 00000010H

; 321  : 		fprintf(fout,"%g,",vehicle_database[i].recon_radius);

  01492	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01499	f3 0f 5a 80 74
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+116]
  014a1	83 ec 08	 sub	 esp, 8
  014a4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  014a9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  014ae	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  014b1	51		 push	 ecx
  014b2	e8 00 00 00 00	 call	 _fprintf
  014b7	83 c4 10	 add	 esp, 16			; 00000010H

; 322  : 		fprintf(fout,"%g,",vehicle_database[i].target_scan_delay);

  014ba	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  014c1	f3 0f 5a 80 78
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+120]
  014c9	83 ec 08	 sub	 esp, 8
  014cc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  014d1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  014d6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  014d9	51		 push	 ecx
  014da	e8 00 00 00 00	 call	 _fprintf
  014df	83 c4 10	 add	 esp, 16			; 00000010H

; 323  : 		fprintf(fout,"%g,",vehicle_database[i].air_scan_floor);

  014e2	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  014e9	f3 0f 5a 80 7c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+124]
  014f1	83 ec 08	 sub	 esp, 8
  014f4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  014f9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  014fe	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01501	51		 push	 ecx
  01502	e8 00 00 00 00	 call	 _fprintf
  01507	83 c4 10	 add	 esp, 16			; 00000010H

; 324  : 		fprintf(fout,"%g,",vehicle_database[i].air_scan_ceiling);

  0150a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01511	f3 0f 5a 80 80
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+128]
  01519	83 ec 08	 sub	 esp, 8
  0151c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01521	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01526	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01529	51		 push	 ecx
  0152a	e8 00 00 00 00	 call	 _fprintf
  0152f	83 c4 10	 add	 esp, 16			; 00000010H

; 325  : 		fprintf(fout,"%g,",vehicle_database[i].air_scan_range);

  01532	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01539	f3 0f 5a 80 84
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+132]
  01541	83 ec 08	 sub	 esp, 8
  01544	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01549	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0154e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01551	51		 push	 ecx
  01552	e8 00 00 00 00	 call	 _fprintf
  01557	83 c4 10	 add	 esp, 16			; 00000010H

; 326  : 		fprintf(fout,"%g,",vehicle_database[i].surface_scan_range);

  0155a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01561	f3 0f 5a 80 88
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+136]
  01569	83 ec 08	 sub	 esp, 8
  0156c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01571	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01576	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01579	51		 push	 ecx
  0157a	e8 00 00 00 00	 call	 _fprintf
  0157f	83 c4 10	 add	 esp, 16			; 00000010H

; 327  : 		fprintf(fout,"%g,",vehicle_database[i].potential_surface_to_air_threat);

  01582	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01589	f3 0f 5a 80 8c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+140]
  01591	83 ec 08	 sub	 esp, 8
  01594	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01599	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0159e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  015a1	51		 push	 ecx
  015a2	e8 00 00 00 00	 call	 _fprintf
  015a7	83 c4 10	 add	 esp, 16			; 00000010H

; 328  : 		fprintf(fout,"%g,",vehicle_database[i].potential_surface_to_surface_threat);

  015aa	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  015b1	f3 0f 5a 80 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+144]
  015b9	83 ec 08	 sub	 esp, 8
  015bc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  015c1	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  015c6	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  015c9	51		 push	 ecx
  015ca	e8 00 00 00 00	 call	 _fprintf
  015cf	83 c4 10	 add	 esp, 16			; 00000010H

; 329  : 		fprintf(fout,"%g,",vehicle_database[i].ammo_economy);

  015d2	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  015d9	f3 0f 5a 80 94
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+148]
  015e1	83 ec 08	 sub	 esp, 8
  015e4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  015e9	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  015ee	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  015f1	51		 push	 ecx
  015f2	e8 00 00 00 00	 call	 _fprintf
  015f7	83 c4 10	 add	 esp, 16			; 00000010H

; 330  : 		fprintf(fout,"%g,",vehicle_database[i].fuel_economy);

  015fa	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01601	f3 0f 5a 80 98
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+152]
  01609	83 ec 08	 sub	 esp, 8
  0160c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01611	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01616	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01619	51		 push	 ecx
  0161a	e8 00 00 00 00	 call	 _fprintf
  0161f	83 c4 10	 add	 esp, 16			; 00000010H

; 331  : 		fprintf(fout,"%g,",vehicle_database[i].armour_front);

  01622	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01629	f3 0f 5a 80 9c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+156]
  01631	83 ec 08	 sub	 esp, 8
  01634	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01639	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0163e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01641	51		 push	 ecx
  01642	e8 00 00 00 00	 call	 _fprintf
  01647	83 c4 10	 add	 esp, 16			; 00000010H

; 332  : 		fprintf(fout,"%g,",vehicle_database[i].armour_side);

  0164a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01651	f3 0f 5a 80 a0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+160]
  01659	83 ec 08	 sub	 esp, 8
  0165c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01661	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01666	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01669	51		 push	 ecx
  0166a	e8 00 00 00 00	 call	 _fprintf
  0166f	83 c4 10	 add	 esp, 16			; 00000010H

; 333  : 		fprintf(fout,"%g,",vehicle_database[i].armour_rear);

  01672	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01679	f3 0f 5a 80 a4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+164]
  01681	83 ec 08	 sub	 esp, 8
  01684	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01689	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0168e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01691	51		 push	 ecx
  01692	e8 00 00 00 00	 call	 _fprintf
  01697	83 c4 10	 add	 esp, 16			; 00000010H

; 334  : 		fprintf(fout,"%d,",vehicle_database[i].initial_damage_level);

  0169a	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  016a1	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+168]
  016a7	51		 push	 ecx
  016a8	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  016ad	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  016b0	52		 push	 edx
  016b1	e8 00 00 00 00	 call	 _fprintf
  016b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 335  : 		fprintf(fout,"%d,",IntToBin(vehicle_database[i].warhead_effective_class)); //!! convert to power of 2

  016b9	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  016c0	83 b8 ac 00 00
	00 00		 cmp	 DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+172], 0
  016c7	75 09		 jne	 SHORT $LN101@DumpGWutIn
  016c9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1101[ebp], 0
  016d0	eb 58		 jmp	 SHORT $LN102@DumpGWutIn
$LN101@DumpGWutIn:
  016d2	69 4d f8 bc 00
	00 00		 imul	 ecx, DWORD PTR _i$[ebp], 188
  016d9	f2 0f 2a 81 ac
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[ecx+172]
  016e1	83 ec 08	 sub	 esp, 8
  016e4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  016e9	e8 00 00 00 00	 call	 _log
  016ee	83 c4 08	 add	 esp, 8
  016f1	dd 5d a4	 fstp	 QWORD PTR tv4182[ebp]
  016f4	f2 0f 10 45 a4	 movsd	 xmm0, QWORD PTR tv4182[ebp]
  016f9	83 ec 08	 sub	 esp, 8
  016fc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  01704	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  01709	f2 0f 11 45 9c	 movsd	 QWORD PTR tv5001[ebp], xmm0
  0170e	e8 00 00 00 00	 call	 _log
  01713	83 c4 08	 add	 esp, 8
  01716	dd 5d 94	 fstp	 QWORD PTR tv4188[ebp]
  01719	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv5001[ebp]
  0171e	f2 0f 5e 45 94	 divsd	 xmm0, QWORD PTR tv4188[ebp]
  01723	f2 0f 2c d0	 cvttsd2si edx, xmm0
  01727	89 55 ac	 mov	 DWORD PTR tv1101[ebp], edx
$LN102@DumpGWutIn:
  0172a	8b 45 ac	 mov	 eax, DWORD PTR tv1101[ebp]
  0172d	50		 push	 eax
  0172e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01733	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01736	51		 push	 ecx
  01737	e8 00 00 00 00	 call	 _fprintf
  0173c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 336  : 		fprintf(fout,"%d,",vehicle_database[i].explosive_quality);

  0173f	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01746	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  0174c	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0174f	51		 push	 ecx
  01750	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01755	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01758	52		 push	 edx
  01759	e8 00 00 00 00	 call	 _fprintf
  0175e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 337  : 		fprintf(fout,"%d,",vehicle_database[i].explosive_power);

  01761	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  01768	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  0176e	c1 e9 04	 shr	 ecx, 4
  01771	83 e1 0f	 and	 ecx, 15			; 0000000fH
  01774	51		 push	 ecx
  01775	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0177a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0177d	52		 push	 edx
  0177e	e8 00 00 00 00	 call	 _fprintf
  01783	83 c4 0c	 add	 esp, 12			; 0000000cH

; 338  : 		fprintf(fout,"%d,",vehicle_database[i].offensive_capability);

  01786	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  0178d	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  01793	c1 e9 08	 shr	 ecx, 8
  01796	83 e1 01	 and	 ecx, 1
  01799	51		 push	 ecx
  0179a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0179f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  017a2	52		 push	 edx
  017a3	e8 00 00 00 00	 call	 _fprintf
  017a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 339  : 		fprintf(fout,"%d\n",vehicle_database[i].points_value);

  017ab	69 45 f8 bc 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 188
  017b2	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+176]
  017b8	c1 e9 09	 shr	 ecx, 9
  017bb	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  017c1	51		 push	 ecx
  017c2	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  017c7	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  017ca	52		 push	 edx
  017cb	e8 00 00 00 00	 call	 _fprintf
  017d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 340  : 	}

  017d3	e9 9c f8 ff ff	 jmp	 $LN5@DumpGWutIn
$LN6@DumpGWutIn:

; 341  : 
; 342  : //aphavoc\source\entity\mobile\weapon\wn_dbase.h
; 343  : 	fprintf(fout,"[WEAPONS]\n");

  017d8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JIDGEPHK@?$FLWEAPONS?$FN?6@
  017dd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  017e0	50		 push	 eax
  017e1	e8 00 00 00 00	 call	 _fprintf
  017e6	83 c4 08	 add	 esp, 8

; 344  : 	if (WRITE_HEADER) {

  017e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  017f0	0f 84 0a 04 00
	00		 je	 $LN50@DumpGWutIn

; 345  : 	fprintf(fout,"%s,","full_name");

  017f6	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  017fb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01800	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01803	50		 push	 eax
  01804	e8 00 00 00 00	 call	 _fprintf
  01809	83 c4 0c	 add	 esp, 12			; 0000000cH

; 346  : // fprintf(fout,"%s,","weapon_nr");
; 347  : 	fprintf(fout,"%s,","guidance_type");

  0180c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LDNBMKIO@guidance_type@
  01811	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01816	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01819	50		 push	 eax
  0181a	e8 00 00 00 00	 call	 _fprintf
  0181f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 348  : 	fprintf(fout,"%s,","aiming_type");

  01822	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OICLCNBO@aiming_type@
  01827	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0182c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0182f	50		 push	 eax
  01830	e8 00 00 00 00	 call	 _fprintf
  01835	83 c4 0c	 add	 esp, 12			; 0000000cH

; 349  : 	fprintf(fout,"%s,","decoy_type");

  01838	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PNKIBKJK@decoy_type@
  0183d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01842	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01845	50		 push	 eax
  01846	e8 00 00 00 00	 call	 _fprintf
  0184b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 350  : 	fprintf(fout,"%s,","warhead_type");

  0184e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DOAPKEMB@warhead_type@
  01853	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01858	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0185b	50		 push	 eax
  0185c	e8 00 00 00 00	 call	 _fprintf
  01861	83 c4 0c	 add	 esp, 12			; 0000000cH

; 351  : 	fprintf(fout,"%s,","threat_type");

  01864	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CJJNFLM@threat_type@
  01869	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0186e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01871	50		 push	 eax
  01872	e8 00 00 00 00	 call	 _fprintf
  01877	83 c4 0c	 add	 esp, 12			; 0000000cH

; 352  : 	fprintf(fout,"%s,","report_ammo_low_count");

  0187a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MFIFEALF@report_ammo_low_count@
  0187f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01884	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01887	50		 push	 eax
  01888	e8 00 00 00 00	 call	 _fprintf
  0188d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 353  : 	fprintf(fout,"%s,","gun_shake");

  01890	68 00 00 00 00	 push	 OFFSET ??_C@_09HOOAENGL@gun_shake@
  01895	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0189a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0189d	50		 push	 eax
  0189e	e8 00 00 00 00	 call	 _fprintf
  018a3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 354  : 	fprintf(fout,"%s,","soft_damage_capability");

  018a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JCEFMAHM@soft_damage_capability@
  018ab	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  018b0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  018b3	50		 push	 eax
  018b4	e8 00 00 00 00	 call	 _fprintf
  018b9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 355  : 	fprintf(fout,"%s,","hard_damage_capability");

  018bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JHACPNNJ@hard_damage_capability@
  018c1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  018c6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  018c9	50		 push	 eax
  018ca	e8 00 00 00 00	 call	 _fprintf
  018cf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 356  : 	fprintf(fout,"%s,","smoke_trail_type");

  018d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GGHOFCFK@smoke_trail_type@
  018d7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  018dc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  018df	50		 push	 eax
  018e0	e8 00 00 00 00	 call	 _fprintf
  018e5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 357  : 	fprintf(fout,"%s,","acquire_parent_forward_velocity");

  018e8	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@BGMLJGNH@acquire_parent_forward_velocity@
  018ed	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  018f2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  018f5	50		 push	 eax
  018f6	e8 00 00 00 00	 call	 _fprintf
  018fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 358  : 	fprintf(fout,"%s,","ignore_gravity");

  018fe	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JIAABPMB@ignore_gravity@
  01903	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01908	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0190b	50		 push	 eax
  0190c	e8 00 00 00 00	 call	 _fprintf
  01911	83 c4 0c	 add	 esp, 12			; 0000000cH

; 359  : 	fprintf(fout,"%s,","survive_ground_impact");

  01914	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@PAFLPEOM@survive_ground_impact@
  01919	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0191e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01921	50		 push	 eax
  01922	e8 00 00 00 00	 call	 _fprintf
  01927	83 c4 0c	 add	 esp, 12			; 0000000cH

; 360  : 	fprintf(fout,"%s,","in_flight_collision_check");

  0192a	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JGEFAOLG@in_flight_collision_check@
  0192f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01934	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01937	50		 push	 eax
  01938	e8 00 00 00 00	 call	 _fprintf
  0193d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 361  : 	fprintf(fout,"%s,","viewable_weapon");

  01940	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIAOCNLL@viewable_weapon@
  01945	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0194a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0194d	50		 push	 eax
  0194e	e8 00 00 00 00	 call	 _fprintf
  01953	83 c4 0c	 add	 esp, 12			; 0000000cH

; 362  : 	fprintf(fout,"%s,","boresight_weapon");

  01956	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KOPLBPAJ@boresight_weapon@
  0195b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01960	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01963	50		 push	 eax
  01964	e8 00 00 00 00	 call	 _fprintf
  01969	83 c4 0c	 add	 esp, 12			; 0000000cH

; 363  : 	fprintf(fout,"%s,","hellfire_flight_profile");

  0196c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KGIEMPFM@hellfire_flight_profile@
  01971	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01976	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01979	50		 push	 eax
  0197a	e8 00 00 00 00	 call	 _fprintf
  0197f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 364  : // fprintf(fout,"%s,","weapon_class");
; 365  : 	fprintf(fout,"%s,","weapon_class_air_to_air");

  01982	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@BDOGIFDO@weapon_class_air_to_air@
  01987	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0198c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0198f	50		 push	 eax
  01990	e8 00 00 00 00	 call	 _fprintf
  01995	83 c4 0c	 add	 esp, 12			; 0000000cH

; 366  : 	fprintf(fout,"%s,","weapon_class_air_to_surface");

  01998	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@CCIDHLLB@weapon_class_air_to_surface@
  0199d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  019a2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  019a5	50		 push	 eax
  019a6	e8 00 00 00 00	 call	 _fprintf
  019ab	83 c4 0c	 add	 esp, 12			; 0000000cH

; 367  : 	fprintf(fout,"%s,","weapon_class_surface_to_air");

  019ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GGOBIAKP@weapon_class_surface_to_air@
  019b3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  019b8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  019bb	50		 push	 eax
  019bc	e8 00 00 00 00	 call	 _fprintf
  019c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 368  : 	fprintf(fout,"%s,","weapon_class_surface_to_surface");

  019c4	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@EOJKCMOP@weapon_class_surface_to_surface@
  019c9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  019ce	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  019d1	50		 push	 eax
  019d2	e8 00 00 00 00	 call	 _fprintf
  019d7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 369  : 	fprintf(fout,"%s,","weapon_class_decoy");

  019da	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BDAAKCNH@weapon_class_decoy@
  019df	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  019e4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  019e7	50		 push	 eax
  019e8	e8 00 00 00 00	 call	 _fprintf
  019ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 370  : 	fprintf(fout,"%s,","weapon_class_cargo");

  019f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BKLOADK@weapon_class_cargo@
  019f5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  019fa	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  019fd	50		 push	 eax
  019fe	e8 00 00 00 00	 call	 _fprintf
  01a03	83 c4 0c	 add	 esp, 12			; 0000000cH

; 371  : 	fprintf(fout,"%s,","weapon_class_debris");

  01a06	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JPIDGIGC@weapon_class_debris@
  01a0b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a10	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a13	50		 push	 eax
  01a14	e8 00 00 00 00	 call	 _fprintf
  01a19	83 c4 0c	 add	 esp, 12			; 0000000cH

; 372  : 	fprintf(fout,"%s,","weight");

  01a1c	68 00 00 00 00	 push	 OFFSET ??_C@_06CMCBKMCB@weight@
  01a21	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a26	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a29	50		 push	 eax
  01a2a	e8 00 00 00 00	 call	 _fprintf
  01a2f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 373  : 	fprintf(fout,"%s,","min_range");

  01a32	68 00 00 00 00	 push	 OFFSET ??_C@_09LEADDECB@min_range@
  01a37	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a3c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a3f	50		 push	 eax
  01a40	e8 00 00 00 00	 call	 _fprintf
  01a45	83 c4 0c	 add	 esp, 12			; 0000000cH

; 374  : 	fprintf(fout,"%s,","max_range");

  01a48	68 00 00 00 00	 push	 OFFSET ??_C@_09LFAPKOJF@max_range@
  01a4d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a52	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a55	50		 push	 eax
  01a56	e8 00 00 00 00	 call	 _fprintf
  01a5b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 375  : 	fprintf(fout,"%s,","effective_range");

  01a5e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MJOCNFFF@effective_range@
  01a63	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a68	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a6b	50		 push	 eax
  01a6c	e8 00 00 00 00	 call	 _fprintf
  01a71	83 c4 0c	 add	 esp, 12			; 0000000cH

; 376  : 	fprintf(fout,"%s,","min_range_loal");

  01a74	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EDAFPOCA@min_range_loal@
  01a79	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a7e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a81	50		 push	 eax
  01a82	e8 00 00 00 00	 call	 _fprintf
  01a87	83 c4 0c	 add	 esp, 12			; 0000000cH

; 377  : 	fprintf(fout,"%s,","max_range_loal");

  01a8a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GELOJJBB@max_range_loal@
  01a8f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01a94	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01a97	50		 push	 eax
  01a98	e8 00 00 00 00	 call	 _fprintf
  01a9d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 378  : 	fprintf(fout,"%s,","max_range_error_ratio");

  01aa0	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HFMCPOCL@max_range_error_ratio@
  01aa5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01aaa	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01aad	50		 push	 eax
  01aae	e8 00 00 00 00	 call	 _fprintf
  01ab3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 379  : 	fprintf(fout,"%s,","muzzle_velocity");

  01ab6	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HBBMJCKA@muzzle_velocity@
  01abb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01ac0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01ac3	50		 push	 eax
  01ac4	e8 00 00 00 00	 call	 _fprintf
  01ac9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 380  : 	fprintf(fout,"%s,","muzzle_velocity_max_error");

  01acc	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EGMAGNBE@muzzle_velocity_max_error@
  01ad1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01ad6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01ad9	50		 push	 eax
  01ada	e8 00 00 00 00	 call	 _fprintf
  01adf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 381  : 	fprintf(fout,"%s,","cruise_velocity");

  01ae2	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OLEKGHHO@cruise_velocity@
  01ae7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01aec	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01aef	50		 push	 eax
  01af0	e8 00 00 00 00	 call	 _fprintf
  01af5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 382  : 	fprintf(fout,"%s,","g_max");

  01af8	68 00 00 00 00	 push	 OFFSET ??_C@_05IGDAEEJD@g_max@
  01afd	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b02	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b05	50		 push	 eax
  01b06	e8 00 00 00 00	 call	 _fprintf
  01b0b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 383  : 	fprintf(fout,"%s,","burn_time");

  01b0e	68 00 00 00 00	 push	 OFFSET ??_C@_09KJIOOHDO@burn_time@
  01b13	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b18	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b1b	50		 push	 eax
  01b1c	e8 00 00 00 00	 call	 _fprintf
  01b21	83 c4 0c	 add	 esp, 12			; 0000000cH

; 384  : 	fprintf(fout,"%s,","cruise_time");

  01b24	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IJHIGDHN@cruise_time@
  01b29	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b2e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b31	50		 push	 eax
  01b32	e8 00 00 00 00	 call	 _fprintf
  01b37	83 c4 0c	 add	 esp, 12			; 0000000cH

; 385  : 	fprintf(fout,"%s,","cruise_time_max_error");

  01b3a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GOJCGEML@cruise_time_max_error@
  01b3f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b44	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b47	50		 push	 eax
  01b48	e8 00 00 00 00	 call	 _fprintf
  01b4d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 386  : 	fprintf(fout,"%s,","inhibit_time");

  01b50	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DFFMOLKF@inhibit_time@
  01b55	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b5a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b5d	50		 push	 eax
  01b5e	e8 00 00 00 00	 call	 _fprintf
  01b63	83 c4 0c	 add	 esp, 12			; 0000000cH

; 387  : 	fprintf(fout,"%s,","burst_duration");

  01b66	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IMCJNFCO@burst_duration@
  01b6b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b70	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b73	50		 push	 eax
  01b74	e8 00 00 00 00	 call	 _fprintf
  01b79	83 c4 0c	 add	 esp, 12			; 0000000cH

; 388  : 	fprintf(fout,"%s,","rate_of_fire");

  01b7c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EONMFIGF@rate_of_fire@
  01b81	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b86	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b89	50		 push	 eax
  01b8a	e8 00 00 00 00	 call	 _fprintf
  01b8f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 389  : 	fprintf(fout,"%s,","reload_time");

  01b92	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KJEAPNOM@reload_time@
  01b97	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01b9c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01b9f	50		 push	 eax
  01ba0	e8 00 00 00 00	 call	 _fprintf
  01ba5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 390  : 	fprintf(fout,"%s,","max_launch_angle_error");

  01ba8	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BJIJPPLG@max_launch_angle_error@
  01bad	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01bb2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01bb5	50		 push	 eax
  01bb6	e8 00 00 00 00	 call	 _fprintf
  01bbb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 391  : 	fprintf(fout,"%s,","max_seeker_limit");

  01bbe	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MEHCDDGB@max_seeker_limit@
  01bc3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01bc8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01bcb	50		 push	 eax
  01bcc	e8 00 00 00 00	 call	 _fprintf
  01bd1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 392  : 	fprintf(fout,"%s,","drag_factor");

  01bd4	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MMJCOPID@drag_factor@
  01bd9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01bde	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01be1	50		 push	 eax
  01be2	e8 00 00 00 00	 call	 _fprintf
  01be7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 393  : 	fprintf(fout,"%s\n","spiral_flightpath");

  01bea	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KLAAKNAP@spiral_flightpath@
  01bef	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  01bf4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01bf7	50		 push	 eax
  01bf8	e8 00 00 00 00	 call	 _fprintf
  01bfd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@DumpGWutIn:

; 394  : 	}
; 395  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_WEAPONS; i++)

  01c00	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  01c07	eb 09		 jmp	 SHORT $LN12@DumpGWutIn
$LN10@DumpGWutIn:
  01c09	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c0c	83 c0 01	 add	 eax, 1
  01c0f	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN12@DumpGWutIn:
  01c12	83 7d f8 4c	 cmp	 DWORD PTR _i$[ebp], 76	; 0000004cH
  01c16	0f 8d 6d 07 00
	00		 jge	 $LN11@DumpGWutIn

; 396  : 	{
; 397  : 		fprintf(fout,"%d,",i);

  01c1c	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  01c1f	50		 push	 eax
  01c20	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01c25	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01c28	51		 push	 ecx
  01c29	e8 00 00 00 00	 call	 _fprintf
  01c2e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 398  : 		fprintf(fout,"%s,",weapon_database[i].full_name);

  01c31	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c38	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax]
  01c3e	51		 push	 ecx
  01c3f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  01c44	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01c47	52		 push	 edx
  01c48	e8 00 00 00 00	 call	 _fprintf
  01c4d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 399  : //    fprintf(fout,"%d,",i);
; 400  : //    fprintf(fout,"%s,",weapon_database[i].hud_name);
; 401  : //    fprintf(fout,"%s,",weapon_database[i].mfd_name);
; 402  : //    fprintf(fout,"%s,",weapon_database[i].weapon_loading_list_name);
; 403  : //    fprintf(fout,"%s,",weapon_database[i].weapon_loading_name_text);
; 404  : //    fprintf(fout,"%d,",weapon_database[i].default_3d_shape);
; 405  : 		fprintf(fout,"%d,",weapon_database[i].guidance_type);

  01c50	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c57	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+24]
  01c5d	51		 push	 ecx
  01c5e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01c63	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01c66	52		 push	 edx
  01c67	e8 00 00 00 00	 call	 _fprintf
  01c6c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 406  : 		fprintf(fout,"%d,",weapon_database[i].aiming_type);

  01c6f	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c76	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+28]
  01c7c	51		 push	 ecx
  01c7d	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01c82	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01c85	52		 push	 edx
  01c86	e8 00 00 00 00	 call	 _fprintf
  01c8b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 407  : 		fprintf(fout,"%d,",weapon_database[i].decoy_type);

  01c8e	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01c95	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+32]
  01c9b	51		 push	 ecx
  01c9c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01ca1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01ca4	52		 push	 edx
  01ca5	e8 00 00 00 00	 call	 _fprintf
  01caa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 408  : 		fprintf(fout,"%d,",weapon_database[i].warhead_type);

  01cad	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01cb4	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+36]
  01cba	51		 push	 ecx
  01cbb	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01cc0	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01cc3	52		 push	 edx
  01cc4	e8 00 00 00 00	 call	 _fprintf
  01cc9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 409  : 		fprintf(fout,"%d,",weapon_database[i].threat_type);

  01ccc	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01cd3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+40]
  01cd9	51		 push	 ecx
  01cda	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01cdf	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01ce2	52		 push	 edx
  01ce3	e8 00 00 00 00	 call	 _fprintf
  01ce8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 410  : //    fprintf(fout,"%d,",weapon_database[i].launch_sound_effect_sub_type);
; 411  : //    fprintf(fout,"%d,",weapon_database[i].interior_launch_sound_effect);
; 412  : //    fprintf(fout,"%d,",weapon_database[i].exterior_launch_sound_effect);
; 413  : //    fprintf(fout,"%d,",weapon_database[i].continuous_sound_effect);
; 414  : //    fprintf(fout,"%d,",weapon_database[i].weapon_selected_cpg_speech);
; 415  : //    fprintf(fout,"%d,",weapon_database[i].weapon_low_cpg_speech);
; 416  : //    fprintf(fout,"%d,",weapon_database[i].weapon_out_cpg_speech);
; 417  : //    fprintf(fout,"%d,",weapon_database[i].weapon_launched_cpg_speech);
; 418  : //    fprintf(fout,"%d,",weapon_database[i].weapon_launched_wingman_speech);
; 419  : 		fprintf(fout,"%d,",weapon_database[i].report_ammo_low_count);

  01ceb	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01cf2	8b 88 50 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+80]
  01cf8	51		 push	 ecx
  01cf9	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01cfe	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d01	52		 push	 edx
  01d02	e8 00 00 00 00	 call	 _fprintf
  01d07	83 c4 0c	 add	 esp, 12			; 0000000cH

; 420  : 		fprintf(fout,"%d,",weapon_database[i].gun_shake);

  01d0a	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d11	8b 88 54 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+84]
  01d17	51		 push	 ecx
  01d18	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01d1d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d20	52		 push	 edx
  01d21	e8 00 00 00 00	 call	 _fprintf
  01d26	83 c4 0c	 add	 esp, 12			; 0000000cH

; 421  : 		fprintf(fout,"%d,",weapon_database[i].soft_damage_capability);

  01d29	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d30	8b 88 58 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+88]
  01d36	51		 push	 ecx
  01d37	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01d3c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d3f	52		 push	 edx
  01d40	e8 00 00 00 00	 call	 _fprintf
  01d45	83 c4 0c	 add	 esp, 12			; 0000000cH

; 422  : 		fprintf(fout,"%d,",weapon_database[i].hard_damage_capability);

  01d48	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d4f	8b 88 5c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+92]
  01d55	51		 push	 ecx
  01d56	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01d5b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d5e	52		 push	 edx
  01d5f	e8 00 00 00 00	 call	 _fprintf
  01d64	83 c4 0c	 add	 esp, 12			; 0000000cH

; 423  : 		fprintf(fout,"%d,",weapon_database[i].smoke_trail_type);

  01d67	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d6e	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+96]
  01d74	51		 push	 ecx
  01d75	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01d7a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d7d	52		 push	 edx
  01d7e	e8 00 00 00 00	 call	 _fprintf
  01d83	83 c4 0c	 add	 esp, 12			; 0000000cH

; 424  : 		fprintf(fout,"%d,",weapon_database[i].acquire_parent_forward_velocity);

  01d86	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01d8d	8b 88 64 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+100]
  01d93	51		 push	 ecx
  01d94	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01d99	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01d9c	52		 push	 edx
  01d9d	e8 00 00 00 00	 call	 _fprintf
  01da2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 425  : 		fprintf(fout,"%d,",weapon_database[i].ignore_gravity);

  01da5	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01dac	8b 88 68 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+104]
  01db2	51		 push	 ecx
  01db3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01db8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01dbb	52		 push	 edx
  01dbc	e8 00 00 00 00	 call	 _fprintf
  01dc1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 426  : 		fprintf(fout,"%d,",weapon_database[i].survive_ground_impact);

  01dc4	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01dcb	8b 88 6c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+108]
  01dd1	51		 push	 ecx
  01dd2	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01dd7	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01dda	52		 push	 edx
  01ddb	e8 00 00 00 00	 call	 _fprintf
  01de0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 427  : 		fprintf(fout,"%d,",weapon_database[i].in_flight_collision_check);

  01de3	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01dea	8b 88 70 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+112]
  01df0	51		 push	 ecx
  01df1	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01df6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01df9	52		 push	 edx
  01dfa	e8 00 00 00 00	 call	 _fprintf
  01dff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 428  : 		fprintf(fout,"%d,",weapon_database[i].viewable_weapon);

  01e02	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e09	8b 88 74 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+116]
  01e0f	51		 push	 ecx
  01e10	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01e15	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01e18	52		 push	 edx
  01e19	e8 00 00 00 00	 call	 _fprintf
  01e1e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 429  : 		fprintf(fout,"%d,",weapon_database[i].boresight_weapon);// meaningful   for featured helicopters only

  01e21	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e28	8b 88 78 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+120]
  01e2e	51		 push	 ecx
  01e2f	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01e34	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01e37	52		 push	 edx
  01e38	e8 00 00 00 00	 call	 _fprintf
  01e3d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 430  : 		fprintf(fout,"%d,",weapon_database[i].hellfire_flight_profile);// meaningful for Hellfire missiles only

  01e40	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e47	8b 88 7c 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+124]
  01e4d	51		 push	 ecx
  01e4e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01e53	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  01e56	52		 push	 edx
  01e57	e8 00 00 00 00	 call	 _fprintf
  01e5c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 431  : //    fprintf(fout,"%d,",weapon_database[i].weapon_class);
; 432  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 1   ? 1:0);//_air_to_air

  01e5f	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e66	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01e6c	83 e1 01	 and	 ecx, 1
  01e6f	74 09		 je	 SHORT $LN103@DumpGWutIn
  01e71	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1462[ebp], 1
  01e78	eb 07		 jmp	 SHORT $LN104@DumpGWutIn
$LN103@DumpGWutIn:
  01e7a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1462[ebp], 0
$LN104@DumpGWutIn:
  01e81	8b 55 ac	 mov	 edx, DWORD PTR tv1462[ebp]
  01e84	52		 push	 edx
  01e85	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01e8a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01e8d	50		 push	 eax
  01e8e	e8 00 00 00 00	 call	 _fprintf
  01e93	83 c4 0c	 add	 esp, 12			; 0000000cH

; 433  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 2   ? 1:0);//_air_to_surface

  01e96	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01e9d	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01ea3	83 e1 02	 and	 ecx, 2
  01ea6	74 09		 je	 SHORT $LN105@DumpGWutIn
  01ea8	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1471[ebp], 1
  01eaf	eb 07		 jmp	 SHORT $LN106@DumpGWutIn
$LN105@DumpGWutIn:
  01eb1	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1471[ebp], 0
$LN106@DumpGWutIn:
  01eb8	8b 55 ac	 mov	 edx, DWORD PTR tv1471[ebp]
  01ebb	52		 push	 edx
  01ebc	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01ec1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01ec4	50		 push	 eax
  01ec5	e8 00 00 00 00	 call	 _fprintf
  01eca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 434  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 4   ? 1:0);//_surface_to_air

  01ecd	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01ed4	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01eda	83 e1 04	 and	 ecx, 4
  01edd	74 09		 je	 SHORT $LN107@DumpGWutIn
  01edf	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1480[ebp], 1
  01ee6	eb 07		 jmp	 SHORT $LN108@DumpGWutIn
$LN107@DumpGWutIn:
  01ee8	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1480[ebp], 0
$LN108@DumpGWutIn:
  01eef	8b 55 ac	 mov	 edx, DWORD PTR tv1480[ebp]
  01ef2	52		 push	 edx
  01ef3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01ef8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01efb	50		 push	 eax
  01efc	e8 00 00 00 00	 call	 _fprintf
  01f01	83 c4 0c	 add	 esp, 12			; 0000000cH

; 435  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 8   ? 1:0);//_surface_to_surface

  01f04	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01f0b	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01f11	83 e1 08	 and	 ecx, 8
  01f14	74 09		 je	 SHORT $LN109@DumpGWutIn
  01f16	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1489[ebp], 1
  01f1d	eb 07		 jmp	 SHORT $LN110@DumpGWutIn
$LN109@DumpGWutIn:
  01f1f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1489[ebp], 0
$LN110@DumpGWutIn:
  01f26	8b 55 ac	 mov	 edx, DWORD PTR tv1489[ebp]
  01f29	52		 push	 edx
  01f2a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01f2f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01f32	50		 push	 eax
  01f33	e8 00 00 00 00	 call	 _fprintf
  01f38	83 c4 0c	 add	 esp, 12			; 0000000cH

; 436  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 16 ?   1:0);//_decoy

  01f3b	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01f42	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01f48	83 e1 10	 and	 ecx, 16			; 00000010H
  01f4b	74 09		 je	 SHORT $LN111@DumpGWutIn
  01f4d	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1498[ebp], 1
  01f54	eb 07		 jmp	 SHORT $LN112@DumpGWutIn
$LN111@DumpGWutIn:
  01f56	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1498[ebp], 0
$LN112@DumpGWutIn:
  01f5d	8b 55 ac	 mov	 edx, DWORD PTR tv1498[ebp]
  01f60	52		 push	 edx
  01f61	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01f66	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01f69	50		 push	 eax
  01f6a	e8 00 00 00 00	 call	 _fprintf
  01f6f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 437  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 32 ?   1:0);//_cargo

  01f72	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01f79	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01f7f	83 e1 20	 and	 ecx, 32			; 00000020H
  01f82	74 09		 je	 SHORT $LN113@DumpGWutIn
  01f84	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1507[ebp], 1
  01f8b	eb 07		 jmp	 SHORT $LN114@DumpGWutIn
$LN113@DumpGWutIn:
  01f8d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1507[ebp], 0
$LN114@DumpGWutIn:
  01f94	8b 55 ac	 mov	 edx, DWORD PTR tv1507[ebp]
  01f97	52		 push	 edx
  01f98	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01f9d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01fa0	50		 push	 eax
  01fa1	e8 00 00 00 00	 call	 _fprintf
  01fa6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 		fprintf(fout,"%d,",weapon_database[i].weapon_class & 64 ?   1:0);//_debris

  01fa9	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01fb0	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+132]
  01fb6	83 e1 40	 and	 ecx, 64			; 00000040H
  01fb9	74 09		 je	 SHORT $LN115@DumpGWutIn
  01fbb	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv1516[ebp], 1
  01fc2	eb 07		 jmp	 SHORT $LN116@DumpGWutIn
$LN115@DumpGWutIn:
  01fc4	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv1516[ebp], 0
$LN116@DumpGWutIn:
  01fcb	8b 55 ac	 mov	 edx, DWORD PTR tv1516[ebp]
  01fce	52		 push	 edx
  01fcf	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  01fd4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  01fd7	50		 push	 eax
  01fd8	e8 00 00 00 00	 call	 _fprintf
  01fdd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 439  : 		fprintf(fout,"%g,",weapon_database[i].weight);// kilogrammes

  01fe0	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  01fe7	f3 0f 5a 80 88
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+136]
  01fef	83 ec 08	 sub	 esp, 8
  01ff2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01ff7	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  01ffc	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  01fff	51		 push	 ecx
  02000	e8 00 00 00 00	 call	 _fprintf
  02005	83 c4 10	 add	 esp, 16			; 00000010H

; 440  : 		fprintf(fout,"%g,",weapon_database[i].min_range);// metres

  02008	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0200f	f3 0f 5a 80 8c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140]
  02017	83 ec 08	 sub	 esp, 8
  0201a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0201f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02024	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02027	51		 push	 ecx
  02028	e8 00 00 00 00	 call	 _fprintf
  0202d	83 c4 10	 add	 esp, 16			; 00000010H

; 441  : 		fprintf(fout,"%g,",weapon_database[i].max_range);// metres

  02030	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02037	f3 0f 5a 80 90
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]
  0203f	83 ec 08	 sub	 esp, 8
  02042	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02047	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0204c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0204f	51		 push	 ecx
  02050	e8 00 00 00 00	 call	 _fprintf
  02055	83 c4 10	 add	 esp, 16			; 00000010H

; 442  : 		fprintf(fout,"%g,",weapon_database[i].effective_range);// metres

  02058	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0205f	f3 0f 5a 80 94
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+148]
  02067	83 ec 08	 sub	 esp, 8
  0206a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0206f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02074	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02077	51		 push	 ecx
  02078	e8 00 00 00 00	 call	 _fprintf
  0207d	83 c4 10	 add	 esp, 16			; 00000010H

; 443  : 		fprintf(fout,"%g,",weapon_database[i].min_range_loal);// metres

  02080	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02087	f3 0f 5a 80 98
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+152]
  0208f	83 ec 08	 sub	 esp, 8
  02092	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02097	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0209c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0209f	51		 push	 ecx
  020a0	e8 00 00 00 00	 call	 _fprintf
  020a5	83 c4 10	 add	 esp, 16			; 00000010H

; 444  : 		fprintf(fout,"%g,",weapon_database[i].max_range_loal);// metres

  020a8	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  020af	f3 0f 5a 80 9c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+156]
  020b7	83 ec 08	 sub	 esp, 8
  020ba	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  020bf	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  020c4	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  020c7	51		 push	 ecx
  020c8	e8 00 00 00 00	 call	 _fprintf
  020cd	83 c4 10	 add	 esp, 16			; 00000010H

; 445  : 		fprintf(fout,"%g,",weapon_database[i].max_range_error_ratio);// max range error/max range

  020d0	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  020d7	f3 0f 5a 80 a0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+160]
  020df	83 ec 08	 sub	 esp, 8
  020e2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  020e7	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  020ec	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  020ef	51		 push	 ecx
  020f0	e8 00 00 00 00	 call	 _fprintf
  020f5	83 c4 10	 add	 esp, 16			; 00000010H

; 446  : 		fprintf(fout,"%g,",weapon_database[i].muzzle_velocity);// meters/second

  020f8	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  020ff	f3 0f 5a 80 a4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+164]
  02107	83 ec 08	 sub	 esp, 8
  0210a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0210f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02114	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02117	51		 push	 ecx
  02118	e8 00 00 00 00	 call	 _fprintf
  0211d	83 c4 10	 add	 esp, 16			; 00000010H

; 447  : 		fprintf(fout,"%g,",weapon_database[i].muzzle_velocity_max_error);// meters/second

  02120	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02127	f3 0f 5a 80 a8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+168]
  0212f	83 ec 08	 sub	 esp, 8
  02132	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02137	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0213c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0213f	51		 push	 ecx
  02140	e8 00 00 00 00	 call	 _fprintf
  02145	83 c4 10	 add	 esp, 16			; 00000010H

; 448  : 		fprintf(fout,"%g,",weapon_database[i].cruise_velocity);// meters/second

  02148	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0214f	f3 0f 5a 80 ac
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+172]
  02157	83 ec 08	 sub	 esp, 8
  0215a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0215f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02164	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02167	51		 push	 ecx
  02168	e8 00 00 00 00	 call	 _fprintf
  0216d	83 c4 10	 add	 esp, 16			; 00000010H

; 449  : 		fprintf(fout,"%g,",weapon_database[i].g_max);// g

  02170	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02177	f3 0f 5a 80 b0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+176]
  0217f	83 ec 08	 sub	 esp, 8
  02182	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02187	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0218c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0218f	51		 push	 ecx
  02190	e8 00 00 00 00	 call	 _fprintf
  02195	83 c4 10	 add	 esp, 16			; 00000010H

; 450  : 		fprintf(fout,"%g,",weapon_database[i].burn_time);// seconds

  02198	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0219f	f3 0f 5a 80 b4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+180]
  021a7	83 ec 08	 sub	 esp, 8
  021aa	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  021af	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  021b4	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  021b7	51		 push	 ecx
  021b8	e8 00 00 00 00	 call	 _fprintf
  021bd	83 c4 10	 add	 esp, 16			; 00000010H

; 451  : 		fprintf(fout,"%g,",weapon_database[i].cruise_time);// seconds

  021c0	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  021c7	f3 0f 5a 80 b8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+184]
  021cf	83 ec 08	 sub	 esp, 8
  021d2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  021d7	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  021dc	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  021df	51		 push	 ecx
  021e0	e8 00 00 00 00	 call	 _fprintf
  021e5	83 c4 10	 add	 esp, 16			; 00000010H

; 452  : 		fprintf(fout,"%g,",weapon_database[i].cruise_time_max_error);// seconds

  021e8	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  021ef	f3 0f 5a 80 bc
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+188]
  021f7	83 ec 08	 sub	 esp, 8
  021fa	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  021ff	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02204	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02207	51		 push	 ecx
  02208	e8 00 00 00 00	 call	 _fprintf
  0220d	83 c4 10	 add	 esp, 16			; 00000010H

; 453  : 		fprintf(fout,"%g,",weapon_database[i].inhibit_time);// seconds

  02210	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02217	f3 0f 5a 80 c0
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+192]
  0221f	83 ec 08	 sub	 esp, 8
  02222	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02227	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0222c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0222f	51		 push	 ecx
  02230	e8 00 00 00 00	 call	 _fprintf
  02235	83 c4 10	 add	 esp, 16			; 00000010H

; 454  : 		fprintf(fout,"%g,",weapon_database[i].burst_duration);// seconds

  02238	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0223f	f3 0f 5a 80 c4
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+196]
  02247	83 ec 08	 sub	 esp, 8
  0224a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0224f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02254	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02257	51		 push	 ecx
  02258	e8 00 00 00 00	 call	 _fprintf
  0225d	83 c4 10	 add	 esp, 16			; 00000010H

; 455  : 		fprintf(fout,"%g,",weapon_database[i].rate_of_fire);// rounds/minute

  02260	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02267	f3 0f 5a 80 c8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+200]
  0226f	83 ec 08	 sub	 esp, 8
  02272	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02277	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0227c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0227f	51		 push	 ecx
  02280	e8 00 00 00 00	 call	 _fprintf
  02285	83 c4 10	 add	 esp, 16			; 00000010H

; 456  : 		fprintf(fout,"%g,",weapon_database[i].reload_time);// seconds

  02288	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0228f	f3 0f 5a 80 cc
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+204]
  02297	83 ec 08	 sub	 esp, 8
  0229a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0229f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  022a4	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  022a7	51		 push	 ecx
  022a8	e8 00 00 00 00	 call	 _fprintf
  022ad	83 c4 10	 add	 esp, 16			; 00000010H

; 457  : 		fprintf(fout,"%g,",deg(weapon_database[i].max_launch_angle_error));

  022b0	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  022b7	f3 0f 10 80 d0
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208]
  022bf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  022c7	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  022cb	83 ec 08	 sub	 esp, 8
  022ce	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  022d3	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  022d8	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  022db	51		 push	 ecx
  022dc	e8 00 00 00 00	 call	 _fprintf
  022e1	83 c4 10	 add	 esp, 16			; 00000010H

; 458  : 		fprintf(fout,"%g,",deg(acos(weapon_database[i].max_seeker_limit)));

  022e4	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  022eb	51		 push	 ecx
  022ec	f3 0f 10 80 d4
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+212]
  022f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  022f9	e8 00 00 00 00	 call	 ?acos@@YGMM@Z		; acos
  022fe	d9 5d ac	 fstp	 DWORD PTR tv4351[ebp]
  02301	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv4351[ebp]
  02306	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0230e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  02312	83 ec 08	 sub	 esp, 8
  02315	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0231a	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0231f	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02322	51		 push	 ecx
  02323	e8 00 00 00 00	 call	 _fprintf
  02328	83 c4 10	 add	 esp, 16			; 00000010H

; 459  : 		fprintf(fout,"%g,",weapon_database[i].drag_factor);

  0232b	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  02332	f3 0f 5a 80 d8
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+216]
  0233a	83 ec 08	 sub	 esp, 8
  0233d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02342	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02347	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0234a	51		 push	 ecx
  0234b	e8 00 00 00 00	 call	 _fprintf
  02350	83 c4 10	 add	 esp, 16			; 00000010H

; 460  : 		fprintf(fout,"%d",weapon_database[i].spiral_flightpath);

  02353	69 45 f8 e0 00
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 224
  0235a	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+128]
  02360	51		 push	 ecx
  02361	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  02366	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02369	52		 push	 edx
  0236a	e8 00 00 00 00	 call	 _fprintf
  0236f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 461  : 		fputs("\n", fout);

  02372	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02375	50		 push	 eax
  02376	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  0237b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fputs
  02381	83 c4 08	 add	 esp, 8

; 462  : 	}

  02384	e9 80 f8 ff ff	 jmp	 $LN10@DumpGWutIn
$LN11@DumpGWutIn:

; 463  : 
; 464  : 	//aphavoc\source\entity\special\keysite\ks_dbase.h
; 465  : 	fprintf(fout,"[KEYSITES]\n");

  02389	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NAMNMOIC@?$FLKEYSITES?$FN?6@
  0238e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02391	50		 push	 eax
  02392	e8 00 00 00 00	 call	 _fprintf
  02397	83 c4 08	 add	 esp, 8

; 466  : 	if (WRITE_HEADER) {

  0239a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  023a1	0f 84 26 02 00
	00		 je	 $LN51@DumpGWutIn

; 467  : 	fprintf(fout,"%s,", "full_name");

  023a7	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  023ac	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  023b1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  023b4	50		 push	 eax
  023b5	e8 00 00 00 00	 call	 _fprintf
  023ba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 468  : // fprintf(fout,"%s,", "default_supply_usage");
; 469  : // fprintf(fout,"%s,", "air_to_ground_ammo_supply_level"); // is not used in code according to comments
; 470  : // fprintf(fout,"%s,", "air_to_air_ammo_supply_level");
; 471  : 	fprintf(fout,"%s,", "ammo_supply_level");

  023bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@COIJDJHI@ammo_supply_level@
  023c2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  023c7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  023ca	50		 push	 eax
  023cb	e8 00 00 00 00	 call	 _fprintf
  023d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 472  : 	fprintf(fout,"%s,", "fuel_supply_level");

  023d3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FMIIBAMJ@fuel_supply_level@
  023d8	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  023dd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  023e0	50		 push	 eax
  023e1	e8 00 00 00 00	 call	 _fprintf
  023e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 473  : 	fprintf(fout,"%s,", "importance");

  023e9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KEGEKCCP@importance@
  023ee	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  023f3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  023f6	50		 push	 eax
  023f7	e8 00 00 00 00	 call	 _fprintf
  023fc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 474  : 	fprintf(fout,"%s,", "minimum_efficiency");

  023ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NBOKJPKH@minimum_efficiency@
  02404	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02409	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0240c	50		 push	 eax
  0240d	e8 00 00 00 00	 call	 _fprintf
  02412	83 c4 0c	 add	 esp, 12			; 0000000cH

; 475  : 	fprintf(fout,"%s,", "importance_radius");

  02415	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ILHHLDFC@importance_radius@
  0241a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0241f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02422	50		 push	 eax
  02423	e8 00 00 00 00	 call	 _fprintf
  02428	83 c4 0c	 add	 esp, 12			; 0000000cH

; 476  : 	fprintf(fout,"%s,", "air_coverage_radius");

  0242b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HMOICOIG@air_coverage_radius@
  02430	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02435	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02438	50		 push	 eax
  02439	e8 00 00 00 00	 call	 _fprintf
  0243e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 	fprintf(fout,"%s,", "recon_distance");

  02441	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IDGCIJHM@recon_distance@
  02446	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0244b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0244e	50		 push	 eax
  0244f	e8 00 00 00 00	 call	 _fprintf
  02454	83 c4 0c	 add	 esp, 12			; 0000000cH

; 478  : 	fprintf(fout,"%s,", "sector_side_max_value");

  02457	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@LKBBPNNG@sector_side_max_value@
  0245c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02461	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02464	50		 push	 eax
  02465	e8 00 00 00 00	 call	 _fprintf
  0246a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 479  : // fprintf(fout,"%s,", "map_layer_type");
; 480  : // fprintf(fout,"%s,", "map_icon");
; 481  : 	fprintf(fout,"%s,", "align_with_terrain");

  0246d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DCEABLMI@align_with_terrain@
  02472	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02477	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0247a	50		 push	 eax
  0247b	e8 00 00 00 00	 call	 _fprintf
  02480	83 c4 0c	 add	 esp, 12			; 0000000cH

; 482  : // fprintf(fout,"%s,", "unique_name");
; 483  : 	fprintf(fout,"%s,", "hidden_by_fog_of_war");

  02483	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IMNGHFEI@hidden_by_fog_of_war@
  02488	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0248d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02490	50		 push	 eax
  02491	e8 00 00 00 00	 call	 _fprintf
  02496	83 c4 0c	 add	 esp, 12			; 0000000cH

; 484  : 	fprintf(fout,"%s,", "air_force_capacity");

  02499	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EFMJJBFC@air_force_capacity@
  0249e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  024a3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  024a6	50		 push	 eax
  024a7	e8 00 00 00 00	 call	 _fprintf
  024ac	83 c4 0c	 add	 esp, 12			; 0000000cH

; 485  : 	fprintf(fout,"%s,", "report_ammo_level");

  024af	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GLNILKF@report_ammo_level@
  024b4	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  024b9	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  024bc	50		 push	 eax
  024bd	e8 00 00 00 00	 call	 _fprintf
  024c2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 486  : 	fprintf(fout,"%s,", "report_fuel_level");

  024c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@COKIPKMB@report_fuel_level@
  024ca	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  024cf	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  024d2	50		 push	 eax
  024d3	e8 00 00 00 00	 call	 _fprintf
  024d8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 487  : 	fprintf(fout,"%s,", "assign_task_count");

  024db	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BHEOLLGL@assign_task_count@
  024e0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  024e5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  024e8	50		 push	 eax
  024e9	e8 00 00 00 00	 call	 _fprintf
  024ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 488  : 	fprintf(fout,"%s,", "reserve_task_count");

  024f1	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JONLMBPK@reserve_task_count@
  024f6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  024fb	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  024fe	50		 push	 eax
  024ff	e8 00 00 00 00	 call	 _fprintf
  02504	83 c4 0c	 add	 esp, 12			; 0000000cH

; 489  : 	fprintf(fout,"%s,", "requires_cap");

  02507	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KGJMNGM@requires_cap@
  0250c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02511	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02514	50		 push	 eax
  02515	e8 00 00 00 00	 call	 _fprintf
  0251a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 490  : 	fprintf(fout,"%s,", "requires_barcap");

  0251d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JIPJJKGJ@requires_barcap@
  02522	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02527	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0252a	50		 push	 eax
  0252b	e8 00 00 00 00	 call	 _fprintf
  02530	83 c4 0c	 add	 esp, 12			; 0000000cH

; 491  : 	fprintf(fout,"%s,", "repairable");

  02533	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NNOEGAMK@repairable@
  02538	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0253d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02540	50		 push	 eax
  02541	e8 00 00 00 00	 call	 _fprintf
  02546	83 c4 0c	 add	 esp, 12			; 0000000cH

; 492  : 	fprintf(fout,"%s,", "oca_target");

  02549	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FBLJAGPI@oca_target@
  0254e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02553	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02556	50		 push	 eax
  02557	e8 00 00 00 00	 call	 _fprintf
  0255c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 493  : 	fprintf(fout,"%s,", "recon_target");

  0255f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JAIMJONJ@recon_target@
  02564	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02569	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0256c	50		 push	 eax
  0256d	e8 00 00 00 00	 call	 _fprintf
  02572	83 c4 0c	 add	 esp, 12			; 0000000cH

; 494  : 	fprintf(fout,"%s,", "ground_strike_target");

  02575	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PGGFEFGM@ground_strike_target@
  0257a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0257f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02582	50		 push	 eax
  02583	e8 00 00 00 00	 call	 _fprintf
  02588	83 c4 0c	 add	 esp, 12			; 0000000cH

; 495  : 	fprintf(fout,"%s,", "ship_strike_target");

  0258b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FOKMDMIB@ship_strike_target@
  02590	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02595	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02598	50		 push	 eax
  02599	e8 00 00 00 00	 call	 _fprintf
  0259e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 496  : 	fprintf(fout,"%s,", "troop_insertion_target");

  025a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@CJMKLCMJ@troop_insertion_target@
  025a6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  025ab	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  025ae	50		 push	 eax
  025af	e8 00 00 00 00	 call	 _fprintf
  025b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 497  : 	fprintf(fout,"%s\n","campaign_objective");

  025b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JNFEJGLN@campaign_objective@
  025bc	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  025c1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  025c4	50		 push	 eax
  025c5	e8 00 00 00 00	 call	 _fprintf
  025ca	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN51@DumpGWutIn:

; 498  : 	}
; 499  : 	for (i = 0; i <   NUM_ENTITY_SUB_TYPE_KEYSITES; i++)

  025cd	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  025d4	eb 09		 jmp	 SHORT $LN15@DumpGWutIn
$LN13@DumpGWutIn:
  025d6	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  025d9	83 c0 01	 add	 eax, 1
  025dc	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN15@DumpGWutIn:
  025df	83 7d f8 09	 cmp	 DWORD PTR _i$[ebp], 9
  025e3	0f 8d 71 03 00
	00		 jge	 $LN14@DumpGWutIn

; 500  : 	{
; 501  : 		fprintf(fout,"%d,",i);

  025e9	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  025ec	50		 push	 eax
  025ed	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  025f2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  025f5	51		 push	 ecx
  025f6	e8 00 00 00 00	 call	 _fprintf
  025fb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 502  : 		fprintf(fout,"%s,",   keysite_database[i].full_name);

  025fe	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02602	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax]
  02608	51		 push	 ecx
  02609	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0260e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02611	52		 push	 edx
  02612	e8 00 00 00 00	 call	 _fprintf
  02617	83 c4 0c	 add	 esp, 12			; 0000000cH

; 503  : //    fprintf(fout,"%d,",   keysite_database[i].default_supply_usage);
; 504  : //    fprintf(fout,"%g,",   keysite_database[i].default_supply_usage.air_to_ground_ammo_supply_level);
; 505  : //    fprintf(fout,"%g,",   keysite_database[i].default_supply_usage.air_to_air_ammo_supply_level);
; 506  : 		fprintf(fout,"%g,",   keysite_database[i].default_supply_usage.ammo_supply_level);

  0261a	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0261e	f3 0f 5a 80 10
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+16]
  02626	83 ec 08	 sub	 esp, 8
  02629	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0262e	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02633	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02636	51		 push	 ecx
  02637	e8 00 00 00 00	 call	 _fprintf
  0263c	83 c4 10	 add	 esp, 16			; 00000010H

; 507  : 		fprintf(fout,"%g,",   keysite_database[i].default_supply_usage.fuel_supply_level);

  0263f	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02643	f3 0f 5a 80 14
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+20]
  0264b	83 ec 08	 sub	 esp, 8
  0264e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02653	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02658	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0265b	51		 push	 ecx
  0265c	e8 00 00 00 00	 call	 _fprintf
  02661	83 c4 10	 add	 esp, 16			; 00000010H

; 508  : 		fprintf(fout,"%g,",   keysite_database[i].importance);

  02664	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02668	f3 0f 5a 80 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+24]
  02670	83 ec 08	 sub	 esp, 8
  02673	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02678	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0267d	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02680	51		 push	 ecx
  02681	e8 00 00 00 00	 call	 _fprintf
  02686	83 c4 10	 add	 esp, 16			; 00000010H

; 509  : 		fprintf(fout,"%g,",   keysite_database[i].minimum_efficiency);

  02689	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0268d	f3 0f 5a 80 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+28]
  02695	83 ec 08	 sub	 esp, 8
  02698	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0269d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  026a2	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  026a5	51		 push	 ecx
  026a6	e8 00 00 00 00	 call	 _fprintf
  026ab	83 c4 10	 add	 esp, 16			; 00000010H

; 510  : 		fprintf(fout,"%g,",   keysite_database[i].importance_radius);

  026ae	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  026b2	f3 0f 5a 80 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+32]
  026ba	83 ec 08	 sub	 esp, 8
  026bd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  026c2	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  026c7	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  026ca	51		 push	 ecx
  026cb	e8 00 00 00 00	 call	 _fprintf
  026d0	83 c4 10	 add	 esp, 16			; 00000010H

; 511  : 		fprintf(fout,"%g,",   keysite_database[i].air_coverage_radius);

  026d3	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  026d7	f3 0f 5a 80 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+36]
  026df	83 ec 08	 sub	 esp, 8
  026e2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  026e7	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  026ec	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  026ef	51		 push	 ecx
  026f0	e8 00 00 00 00	 call	 _fprintf
  026f5	83 c4 10	 add	 esp, 16			; 00000010H

; 512  : 		fprintf(fout,"%g,",   keysite_database[i].recon_distance);

  026f8	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  026fc	f3 0f 5a 80 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+40]
  02704	83 ec 08	 sub	 esp, 8
  02707	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0270c	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02711	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02714	51		 push	 ecx
  02715	e8 00 00 00 00	 call	 _fprintf
  0271a	83 c4 10	 add	 esp, 16			; 00000010H

; 513  : 		fprintf(fout,"%g,",   keysite_database[i].sector_side_max_value);

  0271d	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02721	f3 0f 5a 80 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+44]
  02729	83 ec 08	 sub	 esp, 8
  0272c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02731	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02736	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02739	51		 push	 ecx
  0273a	e8 00 00 00 00	 call	 _fprintf
  0273f	83 c4 10	 add	 esp, 16			; 00000010H

; 514  : //    fprintf(fout,"%d,",   keysite_database[i].map_layer_type);
; 515  : //    fprintf(fout,"%d,",   keysite_database[i].map_icon);
; 516  : 		fprintf(fout,"%d,",   keysite_database[i].align_with_terrain);

  02742	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02746	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  0274c	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0274f	83 e1 01	 and	 ecx, 1
  02752	51		 push	 ecx
  02753	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02758	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0275b	52		 push	 edx
  0275c	e8 00 00 00 00	 call	 _fprintf
  02761	83 c4 0c	 add	 esp, 12			; 0000000cH

; 517  : //    fprintf(fout,"%d,",   keysite_database[i].unique_name);
; 518  : 		fprintf(fout,"%d,",   keysite_database[i].hidden_by_fog_of_war);

  02764	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02768	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  0276e	c1 e9 0e	 shr	 ecx, 14			; 0000000eH
  02771	83 e1 01	 and	 ecx, 1
  02774	51		 push	 ecx
  02775	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0277a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0277d	52		 push	 edx
  0277e	e8 00 00 00 00	 call	 _fprintf
  02783	83 c4 0c	 add	 esp, 12			; 0000000cH

; 519  : 		fprintf(fout,"%d,",   keysite_database[i].air_force_capacity);

  02786	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0278a	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+48]
  02790	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  02793	83 e1 03	 and	 ecx, 3
  02796	51		 push	 ecx
  02797	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0279c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0279f	52		 push	 edx
  027a0	e8 00 00 00 00	 call	 _fprintf
  027a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 520  : 		fprintf(fout,"%d,",   keysite_database[i].report_ammo_level);

  027a8	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027ac	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+52]
  027b2	51		 push	 ecx
  027b3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  027b8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  027bb	52		 push	 edx
  027bc	e8 00 00 00 00	 call	 _fprintf
  027c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 521  : 		fprintf(fout,"%d,",   keysite_database[i].report_fuel_level);

  027c4	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027c8	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+60]
  027ce	51		 push	 ecx
  027cf	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  027d4	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  027d7	52		 push	 edx
  027d8	e8 00 00 00 00	 call	 _fprintf
  027dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 522  : 		fprintf(fout,"%d,",   keysite_database[i].assign_task_count);

  027e0	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  027e4	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  027ea	d1 e9		 shr	 ecx, 1
  027ec	83 e1 03	 and	 ecx, 3
  027ef	51		 push	 ecx
  027f0	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  027f5	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  027f8	52		 push	 edx
  027f9	e8 00 00 00 00	 call	 _fprintf
  027fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 523  : 		fprintf(fout,"%d,",   keysite_database[i].reserve_task_count);

  02801	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02805	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0280b	c1 e9 03	 shr	 ecx, 3
  0280e	83 e1 03	 and	 ecx, 3
  02811	51		 push	 ecx
  02812	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02817	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0281a	52		 push	 edx
  0281b	e8 00 00 00 00	 call	 _fprintf
  02820	83 c4 0c	 add	 esp, 12			; 0000000cH

; 524  : 		fprintf(fout,"%d,",   keysite_database[i].requires_cap);

  02823	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02827	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0282d	c1 e9 05	 shr	 ecx, 5
  02830	83 e1 01	 and	 ecx, 1
  02833	51		 push	 ecx
  02834	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02839	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0283c	52		 push	 edx
  0283d	e8 00 00 00 00	 call	 _fprintf
  02842	83 c4 0c	 add	 esp, 12			; 0000000cH

; 525  : 		fprintf(fout,"%d,",   keysite_database[i].requires_barcap);

  02845	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02849	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0284f	c1 e9 06	 shr	 ecx, 6
  02852	83 e1 01	 and	 ecx, 1
  02855	51		 push	 ecx
  02856	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0285b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0285e	52		 push	 edx
  0285f	e8 00 00 00 00	 call	 _fprintf
  02864	83 c4 0c	 add	 esp, 12			; 0000000cH

; 526  : 		fprintf(fout,"%d,",   keysite_database[i].repairable);

  02867	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0286b	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  02871	c1 e9 07	 shr	 ecx, 7
  02874	83 e1 01	 and	 ecx, 1
  02877	51		 push	 ecx
  02878	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0287d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02880	52		 push	 edx
  02881	e8 00 00 00 00	 call	 _fprintf
  02886	83 c4 0c	 add	 esp, 12			; 0000000cH

; 527  : 		fprintf(fout,"%d,",   keysite_database[i].oca_target);

  02889	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  0288d	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  02893	c1 e9 08	 shr	 ecx, 8
  02896	83 e1 01	 and	 ecx, 1
  02899	51		 push	 ecx
  0289a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0289f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  028a2	52		 push	 edx
  028a3	e8 00 00 00 00	 call	 _fprintf
  028a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 528  : 		fprintf(fout,"%d,",   keysite_database[i].recon_target);

  028ab	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  028af	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  028b5	c1 e9 09	 shr	 ecx, 9
  028b8	83 e1 01	 and	 ecx, 1
  028bb	51		 push	 ecx
  028bc	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  028c1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  028c4	52		 push	 edx
  028c5	e8 00 00 00 00	 call	 _fprintf
  028ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 529  : 		fprintf(fout,"%d,",   keysite_database[i].ground_strike_target);

  028cd	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  028d1	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  028d7	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  028da	83 e1 01	 and	 ecx, 1
  028dd	51		 push	 ecx
  028de	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  028e3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  028e6	52		 push	 edx
  028e7	e8 00 00 00 00	 call	 _fprintf
  028ec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 530  : 		fprintf(fout,"%d,",   keysite_database[i].ship_strike_target);

  028ef	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  028f3	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  028f9	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  028fc	83 e1 01	 and	 ecx, 1
  028ff	51		 push	 ecx
  02900	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02905	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02908	52		 push	 edx
  02909	e8 00 00 00 00	 call	 _fprintf
  0290e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 531  : 		fprintf(fout,"%d,",   keysite_database[i].troop_insertion_target);

  02911	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02915	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0291b	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0291e	83 e1 01	 and	 ecx, 1
  02921	51		 push	 ecx
  02922	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02927	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0292a	52		 push	 edx
  0292b	e8 00 00 00 00	 call	 _fprintf
  02930	83 c4 0c	 add	 esp, 12			; 0000000cH

; 532  : 		fprintf(fout,"%d\n",  keysite_database[i].campaign_objective);

  02933	6b 45 f8 44	 imul	 eax, DWORD PTR _i$[ebp], 68
  02937	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?keysite_database@@3PAUKEYSITE_DATA@@A[eax+64]
  0293d	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  02940	83 e1 01	 and	 ecx, 1
  02943	51		 push	 ecx
  02944	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  02949	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0294c	52		 push	 edx
  0294d	e8 00 00 00 00	 call	 _fprintf
  02952	83 c4 0c	 add	 esp, 12			; 0000000cH

; 533  : 	}

  02955	e9 7c fc ff ff	 jmp	 $LN13@DumpGWutIn
$LN14@DumpGWutIn:

; 534  : 
; 535  : //aphavoc\source\entity\special\group\gp_dbase.h
; 536  : 	fprintf(fout,"[GROUPS]\n");

  0295a	68 00 00 00 00	 push	 OFFSET ??_C@_09GBFBNGHJ@?$FLGROUPS?$FN?6@
  0295f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02962	50		 push	 eax
  02963	e8 00 00 00 00	 call	 _fprintf
  02968	83 c4 08	 add	 esp, 8

; 537  : 	if (WRITE_HEADER) {

  0296b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  02972	0f 84 52 02 00
	00		 je	 $LN52@DumpGWutIn

; 538  : 	fprintf(fout,"%s,",  "full_name");

  02978	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  0297d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02982	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02985	50		 push	 eax
  02986	e8 00 00 00 00	 call	 _fprintf
  0298b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 539  : 	fprintf(fout,"%s,",  "group_category");

  0298e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BCLPCKM@group_category@
  02993	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02998	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0299b	50		 push	 eax
  0299c	e8 00 00 00 00	 call	 _fprintf
  029a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 540  : 	fprintf(fout,"%s,",  "registry_list_type");

  029a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FLDLBCPM@registry_list_type@
  029a9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  029ae	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  029b1	50		 push	 eax
  029b2	e8 00 00 00 00	 call	 _fprintf
  029b7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 541  : 	fprintf(fout,"%s,",  "group_list_type");

  029ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GBJNKDPI@group_list_type@
  029bf	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  029c4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  029c7	50		 push	 eax
  029c8	e8 00 00 00 00	 call	 _fprintf
  029cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 542  : 	fprintf(fout,"%s,",  "movement_type");

  029d0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JCHJIBFM@movement_type@
  029d5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  029da	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  029dd	50		 push	 eax
  029de	e8 00 00 00 00	 call	 _fprintf
  029e3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 543  : 	fprintf(fout,"%s,",  "default_landing_type");

  029e6	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OLMMGMAM@default_landing_type@
  029eb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  029f0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  029f3	50		 push	 eax
  029f4	e8 00 00 00 00	 call	 _fprintf
  029f9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 544  : 	fprintf(fout,"%s,",  "default_entity_type");

  029fc	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OBOBIGBK@default_entity_type@
  02a01	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a06	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a09	50		 push	 eax
  02a0a	e8 00 00 00 00	 call	 _fprintf
  02a0f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 545  : 	fprintf(fout,"%s,",  "default_blue_force_sub_type");

  02a12	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KLLIJLIO@default_blue_force_sub_type@
  02a17	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a1c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a1f	50		 push	 eax
  02a20	e8 00 00 00 00	 call	 _fprintf
  02a25	83 c4 0c	 add	 esp, 12			; 0000000cH

; 546  : 	fprintf(fout,"%s,",  "default_red_force_sub_type");

  02a28	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@JDKOPMF@default_red_force_sub_type@
  02a2d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a32	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a35	50		 push	 eax
  02a36	e8 00 00 00 00	 call	 _fprintf
  02a3b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 547  : 	fprintf(fout,"%s,",  "default_group_formation");

  02a3e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COFDFHKL@default_group_formation@
  02a43	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a48	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a4b	50		 push	 eax
  02a4c	e8 00 00 00 00	 call	 _fprintf
  02a51	83 c4 0c	 add	 esp, 12			; 0000000cH

; 548  : 	fprintf(fout,"%s,",  "default_group_division");

  02a54	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GPNCCHHF@default_group_division@
  02a59	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a5e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a61	50		 push	 eax
  02a62	e8 00 00 00 00	 call	 _fprintf
  02a67	83 c4 0c	 add	 esp, 12			; 0000000cH

; 549  : 	fprintf(fout,"%s,",  "maximum_groups_per_division");

  02a6a	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GEDHBNEF@maximum_groups_per_division@
  02a6f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a74	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a77	50		 push	 eax
  02a78	e8 00 00 00 00	 call	 _fprintf
  02a7d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 550  : // fprintf(fout,"%s,",  "platoon_name");
; 551  : // fprintf(fout,"%s,",  "platoon_short_name_type");
; 552  : // fprintf(fout,"%s,",  "map_layer_type");
; 553  : // fprintf(fout,"%s,",  "map_icon");
; 554  : 	fprintf(fout,"%s,",  "rearming_time");

  02a80	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JDKIKICA@rearming_time@
  02a85	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02a8a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02a8d	50		 push	 eax
  02a8e	e8 00 00 00 00	 call	 _fprintf
  02a93	83 c4 0c	 add	 esp, 12			; 0000000cH

; 555  : 	fprintf(fout,"%s,",  "frontline_flag");

  02a96	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DLPFKFCE@frontline_flag@
  02a9b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02aa0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02aa3	50		 push	 eax
  02aa4	e8 00 00 00 00	 call	 _fprintf
  02aa9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 556  : 	fprintf(fout,"%s,",  "local_only_group");

  02aac	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KHAFLDIA@local_only_group@
  02ab1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02ab6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02ab9	50		 push	 eax
  02aba	e8 00 00 00 00	 call	 _fprintf
  02abf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 557  : 	fprintf(fout,"%s,",  "default_engage_enemy");

  02ac2	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OKHKAOBE@default_engage_enemy@
  02ac7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02acc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02acf	50		 push	 eax
  02ad0	e8 00 00 00 00	 call	 _fprintf
  02ad5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 558  : 	fprintf(fout,"%s,",  "amalgamate");

  02ad8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MJJEHKFI@amalgamate@
  02add	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02ae2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02ae5	50		 push	 eax
  02ae6	e8 00 00 00 00	 call	 _fprintf
  02aeb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 559  : 	fprintf(fout,"%s,",  "platoon_id_type");

  02aee	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EAMCIPPF@platoon_id_type@
  02af3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02af8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02afb	50		 push	 eax
  02afc	e8 00 00 00 00	 call	 _fprintf
  02b01	83 c4 0c	 add	 esp, 12			; 0000000cH

; 560  : 	fprintf(fout,"%s,",  "maximum_member_count");

  02b04	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JFFLMA@maximum_member_count@
  02b09	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b0e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b11	50		 push	 eax
  02b12	e8 00 00 00 00	 call	 _fprintf
  02b17	83 c4 0c	 add	 esp, 12			; 0000000cH

; 561  : 	fprintf(fout,"%s,",  "minimum_idle_count");

  02b1a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KDACILON@minimum_idle_count@
  02b1f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b24	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b27	50		 push	 eax
  02b28	e8 00 00 00 00	 call	 _fprintf
  02b2d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 562  : 	fprintf(fout,"%s,",  "resupply_source");

  02b30	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EMGGLJKG@resupply_source@
  02b35	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b3a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b3d	50		 push	 eax
  02b3e	e8 00 00 00 00	 call	 _fprintf
  02b43	83 c4 0c	 add	 esp, 12			; 0000000cH

; 563  : 	fprintf(fout,"%s,",  "ai_air_attack_strength");

  02b46	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCHAANCE@ai_air_attack_strength@
  02b4b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b50	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b53	50		 push	 eax
  02b54	e8 00 00 00 00	 call	 _fprintf
  02b59	83 c4 0c	 add	 esp, 12			; 0000000cH

; 564  : 	fprintf(fout,"%s,",  "ai_ground_attack_strength");

  02b5c	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@MHOPBBGP@ai_ground_attack_strength@
  02b61	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b66	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b69	50		 push	 eax
  02b6a	e8 00 00 00 00	 call	 _fprintf
  02b6f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 565  : 	fprintf(fout,"%s,",  "ai_movement_speed");

  02b72	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PILNPBAP@ai_movement_speed@
  02b77	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b7c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b7f	50		 push	 eax
  02b80	e8 00 00 00 00	 call	 _fprintf
  02b85	83 c4 0c	 add	 esp, 12			; 0000000cH

; 566  : 	fprintf(fout,"%s,",  "ai_movement_stealth");

  02b88	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HHIFKNOH@ai_movement_stealth@
  02b8d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02b92	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02b95	50		 push	 eax
  02b96	e8 00 00 00 00	 call	 _fprintf
  02b9b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 567  : 	fprintf(fout,"%s,",  "ai_cargo_space");

  02b9e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KCADHAOC@ai_cargo_space@
  02ba3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02ba8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02bab	50		 push	 eax
  02bac	e8 00 00 00 00	 call	 _fprintf
  02bb1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 568  : 	fprintf(fout,"%s\n", "ai_troop_space");

  02bb4	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CBIEFNJM@ai_troop_space@
  02bb9	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  02bbe	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02bc1	50		 push	 eax
  02bc2	e8 00 00 00 00	 call	 _fprintf
  02bc7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@DumpGWutIn:

; 569  : 	}
; 570  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_GROUPS; i++)

  02bca	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  02bd1	eb 09		 jmp	 SHORT $LN18@DumpGWutIn
$LN16@DumpGWutIn:
  02bd3	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02bd6	83 c0 01	 add	 eax, 1
  02bd9	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN18@DumpGWutIn:
  02bdc	83 7d f8 1a	 cmp	 DWORD PTR _i$[ebp], 26	; 0000001aH
  02be0	0f 8d d7 03 00
	00		 jge	 $LN17@DumpGWutIn

; 571  : 	{
; 572  : 		fprintf(fout,"%d,",i);

  02be6	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  02be9	50		 push	 eax
  02bea	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02bef	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02bf2	51		 push	 ecx
  02bf3	e8 00 00 00 00	 call	 _fprintf
  02bf8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 573  : 		if (strstr(group_database[i].full_name,"Infantry") != 0)

  02bfb	68 00 00 00 00	 push	 OFFSET ??_C@_08OOLPMJMC@Infantry@
  02c00	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c04	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax]
  02c0a	51		 push	 ecx
  02c0b	e8 00 00 00 00	 call	 _strstr
  02c10	83 c4 08	 add	 esp, 8
  02c13	85 c0		 test	 eax, eax
  02c15	74 77		 je	 SHORT $LN53@DumpGWutIn

; 574  : 		{
; 575  : 			if (i == 19) fprintf(fout,"%s %s,",group_database[i].full_name,"(static)");

  02c17	83 7d f8 13	 cmp	 DWORD PTR _i$[ebp], 19	; 00000013H
  02c1b	75 21		 jne	 SHORT $LN55@DumpGWutIn
  02c1d	68 00 00 00 00	 push	 OFFSET ??_C@_08JNCEGBEK@?$CIstatic?$CJ@
  02c22	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c26	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax]
  02c2c	51		 push	 ecx
  02c2d	68 00 00 00 00	 push	 OFFSET ??_C@_06ELALIEHK@?$CFs?5?$CFs?0@
  02c32	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02c35	52		 push	 edx
  02c36	e8 00 00 00 00	 call	 _fprintf
  02c3b	83 c4 10	 add	 esp, 16			; 00000010H
$LN55@DumpGWutIn:

; 576  : 			if (i == 20) fprintf(fout,"%s %s,",group_database[i].full_name,"(group)");

  02c3e	83 7d f8 14	 cmp	 DWORD PTR _i$[ebp], 20	; 00000014H
  02c42	75 21		 jne	 SHORT $LN56@DumpGWutIn
  02c44	68 00 00 00 00	 push	 OFFSET ??_C@_07OPIBMAFN@?$CIgroup?$CJ@
  02c49	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c4d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax]
  02c53	51		 push	 ecx
  02c54	68 00 00 00 00	 push	 OFFSET ??_C@_06ELALIEHK@?$CFs?5?$CFs?0@
  02c59	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02c5c	52		 push	 edx
  02c5d	e8 00 00 00 00	 call	 _fprintf
  02c62	83 c4 10	 add	 esp, 16			; 00000010H
$LN56@DumpGWutIn:

; 577  : 			if (i == 21) fprintf(fout,"%s %s,",group_database[i].full_name,"(patrol)");

  02c65	83 7d f8 15	 cmp	 DWORD PTR _i$[ebp], 21	; 00000015H
  02c69	75 21		 jne	 SHORT $LN57@DumpGWutIn
  02c6b	68 00 00 00 00	 push	 OFFSET ??_C@_08NECBKLKJ@?$CIpatrol?$CJ@
  02c70	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c74	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax]
  02c7a	51		 push	 ecx
  02c7b	68 00 00 00 00	 push	 OFFSET ??_C@_06ELALIEHK@?$CFs?5?$CFs?0@
  02c80	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02c83	52		 push	 edx
  02c84	e8 00 00 00 00	 call	 _fprintf
  02c89	83 c4 10	 add	 esp, 16			; 00000010H
$LN57@DumpGWutIn:

; 578  : 		}
; 579  : 		else

  02c8c	eb 1c		 jmp	 SHORT $LN54@DumpGWutIn
$LN53@DumpGWutIn:

; 580  : 			fprintf(fout,"%s,",group_database[i].full_name);

  02c8e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02c92	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax]
  02c98	51		 push	 ecx
  02c99	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02c9e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02ca1	52		 push	 edx
  02ca2	e8 00 00 00 00	 call	 _fprintf
  02ca7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN54@DumpGWutIn:

; 581  : 		fprintf(fout,"%d,",group_database[i].group_category);

  02caa	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02cae	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+8]
  02cb4	51		 push	 ecx
  02cb5	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02cba	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02cbd	52		 push	 edx
  02cbe	e8 00 00 00 00	 call	 _fprintf
  02cc3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 582  : 		fprintf(fout,"%d,",group_database[i].registry_list_type);

  02cc6	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02cca	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+12]
  02cd0	51		 push	 ecx
  02cd1	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02cd6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02cd9	52		 push	 edx
  02cda	e8 00 00 00 00	 call	 _fprintf
  02cdf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 583  : 		fprintf(fout,"%d,",group_database[i].group_list_type);

  02ce2	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02ce6	8b 88 10 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+16]
  02cec	51		 push	 ecx
  02ced	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02cf2	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02cf5	52		 push	 edx
  02cf6	e8 00 00 00 00	 call	 _fprintf
  02cfb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 584  : 		fprintf(fout,"%d,",group_database[i].movement_type);

  02cfe	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d02	8b 88 14 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+20]
  02d08	51		 push	 ecx
  02d09	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d0e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d11	52		 push	 edx
  02d12	e8 00 00 00 00	 call	 _fprintf
  02d17	83 c4 0c	 add	 esp, 12			; 0000000cH

; 585  : 		fprintf(fout,"%d,",group_database[i].default_landing_type);

  02d1a	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d1e	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+24]
  02d24	51		 push	 ecx
  02d25	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d2a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d2d	52		 push	 edx
  02d2e	e8 00 00 00 00	 call	 _fprintf
  02d33	83 c4 0c	 add	 esp, 12			; 0000000cH

; 586  : 		fprintf(fout,"%d,",group_database[i].default_entity_type);

  02d36	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d3a	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+28]
  02d40	51		 push	 ecx
  02d41	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d46	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d49	52		 push	 edx
  02d4a	e8 00 00 00 00	 call	 _fprintf
  02d4f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 587  : 		fprintf(fout,"%d,",group_database[i].default_blue_force_sub_type);

  02d52	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d56	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+32]
  02d5c	51		 push	 ecx
  02d5d	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d62	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d65	52		 push	 edx
  02d66	e8 00 00 00 00	 call	 _fprintf
  02d6b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 588  : 		fprintf(fout,"%d,",group_database[i].default_red_force_sub_type);

  02d6e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d72	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+36]
  02d78	51		 push	 ecx
  02d79	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d7e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d81	52		 push	 edx
  02d82	e8 00 00 00 00	 call	 _fprintf
  02d87	83 c4 0c	 add	 esp, 12			; 0000000cH

; 589  : 		fprintf(fout,"%d,",group_database[i].default_group_formation);

  02d8a	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02d8e	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+40]
  02d94	51		 push	 ecx
  02d95	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02d9a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02d9d	52		 push	 edx
  02d9e	e8 00 00 00 00	 call	 _fprintf
  02da3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 590  : 		fprintf(fout,"%d,",group_database[i].default_group_division);

  02da6	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02daa	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+44]
  02db0	51		 push	 ecx
  02db1	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02db6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02db9	52		 push	 edx
  02dba	e8 00 00 00 00	 call	 _fprintf
  02dbf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 591  : 		fprintf(fout,"%d,",group_database[i].maximum_groups_per_division);

  02dc2	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02dc6	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+48]
  02dcc	51		 push	 ecx
  02dcd	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02dd2	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02dd5	52		 push	 edx
  02dd6	e8 00 00 00 00	 call	 _fprintf
  02ddb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 592  : //    fprintf(fout,"%s,",group_database[i].platoon_name);
; 593  : //    fprintf(fout,"%d,",group_database[i].platoon_short_name_type);
; 594  : //    fprintf(fout,"%d,",group_database[i].map_layer_type);
; 595  : //    fprintf(fout,"%d,",group_database[i].map_icon);
; 596  : 		fprintf(fout,"%g,",group_database[i].rearming_time);

  02dde	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02de2	f3 0f 5a 80 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+68]
  02dea	83 ec 08	 sub	 esp, 8
  02ded	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  02df2	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  02df7	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  02dfa	51		 push	 ecx
  02dfb	e8 00 00 00 00	 call	 _fprintf
  02e00	83 c4 10	 add	 esp, 16			; 00000010H

; 597  : 		fprintf(fout,"%d,",group_database[i].frontline_flag);

  02e03	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02e07	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02e0d	83 e1 03	 and	 ecx, 3
  02e10	51		 push	 ecx
  02e11	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02e16	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02e19	52		 push	 edx
  02e1a	e8 00 00 00 00	 call	 _fprintf
  02e1f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 598  : 		fprintf(fout,"%d,",group_database[i].local_only_group); //y/n

  02e22	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02e26	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02e2c	c1 e9 02	 shr	 ecx, 2
  02e2f	83 e1 01	 and	 ecx, 1
  02e32	51		 push	 ecx
  02e33	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02e38	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02e3b	52		 push	 edx
  02e3c	e8 00 00 00 00	 call	 _fprintf
  02e41	83 c4 0c	 add	 esp, 12			; 0000000cH

; 599  : 		fprintf(fout,"%d,",group_database[i].default_engage_enemy);//y/n

  02e44	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02e48	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02e4e	c1 e9 03	 shr	 ecx, 3
  02e51	83 e1 01	 and	 ecx, 1
  02e54	51		 push	 ecx
  02e55	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02e5a	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02e5d	52		 push	 edx
  02e5e	e8 00 00 00 00	 call	 _fprintf
  02e63	83 c4 0c	 add	 esp, 12			; 0000000cH

; 600  : 		fprintf(fout,"%d,",group_database[i].amalgamate);

  02e66	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02e6a	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02e70	c1 e9 04	 shr	 ecx, 4
  02e73	83 e1 01	 and	 ecx, 1
  02e76	51		 push	 ecx
  02e77	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02e7c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02e7f	52		 push	 edx
  02e80	e8 00 00 00 00	 call	 _fprintf
  02e85	83 c4 0c	 add	 esp, 12			; 0000000cH

; 601  : 		fprintf(fout,"%d,",group_database[i].platoon_id_type);

  02e88	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02e8c	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02e92	c1 e9 05	 shr	 ecx, 5
  02e95	83 e1 07	 and	 ecx, 7
  02e98	51		 push	 ecx
  02e99	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02e9e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02ea1	52		 push	 edx
  02ea2	e8 00 00 00 00	 call	 _fprintf
  02ea7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 602  : 		fprintf(fout,"%d,",group_database[i].maximum_member_count);

  02eaa	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02eae	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02eb4	c1 e9 08	 shr	 ecx, 8
  02eb7	83 e1 1f	 and	 ecx, 31			; 0000001fH
  02eba	51		 push	 ecx
  02ebb	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02ec0	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02ec3	52		 push	 edx
  02ec4	e8 00 00 00 00	 call	 _fprintf
  02ec9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 603  : 		fprintf(fout,"%d,",group_database[i].minimum_idle_count);

  02ecc	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02ed0	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02ed6	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  02ed9	83 e1 0f	 and	 ecx, 15			; 0000000fH
  02edc	51		 push	 ecx
  02edd	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02ee2	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02ee5	52		 push	 edx
  02ee6	e8 00 00 00 00	 call	 _fprintf
  02eeb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 604  : 		fprintf(fout,"%d,",group_database[i].resupply_source);

  02eee	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02ef2	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+72]
  02ef8	c1 e9 11	 shr	 ecx, 17			; 00000011H
  02efb	83 e1 07	 and	 ecx, 7
  02efe	51		 push	 ecx
  02eff	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f04	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f07	52		 push	 edx
  02f08	e8 00 00 00 00	 call	 _fprintf
  02f0d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 605  : 		fprintf(fout,"%d,",group_database[i].ai_stats.air_attack_strength);

  02f10	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f14	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+76]
  02f1a	51		 push	 ecx
  02f1b	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f20	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f23	52		 push	 edx
  02f24	e8 00 00 00 00	 call	 _fprintf
  02f29	83 c4 0c	 add	 esp, 12			; 0000000cH

; 606  : 		fprintf(fout,"%d,",group_database[i].ai_stats.ground_attack_strength);

  02f2c	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f30	8b 88 50 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+80]
  02f36	51		 push	 ecx
  02f37	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f3c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f3f	52		 push	 edx
  02f40	e8 00 00 00 00	 call	 _fprintf
  02f45	83 c4 0c	 add	 esp, 12			; 0000000cH

; 607  : 		fprintf(fout,"%d,",group_database[i].ai_stats.movement_speed);

  02f48	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f4c	8b 88 54 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+84]
  02f52	51		 push	 ecx
  02f53	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f58	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f5b	52		 push	 edx
  02f5c	e8 00 00 00 00	 call	 _fprintf
  02f61	83 c4 0c	 add	 esp, 12			; 0000000cH

; 608  : 		fprintf(fout,"%d,",group_database[i].ai_stats.movement_stealth);

  02f64	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f68	8b 88 58 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+88]
  02f6e	51		 push	 ecx
  02f6f	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f74	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f77	52		 push	 edx
  02f78	e8 00 00 00 00	 call	 _fprintf
  02f7d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 609  : 		fprintf(fout,"%d,",group_database[i].ai_stats.cargo_space);

  02f80	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02f84	8b 88 5c 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+92]
  02f8a	51		 push	 ecx
  02f8b	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  02f90	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02f93	52		 push	 edx
  02f94	e8 00 00 00 00	 call	 _fprintf
  02f99	83 c4 0c	 add	 esp, 12			; 0000000cH

; 610  : 		fprintf(fout,"%d\n",group_database[i].ai_stats.troop_space);

  02f9c	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  02fa0	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[eax+96]
  02fa6	51		 push	 ecx
  02fa7	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  02fac	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  02faf	52		 push	 edx
  02fb0	e8 00 00 00 00	 call	 _fprintf
  02fb5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 611  : 	}

  02fb8	e9 16 fc ff ff	 jmp	 $LN16@DumpGWutIn
$LN17@DumpGWutIn:

; 612  : 
; 613  : 
; 614  : //aphavoc\source\entity\special\task\ts_dbase.h
; 615  : 	fprintf(fout,"[TASKS]\n");

  02fbd	68 00 00 00 00	 push	 OFFSET ??_C@_08DIOLFBCP@?$FLTASKS?$FN?6@
  02fc2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02fc5	50		 push	 eax
  02fc6	e8 00 00 00 00	 call	 _fprintf
  02fcb	83 c4 08	 add	 esp, 8

; 616  : 	if (WRITE_HEADER) {

  02fce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  02fd5	0f 84 9c 03 00
	00		 je	 $LN58@DumpGWutIn

; 617  : 	fprintf(fout,"%s,","full_name");

  02fdb	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  02fe0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02fe5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02fe8	50		 push	 eax
  02fe9	e8 00 00 00 00	 call	 _fprintf
  02fee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 618  : 	fprintf(fout,"%s,","task_category");

  02ff1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LOLCGDBM@task_category@
  02ff6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  02ffb	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  02ffe	50		 push	 eax
  02fff	e8 00 00 00 00	 call	 _fprintf
  03004	83 c4 0c	 add	 esp, 12			; 0000000cH

; 619  : 	fprintf(fout,"%s,","task_priority");

  03007	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PHLPMOJE@task_priority@
  0300c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03011	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03014	50		 push	 eax
  03015	e8 00 00 00 00	 call	 _fprintf
  0301a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 620  : 	fprintf(fout,"%s,","difficulty_rating");

  0301d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KOCHPEJA@difficulty_rating@
  03022	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03027	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0302a	50		 push	 eax
  0302b	e8 00 00 00 00	 call	 _fprintf
  03030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 621  : 	fprintf(fout,"%s,","task_default_target_class");

  03033	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@MIANEGBE@task_default_target_class@
  03038	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0303d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03040	50		 push	 eax
  03041	e8 00 00 00 00	 call	 _fprintf
  03046	83 c4 0c	 add	 esp, 12			; 0000000cH

; 622  : 	fprintf(fout,"%s,","task_default_target_source");

  03049	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NCCIFNOO@task_default_target_source@
  0304e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03053	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03056	50		 push	 eax
  03057	e8 00 00 00 00	 call	 _fprintf
  0305c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 623  : 	fprintf(fout,"%s,","task_default_target_type");

  0305f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KHGACEBL@task_default_target_type@
  03064	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03069	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0306c	50		 push	 eax
  0306d	e8 00 00 00 00	 call	 _fprintf
  03072	83 c4 0c	 add	 esp, 12			; 0000000cH

; 624  : 	fprintf(fout,"%s,","task_objective_info");

  03075	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PINIPHCI@task_objective_info@
  0307a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0307f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03082	50		 push	 eax
  03083	e8 00 00 00 00	 call	 _fprintf
  03088	83 c4 0c	 add	 esp, 12			; 0000000cH

; 625  : 	fprintf(fout,"%s,","minimum_member_count");

  0308b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BDNALNGL@minimum_member_count@
  03090	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03095	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03098	50		 push	 eax
  03099	e8 00 00 00 00	 call	 _fprintf
  0309e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 626  : 	fprintf(fout,"%s,","rules_of_engagement");

  030a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GBJCPEJB@rules_of_engagement@
  030a6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  030ab	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  030ae	50		 push	 eax
  030af	e8 00 00 00 00	 call	 _fprintf
  030b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 627  : 	fprintf(fout,"%s,","engage_enemy");

  030b7	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NMFLJCAH@engage_enemy@
  030bc	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  030c1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  030c4	50		 push	 eax
  030c5	e8 00 00 00 00	 call	 _fprintf
  030ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 628  : 	fprintf(fout,"%s,","escort_required_threshold");

  030cd	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@JKFOCKDD@escort_required_threshold@
  030d2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  030d7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  030da	50		 push	 eax
  030db	e8 00 00 00 00	 call	 _fprintf
  030e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 629  : // fprintf(fout,"%s,","waypoint_route_colour");
; 630  : 	fprintf(fout,"%s,","add_start_waypoint");

  030e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GELBBEHP@add_start_waypoint@
  030e8	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  030ed	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  030f0	50		 push	 eax
  030f1	e8 00 00 00 00	 call	 _fprintf
  030f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 631  : 	fprintf(fout,"%s,","primary_task");

  030f9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PDLNGDDD@primary_task@
  030fe	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03103	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03106	50		 push	 eax
  03107	e8 00 00 00 00	 call	 _fprintf
  0310c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 632  : 	fprintf(fout,"%s,","solo_task");

  0310f	68 00 00 00 00	 push	 OFFSET ??_C@_09NKMFGGLB@solo_task@
  03114	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03119	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0311c	50		 push	 eax
  0311d	e8 00 00 00 00	 call	 _fprintf
  03122	83 c4 0c	 add	 esp, 12			; 0000000cH

; 633  : 	fprintf(fout,"%s,","persistent_task");

  03125	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PFCBFGIE@persistent_task@
  0312a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0312f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03132	50		 push	 eax
  03133	e8 00 00 00 00	 call	 _fprintf
  03138	83 c4 0c	 add	 esp, 12			; 0000000cH

; 634  : 	fprintf(fout,"%s,","visible_task");

  0313b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JLKCCAEP@visible_task@
  03140	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03145	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03148	50		 push	 eax
  03149	e8 00 00 00 00	 call	 _fprintf
  0314e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 635  : 	fprintf(fout,"%s,","keysite_air_force_capacity");

  03151	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CFEDIIIK@keysite_air_force_capacity@
  03156	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0315b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0315e	50		 push	 eax
  0315f	e8 00 00 00 00	 call	 _fprintf
  03164	83 c4 0c	 add	 esp, 12			; 0000000cH

; 636  : 	fprintf(fout,"%s,","assess_landing");

  03167	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PPGPJFNA@assess_landing@
  0316c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03171	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03174	50		 push	 eax
  03175	e8 00 00 00 00	 call	 _fprintf
  0317a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 637  : 	fprintf(fout,"%s,","task_route_search");

  0317d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NILPEGCL@task_route_search@
  03182	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03187	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0318a	50		 push	 eax
  0318b	e8 00 00 00 00	 call	 _fprintf
  03190	83 c4 0c	 add	 esp, 12			; 0000000cH

; 638  : 	fprintf(fout,"%s,","perform_debrief");

  03193	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BNGCDKAC@perform_debrief@
  03198	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0319d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  031a0	50		 push	 eax
  031a1	e8 00 00 00 00	 call	 _fprintf
  031a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 639  : 	fprintf(fout,"%s,","delay_task_assignment");

  031a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JEGIBEA@delay_task_assignment@
  031ae	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  031b3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  031b6	50		 push	 eax
  031b7	e8 00 00 00 00	 call	 _fprintf
  031bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 640  : 	fprintf(fout,"%s,","task_objective_preview");

  031bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KFAJDPKI@task_objective_preview@
  031c4	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  031c9	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  031cc	50		 push	 eax
  031cd	e8 00 00 00 00	 call	 _fprintf
  031d2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 641  : 	fprintf(fout,"%s,","counts_towards_player_log");

  031d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DJIBFJGN@counts_towards_player_log@
  031da	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  031df	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  031e2	50		 push	 eax
  031e3	e8 00 00 00 00	 call	 _fprintf
  031e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 642  : 	fprintf(fout,"%s,","wait_for_end_task");

  031eb	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EJCHKHJJ@wait_for_end_task@
  031f0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  031f5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  031f8	50		 push	 eax
  031f9	e8 00 00 00 00	 call	 _fprintf
  031fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 643  : 	fprintf(fout,"%s,","player_reserve_factor");

  03201	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GIDFMNAL@player_reserve_factor@
  03206	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0320b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0320e	50		 push	 eax
  0320f	e8 00 00 00 00	 call	 _fprintf
  03214	83 c4 0c	 add	 esp, 12			; 0000000cH

; 644  : 	fprintf(fout,"%s,","task_pass_percentage_partial");

  03217	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@BIKJLLEJ@task_pass_percentage_partial@
  0321c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03221	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03224	50		 push	 eax
  03225	e8 00 00 00 00	 call	 _fprintf
  0322a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 645  : 	fprintf(fout,"%s,","task_pass_percentage_success");

  0322d	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IHNDFIOD@task_pass_percentage_success@
  03232	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03237	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0323a	50		 push	 eax
  0323b	e8 00 00 00 00	 call	 _fprintf
  03240	83 c4 0c	 add	 esp, 12			; 0000000cH

; 646  : 	fprintf(fout,"%s,","task_completed_score");

  03243	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BPHOJLMP@task_completed_score@
  03248	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0324d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03250	50		 push	 eax
  03251	e8 00 00 00 00	 call	 _fprintf
  03256	83 c4 0c	 add	 esp, 12			; 0000000cH

; 647  : 	fprintf(fout,"%s,","movement_type");

  03259	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JCHJIBFM@movement_type@
  0325e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03263	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03266	50		 push	 eax
  03267	e8 00 00 00 00	 call	 _fprintf
  0326c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 648  : 	fprintf(fout,"%s,","landing_type_fixedwing");

  0326f	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FJKBKNH@landing_type_fixedwing@
  03274	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03279	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0327c	50		 push	 eax
  0327d	e8 00 00 00 00	 call	 _fprintf
  03282	83 c4 0c	 add	 esp, 12			; 0000000cH

; 649  : 	fprintf(fout,"%s,","landing_type_fixedw_transport");

  03285	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@LKIKKLFB@landing_type_fixedw_transport@
  0328a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0328f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03292	50		 push	 eax
  03293	e8 00 00 00 00	 call	 _fprintf
  03298	83 c4 0c	 add	 esp, 12			; 0000000cH

; 650  : 	fprintf(fout,"%s,","landing_type_helicopter");

  0329b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JAIACDLN@landing_type_helicopter@
  032a0	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  032a5	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  032a8	50		 push	 eax
  032a9	e8 00 00 00 00	 call	 _fprintf
  032ae	83 c4 0c	 add	 esp, 12			; 0000000cH

; 651  : 	fprintf(fout,"%s,","landing_type_ground");

  032b1	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NIFAGE@landing_type_ground@
  032b6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  032bb	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  032be	50		 push	 eax
  032bf	e8 00 00 00 00	 call	 _fprintf
  032c4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 652  : 	fprintf(fout,"%s,","landing_type_people");

  032c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JBDDNFBK@landing_type_people@
  032cc	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  032d1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  032d4	50		 push	 eax
  032d5	e8 00 00 00 00	 call	 _fprintf
  032da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 653  : 	fprintf(fout,"%s,","landing_type_sea");

  032dd	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FPDPBDJE@landing_type_sea@
  032e2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  032e7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  032ea	50		 push	 eax
  032eb	e8 00 00 00 00	 call	 _fprintf
  032f0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 654  : 	fprintf(fout,"%s,","ai_air_attack_strength");

  032f3	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FCHAANCE@ai_air_attack_strength@
  032f8	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  032fd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03300	50		 push	 eax
  03301	e8 00 00 00 00	 call	 _fprintf
  03306	83 c4 0c	 add	 esp, 12			; 0000000cH

; 655  : 	fprintf(fout,"%s,","ai_ground_attack_strength");

  03309	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@MHOPBBGP@ai_ground_attack_strength@
  0330e	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03313	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03316	50		 push	 eax
  03317	e8 00 00 00 00	 call	 _fprintf
  0331c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 656  : 	fprintf(fout,"%s,","ai_movement_speed");

  0331f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PILNPBAP@ai_movement_speed@
  03324	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03329	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0332c	50		 push	 eax
  0332d	e8 00 00 00 00	 call	 _fprintf
  03332	83 c4 0c	 add	 esp, 12			; 0000000cH

; 657  : 	fprintf(fout,"%s,","ai_movement_stealth");

  03335	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HHIFKNOH@ai_movement_stealth@
  0333a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0333f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03342	50		 push	 eax
  03343	e8 00 00 00 00	 call	 _fprintf
  03348	83 c4 0c	 add	 esp, 12			; 0000000cH

; 658  : 	fprintf(fout,"%s,","ai_cargo_space");

  0334b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KCADHAOC@ai_cargo_space@
  03350	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03355	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03358	50		 push	 eax
  03359	e8 00 00 00 00	 call	 _fprintf
  0335e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 659  : 	fprintf(fout,"%s\n","ai_troop_space");

  03361	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CBIEFNJM@ai_troop_space@
  03366	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  0336b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0336e	50		 push	 eax
  0336f	e8 00 00 00 00	 call	 _fprintf
  03374	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN58@DumpGWutIn:

; 660  : 	}
; 661  : 	for (i = 0; i <   NUM_ENTITY_SUB_TYPE_TASKS; i++)

  03377	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  0337e	eb 09		 jmp	 SHORT $LN21@DumpGWutIn
$LN19@DumpGWutIn:
  03380	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  03383	83 c0 01	 add	 eax, 1
  03386	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN21@DumpGWutIn:
  03389	83 7d f8 1e	 cmp	 DWORD PTR _i$[ebp], 30	; 0000001eH
  0338d	0f 8d db 05 00
	00		 jge	 $LN20@DumpGWutIn

; 662  : 	{
; 663  : 		fprintf(fout,"%d,",i);

  03393	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  03396	50		 push	 eax
  03397	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0339c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0339f	51		 push	 ecx
  033a0	e8 00 00 00 00	 call	 _fprintf
  033a5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 664  : 		fprintf(fout,"%s,",task_database[i].full_name);

  033a8	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  033ac	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax]
  033b2	51		 push	 ecx
  033b3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  033b8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  033bb	52		 push	 edx
  033bc	e8 00 00 00 00	 call	 _fprintf
  033c1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 665  : 		fprintf(fout,"%d,",task_database[i].task_category);

  033c4	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  033c8	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+12]
  033ce	51		 push	 ecx
  033cf	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  033d4	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  033d7	52		 push	 edx
  033d8	e8 00 00 00 00	 call	 _fprintf
  033dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 666  : 		fprintf(fout,"%g,",task_database[i].task_priority);

  033e0	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  033e4	f3 0f 5a 80 10
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+16]
  033ec	83 ec 08	 sub	 esp, 8
  033ef	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  033f4	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  033f9	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  033fc	51		 push	 ecx
  033fd	e8 00 00 00 00	 call	 _fprintf
  03402	83 c4 10	 add	 esp, 16			; 00000010H

; 667  : 		fprintf(fout,"%d,",task_database[i].difficulty_rating);

  03405	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03409	8b 88 14 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+20]
  0340f	51		 push	 ecx
  03410	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03415	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03418	52		 push	 edx
  03419	e8 00 00 00 00	 call	 _fprintf
  0341e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 668  : 		fprintf(fout,"%d,",task_database[i].task_default_target_class);

  03421	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03425	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24]
  0342b	83 e1 03	 and	 ecx, 3
  0342e	51		 push	 ecx
  0342f	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03434	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03437	52		 push	 edx
  03438	e8 00 00 00 00	 call	 _fprintf
  0343d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 669  : 		fprintf(fout,"%d,",task_database[i].task_default_target_source);

  03440	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03444	8b 88 18 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+24]
  0344a	c1 e9 02	 shr	 ecx, 2
  0344d	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03450	51		 push	 ecx
  03451	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03456	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03459	52		 push	 edx
  0345a	e8 00 00 00 00	 call	 _fprintf
  0345f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 670  : 		fprintf(fout,"%d,",IntToBin(task_database[i].task_default_target_type));

  03462	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03466	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+28]
  0346c	85 c9		 test	 ecx, ecx
  0346e	75 09		 jne	 SHORT $LN117@DumpGWutIn
  03470	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv2543[ebp], 0
  03477	eb 6a		 jmp	 SHORT $LN118@DumpGWutIn
$LN117@DumpGWutIn:
  03479	6b 55 f8 50	 imul	 edx, DWORD PTR _i$[ebp], 80
  0347d	8b 82 1c 00 00
	00		 mov	 eax, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[edx+28]
  03483	89 45 a8	 mov	 DWORD PTR tv4592[ebp], eax
  03486	f2 0f 2a 45 a8	 cvtsi2sd xmm0, DWORD PTR tv4592[ebp]
  0348b	8b 4d a8	 mov	 ecx, DWORD PTR tv4592[ebp]
  0348e	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  03491	f2 0f 58 04 cd
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  0349a	83 ec 08	 sub	 esp, 8
  0349d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  034a2	e8 00 00 00 00	 call	 _log
  034a7	83 c4 08	 add	 esp, 8
  034aa	dd 5d a0	 fstp	 QWORD PTR tv4599[ebp]
  034ad	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv4599[ebp]
  034b2	83 ec 08	 sub	 esp, 8
  034b5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  034bd	f2 0f 11 0c 24	 movsd	 QWORD PTR [esp], xmm1
  034c2	f2 0f 11 45 98	 movsd	 QWORD PTR tv5003[ebp], xmm0
  034c7	e8 00 00 00 00	 call	 _log
  034cc	83 c4 08	 add	 esp, 8
  034cf	dd 5d 90	 fstp	 QWORD PTR tv4605[ebp]
  034d2	f2 0f 10 45 98	 movsd	 xmm0, QWORD PTR tv5003[ebp]
  034d7	f2 0f 5e 45 90	 divsd	 xmm0, QWORD PTR tv4605[ebp]
  034dc	f2 0f 2c d0	 cvttsd2si edx, xmm0
  034e0	89 55 ac	 mov	 DWORD PTR tv2543[ebp], edx
$LN118@DumpGWutIn:
  034e3	8b 45 ac	 mov	 eax, DWORD PTR tv2543[ebp]
  034e6	50		 push	 eax
  034e7	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  034ec	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  034ef	51		 push	 ecx
  034f0	e8 00 00 00 00	 call	 _fprintf
  034f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 671  : 		fprintf(fout,"%d,",task_database[i].task_objective_info);

  034f8	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  034fc	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03502	83 e1 03	 and	 ecx, 3
  03505	51		 push	 ecx
  03506	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0350b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0350e	52		 push	 edx
  0350f	e8 00 00 00 00	 call	 _fprintf
  03514	83 c4 0c	 add	 esp, 12			; 0000000cH

; 672  : 		fprintf(fout,"%d,",task_database[i].minimum_member_count);

  03517	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0351b	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03521	c1 e9 02	 shr	 ecx, 2
  03524	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03527	51		 push	 ecx
  03528	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0352d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03530	52		 push	 edx
  03531	e8 00 00 00 00	 call	 _fprintf
  03536	83 c4 0c	 add	 esp, 12			; 0000000cH

; 673  : 		fprintf(fout,"%d,",task_database[i].rules_of_engagement);

  03539	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0353d	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03543	c1 e9 06	 shr	 ecx, 6
  03546	83 e1 03	 and	 ecx, 3
  03549	51		 push	 ecx
  0354a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0354f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03552	52		 push	 edx
  03553	e8 00 00 00 00	 call	 _fprintf
  03558	83 c4 0c	 add	 esp, 12			; 0000000cH

; 674  : 		fprintf(fout,"%d,",task_database[i].engage_enemy);

  0355b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0355f	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03565	c1 e9 08	 shr	 ecx, 8
  03568	83 e1 01	 and	 ecx, 1
  0356b	51		 push	 ecx
  0356c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03571	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03574	52		 push	 edx
  03575	e8 00 00 00 00	 call	 _fprintf
  0357a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 675  : 		fprintf(fout,"%d,",task_database[i].escort_required_threshold);

  0357d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03581	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+32]
  03587	c1 e9 09	 shr	 ecx, 9
  0358a	83 e1 0f	 and	 ecx, 15			; 0000000fH
  0358d	51		 push	 ecx
  0358e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03593	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03596	52		 push	 edx
  03597	e8 00 00 00 00	 call	 _fprintf
  0359c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 676  : //    fprintf(fout,"%d,",task_database[i].waypoint_route_colour);
; 677  : 		fprintf(fout,"%d,",task_database[i].add_start_waypoint);

  0359f	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035a3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  035a9	83 e1 01	 and	 ecx, 1
  035ac	51		 push	 ecx
  035ad	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  035b2	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  035b5	52		 push	 edx
  035b6	e8 00 00 00 00	 call	 _fprintf
  035bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 678  : 		fprintf(fout,"%d,",task_database[i].primary_task);

  035be	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035c2	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  035c8	d1 e9		 shr	 ecx, 1
  035ca	83 e1 01	 and	 ecx, 1
  035cd	51		 push	 ecx
  035ce	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  035d3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  035d6	52		 push	 edx
  035d7	e8 00 00 00 00	 call	 _fprintf
  035dc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 679  : 		fprintf(fout,"%d,",task_database[i].solo_task);

  035df	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  035e3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  035e9	c1 e9 02	 shr	 ecx, 2
  035ec	83 e1 01	 and	 ecx, 1
  035ef	51		 push	 ecx
  035f0	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  035f5	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  035f8	52		 push	 edx
  035f9	e8 00 00 00 00	 call	 _fprintf
  035fe	83 c4 0c	 add	 esp, 12			; 0000000cH

; 680  : 		fprintf(fout,"%d,",task_database[i].persistent_task);

  03601	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03605	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0360b	c1 e9 03	 shr	 ecx, 3
  0360e	83 e1 01	 and	 ecx, 1
  03611	51		 push	 ecx
  03612	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03617	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0361a	52		 push	 edx
  0361b	e8 00 00 00 00	 call	 _fprintf
  03620	83 c4 0c	 add	 esp, 12			; 0000000cH

; 681  : 		fprintf(fout,"%d,",task_database[i].visible_task);

  03623	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03627	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0362d	c1 e9 04	 shr	 ecx, 4
  03630	83 e1 01	 and	 ecx, 1
  03633	51		 push	 ecx
  03634	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03639	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0363c	52		 push	 edx
  0363d	e8 00 00 00 00	 call	 _fprintf
  03642	83 c4 0c	 add	 esp, 12			; 0000000cH

; 682  : 		fprintf(fout,"%d,",task_database[i].keysite_air_force_capacity);

  03645	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03649	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0364f	c1 e9 05	 shr	 ecx, 5
  03652	83 e1 03	 and	 ecx, 3
  03655	51		 push	 ecx
  03656	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0365b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0365e	52		 push	 edx
  0365f	e8 00 00 00 00	 call	 _fprintf
  03664	83 c4 0c	 add	 esp, 12			; 0000000cH

; 683  : 		fprintf(fout,"%d,",task_database[i].assess_landing);

  03667	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0366b	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03671	c1 e9 07	 shr	 ecx, 7
  03674	83 e1 01	 and	 ecx, 1
  03677	51		 push	 ecx
  03678	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0367d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03680	52		 push	 edx
  03681	e8 00 00 00 00	 call	 _fprintf
  03686	83 c4 0c	 add	 esp, 12			; 0000000cH

; 684  : 		fprintf(fout,"%d,",task_database[i].task_route_search);

  03689	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0368d	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03693	c1 e9 08	 shr	 ecx, 8
  03696	83 e1 01	 and	 ecx, 1
  03699	51		 push	 ecx
  0369a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0369f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  036a2	52		 push	 edx
  036a3	e8 00 00 00 00	 call	 _fprintf
  036a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 685  : 		fprintf(fout,"%d,",task_database[i].perform_debrief);

  036ab	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036af	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  036b5	c1 e9 09	 shr	 ecx, 9
  036b8	83 e1 01	 and	 ecx, 1
  036bb	51		 push	 ecx
  036bc	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  036c1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  036c4	52		 push	 edx
  036c5	e8 00 00 00 00	 call	 _fprintf
  036ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 686  : 		fprintf(fout,"%d,",task_database[i].delay_task_assignment);

  036cd	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036d1	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  036d7	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  036da	83 e1 01	 and	 ecx, 1
  036dd	51		 push	 ecx
  036de	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  036e3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  036e6	52		 push	 edx
  036e7	e8 00 00 00 00	 call	 _fprintf
  036ec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 687  : 		fprintf(fout,"%d,",task_database[i].task_objective_preview);

  036ef	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  036f3	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  036f9	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  036fc	83 e1 03	 and	 ecx, 3
  036ff	51		 push	 ecx
  03700	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03705	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03708	52		 push	 edx
  03709	e8 00 00 00 00	 call	 _fprintf
  0370e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 688  : 		fprintf(fout,"%d,",task_database[i].counts_towards_player_log);

  03711	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03715	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0371b	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  0371e	83 e1 01	 and	 ecx, 1
  03721	51		 push	 ecx
  03722	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03727	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0372a	52		 push	 edx
  0372b	e8 00 00 00 00	 call	 _fprintf
  03730	83 c4 0c	 add	 esp, 12			; 0000000cH

; 689  : 		fprintf(fout,"%d,",task_database[i].wait_for_end_task);

  03733	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03737	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0373d	c1 e9 0e	 shr	 ecx, 14			; 0000000eH
  03740	83 e1 01	 and	 ecx, 1
  03743	51		 push	 ecx
  03744	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03749	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0374c	52		 push	 edx
  0374d	e8 00 00 00 00	 call	 _fprintf
  03752	83 c4 0c	 add	 esp, 12			; 0000000cH

; 690  : 		fprintf(fout,"%d,",task_database[i].player_reserve_factor);

  03755	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03759	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  0375f	c1 e9 0f	 shr	 ecx, 15			; 0000000fH
  03762	83 e1 07	 and	 ecx, 7
  03765	51		 push	 ecx
  03766	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0376b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0376e	52		 push	 edx
  0376f	e8 00 00 00 00	 call	 _fprintf
  03774	83 c4 0c	 add	 esp, 12			; 0000000cH

; 691  : 		fprintf(fout,"%d,",task_database[i].task_pass_percentage_partial);

  03777	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0377b	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  03781	c1 e9 12	 shr	 ecx, 18			; 00000012H
  03784	83 e1 7f	 and	 ecx, 127		; 0000007fH
  03787	51		 push	 ecx
  03788	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0378d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03790	52		 push	 edx
  03791	e8 00 00 00 00	 call	 _fprintf
  03796	83 c4 0c	 add	 esp, 12			; 0000000cH

; 692  : 		fprintf(fout,"%d,",task_database[i].task_pass_percentage_success);

  03799	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0379d	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+40]
  037a3	c1 e9 19	 shr	 ecx, 25			; 00000019H
  037a6	83 e1 7f	 and	 ecx, 127		; 0000007fH
  037a9	51		 push	 ecx
  037aa	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  037af	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  037b2	52		 push	 edx
  037b3	e8 00 00 00 00	 call	 _fprintf
  037b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 693  : 		fprintf(fout,"%d,",task_database[i].task_completed_score);

  037bb	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  037bf	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+44]
  037c5	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  037cb	51		 push	 ecx
  037cc	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  037d1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  037d4	52		 push	 edx
  037d5	e8 00 00 00 00	 call	 _fprintf
  037da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 694  : 		fprintf(fout,"%d,",task_database[i].movement_type);

  037dd	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  037e1	8b 88 30 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+48]
  037e7	51		 push	 ecx
  037e8	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  037ed	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  037f0	52		 push	 edx
  037f1	e8 00 00 00 00	 call	 _fprintf
  037f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 695  : 		/*fprintf(fout,"%d,",(task_database[i].landing_types>>0&1==1)?1:0);
; 696  : 		fprintf(fout,"%d,",(task_database[i].landing_types>>1&1==1)?1:0);
; 697  : 		fprintf(fout,"%d,",(task_database[i].landing_types>>2&1==1)?1:0);
; 698  : 		fprintf(fout,"%d,",(task_database[i].landing_types>>3&1==1)?1:0);
; 699  : 		fprintf(fout,"%d,",(task_database[i].landing_types>>4&1==1)?1:0);
; 700  : 		fprintf(fout,"%d,",(task_database[i].landing_types>>5&1==1)?1:0);*/
; 701  : 		fprintf(fout,"%d,",task_database[i].landing_types>>0&1);

  037f9	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  037fd	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  03803	83 e1 01	 and	 ecx, 1
  03806	51		 push	 ecx
  03807	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0380c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0380f	52		 push	 edx
  03810	e8 00 00 00 00	 call	 _fprintf
  03815	83 c4 0c	 add	 esp, 12			; 0000000cH

; 702  : 		fprintf(fout,"%d,",task_database[i].landing_types>>1&1);

  03818	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0381c	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  03822	d1 f9		 sar	 ecx, 1
  03824	83 e1 01	 and	 ecx, 1
  03827	51		 push	 ecx
  03828	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0382d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03830	52		 push	 edx
  03831	e8 00 00 00 00	 call	 _fprintf
  03836	83 c4 0c	 add	 esp, 12			; 0000000cH

; 703  : 		fprintf(fout,"%d,",task_database[i].landing_types>>2&1);

  03839	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0383d	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  03843	c1 f9 02	 sar	 ecx, 2
  03846	83 e1 01	 and	 ecx, 1
  03849	51		 push	 ecx
  0384a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0384f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03852	52		 push	 edx
  03853	e8 00 00 00 00	 call	 _fprintf
  03858	83 c4 0c	 add	 esp, 12			; 0000000cH

; 704  : 		fprintf(fout,"%d,",task_database[i].landing_types>>3&1);

  0385b	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  0385f	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  03865	c1 f9 03	 sar	 ecx, 3
  03868	83 e1 01	 and	 ecx, 1
  0386b	51		 push	 ecx
  0386c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03871	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03874	52		 push	 edx
  03875	e8 00 00 00 00	 call	 _fprintf
  0387a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 705  : 		fprintf(fout,"%d,",task_database[i].landing_types>>4&1);

  0387d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03881	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  03887	c1 f9 04	 sar	 ecx, 4
  0388a	83 e1 01	 and	 ecx, 1
  0388d	51		 push	 ecx
  0388e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03893	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03896	52		 push	 edx
  03897	e8 00 00 00 00	 call	 _fprintf
  0389c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 706  : 		fprintf(fout,"%d,",task_database[i].landing_types>>5&1);

  0389f	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  038a3	8b 88 34 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+52]
  038a9	c1 f9 05	 sar	 ecx, 5
  038ac	83 e1 01	 and	 ecx, 1
  038af	51		 push	 ecx
  038b0	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  038b5	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  038b8	52		 push	 edx
  038b9	e8 00 00 00 00	 call	 _fprintf
  038be	83 c4 0c	 add	 esp, 12			; 0000000cH

; 707  : 		fprintf(fout,"%d,",task_database[i].ai_stats.air_attack_strength);

  038c1	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  038c5	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+56]
  038cb	51		 push	 ecx
  038cc	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  038d1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  038d4	52		 push	 edx
  038d5	e8 00 00 00 00	 call	 _fprintf
  038da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 708  : 		fprintf(fout,"%d,",task_database[i].ai_stats.ground_attack_strength);

  038dd	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  038e1	8b 88 3c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+60]
  038e7	51		 push	 ecx
  038e8	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  038ed	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  038f0	52		 push	 edx
  038f1	e8 00 00 00 00	 call	 _fprintf
  038f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 709  : 		fprintf(fout,"%d,",task_database[i].ai_stats.movement_speed);

  038f9	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  038fd	8b 88 40 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+64]
  03903	51		 push	 ecx
  03904	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03909	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0390c	52		 push	 edx
  0390d	e8 00 00 00 00	 call	 _fprintf
  03912	83 c4 0c	 add	 esp, 12			; 0000000cH

; 710  : 		fprintf(fout,"%d,",task_database[i].ai_stats.movement_stealth);

  03915	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03919	8b 88 44 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+68]
  0391f	51		 push	 ecx
  03920	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03925	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03928	52		 push	 edx
  03929	e8 00 00 00 00	 call	 _fprintf
  0392e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 711  : 		fprintf(fout,"%d,",task_database[i].ai_stats.cargo_space);

  03931	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03935	8b 88 48 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+72]
  0393b	51		 push	 ecx
  0393c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03941	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03944	52		 push	 edx
  03945	e8 00 00 00 00	 call	 _fprintf
  0394a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 712  : 		fprintf(fout,"%d\n",task_database[i].ai_stats.troop_space);

  0394d	6b 45 f8 50	 imul	 eax, DWORD PTR _i$[ebp], 80
  03951	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?task_database@@3PAUTASK_DATA@@A[eax+76]
  03957	51		 push	 ecx
  03958	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  0395d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03960	52		 push	 edx
  03961	e8 00 00 00 00	 call	 _fprintf
  03966	83 c4 0c	 add	 esp, 12			; 0000000cH

; 713  : 	}

  03969	e9 12 fa ff ff	 jmp	 $LN19@DumpGWutIn
$LN20@DumpGWutIn:

; 714  : 
; 715  : //aphavoc\source\entity\special\waypoint\wp_dbase.h
; 716  : 	fprintf(fout,"[WAYPOINTS]\n");

  0396e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OIGCLPCO@?$FLWAYPOINTS?$FN?6@
  03973	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03976	50		 push	 eax
  03977	e8 00 00 00 00	 call	 _fprintf
  0397c	83 c4 08	 add	 esp, 8

; 717  : 	if (WRITE_HEADER) {

  0397f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  03986	0f 84 b2 03 00
	00		 je	 $LN59@DumpGWutIn

; 718  : 	fprintf(fout,"%s,","full_name");

  0398c	68 00 00 00 00	 push	 OFFSET ??_C@_09LBCPNCLI@full_name@
  03991	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03996	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03999	50		 push	 eax
  0399a	e8 00 00 00 00	 call	 _fprintf
  0399f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 719  : 	fprintf(fout,"%s,","verbose_operational_state");

  039a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IBOMPAFN@verbose_operational_state@
  039a7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  039ac	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  039af	50		 push	 eax
  039b0	e8 00 00 00 00	 call	 _fprintf
  039b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 720  : 	fprintf(fout,"%s,","mobile_follow_waypoint_offset");

  039b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BPGDDJNL@mobile_follow_waypoint_offset@
  039bd	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  039c2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  039c5	50		 push	 eax
  039c6	e8 00 00 00 00	 call	 _fprintf
  039cb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 721  : 	fprintf(fout,"%s,","waypoint_action_message");

  039ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GACMBDBB@waypoint_action_message@
  039d3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  039d8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  039db	50		 push	 eax
  039dc	e8 00 00 00 00	 call	 _fprintf
  039e1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 722  : 	fprintf(fout,"%s,","waypoint_reached_message");

  039e4	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GLEIPLPL@waypoint_reached_message@
  039e9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  039ee	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  039f1	50		 push	 eax
  039f2	e8 00 00 00 00	 call	 _fprintf
  039f7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 723  : 	fprintf(fout,"%s,","waypoint_reached_return_value");

  039fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@OFCJNKJF@waypoint_reached_return_value@
  039ff	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a04	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a07	50		 push	 eax
  03a08	e8 00 00 00 00	 call	 _fprintf
  03a0d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 724  : 	fprintf(fout,"%s,","planner_moveable");

  03a10	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MFKNECBC@planner_moveable@
  03a15	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a1a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a1d	50		 push	 eax
  03a1e	e8 00 00 00 00	 call	 _fprintf
  03a23	83 c4 0c	 add	 esp, 12			; 0000000cH

; 725  : 	fprintf(fout,"%s,","objective_waypoint");

  03a26	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MICANFGD@objective_waypoint@
  03a2b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a30	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a33	50		 push	 eax
  03a34	e8 00 00 00 00	 call	 _fprintf
  03a39	83 c4 0c	 add	 esp, 12			; 0000000cH

; 726  : 	fprintf(fout,"%s,","player_skip_waypoint");

  03a3c	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DAGIKPNA@player_skip_waypoint@
  03a41	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a46	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a49	50		 push	 eax
  03a4a	e8 00 00 00 00	 call	 _fprintf
  03a4f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 727  : 	fprintf(fout,"%s,","check_waypoint_action");

  03a52	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NJPOIMLE@check_waypoint_action@
  03a57	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a5c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a5f	50		 push	 eax
  03a60	e8 00 00 00 00	 call	 _fprintf
  03a65	83 c4 0c	 add	 esp, 12			; 0000000cH

; 728  : 	fprintf(fout,"%s,","guide_sub_type");

  03a68	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MOAANCBG@guide_sub_type@
  03a6d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a72	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a75	50		 push	 eax
  03a76	e8 00 00 00 00	 call	 _fprintf
  03a7b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 729  : // fprintf(fout,"%s,","map_icon");
; 730  : 	fprintf(fout,"%s,","fw_minimum_previous_waypoint_distance");//fw = fixed wing

  03a7e	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@IDAFLCKN@fw_minimum_previous_waypoint_di@
  03a83	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a88	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03a8b	50		 push	 eax
  03a8c	e8 00 00 00 00	 call	 _fprintf
  03a91	83 c4 0c	 add	 esp, 12			; 0000000cH

; 731  : 	fprintf(fout,"%s,","fw_action_radius");

  03a94	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EINBFIKI@fw_action_radius@
  03a99	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03a9e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03aa1	50		 push	 eax
  03aa2	e8 00 00 00 00	 call	 _fprintf
  03aa7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 732  : 	fprintf(fout,"%s,","fw_reached_radius");

  03aaa	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MNHABDKH@fw_reached_radius@
  03aaf	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03ab4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03ab7	50		 push	 eax
  03ab8	e8 00 00 00 00	 call	 _fprintf
  03abd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 733  : 	fprintf(fout,"%s,","fw_velocity");

  03ac0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EHPMFCHE@fw_velocity@
  03ac5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03aca	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03acd	50		 push	 eax
  03ace	e8 00 00 00 00	 call	 _fprintf
  03ad3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 734  : 	fprintf(fout,"%s,","fw_criteria_last_to_reach");

  03ad6	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LBENMCD@fw_criteria_last_to_reach@
  03adb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03ae0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03ae3	50		 push	 eax
  03ae4	e8 00 00 00 00	 call	 _fprintf
  03ae9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 735  : 	fprintf(fout,"%s,","fw_criteria_transmit_recon");

  03aec	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DKBDBFHG@fw_criteria_transmit_recon@
  03af1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03af6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03af9	50		 push	 eax
  03afa	e8 00 00 00 00	 call	 _fprintf
  03aff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 736  : 	fprintf(fout,"%s,","fw_position_type");

  03b02	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NHAILGCL@fw_position_type@
  03b07	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b0c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b0f	50		 push	 eax
  03b10	e8 00 00 00 00	 call	 _fprintf
  03b15	83 c4 0c	 add	 esp, 12			; 0000000cH

; 737  : 	fprintf(fout,"%s,","fw_movement_type");

  03b18	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KGHCIFOD@fw_movement_type@
  03b1d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b22	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b25	50		 push	 eax
  03b26	e8 00 00 00 00	 call	 _fprintf
  03b2b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 738  : 	fprintf(fout,"%s,","hc_minimum_previous_waypoint_distance");//hc = helicopter

  03b2e	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KDNLECPH@hc_minimum_previous_waypoint_di@
  03b33	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b38	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b3b	50		 push	 eax
  03b3c	e8 00 00 00 00	 call	 _fprintf
  03b41	83 c4 0c	 add	 esp, 12			; 0000000cH

; 739  : 	fprintf(fout,"%s,","hc_action_radius");

  03b44	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DLODNCCH@hc_action_radius@
  03b49	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b4e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b51	50		 push	 eax
  03b52	e8 00 00 00 00	 call	 _fprintf
  03b57	83 c4 0c	 add	 esp, 12			; 0000000cH

; 740  : 	fprintf(fout,"%s,","hc_reached_radius");

  03b5a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LAAELPJM@hc_reached_radius@
  03b5f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b64	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b67	50		 push	 eax
  03b68	e8 00 00 00 00	 call	 _fprintf
  03b6d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 741  : 	fprintf(fout,"%s,","hc_velocity");

  03b70	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LAOCDGCD@hc_velocity@
  03b75	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b7a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b7d	50		 push	 eax
  03b7e	e8 00 00 00 00	 call	 _fprintf
  03b83	83 c4 0c	 add	 esp, 12			; 0000000cH

; 742  : 	fprintf(fout,"%s,","hc_criteria_last_to_reach");

  03b86	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@MCEJEBLL@hc_criteria_last_to_reach@
  03b8b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03b90	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03b93	50		 push	 eax
  03b94	e8 00 00 00 00	 call	 _fprintf
  03b99	83 c4 0c	 add	 esp, 12			; 0000000cH

; 743  : 	fprintf(fout,"%s,","hc_criteria_transmit_recon");

  03b9c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MEAOFDJN@hc_criteria_transmit_recon@
  03ba1	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03ba6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03ba9	50		 push	 eax
  03baa	e8 00 00 00 00	 call	 _fprintf
  03baf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 744  : 	fprintf(fout,"%s,","hc_position_type");

  03bb2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KEDKDMKE@hc_position_type@
  03bb7	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03bbc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03bbf	50		 push	 eax
  03bc0	e8 00 00 00 00	 call	 _fprintf
  03bc5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 745  : 	fprintf(fout,"%s,","hc_movement_type");

  03bc8	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NFEAAPGM@hc_movement_type@
  03bcd	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03bd2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03bd5	50		 push	 eax
  03bd6	e8 00 00 00 00	 call	 _fprintf
  03bdb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 746  : 	fprintf(fout,"%s,","rv_minimum_previous_waypoint_distance");//ground vehicle

  03bde	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@ONPHKLJE@rv_minimum_previous_waypoint_di@
  03be3	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03be8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03beb	50		 push	 eax
  03bec	e8 00 00 00 00	 call	 _fprintf
  03bf1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 747  : 	fprintf(fout,"%s,","rv_action_radius");

  03bf4	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@ICOAHHIL@rv_action_radius@
  03bf9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03bfe	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c01	50		 push	 eax
  03c02	e8 00 00 00 00	 call	 _fprintf
  03c07	83 c4 0c	 add	 esp, 12			; 0000000cH

; 748  : 	fprintf(fout,"%s,","rv_reached_radius");

  03c0a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GPNNFDPK@rv_reached_radius@
  03c0f	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c14	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c17	50		 push	 eax
  03c18	e8 00 00 00 00	 call	 _fprintf
  03c1d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 749  : 	fprintf(fout,"%s,","rv_velocity");

  03c20	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IJGMFLDH@rv_velocity@
  03c25	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c2a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c2d	50		 push	 eax
  03c2e	e8 00 00 00 00	 call	 _fprintf
  03c33	83 c4 0c	 add	 esp, 12			; 0000000cH

; 750  : 	fprintf(fout,"%s,","rv_criteria_last_to_reach");

  03c36	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@COFJIBIL@rv_criteria_last_to_reach@
  03c3b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c40	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c43	50		 push	 eax
  03c44	e8 00 00 00 00	 call	 _fprintf
  03c49	83 c4 0c	 add	 esp, 12			; 0000000cH

; 751  : 	fprintf(fout,"%s,","rv_criteria_transmit_recon");

  03c4c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@OCDLHDPB@rv_criteria_transmit_recon@
  03c51	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c56	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c59	50		 push	 eax
  03c5a	e8 00 00 00 00	 call	 _fprintf
  03c5f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 752  : 	fprintf(fout,"%s,","rv_position_type");

  03c62	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BNDJJJAI@rv_position_type@
  03c67	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c6c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c6f	50		 push	 eax
  03c70	e8 00 00 00 00	 call	 _fprintf
  03c75	83 c4 0c	 add	 esp, 12			; 0000000cH

; 753  : 	fprintf(fout,"%s,","rv_movement_type");

  03c78	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GMEDKKMA@rv_movement_type@
  03c7d	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c82	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c85	50		 push	 eax
  03c86	e8 00 00 00 00	 call	 _fprintf
  03c8b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 754  : 	fprintf(fout,"%s,","sh_minimum_previous_waypoint_distance");//sh=sea vehicle

  03c8e	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@GKCHNJHF@sh_minimum_previous_waypoint_di@
  03c93	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03c98	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03c9b	50		 push	 eax
  03c9c	e8 00 00 00 00	 call	 _fprintf
  03ca1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 755  : 	fprintf(fout,"%s,","sh_action_radius");

  03ca4	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MDODHEPN@sh_action_radius@
  03ca9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03cae	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03cb1	50		 push	 eax
  03cb2	e8 00 00 00 00	 call	 _fprintf
  03cb7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 756  : 	fprintf(fout,"%s,","sh_reached_radius");

  03cba	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@NGPKIEPA@sh_reached_radius@
  03cbf	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03cc4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03cc7	50		 push	 eax
  03cc8	e8 00 00 00 00	 call	 _fprintf
  03ccd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 757  : 	fprintf(fout,"%s,","sh_velocity");

  03cd0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OOEJPIJF@sh_velocity@
  03cd5	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03cda	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03cdd	50		 push	 eax
  03cde	e8 00 00 00 00	 call	 _fprintf
  03ce3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 758  : 	fprintf(fout,"%s,","sh_criteria_last_to_reach");

  03ce6	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NGIDPPGD@sh_criteria_last_to_reach@
  03ceb	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03cf0	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03cf3	50		 push	 eax
  03cf4	e8 00 00 00 00	 call	 _fprintf
  03cf9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 759  : 	fprintf(fout,"%s,","sh_criteria_transmit_recon");

  03cfc	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EMBCMDMF@sh_criteria_transmit_recon@
  03d01	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03d06	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03d09	50		 push	 eax
  03d0a	e8 00 00 00 00	 call	 _fprintf
  03d0f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 760  : 	fprintf(fout,"%s,","sh_position_type");

  03d12	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FMDKJKHO@sh_position_type@
  03d17	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03d1c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03d1f	50		 push	 eax
  03d20	e8 00 00 00 00	 call	 _fprintf
  03d25	83 c4 0c	 add	 esp, 12			; 0000000cH

; 761  : 	fprintf(fout,"%s\n","sh_movement_type");

  03d28	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@CNEAKJLG@sh_movement_type@
  03d2d	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  03d32	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  03d35	50		 push	 eax
  03d36	e8 00 00 00 00	 call	 _fprintf
  03d3b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN59@DumpGWutIn:

; 762  : 	}
; 763  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_WAYPOINTS; i++)

  03d3e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  03d45	eb 09		 jmp	 SHORT $LN24@DumpGWutIn
$LN22@DumpGWutIn:
  03d47	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  03d4a	83 c0 01	 add	 eax, 1
  03d4d	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN24@DumpGWutIn:
  03d50	83 7d f8 25	 cmp	 DWORD PTR _i$[ebp], 37	; 00000025H
  03d54	0f 8d e7 05 00
	00		 jge	 $LN23@DumpGWutIn

; 764  : 	{
; 765  : 		fprintf(fout,"%d,",i);

  03d5a	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  03d5d	50		 push	 eax
  03d5e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03d63	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  03d66	51		 push	 ecx
  03d67	e8 00 00 00 00	 call	 _fprintf
  03d6c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 766  : 		fprintf(fout,"%s,",waypoint_database[i].full_name);

  03d6f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03d73	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax]
  03d79	51		 push	 ecx
  03d7a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  03d7f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03d82	52		 push	 edx
  03d83	e8 00 00 00 00	 call	 _fprintf
  03d88	83 c4 0c	 add	 esp, 12			; 0000000cH

; 767  : 		fprintf(fout,"%d,",waypoint_database[i].verbose_operational_state);

  03d8b	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03d8f	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03d95	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  03d98	c1 f9 1a	 sar	 ecx, 26			; 0000001aH
  03d9b	51		 push	 ecx
  03d9c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03da1	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03da4	52		 push	 edx
  03da5	e8 00 00 00 00	 call	 _fprintf
  03daa	83 c4 0c	 add	 esp, 12			; 0000000cH

; 768  : 		fprintf(fout,"%d,",waypoint_database[i].mobile_follow_waypoint_offset);

  03dad	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03db1	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03db7	c1 e9 06	 shr	 ecx, 6
  03dba	83 e1 01	 and	 ecx, 1
  03dbd	51		 push	 ecx
  03dbe	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03dc3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03dc6	52		 push	 edx
  03dc7	e8 00 00 00 00	 call	 _fprintf
  03dcc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		fprintf(fout,"%d,",waypoint_database[i].waypoint_action_message);

  03dcf	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03dd3	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03dd9	c1 e9 07	 shr	 ecx, 7
  03ddc	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  03de2	51		 push	 ecx
  03de3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03de8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03deb	52		 push	 edx
  03dec	e8 00 00 00 00	 call	 _fprintf
  03df1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 770  : 		fprintf(fout,"%d,",waypoint_database[i].waypoint_reached_message);

  03df4	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03df8	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03dfe	c1 e9 10	 shr	 ecx, 16			; 00000010H
  03e01	81 e1 ff 01 00
	00		 and	 ecx, 511		; 000001ffH
  03e07	51		 push	 ecx
  03e08	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03e0d	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03e10	52		 push	 edx
  03e11	e8 00 00 00 00	 call	 _fprintf
  03e16	83 c4 0c	 add	 esp, 12			; 0000000cH

; 771  : 		fprintf(fout,"%d,",waypoint_database[i].waypoint_reached_return_value);

  03e19	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e1d	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03e23	c1 e9 19	 shr	 ecx, 25			; 00000019H
  03e26	83 e1 0f	 and	 ecx, 15			; 0000000fH
  03e29	51		 push	 ecx
  03e2a	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03e2f	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03e32	52		 push	 edx
  03e33	e8 00 00 00 00	 call	 _fprintf
  03e38	83 c4 0c	 add	 esp, 12			; 0000000cH

; 772  : 		fprintf(fout,"%d,",waypoint_database[i].planner_moveable);

  03e3b	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e3f	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03e45	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  03e48	83 e1 01	 and	 ecx, 1
  03e4b	51		 push	 ecx
  03e4c	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03e51	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03e54	52		 push	 edx
  03e55	e8 00 00 00 00	 call	 _fprintf
  03e5a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 773  : 		fprintf(fout,"%d,",waypoint_database[i].objective_waypoint);

  03e5d	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e61	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03e67	c1 e9 1e	 shr	 ecx, 30			; 0000001eH
  03e6a	83 e1 01	 and	 ecx, 1
  03e6d	51		 push	 ecx
  03e6e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03e73	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03e76	52		 push	 edx
  03e77	e8 00 00 00 00	 call	 _fprintf
  03e7c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 774  : 		fprintf(fout,"%d,",waypoint_database[i].player_skip_waypoint);

  03e7f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03e83	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  03e89	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  03e8c	83 e1 01	 and	 ecx, 1
  03e8f	51		 push	 ecx
  03e90	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03e95	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03e98	52		 push	 edx
  03e99	e8 00 00 00 00	 call	 _fprintf
  03e9e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 775  : 		fprintf(fout,"%d,",waypoint_database[i].check_waypoint_action);

  03ea1	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ea5	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+8]
  03eab	83 e1 01	 and	 ecx, 1
  03eae	51		 push	 ecx
  03eaf	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03eb4	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03eb7	52		 push	 edx
  03eb8	e8 00 00 00 00	 call	 _fprintf
  03ebd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 776  : 		fprintf(fout,"%d,",waypoint_database[i].guide_sub_type);

  03ec0	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ec4	8b 88 0c 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+12]
  03eca	51		 push	 ecx
  03ecb	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03ed0	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03ed3	52		 push	 edx
  03ed4	e8 00 00 00 00	 call	 _fprintf
  03ed9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 777  : //    fprintf(fout,"%d,",waypoint_database[i].map_icon);
; 778  : 		fprintf(fout,"%g,",waypoint_database[i].fw_minimum_previous_waypoint_distance);

  03edc	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ee0	f3 0f 5a 80 14
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+20]
  03ee8	83 ec 08	 sub	 esp, 8
  03eeb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  03ef0	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  03ef5	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  03ef8	51		 push	 ecx
  03ef9	e8 00 00 00 00	 call	 _fprintf
  03efe	83 c4 10	 add	 esp, 16			; 00000010H

; 779  : 		fprintf(fout,"%g,",waypoint_database[i].fw_action_radius);

  03f01	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f05	f3 0f 5a 80 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+24]
  03f0d	83 ec 08	 sub	 esp, 8
  03f10	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  03f15	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  03f1a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  03f1d	51		 push	 ecx
  03f1e	e8 00 00 00 00	 call	 _fprintf
  03f23	83 c4 10	 add	 esp, 16			; 00000010H

; 780  : 		fprintf(fout,"%g,",waypoint_database[i].fw_reached_radius);

  03f26	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f2a	f3 0f 5a 80 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+28]
  03f32	83 ec 08	 sub	 esp, 8
  03f35	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  03f3a	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  03f3f	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  03f42	51		 push	 ecx
  03f43	e8 00 00 00 00	 call	 _fprintf
  03f48	83 c4 10	 add	 esp, 16			; 00000010H

; 781  : 		fprintf(fout,"%g,",waypoint_database[i].fw_velocity);

  03f4b	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f4f	f3 0f 5a 80 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+32]
  03f57	83 ec 08	 sub	 esp, 8
  03f5a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  03f5f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  03f64	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  03f67	51		 push	 ecx
  03f68	e8 00 00 00 00	 call	 _fprintf
  03f6d	83 c4 10	 add	 esp, 16			; 00000010H

; 782  : 		fprintf(fout,"%d,",waypoint_database[i].fw_criteria_last_to_reach);

  03f70	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f74	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03f7a	83 e1 01	 and	 ecx, 1
  03f7d	51		 push	 ecx
  03f7e	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03f83	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03f86	52		 push	 edx
  03f87	e8 00 00 00 00	 call	 _fprintf
  03f8c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 783  : 		fprintf(fout,"%d,",waypoint_database[i].fw_criteria_transmit_recon);

  03f8f	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03f93	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03f99	d1 e9		 shr	 ecx, 1
  03f9b	83 e1 01	 and	 ecx, 1
  03f9e	51		 push	 ecx
  03f9f	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03fa4	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03fa7	52		 push	 edx
  03fa8	e8 00 00 00 00	 call	 _fprintf
  03fad	83 c4 0c	 add	 esp, 12			; 0000000cH

; 784  : 		fprintf(fout,"%d,",waypoint_database[i].fw_position_type);

  03fb0	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03fb4	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03fba	c1 e9 02	 shr	 ecx, 2
  03fbd	83 e1 03	 and	 ecx, 3
  03fc0	51		 push	 ecx
  03fc1	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03fc6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03fc9	52		 push	 edx
  03fca	e8 00 00 00 00	 call	 _fprintf
  03fcf	83 c4 0c	 add	 esp, 12			; 0000000cH

; 785  : 		fprintf(fout,"%d,",waypoint_database[i].fw_movement_type);

  03fd2	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03fd6	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+36]
  03fdc	c1 e9 04	 shr	 ecx, 4
  03fdf	83 e1 07	 and	 ecx, 7
  03fe2	51		 push	 ecx
  03fe3	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  03fe8	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  03feb	52		 push	 edx
  03fec	e8 00 00 00 00	 call	 _fprintf
  03ff1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 786  : 		fprintf(fout,"%g,",waypoint_database[i].hc_minimum_previous_waypoint_distance);

  03ff4	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  03ff8	f3 0f 5a 80 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+40]
  04000	83 ec 08	 sub	 esp, 8
  04003	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04008	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0400d	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04010	51		 push	 ecx
  04011	e8 00 00 00 00	 call	 _fprintf
  04016	83 c4 10	 add	 esp, 16			; 00000010H

; 787  : 		fprintf(fout,"%g,",waypoint_database[i].hc_action_radius);

  04019	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0401d	f3 0f 5a 80 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+44]
  04025	83 ec 08	 sub	 esp, 8
  04028	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0402d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04032	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04035	51		 push	 ecx
  04036	e8 00 00 00 00	 call	 _fprintf
  0403b	83 c4 10	 add	 esp, 16			; 00000010H

; 788  : 		fprintf(fout,"%g,",waypoint_database[i].hc_reached_radius);

  0403e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04042	f3 0f 5a 80 30
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+48]
  0404a	83 ec 08	 sub	 esp, 8
  0404d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04052	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04057	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0405a	51		 push	 ecx
  0405b	e8 00 00 00 00	 call	 _fprintf
  04060	83 c4 10	 add	 esp, 16			; 00000010H

; 789  : 		fprintf(fout,"%g,",waypoint_database[i].hc_velocity);

  04063	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04067	f3 0f 5a 80 34
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+52]
  0406f	83 ec 08	 sub	 esp, 8
  04072	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04077	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0407c	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0407f	51		 push	 ecx
  04080	e8 00 00 00 00	 call	 _fprintf
  04085	83 c4 10	 add	 esp, 16			; 00000010H

; 790  : 		fprintf(fout,"%d,",waypoint_database[i].hc_criteria_last_to_reach);

  04088	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0408c	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  04092	83 e1 01	 and	 ecx, 1
  04095	51		 push	 ecx
  04096	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0409b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0409e	52		 push	 edx
  0409f	e8 00 00 00 00	 call	 _fprintf
  040a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 791  : 		fprintf(fout,"%d,",waypoint_database[i].hc_criteria_transmit_recon);

  040a7	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040ab	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  040b1	d1 e9		 shr	 ecx, 1
  040b3	83 e1 01	 and	 ecx, 1
  040b6	51		 push	 ecx
  040b7	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  040bc	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  040bf	52		 push	 edx
  040c0	e8 00 00 00 00	 call	 _fprintf
  040c5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 792  : 		fprintf(fout,"%d,",waypoint_database[i].hc_position_type);

  040c8	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040cc	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  040d2	c1 e9 02	 shr	 ecx, 2
  040d5	83 e1 03	 and	 ecx, 3
  040d8	51		 push	 ecx
  040d9	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  040de	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  040e1	52		 push	 edx
  040e2	e8 00 00 00 00	 call	 _fprintf
  040e7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 793  : 		fprintf(fout,"%d,",waypoint_database[i].hc_movement_type);

  040ea	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  040ee	8b 88 38 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+56]
  040f4	c1 e9 04	 shr	 ecx, 4
  040f7	83 e1 07	 and	 ecx, 7
  040fa	51		 push	 ecx
  040fb	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  04100	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  04103	52		 push	 edx
  04104	e8 00 00 00 00	 call	 _fprintf
  04109	83 c4 0c	 add	 esp, 12			; 0000000cH

; 794  : 		fprintf(fout,"%g,",waypoint_database[i].rv_minimum_previous_waypoint_distance);

  0410c	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04110	f3 0f 5a 80 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+60]
  04118	83 ec 08	 sub	 esp, 8
  0411b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04120	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04125	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04128	51		 push	 ecx
  04129	e8 00 00 00 00	 call	 _fprintf
  0412e	83 c4 10	 add	 esp, 16			; 00000010H

; 795  : 		fprintf(fout,"%g,",waypoint_database[i].rv_action_radius);

  04131	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04135	f3 0f 5a 80 40
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+64]
  0413d	83 ec 08	 sub	 esp, 8
  04140	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04145	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0414a	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0414d	51		 push	 ecx
  0414e	e8 00 00 00 00	 call	 _fprintf
  04153	83 c4 10	 add	 esp, 16			; 00000010H

; 796  : 		fprintf(fout,"%g,",waypoint_database[i].rv_reached_radius);

  04156	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0415a	f3 0f 5a 80 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+68]
  04162	83 ec 08	 sub	 esp, 8
  04165	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0416a	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0416f	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04172	51		 push	 ecx
  04173	e8 00 00 00 00	 call	 _fprintf
  04178	83 c4 10	 add	 esp, 16			; 00000010H

; 797  : 		fprintf(fout,"%g,",waypoint_database[i].rv_velocity);

  0417b	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0417f	f3 0f 5a 80 48
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+72]
  04187	83 ec 08	 sub	 esp, 8
  0418a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0418f	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04194	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04197	51		 push	 ecx
  04198	e8 00 00 00 00	 call	 _fprintf
  0419d	83 c4 10	 add	 esp, 16			; 00000010H

; 798  : 		fprintf(fout,"%d,",waypoint_database[i].rv_criteria_last_to_reach);

  041a0	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041a4	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  041aa	83 e1 01	 and	 ecx, 1
  041ad	51		 push	 ecx
  041ae	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  041b3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  041b6	52		 push	 edx
  041b7	e8 00 00 00 00	 call	 _fprintf
  041bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 799  : 		fprintf(fout,"%d,",waypoint_database[i].rv_criteria_transmit_recon);

  041bf	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041c3	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  041c9	d1 e9		 shr	 ecx, 1
  041cb	83 e1 01	 and	 ecx, 1
  041ce	51		 push	 ecx
  041cf	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  041d4	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  041d7	52		 push	 edx
  041d8	e8 00 00 00 00	 call	 _fprintf
  041dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 800  : 		fprintf(fout,"%d,",waypoint_database[i].rv_position_type);

  041e0	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  041e4	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  041ea	c1 e9 02	 shr	 ecx, 2
  041ed	83 e1 03	 and	 ecx, 3
  041f0	51		 push	 ecx
  041f1	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  041f6	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  041f9	52		 push	 edx
  041fa	e8 00 00 00 00	 call	 _fprintf
  041ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 801  : 		fprintf(fout,"%d,",waypoint_database[i].rv_movement_type);

  04202	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04206	8b 88 4c 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+76]
  0420c	c1 e9 04	 shr	 ecx, 4
  0420f	83 e1 07	 and	 ecx, 7
  04212	51		 push	 ecx
  04213	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  04218	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0421b	52		 push	 edx
  0421c	e8 00 00 00 00	 call	 _fprintf
  04221	83 c4 0c	 add	 esp, 12			; 0000000cH

; 802  : 		fprintf(fout,"%g,",waypoint_database[i].sh_minimum_previous_waypoint_distance);

  04224	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04228	f3 0f 5a 80 50
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+80]
  04230	83 ec 08	 sub	 esp, 8
  04233	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04238	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  0423d	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04240	51		 push	 ecx
  04241	e8 00 00 00 00	 call	 _fprintf
  04246	83 c4 10	 add	 esp, 16			; 00000010H

; 803  : 		fprintf(fout,"%g,",waypoint_database[i].sh_action_radius);

  04249	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0424d	f3 0f 5a 80 54
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+84]
  04255	83 ec 08	 sub	 esp, 8
  04258	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0425d	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04262	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04265	51		 push	 ecx
  04266	e8 00 00 00 00	 call	 _fprintf
  0426b	83 c4 10	 add	 esp, 16			; 00000010H

; 804  : 		fprintf(fout,"%g,",waypoint_database[i].sh_reached_radius);

  0426e	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04272	f3 0f 5a 80 58
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+88]
  0427a	83 ec 08	 sub	 esp, 8
  0427d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04282	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  04287	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  0428a	51		 push	 ecx
  0428b	e8 00 00 00 00	 call	 _fprintf
  04290	83 c4 10	 add	 esp, 16			; 00000010H

; 805  : 		fprintf(fout,"%g,",waypoint_database[i].sh_velocity);

  04293	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  04297	f3 0f 5a 80 5c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+92]
  0429f	83 ec 08	 sub	 esp, 8
  042a2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  042a7	68 00 00 00 00	 push	 OFFSET ??_C@_03DNPOMJOE@?$CFg?0@
  042ac	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  042af	51		 push	 ecx
  042b0	e8 00 00 00 00	 call	 _fprintf
  042b5	83 c4 10	 add	 esp, 16			; 00000010H

; 806  : 		fprintf(fout,"%d,",waypoint_database[i].sh_criteria_last_to_reach);

  042b8	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  042bc	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  042c2	83 e1 01	 and	 ecx, 1
  042c5	51		 push	 ecx
  042c6	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  042cb	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  042ce	52		 push	 edx
  042cf	e8 00 00 00 00	 call	 _fprintf
  042d4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 807  : 		fprintf(fout,"%d,",waypoint_database[i].sh_criteria_transmit_recon);

  042d7	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  042db	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  042e1	d1 e9		 shr	 ecx, 1
  042e3	83 e1 01	 and	 ecx, 1
  042e6	51		 push	 ecx
  042e7	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  042ec	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  042ef	52		 push	 edx
  042f0	e8 00 00 00 00	 call	 _fprintf
  042f5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 808  : 		fprintf(fout,"%d,",waypoint_database[i].sh_position_type);

  042f8	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  042fc	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  04302	c1 e9 02	 shr	 ecx, 2
  04305	83 e1 03	 and	 ecx, 3
  04308	51		 push	 ecx
  04309	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  0430e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  04311	52		 push	 edx
  04312	e8 00 00 00 00	 call	 _fprintf
  04317	83 c4 0c	 add	 esp, 12			; 0000000cH

; 809  : 		fprintf(fout,"%d\n",waypoint_database[i].sh_movement_type);

  0431a	6b 45 f8 64	 imul	 eax, DWORD PTR _i$[ebp], 100
  0431e	8b 88 60 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+96]
  04324	c1 e9 04	 shr	 ecx, 4
  04327	83 e1 07	 and	 ecx, 7
  0432a	51		 push	 ecx
  0432b	68 00 00 00 00	 push	 OFFSET ??_C@_03PMGGPEJJ@?$CFd?6@
  04330	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  04333	52		 push	 edx
  04334	e8 00 00 00 00	 call	 _fprintf
  04339	83 c4 0c	 add	 esp, 12			; 0000000cH

; 810  : 	}

  0433c	e9 06 fa ff ff	 jmp	 $LN22@DumpGWutIn
$LN23@DumpGWutIn:

; 811  : 
; 812  : 	//GUIDE CRITERIA
; 813  : 	fprintf(fout,"[GUIDE CRITERIA]\n");

  04341	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IMGFEMAB@?$FLGUIDE?5CRITERIA?$FN?6@
  04346	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04349	50		 push	 eax
  0434a	e8 00 00 00 00	 call	 _fprintf
  0434f	83 c4 08	 add	 esp, 8

; 814  : 	if (WRITE_HEADER) {

  04352	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  04359	0f 84 60 01 00
	00		 je	 $LN60@DumpGWutIn

; 815  : 	fprintf(fout,"%s,","evade_fire");

  0435f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GKOAHKMI@evade_fire@
  04364	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04369	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0436c	50		 push	 eax
  0436d	e8 00 00 00 00	 call	 _fprintf
  04372	83 c4 0c	 add	 esp, 12			; 0000000cH

; 816  : 	fprintf(fout,"%s,","follow_formation");

  04375	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MIINBMP@follow_formation@
  0437a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0437f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04382	50		 push	 eax
  04383	e8 00 00 00 00	 call	 _fprintf
  04388	83 c4 0c	 add	 esp, 12			; 0000000cH

; 817  : 	fprintf(fout,"%s,","position_type");

  0438b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ODADLCJE@position_type@
  04390	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04395	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04398	50		 push	 eax
  04399	e8 00 00 00 00	 call	 _fprintf
  0439e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 818  : 	fprintf(fout,"%s,","terrain_follow_mode");

  043a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GPEOGHOC@terrain_follow_mode@
  043a6	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  043ab	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  043ae	50		 push	 eax
  043af	e8 00 00 00 00	 call	 _fprintf
  043b4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 819  : 	fprintf(fout,"%s,","Radius_valid");

  043b7	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OEGNPOAB@Radius_valid@
  043bc	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  043c1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  043c4	50		 push	 eax
  043c5	e8 00 00 00 00	 call	 _fprintf
  043ca	83 c4 0c	 add	 esp, 12			; 0000000cH

; 820  : 	fprintf(fout,"%s,","Radius_value");

  043cd	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OIEKJFFE@Radius_value@
  043d2	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  043d7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  043da	50		 push	 eax
  043db	e8 00 00 00 00	 call	 _fprintf
  043e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 821  : 	fprintf(fout,"%s,","Heading_valid");

  043e3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OECMCAIJ@Heading_valid@
  043e8	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  043ed	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  043f0	50		 push	 eax
  043f1	e8 00 00 00 00	 call	 _fprintf
  043f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 822  : 	fprintf(fout,"%s,","Heading_value");

  043f9	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OIALELNM@Heading_value@
  043fe	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04403	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04406	50		 push	 eax
  04407	e8 00 00 00 00	 call	 _fprintf
  0440c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 823  : 	fprintf(fout,"%s,","Altitude_valid");

  0440f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GOHOCMBA@Altitude_valid@
  04414	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04419	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0441c	50		 push	 eax
  0441d	e8 00 00 00 00	 call	 _fprintf
  04422	83 c4 0c	 add	 esp, 12			; 0000000cH

; 824  : 	fprintf(fout,"%s,","Altitude_value");

  04425	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GCFJEHEF@Altitude_value@
  0442a	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0442f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04432	50		 push	 eax
  04433	e8 00 00 00 00	 call	 _fprintf
  04438	83 c4 0c	 add	 esp, 12			; 0000000cH

; 825  : 	fprintf(fout,"%s,","Transmit_Data_valid");

  0443b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HBAFGJOD@Transmit_Data_valid@
  04440	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04445	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04448	50		 push	 eax
  04449	e8 00 00 00 00	 call	 _fprintf
  0444e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 826  : 	fprintf(fout,"%s,","Transmit_Data_value");

  04451	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HNCCACLG@Transmit_Data_value@
  04456	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0445b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0445e	50		 push	 eax
  0445f	e8 00 00 00 00	 call	 _fprintf
  04464	83 c4 0c	 add	 esp, 12			; 0000000cH

; 827  : 	fprintf(fout,"%s,","Last_To_Reach_valid");

  04467	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BKOIBMOJ@Last_To_Reach_valid@
  0446c	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04471	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04474	50		 push	 eax
  04475	e8 00 00 00 00	 call	 _fprintf
  0447a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 828  : 	fprintf(fout,"%s,","Last_To_Reach_value");

  0447d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BGMPHHLM@Last_To_Reach_value@
  04482	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04487	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0448a	50		 push	 eax
  0448b	e8 00 00 00 00	 call	 _fprintf
  04490	83 c4 0c	 add	 esp, 12			; 0000000cH

; 829  : 	fprintf(fout,"%s,","Weapon_Vector_valid");

  04493	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@ENHEGHOJ@Weapon_Vector_valid@
  04498	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  0449d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  044a0	50		 push	 eax
  044a1	e8 00 00 00 00	 call	 _fprintf
  044a6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 830  : 	fprintf(fout,"%s\n","Weapon_Vector_value");

  044a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EBFDAMLM@Weapon_Vector_value@
  044ae	68 00 00 00 00	 push	 OFFSET ??_C@_03OFAPEBGM@?$CFs?6@
  044b3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  044b6	50		 push	 eax
  044b7	e8 00 00 00 00	 call	 _fprintf
  044bc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN60@DumpGWutIn:

; 831  : 	}
; 832  : 
; 833  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_GUIDES; i++)

  044bf	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  044c6	eb 09		 jmp	 SHORT $LN27@DumpGWutIn
$LN25@DumpGWutIn:
  044c8	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  044cb	83 c0 01	 add	 eax, 1
  044ce	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN27@DumpGWutIn:
  044d1	83 7d f8 16	 cmp	 DWORD PTR _i$[ebp], 22	; 00000016H
  044d5	0f 8d 03 05 00
	00		 jge	 $LN26@DumpGWutIn

; 834  : 	{
; 835  : 		fprintf(fout,"%d",i);

  044db	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  044de	50		 push	 eax
  044df	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  044e4	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  044e7	51		 push	 ecx
  044e8	e8 00 00 00 00	 call	 _fprintf
  044ed	83 c4 0c	 add	 esp, 12			; 0000000cH

; 836  : 		switch (i) {

  044f0	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  044f3	89 45 ac	 mov	 DWORD PTR tv3355[ebp], eax
  044f6	83 7d ac 15	 cmp	 DWORD PTR tv3355[ebp], 21 ; 00000015H
  044fa	0f 87 48 02 00
	00		 ja	 $LN28@DumpGWutIn
  04500	8b 4d ac	 mov	 ecx, DWORD PTR tv3355[ebp]
  04503	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN121@DumpGWutIn[ecx*4]
$LN61@DumpGWutIn:

; 837  : 		case 0 : fprintf(fout,",%s","Navigation_Direct");            break;

  0450a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GIMAOECP@Navigation_Direct@
  0450f	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04514	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04517	50		 push	 eax
  04518	e8 00 00 00 00	 call	 _fprintf
  0451d	83 c4 0c	 add	 esp, 12			; 0000000cH
  04520	e9 23 02 00 00	 jmp	 $LN28@DumpGWutIn
$LN62@DumpGWutIn:

; 838  : 		case 1 : fprintf(fout,",%s","Navigation_Virtual");           break;

  04525	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GOHADIKK@Navigation_Virtual@
  0452a	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0452f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04532	50		 push	 eax
  04533	e8 00 00 00 00	 call	 _fprintf
  04538	83 c4 0c	 add	 esp, 12			; 0000000cH
  0453b	e9 08 02 00 00	 jmp	 $LN28@DumpGWutIn
$LN63@DumpGWutIn:

; 839  : 		case 2 : fprintf(fout,",%s","Navigation_Routed");            break;

  04540	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KOFNCMMP@Navigation_Routed@
  04545	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0454a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0454d	50		 push	 eax
  0454e	e8 00 00 00 00	 call	 _fprintf
  04553	83 c4 0c	 add	 esp, 12			; 0000000cH
  04556	e9 ed 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN64@DumpGWutIn:

; 840  : 		case 3 : fprintf(fout,",%s","Navigation_Altitude");          break;

  0455b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JODGBIEP@Navigation_Altitude@
  04560	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04565	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04568	50		 push	 eax
  04569	e8 00 00 00 00	 call	 _fprintf
  0456e	83 c4 0c	 add	 esp, 12			; 0000000cH
  04571	e9 d2 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN65@DumpGWutIn:

; 841  : 		case 4 : fprintf(fout,",%s","Landing_Direct");               break;

  04576	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CIJFCCND@Landing_Direct@
  0457b	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04580	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04583	50		 push	 eax
  04584	e8 00 00 00 00	 call	 _fprintf
  04589	83 c4 0c	 add	 esp, 12			; 0000000cH
  0458c	e9 b7 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN66@DumpGWutIn:

; 842  : 		case 5 : fprintf(fout,",%s","Landed");                       break;

  04591	68 00 00 00 00	 push	 OFFSET ??_C@_06PPFLONGD@Landed@
  04596	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0459b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0459e	50		 push	 eax
  0459f	e8 00 00 00 00	 call	 _fprintf
  045a4	83 c4 0c	 add	 esp, 12			; 0000000cH
  045a7	e9 9c 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN67@DumpGWutIn:

; 843  : 		case 6 : fprintf(fout,",%s","Attack_AA_Move_Six");           break;

  045ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@IFIHKDND@Attack_AA_Move_Six@
  045b1	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  045b6	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  045b9	50		 push	 eax
  045ba	e8 00 00 00 00	 call	 _fprintf
  045bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  045c2	e9 81 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN68@DumpGWutIn:

; 844  : 		case 7 : fprintf(fout,",%s","Attack_AA_Move_Circle");        break;

  045c7	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CEIDADGB@Attack_AA_Move_Circle@
  045cc	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  045d1	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  045d4	50		 push	 eax
  045d5	e8 00 00 00 00	 call	 _fprintf
  045da	83 c4 0c	 add	 esp, 12			; 0000000cH
  045dd	e9 66 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN69@DumpGWutIn:

; 845  : 		case 8 : fprintf(fout,",%s","Attack_AA_Fire_Intercept");     break;

  045e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IDDMCDNB@Attack_AA_Fire_Intercept@
  045e7	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  045ec	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  045ef	50		 push	 eax
  045f0	e8 00 00 00 00	 call	 _fprintf
  045f5	83 c4 0c	 add	 esp, 12			; 0000000cH
  045f8	e9 4b 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN70@DumpGWutIn:

; 846  : 		case 9 : fprintf(fout,",%s","Attack_AG_Approach");           break;

  045fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OPMIKBDB@Attack_AG_Approach@
  04602	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04607	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0460a	50		 push	 eax
  0460b	e8 00 00 00 00	 call	 _fprintf
  04610	83 c4 0c	 add	 esp, 12			; 0000000cH
  04613	e9 30 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN71@DumpGWutIn:

; 847  : 		case 10: fprintf(fout,",%s","Attack_AG_Seek_Cover");         break;

  04618	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BBBGLPOB@Attack_AG_Seek_Cover@
  0461d	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04622	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04625	50		 push	 eax
  04626	e8 00 00 00 00	 call	 _fprintf
  0462b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0462e	e9 15 01 00 00	 jmp	 $LN28@DumpGWutIn
$LN72@DumpGWutIn:

; 848  : 		case 11: fprintf(fout,",%s","Attack_AG_Fly_To_Cover");       break;

  04633	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KLFBGBHB@Attack_AG_Fly_To_Cover@
  04638	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0463d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04640	50		 push	 eax
  04641	e8 00 00 00 00	 call	 _fprintf
  04646	83 c4 0c	 add	 esp, 12			; 0000000cH
  04649	e9 fa 00 00 00	 jmp	 $LN28@DumpGWutIn
$LN73@DumpGWutIn:

; 849  : 		case 12: fprintf(fout,",%s","Attack_AG_Take_Cover");         break;

  0464e	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OMIOMDLI@Attack_AG_Take_Cover@
  04653	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04658	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0465b	50		 push	 eax
  0465c	e8 00 00 00 00	 call	 _fprintf
  04661	83 c4 0c	 add	 esp, 12			; 0000000cH
  04664	e9 df 00 00 00	 jmp	 $LN28@DumpGWutIn
$LN74@DumpGWutIn:

; 850  : 		case 13: fprintf(fout,",%s","Attack_AG_Climb");              break;

  04669	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OADKGPHF@Attack_AG_Climb@
  0466e	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04673	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04676	50		 push	 eax
  04677	e8 00 00 00 00	 call	 _fprintf
  0467c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0467f	e9 c4 00 00 00	 jmp	 $LN28@DumpGWutIn
$LN75@DumpGWutIn:

; 851  : 		case 14: fprintf(fout,",%s","Attack_AG_Dive");               break;

  04684	68 00 00 00 00	 push	 OFFSET ??_C@_0P@BGGHCJBJ@Attack_AG_Dive@
  04689	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0468e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04691	50		 push	 eax
  04692	e8 00 00 00 00	 call	 _fprintf
  04697	83 c4 0c	 add	 esp, 12			; 0000000cH
  0469a	e9 a9 00 00 00	 jmp	 $LN28@DumpGWutIn
$LN76@DumpGWutIn:

; 852  : 		case 15: fprintf(fout,",%s","Attack_AG_Fire");               break;

  0469f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GLKONCKF@Attack_AG_Fire@
  046a4	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  046a9	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  046ac	50		 push	 eax
  046ad	e8 00 00 00 00	 call	 _fprintf
  046b2	83 c4 0c	 add	 esp, 12			; 0000000cH
  046b5	e9 8e 00 00 00	 jmp	 $LN28@DumpGWutIn
$LN77@DumpGWutIn:

; 853  : 		case 16: fprintf(fout,",%s","Attack_AG_Fire_Virtual");       break;

  046ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KFINIPEB@Attack_AG_Fire_Virtual@
  046bf	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  046c4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  046c7	50		 push	 eax
  046c8	e8 00 00 00 00	 call	 _fprintf
  046cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  046d0	eb 76		 jmp	 SHORT $LN28@DumpGWutIn
$LN78@DumpGWutIn:

; 854  : 		case 17: fprintf(fout,",%s","Attack_AG_Disengage");          break;

  046d2	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GGEOGEAH@Attack_AG_Disengage@
  046d7	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  046dc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  046df	50		 push	 eax
  046e0	e8 00 00 00 00	 call	 _fprintf
  046e5	83 c4 0c	 add	 esp, 12			; 0000000cH
  046e8	eb 5e		 jmp	 SHORT $LN28@DumpGWutIn
$LN79@DumpGWutIn:

; 855  : 		case 18: fprintf(fout,",%s","Attack_AG_Disengage_Virtual");  break;

  046ea	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@OAJEMKBJ@Attack_AG_Disengage_Virtual@
  046ef	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  046f4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  046f7	50		 push	 eax
  046f8	e8 00 00 00 00	 call	 _fprintf
  046fd	83 c4 0c	 add	 esp, 12			; 0000000cH
  04700	eb 46		 jmp	 SHORT $LN28@DumpGWutIn
$LN80@DumpGWutIn:

; 856  : 		case 19: fprintf(fout,",%s","Attack_AG_Egress");             break;

  04702	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OCOKBHCL@Attack_AG_Egress@
  04707	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0470c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0470f	50		 push	 eax
  04710	e8 00 00 00 00	 call	 _fprintf
  04715	83 c4 0c	 add	 esp, 12			; 0000000cH
  04718	eb 2e		 jmp	 SHORT $LN28@DumpGWutIn
$LN81@DumpGWutIn:

; 857  : 		case 20: fprintf(fout,",%s","Attack_AG_Hasty_Fire");         break;

  0471a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@OPFDLBPB@Attack_AG_Hasty_Fire@
  0471f	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  04724	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04727	50		 push	 eax
  04728	e8 00 00 00 00	 call	 _fprintf
  0472d	83 c4 0c	 add	 esp, 12			; 0000000cH
  04730	eb 16		 jmp	 SHORT $LN28@DumpGWutIn
$LN82@DumpGWutIn:

; 858  : 		case 21: fprintf(fout,",%s","Attack_AG_Hasty_Take_Cover");    break;

  04732	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DHDDPJOC@Attack_AG_Hasty_Take_Cover@
  04737	68 00 00 00 00	 push	 OFFSET ??_C@_03OMLJOFL@?0?$CFs@
  0473c	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0473f	50		 push	 eax
  04740	e8 00 00 00 00	 call	 _fprintf
  04745	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN28@DumpGWutIn:

; 859  : 		}
; 860  : 
; 861  : 		fprintf(fout,",%d",guide_database[i].evade_fire);

  04748	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0474c	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  04752	83 e1 01	 and	 ecx, 1
  04755	51		 push	 ecx
  04756	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  0475b	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0475e	52		 push	 edx
  0475f	e8 00 00 00 00	 call	 _fprintf
  04764	83 c4 0c	 add	 esp, 12			; 0000000cH

; 862  : 		fprintf(fout,",%d",guide_database[i].follow_formation);

  04767	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0476b	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  04771	d1 e9		 shr	 ecx, 1
  04773	83 e1 01	 and	 ecx, 1
  04776	51		 push	 ecx
  04777	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  0477c	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0477f	52		 push	 edx
  04780	e8 00 00 00 00	 call	 _fprintf
  04785	83 c4 0c	 add	 esp, 12			; 0000000cH

; 863  : 		fprintf(fout,",%d",guide_database[i].position_type);

  04788	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0478c	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  04792	c1 e9 02	 shr	 ecx, 2
  04795	83 e1 07	 and	 ecx, 7
  04798	51		 push	 ecx
  04799	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  0479e	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  047a1	52		 push	 edx
  047a2	e8 00 00 00 00	 call	 _fprintf
  047a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 864  : 		fprintf(fout,",%d",guide_database[i].terrain_follow_mode);

  047aa	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  047ae	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax]
  047b4	c1 e9 05	 shr	 ecx, 5
  047b7	83 e1 03	 and	 ecx, 3
  047ba	51		 push	 ecx
  047bb	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  047c0	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  047c3	52		 push	 edx
  047c4	e8 00 00 00 00	 call	 _fprintf
  047c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 865  : 		fprintf(fout,",%d",guide_database[i].criteria[0].valid);

  047cc	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  047d0	b9 08 00 00 00	 mov	 ecx, 8
  047d5	6b d1 00	 imul	 edx, ecx, 0
  047d8	8b 84 10 04 00
	00 00		 mov	 eax, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+4]
  047df	50		 push	 eax
  047e0	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  047e5	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  047e8	51		 push	 ecx
  047e9	e8 00 00 00 00	 call	 _fprintf
  047ee	83 c4 0c	 add	 esp, 12			; 0000000cH

; 866  : 		fprintf(fout,",%g",guide_database[i].criteria[0].value);

  047f1	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  047f5	b9 08 00 00 00	 mov	 ecx, 8
  047fa	6b d1 00	 imul	 edx, ecx, 0
  047fd	f3 0f 5a 84 10
	08 00 00 00	 cvtss2sd xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]
  04806	83 ec 08	 sub	 esp, 8
  04809	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0480e	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  04813	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04816	50		 push	 eax
  04817	e8 00 00 00 00	 call	 _fprintf
  0481c	83 c4 10	 add	 esp, 16			; 00000010H

; 867  : 		fprintf(fout,",%d",guide_database[i].criteria[1].valid);

  0481f	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04823	b9 08 00 00 00	 mov	 ecx, 8
  04828	c1 e1 00	 shl	 ecx, 0
  0482b	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+4]
  04832	52		 push	 edx
  04833	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  04838	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0483b	50		 push	 eax
  0483c	e8 00 00 00 00	 call	 _fprintf
  04841	83 c4 0c	 add	 esp, 12			; 0000000cH

; 868  : 		fprintf(fout,",%g",deg(guide_database[i].criteria[1].value));

  04844	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04848	b9 08 00 00 00	 mov	 ecx, 8
  0484d	c1 e1 00	 shl	 ecx, 0
  04850	f3 0f 10 84 08
	08 00 00 00	 movss	 xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8]
  04859	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  04861	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  04865	83 ec 08	 sub	 esp, 8
  04868	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0486d	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  04872	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  04875	52		 push	 edx
  04876	e8 00 00 00 00	 call	 _fprintf
  0487b	83 c4 10	 add	 esp, 16			; 00000010H

; 869  : 		fprintf(fout,",%d",guide_database[i].criteria[2].valid);

  0487e	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04882	b9 08 00 00 00	 mov	 ecx, 8
  04887	d1 e1		 shl	 ecx, 1
  04889	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+4]
  04890	52		 push	 edx
  04891	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  04896	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04899	50		 push	 eax
  0489a	e8 00 00 00 00	 call	 _fprintf
  0489f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 870  : 		fprintf(fout,",%g",guide_database[i].criteria[2].value);

  048a2	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  048a6	b9 08 00 00 00	 mov	 ecx, 8
  048ab	d1 e1		 shl	 ecx, 1
  048ad	f3 0f 5a 84 08
	08 00 00 00	 cvtss2sd xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8]
  048b6	83 ec 08	 sub	 esp, 8
  048b9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  048be	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  048c3	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  048c6	52		 push	 edx
  048c7	e8 00 00 00 00	 call	 _fprintf
  048cc	83 c4 10	 add	 esp, 16			; 00000010H

; 871  : 		fprintf(fout,",%d",guide_database[i].criteria[3].valid);

  048cf	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  048d3	b9 08 00 00 00	 mov	 ecx, 8
  048d8	6b d1 03	 imul	 edx, ecx, 3
  048db	8b 84 10 04 00
	00 00		 mov	 eax, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+4]
  048e2	50		 push	 eax
  048e3	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  048e8	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  048eb	51		 push	 ecx
  048ec	e8 00 00 00 00	 call	 _fprintf
  048f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 872  : 		fprintf(fout,",%g",guide_database[i].criteria[3].value);

  048f4	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  048f8	b9 08 00 00 00	 mov	 ecx, 8
  048fd	6b d1 03	 imul	 edx, ecx, 3
  04900	f3 0f 5a 84 10
	08 00 00 00	 cvtss2sd xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]
  04909	83 ec 08	 sub	 esp, 8
  0490c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04911	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  04916	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04919	50		 push	 eax
  0491a	e8 00 00 00 00	 call	 _fprintf
  0491f	83 c4 10	 add	 esp, 16			; 00000010H

; 873  : 		fprintf(fout,",%d",guide_database[i].criteria[4].valid);

  04922	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04926	b9 08 00 00 00	 mov	 ecx, 8
  0492b	c1 e1 02	 shl	 ecx, 2
  0492e	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+4]
  04935	52		 push	 edx
  04936	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  0493b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  0493e	50		 push	 eax
  0493f	e8 00 00 00 00	 call	 _fprintf
  04944	83 c4 0c	 add	 esp, 12			; 0000000cH

; 874  : 		fprintf(fout,",%g",guide_database[i].criteria[4].value);

  04947	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0494b	b9 08 00 00 00	 mov	 ecx, 8
  04950	c1 e1 02	 shl	 ecx, 2
  04953	f3 0f 5a 84 08
	08 00 00 00	 cvtss2sd xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+ecx+8]
  0495c	83 ec 08	 sub	 esp, 8
  0495f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04964	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  04969	8b 55 fc	 mov	 edx, DWORD PTR _fout$[ebp]
  0496c	52		 push	 edx
  0496d	e8 00 00 00 00	 call	 _fprintf
  04972	83 c4 10	 add	 esp, 16			; 00000010H

; 875  : 		fprintf(fout,",%d",guide_database[i].criteria[5].valid);

  04975	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  04979	b9 08 00 00 00	 mov	 ecx, 8
  0497e	6b d1 05	 imul	 edx, ecx, 5
  04981	8b 84 10 04 00
	00 00		 mov	 eax, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+4]
  04988	50		 push	 eax
  04989	68 00 00 00 00	 push	 OFFSET ??_C@_03LEIBKMN@?0?$CFd@
  0498e	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04991	51		 push	 ecx
  04992	e8 00 00 00 00	 call	 _fprintf
  04997	83 c4 0c	 add	 esp, 12			; 0000000cH

; 876  : 		fprintf(fout,",%g",guide_database[i].criteria[5].value);

  0499a	6b 45 f8 34	 imul	 eax, DWORD PTR _i$[ebp], 52
  0499e	b9 08 00 00 00	 mov	 ecx, 8
  049a3	6b d1 05	 imul	 edx, ecx, 5
  049a6	f3 0f 5a 84 10
	08 00 00 00	 cvtss2sd xmm0, DWORD PTR ?guide_database@@3PAUGUIDE_DATA@@A[eax+edx+8]
  049af	83 ec 08	 sub	 esp, 8
  049b2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  049b7	68 00 00 00 00	 push	 OFFSET ??_C@_03CAGFEJAO@?0?$CFg@
  049bc	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  049bf	50		 push	 eax
  049c0	e8 00 00 00 00	 call	 _fprintf
  049c5	83 c4 10	 add	 esp, 16			; 00000010H

; 877  : 		fprintf(fout,"\n");

  049c8	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  049cd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  049d0	50		 push	 eax
  049d1	e8 00 00 00 00	 call	 _fprintf
  049d6	83 c4 08	 add	 esp, 8

; 878  : 	}

  049d9	e9 ea fa ff ff	 jmp	 $LN25@DumpGWutIn
$LN26@DumpGWutIn:

; 879  : 
; 880  : 	//AMMO
; 881  : 	fprintf(fout, "[AMMO]\n");

  049de	68 00 00 00 00	 push	 OFFSET ??_C@_07DOLECJID@?$FLAMMO?$FN?6@
  049e3	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  049e6	50		 push	 eax
  049e7	e8 00 00 00 00	 call	 _fprintf
  049ec	83 c4 08	 add	 esp, 8

; 882  : 	if (WRITE_HEADER) {

  049ef	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  049f6	74 22		 je	 SHORT $LN83@DumpGWutIn

; 883  : 	fprintf(fout, "Aircraft \\ Vehicle,min weapon config,max weapon config,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,");

  049f8	68 00 00 00 00	 push	 OFFSET ??_C@_0GI@MJEEBEGA@Aircraft?5?2?5Vehicle?0min?5weapon?5c@
  049fd	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04a00	50		 push	 eax
  04a01	e8 00 00 00 00	 call	 _fprintf
  04a06	83 c4 08	 add	 esp, 8

; 884  : 	fprintf(fout, "weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo,weapon,ammo\n");

  04a09	68 00 00 00 00	 push	 OFFSET ??_C@_0JN@FJNLEFNG@weapon?0ammo?0weapon?0ammo?0weapon?0@
  04a0e	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04a11	50		 push	 eax
  04a12	e8 00 00 00 00	 call	 _fprintf
  04a17	83 c4 08	 add	 esp, 8
$LN83@DumpGWutIn:

; 885  : 	}
; 886  : /* Don't write weapons configs, they are not in sync with the implementation, and
; 887  :  * were very little flexible in any case */
; 888  : #if 0
; 889  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_AIRCRAFT; i++)
; 890  : 	{
; 891  : 		//for each aircraft i
; 892  : 		int w[48], a[48];
; 893  : 		//w = weapon type number and a = amount
; 894  : 		int l = 0;
; 895  : 		int Found=0;
; 896  : 
; 897  : 		for (k = 0; k < 48; k++)
; 898  : 		{
; 899  : 			w[k] = 0; a[k] = 0;
; 900  : 		}
; 901  : 
; 902  : 		if (aircraft_database[i].max_weapon_config_type > 0)
; 903  : 		{
; 904  : 			fprintf(fout,"%d",i);
; 905  : 			fprintf(fout,",%s",aircraft_database[i].full_name);
; 906  : 			fprintf(fout,",%d",aircraft_database[i].min_weapon_config_type);
; 907  : 			fprintf(fout,",%d",aircraft_database[i].max_weapon_config_type);
; 908  : 			for (j = aircraft_database[i].min_weapon_config_type;j <= aircraft_database[i].max_weapon_config_type; j++)
; 909  : 			{
; 910  : 				// for each weapon config type of this aircraft i
; 911  : 				for (k = 0; k < NUM_WEAPON_PACKAGES; k++)
; 912  : 				{
; 913  : 					Found = 0;
; 914  : 					// for all packages in the config type j > 0
; 915  : 					if(weapon_config_database[j][k].sub_type > 0)
; 916  : 					{
; 917  : 						int m;
; 918  : 						int wtype = (int)weapon_config_database[j][k].sub_type;
; 919  : 
; 920  : 						if ((i < 6 || i == 20 || i == 21) &&
; 921  : 							(int)weapon_config_database[j][k].sub_type >= 30 &&
; 922  : 							(int)weapon_config_database[j][k].sub_type < 50)
; 923  : 						{
; 924  : 							int hd = (int)weapon_config_database[j][k].heading_depth;
; 925  : //ap,hi 0=1 2=3 4=5
; 926  : //ha,bh 0=1 2=3
; 927  : //co 0=1 5=8 6=9 7=10
; 928  : //ho 1=2 3=4
; 929  : 
; 930  : 							if (i == 0 || i == 1 || i == 4 || i == 5 || i == 20)
; 931  : 							{
; 932  : 								if (hd == 0) hd = 1;
; 933  : 								if (hd == 2) hd = 3;
; 934  : 								if (hd == 4) hd = 5;
; 935  : 							}
; 936  : 							if (i == 2)
; 937  : 							{
; 938  : 								if (hd == 0) hd = 1;
; 939  : 								if (hd == 5) hd = 8;
; 940  : 								if (hd == 6) hd = 9;
; 941  : 								if (hd == 10) hd = 7;
; 942  : 							}
; 943  : 							if ( i == 3 || i == 21)
; 944  : 							{
; 945  : 								if (hd == 1) hd = 2;
; 946  : 								if (hd == 3) hd = 4;
; 947  : 							}
; 948  : 
; 949  : 							wtype += 100*hd;
; 950  : 							// add pod weapon number
; 951  : 						}
; 952  : 
; 953  : 						for (m = 0; m < 48; m++)
; 954  : 							if (w[m] == wtype)
; 955  : 								Found = 1;
; 956  : 						// check is it is not found yet and add it
; 957  : 						if (!Found && l < 48)
; 958  : 						{
; 959  : 							w[l] = wtype;//(int)weapon_config_database[j][k].sub_type;
; 960  : 							a[l] = (int)weapon_config_database[j][k].number;
; 961  : 							l++;
; 962  : 						}
; 963  : 					}
; 964  : 				}
; 965  : 			}
; 966  : 			for (k = 0; k < 32; k++)
; 967  : 				if (w[k] > 0)
; 968  : 					fprintf(fout,",%d,%d",w[k],a[k]);
; 969  : 			fprintf(fout,"\n");
; 970  : 		}
; 971  : 	}
; 972  : 	for (i = 0; i < NUM_ENTITY_SUB_TYPE_VEHICLES; i++)
; 973  : 	{
; 974  : 		//for each aircraft i
; 975  : 		int w[32], a[32];
; 976  : 		int l = 0;
; 977  : 		int Found=0;
; 978  : 
; 979  : 		for (k = 0; k < 32; k++)
; 980  : 		{
; 981  : 			w[k] = 0; a[k] = 0;
; 982  : 		}
; 983  : 
; 984  : 		if (vehicle_database[i].max_weapon_config_type > 0)
; 985  : 		{
; 986  : 			fprintf(fout,"%d",i);
; 987  : 			fprintf(fout,",%s",vehicle_database[i].full_name);
; 988  : 			fprintf(fout,",%d",vehicle_database[i].min_weapon_config_type);
; 989  : 			fprintf(fout,",%d",vehicle_database[i].max_weapon_config_type);
; 990  : 			for (j = vehicle_database[i].min_weapon_config_type;j <= vehicle_database[i].max_weapon_config_type; j++)
; 991  : 			{
; 992  : 				// for each weapon config type of this vehicle i
; 993  : 				for (k = 0; k < NUM_WEAPON_PACKAGES; k++)
; 994  : 				{
; 995  : 					Found = 0;
; 996  : 					// for all packages in the config type j > 0
; 997  : 					if(weapon_config_database[j][k].sub_type > 0)
; 998  : 					{
; 999  : 						int m;
; 1000 : 						for (m = 0; m < 32; m++)
; 1001 : 							if (w[m] == (int)weapon_config_database[j][k].sub_type)
; 1002 : 								Found = 1;
; 1003 : 
; 1004 : 						// check is it is not found yet and add it
; 1005 : 						if (!Found && l < 32)
; 1006 : 						{
; 1007 : 							w[l] = (int)weapon_config_database[j][k].sub_type;
; 1008 : 							a[l] = (int)weapon_config_database[j][k].number;
; 1009 : 							l++;
; 1010 : 						}
; 1011 : 					}
; 1012 : 				}
; 1013 : 			}
; 1014 : 			for (k = 0; k < 32; k++)
; 1015 : 				if (w[k] > 0)
; 1016 : 					fprintf(fout,",%d,%d",w[k],a[k]);
; 1017 : 			fprintf(fout,"\n");
; 1018 : 		}
; 1019 : 	}
; 1020 : #endif
; 1021 : 
; 1022 : 	//RADAR
; 1023 : 	fprintf(fout,"[RADAR]\n");

  04a1a	68 00 00 00 00	 push	 OFFSET ??_C@_08BCFLBFEP@?$FLRADAR?$FN?6@
  04a1f	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04a22	50		 push	 eax
  04a23	e8 00 00 00 00	 call	 _fprintf
  04a28	83 c4 08	 add	 esp, 8

; 1024 : 	if (WRITE_HEADER)

  04a2b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  04a32	74 11		 je	 SHORT $LN84@DumpGWutIn

; 1025 : 		fprintf(fout,"Aircraft,Radar Range 1,Radar Range 2,Radar Range 3,Radar Range 4,Radar Range 5\n");

  04a34	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@NEPEELBH@Aircraft?0Radar?5Range?51?0Radar?5Ra@
  04a39	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04a3c	50		 push	 eax
  04a3d	e8 00 00 00 00	 call	 _fprintf
  04a42	83 c4 08	 add	 esp, 8
$LN84@DumpGWutIn:

; 1026 : 	fprintf(fout,"0,Comanche,%.0f,%.0f,%.0f,%.0f,%.0f\n",radar_range_comanche[0],radar_range_comanche[1],radar_range_comanche[2],radar_range_comanche[3],radar_range_comanche[4]);

  04a45	b8 04 00 00 00	 mov	 eax, 4
  04a4a	c1 e0 02	 shl	 eax, 2
  04a4d	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_comanche@@3PAMA[eax]
  04a55	83 ec 08	 sub	 esp, 8
  04a58	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04a5d	b9 04 00 00 00	 mov	 ecx, 4
  04a62	6b d1 03	 imul	 edx, ecx, 3
  04a65	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_comanche@@3PAMA[edx]
  04a6d	83 ec 08	 sub	 esp, 8
  04a70	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04a75	b8 04 00 00 00	 mov	 eax, 4
  04a7a	d1 e0		 shl	 eax, 1
  04a7c	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_comanche@@3PAMA[eax]
  04a84	83 ec 08	 sub	 esp, 8
  04a87	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04a8c	b9 04 00 00 00	 mov	 ecx, 4
  04a91	c1 e1 00	 shl	 ecx, 0
  04a94	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_comanche@@3PAMA[ecx]
  04a9c	83 ec 08	 sub	 esp, 8
  04a9f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04aa4	ba 04 00 00 00	 mov	 edx, 4
  04aa9	6b c2 00	 imul	 eax, edx, 0
  04aac	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_comanche@@3PAMA[eax]
  04ab4	83 ec 08	 sub	 esp, 8
  04ab7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04abc	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JFLFJHDL@0?0Comanche?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0@
  04ac1	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04ac4	51		 push	 ecx
  04ac5	e8 00 00 00 00	 call	 _fprintf
  04aca	83 c4 30	 add	 esp, 48			; 00000030H

; 1027 : 	fprintf(fout,"1,Apache,%.0f,%.0f,%.0f,%.0f,%.0f\n",radar_range_apache[0],radar_range_apache[1],radar_range_apache[2],radar_range_apache[3],radar_range_apache[4]);

  04acd	b8 04 00 00 00	 mov	 eax, 4
  04ad2	c1 e0 02	 shl	 eax, 2
  04ad5	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_apache@@3PAMA[eax]
  04add	83 ec 08	 sub	 esp, 8
  04ae0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04ae5	b9 04 00 00 00	 mov	 ecx, 4
  04aea	6b d1 03	 imul	 edx, ecx, 3
  04aed	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_apache@@3PAMA[edx]
  04af5	83 ec 08	 sub	 esp, 8
  04af8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04afd	b8 04 00 00 00	 mov	 eax, 4
  04b02	d1 e0		 shl	 eax, 1
  04b04	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_apache@@3PAMA[eax]
  04b0c	83 ec 08	 sub	 esp, 8
  04b0f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b14	b9 04 00 00 00	 mov	 ecx, 4
  04b19	c1 e1 00	 shl	 ecx, 0
  04b1c	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_apache@@3PAMA[ecx]
  04b24	83 ec 08	 sub	 esp, 8
  04b27	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b2c	ba 04 00 00 00	 mov	 edx, 4
  04b31	6b c2 00	 imul	 eax, edx, 0
  04b34	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_apache@@3PAMA[eax]
  04b3c	83 ec 08	 sub	 esp, 8
  04b3f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b44	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@KIJNGCJE@1?0Apache?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?4@
  04b49	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04b4c	51		 push	 ecx
  04b4d	e8 00 00 00 00	 call	 _fprintf
  04b52	83 c4 30	 add	 esp, 48			; 00000030H

; 1028 : 	fprintf(fout,"2,Black Hawk,%.0f,%.0f,%.0f,%.0f,%.0f\n",radar_range_blackhawk[0],radar_range_blackhawk[1],radar_range_blackhawk[2],radar_range_blackhawk[3],radar_range_blackhawk[4]);

  04b55	b8 04 00 00 00	 mov	 eax, 4
  04b5a	c1 e0 02	 shl	 eax, 2
  04b5d	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]
  04b65	83 ec 08	 sub	 esp, 8
  04b68	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b6d	b9 04 00 00 00	 mov	 ecx, 4
  04b72	6b d1 03	 imul	 edx, ecx, 3
  04b75	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_blackhawk@@3PAMA[edx]
  04b7d	83 ec 08	 sub	 esp, 8
  04b80	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b85	b8 04 00 00 00	 mov	 eax, 4
  04b8a	d1 e0		 shl	 eax, 1
  04b8c	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]
  04b94	83 ec 08	 sub	 esp, 8
  04b97	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04b9c	b9 04 00 00 00	 mov	 ecx, 4
  04ba1	c1 e1 00	 shl	 ecx, 0
  04ba4	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_blackhawk@@3PAMA[ecx]
  04bac	83 ec 08	 sub	 esp, 8
  04baf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04bb4	ba 04 00 00 00	 mov	 edx, 4
  04bb9	6b c2 00	 imul	 eax, edx, 0
  04bbc	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_blackhawk@@3PAMA[eax]
  04bc4	83 ec 08	 sub	 esp, 8
  04bc7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04bcc	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@LHBHJIMP@2?0Black?5Hawk?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@
  04bd1	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04bd4	51		 push	 ecx
  04bd5	e8 00 00 00 00	 call	 _fprintf
  04bda	83 c4 30	 add	 esp, 48			; 00000030H

; 1029 : 	fprintf(fout,"3,Hokum,%.0f,%.0f,%.0f,%.0f,%.0f\n",radar_range_hokum[0],radar_range_hokum[1],radar_range_hokum[2],radar_range_hokum[3],radar_range_hokum[4]);

  04bdd	b8 04 00 00 00	 mov	 eax, 4
  04be2	c1 e0 02	 shl	 eax, 2
  04be5	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hokum@@3PAMA[eax]
  04bed	83 ec 08	 sub	 esp, 8
  04bf0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04bf5	b9 04 00 00 00	 mov	 ecx, 4
  04bfa	6b d1 03	 imul	 edx, ecx, 3
  04bfd	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hokum@@3PAMA[edx]
  04c05	83 ec 08	 sub	 esp, 8
  04c08	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c0d	b8 04 00 00 00	 mov	 eax, 4
  04c12	d1 e0		 shl	 eax, 1
  04c14	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hokum@@3PAMA[eax]
  04c1c	83 ec 08	 sub	 esp, 8
  04c1f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c24	b9 04 00 00 00	 mov	 ecx, 4
  04c29	c1 e1 00	 shl	 ecx, 0
  04c2c	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hokum@@3PAMA[ecx]
  04c34	83 ec 08	 sub	 esp, 8
  04c37	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c3c	ba 04 00 00 00	 mov	 edx, 4
  04c41	6b c2 00	 imul	 eax, edx, 0
  04c44	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hokum@@3PAMA[eax]
  04c4c	83 ec 08	 sub	 esp, 8
  04c4f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c54	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@FOBOEEHP@3?0Hokum?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40@
  04c59	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04c5c	51		 push	 ecx
  04c5d	e8 00 00 00 00	 call	 _fprintf
  04c62	83 c4 30	 add	 esp, 48			; 00000030H

; 1030 : 	fprintf(fout,"4,Havoc,%.0f,%.0f,%.0f,%.0f\n",radar_range_havoc[0],radar_range_havoc[1],radar_range_havoc[2],radar_range_havoc[3]);

  04c65	b8 04 00 00 00	 mov	 eax, 4
  04c6a	6b c8 03	 imul	 ecx, eax, 3
  04c6d	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_havoc@@3PAMA[ecx]
  04c75	83 ec 08	 sub	 esp, 8
  04c78	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c7d	ba 04 00 00 00	 mov	 edx, 4
  04c82	d1 e2		 shl	 edx, 1
  04c84	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_havoc@@3PAMA[edx]
  04c8c	83 ec 08	 sub	 esp, 8
  04c8f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04c94	b8 04 00 00 00	 mov	 eax, 4
  04c99	c1 e0 00	 shl	 eax, 0
  04c9c	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_havoc@@3PAMA[eax]
  04ca4	83 ec 08	 sub	 esp, 8
  04ca7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04cac	b9 04 00 00 00	 mov	 ecx, 4
  04cb1	6b d1 00	 imul	 edx, ecx, 0
  04cb4	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_havoc@@3PAMA[edx]
  04cbc	83 ec 08	 sub	 esp, 8
  04cbf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04cc4	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@IKIJOFML@4?0Havoc?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@
  04cc9	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04ccc	50		 push	 eax
  04ccd	e8 00 00 00 00	 call	 _fprintf
  04cd2	83 c4 28	 add	 esp, 40			; 00000028H

; 1031 : 	fprintf(fout,"5,Hind,%.0f,%.0f,%.0f,%.0f\n",radar_range_hind[0],radar_range_hind[1],radar_range_hind[2],radar_range_hind[3]);

  04cd5	b8 04 00 00 00	 mov	 eax, 4
  04cda	6b c8 03	 imul	 ecx, eax, 3
  04cdd	f3 0f 5a 81 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hind@@3PAMA[ecx]
  04ce5	83 ec 08	 sub	 esp, 8
  04ce8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04ced	ba 04 00 00 00	 mov	 edx, 4
  04cf2	d1 e2		 shl	 edx, 1
  04cf4	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hind@@3PAMA[edx]
  04cfc	83 ec 08	 sub	 esp, 8
  04cff	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04d04	b8 04 00 00 00	 mov	 eax, 4
  04d09	c1 e0 00	 shl	 eax, 0
  04d0c	f3 0f 5a 80 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hind@@3PAMA[eax]
  04d14	83 ec 08	 sub	 esp, 8
  04d17	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04d1c	b9 04 00 00 00	 mov	 ecx, 4
  04d21	6b d1 00	 imul	 edx, ecx, 0
  04d24	f3 0f 5a 82 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?radar_range_hind@@3PAMA[edx]
  04d2c	83 ec 08	 sub	 esp, 8
  04d2f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  04d34	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BOJEHICG@5?0Hind?0?$CF?40f?0?$CF?40f?0?$CF?40f?0?$CF?40f?6@
  04d39	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04d3c	50		 push	 eax
  04d3d	e8 00 00 00 00	 call	 _fprintf
  04d42	83 c4 28	 add	 esp, 40			; 00000028H

; 1032 : 
; 1033 : 
; 1034 : 
; 1035 : // complete weapon type config info
; 1036 : 	if (INCLUDE_WEAPON_TYPES)

  04d45	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?INCLUDE_WEAPON_TYPES@@3HA, 0 ; INCLUDE_WEAPON_TYPES
  04d4c	0f 84 91 02 00
	00		 je	 $LN34@DumpGWutIn

; 1037 : 	{
; 1038 : 
; 1039 : 		fprintf(fout, "[WEAPON TYPES CONFIG INFO]\n");

  04d52	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@MDAGHBHJ@?$FLWEAPON?5TYPES?5CONFIG?5INFO?$FN?6@
  04d57	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04d5a	50		 push	 eax
  04d5b	e8 00 00 00 00	 call	 _fprintf
  04d60	83 c4 08	 add	 esp, 8

; 1040 : 
; 1041 : 		if (WRITE_HEADER) {

  04d63	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?WRITE_HEADER@@3HA, 0 ; WRITE_HEADER
  04d6a	0f 84 83 00 00
	00		 je	 $LN86@DumpGWutIn

; 1042 : 		fprintf(fout,"%s,","weapon config type nr");

  04d70	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@OFIPCFPM@weapon?5config?5type?5nr@
  04d75	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04d7a	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04d7d	50		 push	 eax
  04d7e	e8 00 00 00 00	 call	 _fprintf
  04d83	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1043 : 		fprintf(fout,"%s,","carrier name");

  04d86	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ENDKFCNC@carrier?5name@
  04d8b	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04d90	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04d93	50		 push	 eax
  04d94	e8 00 00 00 00	 call	 _fprintf
  04d99	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1044 : //       fprintf(fout,"%s,","weapon package nr");
; 1045 : 
; 1046 : 		for ( i = 0; i < 12; i++)

  04d9c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  04da3	eb 09		 jmp	 SHORT $LN32@DumpGWutIn
$LN30@DumpGWutIn:
  04da5	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  04da8	83 c0 01	 add	 eax, 1
  04dab	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN32@DumpGWutIn:
  04dae	83 7d f8 0c	 cmp	 DWORD PTR _i$[ebp], 12	; 0000000cH
  04db2	7d 2e		 jge	 SHORT $LN31@DumpGWutIn

; 1047 : 		{
; 1048 : 			fprintf(fout,"%s,","weapon name");

  04db4	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BDAONJEI@weapon?5name@
  04db9	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04dbe	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04dc1	50		 push	 eax
  04dc2	e8 00 00 00 00	 call	 _fprintf
  04dc7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1049 : 			fprintf(fout,"%s,","weapon nr");

  04dca	68 00 00 00 00	 push	 OFFSET ??_C@_09MOOPJLEO@weapon?5nr@
  04dcf	68 00 00 00 00	 push	 OFFSET ??_C@_03CGNBMCEI@?$CFs?0@
  04dd4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04dd7	50		 push	 eax
  04dd8	e8 00 00 00 00	 call	 _fprintf
  04ddd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1050 : 		}

  04de0	eb c3		 jmp	 SHORT $LN30@DumpGWutIn
$LN31@DumpGWutIn:

; 1051 : /*
; 1052 : 		fprintf(fout,"%s,","amount");
; 1053 : 		fprintf(fout,"%s,","heading depth");
; 1054 : 		fprintf(fout,"%s,","pitch depth");
; 1055 : 		fprintf(fout,"%s,","muzzle depth");
; 1056 : 		fprintf(fout,"%s,","make weapon system ready");
; 1057 : 		fprintf(fout,"%s,","rotate");
; 1058 : 		fprintf(fout,"%s,","salvo size");
; 1059 : 		fprintf(fout,"%s,","heading rate");
; 1060 : 		fprintf(fout,"%s,","min heading limit");
; 1061 : 		fprintf(fout,"%s,","max heading limit");
; 1062 : 		fprintf(fout,"%s,","pitch rate");
; 1063 : 		fprintf(fout,"%s,","min pitch limit");
; 1064 : 		fprintf(fout,"%s,","max pitch limit");
; 1065 : 		fprintf(fout,"%s,","muzzle rotate rate");
; 1066 : 		fprintf(fout,"%s,","rotate inhibit velocity");
; 1067 : 		fprintf(fout,"%s,","heading share mask");
; 1068 : 		fprintf(fout,"%s,","pitch share mask");
; 1069 : 		fprintf(fout,"%s","muzzle flash type");
; 1070 : */
; 1071 : 		fprintf(fout,"\n");

  04de2	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6@
  04de7	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04dea	50		 push	 eax
  04deb	e8 00 00 00 00	 call	 _fprintf
  04df0	83 c4 08	 add	 esp, 8
$LN86@DumpGWutIn:

; 1072 : 		}
; 1073 : 		k = 0;

  04df3	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0

; 1074 : 		for ( i = 0; i < NUM_WEAPON_CONFIG_TYPES; i++)

  04dfa	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  04e01	eb 09		 jmp	 SHORT $LN35@DumpGWutIn
$LN33@DumpGWutIn:
  04e03	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  04e06	83 c0 01	 add	 eax, 1
  04e09	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN35@DumpGWutIn:
  04e0c	81 7d f8 cc 02
	00 00		 cmp	 DWORD PTR _i$[ebp], 716	; 000002ccH
  04e13	0f 8d ca 01 00
	00		 jge	 $LN34@DumpGWutIn

; 1075 : 		{
; 1076 : 			//int l = 0;
; 1077 : 			//for (j = 0; j < NUM_WEAPON_PACKAGES; j++)
; 1078 : //          if(weapon_config_database[i][j].sub_type > 0) l++;
; 1079 : 
; 1080 : 			if (i < 611)

  04e19	81 7d f8 63 02
	00 00		 cmp	 DWORD PTR _i$[ebp], 611	; 00000263H
  04e20	7d 52		 jge	 SHORT $LN87@DumpGWutIn

; 1081 : 			{
; 1082 : 				fprintf(fout,"%d,%s,",i,aircraft_database[k].full_name);

  04e22	69 45 f0 f4 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 244
  04e29	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax]
  04e2f	51		 push	 ecx
  04e30	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  04e33	52		 push	 edx
  04e34	68 00 00 00 00	 push	 OFFSET ??_C@_06JACIFLFI@?$CFd?0?$CFs?0@
  04e39	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04e3c	50		 push	 eax
  04e3d	e8 00 00 00 00	 call	 _fprintf
  04e42	83 c4 10	 add	 esp, 16			; 00000010H

; 1083 : 				fprintf(fout,"%d,%d,",aircraft_database[k].min_weapon_config_type,aircraft_database[k].max_weapon_config_type);

  04e45	69 45 f0 f4 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 244
  04e4c	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+36]
  04e52	51		 push	 ecx
  04e53	69 55 f0 f4 00
	00 00		 imul	 edx, DWORD PTR _k$[ebp], 244
  04e5a	8b 82 20 00 00
	00		 mov	 eax, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[edx+32]
  04e60	50		 push	 eax
  04e61	68 00 00 00 00	 push	 OFFSET ??_C@_06IJEBOOKN@?$CFd?0?$CFd?0@
  04e66	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04e69	51		 push	 ecx
  04e6a	e8 00 00 00 00	 call	 _fprintf
  04e6f	83 c4 10	 add	 esp, 16			; 00000010H

; 1084 : 			}
; 1085 : 			else

  04e72	eb 50		 jmp	 SHORT $LN88@DumpGWutIn
$LN87@DumpGWutIn:

; 1086 : 			{
; 1087 : 				fprintf(fout,"%d,%s,",i,vehicle_database[k].full_name);

  04e74	69 45 f0 bc 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 188
  04e7b	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax]
  04e81	51		 push	 ecx
  04e82	8b 55 f8	 mov	 edx, DWORD PTR _i$[ebp]
  04e85	52		 push	 edx
  04e86	68 00 00 00 00	 push	 OFFSET ??_C@_06JACIFLFI@?$CFd?0?$CFs?0@
  04e8b	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04e8e	50		 push	 eax
  04e8f	e8 00 00 00 00	 call	 _fprintf
  04e94	83 c4 10	 add	 esp, 16			; 00000010H

; 1088 : 				fprintf(fout,"%d,%d,",vehicle_database[k].min_weapon_config_type,vehicle_database[k].max_weapon_config_type);

  04e97	69 45 f0 bc 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 188
  04e9e	8b 88 20 00 00
	00		 mov	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+32]
  04ea4	51		 push	 ecx
  04ea5	69 55 f0 bc 00
	00 00		 imul	 edx, DWORD PTR _k$[ebp], 188
  04eac	8b 82 1c 00 00
	00		 mov	 eax, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[edx+28]
  04eb2	50		 push	 eax
  04eb3	68 00 00 00 00	 push	 OFFSET ??_C@_06IJEBOOKN@?$CFd?0?$CFd?0@
  04eb8	8b 4d fc	 mov	 ecx, DWORD PTR _fout$[ebp]
  04ebb	51		 push	 ecx
  04ebc	e8 00 00 00 00	 call	 _fprintf
  04ec1	83 c4 10	 add	 esp, 16			; 00000010H
$LN88@DumpGWutIn:

; 1089 : 			}
; 1090 : 			for (j = 0; j < NUM_WEAPON_PACKAGES; j++)

  04ec4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  04ecb	eb 09		 jmp	 SHORT $LN38@DumpGWutIn
$LN36@DumpGWutIn:
  04ecd	8b 45 f4	 mov	 eax, DWORD PTR _j$[ebp]
  04ed0	83 c0 01	 add	 eax, 1
  04ed3	89 45 f4	 mov	 DWORD PTR _j$[ebp], eax
$LN38@DumpGWutIn:
  04ed6	83 7d f4 20	 cmp	 DWORD PTR _j$[ebp], 32	; 00000020H
  04eda	7d 5f		 jge	 SHORT $LN37@DumpGWutIn

; 1091 : 			{
; 1092 : 
; 1093 : 				if(weapon_config_database[i][j].sub_type > 0)

  04edc	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 2432
  04ee3	6b 4d f4 4c	 imul	 ecx, DWORD PTR _j$[ebp], 76
  04ee7	83 bc 08 00 00
	00 00 00	 cmp	 DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx], 0
  04eef	7e 48		 jle	 SHORT $LN89@DumpGWutIn

; 1094 : 				{
; 1095 : 
; 1096 : //             if (i < 610)
; 1097 : //             fprintf(fout,"%d,%s,",i*100000+l*100+j,aircraft_database[k].full_name);
; 1098 : //             fprintf(fout,"%d,%d,%s,",i*100000+l*100+j,l*100+j,aircraft_database[k].full_name);
; 1099 : //             fprintf(fout,"%d,%s,",i,aircraft_database[k].full_name);
; 1100 : //             else
; 1101 : //             fprintf(fout,"%d,%s,",i*100000+l*100+j,vehicle_database[k].full_name);
; 1102 : //             fprintf(fout,"%d,%d,%s,",i*100000+l*100+j,l*100+j,vehicle_database[k].full_name);
; 1103 : //             fprintf(fout,"%d,%s,",i,vehicle_database[k].full_name);
; 1104 : 
; 1105 : 					//fprintf(fout,"%s,",weapon_database[weapon_config_database[i][j].sub_type].full_name);
; 1106 : 					fprintf(fout,"%d,",weapon_config_database[i][j].sub_type);

  04ef1	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 2432
  04ef8	6b 4d f4 4c	 imul	 ecx, DWORD PTR _j$[ebp], 76
  04efc	8b 94 08 00 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx]
  04f03	52		 push	 edx
  04f04	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  04f09	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04f0c	50		 push	 eax
  04f0d	e8 00 00 00 00	 call	 _fprintf
  04f12	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1107 : 					fprintf(fout,"%d,",weapon_config_database[i][j].number);

  04f15	69 45 f8 80 09
	00 00		 imul	 eax, DWORD PTR _i$[ebp], 2432
  04f1c	6b 4d f4 4c	 imul	 ecx, DWORD PTR _j$[ebp], 76
  04f20	8b 94 08 04 00
	00 00		 mov	 edx, DWORD PTR ?weapon_config_database@@3PAY0CA@UWEAPON_PACKAGE@@A[eax+ecx+4]
  04f27	52		 push	 edx
  04f28	68 00 00 00 00	 push	 OFFSET ??_C@_03DPLIHHLN@?$CFd?0@
  04f2d	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04f30	50		 push	 eax
  04f31	e8 00 00 00 00	 call	 _fprintf
  04f36	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN89@DumpGWutIn:

; 1108 : 
; 1109 : /*
; 1110 : 					fprintf(fout,"%d,",weapon_config_database[i][j].heading_depth);
; 1111 : 					fprintf(fout,"%d,",weapon_config_database[i][j].pitch_depth);
; 1112 : 					fprintf(fout,"%d,",weapon_config_database[i][j].muzzle_depth);
; 1113 : 					fprintf(fout,"%d,",weapon_config_database[i][j].make_weapon_system_ready);
; 1114 : 					fprintf(fout,"%d,",weapon_config_database[i][j].rotate);
; 1115 : 					fprintf(fout,"%d,",weapon_config_database[i][j].salvo_size);
; 1116 : 					fprintf(fout,"%g,",weapon_config_database[i][j].heading_rate);
; 1117 : 					fprintf(fout,"%g,",weapon_config_database[i][j].min_heading_limit);
; 1118 : 					fprintf(fout,"%g,",weapon_config_database[i][j].max_heading_limit);
; 1119 : 					fprintf(fout,"%g,",weapon_config_database[i][j].pitch_rate);
; 1120 : 					fprintf(fout,"%g,",weapon_config_database[i][j].min_pitch_limit);
; 1121 : 					fprintf(fout,"%g,",weapon_config_database[i][j].max_pitch_limit);
; 1122 : 					fprintf(fout,"%g,",weapon_config_database[i][j].muzzle_rotate_rate);
; 1123 : 					fprintf(fout,"%g,",weapon_config_database[i][j].rotate_inhibit_velocity);
; 1124 : 					fprintf(fout,"%d,",weapon_config_database[i][j].heading_share_mask);
; 1125 : 					fprintf(fout,"%d,",weapon_config_database[i][j].pitch_share_mask);
; 1126 : 					fprintf(fout,"%d\n",weapon_config_database[i][j].muzzle_flash_type);
; 1127 : */
; 1128 : 				}
; 1129 : 			}

  04f39	eb 92		 jmp	 SHORT $LN36@DumpGWutIn
$LN37@DumpGWutIn:

; 1130 : 			if (i < 611)

  04f3b	81 7d f8 63 02
	00 00		 cmp	 DWORD PTR _i$[ebp], 611	; 00000263H
  04f42	7d 2d		 jge	 SHORT $LN90@DumpGWutIn

; 1131 : 			{
; 1132 : 				if (i == aircraft_database[k].max_weapon_config_type)

  04f44	69 45 f0 f4 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 244
  04f4b	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  04f4e	3b 88 24 00 00
	00		 cmp	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+36]
  04f54	75 09		 jne	 SHORT $LN92@DumpGWutIn

; 1133 : 					k++;

  04f56	8b 45 f0	 mov	 eax, DWORD PTR _k$[ebp]
  04f59	83 c0 01	 add	 eax, 1
  04f5c	89 45 f0	 mov	 DWORD PTR _k$[ebp], eax
$LN92@DumpGWutIn:

; 1134 : 				if (i == 610)

  04f5f	81 7d f8 62 02
	00 00		 cmp	 DWORD PTR _i$[ebp], 610	; 00000262H
  04f66	75 07		 jne	 SHORT $LN93@DumpGWutIn

; 1135 : 				k = 0;

  04f68	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _k$[ebp], 0
$LN93@DumpGWutIn:

; 1136 : 			}
; 1137 : 			else

  04f6f	eb 5c		 jmp	 SHORT $LN99@DumpGWutIn
$LN90@DumpGWutIn:

; 1138 : 			{
; 1139 : 				if (i == vehicle_database[k].max_weapon_config_type)

  04f71	69 45 f0 bc 00
	00 00		 imul	 eax, DWORD PTR _k$[ebp], 188
  04f78	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  04f7b	3b 88 20 00 00
	00		 cmp	 ecx, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[eax+32]
  04f81	75 09		 jne	 SHORT $LN94@DumpGWutIn

; 1140 : 					k++;

  04f83	8b 45 f0	 mov	 eax, DWORD PTR _k$[ebp]
  04f86	83 c0 01	 add	 eax, 1
  04f89	89 45 f0	 mov	 DWORD PTR _k$[ebp], eax
$LN94@DumpGWutIn:

; 1141 : 				if (k == 7) k = 8;

  04f8c	83 7d f0 07	 cmp	 DWORD PTR _k$[ebp], 7
  04f90	75 07		 jne	 SHORT $LN95@DumpGWutIn
  04f92	c7 45 f0 08 00
	00 00		 mov	 DWORD PTR _k$[ebp], 8
$LN95@DumpGWutIn:

; 1142 : 				if (k == 18) k = 25;

  04f99	83 7d f0 12	 cmp	 DWORD PTR _k$[ebp], 18	; 00000012H
  04f9d	75 07		 jne	 SHORT $LN96@DumpGWutIn
  04f9f	c7 45 f0 19 00
	00 00		 mov	 DWORD PTR _k$[ebp], 25	; 00000019H
$LN96@DumpGWutIn:

; 1143 : 				if (k == 29) k = 31;

  04fa6	83 7d f0 1d	 cmp	 DWORD PTR _k$[ebp], 29	; 0000001dH
  04faa	75 07		 jne	 SHORT $LN97@DumpGWutIn
  04fac	c7 45 f0 1f 00
	00 00		 mov	 DWORD PTR _k$[ebp], 31	; 0000001fH
$LN97@DumpGWutIn:

; 1144 : 				if (k == 32) k = 33;

  04fb3	83 7d f0 20	 cmp	 DWORD PTR _k$[ebp], 32	; 00000020H
  04fb7	75 07		 jne	 SHORT $LN98@DumpGWutIn
  04fb9	c7 45 f0 21 00
	00 00		 mov	 DWORD PTR _k$[ebp], 33	; 00000021H
$LN98@DumpGWutIn:

; 1145 : 				if (k == 35) k = 36;

  04fc0	83 7d f0 23	 cmp	 DWORD PTR _k$[ebp], 35	; 00000023H
  04fc4	75 07		 jne	 SHORT $LN99@DumpGWutIn
  04fc6	c7 45 f0 24 00
	00 00		 mov	 DWORD PTR _k$[ebp], 36	; 00000024H
$LN99@DumpGWutIn:

; 1146 : 
; 1147 : 			}
; 1148 : 			fprintf(fout,"0\n");

  04fcd	68 00 00 00 00	 push	 OFFSET ??_C@_02NODKCLPH@0?6@
  04fd2	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04fd5	50		 push	 eax
  04fd6	e8 00 00 00 00	 call	 _fprintf
  04fdb	83 c4 08	 add	 esp, 8

; 1149 : 		}

  04fde	e9 20 fe ff ff	 jmp	 $LN33@DumpGWutIn
$LN34@DumpGWutIn:

; 1150 : 	}
; 1151 : 
; 1152 : 
; 1153 : 	fprintf(fout,"[End of GWUT file]\n");

  04fe3	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJKAALHL@?$FLEnd?5of?5GWUT?5file?$FN?6@
  04fe8	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04feb	50		 push	 eax
  04fec	e8 00 00 00 00	 call	 _fprintf
  04ff1	83 c4 08	 add	 esp, 8

; 1154 : 
; 1155 : 	fclose(fout);

  04ff4	8b 45 fc	 mov	 eax, DWORD PTR _fout$[ebp]
  04ff7	50		 push	 eax
  04ff8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  04ffe	83 c4 04	 add	 esp, 4

; 1156 : 
; 1157 : }

  05001	5f		 pop	 edi
  05002	5e		 pop	 esi
  05003	5b		 pop	 ebx
  05004	8b e5		 mov	 esp, ebp
  05006	5d		 pop	 ebp
  05007	c2 04 00	 ret	 4
  0500a	66 90		 npad	 2
$LN120@DumpGWutIn:
  0500c	00 00 00 00	 DD	 $LN44@DumpGWutIn
  05010	00 00 00 00	 DD	 $LN41@DumpGWutIn
  05014	00 00 00 00	 DD	 $LN43@DumpGWutIn
  05018	00 00 00 00	 DD	 $LN42@DumpGWutIn
  0501c	00 00 00 00	 DD	 $LN46@DumpGWutIn
  05020	00 00 00 00	 DD	 $LN45@DumpGWutIn
  05024	00 00 00 00	 DD	 $LN47@DumpGWutIn
  05028	00 00 00 00	 DD	 $LN48@DumpGWutIn
  0502c	00 00 00 00	 DD	 $LN49@DumpGWutIn
$LN119@DumpGWutIn:
  05030	00		 DB	 0
  05031	08		 DB	 8
  05032	01		 DB	 1
  05033	08		 DB	 8
  05034	08		 DB	 8
  05035	08		 DB	 8
  05036	08		 DB	 8
  05037	08		 DB	 8
  05038	08		 DB	 8
  05039	08		 DB	 8
  0503a	08		 DB	 8
  0503b	08		 DB	 8
  0503c	08		 DB	 8
  0503d	08		 DB	 8
  0503e	08		 DB	 8
  0503f	08		 DB	 8
  05040	08		 DB	 8
  05041	08		 DB	 8
  05042	08		 DB	 8
  05043	08		 DB	 8
  05044	08		 DB	 8
  05045	08		 DB	 8
  05046	08		 DB	 8
  05047	08		 DB	 8
  05048	08		 DB	 8
  05049	08		 DB	 8
  0504a	08		 DB	 8
  0504b	08		 DB	 8
  0504c	08		 DB	 8
  0504d	08		 DB	 8
  0504e	08		 DB	 8
  0504f	08		 DB	 8
  05050	08		 DB	 8
  05051	08		 DB	 8
  05052	08		 DB	 8
  05053	08		 DB	 8
  05054	08		 DB	 8
  05055	08		 DB	 8
  05056	08		 DB	 8
  05057	08		 DB	 8
  05058	08		 DB	 8
  05059	08		 DB	 8
  0505a	08		 DB	 8
  0505b	08		 DB	 8
  0505c	08		 DB	 8
  0505d	08		 DB	 8
  0505e	08		 DB	 8
  0505f	08		 DB	 8
  05060	08		 DB	 8
  05061	08		 DB	 8
  05062	08		 DB	 8
  05063	08		 DB	 8
  05064	02		 DB	 2
  05065	08		 DB	 8
  05066	03		 DB	 3
  05067	08		 DB	 8
  05068	04		 DB	 4
  05069	08		 DB	 8
  0506a	08		 DB	 8
  0506b	08		 DB	 8
  0506c	05		 DB	 5
  0506d	08		 DB	 8
  0506e	08		 DB	 8
  0506f	08		 DB	 8
  05070	08		 DB	 8
  05071	08		 DB	 8
  05072	08		 DB	 8
  05073	08		 DB	 8
  05074	08		 DB	 8
  05075	08		 DB	 8
  05076	08		 DB	 8
  05077	08		 DB	 8
  05078	08		 DB	 8
  05079	08		 DB	 8
  0507a	08		 DB	 8
  0507b	08		 DB	 8
  0507c	08		 DB	 8
  0507d	08		 DB	 8
  0507e	08		 DB	 8
  0507f	08		 DB	 8
  05080	08		 DB	 8
  05081	08		 DB	 8
  05082	08		 DB	 8
  05083	08		 DB	 8
  05084	08		 DB	 8
  05085	08		 DB	 8
  05086	08		 DB	 8
  05087	08		 DB	 8
  05088	08		 DB	 8
  05089	08		 DB	 8
  0508a	08		 DB	 8
  0508b	08		 DB	 8
  0508c	08		 DB	 8
  0508d	08		 DB	 8
  0508e	08		 DB	 8
  0508f	08		 DB	 8
  05090	08		 DB	 8
  05091	08		 DB	 8
  05092	08		 DB	 8
  05093	08		 DB	 8
  05094	08		 DB	 8
  05095	08		 DB	 8
  05096	08		 DB	 8
  05097	08		 DB	 8
  05098	08		 DB	 8
  05099	08		 DB	 8
  0509a	08		 DB	 8
  0509b	08		 DB	 8
  0509c	08		 DB	 8
  0509d	08		 DB	 8
  0509e	08		 DB	 8
  0509f	08		 DB	 8
  050a0	08		 DB	 8
  050a1	08		 DB	 8
  050a2	08		 DB	 8
  050a3	08		 DB	 8
  050a4	08		 DB	 8
  050a5	08		 DB	 8
  050a6	08		 DB	 8
  050a7	08		 DB	 8
  050a8	08		 DB	 8
  050a9	08		 DB	 8
  050aa	08		 DB	 8
  050ab	08		 DB	 8
  050ac	08		 DB	 8
  050ad	08		 DB	 8
  050ae	08		 DB	 8
  050af	08		 DB	 8
  050b0	08		 DB	 8
  050b1	08		 DB	 8
  050b2	08		 DB	 8
  050b3	08		 DB	 8
  050b4	08		 DB	 8
  050b5	08		 DB	 8
  050b6	08		 DB	 8
  050b7	08		 DB	 8
  050b8	08		 DB	 8
  050b9	08		 DB	 8
  050ba	08		 DB	 8
  050bb	08		 DB	 8
  050bc	08		 DB	 8
  050bd	08		 DB	 8
  050be	08		 DB	 8
  050bf	08		 DB	 8
  050c0	06		 DB	 6
  050c1	08		 DB	 8
  050c2	07		 DB	 7
  050c3	90		 npad	 1
$LN121@DumpGWutIn:
  050c4	00 00 00 00	 DD	 $LN61@DumpGWutIn
  050c8	00 00 00 00	 DD	 $LN62@DumpGWutIn
  050cc	00 00 00 00	 DD	 $LN63@DumpGWutIn
  050d0	00 00 00 00	 DD	 $LN64@DumpGWutIn
  050d4	00 00 00 00	 DD	 $LN65@DumpGWutIn
  050d8	00 00 00 00	 DD	 $LN66@DumpGWutIn
  050dc	00 00 00 00	 DD	 $LN67@DumpGWutIn
  050e0	00 00 00 00	 DD	 $LN68@DumpGWutIn
  050e4	00 00 00 00	 DD	 $LN69@DumpGWutIn
  050e8	00 00 00 00	 DD	 $LN70@DumpGWutIn
  050ec	00 00 00 00	 DD	 $LN71@DumpGWutIn
  050f0	00 00 00 00	 DD	 $LN72@DumpGWutIn
  050f4	00 00 00 00	 DD	 $LN73@DumpGWutIn
  050f8	00 00 00 00	 DD	 $LN74@DumpGWutIn
  050fc	00 00 00 00	 DD	 $LN75@DumpGWutIn
  05100	00 00 00 00	 DD	 $LN76@DumpGWutIn
  05104	00 00 00 00	 DD	 $LN77@DumpGWutIn
  05108	00 00 00 00	 DD	 $LN78@DumpGWutIn
  0510c	00 00 00 00	 DD	 $LN79@DumpGWutIn
  05110	00 00 00 00	 DD	 $LN80@DumpGWutIn
  05114	00 00 00 00	 DD	 $LN81@DumpGWutIn
  05118	00 00 00 00	 DD	 $LN82@DumpGWutIn
?DumpGWutInfo@@YGXPBD@Z ENDP				; DumpGWutInfo
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?acos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?acos@@YGMM@Z PROC					; acos, COMDAT

; 26   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 27   : 	return (_CSTD acosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _acosf
  00019	83 c4 04	 add	 esp, 4

; 28   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?acos@@YGMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 623  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  :             return (float)acos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _acos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 625  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_acosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\string.h
;	COMDAT ?strstr@@YAPADQADQBD@Z
_TEXT	SEGMENT
__String$ = 8						; size = 4
__SubString$ = 12					; size = 4
?strstr@@YAPADQADQBD@Z PROC				; strstr, COMDAT

; 523  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00009	8b 45 0c	 mov	 eax, DWORD PTR __SubString$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR __String$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 _strstr
  00016	83 c4 08	 add	 esp, 8

; 525  :     }

  00019	5f		 pop	 edi
  0001a	5e		 pop	 esi
  0001b	5b		 pop	 ebx
  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?strstr@@YAPADQADQBD@Z ENDP				; strstr
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fscanf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fscanf	PROC						; COMDAT

; 1204 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1205 :         int _Result;
; 1206 :         va_list _ArgList;
; 1207 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1208 :         _Result = _vfscanf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfscanf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1209 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1210 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1211 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1062 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1063 :         return __stdio_common_vfscanf(

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfscanf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 1064 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1065 :             _Stream, _Format, _Locale, _ArgList);
; 1066 :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Stream$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vfprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 842  :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 08	 mov	 eax, DWORD PTR __Stream$[ebp]
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00021	51		 push	 ecx
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	52		 push	 edx
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vfprintf
  0002b	83 c4 18	 add	 esp, 24			; 00000018H

; 644  :     }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
