; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\radio\ra_fns.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_radio_ui_object_function_functions@@YGXH@Z ; overload_radio_ui_object_function_functions
EXTRN	?get_mouse_graphic_on@@YGHXZ:PROC		; get_mouse_graphic_on
EXTRN	?get_mouse_on@@YGHXZ:PROC			; get_mouse_on
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_call_ui_object_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_function
EXTRN	?fn_call_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_right_function
EXTRN	?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_notify_on
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\radio\ra_fns.c
;	COMDAT ?call_radio_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_radio$ = -8						; size = 4
_function$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?call_radio_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; call_radio_ui_object_right_function, COMDAT

; 138  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 139  : 
; 140  : 	void
; 141  : 		((*function) (ui_object *object, void *arg));
; 142  : 	
; 143  : 	radio_ui_object
; 144  : 		*radio;
; 145  : 
; 146  : 	radio = (radio_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _radio$[ebp], ecx

; 147  : 
; 148  : 	function = radio->area.right_function;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _radio$[ebp]
  00015	8b 88 d4 00 00
	00		 mov	 ecx, DWORD PTR [eax+212]
  0001b	89 4d fc	 mov	 DWORD PTR _function$[ebp], ecx

; 149  : 
; 150  : 	if (function)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _function$[ebp], 0
  00022	74 7d		 je	 SHORT $LN1@call_radio

; 151  : 	{
; 152  : 
; 153  : 		set_ui_object_redraw (obj, TRUE);

  00024	6a 01		 push	 1
  00026	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00036	ff d0		 call	 eax

; 154  : 
; 155  : 		if ((int) arg == BUTTON_STATE_DOWN)

  00038	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0003c	75 16		 jne	 SHORT $LN3@call_radio

; 156  : 		{
; 157  : 
; 158  : 			set_ui_object_state (obj, UI_OBJECT_STATE_ON);

  0003e	6a 01		 push	 1
  00040	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00043	50		 push	 eax
  00044	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00047	8b 11		 mov	 edx, DWORD PTR [ecx]
  00049	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00050	ff d0		 call	 eax

; 159  : 		}
; 160  : 		else 

  00052	eb 14		 jmp	 SHORT $LN4@call_radio
$LN3@call_radio:

; 161  : 		{
; 162  : 			
; 163  : 			set_ui_object_state (obj, UI_OBJECT_STATE_OFF);

  00054	6a 00		 push	 0
  00056	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00066	ff d0		 call	 eax
$LN4@call_radio:

; 164  : 		}
; 165  : 
; 166  : 		if
; 167  : 			(
; 168  : 				(get_ui_object_notify_on (obj) == (int) arg) ||

  00068	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006b	50		 push	 eax
  0006c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00071	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  00078	ff d0		 call	 eax
  0007a	3b 45 0c	 cmp	 eax, DWORD PTR _arg$[ebp]
  0007d	74 17		 je	 SHORT $LN6@call_radio
  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	83 f8 03	 cmp	 eax, 3
  00094	75 0b		 jne	 SHORT $LN1@call_radio
$LN6@call_radio:

; 169  : 				(get_ui_object_notify_on (obj) == NOTIFY_TYPE_BUTTON_EITHER)
; 170  : 			)
; 171  : 		{
; 172  : 
; 173  : 			function (obj, (void *) arg);

  00096	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009d	51		 push	 ecx
  0009e	ff 55 fc	 call	 DWORD PTR _function$[ebp]
$LN1@call_radio:

; 174  : 		}
; 175  : 	}
; 176  : }

  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi
  000a3	5b		 pop	 ebx
  000a4	8b e5		 mov	 esp, ebp
  000a6	5d		 pop	 ebp
  000a7	c2 08 00	 ret	 8
?call_radio_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; call_radio_ui_object_right_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\radio\ra_fns.c
;	COMDAT ?call_radio_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_mouse_graphic_state$ = -16				; size = 4
_mouse_state$ = -12					; size = 4
_radio$ = -8						; size = 4
_function$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?call_radio_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; call_radio_ui_object_function, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	void
; 77   : 		((*function) (ui_object *object, void *arg));
; 78   : 	
; 79   : 	radio_ui_object
; 80   : 		*radio;
; 81   : 
; 82   : 	int
; 83   : 		mouse_state,
; 84   : 		mouse_graphic_state;
; 85   : 
; 86   : 	radio = (radio_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _radio$[ebp], ecx

; 87   : 
; 88   : 	function = radio->area.function;

  00012	8b 45 f8	 mov	 eax, DWORD PTR _radio$[ebp]
  00015	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0001b	89 4d fc	 mov	 DWORD PTR _function$[ebp], ecx

; 89   : 
; 90   : 	if (function)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _function$[ebp], 0
  00022	0f 84 86 00 00
	00		 je	 $LN1@call_radio

; 91   : 	{
; 92   : 
; 93   : 		set_ui_object_redraw (obj, TRUE);

  00028	6a 01		 push	 1
  0002a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003a	ff d0		 call	 eax

; 94   : 
; 95   : 		if
; 96   : 			(
; 97   : 				(get_ui_object_notify_on (obj) == (int) arg) ||

  0003c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003f	50		 push	 eax
  00040	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00043	8b 11		 mov	 edx, DWORD PTR [ecx]
  00045	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  0004c	ff d0		 call	 eax
  0004e	3b 45 0c	 cmp	 eax, DWORD PTR _arg$[ebp]
  00051	74 17		 je	 SHORT $LN4@call_radio
  00053	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_notify_on@@3PAP6G?AW4NOTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  00063	ff d0		 call	 eax
  00065	83 f8 03	 cmp	 eax, 3
  00068	75 2f		 jne	 SHORT $LN3@call_radio
$LN4@call_radio:

; 98   : 				(get_ui_object_notify_on (obj) == NOTIFY_TYPE_BUTTON_EITHER)
; 99   : 			)
; 100  : 		{
; 101  : 
; 102  : 			set_ui_object_state (obj, UI_OBJECT_STATE_ON);

  0006a	6a 01		 push	 1
  0006c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006f	50		 push	 eax
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00073	8b 11		 mov	 edx, DWORD PTR [ecx]
  00075	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0007c	ff d0		 call	 eax

; 103  : 
; 104  : 			mouse_state = get_mouse_on ();

  0007e	e8 00 00 00 00	 call	 ?get_mouse_on@@YGHXZ	; get_mouse_on
  00083	89 45 f4	 mov	 DWORD PTR _mouse_state$[ebp], eax

; 105  : 
; 106  : 			mouse_graphic_state = get_mouse_graphic_on ();

  00086	e8 00 00 00 00	 call	 ?get_mouse_graphic_on@@YGHXZ ; get_mouse_graphic_on
  0008b	89 45 f0	 mov	 DWORD PTR _mouse_graphic_state$[ebp], eax

; 107  : 
; 108  : //			set_mouse_off ();
; 109  : 
; 110  : 			function (obj, (void *) arg);

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  00091	50		 push	 eax
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00095	51		 push	 ecx
  00096	ff 55 fc	 call	 DWORD PTR _function$[ebp]
$LN3@call_radio:

; 111  : 
; 112  : //			if (mouse_state)
; 113  : //			{
; 114  : //
; 115  : //				set_mouse_on ();
; 116  : //			}
; 117  : //
; 118  : //			if (mouse_graphic_state)
; 119  : //			{
; 120  : //
; 121  : //				set_mouse_graphic_on ();
; 122  : //			}
; 123  : 		}
; 124  : 
; 125  : 		if ((int) arg == BUTTON_STATE_INVALID)

  00099	83 7d 0c 00	 cmp	 DWORD PTR _arg$[ebp], 0
  0009d	75 0f		 jne	 SHORT $LN1@call_radio

; 126  : 		{
; 127  : 
; 128  : 			radio->area.state = UI_OBJECT_STATE_OFF;

  0009f	8b 45 f8	 mov	 eax, DWORD PTR _radio$[ebp]
  000a2	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  000a5	83 e1 e7	 and	 ecx, -25		; ffffffe7H
  000a8	8b 55 f8	 mov	 edx, DWORD PTR _radio$[ebp]
  000ab	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx
$LN1@call_radio:

; 129  : 		}
; 130  : 	}
; 131  : }

  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	8b e5		 mov	 esp, ebp
  000b3	5d		 pop	 ebp
  000b4	c2 08 00	 ret	 8
?call_radio_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; call_radio_ui_object_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\radio\ra_fns.c
;	COMDAT ?overload_radio_ui_object_function_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_radio_ui_object_function_functions@@YGXH@Z PROC ; overload_radio_ui_object_function_functions, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 184  : 
; 185  : 	fn_call_ui_object_function [type] 			= call_radio_ui_object_function;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_call_ui_object_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4], OFFSET ?call_radio_ui_object_function@@YGXPAUUI_OBJECT@@PAX@Z ; call_radio_ui_object_function

; 186  : 
; 187  : 	fn_call_ui_object_right_function [type] 	= call_radio_ui_object_right_function;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_call_ui_object_right_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[eax*4], OFFSET ?call_radio_ui_object_right_function@@YGXPAUUI_OBJECT@@PAX@Z ; call_radio_ui_object_right_function

; 188  : }

  00025	5f		 pop	 edi
  00026	5e		 pop	 esi
  00027	5b		 pop	 ebx
  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 04 00	 ret	 4
?overload_radio_ui_object_function_functions@@YGXH@Z ENDP ; overload_radio_ui_object_function_functions
_TEXT	ENDS
END
