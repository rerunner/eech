; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dsun.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?sun_texture@@3PAUSCREEN@@A			; sun_texture
PUBLIC	?sun_flare_texture@@3PAUSCREEN@@A		; sun_flare_texture
PUBLIC	?sun_3d_heading@@3MA				; sun_3d_heading
PUBLIC	?sun_3d_pitch@@3MA				; sun_3d_pitch
PUBLIC	?sun_3d_scale@@3MA				; sun_3d_scale
PUBLIC	?sun_3d_intensity@@3MA				; sun_3d_intensity
PUBLIC	?sun_3d_colour@@3ULIGHT_COLOUR@@A		; sun_3d_colour
_BSS	SEGMENT
?sun_texture@@3PAUSCREEN@@A DD 01H DUP (?)		; sun_texture
?sun_flare_texture@@3PAUSCREEN@@A DD 01H DUP (?)	; sun_flare_texture
?sun_3d_heading@@3MA DD 01H DUP (?)			; sun_3d_heading
?sun_3d_pitch@@3MA DD 01H DUP (?)			; sun_3d_pitch
?sun_3d_scale@@3MA DD 01H DUP (?)			; sun_3d_scale
?sun_3d_intensity@@3MA DD 01H DUP (?)			; sun_3d_intensity
?sun_3d_colour@@3ULIGHT_COLOUR@@A DB 010H DUP (?)	; sun_3d_colour
_BSS	ENDS
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?initialise_3d_sun@@YGXHH@Z			; initialise_3d_sun
PUBLIC	?set_3d_sun_position@@YGXMM@Z			; set_3d_sun_position
PUBLIC	?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z	; set_3d_sun_colour
PUBLIC	?set_3d_sun_light_intensity@@YGXM@Z		; set_3d_sun_light_intensity
PUBLIC	?set_3d_sun_scale@@YGXM@Z			; set_3d_sun_scale
PUBLIC	?draw_3d_sun@@YGXXZ				; draw_3d_sun
PUBLIC	?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z ; construct_sun_polygon
PUBLIC	?__LINE__Var@?0??set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA ; `set_3d_sun_colour'::`1'::__LINE__Var
PUBLIC	??_C@_0DA@IKPFJPMO@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_06FBNLAHKA@colour@			; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3fd2929292929293
PUBLIC	__real@3fe6363636363636
PUBLIC	__real@3fef1f1f1f1f1f1f
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@437f0000
PUBLIC	__real@46fa0000
PUBLIC	__real@47883b00
PUBLIC	__real@47c35000
PUBLIC	__real@480ca000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?suspend_d3d_fog@@YGXXZ:PROC			; suspend_d3d_fog
EXTRN	?reinstate_d3d_fog@@YGXXZ:PROC			; reinstate_d3d_fog
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?horizon_clip_3d_polygon@@YGPAUVERTEX@@PAU1@@Z:PROC ; horizon_clip_3d_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?clip_yonder_reciprocal@@3MA:DWORD		; clip_yonder_reciprocal
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A:DWORD ; zbuffer_default_comparison
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	?rotation_3d@@3PAY02MA:BYTE			; rotation_3d
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@480ca000
CONST	SEGMENT
__real@480ca000 DD 0480ca000r			; 144000
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@47883b00
CONST	SEGMENT
__real@47883b00 DD 047883b00r			; 69750
CONST	ENDS
;	COMDAT __real@46fa0000
CONST	SEGMENT
__real@46fa0000 DD 046fa0000r			; 32000
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fef1f1f1f1f1f1f
CONST	SEGMENT
__real@3fef1f1f1f1f1f1f DQ 03fef1f1f1f1f1f1fr	; 0.972549
CONST	ENDS
;	COMDAT __real@3fe6363636363636
CONST	SEGMENT
__real@3fe6363636363636 DQ 03fe6363636363636r	; 0.694118
CONST	ENDS
;	COMDAT __real@3fd2929292929293
CONST	SEGMENT
__real@3fd2929292929293 DQ 03fd2929292929293r	; 0.290196
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_06FBNLAHKA@colour@
CONST	SEGMENT
??_C@_06FBNLAHKA@colour@ DB 'colour', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@IKPFJPMO@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DA@IKPFJPMO@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dsun.c', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA DD 079H ; `set_3d_sun_colour'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z
_TEXT	SEGMENT
_p$1 = -92						; size = 4
_iymin$2 = -88						; size = 4
_iymax$3 = -84						; size = 4
_ixmin$4 = -80						; size = 4
_ixmax$5 = -76						; size = 4
_oymin$6 = -72						; size = 4
_oymax$7 = -68						; size = 4
_oxmin$8 = -64						; size = 4
_oxmax$9 = -60						; size = 4
_j$10 = -56						; size = 4
_i$11 = -52						; size = 4
_q$12 = -48						; size = 4
_z$13 = -44						; size = 4
_y$14 = -40						; size = 4
_x$15 = -36						; size = 4
_z$16 = -32						; size = 4
_y$17 = -28						; size = 4
_x$18 = -24						; size = 4
_count$ = -20						; size = 4
_outcode2$ = -16					; size = 4
_outcode$ = -12						; size = 4
_vert$ = -8						; size = 4
_sun_polygon$ = -4					; size = 4
_sun_matrix$ = 8					; size = 4
_sun_quad$ = 12						; size = 4
_sun_width$ = 16					; size = 4
_sun_height$ = 20					; size = 4
_sun_depth$ = 24					; size = 4
?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z PROC ; construct_sun_polygon, COMDAT

; 310  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 311  : 
; 312  : 	vertex
; 313  : 		*sun_polygon,
; 314  : 		*vert;
; 315  : 
; 316  : 	int
; 317  : 		outcode,
; 318  : 		outcode2,
; 319  : 		count;
; 320  : 
; 321  : 	sun_quad[0].next_vertex = &sun_quad[1];

  0000c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00011	c1 e0 00	 shl	 eax, 0
  00014	03 45 0c	 add	 eax, DWORD PTR _sun_quad$[ebp]
  00017	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0001c	6b d1 00	 imul	 edx, ecx, 0
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00022	89 44 11 28	 mov	 DWORD PTR [ecx+edx+40], eax

; 322  : 	sun_quad[1].next_vertex = &sun_quad[2];

  00026	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0002b	d1 e0		 shl	 eax, 1
  0002d	03 45 0c	 add	 eax, DWORD PTR _sun_quad$[ebp]
  00030	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00035	c1 e1 00	 shl	 ecx, 0
  00038	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  0003b	89 44 0a 28	 mov	 DWORD PTR [edx+ecx+40], eax

; 323  : 	sun_quad[2].next_vertex = &sun_quad[3];

  0003f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00044	6b c8 03	 imul	 ecx, eax, 3
  00047	03 4d 0c	 add	 ecx, DWORD PTR _sun_quad$[ebp]
  0004a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0004f	d1 e2		 shl	 edx, 1
  00051	8b 45 0c	 mov	 eax, DWORD PTR _sun_quad$[ebp]
  00054	89 4c 10 28	 mov	 DWORD PTR [eax+edx+40], ecx

; 324  : 	sun_quad[3].next_vertex = NULL;

  00058	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0005d	6b c8 03	 imul	 ecx, eax, 3
  00060	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  00063	c7 44 0a 28 00
	00 00 00	 mov	 DWORD PTR [edx+ecx+40], 0

; 325  : 
; 326  : 	sun_quad[0].x = -sun_width/2;

  0006b	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _sun_width$[ebp]
  00070	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00077	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0007f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00084	6b c8 00	 imul	 ecx, eax, 0
  00087	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  0008a	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 327  : 	sun_quad[0].y = sun_height/2;

  0008f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _sun_height$[ebp]
  00094	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  0009c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000a1	6b c8 00	 imul	 ecx, eax, 0
  000a4	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  000a7	f3 0f 11 44 0a
	04		 movss	 DWORD PTR [edx+ecx+4], xmm0

; 328  : 	sun_quad[0].z = sun_depth;

  000ad	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000b2	6b c8 00	 imul	 ecx, eax, 0
  000b5	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  000b8	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _sun_depth$[ebp]
  000bd	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 329  : 	sun_quad[0].u = 0;

  000c3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000c8	6b c8 00	 imul	 ecx, eax, 0
  000cb	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  000ce	0f 57 c0	 xorps	 xmm0, xmm0
  000d1	f3 0f 11 44 0a
	18		 movss	 DWORD PTR [edx+ecx+24], xmm0

; 330  : 	sun_quad[0].v = 0;

  000d7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000dc	6b c8 00	 imul	 ecx, eax, 0
  000df	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  000e2	0f 57 c0	 xorps	 xmm0, xmm0
  000e5	f3 0f 11 44 0a
	1c		 movss	 DWORD PTR [edx+ecx+28], xmm0

; 331  : 
; 332  : 	sun_quad[1].x = sun_width/2;

  000eb	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _sun_width$[ebp]
  000f0	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  000f8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000fd	c1 e0 00	 shl	 eax, 0
  00100	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00103	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 333  : 	sun_quad[1].y = sun_height/2;

  00108	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _sun_height$[ebp]
  0010d	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00115	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0011a	c1 e0 00	 shl	 eax, 0
  0011d	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00120	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0

; 334  : 	sun_quad[1].z = sun_depth;

  00126	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0012b	c1 e0 00	 shl	 eax, 0
  0012e	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00131	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _sun_depth$[ebp]
  00136	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 335  : 	sun_quad[1].u = 1;

  0013c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00141	c1 e0 00	 shl	 eax, 0
  00144	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0014f	f3 0f 11 44 01
	18		 movss	 DWORD PTR [ecx+eax+24], xmm0

; 336  : 	sun_quad[1].v = 0;

  00155	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0015a	c1 e0 00	 shl	 eax, 0
  0015d	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00160	0f 57 c0	 xorps	 xmm0, xmm0
  00163	f3 0f 11 44 01
	1c		 movss	 DWORD PTR [ecx+eax+28], xmm0

; 337  : 
; 338  : 	sun_quad[2].x = sun_width/2;

  00169	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _sun_width$[ebp]
  0016e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00176	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0017b	d1 e0		 shl	 eax, 1
  0017d	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00180	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 339  : 	sun_quad[2].y = -sun_height/2;

  00185	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _sun_height$[ebp]
  0018a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00191	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00199	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0019e	d1 e0		 shl	 eax, 1
  001a0	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  001a3	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0

; 340  : 	sun_quad[2].z = sun_depth;

  001a9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001ae	d1 e0		 shl	 eax, 1
  001b0	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  001b3	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _sun_depth$[ebp]
  001b8	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 341  : 	sun_quad[2].u = 1;

  001be	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001c3	d1 e0		 shl	 eax, 1
  001c5	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  001c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001d0	f3 0f 11 44 01
	18		 movss	 DWORD PTR [ecx+eax+24], xmm0

; 342  : 	sun_quad[2].v = 1;

  001d6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001db	d1 e0		 shl	 eax, 1
  001dd	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  001e0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001e8	f3 0f 11 44 01
	1c		 movss	 DWORD PTR [ecx+eax+28], xmm0

; 343  : 
; 344  : 	sun_quad[3].x = -sun_width/2;

  001ee	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _sun_width$[ebp]
  001f3	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001fa	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00202	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00207	6b c8 03	 imul	 ecx, eax, 3
  0020a	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  0020d	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 345  : 	sun_quad[3].y = -sun_height/2;

  00212	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _sun_height$[ebp]
  00217	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0021e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00226	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0022b	6b c8 03	 imul	 ecx, eax, 3
  0022e	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  00231	f3 0f 11 44 0a
	04		 movss	 DWORD PTR [edx+ecx+4], xmm0

; 346  : 	sun_quad[3].z = sun_depth;

  00237	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0023c	6b c8 03	 imul	 ecx, eax, 3
  0023f	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  00242	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _sun_depth$[ebp]
  00247	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 347  : 	sun_quad[3].u = 0;

  0024d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00252	6b c8 03	 imul	 ecx, eax, 3
  00255	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  00258	0f 57 c0	 xorps	 xmm0, xmm0
  0025b	f3 0f 11 44 0a
	18		 movss	 DWORD PTR [edx+ecx+24], xmm0

; 348  : 	sun_quad[3].v = 1;

  00261	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00266	6b c8 03	 imul	 ecx, eax, 3
  00269	8b 55 0c	 mov	 edx, DWORD PTR _sun_quad$[ebp]
  0026c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00274	f3 0f 11 44 0a
	1c		 movss	 DWORD PTR [edx+ecx+28], xmm0

; 349  : 
; 350  : 	for ( count = 0; count < 4; count++ )

  0027a	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00281	eb 09		 jmp	 SHORT $LN4@construct_
$LN2@construct_:
  00283	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00286	83 c0 01	 add	 eax, 1
  00289	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax
$LN4@construct_:
  0028c	83 7d ec 04	 cmp	 DWORD PTR _count$[ebp], 4
  00290	0f 8d bd 01 00
	00		 jge	 $LN3@construct_

; 351  : 	{
; 352  : 
; 353  : 		float
; 354  : 			x,
; 355  : 			y,
; 356  : 			z;
; 357  : 
; 358  : 
; 359  : 		x = sun_quad[count].x * sun_matrix[0][0] + sun_quad[count].y * sun_matrix[1][0] + sun_quad[count].z * sun_matrix[2][0];

  00296	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00299	c1 e0 06	 shl	 eax, 6
  0029c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002a1	6b d1 00	 imul	 edx, ecx, 0
  002a4	03 55 08	 add	 edx, DWORD PTR _sun_matrix$[ebp]
  002a7	b9 04 00 00 00	 mov	 ecx, 4
  002ac	6b c9 00	 imul	 ecx, ecx, 0
  002af	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  002b2	f3 0f 10 04 06	 movss	 xmm0, DWORD PTR [esi+eax]
  002b7	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  002bc	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  002bf	c1 e2 06	 shl	 edx, 6
  002c2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002c7	c1 e0 00	 shl	 eax, 0
  002ca	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  002cd	b9 04 00 00 00	 mov	 ecx, 4
  002d2	6b c9 00	 imul	 ecx, ecx, 0
  002d5	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  002d8	f3 0f 10 4c 16
	04		 movss	 xmm1, DWORD PTR [esi+edx+4]
  002de	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  002e3	f3 0f 58 c1	 addss	 xmm0, xmm1
  002e7	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  002ea	c1 e2 06	 shl	 edx, 6
  002ed	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002f2	d1 e0		 shl	 eax, 1
  002f4	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  002f7	b9 04 00 00 00	 mov	 ecx, 4
  002fc	6b c9 00	 imul	 ecx, ecx, 0
  002ff	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  00302	f3 0f 10 4c 16
	08		 movss	 xmm1, DWORD PTR [esi+edx+8]
  00308	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0030d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00311	f3 0f 11 45 e8	 movss	 DWORD PTR _x$18[ebp], xmm0

; 360  : 		y = sun_quad[count].x * sun_matrix[0][1] + sun_quad[count].y * sun_matrix[1][1] + sun_quad[count].z * sun_matrix[2][1];

  00316	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00319	c1 e0 06	 shl	 eax, 6
  0031c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00321	6b d1 00	 imul	 edx, ecx, 0
  00324	03 55 08	 add	 edx, DWORD PTR _sun_matrix$[ebp]
  00327	b9 04 00 00 00	 mov	 ecx, 4
  0032c	c1 e1 00	 shl	 ecx, 0
  0032f	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  00332	f3 0f 10 04 06	 movss	 xmm0, DWORD PTR [esi+eax]
  00337	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  0033c	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  0033f	c1 e2 06	 shl	 edx, 6
  00342	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00347	c1 e0 00	 shl	 eax, 0
  0034a	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  0034d	b9 04 00 00 00	 mov	 ecx, 4
  00352	c1 e1 00	 shl	 ecx, 0
  00355	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  00358	f3 0f 10 4c 16
	04		 movss	 xmm1, DWORD PTR [esi+edx+4]
  0035e	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  00363	f3 0f 58 c1	 addss	 xmm0, xmm1
  00367	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  0036a	c1 e2 06	 shl	 edx, 6
  0036d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00372	d1 e0		 shl	 eax, 1
  00374	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  00377	b9 04 00 00 00	 mov	 ecx, 4
  0037c	c1 e1 00	 shl	 ecx, 0
  0037f	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  00382	f3 0f 10 4c 16
	08		 movss	 xmm1, DWORD PTR [esi+edx+8]
  00388	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0038d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00391	f3 0f 11 45 e4	 movss	 DWORD PTR _y$17[ebp], xmm0

; 361  : 		z = sun_quad[count].x * sun_matrix[0][2] + sun_quad[count].y * sun_matrix[1][2] + sun_quad[count].z * sun_matrix[2][2];

  00396	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00399	c1 e0 06	 shl	 eax, 6
  0039c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003a1	6b d1 00	 imul	 edx, ecx, 0
  003a4	03 55 08	 add	 edx, DWORD PTR _sun_matrix$[ebp]
  003a7	b9 04 00 00 00	 mov	 ecx, 4
  003ac	d1 e1		 shl	 ecx, 1
  003ae	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  003b1	f3 0f 10 04 06	 movss	 xmm0, DWORD PTR [esi+eax]
  003b6	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  003bb	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  003be	c1 e2 06	 shl	 edx, 6
  003c1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003c6	c1 e0 00	 shl	 eax, 0
  003c9	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  003cc	b9 04 00 00 00	 mov	 ecx, 4
  003d1	d1 e1		 shl	 ecx, 1
  003d3	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  003d6	f3 0f 10 4c 16
	04		 movss	 xmm1, DWORD PTR [esi+edx+4]
  003dc	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  003e1	f3 0f 58 c1	 addss	 xmm0, xmm1
  003e5	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  003e8	c1 e2 06	 shl	 edx, 6
  003eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003f0	d1 e0		 shl	 eax, 1
  003f2	03 45 08	 add	 eax, DWORD PTR _sun_matrix$[ebp]
  003f5	b9 04 00 00 00	 mov	 ecx, 4
  003fa	d1 e1		 shl	 ecx, 1
  003fc	8b 75 0c	 mov	 esi, DWORD PTR _sun_quad$[ebp]
  003ff	f3 0f 10 4c 16
	08		 movss	 xmm1, DWORD PTR [esi+edx+8]
  00405	f3 0f 59 0c 08	 mulss	 xmm1, DWORD PTR [eax+ecx]
  0040a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0040e	f3 0f 11 45 e0	 movss	 DWORD PTR _z$16[ebp], xmm0

; 362  : 
; 363  : 		sun_quad[count].x = x;

  00413	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00416	c1 e0 06	 shl	 eax, 6
  00419	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  0041c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x$18[ebp]
  00421	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 364  : 		sun_quad[count].y = y;

  00426	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00429	c1 e0 06	 shl	 eax, 6
  0042c	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  0042f	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y$17[ebp]
  00434	f3 0f 11 44 01
	04		 movss	 DWORD PTR [ecx+eax+4], xmm0

; 365  : 		sun_quad[count].z = z;

  0043a	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  0043d	c1 e0 06	 shl	 eax, 6
  00440	8b 4d 0c	 mov	 ecx, DWORD PTR _sun_quad$[ebp]
  00443	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _z$16[ebp]
  00448	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 366  : 	}

  0044e	e9 30 fe ff ff	 jmp	 $LN2@construct_
$LN3@construct_:

; 367  : 
; 368  : 	//
; 369  : 	// Clip the sun to the horizon
; 370  : 	//
; 371  : 
; 372  : 	clip_3d_coord = 0;

  00453	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 373  : 
; 374  : 	sun_polygon = horizon_clip_3d_polygon ( sun_quad );

  0045d	8b 45 0c	 mov	 eax, DWORD PTR _sun_quad$[ebp]
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 ?horizon_clip_3d_polygon@@YGPAUVERTEX@@PAU1@@Z ; horizon_clip_3d_polygon
  00466	89 45 fc	 mov	 DWORD PTR _sun_polygon$[ebp], eax

; 375  : 
; 376  : 	if ( sun_polygon )

  00469	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  0046d	0f 84 ea 04 00
	00		 je	 $LN9@construct_

; 377  : 	{
; 378  : 
; 379  : 		//
; 380  : 		// Rotate the polygon around to the users viewpoint
; 381  : 		//
; 382  : 	
; 383  : 		vert = sun_polygon;

  00473	8b 45 fc	 mov	 eax, DWORD PTR _sun_polygon$[ebp]
  00476	89 45 f8	 mov	 DWORD PTR _vert$[ebp], eax

; 384  : 	
; 385  : 		rotation_3d[0][0] = ( visual_3d_vp->xv.x );

  00479	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0047e	6b c8 00	 imul	 ecx, eax, 0
  00481	ba 04 00 00 00	 mov	 edx, 4
  00486	6b c2 00	 imul	 eax, edx, 0
  00489	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0048f	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00492	89 94 01 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax], edx

; 386  : 		rotation_3d[0][1] = ( visual_3d_vp->yv.x );

  00499	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0049e	6b c8 00	 imul	 ecx, eax, 0
  004a1	ba 04 00 00 00	 mov	 edx, 4
  004a6	c1 e2 00	 shl	 edx, 0
  004a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004ae	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  004b1	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], eax

; 387  : 		rotation_3d[0][2] = ( visual_3d_vp->zv.x );

  004b8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004bd	6b c8 00	 imul	 ecx, eax, 0
  004c0	ba 04 00 00 00	 mov	 edx, 4
  004c5	d1 e2		 shl	 edx, 1
  004c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004cc	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  004cf	89 84 11 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx], eax

; 388  : 	
; 389  : 		rotation_3d[1][0] = ( visual_3d_vp->xv.y );

  004d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004db	c1 e0 00	 shl	 eax, 0
  004de	b9 04 00 00 00	 mov	 ecx, 4
  004e3	6b d1 00	 imul	 edx, ecx, 0
  004e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004ec	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  004ef	89 8c 10 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], ecx

; 390  : 		rotation_3d[1][1] = ( visual_3d_vp->yv.y );

  004f6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004fb	c1 e0 00	 shl	 eax, 0
  004fe	b9 04 00 00 00	 mov	 ecx, 4
  00503	c1 e1 00	 shl	 ecx, 0
  00506	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0050c	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0050f	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 391  : 		rotation_3d[1][2] = ( visual_3d_vp->zv.y );

  00516	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0051b	c1 e0 00	 shl	 eax, 0
  0051e	b9 04 00 00 00	 mov	 ecx, 4
  00523	d1 e1		 shl	 ecx, 1
  00525	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0052b	8b 52 28	 mov	 edx, DWORD PTR [edx+40]
  0052e	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 392  : 	
; 393  : 		rotation_3d[2][0] = ( visual_3d_vp->xv.z );

  00535	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0053a	d1 e0		 shl	 eax, 1
  0053c	b9 04 00 00 00	 mov	 ecx, 4
  00541	6b d1 00	 imul	 edx, ecx, 0
  00544	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0054a	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  0054d	89 8c 10 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx], ecx

; 394  : 		rotation_3d[2][1] = ( visual_3d_vp->yv.z );

  00554	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00559	d1 e0		 shl	 eax, 1
  0055b	b9 04 00 00 00	 mov	 ecx, 4
  00560	c1 e1 00	 shl	 ecx, 0
  00563	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00569	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  0056c	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 395  : 		rotation_3d[2][2] = ( visual_3d_vp->zv.z );

  00573	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00578	d1 e0		 shl	 eax, 1
  0057a	b9 04 00 00 00	 mov	 ecx, 4
  0057f	d1 e1		 shl	 ecx, 1
  00581	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00587	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  0058a	89 94 08 00 00
	00 00		 mov	 DWORD PTR ?rotation_3d@@3PAY02MA[eax+ecx], edx

; 396  : 
; 397  : 		outcode = 0;

  00591	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _outcode$[ebp], 0

; 398  : 
; 399  : 		outcode2 = CLIP_LEFT | CLIP_RIGHT | CLIP_TOP | CLIP_BOTTOM | CLIP_HITHER | CLIP_YONDER;

  00598	c7 45 f0 3f 00
	00 00		 mov	 DWORD PTR _outcode2$[ebp], 63 ; 0000003fH
$LN5@construct_:

; 400  : 
; 401  : 		while ( vert )

  0059f	83 7d f8 00	 cmp	 DWORD PTR _vert$[ebp], 0
  005a3	0f 84 0e 03 00
	00		 je	 $LN6@construct_

; 402  : 		{
; 403  : 	
; 404  : 			float
; 405  : 				x,
; 406  : 				y,
; 407  : 				z;
; 408  : 	
; 409  : 			x = vert->x * rotation_3d[0][0] + vert->y * rotation_3d[1][0] + vert->z * rotation_3d[2][0];

  005a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005ae	6b c8 00	 imul	 ecx, eax, 0
  005b1	ba 04 00 00 00	 mov	 edx, 4
  005b6	6b c2 00	 imul	 eax, edx, 0
  005b9	8b 55 f8	 mov	 edx, DWORD PTR _vert$[ebp]
  005bc	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  005c0	f3 0f 59 84 01
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+eax]
  005c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005ce	c1 e0 00	 shl	 eax, 0
  005d1	b9 04 00 00 00	 mov	 ecx, 4
  005d6	6b d1 00	 imul	 edx, ecx, 0
  005d9	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  005dc	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  005e1	f3 0f 59 8c 10
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[eax+edx]
  005ea	f3 0f 58 c1	 addss	 xmm0, xmm1
  005ee	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005f3	d1 e2		 shl	 edx, 1
  005f5	b8 04 00 00 00	 mov	 eax, 4
  005fa	6b c8 00	 imul	 ecx, eax, 0
  005fd	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00600	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00605	f3 0f 59 8c 0a
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[edx+ecx]
  0060e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00612	f3 0f 11 45 dc	 movss	 DWORD PTR _x$15[ebp], xmm0

; 410  : 			y = vert->x * rotation_3d[0][1] + vert->y * rotation_3d[1][1] + vert->z * rotation_3d[2][1];

  00617	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0061c	6b c8 00	 imul	 ecx, eax, 0
  0061f	ba 04 00 00 00	 mov	 edx, 4
  00624	c1 e2 00	 shl	 edx, 0
  00627	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0062a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0062e	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00637	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0063c	c1 e1 00	 shl	 ecx, 0
  0063f	ba 04 00 00 00	 mov	 edx, 4
  00644	c1 e2 00	 shl	 edx, 0
  00647	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0064a	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  0064f	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  00658	f3 0f 58 c1	 addss	 xmm0, xmm1
  0065c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00661	d1 e1		 shl	 ecx, 1
  00663	ba 04 00 00 00	 mov	 edx, 4
  00668	c1 e2 00	 shl	 edx, 0
  0066b	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0066e	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  00673	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  0067c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00680	f3 0f 11 45 d8	 movss	 DWORD PTR _y$14[ebp], xmm0

; 411  : 			z = vert->x * rotation_3d[0][2] + vert->y * rotation_3d[1][2] + vert->z * rotation_3d[2][2];

  00685	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0068a	6b c8 00	 imul	 ecx, eax, 0
  0068d	ba 04 00 00 00	 mov	 edx, 4
  00692	d1 e2		 shl	 edx, 1
  00694	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00697	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0069b	f3 0f 59 84 11
	00 00 00 00	 mulss	 xmm0, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  006a4	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006a9	c1 e1 00	 shl	 ecx, 0
  006ac	ba 04 00 00 00	 mov	 edx, 4
  006b1	d1 e2		 shl	 edx, 1
  006b3	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  006b6	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  006bb	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  006c4	f3 0f 58 c1	 addss	 xmm0, xmm1
  006c8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006cd	d1 e1		 shl	 ecx, 1
  006cf	ba 04 00 00 00	 mov	 edx, 4
  006d4	d1 e2		 shl	 edx, 1
  006d6	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  006d9	f3 0f 10 48 08	 movss	 xmm1, DWORD PTR [eax+8]
  006de	f3 0f 59 8c 11
	00 00 00 00	 mulss	 xmm1, DWORD PTR ?rotation_3d@@3PAY02MA[ecx+edx]
  006e7	f3 0f 58 c1	 addss	 xmm0, xmm1
  006eb	f3 0f 11 45 d4	 movss	 DWORD PTR _z$13[ebp], xmm0

; 412  : 
; 413  : 			x *= active_3d_environment->screen_i_scale;

  006f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  006f5	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$15[ebp]
  006fa	f3 0f 59 00	 mulss	 xmm0, DWORD PTR [eax]
  006fe	f3 0f 11 45 dc	 movss	 DWORD PTR _x$15[ebp], xmm0

; 414  : 			y *= active_3d_environment->screen_j_scale;

  00703	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00708	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$14[ebp]
  0070d	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00712	f3 0f 11 45 d8	 movss	 DWORD PTR _y$14[ebp], xmm0

; 415  : 	
; 416  : 			if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )

  00717	8b 45 d4	 mov	 eax, DWORD PTR _z$13[ebp]
  0071a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?clip_hither@@3MA
  00720	0f 8c 3c 01 00
	00		 jl	 $LN11@construct_

; 417  : 			{
; 418  : 	
; 419  : 				float
; 420  : 					q,
; 421  : 					i,
; 422  : 					j;
; 423  : 	
; 424  : 				float
; 425  : 					oxmax,
; 426  : 					oxmin,
; 427  : 					oymax,
; 428  : 					oymin;
; 429  : 			
; 430  : 				int
; 431  : 					ixmax,
; 432  : 					ixmin,
; 433  : 					iymax,
; 434  : 					iymin;
; 435  : 			
; 436  : 				q = 1.0 / z;

  00726	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _z$13[ebp]
  0072b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00733	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00737	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0073b	f3 0f 11 45 d0	 movss	 DWORD PTR _q$12[ebp], xmm0

; 437  : 
; 438  : 				vert->x = x;

  00740	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00743	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$15[ebp]
  00748	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 439  : 				vert->y = y;

  0074c	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0074f	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$14[ebp]
  00754	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 440  : 				vert->z = z;

  00759	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0075c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _z$13[ebp]
  00761	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 441  : 				vert->q = q;

  00766	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00769	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _q$12[ebp]
  0076e	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 442  : 	
; 443  : 				i = ( x * q );

  00773	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$15[ebp]
  00778	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _q$12[ebp]
  0077d	f3 0f 11 45 cc	 movss	 DWORD PTR _i$11[ebp], xmm0

; 444  : 				j = ( y * q );

  00782	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$14[ebp]
  00787	f3 0f 59 45 d0	 mulss	 xmm0, DWORD PTR _q$12[ebp]
  0078c	f3 0f 11 45 c8	 movss	 DWORD PTR _j$10[ebp], xmm0

; 445  : 	
; 446  : 				vert->j = active_3d_environment->y_origin - j;

  00791	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00796	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0079b	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _j$10[ebp]
  007a0	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  007a3	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 447  : 				vert->i = active_3d_environment->x_origin + i;

  007a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  007ad	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  007b2	f3 0f 58 45 cc	 addss	 xmm0, DWORD PTR _i$11[ebp]
  007b7	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  007ba	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 448  : 	
; 449  : 				oxmax = active_viewport.x_max - vert->i;

  007bf	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007c2	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  007ca	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  007cf	f3 0f 11 45 c4	 movss	 DWORD PTR _oxmax$9[ebp], xmm0

; 450  : 				oxmin = vert->i - active_viewport.x_min;

  007d4	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007d7	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  007dc	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  007e4	f3 0f 11 45 c0	 movss	 DWORD PTR _oxmin$8[ebp], xmm0

; 451  : 				oymax = active_viewport.y_max - vert->j;

  007e9	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  007ec	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  007f4	f3 0f 5c 40 14	 subss	 xmm0, DWORD PTR [eax+20]
  007f9	f3 0f 11 45 bc	 movss	 DWORD PTR _oymax$7[ebp], xmm0

; 452  : 				oymin = vert->j - active_viewport.y_min;

  007fe	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00801	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00806	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  0080e	f3 0f 11 45 b8	 movss	 DWORD PTR _oymin$6[ebp], xmm0

; 453  : 			
; 454  : 				ixmax = *( ( int * ) &oxmax );

  00813	8b 45 c4	 mov	 eax, DWORD PTR _oxmax$9[ebp]
  00816	89 45 b4	 mov	 DWORD PTR _ixmax$5[ebp], eax

; 455  : 				ixmin = *( ( int * ) &oxmin );

  00819	8b 45 c0	 mov	 eax, DWORD PTR _oxmin$8[ebp]
  0081c	89 45 b0	 mov	 DWORD PTR _ixmin$4[ebp], eax

; 456  : 				iymax = *( ( int * ) &oymax );

  0081f	8b 45 bc	 mov	 eax, DWORD PTR _oymax$7[ebp]
  00822	89 45 ac	 mov	 DWORD PTR _iymax$3[ebp], eax

; 457  : 				iymin = *( ( int * ) &oymin );

  00825	8b 45 b8	 mov	 eax, DWORD PTR _oymin$6[ebp]
  00828	89 45 a8	 mov	 DWORD PTR _iymin$2[ebp], eax

; 458  : 			
; 459  : 				vert->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  0082b	8b 45 ac	 mov	 eax, DWORD PTR _iymax$3[ebp]
  0082e	50		 push	 eax
  0082f	8b 4d b4	 mov	 ecx, DWORD PTR _ixmax$5[ebp]
  00832	51		 push	 ecx
  00833	8b 55 a8	 mov	 edx, DWORD PTR _iymin$2[ebp]
  00836	52		 push	 edx
  00837	8b 45 b0	 mov	 eax, DWORD PTR _ixmin$4[ebp]
  0083a	50		 push	 eax
  0083b	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  00840	8b 4d f8	 mov	 ecx, DWORD PTR _vert$[ebp]
  00843	88 41 2c	 mov	 BYTE PTR [ecx+44], al

; 460  : 
; 461  : 				outcode |= vert->outcode;

  00846	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00849	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  0084d	0b 4d f4	 or	 ecx, DWORD PTR _outcode$[ebp]
  00850	89 4d f4	 mov	 DWORD PTR _outcode$[ebp], ecx

; 462  : 				outcode2 &= vert->outcode;

  00853	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00856	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  0085a	23 4d f0	 and	 ecx, DWORD PTR _outcode2$[ebp]
  0085d	89 4d f0	 mov	 DWORD PTR _outcode2$[ebp], ecx

; 463  : 			}
; 464  : 			else

  00860	eb 47		 jmp	 SHORT $LN12@construct_
$LN11@construct_:

; 465  : 			{
; 466  : 	
; 467  : 				vert->outcode = CLIP_HITHER;

  00862	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00865	c6 40 2c 20	 mov	 BYTE PTR [eax+44], 32	; 00000020H

; 468  : 				vert->z = z;

  00869	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0086c	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _z$13[ebp]
  00871	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 469  : 				vert->x = x;

  00876	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00879	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x$15[ebp]
  0087e	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 470  : 				vert->y = y;

  00882	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00885	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y$14[ebp]
  0088a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 471  : 
; 472  : 				outcode |= vert->outcode;

  0088f	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  00892	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  00896	0b 4d f4	 or	 ecx, DWORD PTR _outcode$[ebp]
  00899	89 4d f4	 mov	 DWORD PTR _outcode$[ebp], ecx

; 473  : 				outcode2 &= vert->outcode;

  0089c	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  0089f	0f b6 48 2c	 movzx	 ecx, BYTE PTR [eax+44]
  008a3	23 4d f0	 and	 ecx, DWORD PTR _outcode2$[ebp]
  008a6	89 4d f0	 mov	 DWORD PTR _outcode2$[ebp], ecx
$LN12@construct_:

; 474  : 			}
; 475  : 	
; 476  : 			vert = vert->next_vertex;

  008a9	8b 45 f8	 mov	 eax, DWORD PTR _vert$[ebp]
  008ac	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  008af	89 4d f8	 mov	 DWORD PTR _vert$[ebp], ecx

; 477  : 		}

  008b2	e9 e8 fc ff ff	 jmp	 $LN5@construct_
$LN6@construct_:

; 478  : 
; 479  : 		if ( outcode2 )

  008b7	83 7d f0 00	 cmp	 DWORD PTR _outcode2$[ebp], 0
  008bb	74 07		 je	 SHORT $LN13@construct_

; 480  : 		{
; 481  : 
; 482  : 			return ( NULL );

  008bd	33 c0		 xor	 eax, eax
  008bf	e9 9b 00 00 00	 jmp	 $LN10@construct_
$LN13@construct_:

; 483  : 		}
; 484  : 
; 485  : 
; 486  : 		if ( outcode & CLIP_HITHER )

  008c4	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  008c7	83 e0 20	 and	 eax, 32			; 00000020H
  008ca	74 1a		 je	 SHORT $LN15@construct_

; 487  : 		{
; 488  : 	
; 489  : 			sun_polygon = hither_clip_3d_polygon ( sun_polygon, &outcode );

  008cc	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  008cf	50		 push	 eax
  008d0	8b 4d fc	 mov	 ecx, DWORD PTR _sun_polygon$[ebp]
  008d3	51		 push	 ecx
  008d4	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  008d9	89 45 fc	 mov	 DWORD PTR _sun_polygon$[ebp], eax

; 490  : 
; 491  : 			if ( !sun_polygon )

  008dc	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  008e0	75 04		 jne	 SHORT $LN15@construct_

; 492  : 			{
; 493  : 
; 494  : 				return ( NULL );

  008e2	33 c0		 xor	 eax, eax
  008e4	eb 79		 jmp	 SHORT $LN10@construct_
$LN15@construct_:

; 495  : 			}
; 496  : 		}
; 497  : 	
; 498  : 		if ( outcode )

  008e6	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  008ea	74 2c		 je	 SHORT $LN16@construct_

; 499  : 		{
; 500  : 
; 501  : 			apply_perspective_to_polygon_texture ( sun_polygon );

  008ec	8b 45 fc	 mov	 eax, DWORD PTR _sun_polygon$[ebp]
  008ef	50		 push	 eax
  008f0	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 502  : 			
; 503  : 			sun_polygon = clip_3d_polygon ( sun_polygon, outcode );

  008f5	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  008f8	50		 push	 eax
  008f9	8b 4d fc	 mov	 ecx, DWORD PTR _sun_polygon$[ebp]
  008fc	51		 push	 ecx
  008fd	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00902	89 45 fc	 mov	 DWORD PTR _sun_polygon$[ebp], eax

; 504  : 
; 505  : 			if ( !sun_polygon )

  00905	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  00909	75 04		 jne	 SHORT $LN17@construct_

; 506  : 			{
; 507  : 
; 508  : 				return ( NULL );

  0090b	33 c0		 xor	 eax, eax
  0090d	eb 50		 jmp	 SHORT $LN10@construct_
$LN17@construct_:

; 509  : 			}
; 510  : 
; 511  : 			remove_perspective_from_polygon_texture ( sun_polygon );

  0090f	8b 45 fc	 mov	 eax, DWORD PTR _sun_polygon$[ebp]
  00912	50		 push	 eax
  00913	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN16@construct_:

; 512  : 		}
; 513  : 
; 514  : 		if ( sun_polygon )

  00918	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  0091c	74 38		 je	 SHORT $LN8@construct_

; 515  : 		{
; 516  : 
; 517  : 			vertex
; 518  : 				*p;
; 519  : 
; 520  : 			p = sun_polygon;

  0091e	8b 45 fc	 mov	 eax, DWORD PTR _sun_polygon$[ebp]
  00921	89 45 a4	 mov	 DWORD PTR _p$1[ebp], eax
$LN7@construct_:

; 521  : 
; 522  : 			while ( p )

  00924	83 7d a4 00	 cmp	 DWORD PTR _p$1[ebp], 0
  00928	74 2c		 je	 SHORT $LN8@construct_

; 523  : 			{
; 524  : 
; 525  : 				if ( p->q < clip_yonder_reciprocal )

  0092a	8b 45 a4	 mov	 eax, DWORD PTR _p$1[ebp]
  0092d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?clip_yonder_reciprocal@@3MA
  00935	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  00939	76 10		 jbe	 SHORT $LN19@construct_

; 526  : 				{
; 527  : 
; 528  : 					p->q = clip_yonder_reciprocal;

  0093b	8b 45 a4	 mov	 eax, DWORD PTR _p$1[ebp]
  0093e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?clip_yonder_reciprocal@@3MA
  00946	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
$LN19@construct_:

; 529  : 				}
; 530  : 
; 531  : 				p = p->next_vertex;

  0094b	8b 45 a4	 mov	 eax, DWORD PTR _p$1[ebp]
  0094e	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00951	89 4d a4	 mov	 DWORD PTR _p$1[ebp], ecx

; 532  : 			}

  00954	eb ce		 jmp	 SHORT $LN7@construct_
$LN8@construct_:

; 533  : 		}
; 534  : 
; 535  : 		return ( sun_polygon );

  00956	8b 45 fc	 mov	 eax, DWORD PTR _sun_polygon$[ebp]
  00959	eb 04		 jmp	 SHORT $LN10@construct_

; 536  : 	}
; 537  : 	else

  0095b	eb 02		 jmp	 SHORT $LN10@construct_
$LN9@construct_:

; 538  : 	{
; 539  : 
; 540  : 		return ( NULL );

  0095d	33 c0		 xor	 eax, eax
$LN10@construct_:

; 541  : 	}
; 542  : }

  0095f	5f		 pop	 edi
  00960	5e		 pop	 esi
  00961	5b		 pop	 ebx
  00962	8b e5		 mov	 esp, ebp
  00964	5d		 pop	 ebp
  00965	c2 14 00	 ret	 20			; 00000014H
?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z ENDP ; construct_sun_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?draw_3d_sun@@YGXXZ
_TEXT	SEGMENT
_specular$ = -320					; size = 4
_colour$ = -316						; size = 4
_sun_blue$ = -312					; size = 4
_sun_green$ = -308					; size = 4
_sun_red$ = -304					; size = 4
_flare_intensity$ = -300				; size = 4
_sun_matrix$ = -296					; size = 36
_sun_quad$ = -260					; size = 256
_sun_polygon$ = -4					; size = 4
?draw_3d_sun@@YGXXZ PROC				; draw_3d_sun, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 01 00
	00		 sub	 esp, 384		; 00000180H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 154  : 
; 155  : 	vertex
; 156  : 		*sun_polygon,
; 157  : 		sun_quad[4];
; 158  : 
; 159  : 	matrix3x3
; 160  : 		sun_matrix;
; 161  : 
; 162  : 	float
; 163  : 		flare_intensity;
; 164  : 
; 165  : 	int
; 166  : 		sun_red,
; 167  : 		sun_green,
; 168  : 		sun_blue;
; 169  : 
; 170  : 	real_colour
; 171  : 		colour,
; 172  : 		specular;
; 173  : 
; 174  : 	//
; 175  : 	// Draw the main sun object
; 176  : 	//
; 177  : 
; 178  : 	get_3d_transformation_matrix ( sun_matrix, sun_3d_heading, sun_3d_pitch, 0 );

  0000c	51		 push	 ecx
  0000d	0f 57 c0	 xorps	 xmm0, xmm0
  00010	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00015	51		 push	 ecx
  00016	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sun_3d_pitch@@3MA
  0001e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00023	51		 push	 ecx
  00024	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sun_3d_heading@@3MA
  0002c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00031	8d 85 d8 fe ff
	ff		 lea	 eax, DWORD PTR _sun_matrix$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 179  : 
; 180  : 	sun_polygon = construct_sun_polygon ( sun_matrix, sun_quad, 32000 * sun_3d_scale, 32000 * sun_3d_scale, 100000 );

  0003d	51		 push	 ecx
  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47c35000
  00046	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46fa0000
  00053	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?sun_3d_scale@@3MA
  0005b	51		 push	 ecx
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@46fa0000
  00069	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?sun_3d_scale@@3MA
  00071	51		 push	 ecx
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _sun_quad$[ebp]
  0007d	50		 push	 eax
  0007e	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sun_matrix$[ebp]
  00084	51		 push	 ecx
  00085	e8 00 00 00 00	 call	 ?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z ; construct_sun_polygon
  0008a	89 45 fc	 mov	 DWORD PTR _sun_polygon$[ebp], eax

; 181  : 
; 182  : 	specular.colour = 0;

  0008d	c7 85 c0 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR _specular$[ebp], 0

; 183  : 
; 184  : 	if ( sun_polygon )

  00097	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  0009b	0f 84 41 01 00
	00		 je	 $LN2@draw_3d_su

; 185  : 	{
; 186  : 
; 187  : 		asm_convert_float_to_int ( ( sun_3d_colour.red * 255 ), &sun_red );

  000a1	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _sun_red$[ebp]
  000a7	50		 push	 eax
  000a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A
  000b0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000b8	51		 push	 ecx
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 188  : 		asm_convert_float_to_int ( ( sun_3d_colour.green * 255 ), &sun_green );

  000c3	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _sun_green$[ebp]
  000c9	50		 push	 eax
  000ca	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A+4
  000d2	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000da	51		 push	 ecx
  000db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e0	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 189  : 		asm_convert_float_to_int ( ( sun_3d_colour.blue * 255 ), &sun_blue );

  000e5	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _sun_blue$[ebp]
  000eb	50		 push	 eax
  000ec	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A+8
  000f4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  000fc	51		 push	 ecx
  000fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00102	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 190  : 
; 191  : 		colour.red = sun_red;

  00107	8a 85 d0 fe ff
	ff		 mov	 al, BYTE PTR _sun_red$[ebp]
  0010d	88 85 c6 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+2], al

; 192  : 		colour.green = sun_green;

  00113	8a 85 cc fe ff
	ff		 mov	 al, BYTE PTR _sun_green$[ebp]
  00119	88 85 c5 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+1], al

; 193  : 		colour.blue = sun_blue;

  0011f	8a 85 c8 fe ff
	ff		 mov	 al, BYTE PTR _sun_blue$[ebp]
  00125	88 85 c4 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp], al

; 194  : 
; 195  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, D3DCMP_ALWAYS );

  0012b	6a 08		 push	 8
  0012d	6a 17		 push	 23			; 00000017H
  0012f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 196  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, FALSE );

  00134	6a 00		 push	 0
  00136	6a 0e		 push	 14			; 0000000eH
  00138	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 197  : 	
; 198  : 		suspend_d3d_fog ();

  0013d	e8 00 00 00 00	 call	 ?suspend_d3d_fog@@YGXXZ	; suspend_d3d_fog

; 199  : 	
; 200  : 		set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_FLAT );

  00142	6a 01		 push	 1
  00144	6a 09		 push	 9
  00146	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 201  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  0014b	6a 01		 push	 1
  0014d	6a 1b		 push	 27			; 0000001bH
  0014f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 202  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, ADDITIVE_SOURCE_BLEND );

  00154	6a 02		 push	 2
  00156	6a 13		 push	 19			; 00000013H
  00158	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 203  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, ADDITIVE_DESTINATION_BLEND );

  0015d	6a 02		 push	 2
  0015f	6a 14		 push	 20			; 00000014H
  00161	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 204  : 
; 205  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_CLAMP );

  00166	6a 03		 push	 3
  00168	6a 0d		 push	 13			; 0000000dH
  0016a	6a 00		 push	 0
  0016c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 206  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_CLAMP );

  00171	6a 03		 push	 3
  00173	6a 0e		 push	 14			; 0000000eH
  00175	6a 00		 push	 0
  00177	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 207  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, D3DTFG_LINEAR );

  0017c	6a 02		 push	 2
  0017e	6a 10		 push	 16			; 00000010H
  00180	6a 00		 push	 0
  00182	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 208  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, D3DTFN_LINEAR );

  00187	6a 02		 push	 2
  00189	6a 11		 push	 17			; 00000011H
  0018b	6a 00		 push	 0
  0018d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 209  : 
; 210  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00192	6a 04		 push	 4
  00194	6a 01		 push	 1
  00196	6a 00		 push	 0
  00198	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 211  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  0019d	6a 02		 push	 2
  0019f	6a 02		 push	 2
  001a1	6a 00		 push	 0
  001a3	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 212  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  001a8	6a 00		 push	 0
  001aa	6a 03		 push	 3
  001ac	6a 00		 push	 0
  001ae	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 213  : 
; 214  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  001b3	6a 01		 push	 1
  001b5	6a 04		 push	 4
  001b7	6a 00		 push	 0
  001b9	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 215  : 
; 216  : 		set_d3d_texture ( 0, sun_texture );

  001be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sun_texture@@3PAUSCREEN@@A ; sun_texture
  001c3	50		 push	 eax
  001c4	6a 00		 push	 0
  001c6	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 217  : 
; 218  : 		draw_wbuffered_flat_shaded_textured_polygon ( sun_polygon, colour, specular );

  001cb	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  001d1	50		 push	 eax
  001d2	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  001d8	51		 push	 ecx
  001d9	8b 55 fc	 mov	 edx, DWORD PTR _sun_polygon$[ebp]
  001dc	52		 push	 edx
  001dd	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN2@draw_3d_su:

; 219  : 	}
; 220  : 
; 221  : 	//
; 222  : 	// Now render the flare around the sun, if it is indeed there.
; 223  : 	//
; 224  : 
; 225  : 	//
; 226  : 	// Calculate the intensity of the sun flare
; 227  : 	//
; 228  : 
; 229  : 	flare_intensity = (	( sun_matrix[2][0] * visual_3d_vp->zv.x ) +

  001e2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001e7	d1 e0		 shl	 eax, 1
  001e9	8d 8c 05 d8 fe
	ff ff		 lea	 ecx, DWORD PTR _sun_matrix$[ebp+eax]
  001f0	ba 04 00 00 00	 mov	 edx, 4
  001f5	6b c2 00	 imul	 eax, edx, 0
  001f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001fe	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00203	f3 0f 59 42 24	 mulss	 xmm0, DWORD PTR [edx+36]
  00208	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0020d	d1 e0		 shl	 eax, 1
  0020f	8d 8c 05 d8 fe
	ff ff		 lea	 ecx, DWORD PTR _sun_matrix$[ebp+eax]
  00216	ba 04 00 00 00	 mov	 edx, 4
  0021b	c1 e2 00	 shl	 edx, 0
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00223	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00228	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  0022d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00231	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00236	d1 e1		 shl	 ecx, 1
  00238	8d 94 0d d8 fe
	ff ff		 lea	 edx, DWORD PTR _sun_matrix$[ebp+ecx]
  0023f	b8 04 00 00 00	 mov	 eax, 4
  00244	d1 e0		 shl	 eax, 1
  00246	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0024c	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00251	f3 0f 59 49 2c	 mulss	 xmm1, DWORD PTR [ecx+44]
  00256	f3 0f 58 c1	 addss	 xmm0, xmm1
  0025a	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 230  : 							 	( sun_matrix[2][1] * visual_3d_vp->zv.y ) +
; 231  : 							 	( sun_matrix[2][2] * visual_3d_vp->zv.z ) );
; 232  : 
; 233  : 	flare_intensity *= flare_intensity;

  00262	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  0026a	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  00272	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 234  : 	flare_intensity *= flare_intensity;

  0027a	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  00282	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  0028a	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 235  : 	flare_intensity *= flare_intensity;

  00292	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  0029a	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002a2	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 236  : 	flare_intensity *= flare_intensity;

  002aa	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002b2	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002ba	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 237  : 	flare_intensity *= flare_intensity;

  002c2	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002ca	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002d2	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 238  : 	flare_intensity *= flare_intensity;

  002da	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002e2	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002ea	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 239  : 	flare_intensity *= flare_intensity;

  002f2	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  002fa	f3 0f 59 85 d4
	fe ff ff	 mulss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  00302	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 240  : 
; 241  : 	flare_intensity *= sun_3d_intensity;

  0030a	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  00312	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?sun_3d_intensity@@3MA
  0031a	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 242  : 	flare_intensity *= sun_3d_intensity;

  00322	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  0032a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?sun_3d_intensity@@3MA
  00332	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 243  : 	flare_intensity *= sun_3d_intensity;

  0033a	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  00342	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?sun_3d_intensity@@3MA
  0034a	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 244  : 
; 245  : 	flare_intensity *= 255;

  00352	f3 0f 10 85 d4
	fe ff ff	 movss	 xmm0, DWORD PTR _flare_intensity$[ebp]
  0035a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@437f0000
  00362	f3 0f 11 85 d4
	fe ff ff	 movss	 DWORD PTR _flare_intensity$[ebp], xmm0

; 246  : 
; 247  : 	sun_polygon = construct_sun_polygon ( sun_matrix, sun_quad, 144000, 69750, 100000 );

  0036a	51		 push	 ecx
  0036b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47c35000
  00373	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00378	51		 push	 ecx
  00379	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@47883b00
  00381	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00386	51		 push	 ecx
  00387	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@480ca000
  0038f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00394	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _sun_quad$[ebp]
  0039a	50		 push	 eax
  0039b	8d 8d d8 fe ff
	ff		 lea	 ecx, DWORD PTR _sun_matrix$[ebp]
  003a1	51		 push	 ecx
  003a2	e8 00 00 00 00	 call	 ?construct_sun_polygon@@YGPAUVERTEX@@QAY02MPAU1@MMM@Z ; construct_sun_polygon
  003a7	89 45 fc	 mov	 DWORD PTR _sun_polygon$[ebp], eax

; 248  : 
; 249  : 	if ( sun_polygon )

  003aa	83 7d fc 00	 cmp	 DWORD PTR _sun_polygon$[ebp], 0
  003ae	0f 84 4d 01 00
	00		 je	 $LN3@draw_3d_su

; 250  : 	{
; 251  : 
; 252  : 		asm_convert_float_to_int ( ( ( 74.0 / 255.0 ) * flare_intensity ), &sun_red );

  003b4	8d 85 d0 fe ff
	ff		 lea	 eax, DWORD PTR _sun_red$[ebp]
  003ba	50		 push	 eax
  003bb	f3 0f 5a 85 d4
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _flare_intensity$[ebp]
  003c3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd2929292929293
  003cb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003cf	51		 push	 ecx
  003d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d5	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 253  : 		asm_convert_float_to_int ( ( ( 177.0 / 255.0 ) * flare_intensity ), &sun_green );

  003da	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _sun_green$[ebp]
  003e0	50		 push	 eax
  003e1	f3 0f 5a 85 d4
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _flare_intensity$[ebp]
  003e9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe6363636363636
  003f1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003f5	51		 push	 ecx
  003f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fb	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 254  : 		asm_convert_float_to_int ( ( ( 248.0 / 255.0 ) * flare_intensity ), &sun_blue );

  00400	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _sun_blue$[ebp]
  00406	50		 push	 eax
  00407	f3 0f 5a 85 d4
	fe ff ff	 cvtss2sd xmm0, DWORD PTR _flare_intensity$[ebp]
  0040f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fef1f1f1f1f1f1f
  00417	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0041b	51		 push	 ecx
  0041c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00421	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 255  : //		asm_convert_float_to_int ( ( sun_3d_colour.red * flare_intensity ), &sun_red );
; 256  : //		asm_convert_float_to_int ( ( sun_3d_colour.green * flare_intensity ), &sun_green );
; 257  : //		asm_convert_float_to_int ( ( sun_3d_colour.blue * flare_intensity ), &sun_blue );
; 258  : 
; 259  : 		colour.red = sun_red;

  00426	8a 85 d0 fe ff
	ff		 mov	 al, BYTE PTR _sun_red$[ebp]
  0042c	88 85 c6 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+2], al

; 260  : 		colour.green = sun_green;

  00432	8a 85 cc fe ff
	ff		 mov	 al, BYTE PTR _sun_green$[ebp]
  00438	88 85 c5 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp+1], al

; 261  : 		colour.blue = sun_blue;

  0043e	8a 85 c8 fe ff
	ff		 mov	 al, BYTE PTR _sun_blue$[ebp]
  00444	88 85 c4 fe ff
	ff		 mov	 BYTE PTR _colour$[ebp], al

; 262  : 
; 263  : 		set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, D3DCMP_ALWAYS );

  0044a	6a 08		 push	 8
  0044c	6a 17		 push	 23			; 00000017H
  0044e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 264  : 		set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, FALSE );

  00453	6a 00		 push	 0
  00455	6a 0e		 push	 14			; 0000000eH
  00457	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 265  : 	
; 266  : 		suspend_d3d_fog ();

  0045c	e8 00 00 00 00	 call	 ?suspend_d3d_fog@@YGXXZ	; suspend_d3d_fog

; 267  : 	
; 268  : 		set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_FLAT );

  00461	6a 01		 push	 1
  00463	6a 09		 push	 9
  00465	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 269  : 		set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, TRUE );

  0046a	6a 01		 push	 1
  0046c	6a 1b		 push	 27			; 0000001bH
  0046e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 270  : 		set_d3d_int_state ( D3DRENDERSTATE_SRCBLEND, ADDITIVE_SOURCE_BLEND );

  00473	6a 02		 push	 2
  00475	6a 13		 push	 19			; 00000013H
  00477	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 271  : 		set_d3d_int_state ( D3DRENDERSTATE_DESTBLEND, ADDITIVE_DESTINATION_BLEND );

  0047c	6a 02		 push	 2
  0047e	6a 14		 push	 20			; 00000014H
  00480	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 272  : 
; 273  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_CLAMP );

  00485	6a 03		 push	 3
  00487	6a 0d		 push	 13			; 0000000dH
  00489	6a 00		 push	 0
  0048b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 274  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_CLAMP );

  00490	6a 03		 push	 3
  00492	6a 0e		 push	 14			; 0000000eH
  00494	6a 00		 push	 0
  00496	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 275  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, D3DTFG_LINEAR );

  0049b	6a 02		 push	 2
  0049d	6a 10		 push	 16			; 00000010H
  0049f	6a 00		 push	 0
  004a1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 276  : 		set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, D3DTFN_LINEAR );

  004a6	6a 02		 push	 2
  004a8	6a 11		 push	 17			; 00000011H
  004aa	6a 00		 push	 0
  004ac	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 277  : 
; 278  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  004b1	6a 04		 push	 4
  004b3	6a 01		 push	 1
  004b5	6a 00		 push	 0
  004b7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 279  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  004bc	6a 02		 push	 2
  004be	6a 02		 push	 2
  004c0	6a 00		 push	 0
  004c2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 280  : 		set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  004c7	6a 00		 push	 0
  004c9	6a 03		 push	 3
  004cb	6a 00		 push	 0
  004cd	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 281  : 
; 282  : 		set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  004d2	6a 01		 push	 1
  004d4	6a 04		 push	 4
  004d6	6a 00		 push	 0
  004d8	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 283  : 	
; 284  : 		set_d3d_texture ( 0, sun_flare_texture );

  004dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sun_flare_texture@@3PAUSCREEN@@A ; sun_flare_texture
  004e2	50		 push	 eax
  004e3	6a 00		 push	 0
  004e5	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 285  : 
; 286  : 		draw_wbuffered_flat_shaded_textured_polygon ( sun_polygon, colour, specular );

  004ea	8b 85 c0 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  004f0	50		 push	 eax
  004f1	8b 8d c4 fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  004f7	51		 push	 ecx
  004f8	8b 55 fc	 mov	 edx, DWORD PTR _sun_polygon$[ebp]
  004fb	52		 push	 edx
  004fc	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN3@draw_3d_su:

; 287  : 	}
; 288  : 
; 289  : 	set_d3d_int_state ( D3DRENDERSTATE_ALPHABLENDENABLE, FALSE );

  00501	6a 00		 push	 0
  00503	6a 1b		 push	 27			; 0000001bH
  00505	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 290  : 
; 291  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );

  0050a	6a 01		 push	 1
  0050c	6a 01		 push	 1
  0050e	6a 00		 push	 0
  00510	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 292  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG1, D3DTA_TEXTURE );

  00515	6a 02		 push	 2
  00517	6a 02		 push	 2
  00519	6a 00		 push	 0
  0051b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 293  : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLORARG2, D3DTA_DIFFUSE );

  00520	6a 00		 push	 0
  00522	6a 03		 push	 3
  00524	6a 00		 push	 0
  00526	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 294  : 	set_d3d_texture ( 0, NULL );

  0052b	6a 00		 push	 0
  0052d	6a 00		 push	 0
  0052f	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 295  : 
; 296  : 	set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAOP, D3DTOP_DISABLE );

  00534	6a 01		 push	 1
  00536	6a 04		 push	 4
  00538	6a 00		 push	 0
  0053a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 297  : 	set_d3d_texture_stage_state ( 0, D3DTSS_ALPHAARG2, D3DTA_DIFFUSE );

  0053f	6a 00		 push	 0
  00541	6a 06		 push	 6
  00543	6a 00		 push	 0
  00545	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 298  : 
; 299  : 	reinstate_d3d_fog ();

  0054a	e8 00 00 00 00	 call	 ?reinstate_d3d_fog@@YGXXZ ; reinstate_d3d_fog

; 300  : 
; 301  : 	set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, zbuffer_default_comparison );

  0054f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?zbuffer_default_comparison@@3W4_D3DCMPFUNC@@A ; zbuffer_default_comparison
  00554	50		 push	 eax
  00555	6a 17		 push	 23			; 00000017H
  00557	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 302  : 	set_d3d_int_state ( D3DRENDERSTATE_ZWRITEENABLE, TRUE );

  0055c	6a 01		 push	 1
  0055e	6a 0e		 push	 14			; 0000000eH
  00560	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 303  : }

  00565	5f		 pop	 edi
  00566	5e		 pop	 esi
  00567	5b		 pop	 ebx
  00568	8b e5		 mov	 esp, ebp
  0056a	5d		 pop	 ebp
  0056b	c3		 ret	 0
?draw_3d_sun@@YGXXZ ENDP				; draw_3d_sun
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?set_3d_sun_scale@@YGXM@Z
_TEXT	SEGMENT
_scale$ = 8						; size = 4
?set_3d_sun_scale@@YGXM@Z PROC				; set_3d_sun_scale, COMDAT

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 
; 145  : 	sun_3d_scale = scale;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _scale$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sun_3d_scale@@3MA, xmm0

; 146  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_3d_sun_scale@@YGXM@Z ENDP				; set_3d_sun_scale
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?set_3d_sun_light_intensity@@YGXM@Z
_TEXT	SEGMENT
_intensity$ = 8						; size = 4
?set_3d_sun_light_intensity@@YGXM@Z PROC		; set_3d_sun_light_intensity, COMDAT

; 133  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 134  : 
; 135  : 	sun_3d_intensity = intensity;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _intensity$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sun_3d_intensity@@3MA, xmm0

; 136  : }

  00016	5f		 pop	 edi
  00017	5e		 pop	 esi
  00018	5b		 pop	 ebx
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
?set_3d_sun_light_intensity@@YGXM@Z ENDP		; set_3d_sun_light_intensity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z
_TEXT	SEGMENT
_colour$ = 8						; size = 4
?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z PROC		; set_3d_sun_colour, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 122  : 
; 123  : 	ASSERT ( colour );

  00009	83 7d 08 00	 cmp	 DWORD PTR _colour$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_sun
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@IKPFJPMO@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06FBNLAHKA@colour@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_sun:

; 124  : 
; 125  : 	sun_3d_colour = *colour;

  00027	8b 45 08	 mov	 eax, DWORD PTR _colour$[ebp]
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A, ecx
  00032	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00035	89 15 04 00 00
	00		 mov	 DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A+4, edx
  0003b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003e	89 0d 08 00 00
	00		 mov	 DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A+8, ecx
  00044	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00047	89 15 0c 00 00
	00		 mov	 DWORD PTR ?sun_3d_colour@@3ULIGHT_COLOUR@@A+12, edx

; 126  : }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c2 04 00	 ret	 4
?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z ENDP		; set_3d_sun_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?set_3d_sun_position@@YGXMM@Z
_TEXT	SEGMENT
_heading$ = 8						; size = 4
_pitch$ = 12						; size = 4
?set_3d_sun_position@@YGXMM@Z PROC			; set_3d_sun_position, COMDAT

; 109  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 110  : 
; 111  : 	sun_3d_heading = heading;

  00009	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sun_3d_heading@@3MA, xmm0

; 112  : 
; 113  : 	sun_3d_pitch = pitch;

  00016	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0001b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sun_3d_pitch@@3MA, xmm0

; 114  : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c2 08 00	 ret	 8
?set_3d_sun_position@@YGXMM@Z ENDP			; set_3d_sun_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dsun.c
;	COMDAT ?initialise_3d_sun@@YGXHH@Z
_TEXT	SEGMENT
_sun_index$ = 8						; size = 4
_sun_flare_index$ = 12					; size = 4
?initialise_3d_sun@@YGXHH@Z PROC			; initialise_3d_sun, COMDAT

; 97   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 98   : 
; 99   : 	sun_texture = system_textures[sun_index];

  00009	8b 45 08	 mov	 eax, DWORD PTR _sun_index$[ebp]
  0000c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  00013	89 0d 00 00 00
	00		 mov	 DWORD PTR ?sun_texture@@3PAUSCREEN@@A, ecx ; sun_texture

; 100  : 
; 101  : 	sun_flare_texture = system_textures[sun_flare_index];

  00019	8b 45 0c	 mov	 eax, DWORD PTR _sun_flare_index$[ebp]
  0001c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  00023	89 0d 00 00 00
	00		 mov	 DWORD PTR ?sun_flare_texture@@3PAUSCREEN@@A, ecx ; sun_flare_texture

; 102  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 08 00	 ret	 8
?initialise_3d_sun@@YGXHH@Z ENDP			; initialise_3d_sun
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
