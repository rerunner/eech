; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\button\bu_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_button_ui_object_draw_functions@@YGXH@Z ; overload_button_ui_object_draw_functions
PUBLIC	__real@3f800000
EXTRN	_strchr:PROC
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_save_current_font@@YGXXZ:PROC		; ui_save_current_font
EXTRN	?ui_restore_current_font@@YGXXZ:PROC		; ui_restore_current_font
EXTRN	?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_set_object_font
EXTRN	?ui_object_autosize@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_object_autosize
EXTRN	?get_text_y_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@H@Z:PROC ; get_text_y_position
EXTRN	?get_text_x_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@@Z:PROC ; get_text_x_position
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_draw_button@@YGXMMMMH@Z:PROC		; ui_draw_button
EXTRN	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z:PROC	; ui_draw_area
EXTRN	?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z:PROC ; ui_draw_texture_graphic
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_get_ui_object_autosize@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_autosize
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted
EXTRN	?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_colour
EXTRN	?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA:BYTE ; fn_call_ui_object_draw_function
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text_justify
EXTRN	?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_texture_graphic
EXTRN	?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_texture_graphic
EXTRN	?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_selected_texture_graphic
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic_type
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\button\bu_draw.c
;	COMDAT ?draw_button_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv476 = -148						; size = 4
tv468 = -148						; size = 4
tv182 = -148						; size = 4
$T1 = -144						; size = 4
_y3$2 = -76						; size = 4
_count$3 = -72						; size = 4
_text_ptr$4 = -68					; size = 4
_state$5 = -64						; size = 4
_text_colour$6 = -60					; size = 4
_colour$7 = -56						; size = 4
_graphic$8 = -52					; size = 4
_button$ = -48						; size = 4
_old_active_screen$ = -44				; size = 4
_redraw_flag$ = -40					; size = 4
_y2$ = -36						; size = 4
_x2$ = -32						; size = 4
_y1$ = -28						; size = 4
_x1$ = -24						; size = 4
_y_origin$ = -20					; size = 4
_x_origin$ = -16					; size = 4
_y_size$ = -12						; size = 4
_x_size$ = -8						; size = 4
_x$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_button_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; draw_button_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : //		px1,
; 78   : //		py1,
; 79   : 		x,
; 80   : 		//y,
; 81   : 		//vp_x1,
; 82   : 		//vp_y1,
; 83   : 		//vp_x2,
; 84   : 		//vp_y2,
; 85   : 		x_size,
; 86   : 		y_size,
; 87   : 		x_origin,
; 88   : 		y_origin,
; 89   : 		x1,
; 90   : 		y1,
; 91   : 		x2,
; 92   : 		y2;
; 93   : 		//nx1,
; 94   : 		//ny1,
; 95   : 		//nx2,
; 96   : 		//ny2;
; 97   : 
; 98   : 	int
; 99   : 		redraw_flag = FALSE;

  0000c	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 0

; 100  : //		width,
; 101  : //		height,
; 102  : //		pitch;
; 103  : 
; 104  : 	struct SCREEN
; 105  : 		*old_active_screen;
; 106  : //		*memory_graphic;
; 107  : 
; 108  : //	unsigned short
; 109  : //		*graphic;
; 110  : 
; 111  : //	unsigned char
; 112  : //		*data;
; 113  : 
; 114  : //	ui_object
; 115  : //		*parent;
; 116  : 
; 117  : 	button_ui_object
; 118  : 		*button;
; 119  : 
; 120  : 	button = obj->button;

  00013	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00016	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00019	89 4d d0	 mov	 DWORD PTR _button$[ebp], ecx

; 121  : 
; 122  : 	if (get_ui_object_redraw (obj))

  0001c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0001f	50		 push	 eax
  00020	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0002c	ff d0		 call	 eax
  0002e	85 c0		 test	 eax, eax
  00030	0f 84 87 05 00
	00		 je	 $LN8@draw_butto

; 123  : 	{
; 124  : 
; 125  : 		if (get_ui_object_autosize (obj))

  00036	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_autosize@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00046	ff d0		 call	 eax
  00048	85 c0		 test	 eax, eax
  0004a	74 09		 je	 SHORT $LN9@draw_butto

; 126  : 		{
; 127  : 
; 128  : 			ui_object_autosize (obj);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?ui_object_autosize@@YGXPAUUI_OBJECT@@@Z ; ui_object_autosize
$LN9@draw_butto:

; 129  : 		}
; 130  : 
; 131  : 		//debug_log ("BU_DRAW: drawing button %f, %f  %f, %f", button->area.x, button->area.y, button->area.x_size, button->area.y_size);
; 132  : 
; 133  : 		//x1 = get_ui_object_x (obj);
; 134  : 		//y1 = get_ui_object_y (obj);
; 135  : 
; 136  : 		x_size = get_ui_object_x_size (obj);

  00055	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00058	50		 push	 eax
  00059	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00065	ff d0		 call	 eax
  00067	d9 5d f8	 fstp	 DWORD PTR _x_size$[ebp]

; 137  : 		y_size = get_ui_object_y_size (obj);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0007a	ff d0		 call	 eax
  0007c	d9 5d f4	 fstp	 DWORD PTR _y_size$[ebp]

; 138  : 	
; 139  : 		x_origin = get_ui_object_x_origin (obj);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	d9 5d f0	 fstp	 DWORD PTR _x_origin$[ebp]

; 140  : 		y_origin = get_ui_object_y_origin (obj);

  00094	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00097	50		 push	 eax
  00098	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a4	ff d0		 call	 eax
  000a6	d9 5d ec	 fstp	 DWORD PTR _y_origin$[ebp]

; 141  : 	
; 142  : 		ui_set_origin (x_origin, y_origin);

  000a9	51		 push	 ecx
  000aa	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  000af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b4	51		 push	 ecx
  000b5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 143  : 
; 144  : 
; 145  : 		//x2 = x1 + x_size;// - 1;
; 146  : 		//y2 = y1 + y_size;// - 1;
; 147  : 
; 148  : 		x1 = get_ui_object_x (obj);

  000c4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000c7	50		 push	 eax
  000c8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000d4	ff d0		 call	 eax
  000d6	d9 5d e8	 fstp	 DWORD PTR _x1$[ebp]

; 149  : 		y1 = get_ui_object_y (obj);

  000d9	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000dc	50		 push	 eax
  000dd	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000e9	ff d0		 call	 eax
  000eb	d9 5d e4	 fstp	 DWORD PTR _y1$[ebp]

; 150  : 
; 151  : 		x1 += x_origin;

  000ee	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  000f3	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _x_origin$[ebp]
  000f8	f3 0f 11 45 e8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 152  : 		y1 += y_origin;

  000fd	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00102	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _y_origin$[ebp]
  00107	f3 0f 11 45 e4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 153  : 
; 154  : 		x2 = x1 + get_ui_object_x_size (obj);

  0010c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0010f	50		 push	 eax
  00110	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00113	8b 11		 mov	 edx, DWORD PTR [ecx]
  00115	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0011c	ff d0		 call	 eax
  0011e	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv468[ebp]
  00124	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv468[ebp]
  0012c	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _x1$[ebp]
  00131	f3 0f 11 45 e0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 155  : 		y2 = y1 + get_ui_object_y_size (obj);

  00136	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00139	50		 push	 eax
  0013a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0013d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00146	ff d0		 call	 eax
  00148	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv476[ebp]
  0014e	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv476[ebp]
  00156	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _y1$[ebp]
  0015b	f3 0f 11 45 dc	 movss	 DWORD PTR _y2$[ebp], xmm0

; 156  : 
; 157  : 		old_active_screen = get_active_screen ();

  00160	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  00165	89 45 d4	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 158  : 
; 159  : 		if (get_ui_object_active_screen (obj))

  00168	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0016b	50		 push	 eax
  0016c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0016f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00171	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  00178	ff d0		 call	 eax
  0017a	85 c0		 test	 eax, eax
  0017c	74 1a		 je	 SHORT $LN10@draw_butto

; 160  : 		{
; 161  : 	
; 162  : 			set_active_screen (get_ui_object_active_screen (obj));

  0017e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00181	50		 push	 eax
  00182	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00185	8b 11		 mov	 edx, DWORD PTR [ecx]
  00187	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  0018e	ff d0		 call	 eax
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 163  : 		}
; 164  : 		else

  00196	eb 0b		 jmp	 SHORT $LN11@draw_butto
$LN10@draw_butto:

; 165  : 		{
; 166  : 
; 167  : 			set_active_screen (video_screen);

  00198	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN11@draw_butto:

; 168  : 		}
; 169  : 
; 170  : 		// debug
; 171  : 		set_active_screen (video_screen);

  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001a8	50		 push	 eax
  001a9	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 172  : 		// debug
; 173  : 
; 174  : //		if (lock_screen (active_screen))
; 175  : 		{
; 176  : 
; 177  : //			memory_graphic = get_ui_object_memory_graphic (obj);
; 178  : 	
; 179  : 			if (!get_ui_object_clear (obj))

  001ae	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  001be	ff d0		 call	 eax
  001c0	85 c0		 test	 eax, eax
  001c2	0f 85 ed 01 00
	00		 jne	 $LN2@draw_butto

; 180  : 			{
; 181  : 	
; 182  : 				switch (get_ui_object_graphic_type (obj))

  001c8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001cb	50		 push	 eax
  001cc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001cf	8b 11		 mov	 edx, DWORD PTR [ecx]
  001d1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic_type@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  001d8	ff d0		 call	 eax
  001da	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv182[ebp], eax
  001e0	83 bd 6c ff ff
	ff 05		 cmp	 DWORD PTR tv182[ebp], 5
  001e7	74 05		 je	 SHORT $LN13@draw_butto
  001e9	e9 53 01 00 00	 jmp	 $LN20@draw_butto
$LN13@draw_butto:

; 183  : 				{
; 184  : 
; 185  : 					case UI_OBJECT_TEXTURE_GRAPHIC:
; 186  : 					{
; 187  : 			
; 188  : 						texture_graphic
; 189  : 							*graphic;
; 190  : 					
; 191  : 						if ((get_ui_object_state (obj) == UI_OBJECT_STATE_ON) && (get_ui_object_selected_texture_graphic (obj)))

  001ee	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001f1	50		 push	 eax
  001f2	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001f5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  001fe	ff d0		 call	 eax
  00200	83 f8 01	 cmp	 eax, 1
  00203	75 2d		 jne	 SHORT $LN14@draw_butto
  00205	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00208	50		 push	 eax
  00209	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0020c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00215	ff d0		 call	 eax
  00217	85 c0		 test	 eax, eax
  00219	74 17		 je	 SHORT $LN14@draw_butto

; 192  : 						{
; 193  : 					
; 194  : 							graphic = get_ui_object_selected_texture_graphic (obj);

  0021b	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0021e	50		 push	 eax
  0021f	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00222	8b 11		 mov	 edx, DWORD PTR [ecx]
  00224	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_selected_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  0022b	ff d0		 call	 eax
  0022d	89 45 cc	 mov	 DWORD PTR _graphic$8[ebp], eax
  00230	eb 58		 jmp	 SHORT $LN17@draw_butto
$LN14@draw_butto:

; 195  : 						}
; 196  : 						else if ((get_ui_object_highlighted (obj)) && (get_ui_object_highlighted_texture_graphic (obj)))

  00232	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00235	50		 push	 eax
  00236	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00239	8b 11		 mov	 edx, DWORD PTR [ecx]
  0023b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00242	ff d0		 call	 eax
  00244	85 c0		 test	 eax, eax
  00246	74 2d		 je	 SHORT $LN16@draw_butto
  00248	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0024b	50		 push	 eax
  0024c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0024f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00251	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00258	ff d0		 call	 eax
  0025a	85 c0		 test	 eax, eax
  0025c	74 17		 je	 SHORT $LN16@draw_butto

; 197  : 						{
; 198  : 					
; 199  : 							graphic = get_ui_object_highlighted_texture_graphic (obj);

  0025e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00261	50		 push	 eax
  00262	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00265	8b 11		 mov	 edx, DWORD PTR [ecx]
  00267	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  0026e	ff d0		 call	 eax
  00270	89 45 cc	 mov	 DWORD PTR _graphic$8[ebp], eax

; 200  : 						}
; 201  : 						else

  00273	eb 15		 jmp	 SHORT $LN17@draw_butto
$LN16@draw_butto:

; 202  : 						{
; 203  : 					
; 204  : 							graphic = get_ui_object_texture_graphic (obj);

  00275	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00278	50		 push	 eax
  00279	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0027c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_texture_graphic@@3PAP6GPAUTEXTURE_GRAPHIC@@PAUUI_OBJECT@@@ZA[edx*4]
  00285	ff d0		 call	 eax
  00287	89 45 cc	 mov	 DWORD PTR _graphic$8[ebp], eax
$LN17@draw_butto:

; 205  : 						}
; 206  : 			
; 207  : 						if (graphic)

  0028a	83 7d cc 00	 cmp	 DWORD PTR _graphic$8[ebp], 0
  0028e	74 74		 je	 SHORT $LN18@draw_butto

; 208  : 						{
; 209  : 
; 210  : 							rgb_colour
; 211  : 								colour;
; 212  : 
; 213  : 							real_colour
; 214  : 								text_colour;
; 215  : 
; 216  : 							colour = get_ui_object_colour ( obj );

  00290	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00293	50		 push	 eax
  00294	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00297	8b 11		 mov	 edx, DWORD PTR [ecx]
  00299	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  002a0	ff d0		 call	 eax
  002a2	89 85 70 ff ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  002a8	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR $T1[ebp]
  002ae	89 4d c8	 mov	 DWORD PTR _colour$7[ebp], ecx

; 217  : 
; 218  : 							text_colour.red = colour.r;

  002b1	8a 45 ca	 mov	 al, BYTE PTR _colour$7[ebp+2]
  002b4	88 45 c6	 mov	 BYTE PTR _text_colour$6[ebp+2], al

; 219  : 							text_colour.green = colour.g;

  002b7	8a 45 c9	 mov	 al, BYTE PTR _colour$7[ebp+1]
  002ba	88 45 c5	 mov	 BYTE PTR _text_colour$6[ebp+1], al

; 220  : 							text_colour.blue = colour.b;

  002bd	8a 45 c8	 mov	 al, BYTE PTR _colour$7[ebp]
  002c0	88 45 c4	 mov	 BYTE PTR _text_colour$6[ebp], al

; 221  : 							text_colour.alpha = colour.a;

  002c3	8a 45 cb	 mov	 al, BYTE PTR _colour$7[ebp+3]
  002c6	88 45 c7	 mov	 BYTE PTR _text_colour$6[ebp+3], al

; 222  : 
; 223  : 							ui_draw_texture_graphic (x1, y1, x2, y2, graphic, text_colour);

  002c9	8b 45 c4	 mov	 eax, DWORD PTR _text_colour$6[ebp]
  002cc	50		 push	 eax
  002cd	8b 4d cc	 mov	 ecx, DWORD PTR _graphic$8[ebp]
  002d0	51		 push	 ecx
  002d1	51		 push	 ecx
  002d2	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y2$[ebp]
  002d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002dc	51		 push	 ecx
  002dd	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  002e2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e7	51		 push	 ecx
  002e8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  002ed	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f2	51		 push	 ecx
  002f3	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  002f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002fd	e8 00 00 00 00	 call	 ?ui_draw_texture_graphic@@YGXMMMMPAUTEXTURE_GRAPHIC@@UREAL_COLOUR@@@Z ; ui_draw_texture_graphic

; 224  : 						}
; 225  : 						else

  00302	eb 3b		 jmp	 SHORT $LN19@draw_butto
$LN18@draw_butto:

; 226  : 						{
; 227  : 				
; 228  : 							ui_draw_area (0, 0, x2 - x1, y2 - y1, obj);

  00304	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00307	50		 push	 eax
  00308	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0030d	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00312	51		 push	 ecx
  00313	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00318	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0031d	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _x1$[ebp]
  00322	51		 push	 ecx
  00323	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00328	51		 push	 ecx
  00329	0f 57 c0	 xorps	 xmm0, xmm0
  0032c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00331	51		 push	 ecx
  00332	0f 57 c0	 xorps	 xmm0, xmm0
  00335	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033a	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area
$LN19@draw_butto:

; 229  : 						}
; 230  : 				
; 231  : 						break;

  0033f	eb 74		 jmp	 SHORT $LN2@draw_butto
$LN20@draw_butto:

; 232  : 					}
; 233  : /*
; 234  : 					case UI_OBJECT_GRAPHIC:
; 235  : 					{
; 236  : 			
; 237  : 						if (get_ui_object_state (obj) == UI_OBJECT_STATE_ON)
; 238  : 						{
; 239  : 		
; 240  : 							graphic = get_ui_object_graphic (obj);
; 241  : 		
; 242  : 							ui_draw_graphic (x1, y1, x2, y2, graphic);
; 243  : 	
; 244  : 							redraw_flag = TRUE;
; 245  : 						}
; 246  : 						else
; 247  : 						{
; 248  : 	
; 249  : 							parent = get_ui_object_parent (obj);
; 250  : 	
; 251  : 							if (parent)
; 252  : 							{
; 253  : 	
; 254  : 								graphic = get_ui_object_graphic (parent);
; 255  : 	
; 256  : 								px1 = get_ui_object_x (parent);
; 257  : 	
; 258  : 								py1 = get_ui_object_y (parent);
; 259  : 	
; 260  : 								x1 -= px1;
; 261  : 								x2 -= px1;
; 262  : 	
; 263  : 								y1 -= py1;
; 264  : 								y2 -= py1;
; 265  : 		
; 266  : 								ui_draw_part_graphic (x1, y1, x2, y2, x1, y1, graphic);
; 267  : 	
; 268  : 								redraw_flag = TRUE;
; 269  : 							}
; 270  : 						}
; 271  : 	
; 272  : 						break;
; 273  : 					}
; 274  : 	
; 275  : 					case UI_OBJECT_MEMORY_GRAPHIC:
; 276  : 					{
; 277  : 		
; 278  : 						memory_graphic = get_ui_object_memory_graphic (obj);
; 279  : 	
; 280  : 						if (lock_screen (memory_graphic))
; 281  : 						{
; 282  : 		
; 283  : 							width = get_screen_width (memory_graphic);
; 284  : 		
; 285  : 							height = get_screen_height (memory_graphic);
; 286  : 		
; 287  : 							data = get_screen_data (memory_graphic);
; 288  : 		
; 289  : 							pitch = get_screen_pitch (memory_graphic);
; 290  : 			
; 291  : 							ui_draw_memory_graphic (obj, x1, y1, x2, y2, width, height, pitch, FALSE);
; 292  : 		
; 293  : 							unlock_screen (memory_graphic);
; 294  : 						}
; 295  : 	
; 296  : 						redraw_flag = TRUE;
; 297  : 	
; 298  : 						break;
; 299  : 					}
; 300  : 	
; 301  : 					case UI_OBJECT_ALPHA_GRAPHIC:
; 302  : 					{
; 303  : 			
; 304  : 						if (!get_ui_object_clear (obj))
; 305  : 						{
; 306  : 			
; 307  : 							graphic = get_ui_object_graphic (obj);
; 308  : 		
; 309  : 							ui_draw_alpha_graphic (x1, y1, x2, y2, graphic);
; 310  : 		
; 311  : 							redraw_flag = TRUE;
; 312  : 						}
; 313  : 						else
; 314  : 						{
; 315  : 		
; 316  : 							parent = get_ui_object_parent (obj);
; 317  : 		
; 318  : 							if (parent)
; 319  : 							{
; 320  : 		
; 321  : 								graphic = get_ui_object_graphic (parent);
; 322  : 		
; 323  : 								ui_draw_part_alpha_graphic (x1, y1, x2, y2, x1, y1, graphic);
; 324  : 		
; 325  : 								redraw_flag = TRUE;
; 326  : 							}
; 327  : 						}
; 328  : 		
; 329  : 						break;
; 330  : 					}
; 331  : */
; 332  : 					case UI_OBJECT_NO_GRAPHIC:
; 333  : 					default:
; 334  : 					{
; 335  : 
; 336  : 						int
; 337  : 							state;
; 338  : 
; 339  : 						state = get_ui_object_state (obj);

  00341	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00344	50		 push	 eax
  00345	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00348	8b 11		 mov	 edx, DWORD PTR [ecx]
  0034a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00351	ff d0		 call	 eax
  00353	89 45 c0	 mov	 DWORD PTR _state$5[ebp], eax

; 340  : 
; 341  : 						if ((state == UI_OBJECT_STATE_OFF) && (get_ui_object_highlighted (obj)))

  00356	83 7d c0 00	 cmp	 DWORD PTR _state$5[ebp], 0
  0035a	75 1d		 jne	 SHORT $LN21@draw_butto
  0035c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0035f	50		 push	 eax
  00360	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00363	8b 11		 mov	 edx, DWORD PTR [ecx]
  00365	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0036c	ff d0		 call	 eax
  0036e	85 c0		 test	 eax, eax
  00370	74 07		 je	 SHORT $LN21@draw_butto

; 342  : 						{
; 343  : 
; 344  : 							state = UI_OBJECT_STATE_HIGHLIGHTED;

  00372	c7 45 c0 02 00
	00 00		 mov	 DWORD PTR _state$5[ebp], 2
$LN21@draw_butto:

; 345  : 						}
; 346  : 
; 347  : 						ui_draw_button (x1, y1, x2, y2, state);

  00379	8b 45 c0	 mov	 eax, DWORD PTR _state$5[ebp]
  0037c	50		 push	 eax
  0037d	51		 push	 ecx
  0037e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00383	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00388	51		 push	 ecx
  00389	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0038e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00393	51		 push	 ecx
  00394	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00399	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0039e	51		 push	 ecx
  0039f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  003a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a9	e8 00 00 00 00	 call	 ?ui_draw_button@@YGXMMMMH@Z ; ui_draw_button

; 348  : 	
; 349  : 						redraw_flag = TRUE;

  003ae	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN2@draw_butto:

; 350  : 					}
; 351  : 				}
; 352  : 			}
; 353  : 		
; 354  : 			if (get_ui_object_text (obj))

  003b5	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003b8	50		 push	 eax
  003b9	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003bc	8b 11		 mov	 edx, DWORD PTR [ecx]
  003be	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  003c5	ff d0		 call	 eax
  003c7	85 c0		 test	 eax, eax
  003c9	0f 84 50 01 00
	00		 je	 $LN22@draw_butto

; 355  : 			{
; 356  : 
; 357  : 				const char
; 358  : 					*text_ptr;
; 359  : 
; 360  : 				int
; 361  : 					count;
; 362  : 
; 363  : 				float
; 364  : 					y3;
; 365  : 	
; 366  : 				ui_save_current_font ();

  003cf	e8 00 00 00 00	 call	 ?ui_save_current_font@@YGXXZ ; ui_save_current_font

; 367  : 
; 368  : 				ui_set_object_font (obj);

  003d4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003d7	50		 push	 eax
  003d8	e8 00 00 00 00	 call	 ?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z ; ui_set_object_font

; 369  : 
; 370  : 				// count number of lines spanned
; 371  : 
; 372  : 				text_ptr = get_ui_object_text (obj);

  003dd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  003e0	50		 push	 eax
  003e1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  003e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  003e6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  003ed	ff d0		 call	 eax
  003ef	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax

; 373  : 
; 374  : 				count = 0;

  003f2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _count$3[ebp], 0
$LN4@draw_butto:

; 375  : 
; 376  : 				while (text_ptr)

  003f9	83 7d bc 00	 cmp	 DWORD PTR _text_ptr$4[ebp], 0
  003fd	74 2b		 je	 SHORT $LN5@draw_butto

; 377  : 				{
; 378  : 
; 379  : 					count ++;

  003ff	8b 45 b8	 mov	 eax, DWORD PTR _count$3[ebp]
  00402	83 c0 01	 add	 eax, 1
  00405	89 45 b8	 mov	 DWORD PTR _count$3[ebp], eax

; 380  : 
; 381  : 					text_ptr = strchr (text_ptr, '\n');

  00408	6a 0a		 push	 10			; 0000000aH
  0040a	8b 45 bc	 mov	 eax, DWORD PTR _text_ptr$4[ebp]
  0040d	50		 push	 eax
  0040e	e8 00 00 00 00	 call	 _strchr
  00413	83 c4 08	 add	 esp, 8
  00416	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax

; 382  : 
; 383  : 					// if found, step over it and display the next part of string
; 384  : 					if (text_ptr)

  00419	83 7d bc 00	 cmp	 DWORD PTR _text_ptr$4[ebp], 0
  0041d	74 09		 je	 SHORT $LN23@draw_butto

; 385  : 					{
; 386  : 
; 387  : 						text_ptr ++;

  0041f	8b 45 bc	 mov	 eax, DWORD PTR _text_ptr$4[ebp]
  00422	83 c0 01	 add	 eax, 1
  00425	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax
$LN23@draw_butto:

; 388  : 					}
; 389  : 				}

  00428	eb cf		 jmp	 SHORT $LN4@draw_butto
$LN5@draw_butto:

; 390  : 
; 391  : 				// now draw text
; 392  : 
; 393  : 				text_ptr = get_ui_object_text (obj);

  0042a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0042d	50		 push	 eax
  0042e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00431	8b 11		 mov	 edx, DWORD PTR [ecx]
  00433	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  0043a	ff d0		 call	 eax
  0043c	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax

; 394  : 			
; 395  : 				get_text_y_position (&y3, y1, y2, text_ptr, get_ui_object_text_justify (obj), count);

  0043f	8b 45 b8	 mov	 eax, DWORD PTR _count$3[ebp]
  00442	50		 push	 eax
  00443	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00446	51		 push	 ecx
  00447	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0044a	8b 02		 mov	 eax, DWORD PTR [edx]
  0044c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[eax*4]
  00453	ff d1		 call	 ecx
  00455	50		 push	 eax
  00456	8b 55 bc	 mov	 edx, DWORD PTR _text_ptr$4[ebp]
  00459	52		 push	 edx
  0045a	51		 push	 ecx
  0045b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00460	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00465	51		 push	 ecx
  00466	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0046b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00470	8d 45 b4	 lea	 eax, DWORD PTR _y3$2[ebp]
  00473	50		 push	 eax
  00474	e8 00 00 00 00	 call	 ?get_text_y_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@H@Z ; get_text_y_position
$LN6@draw_butto:

; 396  : 
; 397  : 				while (text_ptr)

  00479	83 7d bc 00	 cmp	 DWORD PTR _text_ptr$4[ebp], 0
  0047d	0f 84 90 00 00
	00		 je	 $LN7@draw_butto

; 398  : 				{
; 399  : 			
; 400  : 					get_text_x_position (&x, x1, x2, text_ptr, get_ui_object_text_justify (obj));

  00483	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00486	50		 push	 eax
  00487	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0048a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0048c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text_justify@@3PAP6G?AW4TEXT_JUSTIFY_TYPES@@PAUUI_OBJECT@@@ZA[edx*4]
  00493	ff d0		 call	 eax
  00495	50		 push	 eax
  00496	8b 4d bc	 mov	 ecx, DWORD PTR _text_ptr$4[ebp]
  00499	51		 push	 ecx
  0049a	51		 push	 ecx
  0049b	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  004a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a5	51		 push	 ecx
  004a6	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  004ab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b0	8d 55 fc	 lea	 edx, DWORD PTR _x$[ebp]
  004b3	52		 push	 edx
  004b4	e8 00 00 00 00	 call	 ?get_text_x_position@@YGXPAMMMPBDW4TEXT_JUSTIFY_TYPES@@@Z ; get_text_x_position

; 401  : 			
; 402  : 					ui_display_text (text_ptr, x, y3);

  004b9	51		 push	 ecx
  004ba	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _y3$2[ebp]
  004bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c4	51		 push	 ecx
  004c5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x$[ebp]
  004ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004cf	8b 45 bc	 mov	 eax, DWORD PTR _text_ptr$4[ebp]
  004d2	50		 push	 eax
  004d3	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  004d8	dd d8		 fstp	 ST(0)

; 403  : 
; 404  : 					y3 += ui_get_font_height ();

  004da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  004df	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  004e4	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _y3$2[ebp]
  004e9	f3 0f 11 45 b4	 movss	 DWORD PTR _y3$2[ebp], xmm0

; 405  : 
; 406  : 					// check for carriage return
; 407  : 					text_ptr = strchr (text_ptr, '\n');

  004ee	6a 0a		 push	 10			; 0000000aH
  004f0	8b 45 bc	 mov	 eax, DWORD PTR _text_ptr$4[ebp]
  004f3	50		 push	 eax
  004f4	e8 00 00 00 00	 call	 _strchr
  004f9	83 c4 08	 add	 esp, 8
  004fc	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax

; 408  : 
; 409  : 					// if found, step over it and display the next part of string
; 410  : 					if (text_ptr)

  004ff	83 7d bc 00	 cmp	 DWORD PTR _text_ptr$4[ebp], 0
  00503	74 09		 je	 SHORT $LN24@draw_butto

; 411  : 					{
; 412  : 
; 413  : 						text_ptr ++;

  00505	8b 45 bc	 mov	 eax, DWORD PTR _text_ptr$4[ebp]
  00508	83 c0 01	 add	 eax, 1
  0050b	89 45 bc	 mov	 DWORD PTR _text_ptr$4[ebp], eax
$LN24@draw_butto:

; 414  : 					}
; 415  : 				}

  0050e	e9 66 ff ff ff	 jmp	 $LN6@draw_butto
$LN7@draw_butto:

; 416  : 
; 417  : 				ui_restore_current_font ();

  00513	e8 00 00 00 00	 call	 ?ui_restore_current_font@@YGXXZ ; ui_restore_current_font

; 418  : 	
; 419  : 				redraw_flag = TRUE;

  00518	c7 45 d8 01 00
	00 00		 mov	 DWORD PTR _redraw_flag$[ebp], 1
$LN22@draw_butto:

; 420  : 			}
; 421  : 	
; 422  : 			if (redraw_flag)

  0051f	83 7d d8 00	 cmp	 DWORD PTR _redraw_flag$[ebp], 0
  00523	74 4d		 je	 SHORT $LN25@draw_butto

; 423  : 			{
; 424  : 	
; 425  : 				set_ui_repaint_area (x1 - 1, y1 - 1, x2 + 1, y2 + 1);

  00525	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0052a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00532	f3 0f 2c c0	 cvttss2si eax, xmm0
  00536	50		 push	 eax
  00537	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0053c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00544	f3 0f 2c c8	 cvttss2si ecx, xmm0
  00548	51		 push	 ecx
  00549	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0054e	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00556	f3 0f 2c d0	 cvttss2si edx, xmm0
  0055a	52		 push	 edx
  0055b	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00560	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00568	f3 0f 2c c0	 cvttss2si eax, xmm0
  0056c	50		 push	 eax
  0056d	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area
$LN25@draw_butto:

; 426  : 			}
; 427  : 	
; 428  : //			unlock_screen (active_screen);
; 429  : 		}
; 430  : 
; 431  : 		set_active_screen (old_active_screen);

  00572	8b 45 d4	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 432  : 
; 433  : 		button->area.redraw --;

  0057b	8b 45 d0	 mov	 eax, DWORD PTR _button$[ebp]
  0057e	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00581	c1 e9 07	 shr	 ecx, 7
  00584	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0058a	83 e9 01	 sub	 ecx, 1
  0058d	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00593	c1 e1 07	 shl	 ecx, 7
  00596	8b 55 d0	 mov	 edx, DWORD PTR _button$[ebp]
  00599	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  0059c	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  005a1	0b c1		 or	 eax, ecx
  005a3	8b 4d d0	 mov	 ecx, DWORD PTR _button$[ebp]
  005a6	89 41 4c	 mov	 DWORD PTR [ecx+76], eax

; 434  : 
; 435  : 		call_ui_object_draw_function (obj, NULL);

  005a9	6a 00		 push	 0
  005ab	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  005ae	50		 push	 eax
  005af	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  005b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  005b4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_call_ui_object_draw_function@@3PAP6GXPAUUI_OBJECT@@PAX@ZA[edx*4]
  005bb	ff d0		 call	 eax
$LN8@draw_butto:

; 436  : 	}
; 437  : }

  005bd	5f		 pop	 edi
  005be	5e		 pop	 esi
  005bf	5b		 pop	 ebx
  005c0	8b e5		 mov	 esp, ebp
  005c2	5d		 pop	 ebp
  005c3	c2 04 00	 ret	 4
?draw_button_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; draw_button_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\button\bu_draw.c
;	COMDAT ?overload_button_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_button_ui_object_draw_functions@@YGXH@Z PROC	; overload_button_ui_object_draw_functions, COMDAT

; 444  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 445  : 
; 446  : 	fn_draw_ui_object [type] = draw_button_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_button_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_button_ui_object

; 447  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_button_ui_object_draw_functions@@YGXH@Z ENDP	; overload_button_ui_object_draw_functions
_TEXT	ENDS
END
