; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\number\nu_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_number_ui_object_draw_functions@@YGXH@Z ; overload_number_ui_object_draw_functions
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?ui_get_string_length@@YGMPBD@Z:PROC		; ui_get_string_length
EXTRN	?ui_save_current_font@@YGXXZ:PROC		; ui_save_current_font
EXTRN	?ui_restore_current_font@@YGXXZ:PROC		; ui_restore_current_font
EXTRN	?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z:PROC	; ui_set_object_font
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_draw_hilight@@YGXMMMM@Z:PROC		; ui_draw_hilight
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	__fltused:DWORD
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\number\nu_draw.c
;	COMDAT ?draw_number_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_number_obj$ = -32					; size = 4
_old_active_screen$ = -28				; size = 4
_y1$ = -24						; size = 4
_x1$ = -20						; size = 4
_y_origin$ = -16					; size = 4
_x_origin$ = -12					; size = 4
_y_size$ = -8						; size = 4
_x_size$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_number_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; draw_number_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   :    float
; 77   :       x_size,
; 78   :       y_size,
; 79   :       x_origin,
; 80   :       y_origin,
; 81   :       x1,
; 82   :       y1;
; 83   : 
; 84   : 	struct SCREEN
; 85   : 		*old_active_screen;
; 86   : 
; 87   :    number_ui_object
; 88   :       *number_obj;
; 89   : 
; 90   :    if (get_ui_object_redraw (obj))

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 1b 02 00
	00		 je	 $LN2@draw_numbe

; 91   :    {
; 92   :    
; 93   :       number_obj = (number_ui_object *) obj->data;

  00023	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00026	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00029	89 4d e0	 mov	 DWORD PTR _number_obj$[ebp], ecx

; 94   :    
; 95   :       x1 = get_ui_object_x (obj);

  0002c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00033	8b 11		 mov	 edx, DWORD PTR [ecx]
  00035	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0003c	ff d0		 call	 eax
  0003e	d9 5d ec	 fstp	 DWORD PTR _x1$[ebp]

; 96   :       
; 97   :       y1 = get_ui_object_y (obj);

  00041	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00051	ff d0		 call	 eax
  00053	d9 5d e8	 fstp	 DWORD PTR _y1$[ebp]

; 98   : 
; 99   :       x_size = ui_get_string_length (get_ui_object_text (obj));

  00056	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00066	ff d0		 call	 eax
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?ui_get_string_length@@YGMPBD@Z ; ui_get_string_length
  0006e	d9 5d fc	 fstp	 DWORD PTR _x_size$[ebp]

; 100  : 
; 101  :       y_size = ui_get_font_height ();

  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00076	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  0007b	f3 0f 11 45 f8	 movss	 DWORD PTR _y_size$[ebp], xmm0

; 102  :    
; 103  :       x_origin = get_ui_object_x_origin (obj);

  00080	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00083	50		 push	 eax
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00090	ff d0		 call	 eax
  00092	d9 5d f4	 fstp	 DWORD PTR _x_origin$[ebp]

; 104  : 
; 105  :       y_origin = get_ui_object_y_origin (obj);

  00095	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a5	ff d0		 call	 eax
  000a7	d9 5d f0	 fstp	 DWORD PTR _y_origin$[ebp]

; 106  : 
; 107  :       ui_set_origin (x_origin, y_origin);

  000aa	51		 push	 ecx
  000ab	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  000b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b5	51		 push	 ecx
  000b6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x_origin$[ebp]
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 108  : 
; 109  : 		old_active_screen = get_active_screen ();

  000c5	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  000ca	89 45 e4	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 110  : 
; 111  : 		if (get_ui_object_active_screen (obj))

  000cd	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000d0	50		 push	 eax
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000dd	ff d0		 call	 eax
  000df	85 c0		 test	 eax, eax
  000e1	74 1a		 je	 SHORT $LN3@draw_numbe

; 112  : 		{
; 113  : 	
; 114  : 			set_active_screen (get_ui_object_active_screen (obj));

  000e3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ea	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ec	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000f3	ff d0		 call	 eax
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 115  : 		}
; 116  : 		else

  000fb	eb 0b		 jmp	 SHORT $LN4@draw_numbe
$LN3@draw_numbe:

; 117  : 		{
; 118  : 
; 119  : 			set_active_screen (video_screen);

  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN4@draw_numbe:

; 120  : 		}
; 121  : 
; 122  : 		//if (lock_screen (active_screen))
; 123  : 		{
; 124  : 
; 125  : 			ui_save_current_font ();

  00108	e8 00 00 00 00	 call	 ?ui_save_current_font@@YGXXZ ; ui_save_current_font

; 126  : 
; 127  : 			ui_set_object_font (obj);

  0010d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 ?ui_set_object_font@@YGXPAUUI_OBJECT@@@Z ; ui_set_object_font

; 128  : 		
; 129  : 			ui_display_text (number_obj->area.text, x1, y1);

  00116	51		 push	 ecx
  00117	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0011c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00121	51		 push	 ecx
  00122	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	8b 45 e0	 mov	 eax, DWORD PTR _number_obj$[ebp]
  0012f	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00138	dd d8		 fstp	 ST(0)

; 130  : 	
; 131  : 			if (get_ui_object_state (obj))

  0013a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0013d	50		 push	 eax
  0013e	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00141	8b 11		 mov	 edx, DWORD PTR [ecx]
  00143	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0014a	ff d0		 call	 eax
  0014c	85 c0		 test	 eax, eax
  0014e	74 5b		 je	 SHORT $LN5@draw_numbe

; 132  : 			{
; 133  : 	
; 134  : 				ui_draw_hilight (x1 - 2, y1 - 1, x1 + x_size + 1, y1 + y_size + 1);

  00150	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00155	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  0015a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00162	51		 push	 ecx
  00163	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00168	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0016d	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  00172	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0017a	51		 push	 ecx
  0017b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00180	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00185	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0018d	51		 push	 ecx
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00198	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40000000
  001a0	51		 push	 ecx
  001a1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a6	e8 00 00 00 00	 call	 ?ui_draw_hilight@@YGXMMMM@Z ; ui_draw_hilight
$LN5@draw_numbe:

; 135  : 			}
; 136  : 	
; 137  : 			ui_restore_current_font ();

  001ab	e8 00 00 00 00	 call	 ?ui_restore_current_font@@YGXXZ ; ui_restore_current_font

; 138  : 	
; 139  : 			//unlock_screen (active_screen);
; 140  : 		}
; 141  : 
; 142  : 		set_active_screen (old_active_screen);

  001b0	8b 45 e4	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 143  :    
; 144  :       set_ui_repaint_area (x1 - 2, y1 - 1, x1 + x_size + 1, y1 + y_size + 1);

  001b9	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001be	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y_size$[ebp]
  001c3	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  001cb	f3 0f 2c c0	 cvttss2si eax, xmm0
  001cf	50		 push	 eax
  001d0	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001d5	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x_size$[ebp]
  001da	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  001e2	f3 0f 2c c8	 cvttss2si ecx, xmm0
  001e6	51		 push	 ecx
  001e7	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001ec	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  001f4	f3 0f 2c d0	 cvttss2si edx, xmm0
  001f8	52		 push	 edx
  001f9	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001fe	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40000000
  00206	f3 0f 2c c0	 cvttss2si eax, xmm0
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 145  : 
; 146  : 		number_obj->area.redraw --;

  00210	8b 45 e0	 mov	 eax, DWORD PTR _number_obj$[ebp]
  00213	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00216	c1 e9 07	 shr	 ecx, 7
  00219	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0021f	83 e9 01	 sub	 ecx, 1
  00222	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00228	c1 e1 07	 shl	 ecx, 7
  0022b	8b 55 e0	 mov	 edx, DWORD PTR _number_obj$[ebp]
  0022e	8b 42 4c	 mov	 eax, DWORD PTR [edx+76]
  00231	25 7f 80 ff ff	 and	 eax, -32641		; ffff807fH
  00236	0b c1		 or	 eax, ecx
  00238	8b 4d e0	 mov	 ecx, DWORD PTR _number_obj$[ebp]
  0023b	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
$LN2@draw_numbe:

; 147  :    }
; 148  : }

  0023e	5f		 pop	 edi
  0023f	5e		 pop	 esi
  00240	5b		 pop	 ebx
  00241	8b e5		 mov	 esp, ebp
  00243	5d		 pop	 ebp
  00244	c2 04 00	 ret	 4
?draw_number_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; draw_number_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\number\nu_draw.c
;	COMDAT ?overload_number_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_number_ui_object_draw_functions@@YGXH@Z PROC	; overload_number_ui_object_draw_functions, COMDAT

; 155  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 156  : 
; 157  :    fn_draw_ui_object [type] = draw_number_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?draw_number_ui_object@@YGXPAUUI_OBJECT@@@Z ; draw_number_ui_object

; 158  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_number_ui_object_draw_functions@@YGXH@Z ENDP	; overload_number_ui_object_draw_functions
_TEXT	ENDS
END
