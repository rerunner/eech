; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\session\ss_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_session_pack_functions@@YGXXZ		; overload_session_pack_functions
PUBLIC	?pack_local_session_data@@YGXW4PACK_MODES@@@Z	; pack_local_session_data
PUBLIC	?unpack_local_session_data@@YGXW4PACK_MODES@@@Z	; unpack_local_session_data
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA ; `pack_local_session_data'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0BH@ICIHEEDM@?$CBraw?9?$DOsession_complete@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA ; `unpack_local_session_data'::`1'::__LINE__Var
PUBLIC	??_C@_0BH@GDGOJOI@?$CBget_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@	; `string'
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?set_display_campaign_timer_valid@@YGXH@Z:PROC	; set_display_campaign_timer_valid
EXTRN	?set_session_entity@@YGXPAUENTITY@@@Z:PROC	; set_session_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@ DB 'get_camera_entity ()', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GDGOJOI@?$CBget_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BH@GDGOJOI@?$CBget_session_entity?5?$CI?$CJ@ DB '!get_session_enti'
	DB	'ty ()', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA DD 01efH ; `unpack_local_session_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@ICIHEEDM@?$CBraw?9?$DOsession_complete@
CONST	SEGMENT
??_C@_0BH@ICIHEEDM@?$CBraw?9?$DOsession_complete@ DB '!raw->session_compl'
	DB	'ete', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA DD 0e7H ; `pack_local_session_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 090H ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\session\ss_pa'
	DB	'ck.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\ss_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv498 = -88						; size = 4
tv481 = -88						; size = 4
tv438 = -88						; size = 4
tv421 = -88						; size = 4
tv404 = -88						; size = 4
tv375 = -84						; size = 4
tv352 = -84						; size = 4
tv332 = -84						; size = 4
tv309 = -84						; size = 4
tv286 = -84						; size = 4
tv259 = -84						; size = 4
tv235 = -84						; size = 4
tv215 = -84						; size = 4
tv192 = -84						; size = 4
tv165 = -84						; size = 4
tv141 = -84						; size = 4
tv85 = -84						; size = 4
tv367 = -80						; size = 4
tv344 = -80						; size = 4
tv324 = -80						; size = 4
tv301 = -80						; size = 4
tv278 = -80						; size = 4
tv251 = -80						; size = 4
tv227 = -80						; size = 4
tv207 = -80						; size = 4
tv184 = -80						; size = 4
tv157 = -80						; size = 4
tv133 = -80						; size = 4
tv77 = -80						; size = 4
tv70 = -80						; size = 4
_v$1 = -12						; size = 12
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 146  : 
; 147  :    switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 03	 cmp	 DWORD PTR tv70[ebp], 3
  00037	74 0a		 je	 SHORT $LN7@unpack_loc
  00039	e9 eb 06 00 00	 jmp	 $LN2@unpack_loc

; 148  :    {
; 149  :       ////////////////////////////////////////
; 150  :       case PACK_MODE_SERVER_SESSION:
; 151  :       case PACK_MODE_CLIENT_SESSION:
; 152  : 		case PACK_MODE_BROWSE_SESSION:
; 153  :       ////////////////////////////////////////
; 154  : 		{
; 155  : 
; 156  : 			break;

  0003e	e9 e6 06 00 00	 jmp	 $LN2@unpack_loc
$LN7@unpack_loc:

; 157  : 		}
; 158  : 
; 159  : 		////////////////////////////////////////
; 160  : 		case PACK_MODE_UPDATE_ENTITY:
; 161  : 		////////////////////////////////////////
; 162  : 		{
; 163  : 			vec3d
; 164  : 				v;
; 165  : 
; 166  : 			//
; 167  : 			// always use access functions to set the data
; 168  : 			//
; 169  : 
; 170  : 			set_local_entity_float_value (en, FLOAT_TYPE_ELAPSED_TIME, unpack_float_value (en, FLOAT_TYPE_ELAPSED_TIME));

  00043	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00047	74 0a		 je	 SHORT $LN9@unpack_loc
  00049	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	89 4d b0	 mov	 DWORD PTR tv77[ebp], ecx
  00051	eb 21		 jmp	 SHORT $LN10@unpack_loc
$LN9@unpack_loc:
  00053	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00059	83 c2 1a	 add	 edx, 26			; 0000001aH
  0005c	52		 push	 edx
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN10@unpack_loc:
  00074	b9 01 00 00 00	 mov	 ecx, 1
  00079	85 c9		 test	 ecx, ecx
  0007b	74 09		 je	 SHORT $LN11@unpack_loc
  0007d	c7 45 ac 23 00
	00 00		 mov	 DWORD PTR tv85[ebp], 35	; 00000023H
  00084	eb 21		 jmp	 SHORT $LN12@unpack_loc
$LN11@unpack_loc:
  00086	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0008c	83 c2 1a	 add	 edx, 26			; 0000001aH
  0008f	52		 push	 edx
  00090	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a0	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN12@unpack_loc:
  000a7	6a 23		 push	 35			; 00000023H
  000a9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ac	51		 push	 ecx
  000ad	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000b2	d9 5d a8	 fstp	 DWORD PTR tv404[ebp]
  000b5	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv404[ebp]
  000ba	51		 push	 ecx
  000bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c0	6a 23		 push	 35			; 00000023H
  000c2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000c5	52		 push	 edx
  000c6	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv77[ebp], 700
  000cd	8b 4d ac	 mov	 ecx, DWORD PTR tv85[ebp]
  000d0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[eax+ecx*4]
  000d7	ff d2		 call	 edx

; 171  : 
; 172  :          set_local_entity_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER, unpack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER));

  000d9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000dd	74 0a		 je	 SHORT $LN13@unpack_loc
  000df	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000e7	eb 21		 jmp	 SHORT $LN14@unpack_loc
$LN13@unpack_loc:
  000e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  000ef	83 c2 1c	 add	 edx, 28			; 0000001cH
  000f2	52		 push	 edx
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00103	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN14@unpack_loc:
  0010a	b9 01 00 00 00	 mov	 ecx, 1
  0010f	85 c9		 test	 ecx, ecx
  00111	74 09		 je	 SHORT $LN15@unpack_loc
  00113	c7 45 ac 3e 00
	00 00		 mov	 DWORD PTR tv141[ebp], 62 ; 0000003eH
  0011a	eb 21		 jmp	 SHORT $LN16@unpack_loc
$LN15@unpack_loc:
  0011c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00122	83 c2 1c	 add	 edx, 28			; 0000001cH
  00125	52		 push	 edx
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00130	50		 push	 eax
  00131	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00136	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN16@unpack_loc:
  0013d	6a 3e		 push	 62			; 0000003eH
  0013f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00142	51		 push	 ecx
  00143	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00148	d9 5d a8	 fstp	 DWORD PTR tv421[ebp]
  0014b	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv421[ebp]
  00150	51		 push	 ecx
  00151	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00156	6a 3e		 push	 62			; 0000003eH
  00158	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0015b	52		 push	 edx
  0015c	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv133[ebp], 700
  00163	8b 4d ac	 mov	 ecx, DWORD PTR tv141[ebp]
  00166	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[eax+ecx*4]
  0016d	ff d2		 call	 edx

; 173  : 
; 174  : 			//
; 175  : 			// rain effect
; 176  : 			//
; 177  : 
; 178  :          set_local_entity_float_value (en, FLOAT_TYPE_WEATHER_RADIUS, unpack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS));

  0016f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00173	74 0a		 je	 SHORT $LN17@unpack_loc
  00175	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00178	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017a	89 4d b0	 mov	 DWORD PTR tv157[ebp], ecx
  0017d	eb 21		 jmp	 SHORT $LN18@unpack_loc
$LN17@unpack_loc:
  0017f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00185	83 c2 22	 add	 edx, 34			; 00000022H
  00188	52		 push	 edx
  00189	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00193	50		 push	 eax
  00194	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00199	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN18@unpack_loc:
  001a0	b9 01 00 00 00	 mov	 ecx, 1
  001a5	85 c9		 test	 ecx, ecx
  001a7	74 09		 je	 SHORT $LN19@unpack_loc
  001a9	c7 45 ac 9d 00
	00 00		 mov	 DWORD PTR tv165[ebp], 157 ; 0000009dH
  001b0	eb 21		 jmp	 SHORT $LN20@unpack_loc
$LN19@unpack_loc:
  001b2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  001b8	83 c2 22	 add	 edx, 34			; 00000022H
  001bb	52		 push	 edx
  001bc	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN20@unpack_loc:
  001d3	68 9d 00 00 00	 push	 157			; 0000009dH
  001d8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001db	51		 push	 ecx
  001dc	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001e1	d9 5d a8	 fstp	 DWORD PTR tv438[ebp]
  001e4	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv438[ebp]
  001e9	51		 push	 ecx
  001ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ef	68 9d 00 00 00	 push	 157			; 0000009dH
  001f4	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001f7	52		 push	 edx
  001f8	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv157[ebp], 700
  001ff	8b 4d ac	 mov	 ecx, DWORD PTR tv165[ebp]
  00202	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[eax+ecx*4]
  00209	ff d2		 call	 edx

; 179  : 
; 180  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &v);

  0020b	8d 45 f4	 lea	 eax, DWORD PTR _v$1[ebp]
  0020e	50		 push	 eax
  0020f	6a 0f		 push	 15			; 0000000fH
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00214	51		 push	 ecx
  00215	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 181  : 			set_local_entity_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &v);

  0021a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0021e	74 0a		 je	 SHORT $LN21@unpack_loc
  00220	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00223	8b 08		 mov	 ecx, DWORD PTR [eax]
  00225	89 4d b0	 mov	 DWORD PTR tv184[ebp], ecx
  00228	eb 21		 jmp	 SHORT $LN22@unpack_loc
$LN21@unpack_loc:
  0022a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00230	83 c2 25	 add	 edx, 37			; 00000025H
  00233	52		 push	 edx
  00234	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00239	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023e	50		 push	 eax
  0023f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00244	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN22@unpack_loc:
  0024b	b9 01 00 00 00	 mov	 ecx, 1
  00250	85 c9		 test	 ecx, ecx
  00252	74 09		 je	 SHORT $LN23@unpack_loc
  00254	c7 45 ac 0f 00
	00 00		 mov	 DWORD PTR tv192[ebp], 15 ; 0000000fH
  0025b	eb 21		 jmp	 SHORT $LN24@unpack_loc
$LN23@unpack_loc:
  0025d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00263	83 c2 25	 add	 edx, 37			; 00000025H
  00266	52		 push	 edx
  00267	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00271	50		 push	 eax
  00272	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00277	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN24@unpack_loc:
  0027e	8d 4d f4	 lea	 ecx, DWORD PTR _v$1[ebp]
  00281	51		 push	 ecx
  00282	6a 0f		 push	 15			; 0000000fH
  00284	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00287	52		 push	 edx
  00288	6b 45 b0 60	 imul	 eax, DWORD PTR tv184[ebp], 96
  0028c	8b 4d ac	 mov	 ecx, DWORD PTR tv192[ebp]
  0028f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00296	ff d2		 call	 edx

; 182  : 
; 183  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &v);

  00298	8d 45 f4	 lea	 eax, DWORD PTR _v$1[ebp]
  0029b	50		 push	 eax
  0029c	6a 10		 push	 16			; 00000010H
  0029e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002a1	51		 push	 ecx
  002a2	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 184  : 			set_local_entity_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &v);

  002a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002ab	74 0a		 je	 SHORT $LN25@unpack_loc
  002ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b2	89 4d b0	 mov	 DWORD PTR tv207[ebp], ecx
  002b5	eb 21		 jmp	 SHORT $LN26@unpack_loc
$LN25@unpack_loc:
  002b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  002bd	83 c2 28	 add	 edx, 40			; 00000028H
  002c0	52		 push	 edx
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002cb	50		 push	 eax
  002cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d1	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN26@unpack_loc:
  002d8	b9 01 00 00 00	 mov	 ecx, 1
  002dd	85 c9		 test	 ecx, ecx
  002df	74 09		 je	 SHORT $LN27@unpack_loc
  002e1	c7 45 ac 10 00
	00 00		 mov	 DWORD PTR tv215[ebp], 16 ; 00000010H
  002e8	eb 21		 jmp	 SHORT $LN28@unpack_loc
$LN27@unpack_loc:
  002ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  002f0	83 c2 28	 add	 edx, 40			; 00000028H
  002f3	52		 push	 edx
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002fe	50		 push	 eax
  002ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00304	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN28@unpack_loc:
  0030b	8d 4d f4	 lea	 ecx, DWORD PTR _v$1[ebp]
  0030e	51		 push	 ecx
  0030f	6a 10		 push	 16			; 00000010H
  00311	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00314	52		 push	 edx
  00315	6b 45 b0 60	 imul	 eax, DWORD PTR tv207[ebp], 96
  00319	8b 4d ac	 mov	 ecx, DWORD PTR tv215[ebp]
  0031c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00323	ff d2		 call	 edx

; 185  : 
; 186  : 			//
; 187  : 			// wind effect
; 188  : 			//
; 189  : 
; 190  : 			set_local_entity_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS, unpack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS));

  00325	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00329	74 0a		 je	 SHORT $LN29@unpack_loc
  0032b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0032e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00330	89 4d b0	 mov	 DWORD PTR tv227[ebp], ecx
  00333	eb 21		 jmp	 SHORT $LN30@unpack_loc
$LN29@unpack_loc:
  00335	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0033b	83 c2 2e	 add	 edx, 46			; 0000002eH
  0033e	52		 push	 edx
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00349	50		 push	 eax
  0034a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN30@unpack_loc:
  00356	b9 01 00 00 00	 mov	 ecx, 1
  0035b	85 c9		 test	 ecx, ecx
  0035d	74 09		 je	 SHORT $LN31@unpack_loc
  0035f	c7 45 ac a0 00
	00 00		 mov	 DWORD PTR tv235[ebp], 160 ; 000000a0H
  00366	eb 21		 jmp	 SHORT $LN32@unpack_loc
$LN31@unpack_loc:
  00368	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0036e	83 c2 2e	 add	 edx, 46			; 0000002eH
  00371	52		 push	 edx
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00377	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0037c	50		 push	 eax
  0037d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00382	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN32@unpack_loc:
  00389	68 a0 00 00 00	 push	 160			; 000000a0H
  0038e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00391	51		 push	 ecx
  00392	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00397	d9 5d a8	 fstp	 DWORD PTR tv481[ebp]
  0039a	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv481[ebp]
  0039f	51		 push	 ecx
  003a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003a5	68 a0 00 00 00	 push	 160			; 000000a0H
  003aa	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  003ad	52		 push	 edx
  003ae	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv227[ebp], 700
  003b5	8b 4d ac	 mov	 ecx, DWORD PTR tv235[ebp]
  003b8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[eax+ecx*4]
  003bf	ff d2		 call	 edx

; 191  : 			set_local_entity_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE, unpack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE));

  003c1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003c5	74 0a		 je	 SHORT $LN33@unpack_loc
  003c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  003cc	89 4d b0	 mov	 DWORD PTR tv251[ebp], ecx
  003cf	eb 21		 jmp	 SHORT $LN34@unpack_loc
$LN33@unpack_loc:
  003d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  003d7	83 c2 2f	 add	 edx, 47			; 0000002fH
  003da	52		 push	 edx
  003db	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e5	50		 push	 eax
  003e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003eb	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN34@unpack_loc:
  003f2	b9 01 00 00 00	 mov	 ecx, 1
  003f7	85 c9		 test	 ecx, ecx
  003f9	74 09		 je	 SHORT $LN35@unpack_loc
  003fb	c7 45 ac a1 00
	00 00		 mov	 DWORD PTR tv259[ebp], 161 ; 000000a1H
  00402	eb 21		 jmp	 SHORT $LN36@unpack_loc
$LN35@unpack_loc:
  00404	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0040a	83 c2 2f	 add	 edx, 47			; 0000002fH
  0040d	52		 push	 edx
  0040e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00413	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00418	50		 push	 eax
  00419	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0041e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv259[ebp], 0
$LN36@unpack_loc:
  00425	68 a1 00 00 00	 push	 161			; 000000a1H
  0042a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0042d	51		 push	 ecx
  0042e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00433	d9 5d a8	 fstp	 DWORD PTR tv498[ebp]
  00436	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv498[ebp]
  0043b	51		 push	 ecx
  0043c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00441	68 a1 00 00 00	 push	 161			; 000000a1H
  00446	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00449	52		 push	 edx
  0044a	69 45 b0 bc 02
	00 00		 imul	 eax, DWORD PTR tv251[ebp], 700
  00451	8b 4d ac	 mov	 ecx, DWORD PTR tv259[ebp]
  00454	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[eax+ecx*4]
  0045b	ff d2		 call	 edx

; 192  : 
; 193  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &v);

  0045d	8d 45 f4	 lea	 eax, DWORD PTR _v$1[ebp]
  00460	50		 push	 eax
  00461	6a 11		 push	 17			; 00000011H
  00463	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00466	51		 push	 ecx
  00467	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 194  : 			set_local_entity_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &v);

  0046c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00470	74 0a		 je	 SHORT $LN37@unpack_loc
  00472	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00475	8b 08		 mov	 ecx, DWORD PTR [eax]
  00477	89 4d b0	 mov	 DWORD PTR tv278[ebp], ecx
  0047a	eb 21		 jmp	 SHORT $LN38@unpack_loc
$LN37@unpack_loc:
  0047c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00482	83 c2 32	 add	 edx, 50			; 00000032H
  00485	52		 push	 edx
  00486	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0048b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00490	50		 push	 eax
  00491	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00496	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv278[ebp], 0
$LN38@unpack_loc:
  0049d	b9 01 00 00 00	 mov	 ecx, 1
  004a2	85 c9		 test	 ecx, ecx
  004a4	74 09		 je	 SHORT $LN39@unpack_loc
  004a6	c7 45 ac 11 00
	00 00		 mov	 DWORD PTR tv286[ebp], 17 ; 00000011H
  004ad	eb 21		 jmp	 SHORT $LN40@unpack_loc
$LN39@unpack_loc:
  004af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  004b5	83 c2 32	 add	 edx, 50			; 00000032H
  004b8	52		 push	 edx
  004b9	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  004be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004c9	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv286[ebp], 0
$LN40@unpack_loc:
  004d0	8d 4d f4	 lea	 ecx, DWORD PTR _v$1[ebp]
  004d3	51		 push	 ecx
  004d4	6a 11		 push	 17			; 00000011H
  004d6	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004d9	52		 push	 edx
  004da	6b 45 b0 60	 imul	 eax, DWORD PTR tv278[ebp], 96
  004de	8b 4d ac	 mov	 ecx, DWORD PTR tv286[ebp]
  004e1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  004e8	ff d2		 call	 edx

; 195  : 
; 196  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &v);

  004ea	8d 45 f4	 lea	 eax, DWORD PTR _v$1[ebp]
  004ed	50		 push	 eax
  004ee	6a 12		 push	 18			; 00000012H
  004f0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004f3	51		 push	 ecx
  004f4	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 197  : 			set_local_entity_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &v);

  004f9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004fd	74 0a		 je	 SHORT $LN41@unpack_loc
  004ff	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00502	8b 08		 mov	 ecx, DWORD PTR [eax]
  00504	89 4d b0	 mov	 DWORD PTR tv301[ebp], ecx
  00507	eb 21		 jmp	 SHORT $LN42@unpack_loc
$LN41@unpack_loc:
  00509	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0050f	83 c2 35	 add	 edx, 53			; 00000035H
  00512	52		 push	 edx
  00513	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0051d	50		 push	 eax
  0051e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00523	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv301[ebp], 0
$LN42@unpack_loc:
  0052a	b9 01 00 00 00	 mov	 ecx, 1
  0052f	85 c9		 test	 ecx, ecx
  00531	74 09		 je	 SHORT $LN43@unpack_loc
  00533	c7 45 ac 12 00
	00 00		 mov	 DWORD PTR tv309[ebp], 18 ; 00000012H
  0053a	eb 21		 jmp	 SHORT $LN44@unpack_loc
$LN43@unpack_loc:
  0053c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00542	83 c2 35	 add	 edx, 53			; 00000035H
  00545	52		 push	 edx
  00546	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00550	50		 push	 eax
  00551	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00556	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv309[ebp], 0
$LN44@unpack_loc:
  0055d	8d 4d f4	 lea	 ecx, DWORD PTR _v$1[ebp]
  00560	51		 push	 ecx
  00561	6a 12		 push	 18			; 00000012H
  00563	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00566	52		 push	 edx
  00567	6b 45 b0 60	 imul	 eax, DWORD PTR tv301[ebp], 96
  0056b	8b 4d ac	 mov	 ecx, DWORD PTR tv309[ebp]
  0056e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00575	ff d2		 call	 edx

; 198  : 
; 199  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &v);

  00577	8d 45 f4	 lea	 eax, DWORD PTR _v$1[ebp]
  0057a	50		 push	 eax
  0057b	6a 13		 push	 19			; 00000013H
  0057d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00580	51		 push	 ecx
  00581	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 200  : 			set_local_entity_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &v);

  00586	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0058a	74 0a		 je	 SHORT $LN45@unpack_loc
  0058c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0058f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00591	89 4d b0	 mov	 DWORD PTR tv324[ebp], ecx
  00594	eb 21		 jmp	 SHORT $LN46@unpack_loc
$LN45@unpack_loc:
  00596	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0059c	83 c2 38	 add	 edx, 56			; 00000038H
  0059f	52		 push	 edx
  005a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  005a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005aa	50		 push	 eax
  005ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005b0	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv324[ebp], 0
$LN46@unpack_loc:
  005b7	b9 01 00 00 00	 mov	 ecx, 1
  005bc	85 c9		 test	 ecx, ecx
  005be	74 09		 je	 SHORT $LN47@unpack_loc
  005c0	c7 45 ac 13 00
	00 00		 mov	 DWORD PTR tv332[ebp], 19 ; 00000013H
  005c7	eb 21		 jmp	 SHORT $LN48@unpack_loc
$LN47@unpack_loc:
  005c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  005cf	83 c2 38	 add	 edx, 56			; 00000038H
  005d2	52		 push	 edx
  005d3	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  005dd	50		 push	 eax
  005de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv332[ebp], 0
$LN48@unpack_loc:
  005ea	8d 4d f4	 lea	 ecx, DWORD PTR _v$1[ebp]
  005ed	51		 push	 ecx
  005ee	6a 13		 push	 19			; 00000013H
  005f0	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005f3	52		 push	 edx
  005f4	6b 45 b0 60	 imul	 eax, DWORD PTR tv324[ebp], 96
  005f8	8b 4d ac	 mov	 ecx, DWORD PTR tv332[ebp]
  005fb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  00602	ff d2		 call	 edx

; 201  : 
; 202  : 			//
; 203  : 
; 204  :          set_local_entity_int_value (en, INT_TYPE_WEATHER_INCREASING, unpack_int_value (en, INT_TYPE_WEATHER_INCREASING));

  00604	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00608	74 0a		 je	 SHORT $LN49@unpack_loc
  0060a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0060d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0060f	89 4d b0	 mov	 DWORD PTR tv344[ebp], ecx
  00612	eb 21		 jmp	 SHORT $LN50@unpack_loc
$LN49@unpack_loc:
  00614	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0061a	83 c2 3c	 add	 edx, 60			; 0000003cH
  0061d	52		 push	 edx
  0061e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00623	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00628	50		 push	 eax
  00629	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0062e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv344[ebp], 0
$LN50@unpack_loc:
  00635	b9 01 00 00 00	 mov	 ecx, 1
  0063a	85 c9		 test	 ecx, ecx
  0063c	74 09		 je	 SHORT $LN51@unpack_loc
  0063e	c7 45 ac 12 01
	00 00		 mov	 DWORD PTR tv352[ebp], 274 ; 00000112H
  00645	eb 21		 jmp	 SHORT $LN52@unpack_loc
$LN51@unpack_loc:
  00647	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0064d	83 c2 3c	 add	 edx, 60			; 0000003cH
  00650	52		 push	 edx
  00651	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00656	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0065b	50		 push	 eax
  0065c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00661	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv352[ebp], 0
$LN52@unpack_loc:
  00668	68 12 01 00 00	 push	 274			; 00000112H
  0066d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00670	51		 push	 ecx
  00671	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00676	50		 push	 eax
  00677	68 12 01 00 00	 push	 274			; 00000112H
  0067c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0067f	52		 push	 edx
  00680	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv344[ebp], 1116
  00687	8b 4d ac	 mov	 ecx, DWORD PTR tv352[ebp]
  0068a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  00691	ff d2		 call	 edx

; 205  : 
; 206  :          set_local_entity_int_value (en, INT_TYPE_WIND_INCREASING, unpack_int_value (en, INT_TYPE_WIND_INCREASING));

  00693	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00697	74 0a		 je	 SHORT $LN53@unpack_loc
  00699	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0069c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069e	89 4d b0	 mov	 DWORD PTR tv367[ebp], ecx
  006a1	eb 21		 jmp	 SHORT $LN54@unpack_loc
$LN53@unpack_loc:
  006a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  006a9	83 c2 3e	 add	 edx, 62			; 0000003eH
  006ac	52		 push	 edx
  006ad	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006b7	50		 push	 eax
  006b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006bd	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv367[ebp], 0
$LN54@unpack_loc:
  006c4	b9 01 00 00 00	 mov	 ecx, 1
  006c9	85 c9		 test	 ecx, ecx
  006cb	74 09		 je	 SHORT $LN55@unpack_loc
  006cd	c7 45 ac 14 01
	00 00		 mov	 DWORD PTR tv375[ebp], 276 ; 00000114H
  006d4	eb 21		 jmp	 SHORT $LN56@unpack_loc
$LN55@unpack_loc:
  006d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  006dc	83 c2 3e	 add	 edx, 62			; 0000003eH
  006df	52		 push	 edx
  006e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006ea	50		 push	 eax
  006eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f0	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv375[ebp], 0
$LN56@unpack_loc:
  006f7	68 14 01 00 00	 push	 276			; 00000114H
  006fc	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  006ff	51		 push	 ecx
  00700	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00705	50		 push	 eax
  00706	68 14 01 00 00	 push	 276			; 00000114H
  0070b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0070e	52		 push	 edx
  0070f	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv367[ebp], 1116
  00716	8b 4d ac	 mov	 ecx, DWORD PTR tv375[ebp]
  00719	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  00720	ff d2		 call	 edx

; 207  : 
; 208  : 			set_display_campaign_timer_valid (TRUE);

  00722	6a 01		 push	 1
  00724	e8 00 00 00 00	 call	 ?set_display_campaign_timer_valid@@YGXH@Z ; set_display_campaign_timer_valid
$LN2@unpack_loc:

; 209  : 
; 210  : 			break;
; 211  : 		}
; 212  : 	}
; 213  : }

  00729	5f		 pop	 edi
  0072a	5e		 pop	 esi
  0072b	5b		 pop	 ebx
  0072c	8b e5		 mov	 esp, ebp
  0072e	5d		 pop	 ebp
  0072f	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\ss_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv70 = -72						; size = 4
_raw$1 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   :    switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b8 03	 cmp	 DWORD PTR tv70[ebp], 3
  00037	74 0a		 je	 SHORT $LN7@pack_local
  00039	e9 2c 01 00 00	 jmp	 $LN2@pack_local

; 84   :    {
; 85   :       ////////////////////////////////////////
; 86   :       case PACK_MODE_SERVER_SESSION:
; 87   :       case PACK_MODE_CLIENT_SESSION:
; 88   :       case PACK_MODE_BROWSE_SESSION:
; 89   :       ////////////////////////////////////////
; 90   : 		{
; 91   : 
; 92   : 			break;

  0003e	e9 27 01 00 00	 jmp	 $LN2@pack_local
$LN7@pack_local:

; 93   : 		}
; 94   : 
; 95   :       ////////////////////////////////////////
; 96   :       case PACK_MODE_UPDATE_ENTITY:
; 97   :       ////////////////////////////////////////
; 98   :       {
; 99   :          session
; 100  :             *raw;
; 101  : 
; 102  :          raw = (session *) get_local_entity_data (en);

  00043	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00046	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00049	89 4d fc	 mov	 DWORD PTR _raw$1[ebp], ecx

; 103  : 
; 104  :          pack_float_value (en, FLOAT_TYPE_ELAPSED_TIME, raw->elapsed_time);

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0004f	51		 push	 ecx
  00050	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00055	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005a	6a 23		 push	 35			; 00000023H
  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0005f	51		 push	 ecx
  00060	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 105  : 
; 106  :          pack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER, raw->lightning_timer);

  00065	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00068	51		 push	 ecx
  00069	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	6a 3e		 push	 62			; 0000003eH
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00078	51		 push	 ecx
  00079	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 107  : 
; 108  : 			//
; 109  : 			// rain effect
; 110  : 			//
; 111  : 
; 112  :          pack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS, raw->weather_radius);

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00081	51		 push	 ecx
  00082	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	68 9d 00 00 00	 push	 157			; 0000009dH
  00091	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00094	51		 push	 ecx
  00095	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 113  : 
; 114  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &raw->weather_position);

  0009a	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0009d	83 c0 44	 add	 eax, 68			; 00000044H
  000a0	50		 push	 eax
  000a1	6a 0f		 push	 15			; 0000000fH
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a6	51		 push	 ecx
  000a7	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 115  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &raw->weather_velocity);

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000af	83 c0 50	 add	 eax, 80			; 00000050H
  000b2	50		 push	 eax
  000b3	6a 10		 push	 16			; 00000010H
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b8	51		 push	 ecx
  000b9	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 116  : 
; 117  : 			//
; 118  : 			// wind effect
; 119  : 			//
; 120  : 
; 121  :          pack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS, raw->wind_effect_radius);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000c1	51		 push	 ecx
  000c2	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	68 a0 00 00 00	 push	 160			; 000000a0H
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000d4	51		 push	 ecx
  000d5	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 122  :          pack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE, raw->wind_gusting_value);

  000da	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000dd	51		 push	 ecx
  000de	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  000e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e8	68 a1 00 00 00	 push	 161			; 000000a1H
  000ed	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f0	51		 push	 ecx
  000f1	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 123  : 
; 124  : 			pack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &raw->wind_direction_vector);

  000f6	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000f9	83 c0 6c	 add	 eax, 108		; 0000006cH
  000fc	50		 push	 eax
  000fd	6a 11		 push	 17			; 00000011H
  000ff	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 125  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &raw->wind_effect_position);

  00108	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0010b	83 c0 78	 add	 eax, 120		; 00000078H
  0010e	50		 push	 eax
  0010f	6a 12		 push	 18			; 00000012H
  00111	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00114	51		 push	 ecx
  00115	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 126  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &raw->wind_effect_velocity);

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0011d	05 84 00 00 00	 add	 eax, 132		; 00000084H
  00122	50		 push	 eax
  00123	6a 13		 push	 19			; 00000013H
  00125	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00128	51		 push	 ecx
  00129	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 127  : 
; 128  : 			//
; 129  : 
; 130  :          pack_int_value (en, INT_TYPE_WEATHER_INCREASING, raw->weather_increasing);

  0012e	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00131	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00137	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  0013a	83 e1 01	 and	 ecx, 1
  0013d	51		 push	 ecx
  0013e	68 12 01 00 00	 push	 274			; 00000112H
  00143	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00146	52		 push	 edx
  00147	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 131  : 
; 132  :          pack_int_value (en, INT_TYPE_WIND_INCREASING, raw->wind_increasing);

  0014c	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0014f	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00155	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  00158	83 e1 01	 and	 ecx, 1
  0015b	51		 push	 ecx
  0015c	68 14 01 00 00	 push	 276			; 00000114H
  00161	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00164	52		 push	 edx
  00165	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:

; 133  : 
; 134  :          break;
; 135  :       }
; 136  :    }
; 137  : }

  0016a	5f		 pop	 edi
  0016b	5e		 pop	 esi
  0016c	5b		 pop	 ebx
  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\ss_pack.c
;	COMDAT ?unpack_local_session_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv674 = -80						; size = 4
tv598 = -80						; size = 4
tv588 = -80						; size = 4
tv578 = -80						; size = 4
tv568 = -80						; size = 4
tv558 = -80						; size = 4
tv548 = -80						; size = 4
tv538 = -80						; size = 4
tv528 = -80						; size = 4
tv518 = -80						; size = 4
tv508 = -80						; size = 4
tv498 = -80						; size = 4
tv488 = -80						; size = 4
tv479 = -80						; size = 4
tv365 = -80						; size = 4
tv336 = -80						; size = 4
tv326 = -80						; size = 4
tv316 = -80						; size = 4
tv306 = -80						; size = 4
tv296 = -80						; size = 4
tv286 = -80						; size = 4
tv276 = -80						; size = 4
tv266 = -80						; size = 4
tv256 = -80						; size = 4
tv246 = -80						; size = 4
tv236 = -80						; size = 4
tv226 = -80						; size = 4
tv217 = -80						; size = 4
tv70 = -80						; size = 4
_index$ = -12						; size = 4
_en$ = -8						; size = 4
_raw$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_session_data@@YGXW4PACK_MODES@@@Z PROC	; unpack_local_session_data, COMDAT

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 496  : 	session
; 497  : 		*raw;
; 498  : 
; 499  : 	entity
; 500  : 		*en;
; 501  : 
; 502  : 	int
; 503  : 		index;
; 504  : 
; 505  :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 08 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  0001a	83 c0 0a	 add	 eax, 10			; 0000000aH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 506  : 
; 507  :    switch (mode)

  0002d	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	74 19		 je	 SHORT $LN6@unpack_loc
  00039	83 7d b0 01	 cmp	 DWORD PTR tv70[ebp], 1
  0003d	0f 84 b0 04 00
	00		 je	 $LN8@unpack_loc
  00043	83 7d b0 02	 cmp	 DWORD PTR tv70[ebp], 2
  00047	0f 84 0f 0a 00
	00		 je	 $LN11@unpack_loc
  0004d	e9 6b 0b 00 00	 jmp	 $LN2@unpack_loc
$LN6@unpack_loc:

; 508  :    {
; 509  :       ////////////////////////////////////////
; 510  :       case PACK_MODE_SERVER_SESSION:
; 511  :       ////////////////////////////////////////
; 512  : 		{
; 513  : 			en = get_session_entity ();

  00052	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00057	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 514  : 
; 515  : 			ASSERT (en);

  0005a	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0005e	75 18		 jne	 SHORT $LN7@unpack_loc
  00060	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00065	83 c0 14	 add	 eax, 20			; 00000014H
  00068	50		 push	 eax
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00073	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@unpack_loc:

; 516  : 			
; 517  : 			raw = (session *) get_local_entity_data (en);

  00078	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0007b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007e	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 518  : 
; 519  : 			raw->version_number = unpack_int_value (en, INT_TYPE_VERSION_NUMBER);

  00081	68 f5 00 00 00	 push	 245			; 000000f5H
  00086	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0008f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00092	89 01		 mov	 DWORD PTR [ecx], eax

; 520  : 		
; 521  : 			unpack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  00094	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00097	83 c0 04	 add	 eax, 4
  0009a	50		 push	 eax
  0009b	6a 0e		 push	 14			; 0000000eH
  0009d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000a0	51		 push	 ecx
  000a1	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 522  : 		
; 523  : 			// special_effect_root
; 524  : 		
; 525  : 			// update_link
; 526  : 		
; 527  : 			raw->elapsed_time = unpack_float_value (en, FLOAT_TYPE_ELAPSED_TIME);

  000a6	6a 23		 push	 35			; 00000023H
  000a8	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000b4	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 528  : 		
; 529  : 			raw->lightning_timer = unpack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER);

  000b7	6a 3e		 push	 62			; 0000003eH
  000b9	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000c5	d9 59 20	 fstp	 DWORD PTR [ecx+32]

; 530  : 		
; 531  : 			raw->start_time = unpack_float_value (en, FLOAT_TYPE_START_TIME);

  000c8	6a 7d		 push	 125			; 0000007dH
  000ca	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000d3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000d6	d9 59 18	 fstp	 DWORD PTR [ecx+24]

; 532  : 		
; 533  : 			// time_of_day_resync
; 534  : 		
; 535  : 			raw->time_of_day_acceleration = unpack_float_value (en, FLOAT_TYPE_TIME_OF_DAY_ACCELERATION);

  000d9	68 8f 00 00 00	 push	 143			; 0000008fH
  000de	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000e7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000ea	d9 59 28	 fstp	 DWORD PTR [ecx+40]

; 536  : 		
; 537  : 			raw->fog_of_war_maximum_value = unpack_float_value (en, FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE);

  000ed	6a 2c		 push	 44			; 0000002cH
  000ef	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000f8	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  000fb	d9 59 2c	 fstp	 DWORD PTR [ecx+44]

; 538  : 		
; 539  : 			//
; 540  : 			// rain effect
; 541  : 			//
; 542  : 		
; 543  : 			raw->weather_radius = unpack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS);

  000fe	68 9d 00 00 00	 push	 157			; 0000009dH
  00103	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00106	50		 push	 eax
  00107	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0010f	d9 59 30	 fstp	 DWORD PTR [ecx+48]

; 544  : 			raw->weather_mode_transitional_period = unpack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_PERIOD);

  00112	68 9b 00 00 00	 push	 155			; 0000009bH
  00117	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00120	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00123	d9 59 34	 fstp	 DWORD PTR [ecx+52]

; 545  : 			raw->weather_mode_transitional_status = unpack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_STATUS);

  00126	68 9c 00 00 00	 push	 156			; 0000009cH
  0012b	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00134	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00137	d9 59 38	 fstp	 DWORD PTR [ecx+56]

; 546  : 		
; 547  : 			raw->weather_mode = (weathermodes) unpack_int_value (en, INT_TYPE_WEATHER_MODE);

  0013a	68 13 01 00 00	 push	 275			; 00000113H
  0013f	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00148	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0014b	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 548  : 			raw->target_weather_mode = (weathermodes) unpack_int_value (en, INT_TYPE_TARGET_WEATHER_MODE);

  0014e	68 d7 00 00 00	 push	 215			; 000000d7H
  00153	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0015c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0015f	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 549  : 		
; 550  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &raw->weather_position);

  00162	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00165	83 c0 44	 add	 eax, 68			; 00000044H
  00168	50		 push	 eax
  00169	6a 0f		 push	 15			; 0000000fH
  0016b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0016e	51		 push	 ecx
  0016f	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 551  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &raw->weather_velocity);

  00174	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00177	83 c0 50	 add	 eax, 80			; 00000050H
  0017a	50		 push	 eax
  0017b	6a 10		 push	 16			; 00000010H
  0017d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00180	51		 push	 ecx
  00181	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 552  : 		
; 553  : 			//
; 554  : 			// wind effect
; 555  : 			//
; 556  : 		
; 557  : 			raw->wind_effect_radius = unpack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS);

  00186	68 a0 00 00 00	 push	 160			; 000000a0H
  0018b	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0018e	50		 push	 eax
  0018f	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00194	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00197	d9 59 5c	 fstp	 DWORD PTR [ecx+92]

; 558  : 			raw->wind_gusting_value = unpack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE);

  0019a	68 a1 00 00 00	 push	 161			; 000000a1H
  0019f	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001a2	50		 push	 eax
  001a3	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001a8	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001ab	d9 59 60	 fstp	 DWORD PTR [ecx+96]

; 559  : 			raw->wind_minimum_speed = unpack_float_value (en, FLOAT_TYPE_WIND_MINIMUM_SPEED);

  001ae	68 a3 00 00 00	 push	 163			; 000000a3H
  001b3	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001bc	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001bf	d9 59 64	 fstp	 DWORD PTR [ecx+100]

; 560  : 			raw->wind_maximum_speed = unpack_float_value (en, FLOAT_TYPE_WIND_MAXIMUM_SPEED);

  001c2	68 a2 00 00 00	 push	 162			; 000000a2H
  001c7	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  001d0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  001d3	d9 59 68	 fstp	 DWORD PTR [ecx+104]

; 561  : 		
; 562  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &raw->wind_direction_vector);

  001d6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001d9	83 c0 6c	 add	 eax, 108		; 0000006cH
  001dc	50		 push	 eax
  001dd	6a 11		 push	 17			; 00000011H
  001df	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  001e2	51		 push	 ecx
  001e3	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 563  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &raw->wind_effect_position);

  001e8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001eb	83 c0 78	 add	 eax, 120		; 00000078H
  001ee	50		 push	 eax
  001ef	6a 12		 push	 18			; 00000012H
  001f1	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  001f4	51		 push	 ecx
  001f5	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 564  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &raw->wind_effect_velocity);

  001fa	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001fd	05 84 00 00 00	 add	 eax, 132		; 00000084H
  00202	50		 push	 eax
  00203	6a 13		 push	 19			; 00000013H
  00205	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00208	51		 push	 ecx
  00209	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 565  : 		
; 566  : 			//
; 567  : 		
; 568  : 			raw->day_segment_type = (day_segment_types) unpack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE);

  0020e	6a 27		 push	 39			; 00000027H
  00210	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00219	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0021c	89 81 90 00 00
	00		 mov	 DWORD PTR [ecx+144], eax

; 569  : 
; 570  : 			raw->population_x_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN);

  00222	6a 57		 push	 87			; 00000057H
  00224	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00227	50		 push	 eax
  00228	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0022d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00230	d9 99 94 00 00
	00		 fstp	 DWORD PTR [ecx+148]

; 571  : 			raw->population_x_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX);

  00236	6a 58		 push	 88			; 00000058H
  00238	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0023b	50		 push	 eax
  0023c	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00244	d9 99 98 00 00
	00		 fstp	 DWORD PTR [ecx+152]

; 572  : 			raw->population_z_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN);

  0024a	6a 59		 push	 89			; 00000059H
  0024c	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0024f	50		 push	 eax
  00250	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00255	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00258	d9 99 9c 00 00
	00		 fstp	 DWORD PTR [ecx+156]

; 573  : 			raw->population_z_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX);

  0025e	6a 5a		 push	 90			; 0000005aH
  00260	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00269	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0026c	d9 99 a0 00 00
	00		 fstp	 DWORD PTR [ecx+160]

; 574  : 		
; 575  : 			raw->campaign_medal = unpack_int_value (en, INT_TYPE_CAMPAIGN_MEDAL);

  00272	6a 15		 push	 21			; 00000015H
  00274	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00277	50		 push	 eax
  00278	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0027d	89 45 b0	 mov	 DWORD PTR tv217[ebp], eax
  00280	8b 4d b0	 mov	 ecx, DWORD PTR tv217[ebp]
  00283	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00289	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0028c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00292	25 00 00 ff ff	 and	 eax, -65536		; ffff0000H
  00297	0b c1		 or	 eax, ecx
  00299	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0029c	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 576  : 		
; 577  : 			raw->campaign_requires_apache_havoc = unpack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC);

  002a2	6a 16		 push	 22			; 00000016H
  002a4	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  002a7	50		 push	 eax
  002a8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002ad	89 45 b0	 mov	 DWORD PTR tv226[ebp], eax
  002b0	8b 4d b0	 mov	 ecx, DWORD PTR tv226[ebp]
  002b3	83 e1 01	 and	 ecx, 1
  002b6	c1 e1 10	 shl	 ecx, 16			; 00000010H
  002b9	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  002bc	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  002c2	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  002c7	0b c1		 or	 eax, ecx
  002c9	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002cc	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 578  : 		
; 579  : 			raw->auto_assign_gunship = unpack_int_value (en, INT_TYPE_AUTO_ASSIGN_GUNSHIP);

  002d2	6a 0b		 push	 11			; 0000000bH
  002d4	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  002d7	50		 push	 eax
  002d8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002dd	89 45 b0	 mov	 DWORD PTR tv236[ebp], eax
  002e0	8b 4d b0	 mov	 ecx, DWORD PTR tv236[ebp]
  002e3	83 e1 01	 and	 ecx, 1
  002e6	c1 e1 11	 shl	 ecx, 17			; 00000011H
  002e9	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  002ec	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  002f2	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  002f7	0b c1		 or	 eax, ecx
  002f9	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002fc	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 580  : 		
; 581  : 			raw->infinite_fuel = unpack_int_value (en, INT_TYPE_INFINITE_FUEL);

  00302	6a 65		 push	 101			; 00000065H
  00304	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0030d	89 45 b0	 mov	 DWORD PTR tv246[ebp], eax
  00310	8b 4d b0	 mov	 ecx, DWORD PTR tv246[ebp]
  00313	83 e1 01	 and	 ecx, 1
  00316	c1 e1 14	 shl	 ecx, 20			; 00000014H
  00319	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0031c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00322	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00327	0b c1		 or	 eax, ecx
  00329	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0032c	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 582  : 		
; 583  : 			raw->infinite_weapons = unpack_int_value (en, INT_TYPE_INFINITE_WEAPONS);

  00332	6a 67		 push	 103			; 00000067H
  00334	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0033d	89 45 b0	 mov	 DWORD PTR tv256[ebp], eax
  00340	8b 4d b0	 mov	 ecx, DWORD PTR tv256[ebp]
  00343	83 e1 01	 and	 ecx, 1
  00346	c1 e1 15	 shl	 ecx, 21			; 00000015H
  00349	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0034c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00352	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  00357	0b c1		 or	 eax, ecx
  00359	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0035c	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 584  : 		
; 585  : 			raw->suppress_ai_fire = unpack_int_value (en, INT_TYPE_SUPPRESS_AI_FIRE);

  00362	68 d0 00 00 00	 push	 208			; 000000d0H
  00367	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00370	89 45 b0	 mov	 DWORD PTR tv266[ebp], eax
  00373	8b 4d b0	 mov	 ecx, DWORD PTR tv266[ebp]
  00376	83 e1 01	 and	 ecx, 1
  00379	c1 e1 16	 shl	 ecx, 22			; 00000016H
  0037c	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0037f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00385	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  0038a	0b c1		 or	 eax, ecx
  0038c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0038f	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 586  : 		
; 587  : 			raw->invulnerable_from_collisions = unpack_int_value (en, INT_TYPE_INVULNERABLE_FROM_COLLISIONS);

  00395	6a 6b		 push	 107			; 0000006bH
  00397	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0039a	50		 push	 eax
  0039b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  003a0	89 45 b0	 mov	 DWORD PTR tv276[ebp], eax
  003a3	8b 4d b0	 mov	 ecx, DWORD PTR tv276[ebp]
  003a6	83 e1 01	 and	 ecx, 1
  003a9	c1 e1 17	 shl	 ecx, 23			; 00000017H
  003ac	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  003af	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  003b5	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  003ba	0b c1		 or	 eax, ecx
  003bc	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  003bf	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 588  : 
; 589  : 			raw->invulnerable_from_weapons = unpack_int_value (en, INT_TYPE_INVULNERABLE_FROM_WEAPONS);

  003c5	6a 6c		 push	 108			; 0000006cH
  003c7	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  003ca	50		 push	 eax
  003cb	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  003d0	89 45 b0	 mov	 DWORD PTR tv286[ebp], eax
  003d3	8b 4d b0	 mov	 ecx, DWORD PTR tv286[ebp]
  003d6	83 e1 01	 and	 ecx, 1
  003d9	c1 e1 18	 shl	 ecx, 24			; 00000018H
  003dc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  003df	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  003e5	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  003ea	0b c1		 or	 eax, ecx
  003ec	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  003ef	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 590  : 		
; 591  : 			raw->cheats_enabled = unpack_int_value (en, INT_TYPE_CHEATS_ENABLED);

  003f5	6a 17		 push	 23			; 00000017H
  003f7	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  003fa	50		 push	 eax
  003fb	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00400	89 45 b0	 mov	 DWORD PTR tv296[ebp], eax
  00403	8b 4d b0	 mov	 ecx, DWORD PTR tv296[ebp]
  00406	83 e1 01	 and	 ecx, 1
  00409	c1 e1 19	 shl	 ecx, 25			; 00000019H
  0040c	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0040f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00415	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  0041a	0b c1		 or	 eax, ecx
  0041c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0041f	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 592  : 		
; 593  : 			raw->skip_night_time = unpack_int_value (en, INT_TYPE_SKIP_NIGHT_TIME);

  00425	68 bc 00 00 00	 push	 188			; 000000bcH
  0042a	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00433	89 45 b0	 mov	 DWORD PTR tv306[ebp], eax
  00436	8b 4d b0	 mov	 ecx, DWORD PTR tv306[ebp]
  00439	83 e1 01	 and	 ecx, 1
  0043c	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  0043f	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00442	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00448	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  0044d	0b c1		 or	 eax, ecx
  0044f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00452	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 594  : 		
; 595  : 			raw->weather_increasing = unpack_int_value (en, INT_TYPE_WEATHER_INCREASING);

  00458	68 12 01 00 00	 push	 274			; 00000112H
  0045d	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00466	89 45 b0	 mov	 DWORD PTR tv316[ebp], eax
  00469	8b 4d b0	 mov	 ecx, DWORD PTR tv316[ebp]
  0046c	83 e1 01	 and	 ecx, 1
  0046f	c1 e1 1b	 shl	 ecx, 27			; 0000001bH
  00472	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00475	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0047b	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00480	0b c1		 or	 eax, ecx
  00482	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00485	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 596  : 		
; 597  : 			raw->wind_increasing = unpack_int_value (en, INT_TYPE_WIND_INCREASING);

  0048b	68 14 01 00 00	 push	 276			; 00000114H
  00490	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00493	50		 push	 eax
  00494	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00499	89 45 b0	 mov	 DWORD PTR tv326[ebp], eax
  0049c	8b 4d b0	 mov	 ecx, DWORD PTR tv326[ebp]
  0049f	83 e1 01	 and	 ecx, 1
  004a2	c1 e1 1c	 shl	 ecx, 28			; 0000001cH
  004a5	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  004a8	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  004ae	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  004b3	0b c1		 or	 eax, ecx
  004b5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  004b8	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 598  : 		
; 599  : 			raw->local_weather_model = unpack_int_value (en, INT_TYPE_LOCAL_WEATHER_MODEL);

  004be	6a 7d		 push	 125			; 0000007dH
  004c0	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  004c9	89 45 b0	 mov	 DWORD PTR tv336[ebp], eax
  004cc	8b 4d b0	 mov	 ecx, DWORD PTR tv336[ebp]
  004cf	83 e1 01	 and	 ecx, 1
  004d2	c1 e1 1d	 shl	 ecx, 29			; 0000001dH
  004d5	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  004d8	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  004de	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  004e3	0b c1		 or	 eax, ecx
  004e5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  004e8	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 600  : 
; 601  : 			break;

  004ee	e9 ca 06 00 00	 jmp	 $LN2@unpack_loc
$LN8@unpack_loc:

; 602  : 		}
; 603  :       ////////////////////////////////////////
; 604  :       case PACK_MODE_CLIENT_SESSION:
; 605  :       ////////////////////////////////////////
; 606  :       {
; 607  :          //
; 608  :          // create entity
; 609  :          //
; 610  : 
; 611  : 			ASSERT (!get_session_entity ());

  004f3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  004fa	74 18		 je	 SHORT $LN9@unpack_loc
  004fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00501	83 c0 74	 add	 eax, 116		; 00000074H
  00504	50		 push	 eax
  00505	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050a	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GDGOJOI@?$CBget_session_entity?5?$CI?$CJ@
  0050f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@unpack_loc:

; 612  : 
; 613  : 			index = unpack_entity_safe_index ();

  00514	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  00519	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 614  : 
; 615  : 			en = get_free_entity (index);

  0051c	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  0051f	50		 push	 eax
  00520	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00525	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 616  : 
; 617  : 			set_local_entity_type (en, ENTITY_TYPE_SESSION);

  00528	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0052b	c7 00 1b 00 00
	00		 mov	 DWORD PTR [eax], 27	; 0000001bH

; 618  : 
; 619  : 			raw = (session *) malloc_fast_mem (sizeof (session));

  00531	68 a8 00 00 00	 push	 168			; 000000a8H
  00536	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0053b	89 45 fc	 mov	 DWORD PTR _raw$[ebp], eax

; 620  : 
; 621  : 			set_local_entity_data (en, raw);

  0053e	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00541	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00544	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 622  : 
; 623  : 			memset (raw, 0, sizeof (session));

  00547	68 a8 00 00 00	 push	 168			; 000000a8H
  0054c	6a 00		 push	 0
  0054e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 _memset
  00557	83 c4 0c	 add	 esp, 12			; 0000000cH

; 624  : 
; 625  : 			//
; 626  : 			// unpack data (in exactly the same order as the data was packed)
; 627  : 			//
; 628  : 
; 629  : 			raw->version_number = unpack_int_value (en, INT_TYPE_VERSION_NUMBER);

  0055a	68 f5 00 00 00	 push	 245			; 000000f5H
  0055f	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00562	50		 push	 eax
  00563	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00568	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0056b	89 01		 mov	 DWORD PTR [ecx], eax

; 630  : 
; 631  : 			raw->session_complete = unpack_int_value (en, INT_TYPE_SESSION_COMPLETE);

  0056d	68 ba 00 00 00	 push	 186			; 000000baH
  00572	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00575	50		 push	 eax
  00576	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0057b	89 45 b0	 mov	 DWORD PTR tv365[ebp], eax
  0057e	8b 4d b0	 mov	 ecx, DWORD PTR tv365[ebp]
  00581	83 e1 03	 and	 ecx, 3
  00584	c1 e1 12	 shl	 ecx, 18			; 00000012H
  00587	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0058a	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00590	25 ff ff f3 ff	 and	 eax, -786433		; fff3ffffH
  00595	0b c1		 or	 eax, ecx
  00597	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0059a	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 632  : 		
; 633  : 			unpack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  005a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005a3	83 c0 04	 add	 eax, 4
  005a6	50		 push	 eax
  005a7	6a 0e		 push	 14			; 0000000eH
  005a9	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  005ac	51		 push	 ecx
  005ad	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 634  : 
; 635  : 			unpack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  005b2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005b5	83 c0 08	 add	 eax, 8
  005b8	50		 push	 eax
  005b9	6a 24		 push	 36			; 00000024H
  005bb	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  005be	51		 push	 ecx
  005bf	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 636  : 
; 637  : 			// update_link
; 638  : 
; 639  : 			raw->elapsed_time = unpack_float_value (en, FLOAT_TYPE_ELAPSED_TIME);

  005c4	6a 23		 push	 35			; 00000023H
  005c6	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  005c9	50		 push	 eax
  005ca	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  005cf	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  005d2	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 640  : 
; 641  :          raw->lightning_timer = unpack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER);

  005d5	6a 3e		 push	 62			; 0000003eH
  005d7	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  005da	50		 push	 eax
  005db	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  005e0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  005e3	d9 59 20	 fstp	 DWORD PTR [ecx+32]

; 642  : 
; 643  : 			raw->start_time = unpack_float_value (en, FLOAT_TYPE_START_TIME);

  005e6	6a 7d		 push	 125			; 0000007dH
  005e8	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  005eb	50		 push	 eax
  005ec	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  005f1	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  005f4	d9 59 18	 fstp	 DWORD PTR [ecx+24]

; 644  : 
; 645  : 			// time_of_day_resync
; 646  : 
; 647  : 			raw->time_of_day_acceleration = unpack_float_value (en, FLOAT_TYPE_TIME_OF_DAY_ACCELERATION);

  005f7	68 8f 00 00 00	 push	 143			; 0000008fH
  005fc	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  005ff	50		 push	 eax
  00600	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00605	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00608	d9 59 28	 fstp	 DWORD PTR [ecx+40]

; 648  : 
; 649  : 			raw->fog_of_war_maximum_value = unpack_float_value (en, FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE);

  0060b	6a 2c		 push	 44			; 0000002cH
  0060d	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00610	50		 push	 eax
  00611	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00616	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00619	d9 59 2c	 fstp	 DWORD PTR [ecx+44]

; 650  : 		
; 651  : 			//
; 652  : 			// rain effect
; 653  : 			//
; 654  : 
; 655  :          raw->weather_radius = unpack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS);

  0061c	68 9d 00 00 00	 push	 157			; 0000009dH
  00621	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00624	50		 push	 eax
  00625	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0062a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0062d	d9 59 30	 fstp	 DWORD PTR [ecx+48]

; 656  :          raw->weather_mode_transitional_period = unpack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_PERIOD);

  00630	68 9b 00 00 00	 push	 155			; 0000009bH
  00635	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00638	50		 push	 eax
  00639	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0063e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00641	d9 59 34	 fstp	 DWORD PTR [ecx+52]

; 657  :          raw->weather_mode_transitional_status = unpack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_STATUS);

  00644	68 9c 00 00 00	 push	 156			; 0000009cH
  00649	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0064c	50		 push	 eax
  0064d	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00652	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00655	d9 59 38	 fstp	 DWORD PTR [ecx+56]

; 658  : 
; 659  :          raw->weather_mode = (weathermodes) unpack_int_value (en, INT_TYPE_WEATHER_MODE);

  00658	68 13 01 00 00	 push	 275			; 00000113H
  0065d	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00660	50		 push	 eax
  00661	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00666	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00669	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 660  :          raw->target_weather_mode = (weathermodes) unpack_int_value (en, INT_TYPE_TARGET_WEATHER_MODE);

  0066c	68 d7 00 00 00	 push	 215			; 000000d7H
  00671	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00674	50		 push	 eax
  00675	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0067a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0067d	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 661  : 
; 662  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &raw->weather_position);

  00680	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00683	83 c0 44	 add	 eax, 68			; 00000044H
  00686	50		 push	 eax
  00687	6a 0f		 push	 15			; 0000000fH
  00689	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0068c	51		 push	 ecx
  0068d	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 663  : 			unpack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &raw->weather_velocity);

  00692	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00695	83 c0 50	 add	 eax, 80			; 00000050H
  00698	50		 push	 eax
  00699	6a 10		 push	 16			; 00000010H
  0069b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0069e	51		 push	 ecx
  0069f	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 664  : 
; 665  : 			//
; 666  : 			// wind effect
; 667  : 			//
; 668  : 
; 669  : 			raw->wind_effect_radius = unpack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS);

  006a4	68 a0 00 00 00	 push	 160			; 000000a0H
  006a9	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  006ac	50		 push	 eax
  006ad	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  006b2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  006b5	d9 59 5c	 fstp	 DWORD PTR [ecx+92]

; 670  :          raw->wind_gusting_value = unpack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE);

  006b8	68 a1 00 00 00	 push	 161			; 000000a1H
  006bd	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  006c0	50		 push	 eax
  006c1	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  006c6	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  006c9	d9 59 60	 fstp	 DWORD PTR [ecx+96]

; 671  : 			raw->wind_minimum_speed = unpack_float_value (en, FLOAT_TYPE_WIND_MINIMUM_SPEED);

  006cc	68 a3 00 00 00	 push	 163			; 000000a3H
  006d1	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  006da	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  006dd	d9 59 64	 fstp	 DWORD PTR [ecx+100]

; 672  : 			raw->wind_maximum_speed = unpack_float_value (en, FLOAT_TYPE_WIND_MAXIMUM_SPEED);

  006e0	68 a2 00 00 00	 push	 162			; 000000a2H
  006e5	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  006e8	50		 push	 eax
  006e9	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  006ee	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  006f1	d9 59 68	 fstp	 DWORD PTR [ecx+104]

; 673  : 
; 674  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &raw->wind_direction_vector);

  006f4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006f7	83 c0 6c	 add	 eax, 108		; 0000006cH
  006fa	50		 push	 eax
  006fb	6a 11		 push	 17			; 00000011H
  006fd	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00700	51		 push	 ecx
  00701	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 675  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &raw->wind_effect_position);

  00706	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00709	83 c0 78	 add	 eax, 120		; 00000078H
  0070c	50		 push	 eax
  0070d	6a 12		 push	 18			; 00000012H
  0070f	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00712	51		 push	 ecx
  00713	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 676  : 			unpack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &raw->wind_effect_velocity);

  00718	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0071b	05 84 00 00 00	 add	 eax, 132		; 00000084H
  00720	50		 push	 eax
  00721	6a 13		 push	 19			; 00000013H
  00723	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00726	51		 push	 ecx
  00727	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 677  : 
; 678  : 			//
; 679  : 
; 680  : 			raw->day_segment_type = (day_segment_types) unpack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE);

  0072c	6a 27		 push	 39			; 00000027H
  0072e	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00731	50		 push	 eax
  00732	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00737	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0073a	89 81 90 00 00
	00		 mov	 DWORD PTR [ecx+144], eax

; 681  : 
; 682  : 			raw->population_x_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN);

  00740	6a 57		 push	 87			; 00000057H
  00742	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00745	50		 push	 eax
  00746	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0074b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0074e	d9 99 94 00 00
	00		 fstp	 DWORD PTR [ecx+148]

; 683  : 			raw->population_x_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX);

  00754	6a 58		 push	 88			; 00000058H
  00756	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00759	50		 push	 eax
  0075a	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  0075f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00762	d9 99 98 00 00
	00		 fstp	 DWORD PTR [ecx+152]

; 684  : 			raw->population_z_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN);

  00768	6a 59		 push	 89			; 00000059H
  0076a	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0076d	50		 push	 eax
  0076e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00773	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00776	d9 99 9c 00 00
	00		 fstp	 DWORD PTR [ecx+156]

; 685  : 			raw->population_z_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX);

  0077c	6a 5a		 push	 90			; 0000005aH
  0077e	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00781	50		 push	 eax
  00782	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00787	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0078a	d9 99 a0 00 00
	00		 fstp	 DWORD PTR [ecx+160]

; 686  : 		
; 687  : 			raw->campaign_medal = unpack_int_value (en, INT_TYPE_CAMPAIGN_MEDAL);

  00790	6a 15		 push	 21			; 00000015H
  00792	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00795	50		 push	 eax
  00796	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0079b	89 45 b0	 mov	 DWORD PTR tv479[ebp], eax
  0079e	8b 4d b0	 mov	 ecx, DWORD PTR tv479[ebp]
  007a1	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  007a7	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  007aa	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  007b0	25 00 00 ff ff	 and	 eax, -65536		; ffff0000H
  007b5	0b c1		 or	 eax, ecx
  007b7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  007ba	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 688  : 		
; 689  : 			raw->campaign_requires_apache_havoc = unpack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC);

  007c0	6a 16		 push	 22			; 00000016H
  007c2	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  007c5	50		 push	 eax
  007c6	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  007cb	89 45 b0	 mov	 DWORD PTR tv488[ebp], eax
  007ce	8b 4d b0	 mov	 ecx, DWORD PTR tv488[ebp]
  007d1	83 e1 01	 and	 ecx, 1
  007d4	c1 e1 10	 shl	 ecx, 16			; 00000010H
  007d7	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  007da	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  007e0	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  007e5	0b c1		 or	 eax, ecx
  007e7	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  007ea	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 690  : 
; 691  : 			raw->auto_assign_gunship = unpack_int_value (en, INT_TYPE_AUTO_ASSIGN_GUNSHIP);

  007f0	6a 0b		 push	 11			; 0000000bH
  007f2	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  007f5	50		 push	 eax
  007f6	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  007fb	89 45 b0	 mov	 DWORD PTR tv498[ebp], eax
  007fe	8b 4d b0	 mov	 ecx, DWORD PTR tv498[ebp]
  00801	83 e1 01	 and	 ecx, 1
  00804	c1 e1 11	 shl	 ecx, 17			; 00000011H
  00807	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0080a	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00810	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  00815	0b c1		 or	 eax, ecx
  00817	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0081a	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 692  : 
; 693  :          raw->infinite_fuel = unpack_int_value (en, INT_TYPE_INFINITE_FUEL);

  00820	6a 65		 push	 101			; 00000065H
  00822	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00825	50		 push	 eax
  00826	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0082b	89 45 b0	 mov	 DWORD PTR tv508[ebp], eax
  0082e	8b 4d b0	 mov	 ecx, DWORD PTR tv508[ebp]
  00831	83 e1 01	 and	 ecx, 1
  00834	c1 e1 14	 shl	 ecx, 20			; 00000014H
  00837	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0083a	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00840	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00845	0b c1		 or	 eax, ecx
  00847	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0084a	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 694  : 
; 695  :          raw->infinite_weapons = unpack_int_value (en, INT_TYPE_INFINITE_WEAPONS);

  00850	6a 67		 push	 103			; 00000067H
  00852	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00855	50		 push	 eax
  00856	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0085b	89 45 b0	 mov	 DWORD PTR tv518[ebp], eax
  0085e	8b 4d b0	 mov	 ecx, DWORD PTR tv518[ebp]
  00861	83 e1 01	 and	 ecx, 1
  00864	c1 e1 15	 shl	 ecx, 21			; 00000015H
  00867	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0086a	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00870	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  00875	0b c1		 or	 eax, ecx
  00877	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0087a	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 696  : 
; 697  :          raw->suppress_ai_fire = unpack_int_value (en, INT_TYPE_SUPPRESS_AI_FIRE);

  00880	68 d0 00 00 00	 push	 208			; 000000d0H
  00885	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00888	50		 push	 eax
  00889	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0088e	89 45 b0	 mov	 DWORD PTR tv528[ebp], eax
  00891	8b 4d b0	 mov	 ecx, DWORD PTR tv528[ebp]
  00894	83 e1 01	 and	 ecx, 1
  00897	c1 e1 16	 shl	 ecx, 22			; 00000016H
  0089a	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0089d	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  008a3	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  008a8	0b c1		 or	 eax, ecx
  008aa	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  008ad	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 698  : 		
; 699  : 			raw->invulnerable_from_collisions = unpack_int_value (en, INT_TYPE_INVULNERABLE_FROM_COLLISIONS);

  008b3	6a 6b		 push	 107			; 0000006bH
  008b5	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  008b8	50		 push	 eax
  008b9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  008be	89 45 b0	 mov	 DWORD PTR tv538[ebp], eax
  008c1	8b 4d b0	 mov	 ecx, DWORD PTR tv538[ebp]
  008c4	83 e1 01	 and	 ecx, 1
  008c7	c1 e1 17	 shl	 ecx, 23			; 00000017H
  008ca	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  008cd	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  008d3	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  008d8	0b c1		 or	 eax, ecx
  008da	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  008dd	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 700  : 
; 701  : 			raw->invulnerable_from_weapons = unpack_int_value (en, INT_TYPE_INVULNERABLE_FROM_WEAPONS);

  008e3	6a 6c		 push	 108			; 0000006cH
  008e5	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  008e8	50		 push	 eax
  008e9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  008ee	89 45 b0	 mov	 DWORD PTR tv548[ebp], eax
  008f1	8b 4d b0	 mov	 ecx, DWORD PTR tv548[ebp]
  008f4	83 e1 01	 and	 ecx, 1
  008f7	c1 e1 18	 shl	 ecx, 24			; 00000018H
  008fa	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  008fd	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00903	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  00908	0b c1		 or	 eax, ecx
  0090a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0090d	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 702  : 
; 703  : 			raw->cheats_enabled = unpack_int_value (en, INT_TYPE_CHEATS_ENABLED);

  00913	6a 17		 push	 23			; 00000017H
  00915	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00918	50		 push	 eax
  00919	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0091e	89 45 b0	 mov	 DWORD PTR tv558[ebp], eax
  00921	8b 4d b0	 mov	 ecx, DWORD PTR tv558[ebp]
  00924	83 e1 01	 and	 ecx, 1
  00927	c1 e1 19	 shl	 ecx, 25			; 00000019H
  0092a	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0092d	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00933	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  00938	0b c1		 or	 eax, ecx
  0093a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0093d	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 704  : 		
; 705  :          raw->skip_night_time = unpack_int_value (en, INT_TYPE_SKIP_NIGHT_TIME);

  00943	68 bc 00 00 00	 push	 188			; 000000bcH
  00948	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0094b	50		 push	 eax
  0094c	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00951	89 45 b0	 mov	 DWORD PTR tv568[ebp], eax
  00954	8b 4d b0	 mov	 ecx, DWORD PTR tv568[ebp]
  00957	83 e1 01	 and	 ecx, 1
  0095a	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  0095d	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00960	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00966	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  0096b	0b c1		 or	 eax, ecx
  0096d	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00970	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 706  : 
; 707  :          raw->weather_increasing = unpack_int_value (en, INT_TYPE_WEATHER_INCREASING);

  00976	68 12 01 00 00	 push	 274			; 00000112H
  0097b	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0097e	50		 push	 eax
  0097f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00984	89 45 b0	 mov	 DWORD PTR tv578[ebp], eax
  00987	8b 4d b0	 mov	 ecx, DWORD PTR tv578[ebp]
  0098a	83 e1 01	 and	 ecx, 1
  0098d	c1 e1 1b	 shl	 ecx, 27			; 0000001bH
  00990	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00993	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00999	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  0099e	0b c1		 or	 eax, ecx
  009a0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  009a3	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 708  : 
; 709  :          raw->wind_increasing = unpack_int_value (en, INT_TYPE_WIND_INCREASING);

  009a9	68 14 01 00 00	 push	 276			; 00000114H
  009ae	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  009b1	50		 push	 eax
  009b2	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  009b7	89 45 b0	 mov	 DWORD PTR tv588[ebp], eax
  009ba	8b 4d b0	 mov	 ecx, DWORD PTR tv588[ebp]
  009bd	83 e1 01	 and	 ecx, 1
  009c0	c1 e1 1c	 shl	 ecx, 28			; 0000001cH
  009c3	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  009c6	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  009cc	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  009d1	0b c1		 or	 eax, ecx
  009d3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  009d6	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 710  : 
; 711  :          raw->local_weather_model = unpack_int_value (en, INT_TYPE_LOCAL_WEATHER_MODEL);

  009dc	6a 7d		 push	 125			; 0000007dH
  009de	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  009e1	50		 push	 eax
  009e2	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  009e7	89 45 b0	 mov	 DWORD PTR tv598[ebp], eax
  009ea	8b 4d b0	 mov	 ecx, DWORD PTR tv598[ebp]
  009ed	83 e1 01	 and	 ecx, 1
  009f0	c1 e1 1d	 shl	 ecx, 29			; 0000001dH
  009f3	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  009f6	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  009fc	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  00a01	0b c1		 or	 eax, ecx
  00a03	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00a06	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 712  : 
; 713  : 			//
; 714  : 			// link into system
; 715  : 			//
; 716  : 
; 717  : 			//
; 718  : 			// need to insert session into update list after camera entity
; 719  : 			//
; 720  : 
; 721  : 			ASSERT (get_camera_entity ());

  00a0c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00a13	75 1a		 jne	 SHORT $LN10@unpack_loc
  00a15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00a1a	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  00a1f	50		 push	 eax
  00a20	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a25	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODENDPAE@get_camera_entity?5?$CI?$CJ@
  00a2a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@unpack_loc:

; 722  : 
; 723  :          insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), get_camera_entity ());

  00a2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00a34	50		 push	 eax
  00a35	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00a3b	51		 push	 ecx
  00a3c	6a 29		 push	 41			; 00000029H
  00a3e	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00a41	52		 push	 edx
  00a42	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 724  : 
; 725  : 			set_session_entity (en);

  00a47	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00a4a	50		 push	 eax
  00a4b	e8 00 00 00 00	 call	 ?set_session_entity@@YGXPAUENTITY@@@Z ; set_session_entity

; 726  : 
; 727  : 			set_display_campaign_timer_valid (FALSE);

  00a50	6a 00		 push	 0
  00a52	e8 00 00 00 00	 call	 ?set_display_campaign_timer_valid@@YGXH@Z ; set_display_campaign_timer_valid

; 728  : 
; 729  : 			break;

  00a57	e9 61 01 00 00	 jmp	 $LN2@unpack_loc
$LN11@unpack_loc:

; 730  : 		}
; 731  : 
; 732  : 		////////////////////////////////////////
; 733  : 		case PACK_MODE_BROWSE_SESSION:
; 734  : 		////////////////////////////////////////
; 735  : 		{
; 736  : 			//
; 737  : 			// create entity
; 738  : 			//
; 739  : 
; 740  : 			ASSERT (!get_session_entity ());

  00a5c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00a63	74 1a		 je	 SHORT $LN12@unpack_loc
  00a65	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00a6a	05 f5 00 00 00	 add	 eax, 245		; 000000f5H
  00a6f	50		 push	 eax
  00a70	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a75	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GDGOJOI@?$CBget_session_entity?5?$CI?$CJ@
  00a7a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@unpack_loc:

; 741  : 
; 742  : 			index = unpack_entity_safe_index ();

  00a7f	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  00a84	89 45 f4	 mov	 DWORD PTR _index$[ebp], eax

; 743  : 
; 744  : 			en = get_free_entity (index);

  00a87	8b 45 f4	 mov	 eax, DWORD PTR _index$[ebp]
  00a8a	50		 push	 eax
  00a8b	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00a90	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 745  : 
; 746  : 			set_local_entity_type (en, ENTITY_TYPE_SESSION);

  00a93	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00a96	c7 00 1b 00 00
	00		 mov	 DWORD PTR [eax], 27	; 0000001bH

; 747  : 
; 748  : 			raw = (session *) malloc_fast_mem (sizeof (session));

  00a9c	68 a8 00 00 00	 push	 168			; 000000a8H
  00aa1	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00aa6	89 45 fc	 mov	 DWORD PTR _raw$[ebp], eax

; 749  : 
; 750  : 			set_local_entity_data (en, raw);

  00aa9	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00aac	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00aaf	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 751  : 
; 752  : 			memset (raw, 0, sizeof (session));

  00ab2	68 a8 00 00 00	 push	 168			; 000000a8H
  00ab7	6a 00		 push	 0
  00ab9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00abc	50		 push	 eax
  00abd	e8 00 00 00 00	 call	 _memset
  00ac2	83 c4 0c	 add	 esp, 12			; 0000000cH

; 753  : 
; 754  : 			//
; 755  : 			// unpack data (in exactly the same order as the data was packed)
; 756  : 			//
; 757  : 
; 758  :          raw->version_number = unpack_int_value (en, INT_TYPE_VERSION_NUMBER);

  00ac5	68 f5 00 00 00	 push	 245			; 000000f5H
  00aca	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00acd	50		 push	 eax
  00ace	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00ad3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00ad6	89 01		 mov	 DWORD PTR [ecx], eax

; 759  : 
; 760  : 			unpack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  00ad8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00adb	83 c0 04	 add	 eax, 4
  00ade	50		 push	 eax
  00adf	6a 0e		 push	 14			; 0000000eH
  00ae1	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00ae4	51		 push	 ecx
  00ae5	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 761  : 
; 762  : 			// update_link
; 763  : 
; 764  : 			// tour of duty time
; 765  : 
; 766  : 			raw->elapsed_time = unpack_float_value (en, FLOAT_TYPE_ELAPSED_TIME);

  00aea	6a 23		 push	 35			; 00000023H
  00aec	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00aef	50		 push	 eax
  00af0	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00af5	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00af8	d9 59 1c	 fstp	 DWORD PTR [ecx+28]

; 767  : 
; 768  : 			raw->start_time = unpack_float_value (en, FLOAT_TYPE_START_TIME);

  00afb	6a 7d		 push	 125			; 0000007dH
  00afd	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b00	50		 push	 eax
  00b01	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00b06	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b09	d9 59 18	 fstp	 DWORD PTR [ecx+24]

; 769  : 
; 770  : 			// time_of_day_resync
; 771  : 
; 772  : 			// time_of_day_acceleration
; 773  : 
; 774  : 			// weather radius
; 775  : 
; 776  : 			// weather_mode_transitional_period
; 777  : 
; 778  : 			// weather_mode_transitional_status
; 779  : 
; 780  : 			raw->weather_mode = (weathermodes) unpack_int_value (en, INT_TYPE_WEATHER_MODE);

  00b0c	68 13 01 00 00	 push	 275			; 00000113H
  00b11	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b14	50		 push	 eax
  00b15	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00b1a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b1d	89 41 3c	 mov	 DWORD PTR [ecx+60], eax

; 781  : 
; 782  : 			// target_weather_mode
; 783  : 
; 784  : 			// weather position
; 785  : 
; 786  : 			// weather velocity
; 787  : 
; 788  : 			raw->day_segment_type = (day_segment_types) unpack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE);

  00b20	6a 27		 push	 39			; 00000027H
  00b22	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b25	50		 push	 eax
  00b26	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00b2b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b2e	89 81 90 00 00
	00		 mov	 DWORD PTR [ecx+144], eax

; 789  : 
; 790  : 			raw->population_x_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN);

  00b34	6a 57		 push	 87			; 00000057H
  00b36	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b39	50		 push	 eax
  00b3a	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00b3f	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b42	d9 99 94 00 00
	00		 fstp	 DWORD PTR [ecx+148]

; 791  : 			raw->population_x_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX);

  00b48	6a 58		 push	 88			; 00000058H
  00b4a	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b4d	50		 push	 eax
  00b4e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00b53	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b56	d9 99 98 00 00
	00		 fstp	 DWORD PTR [ecx+152]

; 792  : 			raw->population_z_min = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN);

  00b5c	6a 59		 push	 89			; 00000059H
  00b5e	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b61	50		 push	 eax
  00b62	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00b67	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b6a	d9 99 9c 00 00
	00		 fstp	 DWORD PTR [ecx+156]

; 793  : 			raw->population_z_max = unpack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX);

  00b70	6a 5a		 push	 90			; 0000005aH
  00b72	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b75	50		 push	 eax
  00b76	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00b7b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00b7e	d9 99 a0 00 00
	00		 fstp	 DWORD PTR [ecx+160]

; 794  : 		
; 795  : 			raw->campaign_requires_apache_havoc = unpack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC);

  00b84	6a 16		 push	 22			; 00000016H
  00b86	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00b89	50		 push	 eax
  00b8a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00b8f	89 45 b0	 mov	 DWORD PTR tv674[ebp], eax
  00b92	8b 4d b0	 mov	 ecx, DWORD PTR tv674[ebp]
  00b95	83 e1 01	 and	 ecx, 1
  00b98	c1 e1 10	 shl	 ecx, 16			; 00000010H
  00b9b	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00b9e	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00ba4	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  00ba9	0b c1		 or	 eax, ecx
  00bab	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00bae	89 81 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], eax

; 796  : 
; 797  : 			// infinite_weapons
; 798  : 
; 799  : 			// skip_night_time
; 800  : 
; 801  : 			// weather increasing
; 802  : 
; 803  : 			set_session_entity (en);

  00bb4	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00bb7	50		 push	 eax
  00bb8	e8 00 00 00 00	 call	 ?set_session_entity@@YGXPAUENTITY@@@Z ; set_session_entity
$LN2@unpack_loc:

; 804  : 
; 805  : 			break;
; 806  : 		}
; 807  : 	}
; 808  : }

  00bbd	5f		 pop	 edi
  00bbe	5e		 pop	 esi
  00bbf	5b		 pop	 ebx
  00bc0	8b e5		 mov	 esp, ebp
  00bc2	5d		 pop	 ebp
  00bc3	c2 04 00	 ret	 4
?unpack_local_session_data@@YGXW4PACK_MODES@@@Z ENDP	; unpack_local_session_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\ss_pack.c
;	COMDAT ?pack_local_session_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv76 = -76						; size = 4
_en$ = -8						; size = 4
_raw$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_session_data@@YGXW4PACK_MODES@@@Z PROC	; pack_local_session_data, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 232  : 	session
; 233  : 		*raw;
; 234  : 
; 235  : 	entity
; 236  : 		*en;
; 237  : 
; 238  :    ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 08 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  0001a	83 c0 07	 add	 eax, 7
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 239  : 
; 240  : 	en = get_session_entity ();

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00032	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 241  : 
; 242  : 	ASSERT (en);

  00035	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00039	75 18		 jne	 SHORT $LN6@pack_local
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00040	83 c0 0b	 add	 eax, 11			; 0000000bH
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@pack_local:

; 243  : 
; 244  : 	raw = (session *) get_local_entity_data (en);

  00053	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00056	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00059	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 245  : 
; 246  :    switch (mode)

  0005c	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  0005f	89 45 b4	 mov	 DWORD PTR tv76[ebp], eax
  00062	83 7d b4 00	 cmp	 DWORD PTR tv76[ebp], 0
  00066	74 19		 je	 SHORT $LN7@pack_local
  00068	83 7d b4 01	 cmp	 DWORD PTR tv76[ebp], 1
  0006c	0f 84 1d 04 00
	00		 je	 $LN9@pack_local
  00072	83 7d b4 02	 cmp	 DWORD PTR tv76[ebp], 2
  00076	0f 84 31 08 00
	00		 je	 $LN10@pack_local
  0007c	e9 42 09 00 00	 jmp	 $LN2@pack_local
$LN7@pack_local:

; 247  :    {
; 248  :       ////////////////////////////////////////
; 249  :       case PACK_MODE_SERVER_SESSION:
; 250  :       ////////////////////////////////////////
; 251  : 		{
; 252  : 			ASSERT (!raw->session_complete);

  00081	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00084	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0008a	c1 e9 12	 shr	 ecx, 18			; 00000012H
  0008d	83 e1 03	 and	 ecx, 3
  00090	74 18		 je	 SHORT $LN8@pack_local
  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_session_data@@YGXW4PACK_MODES@@@Z@4JA
  00097	83 c0 15	 add	 eax, 21			; 00000015H
  0009a	50		 push	 eax
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@CMOFHINL@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ICIHEEDM@?$CBraw?9?$DOsession_complete@
  000a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@pack_local:

; 253  : 		
; 254  : 			pack_int_value (en, INT_TYPE_VERSION_NUMBER, raw->version_number);

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	51		 push	 ecx
  000b0	68 f5 00 00 00	 push	 245			; 000000f5H
  000b5	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  000b8	52		 push	 edx
  000b9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 255  : 		
; 256  : 			pack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c1	83 c0 04	 add	 eax, 4
  000c4	50		 push	 eax
  000c5	6a 0e		 push	 14			; 0000000eH
  000c7	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 257  : 		
; 258  : 			// special_effect_root
; 259  : 		
; 260  : 			// update_link
; 261  : 		
; 262  : 			pack_float_value (en, FLOAT_TYPE_ELAPSED_TIME, raw->elapsed_time);

  000d0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000d3	51		 push	 ecx
  000d4	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  000d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000de	6a 23		 push	 35			; 00000023H
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 263  : 		
; 264  : 			pack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER, raw->lightning_timer);

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ec	51		 push	 ecx
  000ed	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  000f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f7	6a 3e		 push	 62			; 0000003eH
  000f9	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 265  : 		
; 266  : 			pack_float_value (en, FLOAT_TYPE_START_TIME, raw->start_time);

  00102	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00105	51		 push	 ecx
  00106	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	6a 7d		 push	 125			; 0000007dH
  00112	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00115	51		 push	 ecx
  00116	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 267  : 		
; 268  : 			// time_of_day_resync
; 269  : 		
; 270  : 			pack_float_value (en, FLOAT_TYPE_TIME_OF_DAY_ACCELERATION, raw->time_of_day_acceleration);

  0011b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0011e	51		 push	 ecx
  0011f	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00124	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00129	68 8f 00 00 00	 push	 143			; 0000008fH
  0012e	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00131	51		 push	 ecx
  00132	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 271  : 		
; 272  : 			pack_float_value (en, FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE, raw->fog_of_war_maximum_value);

  00137	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0013a	51		 push	 ecx
  0013b	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00140	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00145	6a 2c		 push	 44			; 0000002cH
  00147	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0014a	51		 push	 ecx
  0014b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 273  : 		
; 274  : 			//
; 275  : 			// rain effect
; 276  : 			//
; 277  : 		
; 278  : 			pack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS, raw->weather_radius);

  00150	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00153	51		 push	 ecx
  00154	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00159	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015e	68 9d 00 00 00	 push	 157			; 0000009dH
  00163	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00166	51		 push	 ecx
  00167	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 279  : 			pack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_PERIOD, raw->weather_mode_transitional_period);

  0016c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0016f	51		 push	 ecx
  00170	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00175	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017a	68 9b 00 00 00	 push	 155			; 0000009bH
  0017f	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00182	51		 push	 ecx
  00183	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 280  : 			pack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_STATUS, raw->weather_mode_transitional_status);

  00188	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0018b	51		 push	 ecx
  0018c	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00191	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00196	68 9c 00 00 00	 push	 156			; 0000009cH
  0019b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0019e	51		 push	 ecx
  0019f	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 281  : 		
; 282  : 			pack_int_value (en, INT_TYPE_WEATHER_MODE, raw->weather_mode);

  001a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a7	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  001aa	51		 push	 ecx
  001ab	68 13 01 00 00	 push	 275			; 00000113H
  001b0	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  001b3	52		 push	 edx
  001b4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 283  : 			pack_int_value (en, INT_TYPE_TARGET_WEATHER_MODE, raw->target_weather_mode);

  001b9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001bc	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001bf	51		 push	 ecx
  001c0	68 d7 00 00 00	 push	 215			; 000000d7H
  001c5	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  001c8	52		 push	 edx
  001c9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 284  : 		
; 285  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &raw->weather_position);

  001ce	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001d1	83 c0 44	 add	 eax, 68			; 00000044H
  001d4	50		 push	 eax
  001d5	6a 0f		 push	 15			; 0000000fH
  001d7	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  001da	51		 push	 ecx
  001db	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 286  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &raw->weather_velocity);

  001e0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001e3	83 c0 50	 add	 eax, 80			; 00000050H
  001e6	50		 push	 eax
  001e7	6a 10		 push	 16			; 00000010H
  001e9	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  001ec	51		 push	 ecx
  001ed	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 287  : 		
; 288  : 			//
; 289  : 			// wind effect
; 290  : 			//
; 291  : 		
; 292  : 			pack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS, raw->wind_effect_radius);

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001f5	51		 push	 ecx
  001f6	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  001fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00200	68 a0 00 00 00	 push	 160			; 000000a0H
  00205	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00208	51		 push	 ecx
  00209	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 293  : 			pack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE, raw->wind_gusting_value);

  0020e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00211	51		 push	 ecx
  00212	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  00217	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021c	68 a1 00 00 00	 push	 161			; 000000a1H
  00221	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00224	51		 push	 ecx
  00225	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 294  : 			pack_float_value (en, FLOAT_TYPE_WIND_MINIMUM_SPEED, raw->wind_minimum_speed);

  0022a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0022d	51		 push	 ecx
  0022e	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  00233	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00238	68 a3 00 00 00	 push	 163			; 000000a3H
  0023d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00240	51		 push	 ecx
  00241	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 295  : 			pack_float_value (en, FLOAT_TYPE_WIND_MAXIMUM_SPEED, raw->wind_maximum_speed);

  00246	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00249	51		 push	 ecx
  0024a	f3 0f 10 40 68	 movss	 xmm0, DWORD PTR [eax+104]
  0024f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00254	68 a2 00 00 00	 push	 162			; 000000a2H
  00259	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0025c	51		 push	 ecx
  0025d	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 296  : 		
; 297  : 			pack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &raw->wind_direction_vector);

  00262	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00265	83 c0 6c	 add	 eax, 108		; 0000006cH
  00268	50		 push	 eax
  00269	6a 11		 push	 17			; 00000011H
  0026b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0026e	51		 push	 ecx
  0026f	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 298  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &raw->wind_effect_position);

  00274	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00277	83 c0 78	 add	 eax, 120		; 00000078H
  0027a	50		 push	 eax
  0027b	6a 12		 push	 18			; 00000012H
  0027d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00280	51		 push	 ecx
  00281	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 299  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &raw->wind_effect_velocity);

  00286	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00289	05 84 00 00 00	 add	 eax, 132		; 00000084H
  0028e	50		 push	 eax
  0028f	6a 13		 push	 19			; 00000013H
  00291	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00294	51		 push	 ecx
  00295	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 300  : 		
; 301  : 			//
; 302  : 		
; 303  : 			pack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE, raw->day_segment_type);

  0029a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0029d	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  002a3	51		 push	 ecx
  002a4	6a 27		 push	 39			; 00000027H
  002a6	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  002a9	52		 push	 edx
  002aa	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 304  : 
; 305  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN, raw->population_x_min);

  002af	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002b2	51		 push	 ecx
  002b3	f3 0f 10 80 94
	00 00 00	 movss	 xmm0, DWORD PTR [eax+148]
  002bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c0	6a 57		 push	 87			; 00000057H
  002c2	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  002c5	51		 push	 ecx
  002c6	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 306  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX, raw->population_x_max);

  002cb	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002ce	51		 push	 ecx
  002cf	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  002d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002dc	6a 58		 push	 88			; 00000058H
  002de	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  002e1	51		 push	 ecx
  002e2	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 307  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN, raw->population_z_min);

  002e7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002ea	51		 push	 ecx
  002eb	f3 0f 10 80 9c
	00 00 00	 movss	 xmm0, DWORD PTR [eax+156]
  002f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f8	6a 59		 push	 89			; 00000059H
  002fa	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  002fd	51		 push	 ecx
  002fe	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 308  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX, raw->population_z_max);

  00303	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00306	51		 push	 ecx
  00307	f3 0f 10 80 a0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+160]
  0030f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00314	6a 5a		 push	 90			; 0000005aH
  00316	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00319	51		 push	 ecx
  0031a	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 309  : 		
; 310  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_MEDAL, raw->campaign_medal);

  0031f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00322	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00328	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0032e	51		 push	 ecx
  0032f	6a 15		 push	 21			; 00000015H
  00331	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00334	52		 push	 edx
  00335	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 311  : 
; 312  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC, raw->campaign_requires_apache_havoc);

  0033a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0033d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00343	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00346	83 e1 01	 and	 ecx, 1
  00349	51		 push	 ecx
  0034a	6a 16		 push	 22			; 00000016H
  0034c	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0034f	52		 push	 edx
  00350	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 313  : 		
; 314  : 			pack_int_value (en, INT_TYPE_AUTO_ASSIGN_GUNSHIP, raw->auto_assign_gunship);

  00355	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00358	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0035e	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00361	83 e1 01	 and	 ecx, 1
  00364	51		 push	 ecx
  00365	6a 0b		 push	 11			; 0000000bH
  00367	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0036a	52		 push	 edx
  0036b	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 315  : 		
; 316  : 			pack_int_value (en, INT_TYPE_INFINITE_FUEL, raw->infinite_fuel);

  00370	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00373	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00379	c1 e9 14	 shr	 ecx, 20			; 00000014H
  0037c	83 e1 01	 and	 ecx, 1
  0037f	51		 push	 ecx
  00380	6a 65		 push	 101			; 00000065H
  00382	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00385	52		 push	 edx
  00386	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 317  : 		
; 318  : 			pack_int_value (en, INT_TYPE_INFINITE_WEAPONS, raw->infinite_weapons);

  0038b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0038e	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00394	c1 e9 15	 shr	 ecx, 21			; 00000015H
  00397	83 e1 01	 and	 ecx, 1
  0039a	51		 push	 ecx
  0039b	6a 67		 push	 103			; 00000067H
  0039d	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  003a0	52		 push	 edx
  003a1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 319  : 		
; 320  : 			pack_int_value (en, INT_TYPE_SUPPRESS_AI_FIRE, raw->suppress_ai_fire);

  003a6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003a9	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  003af	c1 e9 16	 shr	 ecx, 22			; 00000016H
  003b2	83 e1 01	 and	 ecx, 1
  003b5	51		 push	 ecx
  003b6	68 d0 00 00 00	 push	 208			; 000000d0H
  003bb	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  003be	52		 push	 edx
  003bf	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 321  : 		
; 322  : 			pack_int_value (en, INT_TYPE_INVULNERABLE_FROM_COLLISIONS, raw->invulnerable_from_collisions);

  003c4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003c7	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  003cd	c1 e9 17	 shr	 ecx, 23			; 00000017H
  003d0	83 e1 01	 and	 ecx, 1
  003d3	51		 push	 ecx
  003d4	6a 6b		 push	 107			; 0000006bH
  003d6	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  003d9	52		 push	 edx
  003da	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 323  : 
; 324  : 			pack_int_value (en, INT_TYPE_INVULNERABLE_FROM_WEAPONS, raw->invulnerable_from_weapons);

  003df	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003e2	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  003e8	c1 e9 18	 shr	 ecx, 24			; 00000018H
  003eb	83 e1 01	 and	 ecx, 1
  003ee	51		 push	 ecx
  003ef	6a 6c		 push	 108			; 0000006cH
  003f1	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  003f4	52		 push	 edx
  003f5	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 325  : 		
; 326  : 			pack_int_value (en, INT_TYPE_CHEATS_ENABLED, raw->cheats_enabled);

  003fa	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003fd	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00403	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00406	83 e1 01	 and	 ecx, 1
  00409	51		 push	 ecx
  0040a	6a 17		 push	 23			; 00000017H
  0040c	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0040f	52		 push	 edx
  00410	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 327  : 		
; 328  : 			pack_int_value (en, INT_TYPE_SKIP_NIGHT_TIME, raw->skip_night_time);

  00415	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00418	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0041e	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  00421	83 e1 01	 and	 ecx, 1
  00424	51		 push	 ecx
  00425	68 bc 00 00 00	 push	 188			; 000000bcH
  0042a	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0042d	52		 push	 edx
  0042e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 329  : 		
; 330  : 			pack_int_value (en, INT_TYPE_WEATHER_INCREASING, raw->weather_increasing);

  00433	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00436	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0043c	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  0043f	83 e1 01	 and	 ecx, 1
  00442	51		 push	 ecx
  00443	68 12 01 00 00	 push	 274			; 00000112H
  00448	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0044b	52		 push	 edx
  0044c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 331  : 		
; 332  : 			pack_int_value (en, INT_TYPE_WIND_INCREASING, raw->wind_increasing);

  00451	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00454	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0045a	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  0045d	83 e1 01	 and	 ecx, 1
  00460	51		 push	 ecx
  00461	68 14 01 00 00	 push	 276			; 00000114H
  00466	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00469	52		 push	 edx
  0046a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 333  : 		
; 334  : 			pack_int_value (en, INT_TYPE_LOCAL_WEATHER_MODEL, raw->local_weather_model);

  0046f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00472	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00478	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  0047b	83 e1 01	 and	 ecx, 1
  0047e	51		 push	 ecx
  0047f	6a 7d		 push	 125			; 0000007dH
  00481	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00484	52		 push	 edx
  00485	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 335  : 
; 336  : 			break;

  0048a	e9 34 05 00 00	 jmp	 $LN2@pack_local
$LN9@pack_local:

; 337  : 		}
; 338  : 
; 339  :       ////////////////////////////////////////
; 340  :       case PACK_MODE_CLIENT_SESSION:
; 341  :       ////////////////////////////////////////
; 342  :       {
; 343  :          pack_entity_safe_ptr (en);

  0048f	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 344  : 
; 345  :          pack_int_value (en, INT_TYPE_VERSION_NUMBER, raw->version_number);

  00498	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0049b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049d	51		 push	 ecx
  0049e	68 f5 00 00 00	 push	 245			; 000000f5H
  004a3	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  004a6	52		 push	 edx
  004a7	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 346  : 
; 347  : 			pack_int_value (en, INT_TYPE_SESSION_COMPLETE, raw->session_complete);

  004ac	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004af	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  004b5	c1 e9 12	 shr	 ecx, 18			; 00000012H
  004b8	83 e1 03	 and	 ecx, 3
  004bb	51		 push	 ecx
  004bc	68 ba 00 00 00	 push	 186			; 000000baH
  004c1	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  004c4	52		 push	 edx
  004c5	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 348  : 		
; 349  :          pack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  004ca	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004cd	83 c0 04	 add	 eax, 4
  004d0	50		 push	 eax
  004d1	6a 0e		 push	 14			; 0000000eH
  004d3	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  004d6	51		 push	 ecx
  004d7	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 350  : 
; 351  : 			pack_list_root (en, LIST_TYPE_SPECIAL_EFFECT, &raw->special_effect_root);

  004dc	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004df	83 c0 08	 add	 eax, 8
  004e2	50		 push	 eax
  004e3	6a 24		 push	 36			; 00000024H
  004e5	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  004e8	51		 push	 ecx
  004e9	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 352  : 
; 353  : 			// update_link
; 354  : 
; 355  :          pack_float_value (en, FLOAT_TYPE_ELAPSED_TIME, raw->elapsed_time);

  004ee	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004f1	51		 push	 ecx
  004f2	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  004f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fc	6a 23		 push	 35			; 00000023H
  004fe	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00501	51		 push	 ecx
  00502	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 356  : 
; 357  :          pack_float_value (en, FLOAT_TYPE_LIGHTNING_TIMER, raw->lightning_timer);

  00507	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0050a	51		 push	 ecx
  0050b	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00510	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00515	6a 3e		 push	 62			; 0000003eH
  00517	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0051a	51		 push	 ecx
  0051b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 358  : 
; 359  :          pack_float_value (en, FLOAT_TYPE_START_TIME, raw->start_time);

  00520	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00523	51		 push	 ecx
  00524	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  00529	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052e	6a 7d		 push	 125			; 0000007dH
  00530	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00533	51		 push	 ecx
  00534	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 360  : 
; 361  : 			// time_of_day_resync
; 362  : 
; 363  :          pack_float_value (en, FLOAT_TYPE_TIME_OF_DAY_ACCELERATION, raw->time_of_day_acceleration);

  00539	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0053c	51		 push	 ecx
  0053d	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  00542	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00547	68 8f 00 00 00	 push	 143			; 0000008fH
  0054c	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0054f	51		 push	 ecx
  00550	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 364  : 
; 365  : 			pack_float_value (en, FLOAT_TYPE_FOG_OF_WAR_MAXIMUM_VALUE, raw->fog_of_war_maximum_value);

  00555	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00558	51		 push	 ecx
  00559	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0055e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00563	6a 2c		 push	 44			; 0000002cH
  00565	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00568	51		 push	 ecx
  00569	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 366  : 		
; 367  : 			//
; 368  : 			// rain effect
; 369  : 			//
; 370  : 
; 371  :          pack_float_value (en, FLOAT_TYPE_WEATHER_RADIUS, raw->weather_radius);

  0056e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00571	51		 push	 ecx
  00572	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00577	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0057c	68 9d 00 00 00	 push	 157			; 0000009dH
  00581	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00584	51		 push	 ecx
  00585	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 372  :          pack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_PERIOD, raw->weather_mode_transitional_period);

  0058a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0058d	51		 push	 ecx
  0058e	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00593	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00598	68 9b 00 00 00	 push	 155			; 0000009bH
  0059d	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  005a0	51		 push	 ecx
  005a1	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 373  :          pack_float_value (en, FLOAT_TYPE_WEATHER_MODE_TRANSITIONAL_STATUS, raw->weather_mode_transitional_status);

  005a6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005a9	51		 push	 ecx
  005aa	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  005af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b4	68 9c 00 00 00	 push	 156			; 0000009cH
  005b9	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  005bc	51		 push	 ecx
  005bd	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 374  : 
; 375  :          pack_int_value (en, INT_TYPE_WEATHER_MODE, raw->weather_mode);

  005c2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005c5	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  005c8	51		 push	 ecx
  005c9	68 13 01 00 00	 push	 275			; 00000113H
  005ce	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  005d1	52		 push	 edx
  005d2	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 376  :          pack_int_value (en, INT_TYPE_TARGET_WEATHER_MODE, raw->target_weather_mode);

  005d7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005da	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  005dd	51		 push	 ecx
  005de	68 d7 00 00 00	 push	 215			; 000000d7H
  005e3	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  005e6	52		 push	 edx
  005e7	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 377  : 
; 378  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_POSITION, &raw->weather_position);

  005ec	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005ef	83 c0 44	 add	 eax, 68			; 00000044H
  005f2	50		 push	 eax
  005f3	6a 0f		 push	 15			; 0000000fH
  005f5	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  005f8	51		 push	 ecx
  005f9	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 379  : 			pack_vec3d (en, VEC3D_TYPE_WEATHER_VELOCITY, &raw->weather_velocity);

  005fe	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00601	83 c0 50	 add	 eax, 80			; 00000050H
  00604	50		 push	 eax
  00605	6a 10		 push	 16			; 00000010H
  00607	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0060a	51		 push	 ecx
  0060b	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 380  : 
; 381  : 			//
; 382  : 			// wind effect
; 383  : 			//
; 384  : 
; 385  :          pack_float_value (en, FLOAT_TYPE_WIND_EFFECT_RADIUS, raw->wind_effect_radius);

  00610	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00613	51		 push	 ecx
  00614	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  00619	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061e	68 a0 00 00 00	 push	 160			; 000000a0H
  00623	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00626	51		 push	 ecx
  00627	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 386  :          pack_float_value (en, FLOAT_TYPE_WIND_GUSTING_VALUE, raw->wind_gusting_value);

  0062c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0062f	51		 push	 ecx
  00630	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  00635	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0063a	68 a1 00 00 00	 push	 161			; 000000a1H
  0063f	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00642	51		 push	 ecx
  00643	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 387  :          pack_float_value (en, FLOAT_TYPE_WIND_MINIMUM_SPEED, raw->wind_minimum_speed);

  00648	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0064b	51		 push	 ecx
  0064c	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  00651	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00656	68 a3 00 00 00	 push	 163			; 000000a3H
  0065b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0065e	51		 push	 ecx
  0065f	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 388  :          pack_float_value (en, FLOAT_TYPE_WIND_MAXIMUM_SPEED, raw->wind_maximum_speed);

  00664	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00667	51		 push	 ecx
  00668	f3 0f 10 40 68	 movss	 xmm0, DWORD PTR [eax+104]
  0066d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00672	68 a2 00 00 00	 push	 162			; 000000a2H
  00677	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0067a	51		 push	 ecx
  0067b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 389  : 
; 390  : 			pack_vec3d (en, VEC3D_TYPE_WIND_DIRECTION_VECTOR, &raw->wind_direction_vector);

  00680	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00683	83 c0 6c	 add	 eax, 108		; 0000006cH
  00686	50		 push	 eax
  00687	6a 11		 push	 17			; 00000011H
  00689	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0068c	51		 push	 ecx
  0068d	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 391  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_POSITION, &raw->wind_effect_position);

  00692	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00695	83 c0 78	 add	 eax, 120		; 00000078H
  00698	50		 push	 eax
  00699	6a 12		 push	 18			; 00000012H
  0069b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0069e	51		 push	 ecx
  0069f	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 392  : 			pack_vec3d (en, VEC3D_TYPE_WIND_EFFECT_VELOCITY, &raw->wind_effect_velocity);

  006a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006a7	05 84 00 00 00	 add	 eax, 132		; 00000084H
  006ac	50		 push	 eax
  006ad	6a 13		 push	 19			; 00000013H
  006af	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  006b2	51		 push	 ecx
  006b3	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 393  : 
; 394  : 			//
; 395  : 
; 396  :          pack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE, raw->day_segment_type);

  006b8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006bb	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  006c1	51		 push	 ecx
  006c2	6a 27		 push	 39			; 00000027H
  006c4	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  006c7	52		 push	 edx
  006c8	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 397  : 
; 398  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN, raw->population_x_min);

  006cd	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006d0	51		 push	 ecx
  006d1	f3 0f 10 80 94
	00 00 00	 movss	 xmm0, DWORD PTR [eax+148]
  006d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006de	6a 57		 push	 87			; 00000057H
  006e0	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  006e3	51		 push	 ecx
  006e4	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 399  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX, raw->population_x_max);

  006e9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006ec	51		 push	 ecx
  006ed	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  006f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006fa	6a 58		 push	 88			; 00000058H
  006fc	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  006ff	51		 push	 ecx
  00700	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 400  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN, raw->population_z_min);

  00705	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00708	51		 push	 ecx
  00709	f3 0f 10 80 9c
	00 00 00	 movss	 xmm0, DWORD PTR [eax+156]
  00711	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00716	6a 59		 push	 89			; 00000059H
  00718	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0071b	51		 push	 ecx
  0071c	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 401  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX, raw->population_z_max);

  00721	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00724	51		 push	 ecx
  00725	f3 0f 10 80 a0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+160]
  0072d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00732	6a 5a		 push	 90			; 0000005aH
  00734	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00737	51		 push	 ecx
  00738	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 402  : 		
; 403  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_MEDAL, raw->campaign_medal);

  0073d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00740	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00746	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0074c	51		 push	 ecx
  0074d	6a 15		 push	 21			; 00000015H
  0074f	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00752	52		 push	 edx
  00753	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 404  : 		
; 405  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC, raw->campaign_requires_apache_havoc);

  00758	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0075b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00761	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00764	83 e1 01	 and	 ecx, 1
  00767	51		 push	 ecx
  00768	6a 16		 push	 22			; 00000016H
  0076a	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0076d	52		 push	 edx
  0076e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 406  : 
; 407  :          pack_int_value (en, INT_TYPE_AUTO_ASSIGN_GUNSHIP, raw->auto_assign_gunship);

  00773	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00776	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0077c	c1 e9 11	 shr	 ecx, 17			; 00000011H
  0077f	83 e1 01	 and	 ecx, 1
  00782	51		 push	 ecx
  00783	6a 0b		 push	 11			; 0000000bH
  00785	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00788	52		 push	 edx
  00789	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 408  : 
; 409  :          pack_int_value (en, INT_TYPE_INFINITE_FUEL, raw->infinite_fuel);

  0078e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00791	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00797	c1 e9 14	 shr	 ecx, 20			; 00000014H
  0079a	83 e1 01	 and	 ecx, 1
  0079d	51		 push	 ecx
  0079e	6a 65		 push	 101			; 00000065H
  007a0	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  007a3	52		 push	 edx
  007a4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 410  : 
; 411  :          pack_int_value (en, INT_TYPE_INFINITE_WEAPONS, raw->infinite_weapons);

  007a9	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007ac	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007b2	c1 e9 15	 shr	 ecx, 21			; 00000015H
  007b5	83 e1 01	 and	 ecx, 1
  007b8	51		 push	 ecx
  007b9	6a 67		 push	 103			; 00000067H
  007bb	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  007be	52		 push	 edx
  007bf	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 412  : 
; 413  :          pack_int_value (en, INT_TYPE_SUPPRESS_AI_FIRE, raw->suppress_ai_fire);

  007c4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007c7	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007cd	c1 e9 16	 shr	 ecx, 22			; 00000016H
  007d0	83 e1 01	 and	 ecx, 1
  007d3	51		 push	 ecx
  007d4	68 d0 00 00 00	 push	 208			; 000000d0H
  007d9	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  007dc	52		 push	 edx
  007dd	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 414  : 
; 415  :          pack_int_value (en, INT_TYPE_INVULNERABLE_FROM_COLLISIONS, raw->invulnerable_from_collisions);

  007e2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007e5	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007eb	c1 e9 17	 shr	 ecx, 23			; 00000017H
  007ee	83 e1 01	 and	 ecx, 1
  007f1	51		 push	 ecx
  007f2	6a 6b		 push	 107			; 0000006bH
  007f4	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  007f7	52		 push	 edx
  007f8	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 416  : 
; 417  :          pack_int_value (en, INT_TYPE_INVULNERABLE_FROM_WEAPONS, raw->invulnerable_from_weapons);

  007fd	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00800	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00806	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00809	83 e1 01	 and	 ecx, 1
  0080c	51		 push	 ecx
  0080d	6a 6c		 push	 108			; 0000006cH
  0080f	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00812	52		 push	 edx
  00813	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 418  : 
; 419  : 			pack_int_value (en, INT_TYPE_CHEATS_ENABLED, raw->cheats_enabled);

  00818	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0081b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00821	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00824	83 e1 01	 and	 ecx, 1
  00827	51		 push	 ecx
  00828	6a 17		 push	 23			; 00000017H
  0082a	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0082d	52		 push	 edx
  0082e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 420  : 		
; 421  :          pack_int_value (en, INT_TYPE_SKIP_NIGHT_TIME, raw->skip_night_time);

  00833	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00836	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0083c	c1 e9 1a	 shr	 ecx, 26			; 0000001aH
  0083f	83 e1 01	 and	 ecx, 1
  00842	51		 push	 ecx
  00843	68 bc 00 00 00	 push	 188			; 000000bcH
  00848	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0084b	52		 push	 edx
  0084c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 422  : 
; 423  :          pack_int_value (en, INT_TYPE_WEATHER_INCREASING, raw->weather_increasing);

  00851	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00854	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0085a	c1 e9 1b	 shr	 ecx, 27			; 0000001bH
  0085d	83 e1 01	 and	 ecx, 1
  00860	51		 push	 ecx
  00861	68 12 01 00 00	 push	 274			; 00000112H
  00866	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00869	52		 push	 edx
  0086a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 424  : 
; 425  :          pack_int_value (en, INT_TYPE_WIND_INCREASING, raw->wind_increasing);

  0086f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00872	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00878	c1 e9 1c	 shr	 ecx, 28			; 0000001cH
  0087b	83 e1 01	 and	 ecx, 1
  0087e	51		 push	 ecx
  0087f	68 14 01 00 00	 push	 276			; 00000114H
  00884	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00887	52		 push	 edx
  00888	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 426  : 
; 427  :          pack_int_value (en, INT_TYPE_LOCAL_WEATHER_MODEL, raw->local_weather_model);

  0088d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00890	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00896	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00899	83 e1 01	 and	 ecx, 1
  0089c	51		 push	 ecx
  0089d	6a 7d		 push	 125			; 0000007dH
  0089f	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  008a2	52		 push	 edx
  008a3	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 428  : 
; 429  :          break;

  008a8	e9 16 01 00 00	 jmp	 $LN2@pack_local
$LN10@pack_local:

; 430  :       }
; 431  : 
; 432  :       ////////////////////////////////////////
; 433  :       case PACK_MODE_BROWSE_SESSION:
; 434  :       ////////////////////////////////////////
; 435  :       {
; 436  :          pack_entity_safe_ptr (en);

  008ad	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  008b0	50		 push	 eax
  008b1	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 437  : 
; 438  : 			pack_int_value (en, INT_TYPE_VERSION_NUMBER, raw->version_number);

  008b6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  008bb	51		 push	 ecx
  008bc	68 f5 00 00 00	 push	 245			; 000000f5H
  008c1	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  008c4	52		 push	 edx
  008c5	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 439  : 
; 440  :          pack_list_root (en, LIST_TYPE_FORCE, &raw->force_root);

  008ca	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008cd	83 c0 04	 add	 eax, 4
  008d0	50		 push	 eax
  008d1	6a 0e		 push	 14			; 0000000eH
  008d3	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  008d6	51		 push	 ecx
  008d7	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 441  : 
; 442  : 			// update_link
; 443  : 
; 444  : 			// tour of duty time
; 445  : 
; 446  :          pack_float_value (en, FLOAT_TYPE_ELAPSED_TIME, raw->elapsed_time);

  008dc	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008df	51		 push	 ecx
  008e0	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  008e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ea	6a 23		 push	 35			; 00000023H
  008ec	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  008ef	51		 push	 ecx
  008f0	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 447  : 
; 448  : 			// lightning_timer
; 449  : 
; 450  :          pack_float_value (en, FLOAT_TYPE_START_TIME, raw->start_time);

  008f5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008f8	51		 push	 ecx
  008f9	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  008fe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00903	6a 7d		 push	 125			; 0000007dH
  00905	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00908	51		 push	 ecx
  00909	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 451  : 
; 452  : 			// time_of_day_resync
; 453  : 
; 454  : 			// time_of_day_acceleration
; 455  : 
; 456  : 			// weather radius
; 457  : 
; 458  : 			// weather_mode_transitional_period
; 459  : 
; 460  : 			// weather_mode_transitional_status
; 461  : 
; 462  :          pack_int_value (en, INT_TYPE_WEATHER_MODE, raw->weather_mode);

  0090e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00911	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00914	51		 push	 ecx
  00915	68 13 01 00 00	 push	 275			; 00000113H
  0091a	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  0091d	52		 push	 edx
  0091e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 463  : 
; 464  : 			// target_weather_mode
; 465  : 
; 466  : 			// weather position
; 467  : 
; 468  : 			// weather velocity
; 469  : 
; 470  :          pack_int_value (en, INT_TYPE_DAY_SEGMENT_TYPE, raw->day_segment_type);

  00923	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00926	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [eax+144]
  0092c	51		 push	 ecx
  0092d	6a 27		 push	 39			; 00000027H
  0092f	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  00932	52		 push	 edx
  00933	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 471  : 
; 472  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MIN, raw->population_x_min);

  00938	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0093b	51		 push	 ecx
  0093c	f3 0f 10 80 94
	00 00 00	 movss	 xmm0, DWORD PTR [eax+148]
  00944	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00949	6a 57		 push	 87			; 00000057H
  0094b	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0094e	51		 push	 ecx
  0094f	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 473  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_X_MAX, raw->population_x_max);

  00954	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00957	51		 push	 ecx
  00958	f3 0f 10 80 98
	00 00 00	 movss	 xmm0, DWORD PTR [eax+152]
  00960	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00965	6a 58		 push	 88			; 00000058H
  00967	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  0096a	51		 push	 ecx
  0096b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 474  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MIN, raw->population_z_min);

  00970	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00973	51		 push	 ecx
  00974	f3 0f 10 80 9c
	00 00 00	 movss	 xmm0, DWORD PTR [eax+156]
  0097c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00981	6a 59		 push	 89			; 00000059H
  00983	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00986	51		 push	 ecx
  00987	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 475  : 			pack_float_value (en, FLOAT_TYPE_POPULATION_Z_MAX, raw->population_z_max);

  0098c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0098f	51		 push	 ecx
  00990	f3 0f 10 80 a0
	00 00 00	 movss	 xmm0, DWORD PTR [eax+160]
  00998	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0099d	6a 5a		 push	 90			; 0000005aH
  0099f	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  009a2	51		 push	 ecx
  009a3	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 476  : 		
; 477  : 			pack_int_value (en, INT_TYPE_CAMPAIGN_REQUIRES_APACHE_HAVOC, raw->campaign_requires_apache_havoc);

  009a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  009ab	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  009b1	c1 e9 10	 shr	 ecx, 16			; 00000010H
  009b4	83 e1 01	 and	 ecx, 1
  009b7	51		 push	 ecx
  009b8	6a 16		 push	 22			; 00000016H
  009ba	8b 55 f8	 mov	 edx, DWORD PTR _en$[ebp]
  009bd	52		 push	 edx
  009be	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:

; 478  : 
; 479  : 			// infinite_weapons
; 480  : 
; 481  : 			// skip_night_time
; 482  : 
; 483  : 			// weather increasing
; 484  : 
; 485  :          break;
; 486  :       }
; 487  : 	}
; 488  : }

  009c3	5f		 pop	 edi
  009c4	5e		 pop	 esi
  009c5	5b		 pop	 ebx
  009c6	8b e5		 mov	 esp, ebp
  009c8	5d		 pop	 ebp
  009c9	c2 04 00	 ret	 4
?pack_local_session_data@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_session_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\session\ss_pack.c
;	COMDAT ?overload_session_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_session_pack_functions@@YGXXZ PROC		; overload_session_pack_functions, COMDAT

; 220  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 221  : 	fn_pack_local_entity_data[ENTITY_TYPE_SESSION]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 1b	 imul	 ecx, eax, 27
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 222  : 
; 223  : 	fn_unpack_local_entity_data[ENTITY_TYPE_SESSION]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 1b	 imul	 ecx, eax, 27
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 224  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_session_pack_functions@@YGXXZ ENDP		; overload_session_pack_functions
_TEXT	ENDS
END
