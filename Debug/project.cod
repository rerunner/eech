; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\project.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?cdrom_drive_letter@@3HA			; cdrom_drive_letter
PUBLIC	?apache_havoc_installation_path_valid@@3HA	; apache_havoc_installation_path_valid
PUBLIC	?apache_havoc_installation_path@@3PADA		; apache_havoc_installation_path
PUBLIC	?comanche_hokum_installation_path@@3PADA	; comanche_hokum_installation_path
_BSS	SEGMENT
?cdrom_drive_letter@@3HA DD 01H DUP (?)			; cdrom_drive_letter
?apache_havoc_installation_path_valid@@3HA DD 01H DUP (?) ; apache_havoc_installation_path_valid
?apache_havoc_installation_path@@3PADA DB 0400H DUP (?)	; apache_havoc_installation_path
?comanche_hokum_installation_path@@3PADA DB 0400H DUP (?) ; comanche_hokum_installation_path
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsprintf_s_l
PUBLIC	_sprintf_s
PUBLIC	?set_registry_language_settings@@YGXXZ		; set_registry_language_settings
PUBLIC	?application_main@@YGXHPAPAD@Z			; application_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0CB@LKGJBMNG@Initialising?5global?5options?5dat@ ; `string'
PUBLIC	??_C@_0BM@GAIBENI@Loading?5global?5options?5data@ ; `string'
PUBLIC	??_C@_0P@MPOEJLGF@COMANCHE_HOKUM@		; `string'
PUBLIC	??_C@_0BL@KCLHPNJL@Version?5number?5?$DN?5?$CF02d?4?$CF02d@ ; `string'
PUBLIC	??_C@_0CD@DOAHDDGK@Apache?5Havoc?5installation?5path?3@ ; `string'
PUBLIC	??_C@_0BO@BAGKDBJF@Apache?5Havoc?5is?5NOT?5installed@ ; `string'
PUBLIC	??_C@_0BH@FKJIDKDN@Set?5colour?5depth?5to?5?$CFd@ ; `string'
PUBLIC	??_C@_0HI@LPKHHJPM@Unable?5to?5look?5for?5video?5card?4?6@ ; `string'
PUBLIC	??_C@_0HG@FEHCPNJM@Unable?5to?5access?5video?5card?4?6?6P@ ; `string'
PUBLIC	??_C@_0HM@BLCCCMMC@Unable?5to?5access?5DirectX6?5drive@ ; `string'
PUBLIC	??_C@_0HM@KONLOC@Unable?5to?5find?5a?53D?5graphics?5ca@ ; `string'
PUBLIC	??_C@_0HP@CDNLEDHG@Unable?5to?5initialise?5a?53d?5video@ ; `string'
PUBLIC	??_C@_0JF@HGGBHIPA@Unable?5to?5allocate?5enough?5video@ ; `string'
PUBLIC	??_C@_0BH@BDMGLFFA@Enabling?5mode?3?5?$CFd?5x?5?$CFd@ ; `string'
PUBLIC	??_C@_0CD@LLJBMCPC@Software?2Razorworks?2Comanche?5Ho@ ; `string'
PUBLIC	??_C@_0BC@DEGFMGAC@Installation?5Path@		; `string'
PUBLIC	??_C@_08KEKAJNJI@Software@			; `string'
PUBLIC	??_C@_0L@BBNNMEOA@Razorworks@			; `string'
PUBLIC	??_C@_0N@KLALKPBG@Apache?5Havoc@		; `string'
PUBLIC	??_C@_05BPCBICBK@?$CFs?2?4?4@			; `string'
PUBLIC	??_C@_0BH@OMEBDKHA@?$CFs?2aphavoc?2aphavoc?4exe@ ; `string'
PUBLIC	??_C@_0P@MNJDFNPI@Comanche?5Hokum@		; `string'
PUBLIC	??_C@_08OJIOLCCH@LANGUAGE@			; `string'
PUBLIC	??_C@_06KFKKMHJN@FRENCH@			; `string'
PUBLIC	??_C@_06IIKFGJJO@GERMAN@			; `string'
PUBLIC	??_C@_07NLCMMKLO@ITALIAN@			; `string'
PUBLIC	??_C@_07PBCAEALG@SPANISH@			; `string'
PUBLIC	??_C@_07PACEEPLE@RUSSIAN@			; `string'
PUBLIC	??_C@_06JCANIGJE@POLISH@			; `string'
PUBLIC	__real@43f00000
PUBLIC	__real@44200000
EXTRN	__imp____stdio_common_vsprintf_s:PROC
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___stricmp:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	__imp__GetCurrentDirectoryA@8:PROC
EXTRN	__imp__RegCloseKey@4:PROC
EXTRN	__imp__RegOpenKeyA@12:PROC
EXTRN	__imp__RegQueryValueExA@24:PROC
EXTRN	?end_application@@YGXXZ:PROC			; end_application
EXTRN	?debug_set_window_creation@@YGXW4debug_window_creation@@@Z:PROC ; debug_set_window_creation
EXTRN	?debug_set_windows_update@@YGXW4debug_update_state@@@Z:PROC ; debug_set_windows_update
EXTRN	?initialise_debug_system@@YGXH@Z:PROC		; initialise_debug_system
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ:PROC ; debug_colour_log
EXTRN	?initialise_input_system@@YGXW4INPUT_TYPES@@@Z:PROC ; initialise_input_system
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?initialise_graphics_system@@YGHPAU_GUID@@@Z:PROC ; initialise_graphics_system
EXTRN	?set_ddraw_use_full_screen@@YGXH@Z:PROC		; set_ddraw_use_full_screen
EXTRN	?get_ddraw_device_guid@@YGXPAU_GUID@@@Z:PROC	; get_ddraw_device_guid
EXTRN	?ddraw_set_display_resolution@@YGHHHHW4DISPLAY_TYPES@@@Z:PROC ; ddraw_set_display_resolution
EXTRN	?ddraw_flip_surface@@YGHXZ:PROC			; ddraw_flip_surface
EXTRN	?get_graphics_resolution_index@@YGHHH@Z:PROC	; get_graphics_resolution_index
EXTRN	?assess_graphic_device_resolutions@@YGHXZ:PROC	; assess_graphic_device_resolutions
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?clear_screen@@YGXXZ:PROC			; clear_screen
EXTRN	?initialise_graphics_rendering_system@@YGHXZ:PROC ; initialise_graphics_rendering_system
EXTRN	?process_command_line@@YGXHQAPAD@Z:PROC		; process_command_line
EXTRN	?process_environment_variable@@YGXPBD@Z:PROC	; process_environment_variable
EXTRN	?game@@YGXXZ:PROC				; game
EXTRN	?initialise_global_options_data@@YGXXZ:PROC	; initialise_global_options_data
EXTRN	?load_global_options_data@@YGXXZ:PROC		; load_global_options_data
EXTRN	?initialize_options@@YGXXZ:PROC			; initialize_options
EXTRN	?process_ini_file@@YGXXZ:PROC			; process_ini_file
EXTRN	?dump_ini_file@@YGXXZ:PROC			; dump_ini_file
EXTRN	__chkstk:PROC
EXTRN	?debug_fatal_warning_tone@@3HA:DWORD		; debug_fatal_warning_tone
EXTRN	?direct_draw_initialisation_error@@3W4DDRAW_INITIALISATION_ERRORS@@A:DWORD ; direct_draw_initialisation_error
EXTRN	?d3d_override_render_to_texture@@3HA:DWORD	; d3d_override_render_to_texture
EXTRN	?d3d_use_dx_pipeline@@3HA:DWORD			; d3d_use_dx_pipeline
EXTRN	?number_of_graphics_resolution_modes_available@@3HA:DWORD ; number_of_graphics_resolution_modes_available
EXTRN	?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A:BYTE ; graphics_resolution_modes_available
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?command_line_debug_input@@3HA:DWORD		; command_line_debug_input
EXTRN	?command_line_full_screen@@3HA:DWORD		; command_line_full_screen
EXTRN	?command_line_3d_reset@@3HA:DWORD		; command_line_3d_reset
EXTRN	?command_line_no_hardware_tnl@@3HA:DWORD	; command_line_no_hardware_tnl
EXTRN	?command_line_no_render_to_texture@@3HA:DWORD	; command_line_no_render_to_texture
EXTRN	?command_line_display_bpp@@3HA:DWORD		; command_line_display_bpp
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?full_screen_colourdepth@@3HA:DWORD		; full_screen_colourdepth
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@44200000
CONST	SEGMENT
__real@44200000 DD 044200000r			; 640
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT ??_C@_06JCANIGJE@POLISH@
CONST	SEGMENT
??_C@_06JCANIGJE@POLISH@ DB 'POLISH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PACEEPLE@RUSSIAN@
CONST	SEGMENT
??_C@_07PACEEPLE@RUSSIAN@ DB 'RUSSIAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07PBCAEALG@SPANISH@
CONST	SEGMENT
??_C@_07PBCAEALG@SPANISH@ DB 'SPANISH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NLCMMKLO@ITALIAN@
CONST	SEGMENT
??_C@_07NLCMMKLO@ITALIAN@ DB 'ITALIAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IIKFGJJO@GERMAN@
CONST	SEGMENT
??_C@_06IIKFGJJO@GERMAN@ DB 'GERMAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KFKKMHJN@FRENCH@
CONST	SEGMENT
??_C@_06KFKKMHJN@FRENCH@ DB 'FRENCH', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OJIOLCCH@LANGUAGE@
CONST	SEGMENT
??_C@_08OJIOLCCH@LANGUAGE@ DB 'LANGUAGE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MNJDFNPI@Comanche?5Hokum@
CONST	SEGMENT
??_C@_0P@MNJDFNPI@Comanche?5Hokum@ DB 'Comanche Hokum', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OMEBDKHA@?$CFs?2aphavoc?2aphavoc?4exe@
CONST	SEGMENT
??_C@_0BH@OMEBDKHA@?$CFs?2aphavoc?2aphavoc?4exe@ DB '%s\aphavoc\aphavoc.e'
	DB	'xe', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05BPCBICBK@?$CFs?2?4?4@
CONST	SEGMENT
??_C@_05BPCBICBK@?$CFs?2?4?4@ DB '%s\..', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KLALKPBG@Apache?5Havoc@
CONST	SEGMENT
??_C@_0N@KLALKPBG@Apache?5Havoc@ DB 'Apache Havoc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBNNMEOA@Razorworks@
CONST	SEGMENT
??_C@_0L@BBNNMEOA@Razorworks@ DB 'Razorworks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software@ DB 'Software', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DEGFMGAC@Installation?5Path@
CONST	SEGMENT
??_C@_0BC@DEGFMGAC@Installation?5Path@ DB 'Installation Path', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LLJBMCPC@Software?2Razorworks?2Comanche?5Ho@
CONST	SEGMENT
??_C@_0CD@LLJBMCPC@Software?2Razorworks?2Comanche?5Ho@ DB 'Software\Razor'
	DB	'works\Comanche Hokum', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BDMGLFFA@Enabling?5mode?3?5?$CFd?5x?5?$CFd@
CONST	SEGMENT
??_C@_0BH@BDMGLFFA@Enabling?5mode?3?5?$CFd?5x?5?$CFd@ DB 'Enabling mode: '
	DB	'%d x %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0JF@HGGBHIPA@Unable?5to?5allocate?5enough?5video@
CONST	SEGMENT
??_C@_0JF@HGGBHIPA@Unable?5to?5allocate?5enough?5video@ DB 'Unable to all'
	DB	'ocate enough video memory.', 0aH, 0aH, 'Please ensure you hav'
	DB	'e at least 4Mb of memory on your video card', 0aH, 'and you h'
	DB	'ave the latest drivers installed', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0HP@CDNLEDHG@Unable?5to?5initialise?5a?53d?5video@
CONST	SEGMENT
??_C@_0HP@CDNLEDHG@Unable?5to?5initialise?5a?53d?5video@ DB 'Unable to in'
	DB	'itialise a 3d video card.', 0aH, 0aH, 'Please ensure you have'
	DB	' the latest drivers', 0aH, 'for your 3d card and have install'
	DB	'ed', 0aH, 'DirectX 6', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@KONLOC@Unable?5to?5find?5a?53D?5graphics?5ca@
CONST	SEGMENT
??_C@_0HM@KONLOC@Unable?5to?5find?5a?53D?5graphics?5ca@ DB 'Unable to fin'
	DB	'd a 3D graphics card.', 0aH, 0aH, 'Please ensure you have the'
	DB	' latest drivers', 0aH, 'for your 3d card and have installed', 0aH
	DB	'DirectX 6', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@BLCCCMMC@Unable?5to?5access?5DirectX6?5drive@
CONST	SEGMENT
??_C@_0HM@BLCCCMMC@Unable?5to?5access?5DirectX6?5drive@ DB 'Unable to acc'
	DB	'ess DirectX6 drivers.', 0aH, 0aH, 'Please ensure you have the'
	DB	' latest drivers', 0aH, 'for your 3d card and have installed', 0aH
	DB	'DirectX 6', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HG@FEHCPNJM@Unable?5to?5access?5video?5card?4?6?6P@
CONST	SEGMENT
??_C@_0HG@FEHCPNJM@Unable?5to?5access?5video?5card?4?6?6P@ DB 'Unable to '
	DB	'access video card.', 0aH, 0aH, 'Please ensure you have the la'
	DB	'test drivers', 0aH, 'for your 3d card and have installed', 0aH
	DB	'DirectX 6', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0HI@LPKHHJPM@Unable?5to?5look?5for?5video?5card?4?6@
CONST	SEGMENT
??_C@_0HI@LPKHHJPM@Unable?5to?5look?5for?5video?5card?4?6@ DB 'Unable to '
	DB	'look for video card.', 0aH, 0aH, 'Please ensure you have the '
	DB	'latest drivers', 0aH, 'for your 3d card and have installed', 0aH
	DB	'DirectX 6', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FKJIDKDN@Set?5colour?5depth?5to?5?$CFd@
CONST	SEGMENT
??_C@_0BH@FKJIDKDN@Set?5colour?5depth?5to?5?$CFd@ DB 'Set colour depth to'
	DB	' %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BAGKDBJF@Apache?5Havoc?5is?5NOT?5installed@
CONST	SEGMENT
??_C@_0BO@BAGKDBJF@Apache?5Havoc?5is?5NOT?5installed@ DB 'Apache Havoc is'
	DB	' NOT installed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DOAHDDGK@Apache?5Havoc?5installation?5path?3@
CONST	SEGMENT
??_C@_0CD@DOAHDDGK@Apache?5Havoc?5installation?5path?3@ DB 'Apache Havoc '
	DB	'installation path: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KCLHPNJL@Version?5number?5?$DN?5?$CF02d?4?$CF02d@
CONST	SEGMENT
??_C@_0BL@KCLHPNJL@Version?5number?5?$DN?5?$CF02d?4?$CF02d@ DB 'Version n'
	DB	'umber = %02d.%02d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPOEJLGF@COMANCHE_HOKUM@
CONST	SEGMENT
??_C@_0P@MPOEJLGF@COMANCHE_HOKUM@ DB 'COMANCHE_HOKUM', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GAIBENI@Loading?5global?5options?5data@
CONST	SEGMENT
??_C@_0BM@GAIBENI@Loading?5global?5options?5data@ DB 'Loading global opti'
	DB	'ons data', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LKGJBMNG@Initialising?5global?5options?5dat@
CONST	SEGMENT
??_C@_0CB@LKGJBMNG@Initialising?5global?5options?5dat@ DB 'Initialising g'
	DB	'lobal options data', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\project.c
;	COMDAT ?application_main@@YGXHPAPAD@Z
_TEXT	SEGMENT
tv142 = -96						; size = 4
_index$1 = -28						; size = 4
_index$2 = -24						; size = 4
_this_graphics_device$3 = -20				; size = 16
_graphics_initialised$4 = -4				; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
?application_main@@YGXHPAPAD@Z PROC			; application_main, COMDAT

; 108  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 109  : 	//
; 110  : 	// Initialise the global options data
; 111  : 	//
; 112  : 
; 113  : 	debug_log ( "Initialising global options data" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@LKGJBMNG@Initialising?5global?5options?5dat@
  0000e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00013	83 c4 04	 add	 esp, 4

; 114  : 
; 115  : 	initialise_global_options_data ();

  00016	e8 00 00 00 00	 call	 ?initialise_global_options_data@@YGXXZ ; initialise_global_options_data

; 116  : 
; 117  : 	debug_log ( "Loading global options data" );

  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GAIBENI@Loading?5global?5options?5data@
  00020	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00025	83 c4 04	 add	 esp, 4

; 118  : 
; 119  : 	load_global_options_data ();

  00028	e8 00 00 00 00	 call	 ?load_global_options_data@@YGXXZ ; load_global_options_data

; 120  : 
; 121  : 	//
; 122  : 	// Initialise language
; 123  : 	//
; 124  : 
; 125  : 	set_registry_language_settings ();

  0002d	e8 00 00 00 00	 call	 ?set_registry_language_settings@@YGXXZ ; set_registry_language_settings

; 126  : 
; 127  : 	initialize_options ();

  00032	e8 00 00 00 00	 call	 ?initialize_options@@YGXXZ ; initialize_options

; 128  : 
; 129  : 	//
; 130  : 	// process command line
; 131  : 	//
; 132  : 
; 133  : 	process_environment_variable (ENV_NAME);

  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MPOEJLGF@COMANCHE_HOKUM@
  0003c	e8 00 00 00 00	 call	 ?process_environment_variable@@YGXPBD@Z ; process_environment_variable

; 134  : 
; 135  : 	process_command_line (argc, argv);

  00041	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00044	50		 push	 eax
  00045	8b 4d 08	 mov	 ecx, DWORD PTR _argc$[ebp]
  00048	51		 push	 ecx
  00049	e8 00 00 00 00	 call	 ?process_command_line@@YGXHQAPAD@Z ; process_command_line

; 136  : 
; 137  : 	//
; 138  : 	// process eech.ini file, call before commandline
; 139  : 	//
; 140  : 	//vj 030409, changed to generate eech.ini when it doesn't exist
; 141  : 	process_ini_file ();

  0004e	e8 00 00 00 00	 call	 ?process_ini_file@@YGXXZ ; process_ini_file

; 142  : 
; 143  : 	process_command_line (argc, argv);

  00053	8b 45 0c	 mov	 eax, DWORD PTR _argv$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _argc$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 ?process_command_line@@YGXHQAPAD@Z ; process_command_line

; 144  : 
; 145  : 
; 146  : 	//
; 147  : 	// setup the debug system
; 148  : 	//
; 149  : 
; 150  : 	debug_fatal_warning_tone = FALSE;

  00060	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?debug_fatal_warning_tone@@3HA, 0 ; debug_fatal_warning_tone

; 151  : 
; 152  : // opengl	if (command_line_full_screen || 1)
; 153  : 	if (command_line_full_screen)

  0006a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_full_screen@@3HA, 0 ; command_line_full_screen
  00071	74 17		 je	 SHORT $LN10@applicatio

; 154  : 	{
; 155  : 
; 156  : 		debug_set_window_creation (DEBUG_CREATE_NOWINDOW);

  00073	6a 01		 push	 1
  00075	e8 00 00 00 00	 call	 ?debug_set_window_creation@@YGXW4debug_window_creation@@@Z ; debug_set_window_creation

; 157  : 
; 158  : 		debug_set_windows_update (DEBUG_UPDATE_MANUAL);

  0007a	6a 01		 push	 1
  0007c	e8 00 00 00 00	 call	 ?debug_set_windows_update@@YGXW4debug_update_state@@@Z ; debug_set_windows_update

; 159  : 
; 160  : 		initialise_debug_system (TRUE);

  00081	6a 01		 push	 1
  00083	e8 00 00 00 00	 call	 ?initialise_debug_system@@YGXH@Z ; initialise_debug_system

; 161  : 	}
; 162  : 	else

  00088	eb 15		 jmp	 SHORT $LN11@applicatio
$LN10@applicatio:

; 163  : 	{
; 164  : 
; 165  : 		debug_set_window_creation (DEBUG_CREATE_WINDOW);

  0008a	6a 02		 push	 2
  0008c	e8 00 00 00 00	 call	 ?debug_set_window_creation@@YGXW4debug_window_creation@@@Z ; debug_set_window_creation

; 166  : 
; 167  : 		debug_set_windows_update (DEBUG_UPDATE_AUTO);

  00091	6a 02		 push	 2
  00093	e8 00 00 00 00	 call	 ?debug_set_windows_update@@YGXW4debug_update_state@@@Z ; debug_set_windows_update

; 168  : 
; 169  : 		initialise_debug_system (TRUE);

  00098	6a 01		 push	 1
  0009a	e8 00 00 00 00	 call	 ?initialise_debug_system@@YGXH@Z ; initialise_debug_system
$LN11@applicatio:

; 170  : 	}
; 171  : 
; 172  : 	//
; 173  : 	// version number
; 174  : 	//
; 175  : 
; 176  : 	debug_colour_log (DEBUG_COLOUR_AMBER, "Version number = %02d.%02d", get_global_version_number () >> 8, get_global_version_number () & 0xff);

  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A
  000a4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000a9	50		 push	 eax
  000aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A
  000b0	c1 f9 08	 sar	 ecx, 8
  000b3	51		 push	 ecx
  000b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@KCLHPNJL@Version?5number?5?$DN?5?$CF02d?4?$CF02d@
  000b9	6a 17		 push	 23			; 00000017H
  000bb	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  000c0	83 c4 10	 add	 esp, 16			; 00000010H

; 177  : 
; 178  : 	// JB 030311
; 179  : 	set_comanche_hokum_installation_path();

  000c3	e8 00 00 00 00	 call	 ?set_comanche_hokum_installation_path@@YGXXZ ; set_comanche_hokum_installation_path

; 180  : 
; 181  : 	//
; 182  : 	// detect Apache Havoc
; 183  : 	//
; 184  : 
; 185  : 	set_apache_havoc_installation_path ();

  000c8	e8 00 00 00 00	 call	 ?set_apache_havoc_installation_path@@YGXXZ ; set_apache_havoc_installation_path

; 186  : 
; 187  : 	if (apache_havoc_installation_path_valid)

  000cd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?apache_havoc_installation_path_valid@@3HA, 0 ; apache_havoc_installation_path_valid
  000d4	74 20		 je	 SHORT $LN12@applicatio

; 188  : 	{
; 189  : 		set_global_apache_havoc_installed (TRUE);

  000d6	c7 05 60 03 00
	00 01 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+864, 1

; 190  : 
; 191  : 		debug_colour_log (DEBUG_COLOUR_AMBER, "Apache Havoc installation path: %s", apache_havoc_installation_path);

  000e0	68 00 00 00 00	 push	 OFFSET ?apache_havoc_installation_path@@3PADA ; apache_havoc_installation_path
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@DOAHDDGK@Apache?5Havoc?5installation?5path?3@
  000ea	6a 17		 push	 23			; 00000017H
  000ec	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 192  : 	}
; 193  : 	else

  000f4	eb 19		 jmp	 SHORT $LN13@applicatio
$LN12@applicatio:

; 194  : 	{
; 195  : 		set_global_apache_havoc_installed (FALSE);

  000f6	c7 05 60 03 00
	00 00 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+864, 0

; 196  : 
; 197  : 		debug_colour_log (DEBUG_COLOUR_AMBER, "Apache Havoc is NOT installed");

  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BAGKDBJF@Apache?5Havoc?5is?5NOT?5installed@
  00105	6a 17		 push	 23			; 00000017H
  00107	e8 00 00 00 00	 call	 ?debug_colour_log@@YAXW4DEBUG_COLOURS@@PBDZZ ; debug_colour_log
  0010c	83 c4 08	 add	 esp, 8
$LN13@applicatio:

; 198  : 	}
; 199  : 
; 200  : 	//
; 201  : 	// CD-ROM drive letter
; 202  : 	//
; 203  : 
; 204  : 	#ifdef INSTALL_FROM_CDROM
; 205  : 
; 206  : 	if (command_line_comms_dedicated_server)
; 207  : 	{
; 208  : 
; 209  : 		cdrom_drive_letter = 'Z';
; 210  : 	}
; 211  : 	else if (command_line_cdrom_drive_letter)
; 212  : 	{
; 213  : 
; 214  : 		cdrom_drive_letter = command_line_cdrom_drive_letter;
; 215  : 	}
; 216  : 	else
; 217  : 	{
; 218  : 		cdrom_drive_letter = check_cdrom_file_exists ("COHOKUM\\COHOKUM.EXE");
; 219  : 
; 220  : 		if (!cdrom_drive_letter)
; 221  : 		{
; 222  : 			if (get_global_current_language () == LANGUAGE_SPANISH)
; 223  : 			{
; 224  : 				debug_fatal ("No se pudo acceder al CD de Enemy Engaged RAH66 Comanche Vs KA-52 Hokum\n\nPor favor, introduce el CD...");
; 225  : 			}
; 226  : 			else
; 227  : 			{
; 228  : 				debug_fatal ("Unable to find the Enemy Engaged RAH66 Comanche Vs KA52 Hokum CD\n\nPlease insert the CD and try again ...");
; 229  : 			}
; 230  : 		}
; 231  : 	}
; 232  : 
; 233  : 	#else
; 234  : 
; 235  : 	cdrom_drive_letter = 'Z';

  0010f	c7 05 00 00 00
	00 5a 00 00 00	 mov	 DWORD PTR ?cdrom_drive_letter@@3HA, 90 ; cdrom_drive_letter, 0000005aH

; 236  : 
; 237  : 	#endif
; 238  : 
; 239  : 	//
; 240  : 	// setup input system
; 241  : 	//
; 242  : 
; 243  : 	if (command_line_debug_input)

  00119	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_debug_input@@3HA, 0 ; command_line_debug_input
  00120	74 09		 je	 SHORT $LN14@applicatio

; 244  : 	{
; 245  : 		initialise_input_system (INPUT_WINDOWS);

  00122	6a 02		 push	 2
  00124	e8 00 00 00 00	 call	 ?initialise_input_system@@YGXW4INPUT_TYPES@@@Z ; initialise_input_system

; 246  : 	}
; 247  : 	else

  00129	eb 07		 jmp	 SHORT $LN15@applicatio
$LN14@applicatio:

; 248  : 	{
; 249  : 		initialise_input_system (INPUT_DIRECTINPUT);

  0012b	6a 01		 push	 1
  0012d	e8 00 00 00 00	 call	 ?initialise_input_system@@YGXW4INPUT_TYPES@@@Z ; initialise_input_system
$LN15@applicatio:

; 250  : 	}
; 251  : 
; 252  : 	//
; 253  : 	// setup the graphics system
; 254  : 	//
; 255  : 
; 256  : 	if ( command_line_no_hardware_tnl )

  00132	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_no_hardware_tnl@@3HA, 0 ; command_line_no_hardware_tnl
  00139	74 0c		 je	 SHORT $LN16@applicatio

; 257  : 	{
; 258  : 
; 259  : 		d3d_use_dx_pipeline = FALSE;

  0013b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?d3d_use_dx_pipeline@@3HA, 0 ; d3d_use_dx_pipeline

; 260  : 	}
; 261  : 	else

  00145	eb 0a		 jmp	 SHORT $LN17@applicatio
$LN16@applicatio:

; 262  : 	{
; 263  : 
; 264  : 		d3d_use_dx_pipeline = TRUE;

  00147	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?d3d_use_dx_pipeline@@3HA, 1 ; d3d_use_dx_pipeline
$LN17@applicatio:

; 265  : 	}
; 266  : 
; 267  : 	full_screen_colourdepth = command_line_display_bpp;

  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_display_bpp@@3HA ; command_line_display_bpp
  00156	a3 00 00 00 00	 mov	 DWORD PTR ?full_screen_colourdepth@@3HA, eax ; full_screen_colourdepth

; 268  : 
; 269  : 	debug_log ("Set colour depth to %d", full_screen_colourdepth );

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?full_screen_colourdepth@@3HA ; full_screen_colourdepth
  00160	50		 push	 eax
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FKJIDKDN@Set?5colour?5depth?5to?5?$CFd@
  00166	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0016b	83 c4 08	 add	 esp, 8

; 270  : 
; 271  : 	d3d_override_render_to_texture = command_line_no_render_to_texture;

  0016e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_no_render_to_texture@@3HA ; command_line_no_render_to_texture
  00173	a3 00 00 00 00	 mov	 DWORD PTR ?d3d_override_render_to_texture@@3HA, eax ; d3d_override_render_to_texture

; 272  : 
; 273  : 	//set_ddraw_use_double_buffering ( TRUE );
; 274  : 	//set_ddraw_use_software_driver ( FALSE );
; 275  : 	//set_ddraw_use_system_memory ( FALSE );
; 276  : 	//set_ddraw_use_z_buffer ( TRUE );
; 277  : 	set_ddraw_use_full_screen ( command_line_full_screen );

  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_full_screen@@3HA ; command_line_full_screen
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?set_ddraw_use_full_screen@@YGXH@Z ; set_ddraw_use_full_screen

; 278  : 
; 279  : 	{
; 280  : 
; 281  : 		int
; 282  : 			graphics_initialised;
; 283  : 
; 284  : 		if ( !get_global_graphics_device_selection_automatic () )

  00183	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  00188	c1 e8 10	 shr	 eax, 16			; 00000010H
  0018b	83 e0 01	 and	 eax, 1
  0018e	75 28		 jne	 SHORT $LN18@applicatio

; 285  : 		{
; 286  : 
; 287  : 			if ( get_global_graphics_device_selection_primary () )

  00190	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  00195	c1 e8 11	 shr	 eax, 17			; 00000011H
  00198	83 e0 01	 and	 eax, 1
  0019b	74 0c		 je	 SHORT $LN20@applicatio

; 288  : 			{
; 289  : 
; 290  : 				//set_ddraw_use_software_driver ( TRUE );
; 291  : 
; 292  : 				graphics_initialised = initialise_graphics_system ( NULL );

  0019d	6a 00		 push	 0
  0019f	e8 00 00 00 00	 call	 ?initialise_graphics_system@@YGHPAU_GUID@@@Z ; initialise_graphics_system
  001a4	89 45 fc	 mov	 DWORD PTR _graphics_initialised$4[ebp], eax

; 293  : 			}
; 294  : 			else

  001a7	eb 0d		 jmp	 SHORT $LN21@applicatio
$LN20@applicatio:

; 295  : 			{
; 296  : 
; 297  : 				graphics_initialised = initialise_graphics_system ( &global_options.graphics_device_guid );

  001a9	68 54 00 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+84
  001ae	e8 00 00 00 00	 call	 ?initialise_graphics_system@@YGHPAU_GUID@@@Z ; initialise_graphics_system
  001b3	89 45 fc	 mov	 DWORD PTR _graphics_initialised$4[ebp], eax
$LN21@applicatio:

; 298  : 			}
; 299  : 		}
; 300  : 		else

  001b6	eb 0a		 jmp	 SHORT $LN19@applicatio
$LN18@applicatio:

; 301  : 		{
; 302  : 
; 303  : 			graphics_initialised = initialise_graphics_system ( NULL );

  001b8	6a 00		 push	 0
  001ba	e8 00 00 00 00	 call	 ?initialise_graphics_system@@YGHPAU_GUID@@@Z ; initialise_graphics_system
  001bf	89 45 fc	 mov	 DWORD PTR _graphics_initialised$4[ebp], eax
$LN19@applicatio:

; 304  : 		}
; 305  : 
; 306  : 		if ( !graphics_initialised )

  001c2	83 7d fc 00	 cmp	 DWORD PTR _graphics_initialised$4[ebp], 0
  001c6	75 79		 jne	 SHORT $LN2@applicatio

; 307  : 		{
; 308  : 
; 309  : 			switch ( direct_draw_initialisation_error )

  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?direct_draw_initialisation_error@@3W4DDRAW_INITIALISATION_ERRORS@@A ; direct_draw_initialisation_error
  001cd	89 45 a0	 mov	 DWORD PTR tv142[ebp], eax
  001d0	8b 4d a0	 mov	 ecx, DWORD PTR tv142[ebp]
  001d3	83 e9 01	 sub	 ecx, 1
  001d6	89 4d a0	 mov	 DWORD PTR tv142[ebp], ecx
  001d9	83 7d a0 04	 cmp	 DWORD PTR tv142[ebp], 4
  001dd	77 55		 ja	 SHORT $LN28@applicatio
  001df	8b 55 a0	 mov	 edx, DWORD PTR tv142[ebp]
  001e2	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN42@applicatio[edx*4]
$LN23@applicatio:

; 310  : 			{
; 311  : 
; 312  : 				case DDRAW_INIT_UNABLE_TO_ENUMERATE:
; 313  : 				{
; 314  : 
; 315  : 					debug_fatal ( "Unable to look for video card.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  001e9	68 00 00 00 00	 push	 OFFSET ??_C@_0HI@LPKHHJPM@Unable?5to?5look?5for?5video?5card?4?6@
  001ee	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001f3	83 c4 04	 add	 esp, 4

; 316  : 
; 317  : 					break;

  001f6	eb 49		 jmp	 SHORT $LN2@applicatio
$LN24@applicatio:

; 318  : 				}
; 319  : 
; 320  : 				case DDRAW_INIT_UNABLE_TO_CREATE_DDRAW:
; 321  : 				{
; 322  : 
; 323  : 					debug_fatal ( "Unable to access video card.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  001f8	68 00 00 00 00	 push	 OFFSET ??_C@_0HG@FEHCPNJM@Unable?5to?5access?5video?5card?4?6?6P@
  001fd	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00202	83 c4 04	 add	 esp, 4

; 324  : 
; 325  : 					break;

  00205	eb 3a		 jmp	 SHORT $LN2@applicatio
$LN25@applicatio:

; 326  : 				}
; 327  : 
; 328  : 				case DDRAW_INIT_UNABLE_TO_CREATE_DDRAW4:
; 329  : 				{
; 330  : 
; 331  : 					debug_fatal ( "Unable to access DirectX6 drivers.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0HM@BLCCCMMC@Unable?5to?5access?5DirectX6?5drive@
  0020c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00211	83 c4 04	 add	 esp, 4

; 332  : 
; 333  : 					break;

  00214	eb 2b		 jmp	 SHORT $LN2@applicatio
$LN26@applicatio:

; 334  : 				}
; 335  : 
; 336  : 				case DDRAW_INIT_UNABLE_TO_ENUMERATE_DISPLAY_MODES:
; 337  : 				{
; 338  : 
; 339  : 					debug_fatal ( "Unable to access DirectX6 drivers.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  00216	68 00 00 00 00	 push	 OFFSET ??_C@_0HM@BLCCCMMC@Unable?5to?5access?5DirectX6?5drive@
  0021b	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00220	83 c4 04	 add	 esp, 4

; 340  : 
; 341  : 					break;

  00223	eb 1c		 jmp	 SHORT $LN2@applicatio
$LN27@applicatio:

; 342  : 				}
; 343  : 
; 344  : 				case DDRAW_INIT_NO_3D_CARD:
; 345  : 				{
; 346  : 
; 347  : 					debug_fatal ( "Unable to find a 3D graphics card.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  00225	68 00 00 00 00	 push	 OFFSET ??_C@_0HM@KONLOC@Unable?5to?5find?5a?53D?5graphics?5ca@
  0022a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0022f	83 c4 04	 add	 esp, 4

; 348  : 
; 349  : 					break;

  00232	eb 0d		 jmp	 SHORT $LN2@applicatio
$LN28@applicatio:

; 350  : 				}
; 351  : 
; 352  : 				case DDRAW_INIT_OK:
; 353  : 				default:
; 354  : 				{
; 355  : 
; 356  : 					debug_fatal ( "Unable to initialise a 3d video card.\n\nPlease ensure you have the latest drivers\nfor your 3d card and have installed\nDirectX 6" );

  00234	68 00 00 00 00	 push	 OFFSET ??_C@_0HP@CDNLEDHG@Unable?5to?5initialise?5a?53d?5video@
  00239	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0023e	83 c4 04	 add	 esp, 4
$LN2@applicatio:

; 357  : 
; 358  : 					break;
; 359  : 				}
; 360  : 			}
; 361  : 		}
; 362  : 	}
; 363  : 
; 364  : 	//
; 365  : 	// Check the display resolutions
; 366  : 	//
; 367  : 
; 368  : 	if ( command_line_full_screen )

  00241	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_full_screen@@3HA, 0 ; command_line_full_screen
  00248	0f 84 2d 01 00
	00		 je	 $LN29@applicatio

; 369  : 	{
; 370  : 
; 371  : 		GUID
; 372  : 			this_graphics_device;
; 373  : 
; 374  : 		int
; 375  : 			index;
; 376  : 
; 377  : 		//
; 378  : 		// If the last video card was different to the current one, re-assess the resolutions
; 379  : 		//
; 380  : 
; 381  : 		get_ddraw_device_guid ( &this_graphics_device );

  0024e	8d 45 ec	 lea	 eax, DWORD PTR _this_graphics_device$3[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?get_ddraw_device_guid@@YGXPAU_GUID@@@Z ; get_ddraw_device_guid

; 382  : 
; 383  : 		if (command_line_3d_reset || memcmp ( &this_graphics_device, &global_options.graphics_card_device_identifier, sizeof ( GUID ) ) != 0 )

  00257	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_3d_reset@@3HA, 0 ; command_line_3d_reset
  0025e	75 1b		 jne	 SHORT $LN33@applicatio
  00260	6a 10		 push	 16			; 00000010H
  00262	68 cc 01 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+460
  00267	8d 45 ec	 lea	 eax, DWORD PTR _this_graphics_device$3[ebp]
  0026a	50		 push	 eax
  0026b	e8 00 00 00 00	 call	 _memcmp
  00270	83 c4 0c	 add	 esp, 12			; 0000000cH
  00273	85 c0		 test	 eax, eax
  00275	0f 84 8c 00 00
	00		 je	 $LN31@applicatio
$LN33@applicatio:

; 384  : 		{
; 385  : 
; 386  : 			if ( assess_graphic_device_resolutions () )

  0027b	e8 00 00 00 00	 call	 ?assess_graphic_device_resolutions@@YGHXZ ; assess_graphic_device_resolutions
  00280	85 c0		 test	 eax, eax
  00282	74 74		 je	 SHORT $LN34@applicatio

; 387  : 			{
; 388  : 
; 389  : 				//
; 390  : 				// Save the GUID for next time
; 391  : 				//
; 392  : 
; 393  : 				memcpy ( &global_options.graphics_card_device_identifier, &this_graphics_device, sizeof ( GUID ) );

  00284	6a 10		 push	 16			; 00000010H
  00286	8d 45 ec	 lea	 eax, DWORD PTR _this_graphics_device$3[ebp]
  00289	50		 push	 eax
  0028a	68 cc 01 00 00	 push	 OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+460
  0028f	e8 00 00 00 00	 call	 _memcpy
  00294	83 c4 0c	 add	 esp, 12			; 0000000cH

; 394  : 
; 395  : 				//
; 396  : 				// We've got at least one resolution to run at - store resolutions available in global_options
; 397  : 				//
; 398  : 
; 399  : 				if ( number_of_graphics_resolution_modes_available > 32 )

  00297	83 3d 00 00 00
	00 20		 cmp	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 32 ; number_of_graphics_resolution_modes_available, 00000020H
  0029e	7e 0a		 jle	 SHORT $LN36@applicatio

; 400  : 				{
; 401  : 
; 402  : 					number_of_graphics_resolution_modes_available = 32;

  002a0	c7 05 00 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 32 ; number_of_graphics_resolution_modes_available, 00000020H
$LN36@applicatio:

; 403  : 				}
; 404  : 
; 405  : 				global_options.number_of_graphics_card_resolutions = number_of_graphics_resolution_modes_available;

  002aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  002af	a3 dc 01 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+476, eax

; 406  : 
; 407  : 				for ( index = 0; index < number_of_graphics_resolution_modes_available; index++ )

  002b4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _index$2[ebp], 0
  002bb	eb 09		 jmp	 SHORT $LN6@applicatio
$LN4@applicatio:
  002bd	8b 45 e8	 mov	 eax, DWORD PTR _index$2[ebp]
  002c0	83 c0 01	 add	 eax, 1
  002c3	89 45 e8	 mov	 DWORD PTR _index$2[ebp], eax
$LN6@applicatio:
  002c6	8b 45 e8	 mov	 eax, DWORD PTR _index$2[ebp]
  002c9	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  002cf	7d 25		 jge	 SHORT $LN5@applicatio

; 408  : 				{
; 409  : 
; 410  : 					global_options.graphics_card_resolutions[index] = graphics_resolution_modes_available[index];

  002d1	6b 45 e8 0c	 imul	 eax, DWORD PTR _index$2[ebp], 12
  002d5	05 00 00 00 00	 add	 eax, OFFSET ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A ; graphics_resolution_modes_available
  002da	6b 4d e8 0c	 imul	 ecx, DWORD PTR _index$2[ebp], 12
  002de	81 c1 e0 01 00
	00		 add	 ecx, OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+480
  002e4	8b 10		 mov	 edx, DWORD PTR [eax]
  002e6	89 11		 mov	 DWORD PTR [ecx], edx
  002e8	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002eb	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  002ee	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002f1	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 411  : 				}

  002f4	eb c7		 jmp	 SHORT $LN4@applicatio
$LN5@applicatio:

; 412  : 			}
; 413  : 			else

  002f6	eb 0d		 jmp	 SHORT $LN35@applicatio
$LN34@applicatio:

; 414  : 			{
; 415  : 
; 416  : 				//
; 417  : 				// We can't run at all. No memory even for 640x480 with compressed textures.
; 418  : 				//
; 419  : 
; 420  : 				debug_fatal ( "Unable to allocate enough video memory.\n\nPlease ensure you have at least 4Mb of memory on your video card\nand you have the latest drivers installed\n" );

  002f8	68 00 00 00 00	 push	 OFFSET ??_C@_0JF@HGGBHIPA@Unable?5to?5allocate?5enough?5video@
  002fd	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00302	83 c4 04	 add	 esp, 4
$LN35@applicatio:

; 421  : 			}
; 422  : 		}
; 423  : 		else

  00305	eb 6f		 jmp	 SHORT $LN8@applicatio
$LN31@applicatio:

; 424  : 		{
; 425  : 
; 426  : 			//
; 427  : 			// Hardwire the available resolutions in
; 428  : 			//
; 429  : 
; 430  : 			number_of_graphics_resolution_modes_available = global_options.number_of_graphics_card_resolutions;

  00307	a1 dc 01 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+476
  0030c	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, eax ; number_of_graphics_resolution_modes_available

; 431  : 
; 432  : 			for ( index = 0; index < number_of_graphics_resolution_modes_available; index++ )

  00311	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _index$2[ebp], 0
  00318	eb 09		 jmp	 SHORT $LN9@applicatio
$LN7@applicatio:
  0031a	8b 45 e8	 mov	 eax, DWORD PTR _index$2[ebp]
  0031d	83 c0 01	 add	 eax, 1
  00320	89 45 e8	 mov	 DWORD PTR _index$2[ebp], eax
$LN9@applicatio:
  00323	8b 45 e8	 mov	 eax, DWORD PTR _index$2[ebp]
  00326	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA ; number_of_graphics_resolution_modes_available
  0032c	7d 48		 jge	 SHORT $LN8@applicatio

; 433  : 			{
; 434  : 
; 435  : 				graphics_resolution_modes_available[index] = global_options.graphics_card_resolutions[index];

  0032e	6b 45 e8 0c	 imul	 eax, DWORD PTR _index$2[ebp], 12
  00332	05 e0 01 00 00	 add	 eax, OFFSET ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+480
  00337	6b 4d e8 0c	 imul	 ecx, DWORD PTR _index$2[ebp], 12
  0033b	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A ; graphics_resolution_modes_available
  00341	8b 10		 mov	 edx, DWORD PTR [eax]
  00343	89 11		 mov	 DWORD PTR [ecx], edx
  00345	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00348	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  0034b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0034e	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 436  : 
; 437  : 				debug_log ( "Enabling mode: %d x %d", graphics_resolution_modes_available[index].width, graphics_resolution_modes_available[index].height );

  00351	6b 45 e8 0c	 imul	 eax, DWORD PTR _index$2[ebp], 12
  00355	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4]
  0035b	51		 push	 ecx
  0035c	6b 55 e8 0c	 imul	 edx, DWORD PTR _index$2[ebp], 12
  00360	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[edx]
  00366	50		 push	 eax
  00367	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BDMGLFFA@Enabling?5mode?3?5?$CFd?5x?5?$CFd@
  0036c	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00371	83 c4 0c	 add	 esp, 12			; 0000000cH

; 438  : 			}

  00374	eb a4		 jmp	 SHORT $LN7@applicatio
$LN8@applicatio:

; 439  : 
; 440  : 		}
; 441  : 	}
; 442  : 	else

  00376	e9 8f 02 00 00	 jmp	 $LN30@applicatio
$LN29@applicatio:

; 443  : 	{
; 444  : 
; 445  : 		//
; 446  : 		// These are the supported screen resolutions for windowed mode, where we can't query DirectX for supported screen dimensions
; 447  : 		//
; 448  : 
; 449  : 		number_of_graphics_resolution_modes_available = 12;

  0037b	c7 05 00 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?number_of_graphics_resolution_modes_available@@3HA, 12 ; number_of_graphics_resolution_modes_available, 0000000cH

; 450  : 
; 451  : 		graphics_resolution_modes_available[0].width = 640;

  00385	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0038a	6b c8 00	 imul	 ecx, eax, 0
  0038d	c7 81 00 00 00
	00 80 02 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 640 ; 00000280H

; 452  : 		graphics_resolution_modes_available[0].height = 480;

  00397	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0039c	6b c8 00	 imul	 ecx, eax, 0
  0039f	c7 81 04 00 00
	00 e0 01 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 480 ; 000001e0H

; 453  : 		graphics_resolution_modes_available[0].compressed_texture_mode = FALSE;

  003a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003ae	6b c8 00	 imul	 ecx, eax, 0
  003b1	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 454  : 
; 455  : 		graphics_resolution_modes_available[1].width = 800;

  003bb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003c0	c1 e0 00	 shl	 eax, 0
  003c3	c7 80 00 00 00
	00 20 03 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax], 800 ; 00000320H

; 456  : 		graphics_resolution_modes_available[1].height = 600;

  003cd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003d2	c1 e0 00	 shl	 eax, 0
  003d5	c7 80 04 00 00
	00 58 02 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4], 600 ; 00000258H

; 457  : 		graphics_resolution_modes_available[1].compressed_texture_mode = FALSE;

  003df	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003e4	c1 e0 00	 shl	 eax, 0
  003e7	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+8], 0

; 458  : 
; 459  : 		graphics_resolution_modes_available[2].width = 1024;

  003f1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003f6	d1 e0		 shl	 eax, 1
  003f8	c7 80 00 00 00
	00 00 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax], 1024 ; 00000400H

; 460  : 		graphics_resolution_modes_available[2].height = 768;

  00402	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00407	d1 e0		 shl	 eax, 1
  00409	c7 80 04 00 00
	00 00 03 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4], 768 ; 00000300H

; 461  : 		graphics_resolution_modes_available[2].compressed_texture_mode = FALSE;

  00413	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00418	d1 e0		 shl	 eax, 1
  0041a	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+8], 0

; 462  : 
; 463  : 		graphics_resolution_modes_available[3].width = 1280; //Werewolf

  00424	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00429	6b c8 03	 imul	 ecx, eax, 3
  0042c	c7 81 00 00 00
	00 00 05 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1280 ; 00000500H

; 464  : 		graphics_resolution_modes_available[3].height = 800;

  00436	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0043b	6b c8 03	 imul	 ecx, eax, 3
  0043e	c7 81 04 00 00
	00 20 03 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 800 ; 00000320H

; 465  : 		graphics_resolution_modes_available[3].compressed_texture_mode = FALSE;

  00448	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0044d	6b c8 03	 imul	 ecx, eax, 3
  00450	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 466  : 
; 467  : 		graphics_resolution_modes_available[4].width = 1280;

  0045a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0045f	c1 e0 02	 shl	 eax, 2
  00462	c7 80 00 00 00
	00 00 05 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax], 1280 ; 00000500H

; 468  : 		graphics_resolution_modes_available[4].height = 960;

  0046c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00471	c1 e0 02	 shl	 eax, 2
  00474	c7 80 04 00 00
	00 c0 03 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4], 960 ; 000003c0H

; 469  : 		graphics_resolution_modes_available[4].compressed_texture_mode = FALSE;

  0047e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00483	c1 e0 02	 shl	 eax, 2
  00486	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+8], 0

; 470  : 
; 471  : 		graphics_resolution_modes_available[5].width = 1280; //Werewolf

  00490	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00495	6b c8 05	 imul	 ecx, eax, 5
  00498	c7 81 00 00 00
	00 00 05 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1280 ; 00000500H

; 472  : 		graphics_resolution_modes_available[5].height = 1024;

  004a2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004a7	6b c8 05	 imul	 ecx, eax, 5
  004aa	c7 81 04 00 00
	00 00 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 1024 ; 00000400H

; 473  : 		graphics_resolution_modes_available[5].compressed_texture_mode = FALSE;

  004b4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004b9	6b c8 05	 imul	 ecx, eax, 5
  004bc	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 474  : 
; 475  : 		graphics_resolution_modes_available[6].width = 1680; //Werewolf

  004c6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004cb	6b c8 06	 imul	 ecx, eax, 6
  004ce	c7 81 00 00 00
	00 90 06 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1680 ; 00000690H

; 476  : 		graphics_resolution_modes_available[6].height = 900;

  004d8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004dd	6b c8 06	 imul	 ecx, eax, 6
  004e0	c7 81 04 00 00
	00 84 03 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 900 ; 00000384H

; 477  : 		graphics_resolution_modes_available[6].compressed_texture_mode = FALSE;

  004ea	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004ef	6b c8 06	 imul	 ecx, eax, 6
  004f2	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 478  : 
; 479  : 		graphics_resolution_modes_available[7].width = 1680; //Werewolf

  004fc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00501	6b c8 07	 imul	 ecx, eax, 7
  00504	c7 81 00 00 00
	00 90 06 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1680 ; 00000690H

; 480  : 		graphics_resolution_modes_available[7].height = 1050;

  0050e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00513	6b c8 07	 imul	 ecx, eax, 7
  00516	c7 81 04 00 00
	00 1a 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 1050 ; 0000041aH

; 481  : 		graphics_resolution_modes_available[7].compressed_texture_mode = FALSE;

  00520	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00525	6b c8 07	 imul	 ecx, eax, 7
  00528	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 482  : 
; 483  : 		graphics_resolution_modes_available[8].width = 1600;

  00532	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00537	c1 e0 03	 shl	 eax, 3
  0053a	c7 80 00 00 00
	00 40 06 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax], 1600 ; 00000640H

; 484  : 		graphics_resolution_modes_available[8].height = 1200;

  00544	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00549	c1 e0 03	 shl	 eax, 3
  0054c	c7 80 04 00 00
	00 b0 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+4], 1200 ; 000004b0H

; 485  : 		graphics_resolution_modes_available[8].compressed_texture_mode = FALSE;

  00556	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0055b	c1 e0 03	 shl	 eax, 3
  0055e	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[eax+8], 0

; 486  : 
; 487  : 		graphics_resolution_modes_available[9].width = 1920;

  00568	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056d	6b c8 09	 imul	 ecx, eax, 9
  00570	c7 81 00 00 00
	00 80 07 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1920 ; 00000780H

; 488  : 		graphics_resolution_modes_available[9].height = 1080;

  0057a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0057f	6b c8 09	 imul	 ecx, eax, 9
  00582	c7 81 04 00 00
	00 38 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 1080 ; 00000438H

; 489  : 		graphics_resolution_modes_available[9].compressed_texture_mode = FALSE;

  0058c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00591	6b c8 09	 imul	 ecx, eax, 9
  00594	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 490  : 
; 491  : 		graphics_resolution_modes_available[10].width = 1920;

  0059e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005a3	6b c8 0a	 imul	 ecx, eax, 10
  005a6	c7 81 00 00 00
	00 80 07 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 1920 ; 00000780H

; 492  : 		graphics_resolution_modes_available[10].height = 1200;

  005b0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005b5	6b c8 0a	 imul	 ecx, eax, 10
  005b8	c7 81 04 00 00
	00 b0 04 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 1200 ; 000004b0H

; 493  : 		graphics_resolution_modes_available[10].compressed_texture_mode = FALSE;

  005c2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005c7	6b c8 0a	 imul	 ecx, eax, 10
  005ca	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0

; 494  : 
; 495  : 		graphics_resolution_modes_available[11].width = 2048;

  005d4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005d9	6b c8 0b	 imul	 ecx, eax, 11
  005dc	c7 81 00 00 00
	00 00 08 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx], 2048 ; 00000800H

; 496  : 		graphics_resolution_modes_available[11].height = 1536;

  005e6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005eb	6b c8 0b	 imul	 ecx, eax, 11
  005ee	c7 81 04 00 00
	00 00 06 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+4], 1536 ; 00000600H

; 497  : 		graphics_resolution_modes_available[11].compressed_texture_mode = FALSE;

  005f8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005fd	6b c8 0b	 imul	 ecx, eax, 11
  00600	c7 81 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?graphics_resolution_modes_available@@3PAUGRAPHICS_RESOLUTION_MODE@@A[ecx+8], 0
$LN30@applicatio:

; 498  : 	}
; 499  : 
; 500  : 	//
; 501  : 	// setup the graphics display resolution
; 502  : 	//
; 503  : 
; 504  : 	if (command_line_full_screen)

  0060a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_full_screen@@3HA, 0 ; command_line_full_screen
  00611	0f 84 82 00 00
	00		 je	 $LN37@applicatio

; 505  : 	{
; 506  : 
; 507  : 		int
; 508  : 			index;
; 509  : 
; 510  : 		index = get_graphics_resolution_index ( get_global_3d_visual_screen_width (), get_global_3d_visual_screen_height () );

  00617	f3 0f 2c 05 c8
	01 00 00	 cvttss2si eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456
  0061f	50		 push	 eax
  00620	f3 0f 2c 0d c4
	01 00 00	 cvttss2si ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452
  00628	51		 push	 ecx
  00629	e8 00 00 00 00	 call	 ?get_graphics_resolution_index@@YGHHH@Z ; get_graphics_resolution_index
  0062e	89 45 e4	 mov	 DWORD PTR _index$1[ebp], eax

; 511  : 
; 512  : 		if ( index != -1 )

  00631	83 7d e4 ff	 cmp	 DWORD PTR _index$1[ebp], -1
  00635	74 21		 je	 SHORT $LN39@applicatio

; 513  : 		{
; 514  : 
; 515  : 			ddraw_set_display_resolution (get_global_3d_visual_screen_width (), get_global_3d_visual_screen_height (), full_screen_colourdepth, DISPLAY_FULLSCREEN );

  00637	6a 02		 push	 2
  00639	a1 00 00 00 00	 mov	 eax, DWORD PTR ?full_screen_colourdepth@@3HA ; full_screen_colourdepth
  0063e	50		 push	 eax
  0063f	f3 0f 2c 0d c8
	01 00 00	 cvttss2si ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456
  00647	51		 push	 ecx
  00648	f3 0f 2c 15 c4
	01 00 00	 cvttss2si edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452
  00650	52		 push	 edx
  00651	e8 00 00 00 00	 call	 ?ddraw_set_display_resolution@@YGHHHHW4DISPLAY_TYPES@@@Z ; ddraw_set_display_resolution

; 516  : 		}
; 517  : 		else

  00656	eb 3f		 jmp	 SHORT $LN40@applicatio
$LN39@applicatio:

; 518  : 		{
; 519  : 
; 520  : 			set_global_3d_visual_screen_width ( 640 );

  00658	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@44200000
  00660	f3 0f 11 05 c4
	01 00 00	 movss	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452, xmm0

; 521  : 
; 522  : 			set_global_3d_visual_screen_height ( 480 );

  00668	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43f00000
  00670	f3 0f 11 05 c8
	01 00 00	 movss	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456, xmm0

; 523  : 
; 524  : 			ddraw_set_display_resolution ( get_global_3d_visual_screen_width (), get_global_3d_visual_screen_height (), full_screen_colourdepth, DISPLAY_FULLSCREEN );

  00678	6a 02		 push	 2
  0067a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?full_screen_colourdepth@@3HA ; full_screen_colourdepth
  0067f	50		 push	 eax
  00680	f3 0f 2c 0d c8
	01 00 00	 cvttss2si ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456
  00688	51		 push	 ecx
  00689	f3 0f 2c 15 c4
	01 00 00	 cvttss2si edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452
  00691	52		 push	 edx
  00692	e8 00 00 00 00	 call	 ?ddraw_set_display_resolution@@YGHHHHW4DISPLAY_TYPES@@@Z ; ddraw_set_display_resolution
$LN40@applicatio:

; 525  : 		}
; 526  : 	}
; 527  : 	else

  00697	eb 1f		 jmp	 SHORT $LN38@applicatio
$LN37@applicatio:

; 528  : 	{
; 529  : 		ddraw_set_display_resolution ( get_global_3d_visual_screen_width (), get_global_3d_visual_screen_height (), full_screen_colourdepth, DISPLAY_WINDOW );

  00699	6a 01		 push	 1
  0069b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?full_screen_colourdepth@@3HA ; full_screen_colourdepth
  006a0	50		 push	 eax
  006a1	f3 0f 2c 0d c8
	01 00 00	 cvttss2si ecx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+456
  006a9	51		 push	 ecx
  006aa	f3 0f 2c 15 c4
	01 00 00	 cvttss2si edx, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+452
  006b2	52		 push	 edx
  006b3	e8 00 00 00 00	 call	 ?ddraw_set_display_resolution@@YGHHHHW4DISPLAY_TYPES@@@Z ; ddraw_set_display_resolution
$LN38@applicatio:

; 530  : 	}
; 531  : 
; 532  : 	//
; 533  : 	// initialise the graphics rendering routines for this resolution
; 534  : 	//
; 535  : 
; 536  : 	initialise_graphics_rendering_system ();

  006b8	e8 00 00 00 00	 call	 ?initialise_graphics_rendering_system@@YGHXZ ; initialise_graphics_rendering_system

; 537  : 
; 538  : 	set_active_screen (video_screen);

  006bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  006c2	50		 push	 eax
  006c3	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 539  : 
; 540  : 	clear_screen ();

  006c8	e8 00 00 00 00	 call	 ?clear_screen@@YGXXZ	; clear_screen

; 541  : 
; 542  : 	ddraw_flip_surface ();

  006cd	e8 00 00 00 00	 call	 ?ddraw_flip_surface@@YGHXZ ; ddraw_flip_surface

; 543  : 
; 544  : 	//
; 545  : 	// Test the avis
; 546  : 	//
; 547  : 
; 548  : //	play_avi ( "downgattling.avi", 0 );
; 549  : 
; 550  : 	//
; 551  : 	// begin application
; 552  : 	//
; 553  : 
; 554  : 	game ();

  006d2	e8 00 00 00 00	 call	 ?game@@YGXXZ		; game

; 555  : 
; 556  : 	//VJ 030511 save automatically when leaving game to save all player choices in eech.ini
; 557  : 	dump_ini_file();

  006d7	e8 00 00 00 00	 call	 ?dump_ini_file@@YGXXZ	; dump_ini_file

; 558  : 
; 559  : 	//
; 560  : 	// end application
; 561  : 	//
; 562  : 
; 563  : 	end_application ();

  006dc	e8 00 00 00 00	 call	 ?end_application@@YGXXZ	; end_application

; 564  : 
; 565  : }

  006e1	5f		 pop	 edi
  006e2	5e		 pop	 esi
  006e3	5b		 pop	 ebx
  006e4	8b e5		 mov	 esp, ebp
  006e6	5d		 pop	 ebp
  006e7	c2 08 00	 ret	 8
  006ea	66 90		 npad	 2
$LN42@applicatio:
  006ec	00 00 00 00	 DD	 $LN23@applicatio
  006f0	00 00 00 00	 DD	 $LN24@applicatio
  006f4	00 00 00 00	 DD	 $LN25@applicatio
  006f8	00 00 00 00	 DD	 $LN26@applicatio
  006fc	00 00 00 00	 DD	 $LN27@applicatio
?application_main@@YGXHPAPAD@Z ENDP			; application_main
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\project.c
;	COMDAT ?set_apache_havoc_installation_path@@YGXXZ
_TEXT	SEGMENT
_aphavoc_path$1 = -4116					; size = 2048
_aphavoc_file$2 = -2068					; size = 2048
_string_length$3 = -20					; size = 4
_type$4 = -16						; size = 4
_apache_havoc_key$ = -12				; size = 4
_razorworks_key$ = -8					; size = 4
_software_key$ = -4					; size = 4
?set_apache_havoc_installation_path@@YGXXZ PROC		; set_apache_havoc_installation_path, COMDAT

; 598  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 14 12 00 00	 mov	 eax, 4628		; 00001214H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi

; 599  : 
; 600  : 	HKEY
; 601  : 		software_key,
; 602  : 		razorworks_key,
; 603  : 		apache_havoc_key;
; 604  : 
; 605  : 	apache_havoc_installation_path_valid = FALSE;

  00010	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?apache_havoc_installation_path_valid@@3HA, 0 ; apache_havoc_installation_path_valid

; 606  : 
; 607  : 	if ( RegOpenKey ( HKEY_LOCAL_MACHINE, "Software", &software_key ) == ERROR_SUCCESS )

  0001a	8d 45 fc	 lea	 eax, DWORD PTR _software_key$[ebp]
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_08KEKAJNJI@Software@
  00023	68 02 00 00 80	 push	 -2147483646		; 80000002H
  00028	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  0002e	85 c0		 test	 eax, eax
  00030	0f 85 86 00 00
	00		 jne	 $LN2@set_apache

; 608  : 	{
; 609  : 
; 610  : 		if ( RegOpenKey ( software_key, "Razorworks", &razorworks_key ) == ERROR_SUCCESS )

  00036	8d 45 f8	 lea	 eax, DWORD PTR _razorworks_key$[ebp]
  00039	50		 push	 eax
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BBNNMEOA@Razorworks@
  0003f	8b 4d fc	 mov	 ecx, DWORD PTR _software_key$[ebp]
  00042	51		 push	 ecx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  00049	85 c0		 test	 eax, eax
  0004b	75 65		 jne	 SHORT $LN3@set_apache

; 611  : 		{
; 612  : 
; 613  : 			if ( RegOpenKey ( razorworks_key, "Apache Havoc", &apache_havoc_key ) == ERROR_SUCCESS )

  0004d	8d 45 f4	 lea	 eax, DWORD PTR _apache_havoc_key$[ebp]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KLALKPBG@Apache?5Havoc@
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _razorworks_key$[ebp]
  00059	51		 push	 ecx
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  00060	85 c0		 test	 eax, eax
  00062	75 44		 jne	 SHORT $LN4@set_apache

; 614  : 			{
; 615  : 
; 616  : 				DWORD
; 617  : 					type;
; 618  : 
; 619  : 				long
; 620  : 					string_length;
; 621  : 
; 622  : 				string_length = sizeof ( apache_havoc_installation_path );

  00064	c7 45 ec 00 04
	00 00		 mov	 DWORD PTR _string_length$3[ebp], 1024 ; 00000400H

; 623  : 
; 624  : 				type = REG_SZ;

  0006b	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _type$4[ebp], 1

; 625  : 
; 626  : 				if ( RegQueryValueEx ( apache_havoc_key, "Installation Path", NULL, &type, ( LPBYTE ) apache_havoc_installation_path, ( LPDWORD ) &string_length ) == ERROR_SUCCESS )

  00072	8d 45 ec	 lea	 eax, DWORD PTR _string_length$3[ebp]
  00075	50		 push	 eax
  00076	68 00 00 00 00	 push	 OFFSET ?apache_havoc_installation_path@@3PADA ; apache_havoc_installation_path
  0007b	8d 4d f0	 lea	 ecx, DWORD PTR _type$4[ebp]
  0007e	51		 push	 ecx
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DEGFMGAC@Installation?5Path@
  00086	8b 55 f4	 mov	 edx, DWORD PTR _apache_havoc_key$[ebp]
  00089	52		 push	 edx
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24
  00090	85 c0		 test	 eax, eax
  00092	75 0a		 jne	 SHORT $LN5@set_apache

; 627  : 				{
; 628  : 
; 629  : 					apache_havoc_installation_path_valid = TRUE;

  00094	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?apache_havoc_installation_path_valid@@3HA, 1 ; apache_havoc_installation_path_valid
$LN5@set_apache:

; 630  : 				}
; 631  : 
; 632  : 				RegCloseKey ( apache_havoc_key );

  0009e	8b 45 f4	 mov	 eax, DWORD PTR _apache_havoc_key$[ebp]
  000a1	50		 push	 eax
  000a2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN4@set_apache:

; 633  : 			}
; 634  : 
; 635  : 			RegCloseKey ( razorworks_key );

  000a8	8b 45 f8	 mov	 eax, DWORD PTR _razorworks_key$[ebp]
  000ab	50		 push	 eax
  000ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN3@set_apache:

; 636  : 		}
; 637  : 
; 638  : 		RegCloseKey ( software_key );

  000b2	8b 45 fc	 mov	 eax, DWORD PTR _software_key$[ebp]
  000b5	50		 push	 eax
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN2@set_apache:

; 639  : 	}
; 640  : 
; 641  : 	if (!apache_havoc_installation_path_valid)  // check if we have aphavoc directory anyway

  000bc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?apache_havoc_installation_path_valid@@3HA, 0 ; apache_havoc_installation_path_valid
  000c3	0f 85 c0 00 00
	00		 jne	 $LN1@set_apache

; 642  : 	{
; 643  : 		char aphavoc_file[2048], aphavoc_path[2048];
; 644  : 
; 645  : 		snprintf(aphavoc_path, sizeof(aphavoc_path)-1, "%s\\..", comanche_hokum_installation_path);

  000c9	68 00 00 00 00	 push	 OFFSET ?comanche_hokum_installation_path@@3PADA ; comanche_hokum_installation_path
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_05BPCBICBK@?$CFs?2?4?4@
  000d3	68 ff 07 00 00	 push	 2047			; 000007ffH
  000d8	8d 85 ec ef ff
	ff		 lea	 eax, DWORD PTR _aphavoc_path$1[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 _sprintf_s
  000e4	83 c4 10	 add	 esp, 16			; 00000010H

; 646  : 		snprintf(aphavoc_file, sizeof(aphavoc_file)-1, "%s\\aphavoc\\aphavoc.exe", aphavoc_path);

  000e7	8d 85 ec ef ff
	ff		 lea	 eax, DWORD PTR _aphavoc_path$1[ebp]
  000ed	50		 push	 eax
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OMEBDKHA@?$CFs?2aphavoc?2aphavoc?4exe@
  000f3	68 ff 07 00 00	 push	 2047			; 000007ffH
  000f8	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _aphavoc_file$2[ebp]
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 _sprintf_s
  00104	83 c4 10	 add	 esp, 16			; 00000010H

; 647  : 
; 648  : 		if (!file_exist(aphavoc_file))

  00107	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _aphavoc_file$2[ebp]
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  00113	85 c0		 test	 eax, eax
  00115	75 3e		 jne	 SHORT $LN7@set_apache

; 649  : 		{
; 650  : 			snprintf(aphavoc_path, sizeof(aphavoc_path)-1, "%s", comanche_hokum_installation_path);

  00117	68 00 00 00 00	 push	 OFFSET ?comanche_hokum_installation_path@@3PADA ; comanche_hokum_installation_path
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00121	68 ff 07 00 00	 push	 2047			; 000007ffH
  00126	8d 85 ec ef ff
	ff		 lea	 eax, DWORD PTR _aphavoc_path$1[ebp]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 _sprintf_s
  00132	83 c4 10	 add	 esp, 16			; 00000010H

; 651  : 			snprintf(aphavoc_file, sizeof(aphavoc_file)-1, "%s\\aphavoc\\aphavoc.exe", aphavoc_path);

  00135	8d 85 ec ef ff
	ff		 lea	 eax, DWORD PTR _aphavoc_path$1[ebp]
  0013b	50		 push	 eax
  0013c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OMEBDKHA@?$CFs?2aphavoc?2aphavoc?4exe@
  00141	68 ff 07 00 00	 push	 2047			; 000007ffH
  00146	8d 8d ec f7 ff
	ff		 lea	 ecx, DWORD PTR _aphavoc_file$2[ebp]
  0014c	51		 push	 ecx
  0014d	e8 00 00 00 00	 call	 _sprintf_s
  00152	83 c4 10	 add	 esp, 16			; 00000010H
$LN7@set_apache:

; 652  : 		}
; 653  : 
; 654  : 		if (file_exist(aphavoc_file))

  00155	8d 85 ec f7 ff
	ff		 lea	 eax, DWORD PTR _aphavoc_file$2[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  00161	85 c0		 test	 eax, eax
  00163	74 24		 je	 SHORT $LN1@set_apache

; 655  : 		{
; 656  : 			strncpy(apache_havoc_installation_path, aphavoc_path, sizeof(apache_havoc_installation_path)-1);

  00165	68 ff 03 00 00	 push	 1023			; 000003ffH
  0016a	8d 85 ec ef ff
	ff		 lea	 eax, DWORD PTR _aphavoc_path$1[ebp]
  00170	50		 push	 eax
  00171	68 00 00 00 00	 push	 OFFSET ?apache_havoc_installation_path@@3PADA ; apache_havoc_installation_path
  00176	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncpy
  0017c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 657  : 			apache_havoc_installation_path_valid = TRUE;

  0017f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?apache_havoc_installation_path_valid@@3HA, 1 ; apache_havoc_installation_path_valid
$LN1@set_apache:

; 658  : 		}
; 659  : 	}
; 660  : }

  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
?set_apache_havoc_installation_path@@YGXXZ ENDP		; set_apache_havoc_installation_path
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\project.c
;	COMDAT ?set_comanche_hokum_installation_path@@YGXXZ
_TEXT	SEGMENT
_string_length$1 = -12					; size = 4
_type$2 = -8						; size = 4
_comanche_hokum_key$ = -4				; size = 4
?set_comanche_hokum_installation_path@@YGXXZ PROC	; set_comanche_hokum_installation_path, COMDAT

; 573  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 574  : 	HKEY comanche_hokum_key;
; 575  : 
; 576  : 	// JB 030311 Enable running out of separate directories
; 577  : 	if ( RegOpenKey ( HKEY_LOCAL_MACHINE, "Software\\Razorworks\\Comanche Hokum", &comanche_hokum_key ) == ERROR_SUCCESS )

  00009	8d 45 fc	 lea	 eax, DWORD PTR _comanche_hokum_key$[ebp]
  0000c	50		 push	 eax
  0000d	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LLJBMCPC@Software?2Razorworks?2Comanche?5Ho@
  00012	68 02 00 00 80	 push	 -2147483646		; 80000002H
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  0001d	85 c0		 test	 eax, eax
  0001f	75 2e		 jne	 SHORT $LN2@set_comanc

; 578  : 	{
; 579  : 		DWORD type;
; 580  : 		long string_length;
; 581  : 
; 582  : 		string_length = sizeof ( comanche_hokum_installation_path );

  00021	c7 45 f4 00 04
	00 00		 mov	 DWORD PTR _string_length$1[ebp], 1024 ; 00000400H

; 583  : 
; 584  : 		type = REG_SZ;

  00028	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _type$2[ebp], 1

; 585  : 
; 586  : 		RegQueryValueEx ( comanche_hokum_key, "Installation Path", NULL, &type, ( LPBYTE ) comanche_hokum_installation_path, ( LPDWORD ) &string_length );

  0002f	8d 45 f4	 lea	 eax, DWORD PTR _string_length$1[ebp]
  00032	50		 push	 eax
  00033	68 00 00 00 00	 push	 OFFSET ?comanche_hokum_installation_path@@3PADA ; comanche_hokum_installation_path
  00038	8d 4d f8	 lea	 ecx, DWORD PTR _type$2[ebp]
  0003b	51		 push	 ecx
  0003c	6a 00		 push	 0
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DEGFMGAC@Installation?5Path@
  00043	8b 55 fc	 mov	 edx, DWORD PTR _comanche_hokum_key$[ebp]
  00046	52		 push	 edx
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24
  0004d	eb 23		 jmp	 SHORT $LN3@set_comanc
$LN2@set_comanc:

; 587  : 	}
; 588  : 	else if (!GetCurrentDirectory(sizeof(comanche_hokum_installation_path) - 1, comanche_hokum_installation_path))

  0004f	68 00 00 00 00	 push	 OFFSET ?comanche_hokum_installation_path@@3PADA ; comanche_hokum_installation_path
  00054	68 ff 03 00 00	 push	 1023			; 000003ffH
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentDirectoryA@8
  0005f	85 c0		 test	 eax, eax
  00061	75 0f		 jne	 SHORT $LN3@set_comanc

; 589  : 		comanche_hokum_installation_path[0] = '\0';

  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	6b c8 00	 imul	 ecx, eax, 0
  0006b	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?comanche_hokum_installation_path@@3PADA[ecx], 0
$LN3@set_comanc:

; 590  : 
; 591  : 	RegCloseKey ( comanche_hokum_key );

  00072	8b 45 fc	 mov	 eax, DWORD PTR _comanche_hokum_key$[ebp]
  00075	50		 push	 eax
  00076	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4

; 592  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
?set_comanche_hokum_installation_path@@YGXXZ ENDP	; set_comanche_hokum_installation_path
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\project.c
;	COMDAT ?set_registry_language_settings@@YGXXZ
_TEXT	SEGMENT
_string_length$1 = -532					; size = 4
_type$2 = -528						; size = 4
_language_string$ = -524				; size = 512
_comanche_hokum_key$ = -12				; size = 4
_razorworks_key$ = -8					; size = 4
_software_key$ = -4					; size = 4
?set_registry_language_settings@@YGXXZ PROC		; set_registry_language_settings, COMDAT

; 667  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 02 00
	00		 sub	 esp, 660		; 00000294H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 668  : 
; 669  : 	HKEY
; 670  : 		software_key,
; 671  : 		razorworks_key,
; 672  : 		comanche_hokum_key;
; 673  : 
; 674  : 	char
; 675  : 		language_string[512];
; 676  : 
; 677  : 	set_global_current_language ( LANGUAGE_ENGLISH );

  0000c	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 0

; 678  : 
; 679  : 	if ( RegOpenKey ( HKEY_LOCAL_MACHINE, "Software", &software_key ) == ERROR_SUCCESS )

  00016	8d 45 fc	 lea	 eax, DWORD PTR _software_key$[ebp]
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_08KEKAJNJI@Software@
  0001f	68 02 00 00 80	 push	 -2147483646		; 80000002H
  00024	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  0002a	85 c0		 test	 eax, eax
  0002c	0f 85 78 01 00
	00		 jne	 $LN1@set_regist

; 680  : 	{
; 681  : 
; 682  : 		if ( RegOpenKey ( software_key, "Razorworks", &razorworks_key ) == ERROR_SUCCESS )

  00032	8d 45 f8	 lea	 eax, DWORD PTR _razorworks_key$[ebp]
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BBNNMEOA@Razorworks@
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _software_key$[ebp]
  0003e	51		 push	 ecx
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  00045	85 c0		 test	 eax, eax
  00047	0f 85 53 01 00
	00		 jne	 $LN3@set_regist

; 683  : 		{
; 684  : 
; 685  : 			if ( RegOpenKey ( razorworks_key, "Comanche Hokum", &comanche_hokum_key ) == ERROR_SUCCESS )

  0004d	8d 45 f4	 lea	 eax, DWORD PTR _comanche_hokum_key$[ebp]
  00050	50		 push	 eax
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MNJDFNPI@Comanche?5Hokum@
  00056	8b 4d f8	 mov	 ecx, DWORD PTR _razorworks_key$[ebp]
  00059	51		 push	 ecx
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegOpenKeyA@12
  00060	85 c0		 test	 eax, eax
  00062	0f 85 2e 01 00
	00		 jne	 $LN4@set_regist

; 686  : 			{
; 687  : 
; 688  : 				DWORD
; 689  : 					type;
; 690  : 
; 691  : 				long
; 692  : 					string_length;
; 693  : 
; 694  : 				string_length = sizeof ( language_string );

  00068	c7 85 ec fd ff
	ff 00 02 00 00	 mov	 DWORD PTR _string_length$1[ebp], 512 ; 00000200H

; 695  : 
; 696  : 				type = REG_SZ;

  00072	c7 85 f0 fd ff
	ff 01 00 00 00	 mov	 DWORD PTR _type$2[ebp], 1

; 697  : 
; 698  : 				if ( RegQueryValueEx ( comanche_hokum_key, "LANGUAGE", NULL, &type, ( LPBYTE ) &language_string, ( LPDWORD ) &string_length ) == ERROR_SUCCESS )

  0007c	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _string_length$1[ebp]
  00082	50		 push	 eax
  00083	8d 8d f4 fd ff
	ff		 lea	 ecx, DWORD PTR _language_string$[ebp]
  00089	51		 push	 ecx
  0008a	8d 95 f0 fd ff
	ff		 lea	 edx, DWORD PTR _type$2[ebp]
  00090	52		 push	 edx
  00091	6a 00		 push	 0
  00093	68 00 00 00 00	 push	 OFFSET ??_C@_08OJIOLCCH@LANGUAGE@
  00098	8b 45 f4	 mov	 eax, DWORD PTR _comanche_hokum_key$[ebp]
  0009b	50		 push	 eax
  0009c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegQueryValueExA@24
  000a2	85 c0		 test	 eax, eax
  000a4	0f 85 e2 00 00
	00		 jne	 $LN5@set_regist

; 699  : 				{
; 700  : 
; 701  : 					if ( stricmp ( language_string, "FRENCH" ) == 0 )			{ set_global_current_language ( LANGUAGE_FRENCH ); }

  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_06KFKKMHJN@FRENCH@
  000af	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  000b5	50		 push	 eax
  000b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  000bc	83 c4 08	 add	 esp, 8
  000bf	85 c0		 test	 eax, eax
  000c1	75 0f		 jne	 SHORT $LN6@set_regist
  000c3	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 1
  000cd	e9 ba 00 00 00	 jmp	 $LN5@set_regist
$LN6@set_regist:

; 702  : 					else if ( stricmp ( language_string, "GERMAN" ) == 0 )	{ set_global_current_language ( LANGUAGE_GERMAN ); }

  000d2	68 00 00 00 00	 push	 OFFSET ??_C@_06IIKFGJJO@GERMAN@
  000d7	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  000dd	50		 push	 eax
  000de	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  000e4	83 c4 08	 add	 esp, 8
  000e7	85 c0		 test	 eax, eax
  000e9	75 0f		 jne	 SHORT $LN8@set_regist
  000eb	c7 05 04 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 2
  000f5	e9 92 00 00 00	 jmp	 $LN5@set_regist
$LN8@set_regist:

; 703  : 					else if ( stricmp ( language_string, "ITALIAN" ) == 0 )	{ set_global_current_language ( LANGUAGE_ITALIAN ); }

  000fa	68 00 00 00 00	 push	 OFFSET ??_C@_07NLCMMKLO@ITALIAN@
  000ff	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  00105	50		 push	 eax
  00106	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  0010c	83 c4 08	 add	 esp, 8
  0010f	85 c0		 test	 eax, eax
  00111	75 0c		 jne	 SHORT $LN10@set_regist
  00113	c7 05 04 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 3
  0011d	eb 6d		 jmp	 SHORT $LN5@set_regist
$LN10@set_regist:

; 704  : 					else if ( stricmp ( language_string, "SPANISH" ) == 0 )	{ set_global_current_language ( LANGUAGE_SPANISH ); }

  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_07PBCAEALG@SPANISH@
  00124	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  0012a	50		 push	 eax
  0012b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  00131	83 c4 08	 add	 esp, 8
  00134	85 c0		 test	 eax, eax
  00136	75 0c		 jne	 SHORT $LN12@set_regist
  00138	c7 05 04 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 4
  00142	eb 48		 jmp	 SHORT $LN5@set_regist
$LN12@set_regist:

; 705  : 					else if ( stricmp ( language_string, "RUSSIAN" ) == 0 )	{ set_global_current_language ( LANGUAGE_RUSSIAN ); }

  00144	68 00 00 00 00	 push	 OFFSET ??_C@_07PACEEPLE@RUSSIAN@
  00149	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  0014f	50		 push	 eax
  00150	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  00156	83 c4 08	 add	 esp, 8
  00159	85 c0		 test	 eax, eax
  0015b	75 0c		 jne	 SHORT $LN14@set_regist
  0015d	c7 05 04 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 5
  00167	eb 23		 jmp	 SHORT $LN5@set_regist
$LN14@set_regist:

; 706  : 					else if ( stricmp ( language_string, "POLISH" ) == 0 )	{ set_global_current_language ( LANGUAGE_POLISH ); }

  00169	68 00 00 00 00	 push	 OFFSET ??_C@_06JCANIGJE@POLISH@
  0016e	8d 85 f4 fd ff
	ff		 lea	 eax, DWORD PTR _language_string$[ebp]
  00174	50		 push	 eax
  00175	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___stricmp
  0017b	83 c4 08	 add	 esp, 8
  0017e	85 c0		 test	 eax, eax
  00180	75 0a		 jne	 SHORT $LN5@set_regist
  00182	c7 05 04 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 6
$LN5@set_regist:

; 707  : 				}
; 708  : 
; 709  : 				RegCloseKey ( comanche_hokum_key );

  0018c	8b 45 f4	 mov	 eax, DWORD PTR _comanche_hokum_key$[ebp]
  0018f	50		 push	 eax
  00190	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN4@set_regist:

; 710  : 			}
; 711  : 
; 712  : 			RegCloseKey ( razorworks_key );

  00196	8b 45 f8	 mov	 eax, DWORD PTR _razorworks_key$[ebp]
  00199	50		 push	 eax
  0019a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN3@set_regist:

; 713  : 		}
; 714  : 
; 715  : 		RegCloseKey ( software_key );

  001a0	8b 45 fc	 mov	 eax, DWORD PTR _software_key$[ebp]
  001a3	50		 push	 eax
  001a4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegCloseKey@4
$LN1@set_regist:

; 716  : 	}
; 717  : }

  001aa	5f		 pop	 edi
  001ab	5e		 pop	 esi
  001ac	5b		 pop	 ebx
  001ad	8b e5		 mov	 esp, ebp
  001af	5d		 pop	 ebp
  001b0	c3		 ret	 0
?set_registry_language_settings@@YGXXZ ENDP		; set_registry_language_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf_s
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_sprintf_s PROC						; COMDAT

; 1841 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1842 :             int _Result;
; 1843 :             va_list _ArgList;
; 1844 :             __crt_va_start(_ArgList, _Format);

  00009	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1845 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 10	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 0c	 mov	 edx, DWORD PTR __BufferCount$[ebp]
  0001c	52		 push	 edx
  0001d	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 __vsprintf_s_l
  00026	83 c4 14	 add	 esp, 20			; 00000014H
  00029	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1846 :             __crt_va_end(_ArgList);

  0002c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1847 :             return _Result;

  00033	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1848 :         }

  00036	5f		 pop	 edi
  00037	5e		 pop	 esi
  00038	5b		 pop	 ebx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_sprintf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_s_l
_TEXT	SEGMENT
tv73 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsprintf_s_l PROC					; COMDAT

; 1497 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1498 :         int const _Result = __stdio_common_vsprintf_s(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00025	52		 push	 edx
  00026	8b 00		 mov	 eax, DWORD PTR [eax]
  00028	50		 push	 eax
  00029	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf_s
  0002f	83 c4 1c	 add	 esp, 28			; 0000001cH
  00032	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1499 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1500 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1501 : 
; 1502 :         return _Result < 0 ? -1 : _Result;

  00035	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  00039	7d 09		 jge	 SHORT $LN3@vsprintf_s
  0003b	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv73[ebp], -1
  00042	eb 06		 jmp	 SHORT $LN4@vsprintf_s
$LN3@vsprintf_s:
  00044	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  00047	89 45 b8	 mov	 DWORD PTR tv73[ebp], eax
$LN4@vsprintf_s:
  0004a	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]

; 1503 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	5b		 pop	 ebx
  00050	8b e5		 mov	 esp, ebp
  00052	5d		 pop	 ebp
  00053	c3		 ret	 0
__vsprintf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
