; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\sector\sc_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_sector_message_responses@@YGXXZ	; overload_sector_message_responses
PUBLIC	?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_link_child'::`1'::__LINE__Var
PUBLIC	??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z:PROC ; get_object_3d_bounding_box
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z:PROC ; add_mobile_values_to_sector
EXTRN	?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z:PROC ; remove_mobile_values_from_sector
EXTRN	?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z:PROC ; set_sector_fog_of_war_value
EXTRN	?game_status@@3W4GAME_STATUS_TYPES@@A:DWORD	; game_status
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
CONST	SEGMENT
??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ DB 'get_valid_curren'
	DB	't_game_session ()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\sector\sc_msg'
	DB	's.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 050H ; `response_to_link_child'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_msgs.c
;	COMDAT ?response_to_unlink_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
_list_type$ = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_unlink_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_unlink_child, COMDAT

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 237  : 
; 238  : 	list_types
; 239  : 		list_type;
; 240  : 
; 241  : 	#if DEBUG_MODULE
; 242  : 
; 243  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 244  : 
; 245  : 	#endif
; 246  : 
; 247  : 	list_type = va_arg( pargs, list_types );

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00018	89 55 fc	 mov	 DWORD PTR _list_type$[ebp], edx

; 248  : 
; 249  : 	if ( list_type == LIST_TYPE_SECTOR )

  0001b	83 7d fc 21	 cmp	 DWORD PTR _list_type$[ebp], 33 ; 00000021H
  0001f	75 0d		 jne	 SHORT $LN2@response_t

; 250  : 	{
; 251  : 		remove_mobile_values_from_sector (receiver, sender);

  00021	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00028	51		 push	 ecx
  00029	e8 00 00 00 00	 call	 ?remove_mobile_values_from_sector@@YGXPAUENTITY@@0@Z ; remove_mobile_values_from_sector
$LN2@response_t:

; 252  : 	}
; 253  : 
; 254  : 	return (TRUE);

  0002e	b8 01 00 00 00	 mov	 eax, 1

; 255  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 10 00	 ret	 16			; 00000010H
?response_to_unlink_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_unlink_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_msgs.c
;	COMDAT ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv222 = -112						; size = 4
tv201 = -112						; size = 4
tv182 = -112						; size = 4
tv156 = -112						; size = 4
tv133 = -112						; size = 4
tv80 = -112						; size = 4
tv248 = -108						; size = 4
tv214 = -108						; size = 4
tv194 = -108						; size = 4
tv175 = -108						; size = 4
tv148 = -108						; size = 4
tv93 = -108						; size = 4
tv73 = -108						; size = 4
_bounding_box$1 = -40					; size = 4
_object_3d_index$2 = -36				; size = 4
_position$3 = -32					; size = 4
_height$4 = -28						; size = 4
_session_type$ = -24					; size = 4
_list_type$ = -20					; size = 4
_side$ = -16						; size = 4
_raw$ = -12						; size = 4
_allied_force$ = -8					; size = 4
_enemy_force$ = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_link_child, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 
; 82   : 	entity
; 83   : 		*enemy_force,
; 84   : 		*allied_force;
; 85   : 
; 86   : 	sector
; 87   : 		*raw;
; 88   : 
; 89   : 	entity_sides
; 90   : 		side;
; 91   : 
; 92   : 	list_types
; 93   : 		list_type;
; 94   : 
; 95   : 	session_list_types
; 96   : 		session_type;
; 97   : 
; 98   : 	#if DEBUG_MODULE
; 99   : 
; 100  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 101  : 
; 102  : 	#endif
; 103  : 
; 104  : 	raw = (sector *) get_local_entity_data (receiver);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 105  : 
; 106  : 	list_type = va_arg (pargs, list_types);

  00012	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0001b	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	89 55 ec	 mov	 DWORD PTR _list_type$[ebp], edx

; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	if (list_type == LIST_TYPE_SECTOR)

  00024	83 7d ec 21	 cmp	 DWORD PTR _list_type$[ebp], 33 ; 00000021H
  00028	0f 85 1b 04 00
	00		 jne	 $LN13@response_t

; 111  : 	{
; 112  : 		float
; 113  : 			height;
; 114  : 
; 115  : 		vec3d
; 116  : 			*position;
; 117  : 
; 118  : 		object_3d_index_numbers
; 119  : 			object_3d_index;
; 120  : 
; 121  : 		object_3d_bounds
; 122  : 			*bounding_box;
; 123  : 
; 124  : 		//
; 125  : 		// check for tallest fixed structure
; 126  : 		//
; 127  : 
; 128  : 		if (get_local_entity_int_value (sender, INT_TYPE_IDENTIFY_FIXED))

  0002e	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00032	74 0a		 je	 SHORT $LN15@response_t
  00034	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00037	8b 08		 mov	 ecx, DWORD PTR [eax]
  00039	89 4d 94	 mov	 DWORD PTR tv73[ebp], ecx
  0003c	eb 1d		 jmp	 SHORT $LN16@response_t
$LN15@response_t:
  0003e	68 80 00 00 00	 push	 128			; 00000080H
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00048	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	52		 push	 edx
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN16@response_t:
  0005b	b8 01 00 00 00	 mov	 eax, 1
  00060	85 c0		 test	 eax, eax
  00062	74 09		 je	 SHORT $LN17@response_t
  00064	c7 45 90 5a 00
	00 00		 mov	 DWORD PTR tv80[ebp], 90	; 0000005aH
  0006b	eb 1d		 jmp	 SHORT $LN18@response_t
$LN17@response_t:
  0006d	68 80 00 00 00	 push	 128			; 00000080H
  00072	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00077	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00083	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN18@response_t:
  0008a	6a 5a		 push	 90			; 0000005aH
  0008c	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  0008f	52		 push	 edx
  00090	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv73[ebp], 1116
  00097	8b 4d 90	 mov	 ecx, DWORD PTR tv80[ebp]
  0009a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a1	ff d2		 call	 edx
  000a3	85 c0		 test	 eax, eax
  000a5	0f 84 46 01 00
	00		 je	 $LN5@response_t

; 129  : 		{
; 130  : 			object_3d_index = get_local_entity_int_value (sender, INT_TYPE_OBJECT_3D_SHAPE);

  000ab	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000af	74 0a		 je	 SHORT $LN19@response_t
  000b1	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	89 4d 94	 mov	 DWORD PTR tv93[ebp], ecx
  000b9	eb 21		 jmp	 SHORT $LN20@response_t
$LN19@response_t:
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000c1	83 c2 32	 add	 edx, 50			; 00000032H
  000c4	52		 push	 edx
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN20@response_t:
  000dc	b9 01 00 00 00	 mov	 ecx, 1
  000e1	85 c9		 test	 ecx, ecx
  000e3	74 09		 je	 SHORT $LN21@response_t
  000e5	c7 45 90 92 00
	00 00		 mov	 DWORD PTR tv133[ebp], 146 ; 00000092H
  000ec	eb 21		 jmp	 SHORT $LN22@response_t
$LN21@response_t:
  000ee	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000f4	83 c2 32	 add	 edx, 50			; 00000032H
  000f7	52		 push	 edx
  000f8	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00108	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN22@response_t:
  0010f	68 92 00 00 00	 push	 146			; 00000092H
  00114	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00117	51		 push	 ecx
  00118	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 1116
  0011f	8b 45 90	 mov	 eax, DWORD PTR tv133[ebp]
  00122	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00129	ff d1		 call	 ecx
  0012b	89 45 dc	 mov	 DWORD PTR _object_3d_index$2[ebp], eax

; 131  : 
; 132  : 			if (object_3d_index != OBJECT_3D_INVALID_OBJECT_INDEX)

  0012e	83 7d dc 00	 cmp	 DWORD PTR _object_3d_index$2[ebp], 0
  00132	0f 84 b9 00 00
	00		 je	 $LN5@response_t

; 133  : 			{
; 134  : 				bounding_box = get_object_3d_bounding_box (object_3d_index);

  00138	8b 45 dc	 mov	 eax, DWORD PTR _object_3d_index$2[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box
  00141	89 45 d8	 mov	 DWORD PTR _bounding_box$1[ebp], eax

; 135  : 
; 136  : 	 			position = get_local_entity_vec3d_ptr (sender, VEC3D_TYPE_POSITION);

  00144	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00148	74 0a		 je	 SHORT $LN23@response_t
  0014a	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0014d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0014f	89 4d 94	 mov	 DWORD PTR tv148[ebp], ecx
  00152	eb 21		 jmp	 SHORT $LN24@response_t
$LN23@response_t:
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0015a	83 c2 38	 add	 edx, 56			; 00000038H
  0015d	52		 push	 edx
  0015e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00168	50		 push	 eax
  00169	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN24@response_t:
  00175	b9 01 00 00 00	 mov	 ecx, 1
  0017a	85 c9		 test	 ecx, ecx
  0017c	74 09		 je	 SHORT $LN25@response_t
  0017e	c7 45 90 08 00
	00 00		 mov	 DWORD PTR tv156[ebp], 8
  00185	eb 21		 jmp	 SHORT $LN26@response_t
$LN25@response_t:
  00187	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0018d	83 c2 38	 add	 edx, 56			; 00000038H
  00190	52		 push	 edx
  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a1	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN26@response_t:
  001a8	6a 08		 push	 8
  001aa	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  001ad	51		 push	 ecx
  001ae	6b 55 94 60	 imul	 edx, DWORD PTR tv148[ebp], 96
  001b2	8b 45 90	 mov	 eax, DWORD PTR tv156[ebp]
  001b5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001bc	ff d1		 call	 ecx
  001be	89 45 e0	 mov	 DWORD PTR _position$3[ebp], eax

; 137  : 
; 138  : 				height = position->y + bounding_box->ymax;

  001c1	8b 45 e0	 mov	 eax, DWORD PTR _position$3[ebp]
  001c4	8b 4d d8	 mov	 ecx, DWORD PTR _bounding_box$1[ebp]
  001c7	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001cc	f3 0f 58 41 0c	 addss	 xmm0, DWORD PTR [ecx+12]
  001d1	f3 0f 11 45 e4	 movss	 DWORD PTR _height$4[ebp], xmm0

; 139  : 
; 140  : 				if (height > raw->tallest_structure_height)

  001d6	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  001d9	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _height$4[ebp]
  001de	0f 2f 40 10	 comiss	 xmm0, DWORD PTR [eax+16]
  001e2	76 0d		 jbe	 SHORT $LN5@response_t

; 141  : 				{
; 142  : 					raw->tallest_structure_height = height;

  001e4	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  001e7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _height$4[ebp]
  001ec	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0
$LN5@response_t:

; 143  : 				}
; 144  : 			}
; 145  : 		}
; 146  : 
; 147  : 		//
; 148  : 		// set defence levels / activity array
; 149  : 		//
; 150  : 
; 151  : 		add_mobile_values_to_sector (receiver, sender);

  001f1	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  001f4	50		 push	 eax
  001f5	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  001f8	51		 push	 ecx
  001f9	e8 00 00 00 00	 call	 ?add_mobile_values_to_sector@@YGXPAUENTITY@@0@Z ; add_mobile_values_to_sector

; 152  : 
; 153  : 		//
; 154  : 		// set side awareness + notify force
; 155  : 		//
; 156  : 
; 157  : 		if
; 158  : 		(
; 159  : 			(get_local_entity_int_value (sender, INT_TYPE_IDENTIFY_AIRCRAFT)) ||

  001fe	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00202	74 0a		 je	 SHORT $LN27@response_t
  00204	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00207	8b 08		 mov	 ecx, DWORD PTR [eax]
  00209	89 4d 94	 mov	 DWORD PTR tv175[ebp], ecx
  0020c	eb 1d		 jmp	 SHORT $LN28@response_t
$LN27@response_t:
  0020e	68 9f 00 00 00	 push	 159			; 0000009fH
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00218	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021e	52		 push	 edx
  0021f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00224	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv175[ebp], 0
$LN28@response_t:
  0022b	b8 01 00 00 00	 mov	 eax, 1
  00230	85 c0		 test	 eax, eax
  00232	74 09		 je	 SHORT $LN29@response_t
  00234	c7 45 90 57 00
	00 00		 mov	 DWORD PTR tv182[ebp], 87 ; 00000057H
  0023b	eb 1d		 jmp	 SHORT $LN30@response_t
$LN29@response_t:
  0023d	68 9f 00 00 00	 push	 159			; 0000009fH
  00242	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00247	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0024d	51		 push	 ecx
  0024e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00253	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv182[ebp], 0
$LN30@response_t:
  0025a	6a 57		 push	 87			; 00000057H
  0025c	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  0025f	52		 push	 edx
  00260	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv175[ebp], 1116
  00267	8b 4d 90	 mov	 ecx, DWORD PTR tv182[ebp]
  0026a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00271	ff d2		 call	 edx
  00273	85 c0		 test	 eax, eax
  00275	75 7d		 jne	 SHORT $LN7@response_t
  00277	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0027b	74 0a		 je	 SHORT $LN31@response_t
  0027d	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00280	8b 08		 mov	 ecx, DWORD PTR [eax]
  00282	89 4d 94	 mov	 DWORD PTR tv194[ebp], ecx
  00285	eb 1d		 jmp	 SHORT $LN32@response_t
$LN31@response_t:
  00287	68 a0 00 00 00	 push	 160			; 000000a0H
  0028c	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00291	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00297	52		 push	 edx
  00298	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0029d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN32@response_t:
  002a4	b8 01 00 00 00	 mov	 eax, 1
  002a9	85 c0		 test	 eax, eax
  002ab	74 09		 je	 SHORT $LN33@response_t
  002ad	c7 45 90 60 00
	00 00		 mov	 DWORD PTR tv201[ebp], 96 ; 00000060H
  002b4	eb 1d		 jmp	 SHORT $LN34@response_t
$LN33@response_t:
  002b6	68 a0 00 00 00	 push	 160			; 000000a0H
  002bb	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002c6	51		 push	 ecx
  002c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cc	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv201[ebp], 0
$LN34@response_t:
  002d3	6a 60		 push	 96			; 00000060H
  002d5	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  002d8	52		 push	 edx
  002d9	69 45 94 5c 04
	00 00		 imul	 eax, DWORD PTR tv194[ebp], 1116
  002e0	8b 4d 90	 mov	 ecx, DWORD PTR tv201[ebp]
  002e3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002ea	ff d2		 call	 edx
  002ec	85 c0		 test	 eax, eax
  002ee	0f 84 55 01 00
	00		 je	 $LN13@response_t
$LN7@response_t:

; 160  : 			(get_local_entity_int_value (sender, INT_TYPE_IDENTIFY_VEHICLE))
; 161  : 		)
; 162  : 		{
; 163  : 			side = (entity_sides) get_local_entity_int_value (sender, INT_TYPE_SIDE);

  002f4	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  002f8	74 0a		 je	 SHORT $LN35@response_t
  002fa	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  002fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ff	89 4d 94	 mov	 DWORD PTR tv214[ebp], ecx
  00302	eb 21		 jmp	 SHORT $LN36@response_t
$LN35@response_t:
  00304	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0030a	83 c2 53	 add	 edx, 83			; 00000053H
  0030d	52		 push	 edx
  0030e	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00313	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00318	50		 push	 eax
  00319	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031e	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv214[ebp], 0
$LN36@response_t:
  00325	b9 01 00 00 00	 mov	 ecx, 1
  0032a	85 c9		 test	 ecx, ecx
  0032c	74 09		 je	 SHORT $LN37@response_t
  0032e	c7 45 90 bb 00
	00 00		 mov	 DWORD PTR tv222[ebp], 187 ; 000000bbH
  00335	eb 21		 jmp	 SHORT $LN38@response_t
$LN37@response_t:
  00337	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0033d	83 c2 53	 add	 edx, 83			; 00000053H
  00340	52		 push	 edx
  00341	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00346	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0034b	50		 push	 eax
  0034c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00351	c7 45 90 00 00
	00 00		 mov	 DWORD PTR tv222[ebp], 0
$LN38@response_t:
  00358	68 bb 00 00 00	 push	 187			; 000000bbH
  0035d	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00360	51		 push	 ecx
  00361	69 55 94 5c 04
	00 00		 imul	 edx, DWORD PTR tv214[ebp], 1116
  00368	8b 45 90	 mov	 eax, DWORD PTR tv222[ebp]
  0036b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00372	ff d1		 call	 ecx
  00374	89 45 f0	 mov	 DWORD PTR _side$[ebp], eax

; 164  : 
; 165  : 			////////////////////////////////////////
; 166  : 			//
; 167  : 			// SIDE NOT NEUTRAL.......
; 168  : 			//
; 169  : 			////////////////////////////////////////
; 170  : 
; 171  : 			if (side == ENTITY_SIDE_NEUTRAL)

  00377	83 7d f0 00	 cmp	 DWORD PTR _side$[ebp], 0
  0037b	75 0a		 jne	 SHORT $LN8@response_t

; 172  : 			{
; 173  : 				return TRUE;

  0037d	b8 01 00 00 00	 mov	 eax, 1
  00382	e9 c7 00 00 00	 jmp	 $LN1@response_t
$LN8@response_t:

; 174  : 			}
; 175  : 
; 176  : 			ASSERT (get_valid_current_game_session ());

  00387	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A, 0 ; current_game_session
  0038e	75 18		 jne	 SHORT $LN9@response_t
  00390	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00395	83 c0 60	 add	 eax, 96			; 00000060H
  00398	50		 push	 eax
  00399	68 00 00 00 00	 push	 OFFSET ??_C@_0EM@GCFOODHN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039e	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
  003a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@response_t:

; 177  : 
; 178  : 			set_sector_fog_of_war_value (sender, receiver);

  003a8	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003ab	50		 push	 eax
  003ac	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  003af	51		 push	 ecx
  003b0	e8 00 00 00 00	 call	 ?set_sector_fog_of_war_value@@YGXPAUENTITY@@0@Z ; set_sector_fog_of_war_value

; 179  : 
; 180  : 			////////////////////////////////////////
; 181  : 			//
; 182  : 			// ONLY IF GAME INITIALISED......
; 183  : 			//
; 184  : 			////////////////////////////////////////
; 185  : 
; 186  : 			if (get_game_status () != GAME_STATUS_INITIALISED)

  003b5	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?game_status@@3W4GAME_STATUS_TYPES@@A, 3 ; game_status
  003bc	74 0a		 je	 SHORT $LN10@response_t

; 187  : 			{
; 188  : 				return TRUE;

  003be	b8 01 00 00 00	 mov	 eax, 1
  003c3	e9 86 00 00 00	 jmp	 $LN1@response_t
$LN10@response_t:

; 189  : 			}
; 190  : 
; 191  : 			////////////////////////////////////////
; 192  : 			//
; 193  : 			// SERVER ONLY...... 
; 194  : 			//
; 195  : 			////////////////////////////////////////
; 196  : 
; 197  : 			if (get_comms_model () == COMMS_MODEL_CLIENT)

  003c8	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 1 ; system_comms_model
  003cf	75 07		 jne	 SHORT $LN11@response_t

; 198  : 			{
; 199  : 				return TRUE;

  003d1	b8 01 00 00 00	 mov	 eax, 1
  003d6	eb 76		 jmp	 SHORT $LN1@response_t
$LN11@response_t:

; 200  : 			}
; 201  : 
; 202  : 			session_type = get_current_game_session_type ();

  003d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  003dd	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  003e0	89 4d e8	 mov	 DWORD PTR _session_type$[ebp], ecx

; 203  : 
; 204  : 			// sector occupation timer
; 205  : 
; 206  : 			//
; 207  : 			// notify force
; 208  : 			//
; 209  : 
; 210  : 			allied_force = get_local_force_entity (side);

  003e3	8b 45 f0	 mov	 eax, DWORD PTR _side$[ebp]
  003e6	50		 push	 eax
  003e7	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  003ec	89 45 f8	 mov	 DWORD PTR _allied_force$[ebp], eax

; 211  : 
; 212  : 			if (allied_force)

  003ef	83 7d f8 00	 cmp	 DWORD PTR _allied_force$[ebp], 0
  003f3	74 16		 je	 SHORT $LN12@response_t

; 213  : 			{
; 214  : 
; 215  : 				notify_local_entity (ENTITY_MESSAGE_FORCE_ENTERED_SECTOR, allied_force, sender, receiver);

  003f5	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003f8	50		 push	 eax
  003f9	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  003fc	51		 push	 ecx
  003fd	8b 55 f8	 mov	 edx, DWORD PTR _allied_force$[ebp]
  00400	52		 push	 edx
  00401	6a 16		 push	 22			; 00000016H
  00403	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00408	83 c4 10	 add	 esp, 16			; 00000010H
$LN12@response_t:

; 216  : 			}
; 217  : 
; 218  : 			enemy_force = get_local_force_entity (get_enemy_side (side));

  0040b	83 7d f0 01	 cmp	 DWORD PTR _side$[ebp], 1
  0040f	75 09		 jne	 SHORT $LN39@response_t
  00411	c7 45 94 02 00
	00 00		 mov	 DWORD PTR tv248[ebp], 2
  00418	eb 07		 jmp	 SHORT $LN40@response_t
$LN39@response_t:
  0041a	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv248[ebp], 1
$LN40@response_t:
  00421	8b 45 94	 mov	 eax, DWORD PTR tv248[ebp]
  00424	50		 push	 eax
  00425	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  0042a	89 45 fc	 mov	 DWORD PTR _enemy_force$[ebp], eax

; 219  : 
; 220  : 			if (enemy_force)

  0042d	83 7d fc 00	 cmp	 DWORD PTR _enemy_force$[ebp], 0
  00431	74 16		 je	 SHORT $LN13@response_t

; 221  : 			{
; 222  : 
; 223  : 				notify_local_entity (ENTITY_MESSAGE_FORCE_ENTERED_SECTOR, enemy_force, sender, receiver);

  00433	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00436	50		 push	 eax
  00437	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  0043a	51		 push	 ecx
  0043b	8b 55 fc	 mov	 edx, DWORD PTR _enemy_force$[ebp]
  0043e	52		 push	 edx
  0043f	6a 16		 push	 22			; 00000016H
  00441	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00446	83 c4 10	 add	 esp, 16			; 00000010H
$LN13@response_t:

; 224  : 			}
; 225  : 		}
; 226  : 	}
; 227  : 
; 228  : 	return (TRUE);

  00449	b8 01 00 00 00	 mov	 eax, 1
$LN1@response_t:

; 229  : }

  0044e	5f		 pop	 edi
  0044f	5e		 pop	 esi
  00450	5b		 pop	 ebx
  00451	8b e5		 mov	 esp, ebp
  00453	5d		 pop	 ebp
  00454	c2 10 00	 ret	 16			; 00000010H
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_link_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\sector\sc_msgs.c
;	COMDAT ?overload_sector_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_sector_message_responses@@YGXXZ PROC		; overload_sector_message_responses, COMDAT

; 292  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 293  : 	message_responses[ENTITY_TYPE_SECTOR][ENTITY_MESSAGE_LINK_CHILD]		= response_to_link_child;

  00009	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0000e	6b c8 19	 imul	 ecx, eax, 25
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 23	 imul	 eax, edx, 35
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_link_child

; 294  : 
; 295  : 	message_responses[ENTITY_TYPE_SECTOR][ENTITY_MESSAGE_UNLINK_CHILD]	= response_to_unlink_child;

  00024	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00029	6b c8 19	 imul	 ecx, eax, 25
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	6b c2 37	 imul	 eax, edx, 55
  00034	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_unlink_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_unlink_child

; 296  : 
; 297  : 	#if DEBUG_MODULE
; 298  : 
; 299  : 	message_responses[ENTITY_TYPE_SECTOR][ENTITY_MESSAGE_LINK_PARENT]		= response_to_link_parent;
; 300  : 
; 301  : 	message_responses[ENTITY_TYPE_SECTOR][ENTITY_MESSAGE_UNLINK_PARENT]	= response_to_unlink_parent;
; 302  : 
; 303  : 	#endif
; 304  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_sector_message_responses@@YGXXZ ENDP		; overload_sector_message_responses
_TEXT	ENDS
END
