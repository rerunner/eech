; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_anim.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B DD 000000000r ; 0 ; person_animation_database
	DD	043700000r			; 240
	DD	043700000r			; 240
	DD	00H
	DD	000000000r			; 0
	DD	03f4ccccdr			; 0.8
	DD	000000000r			; 0
	DD	042300000r			; 44
	DD	01H
	DD	03fc00000r			; 1.5
	DD	0402ccccdr			; 2.7
	DD	042700000r			; 60
	DD	042920000r			; 73
	DD	01H
	DD	03f19999ar			; 0.6
	DD	000000000r			; 0
	DD	043700000r			; 240
	DD	043b40000r			; 360
	DD	00H
	DD	040a00000r			; 5
	DD	000000000r			; 0
	DD	043b40000r			; 360
	DD	043f00000r			; 480
	DD	00H
	DD	040a00000r			; 5
	DD	000000000r			; 0
	DD	043f00000r			; 480
	DD	044160000r			; 600
	DD	00H
	DD	040a00000r			; 5
	DD	000000000r			; 0
	DD	044160000r			; 600
	DD	044340000r			; 720
	DD	00H
	DD	040000000r			; 2
CONST	ENDS
PUBLIC	?animate_person@@YGXPAUENTITY@@@Z		; animate_person
PUBLIC	?update_person_animation@@YGXPAUENTITY@@@Z	; update_person_animation
PUBLIC	?damage_person_3d_object@@YGXPAUENTITY@@@Z	; damage_person_3d_object
PUBLIC	?get_person_database_velocity@@YGMW4PERSON_ANIMATIONS@@@Z ; get_person_database_velocity
PUBLIC	?__LINE__Var@?0??animate_person@@YGXPAUENTITY@@@Z@4JA ; `animate_person'::`1'::__LINE__Var
PUBLIC	??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA ; `update_person_animation'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@IDBGNLLC@raw?9?$DOperson_animation_state?5?$DM?5N@ ; `string'
PUBLIC	?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA ; `damage_person_3d_object'::`1'::__LINE__Var
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff6666666666666
PUBLIC	__real@408f400000000000
PUBLIC	__real@40e00000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z:PROC ; construct_3d_object
EXTRN	?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; destruct_3d_object
EXTRN	?get_keyframed_animation_state@@YGXMPAHPAM@Z:PROC ; get_keyframed_animation_state
EXTRN	?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z:PROC ; update_entity_simple_keyframed_value
EXTRN	?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z:PROC ; animate_entity_simple_keyframed_sub_objects
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	__fltused:DWORD
;	COMDAT __real@40e00000
CONST	SEGMENT
__real@40e00000 DD 040e00000r			; 7
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@3ff6666666666666
CONST	SEGMENT
__real@3ff6666666666666 DQ 03ff6666666666666r	; 1.4
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA DD 0139H ; `damage_person_3d_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CP@IDBGNLLC@raw?9?$DOperson_animation_state?5?$DM?5N@
CONST	SEGMENT
??_C@_0CP@IDBGNLLC@raw?9?$DOperson_animation_state?5?$DM?5N@ DB 'raw->per'
	DB	'son_animation_state < NUM_PERSON_ANIMS', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA DD 0eeH ; `update_person_animation'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\person'
	DB	'\ps_anim.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??animate_person@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??animate_person@@YGXPAUENTITY@@@Z@4JA DD 0aeH ; `animate_person'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_anim.c
;	COMDAT ?get_person_database_velocity@@YGMW4PERSON_ANIMATIONS@@@Z
_TEXT	SEGMENT
_anim$ = 8						; size = 4
?get_person_database_velocity@@YGMW4PERSON_ANIMATIONS@@@Z PROC ; get_person_database_velocity, COMDAT

; 342  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 343  : 
; 344  : 	return person_animation_database [anim].velocity;

  00009	6b 45 08 14	 imul	 eax, DWORD PTR _anim$[ebp], 20
  0000d	d9 80 00 00 00
	00		 fld	 DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[eax]

; 345  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c2 04 00	 ret	 4
?get_person_database_velocity@@YGMW4PERSON_ANIMATIONS@@@Z ENDP ; get_person_database_velocity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_anim.c
;	COMDAT ?damage_person_3d_object@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv89 = -76						; size = 4
tv81 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?damage_person_3d_object@@YGXPAUENTITY@@@Z PROC		; damage_person_3d_object, COMDAT

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 314  : 	person
; 315  : 		*raw;
; 316  : 
; 317  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@damage_per
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@damage_per:

; 318  : 
; 319  : 	raw = (person *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 320  : 
; 321  : 	// destruct old object
; 322  : 
; 323  : 	destruct_3d_object (raw->vh.inst3d);

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00039	51		 push	 ecx
  0003a	e8 00 00 00 00	 call	 ?destruct_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; destruct_3d_object

; 324  : 
; 325  : 	// construct new (damaged) object
; 326  : 
; 327  : 	raw->vh.object_3d_shape = get_local_entity_int_value (en, INT_TYPE_DESTROYED_3D_SHAPE);

  0003f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00043	74 0a		 je	 SHORT $LN4@damage_per
  00045	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00048	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004a	89 4d b8	 mov	 DWORD PTR tv81[ebp], ecx
  0004d	eb 21		 jmp	 SHORT $LN5@damage_per
$LN4@damage_per:
  0004f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA
  00055	83 c2 0e	 add	 edx, 14			; 0000000eH
  00058	52		 push	 edx
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00069	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN5@damage_per:
  00070	b9 01 00 00 00	 mov	 ecx, 1
  00075	85 c9		 test	 ecx, ecx
  00077	74 09		 je	 SHORT $LN6@damage_per
  00079	c7 45 b4 2e 00
	00 00		 mov	 DWORD PTR tv89[ebp], 46	; 0000002eH
  00080	eb 21		 jmp	 SHORT $LN7@damage_per
$LN6@damage_per:
  00082	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_person_3d_object@@YGXPAUENTITY@@@Z@4JA
  00088	83 c2 0e	 add	 edx, 14			; 0000000eH
  0008b	52		 push	 edx
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN7@damage_per:
  000a3	6a 2e		 push	 46			; 0000002eH
  000a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a8	51		 push	 ecx
  000a9	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv81[ebp], 1116
  000b0	8b 45 b4	 mov	 eax, DWORD PTR tv89[ebp]
  000b3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ba	ff d1		 call	 ecx
  000bc	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000bf	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax

; 328  : 
; 329  : 	raw->vh.inst3d = construct_3d_object (raw->vh.object_3d_shape);

  000c5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c8	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000ce	51		 push	 ecx
  000cf	e8 00 00 00 00	 call	 ?construct_3d_object@@YGPAUOBJECT_3D_INSTANCE@@H@Z ; construct_3d_object
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000d7	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax

; 330  : 
; 331  : 	//set animation variable to start playing death anim
; 332  : 
; 333  : 	raw->person_animation_state = 0.0;

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e0	0f 57 c0	 xorps	 xmm0, xmm0
  000e3	f3 0f 11 80 78
	01 00 00	 movss	 DWORD PTR [eax+376], xmm0

; 334  : 
; 335  : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 04 00	 ret	 4
?damage_person_3d_object@@YGXPAUENTITY@@@Z ENDP		; damage_person_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_anim.c
;	COMDAT ?update_person_animation@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv86 = -96						; size = 4
tv154 = -92						; size = 4
tv152 = -92						; size = 4
tv150 = -92						; size = 4
tv148 = -92						; size = 4
tv146 = -92						; size = 4
tv79 = -92						; size = 4
_state_selector$1 = -24					; size = 4
_remainder$ = -20					; size = 4
_frequency$ = -16					; size = 4
_state$ = -12						; size = 4
_wrapped$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_person_animation@@YGXPAUENTITY@@@Z PROC		; update_person_animation, COMDAT

; 238  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 239  : 	person
; 240  : 		*raw;
; 241  : 
; 242  : 	int
; 243  : 		wrapped,
; 244  : 		state;
; 245  : 
; 246  : 	float
; 247  : 		frequency,
; 248  : 		remainder;
; 249  : 
; 250  : 	ASSERT( en );

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@update_per
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_per:

; 251  : 
; 252  : 	raw = (person *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 253  : 
; 254  : 	//update character animation
; 255  : 
; 256  : 	get_keyframed_animation_state (raw->person_animation_state, &state, &remainder);

  00030	8d 45 ec	 lea	 eax, DWORD PTR _remainder$[ebp]
  00033	50		 push	 eax
  00034	8d 4d f4	 lea	 ecx, DWORD PTR _state$[ebp]
  00037	51		 push	 ecx
  00038	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0003b	51		 push	 ecx
  0003c	f3 0f 10 82 78
	01 00 00	 movss	 xmm0, DWORD PTR [edx+376]
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 257  : 
; 258  : 	if (get_local_entity_int_value (en, INT_TYPE_ALIVE))

  0004e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00052	74 0a		 je	 SHORT $LN18@update_per
  00054	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00057	8b 08		 mov	 ecx, DWORD PTR [eax]
  00059	89 4d a4	 mov	 DWORD PTR tv79[ebp], ecx
  0005c	eb 1d		 jmp	 SHORT $LN19@update_per
$LN18@update_per:
  0005e	68 02 01 00 00	 push	 258			; 00000102H
  00063	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00068	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006e	52		 push	 edx
  0006f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00074	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv79[ebp], 0
$LN19@update_per:
  0007b	b8 01 00 00 00	 mov	 eax, 1
  00080	85 c0		 test	 eax, eax
  00082	74 09		 je	 SHORT $LN20@update_per
  00084	c7 45 a0 07 00
	00 00		 mov	 DWORD PTR tv86[ebp], 7
  0008b	eb 1d		 jmp	 SHORT $LN21@update_per
$LN20@update_per:
  0008d	68 02 01 00 00	 push	 258			; 00000102H
  00092	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00097	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009d	51		 push	 ecx
  0009e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a3	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv86[ebp], 0
$LN21@update_per:
  000aa	6a 07		 push	 7
  000ac	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000af	52		 push	 edx
  000b0	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv79[ebp], 1116
  000b7	8b 4d a0	 mov	 ecx, DWORD PTR tv86[ebp]
  000ba	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000c1	ff d2		 call	 edx
  000c3	85 c0		 test	 eax, eax
  000c5	0f 84 b2 01 00
	00		 je	 $LN5@update_per

; 259  : 	{
; 260  : 		if (state != PERSON_ANIM_NONE)

  000cb	83 7d f4 00	 cmp	 DWORD PTR _state$[ebp], 0
  000cf	0f 84 a6 01 00
	00		 je	 $LN15@update_per

; 261  : 		{
; 262  : 			frequency = 1.0 / person_animation_database[state].duration;

  000d5	6b 45 f4 14	 imul	 eax, DWORD PTR _state$[ebp], 20
  000d9	f3 0f 5a 80 10
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[eax+16]
  000e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000e9	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000ed	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000f1	f3 0f 11 45 f0	 movss	 DWORD PTR _frequency$[ebp], xmm0

; 263  : 
; 264  : 			wrapped = update_entity_simple_keyframed_value (en, &remainder, frequency);

  000f6	51		 push	 ecx
  000f7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _frequency$[ebp]
  000fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00101	8d 45 ec	 lea	 eax, DWORD PTR _remainder$[ebp]
  00104	50		 push	 eax
  00105	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00108	51		 push	 ecx
  00109	e8 00 00 00 00	 call	 ?update_entity_simple_keyframed_value@@YGHPAUENTITY@@PAMM@Z ; update_entity_simple_keyframed_value
  0010e	89 45 f8	 mov	 DWORD PTR _wrapped$[ebp], eax

; 265  : 
; 266  : 			if ( (wrapped) && (!person_animation_database[state].repeat) )

  00111	83 7d f8 00	 cmp	 DWORD PTR _wrapped$[ebp], 0
  00115	0f 84 1f 01 00
	00		 je	 $LN8@update_per
  0011b	6b 45 f4 14	 imul	 eax, DWORD PTR _state$[ebp], 20
  0011f	83 b8 0c 00 00
	00 00		 cmp	 DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[eax+12], 0
  00126	0f 85 0e 01 00
	00		 jne	 $LN8@update_per

; 267  : 			{
; 268  : 				int
; 269  : 					state_selector;
; 270  : 
; 271  : 				// set new animation that isn't same as previous
; 272  : 				state_selector = rand16 () % 4;

  0012c	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00136	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0013b	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00140	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00146	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00149	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0014f	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00155	79 05		 jns	 SHORT $LN30@update_per
  00157	49		 dec	 ecx
  00158	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0015b	41		 inc	 ecx
$LN30@update_per:
  0015c	89 4d e8	 mov	 DWORD PTR _state_selector$1[ebp], ecx

; 273  : 
; 274  : 				switch ( state_selector )

  0015f	8b 45 e8	 mov	 eax, DWORD PTR _state_selector$1[ebp]
  00162	89 45 a4	 mov	 DWORD PTR tv146[ebp], eax
  00165	83 7d a4 03	 cmp	 DWORD PTR tv146[ebp], 3
  00169	0f 87 80 00 00
	00		 ja	 $LN2@update_per
  0016f	8b 4d a4	 mov	 ecx, DWORD PTR tv146[ebp]
  00172	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN31@update_per[ecx*4]
$LN10@update_per:

; 275  : 				{
; 276  : 
; 277  : 					case 0: state = ( state == PERSON_ANIM_STAND1 ) ? PERSON_ANIM_STAND2 : PERSON_ANIM_STAND1; break;

  00179	83 7d f4 03	 cmp	 DWORD PTR _state$[ebp], 3
  0017d	75 09		 jne	 SHORT $LN22@update_per
  0017f	c7 45 a4 04 00
	00 00		 mov	 DWORD PTR tv148[ebp], 4
  00186	eb 07		 jmp	 SHORT $LN23@update_per
$LN22@update_per:
  00188	c7 45 a4 03 00
	00 00		 mov	 DWORD PTR tv148[ebp], 3
$LN23@update_per:
  0018f	8b 45 a4	 mov	 eax, DWORD PTR tv148[ebp]
  00192	89 45 f4	 mov	 DWORD PTR _state$[ebp], eax
  00195	eb 58		 jmp	 SHORT $LN2@update_per
$LN11@update_per:

; 278  : 					case 1: state = ( state == PERSON_ANIM_STAND2 ) ? PERSON_ANIM_STAND3 : PERSON_ANIM_STAND2; break;

  00197	83 7d f4 04	 cmp	 DWORD PTR _state$[ebp], 4
  0019b	75 09		 jne	 SHORT $LN24@update_per
  0019d	c7 45 a4 05 00
	00 00		 mov	 DWORD PTR tv150[ebp], 5
  001a4	eb 07		 jmp	 SHORT $LN25@update_per
$LN24@update_per:
  001a6	c7 45 a4 04 00
	00 00		 mov	 DWORD PTR tv150[ebp], 4
$LN25@update_per:
  001ad	8b 45 a4	 mov	 eax, DWORD PTR tv150[ebp]
  001b0	89 45 f4	 mov	 DWORD PTR _state$[ebp], eax
  001b3	eb 3a		 jmp	 SHORT $LN2@update_per
$LN12@update_per:

; 279  : 					case 2: state = ( state == PERSON_ANIM_STAND3 ) ? PERSON_ANIM_STAND4 : PERSON_ANIM_STAND3; break;

  001b5	83 7d f4 05	 cmp	 DWORD PTR _state$[ebp], 5
  001b9	75 09		 jne	 SHORT $LN26@update_per
  001bb	c7 45 a4 06 00
	00 00		 mov	 DWORD PTR tv152[ebp], 6
  001c2	eb 07		 jmp	 SHORT $LN27@update_per
$LN26@update_per:
  001c4	c7 45 a4 05 00
	00 00		 mov	 DWORD PTR tv152[ebp], 5
$LN27@update_per:
  001cb	8b 45 a4	 mov	 eax, DWORD PTR tv152[ebp]
  001ce	89 45 f4	 mov	 DWORD PTR _state$[ebp], eax
  001d1	eb 1c		 jmp	 SHORT $LN2@update_per
$LN13@update_per:

; 280  : 					case 3: state = ( state == PERSON_ANIM_STAND4 ) ? PERSON_ANIM_STAND1 : PERSON_ANIM_STAND4; break;

  001d3	83 7d f4 06	 cmp	 DWORD PTR _state$[ebp], 6
  001d7	75 09		 jne	 SHORT $LN28@update_per
  001d9	c7 45 a4 03 00
	00 00		 mov	 DWORD PTR tv154[ebp], 3
  001e0	eb 07		 jmp	 SHORT $LN29@update_per
$LN28@update_per:
  001e2	c7 45 a4 06 00
	00 00		 mov	 DWORD PTR tv154[ebp], 6
$LN29@update_per:
  001e9	8b 45 a4	 mov	 eax, DWORD PTR tv154[ebp]
  001ec	89 45 f4	 mov	 DWORD PTR _state$[ebp], eax
$LN2@update_per:

; 281  : 				}
; 282  : 				
; 283  : 				remainder = 0.0;

  001ef	0f 57 c0	 xorps	 xmm0, xmm0
  001f2	f3 0f 11 45 ec	 movss	 DWORD PTR _remainder$[ebp], xmm0

; 284  : 		
; 285  : 				raw->person_animation_state = state + remainder;

  001f7	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _state$[ebp]
  001fc	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _remainder$[ebp]
  00201	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00204	f3 0f 11 80 78
	01 00 00	 movss	 DWORD PTR [eax+376], xmm0

; 286  : 
; 287  : 				ASSERT ( raw->person_animation_state < NUM_PERSON_ANIMS );

  0020c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0020f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40e00000
  00217	0f 2f 80 78 01
	00 00		 comiss	 xmm0, DWORD PTR [eax+376]
  0021e	77 18		 ja	 SHORT $LN14@update_per
  00220	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA
  00225	83 c0 31	 add	 eax, 49			; 00000031H
  00228	50		 push	 eax
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IDBGNLLC@raw?9?$DOperson_animation_state?5?$DM?5N@
  00233	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@update_per:

; 288  : 			}
; 289  : 			else

  00238	eb 41		 jmp	 SHORT $LN15@update_per
$LN8@update_per:

; 290  : 			{
; 291  : 				raw->person_animation_state = state + remainder;

  0023a	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _state$[ebp]
  0023f	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _remainder$[ebp]
  00244	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00247	f3 0f 11 80 78
	01 00 00	 movss	 DWORD PTR [eax+376], xmm0

; 292  : 
; 293  : 				ASSERT ( raw->person_animation_state < NUM_PERSON_ANIMS );

  0024f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00252	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40e00000
  0025a	0f 2f 80 78 01
	00 00		 comiss	 xmm0, DWORD PTR [eax+376]
  00261	77 18		 ja	 SHORT $LN15@update_per
  00263	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_person_animation@@YGXPAUENTITY@@@Z@4JA
  00268	83 c0 37	 add	 eax, 55			; 00000037H
  0026b	50		 push	 eax
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00271	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@IDBGNLLC@raw?9?$DOperson_animation_state?5?$DM?5N@
  00276	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN15@update_per:

; 294  : 			}
; 295  : 		}
; 296  : 	}
; 297  : 	else

  0027b	eb 56		 jmp	 SHORT $LN16@update_per
$LN5@update_per:

; 298  : 	{
; 299  : 		raw->person_animation_state += 1.4 * get_entity_movement_delta_time ();

  0027d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00285	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff6666666666666
  0028d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00290	f3 0f 5a 88 78
	01 00 00	 cvtss2sd xmm1, DWORD PTR [eax+376]
  00298	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0029c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002a0	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002a3	f3 0f 11 81 78
	01 00 00	 movss	 DWORD PTR [ecx+376], xmm0

; 300  : 
; 301  : 		if (raw->person_animation_state >= 1.0)

  002ab	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002ae	f3 0f 5a 80 78
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+376]
  002b6	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  002be	72 13		 jb	 SHORT $LN16@update_per

; 302  : 		{
; 303  : 			raw->person_animation_state = 1.0;

  002c0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002cb	f3 0f 11 80 78
	01 00 00	 movss	 DWORD PTR [eax+376], xmm0
$LN16@update_per:

; 304  : 		}
; 305  : 	}
; 306  : }

  002d3	5f		 pop	 edi
  002d4	5e		 pop	 esi
  002d5	5b		 pop	 ebx
  002d6	8b e5		 mov	 esp, ebp
  002d8	5d		 pop	 ebp
  002d9	c2 04 00	 ret	 4
$LN31@update_per:
  002dc	00 00 00 00	 DD	 $LN10@update_per
  002e0	00 00 00 00	 DD	 $LN11@update_per
  002e4	00 00 00 00	 DD	 $LN12@update_per
  002e8	00 00 00 00	 DD	 $LN13@update_per
?update_person_animation@@YGXPAUENTITY@@@Z ENDP		; update_person_animation
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\person\ps_anim.c
;	COMDAT ?animate_person@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv133 = -92						; size = 4
tv82 = -92						; size = 4
tv94 = -88						; size = 4
tv75 = -88						; size = 4
_position$ = -20					; size = 4
_remainder$ = -16					; size = 4
_scale$ = -12						; size = 4
_state$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?animate_person@@YGXPAUENTITY@@@Z PROC			; animate_person, COMDAT

; 174  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 175  : 	person
; 176  : 		*raw;
; 177  : 	
; 178  : 	int
; 179  : 		state;
; 180  : 			
; 181  : 	float
; 182  : 		scale,
; 183  : 		remainder,
; 184  : 		position;
; 185  : 	
; 186  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@animate_pe
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??animate_person@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0c	 add	 eax, 12			; 0000000cH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@animate_pe:

; 187  : 	
; 188  : 	raw = (person *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 189  : 
; 190  : 	if (get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00030	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00034	74 0a		 je	 SHORT $LN7@animate_pe
  00036	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00039	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003b	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  0003e	eb 1d		 jmp	 SHORT $LN8@animate_pe
$LN7@animate_pe:
  00040	68 be 00 00 00	 push	 190			; 000000beH
  00045	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00050	52		 push	 edx
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00056	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@animate_pe:
  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	85 c0		 test	 eax, eax
  00064	74 09		 je	 SHORT $LN9@animate_pe
  00066	c7 45 a4 07 00
	00 00		 mov	 DWORD PTR tv82[ebp], 7
  0006d	eb 1d		 jmp	 SHORT $LN10@animate_pe
$LN9@animate_pe:
  0006f	68 be 00 00 00	 push	 190			; 000000beH
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007f	51		 push	 ecx
  00080	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00085	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN10@animate_pe:
  0008c	6a 07		 push	 7
  0008e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00091	52		 push	 edx
  00092	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv75[ebp], 1116
  00099	8b 4d a4	 mov	 ecx, DWORD PTR tv82[ebp]
  0009c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a3	ff d2		 call	 edx
  000a5	85 c0		 test	 eax, eax
  000a7	0f 84 68 01 00
	00		 je	 $LN3@animate_pe

; 191  : 	{
; 192  : 		if (get_local_entity_int_value (en, INT_TYPE_OBJECT_DRAWN_ONCE_THIS_FRAME))

  000ad	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b1	74 0a		 je	 SHORT $LN11@animate_pe
  000b3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	89 4d a8	 mov	 DWORD PTR tv94[ebp], ecx
  000bb	eb 1d		 jmp	 SHORT $LN12@animate_pe
$LN11@animate_pe:
  000bd	68 c0 00 00 00	 push	 192			; 000000c0H
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cd	52		 push	 edx
  000ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d3	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN12@animate_pe:
  000da	b8 01 00 00 00	 mov	 eax, 1
  000df	85 c0		 test	 eax, eax
  000e1	74 09		 je	 SHORT $LN13@animate_pe
  000e3	c7 45 a4 93 00
	00 00		 mov	 DWORD PTR tv133[ebp], 147 ; 00000093H
  000ea	eb 1d		 jmp	 SHORT $LN14@animate_pe
$LN13@animate_pe:
  000ec	68 c0 00 00 00	 push	 192			; 000000c0H
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@EOFEJJDC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN14@animate_pe:
  00109	68 93 00 00 00	 push	 147			; 00000093H
  0010e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00111	52		 push	 edx
  00112	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv94[ebp], 1116
  00119	8b 4d a4	 mov	 ecx, DWORD PTR tv133[ebp]
  0011c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00123	ff d2		 call	 edx
  00125	85 c0		 test	 eax, eax
  00127	74 05		 je	 SHORT $LN5@animate_pe

; 193  : 		{
; 194  : 			return;

  00129	e9 7b 01 00 00	 jmp	 $LN1@animate_pe
$LN5@animate_pe:

; 195  : 		}
; 196  : 	
; 197  : 		get_keyframed_animation_state (raw->person_animation_state, &state, &remainder);

  0012e	8d 45 f0	 lea	 eax, DWORD PTR _remainder$[ebp]
  00131	50		 push	 eax
  00132	8d 4d f8	 lea	 ecx, DWORD PTR _state$[ebp]
  00135	51		 push	 ecx
  00136	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00139	51		 push	 ecx
  0013a	f3 0f 10 82 78
	01 00 00	 movss	 xmm0, DWORD PTR [edx+376]
  00142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00147	e8 00 00 00 00	 call	 ?get_keyframed_animation_state@@YGXMPAHPAM@Z ; get_keyframed_animation_state

; 198  : 	
; 199  : 		scale = (person_animation_database[state].end - person_animation_database[state].start);

  0014c	6b 45 f8 14	 imul	 eax, DWORD PTR _state$[ebp], 20
  00150	6b 4d f8 14	 imul	 ecx, DWORD PTR _state$[ebp], 20
  00154	f3 0f 10 80 08
	00 00 00	 movss	 xmm0, DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[eax+8]
  0015c	f3 0f 5c 81 04
	00 00 00	 subss	 xmm0, DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[ecx+4]
  00164	f3 0f 11 45 f4	 movss	 DWORD PTR _scale$[ebp], xmm0

; 200  : 					
; 201  : 		position = (remainder * scale + person_animation_database[state].start) / PERSON_ANIMATION_TOTAL_LENGTH;

  00169	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _remainder$[ebp]
  0016e	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _scale$[ebp]
  00173	6b 45 f8 14	 imul	 eax, DWORD PTR _state$[ebp], 20
  00177	f3 0f 58 80 04
	00 00 00	 addss	 xmm0, DWORD PTR ?person_animation_database@@3QBUPERSON_ANIMATION_DATA@@B[eax+4]
  0017f	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00183	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@408f400000000000
  0018b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0018f	f3 0f 11 45 ec	 movss	 DWORD PTR _position$[ebp], xmm0

; 202  : 					
; 203  : 		#ifdef DEBUG_PERSON_ANIMATION
; 204  : 	
; 205  : 		if (en == get_external_view_entity ())
; 206  : 		{
; 207  : 			debug_log ("frame :%f", (position * PERSON_ANIMATION_TOTAL_LENGTH));
; 208  : 		}
; 209  : 	
; 210  : 		#endif
; 211  : 	
; 212  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_TORSO, position);

  00194	51		 push	 ecx
  00195	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _position$[ebp]
  0019a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019f	68 f6 00 00 00	 push	 246			; 000000f6H
  001a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001a7	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001ad	51		 push	 ecx
  001ae	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 213  : 	
; 214  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_ARM, position);

  001b3	51		 push	 ecx
  001b4	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _position$[ebp]
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	68 f8 00 00 00	 push	 248			; 000000f8H
  001c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001c6	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001cc	51		 push	 ecx
  001cd	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 215  : 	
; 216  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_HEAD, position);

  001d2	51		 push	 ecx
  001d3	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _position$[ebp]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	68 f9 00 00 00	 push	 249			; 000000f9H
  001e2	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001e5	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001eb	51		 push	 ecx
  001ec	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 217  : 	
; 218  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_LEG, position);

  001f1	51		 push	 ecx
  001f2	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _position$[ebp]
  001f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fc	68 f7 00 00 00	 push	 247			; 000000f7H
  00201	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00204	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0020a	51		 push	 ecx
  0020b	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 219  : 	}
; 220  : 	else

  00210	e9 94 00 00 00	 jmp	 $LN4@animate_pe
$LN3@animate_pe:

; 221  : 	{
; 222  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_TORSO, raw->person_animation_state);

  00215	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00218	51		 push	 ecx
  00219	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  00221	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00226	68 f6 00 00 00	 push	 246			; 000000f6H
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0022e	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00234	52		 push	 edx
  00235	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 223  : 	
; 224  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_ARM, raw->person_animation_state);

  0023a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0023d	51		 push	 ecx
  0023e	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  00246	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024b	68 f8 00 00 00	 push	 248			; 000000f8H
  00250	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00253	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00259	52		 push	 edx
  0025a	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 225  : 	
; 226  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_HEAD, raw->person_animation_state);

  0025f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00262	51		 push	 ecx
  00263	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  0026b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00270	68 f9 00 00 00	 push	 249			; 000000f9H
  00275	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00278	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  0027e	52		 push	 edx
  0027f	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects

; 227  : 	
; 228  : 		animate_entity_simple_keyframed_sub_objects (raw->vh.inst3d, OBJECT_3D_SUB_OBJECT_TROOP_LEG, raw->person_animation_state);

  00284	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00287	51		 push	 ecx
  00288	f3 0f 10 80 78
	01 00 00	 movss	 xmm0, DWORD PTR [eax+376]
  00290	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00295	68 f7 00 00 00	 push	 247			; 000000f7H
  0029a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0029d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  002a3	52		 push	 edx
  002a4	e8 00 00 00 00	 call	 ?animate_entity_simple_keyframed_sub_objects@@YGXPAUOBJECT_3D_INSTANCE@@HM@Z ; animate_entity_simple_keyframed_sub_objects
$LN4@animate_pe:
$LN1@animate_pe:

; 229  : 	}
; 230  : 
; 231  : }

  002a9	5f		 pop	 edi
  002aa	5e		 pop	 esi
  002ab	5b		 pop	 ebx
  002ac	8b e5		 mov	 esp, ebp
  002ae	5d		 pop	 ebp
  002af	c2 04 00	 ret	 4
?animate_person@@YGXPAUENTITY@@@Z ENDP			; animate_person
_TEXT	ENDS
END
