; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?engine_start_switch_animation_object@@3PAUcockpit_switch@@A ; engine_start_switch_animation_object
PUBLIC	?apu_start_switch_animation_object@@3PAUcockpit_switch@@A ; apu_start_switch_animation_object
PUBLIC	?apu_stop_switch_animation_object@@3PAUcockpit_switch@@A ; apu_stop_switch_animation_object
PUBLIC	?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
PUBLIC	?pilot_head_pitch_datum@@3MA			; pilot_head_pitch_datum
PUBLIC	?co_pilot_head_pitch_datum@@3MA			; co_pilot_head_pitch_datum
_BSS	SEGMENT
?engine_start_switch_animation_object@@3PAUcockpit_switch@@A DD 01H DUP (?) ; engine_start_switch_animation_object
?apu_start_switch_animation_object@@3PAUcockpit_switch@@A DD 01H DUP (?) ; apu_start_switch_animation_object
?apu_stop_switch_animation_object@@3PAUcockpit_switch@@A DD 01H DUP (?) ; apu_stop_switch_animation_object
?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A DD 01H DUP (?) ; virtual_cockpit_inst3d
?pilot_head_pitch_datum@@3MA DD 01H DUP (?)		; pilot_head_pitch_datum
?co_pilot_head_pitch_datum@@3MA DD 01H DUP (?)		; co_pilot_head_pitch_datum
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?pre_initialise_common_virtual_cockpit@@YGXXZ	; pre_initialise_common_virtual_cockpit
PUBLIC	?initialise_common_virtual_cockpit@@YGXXZ	; initialise_common_virtual_cockpit
PUBLIC	?deinitialise_common_virtual_cockpit@@YGXXZ	; deinitialise_common_virtual_cockpit
PUBLIC	?update_common_virtual_cockpit@@YGXXZ		; update_common_virtual_cockpit
PUBLIC	?damage_virtual_cockpit_main_rotors@@YGXH@Z	; damage_virtual_cockpit_main_rotors
PUBLIC	?restore_virtual_cockpit_main_rotors@@YGXXZ	; restore_virtual_cockpit_main_rotors
PUBLIC	?draw_virtual_cockpit_periscope_mask@@YGXHHH@Z	; draw_virtual_cockpit_periscope_mask
PUBLIC	?TIR_looking_in_periscope@@YGHXZ		; TIR_looking_in_periscope
PUBLIC	?initialise_switch@@YGXPAUcockpit_switch@@PAMMMM@Z ; initialise_switch
PUBLIC	?press_switch@@YGXPAUcockpit_switch@@@Z		; press_switch
PUBLIC	?animate_switch@@YGXPAUcockpit_switch@@@Z	; animate_switch
PUBLIC	?print_edit_wide_cockpit@@YGXXZ			; print_edit_wide_cockpit
PUBLIC	?move_edit_wide_cockpit@@YGXXZ			; move_edit_wide_cockpit
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0FA@KFFFMAIE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CN@NIMJAMFH@?$CFs?5wide?5cockpit?5mod?5edit?5?$CIset?5f@ ; `string'
PUBLIC	??_C@_0FF@GGELDMED@X?3?5num1?13?$DL?5Y?3?5num?58?12?$DL?5Z?3?5num?54@ ; `string'
PUBLIC	??_C@_0CD@PJCNCGFI@x?$DN?$CF?43f?0?5y?$DN?$CF?43f?0?5z?$DN?$CF?43f?0?5pitch?$DN?$CF@ ; `string'
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3e19999a
PUBLIC	__real@3e333333
PUBLIC	__real@3e8ccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f19999a
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3fc6571848000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@41200000
PUBLIC	__real@42200000
PUBLIC	__real@42700000
PUBLIC	__real@42c80000
PUBLIC	__real@bca3d70a
PUBLIC	__real@bd4ccccd
PUBLIC	__real@bda3d70a
PUBLIC	__real@bfc6571848000000
PUBLIC	__real@bfe0c15236000000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?check_key@@YGHF@Z:PROC				; check_key
EXTRN	?set_d3d_transparency_on@@YGXXZ:PROC		; set_d3d_transparency_on
EXTRN	?set_d3d_transparency_off@@YGXXZ:PROC		; set_d3d_transparency_off
EXTRN	?set_d3d_zbuffer_comparison@@YGXH@Z:PROC	; set_d3d_zbuffer_comparison
EXTRN	?set_d3d_culling@@YGXH@Z:PROC			; set_d3d_culling
EXTRN	?set_d3d_texture_wrapping@@YGXHH@Z:PROC		; set_d3d_texture_wrapping
EXTRN	?set_d3d_texture_filtering@@YGXH@Z:PROC		; set_d3d_texture_filtering
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?get_system_texture_ptr@@YGPAUSCREEN@@H@Z:PROC	; get_system_texture_ptr
EXTRN	?ui_display_text@@YGMPBDMM@Z:PROC		; ui_display_text
EXTRN	?set_3d_active_environment@@YGXPAUENV_3D@@@Z:PROC ; set_3d_active_environment
EXTRN	?begin_3d_scene@@YGHXZ:PROC			; begin_3d_scene
EXTRN	?end_3d_scene@@YGXXZ:PROC			; end_3d_scene
EXTRN	?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ:PROC ; initialise_common_virtual_cockpit_wiper_and_rain_effect
EXTRN	?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ:PROC ; deinitialise_common_virtual_cockpit_wiper_and_rain_effect
EXTRN	?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ:PROC ; update_common_virtual_cockpit_wiper_and_rain_effect
EXTRN	?damage_apache_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_apache_virtual_cockpit_main_rotors
EXTRN	?restore_apache_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_apache_virtual_cockpit_main_rotors
EXTRN	?damage_comanche_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_comanche_virtual_cockpit_main_rotors
EXTRN	?restore_comanche_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_comanche_virtual_cockpit_main_rotors
EXTRN	?damage_havoc_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_havoc_virtual_cockpit_main_rotors
EXTRN	?restore_havoc_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_havoc_virtual_cockpit_main_rotors
EXTRN	?damage_hokum_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_hokum_virtual_cockpit_main_rotors
EXTRN	?restore_hokum_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_hokum_virtual_cockpit_main_rotors
EXTRN	?damage_blackhawk_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_blackhawk_virtual_cockpit_main_rotors
EXTRN	?restore_blackhawk_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_blackhawk_virtual_cockpit_main_rotors
EXTRN	?damage_hind_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_hind_virtual_cockpit_main_rotors
EXTRN	?damage_hind_3d_cockpit_main_rotors@@YGXH@Z:PROC ; damage_hind_3d_cockpit_main_rotors
EXTRN	?restore_hind_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_hind_virtual_cockpit_main_rotors
EXTRN	?restore_hind_3d_cockpit_main_rotors@@YGXXZ:PROC ; restore_hind_3d_cockpit_main_rotors
EXTRN	?damage_ah64a_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_ah64a_virtual_cockpit_main_rotors
EXTRN	?restore_ah64a_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_ah64a_virtual_cockpit_main_rotors
EXTRN	?damage_ka50_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_ka50_virtual_cockpit_main_rotors
EXTRN	?restore_ka50_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_ka50_virtual_cockpit_main_rotors
EXTRN	?damage_viper_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_viper_virtual_cockpit_main_rotors
EXTRN	?restore_viper_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_viper_virtual_cockpit_main_rotors
EXTRN	?damage_kiowa_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_kiowa_virtual_cockpit_main_rotors
EXTRN	?restore_kiowa_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_kiowa_virtual_cockpit_main_rotors
EXTRN	?damage_default_virtual_cockpit_main_rotors@@YGXH@Z:PROC ; damage_default_virtual_cockpit_main_rotors
EXTRN	?restore_default_virtual_cockpit_main_rotors@@YGXXZ:PROC ; restore_default_virtual_cockpit_main_rotors
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?custom_3d_models@@3Uinstalled_custom_3d_models@@A:QWORD ; custom_3d_models
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?full_screen_y_min@@3MA:DWORD			; full_screen_y_min
EXTRN	?full_screen_x_mid@@3MA:DWORD			; full_screen_x_mid
EXTRN	?full_screen_y_mid@@3MA:DWORD			; full_screen_y_mid
EXTRN	?full_screen_y_max@@3MA:DWORD			; full_screen_y_max
EXTRN	?main_3d_env@@3PAUENV_3D@@A:DWORD		; main_3d_env
EXTRN	?pilot_head_heading@@3MA:DWORD			; pilot_head_heading
EXTRN	?pilot_head_pitch@@3MA:DWORD			; pilot_head_pitch
EXTRN	?edit_wide_cockpit@@3HA:DWORD			; edit_wide_cockpit
EXTRN	?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A:BYTE ; wide_cockpit_position
EXTRN	?wide_cockpit_nr@@3HA:DWORD			; wide_cockpit_nr
EXTRN	?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A:BYTE ; current_custom_cockpit_viewpoint
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?gunship_periscope_position@@3PAY01UVEC3D@@A DB 0f0H DUP (?) ; gunship_periscope_position
_BSS	ENDS
;	COMDAT __real@bfe0c15236000000
CONST	SEGMENT
__real@bfe0c15236000000 DQ 0bfe0c15236000000r	; -0.523599
CONST	ENDS
;	COMDAT __real@bfc6571848000000
CONST	SEGMENT
__real@bfc6571848000000 DQ 0bfc6571848000000r	; -0.174533
CONST	ENDS
;	COMDAT __real@bda3d70a
CONST	SEGMENT
__real@bda3d70a DD 0bda3d70ar			; -0.08
CONST	ENDS
;	COMDAT __real@bd4ccccd
CONST	SEGMENT
__real@bd4ccccd DD 0bd4ccccdr			; -0.05
CONST	ENDS
;	COMDAT __real@bca3d70a
CONST	SEGMENT
__real@bca3d70a DD 0bca3d70ar			; -0.02
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fc6571848000000
CONST	SEGMENT
__real@3fc6571848000000 DQ 03fc6571848000000r	; 0.174533
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f19999a
CONST	SEGMENT
__real@3f19999a DD 03f19999ar			; 0.6
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e8ccccd
CONST	SEGMENT
__real@3e8ccccd DD 03e8ccccdr			; 0.275
CONST	ENDS
;	COMDAT __real@3e333333
CONST	SEGMENT
__real@3e333333 DD 03e333333r			; 0.175
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT ??_C@_0CD@PJCNCGFI@x?$DN?$CF?43f?0?5y?$DN?$CF?43f?0?5z?$DN?$CF?43f?0?5pitch?$DN?$CF@
CONST	SEGMENT
??_C@_0CD@PJCNCGFI@x?$DN?$CF?43f?0?5y?$DN?$CF?43f?0?5z?$DN?$CF?43f?0?5pitch?$DN?$CF@ DB 'x'
	DB	'=%.3f, y=%.3f, z=%.3f, pitch=%.3f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@GGELDMED@X?3?5num1?13?$DL?5Y?3?5num?58?12?$DL?5Z?3?5num?54@
CONST	SEGMENT
??_C@_0FF@GGELDMED@X?3?5num1?13?$DL?5Y?3?5num?58?12?$DL?5Z?3?5num?54@ DB 'X'
	DB	': num1/3; Y: num 8/2; Z: num 4/6; pitch: num 7/9; Restore: nu'
	DB	'm 0; Ctrl-\ Leave edit', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@NIMJAMFH@?$CFs?5wide?5cockpit?5mod?5edit?5?$CIset?5f@
CONST	SEGMENT
??_C@_0CN@NIMJAMFH@?$CFs?5wide?5cockpit?5mod?5edit?5?$CIset?5f@ DB '%s wi'
	DB	'de cockpit mod edit (set freelook off):', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@KFFFMAIE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@KFFFMAIE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\cockpits\common\co_'
	DB	'vckpt.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?move_edit_wide_cockpit@@YGXXZ
_TEXT	SEGMENT
?move_edit_wide_cockpit@@YGXXZ PROC			; move_edit_wide_cockpit, COMDAT

; 645  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 646  : 	////////////////////////////////////////
; 647  : 	//
; 648  : 	// wide cockpit position edit
; 649  : 	//
; 650  : 	////////////////////////////////////////
; 651  : 
; 652  : 	if (edit_wide_cockpit)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?edit_wide_cockpit@@3HA, 0 ; edit_wide_cockpit
  00010	0f 84 e2 01 00
	00		 je	 $LN11@move_edit_

; 653  : 	{
; 654  : 		if (check_key(DIK_NUMPAD7))

  00016	6a 47		 push	 71			; 00000047H
  00018	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  0001d	85 c0		 test	 eax, eax
  0001f	74 2a		 je	 SHORT $LN3@move_edit_

; 655  : 		{
; 656  : 			wide_cockpit_position[wide_cockpit_nr].c.p += 0.5;

  00021	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00028	f3 0f 5a 80 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+32]
  00030	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00038	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  0003f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00043	f3 0f 11 81 20
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+32], xmm0
$LN3@move_edit_:

; 657  : 		}
; 658  : 		if (check_key(DIK_NUMPAD9))

  0004b	6a 49		 push	 73			; 00000049H
  0004d	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  00052	85 c0		 test	 eax, eax
  00054	74 2a		 je	 SHORT $LN4@move_edit_

; 659  : 		{
; 660  : 			wide_cockpit_position[wide_cockpit_nr].c.p -= 0.5;

  00056	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  0005d	f3 0f 5a 80 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+32]
  00065	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0006d	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00074	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00078	f3 0f 11 81 20
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+32], xmm0
$LN4@move_edit_:

; 661  : 		}
; 662  : 		if (check_key(DIK_NUMPAD6))

  00080	6a 4d		 push	 77			; 0000004dH
  00082	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  00087	85 c0		 test	 eax, eax
  00089	74 2a		 je	 SHORT $LN5@move_edit_

; 663  : 		{
; 664  : 			wide_cockpit_position[wide_cockpit_nr].c.z += 0.01;

  0008b	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00092	f3 0f 5a 80 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+28]
  0009a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  000a2	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ad	f3 0f 11 81 1c
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+28], xmm0
$LN5@move_edit_:

; 665  : 		}
; 666  : 		if (check_key(DIK_NUMPAD4))

  000b5	6a 4b		 push	 75			; 0000004bH
  000b7	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  000bc	85 c0		 test	 eax, eax
  000be	74 2a		 je	 SHORT $LN6@move_edit_

; 667  : 		{
; 668  : 			wide_cockpit_position[wide_cockpit_nr].c.z -= 0.01;

  000c0	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000c7	f3 0f 5a 80 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+28]
  000cf	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  000d7	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e2	f3 0f 11 81 1c
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+28], xmm0
$LN6@move_edit_:

; 669  : 		}
; 670  : 		if (check_key(DIK_NUMPAD8))

  000ea	6a 48		 push	 72			; 00000048H
  000ec	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  000f1	85 c0		 test	 eax, eax
  000f3	74 2a		 je	 SHORT $LN7@move_edit_

; 671  : 		{
; 672  : 			wide_cockpit_position[wide_cockpit_nr].c.y += 0.01;

  000f5	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000fc	f3 0f 5a 80 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+24]
  00104	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0010c	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00113	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00117	f3 0f 11 81 18
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+24], xmm0
$LN7@move_edit_:

; 673  : 		}
; 674  : 		if (check_key(DIK_NUMPAD2))

  0011f	6a 50		 push	 80			; 00000050H
  00121	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  00126	85 c0		 test	 eax, eax
  00128	74 2a		 je	 SHORT $LN8@move_edit_

; 675  : 		{
; 676  : 			wide_cockpit_position[wide_cockpit_nr].c.y -= 0.01;

  0012a	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00131	f3 0f 5a 80 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+24]
  00139	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00141	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00148	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014c	f3 0f 11 81 18
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+24], xmm0
$LN8@move_edit_:

; 677  : 		}
; 678  : 		if (check_key(DIK_NUMPAD1))

  00154	6a 4f		 push	 79			; 0000004fH
  00156	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  0015b	85 c0		 test	 eax, eax
  0015d	74 2a		 je	 SHORT $LN9@move_edit_

; 679  : 		{
; 680  : 			wide_cockpit_position[wide_cockpit_nr].c.x -= 0.01;

  0015f	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00166	f3 0f 5a 80 14
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+20]
  0016e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00176	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  0017d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00181	f3 0f 11 81 14
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+20], xmm0
$LN9@move_edit_:

; 681  : 		}
; 682  : 		if (check_key(DIK_NUMPAD3))

  00189	6a 51		 push	 81			; 00000051H
  0018b	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  00190	85 c0		 test	 eax, eax
  00192	74 2a		 je	 SHORT $LN10@move_edit_

; 683  : 		{
; 684  : 			wide_cockpit_position[wide_cockpit_nr].c.x += 0.01;

  00194	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  0019b	f3 0f 5a 80 14
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+20]
  001a3	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  001ab	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  001b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b6	f3 0f 11 81 14
	00 00 00	 movss	 DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+20], xmm0
$LN10@move_edit_:

; 685  : 		}
; 686  : 		if (check_key(DIK_NUMPAD0))

  001be	6a 52		 push	 82			; 00000052H
  001c0	e8 00 00 00 00	 call	 ?check_key@@YGHF@Z	; check_key
  001c5	85 c0		 test	 eax, eax
  001c7	74 2f		 je	 SHORT $LN11@move_edit_

; 687  : 		{
; 688  : 			wide_cockpit_position[wide_cockpit_nr].c = wide_cockpit_position[wide_cockpit_nr].d;

  001c9	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  001d0	05 04 00 00 00	 add	 eax, OFFSET ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A+4
  001d5	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  001dc	81 c1 14 00 00
	00		 add	 ecx, OFFSET ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A+20
  001e2	8b 10		 mov	 edx, DWORD PTR [eax]
  001e4	89 11		 mov	 DWORD PTR [ecx], edx
  001e6	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001e9	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  001ec	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001ef	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  001f2	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  001f5	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
$LN11@move_edit_:

; 689  : 		}
; 690  : 	}
; 691  : }

  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c3		 ret	 0
?move_edit_wide_cockpit@@YGXXZ ENDP			; move_edit_wide_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?print_edit_wide_cockpit@@YGXXZ
_TEXT	SEGMENT
_buffer$ = -128						; size = 128
?print_edit_wide_cockpit@@YGXXZ PROC			; print_edit_wide_cockpit, COMDAT

; 630  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 631  : 	char
; 632  : 		buffer[128];
; 633  : 
; 634  : 	if (edit_wide_cockpit)

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?edit_wide_cockpit@@3HA, 0 ; edit_wide_cockpit
  00013	0f 84 02 01 00
	00		 je	 $LN2@print_edit

; 635  : 	{
; 636  : 		sprintf(buffer, "%s wide cockpit mod edit (set freelook off):", wide_cockpit_position[wide_cockpit_nr].cockpit);

  00019	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  00020	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax]
  00026	51		 push	 ecx
  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@NIMJAMFH@?$CFs?5wide?5cockpit?5mod?5edit?5?$CIset?5f@
  0002c	8d 55 80	 lea	 edx, DWORD PTR _buffer$[ebp]
  0002f	52		 push	 edx
  00030	e8 00 00 00 00	 call	 _sprintf
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 637  : 		ui_display_text (buffer, 10, 40);

  00038	51		 push	 ecx
  00039	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42200000
  00041	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00046	51		 push	 ecx
  00047	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	8d 45 80	 lea	 eax, DWORD PTR _buffer$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  0005d	dd d8		 fstp	 ST(0)

; 638  : 		ui_display_text ("X: num1/3; Y: num 8/2; Z: num 4/6; pitch: num 7/9; Restore: num 0; Ctrl-\\ Leave edit", 10, 60);

  0005f	51		 push	 ecx
  00060	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42700000
  00068	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006d	51		 push	 ecx
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00076	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@GGELDMED@X?3?5num1?13?$DL?5Y?3?5num?58?12?$DL?5Z?3?5num?54@
  00080	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00085	dd d8		 fstp	 ST(0)

; 639  : 		sprintf (buffer, "x=%.3f, y=%.3f, z=%.3f, pitch=%.3f", wide_cockpit_position[wide_cockpit_nr].c.x, wide_cockpit_position[wide_cockpit_nr].c.y, wide_cockpit_position[wide_cockpit_nr].c.z, wide_cockpit_position[wide_cockpit_nr].c.p);

  00087	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  0008e	f3 0f 5a 80 20
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+32]
  00096	83 ec 08	 sub	 esp, 8
  00099	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0009e	6b 0d 00 00 00
	00 24		 imul	 ecx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000a5	f3 0f 5a 81 1c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[ecx+28]
  000ad	83 ec 08	 sub	 esp, 8
  000b0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b5	6b 15 00 00 00
	00 24		 imul	 edx, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000bc	f3 0f 5a 82 18
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[edx+24]
  000c4	83 ec 08	 sub	 esp, 8
  000c7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000cc	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000d3	f3 0f 5a 80 14
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+20]
  000db	83 ec 08	 sub	 esp, 8
  000de	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@PJCNCGFI@x?$DN?$CF?43f?0?5y?$DN?$CF?43f?0?5z?$DN?$CF?43f?0?5pitch?$DN?$CF@
  000e8	8d 4d 80	 lea	 ecx, DWORD PTR _buffer$[ebp]
  000eb	51		 push	 ecx
  000ec	e8 00 00 00 00	 call	 _sprintf
  000f1	83 c4 28	 add	 esp, 40			; 00000028H

; 640  : 		ui_display_text (buffer, 10, 100);

  000f4	51		 push	 ecx
  000f5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42c80000
  000fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00102	51		 push	 ecx
  00103	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	8d 45 80	 lea	 eax, DWORD PTR _buffer$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?ui_display_text@@YGMPBDMM@Z ; ui_display_text
  00119	dd d8		 fstp	 ST(0)
$LN2@print_edit:

; 641  : 	}
; 642  : }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
?print_edit_wide_cockpit@@YGXXZ ENDP			; print_edit_wide_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?animate_switch@@YGXPAUcockpit_switch@@@Z
_TEXT	SEGMENT
_half_time$1 = -4					; size = 4
_swch$ = 8						; size = 4
?animate_switch@@YGXPAUcockpit_switch@@@Z PROC		; animate_switch, COMDAT

; 611  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 612  : 	if (swch->timer <= 0.0)

  00009	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0000c	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  00011	0f 57 c9	 xorps	 xmm1, xmm1
  00014	66 0f 2f c8	 comisd	 xmm1, xmm0
  00018	72 05		 jb	 SHORT $LN2@animate_sw

; 613  : 		return;

  0001a	e9 9c 00 00 00	 jmp	 $LN1@animate_sw
$LN2@animate_sw:

; 614  : 
; 615  : 	if (swch->timer < swch->depress_time)  // otherwise delay

  0001f	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  00025	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0002a	0f 2f 41 14	 comiss	 xmm0, DWORD PTR [ecx+20]
  0002e	76 73		 jbe	 SHORT $LN5@animate_sw

; 616  : 	{
; 617  : 		float half_time = swch->depress_time / 2.0;

  00030	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00033	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00038	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00040	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00044	f3 0f 11 45 fc	 movss	 DWORD PTR _half_time$1[ebp], xmm0

; 618  : 
; 619  : 		if (swch->timer > half_time)  // pressing in

  00049	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0004c	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00051	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _half_time$1[ebp]
  00055	76 2b		 jbe	 SHORT $LN4@animate_sw

; 620  : 			*(swch->position) = swch->initial_position + (swch->depress_length * (swch->depress_time - swch->timer));

  00057	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  0005d	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00062	f3 0f 5c 41 14	 subss	 xmm0, DWORD PTR [ecx+20]
  00067	8b 55 08	 mov	 edx, DWORD PTR _swch$[ebp]
  0006a	f3 0f 59 42 08	 mulss	 xmm0, DWORD PTR [edx+8]
  0006f	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00072	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	f3 0f 11 02	 movss	 DWORD PTR [edx], xmm0

; 621  : 		else // rebounding out

  00080	eb 21		 jmp	 SHORT $LN5@animate_sw
$LN4@animate_sw:

; 622  : 			*(swch->position) = swch->initial_position + (swch->depress_length * swch->timer);

  00082	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00085	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  00088	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0008d	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]
  00092	8b 55 08	 mov	 edx, DWORD PTR _swch$[ebp]
  00095	f3 0f 58 42 04	 addss	 xmm0, DWORD PTR [edx+4]
  0009a	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0
$LN5@animate_sw:

; 623  : 	}
; 624  : 
; 625  : 	swch->timer -= get_delta_time();

  000a3	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  000a6	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  000ab	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  000b6	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0
$LN1@animate_sw:

; 626  : }

  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5b		 pop	 ebx
  000be	8b e5		 mov	 esp, ebp
  000c0	5d		 pop	 ebp
  000c1	c2 04 00	 ret	 4
?animate_switch@@YGXPAUcockpit_switch@@@Z ENDP		; animate_switch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?press_switch@@YGXPAUcockpit_switch@@@Z
_TEXT	SEGMENT
_swch$ = 8						; size = 4
?press_switch@@YGXPAUcockpit_switch@@@Z PROC		; press_switch, COMDAT

; 605  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 606  : 	if (swch->timer <= 0.0)

  00009	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0000c	f3 0f 5a 40 14	 cvtss2sd xmm0, DWORD PTR [eax+20]
  00011	0f 57 c9	 xorps	 xmm1, xmm1
  00014	66 0f 2f c8	 comisd	 xmm1, xmm0
  00018	72 18		 jb	 SHORT $LN2@press_swit

; 607  : 		swch->timer = swch->depress_time + swch->delay;

  0001a	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _swch$[ebp]
  00020	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00025	f3 0f 58 41 10	 addss	 xmm0, DWORD PTR [ecx+16]
  0002a	8b 55 08	 mov	 edx, DWORD PTR _swch$[ebp]
  0002d	f3 0f 11 42 14	 movss	 DWORD PTR [edx+20], xmm0
$LN2@press_swit:

; 608  : }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c2 04 00	 ret	 4
?press_switch@@YGXPAUcockpit_switch@@@Z ENDP		; press_switch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?initialise_switch@@YGXPAUcockpit_switch@@PAMMMM@Z
_TEXT	SEGMENT
_swch$ = 8						; size = 4
_position$ = 12						; size = 4
_depress_length$ = 16					; size = 4
_depress_time$ = 20					; size = 4
_delay$ = 24						; size = 4
?initialise_switch@@YGXPAUcockpit_switch@@PAMMMM@Z PROC	; initialise_switch, COMDAT

; 595  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 596  : 	swch->position = position;

  00009	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _position$[ebp]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx

; 597  : 	swch->initial_position = *position;

  00011	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _position$[ebp]
  00017	8b 11		 mov	 edx, DWORD PTR [ecx]
  00019	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 598  : 	swch->depress_length = depress_length * 2.0 / depress_time;

  0001c	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _depress_length$[ebp]
  00021	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00029	f3 0f 5a 4d 14	 cvtss2sd xmm1, DWORD PTR _depress_time$[ebp]
  0002e	f2 0f 5e c1	 divsd	 xmm0, xmm1
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00039	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 599  : 	swch->depress_time = depress_time;

  0003e	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  00041	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _depress_time$[ebp]
  00046	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 600  : 	swch->delay = delay;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0004e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _delay$[ebp]
  00053	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 601  : 	swch->timer = 0.0;

  00058	8b 45 08	 mov	 eax, DWORD PTR _swch$[ebp]
  0005b	0f 57 c0	 xorps	 xmm0, xmm0
  0005e	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 602  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 14 00	 ret	 20			; 00000014H
?initialise_switch@@YGXPAUcockpit_switch@@PAMMMM@Z ENDP	; initialise_switch
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?TIR_looking_in_periscope@@YGHXZ
_TEXT	SEGMENT
tv76 = -88						; size = 4
tv69 = -84						; size = 4
_z$ = -16						; size = 4
_y$ = -12						; size = 4
_x$ = -8						; size = 4
_ship$ = -4						; size = 4
?TIR_looking_in_periscope@@YGHXZ PROC			; TIR_looking_in_periscope, COMDAT

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 335  : 	gunship_types ship = get_global_gunship_type();

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 fc	 mov	 DWORD PTR _ship$[ebp], eax

; 336  : 
; 337  : 	float x, y, z;
; 338  : 
; 339  : 	if (get_local_entity_int_value (get_pilot_entity (), INT_TYPE_CREW_ROLE) != CREW_ROLE_CO_PILOT)

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  00018	74 0c		 je	 SHORT $LN7@TIR_lookin
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d ac	 mov	 DWORD PTR tv69[ebp], ecx
  00024	eb 1d		 jmp	 SHORT $LN8@TIR_lookin
$LN7@TIR_lookin:
  00026	68 53 01 00 00	 push	 339			; 00000153H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@KFFFMAIE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00030	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN8@TIR_lookin:
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	85 c0		 test	 eax, eax
  0004a	74 09		 je	 SHORT $LN9@TIR_lookin
  0004c	c7 45 a8 23 00
	00 00		 mov	 DWORD PTR tv76[ebp], 35	; 00000023H
  00053	eb 1d		 jmp	 SHORT $LN10@TIR_lookin
$LN9@TIR_lookin:
  00055	68 53 01 00 00	 push	 339			; 00000153H
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@KFFFMAIE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN10@TIR_lookin:
  00072	6a 23		 push	 35			; 00000023H
  00074	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0007a	52		 push	 edx
  0007b	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00082	8b 4d a8	 mov	 ecx, DWORD PTR tv76[ebp]
  00085	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0008c	ff d2		 call	 edx
  0008e	83 f8 01	 cmp	 eax, 1
  00091	74 07		 je	 SHORT $LN2@TIR_lookin

; 340  : 		return FALSE;

  00093	33 c0		 xor	 eax, eax
  00095	e9 5a 01 00 00	 jmp	 $LN1@TIR_lookin
$LN2@TIR_lookin:

; 341  : 
; 342  : 	x = wide_cockpit_position[wide_cockpit_nr].c.x - current_custom_cockpit_viewpoint.x;

  0009a	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000a1	f3 0f 10 80 14
	00 00 00	 movss	 xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+20]
  000a9	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A
  000b1	f3 0f 11 45 f8	 movss	 DWORD PTR _x$[ebp], xmm0

; 343  : 	y = wide_cockpit_position[wide_cockpit_nr].c.y - current_custom_cockpit_viewpoint.y;

  000b6	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000bd	f3 0f 10 80 18
	00 00 00	 movss	 xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+24]
  000c5	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+4
  000cd	f3 0f 11 45 f4	 movss	 DWORD PTR _y$[ebp], xmm0

; 344  : 	z = wide_cockpit_position[wide_cockpit_nr].c.z - current_custom_cockpit_viewpoint.z;

  000d2	6b 05 00 00 00
	00 24		 imul	 eax, DWORD PTR ?wide_cockpit_nr@@3HA, 36 ; wide_cockpit_nr
  000d9	f3 0f 10 80 1c
	00 00 00	 movss	 xmm0, DWORD PTR ?wide_cockpit_position@@3PAUCOCKPIT_POSITION@@A[eax+28]
  000e1	f3 0f 5c 05 08
	00 00 00	 subss	 xmm0, DWORD PTR ?current_custom_cockpit_viewpoint@@3UCOCKPIT_VIEW@@A+8
  000e9	f3 0f 11 45 f0	 movss	 DWORD PTR _z$[ebp], xmm0

; 345  : 
; 346  : 	if (pilot_head_heading < rad(-10.0) || pilot_head_heading > rad(10.0)
; 347  : 		|| pilot_head_pitch < rad(-30.0) || pilot_head_pitch > rad(10.0))

  000ee	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_heading@@3MA
  000f6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfc6571848000000
  000fe	66 0f 2f c8	 comisd	 xmm1, xmm0
  00102	77 3a		 ja	 SHORT $LN4@TIR_lookin
  00104	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_heading@@3MA
  0010c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc6571848000000
  00114	77 28		 ja	 SHORT $LN4@TIR_lookin
  00116	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  0011e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfe0c15236000000
  00126	66 0f 2f c8	 comisd	 xmm1, xmm0
  0012a	77 12		 ja	 SHORT $LN4@TIR_lookin
  0012c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?pilot_head_pitch@@3MA
  00134	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fc6571848000000
  0013c	76 07		 jbe	 SHORT $LN3@TIR_lookin
$LN4@TIR_lookin:

; 348  : 	{
; 349  : 		return FALSE;

  0013e	33 c0		 xor	 eax, eax
  00140	e9 af 00 00 00	 jmp	 $LN1@TIR_lookin
$LN3@TIR_lookin:

; 350  : 	}
; 351  : 
; 352  : 	if (gunship_periscope_position[ship][0].x < x &&
; 353  : 		gunship_periscope_position[ship][1].x > x &&
; 354  : 		gunship_periscope_position[ship][0].y < y &&
; 355  : 		gunship_periscope_position[ship][1].y > y &&
; 356  : 		gunship_periscope_position[ship][0].z < z &&

  00145	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  00149	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0014e	6b d1 00	 imul	 edx, ecx, 0
  00151	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _x$[ebp]
  00156	0f 2f 84 10 00
	00 00 00	 comiss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+edx]
  0015e	0f 86 8e 00 00
	00		 jbe	 $LN5@TIR_lookin
  00164	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  00168	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0016d	c1 e1 00	 shl	 ecx, 0
  00170	f3 0f 10 84 08
	00 00 00 00	 movss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+ecx]
  00179	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _x$[ebp]
  0017d	76 73		 jbe	 SHORT $LN5@TIR_lookin
  0017f	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  00183	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00188	6b d1 00	 imul	 edx, ecx, 0
  0018b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _y$[ebp]
  00190	0f 2f 84 10 04
	00 00 00	 comiss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+edx+4]
  00198	76 58		 jbe	 SHORT $LN5@TIR_lookin
  0019a	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  0019e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001a3	c1 e1 00	 shl	 ecx, 0
  001a6	f3 0f 10 84 08
	04 00 00 00	 movss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+ecx+4]
  001af	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _y$[ebp]
  001b3	76 3d		 jbe	 SHORT $LN5@TIR_lookin
  001b5	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  001b9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001be	6b d1 00	 imul	 edx, ecx, 0
  001c1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _z$[ebp]
  001c6	0f 2f 84 10 08
	00 00 00	 comiss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+edx+8]
  001ce	76 22		 jbe	 SHORT $LN5@TIR_lookin
  001d0	6b 45 fc 18	 imul	 eax, DWORD PTR _ship$[ebp], 24
  001d4	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001d9	c1 e1 00	 shl	 ecx, 0
  001dc	f3 0f 10 84 08
	08 00 00 00	 movss	 xmm0, DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[eax+ecx+8]
  001e5	0f 2f 45 f0	 comiss	 xmm0, DWORD PTR _z$[ebp]
  001e9	76 07		 jbe	 SHORT $LN5@TIR_lookin

; 357  : 		gunship_periscope_position[ship][1].z > z)
; 358  : 	{
; 359  : 		return TRUE;

  001eb	b8 01 00 00 00	 mov	 eax, 1
  001f0	eb 02		 jmp	 SHORT $LN1@TIR_lookin
$LN5@TIR_lookin:

; 360  : 	}
; 361  : 
; 362  : 	return FALSE;

  001f2	33 c0		 xor	 eax, eax
$LN1@TIR_lookin:

; 363  : }

  001f4	5f		 pop	 edi
  001f5	5e		 pop	 esi
  001f6	5b		 pop	 ebx
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c3		 ret	 0
?TIR_looking_in_periscope@@YGHXZ ENDP			; TIR_looking_in_periscope
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?draw_virtual_cockpit_periscope_mask@@YGXHHH@Z
_TEXT	SEGMENT
_y_texture_limit$ = -272				; size = 4
_x_texture_limit$ = -268				; size = 4
_specular$ = -264					; size = 4
_colour$ = -260						; size = 4
_quad$ = -256						; size = 256
_x_min$ = 8						; size = 4
_x_max$ = 12						; size = 4
_monoccular$ = 16					; size = 4
?draw_virtual_cockpit_periscope_mask@@YGXHHH@Z PROC	; draw_virtual_cockpit_periscope_mask, COMDAT

; 370  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 50 01 00
	00		 sub	 esp, 336		; 00000150H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 371  : 	vertex
; 372  : 		quad[4];
; 373  : 
; 374  : 	real_colour
; 375  : 		colour,
; 376  : 		specular;
; 377  : 
; 378  : 	float
; 379  : 		x_texture_limit = 1.0,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00014	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _x_texture_limit$[ebp], xmm0

; 380  : 		y_texture_limit = 0.0;

  0001c	0f 57 c0	 xorps	 xmm0, xmm0
  0001f	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _y_texture_limit$[ebp], xmm0

; 381  : 
; 382  : 	if (monoccular)

  00027	83 7d 10 00	 cmp	 DWORD PTR _monoccular$[ebp], 0
  0002b	74 20		 je	 SHORT $LN2@draw_virtu

; 383  : 	{
; 384  : 		x_texture_limit = 0.6;

  0002d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f19999a
  00035	f3 0f 11 85 f4
	fe ff ff	 movss	 DWORD PTR _x_texture_limit$[ebp], xmm0

; 385  : 		y_texture_limit = 0.15;

  0003d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  00045	f3 0f 11 85 f0
	fe ff ff	 movss	 DWORD PTR _y_texture_limit$[ebp], xmm0
$LN2@draw_virtu:

; 386  : 	}
; 387  : 
; 388  : 	set_3d_active_environment (main_3d_env);

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?main_3d_env@@3PAUENV_3D@@A ; main_3d_env
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment

; 389  : 
; 390  : 	if (begin_3d_scene ())

  00058	e8 00 00 00 00	 call	 ?begin_3d_scene@@YGHXZ	; begin_3d_scene
  0005d	85 c0		 test	 eax, eax
  0005f	0f 84 9f 0b 00
	00		 je	 $LN3@draw_virtu

; 391  : 	{
; 392  : 		colour.red		= 255;

  00065	c6 85 fe fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+2], 255 ; 000000ffH

; 393  : 		colour.green	= 255;

  0006c	c6 85 fd fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+1], 255 ; 000000ffH

; 394  : 		colour.blue		= 255;

  00073	c6 85 fc fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp], 255 ; 000000ffH

; 395  : 		colour.alpha	= 255;

  0007a	c6 85 ff fe ff
	ff ff		 mov	 BYTE PTR _colour$[ebp+3], 255 ; 000000ffH

; 396  : 
; 397  : 		specular.red	= 0;

  00081	c6 85 fa fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+2], 0

; 398  : 		specular.green	= 0;

  00088	c6 85 f9 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp+1], 0

; 399  : 		specular.blue	= 0;

  0008f	c6 85 f8 fe ff
	ff 00		 mov	 BYTE PTR _specular$[ebp], 0

; 400  : 		specular.alpha	= 255;

  00096	c6 85 fb fe ff
	ff ff		 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 401  : 
; 402  : 		set_d3d_transparency_on ();

  0009d	e8 00 00 00 00	 call	 ?set_d3d_transparency_on@@YGXXZ ; set_d3d_transparency_on

; 403  : 
; 404  : 		set_d3d_zbuffer_comparison (FALSE);

  000a2	6a 00		 push	 0
  000a4	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 405  : 
; 406  : 		set_d3d_culling (FALSE);

  000a9	6a 00		 push	 0
  000ab	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 407  : 
; 408  : 		set_d3d_texture_wrapping (0, FALSE);

  000b0	6a 00		 push	 0
  000b2	6a 00		 push	 0
  000b4	e8 00 00 00 00	 call	 ?set_d3d_texture_wrapping@@YGXHH@Z ; set_d3d_texture_wrapping

; 409  : 
; 410  : 		set_d3d_texture_filtering (FALSE);

  000b9	6a 00		 push	 0
  000bb	e8 00 00 00 00	 call	 ?set_d3d_texture_filtering@@YGXH@Z ; set_d3d_texture_filtering

; 411  : 
; 412  : 		set_d3d_flat_shaded_textured_renderstate (get_system_texture_ptr (TEXTURE_INDEX_HOKUM_COCKPIT_WSO_SCOPE_VIEW));

  000c0	68 52 05 00 00	 push	 1362			; 00000552H
  000c5	e8 00 00 00 00	 call	 ?get_system_texture_ptr@@YGPAUSCREEN@@H@Z ; get_system_texture_ptr
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 413  : 
; 414  : 		////////////////////////////////////////
; 415  : 		//
; 416  : 		// top left
; 417  : 		//
; 418  : 		////////////////////////////////////////
; 419  : 
; 420  : 		quad[0].i 				= x_min;

  000d0	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _x_min$[ebp]
  000d5	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000da	6b c8 00	 imul	 ecx, eax, 0
  000dd	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 421  : 		quad[0].j  				= full_screen_y_min;

  000e6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000eb	6b c8 00	 imul	 ecx, eax, 0
  000ee	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  000f6	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 422  : 		quad[0].z  				= 0.5;

  000ff	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00104	6b c8 00	 imul	 ecx, eax, 0
  00107	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0010f	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 423  : 		quad[0].q  				= 0.5;

  00118	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0011d	6b c8 00	 imul	 ecx, eax, 0
  00120	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00128	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 424  : 		quad[0].u  				= 0.0;

  00131	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00136	6b c8 00	 imul	 ecx, eax, 0
  00139	0f 57 c0	 xorps	 xmm0, xmm0
  0013c	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 425  : 		quad[0].v				= y_texture_limit;

  00145	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0014a	6b c8 00	 imul	 ecx, eax, 0
  0014d	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  00155	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 426  : 
; 427  : 		quad[1].i  				= full_screen_x_mid;

  0015e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00163	c1 e0 00	 shl	 eax, 0
  00166	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0016e	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 428  : 		quad[1].j  				= full_screen_y_min;

  00177	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0017c	c1 e0 00	 shl	 eax, 0
  0017f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  00187	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 429  : 		quad[1].z  				= 0.5;

  00190	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00195	c1 e0 00	 shl	 eax, 0
  00198	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  001a0	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 430  : 		quad[1].q  				= 0.5;

  001a9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001ae	c1 e0 00	 shl	 eax, 0
  001b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  001b9	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 431  : 		quad[1].u  				= x_texture_limit;

  001c2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001c7	c1 e0 00	 shl	 eax, 0
  001ca	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  001d2	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 432  : 		quad[1].v  				= y_texture_limit;

  001db	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001e0	c1 e0 00	 shl	 eax, 0
  001e3	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  001eb	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 433  : 
; 434  : 		quad[2].i				= full_screen_x_mid;

  001f4	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  001f9	d1 e0		 shl	 eax, 1
  001fb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00203	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 435  : 		quad[2].j  				= full_screen_y_mid;

  0020c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00211	d1 e0		 shl	 eax, 1
  00213	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  0021b	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 436  : 		quad[2].z  				= 0.5;

  00224	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00229	d1 e0		 shl	 eax, 1
  0022b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00233	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 437  : 		quad[2].q  				= 0.5;

  0023c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00241	d1 e0		 shl	 eax, 1
  00243	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0024b	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 438  : 		quad[2].u  				= x_texture_limit;

  00254	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00259	d1 e0		 shl	 eax, 1
  0025b	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  00263	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 439  : 		quad[2].v  				= 1.0;

  0026c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00271	d1 e0		 shl	 eax, 1
  00273	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0027b	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 440  : 
; 441  : 		quad[3].i  				= x_min;

  00284	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _x_min$[ebp]
  00289	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0028e	6b c8 03	 imul	 ecx, eax, 3
  00291	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 442  : 		quad[3].j  				= full_screen_y_mid;

  0029a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0029f	6b c8 03	 imul	 ecx, eax, 3
  002a2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  002aa	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 443  : 		quad[3].z  				= 0.5;

  002b3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002b8	6b c8 03	 imul	 ecx, eax, 3
  002bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002c3	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 444  : 		quad[3].q  				= 0.5;

  002cc	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002d1	6b c8 03	 imul	 ecx, eax, 3
  002d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  002dc	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 445  : 		quad[3].u				= 0.0;

  002e5	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002ea	6b c8 03	 imul	 ecx, eax, 3
  002ed	0f 57 c0	 xorps	 xmm0, xmm0
  002f0	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 446  : 		quad[3].v				= 1.0;

  002f9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  002fe	6b c8 03	 imul	 ecx, eax, 3
  00301	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00309	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 447  : 
; 448  : 		quad[0].next_vertex	= &quad[1];

  00312	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00317	c1 e0 00	 shl	 eax, 0
  0031a	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00321	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00326	6b c2 00	 imul	 eax, edx, 0
  00329	89 8c 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 449  : 		quad[1].next_vertex	= &quad[2];

  00330	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00335	d1 e0		 shl	 eax, 1
  00337	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  0033e	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00343	c1 e2 00	 shl	 edx, 0
  00346	89 8c 15 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 450  : 		quad[2].next_vertex	= &quad[3];

  0034d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00352	6b c8 03	 imul	 ecx, eax, 3
  00355	8d 94 0d 00 ff
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  0035c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00361	d1 e0		 shl	 eax, 1
  00363	89 94 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 451  : 		quad[3].next_vertex	= NULL;

  0036a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0036f	6b c8 03	 imul	 ecx, eax, 3
  00372	c7 84 0d 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 452  : 
; 453  : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  0037d	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00383	50		 push	 eax
  00384	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  0038a	51		 push	 ecx
  0038b	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  00391	52		 push	 edx
  00392	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 454  : 
; 455  : 		////////////////////////////////////////
; 456  : 		//
; 457  : 		// bottom left
; 458  : 		//
; 459  : 		////////////////////////////////////////
; 460  : 
; 461  : 		quad[0].i 				= x_min;

  00397	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _x_min$[ebp]
  0039c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003a1	6b c8 00	 imul	 ecx, eax, 0
  003a4	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 462  : 		quad[0].j  				= full_screen_y_mid;

  003ad	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003b2	6b c8 00	 imul	 ecx, eax, 0
  003b5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  003bd	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 463  : 		quad[0].z  				= 0.5;

  003c6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003cb	6b c8 00	 imul	 ecx, eax, 0
  003ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  003d6	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 464  : 		quad[0].q  				= 0.5;

  003df	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003e4	6b c8 00	 imul	 ecx, eax, 0
  003e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  003ef	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 465  : 		quad[0].u  				= 0.0;

  003f8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  003fd	6b c8 00	 imul	 ecx, eax, 0
  00400	0f 57 c0	 xorps	 xmm0, xmm0
  00403	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 466  : 		quad[0].v				= 1.0;

  0040c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00411	6b c8 00	 imul	 ecx, eax, 0
  00414	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0041c	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 467  : 
; 468  : 		quad[1].i  				= full_screen_x_mid;

  00425	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0042a	c1 e0 00	 shl	 eax, 0
  0042d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00435	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 469  : 		quad[1].j  				= full_screen_y_mid;

  0043e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00443	c1 e0 00	 shl	 eax, 0
  00446	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  0044e	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 470  : 		quad[1].z  				= 0.5;

  00457	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0045c	c1 e0 00	 shl	 eax, 0
  0045f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00467	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 471  : 		quad[1].q  				= 0.5;

  00470	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00475	c1 e0 00	 shl	 eax, 0
  00478	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00480	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 472  : 		quad[1].u  				= x_texture_limit;

  00489	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0048e	c1 e0 00	 shl	 eax, 0
  00491	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  00499	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 473  : 		quad[1].v  				= 1.0;

  004a2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004a7	c1 e0 00	 shl	 eax, 0
  004aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  004b2	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 474  : 
; 475  : 		quad[2].i				= full_screen_x_mid;

  004bb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004c0	d1 e0		 shl	 eax, 1
  004c2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  004ca	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 476  : 		quad[2].j  				= full_screen_y_max;

  004d3	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004d8	d1 e0		 shl	 eax, 1
  004da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  004e2	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 477  : 		quad[2].z  				= 0.5;

  004eb	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  004f0	d1 e0		 shl	 eax, 1
  004f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  004fa	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 478  : 		quad[2].q  				= 0.5;

  00503	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00508	d1 e0		 shl	 eax, 1
  0050a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00512	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 479  : 		quad[2].u  				= x_texture_limit;

  0051b	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00520	d1 e0		 shl	 eax, 1
  00522	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  0052a	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 480  : 		quad[2].v  				= y_texture_limit;

  00533	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00538	d1 e0		 shl	 eax, 1
  0053a	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  00542	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 481  : 
; 482  : 		quad[3].i  				= x_min;

  0054b	f3 0f 2a 45 08	 cvtsi2ss xmm0, DWORD PTR _x_min$[ebp]
  00550	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00555	6b c8 03	 imul	 ecx, eax, 3
  00558	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 483  : 		quad[3].j  				= full_screen_y_max;

  00561	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00566	6b c8 03	 imul	 ecx, eax, 3
  00569	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00571	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 484  : 		quad[3].z  				= 0.5;

  0057a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0057f	6b c8 03	 imul	 ecx, eax, 3
  00582	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0058a	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 485  : 		quad[3].q  				= 0.5;

  00593	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00598	6b c8 03	 imul	 ecx, eax, 3
  0059b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  005a3	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 486  : 		quad[3].u				= 0.0;

  005ac	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005b1	6b c8 03	 imul	 ecx, eax, 3
  005b4	0f 57 c0	 xorps	 xmm0, xmm0
  005b7	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 487  : 		quad[3].v				= y_texture_limit;

  005c0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005c5	6b c8 03	 imul	 ecx, eax, 3
  005c8	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  005d0	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 488  : 
; 489  : 		quad[0].next_vertex	= &quad[1];

  005d9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005de	c1 e0 00	 shl	 eax, 0
  005e1	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  005e8	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  005ed	6b c2 00	 imul	 eax, edx, 0
  005f0	89 8c 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 490  : 		quad[1].next_vertex	= &quad[2];

  005f7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  005fc	d1 e0		 shl	 eax, 1
  005fe	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00605	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0060a	c1 e2 00	 shl	 edx, 0
  0060d	89 8c 15 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 491  : 		quad[2].next_vertex	= &quad[3];

  00614	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00619	6b c8 03	 imul	 ecx, eax, 3
  0061c	8d 94 0d 00 ff
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  00623	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00628	d1 e0		 shl	 eax, 1
  0062a	89 94 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 492  : 		quad[3].next_vertex	= NULL;

  00631	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00636	6b c8 03	 imul	 ecx, eax, 3
  00639	c7 84 0d 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 493  : 
; 494  : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  00644	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  0064a	50		 push	 eax
  0064b	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00651	51		 push	 ecx
  00652	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  00658	52		 push	 edx
  00659	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 495  : 
; 496  : 		////////////////////////////////////////
; 497  : 		//
; 498  : 		// top right
; 499  : 		//
; 500  : 		////////////////////////////////////////
; 501  : 
; 502  : 		quad[0].i 				= full_screen_x_mid;

  0065e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00663	6b c8 00	 imul	 ecx, eax, 0
  00666	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0066e	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 503  : 		quad[0].j  				= full_screen_y_min;

  00677	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0067c	6b c8 00	 imul	 ecx, eax, 0
  0067f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  00687	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 504  : 		quad[0].z  				= 0.5;

  00690	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00695	6b c8 00	 imul	 ecx, eax, 0
  00698	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  006a0	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 505  : 		quad[0].q  				= 0.5;

  006a9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006ae	6b c8 00	 imul	 ecx, eax, 0
  006b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  006b9	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 506  : 		quad[0].u  				= x_texture_limit;

  006c2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006c7	6b c8 00	 imul	 ecx, eax, 0
  006ca	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  006d2	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 507  : 		quad[0].v				= y_texture_limit;

  006db	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006e0	6b c8 00	 imul	 ecx, eax, 0
  006e3	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  006eb	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 508  : 
; 509  : 		quad[1].i  				= x_max;

  006f4	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _x_max$[ebp]
  006f9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  006fe	c1 e0 00	 shl	 eax, 0
  00701	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 510  : 		quad[1].j  				= full_screen_y_min;

  0070a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0070f	c1 e0 00	 shl	 eax, 0
  00712	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_min@@3MA
  0071a	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 511  : 		quad[1].z  				= 0.5;

  00723	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00728	c1 e0 00	 shl	 eax, 0
  0072b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00733	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 512  : 		quad[1].q  				= 0.5;

  0073c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00741	c1 e0 00	 shl	 eax, 0
  00744	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0074c	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 513  : 		quad[1].u  				= 0.0;

  00755	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0075a	c1 e0 00	 shl	 eax, 0
  0075d	0f 57 c0	 xorps	 xmm0, xmm0
  00760	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 514  : 		quad[1].v  				= y_texture_limit;

  00769	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0076e	c1 e0 00	 shl	 eax, 0
  00771	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  00779	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 515  : 
; 516  : 		quad[2].i				= x_max;

  00782	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _x_max$[ebp]
  00787	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0078c	d1 e0		 shl	 eax, 1
  0078e	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 517  : 		quad[2].j  				= full_screen_y_mid;

  00797	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0079c	d1 e0		 shl	 eax, 1
  0079e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  007a6	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 518  : 		quad[2].z  				= 0.5;

  007af	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007b4	d1 e0		 shl	 eax, 1
  007b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  007be	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 519  : 		quad[2].q  				= 0.5;

  007c7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007cc	d1 e0		 shl	 eax, 1
  007ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  007d6	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 520  : 		quad[2].u  				= 0.0;

  007df	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007e4	d1 e0		 shl	 eax, 1
  007e6	0f 57 c0	 xorps	 xmm0, xmm0
  007e9	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 521  : 		quad[2].v  				= 1.0;

  007f2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  007f7	d1 e0		 shl	 eax, 1
  007f9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00801	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 522  : 
; 523  : 		quad[3].i  				= full_screen_x_mid;

  0080a	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0080f	6b c8 03	 imul	 ecx, eax, 3
  00812	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  0081a	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 524  : 		quad[3].j  				= full_screen_y_mid;

  00823	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00828	6b c8 03	 imul	 ecx, eax, 3
  0082b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  00833	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 525  : 		quad[3].z  				= 0.5;

  0083c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00841	6b c8 03	 imul	 ecx, eax, 3
  00844	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0084c	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 526  : 		quad[3].q  				= 0.5;

  00855	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0085a	6b c8 03	 imul	 ecx, eax, 3
  0085d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00865	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 527  : 		quad[3].u				= x_texture_limit;

  0086e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00873	6b c8 03	 imul	 ecx, eax, 3
  00876	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  0087e	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 528  : 		quad[3].v				= 1.0;

  00887	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0088c	6b c8 03	 imul	 ecx, eax, 3
  0088f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00897	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 529  : 
; 530  : 		quad[0].next_vertex	= &quad[1];

  008a0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008a5	c1 e0 00	 shl	 eax, 0
  008a8	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  008af	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  008b4	6b c2 00	 imul	 eax, edx, 0
  008b7	89 8c 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 531  : 		quad[1].next_vertex	= &quad[2];

  008be	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008c3	d1 e0		 shl	 eax, 1
  008c5	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  008cc	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  008d1	c1 e2 00	 shl	 edx, 0
  008d4	89 8c 15 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 532  : 		quad[2].next_vertex	= &quad[3];

  008db	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008e0	6b c8 03	 imul	 ecx, eax, 3
  008e3	8d 94 0d 00 ff
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  008ea	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008ef	d1 e0		 shl	 eax, 1
  008f1	89 94 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 533  : 		quad[3].next_vertex	= NULL;

  008f8	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  008fd	6b c8 03	 imul	 ecx, eax, 3
  00900	c7 84 0d 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 534  : 
; 535  : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  0090b	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00911	50		 push	 eax
  00912	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00918	51		 push	 ecx
  00919	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  0091f	52		 push	 edx
  00920	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 536  : 
; 537  : 		////////////////////////////////////////
; 538  : 		//
; 539  : 		// bottom left
; 540  : 		//
; 541  : 		////////////////////////////////////////
; 542  : 
; 543  : 		quad[0].i 				= full_screen_x_mid;

  00925	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0092a	6b c8 00	 imul	 ecx, eax, 0
  0092d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00935	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 544  : 		quad[0].j  				= full_screen_y_mid;

  0093e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00943	6b c8 00	 imul	 ecx, eax, 0
  00946	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  0094e	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 545  : 		quad[0].z  				= 0.5;

  00957	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0095c	6b c8 00	 imul	 ecx, eax, 0
  0095f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00967	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 546  : 		quad[0].q  				= 0.5;

  00970	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00975	6b c8 00	 imul	 ecx, eax, 0
  00978	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00980	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 547  : 		quad[0].u  				= x_texture_limit;

  00989	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  0098e	6b c8 00	 imul	 ecx, eax, 0
  00991	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  00999	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 548  : 		quad[0].v				= 1.0;

  009a2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009a7	6b c8 00	 imul	 ecx, eax, 0
  009aa	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009b2	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 549  : 
; 550  : 		quad[1].i  				= x_max;

  009bb	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _x_max$[ebp]
  009c0	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009c5	c1 e0 00	 shl	 eax, 0
  009c8	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 551  : 		quad[1].j  				= full_screen_y_mid;

  009d1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009d6	c1 e0 00	 shl	 eax, 0
  009d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_mid@@3MA
  009e1	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 552  : 		quad[1].z  				= 0.5;

  009ea	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  009ef	c1 e0 00	 shl	 eax, 0
  009f2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  009fa	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 553  : 		quad[1].q  				= 0.5;

  00a03	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a08	c1 e0 00	 shl	 eax, 0
  00a0b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00a13	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 554  : 		quad[1].u  				= 0.0;

  00a1c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a21	c1 e0 00	 shl	 eax, 0
  00a24	0f 57 c0	 xorps	 xmm0, xmm0
  00a27	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 555  : 		quad[1].v  				= 1.0;

  00a30	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a35	c1 e0 00	 shl	 eax, 0
  00a38	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a40	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 556  : 
; 557  : 		quad[2].i				= x_max;

  00a49	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _x_max$[ebp]
  00a4e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a53	d1 e0		 shl	 eax, 1
  00a55	f3 0f 11 84 05
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+16], xmm0

; 558  : 		quad[2].j  				= full_screen_y_max;

  00a5e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a63	d1 e0		 shl	 eax, 1
  00a65	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00a6d	f3 0f 11 84 05
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+20], xmm0

; 559  : 		quad[2].z  				= 0.5;

  00a76	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a7b	d1 e0		 shl	 eax, 1
  00a7d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00a85	f3 0f 11 84 05
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+8], xmm0

; 560  : 		quad[2].q  				= 0.5;

  00a8e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a93	d1 e0		 shl	 eax, 1
  00a95	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00a9d	f3 0f 11 84 05
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+12], xmm0

; 561  : 		quad[2].u  				= 0.0;

  00aa6	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00aab	d1 e0		 shl	 eax, 1
  00aad	0f 57 c0	 xorps	 xmm0, xmm0
  00ab0	f3 0f 11 84 05
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+24], xmm0

; 562  : 		quad[2].v  				= y_texture_limit;

  00ab9	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00abe	d1 e0		 shl	 eax, 1
  00ac0	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  00ac8	f3 0f 11 84 05
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+eax+28], xmm0

; 563  : 
; 564  : 		quad[3].i  				= full_screen_x_mid;

  00ad1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00ad6	6b c8 03	 imul	 ecx, eax, 3
  00ad9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_x_mid@@3MA
  00ae1	f3 0f 11 84 0d
	10 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+16], xmm0

; 565  : 		quad[3].j  				= full_screen_y_max;

  00aea	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00aef	6b c8 03	 imul	 ecx, eax, 3
  00af2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?full_screen_y_max@@3MA
  00afa	f3 0f 11 84 0d
	14 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+20], xmm0

; 566  : 		quad[3].z  				= 0.5;

  00b03	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b08	6b c8 03	 imul	 ecx, eax, 3
  00b0b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00b13	f3 0f 11 84 0d
	08 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+8], xmm0

; 567  : 		quad[3].q  				= 0.5;

  00b1c	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b21	6b c8 03	 imul	 ecx, eax, 3
  00b24	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00b2c	f3 0f 11 84 0d
	0c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+12], xmm0

; 568  : 		quad[3].u				= x_texture_limit;

  00b35	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b3a	6b c8 03	 imul	 ecx, eax, 3
  00b3d	f3 0f 10 85 f4
	fe ff ff	 movss	 xmm0, DWORD PTR _x_texture_limit$[ebp]
  00b45	f3 0f 11 84 0d
	18 ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+24], xmm0

; 569  : 		quad[3].v				= y_texture_limit;

  00b4e	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b53	6b c8 03	 imul	 ecx, eax, 3
  00b56	f3 0f 10 85 f0
	fe ff ff	 movss	 xmm0, DWORD PTR _y_texture_limit$[ebp]
  00b5e	f3 0f 11 84 0d
	1c ff ff ff	 movss	 DWORD PTR _quad$[ebp+ecx+28], xmm0

; 570  : 
; 571  : 		quad[0].next_vertex	= &quad[1];

  00b67	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b6c	c1 e0 00	 shl	 eax, 0
  00b6f	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00b76	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00b7b	6b c2 00	 imul	 eax, edx, 0
  00b7e	89 8c 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], ecx

; 572  : 		quad[1].next_vertex	= &quad[2];

  00b85	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00b8a	d1 e0		 shl	 eax, 1
  00b8c	8d 8c 05 00 ff
	ff ff		 lea	 ecx, DWORD PTR _quad$[ebp+eax]
  00b93	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00b98	c1 e2 00	 shl	 edx, 0
  00b9b	89 8c 15 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+edx+40], ecx

; 573  : 		quad[2].next_vertex	= &quad[3];

  00ba2	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00ba7	6b c8 03	 imul	 ecx, eax, 3
  00baa	8d 94 0d 00 ff
	ff ff		 lea	 edx, DWORD PTR _quad$[ebp+ecx]
  00bb1	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00bb6	d1 e0		 shl	 eax, 1
  00bb8	89 94 05 28 ff
	ff ff		 mov	 DWORD PTR _quad$[ebp+eax+40], edx

; 574  : 		quad[3].next_vertex	= NULL;

  00bbf	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00bc4	6b c8 03	 imul	 ecx, eax, 3
  00bc7	c7 84 0d 28 ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR _quad$[ebp+ecx+40], 0

; 575  : 
; 576  : 		draw_wbuffered_flat_shaded_textured_polygon (quad, colour, specular);

  00bd2	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR _specular$[ebp]
  00bd8	50		 push	 eax
  00bd9	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR _colour$[ebp]
  00bdf	51		 push	 ecx
  00be0	8d 95 00 ff ff
	ff		 lea	 edx, DWORD PTR _quad$[ebp]
  00be6	52		 push	 edx
  00be7	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon

; 577  : 
; 578  : 		////////////////////////////////////////
; 579  : 
; 580  : 		set_d3d_transparency_off ();

  00bec	e8 00 00 00 00	 call	 ?set_d3d_transparency_off@@YGXXZ ; set_d3d_transparency_off

; 581  : 
; 582  : 		set_d3d_zbuffer_comparison (TRUE);

  00bf1	6a 01		 push	 1
  00bf3	e8 00 00 00 00	 call	 ?set_d3d_zbuffer_comparison@@YGXH@Z ; set_d3d_zbuffer_comparison

; 583  : 
; 584  : 		set_d3d_culling (TRUE);

  00bf8	6a 01		 push	 1
  00bfa	e8 00 00 00 00	 call	 ?set_d3d_culling@@YGXH@Z ; set_d3d_culling

; 585  : 
; 586  : 		end_3d_scene ();

  00bff	e8 00 00 00 00	 call	 ?end_3d_scene@@YGXXZ	; end_3d_scene
$LN3@draw_virtu:

; 587  : 	}
; 588  : }

  00c04	5f		 pop	 edi
  00c05	5e		 pop	 esi
  00c06	5b		 pop	 ebx
  00c07	8b e5		 mov	 esp, ebp
  00c09	5d		 pop	 ebp
  00c0a	c2 0c 00	 ret	 12			; 0000000cH
?draw_virtual_cockpit_periscope_mask@@YGXHHH@Z ENDP	; draw_virtual_cockpit_periscope_mask
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?restore_virtual_cockpit_main_rotors@@YGXXZ
_TEXT	SEGMENT
tv64 = -68						; size = 4
?restore_virtual_cockpit_main_rotors@@YGXXZ PROC	; restore_virtual_cockpit_main_rotors, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 	switch (get_global_gunship_type ())

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00011	83 7d bc 09	 cmp	 DWORD PTR tv64[ebp], 9
  00015	77 60		 ja	 SHORT $LN16@restore_vi
  00017	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  0001a	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN18@restore_vi[ecx*4]
$LN4@restore_vi:

; 245  : 	{
; 246  : 		// JB 030313 Fly any aircraft
; 247  : //		default:
; 248  : 		case GUNSHIP_TYPE_APACHE:
; 249  : 		{
; 250  : 			restore_apache_virtual_cockpit_main_rotors ();

  00021	e8 00 00 00 00	 call	 ?restore_apache_virtual_cockpit_main_rotors@@YGXXZ ; restore_apache_virtual_cockpit_main_rotors

; 251  : 
; 252  : 			break;

  00026	eb 54		 jmp	 SHORT $LN1@restore_vi
$LN5@restore_vi:

; 253  : 		}
; 254  : 		case GUNSHIP_TYPE_HAVOC:
; 255  : 		{
; 256  : 			restore_havoc_virtual_cockpit_main_rotors ();

  00028	e8 00 00 00 00	 call	 ?restore_havoc_virtual_cockpit_main_rotors@@YGXXZ ; restore_havoc_virtual_cockpit_main_rotors

; 257  : 
; 258  : 			break;

  0002d	eb 4d		 jmp	 SHORT $LN1@restore_vi
$LN6@restore_vi:

; 259  : 		}
; 260  : 		case GUNSHIP_TYPE_COMANCHE:
; 261  : 		{
; 262  : 			restore_comanche_virtual_cockpit_main_rotors ();

  0002f	e8 00 00 00 00	 call	 ?restore_comanche_virtual_cockpit_main_rotors@@YGXXZ ; restore_comanche_virtual_cockpit_main_rotors

; 263  : 
; 264  : 			break;

  00034	eb 46		 jmp	 SHORT $LN1@restore_vi
$LN7@restore_vi:

; 265  : 		}
; 266  : 		case GUNSHIP_TYPE_HOKUM:
; 267  : 		{
; 268  : 			restore_hokum_virtual_cockpit_main_rotors ();

  00036	e8 00 00 00 00	 call	 ?restore_hokum_virtual_cockpit_main_rotors@@YGXXZ ; restore_hokum_virtual_cockpit_main_rotors

; 269  : 
; 270  : 			break;

  0003b	eb 3f		 jmp	 SHORT $LN1@restore_vi
$LN8@restore_vi:

; 271  : 		}
; 272  : 		////Moje 030518 Start
; 273  : 		case GUNSHIP_TYPE_BLACKHAWK:
; 274  : 		{
; 275  : 			restore_blackhawk_virtual_cockpit_main_rotors ();

  0003d	e8 00 00 00 00	 call	 ?restore_blackhawk_virtual_cockpit_main_rotors@@YGXXZ ; restore_blackhawk_virtual_cockpit_main_rotors

; 276  : 
; 277  : 			break;

  00042	eb 38		 jmp	 SHORT $LN1@restore_vi
$LN9@restore_vi:

; 278  : 		}
; 279  : 		////Moje 030518 End
; 280  : 		////Moje 030612 Start
; 281  : 		case GUNSHIP_TYPE_HIND:
; 282  : 		{
; 283  : 			if (custom_3d_models.arneh_mi24v_cockpit)

  00044	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A+4, 0
  0004b	74 07		 je	 SHORT $LN10@restore_vi

; 284  : 				restore_hind_3d_cockpit_main_rotors ();

  0004d	e8 00 00 00 00	 call	 ?restore_hind_3d_cockpit_main_rotors@@YGXXZ ; restore_hind_3d_cockpit_main_rotors

; 285  : 			else

  00052	eb 05		 jmp	 SHORT $LN11@restore_vi
$LN10@restore_vi:

; 286  : 				restore_hind_virtual_cockpit_main_rotors ();

  00054	e8 00 00 00 00	 call	 ?restore_hind_virtual_cockpit_main_rotors@@YGXXZ ; restore_hind_virtual_cockpit_main_rotors
$LN11@restore_vi:

; 287  : 
; 288  : 			break;

  00059	eb 21		 jmp	 SHORT $LN1@restore_vi
$LN12@restore_vi:

; 289  : 		}
; 290  : 		////Moje 030612 End
; 291  : 		////Moje 030816 Start
; 292  : 		case GUNSHIP_TYPE_AH64A:
; 293  : 		{
; 294  : 			restore_ah64a_virtual_cockpit_main_rotors ();

  0005b	e8 00 00 00 00	 call	 ?restore_ah64a_virtual_cockpit_main_rotors@@YGXXZ ; restore_ah64a_virtual_cockpit_main_rotors

; 295  : 
; 296  : 			break;

  00060	eb 1a		 jmp	 SHORT $LN1@restore_vi
$LN13@restore_vi:

; 297  : 		}
; 298  : 		case GUNSHIP_TYPE_KA50:
; 299  : 		{
; 300  : 			restore_ka50_virtual_cockpit_main_rotors ();

  00062	e8 00 00 00 00	 call	 ?restore_ka50_virtual_cockpit_main_rotors@@YGXXZ ; restore_ka50_virtual_cockpit_main_rotors

; 301  : 
; 302  : 			break;

  00067	eb 13		 jmp	 SHORT $LN1@restore_vi
$LN14@restore_vi:

; 303  : 		}
; 304  : 		////Moje 030816 End
; 305  : 
; 306  : 		case GUNSHIP_TYPE_VIPER:
; 307  : 		{
; 308  : 			restore_viper_virtual_cockpit_main_rotors ();

  00069	e8 00 00 00 00	 call	 ?restore_viper_virtual_cockpit_main_rotors@@YGXXZ ; restore_viper_virtual_cockpit_main_rotors

; 309  : 
; 310  : 			break;

  0006e	eb 0c		 jmp	 SHORT $LN1@restore_vi
$LN15@restore_vi:

; 311  : 		}
; 312  : 
; 313  : 		case GUNSHIP_TYPE_KIOWA:
; 314  : 		{
; 315  : 			restore_kiowa_virtual_cockpit_main_rotors ();

  00070	e8 00 00 00 00	 call	 ?restore_kiowa_virtual_cockpit_main_rotors@@YGXXZ ; restore_kiowa_virtual_cockpit_main_rotors

; 316  : 
; 317  : 			break;

  00075	eb 05		 jmp	 SHORT $LN1@restore_vi
$LN16@restore_vi:

; 318  : 		}
; 319  : 		// GCsDriver  08-12-2007
; 320  : 		default:
; 321  : 		{
; 322  : 			restore_default_virtual_cockpit_main_rotors ();

  00077	e8 00 00 00 00	 call	 ?restore_default_virtual_cockpit_main_rotors@@YGXXZ ; restore_default_virtual_cockpit_main_rotors
$LN1@restore_vi:

; 323  : 
; 324  : 			break;
; 325  : 		}
; 326  : 	}
; 327  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c3		 ret	 0
  00083	90		 npad	 1
$LN18@restore_vi:
  00084	00 00 00 00	 DD	 $LN4@restore_vi
  00088	00 00 00 00	 DD	 $LN5@restore_vi
  0008c	00 00 00 00	 DD	 $LN6@restore_vi
  00090	00 00 00 00	 DD	 $LN7@restore_vi
  00094	00 00 00 00	 DD	 $LN8@restore_vi
  00098	00 00 00 00	 DD	 $LN9@restore_vi
  0009c	00 00 00 00	 DD	 $LN12@restore_vi
  000a0	00 00 00 00	 DD	 $LN13@restore_vi
  000a4	00 00 00 00	 DD	 $LN14@restore_vi
  000a8	00 00 00 00	 DD	 $LN15@restore_vi
?restore_virtual_cockpit_main_rotors@@YGXXZ ENDP	; restore_virtual_cockpit_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?damage_virtual_cockpit_main_rotors@@YGXH@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_seed$ = 8						; size = 4
?damage_virtual_cockpit_main_rotors@@YGXH@Z PROC	; damage_virtual_cockpit_main_rotors, COMDAT

; 152  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 153  : 	switch (get_global_gunship_type ())

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00011	83 7d bc 09	 cmp	 DWORD PTR tv64[ebp], 9
  00015	0f 87 8f 00 00
	00		 ja	 $LN16@damage_vir
  0001b	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  0001e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN18@damage_vir[ecx*4]
$LN4@damage_vir:

; 154  : 	{
; 155  : 		// JB 030313 Fly any aircraft
; 156  : //		default:
; 157  : 		case GUNSHIP_TYPE_APACHE:
; 158  : 		{
; 159  : 			damage_apache_virtual_cockpit_main_rotors (seed);

  00025	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?damage_apache_virtual_cockpit_main_rotors@@YGXH@Z ; damage_apache_virtual_cockpit_main_rotors

; 160  : 
; 161  : 			break;

  0002e	e9 80 00 00 00	 jmp	 $LN1@damage_vir
$LN5@damage_vir:

; 162  : 		}
; 163  : 		case GUNSHIP_TYPE_HAVOC:
; 164  : 		{
; 165  : 			damage_havoc_virtual_cockpit_main_rotors (seed);

  00033	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?damage_havoc_virtual_cockpit_main_rotors@@YGXH@Z ; damage_havoc_virtual_cockpit_main_rotors

; 166  : 
; 167  : 			break;

  0003c	eb 75		 jmp	 SHORT $LN1@damage_vir
$LN6@damage_vir:

; 168  : 		}
; 169  : 		case GUNSHIP_TYPE_COMANCHE:
; 170  : 		{
; 171  : 			damage_comanche_virtual_cockpit_main_rotors (seed);

  0003e	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?damage_comanche_virtual_cockpit_main_rotors@@YGXH@Z ; damage_comanche_virtual_cockpit_main_rotors

; 172  : 
; 173  : 			break;

  00047	eb 6a		 jmp	 SHORT $LN1@damage_vir
$LN7@damage_vir:

; 174  : 		}
; 175  : 		case GUNSHIP_TYPE_HOKUM:
; 176  : 		{
; 177  : 			damage_hokum_virtual_cockpit_main_rotors (seed);

  00049	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 ?damage_hokum_virtual_cockpit_main_rotors@@YGXH@Z ; damage_hokum_virtual_cockpit_main_rotors

; 178  : 
; 179  : 			break;

  00052	eb 5f		 jmp	 SHORT $LN1@damage_vir
$LN8@damage_vir:

; 180  : 		}
; 181  : 		////Moje 030518 Start
; 182  : 		case GUNSHIP_TYPE_BLACKHAWK:
; 183  : 		{
; 184  : 			damage_blackhawk_virtual_cockpit_main_rotors (seed);

  00054	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?damage_blackhawk_virtual_cockpit_main_rotors@@YGXH@Z ; damage_blackhawk_virtual_cockpit_main_rotors

; 185  : 
; 186  : 			break;

  0005d	eb 54		 jmp	 SHORT $LN1@damage_vir
$LN9@damage_vir:

; 187  : 		}
; 188  : 
; 189  : 		////Moje 030518 End
; 190  : 		////Moje 030612 Start
; 191  : 		case GUNSHIP_TYPE_HIND:
; 192  : 		{
; 193  : 			if (custom_3d_models.arneh_mi24v_cockpit)

  0005f	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?custom_3d_models@@3Uinstalled_custom_3d_models@@A+4, 0
  00066	74 0b		 je	 SHORT $LN10@damage_vir

; 194  : 				damage_hind_3d_cockpit_main_rotors (seed);

  00068	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?damage_hind_3d_cockpit_main_rotors@@YGXH@Z ; damage_hind_3d_cockpit_main_rotors

; 195  : 			else

  00071	eb 09		 jmp	 SHORT $LN11@damage_vir
$LN10@damage_vir:

; 196  : 				damage_hind_virtual_cockpit_main_rotors (seed);

  00073	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?damage_hind_virtual_cockpit_main_rotors@@YGXH@Z ; damage_hind_virtual_cockpit_main_rotors
$LN11@damage_vir:

; 197  : 
; 198  : 			break;

  0007c	eb 35		 jmp	 SHORT $LN1@damage_vir
$LN12@damage_vir:

; 199  : 		}
; 200  : 		////Moje 030612 End
; 201  : 		////Moje 030816 Start
; 202  : 		case GUNSHIP_TYPE_AH64A:
; 203  : 		{
; 204  : 			damage_ah64a_virtual_cockpit_main_rotors (seed);

  0007e	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?damage_ah64a_virtual_cockpit_main_rotors@@YGXH@Z ; damage_ah64a_virtual_cockpit_main_rotors

; 205  : 
; 206  : 			break;

  00087	eb 2a		 jmp	 SHORT $LN1@damage_vir
$LN13@damage_vir:

; 207  : 		}
; 208  : 		case GUNSHIP_TYPE_KA50:
; 209  : 		{
; 210  : 			damage_ka50_virtual_cockpit_main_rotors (seed);

  00089	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?damage_ka50_virtual_cockpit_main_rotors@@YGXH@Z ; damage_ka50_virtual_cockpit_main_rotors

; 211  : 			break;

  00092	eb 1f		 jmp	 SHORT $LN1@damage_vir
$LN14@damage_vir:

; 212  : 		}
; 213  : 		////Moje 030816 End
; 214  : 
; 215  : 		case GUNSHIP_TYPE_VIPER:
; 216  : 		{
; 217  : 			damage_viper_virtual_cockpit_main_rotors (seed);

  00094	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?damage_viper_virtual_cockpit_main_rotors@@YGXH@Z ; damage_viper_virtual_cockpit_main_rotors

; 218  : 
; 219  : 			break;

  0009d	eb 14		 jmp	 SHORT $LN1@damage_vir
$LN15@damage_vir:

; 220  : 		}
; 221  : 
; 222  : 		case GUNSHIP_TYPE_KIOWA:
; 223  : 		{
; 224  : 			damage_kiowa_virtual_cockpit_main_rotors (seed);

  0009f	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 ?damage_kiowa_virtual_cockpit_main_rotors@@YGXH@Z ; damage_kiowa_virtual_cockpit_main_rotors

; 225  : 
; 226  : 			break;

  000a8	eb 09		 jmp	 SHORT $LN1@damage_vir
$LN16@damage_vir:

; 227  : 		}
; 228  : 		// GCsDriver  08-12-2007
; 229  : 		default:
; 230  : 		{
; 231  : 			damage_default_virtual_cockpit_main_rotors (seed);

  000aa	8b 45 08	 mov	 eax, DWORD PTR _seed$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?damage_default_virtual_cockpit_main_rotors@@YGXH@Z ; damage_default_virtual_cockpit_main_rotors
$LN1@damage_vir:

; 232  : 
; 233  : 			break;
; 234  : 		}
; 235  : 	}
; 236  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
$LN18@damage_vir:
  000bc	00 00 00 00	 DD	 $LN4@damage_vir
  000c0	00 00 00 00	 DD	 $LN5@damage_vir
  000c4	00 00 00 00	 DD	 $LN6@damage_vir
  000c8	00 00 00 00	 DD	 $LN7@damage_vir
  000cc	00 00 00 00	 DD	 $LN8@damage_vir
  000d0	00 00 00 00	 DD	 $LN9@damage_vir
  000d4	00 00 00 00	 DD	 $LN12@damage_vir
  000d8	00 00 00 00	 DD	 $LN13@damage_vir
  000dc	00 00 00 00	 DD	 $LN14@damage_vir
  000e0	00 00 00 00	 DD	 $LN15@damage_vir
?damage_virtual_cockpit_main_rotors@@YGXH@Z ENDP	; damage_virtual_cockpit_main_rotors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?update_common_virtual_cockpit@@YGXXZ
_TEXT	SEGMENT
?update_common_virtual_cockpit@@YGXXZ PROC		; update_common_virtual_cockpit, COMDAT

; 143  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 144  : 	update_common_virtual_cockpit_wiper_and_rain_effect ();

  00009	e8 00 00 00 00	 call	 ?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; update_common_virtual_cockpit_wiper_and_rain_effect

; 145  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?update_common_virtual_cockpit@@YGXXZ ENDP		; update_common_virtual_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?deinitialise_common_virtual_cockpit@@YGXXZ
_TEXT	SEGMENT
?deinitialise_common_virtual_cockpit@@YGXXZ PROC	; deinitialise_common_virtual_cockpit, COMDAT

; 134  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 135  : 	deinitialise_common_virtual_cockpit_wiper_and_rain_effect ();

  00009	e8 00 00 00 00	 call	 ?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; deinitialise_common_virtual_cockpit_wiper_and_rain_effect

; 136  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?deinitialise_common_virtual_cockpit@@YGXXZ ENDP	; deinitialise_common_virtual_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?initialise_common_virtual_cockpit@@YGXXZ
_TEXT	SEGMENT
?initialise_common_virtual_cockpit@@YGXXZ PROC		; initialise_common_virtual_cockpit, COMDAT

; 110  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 111  : 	initialise_common_virtual_cockpit_wiper_and_rain_effect ();

  00009	e8 00 00 00 00	 call	 ?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; initialise_common_virtual_cockpit_wiper_and_rain_effect

; 112  : 
; 113  : 	memset(gunship_periscope_position, 0, sizeof(gunship_periscope_position));

  0000e	68 f0 00 00 00	 push	 240			; 000000f0H
  00013	6a 00		 push	 0
  00015	68 00 00 00 00	 push	 OFFSET ?gunship_periscope_position@@3PAY01UVEC3D@@A
  0001a	e8 00 00 00 00	 call	 _memset
  0001f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 114  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][0].x = -0.05;

  00022	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00027	6b c8 03	 imul	 ecx, eax, 3
  0002a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0002f	6b c2 00	 imul	 eax, edx, 0
  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0003a	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax], xmm0

; 115  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][1].x =  0.05;

  00043	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00048	6b c8 03	 imul	 ecx, eax, 3
  0004b	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00050	c1 e2 00	 shl	 edx, 0
  00053	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0005b	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx], xmm0

; 116  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][0].y = -0.05;

  00064	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00069	6b c8 03	 imul	 ecx, eax, 3
  0006c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00071	6b c2 00	 imul	 eax, edx, 0
  00074	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  0007c	f3 0f 11 84 01
	04 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax+4], xmm0

; 117  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][1].y =  0.05;

  00085	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0008a	6b c8 03	 imul	 ecx, eax, 3
  0008d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00092	c1 e2 00	 shl	 edx, 0
  00095	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  0009d	f3 0f 11 84 11
	04 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx+4], xmm0

; 118  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][0].z = 0.275;

  000a6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ab	6b c8 03	 imul	 ecx, eax, 3
  000ae	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000b3	6b c2 00	 imul	 eax, edx, 0
  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e8ccccd
  000be	f3 0f 11 84 01
	08 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax+8], xmm0

; 119  : 	gunship_periscope_position[GUNSHIP_TYPE_HOKUM][1].z = 1.00;

  000c7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000cc	6b c8 03	 imul	 ecx, eax, 3
  000cf	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000d4	c1 e2 00	 shl	 edx, 0
  000d7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000df	f3 0f 11 84 11
	08 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx+8], xmm0

; 120  : 
; 121  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][0].x = -0.05;

  000e8	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ed	6b c8 00	 imul	 ecx, eax, 0
  000f0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000f5	6b c2 00	 imul	 eax, edx, 0
  000f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bd4ccccd
  00100	f3 0f 11 84 01
	00 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax], xmm0

; 122  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][1].x =  0.05;

  00109	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0010e	6b c8 00	 imul	 ecx, eax, 0
  00111	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00116	c1 e2 00	 shl	 edx, 0
  00119	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  00121	f3 0f 11 84 11
	00 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx], xmm0

; 123  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][0].y = -0.080;

  0012a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0012f	6b c8 00	 imul	 ecx, eax, 0
  00132	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00137	6b c2 00	 imul	 eax, edx, 0
  0013a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bda3d70a
  00142	f3 0f 11 84 01
	04 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax+4], xmm0

; 124  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][1].y = -0.020;

  0014b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00150	6b c8 00	 imul	 ecx, eax, 0
  00153	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00158	c1 e2 00	 shl	 edx, 0
  0015b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bca3d70a
  00163	f3 0f 11 84 11
	04 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx+4], xmm0

; 125  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][0].z = 0.175;

  0016c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00171	6b c8 00	 imul	 ecx, eax, 0
  00174	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00179	6b c2 00	 imul	 eax, edx, 0
  0017c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e333333
  00184	f3 0f 11 84 01
	08 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+eax+8], xmm0

; 126  : 	gunship_periscope_position[GUNSHIP_TYPE_APACHE][1].z = 1.00;

  0018d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00192	6b c8 00	 imul	 ecx, eax, 0
  00195	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0019a	c1 e2 00	 shl	 edx, 0
  0019d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001a5	f3 0f 11 84 11
	08 00 00 00	 movss	 DWORD PTR ?gunship_periscope_position@@3PAY01UVEC3D@@A[ecx+edx+8], xmm0

; 127  : }

  001ae	5f		 pop	 edi
  001af	5e		 pop	 esi
  001b0	5b		 pop	 ebx
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
?initialise_common_virtual_cockpit@@YGXXZ ENDP		; initialise_common_virtual_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_vckpt.c
;	COMDAT ?pre_initialise_common_virtual_cockpit@@YGXXZ
_TEXT	SEGMENT
?pre_initialise_common_virtual_cockpit@@YGXXZ PROC	; pre_initialise_common_virtual_cockpit, COMDAT

; 103  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 104  : 	engine_start_switch_animation_object = NULL;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?engine_start_switch_animation_object@@3PAUcockpit_switch@@A, 0 ; engine_start_switch_animation_object

; 105  : 	apu_start_switch_animation_object = NULL;

  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?apu_start_switch_animation_object@@3PAUcockpit_switch@@A, 0 ; apu_start_switch_animation_object

; 106  : 	apu_stop_switch_animation_object = NULL;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?apu_stop_switch_animation_object@@3PAUcockpit_switch@@A, 0 ; apu_stop_switch_animation_object

; 107  : }

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?pre_initialise_common_virtual_cockpit@@YGXXZ ENDP	; pre_initialise_common_virtual_cockpit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
