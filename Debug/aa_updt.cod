; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_anti_aircraft_update_functions@@YGXXZ	; overload_anti_aircraft_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA ; `update_client'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_loading_doors
EXTRN	?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_system_ready
EXTRN	?update_vehicle_radar@@YGXPAUENTITY@@@Z:PROC	; update_vehicle_radar
EXTRN	?update_vehicle_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_target_scan
EXTRN	?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_fire
EXTRN	?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_decoy_release
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z:PROC ; write_tacview_unit_update
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA DD 090H ; `update_client'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_a'
	DB	'ir\aa_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 052H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv160 = -88						; size = 4
tv140 = -88						; size = 4
tv152 = -84						; size = 4
tv132 = -84						; size = 4
$T1 = -80						; size = 4
_rotated$2 = -12					; size = 4
_moved$3 = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 	anti_aircraft
; 146  : 		*raw;
; 147  : 
; 148  : 	raw = (anti_aircraft *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 149  : 
; 150  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 151  : 
; 152  : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 153  : 
; 154  : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b0	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b0	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 155  : 
; 156  : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	0f 84 7d 01 00
	00		 je	 $LN4@update_cli

; 157  : 	{
; 158  : 
; 159  : 		////////////////////////////////////////
; 160  : 
; 161  : 		update_vehicle_loading_doors (en);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 162  : 
; 163  : 		update_vehicle_radar (en);

  00077	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 164  : 
; 165  : 		////////////////////////////////////////
; 166  : 		//
; 167  : 		// ORDER IS CRITICAL
; 168  : 		//
; 169  : 
; 170  : 		update_vehicle_weapon_system_ready (en);

  00080	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 171  : 
; 172  : 		update_entity_weapon_systems (en);

  00089	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 173  : 
; 174  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  00092	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 175  : 
; 176  : 		//
; 177  : 		////////////////////////////////////////
; 178  : 
; 179  : 
; 180  : 		if (tacview_is_logging() && raw->vh.mob.alive)

  0009b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000a2	0f 84 43 01 00
	00		 je	 $LN4@update_cli
  000a8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ab	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000ae	83 e1 01	 and	 ecx, 1
  000b1	0f 84 34 01 00
	00		 je	 $LN4@update_cli

; 181  : 		{
; 182  : 			int
; 183  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  000b7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000bb	74 0a		 je	 SHORT $LN7@update_cli
  000bd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d ac	 mov	 DWORD PTR tv132[ebp], ecx
  000c5	eb 21		 jmp	 SHORT $LN8@update_cli
$LN7@update_cli:
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  000cd	83 c2 27	 add	 edx, 39			; 00000027H
  000d0	52		 push	 edx
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e1	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN8@update_cli:
  000e8	b9 01 00 00 00	 mov	 ecx, 1
  000ed	85 c9		 test	 ecx, ecx
  000ef	74 09		 je	 SHORT $LN9@update_cli
  000f1	c7 45 a8 8e 00
	00 00		 mov	 DWORD PTR tv140[ebp], 142 ; 0000008eH
  000f8	eb 21		 jmp	 SHORT $LN10@update_cli
$LN9@update_cli:
  000fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00100	83 c2 27	 add	 edx, 39			; 00000027H
  00103	52		 push	 edx
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00109	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00114	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN10@update_cli:
  0011b	68 8e 00 00 00	 push	 142			; 0000008eH
  00120	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00123	51		 push	 ecx
  00124	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 1116
  0012b	8b 45 a8	 mov	 eax, DWORD PTR tv140[ebp]
  0012e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00135	ff d1		 call	 ecx
  00137	89 45 f8	 mov	 DWORD PTR _moved$3[ebp], eax

; 184  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  0013a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0013e	74 0a		 je	 SHORT $LN11@update_cli
  00140	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00143	8b 08		 mov	 ecx, DWORD PTR [eax]
  00145	89 4d ac	 mov	 DWORD PTR tv152[ebp], ecx
  00148	eb 21		 jmp	 SHORT $LN12@update_cli
$LN11@update_cli:
  0014a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00150	83 c2 28	 add	 edx, 40			; 00000028H
  00153	52		 push	 edx
  00154	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00159	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00164	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN12@update_cli:
  0016b	b9 01 00 00 00	 mov	 ecx, 1
  00170	85 c9		 test	 ecx, ecx
  00172	74 09		 je	 SHORT $LN13@update_cli
  00174	c7 45 a8 b1 00
	00 00		 mov	 DWORD PTR tv160[ebp], 177 ; 000000b1H
  0017b	eb 21		 jmp	 SHORT $LN14@update_cli
$LN13@update_cli:
  0017d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00183	83 c2 28	 add	 edx, 40			; 00000028H
  00186	52		 push	 edx
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00197	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN14@update_cli:
  0019e	68 b1 00 00 00	 push	 177			; 000000b1H
  001a3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a6	51		 push	 ecx
  001a7	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv152[ebp], 1116
  001ae	8b 45 a8	 mov	 eax, DWORD PTR tv160[ebp]
  001b1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001b8	ff d1		 call	 ecx
  001ba	89 45 f4	 mov	 DWORD PTR _rotated$2[ebp], eax

; 185  : 
; 186  : 			rotated = moved;

  001bd	8b 45 f8	 mov	 eax, DWORD PTR _moved$3[ebp]
  001c0	89 45 f4	 mov	 DWORD PTR _rotated$2[ebp], eax

; 187  : 
; 188  : 			if (moved || rotated || command_line_tacview_logging < 3)

  001c3	83 7d f8 00	 cmp	 DWORD PTR _moved$3[ebp], 0
  001c7	75 0f		 jne	 SHORT $LN5@update_cli
  001c9	83 7d f4 00	 cmp	 DWORD PTR _rotated$2[ebp], 0
  001cd	75 09		 jne	 SHORT $LN5@update_cli
  001cf	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  001d6	7d 13		 jge	 SHORT $LN4@update_cli
$LN5@update_cli:

; 189  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  001d8	6a 00		 push	 0
  001da	8b 45 f4	 mov	 eax, DWORD PTR _rotated$2[ebp]
  001dd	50		 push	 eax
  001de	8b 4d f8	 mov	 ecx, DWORD PTR _moved$3[ebp]
  001e1	51		 push	 ecx
  001e2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001e5	52		 push	 edx
  001e6	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN4@update_cli:

; 190  : 		}
; 191  : 	}
; 192  : }

  001eb	5f		 pop	 edi
  001ec	5e		 pop	 esi
  001ed	5b		 pop	 ebx
  001ee	8b e5		 mov	 esp, ebp
  001f0	5d		 pop	 ebp
  001f1	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv163 = -88						; size = 4
tv143 = -88						; size = 4
tv155 = -84						; size = 4
tv135 = -84						; size = 4
$T1 = -80						; size = 4
_rotated$2 = -12					; size = 4
_moved$3 = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 
; 84   : 	anti_aircraft
; 85   : 		*raw;
; 86   : 
; 87   : 	raw = (anti_aircraft *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 88   : 
; 89   : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 90   : 
; 91   : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 92   : 
; 93   : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 b0	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 b0	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 94   : 
; 95   : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	0f 84 98 01 00
	00		 je	 $LN4@update_ser

; 96   : 	{
; 97   : 
; 98   : 		////////////////////////////////////////
; 99   : 
; 100  : 		update_vehicle_loading_doors (en);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 101  : 
; 102  : 		update_vehicle_radar (en);

  00077	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 103  : 
; 104  : 		////////////////////////////////////////
; 105  : 		//
; 106  : 		// ORDER IS CRITICAL
; 107  : 		//
; 108  : 
; 109  : 		update_vehicle_target_scan (en);

  00080	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?update_vehicle_target_scan@@YGXPAUENTITY@@@Z ; update_vehicle_target_scan

; 110  : 
; 111  : 		update_vehicle_weapon_system_ready (en);

  00089	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 112  : 
; 113  : 		update_entity_weapon_systems (en);

  00092	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 114  : 
; 115  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  0009b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 116  : 
; 117  : 		update_vehicle_weapon_fire (en);

  000a4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_fire

; 118  : 
; 119  : 		update_vehicle_decoy_release (en);

  000ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 ?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z ; update_vehicle_decoy_release

; 120  : 
; 121  : 		//
; 122  : 		////////////////////////////////////////
; 123  : 
; 124  : 		if (tacview_is_logging() && raw->vh.mob.alive)

  000b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000bd	0f 84 43 01 00
	00		 je	 $LN4@update_ser
  000c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000c6	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000c9	83 e1 01	 and	 ecx, 1
  000cc	0f 84 34 01 00
	00		 je	 $LN4@update_ser

; 125  : 		{
; 126  : 			int
; 127  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  000d2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000d6	74 0a		 je	 SHORT $LN7@update_ser
  000d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	89 4d ac	 mov	 DWORD PTR tv135[ebp], ecx
  000e0	eb 21		 jmp	 SHORT $LN8@update_ser
$LN7@update_ser:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  000e8	83 c2 2d	 add	 edx, 45			; 0000002dH
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN8@update_ser:
  00103	b9 01 00 00 00	 mov	 ecx, 1
  00108	85 c9		 test	 ecx, ecx
  0010a	74 09		 je	 SHORT $LN9@update_ser
  0010c	c7 45 a8 8e 00
	00 00		 mov	 DWORD PTR tv143[ebp], 142 ; 0000008eH
  00113	eb 21		 jmp	 SHORT $LN10@update_ser
$LN9@update_ser:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0011b	83 c2 2d	 add	 edx, 45			; 0000002dH
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN10@update_ser:
  00136	68 8e 00 00 00	 push	 142			; 0000008eH
  0013b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0013e	51		 push	 ecx
  0013f	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 1116
  00146	8b 45 a8	 mov	 eax, DWORD PTR tv143[ebp]
  00149	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00150	ff d1		 call	 ecx
  00152	89 45 f8	 mov	 DWORD PTR _moved$3[ebp], eax

; 128  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  00155	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00159	74 0a		 je	 SHORT $LN11@update_ser
  0015b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00160	89 4d ac	 mov	 DWORD PTR tv155[ebp], ecx
  00163	eb 21		 jmp	 SHORT $LN12@update_ser
$LN11@update_ser:
  00165	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0016b	83 c2 2e	 add	 edx, 46			; 0000002eH
  0016e	52		 push	 edx
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN12@update_ser:
  00186	b9 01 00 00 00	 mov	 ecx, 1
  0018b	85 c9		 test	 ecx, ecx
  0018d	74 09		 je	 SHORT $LN13@update_ser
  0018f	c7 45 a8 b1 00
	00 00		 mov	 DWORD PTR tv163[ebp], 177 ; 000000b1H
  00196	eb 21		 jmp	 SHORT $LN14@update_ser
$LN13@update_ser:
  00198	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0019e	83 c2 2e	 add	 edx, 46			; 0000002eH
  001a1	52		 push	 edx
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@BCKLBOAB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b2	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN14@update_ser:
  001b9	68 b1 00 00 00	 push	 177			; 000000b1H
  001be	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001c1	51		 push	 ecx
  001c2	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv155[ebp], 1116
  001c9	8b 45 a8	 mov	 eax, DWORD PTR tv163[ebp]
  001cc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001d3	ff d1		 call	 ecx
  001d5	89 45 f4	 mov	 DWORD PTR _rotated$2[ebp], eax

; 129  : 
; 130  : 			// TODO.  Actually recorde rotation, so we can use it
; 131  : 			rotated = moved;

  001d8	8b 45 f8	 mov	 eax, DWORD PTR _moved$3[ebp]
  001db	89 45 f4	 mov	 DWORD PTR _rotated$2[ebp], eax

; 132  : 
; 133  : 			if (moved || rotated || command_line_tacview_logging < 3)

  001de	83 7d f8 00	 cmp	 DWORD PTR _moved$3[ebp], 0
  001e2	75 0f		 jne	 SHORT $LN5@update_ser
  001e4	83 7d f4 00	 cmp	 DWORD PTR _rotated$2[ebp], 0
  001e8	75 09		 jne	 SHORT $LN5@update_ser
  001ea	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  001f1	7d 13		 jge	 SHORT $LN4@update_ser
$LN5@update_ser:

; 134  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  001f3	6a 00		 push	 0
  001f5	8b 45 f4	 mov	 eax, DWORD PTR _rotated$2[ebp]
  001f8	50		 push	 eax
  001f9	8b 4d f8	 mov	 ecx, DWORD PTR _moved$3[ebp]
  001fc	51		 push	 ecx
  001fd	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00200	52		 push	 edx
  00201	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN4@update_ser:

; 135  : 		}
; 136  : 	}
; 137  : }

  00206	5f		 pop	 edi
  00207	5e		 pop	 esi
  00208	5b		 pop	 ebx
  00209	8b e5		 mov	 esp, ebp
  0020b	5d		 pop	 ebp
  0020c	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\anti_air\aa_updt.c
;	COMDAT ?overload_anti_aircraft_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_anti_aircraft_update_functions@@YGXXZ PROC	; overload_anti_aircraft_update_functions, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 	fn_update_client_server_entity[ENTITY_TYPE_ANTI_AIRCRAFT][COMMS_MODEL_SERVER]	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	c1 e0 00	 shl	 eax, 0
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	6b d1 00	 imul	 edx, ecx, 0
  00019	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+edx], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 201  : 
; 202  : 	fn_update_client_server_entity[ENTITY_TYPE_ANTI_AIRCRAFT][COMMS_MODEL_CLIENT]	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	c1 e0 00	 shl	 eax, 0
  0002c	b9 04 00 00 00	 mov	 ecx, 4
  00031	c1 e1 00	 shl	 ecx, 0
  00034	c7 84 08 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+ecx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 203  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_anti_aircraft_update_functions@@YGXXZ ENDP	; overload_anti_aircraft_update_functions
_TEXT	ENDS
END
