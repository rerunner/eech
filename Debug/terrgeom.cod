; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\terrain\terrgeom.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
PUBLIC	?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
PUBLIC	?current_terrain_type@@3HA			; current_terrain_type
PUBLIC	?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
PUBLIC	?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
PUBLIC	?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
PUBLIC	?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
PUBLIC	?current_terrain_sector_xz_texture_scale@@3MA	; current_terrain_sector_xz_texture_scale
PUBLIC	?current_terrain_sector_y_texture_scale@@3MA	; current_terrain_sector_y_texture_scale
PUBLIC	?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours
PUBLIC	?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A ; terrain_3d_transformed_point_normals
PUBLIC	?terrain_3d_face_normal@@3UVEC3D@@A		; terrain_3d_face_normal
PUBLIC	?terrain_3d_face_outcode@@3HA			; terrain_3d_face_outcode
PUBLIC	?terrain_3d_xz_scale@@3MA			; terrain_3d_xz_scale
PUBLIC	?terrain_3d_y_scale@@3MA			; terrain_3d_y_scale
PUBLIC	?terrain_object_rendering_enabled@@3HA		; terrain_object_rendering_enabled
PUBLIC	?terrain_texture_mag_filter@@3HA		; terrain_texture_mag_filter
PUBLIC	?terrain_texture_min_filter@@3HA		; terrain_texture_min_filter
PUBLIC	?terrain_texture_mip_filter@@3HA		; terrain_texture_mip_filter
PUBLIC	?total_number_of_terrain_points@@3HA		; total_number_of_terrain_points
PUBLIC	?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
PUBLIC	?terrain_3d_faces_considered@@3HA		; terrain_3d_faces_considered
PUBLIC	?terrain_3d_faces_outcoded@@3HA			; terrain_3d_faces_outcoded
PUBLIC	?terrain_3d_faces_hither_clipped@@3HA		; terrain_3d_faces_hither_clipped
PUBLIC	?terrain_3d_faces_screen_clipped@@3HA		; terrain_3d_faces_screen_clipped
PUBLIC	?terrain_3d_faces_constructed@@3HA		; terrain_3d_faces_constructed
PUBLIC	?terrain_3d_faces_rejected@@3HA			; terrain_3d_faces_rejected
PUBLIC	?terrain_3d_sectors_inserted@@3HA		; terrain_3d_sectors_inserted
PUBLIC	?terrain_3d_sectors_totally_visible@@3HA	; terrain_3d_sectors_totally_visible
PUBLIC	?terrain_3d_sectors_trivially_culled@@3HA	; terrain_3d_sectors_trivially_culled
PUBLIC	?terrain_3d_sectors_complex_culled@@3HA		; terrain_3d_sectors_complex_culled
PUBLIC	?final_total_number_of_terrain_points@@3HA	; final_total_number_of_terrain_points
PUBLIC	?final_total_number_of_terrain_points_transformed@@3HA ; final_total_number_of_terrain_points_transformed
PUBLIC	?final_terrain_3d_faces_considered@@3HA		; final_terrain_3d_faces_considered
PUBLIC	?final_terrain_3d_faces_outcoded@@3HA		; final_terrain_3d_faces_outcoded
PUBLIC	?final_terrain_3d_faces_hither_clipped@@3HA	; final_terrain_3d_faces_hither_clipped
PUBLIC	?final_terrain_3d_faces_screen_clipped@@3HA	; final_terrain_3d_faces_screen_clipped
PUBLIC	?final_terrain_3d_faces_constructed@@3HA	; final_terrain_3d_faces_constructed
PUBLIC	?final_terrain_3d_faces_rejected@@3HA		; final_terrain_3d_faces_rejected
PUBLIC	?final_terrain_3d_sectors_inserted@@3HA		; final_terrain_3d_sectors_inserted
PUBLIC	?final_terrain_3d_sectors_totally_visible@@3HA	; final_terrain_3d_sectors_totally_visible
PUBLIC	?final_terrain_3d_sectors_trivially_culled@@3HA	; final_terrain_3d_sectors_trivially_culled
PUBLIC	?final_terrain_3d_sectors_complex_culled@@3HA	; final_terrain_3d_sectors_complex_culled
PUBLIC	?current_terrain_x_int@@3HA			; current_terrain_x_int
PUBLIC	?current_terrain_z_int@@3HA			; current_terrain_z_int
PUBLIC	?current_terrain_y_int@@3HA			; current_terrain_y_int
PUBLIC	?number_of_terrain_3d_point_normals@@3HA	; number_of_terrain_3d_point_normals
PUBLIC	?terrain_3d_point_normals@@3PAUVEC3D@@A		; terrain_3d_point_normals
PUBLIC	?total_number_of_terrain_faces_inserted@@3HA	; total_number_of_terrain_faces_inserted
_BSS	SEGMENT
?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A DD 01H DUP (?) ; terrain_3d_sector_point_byte_references
?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A DD 01H DUP (?) ; terrain_3d_sector_point_word_references
?current_terrain_type@@3HA DD 01H DUP (?)		; current_terrain_type
?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A DD 01H DUP (?) ; current_terrain_type_class
?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A DD 01H DUP (?) ; current_terrain_sector
?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A DD 01H DUP (?) ; current_terrain_points_xz
?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A DD 01H DUP (?) ; current_terrain_points_y
?current_terrain_sector_xz_texture_scale@@3MA DD 01H DUP (?) ; current_terrain_sector_xz_texture_scale
?current_terrain_sector_y_texture_scale@@3MA DD 01H DUP (?) ; current_terrain_sector_y_texture_scale
	ALIGN	8

?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A DQ 01000H DUP (?) ; transformed_3d_point_colours
?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A DB 01000H DUP (?) ; terrain_3d_transformed_point_normals
?terrain_3d_face_normal@@3UVEC3D@@A DB 0cH DUP (?)	; terrain_3d_face_normal
?terrain_3d_face_outcode@@3HA DD 01H DUP (?)		; terrain_3d_face_outcode
?terrain_texture_mag_filter@@3HA DD 01H DUP (?)		; terrain_texture_mag_filter
?terrain_texture_min_filter@@3HA DD 01H DUP (?)		; terrain_texture_min_filter
?terrain_texture_mip_filter@@3HA DD 01H DUP (?)		; terrain_texture_mip_filter
?total_number_of_terrain_points@@3HA DD 01H DUP (?)	; total_number_of_terrain_points
?total_number_of_terrain_points_transformed@@3HA DD 01H DUP (?) ; total_number_of_terrain_points_transformed
?terrain_3d_faces_considered@@3HA DD 01H DUP (?)	; terrain_3d_faces_considered
?terrain_3d_faces_outcoded@@3HA DD 01H DUP (?)		; terrain_3d_faces_outcoded
?terrain_3d_faces_hither_clipped@@3HA DD 01H DUP (?)	; terrain_3d_faces_hither_clipped
?terrain_3d_faces_screen_clipped@@3HA DD 01H DUP (?)	; terrain_3d_faces_screen_clipped
?terrain_3d_faces_constructed@@3HA DD 01H DUP (?)	; terrain_3d_faces_constructed
?terrain_3d_faces_rejected@@3HA DD 01H DUP (?)		; terrain_3d_faces_rejected
?terrain_3d_sectors_inserted@@3HA DD 01H DUP (?)	; terrain_3d_sectors_inserted
?terrain_3d_sectors_totally_visible@@3HA DD 01H DUP (?)	; terrain_3d_sectors_totally_visible
?terrain_3d_sectors_trivially_culled@@3HA DD 01H DUP (?) ; terrain_3d_sectors_trivially_culled
?terrain_3d_sectors_complex_culled@@3HA DD 01H DUP (?)	; terrain_3d_sectors_complex_culled
?final_total_number_of_terrain_points@@3HA DD 01H DUP (?) ; final_total_number_of_terrain_points
?final_total_number_of_terrain_points_transformed@@3HA DD 01H DUP (?) ; final_total_number_of_terrain_points_transformed
?final_terrain_3d_faces_considered@@3HA DD 01H DUP (?)	; final_terrain_3d_faces_considered
?final_terrain_3d_faces_outcoded@@3HA DD 01H DUP (?)	; final_terrain_3d_faces_outcoded
?final_terrain_3d_faces_hither_clipped@@3HA DD 01H DUP (?) ; final_terrain_3d_faces_hither_clipped
?final_terrain_3d_faces_screen_clipped@@3HA DD 01H DUP (?) ; final_terrain_3d_faces_screen_clipped
?final_terrain_3d_faces_constructed@@3HA DD 01H DUP (?)	; final_terrain_3d_faces_constructed
?final_terrain_3d_faces_rejected@@3HA DD 01H DUP (?)	; final_terrain_3d_faces_rejected
?final_terrain_3d_sectors_inserted@@3HA DD 01H DUP (?)	; final_terrain_3d_sectors_inserted
?final_terrain_3d_sectors_totally_visible@@3HA DD 01H DUP (?) ; final_terrain_3d_sectors_totally_visible
?final_terrain_3d_sectors_trivially_culled@@3HA DD 01H DUP (?) ; final_terrain_3d_sectors_trivially_culled
?final_terrain_3d_sectors_complex_culled@@3HA DD 01H DUP (?) ; final_terrain_3d_sectors_complex_culled
?current_terrain_x_int@@3HA DD 01H DUP (?)		; current_terrain_x_int
?current_terrain_z_int@@3HA DD 01H DUP (?)		; current_terrain_z_int
?current_terrain_y_int@@3HA DD 01H DUP (?)		; current_terrain_y_int
?number_of_terrain_3d_point_normals@@3HA DD 01H DUP (?)	; number_of_terrain_3d_point_normals
?terrain_3d_point_normals@@3PAUVEC3D@@A DB 0c00H DUP (?) ; terrain_3d_point_normals
?total_number_of_terrain_faces_inserted@@3HA DD 01H DUP (?) ; total_number_of_terrain_faces_inserted
_BSS	ENDS
_DATA	SEGMENT
?terrain_3d_xz_scale@@3MA DD 03d800000r		; 0.0625 ; terrain_3d_xz_scale
?terrain_3d_y_scale@@3MA DD 038000100r		; 3.05185e-05 ; terrain_3d_y_scale
?terrain_object_rendering_enabled@@3HA DD 01H		; terrain_object_rendering_enabled
_DATA	ENDS
PUBLIC	_sqrtf
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?generate_lookup_outcode@@YGHHHHH@Z		; generate_lookup_outcode
PUBLIC	?set_terrain_3d_sector_scan_radius@@YGXH@Z	; set_terrain_3d_sector_scan_radius
PUBLIC	?get_terrain_3d_sector_scan_radius@@YGHXZ	; get_terrain_3d_sector_scan_radius
PUBLIC	?initialise_3d_terrain_normals@@YGXXZ		; initialise_3d_terrain_normals
PUBLIC	?scan_3d_terrain@@YGXXZ				; scan_3d_terrain
PUBLIC	?draw_3d_terrain_tree_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_tree_object
PUBLIC	?draw_3d_terrain_cloud_puff_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_cloud_puff_object
PUBLIC	?draw_3d_terrain_3d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_3d_clipped_sector
PUBLIC	?draw_3d_terrain_2d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_2d_clipped_sector
PUBLIC	?draw_3d_terrain_unclipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_unclipped_sector
PUBLIC	?draw_3d_terrain_3d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_3d_clipped_bw_sector
PUBLIC	?draw_3d_terrain_2d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_2d_clipped_bw_sector
PUBLIC	?draw_3d_terrain_unclipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_unclipped_bw_sector
PUBLIC	?draw_3d_terrain_sector_point_normals@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; draw_3d_terrain_sector_point_normals
PUBLIC	?construct_3d_terrain_normal_line@@YGPAUVERTEX@@HPAH@Z ; construct_3d_terrain_normal_line
PUBLIC	?get_terrain_3d_alpha@@YGHM@Z			; get_terrain_3d_alpha
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0DN@LKGIAPGJ@Unable?5to?5set?5sector?5scan?5radiu@ ; `string'
PUBLIC	??_C@_0DN@JNACGOFF@Unable?5to?5set?5sector?5scan?5radiu@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3fb0000000000000
PUBLIC	__real@3fbc28f5c28f5c29
PUBLIC	__real@3fc90fdb
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fe2e147ae147ae1
PUBLIC	__real@3fe4cccccccccccd
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff921fb60000000
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@401921fb60000000
PUBLIC	__real@4056800000000000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@4076800000000000
PUBLIC	__real@4079000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40a0680000000000
PUBLIC	__real@40af400000000000
PUBLIC	__real@41200000
PUBLIC	__real@44800000
PUBLIC	__real@45000000
PUBLIC	__real@45800000
PUBLIC	__real@46000000
PUBLIC	__real@46300000
PUBLIC	__real@49742400
PUBLIC	__real@4b40005a
PUBLIC	__real@4b742400
PUBLIC	__real@bfc90fdb
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_sqrt:PROC
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?set_fpu_precision_mode_single@@YGXXZ:PROC	; set_fpu_precision_mode_single
EXTRN	?set_fpu_precision_mode_double@@YGXXZ:PROC	; set_fpu_precision_mode_double
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?get_int_fog_distance_value@@YGHM@Z:PROC	; get_int_fog_distance_value
EXTRN	?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z:PROC ; set_d3d_int_state
EXTRN	?set_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC	; set_d3d_texture
EXTRN	?set_d3d_texture_stage_state@@YGXHHH@Z:PROC	; set_d3d_texture_stage_state
EXTRN	?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z:PROC ; set_deferred_d3d_texture
EXTRN	?reset_deferred_state_changes@@YGXXZ:PROC	; reset_deferred_state_changes
EXTRN	?commit_deferred_state_changes@@YGXXZ:PROC	; commit_deferred_state_changes
EXTRN	?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ:PROC ; get_3d_scene_slot
EXTRN	?insert_low_zbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_low_zbuffered_scene_slot_into_3d_scene
EXTRN	?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z:PROC ; insert_low_nonzbuffered_scene_slot_into_3d_scene
EXTRN	?get_3d_point_outcodes@@YGIMMM@Z:PROC		; get_3d_point_outcodes
EXTRN	?copy_and_recolour_current_3d_lights@@YGXUREAL_COLOUR@@@Z:PROC ; copy_and_recolour_current_3d_lights
EXTRN	?restore_uncoloured_current_3d_lights@@YGXXZ:PROC ; restore_uncoloured_current_3d_lights
EXTRN	?draw_wbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; draw_wbuffered_3d_object
EXTRN	?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; set_object_3d_instance_relative_position
EXTRN	?get_object_3d_instance_visibility@@YG?AW4OBJECT_3D_VISIBILITY@@PAUOBJECT_3D_INSTANCE@@@Z:PROC ; get_object_3d_instance_visibility
EXTRN	?draw_3d_object_shadow@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; draw_3d_object_shadow
EXTRN	?get_3d_terrain_dual_pass_rendering@@YGHXZ:PROC	; get_3d_terrain_dual_pass_rendering
EXTRN	?initialise_3d_terrain_rendering_routines@@YGXH@Z:PROC ; initialise_3d_terrain_rendering_routines
EXTRN	?set_3d_terrain_detail_blend_factors@@YGXXZ:PROC ; set_3d_terrain_detail_blend_factors
EXTRN	?get_terrain_3d_sector@@YGXMMPAH0@Z:PROC	; get_terrain_3d_sector
EXTRN	?get_terrain_3d_tree_scale@@YGMPAUTERRAIN_3D_TREE_DATA@@@Z:PROC ; get_terrain_3d_tree_scale
EXTRN	?set_terrain_3d_cloud_puffs_colours@@YGXXZ:PROC	; set_terrain_3d_cloud_puffs_colours
EXTRN	?outcode_3d_terrain_word_polygon@@YGHHPAUTERRAIN_3D_POINT_WORD_REFERENCE@@PAH@Z:PROC ; outcode_3d_terrain_word_polygon
EXTRN	?outcode_3d_terrain_byte_polygon@@YGHHPAUTERRAIN_3D_POINT_BYTE_REFERENCE@@PAH@Z:PROC ; outcode_3d_terrain_byte_polygon
EXTRN	?reset_terrain_3d_buffered_polygons@@YGXXZ:PROC	; reset_terrain_3d_buffered_polygons
EXTRN	?draw_terrain_3d_buffered_polygons@@YGXXZ:PROC	; draw_terrain_3d_buffered_polygons
EXTRN	__ftoui3:PROC
EXTRN	?float_value_zero@@3MB:DWORD			; float_value_zero
EXTRN	?float_value_one@@3MB:DWORD			; float_value_one
EXTRN	?d3d_using_hardware_tnl@@3HA:DWORD		; d3d_using_hardware_tnl
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?clip_hither@@3MA:DWORD				; clip_hither
EXTRN	?clip_yonder@@3MA:DWORD				; clip_yonder
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	?zbuffer_constant_normal_bias@@3NA:QWORD	; zbuffer_constant_normal_bias
EXTRN	?zbuffer_constant_lowered_bias@@3NA:QWORD	; zbuffer_constant_lowered_bias
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	?visual_3d_vp@@3PAUVIEWPOINT@@A:DWORD		; visual_3d_vp
EXTRN	?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A:BYTE	; ambient_3d_light
EXTRN	?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A:DWORD ; current_3d_lights
EXTRN	?shadows_enabled@@3HA:DWORD			; shadows_enabled
EXTRN	?transformed_3d_point_outcodes@@3PAEA:BYTE	; transformed_3d_point_outcodes
EXTRN	?transformed_3d_3d_points@@3PAUOBJECT_TRANSFORMED_3D_POINT@@A:BYTE ; transformed_3d_3d_points
EXTRN	?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A:BYTE ; transformed_3d_2d_points
EXTRN	?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A:BYTE ; terrain_type_information
EXTRN	?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A:DWORD ; terrain_sectors
EXTRN	?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A:DWORD ; terrain_tree_sectors
EXTRN	?terrain_3d_sector_x_max@@3HA:DWORD		; terrain_3d_sector_x_max
EXTRN	?terrain_3d_sector_z_max@@3HA:DWORD		; terrain_3d_sector_z_max
EXTRN	?terrain_3d_alpha_constant@@3MA:DWORD		; terrain_3d_alpha_constant
EXTRN	?terrain_3d_alpha_factor@@3MA:DWORD		; terrain_3d_alpha_factor
EXTRN	?terrain_3d_map_minimum_height@@3MA:DWORD	; terrain_3d_map_minimum_height
EXTRN	?terrain_3d_map_scaled_height_difference@@3MA:DWORD ; terrain_3d_map_scaled_height_difference
EXTRN	?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A:DWORD ; terrain_3d_tree_object
EXTRN	?terrain_3d_tree_rendering_enabled@@3HA:DWORD	; terrain_3d_tree_rendering_enabled
EXTRN	?terrain_cloud_puff_sectors@@3PAPAUTERRAIN_3D_CLOUD_PUFF_SECTOR@@A:DWORD ; terrain_cloud_puff_sectors
EXTRN	?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A:DWORD ; terrain_3d_cloud_puff_object
EXTRN	?terrain_3d_cloud_puff_colours@@3PAUREAL_COLOUR@@A:DWORD ; terrain_3d_cloud_puff_colours
EXTRN	?command_line_render_tree_shadows@@3HA:DWORD	; command_line_render_tree_shadows
EXTRN	__fltused:DWORD
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@4b742400
CONST	SEGMENT
__real@4b742400 DD 04b742400r			; 1.6e+07
CONST	ENDS
;	COMDAT __real@4b40005a
CONST	SEGMENT
__real@4b40005a DD 04b40005ar			; 1.2583e+07
CONST	ENDS
;	COMDAT __real@49742400
CONST	SEGMENT
__real@49742400 DD 049742400r			; 1e+06
CONST	ENDS
;	COMDAT __real@46300000
CONST	SEGMENT
__real@46300000 DD 046300000r			; 11264
CONST	ENDS
;	COMDAT __real@46000000
CONST	SEGMENT
__real@46000000 DD 046000000r			; 8192
CONST	ENDS
;	COMDAT __real@45800000
CONST	SEGMENT
__real@45800000 DD 045800000r			; 4096
CONST	ENDS
;	COMDAT __real@45000000
CONST	SEGMENT
__real@45000000 DD 045000000r			; 2048
CONST	ENDS
;	COMDAT __real@44800000
CONST	SEGMENT
__real@44800000 DD 044800000r			; 1024
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40af400000000000
CONST	SEGMENT
__real@40af400000000000 DQ 040af400000000000r	; 4000
CONST	ENDS
;	COMDAT __real@40a0680000000000
CONST	SEGMENT
__real@40a0680000000000 DQ 040a0680000000000r	; 2100
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4079000000000000
CONST	SEGMENT
__real@4079000000000000 DQ 04079000000000000r	; 400
CONST	ENDS
;	COMDAT __real@4076800000000000
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@4056800000000000
CONST	SEGMENT
__real@4056800000000000 DQ 04056800000000000r	; 90
CONST	ENDS
;	COMDAT __real@401921fb60000000
CONST	SEGMENT
__real@401921fb60000000 DQ 0401921fb60000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb60000000
CONST	SEGMENT
__real@3ff921fb60000000 DQ 03ff921fb60000000r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe4cccccccccccd
CONST	SEGMENT
__real@3fe4cccccccccccd DQ 03fe4cccccccccccdr	; 0.65
CONST	ENDS
;	COMDAT __real@3fe2e147ae147ae1
CONST	SEGMENT
__real@3fe2e147ae147ae1 DQ 03fe2e147ae147ae1r	; 0.59
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3fbc28f5c28f5c29
CONST	SEGMENT
__real@3fbc28f5c28f5c29 DQ 03fbc28f5c28f5c29r	; 0.11
CONST	ENDS
;	COMDAT __real@3fb0000000000000
CONST	SEGMENT
__real@3fb0000000000000 DQ 03fb0000000000000r	; 0.0625
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@JNACGOFF@Unable?5to?5set?5sector?5scan?5radiu@
CONST	SEGMENT
??_C@_0DN@JNACGOFF@Unable?5to?5set?5sector?5scan?5radiu@ DB 'Unable to se'
	DB	't sector scan radius below 1. Tried to set to %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DN@LKGIAPGJ@Unable?5to?5set?5sector?5scan?5radiu@
CONST	SEGMENT
??_C@_0DN@LKGIAPGJ@Unable?5to?5set?5sector?5scan?5radiu@ DB 'Unable to se'
	DB	't sector scan radius above 7. Tried to set to %d', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?terrain_3d_sector_scan_radius@@3HA DD 04H		; terrain_3d_sector_scan_radius
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?outcode_3d_terrain@@YGXMMMMMMPAI0@Z
_TEXT	SEGMENT
_outcode$ = -12						; size = 4
_outcode2$ = -8						; size = 4
_outcode1$ = -4						; size = 4
_x_minimum_offset$ = 8					; size = 4
_x_maximum_offset$ = 12					; size = 4
_y_minimum_offset$ = 16					; size = 4
_y_maximum_offset$ = 20					; size = 4
_z_minimum_offset$ = 24					; size = 4
_z_maximum_offset$ = 28					; size = 4
_poutcode1$ = 32					; size = 4
_poutcode2$ = 36					; size = 4
?outcode_3d_terrain@@YGXMMMMMMPAI0@Z PROC		; outcode_3d_terrain, COMDAT

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 426  : 	unsigned int
; 427  : 		outcode1,
; 428  : 		outcode2,
; 429  : 		outcode;
; 430  : 
; 431  : 	outcode = get_3d_point_outcodes ( x_minimum_offset, y_minimum_offset, z_minimum_offset );

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _z_minimum_offset$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_minimum_offset$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	51		 push	 ecx
  00020	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_minimum_offset$[ebp]
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  0002f	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 432  : 	outcode1 = outcode;

  00032	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  00035	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 433  : 	outcode2 = outcode;

  00038	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  0003b	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 434  : 
; 435  : 	outcode = get_3d_point_outcodes ( x_minimum_offset, y_maximum_offset, z_minimum_offset );

  0003e	51		 push	 ecx
  0003f	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _z_minimum_offset$[ebp]
  00044	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00049	51		 push	 ecx
  0004a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_maximum_offset$[ebp]
  0004f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00054	51		 push	 ecx
  00055	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_minimum_offset$[ebp]
  0005a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005f	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  00064	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 436  : 	outcode1 |= outcode;

  00067	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  0006a	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  0006d	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 437  : 	outcode2 &= outcode;

  00070	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  00073	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  00076	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 438  : 
; 439  : 	outcode = get_3d_point_outcodes ( x_minimum_offset, y_minimum_offset, z_maximum_offset );

  00079	51		 push	 ecx
  0007a	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _z_maximum_offset$[ebp]
  0007f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00084	51		 push	 ecx
  00085	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_minimum_offset$[ebp]
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	51		 push	 ecx
  00090	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_minimum_offset$[ebp]
  00095	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0009a	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  0009f	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 440  : 	outcode1 |= outcode;

  000a2	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  000a5	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  000a8	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 441  : 	outcode2 &= outcode;

  000ab	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  000ae	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  000b1	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 442  : 
; 443  : 	outcode = get_3d_point_outcodes ( x_minimum_offset, y_maximum_offset, z_maximum_offset );

  000b4	51		 push	 ecx
  000b5	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _z_maximum_offset$[ebp]
  000ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000bf	51		 push	 ecx
  000c0	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_maximum_offset$[ebp]
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	51		 push	 ecx
  000cb	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x_minimum_offset$[ebp]
  000d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d5	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  000da	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 444  : 	outcode1 |= outcode;

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  000e0	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  000e3	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 445  : 	outcode2 &= outcode;

  000e6	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  000e9	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  000ec	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 446  : 
; 447  : 	outcode = get_3d_point_outcodes ( x_maximum_offset, y_minimum_offset, z_minimum_offset );

  000ef	51		 push	 ecx
  000f0	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _z_minimum_offset$[ebp]
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	51		 push	 ecx
  000fb	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_minimum_offset$[ebp]
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	51		 push	 ecx
  00106	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_maximum_offset$[ebp]
  0010b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00110	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  00115	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 448  : 	outcode1 |= outcode;

  00118	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  0011b	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  0011e	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 449  : 	outcode2 &= outcode;

  00121	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  00124	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  00127	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 450  : 
; 451  : 	outcode = get_3d_point_outcodes ( x_maximum_offset, y_maximum_offset, z_minimum_offset );

  0012a	51		 push	 ecx
  0012b	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _z_minimum_offset$[ebp]
  00130	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00135	51		 push	 ecx
  00136	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_maximum_offset$[ebp]
  0013b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00140	51		 push	 ecx
  00141	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_maximum_offset$[ebp]
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  00150	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 452  : 	outcode1 |= outcode;

  00153	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  00156	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  00159	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 453  : 	outcode2 &= outcode;

  0015c	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  0015f	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  00162	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 454  : 
; 455  : 	outcode = get_3d_point_outcodes ( x_maximum_offset, y_minimum_offset, z_maximum_offset );

  00165	51		 push	 ecx
  00166	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _z_maximum_offset$[ebp]
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	51		 push	 ecx
  00171	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _y_minimum_offset$[ebp]
  00176	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017b	51		 push	 ecx
  0017c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_maximum_offset$[ebp]
  00181	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00186	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  0018b	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 456  : 	outcode1 |= outcode;

  0018e	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  00191	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  00194	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 457  : 	outcode2 &= outcode;

  00197	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  0019a	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  0019d	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 458  : 
; 459  : 	outcode = get_3d_point_outcodes ( x_maximum_offset, y_maximum_offset, z_maximum_offset );

  001a0	51		 push	 ecx
  001a1	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _z_maximum_offset$[ebp]
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	51		 push	 ecx
  001ac	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y_maximum_offset$[ebp]
  001b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b6	51		 push	 ecx
  001b7	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_maximum_offset$[ebp]
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	e8 00 00 00 00	 call	 ?get_3d_point_outcodes@@YGIMMM@Z ; get_3d_point_outcodes
  001c6	89 45 f4	 mov	 DWORD PTR _outcode$[ebp], eax

; 460  : 	outcode1 |= outcode;

  001c9	8b 45 fc	 mov	 eax, DWORD PTR _outcode1$[ebp]
  001cc	0b 45 f4	 or	 eax, DWORD PTR _outcode$[ebp]
  001cf	89 45 fc	 mov	 DWORD PTR _outcode1$[ebp], eax

; 461  : 	outcode2 &= outcode;

  001d2	8b 45 f8	 mov	 eax, DWORD PTR _outcode2$[ebp]
  001d5	23 45 f4	 and	 eax, DWORD PTR _outcode$[ebp]
  001d8	89 45 f8	 mov	 DWORD PTR _outcode2$[ebp], eax

; 462  : 
; 463  : 	if ( poutcode1 )

  001db	83 7d 20 00	 cmp	 DWORD PTR _poutcode1$[ebp], 0
  001df	74 08		 je	 SHORT $LN2@outcode_3d

; 464  : 	{
; 465  : 		*poutcode1 = outcode1;

  001e1	8b 45 20	 mov	 eax, DWORD PTR _poutcode1$[ebp]
  001e4	8b 4d fc	 mov	 ecx, DWORD PTR _outcode1$[ebp]
  001e7	89 08		 mov	 DWORD PTR [eax], ecx
$LN2@outcode_3d:

; 466  : 	}
; 467  : 
; 468  : 	if ( poutcode2 )

  001e9	83 7d 24 00	 cmp	 DWORD PTR _poutcode2$[ebp], 0
  001ed	74 08		 je	 SHORT $LN3@outcode_3d

; 469  : 	{
; 470  : 		*poutcode2 = outcode2;

  001ef	8b 45 24	 mov	 eax, DWORD PTR _poutcode2$[ebp]
  001f2	8b 4d f8	 mov	 ecx, DWORD PTR _outcode2$[ebp]
  001f5	89 08		 mov	 DWORD PTR [eax], ecx
$LN3@outcode_3d:

; 471  : 	}
; 472  : }

  001f7	5f		 pop	 edi
  001f8	5e		 pop	 esi
  001f9	5b		 pop	 ebx
  001fa	8b e5		 mov	 esp, ebp
  001fc	5d		 pop	 ebp
  001fd	c2 20 00	 ret	 32			; 00000020H
?outcode_3d_terrain@@YGXMMMMMMPAI0@Z ENDP		; outcode_3d_terrain
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?get_terrain_3d_alpha@@YGHM@Z
_TEXT	SEGMENT
tv71 = -76						; size = 4
tv72 = -72						; size = 4
_ivalue$ = -4						; size = 4
_z$ = 8							; size = 4
?get_terrain_3d_alpha@@YGHM@Z PROC			; get_terrain_3d_alpha, COMDAT

; 297  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 298  : 
; 299  : 	//
; 300  : 	// See d3dfog.c for explanation of the formula
; 301  : 	//
; 302  : 
; 303  : 	int
; 304  : 		ivalue;
; 305  : 
; 306  : 	asm_convert_float_to_int ( ( ( terrain_3d_alpha_constant - z ) * terrain_3d_alpha_factor ), &ivalue );

  00009	8d 45 fc	 lea	 eax, DWORD PTR _ivalue$[ebp]
  0000c	50		 push	 eax
  0000d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_alpha_constant@@3MA
  00015	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _z$[ebp]
  0001a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_alpha_factor@@3MA
  00022	51		 push	 ecx
  00023	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 307  : 
; 308  : 	ivalue = bound ( ivalue, 0, 255 );

  0002d	83 7d fc 00	 cmp	 DWORD PTR _ivalue$[ebp], 0
  00031	7d 09		 jge	 SHORT $LN5@get_terrai
  00033	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
  0003a	eb 1e		 jmp	 SHORT $LN6@get_terrai
$LN5@get_terrai:
  0003c	81 7d fc ff 00
	00 00		 cmp	 DWORD PTR _ivalue$[ebp], 255 ; 000000ffH
  00043	7e 09		 jle	 SHORT $LN3@get_terrai
  00045	c7 45 b4 ff 00
	00 00		 mov	 DWORD PTR tv71[ebp], 255 ; 000000ffH
  0004c	eb 06		 jmp	 SHORT $LN4@get_terrai
$LN3@get_terrai:
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _ivalue$[ebp]
  00051	89 45 b4	 mov	 DWORD PTR tv71[ebp], eax
$LN4@get_terrai:
  00054	8b 4d b4	 mov	 ecx, DWORD PTR tv71[ebp]
  00057	89 4d b8	 mov	 DWORD PTR tv72[ebp], ecx
$LN6@get_terrai:
  0005a	8b 55 b8	 mov	 edx, DWORD PTR tv72[ebp]
  0005d	89 55 fc	 mov	 DWORD PTR _ivalue$[ebp], edx

; 309  : 
; 310  : 	return ( ivalue );

  00060	8b 45 fc	 mov	 eax, DWORD PTR _ivalue$[ebp]

; 311  : /*	value = terrain_3d_alpha_constant - z;
; 312  : 
; 313  : 	if ( *( ( int * ) &value ) < *( ( int * ) &float_value_zero ) )
; 314  : 	{
; 315  : 
; 316  : 		return ( 0 );
; 317  : 	}
; 318  : 	else
; 319  : 	{
; 320  : 
; 321  : 		value *= terrain_3d_alpha_factor;
; 322  : 
; 323  : 		if ( *( ( int * ) &value ) > *( ( int * ) &float_value_255 ) )
; 324  : 		{
; 325  : 
; 326  : 			return ( 255 );
; 327  : 		}
; 328  : 		else
; 329  : 		{
; 330  : 
; 331  : 			int
; 332  : 				int_value;
; 333  : 
; 334  : 			asm_convert_float_to_int ( value, &int_value );
; 335  : 
; 336  : 			return ( int_value );
; 337  : 		}
; 338  : 	}
; 339  : 	*/
; 340  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 04 00	 ret	 4
?get_terrain_3d_alpha@@YGHM@Z ENDP			; get_terrain_3d_alpha
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_slot$ = 8						; size = 4
?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; set_terrain_3d_zbuffer_constant, COMDAT

; 4261 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4262 : 
; 4263 : 	if ( d3d_using_hardware_tnl )

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_using_hardware_tnl@@3HA, 0 ; d3d_using_hardware_tnl
  00010	74 35		 je	 SHORT $LN2@set_terrai

; 4264 : 	{
; 4265 : 
; 4266 : 		if ( ( *( float * ) &slot->z ) > ( 3072 + TERRAIN_3D_SECTOR_SIDE_LENGTH * 4 ) )

  00012	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00015	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0001a	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@46300000
  00021	76 12		 jbe	 SHORT $LN4@set_terrai

; 4267 : 		{
; 4268 : 
; 4269 : 			zbuffer_constant = zbuffer_constant_normal_bias;

  00023	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  0002b	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 4270 : 		}
; 4271 : 		else

  00033	eb 10		 jmp	 SHORT $LN5@set_terrai
$LN4@set_terrai:

; 4272 : 		{
; 4273 : 
; 4274 : 			zbuffer_constant = zbuffer_constant_lowered_bias;

  00035	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_lowered_bias@@3NA
  0003d	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
$LN5@set_terrai:

; 4275 : 		}
; 4276 : 	}
; 4277 : 	else

  00045	eb 10		 jmp	 SHORT $LN3@set_terrai
$LN2@set_terrai:

; 4278 : 	{
; 4279 : 
; 4280 : 		zbuffer_constant = zbuffer_constant_lowered_bias;

  00047	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_lowered_bias@@3NA
  0004f	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0
$LN3@set_terrai:

; 4281 : 	}
; 4282 : }

  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	8b e5		 mov	 esp, ebp
  0005c	5d		 pop	 ebp
  0005d	c2 04 00	 ret	 4
?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; set_terrain_3d_zbuffer_constant
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?construct_3d_terrain_normal_line@@YGPAUVERTEX@@HPAH@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
_polygon_outcode$ = 12					; size = 4
?construct_3d_terrain_normal_line@@YGPAUVERTEX@@HPAH@Z PROC ; construct_3d_terrain_normal_line, COMDAT

; 4210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 4211 : /*
; 4212 : 	int
; 4213 : 		outcode,
; 4214 : 		outcode2;
; 4215 : 
; 4216 : 	//
; 4217 : 	// Always do 2 points in a line, cos they're guaranteed
; 4218 : 	//
; 4219 : 
; 4220 : 	outcode = transformed_3d_points[index].outcode;
; 4221 : 	outcode2 = transformed_3d_points[index].outcode;
; 4222 : 
; 4223 : 	//
; 4224 : 	// Second point
; 4225 : 	//
; 4226 : 
; 4227 : 	outcode |= terrain_transformed_3d_point_normals[index].outcode;
; 4228 : 	outcode2 &= terrain_transformed_3d_point_normals[index].outcode;
; 4229 : 
; 4230 : 	transformed_3d_points[index].next_vertex = &terrain_transformed_3d_point_normals[index];
; 4231 : 
; 4232 : 	terrain_transformed_3d_point_normals[index].next_vertex = NULL;
; 4233 : 
; 4234 : 	*polygon_outcode = outcode;
; 4235 : 
; 4236 : 	if ( outcode2 )
; 4237 : 	{
; 4238 : 
; 4239 : 		//
; 4240 : 		// The line is totally off the screen!
; 4241 : 		//
; 4242 : 
; 4243 : 		return ( NULL );
; 4244 : 	}
; 4245 : 	else
; 4246 : 	{
; 4247 : 
; 4248 : 		return ( &transformed_3d_points[index] );
; 4249 : 	}
; 4250 : 	*/
; 4251 : 
; 4252 : 	return ( NULL );

  00009	33 c0		 xor	 eax, eax

; 4253 : }

  0000b	5f		 pop	 edi
  0000c	5e		 pop	 esi
  0000d	5b		 pop	 ebx
  0000e	8b e5		 mov	 esp, ebp
  00010	5d		 pop	 ebp
  00011	c2 08 00	 ret	 8
?construct_3d_terrain_normal_line@@YGPAUVERTEX@@HPAH@Z ENDP ; construct_3d_terrain_normal_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_sector_point_normals@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_slot$ = 8						; size = 4
?draw_3d_terrain_sector_point_normals@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_sector_point_normals, COMDAT

; 3887 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3888 : /*
; 3889 : 	int
; 3890 : 		normal_index,
; 3891 : 		count;
; 3892 : 
; 3893 : 	float
; 3894 : 		current_sector_x_offset,
; 3895 : 		current_sector_z_offset,
; 3896 : 		current_sector_x_visual_offset,
; 3897 : 		current_sector_z_visual_offset,
; 3898 : 		oxmax,
; 3899 : 		oxmin,
; 3900 : 		oymax,
; 3901 : 		oymin;
; 3902 : 
; 3903 : 	int
; 3904 : 		ixmax,
; 3905 : 		ixmin,
; 3906 : 		iymax,
; 3907 : 		iymin;
; 3908 : 
; 3909 : 	terrain_3d_sector
; 3910 : 		*sector;
; 3911 : 
; 3912 : 	terrain_3d_point_xz
; 3913 : 		*points_xz;
; 3914 : 
; 3915 : 	terrain_3d_point_y
; 3916 : 		*points_y;
; 3917 : 
; 3918 : 	terrain_3d_normal_index
; 3919 : 		*normal_indices;
; 3920 : 
; 3921 : 	vertex
; 3922 : 		*result_points,
; 3923 : 		*result_point_normals;
; 3924 : 
; 3925 : 	//
; 3926 : 	// Set fpu precision
; 3927 : 	//
; 3928 : 
; 3929 : 	set_fpu_precision_mode_single ();
; 3930 : 
; 3931 : 	sector = &terrain_sectors[slot->sector.z][slot->sector.x];
; 3932 : 
; 3933 : 	points_xz = sector->points_xz;
; 3934 : 
; 3935 : 	points_y = sector->points_y;
; 3936 : 
; 3937 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );
; 3938 : 
; 3939 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );
; 3940 : 
; 3941 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;
; 3942 : 
; 3943 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;
; 3944 : 
; 3945 : 	normal_indices = sector->normal_changes;
; 3946 : 
; 3947 : 	result_points = transformed_3d_points;
; 3948 : 
; 3949 : 	result_point_normals = terrain_transformed_3d_point_normals;
; 3950 : 
; 3951 : 	//
; 3952 : 	// Initialise the first point normal index
; 3953 : 	//
; 3954 : 
; 3955 : 	normal_index = normal_indices->index;
; 3956 : 
; 3957 : 	//
; 3958 : 	// Now transform all the points.
; 3959 : 	//
; 3960 : 
; 3961 : 	for ( count = sector->number_of_points; count > 0; count-- )
; 3962 : 	{
; 3963 : 
; 3964 : 		float
; 3965 : 			posx,
; 3966 : 			posy,
; 3967 : 			posz,
; 3968 : 			x,
; 3969 : 			y,
; 3970 : 			z,
; 3971 : 			normal_pos_x,
; 3972 : 			normal_pos_y,
; 3973 : 			normal_pos_z;
; 3974 : 
; 3975 : 		if ( points_y->normal_change )
; 3976 : 		{
; 3977 : 
; 3978 : 			normal_indices++;
; 3979 : 
; 3980 : 			normal_index = normal_indices->index;
; 3981 : 		}
; 3982 : 
; 3983 : 		posx = ( ( float ) points_xz->x ) * TERRAIN_3D_XZ_SCALE;
; 3984 : 		posz = ( ( float ) points_xz->z ) * TERRAIN_3D_XZ_SCALE;
; 3985 : 		posy = terrain_3d_map_minimum_height + ( ( ( float ) points_y->y ) * terrain_3d_map_scaled_height_difference );
; 3986 : 
; 3987 : 		normal_pos_x = posx + terrain_3d_point_normals[normal_index].x * 20.0;
; 3988 : 		normal_pos_y = posy + terrain_3d_point_normals[normal_index].y * 20.0;
; 3989 : 		normal_pos_z = posz + terrain_3d_point_normals[normal_index].z * 20.0;
; 3990 : 
; 3991 : 		posx += current_sector_x_visual_offset;
; 3992 : 		posy -= visual_3d_vp->y;
; 3993 : 		posz += current_sector_z_visual_offset;
; 3994 : 
; 3995 : 		normal_pos_x += current_sector_x_visual_offset;
; 3996 : 		normal_pos_y -= visual_3d_vp->y;
; 3997 : 		normal_pos_z += current_sector_z_visual_offset;
; 3998 : 
; 3999 : 		z = posx * visual_3d_vp->attitude[2][0] +
; 4000 : 				posy * visual_3d_vp->attitude[2][1] +
; 4001 : 				posz * visual_3d_vp->attitude[2][2];
; 4002 : 
; 4003 : 		x = posx * visual_3d_vp->attitude[0][0] +
; 4004 : 				posy * visual_3d_vp->attitude[0][1] +
; 4005 : 				posz * visual_3d_vp->attitude[0][2];
; 4006 : 
; 4007 : 		y = posx * visual_3d_vp->attitude[1][0] +
; 4008 : 				posy * visual_3d_vp->attitude[1][1] +
; 4009 : 				posz * visual_3d_vp->attitude[1][2];
; 4010 : 
; 4011 : 		result_points->fog = 255;
; 4012 : 
; 4013 : 		if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )
; 4014 : 		{
; 4015 : 
; 4016 : 			float
; 4017 : 				q,
; 4018 : 				i,
; 4019 : 				j;
; 4020 : 
; 4021 : 			q = 1.0 / z;
; 4022 : 
; 4023 : 			result_points->x = ( float ) x;
; 4024 : 
; 4025 : 			result_points->y = ( float ) y;
; 4026 : 
; 4027 : 			result_points->z = ( float ) z;
; 4028 : 
; 4029 : 			i = ( active_3d_environment->screen_i_scale * x * q );
; 4030 : 
; 4031 : 			j = ( active_3d_environment->screen_j_scale * y * q );
; 4032 : 
; 4033 : 			result_points->j = ( float ) ( active_3d_environment->y_origin - j );
; 4034 : 
; 4035 : 			result_points->i = ( float ) ( active_3d_environment->x_origin + i );
; 4036 : 
; 4037 : 			result_points->q = ( float ) q;
; 4038 : 
; 4039 : 			oxmax = active_viewport.x_max - result_points->i;
; 4040 : 			oxmin = result_points->i - active_viewport.x_min;
; 4041 : 			oymax = active_viewport.y_max - result_points->j;
; 4042 : 			oymin = result_points->j - active_viewport.y_min;
; 4043 : 
; 4044 : 			ixmax = *( ( int * ) &oxmax );
; 4045 : 			ixmin = *( ( int * ) &oxmin );
; 4046 : 			iymax = *( ( int * ) &oymax );
; 4047 : 			iymin = *( ( int * ) &oymin );
; 4048 : 
; 4049 : 			result_points->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 4050 : 		}
; 4051 : 		else
; 4052 : 		{
; 4053 : 
; 4054 : 			result_points->outcode = CLIP_HITHER;
; 4055 : 
; 4056 : 			result_points->z = ( float ) z;
; 4057 : 
; 4058 : 			result_points->x = ( float ) x;
; 4059 : 
; 4060 : 			result_points->y = ( float ) y;
; 4061 : 		}
; 4062 : 
; 4063 : 
; 4064 : 		z = normal_pos_x * visual_3d_vp->attitude[2][0] +
; 4065 : 				normal_pos_y * visual_3d_vp->attitude[2][1] +
; 4066 : 				normal_pos_z * visual_3d_vp->attitude[2][2];
; 4067 : 
; 4068 : 		x = normal_pos_x * visual_3d_vp->attitude[0][0] +
; 4069 : 				normal_pos_y * visual_3d_vp->attitude[0][1] +
; 4070 : 				normal_pos_z * visual_3d_vp->attitude[0][2];
; 4071 : 
; 4072 : 		y = normal_pos_x * visual_3d_vp->attitude[1][0] +
; 4073 : 				normal_pos_y * visual_3d_vp->attitude[1][1] +
; 4074 : 				normal_pos_z * visual_3d_vp->attitude[1][2];
; 4075 : 
; 4076 : 		result_point_normals->fog = 255;
; 4077 : 
; 4078 : 		if ( *( ( int * ) &z ) >= *( ( int * ) &clip_hither ) )
; 4079 : 		{
; 4080 : 
; 4081 : 			float
; 4082 : 				q,
; 4083 : 				i,
; 4084 : 				j;
; 4085 : 
; 4086 : 			q = 1.0 / z;
; 4087 : 
; 4088 : 			result_point_normals->x = ( float ) x;
; 4089 : 
; 4090 : 			result_point_normals->y = ( float ) y;
; 4091 : 
; 4092 : 			result_point_normals->z = ( float ) z;
; 4093 : 
; 4094 : 			i = ( active_3d_environment->screen_i_scale * x * q );
; 4095 : 
; 4096 : 			j = ( active_3d_environment->screen_j_scale * y * q );
; 4097 : 
; 4098 : 			result_point_normals->j = ( float ) ( active_3d_environment->y_origin - j );
; 4099 : 
; 4100 : 			result_point_normals->i = ( float ) ( active_3d_environment->x_origin + i );
; 4101 : 
; 4102 : 			result_point_normals->q = ( float ) q;
; 4103 : 
; 4104 : 			oxmax = active_viewport.x_max - result_point_normals->i;
; 4105 : 			oxmin = result_point_normals->i - active_viewport.x_min;
; 4106 : 			oymax = active_viewport.y_max - result_point_normals->j;
; 4107 : 			oymin = result_point_normals->j - active_viewport.y_min;
; 4108 : 
; 4109 : 			ixmax = *( ( int * ) &oxmax );
; 4110 : 			ixmin = *( ( int * ) &oxmin );
; 4111 : 			iymax = *( ( int * ) &oymax );
; 4112 : 			iymin = *( ( int * ) &oymin );
; 4113 : 
; 4114 : 			result_point_normals->outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 4115 : 		}
; 4116 : 		else
; 4117 : 		{
; 4118 : 
; 4119 : 			result_point_normals->outcode = CLIP_HITHER;
; 4120 : 
; 4121 : 			result_point_normals->z = ( float ) z;
; 4122 : 
; 4123 : 			result_point_normals->x = ( float ) x;
; 4124 : 
; 4125 : 			result_point_normals->y = ( float ) y;
; 4126 : 		}
; 4127 : 
; 4128 : 		result_point_normals++;
; 4129 : 
; 4130 : 		result_points++;
; 4131 : 
; 4132 : 		points_xz++;
; 4133 : 
; 4134 : 		points_y++;
; 4135 : 	}
; 4136 : 
; 4137 : 	//
; 4138 : 	// Reset fpu precision
; 4139 : 	//
; 4140 : 
; 4141 : 	set_fpu_precision_mode_double ();
; 4142 : 
; 4143 : //	set_d3d_int_state ( D3DRENDERSTATE_ZENABLE, FALSE );
; 4144 : 
; 4145 : //	set_d3d_int_state ( D3DRENDERSTATE_ZFUNC, D3DCMP_ALWAYS );
; 4146 : 
; 4147 : 	suspend_d3d_fog ();
; 4148 : 
; 4149 : 	//
; 4150 : 	// Go through the points - drawing the point normals
; 4151 : 	//
; 4152 : 
; 4153 : 	for ( count = 0; count < sector->number_of_points; count++ )
; 4154 : 	{
; 4155 : 
; 4156 : 		vertex
; 4157 : 			*line;
; 4158 : 
; 4159 : 		int
; 4160 : 			outcode;
; 4161 : 
; 4162 : 		line = construct_3d_terrain_normal_line ( count, &outcode );
; 4163 : 
; 4164 : 		clip_3d_coord = 0;
; 4165 : 
; 4166 : 		if ( line )
; 4167 : 		{
; 4168 : 
; 4169 : 			if ( outcode & CLIP_HITHER )
; 4170 : 			{
; 4171 : 
; 4172 : 				line = hither_clip_3d_polygon ( line, &outcode );
; 4173 : 			}
; 4174 : 
; 4175 : 			if ( line )
; 4176 : 			{
; 4177 : 
; 4178 : 				if ( outcode )
; 4179 : 				{
; 4180 : 
; 4181 : 					line = clip_3d_polygon ( line, outcode );
; 4182 : 				}
; 4183 : 
; 4184 : 				if ( line )
; 4185 : 				{
; 4186 : 
; 4187 : 					real_colour
; 4188 : 						colour;
; 4189 : 
; 4190 : 					colour.red = 255;
; 4191 : 					colour.green = 0;
; 4192 : 					colour.blue = 0;
; 4193 : 					colour.alpha = 0;
; 4194 : 
; 4195 : 					draw_d3d_plain_line ( line, colour );
; 4196 : 				}
; 4197 : 			}
; 4198 : 		}
; 4199 : 	}
; 4200 : 
; 4201 : 	reinstate_d3d_fog ();
; 4202 : 	*/
; 4203 : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?draw_3d_terrain_sector_point_normals@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_sector_point_normals
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_unclipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -172				; size = 4
_number_of_points$2 = -168				; size = 4
_colour_index$3 = -164					; size = 4
_ib$4 = -160						; size = 4
_ig$5 = -156						; size = 4
_ir$6 = -152						; size = 4
_grey$7 = -148						; size = 4
_b$8 = -144						; size = 4
_g$9 = -140						; size = 4
_r$10 = -136						; size = 4
_j$11 = -132						; size = 4
_i$12 = -128						; size = 4
_q$13 = -124						; size = 4
_y$14 = -120						; size = 4
_x$15 = -116						; size = 4
_posz$16 = -112						; size = 4
_posy$17 = -108						; size = 4
_posx$18 = -104						; size = 4
_scaled_rotation$ = -100				; size = 36
_result_colours$ = -64					; size = 4
_result_2d_points$ = -60				; size = 4
_colour_indices$ = -56					; size = 4
_colours$ = -52						; size = 4
_normal_indices$ = -48					; size = 4
_surface$ = -44						; size = 4
_polygon$ = -40						; size = 4
_points_y$ = -36					; size = 4
_points_xz$ = -32					; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_unclipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_unclipped_bw_sector, COMDAT

; 3525 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3526 : 
; 3527 : 	int
; 3528 : 		normal_index,
; 3529 : 		count;
; 3530 : 
; 3531 : 	float
; 3532 : 		current_sector_x_offset,
; 3533 : 		current_sector_z_offset,
; 3534 : 		current_sector_x_visual_offset,
; 3535 : 		current_sector_y_visual_offset,
; 3536 : 		current_sector_z_visual_offset;
; 3537 : 
; 3538 : 	terrain_3d_point_xz
; 3539 : 		*points_xz;
; 3540 : 
; 3541 : 	terrain_3d_point_y
; 3542 : 		*points_y;
; 3543 : 
; 3544 : 	terrain_3d_face
; 3545 : 		*polygon;
; 3546 : 
; 3547 : 	terrain_3d_surface
; 3548 : 		*surface;
; 3549 : 
; 3550 : 	terrain_3d_normal_index
; 3551 : 		*normal_indices;
; 3552 : 
; 3553 : 	terrain_3d_colour
; 3554 : 		*colours;
; 3555 : 
; 3556 : 	terrain_3d_colour_index
; 3557 : 		*colour_indices;
; 3558 : 
; 3559 : 	object_transformed_2d_point
; 3560 : 		*result_2d_points;
; 3561 : 
; 3562 : 	terrain_3d_transformed_point_colour
; 3563 : 		*result_colours;
; 3564 : 
; 3565 : 	float
; 3566 : 		scaled_rotation[3][3];
; 3567 : 
; 3568 : 	//
; 3569 : 	// Set fpu precision
; 3570 : 	//
; 3571 : 
; 3572 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 3573 : 
; 3574 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 3575 : 
; 3576 : 	terrain_3d_sectors_totally_visible++;

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_totally_visible@@3HA ; terrain_3d_sectors_totally_visible
  00023	83 c0 01	 add	 eax, 1
  00026	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_totally_visible@@3HA, eax ; terrain_3d_sectors_totally_visible

; 3577 : 
; 3578 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0002b	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0002e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00031	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00034	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  00038	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  0003e	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 3579 : 
; 3580 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 3581 : //	{
; 3582 : //
; 3583 : //		current_terrain_sector = current_terrain_sector->approximation;
; 3584 : //	}
; 3585 : 
; 3586 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 3587 : 
; 3588 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00059	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 3589 : 
; 3590 : 	points_xz = current_terrain_points_xz;

  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  00067	89 45 e0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 3591 : 
; 3592 : 	points_y = current_terrain_points_y;

  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  0006f	89 45 dc	 mov	 DWORD PTR _points_y$[ebp], eax

; 3593 : 
; 3594 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 3595 : 
; 3596 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 3597 : 
; 3598 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00072	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00075	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00078	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0007b	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00081	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00085	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 3599 : 
; 3600 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0008a	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0008d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00090	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00093	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00099	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0009d	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 3601 : 
; 3602 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000a7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  000ac	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000b0	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 3603 : 
; 3604 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ba	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000bf	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000c4	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 3605 : 
; 3606 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000d6	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000db	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 3607 : 
; 3608 : 	colours = current_terrain_sector->point_colours;

  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e5	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e8	89 4d cc	 mov	 DWORD PTR _colours$[ebp], ecx

; 3609 : 
; 3610 : 	colour_indices = current_terrain_sector->colour_indices;

  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000f0	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f3	89 4d c8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 3611 : 
; 3612 : 	normal_indices = current_terrain_sector->normal_changes;

  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000fb	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000fe	89 4d d0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 3613 : 
; 3614 : 	result_2d_points = transformed_3d_2d_points;

  00101	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 3615 : 
; 3616 : 	result_colours = transformed_3d_point_colours;

  00108	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 3617 : 
; 3618 : 	//
; 3619 : 	// Now transform all the points. Have rgb & ramp solutions though.
; 3620 : 	//
; 3621 : 
; 3622 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00114	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00117	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  0011d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 3623 : 
; 3624 : 	normal_index = normal_indices->index;

  00123	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00126	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00129	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 3625 : 
; 3626 : 	//
; 3627 : 	// Set up the scaled rotation matrix
; 3628 : 	//
; 3629 : 
; 3630 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0012c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0013a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0013e	b9 04 00 00 00	 mov	 ecx, 4
  00143	6b d1 00	 imul	 edx, ecx, 0
  00146	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0014c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00151	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00155	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0015a	6b c2 00	 imul	 eax, edx, 0
  0015d	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00161	ba 04 00 00 00	 mov	 edx, 4
  00166	6b c2 00	 imul	 eax, edx, 0
  00169	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3631 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  0016e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00173	6b c8 00	 imul	 ecx, eax, 0
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0017c	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00180	b9 04 00 00 00	 mov	 ecx, 4
  00185	c1 e1 00	 shl	 ecx, 0
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0018e	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00193	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00197	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0019c	6b c8 00	 imul	 ecx, eax, 0
  0019f	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001a3	b8 04 00 00 00	 mov	 eax, 4
  001a8	c1 e0 00	 shl	 eax, 0
  001ab	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3632 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001b0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b5	6b c8 00	 imul	 ecx, eax, 0
  001b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001be	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001c2	b9 04 00 00 00	 mov	 ecx, 4
  001c7	d1 e1		 shl	 ecx, 1
  001c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001cf	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001d4	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001d8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001dd	6b c8 00	 imul	 ecx, eax, 0
  001e0	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001e4	b8 04 00 00 00	 mov	 eax, 4
  001e9	d1 e0		 shl	 eax, 1
  001eb	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3633 : 
; 3634 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  001f0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001f5	c1 e0 00	 shl	 eax, 0
  001f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001fe	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00202	b8 04 00 00 00	 mov	 eax, 4
  00207	6b c8 00	 imul	 ecx, eax, 0
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0020f	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00214	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00219	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0021e	c1 e1 00	 shl	 ecx, 0
  00221	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00225	b8 04 00 00 00	 mov	 eax, 4
  0022a	6b c8 00	 imul	 ecx, eax, 0
  0022d	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3635 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  00232	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00237	c1 e0 00	 shl	 eax, 0
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00240	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00244	b8 04 00 00 00	 mov	 eax, 4
  00249	c1 e0 00	 shl	 eax, 0
  0024c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00252	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00257	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  0025c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00261	c1 e2 00	 shl	 edx, 0
  00264	8d 44 15 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00268	b9 04 00 00 00	 mov	 ecx, 4
  0026d	c1 e1 00	 shl	 ecx, 0
  00270	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3636 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  00275	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0027a	c1 e0 00	 shl	 eax, 0
  0027d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00283	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00287	b8 04 00 00 00	 mov	 eax, 4
  0028c	d1 e0		 shl	 eax, 1
  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00294	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00299	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  0029e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002a3	c1 e2 00	 shl	 edx, 0
  002a6	8d 44 15 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002aa	b9 04 00 00 00	 mov	 ecx, 4
  002af	d1 e1		 shl	 ecx, 1
  002b1	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3637 : 
; 3638 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002b6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002c3	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002c7	b8 04 00 00 00	 mov	 eax, 4
  002cc	6b c8 00	 imul	 ecx, eax, 0
  002cf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002d4	d1 e0		 shl	 eax, 1
  002d6	8d 44 05 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  002da	be 04 00 00 00	 mov	 esi, 4
  002df	6b f6 00	 imul	 esi, esi, 0
  002e2	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  002e5	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 3639 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	c1 e0 00	 shl	 eax, 0
  00301	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00306	d1 e1		 shl	 ecx, 1
  00308	8d 4c 0d 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0030c	be 04 00 00 00	 mov	 esi, 4
  00311	c1 e6 00	 shl	 esi, 0
  00314	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00317	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 3640 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  0031a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0031f	d1 e0		 shl	 eax, 1
  00321	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00327	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032b	b8 04 00 00 00	 mov	 eax, 4
  00330	d1 e0		 shl	 eax, 1
  00332	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00337	d1 e1		 shl	 ecx, 1
  00339	8d 4c 0d 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0033d	be 04 00 00 00	 mov	 esi, 4
  00342	d1 e6		 shl	 esi, 1
  00344	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00347	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 3641 : 
; 3642 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  0034a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0034f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00352	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00355	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00357	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0035a	83 e8 01	 sub	 eax, 1
  0035d	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  00360	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00364	0f 8e 67 04 00
	00		 jle	 $LN3@draw_3d_te

; 3643 : 	{
; 3644 : 
; 3645 : 		float
; 3646 : 			posx,
; 3647 : 			posy,
; 3648 : 			posz,
; 3649 : 			x,
; 3650 : 			y,
; 3651 : 			q,
; 3652 : 			i,
; 3653 : 			j,
; 3654 : 			r,
; 3655 : 			g,
; 3656 : 			b,
; 3657 : 			grey;
; 3658 : 
; 3659 : 		int
; 3660 : 			ir,
; 3661 : 			ig,
; 3662 : 			ib,
; 3663 : 			colour_index;
; 3664 : 
; 3665 : 		current_terrain_y_int = points_y->y;

  0036a	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  0036f	8b 4d dc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  00372	66 23 01	 and	 ax, WORD PTR [ecx]
  00375	0f b7 d0	 movzx	 edx, ax
  00378	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 3666 : 
; 3667 : //		set_terrain_y_int_value ( points_y );
; 3668 : 
; 3669 : 		if ( points_y->normal_change )

  0037e	8b 45 dc	 mov	 eax, DWORD PTR _points_y$[ebp]
  00381	66 8b 08	 mov	 cx, WORD PTR [eax]
  00384	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  00388	66 83 e1 01	 and	 cx, 1
  0038c	0f b7 d1	 movzx	 edx, cx
  0038f	85 d2		 test	 edx, edx
  00391	74 12		 je	 SHORT $LN11@draw_3d_te

; 3670 : 		{
; 3671 : 
; 3672 : 			normal_indices++;

  00393	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00396	83 c0 01	 add	 eax, 1
  00399	89 45 d0	 mov	 DWORD PTR _normal_indices$[ebp], eax

; 3673 : 
; 3674 : 			normal_index = normal_indices->index;

  0039c	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  0039f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003a2	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx
$LN11@draw_3d_te:

; 3675 : 		}
; 3676 : 
; 3677 : 		posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  003a5	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003a8	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  003ab	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003af	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003b7	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  003bc	f3 0f 11 45 98	 movss	 DWORD PTR _posx$18[ebp], xmm0

; 3678 : 		posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  003c1	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003c4	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  003c8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003cc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003d4	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  003d9	f3 0f 11 45 90	 movss	 DWORD PTR _posz$16[ebp], xmm0

; 3679 : 		posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  003de	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  003e6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  003ee	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  003f3	f3 0f 11 45 94	 movss	 DWORD PTR _posy$17[ebp], xmm0

; 3680 : 
; 3681 : 		x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  003f8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003fd	6b c8 00	 imul	 ecx, eax, 0
  00400	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00404	b8 04 00 00 00	 mov	 eax, 4
  00409	6b c8 00	 imul	 ecx, eax, 0
  0040c	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$18[ebp]
  00411	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00416	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0041b	6b c2 00	 imul	 eax, edx, 0
  0041e	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00422	ba 04 00 00 00	 mov	 edx, 4
  00427	c1 e2 00	 shl	 edx, 0
  0042a	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$17[ebp]
  0042f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00434	f3 0f 58 c1	 addss	 xmm0, xmm1
  00438	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0043d	6b c8 00	 imul	 ecx, eax, 0
  00440	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00444	b8 04 00 00 00	 mov	 eax, 4
  00449	d1 e0		 shl	 eax, 1
  0044b	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$16[ebp]
  00450	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00455	f3 0f 58 c1	 addss	 xmm0, xmm1
  00459	f3 0f 11 45 8c	 movss	 DWORD PTR _x$15[ebp], xmm0

; 3682 : 		y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  0045e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00463	c1 e0 00	 shl	 eax, 0
  00466	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  0046a	ba 04 00 00 00	 mov	 edx, 4
  0046f	6b c2 00	 imul	 eax, edx, 0
  00472	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$18[ebp]
  00477	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0047c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00481	c1 e1 00	 shl	 ecx, 0
  00484	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00488	b8 04 00 00 00	 mov	 eax, 4
  0048d	c1 e0 00	 shl	 eax, 0
  00490	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$17[ebp]
  00495	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0049a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0049e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004a3	c1 e1 00	 shl	 ecx, 0
  004a6	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004aa	b8 04 00 00 00	 mov	 eax, 4
  004af	d1 e0		 shl	 eax, 1
  004b1	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$16[ebp]
  004b6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004bb	f3 0f 58 c1	 addss	 xmm0, xmm1
  004bf	f3 0f 11 45 88	 movss	 DWORD PTR _y$14[ebp], xmm0

; 3683 : 		result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  004c4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c9	d1 e0		 shl	 eax, 1
  004cb	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  004cf	ba 04 00 00 00	 mov	 edx, 4
  004d4	6b c2 00	 imul	 eax, edx, 0
  004d7	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$18[ebp]
  004dc	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  004e1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004e6	d1 e1		 shl	 ecx, 1
  004e8	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004ec	b8 04 00 00 00	 mov	 eax, 4
  004f1	c1 e0 00	 shl	 eax, 0
  004f4	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$17[ebp]
  004f9	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00502	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00507	d1 e1		 shl	 ecx, 1
  00509	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0050d	b8 04 00 00 00	 mov	 eax, 4
  00512	d1 e0		 shl	 eax, 1
  00514	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$16[ebp]
  00519	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0051e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00522	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00525	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 3684 : 
; 3685 : 		colour_index = colour_indices->index;

  0052a	8b 45 c8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  0052d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00530	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _colour_index$3[ebp], ecx

; 3686 : 
; 3687 : 		r = colours[colour_index].red;

  00536	6b 85 5c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  0053d	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  00540	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00544	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00548	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _r$10[ebp], xmm0

; 3688 : 		g = colours[colour_index].green;

  00550	6b 85 5c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  00557	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  0055a	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  0055f	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00563	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _g$9[ebp], xmm0

; 3689 : 		b = colours[colour_index].blue;

  0056b	6b 85 5c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  00572	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  00575	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  0057a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0057e	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _b$8[ebp], xmm0

; 3690 : 
; 3691 : 		r *= 0.3;

  00586	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$10[ebp]
  0058e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00596	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0059a	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _r$10[ebp], xmm0

; 3692 : 		g *= 0.59;

  005a2	f3 0f 5a 85 74
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _g$9[ebp]
  005aa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe2e147ae147ae1
  005b2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b6	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _g$9[ebp], xmm0

; 3693 : 		b *= 0.11;

  005be	f3 0f 5a 85 70
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _b$8[ebp]
  005c6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fbc28f5c28f5c29
  005ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005d2	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _b$8[ebp], xmm0

; 3694 : 
; 3695 : 		grey = r * 0.3 + g * 0.59 + b * 0.11;

  005da	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$10[ebp]
  005e2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  005ea	f3 0f 5a 8d 74
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _g$9[ebp]
  005f2	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  005fa	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005fe	f3 0f 5a 8d 70
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _b$8[ebp]
  00606	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  0060e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00612	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00616	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _grey$7[ebp], xmm0

; 3696 : 
; 3697 : 		r = grey * terrain_3d_transformed_point_normals[normal_index].r;

  0061e	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  00621	c1 e0 04	 shl	 eax, 4
  00624	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$7[ebp]
  0062c	f3 0f 59 80 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax]
  00634	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _r$10[ebp], xmm0

; 3698 : 		g = grey * terrain_3d_transformed_point_normals[normal_index].g;

  0063c	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0063f	c1 e0 04	 shl	 eax, 4
  00642	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$7[ebp]
  0064a	f3 0f 59 80 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+4]
  00652	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _g$9[ebp], xmm0

; 3699 : 		b = grey * terrain_3d_transformed_point_normals[normal_index].b;

  0065a	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0065d	c1 e0 04	 shl	 eax, 4
  00660	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$7[ebp]
  00668	f3 0f 59 80 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+8]
  00670	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _b$8[ebp], xmm0

; 3700 : 
; 3701 : 		asm_convert_float_to_int ( r, &ir );

  00678	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _ir$6[ebp]
  0067e	50		 push	 eax
  0067f	51		 push	 ecx
  00680	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _r$10[ebp]
  00688	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0068d	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3702 : 		asm_convert_float_to_int ( g, &ig );

  00692	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ig$5[ebp]
  00698	50		 push	 eax
  00699	51		 push	 ecx
  0069a	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _g$9[ebp]
  006a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a7	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3703 : 		asm_convert_float_to_int ( b, &ib );

  006ac	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _ib$4[ebp]
  006b2	50		 push	 eax
  006b3	51		 push	 ecx
  006b4	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _b$8[ebp]
  006bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006c1	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3704 : 
; 3705 : 		result_colours->red = ir;

  006c6	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006c9	8a 8d 68 ff ff
	ff		 mov	 cl, BYTE PTR _ir$6[ebp]
  006cf	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 3706 : 		result_colours->green = ig;

  006d2	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006d5	8a 8d 64 ff ff
	ff		 mov	 cl, BYTE PTR _ig$5[ebp]
  006db	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 3707 : 		result_colours->blue = ib;

  006de	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006e1	8a 8d 60 ff ff
	ff		 mov	 cl, BYTE PTR _ib$4[ebp]
  006e7	88 08		 mov	 BYTE PTR [eax], cl

; 3708 : 		result_colours->normal_index = normal_index;

  006e9	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006ec	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  006ef	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 3709 : 
; 3710 : 		result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  006f2	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006f5	51		 push	 ecx
  006f6	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00700	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  00705	8b 4d c0	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00708	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 3711 : 		result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  0070b	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0070e	51		 push	 ecx
  0070f	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00714	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00719	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  0071e	8b 4d c0	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00721	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 3712 : 
; 3713 : 		q = 1.0 / result_2d_points->z;

  00724	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00727	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0072c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00734	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00738	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0073c	f3 0f 11 45 84	 movss	 DWORD PTR _q$13[ebp], xmm0

; 3714 : 
; 3715 : 		i = ( x * q );

  00741	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _x$15[ebp]
  00746	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _q$13[ebp]
  0074b	f3 0f 11 45 80	 movss	 DWORD PTR _i$12[ebp], xmm0

; 3716 : 		j = ( y * q );

  00750	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _y$14[ebp]
  00755	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _q$13[ebp]
  0075a	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _j$11[ebp], xmm0

; 3717 : 
; 3718 : 		result_2d_points->j = ( active_3d_environment->y_origin - j );

  00762	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00767	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0076c	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _j$11[ebp]
  00774	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00777	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 3719 : 		result_2d_points->i = ( active_3d_environment->x_origin + i );

  0077c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00781	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00786	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _i$12[ebp]
  0078b	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  0078e	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 3720 : 		result_2d_points->q = q;

  00792	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00795	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _q$13[ebp]
  0079a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 3721 : 
; 3722 : 		result_2d_points++;

  0079f	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  007a2	83 c0 10	 add	 eax, 16			; 00000010H
  007a5	89 45 c4	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 3723 : 		result_colours++;

  007a8	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  007ab	83 c0 08	 add	 eax, 8
  007ae	89 45 c0	 mov	 DWORD PTR _result_colours$[ebp], eax

; 3724 : 
; 3725 : 		points_xz++;

  007b1	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  007b4	83 c0 04	 add	 eax, 4
  007b7	89 45 e0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 3726 : 		points_y++;

  007ba	8b 45 dc	 mov	 eax, DWORD PTR _points_y$[ebp]
  007bd	83 c0 02	 add	 eax, 2
  007c0	89 45 dc	 mov	 DWORD PTR _points_y$[ebp], eax

; 3727 : 		colour_indices++;

  007c3	8b 45 c8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  007c6	83 c0 01	 add	 eax, 1
  007c9	89 45 c8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 3728 : 	}

  007cc	e9 86 fb ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 3729 : 
; 3730 : 	//
; 3731 : 	// Reset fpu precision
; 3732 : 	//
; 3733 : 
; 3734 : 	set_fpu_precision_mode_double ();

  007d1	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 3735 : 
; 3736 : 	//
; 3737 : 	// Set the cullmode ( terrain isn't culled in software )
; 3738 : 	//
; 3739 : 
; 3740 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  007d6	6a 03		 push	 3
  007d8	6a 16		 push	 22			; 00000016H
  007da	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3741 : 
; 3742 : 	//
; 3743 : 	// Set the rendering states for the terrain polygons
; 3744 : 	//
; 3745 : 
; 3746 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  007df	6a 00		 push	 0
  007e1	6a 1d		 push	 29			; 0000001dH
  007e3	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3747 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  007e8	6a 02		 push	 2
  007ea	6a 09		 push	 9
  007ec	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3748 : 
; 3749 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  007f1	6a 01		 push	 1
  007f3	6a 0c		 push	 12			; 0000000cH
  007f5	6a 00		 push	 0
  007f7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3750 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  007fc	6a 01		 push	 1
  007fe	6a 0d		 push	 13			; 0000000dH
  00800	6a 00		 push	 0
  00802	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3751 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  00807	6a 01		 push	 1
  00809	6a 0e		 push	 14			; 0000000eH
  0080b	6a 00		 push	 0
  0080d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3752 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  00812	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  00817	50		 push	 eax
  00818	6a 10		 push	 16			; 00000010H
  0081a	6a 00		 push	 0
  0081c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3753 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  00821	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  00826	50		 push	 eax
  00827	6a 11		 push	 17			; 00000011H
  00829	6a 00		 push	 0
  0082b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3754 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  00830	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  00835	50		 push	 eax
  00836	6a 12		 push	 18			; 00000012H
  00838	6a 00		 push	 0
  0083a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3755 : #if ALLOW_TERRAIN_TEXTURES
; 3756 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  0083f	6a 04		 push	 4
  00841	6a 01		 push	 1
  00843	6a 00		 push	 0
  00845	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3757 : #else
; 3758 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 3759 : #endif
; 3760 : 
; 3761 : 	//
; 3762 : 	// Go through the polys in sector, backface culling them, and drawing them
; 3763 : 	//
; 3764 : 
; 3765 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  0084a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0084f	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00853	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  00859	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 3766 : 
; 3767 : 	polygon = current_terrain_sector->polygons;

  0085f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00864	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00867	89 4d d8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 3768 : 
; 3769 : 	surface = current_terrain_sector->surface_changes;

  0086a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0086f	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00872	89 4d d4	 mov	 DWORD PTR _surface$[ebp], ecx

; 3770 : 
; 3771 : 	current_terrain_type = surface->surface_id;

  00875	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00878	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0087b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3772 : 
; 3773 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00881	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00888	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  0088d	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3774 : 
; 3775 : 	reset_terrain_3d_buffered_polygons ();

  00892	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 3776 : 
; 3777 : 	set_d3d_texture ( 0, current_terrain_type_class->texture );

  00897	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  0089c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0089f	51		 push	 ecx
  008a0	6a 00		 push	 0
  008a2	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 3778 : 
; 3779 : 	set_terrain_3d_zbuffer_constant ( slot );

  008a7	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  008aa	50		 push	 eax
  008ab	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 3780 : 
; 3781 : 	if ( current_terrain_sector->number_of_points < 257 )

  008b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  008b5	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  008b8	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  008be	0f 8d c2 00 00
	00		 jge	 $LN12@draw_3d_te

; 3782 : 	{
; 3783 : 
; 3784 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  008c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  008c9	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  008cc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 3785 : 
; 3786 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  008d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  008d7	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  008db	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  008de	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  008e0	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  008e3	83 e8 01	 sub	 eax, 1
  008e6	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  008e9	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  008ed	0f 8e 8e 00 00
	00		 jle	 $LN6@draw_3d_te

; 3787 : 		{
; 3788 : 
; 3789 : 			int
; 3790 : 				number_of_points;
; 3791 : 
; 3792 : 			if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  008f3	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  008f6	8a 08		 mov	 cl, BYTE PTR [eax]
  008f8	c0 e9 07	 shr	 cl, 7
  008fb	80 e1 01	 and	 cl, 1
  008fe	0f b6 d1	 movzx	 edx, cl
  00901	85 d2		 test	 edx, edx
  00903	74 3b		 je	 SHORT $LN14@draw_3d_te

; 3793 : 			{
; 3794 : 
; 3795 : 				surface++;

  00905	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00908	83 c0 01	 add	 eax, 1
  0090b	89 45 d4	 mov	 DWORD PTR _surface$[ebp], eax

; 3796 : 
; 3797 : 				current_terrain_type = surface->surface_id;

  0090e	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00911	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00914	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3798 : 
; 3799 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  0091a	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00921	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00926	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3800 : 
; 3801 : 				//
; 3802 : 				// Flush any buffered polygons
; 3803 : 				//
; 3804 : 
; 3805 : 				draw_terrain_3d_buffered_polygons ();

  0092b	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3806 : 
; 3807 : 				set_d3d_texture ( 0, current_terrain_type_class->texture );

  00930	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00935	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00938	51		 push	 ecx
  00939	6a 00		 push	 0
  0093b	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN14@draw_3d_te:

; 3808 : 			}
; 3809 : 
; 3810 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00940	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00943	8a 08		 mov	 cl, BYTE PTR [eax]
  00945	80 e1 7f	 and	 cl, 127			; 0000007fH
  00948	0f b6 d1	 movzx	 edx, cl
  0094b	89 95 58 ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 3811 : 
; 3812 : 			current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00951	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00957	50		 push	 eax
  00958	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  0095e	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00961	ff d2		 call	 edx

; 3813 : 
; 3814 : 			terrain_3d_sector_point_byte_references += number_of_points;

  00963	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00968	03 85 58 ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  0096e	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 3815 : 
; 3816 : 			polygon++;

  00973	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00976	83 c0 01	 add	 eax, 1
  00979	89 45 d8	 mov	 DWORD PTR _polygon$[ebp], eax

; 3817 : 		}

  0097c	e9 5f ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 3818 : 	}
; 3819 : 	else

  00981	e9 c2 00 00 00	 jmp	 $LN9@draw_3d_te
$LN12@draw_3d_te:

; 3820 : 	{
; 3821 : 
; 3822 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  00986	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0098b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0098e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 3823 : 
; 3824 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00994	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00999	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0099d	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  009a0	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  009a2	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  009a5	83 e8 01	 sub	 eax, 1
  009a8	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  009ab	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  009af	0f 8e 93 00 00
	00		 jle	 $LN9@draw_3d_te

; 3825 : 		{
; 3826 : 
; 3827 : 			int
; 3828 : 				number_of_points;
; 3829 : 
; 3830 : 			if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  009b5	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  009b8	8a 08		 mov	 cl, BYTE PTR [eax]
  009ba	c0 e9 07	 shr	 cl, 7
  009bd	80 e1 01	 and	 cl, 1
  009c0	0f b6 d1	 movzx	 edx, cl
  009c3	85 d2		 test	 edx, edx
  009c5	74 3b		 je	 SHORT $LN15@draw_3d_te

; 3831 : 			{
; 3832 : 
; 3833 : 				surface++;

  009c7	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  009ca	83 c0 01	 add	 eax, 1
  009cd	89 45 d4	 mov	 DWORD PTR _surface$[ebp], eax

; 3834 : 
; 3835 : 				current_terrain_type = surface->surface_id;

  009d0	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  009d3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  009d6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3836 : 
; 3837 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  009dc	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  009e3	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  009e8	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3838 : 
; 3839 : 				//
; 3840 : 				// Flush any buffered polygons
; 3841 : 				//
; 3842 : 
; 3843 : 				draw_terrain_3d_buffered_polygons ();

  009ed	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3844 : 
; 3845 : 				set_d3d_texture ( 0, current_terrain_type_class->texture );

  009f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  009f7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  009fa	51		 push	 ecx
  009fb	6a 00		 push	 0
  009fd	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN15@draw_3d_te:

; 3846 : 			}
; 3847 : 
; 3848 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00a02	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00a05	8a 08		 mov	 cl, BYTE PTR [eax]
  00a07	80 e1 7f	 and	 cl, 127			; 0000007fH
  00a0a	0f b6 d1	 movzx	 edx, cl
  00a0d	89 95 54 ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 3849 : 
; 3850 : 			current_terrain_type_class->render_word_unclipped ( number_of_points );

  00a13	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00a19	50		 push	 eax
  00a1a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00a20	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00a23	ff d2		 call	 edx

; 3851 : 
; 3852 : 			terrain_3d_sector_point_word_references += number_of_points;

  00a25	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00a2b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00a31	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00a34	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 3853 : 
; 3854 : 			polygon++;

  00a3a	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00a3d	83 c0 01	 add	 eax, 1
  00a40	89 45 d8	 mov	 DWORD PTR _polygon$[ebp], eax

; 3855 : 		}

  00a43	e9 5a ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 3856 : 	}
; 3857 : 
; 3858 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00a48	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00a50	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 3859 : 
; 3860 : 	//
; 3861 : 	// Flush any buffered polygons
; 3862 : 	//
; 3863 : 
; 3864 : 	draw_terrain_3d_buffered_polygons ();

  00a58	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3865 : 
; 3866 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 3867 : 
; 3868 : 	//
; 3869 : 	// Render the point normals
; 3870 : 	//
; 3871 : 
; 3872 : 	suspend_d3d_fog ();
; 3873 : 
; 3874 : 	draw_3d_terrain_sector_point_normals ( slot );
; 3875 : 
; 3876 : 	reinstate_d3d_fog ();
; 3877 : 
; 3878 : #endif
; 3879 : 
; 3880 : }

  00a5d	5f		 pop	 edi
  00a5e	5e		 pop	 esi
  00a5f	5b		 pop	 ebx
  00a60	8b e5		 mov	 esp, ebp
  00a62	5d		 pop	 ebp
  00a63	c2 04 00	 ret	 4
?draw_3d_terrain_unclipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_unclipped_bw_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_2d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -232				; size = 4
_number_of_points$2 = -228				; size = 4
_j$3 = -224						; size = 4
_i$4 = -220						; size = 4
_q$5 = -216						; size = 4
_colour_index$6 = -212					; size = 4
_ib$7 = -208						; size = 4
_ig$8 = -204						; size = 4
_ir$9 = -200						; size = 4
_grey$10 = -196						; size = 4
_b$11 = -192						; size = 4
_g$12 = -188						; size = 4
_r$13 = -184						; size = 4
_posz$14 = -180						; size = 4
_posy$15 = -176						; size = 4
_posx$16 = -172						; size = 4
_scaled_rotation$ = -168				; size = 36
_last_transformed_point_outcode$ = -132			; size = 4
_result_outcodes$ = -128				; size = 4
_tmp_outcode$ = -121					; size = 1
_result_colours$ = -120					; size = 4
_result_2d_points$ = -116				; size = 4
_last_transformed_point$ = -112				; size = 4
_tmp_vertex$ = -108					; size = 16
_result_3d_points$ = -92				; size = 4
_colour_indices$ = -88					; size = 4
_colours$ = -84						; size = 4
_normal_indices$ = -80					; size = 4
_surface$ = -76						; size = 4
_polygon$ = -72						; size = 4
_points_y$ = -68					; size = 4
_points_xz$ = -64					; size = 4
_iymin$ = -60						; size = 4
_iymax$ = -56						; size = 4
_ixmin$ = -52						; size = 4
_ixmax$ = -48						; size = 4
_oymin$ = -44						; size = 4
_oymax$ = -40						; size = 4
_oxmin$ = -36						; size = 4
_oxmax$ = -32						; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_2d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_2d_clipped_bw_sector, COMDAT

; 3034 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 3035 : 
; 3036 : 	int
; 3037 : 		normal_index,
; 3038 : 		count;
; 3039 : 
; 3040 : 	float
; 3041 : 		current_sector_x_offset,
; 3042 : 		current_sector_z_offset,
; 3043 : 		current_sector_x_visual_offset,
; 3044 : 		current_sector_y_visual_offset,
; 3045 : 		current_sector_z_visual_offset,
; 3046 : 		oxmax,
; 3047 : 		oxmin,
; 3048 : 		oymax,
; 3049 : 		oymin;
; 3050 : 
; 3051 : 	unsigned int
; 3052 : 		ixmax,
; 3053 : 		ixmin,
; 3054 : 		iymax,
; 3055 : 		iymin;
; 3056 : 
; 3057 : 	terrain_3d_point_xz
; 3058 : 		*points_xz;
; 3059 : 
; 3060 : 	terrain_3d_point_y
; 3061 : 		*points_y;
; 3062 : 
; 3063 : 	terrain_3d_face
; 3064 : 		*polygon;
; 3065 : 
; 3066 : 	terrain_3d_surface
; 3067 : 		*surface;
; 3068 : 
; 3069 : 	terrain_3d_normal_index
; 3070 : 		*normal_indices;
; 3071 : 
; 3072 : 	terrain_3d_colour
; 3073 : 		*colours;
; 3074 : 
; 3075 : 	terrain_3d_colour_index
; 3076 : 		*colour_indices;
; 3077 : 
; 3078 : 	object_transformed_3d_point
; 3079 : 		*result_3d_points;
; 3080 : 
; 3081 : 	object_transformed_2d_point
; 3082 : 		tmp_vertex,
; 3083 : 		*last_transformed_point,
; 3084 : 		*result_2d_points;
; 3085 : 
; 3086 : 	terrain_3d_transformed_point_colour
; 3087 : 		*result_colours;
; 3088 : 
; 3089 : 	unsigned char
; 3090 : 		tmp_outcode,
; 3091 : 		*result_outcodes,
; 3092 : 		*last_transformed_point_outcode;
; 3093 : 
; 3094 : 	float
; 3095 : 		scaled_rotation[3][3];
; 3096 : 
; 3097 : 	//
; 3098 : 	// Set fpu precision
; 3099 : 	//
; 3100 : 
; 3101 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 3102 : 
; 3103 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 3104 : 
; 3105 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0001e	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00027	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  00031	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00034	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 3106 : 
; 3107 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 3108 : //	{
; 3109 : //
; 3110 : //		current_terrain_sector = current_terrain_sector->approximation;
; 3111 : //	}
; 3112 : 
; 3113 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 3114 : 
; 3115 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 3116 : 
; 3117 : 	points_xz = current_terrain_points_xz;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  0005a	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 3118 : 
; 3119 : 	points_y = current_terrain_points_y;

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  00062	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 3120 : 
; 3121 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 3122 : 
; 3123 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 3124 : 
; 3125 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00065	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00068	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006b	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0006e	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00074	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00078	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 3126 : 
; 3127 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0007d	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00080	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00083	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00086	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  0008c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00090	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 3128 : 
; 3129 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0009a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  0009f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000a3	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 3130 : 
; 3131 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000b2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 3132 : 
; 3133 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000c9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000ce	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 3134 : 
; 3135 : 	normal_indices = current_terrain_sector->normal_changes;

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000d8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000db	89 4d b0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 3136 : 
; 3137 : 	colours = current_terrain_sector->point_colours;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e6	89 4d ac	 mov	 DWORD PTR _colours$[ebp], ecx

; 3138 : 
; 3139 : 	colour_indices = current_terrain_sector->colour_indices;

  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000ee	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f1	89 4d a8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 3140 : 
; 3141 : 	result_3d_points = transformed_3d_3d_points;

  000f4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _result_3d_points$[ebp], OFFSET ?transformed_3d_3d_points@@3PAUOBJECT_TRANSFORMED_3D_POINT@@A ; transformed_3d_3d_points

; 3142 : 
; 3143 : 	result_2d_points = transformed_3d_2d_points;

  000fb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 3144 : 
; 3145 : 	result_outcodes = transformed_3d_point_outcodes;

  00102	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _result_outcodes$[ebp], OFFSET ?transformed_3d_point_outcodes@@3PAEA ; transformed_3d_point_outcodes

; 3146 : 
; 3147 : 	result_colours = transformed_3d_point_colours;

  00109	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 3148 : 
; 3149 : 	last_transformed_point = &tmp_vertex;

  00110	8d 45 94	 lea	 eax, DWORD PTR _tmp_vertex$[ebp]
  00113	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 3150 : 
; 3151 : 	last_transformed_point_outcode = &tmp_outcode;

  00116	8d 45 87	 lea	 eax, DWORD PTR _tmp_outcode$[ebp]
  00119	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 3152 : 
; 3153 : 	tmp_vertex.i = 0;

  0011f	0f 57 c0	 xorps	 xmm0, xmm0
  00122	f3 0f 11 45 94	 movss	 DWORD PTR _tmp_vertex$[ebp], xmm0

; 3154 : 	tmp_vertex.j = 0;

  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 11 45 98	 movss	 DWORD PTR _tmp_vertex$[ebp+4], xmm0

; 3155 : 
; 3156 : 	//
; 3157 : 	// Initialise the first point normal index
; 3158 : 	//
; 3159 : 
; 3160 : 	normal_index = normal_indices->index;

  0012f	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00132	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00135	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 3161 : 
; 3162 : 	//
; 3163 : 	// Now transform all the points.
; 3164 : 	//
; 3165 : 
; 3166 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0013d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00140	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  00146	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 3167 : 
; 3168 : 	//
; 3169 : 	// Set up the scaled rotation matrix
; 3170 : 	//
; 3171 : 
; 3172 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0014c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00151	6b c8 00	 imul	 ecx, eax, 0
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0015a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0015e	b9 04 00 00 00	 mov	 ecx, 4
  00163	6b d1 00	 imul	 edx, ecx, 0
  00166	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0016c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00171	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00175	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017a	6b c2 00	 imul	 eax, edx, 0
  0017d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00184	ba 04 00 00 00	 mov	 edx, 4
  00189	6b c2 00	 imul	 eax, edx, 0
  0018c	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 3173 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  00191	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00196	6b c8 00	 imul	 ecx, eax, 0
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0019f	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001a3	b9 04 00 00 00	 mov	 ecx, 4
  001a8	c1 e1 00	 shl	 ecx, 0
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001b1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001b6	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001bf	6b c8 00	 imul	 ecx, eax, 0
  001c2	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001c9	b8 04 00 00 00	 mov	 eax, 4
  001ce	c1 e0 00	 shl	 eax, 0
  001d1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3174 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001db	6b c8 00	 imul	 ecx, eax, 0
  001de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001e4	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001e8	b9 04 00 00 00	 mov	 ecx, 4
  001ed	d1 e1		 shl	 ecx, 1
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001f5	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001fa	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001fe	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00203	6b c8 00	 imul	 ecx, eax, 0
  00206	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0020d	b8 04 00 00 00	 mov	 eax, 4
  00212	d1 e0		 shl	 eax, 1
  00214	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 3175 : 
; 3176 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  00219	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021e	c1 e0 00	 shl	 eax, 0
  00221	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00227	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0022b	b8 04 00 00 00	 mov	 eax, 4
  00230	6b c8 00	 imul	 ecx, eax, 0
  00233	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00238	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0023d	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00242	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00247	c1 e1 00	 shl	 ecx, 0
  0024a	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00251	b8 04 00 00 00	 mov	 eax, 4
  00256	6b c8 00	 imul	 ecx, eax, 0
  00259	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 3177 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  0025e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00263	c1 e0 00	 shl	 eax, 0
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0026c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00270	b8 04 00 00 00	 mov	 eax, 4
  00275	c1 e0 00	 shl	 eax, 0
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0027e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00283	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00288	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0028d	c1 e2 00	 shl	 edx, 0
  00290	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00297	b9 04 00 00 00	 mov	 ecx, 4
  0029c	c1 e1 00	 shl	 ecx, 0
  0029f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3178 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  002a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a9	c1 e0 00	 shl	 eax, 0
  002ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002b2	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002b6	b8 04 00 00 00	 mov	 eax, 4
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  002c3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002c8	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  002cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002d2	c1 e2 00	 shl	 edx, 0
  002d5	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002dc	b9 04 00 00 00	 mov	 ecx, 4
  002e1	d1 e1		 shl	 ecx, 1
  002e3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 3179 : 
; 3180 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	6b c8 00	 imul	 ecx, eax, 0
  00301	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00306	d1 e0		 shl	 eax, 1
  00308	8d 84 05 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  0030f	be 04 00 00 00	 mov	 esi, 4
  00314	6b f6 00	 imul	 esi, esi, 0
  00317	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  0031a	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 3181 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  0031d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00322	d1 e0		 shl	 eax, 1
  00324	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0032a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032e	b8 04 00 00 00	 mov	 eax, 4
  00333	c1 e0 00	 shl	 eax, 0
  00336	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0033b	d1 e1		 shl	 ecx, 1
  0033d	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00344	be 04 00 00 00	 mov	 esi, 4
  00349	c1 e6 00	 shl	 esi, 0
  0034c	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  0034f	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 3182 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  00352	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00357	d1 e0		 shl	 eax, 1
  00359	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00363	b8 04 00 00 00	 mov	 eax, 4
  00368	d1 e0		 shl	 eax, 1
  0036a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0036f	d1 e1		 shl	 ecx, 1
  00371	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00378	be 04 00 00 00	 mov	 esi, 4
  0037d	d1 e6		 shl	 esi, 1
  0037f	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00382	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 3183 : 
; 3184 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0038a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0038d	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00390	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00392	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00395	83 e8 01	 sub	 eax, 1
  00398	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  0039b	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  0039f	0f 8e b2 05 00
	00		 jle	 $LN3@draw_3d_te

; 3185 : 	{
; 3186 : 
; 3187 : 		float
; 3188 : 			posx,
; 3189 : 			posy,
; 3190 : 			posz,
; 3191 : 			r,
; 3192 : 			g,
; 3193 : 			b,
; 3194 : 			grey;
; 3195 : 
; 3196 : 		int
; 3197 : 			ir,
; 3198 : 			ig,
; 3199 : 			ib,
; 3200 : 			colour_index;
; 3201 : 
; 3202 : 		//
; 3203 : 		// Read in all the memory variables
; 3204 : 		//
; 3205 : 
; 3206 : 		current_terrain_y_int = points_y->y;

  003a5	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  003aa	8b 4d bc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  003ad	66 23 01	 and	 ax, WORD PTR [ecx]
  003b0	0f b7 d0	 movzx	 edx, ax
  003b3	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 3207 : 
; 3208 : //		set_terrain_y_int_value ( points_y );
; 3209 : 
; 3210 : 		colour_index = colour_indices->index;

  003b9	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  003bc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003bf	89 8d 2c ff ff
	ff		 mov	 DWORD PTR _colour_index$6[ebp], ecx

; 3211 : 
; 3212 : 		posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  003c5	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003c8	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  003cb	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003cf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003d7	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  003dc	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _posx$16[ebp], xmm0

; 3213 : 		posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  003e4	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003e7	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  003eb	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003f7	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  003fc	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _posz$14[ebp], xmm0

; 3214 : 		posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  00404	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  0040c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  00414	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  00419	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _posy$15[ebp], xmm0

; 3215 : 
; 3216 : 		result_3d_points->x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  00421	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00426	6b c8 00	 imul	 ecx, eax, 0
  00429	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00430	b8 04 00 00 00	 mov	 eax, 4
  00435	6b c8 00	 imul	 ecx, eax, 0
  00438	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$16[ebp]
  00440	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00445	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0044a	6b c2 00	 imul	 eax, edx, 0
  0044d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00454	ba 04 00 00 00	 mov	 edx, 4
  00459	c1 e2 00	 shl	 edx, 0
  0045c	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$15[ebp]
  00464	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00469	f3 0f 58 c1	 addss	 xmm0, xmm1
  0046d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00472	6b c8 00	 imul	 ecx, eax, 0
  00475	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0047c	b8 04 00 00 00	 mov	 eax, 4
  00481	d1 e0		 shl	 eax, 1
  00483	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$14[ebp]
  0048b	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00490	f3 0f 58 c1	 addss	 xmm0, xmm1
  00494	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  00497	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 3217 : 		result_3d_points->y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  0049b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004a0	c1 e0 00	 shl	 eax, 0
  004a3	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  004aa	ba 04 00 00 00	 mov	 edx, 4
  004af	6b c2 00	 imul	 eax, edx, 0
  004b2	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$16[ebp]
  004ba	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  004bf	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004c4	c1 e1 00	 shl	 ecx, 0
  004c7	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004ce	b8 04 00 00 00	 mov	 eax, 4
  004d3	c1 e0 00	 shl	 eax, 0
  004d6	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$15[ebp]
  004de	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004e3	f3 0f 58 c1	 addss	 xmm0, xmm1
  004e7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004ec	c1 e1 00	 shl	 ecx, 0
  004ef	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004f6	b8 04 00 00 00	 mov	 eax, 4
  004fb	d1 e0		 shl	 eax, 1
  004fd	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$14[ebp]
  00505	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0050a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0050e	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  00511	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 3218 : 		result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  00516	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0051b	d1 e0		 shl	 eax, 1
  0051d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00524	ba 04 00 00 00	 mov	 edx, 4
  00529	6b c2 00	 imul	 eax, edx, 0
  0052c	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$16[ebp]
  00534	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00539	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0053e	d1 e1		 shl	 ecx, 1
  00540	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00547	b8 04 00 00 00	 mov	 eax, 4
  0054c	c1 e0 00	 shl	 eax, 0
  0054f	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$15[ebp]
  00557	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0055c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00560	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00565	d1 e1		 shl	 ecx, 1
  00567	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0056e	b8 04 00 00 00	 mov	 eax, 4
  00573	d1 e0		 shl	 eax, 1
  00575	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$14[ebp]
  0057d	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00582	f3 0f 58 c1	 addss	 xmm0, xmm1
  00586	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00589	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 3219 : 
; 3220 : 		normal_indices += points_y->normal_change;	//get_3d_terrain_point_y_normal_change ( points_y );

  0058e	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  00591	66 8b 08	 mov	 cx, WORD PTR [eax]
  00594	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  00598	66 83 e1 01	 and	 cx, 1
  0059c	0f b7 d1	 movzx	 edx, cx
  0059f	03 55 b0	 add	 edx, DWORD PTR _normal_indices$[ebp]
  005a2	89 55 b0	 mov	 DWORD PTR _normal_indices$[ebp], edx

; 3221 : 
; 3222 : 		normal_index = normal_indices->index;

  005a5	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  005a8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  005ab	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 3223 : 
; 3224 : 		r = colours[colour_index].red;

  005ae	6b 85 2c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  005b5	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  005b8	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  005bc	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  005c0	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _r$13[ebp], xmm0

; 3225 : 		g = colours[colour_index].green;

  005c8	6b 85 2c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  005cf	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  005d2	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  005d7	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  005db	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _g$12[ebp], xmm0

; 3226 : 		b = colours[colour_index].blue;

  005e3	6b 85 2c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  005ea	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  005ed	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  005f2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  005f6	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _b$11[ebp], xmm0

; 3227 : 
; 3228 : 		r *= 0.3;

  005fe	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$13[ebp]
  00606	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  0060e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00612	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _r$13[ebp], xmm0

; 3229 : 		g *= 0.59;

  0061a	f3 0f 5a 85 44
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _g$12[ebp]
  00622	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe2e147ae147ae1
  0062a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0062e	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _g$12[ebp], xmm0

; 3230 : 		b *= 0.11;

  00636	f3 0f 5a 85 40
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _b$11[ebp]
  0063e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fbc28f5c28f5c29
  00646	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0064a	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _b$11[ebp], xmm0

; 3231 : 
; 3232 : 		grey = r * 0.3 + g * 0.59 + b * 0.11;

  00652	f3 0f 5a 85 48
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$13[ebp]
  0065a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00662	f3 0f 5a 8d 44
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _g$12[ebp]
  0066a	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  00672	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00676	f3 0f 5a 8d 40
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _b$11[ebp]
  0067e	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  00686	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0068a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0068e	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _grey$10[ebp], xmm0

; 3233 : 
; 3234 : 		r = grey * terrain_3d_transformed_point_normals[normal_index].r;

  00696	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  00699	c1 e0 04	 shl	 eax, 4
  0069c	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$10[ebp]
  006a4	f3 0f 59 80 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax]
  006ac	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _r$13[ebp], xmm0

; 3235 : 		g = grey * terrain_3d_transformed_point_normals[normal_index].g;

  006b4	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  006b7	c1 e0 04	 shl	 eax, 4
  006ba	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$10[ebp]
  006c2	f3 0f 59 80 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+4]
  006ca	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _g$12[ebp], xmm0

; 3236 : 		b = grey * terrain_3d_transformed_point_normals[normal_index].b;

  006d2	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  006d5	c1 e0 04	 shl	 eax, 4
  006d8	f3 0f 10 85 3c
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$10[ebp]
  006e0	f3 0f 59 80 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+8]
  006e8	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _b$11[ebp], xmm0

; 3237 : 
; 3238 : 		asm_convert_float_to_int ( r, &ir );

  006f0	8d 85 38 ff ff
	ff		 lea	 eax, DWORD PTR _ir$9[ebp]
  006f6	50		 push	 eax
  006f7	51		 push	 ecx
  006f8	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _r$13[ebp]
  00700	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00705	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3239 : 		asm_convert_float_to_int ( g, &ig );

  0070a	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _ig$8[ebp]
  00710	50		 push	 eax
  00711	51		 push	 ecx
  00712	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _g$12[ebp]
  0071a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0071f	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3240 : 		asm_convert_float_to_int ( b, &ib );

  00724	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _ib$7[ebp]
  0072a	50		 push	 eax
  0072b	51		 push	 ecx
  0072c	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _b$11[ebp]
  00734	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00739	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 3241 : 
; 3242 : 		result_colours->red = ir;

  0073e	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00741	8a 8d 38 ff ff
	ff		 mov	 cl, BYTE PTR _ir$9[ebp]
  00747	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 3243 : 		result_colours->green = ig;

  0074a	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0074d	8a 8d 34 ff ff
	ff		 mov	 cl, BYTE PTR _ig$8[ebp]
  00753	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 3244 : 		result_colours->blue = ib;

  00756	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00759	8a 8d 30 ff ff
	ff		 mov	 cl, BYTE PTR _ib$7[ebp]
  0075f	88 08		 mov	 BYTE PTR [eax], cl

; 3245 : 		result_colours->normal_index = normal_index;

  00761	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00764	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  00767	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 3246 : 
; 3247 : 		result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  0076a	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0076d	51		 push	 ecx
  0076e	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00773	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00778	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  0077d	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00780	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 3248 : 		result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  00783	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00786	51		 push	 ecx
  00787	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0078c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00791	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  00796	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00799	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 3249 : 
; 3250 : 		{
; 3251 : 
; 3252 : 			float
; 3253 : 				q,
; 3254 : 				i,
; 3255 : 				j;
; 3256 : 
; 3257 : 			oxmax = active_viewport.x_max - last_transformed_point->i;

  0079c	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0079f	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  007a7	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  007ab	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 3258 : 			oxmin = last_transformed_point->i - active_viewport.x_min;

  007b0	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007b3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007b7	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  007bf	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 3259 : 			oymax = active_viewport.y_max - last_transformed_point->j;

  007c4	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007c7	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  007cf	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  007d4	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 3260 : 			oymin = last_transformed_point->j - active_viewport.y_min;

  007d9	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007dc	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  007e1	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  007e9	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 3261 : 
; 3262 : 			ixmax = *( ( unsigned int * ) &oxmax );

  007ee	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  007f1	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 3263 : 			ixmin = *( ( unsigned int * ) &oxmin );

  007f4	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  007f7	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 3264 : 			iymax = *( ( unsigned int * ) &oymax );

  007fa	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  007fd	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 3265 : 			iymin = *( ( unsigned int * ) &oymin );

  00800	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  00803	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 3266 : 
; 3267 : #ifdef __WATCOMC__
; 3268 : 
; 3269 : 			start_float_divide ( result_2d_points->z, 1.0 );
; 3270 : 
; 3271 : 			*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 3272 : 
; 3273 : 			q = end_float_divide ();
; 3274 : 
; 3275 : #else
; 3276 : 
; 3277 : 			q = 1.0 / result_2d_points->z;

  00806	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00809	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0080e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00816	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0081a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0081e	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _q$5[ebp], xmm0

; 3278 : 
; 3279 : 			ixmin >>= 31;

  00826	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00829	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0082c	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 3280 : 			iymin &= 0x80000000;

  0082f	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  00832	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  00837	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 3281 : 			ixmax >>= 29;

  0083a	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  0083d	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00840	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 3282 : 			iymax &= 0x80000000;

  00843	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  00846	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  0084b	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 3283 : 			iymin >>= 30;

  0084e	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  00851	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  00854	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 3284 : 			ixmin &= 0x00000001;

  00857	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  0085a	83 e0 01	 and	 eax, 1
  0085d	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 3285 : 			iymax >>= 28;

  00860	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  00863	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  00866	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 3286 : 			ixmax &= 0x00000004;

  00869	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  0086c	83 e0 04	 and	 eax, 4
  0086f	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 3287 : 			ixmin |= iymin;

  00872	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00875	0b 45 c4	 or	 eax, DWORD PTR _iymin$[ebp]
  00878	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 3288 : 			ixmax |= iymax;

  0087b	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  0087e	0b 45 c8	 or	 eax, DWORD PTR _iymax$[ebp]
  00881	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 3289 : 			*last_transformed_point_outcode = ( ixmin | ixmax );

  00884	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00887	0b 45 d0	 or	 eax, DWORD PTR _ixmax$[ebp]
  0088a	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  00890	88 01		 mov	 BYTE PTR [ecx], al

; 3290 : 
; 3291 : #endif
; 3292 : 
; 3293 : 			last_transformed_point = result_2d_points;

  00892	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00895	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 3294 : 			last_transformed_point_outcode = result_outcodes;

  00898	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  0089b	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 3295 : 
; 3296 : 			i = ( result_3d_points->x * q );

  008a1	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  008a4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008a8	f3 0f 59 85 28
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  008b0	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _i$4[ebp], xmm0

; 3297 : 			j = ( result_3d_points->y * q );

  008b8	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  008bb	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008c0	f3 0f 59 85 28
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  008c8	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _j$3[ebp], xmm0

; 3298 : 
; 3299 : 			result_2d_points->j = ( active_3d_environment->y_origin - j );

  008d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  008d5	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  008da	f3 0f 5c 85 20
	ff ff ff	 subss	 xmm0, DWORD PTR _j$3[ebp]
  008e2	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  008e5	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 3300 : 			result_2d_points->i = ( active_3d_environment->x_origin + i );

  008ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  008ef	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  008f4	f3 0f 58 85 24
	ff ff ff	 addss	 xmm0, DWORD PTR _i$4[ebp]
  008fc	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  008ff	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 3301 : 			result_2d_points->q = q;

  00903	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00906	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _q$5[ebp]
  0090e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 3302 : 		}
; 3303 : 
; 3304 : 		result_3d_points++;

  00913	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00916	83 c0 08	 add	 eax, 8
  00919	89 45 a4	 mov	 DWORD PTR _result_3d_points$[ebp], eax

; 3305 : 		result_2d_points++;

  0091c	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0091f	83 c0 10	 add	 eax, 16			; 00000010H
  00922	89 45 8c	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 3306 : 		result_outcodes++;

  00925	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  00928	83 c0 01	 add	 eax, 1
  0092b	89 45 80	 mov	 DWORD PTR _result_outcodes$[ebp], eax

; 3307 : 		result_colours++;

  0092e	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00931	83 c0 08	 add	 eax, 8
  00934	89 45 88	 mov	 DWORD PTR _result_colours$[ebp], eax

; 3308 : 
; 3309 : 		points_xz++;

  00937	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  0093a	83 c0 04	 add	 eax, 4
  0093d	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 3310 : 		points_y++;

  00940	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  00943	83 c0 02	 add	 eax, 2
  00946	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 3311 : 		colour_indices++;

  00949	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  0094c	83 c0 01	 add	 eax, 1
  0094f	89 45 a8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 3312 : 	}

  00952	e9 3b fa ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 3313 : 
; 3314 : 	oxmax = active_viewport.x_max - last_transformed_point->i;

  00957	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0095a	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  00962	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00966	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 3315 : 	oxmin = last_transformed_point->i - active_viewport.x_min;

  0096b	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0096e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00972	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  0097a	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 3316 : 	oymax = active_viewport.y_max - last_transformed_point->j;

  0097f	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00982	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0098a	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  0098f	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 3317 : 	oymin = last_transformed_point->j - active_viewport.y_min;

  00994	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00997	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0099c	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  009a4	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 3318 : 
; 3319 : 	ixmax = *( ( int * ) &oxmax );

  009a9	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  009ac	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 3320 : 	ixmin = *( ( int * ) &oxmin );

  009af	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  009b2	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 3321 : 	iymax = *( ( int * ) &oymax );

  009b5	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  009b8	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 3322 : 	iymin = *( ( int * ) &oymin );

  009bb	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  009be	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 3323 : 
; 3324 : 	*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  009c1	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  009c4	50		 push	 eax
  009c5	8b 4d d0	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  009c8	51		 push	 ecx
  009c9	8b 55 c4	 mov	 edx, DWORD PTR _iymin$[ebp]
  009cc	52		 push	 edx
  009cd	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  009d0	50		 push	 eax
  009d1	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  009d6	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  009dc	88 01		 mov	 BYTE PTR [ecx], al

; 3325 : 
; 3326 : 	//
; 3327 : 	// Reset fpu precision
; 3328 : 	//
; 3329 : 
; 3330 : 	set_fpu_precision_mode_double ();

  009de	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 3331 : 
; 3332 : 	//
; 3333 : 	// Set the cullmode ( terrain isn't culled in software )
; 3334 : 	//
; 3335 : 
; 3336 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  009e3	6a 03		 push	 3
  009e5	6a 16		 push	 22			; 00000016H
  009e7	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3337 : 
; 3338 : 	//
; 3339 : 	// Set the rendering states for the terrain polygons
; 3340 : 	//
; 3341 : 
; 3342 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  009ec	6a 00		 push	 0
  009ee	6a 1d		 push	 29			; 0000001dH
  009f0	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3343 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  009f5	6a 02		 push	 2
  009f7	6a 09		 push	 9
  009f9	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 3344 : 
; 3345 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  009fe	6a 01		 push	 1
  00a00	6a 0c		 push	 12			; 0000000cH
  00a02	6a 00		 push	 0
  00a04	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3346 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  00a09	6a 01		 push	 1
  00a0b	6a 0d		 push	 13			; 0000000dH
  00a0d	6a 00		 push	 0
  00a0f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3347 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  00a14	6a 01		 push	 1
  00a16	6a 0e		 push	 14			; 0000000eH
  00a18	6a 00		 push	 0
  00a1a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3348 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  00a1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  00a24	50		 push	 eax
  00a25	6a 10		 push	 16			; 00000010H
  00a27	6a 00		 push	 0
  00a29	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3349 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  00a2e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  00a33	50		 push	 eax
  00a34	6a 11		 push	 17			; 00000011H
  00a36	6a 00		 push	 0
  00a38	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3350 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  00a3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  00a42	50		 push	 eax
  00a43	6a 12		 push	 18			; 00000012H
  00a45	6a 00		 push	 0
  00a47	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3351 : #if ALLOW_TERRAIN_TEXTURES
; 3352 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00a4c	6a 04		 push	 4
  00a4e	6a 01		 push	 1
  00a50	6a 00		 push	 0
  00a52	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 3353 : #else
; 3354 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 3355 : #endif
; 3356 : 
; 3357 : 	//
; 3358 : 	// Go through the polys in sector, backface culling them, and drawing them
; 3359 : 	//
; 3360 : 
; 3361 : 	polygon = current_terrain_sector->polygons;

  00a57	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a5c	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00a5f	89 4d b8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 3362 : 
; 3363 : 	surface = current_terrain_sector->surface_changes;

  00a62	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a67	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00a6a	89 4d b4	 mov	 DWORD PTR _surface$[ebp], ecx

; 3364 : 
; 3365 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  00a6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a72	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00a76	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  00a7c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 3366 : 
; 3367 : 	current_terrain_type = surface->surface_id;

  00a82	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00a85	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00a88	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3368 : 
; 3369 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00a8e	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00a95	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00a9a	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3370 : 
; 3371 : 	reset_terrain_3d_buffered_polygons ();

  00a9f	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 3372 : 
; 3373 : 	reset_deferred_state_changes ();

  00aa4	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 3374 : 
; 3375 : 	set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00aa9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00aae	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab1	51		 push	 ecx
  00ab2	6a 00		 push	 0
  00ab4	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture

; 3376 : 
; 3377 : 	set_terrain_3d_zbuffer_constant ( slot );

  00ab9	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00abc	50		 push	 eax
  00abd	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 3378 : 
; 3379 : 	if ( current_terrain_sector->number_of_points < 257 )

  00ac2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00ac7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00aca	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  00ad0	0f 8d 04 01 00
	00		 jge	 $LN11@draw_3d_te

; 3380 : 	{
; 3381 : 
; 3382 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  00ad6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00adb	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00ade	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 3383 : 
; 3384 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00ae4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00ae9	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00aed	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00af0	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  00af2	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00af5	83 e8 01	 sub	 eax, 1
  00af8	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  00afb	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00aff	0f 8e d0 00 00
	00		 jle	 $LN6@draw_3d_te

; 3385 : 		{
; 3386 : 
; 3387 : 			int
; 3388 : 				number_of_points;
; 3389 : 
; 3390 : 			if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  00b05	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b08	8a 08		 mov	 cl, BYTE PTR [eax]
  00b0a	c0 e9 07	 shr	 cl, 7
  00b0d	80 e1 01	 and	 cl, 1
  00b10	0f b6 d1	 movzx	 edx, cl
  00b13	85 d2		 test	 edx, edx
  00b15	74 40		 je	 SHORT $LN13@draw_3d_te

; 3391 : 			{
; 3392 : 
; 3393 : 				surface++;

  00b17	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b1a	83 c0 01	 add	 eax, 1
  00b1d	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 3394 : 
; 3395 : 				current_terrain_type = surface->surface_id;

  00b20	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b23	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00b26	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3396 : 
; 3397 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00b2c	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00b33	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00b38	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3398 : 
; 3399 : 				//
; 3400 : 				// Flush any buffered polygons
; 3401 : 				//
; 3402 : 
; 3403 : 				draw_terrain_3d_buffered_polygons ();

  00b3d	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3404 : 
; 3405 : 				reset_deferred_state_changes ();

  00b42	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 3406 : 
; 3407 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00b47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b4c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b4f	51		 push	 ecx
  00b50	6a 00		 push	 0
  00b52	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN13@draw_3d_te:

; 3408 : 			}
; 3409 : 
; 3410 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00b57	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b5a	8a 08		 mov	 cl, BYTE PTR [eax]
  00b5c	80 e1 7f	 and	 cl, 127			; 0000007fH
  00b5f	0f b6 d1	 movzx	 edx, cl
  00b62	89 95 1c ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 3411 : 
; 3412 : 			{
; 3413 : 
; 3414 : 				if ( outcode_3d_terrain_byte_polygon ( number_of_points, terrain_3d_sector_point_byte_references, &terrain_3d_face_outcode ) )

  00b68	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00b6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00b72	50		 push	 eax
  00b73	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$2[ebp]
  00b79	51		 push	 ecx
  00b7a	e8 00 00 00 00	 call	 ?outcode_3d_terrain_byte_polygon@@YGHHPAUTERRAIN_3D_POINT_BYTE_REFERENCE@@PAH@Z ; outcode_3d_terrain_byte_polygon
  00b7f	85 c0		 test	 eax, eax
  00b81	74 34		 je	 SHORT $LN16@draw_3d_te

; 3415 : 				{
; 3416 : 
; 3417 : 					commit_deferred_state_changes ();

  00b83	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 3418 : 
; 3419 : 					if ( terrain_3d_face_outcode )

  00b88	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00b8f	74 14		 je	 SHORT $LN15@draw_3d_te

; 3420 : 					{
; 3421 : 
; 3422 : 						current_terrain_type_class->render_byte_clipped ( number_of_points );

  00b91	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00b97	50		 push	 eax
  00b98	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b9e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00ba1	ff d2		 call	 edx

; 3423 : 					}
; 3424 : 					else

  00ba3	eb 12		 jmp	 SHORT $LN16@draw_3d_te
$LN15@draw_3d_te:

; 3425 : 					{
; 3426 : 
; 3427 : 						current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00ba5	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00bab	50		 push	 eax
  00bac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00bb2	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00bb5	ff d2		 call	 edx
$LN16@draw_3d_te:

; 3428 : 					}
; 3429 : 				}
; 3430 : 
; 3431 : 				terrain_3d_sector_point_byte_references += number_of_points;

  00bb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00bbc	03 85 1c ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  00bc2	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 3432 : 
; 3433 : 				polygon++;

  00bc7	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00bca	83 c0 01	 add	 eax, 1
  00bcd	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 3434 : 			}
; 3435 : 		}

  00bd0	e9 1d ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 3436 : 	}
; 3437 : 	else

  00bd5	e9 04 01 00 00	 jmp	 $LN9@draw_3d_te
$LN11@draw_3d_te:

; 3438 : 	{
; 3439 : 
; 3440 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  00bda	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00bdf	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00be2	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 3441 : 
; 3442 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00be8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00bed	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00bf1	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00bf4	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  00bf6	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00bf9	83 e8 01	 sub	 eax, 1
  00bfc	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  00bff	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00c03	0f 8e d5 00 00
	00		 jle	 $LN9@draw_3d_te

; 3443 : 		{
; 3444 : 
; 3445 : 			int
; 3446 : 				number_of_points;
; 3447 : 
; 3448 : 			if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  00c09	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c0c	8a 08		 mov	 cl, BYTE PTR [eax]
  00c0e	c0 e9 07	 shr	 cl, 7
  00c11	80 e1 01	 and	 cl, 1
  00c14	0f b6 d1	 movzx	 edx, cl
  00c17	85 d2		 test	 edx, edx
  00c19	74 40		 je	 SHORT $LN17@draw_3d_te

; 3449 : 			{
; 3450 : 
; 3451 : 				surface++;

  00c1b	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00c1e	83 c0 01	 add	 eax, 1
  00c21	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 3452 : 
; 3453 : 				current_terrain_type = surface->surface_id;

  00c24	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00c27	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00c2a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 3454 : 
; 3455 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00c30	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00c37	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00c3c	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 3456 : 
; 3457 : 				//
; 3458 : 				// Flush any buffered polygons
; 3459 : 				//
; 3460 : 
; 3461 : 				draw_terrain_3d_buffered_polygons ();

  00c41	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3462 : 
; 3463 : 				reset_deferred_state_changes ();

  00c46	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 3464 : 
; 3465 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00c4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c50	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00c53	51		 push	 ecx
  00c54	6a 00		 push	 0
  00c56	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN17@draw_3d_te:

; 3466 : 			}
; 3467 : 
; 3468 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00c5b	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c5e	8a 08		 mov	 cl, BYTE PTR [eax]
  00c60	80 e1 7f	 and	 cl, 127			; 0000007fH
  00c63	0f b6 d1	 movzx	 edx, cl
  00c66	89 95 18 ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 3469 : 
; 3470 : 			{
; 3471 : 
; 3472 : 				if ( outcode_3d_terrain_word_polygon ( number_of_points, terrain_3d_sector_point_word_references, &terrain_3d_face_outcode ) )

  00c6c	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00c71	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00c76	50		 push	 eax
  00c77	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$1[ebp]
  00c7d	51		 push	 ecx
  00c7e	e8 00 00 00 00	 call	 ?outcode_3d_terrain_word_polygon@@YGHHPAUTERRAIN_3D_POINT_WORD_REFERENCE@@PAH@Z ; outcode_3d_terrain_word_polygon
  00c83	85 c0		 test	 eax, eax
  00c85	74 34		 je	 SHORT $LN20@draw_3d_te

; 3473 : 				{
; 3474 : 
; 3475 : 					commit_deferred_state_changes ();

  00c87	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 3476 : 
; 3477 : 					if ( terrain_3d_face_outcode )

  00c8c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00c93	74 14		 je	 SHORT $LN19@draw_3d_te

; 3478 : 					{
; 3479 : 
; 3480 : 						current_terrain_type_class->render_word_clipped ( number_of_points );

  00c95	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c9b	50		 push	 eax
  00c9c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00ca2	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00ca5	ff d2		 call	 edx

; 3481 : 					}
; 3482 : 					else

  00ca7	eb 12		 jmp	 SHORT $LN20@draw_3d_te
$LN19@draw_3d_te:

; 3483 : 					{
; 3484 : 
; 3485 : 						current_terrain_type_class->render_word_unclipped ( number_of_points );

  00ca9	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00caf	50		 push	 eax
  00cb0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00cb6	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00cb9	ff d2		 call	 edx
$LN20@draw_3d_te:

; 3486 : 					}
; 3487 : 				}
; 3488 : 
; 3489 : 				terrain_3d_sector_point_word_references += number_of_points;

  00cbb	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00cc1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00cc7	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00cca	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 3490 : 
; 3491 : 				polygon++;

  00cd0	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00cd3	83 c0 01	 add	 eax, 1
  00cd6	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 3492 : 			}
; 3493 : 		}

  00cd9	e9 18 ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 3494 : 	}
; 3495 : 
; 3496 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00cde	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00ce6	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 3497 : 
; 3498 : 	//
; 3499 : 	// Flush any buffered polygons
; 3500 : 	//
; 3501 : 
; 3502 : 	draw_terrain_3d_buffered_polygons ();

  00cee	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3503 : 
; 3504 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 3505 : 
; 3506 : 	//
; 3507 : 	// Render the point normals
; 3508 : 	//
; 3509 : 
; 3510 : 	suspend_d3d_fog ();
; 3511 : 
; 3512 : 	draw_3d_terrain_sector_point_normals ( slot );
; 3513 : 
; 3514 : 	reinstate_d3d_fog ();
; 3515 : 
; 3516 : #endif
; 3517 : 
; 3518 : }

  00cf3	5f		 pop	 edi
  00cf4	5e		 pop	 esi
  00cf5	5b		 pop	 ebx
  00cf6	8b e5		 mov	 esp, ebp
  00cf8	5d		 pop	 ebp
  00cf9	c2 04 00	 ret	 4
?draw_3d_terrain_2d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_2d_clipped_bw_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_3d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -232				; size = 4
_number_of_points$2 = -228				; size = 4
_j$3 = -224						; size = 4
_i$4 = -220						; size = 4
_q$5 = -216						; size = 4
_posz$6 = -212						; size = 4
_posy$7 = -208						; size = 4
_posx$8 = -204						; size = 4
_colour_index$9 = -200					; size = 4
_ib$10 = -196						; size = 4
_ig$11 = -192						; size = 4
_ir$12 = -188						; size = 4
_grey$13 = -184						; size = 4
_b$14 = -180						; size = 4
_g$15 = -176						; size = 4
_r$16 = -172						; size = 4
_scaled_rotation$ = -168				; size = 36
_last_transformed_point_outcode$ = -132			; size = 4
_result_outcodes$ = -128				; size = 4
_tmp_outcode$ = -121					; size = 1
_result_colours$ = -120					; size = 4
_result_2d_points$ = -116				; size = 4
_last_transformed_point$ = -112				; size = 4
_tmp_vertex$ = -108					; size = 16
_result_3d_points$ = -92				; size = 4
_colour_indices$ = -88					; size = 4
_colours$ = -84						; size = 4
_normal_indices$ = -80					; size = 4
_surface$ = -76						; size = 4
_polygon$ = -72						; size = 4
_points_y$ = -68					; size = 4
_points_xz$ = -64					; size = 4
_iymin$ = -60						; size = 4
_iymax$ = -56						; size = 4
_ixmin$ = -52						; size = 4
_ixmax$ = -48						; size = 4
_oymin$ = -44						; size = 4
_oymax$ = -40						; size = 4
_oxmin$ = -36						; size = 4
_oxmax$ = -32						; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_3d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_3d_clipped_bw_sector, COMDAT

; 2522 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2523 : 
; 2524 : 	int
; 2525 : 		normal_index,
; 2526 : 		count;
; 2527 : 
; 2528 : 	float
; 2529 : 		current_sector_x_offset,
; 2530 : 		current_sector_z_offset,
; 2531 : 		current_sector_x_visual_offset,
; 2532 : 		current_sector_y_visual_offset,
; 2533 : 		current_sector_z_visual_offset,
; 2534 : 		oxmax,
; 2535 : 		oxmin,
; 2536 : 		oymax,
; 2537 : 		oymin;
; 2538 : 
; 2539 : 	unsigned int
; 2540 : 		ixmax,
; 2541 : 		ixmin,
; 2542 : 		iymax,
; 2543 : 		iymin;
; 2544 : 
; 2545 : 	terrain_3d_point_xz
; 2546 : 		*points_xz;
; 2547 : 
; 2548 : 	terrain_3d_point_y
; 2549 : 		*points_y;
; 2550 : 
; 2551 : 	terrain_3d_face
; 2552 : 		*polygon;
; 2553 : 
; 2554 : 	terrain_3d_surface
; 2555 : 		*surface;
; 2556 : 
; 2557 : 	terrain_3d_normal_index
; 2558 : 		*normal_indices;
; 2559 : 
; 2560 : 	terrain_3d_colour
; 2561 : 		*colours;
; 2562 : 
; 2563 : 	terrain_3d_colour_index
; 2564 : 		*colour_indices;
; 2565 : 
; 2566 : 	object_transformed_3d_point
; 2567 : 		*result_3d_points;
; 2568 : 
; 2569 : 	object_transformed_2d_point
; 2570 : 		tmp_vertex,
; 2571 : 		*last_transformed_point,
; 2572 : 		*result_2d_points;
; 2573 : 
; 2574 : 	terrain_3d_transformed_point_colour
; 2575 : 		*result_colours;
; 2576 : 
; 2577 : 	unsigned char
; 2578 : 		tmp_outcode,
; 2579 : 		*result_outcodes,
; 2580 : 		*last_transformed_point_outcode;
; 2581 : 
; 2582 : 	float
; 2583 : 		scaled_rotation[3][3];
; 2584 : 
; 2585 : 	//
; 2586 : 	// Set fpu precision
; 2587 : 	//
; 2588 : 
; 2589 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 2590 : 
; 2591 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 2592 : 
; 2593 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0001e	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00027	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  00031	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00034	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 2594 : 
; 2595 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 2596 : //	{
; 2597 : //
; 2598 : //		current_terrain_sector = current_terrain_sector->approximation;
; 2599 : //	}
; 2600 : //
; 2601 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 2602 : 
; 2603 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 2604 : 
; 2605 : 	points_xz = current_terrain_points_xz;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  0005a	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 2606 : 
; 2607 : 	points_y = current_terrain_points_y;

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  00062	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 2608 : 
; 2609 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 2610 : 
; 2611 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 2612 : 
; 2613 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00065	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00068	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006b	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0006e	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00074	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00078	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 2614 : 
; 2615 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0007d	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00080	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00083	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00086	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  0008c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00090	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 2616 : 
; 2617 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0009a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  0009f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000a3	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 2618 : 
; 2619 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000b2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 2620 : 
; 2621 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000c9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000ce	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 2622 : 
; 2623 : 	normal_indices = current_terrain_sector->normal_changes;

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000d8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000db	89 4d b0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 2624 : 
; 2625 : 	colours = current_terrain_sector->point_colours;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e6	89 4d ac	 mov	 DWORD PTR _colours$[ebp], ecx

; 2626 : 
; 2627 : 	colour_indices = current_terrain_sector->colour_indices;

  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000ee	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f1	89 4d a8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 2628 : 
; 2629 : 	result_3d_points = transformed_3d_3d_points;

  000f4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _result_3d_points$[ebp], OFFSET ?transformed_3d_3d_points@@3PAUOBJECT_TRANSFORMED_3D_POINT@@A ; transformed_3d_3d_points

; 2630 : 
; 2631 : 	result_2d_points = transformed_3d_2d_points;

  000fb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 2632 : 
; 2633 : 	result_outcodes = transformed_3d_point_outcodes;

  00102	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _result_outcodes$[ebp], OFFSET ?transformed_3d_point_outcodes@@3PAEA ; transformed_3d_point_outcodes

; 2634 : 
; 2635 : 	result_colours = transformed_3d_point_colours;

  00109	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 2636 : 
; 2637 : 	last_transformed_point = &tmp_vertex;

  00110	8d 45 94	 lea	 eax, DWORD PTR _tmp_vertex$[ebp]
  00113	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 2638 : 
; 2639 : 	last_transformed_point_outcode = &tmp_outcode;

  00116	8d 45 87	 lea	 eax, DWORD PTR _tmp_outcode$[ebp]
  00119	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 2640 : 
; 2641 : 	tmp_vertex.i = 0;

  0011f	0f 57 c0	 xorps	 xmm0, xmm0
  00122	f3 0f 11 45 94	 movss	 DWORD PTR _tmp_vertex$[ebp], xmm0

; 2642 : 	tmp_vertex.j = 0;

  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 11 45 98	 movss	 DWORD PTR _tmp_vertex$[ebp+4], xmm0

; 2643 : 
; 2644 : 	//
; 2645 : 	// Initialise the first point normal index
; 2646 : 	//
; 2647 : 
; 2648 : 	normal_index = normal_indices->index;

  0012f	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00132	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00135	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 2649 : 
; 2650 : 	//
; 2651 : 	// Now transform all the points.
; 2652 : 	//
; 2653 : 
; 2654 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0013d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00140	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  00146	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 2655 : 
; 2656 : 	//
; 2657 : 	// Set up the scaled rotation matrix
; 2658 : 	//
; 2659 : 
; 2660 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0014c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00151	6b c8 00	 imul	 ecx, eax, 0
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0015a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0015e	b9 04 00 00 00	 mov	 ecx, 4
  00163	6b d1 00	 imul	 edx, ecx, 0
  00166	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0016c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00171	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00175	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017a	6b c2 00	 imul	 eax, edx, 0
  0017d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00184	ba 04 00 00 00	 mov	 edx, 4
  00189	6b c2 00	 imul	 eax, edx, 0
  0018c	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 2661 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  00191	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00196	6b c8 00	 imul	 ecx, eax, 0
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0019f	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001a3	b9 04 00 00 00	 mov	 ecx, 4
  001a8	c1 e1 00	 shl	 ecx, 0
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001b1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001b6	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001bf	6b c8 00	 imul	 ecx, eax, 0
  001c2	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001c9	b8 04 00 00 00	 mov	 eax, 4
  001ce	c1 e0 00	 shl	 eax, 0
  001d1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 2662 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001db	6b c8 00	 imul	 ecx, eax, 0
  001de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001e4	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001e8	b9 04 00 00 00	 mov	 ecx, 4
  001ed	d1 e1		 shl	 ecx, 1
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001f5	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001fa	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001fe	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00203	6b c8 00	 imul	 ecx, eax, 0
  00206	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0020d	b8 04 00 00 00	 mov	 eax, 4
  00212	d1 e0		 shl	 eax, 1
  00214	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 2663 : 
; 2664 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  00219	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021e	c1 e0 00	 shl	 eax, 0
  00221	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00227	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0022b	b8 04 00 00 00	 mov	 eax, 4
  00230	6b c8 00	 imul	 ecx, eax, 0
  00233	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00238	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0023d	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00242	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00247	c1 e1 00	 shl	 ecx, 0
  0024a	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00251	b8 04 00 00 00	 mov	 eax, 4
  00256	6b c8 00	 imul	 ecx, eax, 0
  00259	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 2665 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  0025e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00263	c1 e0 00	 shl	 eax, 0
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0026c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00270	b8 04 00 00 00	 mov	 eax, 4
  00275	c1 e0 00	 shl	 eax, 0
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0027e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00283	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00288	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0028d	c1 e2 00	 shl	 edx, 0
  00290	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00297	b9 04 00 00 00	 mov	 ecx, 4
  0029c	c1 e1 00	 shl	 ecx, 0
  0029f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 2666 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  002a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a9	c1 e0 00	 shl	 eax, 0
  002ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002b2	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002b6	b8 04 00 00 00	 mov	 eax, 4
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  002c3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002c8	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  002cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002d2	c1 e2 00	 shl	 edx, 0
  002d5	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002dc	b9 04 00 00 00	 mov	 ecx, 4
  002e1	d1 e1		 shl	 ecx, 1
  002e3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 2667 : 
; 2668 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	6b c8 00	 imul	 ecx, eax, 0
  00301	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00306	d1 e0		 shl	 eax, 1
  00308	8d 84 05 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  0030f	be 04 00 00 00	 mov	 esi, 4
  00314	6b f6 00	 imul	 esi, esi, 0
  00317	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  0031a	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 2669 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  0031d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00322	d1 e0		 shl	 eax, 1
  00324	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0032a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032e	b8 04 00 00 00	 mov	 eax, 4
  00333	c1 e0 00	 shl	 eax, 0
  00336	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0033b	d1 e1		 shl	 ecx, 1
  0033d	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00344	be 04 00 00 00	 mov	 esi, 4
  00349	c1 e6 00	 shl	 esi, 0
  0034c	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  0034f	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 2670 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  00352	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00357	d1 e0		 shl	 eax, 1
  00359	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00363	b8 04 00 00 00	 mov	 eax, 4
  00368	d1 e0		 shl	 eax, 1
  0036a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0036f	d1 e1		 shl	 ecx, 1
  00371	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00378	be 04 00 00 00	 mov	 esi, 4
  0037d	d1 e6		 shl	 esi, 1
  0037f	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00382	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 2671 : 
; 2672 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0038a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0038d	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00390	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00392	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00395	83 e8 01	 sub	 eax, 1
  00398	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  0039b	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  0039f	0f 8e 05 06 00
	00		 jle	 $LN3@draw_3d_te

; 2673 : 	{
; 2674 : 
; 2675 : 
; 2676 : 		current_terrain_y_int = points_y->y;

  003a5	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  003aa	8b 4d bc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  003ad	66 23 01	 and	 ax, WORD PTR [ecx]
  003b0	0f b7 d0	 movzx	 edx, ax
  003b3	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 2677 : 
; 2678 : //		set_terrain_y_int_value ( points_y );
; 2679 : 		normal_indices += points_y->normal_change;	//get_3d_terrain_point_y_normal_change ( points_y );

  003b9	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  003bc	66 8b 08	 mov	 cx, WORD PTR [eax]
  003bf	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  003c3	66 83 e1 01	 and	 cx, 1
  003c7	0f b7 d1	 movzx	 edx, cx
  003ca	03 55 b0	 add	 edx, DWORD PTR _normal_indices$[ebp]
  003cd	89 55 b0	 mov	 DWORD PTR _normal_indices$[ebp], edx

; 2680 : 
; 2681 : 		{
; 2682 : 
; 2683 : 			float
; 2684 : 				r,
; 2685 : 				g,
; 2686 : 				b,
; 2687 : 				grey;
; 2688 : 
; 2689 : 			int
; 2690 : 				ir,
; 2691 : 				ig,
; 2692 : 				ib,
; 2693 : 				colour_index;
; 2694 : 
; 2695 : 			colour_index = colour_indices->index;

  003d0	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  003d3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003d6	89 8d 38 ff ff
	ff		 mov	 DWORD PTR _colour_index$9[ebp], ecx

; 2696 : 			normal_index = normal_indices->index;

  003dc	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  003df	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003e2	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 2697 : 
; 2698 : 			r = colours[colour_index].red;

  003e5	6b 85 38 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  003ec	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  003ef	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  003f3	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  003f7	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _r$16[ebp], xmm0

; 2699 : 			g = colours[colour_index].green;

  003ff	6b 85 38 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  00406	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  00409	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  0040e	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00412	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _g$15[ebp], xmm0

; 2700 : 			b = colours[colour_index].blue;

  0041a	6b 85 38 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  00421	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  00424	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  00429	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0042d	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _b$14[ebp], xmm0

; 2701 : 
; 2702 : 			r *= 0.3;

  00435	f3 0f 5a 85 54
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$16[ebp]
  0043d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00445	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00449	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _r$16[ebp], xmm0

; 2703 : 			g *= 0.59;

  00451	f3 0f 5a 85 50
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _g$15[ebp]
  00459	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe2e147ae147ae1
  00461	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00465	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _g$15[ebp], xmm0

; 2704 : 			b *= 0.11;

  0046d	f3 0f 5a 85 4c
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _b$14[ebp]
  00475	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fbc28f5c28f5c29
  0047d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00481	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _b$14[ebp], xmm0

; 2705 : 
; 2706 : 			grey = r * 0.3 + g * 0.59 + b * 0.11;

  00489	f3 0f 5a 85 54
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _r$16[ebp]
  00491	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00499	f3 0f 5a 8d 50
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _g$15[ebp]
  004a1	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  004a9	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004ad	f3 0f 5a 8d 4c
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _b$14[ebp]
  004b5	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  004bd	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004c5	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _grey$13[ebp], xmm0

; 2707 : 
; 2708 : 			r = grey * terrain_3d_transformed_point_normals[normal_index].r;

  004cd	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  004d0	c1 e0 04	 shl	 eax, 4
  004d3	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$13[ebp]
  004db	f3 0f 59 80 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax]
  004e3	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _r$16[ebp], xmm0

; 2709 : 			g = grey * terrain_3d_transformed_point_normals[normal_index].g;

  004eb	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  004ee	c1 e0 04	 shl	 eax, 4
  004f1	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$13[ebp]
  004f9	f3 0f 59 80 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+4]
  00501	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _g$15[ebp], xmm0

; 2710 : 			b = grey * terrain_3d_transformed_point_normals[normal_index].b;

  00509	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0050c	c1 e0 04	 shl	 eax, 4
  0050f	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _grey$13[ebp]
  00517	f3 0f 59 80 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+8]
  0051f	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _b$14[ebp], xmm0

; 2711 : 
; 2712 : 			asm_convert_float_to_int ( r, &ir );

  00527	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _ir$12[ebp]
  0052d	50		 push	 eax
  0052e	51		 push	 ecx
  0052f	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _r$16[ebp]
  00537	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053c	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2713 : 			asm_convert_float_to_int ( g, &ig );

  00541	8d 85 40 ff ff
	ff		 lea	 eax, DWORD PTR _ig$11[ebp]
  00547	50		 push	 eax
  00548	51		 push	 ecx
  00549	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _g$15[ebp]
  00551	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00556	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2714 : 			asm_convert_float_to_int ( b, &ib );

  0055b	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _ib$10[ebp]
  00561	50		 push	 eax
  00562	51		 push	 ecx
  00563	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _b$14[ebp]
  0056b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00570	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2715 : 
; 2716 : 			result_colours->red = ir;

  00575	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00578	8a 8d 44 ff ff
	ff		 mov	 cl, BYTE PTR _ir$12[ebp]
  0057e	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 2717 : 			result_colours->green = ig;

  00581	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00584	8a 8d 40 ff ff
	ff		 mov	 cl, BYTE PTR _ig$11[ebp]
  0058a	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 2718 : 			result_colours->blue = ib;

  0058d	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00590	8a 8d 3c ff ff
	ff		 mov	 cl, BYTE PTR _ib$10[ebp]
  00596	88 08		 mov	 BYTE PTR [eax], cl

; 2719 : 			result_colours->normal_index = normal_index;

  00598	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0059b	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  0059e	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 2720 : 		}
; 2721 : 
; 2722 : 		{
; 2723 : 
; 2724 : 			float
; 2725 : 				posx,
; 2726 : 				posy,
; 2727 : 				posz;
; 2728 : 
; 2729 : 			posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  005a1	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  005a4	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  005a7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  005ab	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  005b3	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  005b8	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _posx$8[ebp], xmm0

; 2730 : 			posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  005c0	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  005c3	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  005c7	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  005cb	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  005d3	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  005d8	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _posz$6[ebp], xmm0

; 2731 : 			posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  005e0	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  005e8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  005f0	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  005f5	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _posy$7[ebp], xmm0

; 2732 : 
; 2733 : 			result_3d_points->x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  005fd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00602	6b c8 00	 imul	 ecx, eax, 0
  00605	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0060c	b8 04 00 00 00	 mov	 eax, 4
  00611	6b c8 00	 imul	 ecx, eax, 0
  00614	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  0061c	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00621	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00626	6b c2 00	 imul	 eax, edx, 0
  00629	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00630	ba 04 00 00 00	 mov	 edx, 4
  00635	c1 e2 00	 shl	 edx, 0
  00638	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  00640	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00645	f3 0f 58 c1	 addss	 xmm0, xmm1
  00649	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0064e	6b c8 00	 imul	 ecx, eax, 0
  00651	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00658	b8 04 00 00 00	 mov	 eax, 4
  0065d	d1 e0		 shl	 eax, 1
  0065f	f3 0f 10 8d 2c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  00667	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0066c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00670	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  00673	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2734 : 			result_3d_points->y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  00677	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0067c	c1 e0 00	 shl	 eax, 0
  0067f	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00686	ba 04 00 00 00	 mov	 edx, 4
  0068b	6b c2 00	 imul	 eax, edx, 0
  0068e	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  00696	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0069b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006a0	c1 e1 00	 shl	 ecx, 0
  006a3	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  006aa	b8 04 00 00 00	 mov	 eax, 4
  006af	c1 e0 00	 shl	 eax, 0
  006b2	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  006ba	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  006bf	f3 0f 58 c1	 addss	 xmm0, xmm1
  006c3	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  006c8	c1 e1 00	 shl	 ecx, 0
  006cb	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  006d2	b8 04 00 00 00	 mov	 eax, 4
  006d7	d1 e0		 shl	 eax, 1
  006d9	f3 0f 10 8d 2c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  006e1	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  006e6	f3 0f 58 c1	 addss	 xmm0, xmm1
  006ea	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  006ed	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 2735 : 			result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  006f2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006f7	d1 e0		 shl	 eax, 1
  006f9	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00700	ba 04 00 00 00	 mov	 edx, 4
  00705	6b c2 00	 imul	 eax, edx, 0
  00708	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  00710	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00715	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0071a	d1 e1		 shl	 ecx, 1
  0071c	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00723	b8 04 00 00 00	 mov	 eax, 4
  00728	c1 e0 00	 shl	 eax, 0
  0072b	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  00733	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00738	f3 0f 58 c1	 addss	 xmm0, xmm1
  0073c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00741	d1 e1		 shl	 ecx, 1
  00743	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0074a	b8 04 00 00 00	 mov	 eax, 4
  0074f	d1 e0		 shl	 eax, 1
  00751	f3 0f 10 8d 2c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  00759	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0075e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00762	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00765	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 2736 : 		}
; 2737 : 
; 2738 : 		if ( *( ( int * ) &result_2d_points->z ) >= *( ( int * ) &clip_hither ) )

  0076a	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0076d	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00770	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?clip_hither@@3MA
  00776	0f 8c d6 01 00
	00		 jl	 $LN11@draw_3d_te

; 2739 : 		{
; 2740 : 
; 2741 : 			if ( result_2d_points->z <= clip_yonder )

  0077c	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0077f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?clip_yonder@@3MA
  00787	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  0078b	0f 82 ab 01 00
	00		 jb	 $LN13@draw_3d_te

; 2742 : 			{
; 2743 : 
; 2744 : 				float
; 2745 : 					q,
; 2746 : 					i,
; 2747 : 					j;
; 2748 : 
; 2749 : 				result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  00791	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00794	51		 push	 ecx
  00795	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0079a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0079f	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  007a4	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  007a7	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 2750 : 				result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  007aa	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  007ad	51		 push	 ecx
  007ae	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  007b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b8	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  007bd	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  007c0	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 2751 : 
; 2752 : 				oxmax = active_viewport.x_max - last_transformed_point->i;

  007c3	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007c6	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  007ce	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  007d2	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 2753 : 				oxmin = last_transformed_point->i - active_viewport.x_min;

  007d7	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007da	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  007de	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  007e6	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 2754 : 				oymax = active_viewport.y_max - last_transformed_point->j;

  007eb	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  007ee	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  007f6	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  007fb	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 2755 : 				oymin = last_transformed_point->j - active_viewport.y_min;

  00800	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00803	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00808	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00810	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 2756 : 
; 2757 : 				ixmax = *( ( unsigned int * ) &oxmax );

  00815	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  00818	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 2758 : 				ixmin = *( ( unsigned int * ) &oxmin );

  0081b	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  0081e	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 2759 : 				iymax = *( ( unsigned int * ) &oymax );

  00821	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  00824	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 2760 : 				iymin = *( ( unsigned int * ) &oymin );

  00827	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  0082a	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 2761 : 
; 2762 : #ifdef __WATCOMC__
; 2763 : 
; 2764 : 				start_float_divide ( result_2d_points->z, 1.0 );
; 2765 : 
; 2766 : 				*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 2767 : 
; 2768 : 				q = end_float_divide ();
; 2769 : 
; 2770 : #else
; 2771 : 
; 2772 : 				q = 1.0 / result_2d_points->z;

  0082d	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00830	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00835	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0083d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00841	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00845	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _q$5[ebp], xmm0

; 2773 : 
; 2774 : 				ixmin >>= 31;

  0084d	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00850	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00853	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 2775 : 				iymin &= 0x80000000;

  00856	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  00859	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  0085e	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 2776 : 				ixmax >>= 29;

  00861	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  00864	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00867	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 2777 : 				iymax &= 0x80000000;

  0086a	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  0086d	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  00872	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 2778 : 				iymin >>= 30;

  00875	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  00878	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  0087b	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 2779 : 				ixmin &= 0x00000001;

  0087e	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00881	83 e0 01	 and	 eax, 1
  00884	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 2780 : 				iymax >>= 28;

  00887	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  0088a	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  0088d	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 2781 : 				ixmax &= 0x00000004;

  00890	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  00893	83 e0 04	 and	 eax, 4
  00896	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 2782 : 				ixmin |= iymin;

  00899	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  0089c	0b 45 c4	 or	 eax, DWORD PTR _iymin$[ebp]
  0089f	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 2783 : 				ixmax |= iymax;

  008a2	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  008a5	0b 45 c8	 or	 eax, DWORD PTR _iymax$[ebp]
  008a8	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 2784 : 				*last_transformed_point_outcode = ( ixmin | ixmax );

  008ab	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  008ae	0b 45 d0	 or	 eax, DWORD PTR _ixmax$[ebp]
  008b1	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  008b7	88 01		 mov	 BYTE PTR [ecx], al

; 2785 : 
; 2786 : #endif
; 2787 : 
; 2788 : 				last_transformed_point = result_2d_points;

  008b9	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  008bc	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 2789 : 
; 2790 : 				last_transformed_point_outcode = result_outcodes;

  008bf	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  008c2	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 2791 : 
; 2792 : 				i = ( result_3d_points->x * q );

  008c8	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  008cb	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008cf	f3 0f 59 85 28
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  008d7	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _i$4[ebp], xmm0

; 2793 : 				j = ( result_3d_points->y * q );

  008df	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  008e2	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  008e7	f3 0f 59 85 28
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  008ef	f3 0f 11 85 20
	ff ff ff	 movss	 DWORD PTR _j$3[ebp], xmm0

; 2794 : 
; 2795 : 				result_2d_points->j = ( active_3d_environment->y_origin - j );

  008f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  008fc	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00901	f3 0f 5c 85 20
	ff ff ff	 subss	 xmm0, DWORD PTR _j$3[ebp]
  00909	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  0090c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 2796 : 				result_2d_points->i = ( active_3d_environment->x_origin + i );

  00911	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00916	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0091b	f3 0f 58 85 24
	ff ff ff	 addss	 xmm0, DWORD PTR _i$4[ebp]
  00923	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00926	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2797 : 				result_2d_points->q = q;

  0092a	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0092d	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _q$5[ebp]
  00935	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2798 : 			}
; 2799 : 			else

  0093a	eb 14		 jmp	 SHORT $LN14@draw_3d_te
$LN13@draw_3d_te:

; 2800 : 			{
; 2801 : 
; 2802 : 				result_colours->fog = 0;

  0093c	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0093f	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 2803 : 				result_colours->alpha = 0;

  00943	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00946	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 2804 : 
; 2805 : 				*result_outcodes = CLIP_YONDER;

  0094a	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  0094d	c6 00 10	 mov	 BYTE PTR [eax], 16	; 00000010H
$LN14@draw_3d_te:

; 2806 : 			}
; 2807 : 		}
; 2808 : 		else

  00950	eb 14		 jmp	 SHORT $LN12@draw_3d_te
$LN11@draw_3d_te:

; 2809 : 		{
; 2810 : 
; 2811 : 			result_colours->fog = 255;

  00952	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00955	c6 40 04 ff	 mov	 BYTE PTR [eax+4], 255	; 000000ffH

; 2812 : 			result_colours->alpha = 255;

  00959	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0095c	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 2813 : 
; 2814 : 			*result_outcodes = CLIP_HITHER;

  00960	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  00963	c6 00 20	 mov	 BYTE PTR [eax], 32	; 00000020H
$LN12@draw_3d_te:

; 2815 : 		}
; 2816 : 
; 2817 : 		result_3d_points++;

  00966	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00969	83 c0 08	 add	 eax, 8
  0096c	89 45 a4	 mov	 DWORD PTR _result_3d_points$[ebp], eax

; 2818 : 		result_2d_points++;

  0096f	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00972	83 c0 10	 add	 eax, 16			; 00000010H
  00975	89 45 8c	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 2819 : 		result_outcodes++;

  00978	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  0097b	83 c0 01	 add	 eax, 1
  0097e	89 45 80	 mov	 DWORD PTR _result_outcodes$[ebp], eax

; 2820 : 		result_colours++;

  00981	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00984	83 c0 08	 add	 eax, 8
  00987	89 45 88	 mov	 DWORD PTR _result_colours$[ebp], eax

; 2821 : 
; 2822 : 		points_xz++;

  0098a	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  0098d	83 c0 04	 add	 eax, 4
  00990	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 2823 : 		points_y++;

  00993	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  00996	83 c0 02	 add	 eax, 2
  00999	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 2824 : 		colour_indices++;

  0099c	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  0099f	83 c0 01	 add	 eax, 1
  009a2	89 45 a8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 2825 : 	}

  009a5	e9 e8 f9 ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 2826 : 
; 2827 : 	oxmax = active_viewport.x_max - last_transformed_point->i;

  009aa	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  009ad	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  009b5	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  009b9	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 2828 : 	oxmin = last_transformed_point->i - active_viewport.x_min;

  009be	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  009c1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  009c5	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  009cd	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 2829 : 	oymax = active_viewport.y_max - last_transformed_point->j;

  009d2	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  009d5	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  009dd	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  009e2	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 2830 : 	oymin = last_transformed_point->j - active_viewport.y_min;

  009e7	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  009ea	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  009ef	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  009f7	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 2831 : 
; 2832 : 	ixmax = *( ( int * ) &oxmax );

  009fc	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  009ff	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 2833 : 	ixmin = *( ( int * ) &oxmin );

  00a02	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  00a05	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 2834 : 	iymax = *( ( int * ) &oymax );

  00a08	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  00a0b	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 2835 : 	iymin = *( ( int * ) &oymin );

  00a0e	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  00a11	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 2836 : 
; 2837 : 	*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  00a14	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  00a17	50		 push	 eax
  00a18	8b 4d d0	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  00a1b	51		 push	 ecx
  00a1c	8b 55 c4	 mov	 edx, DWORD PTR _iymin$[ebp]
  00a1f	52		 push	 edx
  00a20	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00a23	50		 push	 eax
  00a24	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  00a29	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  00a2f	88 01		 mov	 BYTE PTR [ecx], al

; 2838 : 
; 2839 : 	//
; 2840 : 	// Reset fpu precision
; 2841 : 	//
; 2842 : 
; 2843 : 	set_fpu_precision_mode_double ();

  00a31	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 2844 : 
; 2845 : 	//
; 2846 : 	// Set the cullmode ( terrain isn't culled in software )
; 2847 : 	//
; 2848 : 
; 2849 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  00a36	6a 03		 push	 3
  00a38	6a 16		 push	 22			; 00000016H
  00a3a	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2850 : 
; 2851 : 	//
; 2852 : 	// Set the rendering states for the terrain polygons
; 2853 : 	//
; 2854 : 
; 2855 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  00a3f	6a 00		 push	 0
  00a41	6a 1d		 push	 29			; 0000001dH
  00a43	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2856 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00a48	6a 02		 push	 2
  00a4a	6a 09		 push	 9
  00a4c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2857 : 
; 2858 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  00a51	6a 01		 push	 1
  00a53	6a 0c		 push	 12			; 0000000cH
  00a55	6a 00		 push	 0
  00a57	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2859 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  00a5c	6a 01		 push	 1
  00a5e	6a 0d		 push	 13			; 0000000dH
  00a60	6a 00		 push	 0
  00a62	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2860 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  00a67	6a 01		 push	 1
  00a69	6a 0e		 push	 14			; 0000000eH
  00a6b	6a 00		 push	 0
  00a6d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2861 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  00a72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  00a77	50		 push	 eax
  00a78	6a 10		 push	 16			; 00000010H
  00a7a	6a 00		 push	 0
  00a7c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2862 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  00a81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  00a86	50		 push	 eax
  00a87	6a 11		 push	 17			; 00000011H
  00a89	6a 00		 push	 0
  00a8b	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2863 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  00a90	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  00a95	50		 push	 eax
  00a96	6a 12		 push	 18			; 00000012H
  00a98	6a 00		 push	 0
  00a9a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2864 : 
; 2865 : #if ALLOW_TERRAIN_TEXTURES
; 2866 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00a9f	6a 04		 push	 4
  00aa1	6a 01		 push	 1
  00aa3	6a 00		 push	 0
  00aa5	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2867 : #else
; 2868 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 2869 : #endif
; 2870 : 
; 2871 : 	//
; 2872 : 	// Go through the polys in sector, and drawing them
; 2873 : 	//
; 2874 : 
; 2875 : 	polygon = current_terrain_sector->polygons;

  00aaa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00aaf	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00ab2	89 4d b8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 2876 : 
; 2877 : 	surface = current_terrain_sector->surface_changes;

  00ab5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00aba	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00abd	89 4d b4	 mov	 DWORD PTR _surface$[ebp], ecx

; 2878 : 
; 2879 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  00ac0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00ac5	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00ac9	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  00acf	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 2880 : 
; 2881 : 	current_terrain_type = surface->surface_id;

  00ad5	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00ad8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00adb	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2882 : 
; 2883 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00ae1	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00ae8	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00aed	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2884 : 
; 2885 : 	reset_terrain_3d_buffered_polygons ();

  00af2	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 2886 : 
; 2887 : 	reset_deferred_state_changes ();

  00af7	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2888 : 
; 2889 : 	set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00afc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b01	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00b04	51		 push	 ecx
  00b05	6a 00		 push	 0
  00b07	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture

; 2890 : 
; 2891 : 	set_terrain_3d_zbuffer_constant ( slot );

  00b0c	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00b0f	50		 push	 eax
  00b10	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 2892 : 
; 2893 : 	if ( current_terrain_sector->number_of_points < 257 )

  00b15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b1a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00b1d	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  00b23	0f 8d 04 01 00
	00		 jge	 $LN15@draw_3d_te

; 2894 : 	{
; 2895 : 
; 2896 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  00b29	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b2e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00b31	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 2897 : 
; 2898 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00b37	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b3c	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00b40	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00b43	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  00b45	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00b48	83 e8 01	 sub	 eax, 1
  00b4b	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  00b4e	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00b52	0f 8e d0 00 00
	00		 jle	 $LN6@draw_3d_te

; 2899 : 		{
; 2900 : 
; 2901 : 			int
; 2902 : 				number_of_points;
; 2903 : 
; 2904 : 		 	if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  00b58	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b5b	8a 08		 mov	 cl, BYTE PTR [eax]
  00b5d	c0 e9 07	 shr	 cl, 7
  00b60	80 e1 01	 and	 cl, 1
  00b63	0f b6 d1	 movzx	 edx, cl
  00b66	85 d2		 test	 edx, edx
  00b68	74 40		 je	 SHORT $LN17@draw_3d_te

; 2905 : 			{
; 2906 : 
; 2907 : 				surface++;

  00b6a	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b6d	83 c0 01	 add	 eax, 1
  00b70	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 2908 : 
; 2909 : 				current_terrain_type = surface->surface_id;

  00b73	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b76	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00b79	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2910 : 
; 2911 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00b7f	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00b86	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00b8b	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2912 : 
; 2913 : 				//
; 2914 : 				// Flush any buffered polygons
; 2915 : 				//
; 2916 : 
; 2917 : 				draw_terrain_3d_buffered_polygons ();

  00b90	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2918 : 
; 2919 : 				reset_deferred_state_changes ();

  00b95	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2920 : 
; 2921 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00b9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b9f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ba2	51		 push	 ecx
  00ba3	6a 00		 push	 0
  00ba5	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN17@draw_3d_te:

; 2922 : 			}
; 2923 : 
; 2924 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00baa	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00bad	8a 08		 mov	 cl, BYTE PTR [eax]
  00baf	80 e1 7f	 and	 cl, 127			; 0000007fH
  00bb2	0f b6 d1	 movzx	 edx, cl
  00bb5	89 95 1c ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 2925 : 
; 2926 : 			{
; 2927 : 
; 2928 : 				if ( outcode_3d_terrain_byte_polygon ( number_of_points, terrain_3d_sector_point_byte_references, &terrain_3d_face_outcode ) )

  00bbb	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00bc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00bc5	50		 push	 eax
  00bc6	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$2[ebp]
  00bcc	51		 push	 ecx
  00bcd	e8 00 00 00 00	 call	 ?outcode_3d_terrain_byte_polygon@@YGHHPAUTERRAIN_3D_POINT_BYTE_REFERENCE@@PAH@Z ; outcode_3d_terrain_byte_polygon
  00bd2	85 c0		 test	 eax, eax
  00bd4	74 34		 je	 SHORT $LN20@draw_3d_te

; 2929 : 				{
; 2930 : 
; 2931 : 					commit_deferred_state_changes ();

  00bd6	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 2932 : 
; 2933 : 					if ( terrain_3d_face_outcode )

  00bdb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00be2	74 14		 je	 SHORT $LN19@draw_3d_te

; 2934 : 					{
; 2935 : 
; 2936 : 						current_terrain_type_class->render_byte_clipped ( number_of_points );

  00be4	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00bea	50		 push	 eax
  00beb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00bf1	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00bf4	ff d2		 call	 edx

; 2937 : 					}
; 2938 : 					else

  00bf6	eb 12		 jmp	 SHORT $LN20@draw_3d_te
$LN19@draw_3d_te:

; 2939 : 					{
; 2940 : 
; 2941 : 						current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00bf8	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00bfe	50		 push	 eax
  00bff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c05	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00c08	ff d2		 call	 edx
$LN20@draw_3d_te:

; 2942 : 					}
; 2943 : 				}
; 2944 : 
; 2945 : 				terrain_3d_sector_point_byte_references += number_of_points;

  00c0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00c0f	03 85 1c ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  00c15	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 2946 : 
; 2947 : 				polygon++;

  00c1a	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c1d	83 c0 01	 add	 eax, 1
  00c20	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 2948 : 			}
; 2949 : 		}

  00c23	e9 1d ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 2950 : 	}
; 2951 : 	else

  00c28	e9 04 01 00 00	 jmp	 $LN9@draw_3d_te
$LN15@draw_3d_te:

; 2952 : 	{
; 2953 : 
; 2954 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  00c2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00c32	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00c35	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 2955 : 
; 2956 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00c3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00c40	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00c44	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00c47	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  00c49	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00c4c	83 e8 01	 sub	 eax, 1
  00c4f	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  00c52	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00c56	0f 8e d5 00 00
	00		 jle	 $LN9@draw_3d_te

; 2957 : 		{
; 2958 : 
; 2959 : 			int
; 2960 : 				number_of_points;
; 2961 : 
; 2962 : 			if ( polygon->surface_change ) //get_3d_terrain_face_surface_change ( polygon ) )

  00c5c	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c5f	8a 08		 mov	 cl, BYTE PTR [eax]
  00c61	c0 e9 07	 shr	 cl, 7
  00c64	80 e1 01	 and	 cl, 1
  00c67	0f b6 d1	 movzx	 edx, cl
  00c6a	85 d2		 test	 edx, edx
  00c6c	74 40		 je	 SHORT $LN21@draw_3d_te

; 2963 : 			{
; 2964 : 
; 2965 : 				surface++;

  00c6e	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00c71	83 c0 01	 add	 eax, 1
  00c74	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 2966 : 
; 2967 : 				current_terrain_type = surface->surface_id;

  00c77	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00c7a	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00c7d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2968 : 
; 2969 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00c83	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00c8a	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00c8f	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2970 : 
; 2971 : 				draw_terrain_3d_buffered_polygons ();

  00c94	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2972 : 
; 2973 : 				reset_deferred_state_changes ();

  00c99	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2974 : 
; 2975 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00c9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00ca3	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ca6	51		 push	 ecx
  00ca7	6a 00		 push	 0
  00ca9	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN21@draw_3d_te:

; 2976 : 			}
; 2977 : 
; 2978 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00cae	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00cb1	8a 08		 mov	 cl, BYTE PTR [eax]
  00cb3	80 e1 7f	 and	 cl, 127			; 0000007fH
  00cb6	0f b6 d1	 movzx	 edx, cl
  00cb9	89 95 18 ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 2979 : 
; 2980 : 			{
; 2981 : 
; 2982 : 				if ( outcode_3d_terrain_word_polygon ( number_of_points, terrain_3d_sector_point_word_references, &terrain_3d_face_outcode ) )

  00cbf	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00cc4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00cc9	50		 push	 eax
  00cca	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$1[ebp]
  00cd0	51		 push	 ecx
  00cd1	e8 00 00 00 00	 call	 ?outcode_3d_terrain_word_polygon@@YGHHPAUTERRAIN_3D_POINT_WORD_REFERENCE@@PAH@Z ; outcode_3d_terrain_word_polygon
  00cd6	85 c0		 test	 eax, eax
  00cd8	74 34		 je	 SHORT $LN24@draw_3d_te

; 2983 : 				{
; 2984 : 
; 2985 : 					commit_deferred_state_changes ();

  00cda	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 2986 : 
; 2987 : 					if ( terrain_3d_face_outcode )

  00cdf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00ce6	74 14		 je	 SHORT $LN23@draw_3d_te

; 2988 : 					{
; 2989 : 
; 2990 : 						current_terrain_type_class->render_word_clipped ( number_of_points );

  00ce8	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00cee	50		 push	 eax
  00cef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00cf5	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00cf8	ff d2		 call	 edx

; 2991 : 					}
; 2992 : 					else

  00cfa	eb 12		 jmp	 SHORT $LN24@draw_3d_te
$LN23@draw_3d_te:

; 2993 : 					{
; 2994 : 
; 2995 : 						current_terrain_type_class->render_word_unclipped ( number_of_points );

  00cfc	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00d02	50		 push	 eax
  00d03	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00d09	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00d0c	ff d2		 call	 edx
$LN24@draw_3d_te:

; 2996 : 					}
; 2997 : 				}
; 2998 : 
; 2999 : 				terrain_3d_sector_point_word_references += number_of_points;

  00d0e	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00d14	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00d1a	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00d1d	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 3000 : 
; 3001 : 				polygon++;

  00d23	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00d26	83 c0 01	 add	 eax, 1
  00d29	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 3002 : 			}
; 3003 : 		}

  00d2c	e9 18 ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 3004 : 	}
; 3005 : 
; 3006 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00d31	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00d39	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 3007 : 
; 3008 : 	//
; 3009 : 	// Flush any buffered polygons
; 3010 : 	//
; 3011 : 
; 3012 : 	draw_terrain_3d_buffered_polygons ();

  00d41	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 3013 : 
; 3014 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 3015 : 
; 3016 : 	//
; 3017 : 	// Render the point normals
; 3018 : 	//
; 3019 : 
; 3020 : 	suspend_d3d_fog ();
; 3021 : 
; 3022 : 	draw_3d_terrain_sector_point_normals ( slot );
; 3023 : 
; 3024 : 	reinstate_d3d_fog ();
; 3025 : 
; 3026 : #endif
; 3027 : }

  00d46	5f		 pop	 edi
  00d47	5e		 pop	 esi
  00d48	5b		 pop	 ebx
  00d49	8b e5		 mov	 esp, ebp
  00d4b	5d		 pop	 ebp
  00d4c	c2 04 00	 ret	 4
?draw_3d_terrain_3d_clipped_bw_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_3d_clipped_bw_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_unclipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -168				; size = 4
_number_of_points$2 = -164				; size = 4
_colour_index$3 = -160					; size = 4
_ib$4 = -156						; size = 4
_ig$5 = -152						; size = 4
_ir$6 = -148						; size = 4
_b$7 = -144						; size = 4
_g$8 = -140						; size = 4
_r$9 = -136						; size = 4
_j$10 = -132						; size = 4
_i$11 = -128						; size = 4
_q$12 = -124						; size = 4
_y$13 = -120						; size = 4
_x$14 = -116						; size = 4
_posz$15 = -112						; size = 4
_posy$16 = -108						; size = 4
_posx$17 = -104						; size = 4
_scaled_rotation$ = -100				; size = 36
_result_colours$ = -64					; size = 4
_result_2d_points$ = -60				; size = 4
_colour_indices$ = -56					; size = 4
_colours$ = -52						; size = 4
_normal_indices$ = -48					; size = 4
_surface$ = -44						; size = 4
_polygon$ = -40						; size = 4
_points_y$ = -36					; size = 4
_points_xz$ = -32					; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_unclipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_unclipped_sector, COMDAT

; 2171 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2172 : 
; 2173 : 	int
; 2174 : 		normal_index,
; 2175 : 		count;
; 2176 : 
; 2177 : 	float
; 2178 : 		current_sector_x_offset,
; 2179 : 		current_sector_z_offset,
; 2180 : 		current_sector_x_visual_offset,
; 2181 : 		current_sector_y_visual_offset,
; 2182 : 		current_sector_z_visual_offset;
; 2183 : 
; 2184 : 	terrain_3d_point_xz
; 2185 : 		*points_xz;
; 2186 : 
; 2187 : 	terrain_3d_point_y
; 2188 : 		*points_y;
; 2189 : 
; 2190 : 	terrain_3d_face
; 2191 : 		*polygon;
; 2192 : 
; 2193 : 	terrain_3d_surface
; 2194 : 		*surface;
; 2195 : 
; 2196 : 	terrain_3d_normal_index
; 2197 : 		*normal_indices;
; 2198 : 
; 2199 : 	terrain_3d_colour
; 2200 : 		*colours;
; 2201 : 
; 2202 : 	terrain_3d_colour_index
; 2203 : 		*colour_indices;
; 2204 : 
; 2205 : 	object_transformed_2d_point
; 2206 : 		*result_2d_points;
; 2207 : 
; 2208 : 	terrain_3d_transformed_point_colour
; 2209 : 		*result_colours;
; 2210 : 
; 2211 : 	float
; 2212 : 		scaled_rotation[3][3];
; 2213 : 
; 2214 : 	//
; 2215 : 	// Set fpu precision
; 2216 : 	//
; 2217 : 
; 2218 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 2219 : 
; 2220 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 2221 : 
; 2222 : 	terrain_3d_sectors_totally_visible++;

  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_totally_visible@@3HA ; terrain_3d_sectors_totally_visible
  00023	83 c0 01	 add	 eax, 1
  00026	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_totally_visible@@3HA, eax ; terrain_3d_sectors_totally_visible

; 2223 : 
; 2224 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0002b	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0002e	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00031	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00034	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  00038	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  0003e	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00041	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 2225 : 
; 2226 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 2227 : //	{
; 2228 : //
; 2229 : //		current_terrain_sector = current_terrain_sector->approximation;
; 2230 : //	}
; 2231 : 
; 2232 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004b	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 2233 : 
; 2234 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00059	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0005c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 2235 : 
; 2236 : 	points_xz = current_terrain_points_xz;

  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  00067	89 45 e0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 2237 : 
; 2238 : 	points_y = current_terrain_points_y;

  0006a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  0006f	89 45 dc	 mov	 DWORD PTR _points_y$[ebp], eax

; 2239 : 
; 2240 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 2241 : 
; 2242 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 2243 : 
; 2244 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00072	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00075	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00078	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0007b	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00081	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00085	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 2245 : 
; 2246 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0008a	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0008d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00090	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00093	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00099	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0009d	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 2247 : 
; 2248 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000a7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  000ac	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000b0	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 2249 : 
; 2250 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ba	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000bf	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000c4	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 2251 : 
; 2252 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ce	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000d6	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000db	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 2253 : 
; 2254 : 	colours = current_terrain_sector->point_colours;

  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e5	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e8	89 4d cc	 mov	 DWORD PTR _colours$[ebp], ecx

; 2255 : 
; 2256 : 	colour_indices = current_terrain_sector->colour_indices;

  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000f0	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f3	89 4d c8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 2257 : 
; 2258 : 	normal_indices = current_terrain_sector->normal_changes;

  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000fb	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000fe	89 4d d0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 2259 : 
; 2260 : 	result_2d_points = transformed_3d_2d_points;

  00101	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 2261 : 
; 2262 : 	result_colours = transformed_3d_point_colours;

  00108	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 2263 : 
; 2264 : 	//
; 2265 : 	// Now transform all the points. Have rgb & ramp solutions though.
; 2266 : 	//
; 2267 : 
; 2268 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00114	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00117	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  0011d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 2269 : 
; 2270 : 	normal_index = normal_indices->index;

  00123	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00126	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00129	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 2271 : 
; 2272 : 	//
; 2273 : 	// Set up the scaled rotation matrix
; 2274 : 	//
; 2275 : 
; 2276 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0012c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00131	6b c8 00	 imul	 ecx, eax, 0
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0013a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0013e	b9 04 00 00 00	 mov	 ecx, 4
  00143	6b d1 00	 imul	 edx, ecx, 0
  00146	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0014c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00151	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00155	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0015a	6b c2 00	 imul	 eax, edx, 0
  0015d	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00161	ba 04 00 00 00	 mov	 edx, 4
  00166	6b c2 00	 imul	 eax, edx, 0
  00169	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 2277 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  0016e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00173	6b c8 00	 imul	 ecx, eax, 0
  00176	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0017c	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00180	b9 04 00 00 00	 mov	 ecx, 4
  00185	c1 e1 00	 shl	 ecx, 0
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0018e	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00193	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  00197	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0019c	6b c8 00	 imul	 ecx, eax, 0
  0019f	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001a3	b8 04 00 00 00	 mov	 eax, 4
  001a8	c1 e0 00	 shl	 eax, 0
  001ab	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 2278 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001b0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001b5	6b c8 00	 imul	 ecx, eax, 0
  001b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001be	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001c2	b9 04 00 00 00	 mov	 ecx, 4
  001c7	d1 e1		 shl	 ecx, 1
  001c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001cf	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001d4	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001d8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001dd	6b c8 00	 imul	 ecx, eax, 0
  001e0	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001e4	b8 04 00 00 00	 mov	 eax, 4
  001e9	d1 e0		 shl	 eax, 1
  001eb	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 2279 : 
; 2280 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  001f0	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001f5	c1 e0 00	 shl	 eax, 0
  001f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001fe	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00202	b8 04 00 00 00	 mov	 eax, 4
  00207	6b c8 00	 imul	 ecx, eax, 0
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0020f	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00214	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00219	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0021e	c1 e1 00	 shl	 ecx, 0
  00221	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00225	b8 04 00 00 00	 mov	 eax, 4
  0022a	6b c8 00	 imul	 ecx, eax, 0
  0022d	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 2281 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  00232	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00237	c1 e0 00	 shl	 eax, 0
  0023a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00240	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00244	b8 04 00 00 00	 mov	 eax, 4
  00249	c1 e0 00	 shl	 eax, 0
  0024c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00252	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00257	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  0025c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00261	c1 e2 00	 shl	 edx, 0
  00264	8d 44 15 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00268	b9 04 00 00 00	 mov	 ecx, 4
  0026d	c1 e1 00	 shl	 ecx, 0
  00270	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 2282 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  00275	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0027a	c1 e0 00	 shl	 eax, 0
  0027d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00283	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00287	b8 04 00 00 00	 mov	 eax, 4
  0028c	d1 e0		 shl	 eax, 1
  0028e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00294	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00299	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  0029e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002a3	c1 e2 00	 shl	 edx, 0
  002a6	8d 44 15 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002aa	b9 04 00 00 00	 mov	 ecx, 4
  002af	d1 e1		 shl	 ecx, 1
  002b1	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 2283 : 
; 2284 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002b6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002c3	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002c7	b8 04 00 00 00	 mov	 eax, 4
  002cc	6b c8 00	 imul	 ecx, eax, 0
  002cf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002d4	d1 e0		 shl	 eax, 1
  002d6	8d 44 05 9c	 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  002da	be 04 00 00 00	 mov	 esi, 4
  002df	6b f6 00	 imul	 esi, esi, 0
  002e2	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  002e5	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 2285 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	c1 e0 00	 shl	 eax, 0
  00301	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00306	d1 e1		 shl	 ecx, 1
  00308	8d 4c 0d 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0030c	be 04 00 00 00	 mov	 esi, 4
  00311	c1 e6 00	 shl	 esi, 0
  00314	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00317	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 2286 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  0031a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0031f	d1 e0		 shl	 eax, 1
  00321	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00327	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032b	b8 04 00 00 00	 mov	 eax, 4
  00330	d1 e0		 shl	 eax, 1
  00332	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00337	d1 e1		 shl	 ecx, 1
  00339	8d 4c 0d 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0033d	be 04 00 00 00	 mov	 esi, 4
  00342	d1 e6		 shl	 esi, 1
  00344	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00347	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 2287 : 
; 2288 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  0034a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0034f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00352	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00355	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00357	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0035a	83 e8 01	 sub	 eax, 1
  0035d	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  00360	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00364	0f 8e 9f 03 00
	00		 jle	 $LN3@draw_3d_te

; 2289 : 	{
; 2290 : 
; 2291 : 		float
; 2292 : 			posx,
; 2293 : 			posy,
; 2294 : 			posz,
; 2295 : 			x,
; 2296 : 			y,
; 2297 : 			q,
; 2298 : 			i,
; 2299 : 			j,
; 2300 : 			r,
; 2301 : 			g,
; 2302 : 			b;
; 2303 : 
; 2304 : 		int
; 2305 : 			ir,
; 2306 : 			ig,
; 2307 : 			ib,
; 2308 : 			colour_index;
; 2309 : 
; 2310 : 		current_terrain_y_int = points_y->y;

  0036a	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  0036f	8b 4d dc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  00372	66 23 01	 and	 ax, WORD PTR [ecx]
  00375	0f b7 d0	 movzx	 edx, ax
  00378	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 2311 : 
; 2312 : //		set_terrain_y_int_value ( points_y );
; 2313 : 
; 2314 : 		if ( points_y->normal_change )

  0037e	8b 45 dc	 mov	 eax, DWORD PTR _points_y$[ebp]
  00381	66 8b 08	 mov	 cx, WORD PTR [eax]
  00384	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  00388	66 83 e1 01	 and	 cx, 1
  0038c	0f b7 d1	 movzx	 edx, cx
  0038f	85 d2		 test	 edx, edx
  00391	74 12		 je	 SHORT $LN11@draw_3d_te

; 2315 : 		{
; 2316 : 
; 2317 : 			normal_indices++;

  00393	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00396	83 c0 01	 add	 eax, 1
  00399	89 45 d0	 mov	 DWORD PTR _normal_indices$[ebp], eax

; 2318 : 
; 2319 : 			normal_index = normal_indices->index;

  0039c	8b 45 d0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  0039f	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003a2	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx
$LN11@draw_3d_te:

; 2320 : 		}
; 2321 : 
; 2322 : 		posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  003a5	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003a8	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  003ab	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003af	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003b7	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  003bc	f3 0f 11 45 98	 movss	 DWORD PTR _posx$17[ebp], xmm0

; 2323 : 		posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  003c1	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  003c4	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  003c8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  003cc	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  003d4	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  003d9	f3 0f 11 45 90	 movss	 DWORD PTR _posz$15[ebp], xmm0

; 2324 : 		posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  003de	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  003e6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  003ee	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  003f3	f3 0f 11 45 94	 movss	 DWORD PTR _posy$16[ebp], xmm0

; 2325 : 
; 2326 : 		x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  003f8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003fd	6b c8 00	 imul	 ecx, eax, 0
  00400	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00404	b8 04 00 00 00	 mov	 eax, 4
  00409	6b c8 00	 imul	 ecx, eax, 0
  0040c	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$17[ebp]
  00411	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00416	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0041b	6b c2 00	 imul	 eax, edx, 0
  0041e	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00422	ba 04 00 00 00	 mov	 edx, 4
  00427	c1 e2 00	 shl	 edx, 0
  0042a	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$16[ebp]
  0042f	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  00434	f3 0f 58 c1	 addss	 xmm0, xmm1
  00438	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0043d	6b c8 00	 imul	 ecx, eax, 0
  00440	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00444	b8 04 00 00 00	 mov	 eax, 4
  00449	d1 e0		 shl	 eax, 1
  0044b	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$15[ebp]
  00450	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00455	f3 0f 58 c1	 addss	 xmm0, xmm1
  00459	f3 0f 11 45 8c	 movss	 DWORD PTR _x$14[ebp], xmm0

; 2327 : 		y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  0045e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00463	c1 e0 00	 shl	 eax, 0
  00466	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  0046a	ba 04 00 00 00	 mov	 edx, 4
  0046f	6b c2 00	 imul	 eax, edx, 0
  00472	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$17[ebp]
  00477	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0047c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00481	c1 e1 00	 shl	 ecx, 0
  00484	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00488	b8 04 00 00 00	 mov	 eax, 4
  0048d	c1 e0 00	 shl	 eax, 0
  00490	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$16[ebp]
  00495	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0049a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0049e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004a3	c1 e1 00	 shl	 ecx, 0
  004a6	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004aa	b8 04 00 00 00	 mov	 eax, 4
  004af	d1 e0		 shl	 eax, 1
  004b1	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$15[ebp]
  004b6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004bb	f3 0f 58 c1	 addss	 xmm0, xmm1
  004bf	f3 0f 11 45 88	 movss	 DWORD PTR _y$13[ebp], xmm0

; 2328 : 		result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  004c4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c9	d1 e0		 shl	 eax, 1
  004cb	8d 4c 05 9c	 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  004cf	ba 04 00 00 00	 mov	 edx, 4
  004d4	6b c2 00	 imul	 eax, edx, 0
  004d7	f3 0f 10 45 98	 movss	 xmm0, DWORD PTR _posx$17[ebp]
  004dc	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  004e1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004e6	d1 e1		 shl	 ecx, 1
  004e8	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004ec	b8 04 00 00 00	 mov	 eax, 4
  004f1	c1 e0 00	 shl	 eax, 0
  004f4	f3 0f 10 4d 94	 movss	 xmm1, DWORD PTR _posy$16[ebp]
  004f9	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004fe	f3 0f 58 c1	 addss	 xmm0, xmm1
  00502	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00507	d1 e1		 shl	 ecx, 1
  00509	8d 54 0d 9c	 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0050d	b8 04 00 00 00	 mov	 eax, 4
  00512	d1 e0		 shl	 eax, 1
  00514	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _posz$15[ebp]
  00519	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0051e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00522	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00525	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 2329 : 
; 2330 : 		colour_index = colour_indices->index;

  0052a	8b 45 c8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  0052d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00530	89 8d 60 ff ff
	ff		 mov	 DWORD PTR _colour_index$3[ebp], ecx

; 2331 : 
; 2332 : 		r = colours[colour_index].red;

  00536	6b 85 60 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  0053d	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  00540	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  00544	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00548	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _r$9[ebp], xmm0

; 2333 : 		g = colours[colour_index].green;

  00550	6b 85 60 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  00557	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  0055a	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  0055f	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00563	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _g$8[ebp], xmm0

; 2334 : 		b = colours[colour_index].blue;

  0056b	6b 85 60 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$3[ebp], 3
  00572	8b 4d cc	 mov	 ecx, DWORD PTR _colours$[ebp]
  00575	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  0057a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0057e	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _b$7[ebp], xmm0

; 2335 : 
; 2336 : 		asm_convert_float_to_int ( ( r * terrain_3d_transformed_point_normals[normal_index].r ), &ir );

  00586	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _ir$6[ebp]
  0058c	50		 push	 eax
  0058d	8b 4d fc	 mov	 ecx, DWORD PTR _normal_index$[ebp]
  00590	c1 e1 04	 shl	 ecx, 4
  00593	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _r$9[ebp]
  0059b	f3 0f 59 81 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[ecx]
  005a3	51		 push	 ecx
  005a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2337 : 		asm_convert_float_to_int ( ( g * terrain_3d_transformed_point_normals[normal_index].g ), &ig );

  005ae	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _ig$5[ebp]
  005b4	50		 push	 eax
  005b5	8b 4d fc	 mov	 ecx, DWORD PTR _normal_index$[ebp]
  005b8	c1 e1 04	 shl	 ecx, 4
  005bb	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _g$8[ebp]
  005c3	f3 0f 59 81 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[ecx+4]
  005cb	51		 push	 ecx
  005cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d1	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2338 : 		asm_convert_float_to_int ( ( b * terrain_3d_transformed_point_normals[normal_index].b ), &ib );

  005d6	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _ib$4[ebp]
  005dc	50		 push	 eax
  005dd	8b 4d fc	 mov	 ecx, DWORD PTR _normal_index$[ebp]
  005e0	c1 e1 04	 shl	 ecx, 4
  005e3	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _b$7[ebp]
  005eb	f3 0f 59 81 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[ecx+8]
  005f3	51		 push	 ecx
  005f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f9	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2339 : 
; 2340 : 		result_colours->red = ir;

  005fe	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00601	8a 8d 6c ff ff
	ff		 mov	 cl, BYTE PTR _ir$6[ebp]
  00607	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 2341 : 		result_colours->green = ig;

  0060a	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0060d	8a 8d 68 ff ff
	ff		 mov	 cl, BYTE PTR _ig$5[ebp]
  00613	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 2342 : 		result_colours->blue = ib;

  00616	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00619	8a 8d 64 ff ff
	ff		 mov	 cl, BYTE PTR _ib$4[ebp]
  0061f	88 08		 mov	 BYTE PTR [eax], cl

; 2343 : 		result_colours->normal_index = normal_index;

  00621	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00624	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  00627	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 2344 : 
; 2345 : 		result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  0062a	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0062d	51		 push	 ecx
  0062e	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00633	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00638	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  0063d	8b 4d c0	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00640	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 2346 : 		result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  00643	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00646	51		 push	 ecx
  00647	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0064c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00651	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  00656	8b 4d c0	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  00659	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 2347 : 
; 2348 : 		q = 1.0 / result_2d_points->z;

  0065c	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0065f	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00664	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0066c	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00670	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00674	f3 0f 11 45 84	 movss	 DWORD PTR _q$12[ebp], xmm0

; 2349 : 
; 2350 : 		i = ( x * q );

  00679	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR _x$14[ebp]
  0067e	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _q$12[ebp]
  00683	f3 0f 11 45 80	 movss	 DWORD PTR _i$11[ebp], xmm0

; 2351 : 		j = ( y * q );

  00688	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _y$13[ebp]
  0068d	f3 0f 59 45 84	 mulss	 xmm0, DWORD PTR _q$12[ebp]
  00692	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _j$10[ebp], xmm0

; 2352 : 
; 2353 : 		result_2d_points->j = ( active_3d_environment->y_origin - j );

  0069a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0069f	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  006a4	f3 0f 5c 85 7c
	ff ff ff	 subss	 xmm0, DWORD PTR _j$10[ebp]
  006ac	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  006af	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 2354 : 		result_2d_points->i = ( active_3d_environment->x_origin + i );

  006b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  006b9	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  006be	f3 0f 58 45 80	 addss	 xmm0, DWORD PTR _i$11[ebp]
  006c3	8b 4d c4	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  006c6	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 2355 : 		result_2d_points->q = q;

  006ca	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006cd	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _q$12[ebp]
  006d2	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 2356 : 
; 2357 : 		result_2d_points++;

  006d7	8b 45 c4	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006da	83 c0 10	 add	 eax, 16			; 00000010H
  006dd	89 45 c4	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 2358 : 		result_colours++;

  006e0	8b 45 c0	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006e3	83 c0 08	 add	 eax, 8
  006e6	89 45 c0	 mov	 DWORD PTR _result_colours$[ebp], eax

; 2359 : 
; 2360 : 		points_xz++;

  006e9	8b 45 e0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  006ec	83 c0 04	 add	 eax, 4
  006ef	89 45 e0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 2361 : 		points_y++;

  006f2	8b 45 dc	 mov	 eax, DWORD PTR _points_y$[ebp]
  006f5	83 c0 02	 add	 eax, 2
  006f8	89 45 dc	 mov	 DWORD PTR _points_y$[ebp], eax

; 2362 : 		colour_indices++;

  006fb	8b 45 c8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  006fe	83 c0 01	 add	 eax, 1
  00701	89 45 c8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 2363 : 	}

  00704	e9 4e fc ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 2364 : 
; 2365 : 	//
; 2366 : 	// Reset fpu precision
; 2367 : 	//
; 2368 : 
; 2369 : 	set_fpu_precision_mode_double ();

  00709	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 2370 : 
; 2371 : 	//
; 2372 : 	// Set the cullmode ( terrain isn't culled in software )
; 2373 : 	//
; 2374 : 
; 2375 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  0070e	6a 03		 push	 3
  00710	6a 16		 push	 22			; 00000016H
  00712	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2376 : 
; 2377 : 	//
; 2378 : 	// Set the rendering states for the terrain polygons
; 2379 : 	//
; 2380 : 
; 2381 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  00717	6a 00		 push	 0
  00719	6a 1d		 push	 29			; 0000001dH
  0071b	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2382 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  00720	6a 02		 push	 2
  00722	6a 09		 push	 9
  00724	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 2383 : 
; 2384 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  00729	6a 01		 push	 1
  0072b	6a 0c		 push	 12			; 0000000cH
  0072d	6a 00		 push	 0
  0072f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2385 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  00734	6a 01		 push	 1
  00736	6a 0d		 push	 13			; 0000000dH
  00738	6a 00		 push	 0
  0073a	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2386 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  0073f	6a 01		 push	 1
  00741	6a 0e		 push	 14			; 0000000eH
  00743	6a 00		 push	 0
  00745	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2387 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  0074a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  0074f	50		 push	 eax
  00750	6a 10		 push	 16			; 00000010H
  00752	6a 00		 push	 0
  00754	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2388 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  00759	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  0075e	50		 push	 eax
  0075f	6a 11		 push	 17			; 00000011H
  00761	6a 00		 push	 0
  00763	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2389 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  00768	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  0076d	50		 push	 eax
  0076e	6a 12		 push	 18			; 00000012H
  00770	6a 00		 push	 0
  00772	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2390 : #if ALLOW_TERRAIN_TEXTURES
; 2391 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  00777	6a 04		 push	 4
  00779	6a 01		 push	 1
  0077b	6a 00		 push	 0
  0077d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 2392 : #else
; 2393 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 2394 : #endif
; 2395 : 
; 2396 : 	//
; 2397 : 	// Go through the polys in sector, backface culling them, and drawing them
; 2398 : 	//
; 2399 : 
; 2400 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  00782	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00787	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  0078b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  00791	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 2401 : 
; 2402 : 	polygon = current_terrain_sector->polygons;

  00797	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0079c	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  0079f	89 4d d8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 2403 : 
; 2404 : 	surface = current_terrain_sector->surface_changes;

  007a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  007a7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  007aa	89 4d d4	 mov	 DWORD PTR _surface$[ebp], ecx

; 2405 : 
; 2406 : 	current_terrain_type = surface->surface_id;

  007ad	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  007b0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  007b3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2407 : 
; 2408 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  007b9	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  007c0	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  007c5	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2409 : 
; 2410 : 	reset_terrain_3d_buffered_polygons ();

  007ca	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 2411 : 
; 2412 : 	set_d3d_texture ( 0, current_terrain_type_class->texture );

  007cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  007d4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  007d7	51		 push	 ecx
  007d8	6a 00		 push	 0
  007da	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture

; 2413 : 
; 2414 : 	set_terrain_3d_zbuffer_constant ( slot );

  007df	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  007e2	50		 push	 eax
  007e3	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 2415 : 
; 2416 : 	if ( current_terrain_sector->number_of_points < 257 )

  007e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  007ed	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  007f0	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  007f6	0f 8d c2 00 00
	00		 jge	 $LN12@draw_3d_te

; 2417 : 	{
; 2418 : 
; 2419 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  007fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00801	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00804	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 2420 : 
; 2421 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  0080a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0080f	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00813	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00816	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  00818	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0081b	83 e8 01	 sub	 eax, 1
  0081e	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  00821	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00825	0f 8e 8e 00 00
	00		 jle	 $LN6@draw_3d_te

; 2422 : 		{
; 2423 : 
; 2424 : 			int
; 2425 : 				number_of_points;
; 2426 : 
; 2427 : 			if ( polygon->surface_change )

  0082b	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  0082e	8a 08		 mov	 cl, BYTE PTR [eax]
  00830	c0 e9 07	 shr	 cl, 7
  00833	80 e1 01	 and	 cl, 1
  00836	0f b6 d1	 movzx	 edx, cl
  00839	85 d2		 test	 edx, edx
  0083b	74 3b		 je	 SHORT $LN14@draw_3d_te

; 2428 : 			{
; 2429 : 
; 2430 : 				surface++;

  0083d	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00840	83 c0 01	 add	 eax, 1
  00843	89 45 d4	 mov	 DWORD PTR _surface$[ebp], eax

; 2431 : 
; 2432 : 				current_terrain_type = surface->surface_id;

  00846	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00849	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0084c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2433 : 
; 2434 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00852	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00859	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  0085e	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2435 : 
; 2436 : 				//
; 2437 : 				// Flush any buffered polygons
; 2438 : 				//
; 2439 : 
; 2440 : 				draw_terrain_3d_buffered_polygons ();

  00863	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2441 : 
; 2442 : 				set_d3d_texture ( 0, current_terrain_type_class->texture );

  00868	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  0086d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00870	51		 push	 ecx
  00871	6a 00		 push	 0
  00873	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN14@draw_3d_te:

; 2443 : 			}
; 2444 : 
; 2445 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00878	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  0087b	8a 08		 mov	 cl, BYTE PTR [eax]
  0087d	80 e1 7f	 and	 cl, 127			; 0000007fH
  00880	0f b6 d1	 movzx	 edx, cl
  00883	89 95 5c ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 2446 : 
; 2447 : 			current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00889	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  0088f	50		 push	 eax
  00890	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00896	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00899	ff d2		 call	 edx

; 2448 : 
; 2449 : 			terrain_3d_sector_point_byte_references += number_of_points;

  0089b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  008a0	03 85 5c ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  008a6	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 2450 : 
; 2451 : 			polygon++;

  008ab	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  008ae	83 c0 01	 add	 eax, 1
  008b1	89 45 d8	 mov	 DWORD PTR _polygon$[ebp], eax

; 2452 : 		}

  008b4	e9 5f ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 2453 : 	}
; 2454 : 	else

  008b9	e9 c2 00 00 00	 jmp	 $LN9@draw_3d_te
$LN12@draw_3d_te:

; 2455 : 	{
; 2456 : 
; 2457 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  008be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  008c3	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  008c6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 2458 : 
; 2459 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  008cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  008d1	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  008d5	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  008d8	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  008da	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  008dd	83 e8 01	 sub	 eax, 1
  008e0	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  008e3	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  008e7	0f 8e 93 00 00
	00		 jle	 $LN9@draw_3d_te

; 2460 : 		{
; 2461 : 
; 2462 : 			int
; 2463 : 				number_of_points;
; 2464 : 
; 2465 : 			if ( polygon->surface_change )

  008ed	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  008f0	8a 08		 mov	 cl, BYTE PTR [eax]
  008f2	c0 e9 07	 shr	 cl, 7
  008f5	80 e1 01	 and	 cl, 1
  008f8	0f b6 d1	 movzx	 edx, cl
  008fb	85 d2		 test	 edx, edx
  008fd	74 3b		 je	 SHORT $LN15@draw_3d_te

; 2466 : 			{
; 2467 : 
; 2468 : 				surface++;

  008ff	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  00902	83 c0 01	 add	 eax, 1
  00905	89 45 d4	 mov	 DWORD PTR _surface$[ebp], eax

; 2469 : 
; 2470 : 				current_terrain_type = surface->surface_id;

  00908	8b 45 d4	 mov	 eax, DWORD PTR _surface$[ebp]
  0090b	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0090e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2471 : 
; 2472 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00914	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  0091b	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00920	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2473 : 
; 2474 : 				//
; 2475 : 				// Flush any buffered polygons
; 2476 : 				//
; 2477 : 
; 2478 : 				draw_terrain_3d_buffered_polygons ();

  00925	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2479 : 
; 2480 : 				set_d3d_texture ( 0, current_terrain_type_class->texture );

  0092a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  0092f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00932	51		 push	 ecx
  00933	6a 00		 push	 0
  00935	e8 00 00 00 00	 call	 ?set_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_d3d_texture
$LN15@draw_3d_te:

; 2481 : 			}
; 2482 : 
; 2483 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  0093a	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  0093d	8a 08		 mov	 cl, BYTE PTR [eax]
  0093f	80 e1 7f	 and	 cl, 127			; 0000007fH
  00942	0f b6 d1	 movzx	 edx, cl
  00945	89 95 58 ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 2484 : 
; 2485 : 			current_terrain_type_class->render_word_unclipped ( number_of_points );

  0094b	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00951	50		 push	 eax
  00952	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00958	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0095b	ff d2		 call	 edx

; 2486 : 
; 2487 : 			terrain_3d_sector_point_word_references += number_of_points;

  0095d	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00963	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00969	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0096c	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 2488 : 
; 2489 : 			polygon++;

  00972	8b 45 d8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00975	83 c0 01	 add	 eax, 1
  00978	89 45 d8	 mov	 DWORD PTR _polygon$[ebp], eax

; 2490 : 		}

  0097b	e9 5a ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 2491 : 	}
; 2492 : 
; 2493 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00980	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00988	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 2494 : 
; 2495 : 	//
; 2496 : 	// Flush any buffered polygons
; 2497 : 	//
; 2498 : 
; 2499 : 	draw_terrain_3d_buffered_polygons ();

  00990	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2500 : 
; 2501 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 2502 : 
; 2503 : 	//
; 2504 : 	// Render the point normals
; 2505 : 	//
; 2506 : 
; 2507 : 	suspend_d3d_fog ();
; 2508 : 
; 2509 : 	draw_3d_terrain_sector_point_normals ( slot );
; 2510 : 
; 2511 : 	reinstate_d3d_fog ();
; 2512 : 
; 2513 : #endif
; 2514 : 
; 2515 : }

  00995	5f		 pop	 edi
  00996	5e		 pop	 esi
  00997	5b		 pop	 ebx
  00998	8b e5		 mov	 esp, ebp
  0099a	5d		 pop	 ebp
  0099b	c2 04 00	 ret	 4
?draw_3d_terrain_unclipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_unclipped_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_2d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -228				; size = 4
_number_of_points$2 = -224				; size = 4
_j$3 = -220						; size = 4
_i$4 = -216						; size = 4
_q$5 = -212						; size = 4
_colour_index$6 = -208					; size = 4
_ib$7 = -204						; size = 4
_ig$8 = -200						; size = 4
_ir$9 = -196						; size = 4
_b$10 = -192						; size = 4
_g$11 = -188						; size = 4
_r$12 = -184						; size = 4
_posz$13 = -180						; size = 4
_posy$14 = -176						; size = 4
_posx$15 = -172						; size = 4
_scaled_rotation$ = -168				; size = 36
_last_transformed_point_outcode$ = -132			; size = 4
_result_outcodes$ = -128				; size = 4
_tmp_outcode$ = -121					; size = 1
_result_colours$ = -120					; size = 4
_result_2d_points$ = -116				; size = 4
_last_transformed_point$ = -112				; size = 4
_tmp_vertex$ = -108					; size = 16
_result_3d_points$ = -92				; size = 4
_colour_indices$ = -88					; size = 4
_colours$ = -84						; size = 4
_normal_indices$ = -80					; size = 4
_surface$ = -76						; size = 4
_polygon$ = -72						; size = 4
_points_y$ = -68					; size = 4
_points_xz$ = -64					; size = 4
_iymin$ = -60						; size = 4
_iymax$ = -56						; size = 4
_ixmin$ = -52						; size = 4
_ixmax$ = -48						; size = 4
_oymin$ = -44						; size = 4
_oymax$ = -40						; size = 4
_oxmin$ = -36						; size = 4
_oxmax$ = -32						; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_2d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_2d_clipped_sector, COMDAT

; 1686 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1687 : 
; 1688 : 	int
; 1689 : 		normal_index,
; 1690 : 		count;
; 1691 : 
; 1692 : 	float
; 1693 : 		current_sector_x_offset,
; 1694 : 		current_sector_z_offset,
; 1695 : 		current_sector_x_visual_offset,
; 1696 : 		current_sector_y_visual_offset,
; 1697 : 		current_sector_z_visual_offset,
; 1698 : 		oxmax,
; 1699 : 		oxmin,
; 1700 : 		oymax,
; 1701 : 		oymin;
; 1702 : 
; 1703 : 	unsigned int
; 1704 : 		ixmax,
; 1705 : 		ixmin,
; 1706 : 		iymax,
; 1707 : 		iymin;
; 1708 : 
; 1709 : 	terrain_3d_point_xz
; 1710 : 		*points_xz;
; 1711 : 
; 1712 : 	terrain_3d_point_y
; 1713 : 		*points_y;
; 1714 : 
; 1715 : 	terrain_3d_face
; 1716 : 		*polygon;
; 1717 : 
; 1718 : 	terrain_3d_surface
; 1719 : 		*surface;
; 1720 : 
; 1721 : 	terrain_3d_normal_index
; 1722 : 		*normal_indices;
; 1723 : 
; 1724 : 	terrain_3d_colour
; 1725 : 		*colours;
; 1726 : 
; 1727 : 	terrain_3d_colour_index
; 1728 : 		*colour_indices;
; 1729 : 
; 1730 : 	object_transformed_3d_point
; 1731 : 		*result_3d_points;
; 1732 : 
; 1733 : 	object_transformed_2d_point
; 1734 : 		tmp_vertex,
; 1735 : 		*last_transformed_point,
; 1736 : 		*result_2d_points;
; 1737 : 
; 1738 : 	terrain_3d_transformed_point_colour
; 1739 : 		*result_colours;
; 1740 : 
; 1741 : 	unsigned char
; 1742 : 		tmp_outcode,
; 1743 : 		*result_outcodes,
; 1744 : 		*last_transformed_point_outcode;
; 1745 : 
; 1746 : 	float
; 1747 : 		scaled_rotation[3][3];
; 1748 : 
; 1749 : 	//
; 1750 : 	// Set fpu precision
; 1751 : 	//
; 1752 : 
; 1753 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 1754 : 
; 1755 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 1756 : 
; 1757 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0001e	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00027	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  00031	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00034	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 1758 : 
; 1759 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 1760 : //	{
; 1761 : //
; 1762 : //		current_terrain_sector = current_terrain_sector->approximation;
; 1763 : //	}
; 1764 : 
; 1765 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 1766 : 
; 1767 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 1768 : 
; 1769 : 	points_xz = current_terrain_points_xz;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  0005a	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 1770 : 
; 1771 : 	points_y = current_terrain_points_y;

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  00062	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 1772 : 
; 1773 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 1774 : 
; 1775 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 1776 : 
; 1777 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00065	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00068	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006b	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0006e	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00074	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00078	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 1778 : 
; 1779 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0007d	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00080	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00083	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00086	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  0008c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00090	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 1780 : 
; 1781 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0009a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  0009f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000a3	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 1782 : 
; 1783 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000b2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 1784 : 
; 1785 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000c9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000ce	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 1786 : 
; 1787 : 	normal_indices = current_terrain_sector->normal_changes;

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000d8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000db	89 4d b0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 1788 : 
; 1789 : 	colours = current_terrain_sector->point_colours;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e6	89 4d ac	 mov	 DWORD PTR _colours$[ebp], ecx

; 1790 : 
; 1791 : 	colour_indices = current_terrain_sector->colour_indices;

  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000ee	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f1	89 4d a8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 1792 : 
; 1793 : 	result_3d_points = transformed_3d_3d_points;

  000f4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _result_3d_points$[ebp], OFFSET ?transformed_3d_3d_points@@3PAUOBJECT_TRANSFORMED_3D_POINT@@A ; transformed_3d_3d_points

; 1794 : 
; 1795 : 	result_2d_points = transformed_3d_2d_points;

  000fb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 1796 : 
; 1797 : 	result_outcodes = transformed_3d_point_outcodes;

  00102	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _result_outcodes$[ebp], OFFSET ?transformed_3d_point_outcodes@@3PAEA ; transformed_3d_point_outcodes

; 1798 : 
; 1799 : 	result_colours = transformed_3d_point_colours;

  00109	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 1800 : 
; 1801 : 	last_transformed_point = &tmp_vertex;

  00110	8d 45 94	 lea	 eax, DWORD PTR _tmp_vertex$[ebp]
  00113	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 1802 : 
; 1803 : 	last_transformed_point_outcode = &tmp_outcode;

  00116	8d 45 87	 lea	 eax, DWORD PTR _tmp_outcode$[ebp]
  00119	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 1804 : 
; 1805 : 	tmp_vertex.i = 0;

  0011f	0f 57 c0	 xorps	 xmm0, xmm0
  00122	f3 0f 11 45 94	 movss	 DWORD PTR _tmp_vertex$[ebp], xmm0

; 1806 : 	tmp_vertex.j = 0;

  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 11 45 98	 movss	 DWORD PTR _tmp_vertex$[ebp+4], xmm0

; 1807 : 
; 1808 : 	//
; 1809 : 	// Initialise the first point normal index
; 1810 : 	//
; 1811 : 
; 1812 : 	normal_index = normal_indices->index;

  0012f	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00132	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00135	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 1813 : 
; 1814 : 	//
; 1815 : 	// Now transform all the points.
; 1816 : 	//
; 1817 : 
; 1818 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0013d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00140	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  00146	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 1819 : 
; 1820 : 	//
; 1821 : 	// Set up the scaled rotation matrix
; 1822 : 	//
; 1823 : 
; 1824 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0014c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00151	6b c8 00	 imul	 ecx, eax, 0
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0015a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0015e	b9 04 00 00 00	 mov	 ecx, 4
  00163	6b d1 00	 imul	 edx, ecx, 0
  00166	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0016c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00171	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00175	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017a	6b c2 00	 imul	 eax, edx, 0
  0017d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00184	ba 04 00 00 00	 mov	 edx, 4
  00189	6b c2 00	 imul	 eax, edx, 0
  0018c	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1825 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  00191	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00196	6b c8 00	 imul	 ecx, eax, 0
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0019f	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001a3	b9 04 00 00 00	 mov	 ecx, 4
  001a8	c1 e1 00	 shl	 ecx, 0
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001b1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001b6	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001bf	6b c8 00	 imul	 ecx, eax, 0
  001c2	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001c9	b8 04 00 00 00	 mov	 eax, 4
  001ce	c1 e0 00	 shl	 eax, 0
  001d1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1826 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001db	6b c8 00	 imul	 ecx, eax, 0
  001de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001e4	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001e8	b9 04 00 00 00	 mov	 ecx, 4
  001ed	d1 e1		 shl	 ecx, 1
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001f5	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001fa	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001fe	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00203	6b c8 00	 imul	 ecx, eax, 0
  00206	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0020d	b8 04 00 00 00	 mov	 eax, 4
  00212	d1 e0		 shl	 eax, 1
  00214	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1827 : 
; 1828 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  00219	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021e	c1 e0 00	 shl	 eax, 0
  00221	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00227	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0022b	b8 04 00 00 00	 mov	 eax, 4
  00230	6b c8 00	 imul	 ecx, eax, 0
  00233	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00238	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0023d	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00242	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00247	c1 e1 00	 shl	 ecx, 0
  0024a	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00251	b8 04 00 00 00	 mov	 eax, 4
  00256	6b c8 00	 imul	 ecx, eax, 0
  00259	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1829 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  0025e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00263	c1 e0 00	 shl	 eax, 0
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0026c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00270	b8 04 00 00 00	 mov	 eax, 4
  00275	c1 e0 00	 shl	 eax, 0
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0027e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00283	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00288	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0028d	c1 e2 00	 shl	 edx, 0
  00290	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00297	b9 04 00 00 00	 mov	 ecx, 4
  0029c	c1 e1 00	 shl	 ecx, 0
  0029f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1830 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  002a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a9	c1 e0 00	 shl	 eax, 0
  002ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002b2	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002b6	b8 04 00 00 00	 mov	 eax, 4
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  002c3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002c8	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  002cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002d2	c1 e2 00	 shl	 edx, 0
  002d5	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002dc	b9 04 00 00 00	 mov	 ecx, 4
  002e1	d1 e1		 shl	 ecx, 1
  002e3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1831 : 
; 1832 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	6b c8 00	 imul	 ecx, eax, 0
  00301	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00306	d1 e0		 shl	 eax, 1
  00308	8d 84 05 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  0030f	be 04 00 00 00	 mov	 esi, 4
  00314	6b f6 00	 imul	 esi, esi, 0
  00317	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  0031a	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 1833 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  0031d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00322	d1 e0		 shl	 eax, 1
  00324	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0032a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032e	b8 04 00 00 00	 mov	 eax, 4
  00333	c1 e0 00	 shl	 eax, 0
  00336	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0033b	d1 e1		 shl	 ecx, 1
  0033d	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00344	be 04 00 00 00	 mov	 esi, 4
  00349	c1 e6 00	 shl	 esi, 0
  0034c	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  0034f	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 1834 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  00352	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00357	d1 e0		 shl	 eax, 1
  00359	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00363	b8 04 00 00 00	 mov	 eax, 4
  00368	d1 e0		 shl	 eax, 1
  0036a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0036f	d1 e1		 shl	 ecx, 1
  00371	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00378	be 04 00 00 00	 mov	 esi, 4
  0037d	d1 e6		 shl	 esi, 1
  0037f	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00382	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 1835 : 
; 1836 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0038a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0038d	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00390	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00392	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00395	83 e8 01	 sub	 eax, 1
  00398	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  0039b	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  0039f	0f 8e 17 05 00
	00		 jle	 $LN3@draw_3d_te

; 1837 : 	{
; 1838 : 
; 1839 : 		float
; 1840 : 			posx,
; 1841 : 			posy,
; 1842 : 			posz,
; 1843 : 			r,
; 1844 : 			g,
; 1845 : 			b;
; 1846 : 
; 1847 : 		int
; 1848 : 			ir,
; 1849 : 			ig,
; 1850 : 			ib,
; 1851 : 			colour_index;
; 1852 : 
; 1853 : 		//
; 1854 : 		// Read in all the memory variables
; 1855 : 		//
; 1856 : 
; 1857 : 		current_terrain_y_int = points_y->y;

  003a5	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  003aa	8b 4d bc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  003ad	66 23 01	 and	 ax, WORD PTR [ecx]
  003b0	0f b7 d0	 movzx	 edx, ax
  003b3	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 1858 : 
; 1859 : //		set_terrain_y_int_value ( points_y );
; 1860 : 
; 1861 : 		colour_index = colour_indices->index;

  003b9	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  003bc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003bf	89 8d 30 ff ff
	ff		 mov	 DWORD PTR _colour_index$6[ebp], ecx

; 1862 : 
; 1863 : 		r = colours[colour_index].red;

  003c5	6b 85 30 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  003cc	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  003cf	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  003d3	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  003d7	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _r$12[ebp], xmm0

; 1864 : 		g = colours[colour_index].green;

  003df	6b 85 30 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  003e6	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  003e9	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  003ee	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  003f2	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _g$11[ebp], xmm0

; 1865 : 		b = colours[colour_index].blue;

  003fa	6b 85 30 ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$6[ebp], 3
  00401	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  00404	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  00409	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0040d	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _b$10[ebp], xmm0

; 1866 : 
; 1867 : 		posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  00415	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  00418	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  0041b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0041f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  00427	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  0042c	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _posx$15[ebp], xmm0

; 1868 : 		posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  00434	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  00437	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  0043b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0043f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  00447	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  0044c	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _posz$13[ebp], xmm0

; 1869 : 		posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  00454	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  0045c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  00464	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  00469	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _posy$14[ebp], xmm0

; 1870 : 
; 1871 : 		result_3d_points->x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  00471	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00476	6b c8 00	 imul	 ecx, eax, 0
  00479	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00480	b8 04 00 00 00	 mov	 eax, 4
  00485	6b c8 00	 imul	 ecx, eax, 0
  00488	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$15[ebp]
  00490	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00495	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0049a	6b c2 00	 imul	 eax, edx, 0
  0049d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  004a4	ba 04 00 00 00	 mov	 edx, 4
  004a9	c1 e2 00	 shl	 edx, 0
  004ac	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$14[ebp]
  004b4	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  004b9	f3 0f 58 c1	 addss	 xmm0, xmm1
  004bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c2	6b c8 00	 imul	 ecx, eax, 0
  004c5	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  004cc	b8 04 00 00 00	 mov	 eax, 4
  004d1	d1 e0		 shl	 eax, 1
  004d3	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$13[ebp]
  004db	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  004e0	f3 0f 58 c1	 addss	 xmm0, xmm1
  004e4	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  004e7	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1872 : 		result_3d_points->y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  004eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004f0	c1 e0 00	 shl	 eax, 0
  004f3	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  004fa	ba 04 00 00 00	 mov	 edx, 4
  004ff	6b c2 00	 imul	 eax, edx, 0
  00502	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$15[ebp]
  0050a	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0050f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00514	c1 e1 00	 shl	 ecx, 0
  00517	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0051e	b8 04 00 00 00	 mov	 eax, 4
  00523	c1 e0 00	 shl	 eax, 0
  00526	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$14[ebp]
  0052e	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00533	f3 0f 58 c1	 addss	 xmm0, xmm1
  00537	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0053c	c1 e1 00	 shl	 ecx, 0
  0053f	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00546	b8 04 00 00 00	 mov	 eax, 4
  0054b	d1 e0		 shl	 eax, 1
  0054d	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$13[ebp]
  00555	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0055a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0055e	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  00561	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1873 : 		result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  00566	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056b	d1 e0		 shl	 eax, 1
  0056d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00574	ba 04 00 00 00	 mov	 edx, 4
  00579	6b c2 00	 imul	 eax, edx, 0
  0057c	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$15[ebp]
  00584	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00589	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0058e	d1 e1		 shl	 ecx, 1
  00590	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00597	b8 04 00 00 00	 mov	 eax, 4
  0059c	c1 e0 00	 shl	 eax, 0
  0059f	f3 0f 10 8d 50
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$14[ebp]
  005a7	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  005ac	f3 0f 58 c1	 addss	 xmm0, xmm1
  005b0	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005b5	d1 e1		 shl	 ecx, 1
  005b7	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  005be	b8 04 00 00 00	 mov	 eax, 4
  005c3	d1 e0		 shl	 eax, 1
  005c5	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$13[ebp]
  005cd	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  005d2	f3 0f 58 c1	 addss	 xmm0, xmm1
  005d6	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  005d9	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 1874 : 
; 1875 : 		normal_indices += points_y->normal_change;	//get_3d_terrain_point_y_normal_change ( points_y );

  005de	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  005e1	66 8b 08	 mov	 cx, WORD PTR [eax]
  005e4	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  005e8	66 83 e1 01	 and	 cx, 1
  005ec	0f b7 d1	 movzx	 edx, cx
  005ef	03 55 b0	 add	 edx, DWORD PTR _normal_indices$[ebp]
  005f2	89 55 b0	 mov	 DWORD PTR _normal_indices$[ebp], edx

; 1876 : 
; 1877 : 		normal_index = normal_indices->index;

  005f5	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  005f8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  005fb	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 1878 : 
; 1879 : 		r = ( r * terrain_3d_transformed_point_normals[normal_index].r ) + FLOAT_FLOAT_FACTOR;

  005fe	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  00601	c1 e0 04	 shl	 eax, 4
  00604	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _r$12[ebp]
  0060c	f3 0f 59 80 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax]
  00614	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  0061c	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _r$12[ebp], xmm0

; 1880 : 		g = ( g * terrain_3d_transformed_point_normals[normal_index].g ) + FLOAT_FLOAT_FACTOR;

  00624	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  00627	c1 e0 04	 shl	 eax, 4
  0062a	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _g$11[ebp]
  00632	f3 0f 59 80 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+4]
  0063a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  00642	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _g$11[ebp], xmm0

; 1881 : 		b = ( b * terrain_3d_transformed_point_normals[normal_index].b ) + FLOAT_FLOAT_FACTOR;

  0064a	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0064d	c1 e0 04	 shl	 eax, 4
  00650	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _b$10[ebp]
  00658	f3 0f 59 80 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+8]
  00660	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  00668	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _b$10[ebp], xmm0

; 1882 : 
; 1883 : 		ir = ( *( int * ) &r ) - INTEGER_FLOAT_FACTOR;

  00670	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _r$12[ebp]
  00676	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0067b	89 85 3c ff ff
	ff		 mov	 DWORD PTR _ir$9[ebp], eax

; 1884 : 		ig = ( *( int * ) &g ) - INTEGER_FLOAT_FACTOR;

  00681	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _g$11[ebp]
  00687	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0068c	89 85 38 ff ff
	ff		 mov	 DWORD PTR _ig$8[ebp], eax

; 1885 : 		ib = ( *( int * ) &b ) - INTEGER_FLOAT_FACTOR;

  00692	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _b$10[ebp]
  00698	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  0069d	89 85 34 ff ff
	ff		 mov	 DWORD PTR _ib$7[ebp], eax

; 1886 : 
; 1887 : 		result_colours->red = ir;

  006a3	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006a6	8a 8d 3c ff ff
	ff		 mov	 cl, BYTE PTR _ir$9[ebp]
  006ac	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 1888 : 		result_colours->green = ig;

  006af	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006b2	8a 8d 38 ff ff
	ff		 mov	 cl, BYTE PTR _ig$8[ebp]
  006b8	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 1889 : 		result_colours->blue = ib;

  006bb	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006be	8a 8d 34 ff ff
	ff		 mov	 cl, BYTE PTR _ib$7[ebp]
  006c4	88 08		 mov	 BYTE PTR [eax], cl

; 1890 : 		result_colours->normal_index = normal_index;

  006c6	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  006c9	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  006cc	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 1891 : 
; 1892 : 		result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  006cf	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006d2	51		 push	 ecx
  006d3	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006dd	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  006e2	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  006e5	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 1893 : 		result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  006e8	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006eb	51		 push	 ecx
  006ec	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006f6	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  006fb	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  006fe	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 1894 : 
; 1895 : 		{
; 1896 : 
; 1897 : 			float
; 1898 : 				q,
; 1899 : 				i,
; 1900 : 				j;
; 1901 : 
; 1902 : 			oxmax = active_viewport.x_max - last_transformed_point->i;

  00701	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00704	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0070c	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00710	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 1903 : 			oxmin = last_transformed_point->i - active_viewport.x_min;

  00715	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00718	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0071c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00724	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 1904 : 			oymax = active_viewport.y_max - last_transformed_point->j;

  00729	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0072c	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  00734	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00739	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 1905 : 			oymin = last_transformed_point->j - active_viewport.y_min;

  0073e	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00741	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00746	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  0074e	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 1906 : 
; 1907 : 			ixmax = *( ( unsigned int * ) &oxmax );

  00753	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  00756	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1908 : 			ixmin = *( ( unsigned int * ) &oxmin );

  00759	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  0075c	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1909 : 			iymax = *( ( unsigned int * ) &oymax );

  0075f	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  00762	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1910 : 			iymin = *( ( unsigned int * ) &oymin );

  00765	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  00768	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1911 : 
; 1912 : #ifdef __WATCOMC__
; 1913 : 
; 1914 : 			start_float_divide ( result_2d_points->z, 1.0 );
; 1915 : 
; 1916 : 			*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 1917 : 
; 1918 : 			q = end_float_divide ();
; 1919 : 
; 1920 : #else
; 1921 : 
; 1922 : 			q = 1.0 / result_2d_points->z;

  0076b	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0076e	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00773	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0077b	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0077f	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00783	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _q$5[ebp], xmm0

; 1923 : 
; 1924 : 			ixmin >>= 31;

  0078b	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  0078e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00791	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1925 : 			iymin &= 0x80000000;

  00794	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  00797	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  0079c	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1926 : 			ixmax >>= 29;

  0079f	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  007a2	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  007a5	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1927 : 			iymax &= 0x80000000;

  007a8	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  007ab	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  007b0	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1928 : 			iymin >>= 30;

  007b3	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  007b6	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  007b9	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1929 : 			ixmin &= 0x00000001;

  007bc	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007bf	83 e0 01	 and	 eax, 1
  007c2	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1930 : 			iymax >>= 28;

  007c5	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  007c8	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  007cb	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1931 : 			ixmax &= 0x00000004;

  007ce	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  007d1	83 e0 04	 and	 eax, 4
  007d4	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1932 : 			ixmin |= iymin;

  007d7	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007da	0b 45 c4	 or	 eax, DWORD PTR _iymin$[ebp]
  007dd	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1933 : 			ixmax |= iymax;

  007e0	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  007e3	0b 45 c8	 or	 eax, DWORD PTR _iymax$[ebp]
  007e6	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1934 : 			*last_transformed_point_outcode = ( ixmin | ixmax );

  007e9	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007ec	0b 45 d0	 or	 eax, DWORD PTR _ixmax$[ebp]
  007ef	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  007f5	88 01		 mov	 BYTE PTR [ecx], al

; 1935 : 
; 1936 : #endif
; 1937 : 
; 1938 : 			last_transformed_point = result_2d_points;

  007f7	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  007fa	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 1939 : 			last_transformed_point_outcode = result_outcodes;

  007fd	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  00800	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 1940 : 
; 1941 : 			i = ( result_3d_points->x * q );

  00806	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00809	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0080d	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  00815	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _i$4[ebp], xmm0

; 1942 : 			j = ( result_3d_points->y * q );

  0081d	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00820	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00825	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  0082d	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _j$3[ebp], xmm0

; 1943 : 
; 1944 : 			result_2d_points->j = ( active_3d_environment->y_origin - j );

  00835	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0083a	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  0083f	f3 0f 5c 85 24
	ff ff ff	 subss	 xmm0, DWORD PTR _j$3[ebp]
  00847	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  0084a	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1945 : 			result_2d_points->i = ( active_3d_environment->x_origin + i );

  0084f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00854	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00859	f3 0f 58 85 28
	ff ff ff	 addss	 xmm0, DWORD PTR _i$4[ebp]
  00861	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00864	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1946 : 			result_2d_points->q = q;

  00868	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  0086b	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _q$5[ebp]
  00873	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1947 : 		}
; 1948 : 
; 1949 : 		result_3d_points++;

  00878	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  0087b	83 c0 08	 add	 eax, 8
  0087e	89 45 a4	 mov	 DWORD PTR _result_3d_points$[ebp], eax

; 1950 : 		result_2d_points++;

  00881	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00884	83 c0 10	 add	 eax, 16			; 00000010H
  00887	89 45 8c	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 1951 : 		result_outcodes++;

  0088a	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  0088d	83 c0 01	 add	 eax, 1
  00890	89 45 80	 mov	 DWORD PTR _result_outcodes$[ebp], eax

; 1952 : 		result_colours++;

  00893	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00896	83 c0 08	 add	 eax, 8
  00899	89 45 88	 mov	 DWORD PTR _result_colours$[ebp], eax

; 1953 : 
; 1954 : 		points_xz++;

  0089c	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  0089f	83 c0 04	 add	 eax, 4
  008a2	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 1955 : 		points_y++;

  008a5	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  008a8	83 c0 02	 add	 eax, 2
  008ab	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 1956 : 		colour_indices++;

  008ae	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  008b1	83 c0 01	 add	 eax, 1
  008b4	89 45 a8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 1957 : 	}

  008b7	e9 d6 fa ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 1958 : 
; 1959 : 	oxmax = active_viewport.x_max - last_transformed_point->i;

  008bc	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008bf	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  008c7	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  008cb	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 1960 : 	oxmin = last_transformed_point->i - active_viewport.x_min;

  008d0	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008d3	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008d7	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  008df	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 1961 : 	oymax = active_viewport.y_max - last_transformed_point->j;

  008e4	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008e7	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  008ef	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  008f4	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 1962 : 	oymin = last_transformed_point->j - active_viewport.y_min;

  008f9	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008fc	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00901	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00909	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 1963 : 
; 1964 : 	ixmax = *( ( int * ) &oxmax );

  0090e	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  00911	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1965 : 	ixmin = *( ( int * ) &oxmin );

  00914	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  00917	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1966 : 	iymax = *( ( int * ) &oymax );

  0091a	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  0091d	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1967 : 	iymin = *( ( int * ) &oymin );

  00920	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  00923	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1968 : 
; 1969 : 	*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  00926	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  00929	50		 push	 eax
  0092a	8b 4d d0	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  0092d	51		 push	 ecx
  0092e	8b 55 c4	 mov	 edx, DWORD PTR _iymin$[ebp]
  00931	52		 push	 edx
  00932	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00935	50		 push	 eax
  00936	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  0093b	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  00941	88 01		 mov	 BYTE PTR [ecx], al

; 1970 : 
; 1971 : 	//
; 1972 : 	// Reset fpu precision
; 1973 : 	//
; 1974 : 
; 1975 : 	set_fpu_precision_mode_double ();

  00943	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 1976 : 
; 1977 : 	//
; 1978 : 	// Set the cullmode ( terrain isn't culled in software )
; 1979 : 	//
; 1980 : 
; 1981 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  00948	6a 03		 push	 3
  0094a	6a 16		 push	 22			; 00000016H
  0094c	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1982 : 
; 1983 : 	//
; 1984 : 	// Set the rendering states for the terrain polygons
; 1985 : 	//
; 1986 : 
; 1987 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  00951	6a 00		 push	 0
  00953	6a 1d		 push	 29			; 0000001dH
  00955	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1988 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  0095a	6a 02		 push	 2
  0095c	6a 09		 push	 9
  0095e	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1989 : 
; 1990 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  00963	6a 01		 push	 1
  00965	6a 0c		 push	 12			; 0000000cH
  00967	6a 00		 push	 0
  00969	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1991 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  0096e	6a 01		 push	 1
  00970	6a 0d		 push	 13			; 0000000dH
  00972	6a 00		 push	 0
  00974	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1992 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  00979	6a 01		 push	 1
  0097b	6a 0e		 push	 14			; 0000000eH
  0097d	6a 00		 push	 0
  0097f	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1993 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  00984	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  00989	50		 push	 eax
  0098a	6a 10		 push	 16			; 00000010H
  0098c	6a 00		 push	 0
  0098e	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1994 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  00993	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  00998	50		 push	 eax
  00999	6a 11		 push	 17			; 00000011H
  0099b	6a 00		 push	 0
  0099d	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1995 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  009a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  009a7	50		 push	 eax
  009a8	6a 12		 push	 18			; 00000012H
  009aa	6a 00		 push	 0
  009ac	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1996 : #if ALLOW_TERRAIN_TEXTURES
; 1997 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  009b1	6a 04		 push	 4
  009b3	6a 01		 push	 1
  009b5	6a 00		 push	 0
  009b7	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1998 : #else
; 1999 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 2000 : #endif
; 2001 : 
; 2002 : 	//
; 2003 : 	// Go through the polys in sector, backface culling them, and drawing them
; 2004 : 	//
; 2005 : 
; 2006 : 	polygon = current_terrain_sector->polygons;

  009bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009c1	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  009c4	89 4d b8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 2007 : 
; 2008 : 	surface = current_terrain_sector->surface_changes;

  009c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009cc	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  009cf	89 4d b4	 mov	 DWORD PTR _surface$[ebp], ecx

; 2009 : 
; 2010 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  009d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009d7	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  009db	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  009e1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 2011 : 
; 2012 : 	current_terrain_type = surface->surface_id;

  009e7	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  009ea	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  009ed	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2013 : 
; 2014 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  009f3	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  009fa	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  009ff	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2015 : 
; 2016 : 	reset_terrain_3d_buffered_polygons ();

  00a04	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 2017 : 
; 2018 : 	reset_deferred_state_changes ();

  00a09	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2019 : 
; 2020 : 	set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00a0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00a13	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a16	51		 push	 ecx
  00a17	6a 00		 push	 0
  00a19	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture

; 2021 : 
; 2022 : 	set_terrain_3d_zbuffer_constant ( slot );

  00a1e	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00a21	50		 push	 eax
  00a22	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 2023 : 
; 2024 : 	if ( current_terrain_sector->number_of_points < 257 )

  00a27	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a2c	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00a2f	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  00a35	0f 8d 04 01 00
	00		 jge	 $LN11@draw_3d_te

; 2025 : 	{
; 2026 : 
; 2027 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  00a3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a40	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a43	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 2028 : 
; 2029 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00a49	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a4e	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00a52	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00a55	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  00a57	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00a5a	83 e8 01	 sub	 eax, 1
  00a5d	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  00a60	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00a64	0f 8e d0 00 00
	00		 jle	 $LN6@draw_3d_te

; 2030 : 		{
; 2031 : 
; 2032 : 			int
; 2033 : 				number_of_points;
; 2034 : 
; 2035 : 			if ( polygon->surface_change )

  00a6a	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00a6d	8a 08		 mov	 cl, BYTE PTR [eax]
  00a6f	c0 e9 07	 shr	 cl, 7
  00a72	80 e1 01	 and	 cl, 1
  00a75	0f b6 d1	 movzx	 edx, cl
  00a78	85 d2		 test	 edx, edx
  00a7a	74 40		 je	 SHORT $LN13@draw_3d_te

; 2036 : 			{
; 2037 : 
; 2038 : 				surface++;

  00a7c	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00a7f	83 c0 01	 add	 eax, 1
  00a82	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 2039 : 
; 2040 : 				current_terrain_type = surface->surface_id;

  00a85	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00a88	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00a8b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2041 : 
; 2042 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00a91	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00a98	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00a9d	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2043 : 
; 2044 : 				//
; 2045 : 				// Flush any buffered polygons
; 2046 : 				//
; 2047 : 
; 2048 : 				draw_terrain_3d_buffered_polygons ();

  00aa2	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2049 : 
; 2050 : 				reset_deferred_state_changes ();

  00aa7	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2051 : 
; 2052 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00aac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00ab1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ab4	51		 push	 ecx
  00ab5	6a 00		 push	 0
  00ab7	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN13@draw_3d_te:

; 2053 : 			}
; 2054 : 
; 2055 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00abc	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00abf	8a 08		 mov	 cl, BYTE PTR [eax]
  00ac1	80 e1 7f	 and	 cl, 127			; 0000007fH
  00ac4	0f b6 d1	 movzx	 edx, cl
  00ac7	89 95 20 ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 2056 : 
; 2057 : 			{
; 2058 : 
; 2059 : 				if ( outcode_3d_terrain_byte_polygon ( number_of_points, terrain_3d_sector_point_byte_references, &terrain_3d_face_outcode ) )

  00acd	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00ad2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00ad7	50		 push	 eax
  00ad8	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$2[ebp]
  00ade	51		 push	 ecx
  00adf	e8 00 00 00 00	 call	 ?outcode_3d_terrain_byte_polygon@@YGHHPAUTERRAIN_3D_POINT_BYTE_REFERENCE@@PAH@Z ; outcode_3d_terrain_byte_polygon
  00ae4	85 c0		 test	 eax, eax
  00ae6	74 34		 je	 SHORT $LN16@draw_3d_te

; 2060 : 				{
; 2061 : 
; 2062 : 					commit_deferred_state_changes ();

  00ae8	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 2063 : 
; 2064 : 					if ( terrain_3d_face_outcode )

  00aed	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00af4	74 14		 je	 SHORT $LN15@draw_3d_te

; 2065 : 					{
; 2066 : 
; 2067 : 						current_terrain_type_class->render_byte_clipped ( number_of_points );

  00af6	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00afc	50		 push	 eax
  00afd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b03	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00b06	ff d2		 call	 edx

; 2068 : 					}
; 2069 : 					else

  00b08	eb 12		 jmp	 SHORT $LN16@draw_3d_te
$LN15@draw_3d_te:

; 2070 : 					{
; 2071 : 
; 2072 : 						current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00b0a	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00b10	50		 push	 eax
  00b11	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b17	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00b1a	ff d2		 call	 edx
$LN16@draw_3d_te:

; 2073 : 					}
; 2074 : 				}
; 2075 : 
; 2076 : 				terrain_3d_sector_point_byte_references += number_of_points;

  00b1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00b21	03 85 20 ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  00b27	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 2077 : 
; 2078 : 				polygon++;

  00b2c	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b2f	83 c0 01	 add	 eax, 1
  00b32	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 2079 : 			}
; 2080 : 		}

  00b35	e9 1d ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 2081 : 	}
; 2082 : 	else

  00b3a	e9 04 01 00 00	 jmp	 $LN9@draw_3d_te
$LN11@draw_3d_te:

; 2083 : 	{
; 2084 : 
; 2085 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  00b3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b44	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00b47	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 2086 : 
; 2087 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00b4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b52	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00b56	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00b59	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  00b5b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00b5e	83 e8 01	 sub	 eax, 1
  00b61	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  00b64	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00b68	0f 8e d5 00 00
	00		 jle	 $LN9@draw_3d_te

; 2088 : 		{
; 2089 : 
; 2090 : 			int
; 2091 : 				number_of_points;
; 2092 : 
; 2093 : 
; 2094 : 			if ( polygon->surface_change )

  00b6e	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b71	8a 08		 mov	 cl, BYTE PTR [eax]
  00b73	c0 e9 07	 shr	 cl, 7
  00b76	80 e1 01	 and	 cl, 1
  00b79	0f b6 d1	 movzx	 edx, cl
  00b7c	85 d2		 test	 edx, edx
  00b7e	74 40		 je	 SHORT $LN17@draw_3d_te

; 2095 : 			{
; 2096 : 
; 2097 : 				surface++;

  00b80	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b83	83 c0 01	 add	 eax, 1
  00b86	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 2098 : 
; 2099 : 				current_terrain_type = surface->surface_id;

  00b89	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00b8c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00b8f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 2100 : 
; 2101 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00b95	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00b9c	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00ba1	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 2102 : 
; 2103 : 				//
; 2104 : 				// Flush any buffered polygons
; 2105 : 				//
; 2106 : 
; 2107 : 				draw_terrain_3d_buffered_polygons ();

  00ba6	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2108 : 
; 2109 : 				reset_deferred_state_changes ();

  00bab	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 2110 : 
; 2111 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00bb0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00bb5	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bb8	51		 push	 ecx
  00bb9	6a 00		 push	 0
  00bbb	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN17@draw_3d_te:

; 2112 : 			}
; 2113 : 
; 2114 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00bc0	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00bc3	8a 08		 mov	 cl, BYTE PTR [eax]
  00bc5	80 e1 7f	 and	 cl, 127			; 0000007fH
  00bc8	0f b6 d1	 movzx	 edx, cl
  00bcb	89 95 1c ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 2115 : 
; 2116 : 			{
; 2117 : 
; 2118 : 				if ( outcode_3d_terrain_word_polygon ( number_of_points, terrain_3d_sector_point_word_references, &terrain_3d_face_outcode ) )

  00bd1	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00bd6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00bdb	50		 push	 eax
  00bdc	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$1[ebp]
  00be2	51		 push	 ecx
  00be3	e8 00 00 00 00	 call	 ?outcode_3d_terrain_word_polygon@@YGHHPAUTERRAIN_3D_POINT_WORD_REFERENCE@@PAH@Z ; outcode_3d_terrain_word_polygon
  00be8	85 c0		 test	 eax, eax
  00bea	74 34		 je	 SHORT $LN20@draw_3d_te

; 2119 : 				{
; 2120 : 
; 2121 : 					commit_deferred_state_changes ();

  00bec	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 2122 : 
; 2123 : 					if ( terrain_3d_face_outcode )

  00bf1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00bf8	74 14		 je	 SHORT $LN19@draw_3d_te

; 2124 : 					{
; 2125 : 
; 2126 : 						current_terrain_type_class->render_word_clipped ( number_of_points );

  00bfa	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c00	50		 push	 eax
  00c01	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c07	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00c0a	ff d2		 call	 edx

; 2127 : 					}
; 2128 : 					else

  00c0c	eb 12		 jmp	 SHORT $LN20@draw_3d_te
$LN19@draw_3d_te:

; 2129 : 					{
; 2130 : 
; 2131 : 						current_terrain_type_class->render_word_unclipped ( number_of_points );

  00c0e	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c14	50		 push	 eax
  00c15	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c1b	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00c1e	ff d2		 call	 edx
$LN20@draw_3d_te:

; 2132 : 					}
; 2133 : 				}
; 2134 : 
; 2135 : 				terrain_3d_sector_point_word_references += number_of_points;

  00c20	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c26	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00c2c	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00c2f	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 2136 : 
; 2137 : 				polygon++;

  00c35	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c38	83 c0 01	 add	 eax, 1
  00c3b	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 2138 : 			}
; 2139 : 		}

  00c3e	e9 18 ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 2140 : 	}
; 2141 : 
; 2142 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00c43	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00c4b	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 2143 : 
; 2144 : 	//
; 2145 : 	// Flush any buffered polygons
; 2146 : 	//
; 2147 : 
; 2148 : 	draw_terrain_3d_buffered_polygons ();

  00c53	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 2149 : 
; 2150 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 2151 : 
; 2152 : 	//
; 2153 : 	// Render the point normals
; 2154 : 	//
; 2155 : 
; 2156 : 	suspend_d3d_fog ();
; 2157 : 
; 2158 : 	draw_3d_terrain_sector_point_normals ( slot );
; 2159 : 
; 2160 : 	reinstate_d3d_fog ();
; 2161 : 
; 2162 : #endif
; 2163 : 
; 2164 : }

  00c58	5f		 pop	 edi
  00c59	5e		 pop	 esi
  00c5a	5b		 pop	 ebx
  00c5b	8b e5		 mov	 esp, ebp
  00c5d	5d		 pop	 ebp
  00c5e	c2 04 00	 ret	 4
?draw_3d_terrain_2d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_2d_clipped_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_3d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_number_of_points$1 = -228				; size = 4
_number_of_points$2 = -224				; size = 4
_j$3 = -220						; size = 4
_i$4 = -216						; size = 4
_q$5 = -212						; size = 4
_posz$6 = -208						; size = 4
_posy$7 = -204						; size = 4
_posx$8 = -200						; size = 4
_colour_index$9 = -196					; size = 4
_ib$10 = -192						; size = 4
_ig$11 = -188						; size = 4
_ir$12 = -184						; size = 4
_b$13 = -180						; size = 4
_g$14 = -176						; size = 4
_r$15 = -172						; size = 4
_scaled_rotation$ = -168				; size = 36
_last_transformed_point_outcode$ = -132			; size = 4
_result_outcodes$ = -128				; size = 4
_tmp_outcode$ = -121					; size = 1
_result_colours$ = -120					; size = 4
_result_2d_points$ = -116				; size = 4
_last_transformed_point$ = -112				; size = 4
_tmp_vertex$ = -108					; size = 16
_result_3d_points$ = -92				; size = 4
_colour_indices$ = -88					; size = 4
_colours$ = -84						; size = 4
_normal_indices$ = -80					; size = 4
_surface$ = -76						; size = 4
_polygon$ = -72						; size = 4
_points_y$ = -68					; size = 4
_points_xz$ = -64					; size = 4
_iymin$ = -60						; size = 4
_iymax$ = -56						; size = 4
_ixmin$ = -52						; size = 4
_ixmax$ = -48						; size = 4
_oymin$ = -44						; size = 4
_oymax$ = -40						; size = 4
_oxmin$ = -36						; size = 4
_oxmax$ = -32						; size = 4
_current_sector_z_visual_offset$ = -28			; size = 4
_current_sector_y_visual_offset$ = -24			; size = 4
_current_sector_x_visual_offset$ = -20			; size = 4
_current_sector_z_offset$ = -16				; size = 4
_current_sector_x_offset$ = -12				; size = 4
_count$ = -8						; size = 4
_normal_index$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_3d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_3d_clipped_sector, COMDAT

; 1177 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1178 : 
; 1179 : 	int
; 1180 : 		normal_index,
; 1181 : 		count;
; 1182 : 
; 1183 : 	float
; 1184 : 		current_sector_x_offset,
; 1185 : 		current_sector_z_offset,
; 1186 : 		current_sector_x_visual_offset,
; 1187 : 		current_sector_y_visual_offset,
; 1188 : 		current_sector_z_visual_offset,
; 1189 : 		oxmax,
; 1190 : 		oxmin,
; 1191 : 		oymax,
; 1192 : 		oymin;
; 1193 : 
; 1194 : 	unsigned int
; 1195 : 		ixmax,
; 1196 : 		ixmin,
; 1197 : 		iymax,
; 1198 : 		iymin;
; 1199 : 
; 1200 : 	terrain_3d_point_xz
; 1201 : 		*points_xz;
; 1202 : 
; 1203 : 	terrain_3d_point_y
; 1204 : 		*points_y;
; 1205 : 
; 1206 : 	terrain_3d_face
; 1207 : 		*polygon;
; 1208 : 
; 1209 : 	terrain_3d_surface
; 1210 : 		*surface;
; 1211 : 
; 1212 : 	terrain_3d_normal_index
; 1213 : 		*normal_indices;
; 1214 : 
; 1215 : 	terrain_3d_colour
; 1216 : 		*colours;
; 1217 : 
; 1218 : 	terrain_3d_colour_index
; 1219 : 		*colour_indices;
; 1220 : 
; 1221 : 	object_transformed_3d_point
; 1222 : 		*result_3d_points;
; 1223 : 
; 1224 : 	object_transformed_2d_point
; 1225 : 		tmp_vertex,
; 1226 : 		*last_transformed_point,
; 1227 : 		*result_2d_points;
; 1228 : 
; 1229 : 	terrain_3d_transformed_point_colour
; 1230 : 		*result_colours;
; 1231 : 
; 1232 : 	unsigned char
; 1233 : 		tmp_outcode,
; 1234 : 		*result_outcodes,
; 1235 : 		*last_transformed_point_outcode;
; 1236 : 
; 1237 : 	float
; 1238 : 		scaled_rotation[3][3];
; 1239 : 
; 1240 : 	//
; 1241 : 	// Set fpu precision
; 1242 : 	//
; 1243 : 
; 1244 : 	set_fpu_precision_mode_single ();

  0000c	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_single@@YGXXZ ; set_fpu_precision_mode_single

; 1245 : 
; 1246 : 	terrain_3d_sectors_inserted++;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_inserted@@3HA ; terrain_3d_sectors_inserted
  00016	83 c0 01	 add	 eax, 1
  00019	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_inserted@@3HA, eax ; terrain_3d_sectors_inserted

; 1247 : 
; 1248 : 	current_terrain_sector = &terrain_sectors[slot->sector.z][slot->sector.x];

  0001e	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00021	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00024	8b 55 08	 mov	 edx, DWORD PTR _slot$[ebp]
  00027	6b 42 10 30	 imul	 eax, DWORD PTR [edx+16], 48
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  00031	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00034	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A, eax ; current_terrain_sector

; 1249 : 
; 1250 : //	if ( ( current_terrain_sector->approximation ) && ( slot->sector.range > TERRAIN_SECTOR_APPROXIMATION_DISTANCE ) )
; 1251 : //	{
; 1252 : //
; 1253 : //		current_terrain_sector = current_terrain_sector->approximation;
; 1254 : //	}
; 1255 : //
; 1256 : 	current_terrain_points_xz = current_terrain_sector->points_xz;

  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0003e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00041	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A, ecx ; current_terrain_points_xz

; 1257 : 
; 1258 : 	current_terrain_points_y = current_terrain_sector->points_y;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0004c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0004f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A, ecx ; current_terrain_points_y

; 1259 : 
; 1260 : 	points_xz = current_terrain_points_xz;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_xz@@3PAUTERRAIN_3D_POINT_XZ@@A ; current_terrain_points_xz
  0005a	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 1261 : 
; 1262 : 	points_y = current_terrain_points_y;

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_points_y@@3PAUTERRAIN_3D_POINT_Y@@A ; current_terrain_points_y
  00062	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 1263 : 
; 1264 : //	pretouch_integer ( ( int * ) &points_xz->x );
; 1265 : 
; 1266 : //	pretouch_integer ( ( int * ) &points_y->whole_value );
; 1267 : 
; 1268 : 	current_sector_x_offset = slot->sector.x * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00065	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00068	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006b	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  0006e	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  00074	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00078	f3 0f 11 45 f4	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 1269 : 
; 1270 : 	current_sector_z_offset = slot->sector.z * TERRAIN_3D_SECTOR_SIDE_LENGTH + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  0007d	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00080	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00083	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  00086	81 c1 00 04 00
	00		 add	 ecx, 1024		; 00000400H
  0008c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00090	f3 0f 11 45 f0	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 1271 : 
; 1272 : 	current_sector_x_visual_offset = current_sector_x_offset - visual_3d_vp->x;

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0009a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  0009f	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  000a3	f3 0f 11 45 ec	 movss	 DWORD PTR _current_sector_x_visual_offset$[ebp], xmm0

; 1273 : 
; 1274 : 	current_sector_z_visual_offset = current_sector_z_offset - visual_3d_vp->z;

  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000ad	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  000b2	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  000b7	f3 0f 11 45 e4	 movss	 DWORD PTR _current_sector_z_visual_offset$[ebp], xmm0

; 1275 : 
; 1276 : 	current_sector_y_visual_offset = terrain_3d_map_minimum_height - visual_3d_vp->y;

  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  000c1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  000c9	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  000ce	f3 0f 11 45 e8	 movss	 DWORD PTR _current_sector_y_visual_offset$[ebp], xmm0

; 1277 : 
; 1278 : 	normal_indices = current_terrain_sector->normal_changes;

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000d8	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000db	89 4d b0	 mov	 DWORD PTR _normal_indices$[ebp], ecx

; 1279 : 
; 1280 : 	colours = current_terrain_sector->point_colours;

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000e3	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000e6	89 4d ac	 mov	 DWORD PTR _colours$[ebp], ecx

; 1281 : 
; 1282 : 	colour_indices = current_terrain_sector->colour_indices;

  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  000ee	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  000f1	89 4d a8	 mov	 DWORD PTR _colour_indices$[ebp], ecx

; 1283 : 
; 1284 : 	result_3d_points = transformed_3d_3d_points;

  000f4	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _result_3d_points$[ebp], OFFSET ?transformed_3d_3d_points@@3PAUOBJECT_TRANSFORMED_3D_POINT@@A ; transformed_3d_3d_points

; 1285 : 
; 1286 : 	result_2d_points = transformed_3d_2d_points;

  000fb	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _result_2d_points$[ebp], OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points

; 1287 : 
; 1288 : 	result_outcodes = transformed_3d_point_outcodes;

  00102	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _result_outcodes$[ebp], OFFSET ?transformed_3d_point_outcodes@@3PAEA ; transformed_3d_point_outcodes

; 1289 : 
; 1290 : 	result_colours = transformed_3d_point_colours;

  00109	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _result_colours$[ebp], OFFSET ?transformed_3d_point_colours@@3PAUTERRAIN_3D_TRANSFORMED_POINT_COLOUR@@A ; transformed_3d_point_colours

; 1291 : 
; 1292 : 	last_transformed_point = &tmp_vertex;

  00110	8d 45 94	 lea	 eax, DWORD PTR _tmp_vertex$[ebp]
  00113	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 1293 : 
; 1294 : 	last_transformed_point_outcode = &tmp_outcode;

  00116	8d 45 87	 lea	 eax, DWORD PTR _tmp_outcode$[ebp]
  00119	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 1295 : 
; 1296 : 	tmp_vertex.i = 0;

  0011f	0f 57 c0	 xorps	 xmm0, xmm0
  00122	f3 0f 11 45 94	 movss	 DWORD PTR _tmp_vertex$[ebp], xmm0

; 1297 : 	tmp_vertex.j = 0;

  00127	0f 57 c0	 xorps	 xmm0, xmm0
  0012a	f3 0f 11 45 98	 movss	 DWORD PTR _tmp_vertex$[ebp+4], xmm0

; 1298 : 
; 1299 : 	//
; 1300 : 	// Initialise the first point normal index
; 1301 : 	//
; 1302 : 
; 1303 : 	normal_index = normal_indices->index;

  0012f	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  00132	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00135	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 1304 : 
; 1305 : 	//
; 1306 : 	// Now transform all the points.
; 1307 : 	//
; 1308 : 
; 1309 : 	total_number_of_terrain_points_transformed += current_terrain_sector->number_of_points;

  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0013d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00140	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?total_number_of_terrain_points_transformed@@3HA ; total_number_of_terrain_points_transformed
  00146	89 0d 00 00 00
	00		 mov	 DWORD PTR ?total_number_of_terrain_points_transformed@@3HA, ecx ; total_number_of_terrain_points_transformed

; 1310 : 
; 1311 : 	//
; 1312 : 	// Set up the scaled rotation matrix
; 1313 : 	//
; 1314 : 
; 1315 : 	scaled_rotation[0][0] = visual_3d_vp->attitude[0][0] * active_3d_environment->screen_i_scale;

  0014c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00151	6b c8 00	 imul	 ecx, eax, 0
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0015a	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0015e	b9 04 00 00 00	 mov	 ecx, 4
  00163	6b d1 00	 imul	 edx, ecx, 0
  00166	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0016c	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00171	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00175	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017a	6b c2 00	 imul	 eax, edx, 0
  0017d	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00184	ba 04 00 00 00	 mov	 edx, 4
  00189	6b c2 00	 imul	 eax, edx, 0
  0018c	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 1316 : 	scaled_rotation[0][1] = visual_3d_vp->attitude[0][1] * active_3d_environment->screen_i_scale;

  00191	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00196	6b c8 00	 imul	 ecx, eax, 0
  00199	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0019f	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001a3	b9 04 00 00 00	 mov	 ecx, 4
  001a8	c1 e1 00	 shl	 ecx, 0
  001ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001b1	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001b6	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001bf	6b c8 00	 imul	 ecx, eax, 0
  001c2	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  001c9	b8 04 00 00 00	 mov	 eax, 4
  001ce	c1 e0 00	 shl	 eax, 0
  001d1	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1317 : 	scaled_rotation[0][2] = visual_3d_vp->attitude[0][2] * active_3d_environment->screen_i_scale;

  001d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001db	6b c8 00	 imul	 ecx, eax, 0
  001de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  001e4	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  001e8	b9 04 00 00 00	 mov	 ecx, 4
  001ed	d1 e1		 shl	 ecx, 1
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  001f5	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001fa	f3 0f 59 02	 mulss	 xmm0, DWORD PTR [edx]
  001fe	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00203	6b c8 00	 imul	 ecx, eax, 0
  00206	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0020d	b8 04 00 00 00	 mov	 eax, 4
  00212	d1 e0		 shl	 eax, 1
  00214	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 1318 : 
; 1319 : 	scaled_rotation[1][0] = visual_3d_vp->attitude[1][0] * active_3d_environment->screen_j_scale;

  00219	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021e	c1 e0 00	 shl	 eax, 0
  00221	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00227	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0022b	b8 04 00 00 00	 mov	 eax, 4
  00230	6b c8 00	 imul	 ecx, eax, 0
  00233	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00238	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  0023d	f3 0f 59 40 04	 mulss	 xmm0, DWORD PTR [eax+4]
  00242	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00247	c1 e1 00	 shl	 ecx, 0
  0024a	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00251	b8 04 00 00 00	 mov	 eax, 4
  00256	6b c8 00	 imul	 ecx, eax, 0
  00259	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 1320 : 	scaled_rotation[1][1] = visual_3d_vp->attitude[1][1] * active_3d_environment->screen_j_scale;

  0025e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00263	c1 e0 00	 shl	 eax, 0
  00266	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0026c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00270	b8 04 00 00 00	 mov	 eax, 4
  00275	c1 e0 00	 shl	 eax, 0
  00278	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0027e	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00283	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00288	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0028d	c1 e2 00	 shl	 edx, 0
  00290	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  00297	b9 04 00 00 00	 mov	 ecx, 4
  0029c	c1 e1 00	 shl	 ecx, 0
  0029f	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1321 : 	scaled_rotation[1][2] = visual_3d_vp->attitude[1][2] * active_3d_environment->screen_j_scale;

  002a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002a9	c1 e0 00	 shl	 eax, 0
  002ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002b2	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002b6	b8 04 00 00 00	 mov	 eax, 4
  002bb	d1 e0		 shl	 eax, 1
  002bd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  002c3	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  002c8	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  002cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002d2	c1 e2 00	 shl	 edx, 0
  002d5	8d 84 15 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+edx]
  002dc	b9 04 00 00 00	 mov	 ecx, 4
  002e1	d1 e1		 shl	 ecx, 1
  002e3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 1322 : 
; 1323 : 	scaled_rotation[2][0] = visual_3d_vp->attitude[2][0];

  002e8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ed	d1 e0		 shl	 eax, 1
  002ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  002f5	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  002f9	b8 04 00 00 00	 mov	 eax, 4
  002fe	6b c8 00	 imul	 ecx, eax, 0
  00301	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00306	d1 e0		 shl	 eax, 1
  00308	8d 84 05 58 ff
	ff ff		 lea	 eax, DWORD PTR _scaled_rotation$[ebp+eax]
  0030f	be 04 00 00 00	 mov	 esi, 4
  00314	6b f6 00	 imul	 esi, esi, 0
  00317	8b 0c 0a	 mov	 ecx, DWORD PTR [edx+ecx]
  0031a	89 0c 30	 mov	 DWORD PTR [eax+esi], ecx

; 1324 : 	scaled_rotation[2][1] = visual_3d_vp->attitude[2][1];

  0031d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00322	d1 e0		 shl	 eax, 1
  00324	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0032a	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0032e	b8 04 00 00 00	 mov	 eax, 4
  00333	c1 e0 00	 shl	 eax, 0
  00336	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0033b	d1 e1		 shl	 ecx, 1
  0033d	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00344	be 04 00 00 00	 mov	 esi, 4
  00349	c1 e6 00	 shl	 esi, 0
  0034c	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  0034f	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 1325 : 	scaled_rotation[2][2] = visual_3d_vp->attitude[2][2];

  00352	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00357	d1 e0		 shl	 eax, 1
  00359	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0035f	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00363	b8 04 00 00 00	 mov	 eax, 4
  00368	d1 e0		 shl	 eax, 1
  0036a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0036f	d1 e1		 shl	 ecx, 1
  00371	8d 8c 0d 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00378	be 04 00 00 00	 mov	 esi, 4
  0037d	d1 e6		 shl	 esi, 1
  0037f	8b 14 02	 mov	 edx, DWORD PTR [edx+eax]
  00382	89 14 31	 mov	 DWORD PTR [ecx+esi], edx

; 1326 : 
; 1327 : 	for ( count = current_terrain_sector->number_of_points; count > 0; count-- )

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  0038a	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0038d	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00390	eb 09		 jmp	 SHORT $LN4@draw_3d_te
$LN2@draw_3d_te:
  00392	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00395	83 e8 01	 sub	 eax, 1
  00398	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@draw_3d_te:
  0039b	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  0039f	0f 8e 3a 05 00
	00		 jle	 $LN3@draw_3d_te

; 1328 : 	{
; 1329 : 
; 1330 : 
; 1331 : 		current_terrain_y_int = points_y->y;

  003a5	b8 ff 7f 00 00	 mov	 eax, 32767		; 00007fffH
  003aa	8b 4d bc	 mov	 ecx, DWORD PTR _points_y$[ebp]
  003ad	66 23 01	 and	 ax, WORD PTR [ecx]
  003b0	0f b7 d0	 movzx	 edx, ax
  003b3	89 15 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_y_int@@3HA, edx ; current_terrain_y_int

; 1332 : 
; 1333 : //		set_terrain_y_int_value ( points_y );
; 1334 : 		normal_indices += points_y->normal_change;	//get_3d_terrain_point_y_normal_change ( points_y );

  003b9	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  003bc	66 8b 08	 mov	 cx, WORD PTR [eax]
  003bf	66 c1 e9 0f	 shr	 cx, 15			; 0000000fH
  003c3	66 83 e1 01	 and	 cx, 1
  003c7	0f b7 d1	 movzx	 edx, cx
  003ca	03 55 b0	 add	 edx, DWORD PTR _normal_indices$[ebp]
  003cd	89 55 b0	 mov	 DWORD PTR _normal_indices$[ebp], edx

; 1335 : 
; 1336 : 		{
; 1337 : 
; 1338 : 			float
; 1339 : 				r,
; 1340 : 				g,
; 1341 : 				b;
; 1342 : 
; 1343 : 			int
; 1344 : 				ir,
; 1345 : 				ig,
; 1346 : 				ib,
; 1347 : 				colour_index;
; 1348 : 
; 1349 : 			colour_index = colour_indices->index;

  003d0	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  003d3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003d6	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _colour_index$9[ebp], ecx

; 1350 : 			normal_index = normal_indices->index;

  003dc	8b 45 b0	 mov	 eax, DWORD PTR _normal_indices$[ebp]
  003df	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  003e2	89 4d fc	 mov	 DWORD PTR _normal_index$[ebp], ecx

; 1351 : 
; 1352 : 			r = colours[colour_index].red * terrain_3d_transformed_point_normals[normal_index].r + FLOAT_FLOAT_FACTOR;

  003e5	6b 85 3c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  003ec	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  003ef	0f b6 14 01	 movzx	 edx, BYTE PTR [ecx+eax]
  003f3	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  003f7	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  003fa	c1 e0 04	 shl	 eax, 4
  003fd	f3 0f 59 80 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax]
  00405	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  0040d	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR _r$15[ebp], xmm0

; 1353 : 			g = colours[colour_index].green * terrain_3d_transformed_point_normals[normal_index].g + FLOAT_FLOAT_FACTOR;

  00415	6b 85 3c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  0041c	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  0041f	0f b6 54 01 01	 movzx	 edx, BYTE PTR [ecx+eax+1]
  00424	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00428	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0042b	c1 e0 04	 shl	 eax, 4
  0042e	f3 0f 59 80 04
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+4]
  00436	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  0043e	f3 0f 11 85 50
	ff ff ff	 movss	 DWORD PTR _g$14[ebp], xmm0

; 1354 : 			b = colours[colour_index].blue * terrain_3d_transformed_point_normals[normal_index].b + FLOAT_FLOAT_FACTOR;

  00446	6b 85 3c ff ff
	ff 03		 imul	 eax, DWORD PTR _colour_index$9[ebp], 3
  0044d	8b 4d ac	 mov	 ecx, DWORD PTR _colours$[ebp]
  00450	0f b6 54 01 02	 movzx	 edx, BYTE PTR [ecx+eax+2]
  00455	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00459	8b 45 fc	 mov	 eax, DWORD PTR _normal_index$[ebp]
  0045c	c1 e0 04	 shl	 eax, 4
  0045f	f3 0f 59 80 08
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A[eax+8]
  00467	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  0046f	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _b$13[ebp], xmm0

; 1355 : 
; 1356 : 			ir = ( *( int * ) &r ) - INTEGER_FLOAT_FACTOR;

  00477	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _r$15[ebp]
  0047d	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00482	89 85 48 ff ff
	ff		 mov	 DWORD PTR _ir$12[ebp], eax

; 1357 : 			ig = ( *( int * ) &g ) - INTEGER_FLOAT_FACTOR;

  00488	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR _g$14[ebp]
  0048e	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00493	89 85 44 ff ff
	ff		 mov	 DWORD PTR _ig$11[ebp], eax

; 1358 : 			ib = ( *( int * ) &b ) - INTEGER_FLOAT_FACTOR;

  00499	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _b$13[ebp]
  0049f	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  004a4	89 85 40 ff ff
	ff		 mov	 DWORD PTR _ib$10[ebp], eax

; 1359 : 
; 1360 : 			result_colours->red = ir;

  004aa	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  004ad	8a 8d 48 ff ff
	ff		 mov	 cl, BYTE PTR _ir$12[ebp]
  004b3	88 48 02	 mov	 BYTE PTR [eax+2], cl

; 1361 : 			result_colours->green = ig;

  004b6	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  004b9	8a 8d 44 ff ff
	ff		 mov	 cl, BYTE PTR _ig$11[ebp]
  004bf	88 48 01	 mov	 BYTE PTR [eax+1], cl

; 1362 : 			result_colours->blue = ib;

  004c2	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  004c5	8a 8d 40 ff ff
	ff		 mov	 cl, BYTE PTR _ib$10[ebp]
  004cb	88 08		 mov	 BYTE PTR [eax], cl

; 1363 : 			result_colours->normal_index = normal_index;

  004cd	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  004d0	8a 4d fc	 mov	 cl, BYTE PTR _normal_index$[ebp]
  004d3	88 48 05	 mov	 BYTE PTR [eax+5], cl

; 1364 : 		}
; 1365 : 
; 1366 : 		{
; 1367 : 
; 1368 : 			float
; 1369 : 				posx,
; 1370 : 				posy,
; 1371 : 				posz;
; 1372 : 
; 1373 : 			posx = ( ( ( float ) points_xz->x ) * terrain_3d_xz_scale ) + current_sector_x_visual_offset;

  004d6	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  004d9	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  004dc	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  004e0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  004e8	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _current_sector_x_visual_offset$[ebp]
  004ed	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _posx$8[ebp], xmm0

; 1374 : 			posz = ( ( ( float ) points_xz->z ) * terrain_3d_xz_scale ) + current_sector_z_visual_offset;

  004f5	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  004f8	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  004fc	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00500	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_xz_scale@@3MA
  00508	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _current_sector_z_visual_offset$[ebp]
  0050d	f3 0f 11 85 30
	ff ff ff	 movss	 DWORD PTR _posz$6[ebp], xmm0

; 1375 : 			posy =  ( ( ( float ) current_terrain_y_int ) * terrain_3d_map_scaled_height_difference ) + current_sector_y_visual_offset;

  00515	f3 0f 2a 05 00
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?current_terrain_y_int@@3HA ; current_terrain_y_int
  0051d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  00525	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _current_sector_y_visual_offset$[ebp]
  0052a	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _posy$7[ebp], xmm0

; 1376 : 
; 1377 : 			result_3d_points->x = posx * scaled_rotation[0][0] + posy * scaled_rotation[0][1] + posz * scaled_rotation[0][2];

  00532	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00537	6b c8 00	 imul	 ecx, eax, 0
  0053a	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00541	b8 04 00 00 00	 mov	 eax, 4
  00546	6b c8 00	 imul	 ecx, eax, 0
  00549	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  00551	f3 0f 59 04 0a	 mulss	 xmm0, DWORD PTR [edx+ecx]
  00556	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0055b	6b c2 00	 imul	 eax, edx, 0
  0055e	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00565	ba 04 00 00 00	 mov	 edx, 4
  0056a	c1 e2 00	 shl	 edx, 0
  0056d	f3 0f 10 8d 34
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  00575	f3 0f 59 0c 11	 mulss	 xmm1, DWORD PTR [ecx+edx]
  0057a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0057e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00583	6b c8 00	 imul	 ecx, eax, 0
  00586	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0058d	b8 04 00 00 00	 mov	 eax, 4
  00592	d1 e0		 shl	 eax, 1
  00594	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  0059c	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  005a1	f3 0f 58 c1	 addss	 xmm0, xmm1
  005a5	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  005a8	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1378 : 			result_3d_points->y = posx * scaled_rotation[1][0] + posy * scaled_rotation[1][1] + posz * scaled_rotation[1][2];

  005ac	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005b1	c1 e0 00	 shl	 eax, 0
  005b4	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  005bb	ba 04 00 00 00	 mov	 edx, 4
  005c0	6b c2 00	 imul	 eax, edx, 0
  005c3	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  005cb	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  005d0	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005d5	c1 e1 00	 shl	 ecx, 0
  005d8	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  005df	b8 04 00 00 00	 mov	 eax, 4
  005e4	c1 e0 00	 shl	 eax, 0
  005e7	f3 0f 10 8d 34
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  005ef	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  005f4	f3 0f 58 c1	 addss	 xmm0, xmm1
  005f8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005fd	c1 e1 00	 shl	 ecx, 0
  00600	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00607	b8 04 00 00 00	 mov	 eax, 4
  0060c	d1 e0		 shl	 eax, 1
  0060e	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  00616	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0061b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0061f	8b 4d a4	 mov	 ecx, DWORD PTR _result_3d_points$[ebp]
  00622	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1379 : 			result_2d_points->z = posx * scaled_rotation[2][0] + posy * scaled_rotation[2][1] + posz * scaled_rotation[2][2];

  00627	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0062c	d1 e0		 shl	 eax, 1
  0062e	8d 8c 05 58 ff
	ff ff		 lea	 ecx, DWORD PTR _scaled_rotation$[ebp+eax]
  00635	ba 04 00 00 00	 mov	 edx, 4
  0063a	6b c2 00	 imul	 eax, edx, 0
  0063d	f3 0f 10 85 38
	ff ff ff	 movss	 xmm0, DWORD PTR _posx$8[ebp]
  00645	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0064a	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0064f	d1 e1		 shl	 ecx, 1
  00651	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  00658	b8 04 00 00 00	 mov	 eax, 4
  0065d	c1 e0 00	 shl	 eax, 0
  00660	f3 0f 10 8d 34
	ff ff ff	 movss	 xmm1, DWORD PTR _posy$7[ebp]
  00668	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  0066d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00671	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00676	d1 e1		 shl	 ecx, 1
  00678	8d 94 0d 58 ff
	ff ff		 lea	 edx, DWORD PTR _scaled_rotation$[ebp+ecx]
  0067f	b8 04 00 00 00	 mov	 eax, 4
  00684	d1 e0		 shl	 eax, 1
  00686	f3 0f 10 8d 30
	ff ff ff	 movss	 xmm1, DWORD PTR _posz$6[ebp]
  0068e	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  00693	f3 0f 58 c1	 addss	 xmm0, xmm1
  00697	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  0069a	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 1380 : 		}
; 1381 : 
; 1382 : 		if ( *( ( int * ) &result_2d_points->z ) >= *( ( int * ) &clip_hither ) )

  0069f	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006a2	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  006a5	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?clip_hither@@3MA
  006ab	0f 8c d6 01 00
	00		 jl	 $LN11@draw_3d_te

; 1383 : 		{
; 1384 : 
; 1385 : 			if ( result_2d_points->z <= clip_yonder )

  006b1	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?clip_yonder@@3MA
  006bc	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  006c0	0f 82 ab 01 00
	00		 jb	 $LN13@draw_3d_te

; 1386 : 			{
; 1387 : 
; 1388 : 				float
; 1389 : 					q,
; 1390 : 					i,
; 1391 : 					j;
; 1392 : 
; 1393 : 				result_colours->fog = get_int_fog_distance_value ( result_2d_points->z );

  006c6	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006c9	51		 push	 ecx
  006ca	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006d4	e8 00 00 00 00	 call	 ?get_int_fog_distance_value@@YGHM@Z ; get_int_fog_distance_value
  006d9	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  006dc	88 41 04	 mov	 BYTE PTR [ecx+4], al

; 1394 : 				result_colours->alpha = get_terrain_3d_alpha ( result_2d_points->z );

  006df	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  006e2	51		 push	 ecx
  006e3	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  006e8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006ed	e8 00 00 00 00	 call	 ?get_terrain_3d_alpha@@YGHM@Z ; get_terrain_3d_alpha
  006f2	8b 4d 88	 mov	 ecx, DWORD PTR _result_colours$[ebp]
  006f5	88 41 03	 mov	 BYTE PTR [ecx+3], al

; 1395 : 
; 1396 : 				oxmax = active_viewport.x_max - last_transformed_point->i;

  006f8	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  006fb	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  00703	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00707	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 1397 : 				oxmin = last_transformed_point->i - active_viewport.x_min;

  0070c	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0070f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00713	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  0071b	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 1398 : 				oymax = active_viewport.y_max - last_transformed_point->j;

  00720	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00723	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0072b	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00730	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 1399 : 				oymin = last_transformed_point->j - active_viewport.y_min;

  00735	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  00738	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0073d	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00745	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 1400 : 
; 1401 : 				ixmax = *( ( unsigned int * ) &oxmax );

  0074a	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  0074d	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1402 : 				ixmin = *( ( unsigned int * ) &oxmin );

  00750	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  00753	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1403 : 				iymax = *( ( unsigned int * ) &oymax );

  00756	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  00759	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1404 : 				iymin = *( ( unsigned int * ) &oymin );

  0075c	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  0075f	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1405 : 
; 1406 : #ifdef __WATCOMC__
; 1407 : 
; 1408 : 				start_float_divide ( result_2d_points->z, 1.0 );
; 1409 : 
; 1410 : 				*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );
; 1411 : 
; 1412 : 				q = end_float_divide ();
; 1413 : 
; 1414 : #else
; 1415 : 
; 1416 : 				q = 1.0 / result_2d_points->z;

  00762	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00765	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0076a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00772	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00776	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0077a	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _q$5[ebp], xmm0

; 1417 : 
; 1418 : 				ixmin >>= 31;

  00782	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00785	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00788	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1419 : 				iymin &= 0x80000000;

  0078b	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  0078e	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  00793	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1420 : 				ixmax >>= 29;

  00796	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  00799	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  0079c	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1421 : 				iymax &= 0x80000000;

  0079f	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  007a2	25 00 00 00 80	 and	 eax, -2147483648	; 80000000H
  007a7	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1422 : 				iymin >>= 30;

  007aa	8b 45 c4	 mov	 eax, DWORD PTR _iymin$[ebp]
  007ad	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  007b0	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1423 : 				ixmin &= 0x00000001;

  007b3	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007b6	83 e0 01	 and	 eax, 1
  007b9	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1424 : 				iymax >>= 28;

  007bc	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  007bf	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  007c2	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1425 : 				ixmax &= 0x00000004;

  007c5	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  007c8	83 e0 04	 and	 eax, 4
  007cb	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1426 : 				ixmin |= iymin;

  007ce	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007d1	0b 45 c4	 or	 eax, DWORD PTR _iymin$[ebp]
  007d4	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1427 : 				ixmax |= iymax;

  007d7	8b 45 d0	 mov	 eax, DWORD PTR _ixmax$[ebp]
  007da	0b 45 c8	 or	 eax, DWORD PTR _iymax$[ebp]
  007dd	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1428 : 				*last_transformed_point_outcode = ( ixmin | ixmax );

  007e0	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  007e3	0b 45 d0	 or	 eax, DWORD PTR _ixmax$[ebp]
  007e6	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  007ec	88 01		 mov	 BYTE PTR [ecx], al

; 1429 : 
; 1430 : #endif
; 1431 : 
; 1432 : 				last_transformed_point = result_2d_points;

  007ee	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  007f1	89 45 90	 mov	 DWORD PTR _last_transformed_point$[ebp], eax

; 1433 : 
; 1434 : 				last_transformed_point_outcode = result_outcodes;

  007f4	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  007f7	89 85 7c ff ff
	ff		 mov	 DWORD PTR _last_transformed_point_outcode$[ebp], eax

; 1435 : 
; 1436 : 				i = ( result_3d_points->x * q );

  007fd	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00800	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00804	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  0080c	f3 0f 11 85 28
	ff ff ff	 movss	 DWORD PTR _i$4[ebp], xmm0

; 1437 : 				j = ( result_3d_points->y * q );

  00814	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  00817	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0081c	f3 0f 59 85 2c
	ff ff ff	 mulss	 xmm0, DWORD PTR _q$5[ebp]
  00824	f3 0f 11 85 24
	ff ff ff	 movss	 DWORD PTR _j$3[ebp], xmm0

; 1438 : 
; 1439 : 				result_2d_points->j = ( active_3d_environment->y_origin - j );

  0082c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00831	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00836	f3 0f 5c 85 24
	ff ff ff	 subss	 xmm0, DWORD PTR _j$3[ebp]
  0083e	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  00841	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1440 : 				result_2d_points->i = ( active_3d_environment->x_origin + i );

  00846	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0084b	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00850	f3 0f 58 85 28
	ff ff ff	 addss	 xmm0, DWORD PTR _i$4[ebp]
  00858	8b 4d 8c	 mov	 ecx, DWORD PTR _result_2d_points$[ebp]
  0085b	f3 0f 11 01	 movss	 DWORD PTR [ecx], xmm0

; 1441 : 				result_2d_points->q = q;

  0085f	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  00862	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR _q$5[ebp]
  0086a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1442 : 			}
; 1443 : 			else

  0086f	eb 14		 jmp	 SHORT $LN14@draw_3d_te
$LN13@draw_3d_te:

; 1444 : 			{
; 1445 : 
; 1446 : 				result_colours->fog = 0;

  00871	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00874	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0

; 1447 : 				result_colours->alpha = 0;

  00878	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0087b	c6 40 03 00	 mov	 BYTE PTR [eax+3], 0

; 1448 : 
; 1449 : 				*result_outcodes = CLIP_YONDER;

  0087f	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  00882	c6 00 10	 mov	 BYTE PTR [eax], 16	; 00000010H
$LN14@draw_3d_te:

; 1450 : 			}
; 1451 : 		}
; 1452 : 		else

  00885	eb 14		 jmp	 SHORT $LN12@draw_3d_te
$LN11@draw_3d_te:

; 1453 : 		{
; 1454 : 
; 1455 : 			result_colours->fog = 255;

  00887	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  0088a	c6 40 04 ff	 mov	 BYTE PTR [eax+4], 255	; 000000ffH

; 1456 : 			result_colours->alpha = 255;

  0088e	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  00891	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 1457 : 
; 1458 : 			*result_outcodes = CLIP_HITHER;

  00895	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  00898	c6 00 20	 mov	 BYTE PTR [eax], 32	; 00000020H
$LN12@draw_3d_te:

; 1459 : 		}
; 1460 : 
; 1461 : 		result_3d_points++;

  0089b	8b 45 a4	 mov	 eax, DWORD PTR _result_3d_points$[ebp]
  0089e	83 c0 08	 add	 eax, 8
  008a1	89 45 a4	 mov	 DWORD PTR _result_3d_points$[ebp], eax

; 1462 : 		result_2d_points++;

  008a4	8b 45 8c	 mov	 eax, DWORD PTR _result_2d_points$[ebp]
  008a7	83 c0 10	 add	 eax, 16			; 00000010H
  008aa	89 45 8c	 mov	 DWORD PTR _result_2d_points$[ebp], eax

; 1463 : 		result_outcodes++;

  008ad	8b 45 80	 mov	 eax, DWORD PTR _result_outcodes$[ebp]
  008b0	83 c0 01	 add	 eax, 1
  008b3	89 45 80	 mov	 DWORD PTR _result_outcodes$[ebp], eax

; 1464 : 		result_colours++;

  008b6	8b 45 88	 mov	 eax, DWORD PTR _result_colours$[ebp]
  008b9	83 c0 08	 add	 eax, 8
  008bc	89 45 88	 mov	 DWORD PTR _result_colours$[ebp], eax

; 1465 : 
; 1466 : 		points_xz++;

  008bf	8b 45 c0	 mov	 eax, DWORD PTR _points_xz$[ebp]
  008c2	83 c0 04	 add	 eax, 4
  008c5	89 45 c0	 mov	 DWORD PTR _points_xz$[ebp], eax

; 1467 : 		points_y++;

  008c8	8b 45 bc	 mov	 eax, DWORD PTR _points_y$[ebp]
  008cb	83 c0 02	 add	 eax, 2
  008ce	89 45 bc	 mov	 DWORD PTR _points_y$[ebp], eax

; 1468 : 		colour_indices++;

  008d1	8b 45 a8	 mov	 eax, DWORD PTR _colour_indices$[ebp]
  008d4	83 c0 01	 add	 eax, 1
  008d7	89 45 a8	 mov	 DWORD PTR _colour_indices$[ebp], eax

; 1469 : 	}

  008da	e9 b3 fa ff ff	 jmp	 $LN2@draw_3d_te
$LN3@draw_3d_te:

; 1470 : 
; 1471 : 	oxmax = active_viewport.x_max - last_transformed_point->i;

  008df	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008e2	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  008ea	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  008ee	f3 0f 11 45 e0	 movss	 DWORD PTR _oxmax$[ebp], xmm0

; 1472 : 	oxmin = last_transformed_point->i - active_viewport.x_min;

  008f3	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  008f6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008fa	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00902	f3 0f 11 45 dc	 movss	 DWORD PTR _oxmin$[ebp], xmm0

; 1473 : 	oymax = active_viewport.y_max - last_transformed_point->j;

  00907	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0090a	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  00912	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00917	f3 0f 11 45 d8	 movss	 DWORD PTR _oymax$[ebp], xmm0

; 1474 : 	oymin = last_transformed_point->j - active_viewport.y_min;

  0091c	8b 45 90	 mov	 eax, DWORD PTR _last_transformed_point$[ebp]
  0091f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00924	f3 0f 5c 05 04
	00 00 00	 subss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  0092c	f3 0f 11 45 d4	 movss	 DWORD PTR _oymin$[ebp], xmm0

; 1475 : 
; 1476 : 	ixmax = *( ( int * ) &oxmax );

  00931	8b 45 e0	 mov	 eax, DWORD PTR _oxmax$[ebp]
  00934	89 45 d0	 mov	 DWORD PTR _ixmax$[ebp], eax

; 1477 : 	ixmin = *( ( int * ) &oxmin );

  00937	8b 45 dc	 mov	 eax, DWORD PTR _oxmin$[ebp]
  0093a	89 45 cc	 mov	 DWORD PTR _ixmin$[ebp], eax

; 1478 : 	iymax = *( ( int * ) &oymax );

  0093d	8b 45 d8	 mov	 eax, DWORD PTR _oymax$[ebp]
  00940	89 45 c8	 mov	 DWORD PTR _iymax$[ebp], eax

; 1479 : 	iymin = *( ( int * ) &oymin );

  00943	8b 45 d4	 mov	 eax, DWORD PTR _oymin$[ebp]
  00946	89 45 c4	 mov	 DWORD PTR _iymin$[ebp], eax

; 1480 : 
; 1481 : 	*last_transformed_point_outcode = generate_lookup_outcode ( ixmin, iymin, ixmax, iymax );

  00949	8b 45 c8	 mov	 eax, DWORD PTR _iymax$[ebp]
  0094c	50		 push	 eax
  0094d	8b 4d d0	 mov	 ecx, DWORD PTR _ixmax$[ebp]
  00950	51		 push	 ecx
  00951	8b 55 c4	 mov	 edx, DWORD PTR _iymin$[ebp]
  00954	52		 push	 edx
  00955	8b 45 cc	 mov	 eax, DWORD PTR _ixmin$[ebp]
  00958	50		 push	 eax
  00959	e8 00 00 00 00	 call	 ?generate_lookup_outcode@@YGHHHHH@Z ; generate_lookup_outcode
  0095e	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _last_transformed_point_outcode$[ebp]
  00964	88 01		 mov	 BYTE PTR [ecx], al

; 1482 : 
; 1483 : 	//
; 1484 : 	// Reset fpu precision
; 1485 : 	//
; 1486 : 
; 1487 : 	set_fpu_precision_mode_double ();

  00966	e8 00 00 00 00	 call	 ?set_fpu_precision_mode_double@@YGXXZ ; set_fpu_precision_mode_double

; 1488 : 
; 1489 : 	//
; 1490 : 	// Set the cullmode ( terrain isn't culled in software )
; 1491 : 	//
; 1492 : 
; 1493 : 	set_d3d_int_state ( D3DRENDERSTATE_CULLMODE, D3DCULL_CCW );

  0096b	6a 03		 push	 3
  0096d	6a 16		 push	 22			; 00000016H
  0096f	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1494 : 
; 1495 : 	//
; 1496 : 	// Set the rendering states for the terrain polygons
; 1497 : 	//
; 1498 : 
; 1499 : 	set_d3d_int_state ( D3DRENDERSTATE_SPECULARENABLE, FALSE );

  00974	6a 00		 push	 0
  00976	6a 1d		 push	 29			; 0000001dH
  00978	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1500 : 	set_d3d_int_state ( D3DRENDERSTATE_SHADEMODE, D3DSHADE_GOURAUD );

  0097d	6a 02		 push	 2
  0097f	6a 09		 push	 9
  00981	e8 00 00 00 00	 call	 ?set_d3d_int_state@@YGXW4_D3DRENDERSTATETYPE@@K@Z ; set_d3d_int_state

; 1501 : 
; 1502 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESS, D3DTADDRESS_WRAP );

  00986	6a 01		 push	 1
  00988	6a 0c		 push	 12			; 0000000cH
  0098a	6a 00		 push	 0
  0098c	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1503 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSU, D3DTADDRESS_WRAP );

  00991	6a 01		 push	 1
  00993	6a 0d		 push	 13			; 0000000dH
  00995	6a 00		 push	 0
  00997	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1504 : 	set_d3d_texture_stage_state ( 0, D3DTSS_ADDRESSV, D3DTADDRESS_WRAP );

  0099c	6a 01		 push	 1
  0099e	6a 0e		 push	 14			; 0000000eH
  009a0	6a 00		 push	 0
  009a2	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1505 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MAGFILTER, terrain_texture_mag_filter );

  009a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mag_filter@@3HA ; terrain_texture_mag_filter
  009ac	50		 push	 eax
  009ad	6a 10		 push	 16			; 00000010H
  009af	6a 00		 push	 0
  009b1	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1506 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MINFILTER, terrain_texture_min_filter );

  009b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_min_filter@@3HA ; terrain_texture_min_filter
  009bb	50		 push	 eax
  009bc	6a 11		 push	 17			; 00000011H
  009be	6a 00		 push	 0
  009c0	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1507 : 	set_d3d_texture_stage_state ( 0, D3DTSS_MIPFILTER, terrain_texture_mip_filter );

  009c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_texture_mip_filter@@3HA ; terrain_texture_mip_filter
  009ca	50		 push	 eax
  009cb	6a 12		 push	 18			; 00000012H
  009cd	6a 00		 push	 0
  009cf	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1508 : 
; 1509 : #if ALLOW_TERRAIN_TEXTURES
; 1510 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_MODULATE );

  009d4	6a 04		 push	 4
  009d6	6a 01		 push	 1
  009d8	6a 00		 push	 0
  009da	e8 00 00 00 00	 call	 ?set_d3d_texture_stage_state@@YGXHHH@Z ; set_d3d_texture_stage_state

; 1511 : #else
; 1512 : 	set_d3d_texture_stage_state ( 0, D3DTSS_COLOROP, D3DTOP_DISABLE );
; 1513 : #endif
; 1514 : 
; 1515 : 	//
; 1516 : 	// Go through the polys in sector, and drawing them
; 1517 : 	//
; 1518 : 
; 1519 : 	polygon = current_terrain_sector->polygons;

  009df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009e4	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  009e7	89 4d b8	 mov	 DWORD PTR _polygon$[ebp], ecx

; 1520 : 
; 1521 : 	surface = current_terrain_sector->surface_changes;

  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009ef	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  009f2	89 4d b4	 mov	 DWORD PTR _surface$[ebp], ecx

; 1522 : 
; 1523 : 	terrain_3d_faces_considered += current_terrain_sector->number_of_polygons;

  009f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  009fa	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  009fe	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?terrain_3d_faces_considered@@3HA ; terrain_3d_faces_considered
  00a04	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_faces_considered@@3HA, ecx ; terrain_3d_faces_considered

; 1524 : 
; 1525 : 	current_terrain_type = surface->surface_id;

  00a0a	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00a0d	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00a10	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 1526 : 
; 1527 : 	current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00a16	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00a1d	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00a22	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 1528 : 
; 1529 : 	reset_terrain_3d_buffered_polygons ();

  00a27	e8 00 00 00 00	 call	 ?reset_terrain_3d_buffered_polygons@@YGXXZ ; reset_terrain_3d_buffered_polygons

; 1530 : 
; 1531 : 	reset_deferred_state_changes ();

  00a2c	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 1532 : 
; 1533 : 	set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00a31	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00a36	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00a39	51		 push	 ecx
  00a3a	6a 00		 push	 0
  00a3c	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture

; 1534 : 
; 1535 : 	//
; 1536 : 	// Set the zdistance bias level
; 1537 : 	//
; 1538 : 
; 1539 : 	set_terrain_3d_zbuffer_constant ( slot );

  00a41	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00a44	50		 push	 eax
  00a45	e8 00 00 00 00	 call	 ?set_terrain_3d_zbuffer_constant@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; set_terrain_3d_zbuffer_constant

; 1540 : 
; 1541 : 	if ( current_terrain_sector->number_of_points < 257 )

  00a4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a4f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00a52	81 f9 01 01 00
	00		 cmp	 ecx, 257		; 00000101H
  00a58	0f 8d 04 01 00
	00		 jge	 $LN15@draw_3d_te

; 1542 : 	{
; 1543 : 
; 1544 : 		terrain_3d_sector_point_byte_references = current_terrain_sector->point_byte_references;

  00a5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a63	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a66	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, ecx ; terrain_3d_sector_point_byte_references

; 1545 : 
; 1546 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00a6c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00a71	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00a75	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00a78	eb 09		 jmp	 SHORT $LN7@draw_3d_te
$LN5@draw_3d_te:
  00a7a	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00a7d	83 e8 01	 sub	 eax, 1
  00a80	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN7@draw_3d_te:
  00a83	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00a87	0f 8e d0 00 00
	00		 jle	 $LN6@draw_3d_te

; 1547 : 		{
; 1548 : 
; 1549 : 			int
; 1550 : 				number_of_points;
; 1551 : 
; 1552 : 			if ( polygon->surface_change )

  00a8d	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00a90	8a 08		 mov	 cl, BYTE PTR [eax]
  00a92	c0 e9 07	 shr	 cl, 7
  00a95	80 e1 01	 and	 cl, 1
  00a98	0f b6 d1	 movzx	 edx, cl
  00a9b	85 d2		 test	 edx, edx
  00a9d	74 40		 je	 SHORT $LN17@draw_3d_te

; 1553 : 			{
; 1554 : 
; 1555 : 				surface++;

  00a9f	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00aa2	83 c0 01	 add	 eax, 1
  00aa5	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 1556 : 
; 1557 : 				current_terrain_type = surface->surface_id;

  00aa8	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00aab	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00aae	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 1558 : 
; 1559 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00ab4	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00abb	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00ac0	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 1560 : 
; 1561 : 				//
; 1562 : 				// Flush any buffered polygons
; 1563 : 				//
; 1564 : 
; 1565 : 				draw_terrain_3d_buffered_polygons ();

  00ac5	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 1566 : 
; 1567 : 				reset_deferred_state_changes ();

  00aca	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 1568 : 
; 1569 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00acf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00ad4	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00ad7	51		 push	 ecx
  00ad8	6a 00		 push	 0
  00ada	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN17@draw_3d_te:

; 1570 : 			}
; 1571 : 
; 1572 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00adf	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00ae2	8a 08		 mov	 cl, BYTE PTR [eax]
  00ae4	80 e1 7f	 and	 cl, 127			; 0000007fH
  00ae7	0f b6 d1	 movzx	 edx, cl
  00aea	89 95 20 ff ff
	ff		 mov	 DWORD PTR _number_of_points$2[ebp], edx

; 1573 : 
; 1574 : 			{
; 1575 : 
; 1576 : 				if ( outcode_3d_terrain_byte_polygon ( number_of_points, terrain_3d_sector_point_byte_references, &terrain_3d_face_outcode ) )

  00af0	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00af5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00afa	50		 push	 eax
  00afb	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$2[ebp]
  00b01	51		 push	 ecx
  00b02	e8 00 00 00 00	 call	 ?outcode_3d_terrain_byte_polygon@@YGHHPAUTERRAIN_3D_POINT_BYTE_REFERENCE@@PAH@Z ; outcode_3d_terrain_byte_polygon
  00b07	85 c0		 test	 eax, eax
  00b09	74 34		 je	 SHORT $LN20@draw_3d_te

; 1577 : 				{
; 1578 : 
; 1579 : 					commit_deferred_state_changes ();

  00b0b	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1580 : 
; 1581 : 					if ( terrain_3d_face_outcode )

  00b10	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00b17	74 14		 je	 SHORT $LN19@draw_3d_te

; 1582 : 					{
; 1583 : 
; 1584 : 						current_terrain_type_class->render_byte_clipped ( number_of_points );

  00b19	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00b1f	50		 push	 eax
  00b20	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b26	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00b29	ff d2		 call	 edx

; 1585 : 					}
; 1586 : 					else

  00b2b	eb 12		 jmp	 SHORT $LN20@draw_3d_te
$LN19@draw_3d_te:

; 1587 : 					{
; 1588 : 
; 1589 : 						current_terrain_type_class->render_byte_unclipped ( number_of_points );

  00b2d	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$2[ebp]
  00b33	50		 push	 eax
  00b34	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00b3a	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00b3d	ff d2		 call	 edx
$LN20@draw_3d_te:

; 1590 : 					}
; 1591 : 				}
; 1592 : 
; 1593 : 				terrain_3d_sector_point_byte_references += number_of_points;

  00b3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A ; terrain_3d_sector_point_byte_references
  00b44	03 85 20 ff ff
	ff		 add	 eax, DWORD PTR _number_of_points$2[ebp]
  00b4a	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_point_byte_references@@3PAUTERRAIN_3D_POINT_BYTE_REFERENCE@@A, eax ; terrain_3d_sector_point_byte_references

; 1594 : 
; 1595 : 				polygon++;

  00b4f	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b52	83 c0 01	 add	 eax, 1
  00b55	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 1596 : 			}
; 1597 : 		}

  00b58	e9 1d ff ff ff	 jmp	 $LN5@draw_3d_te
$LN6@draw_3d_te:

; 1598 : 	}
; 1599 : 	else

  00b5d	e9 04 01 00 00	 jmp	 $LN9@draw_3d_te
$LN15@draw_3d_te:

; 1600 : 	{
; 1601 : 
; 1602 : 		terrain_3d_sector_point_word_references = current_terrain_sector->point_word_references;

  00b62	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b67	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00b6a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, ecx ; terrain_3d_sector_point_word_references

; 1603 : 
; 1604 : 		for ( count = current_terrain_sector->number_of_polygons; count > 0; count-- )

  00b70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_sector@@3PAUTERRAIN_3D_SECTOR@@A ; current_terrain_sector
  00b75	0f b7 48 02	 movzx	 ecx, WORD PTR [eax+2]
  00b79	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  00b7c	eb 09		 jmp	 SHORT $LN10@draw_3d_te
$LN8@draw_3d_te:
  00b7e	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00b81	83 e8 01	 sub	 eax, 1
  00b84	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN10@draw_3d_te:
  00b87	83 7d f8 00	 cmp	 DWORD PTR _count$[ebp], 0
  00b8b	0f 8e d5 00 00
	00		 jle	 $LN9@draw_3d_te

; 1605 : 		{
; 1606 : 
; 1607 : 			int
; 1608 : 				number_of_points;
; 1609 : 
; 1610 : 			if ( polygon->surface_change )

  00b91	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00b94	8a 08		 mov	 cl, BYTE PTR [eax]
  00b96	c0 e9 07	 shr	 cl, 7
  00b99	80 e1 01	 and	 cl, 1
  00b9c	0f b6 d1	 movzx	 edx, cl
  00b9f	85 d2		 test	 edx, edx
  00ba1	74 40		 je	 SHORT $LN21@draw_3d_te

; 1611 : 			{
; 1612 : 
; 1613 :   			surface++;

  00ba3	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00ba6	83 c0 01	 add	 eax, 1
  00ba9	89 45 b4	 mov	 DWORD PTR _surface$[ebp], eax

; 1614 : 
; 1615 : 				current_terrain_type = surface->surface_id;

  00bac	8b 45 b4	 mov	 eax, DWORD PTR _surface$[ebp]
  00baf	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00bb2	89 0d 00 00 00
	00		 mov	 DWORD PTR ?current_terrain_type@@3HA, ecx ; current_terrain_type

; 1616 : 
; 1617 : 				current_terrain_type_class = &terrain_type_information[current_terrain_type];

  00bb8	6b 05 00 00 00
	00 38		 imul	 eax, DWORD PTR ?current_terrain_type@@3HA, 56 ; current_terrain_type
  00bbf	05 00 00 00 00	 add	 eax, OFFSET ?terrain_type_information@@3PAUTERRAIN_TYPE_INFO@@A ; terrain_type_information
  00bc4	a3 00 00 00 00	 mov	 DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A, eax ; current_terrain_type_class

; 1618 : 
; 1619 : 				//
; 1620 : 				// Flush any buffered polygons
; 1621 : 				//
; 1622 : 
; 1623 : 				draw_terrain_3d_buffered_polygons ();

  00bc9	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 1624 : 
; 1625 : 				reset_deferred_state_changes ();

  00bce	e8 00 00 00 00	 call	 ?reset_deferred_state_changes@@YGXXZ ; reset_deferred_state_changes

; 1626 : 
; 1627 : 				set_deferred_d3d_texture ( 0, current_terrain_type_class->texture );

  00bd3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00bd8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00bdb	51		 push	 ecx
  00bdc	6a 00		 push	 0
  00bde	e8 00 00 00 00	 call	 ?set_deferred_d3d_texture@@YGXHPAUSCREEN@@@Z ; set_deferred_d3d_texture
$LN21@draw_3d_te:

; 1628 : 			}
; 1629 : 
; 1630 : 			number_of_points = polygon->number_of_points;	//get_3d_terrain_face_number_of_points ( polygon );

  00be3	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00be6	8a 08		 mov	 cl, BYTE PTR [eax]
  00be8	80 e1 7f	 and	 cl, 127			; 0000007fH
  00beb	0f b6 d1	 movzx	 edx, cl
  00bee	89 95 1c ff ff
	ff		 mov	 DWORD PTR _number_of_points$1[ebp], edx

; 1631 : 
; 1632 : 			{
; 1633 : 
; 1634 : 				if ( outcode_3d_terrain_word_polygon ( number_of_points, terrain_3d_sector_point_word_references, &terrain_3d_face_outcode ) )

  00bf4	68 00 00 00 00	 push	 OFFSET ?terrain_3d_face_outcode@@3HA ; terrain_3d_face_outcode
  00bf9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00bfe	50		 push	 eax
  00bff	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _number_of_points$1[ebp]
  00c05	51		 push	 ecx
  00c06	e8 00 00 00 00	 call	 ?outcode_3d_terrain_word_polygon@@YGHHPAUTERRAIN_3D_POINT_WORD_REFERENCE@@PAH@Z ; outcode_3d_terrain_word_polygon
  00c0b	85 c0		 test	 eax, eax
  00c0d	74 34		 je	 SHORT $LN24@draw_3d_te

; 1635 : 				{
; 1636 : 
; 1637 : 					commit_deferred_state_changes ();

  00c0f	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1638 : 
; 1639 : 					if ( terrain_3d_face_outcode )

  00c14	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_face_outcode@@3HA, 0 ; terrain_3d_face_outcode
  00c1b	74 14		 je	 SHORT $LN23@draw_3d_te

; 1640 : 					{
; 1641 : 
; 1642 : 						current_terrain_type_class->render_word_clipped ( number_of_points );

  00c1d	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c23	50		 push	 eax
  00c24	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c2a	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00c2d	ff d2		 call	 edx

; 1643 : 					}
; 1644 : 					else

  00c2f	eb 12		 jmp	 SHORT $LN24@draw_3d_te
$LN23@draw_3d_te:

; 1645 : 					{
; 1646 : 
; 1647 : 						current_terrain_type_class->render_word_unclipped ( number_of_points );

  00c31	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c37	50		 push	 eax
  00c38	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_terrain_type_class@@3PAUTERRAIN_TYPE_INFO@@A ; current_terrain_type_class
  00c3e	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00c41	ff d2		 call	 edx
$LN24@draw_3d_te:

; 1648 : 					}
; 1649 : 				}
; 1650 : 
; 1651 : 				terrain_3d_sector_point_word_references += number_of_points;

  00c43	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _number_of_points$1[ebp]
  00c49	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A ; terrain_3d_sector_point_word_references
  00c4f	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00c52	89 15 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_sector_point_word_references@@3PAUTERRAIN_3D_POINT_WORD_REFERENCE@@A, edx ; terrain_3d_sector_point_word_references

; 1652 : 
; 1653 : 				polygon++;

  00c58	8b 45 b8	 mov	 eax, DWORD PTR _polygon$[ebp]
  00c5b	83 c0 01	 add	 eax, 1
  00c5e	89 45 b8	 mov	 DWORD PTR _polygon$[ebp], eax

; 1654 : 			}
; 1655 : 		}

  00c61	e9 18 ff ff ff	 jmp	 $LN8@draw_3d_te
$LN9@draw_3d_te:

; 1656 : 	}
; 1657 : 
; 1658 : 	zbuffer_constant = zbuffer_constant_normal_bias;

  00c66	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR ?zbuffer_constant_normal_bias@@3NA
  00c6e	f2 0f 11 05 00
	00 00 00	 movsd	 QWORD PTR ?zbuffer_constant@@3NA, xmm0

; 1659 : 
; 1660 : 	//
; 1661 : 	// Flush any buffered polygons
; 1662 : 	//
; 1663 : 
; 1664 : 	draw_terrain_3d_buffered_polygons ();

  00c76	e8 00 00 00 00	 call	 ?draw_terrain_3d_buffered_polygons@@YGXXZ ; draw_terrain_3d_buffered_polygons

; 1665 : 
; 1666 : #ifdef RENDER_TERRAIN_POINT_NORMALS
; 1667 : 
; 1668 : 	//
; 1669 : 	// Render the point normals
; 1670 : 	//
; 1671 : 
; 1672 : 	suspend_d3d_fog ();
; 1673 : 
; 1674 : 	draw_3d_terrain_sector_point_normals ( slot );
; 1675 : 
; 1676 : 	reinstate_d3d_fog ();
; 1677 : 
; 1678 : #endif
; 1679 : }

  00c7b	5f		 pop	 edi
  00c7c	5e		 pop	 esi
  00c7d	5b		 pop	 ebx
  00c7e	8b e5		 mov	 esp, ebp
  00c80	5d		 pop	 ebp
  00c81	c2 04 00	 ret	 4
?draw_3d_terrain_3d_clipped_sector@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_3d_clipped_sector
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_cloud_puff_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_visibility$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_cloud_puff_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_cloud_puff_object, COMDAT

; 1136 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1137 : 
; 1138 : 	enum OBJECT_3D_VISIBILITY
; 1139 : 		visibility;
; 1140 : 
; 1141 : 	terrain_3d_cloud_puff_object->vp.x = slot->terrain_cloud_puff.x;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  00011	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00014	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1142 : 	terrain_3d_cloud_puff_object->vp.y = slot->terrain_cloud_puff.y;

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0001f	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00022	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1143 : 	terrain_3d_cloud_puff_object->vp.z = slot->terrain_cloud_puff.z;

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0002d	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00030	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1144 : 	terrain_3d_cloud_puff_object->requires_immediate_render = TRUE;

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  00038	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0003b	83 c9 02	 or	 ecx, 2
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  00044	89 4a 50	 mov	 DWORD PTR [edx+80], ecx

; 1145 : 
; 1146 : 	terrain_3d_cloud_puff_object->relative_scale.x = slot->terrain_cloud_puff.scale;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0004f	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00052	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 1147 : 	terrain_3d_cloud_puff_object->relative_scale.y = slot->terrain_cloud_puff.scale;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0005d	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00060	89 50 48	 mov	 DWORD PTR [eax+72], edx

; 1148 : 	terrain_3d_cloud_puff_object->relative_scale.z = slot->terrain_cloud_puff.scale;

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0006b	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0006e	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 1149 : 
; 1150 : 	memcpy ( terrain_3d_cloud_puff_object->vp.attitude, slot->terrain_cloud_puff.attitude, sizeof ( matrix3x3 ) );

  00071	6a 24		 push	 36			; 00000024H
  00073	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00076	83 c0 24	 add	 eax, 36			; 00000024H
  00079	50		 push	 eax
  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  00080	83 c1 14	 add	 ecx, 20			; 00000014H
  00083	51		 push	 ecx
  00084	e8 00 00 00 00	 call	 _memcpy
  00089	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1151 : 
; 1152 : 	terrain_3d_cloud_puff_object->object_dissolve_value = slot->terrain_cloud_puff.dissolve;

  0008c	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0008f	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00094	e8 00 00 00 00	 call	 __ftoui3
  00099	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0009e	c1 e0 04	 shl	 eax, 4
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  000a7	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  000aa	81 e2 0f f0 ff
	ff		 and	 edx, -4081		; fffff00fH
  000b0	0b d0		 or	 edx, eax
  000b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  000b7	89 50 50	 mov	 DWORD PTR [eax+80], edx

; 1153 : 
; 1154 : 	set_object_3d_instance_relative_position ( terrain_3d_cloud_puff_object );

  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; set_object_3d_instance_relative_position

; 1155 : 
; 1156 : 	visibility = get_object_3d_instance_visibility ( terrain_3d_cloud_puff_object );

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?get_object_3d_instance_visibility@@YG?AW4OBJECT_3D_VISIBILITY@@PAUOBJECT_3D_INSTANCE@@@Z ; get_object_3d_instance_visibility
  000d0	89 45 fc	 mov	 DWORD PTR _visibility$[ebp], eax

; 1157 : 
; 1158 : 	if ( visibility != OBJECT_3D_NOT_VISIBLE )

  000d3	83 7d fc 03	 cmp	 DWORD PTR _visibility$[ebp], 3
  000d7	74 20		 je	 SHORT $LN2@draw_3d_te

; 1159 : 	{
; 1160 : 		//
; 1161 : 		// Recolour the lights
; 1162 : 		//
; 1163 : 
; 1164 : 		copy_and_recolour_current_3d_lights ( slot->terrain_cloud_puff.colour );

  000d9	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  000dc	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 ?copy_and_recolour_current_3d_lights@@YGXUREAL_COLOUR@@@Z ; copy_and_recolour_current_3d_lights

; 1165 : 
; 1166 : 		draw_wbuffered_3d_object ( terrain_3d_cloud_puff_object, FALSE, TRUE );

  000e5	6a 01		 push	 1
  000e7	6a 00		 push	 0
  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_cloud_puff_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_cloud_puff_object
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?draw_wbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z ; draw_wbuffered_3d_object

; 1167 : 
; 1168 : 		restore_uncoloured_current_3d_lights ();

  000f4	e8 00 00 00 00	 call	 ?restore_uncoloured_current_3d_lights@@YGXXZ ; restore_uncoloured_current_3d_lights
$LN2@draw_3d_te:

; 1169 : 	}
; 1170 : }

  000f9	5f		 pop	 edi
  000fa	5e		 pop	 esi
  000fb	5b		 pop	 ebx
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c2 04 00	 ret	 4
?draw_3d_terrain_cloud_puff_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_cloud_puff_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?draw_3d_terrain_tree_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z
_TEXT	SEGMENT
_idissolve$1 = -16					; size = 4
_old_dissolve$2 = -12					; size = 4
_dissolve$3 = -8					; size = 4
_visibility$ = -4					; size = 4
_slot$ = 8						; size = 4
?draw_3d_terrain_tree_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z PROC ; draw_3d_terrain_tree_object, COMDAT

; 1067 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1068 : 
; 1069 : 	enum OBJECT_3D_VISIBILITY
; 1070 : 		visibility;
; 1071 : 
; 1072 : 	terrain_3d_tree_object->vp.x = slot->terrain_tree.x;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  00011	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00014	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1073 : 	terrain_3d_tree_object->vp.y = slot->terrain_tree.y;

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0001f	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00022	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 1074 : 	terrain_3d_tree_object->vp.z = slot->terrain_tree.z;

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0002a	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0002d	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00030	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1075 : 	terrain_3d_tree_object->requires_immediate_render = TRUE;

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00038	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0003b	83 c9 02	 or	 ecx, 2
  0003e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00044	89 4a 50	 mov	 DWORD PTR [edx+80], ecx

; 1076 : 	
; 1077 : 	terrain_3d_tree_object->relative_scale.x = slot->terrain_tree.scale;

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0004f	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00052	89 50 44	 mov	 DWORD PTR [eax+68], edx

; 1078 : 	terrain_3d_tree_object->relative_scale.y = slot->terrain_tree.scale;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0005d	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00060	89 50 48	 mov	 DWORD PTR [eax+72], edx

; 1079 : 	terrain_3d_tree_object->relative_scale.z = slot->terrain_tree.scale;

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _slot$[ebp]
  0006b	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0006e	89 50 4c	 mov	 DWORD PTR [eax+76], edx

; 1080 : 
; 1081 : 	terrain_3d_tree_object->object_dissolve_value = slot->terrain_tree.dissolve;

  00071	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  00074	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  00079	e8 00 00 00 00	 call	 __ftoui3
  0007e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00083	c1 e0 04	 shl	 eax, 4
  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0008c	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  0008f	81 e2 0f f0 ff
	ff		 and	 edx, -4081		; fffff00fH
  00095	0b d0		 or	 edx, eax
  00097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0009c	89 50 50	 mov	 DWORD PTR [eax+80], edx

; 1082 : 
; 1083 : 	set_object_3d_instance_relative_position ( terrain_3d_tree_object );

  0009f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; set_object_3d_instance_relative_position

; 1084 : 
; 1085 : 	visibility = get_object_3d_instance_visibility ( terrain_3d_tree_object );

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?get_object_3d_instance_visibility@@YG?AW4OBJECT_3D_VISIBILITY@@PAUOBJECT_3D_INSTANCE@@@Z ; get_object_3d_instance_visibility
  000b5	89 45 fc	 mov	 DWORD PTR _visibility$[ebp], eax

; 1086 : 
; 1087 : 	if ( visibility != OBJECT_3D_NOT_VISIBLE )

  000b8	83 7d fc 03	 cmp	 DWORD PTR _visibility$[ebp], 3
  000bc	0f 84 d5 00 00
	00		 je	 $LN2@draw_3d_te

; 1088 : 	{
; 1089 : 
; 1090 : // start render_tree_shadows-mod by GCsDriver 08-12-2007
; 1091 : //		if ( shadows_enabled )
; 1092 : 		if ( shadows_enabled && command_line_render_tree_shadows )

  000c2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?shadows_enabled@@3HA, 0 ; shadows_enabled
  000c9	0f 84 a8 00 00
	00		 je	 $LN3@draw_3d_te
  000cf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_render_tree_shadows@@3HA, 0 ; command_line_render_tree_shadows
  000d6	0f 84 9b 00 00
	00		 je	 $LN3@draw_3d_te

; 1093 : 		{
; 1094 : // end render_tree_shadows-mod by GCsDriver 08-12-2007
; 1095 : 
; 1096 : 			float
; 1097 : 				dissolve;
; 1098 : 
; 1099 : 			int
; 1100 : 				old_dissolve,
; 1101 : 				idissolve;
; 1102 : 
; 1103 : 			old_dissolve = terrain_3d_tree_object->object_dissolve_value;

  000dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  000e1	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  000e4	c1 e9 04	 shr	 ecx, 4
  000e7	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  000ed	89 4d f4	 mov	 DWORD PTR _old_dissolve$2[ebp], ecx

; 1104 : 
; 1105 : 			dissolve = old_dissolve;

  000f0	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _old_dissolve$2[ebp]
  000f5	f3 0f 11 45 f8	 movss	 DWORD PTR _dissolve$3[ebp], xmm0

; 1106 : 
; 1107 : 			dissolve *= 0.650;

  000fa	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _dissolve$3[ebp]
  000ff	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe4cccccccccccd
  00107	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010b	f3 0f 11 45 f8	 movss	 DWORD PTR _dissolve$3[ebp], xmm0

; 1108 : 
; 1109 : 			convert_float_to_int ( dissolve, &idissolve );

  00110	8d 45 f0	 lea	 eax, DWORD PTR _idissolve$1[ebp]
  00113	50		 push	 eax
  00114	51		 push	 ecx
  00115	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dissolve$3[ebp]
  0011a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011f	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 1110 : 
; 1111 : 			terrain_3d_tree_object->object_dissolve_value = idissolve;

  00124	8b 45 f0	 mov	 eax, DWORD PTR _idissolve$1[ebp]
  00127	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0012c	c1 e0 04	 shl	 eax, 4
  0012f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00135	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00138	81 e2 0f f0 ff
	ff		 and	 edx, -4081		; fffff00fH
  0013e	0b d0		 or	 edx, eax
  00140	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00145	89 50 50	 mov	 DWORD PTR [eax+80], edx

; 1112 : 
; 1113 : 			draw_3d_object_shadow ( terrain_3d_tree_object );

  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?draw_3d_object_shadow@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; draw_3d_object_shadow

; 1114 : 
; 1115 : 			terrain_3d_tree_object->object_dissolve_value = old_dissolve;

  00153	8b 45 f4	 mov	 eax, DWORD PTR _old_dissolve$2[ebp]
  00156	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0015b	c1 e0 04	 shl	 eax, 4
  0015e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00164	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00167	81 e2 0f f0 ff
	ff		 and	 edx, -4081		; fffff00fH
  0016d	0b d0		 or	 edx, eax
  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  00174	89 50 50	 mov	 DWORD PTR [eax+80], edx
$LN3@draw_3d_te:

; 1116 : 		}
; 1117 : 
; 1118 : 		//
; 1119 : 		// Recolour the lights
; 1120 : 		//
; 1121 : 
; 1122 : 		copy_and_recolour_current_3d_lights ( slot->terrain_tree.colour );

  00177	8b 45 08	 mov	 eax, DWORD PTR _slot$[ebp]
  0017a	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0017d	51		 push	 ecx
  0017e	e8 00 00 00 00	 call	 ?copy_and_recolour_current_3d_lights@@YGXUREAL_COLOUR@@@Z ; copy_and_recolour_current_3d_lights

; 1123 : 		
; 1124 : 		draw_wbuffered_3d_object ( terrain_3d_tree_object, FALSE, TRUE );

  00183	6a 01		 push	 1
  00185	6a 00		 push	 0
  00187	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_tree_object@@3PAUOBJECT_3D_INSTANCE@@A ; terrain_3d_tree_object
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?draw_wbuffered_3d_object@@YGXPAUOBJECT_3D_INSTANCE@@HH@Z ; draw_wbuffered_3d_object

; 1125 : 
; 1126 : 		restore_uncoloured_current_3d_lights ();

  00192	e8 00 00 00 00	 call	 ?restore_uncoloured_current_3d_lights@@YGXXZ ; restore_uncoloured_current_3d_lights
$LN2@draw_3d_te:

; 1127 : 	}
; 1128 : }

  00197	5f		 pop	 edi
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	8b e5		 mov	 esp, ebp
  0019c	5d		 pop	 ebp
  0019d	c2 04 00	 ret	 4
?draw_3d_terrain_tree_object@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ENDP ; draw_3d_terrain_tree_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?scan_3d_terrain@@YGXXZ
_TEXT	SEGMENT
tv197 = -380						; size = 4
tv191 = -380						; size = 4
tv185 = -380						; size = 4
tv179 = -380						; size = 4
tv198 = -376						; size = 4
tv192 = -376						; size = 4
tv186 = -376						; size = 4
tv180 = -376						; size = 4
$T1 = -372						; size = 4
$T2 = -368						; size = 4
$T3 = -364						; size = 4
$T4 = -360						; size = 4
$T5 = -356						; size = 4
$T6 = -352						; size = 4
$T7 = -348						; size = 4
_biased_z$8 = -280					; size = 4
_visibility$9 = -276					; size = 4
_sorting_slot$10 = -272					; size = 4
_object$11 = -268					; size = 4
_range$12 = -264					; size = 4
_test_range$13 = -260					; size = 4
_dz$14 = -256						; size = 4
_dy$15 = -252						; size = 4
_dx$16 = -248						; size = 4
_z$17 = -244						; size = 4
_y$18 = -240						; size = 4
_x$19 = -236						; size = 4
_cloud_puffs$20 = -232					; size = 4
_cloud_puff_count$21 = -228				; size = 4
_sorting_slot$22 = -224					; size = 4
_outcode2$23 = -220					; size = 4
_scale$24 = -216					; size = 4
_sq_range$25 = -212					; size = 4
_scale$26 = -208					; size = 4
_range$27 = -204					; size = 4
_dz$28 = -200						; size = 4
_dy$29 = -196						; size = 4
_dx$30 = -192						; size = 4
_z$31 = -188						; size = 4
_y$32 = -184						; size = 4
_x$33 = -180						; size = 4
_colours$34 = -176					; size = 4
_trees$35 = -172					; size = 4
_tree_count$36 = -168					; size = 4
_biased_z$37 = -164					; size = 4
_sector_range$38 = -160					; size = 4
_sorting_slot$39 = -156					; size = 4
_z_maximum_offset$40 = -152				; size = 4
_z_minimum_offset$41 = -148				; size = 4
_y_maximum_offset$42 = -144				; size = 4
_y_minimum_offset$43 = -140				; size = 4
_x_maximum_offset$44 = -136				; size = 4
_x_minimum_offset$45 = -132				; size = 4
_outcode2$46 = -128					; size = 4
_outcode1$47 = -124					; size = 4
_sector_relative_centre$48 = -120			; size = 12
_sector_centre$49 = -108				; size = 12
_temp_intensity$50 = -96				; size = 4
_ib$51 = -92						; size = 4
_ig$52 = -88						; size = 4
_ir$53 = -84						; size = 4
_this_light$54 = -80					; size = 4
_b$55 = -76						; size = 4
_g$56 = -72						; size = 4
_r$57 = -68						; size = 4
_result_normals$ = -64					; size = 4
_point_normals$ = -60					; size = 4
_current_sector_z_offset$ = -56				; size = 4
_current_sector_x_offset$ = -52				; size = 4
_initial_sector_z_offset$ = -48				; size = 4
_initial_sector_x_offset$ = -44				; size = 4
_sector$ = -40						; size = 4
_maximum_sector_z$ = -36				; size = 4
_maximum_sector_x$ = -32				; size = 4
_minimum_sector_z$ = -28				; size = 4
_minimum_sector_x$ = -24				; size = 4
_current_sector_z$ = -20				; size = 4
_current_sector_x$ = -16				; size = 4
_visual_sector_z$ = -12					; size = 4
_visual_sector_x$ = -8					; size = 4
_count$ = -4						; size = 4
?scan_3d_terrain@@YGXXZ PROC				; scan_3d_terrain, COMDAT

; 479  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 7c 01 00
	00		 sub	 esp, 380		; 0000017cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 480  : 
; 481  : 	int
; 482  : 		count,
; 483  : 		visual_sector_x,
; 484  : 		visual_sector_z,
; 485  : 		current_sector_x,
; 486  : 		current_sector_z,
; 487  : 		minimum_sector_x,
; 488  : 		minimum_sector_z,
; 489  : 		maximum_sector_x,
; 490  : 		maximum_sector_z;
; 491  : 
; 492  : 	terrain_3d_sector
; 493  : 		*sector;
; 494  : 
; 495  : 	float
; 496  : 		initial_sector_x_offset,
; 497  : 		initial_sector_z_offset,
; 498  : 		current_sector_x_offset,
; 499  : 		current_sector_z_offset;
; 500  : 
; 501  : 	vec3d
; 502  : 		*point_normals;
; 503  : 
; 504  : 	terrain_3d_transformed_point_normal
; 505  : 		*result_normals;
; 506  : 
; 507  : 	//
; 508  : 	// First, set the texture blending values
; 509  : 	//
; 510  : 
; 511  : 	set_3d_terrain_detail_blend_factors ();

  0000c	e8 00 00 00 00	 call	 ?set_3d_terrain_detail_blend_factors@@YGXXZ ; set_3d_terrain_detail_blend_factors

; 512  : 
; 513  : 	//
; 514  : 	// Set the rendering routines dependant on infrared mode
; 515  : 	//
; 516  : 
; 517  : 	if ( active_3d_environment->render_filter == RENDER_INFRARED )

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00016	83 b8 d0 02 00
	00 02		 cmp	 DWORD PTR [eax+720], 2
  0001d	75 12		 jne	 SHORT $LN21@scan_3d_te

; 518  : 	{
; 519  : 
; 520  : 		if ( get_3d_terrain_dual_pass_rendering () )

  0001f	e8 00 00 00 00	 call	 ?get_3d_terrain_dual_pass_rendering@@YGHXZ ; get_3d_terrain_dual_pass_rendering
  00024	85 c0		 test	 eax, eax
  00026	74 07		 je	 SHORT $LN23@scan_3d_te

; 521  : 		{
; 522  : 
; 523  : 			initialise_3d_terrain_rendering_routines ( FALSE );

  00028	6a 00		 push	 0
  0002a	e8 00 00 00 00	 call	 ?initialise_3d_terrain_rendering_routines@@YGXH@Z ; initialise_3d_terrain_rendering_routines
$LN23@scan_3d_te:

; 524  : 		}
; 525  : 	}
; 526  : 	else

  0002f	eb 0b		 jmp	 SHORT $LN22@scan_3d_te
$LN21@scan_3d_te:

; 527  : 	{
; 528  : 
; 529  : 		initialise_3d_terrain_rendering_routines ( get_3d_terrain_dual_pass_rendering () );

  00031	e8 00 00 00 00	 call	 ?get_3d_terrain_dual_pass_rendering@@YGHXZ ; get_3d_terrain_dual_pass_rendering
  00036	50		 push	 eax
  00037	e8 00 00 00 00	 call	 ?initialise_3d_terrain_rendering_routines@@YGXH@Z ; initialise_3d_terrain_rendering_routines
$LN22@scan_3d_te:

; 530  : 	}
; 531  : 
; 532  : 	//
; 533  : 	// Next, light all the terrain normal vectors.
; 534  : 	//
; 535  : 
; 536  : 	point_normals = terrain_3d_point_normals;

  0003c	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _point_normals$[ebp], OFFSET ?terrain_3d_point_normals@@3PAUVEC3D@@A ; terrain_3d_point_normals

; 537  : 
; 538  : 	result_normals = terrain_3d_transformed_point_normals;

  00043	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _result_normals$[ebp], OFFSET ?terrain_3d_transformed_point_normals@@3PAUTERRAIN_3D_TRANSFORMED_POINT_NORMAL@@A ; terrain_3d_transformed_point_normals

; 539  : 
; 540  : 	for ( count = 0; count < number_of_terrain_3d_point_normals; count++ )

  0004a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00051	eb 09		 jmp	 SHORT $LN4@scan_3d_te
$LN2@scan_3d_te:
  00053	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00056	83 c0 01	 add	 eax, 1
  00059	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@scan_3d_te:
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0005f	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?number_of_terrain_3d_point_normals@@3HA ; number_of_terrain_3d_point_normals
  00065	0f 8d df 01 00
	00		 jge	 $LN3@scan_3d_te

; 541  : 	{
; 542  : 
; 543  : 		float
; 544  : 			r,
; 545  : 			g,
; 546  : 			b;
; 547  : 
; 548  : 		light_3d_source
; 549  : 			*this_light;
; 550  : 
; 551  : 		int
; 552  : 			ir,
; 553  : 			ig,
; 554  : 			ib;
; 555  : 
; 556  : 		//
; 557  : 		// Set the light levels
; 558  : 		//
; 559  : 
; 560  : 		r = ambient_3d_light.colour.red;

  0006b	f3 0f 10 05 18
	00 00 00	 movss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+24
  00073	f3 0f 11 45 bc	 movss	 DWORD PTR _r$57[ebp], xmm0

; 561  : 		g = ambient_3d_light.colour.green;

  00078	f3 0f 10 05 1c
	00 00 00	 movss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+28
  00080	f3 0f 11 45 b8	 movss	 DWORD PTR _g$56[ebp], xmm0

; 562  : 		b = ambient_3d_light.colour.blue;

  00085	f3 0f 10 05 20
	00 00 00	 movss	 xmm0, DWORD PTR ?ambient_3d_light@@3ULIGHT_3D_SOURCE@@A+32
  0008d	f3 0f 11 45 b4	 movss	 DWORD PTR _b$55[ebp], xmm0

; 563  : 
; 564  : 		this_light = current_3d_lights;

  00092	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_3d_lights@@3PAULIGHT_3D_SOURCE@@A ; current_3d_lights
  00097	89 45 b0	 mov	 DWORD PTR _this_light$54[ebp], eax
$LN5@scan_3d_te:

; 565  : 
; 566  : 		while ( this_light )

  0009a	83 7d b0 00	 cmp	 DWORD PTR _this_light$54[ebp], 0
  0009e	0f 84 a6 00 00
	00		 je	 $LN6@scan_3d_te

; 567  : 		{
; 568  : 
; 569  : 			if ( this_light->type == LIGHT_3D_TYPE_DIRECTIONAL )

  000a4	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  000a7	83 78 30 01	 cmp	 DWORD PTR [eax+48], 1
  000ab	0f 85 8b 00 00
	00		 jne	 $LN25@scan_3d_te

; 570  : 			{
; 571  : 
; 572  : 				float
; 573  : 					temp_intensity;
; 574  : 
; 575  : 				temp_intensity = point_normals->x * this_light->lx + point_normals->y * this_light->ly + point_normals->z * this_light->lz;

  000b1	8b 45 c4	 mov	 eax, DWORD PTR _point_normals$[ebp]
  000b4	8b 4d b0	 mov	 ecx, DWORD PTR _this_light$54[ebp]
  000b7	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000bb	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  000bf	8b 55 c4	 mov	 edx, DWORD PTR _point_normals$[ebp]
  000c2	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  000c5	f3 0f 10 4a 04	 movss	 xmm1, DWORD PTR [edx+4]
  000ca	f3 0f 59 48 04	 mulss	 xmm1, DWORD PTR [eax+4]
  000cf	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d3	8b 4d c4	 mov	 ecx, DWORD PTR _point_normals$[ebp]
  000d6	8b 55 b0	 mov	 edx, DWORD PTR _this_light$54[ebp]
  000d9	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  000de	f3 0f 59 4a 08	 mulss	 xmm1, DWORD PTR [edx+8]
  000e3	f3 0f 58 c1	 addss	 xmm0, xmm1
  000e7	f3 0f 11 45 a0	 movss	 DWORD PTR _temp_intensity$50[ebp], xmm0

; 576  : 
; 577  : 				if ( *( ( int *) &temp_intensity ) > *( ( int *) &float_value_zero ) )

  000ec	8b 45 a0	 mov	 eax, DWORD PTR _temp_intensity$50[ebp]
  000ef	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_zero@@3MB
  000f5	7e 45		 jle	 SHORT $LN25@scan_3d_te

; 578  : 				{
; 579  : 
; 580  : 					r += temp_intensity * this_light->colour.red;

  000f7	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  000fa	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _temp_intensity$50[ebp]
  000ff	f3 0f 59 40 18	 mulss	 xmm0, DWORD PTR [eax+24]
  00104	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _r$57[ebp]
  00109	f3 0f 11 45 bc	 movss	 DWORD PTR _r$57[ebp], xmm0

; 581  : 					g += temp_intensity * this_light->colour.green;

  0010e	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  00111	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _temp_intensity$50[ebp]
  00116	f3 0f 59 40 1c	 mulss	 xmm0, DWORD PTR [eax+28]
  0011b	f3 0f 58 45 b8	 addss	 xmm0, DWORD PTR _g$56[ebp]
  00120	f3 0f 11 45 b8	 movss	 DWORD PTR _g$56[ebp], xmm0

; 582  : 					b += temp_intensity * this_light->colour.blue;

  00125	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  00128	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR _temp_intensity$50[ebp]
  0012d	f3 0f 59 40 20	 mulss	 xmm0, DWORD PTR [eax+32]
  00132	f3 0f 58 45 b4	 addss	 xmm0, DWORD PTR _b$55[ebp]
  00137	f3 0f 11 45 b4	 movss	 DWORD PTR _b$55[ebp], xmm0
$LN25@scan_3d_te:

; 583  : 				}
; 584  : 			}
; 585  : 
; 586  : 			this_light = this_light->succ;

  0013c	8b 45 b0	 mov	 eax, DWORD PTR _this_light$54[ebp]
  0013f	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00142	89 4d b0	 mov	 DWORD PTR _this_light$54[ebp], ecx

; 587  : 		}

  00145	e9 50 ff ff ff	 jmp	 $LN5@scan_3d_te
$LN6@scan_3d_te:

; 588  : 
; 589  : 		if ( *( ( int *) &r ) > *( ( int *) &float_value_one ) )

  0014a	8b 45 bc	 mov	 eax, DWORD PTR _r$57[ebp]
  0014d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_one@@3MB
  00153	7e 0d		 jle	 SHORT $LN26@scan_3d_te

; 590  : 		{
; 591  : 
; 592  : 			r = 1.0;

  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0015d	f3 0f 11 45 bc	 movss	 DWORD PTR _r$57[ebp], xmm0
$LN26@scan_3d_te:

; 593  : 		}
; 594  : 
; 595  : 		if ( *( ( int *) &g ) > *( ( int *) &float_value_one ) )

  00162	8b 45 b8	 mov	 eax, DWORD PTR _g$56[ebp]
  00165	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_one@@3MB
  0016b	7e 0d		 jle	 SHORT $LN27@scan_3d_te

; 596  : 		{
; 597  : 
; 598  : 			g = 1.0;

  0016d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00175	f3 0f 11 45 b8	 movss	 DWORD PTR _g$56[ebp], xmm0
$LN27@scan_3d_te:

; 599  : 		}
; 600  : 
; 601  : 		if ( *( ( int *) &b ) > *( ( int *) &float_value_one ) )

  0017a	8b 45 b4	 mov	 eax, DWORD PTR _b$55[ebp]
  0017d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?float_value_one@@3MB
  00183	7e 0d		 jle	 SHORT $LN28@scan_3d_te

; 602  : 		{
; 603  : 
; 604  : 			b = 1.0;

  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0018d	f3 0f 11 45 b4	 movss	 DWORD PTR _b$55[ebp], xmm0
$LN28@scan_3d_te:

; 605  : 		}
; 606  : 
; 607  : 		result_normals->r = r;

  00192	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  00195	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _r$57[ebp]
  0019a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 608  : 		result_normals->g = g;

  0019e	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  001a1	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _g$56[ebp]
  001a6	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 609  : 		result_normals->b = b;

  001ab	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  001ae	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _b$55[ebp]
  001b3	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 610  : 
; 611  : 		asm_convert_float_to_int ( ( r * 255.0 ), &ir );

  001b8	8d 45 ac	 lea	 eax, DWORD PTR _ir$53[ebp]
  001bb	50		 push	 eax
  001bc	f3 0f 5a 45 bc	 cvtss2sd xmm0, DWORD PTR _r$57[ebp]
  001c1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  001c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cd	51		 push	 ecx
  001ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 612  : 		asm_convert_float_to_int ( ( g * 255.0 ), &ig );

  001d8	8d 45 a8	 lea	 eax, DWORD PTR _ig$52[ebp]
  001db	50		 push	 eax
  001dc	f3 0f 5a 45 b8	 cvtss2sd xmm0, DWORD PTR _g$56[ebp]
  001e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  001e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ed	51		 push	 ecx
  001ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 613  : 		asm_convert_float_to_int ( ( b * 255.0 ), &ib );

  001f8	8d 45 a4	 lea	 eax, DWORD PTR _ib$51[ebp]
  001fb	50		 push	 eax
  001fc	f3 0f 5a 45 b4	 cvtss2sd xmm0, DWORD PTR _b$55[ebp]
  00201	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  00209	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020d	51		 push	 ecx
  0020e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00213	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 614  : 
; 615  : 		result_normals->colour.red = ir;

  00218	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  0021b	8a 4d ac	 mov	 cl, BYTE PTR _ir$53[ebp]
  0021e	88 48 0e	 mov	 BYTE PTR [eax+14], cl

; 616  : 		result_normals->colour.green = ig;

  00221	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  00224	8a 4d a8	 mov	 cl, BYTE PTR _ig$52[ebp]
  00227	88 48 0d	 mov	 BYTE PTR [eax+13], cl

; 617  : 		result_normals->colour.blue = ib;

  0022a	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  0022d	8a 4d a4	 mov	 cl, BYTE PTR _ib$51[ebp]
  00230	88 48 0c	 mov	 BYTE PTR [eax+12], cl

; 618  : 
; 619  : 		point_normals++;

  00233	8b 45 c4	 mov	 eax, DWORD PTR _point_normals$[ebp]
  00236	83 c0 0c	 add	 eax, 12			; 0000000cH
  00239	89 45 c4	 mov	 DWORD PTR _point_normals$[ebp], eax

; 620  : 
; 621  : 		result_normals++;

  0023c	8b 45 c0	 mov	 eax, DWORD PTR _result_normals$[ebp]
  0023f	83 c0 10	 add	 eax, 16			; 00000010H
  00242	89 45 c0	 mov	 DWORD PTR _result_normals$[ebp], eax

; 622  : 	}

  00245	e9 09 fe ff ff	 jmp	 $LN2@scan_3d_te
$LN3@scan_3d_te:

; 623  : 
; 624  : 	//
; 625  : 	// Get the sector the visual_3d_vp is currently in
; 626  : 	//
; 627  : 
; 628  : 	get_terrain_3d_sector ( visual_3d_vp->x, visual_3d_vp->z, &visual_sector_x, &visual_sector_z );

  0024a	8d 45 f4	 lea	 eax, DWORD PTR _visual_sector_z$[ebp]
  0024d	50		 push	 eax
  0024e	8d 4d f8	 lea	 ecx, DWORD PTR _visual_sector_x$[ebp]
  00251	51		 push	 ecx
  00252	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00258	51		 push	 ecx
  00259	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0025e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00263	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00268	51		 push	 ecx
  00269	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0026d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00272	e8 00 00 00 00	 call	 ?get_terrain_3d_sector@@YGXMMPAH0@Z ; get_terrain_3d_sector

; 629  : 
; 630  : 	minimum_sector_x = visual_sector_x - terrain_3d_sector_scan_radius;

  00277	8b 45 f8	 mov	 eax, DWORD PTR _visual_sector_x$[ebp]
  0027a	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?terrain_3d_sector_scan_radius@@3HA
  00280	89 45 e8	 mov	 DWORD PTR _minimum_sector_x$[ebp], eax

; 631  : 	minimum_sector_z = visual_sector_z - terrain_3d_sector_scan_radius;

  00283	8b 45 f4	 mov	 eax, DWORD PTR _visual_sector_z$[ebp]
  00286	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?terrain_3d_sector_scan_radius@@3HA
  0028c	89 45 e4	 mov	 DWORD PTR _minimum_sector_z$[ebp], eax

; 632  : 
; 633  : 	maximum_sector_x = visual_sector_x + terrain_3d_sector_scan_radius;

  0028f	8b 45 f8	 mov	 eax, DWORD PTR _visual_sector_x$[ebp]
  00292	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?terrain_3d_sector_scan_radius@@3HA
  00298	89 45 e0	 mov	 DWORD PTR _maximum_sector_x$[ebp], eax

; 634  : 	maximum_sector_z = visual_sector_z + terrain_3d_sector_scan_radius;

  0029b	8b 45 f4	 mov	 eax, DWORD PTR _visual_sector_z$[ebp]
  0029e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?terrain_3d_sector_scan_radius@@3HA
  002a4	89 45 dc	 mov	 DWORD PTR _maximum_sector_z$[ebp], eax

; 635  : 
; 636  : 	minimum_sector_x = bound ( minimum_sector_x, 0, ( terrain_3d_sector_x_max - 1 ) );

  002a7	83 7d e8 00	 cmp	 DWORD PTR _minimum_sector_x$[ebp], 0
  002ab	7d 0c		 jge	 SHORT $LN60@scan_3d_te
  002ad	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv180[ebp], 0
  002b7	eb 33		 jmp	 SHORT $LN61@scan_3d_te
$LN60@scan_3d_te:
  002b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_x_max@@3HA ; terrain_3d_sector_x_max
  002be	83 e8 01	 sub	 eax, 1
  002c1	39 45 e8	 cmp	 DWORD PTR _minimum_sector_x$[ebp], eax
  002c4	7e 11		 jle	 SHORT $LN58@scan_3d_te
  002c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_x_max@@3HA ; terrain_3d_sector_x_max
  002cc	83 e9 01	 sub	 ecx, 1
  002cf	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv179[ebp], ecx
  002d5	eb 09		 jmp	 SHORT $LN59@scan_3d_te
$LN58@scan_3d_te:
  002d7	8b 55 e8	 mov	 edx, DWORD PTR _minimum_sector_x$[ebp]
  002da	89 95 84 fe ff
	ff		 mov	 DWORD PTR tv179[ebp], edx
$LN59@scan_3d_te:
  002e0	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR tv179[ebp]
  002e6	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv180[ebp], eax
$LN61@scan_3d_te:
  002ec	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv180[ebp]
  002f2	89 4d e8	 mov	 DWORD PTR _minimum_sector_x$[ebp], ecx

; 637  : 	minimum_sector_z = bound ( minimum_sector_z, 0, ( terrain_3d_sector_z_max - 1 ) );

  002f5	83 7d e4 00	 cmp	 DWORD PTR _minimum_sector_z$[ebp], 0
  002f9	7d 0c		 jge	 SHORT $LN64@scan_3d_te
  002fb	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv186[ebp], 0
  00305	eb 33		 jmp	 SHORT $LN65@scan_3d_te
$LN64@scan_3d_te:
  00307	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_z_max@@3HA ; terrain_3d_sector_z_max
  0030c	83 e8 01	 sub	 eax, 1
  0030f	39 45 e4	 cmp	 DWORD PTR _minimum_sector_z$[ebp], eax
  00312	7e 11		 jle	 SHORT $LN62@scan_3d_te
  00314	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_z_max@@3HA ; terrain_3d_sector_z_max
  0031a	83 e9 01	 sub	 ecx, 1
  0031d	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv185[ebp], ecx
  00323	eb 09		 jmp	 SHORT $LN63@scan_3d_te
$LN62@scan_3d_te:
  00325	8b 55 e4	 mov	 edx, DWORD PTR _minimum_sector_z$[ebp]
  00328	89 95 84 fe ff
	ff		 mov	 DWORD PTR tv185[ebp], edx
$LN63@scan_3d_te:
  0032e	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR tv185[ebp]
  00334	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv186[ebp], eax
$LN65@scan_3d_te:
  0033a	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv186[ebp]
  00340	89 4d e4	 mov	 DWORD PTR _minimum_sector_z$[ebp], ecx

; 638  : 	maximum_sector_x = bound ( maximum_sector_x, 0, ( terrain_3d_sector_x_max - 1 ) );

  00343	83 7d e0 00	 cmp	 DWORD PTR _maximum_sector_x$[ebp], 0
  00347	7d 0c		 jge	 SHORT $LN68@scan_3d_te
  00349	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv192[ebp], 0
  00353	eb 33		 jmp	 SHORT $LN69@scan_3d_te
$LN68@scan_3d_te:
  00355	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_x_max@@3HA ; terrain_3d_sector_x_max
  0035a	83 e8 01	 sub	 eax, 1
  0035d	39 45 e0	 cmp	 DWORD PTR _maximum_sector_x$[ebp], eax
  00360	7e 11		 jle	 SHORT $LN66@scan_3d_te
  00362	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_x_max@@3HA ; terrain_3d_sector_x_max
  00368	83 e9 01	 sub	 ecx, 1
  0036b	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv191[ebp], ecx
  00371	eb 09		 jmp	 SHORT $LN67@scan_3d_te
$LN66@scan_3d_te:
  00373	8b 55 e0	 mov	 edx, DWORD PTR _maximum_sector_x$[ebp]
  00376	89 95 84 fe ff
	ff		 mov	 DWORD PTR tv191[ebp], edx
$LN67@scan_3d_te:
  0037c	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR tv191[ebp]
  00382	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv192[ebp], eax
$LN69@scan_3d_te:
  00388	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv192[ebp]
  0038e	89 4d e0	 mov	 DWORD PTR _maximum_sector_x$[ebp], ecx

; 639  : 	maximum_sector_z = bound ( maximum_sector_z, 0, ( terrain_3d_sector_z_max - 1 ) );

  00391	83 7d dc 00	 cmp	 DWORD PTR _maximum_sector_z$[ebp], 0
  00395	7d 0c		 jge	 SHORT $LN72@scan_3d_te
  00397	c7 85 88 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv198[ebp], 0
  003a1	eb 33		 jmp	 SHORT $LN73@scan_3d_te
$LN72@scan_3d_te:
  003a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_z_max@@3HA ; terrain_3d_sector_z_max
  003a8	83 e8 01	 sub	 eax, 1
  003ab	39 45 dc	 cmp	 DWORD PTR _maximum_sector_z$[ebp], eax
  003ae	7e 11		 jle	 SHORT $LN70@scan_3d_te
  003b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_3d_sector_z_max@@3HA ; terrain_3d_sector_z_max
  003b6	83 e9 01	 sub	 ecx, 1
  003b9	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv197[ebp], ecx
  003bf	eb 09		 jmp	 SHORT $LN71@scan_3d_te
$LN70@scan_3d_te:
  003c1	8b 55 dc	 mov	 edx, DWORD PTR _maximum_sector_z$[ebp]
  003c4	89 95 84 fe ff
	ff		 mov	 DWORD PTR tv197[ebp], edx
$LN71@scan_3d_te:
  003ca	8b 85 84 fe ff
	ff		 mov	 eax, DWORD PTR tv197[ebp]
  003d0	89 85 88 fe ff
	ff		 mov	 DWORD PTR tv198[ebp], eax
$LN73@scan_3d_te:
  003d6	8b 8d 88 fe ff
	ff		 mov	 ecx, DWORD PTR tv198[ebp]
  003dc	89 4d dc	 mov	 DWORD PTR _maximum_sector_z$[ebp], ecx

; 640  : 
; 641  : 	initial_sector_x_offset = minimum_sector_x * TERRAIN_3D_SECTOR_SIDE_LENGTH;

  003df	8b 45 e8	 mov	 eax, DWORD PTR _minimum_sector_x$[ebp]
  003e2	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  003e5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003e9	f3 0f 11 45 d4	 movss	 DWORD PTR _initial_sector_x_offset$[ebp], xmm0

; 642  : 	initial_sector_z_offset = minimum_sector_z * TERRAIN_3D_SECTOR_SIDE_LENGTH;

  003ee	8b 45 e4	 mov	 eax, DWORD PTR _minimum_sector_z$[ebp]
  003f1	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  003f4	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  003f8	f3 0f 11 45 d0	 movss	 DWORD PTR _initial_sector_z_offset$[ebp], xmm0

; 643  : 
; 644  : 	current_sector_z_offset = initial_sector_z_offset;

  003fd	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _initial_sector_z_offset$[ebp]
  00402	f3 0f 11 45 c8	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 645  : 
; 646  : 	// Casm 20MAY12 Cloud puffs
; 647  : 	set_terrain_3d_cloud_puffs_colours ();

  00407	e8 00 00 00 00	 call	 ?set_terrain_3d_cloud_puffs_colours@@YGXXZ ; set_terrain_3d_cloud_puffs_colours

; 648  : 
; 649  : 	for ( current_sector_z = minimum_sector_z; current_sector_z <= maximum_sector_z; current_sector_z++ )

  0040c	8b 45 e4	 mov	 eax, DWORD PTR _minimum_sector_z$[ebp]
  0040f	89 45 ec	 mov	 DWORD PTR _current_sector_z$[ebp], eax
  00412	eb 09		 jmp	 SHORT $LN9@scan_3d_te
$LN7@scan_3d_te:
  00414	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00417	83 c0 01	 add	 eax, 1
  0041a	89 45 ec	 mov	 DWORD PTR _current_sector_z$[ebp], eax
$LN9@scan_3d_te:
  0041d	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00420	3b 45 dc	 cmp	 eax, DWORD PTR _maximum_sector_z$[ebp]
  00423	0f 8f de 0d 00
	00		 jg	 $LN8@scan_3d_te

; 650  : 	{
; 651  : 
; 652  : 		current_sector_x_offset = initial_sector_x_offset;

  00429	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _initial_sector_x_offset$[ebp]
  0042e	f3 0f 11 45 cc	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 653  : 
; 654  : 		for ( current_sector_x = minimum_sector_x; current_sector_x <= maximum_sector_x; current_sector_x++ )

  00433	8b 45 e8	 mov	 eax, DWORD PTR _minimum_sector_x$[ebp]
  00436	89 45 f0	 mov	 DWORD PTR _current_sector_x$[ebp], eax
  00439	eb 09		 jmp	 SHORT $LN12@scan_3d_te
$LN10@scan_3d_te:
  0043b	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  0043e	83 c0 01	 add	 eax, 1
  00441	89 45 f0	 mov	 DWORD PTR _current_sector_x$[ebp], eax
$LN12@scan_3d_te:
  00444	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00447	3b 45 e0	 cmp	 eax, DWORD PTR _maximum_sector_x$[ebp]
  0044a	0f 8f a0 0d 00
	00		 jg	 $LN11@scan_3d_te

; 655  : 		{
; 656  : 
; 657  : 			vec3d
; 658  : 				sector_centre,
; 659  : 				sector_relative_centre;
; 660  : 
; 661  : 			sector = &terrain_sectors[current_sector_z][current_sector_x];

  00450	6b 45 f0 30	 imul	 eax, DWORD PTR _current_sector_x$[ebp], 48
  00454	8b 4d ec	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  00457	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  0045d	03 04 8a	 add	 eax, DWORD PTR [edx+ecx*4]
  00460	89 45 d8	 mov	 DWORD PTR _sector$[ebp], eax

; 662  : 
; 663  : 			sector_centre.x = current_sector_x_offset + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00463	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  00468	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@44800000
  00470	f3 0f 11 45 94	 movss	 DWORD PTR _sector_centre$49[ebp], xmm0

; 664  : 			sector_centre.y = sector->average_height;

  00475	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  00478	0f bf 48 0a	 movsx	 ecx, WORD PTR [eax+10]
  0047c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00480	f3 0f 11 45 98	 movss	 DWORD PTR _sector_centre$49[ebp+4], xmm0

; 665  : 			sector_centre.z = current_sector_z_offset + ( TERRAIN_3D_SECTOR_SIDE_LENGTH / 2 );

  00485	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  0048a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@44800000
  00492	f3 0f 11 45 9c	 movss	 DWORD PTR _sector_centre$49[ebp+8], xmm0

; 666  : 
; 667  : 			sector_relative_centre.x = (	( sector_centre.x - visual_3d_vp->x ) * visual_3d_vp->xv.x +

  00497	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0049c	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _sector_centre$49[ebp]
  004a1	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  004a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004ab	f3 0f 59 41 0c	 mulss	 xmm0, DWORD PTR [ecx+12]
  004b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004b6	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+4]
  004bb	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004c5	f3 0f 59 48 10	 mulss	 xmm1, DWORD PTR [eax+16]
  004ca	f3 0f 58 c1	 addss	 xmm0, xmm1
  004ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004d4	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+8]
  004d9	f3 0f 5c 49 08	 subss	 xmm1, DWORD PTR [ecx+8]
  004de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004e4	f3 0f 59 4a 14	 mulss	 xmm1, DWORD PTR [edx+20]
  004e9	f3 0f 58 c1	 addss	 xmm0, xmm1
  004ed	f3 0f 11 45 88	 movss	 DWORD PTR _sector_relative_centre$48[ebp], xmm0

; 668  : 													( sector_centre.y - visual_3d_vp->y ) * visual_3d_vp->xv.y +
; 669  : 													( sector_centre.z - visual_3d_vp->z ) * visual_3d_vp->xv.z );
; 670  : 
; 671  : 			sector_relative_centre.y = (	( sector_centre.x - visual_3d_vp->x ) * visual_3d_vp->yv.x +

  004f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  004f7	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _sector_centre$49[ebp]
  004fc	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00500	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00506	f3 0f 59 41 18	 mulss	 xmm0, DWORD PTR [ecx+24]
  0050b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00511	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+4]
  00516	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
  0051b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00520	f3 0f 59 48 1c	 mulss	 xmm1, DWORD PTR [eax+28]
  00525	f3 0f 58 c1	 addss	 xmm0, xmm1
  00529	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0052f	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+8]
  00534	f3 0f 5c 49 08	 subss	 xmm1, DWORD PTR [ecx+8]
  00539	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0053f	f3 0f 59 4a 20	 mulss	 xmm1, DWORD PTR [edx+32]
  00544	f3 0f 58 c1	 addss	 xmm0, xmm1
  00548	f3 0f 11 45 8c	 movss	 DWORD PTR _sector_relative_centre$48[ebp+4], xmm0

; 672  : 													( sector_centre.y - visual_3d_vp->y ) * visual_3d_vp->yv.y +
; 673  : 													( sector_centre.z - visual_3d_vp->z ) * visual_3d_vp->yv.z );
; 674  : 
; 675  : 			sector_relative_centre.z = (	( sector_centre.x - visual_3d_vp->x ) * visual_3d_vp->zv.x +

  0054d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00552	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _sector_centre$49[ebp]
  00557	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  0055b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00561	f3 0f 59 41 24	 mulss	 xmm0, DWORD PTR [ecx+36]
  00566	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0056c	f3 0f 10 4d 98	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+4]
  00571	f3 0f 5c 4a 04	 subss	 xmm1, DWORD PTR [edx+4]
  00576	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0057b	f3 0f 59 48 28	 mulss	 xmm1, DWORD PTR [eax+40]
  00580	f3 0f 58 c1	 addss	 xmm0, xmm1
  00584	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0058a	f3 0f 10 4d 9c	 movss	 xmm1, DWORD PTR _sector_centre$49[ebp+8]
  0058f	f3 0f 5c 49 08	 subss	 xmm1, DWORD PTR [ecx+8]
  00594	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0059a	f3 0f 59 4a 2c	 mulss	 xmm1, DWORD PTR [edx+44]
  0059f	f3 0f 58 c1	 addss	 xmm0, xmm1
  005a3	f3 0f 11 45 90	 movss	 DWORD PTR _sector_relative_centre$48[ebp+8], xmm0

; 676  : 													( sector_centre.y - visual_3d_vp->y ) * visual_3d_vp->zv.y +
; 677  : 													( sector_centre.z - visual_3d_vp->z ) * visual_3d_vp->zv.z );
; 678  : 
; 679  : 			if (	( terrain_sectors[current_sector_z][current_sector_x].number_of_points ) ||

  005a8	6b 45 f0 30	 imul	 eax, DWORD PTR _current_sector_x$[ebp], 48
  005ac	8b 4d ec	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  005af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  005b5	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  005b8	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  005bc	85 d2		 test	 edx, edx
  005be	75 26		 jne	 SHORT $LN30@scan_3d_te
  005c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A, 0 ; terrain_tree_sectors
  005c7	0f 84 36 0b 00
	00		 je	 $LN17@scan_3d_te
  005cd	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  005d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A ; terrain_tree_sectors
  005d6	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  005d9	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  005dc	83 3c c2 00	 cmp	 DWORD PTR [edx+eax*8], 0
  005e0	0f 84 1d 0b 00
	00		 je	 $LN17@scan_3d_te
$LN30@scan_3d_te:

; 680  : 					( ( terrain_tree_sectors ) && ( terrain_tree_sectors[current_sector_z][current_sector_x].number_of_trees ) ) )
; 681  : 			{
; 682  : 
; 683  : 				//
; 684  : 				// Do a visibility check on the sector.
; 685  : 				//
; 686  : 
; 687  : 				if ( ( sector_relative_centre.z + sector->radius ) < clip_hither )

  005e6	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  005e9	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  005ed	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  005f1	f3 0f 58 45 90	 addss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp+8]
  005f6	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?clip_hither@@3MA
  005fe	0f 2f c8	 comiss	 xmm1, xmm0
  00601	76 12		 jbe	 SHORT $LN31@scan_3d_te

; 688  : 				{
; 689  : 
; 690  : 					terrain_3d_sectors_trivially_culled++;

  00603	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_trivially_culled@@3HA ; terrain_3d_sectors_trivially_culled
  00608	83 c0 01	 add	 eax, 1
  0060b	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_trivially_culled@@3HA, eax ; terrain_3d_sectors_trivially_culled

; 691  : 				}
; 692  : 				else

  00610	e9 ee 0a 00 00	 jmp	 $LN17@scan_3d_te
$LN31@scan_3d_te:

; 693  : 				{
; 694  : 
; 695  : 					unsigned int
; 696  : 						outcode1,
; 697  : 						outcode2;
; 698  : 
; 699  : 					float
; 700  : 						x_minimum_offset,
; 701  : 						x_maximum_offset,
; 702  : 						y_minimum_offset,
; 703  : 						y_maximum_offset,
; 704  : 						z_minimum_offset,
; 705  : 						z_maximum_offset;
; 706  : 
; 707  : 					x_minimum_offset = current_sector_x_offset;

  00615	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  0061a	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _x_minimum_offset$45[ebp], xmm0

; 708  : 					x_maximum_offset = current_sector_x_offset + TERRAIN_3D_SECTOR_SIDE_LENGTH;

  00622	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  00627	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45000000
  0062f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _x_maximum_offset$44[ebp], xmm0

; 709  : 
; 710  : 					y_minimum_offset = ( float ) sector->minimum_height;

  00637	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  0063a	0f bf 48 06	 movsx	 ecx, WORD PTR [eax+6]
  0063e	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00642	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _y_minimum_offset$43[ebp], xmm0

; 711  : 					y_maximum_offset = ( float ) sector->maximum_height;

  0064a	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  0064d	0f bf 48 08	 movsx	 ecx, WORD PTR [eax+8]
  00651	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00655	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _y_maximum_offset$42[ebp], xmm0

; 712  : 
; 713  : 					z_minimum_offset = current_sector_z_offset;

  0065d	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  00662	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR _z_minimum_offset$41[ebp], xmm0

; 714  : 					z_maximum_offset = current_sector_z_offset + TERRAIN_3D_SECTOR_SIDE_LENGTH;

  0066a	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  0066f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45000000
  00677	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR _z_maximum_offset$40[ebp], xmm0

; 715  : 
; 716  : 					outcode_3d_terrain ( x_minimum_offset, x_maximum_offset, y_minimum_offset, y_maximum_offset, z_minimum_offset, z_maximum_offset, &outcode1, &outcode2 );

  0067f	8d 45 80	 lea	 eax, DWORD PTR _outcode2$46[ebp]
  00682	50		 push	 eax
  00683	8d 4d 84	 lea	 ecx, DWORD PTR _outcode1$47[ebp]
  00686	51		 push	 ecx
  00687	51		 push	 ecx
  00688	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _z_maximum_offset$40[ebp]
  00690	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00695	51		 push	 ecx
  00696	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_minimum_offset$41[ebp]
  0069e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a3	51		 push	 ecx
  006a4	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _y_maximum_offset$42[ebp]
  006ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b1	51		 push	 ecx
  006b2	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _y_minimum_offset$43[ebp]
  006ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006bf	51		 push	 ecx
  006c0	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _x_maximum_offset$44[ebp]
  006c8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006cd	51		 push	 ecx
  006ce	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _x_minimum_offset$45[ebp]
  006d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006db	e8 00 00 00 00	 call	 ?outcode_3d_terrain@@YGXMMMMMMPAI0@Z ; outcode_3d_terrain

; 717  : 
; 718  : 					if ( outcode2 == 0 )

  006e0	83 7d 80 00	 cmp	 DWORD PTR _outcode2$46[ebp], 0
  006e4	0f 85 89 06 00
	00		 jne	 $LN33@scan_3d_te

; 719  : 					{
; 720  : 
; 721  : 						scene_slot_drawing_list
; 722  : 							*sorting_slot;
; 723  : 
; 724  : 						float
; 725  : 							sector_range,
; 726  : 							biased_z;
; 727  : 
; 728  : 						if ( terrain_sectors[current_sector_z][current_sector_x].number_of_points )

  006ea	6b 45 f0 30	 imul	 eax, DWORD PTR _current_sector_x$[ebp], 48
  006ee	8b 4d ec	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  006f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  006f7	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  006fa	0f b7 14 01	 movzx	 edx, WORD PTR [ecx+eax]
  006fe	85 d2		 test	 edx, edx
  00700	0f 84 00 01 00
	00		 je	 $LN36@scan_3d_te

; 729  : 						{
; 730  : 
; 731  : 							//
; 732  : 							// Insert the actual terrain sector into the visual
; 733  : 							//
; 734  : 
; 735  : 							sector_range = sqrt (	( sector_relative_centre.x * sector_relative_centre.x ) +

  00706	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp]
  0070b	f3 0f 59 45 88	 mulss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp]
  00710	f3 0f 10 4d 8c	 movss	 xmm1, DWORD PTR _sector_relative_centre$48[ebp+4]
  00715	f3 0f 59 4d 8c	 mulss	 xmm1, DWORD PTR _sector_relative_centre$48[ebp+4]
  0071a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0071e	f3 0f 10 4d 90	 movss	 xmm1, DWORD PTR _sector_relative_centre$48[ebp+8]
  00723	f3 0f 59 4d 90	 mulss	 xmm1, DWORD PTR _sector_relative_centre$48[ebp+8]
  00728	f3 0f 58 c1	 addss	 xmm0, xmm1
  0072c	51		 push	 ecx
  0072d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00732	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00737	d9 9d 60 ff ff
	ff		 fstp	 DWORD PTR _sector_range$38[ebp]

; 736  : 															( sector_relative_centre.y * sector_relative_centre.y ) +
; 737  : 															( sector_relative_centre.z * sector_relative_centre.z ) );
; 738  : 
; 739  : 							biased_z = sector_relative_centre.z + ( TERRAIN_3D_SECTOR_SIDE_LENGTH * 4 );

  0073d	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp+8]
  00742	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@46000000
  0074a	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR _biased_z$37[ebp], xmm0

; 740  : 
; 741  : 							sorting_slot = get_3d_scene_slot ();

  00752	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  00757	89 85 64 ff ff
	ff		 mov	 DWORD PTR _sorting_slot$39[ebp], eax

; 742  : 
; 743  : 							if ( sorting_slot )

  0075d	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _sorting_slot$39[ebp], 0
  00764	0f 84 9c 00 00
	00		 je	 $LN36@scan_3d_te

; 744  : 							{
; 745  : 
; 746  : 								//
; 747  : 								// Use the integer representation of the float value
; 748  : 								//
; 749  : 
; 750  : 								if ( outcode1 == 0 )

  0076a	83 7d 84 00	 cmp	 DWORD PTR _outcode1$47[ebp], 0
  0076e	75 0f		 jne	 SHORT $LN37@scan_3d_te

; 751  : 								{
; 752  : 
; 753  : 									sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_UNCLIPPED_SECTOR;

  00770	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00776	c7 40 08 09 00
	00 00		 mov	 DWORD PTR [eax+8], 9
  0077d	eb 41		 jmp	 SHORT $LN42@scan_3d_te
$LN37@scan_3d_te:

; 754  : 								}
; 755  : 								else if ( outcode1 & ( CLIP_HITHER | CLIP_YONDER ) )

  0077f	8b 45 84	 mov	 eax, DWORD PTR _outcode1$47[ebp]
  00782	83 e0 30	 and	 eax, 48			; 00000030H
  00785	74 0f		 je	 SHORT $LN39@scan_3d_te

; 756  : 								{
; 757  : 
; 758  : 									sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_CLIPPED_SECTOR;

  00787	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  0078d	c7 40 08 07 00
	00 00		 mov	 DWORD PTR [eax+8], 7

; 759  : 								}
; 760  : 								else

  00794	eb 2a		 jmp	 SHORT $LN42@scan_3d_te
$LN39@scan_3d_te:

; 761  : 								{
; 762  : 
; 763  : 									if ( sector_relative_centre.z < TERRAIN_3D_SECTOR_SIDE_LENGTH )

  00796	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@45000000
  0079e	0f 2f 45 90	 comiss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp+8]
  007a2	76 0f		 jbe	 SHORT $LN41@scan_3d_te

; 764  : 									{
; 765  : 
; 766  : 										sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_CLIPPED_SECTOR;

  007a4	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007aa	c7 40 08 07 00
	00 00		 mov	 DWORD PTR [eax+8], 7

; 767  : 									}
; 768  : 									else

  007b1	eb 0d		 jmp	 SHORT $LN42@scan_3d_te
$LN41@scan_3d_te:

; 769  : 									{
; 770  : 
; 771  : 										sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_2D_CLIPPED_SECTOR;

  007b3	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007b9	c7 40 08 08 00
	00 00		 mov	 DWORD PTR [eax+8], 8
$LN42@scan_3d_te:

; 772  : 									}
; 773  : 								}
; 774  : 
; 775  : 								sorting_slot->z = *( ( int * ) &biased_z );

  007c0	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007c6	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _biased_z$37[ebp]
  007cc	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 776  : 
; 777  : 								sorting_slot->sector.range = sector_range;

  007cf	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007d5	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _sector_range$38[ebp]
  007dd	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 778  : 
; 779  : 								sorting_slot->sector.x = current_sector_x;

  007e2	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007e8	8b 4d f0	 mov	 ecx, DWORD PTR _current_sector_x$[ebp]
  007eb	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 780  : 
; 781  : 								sorting_slot->sector.z = current_sector_z;

  007ee	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  007f4	8b 4d ec	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  007f7	89 48 14	 mov	 DWORD PTR [eax+20], ecx

; 782  : 
; 783  : 								insert_low_zbuffered_scene_slot_into_3d_scene ( sorting_slot );

  007fa	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00800	50		 push	 eax
  00801	e8 00 00 00 00	 call	 ?insert_low_zbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_zbuffered_scene_slot_into_3d_scene
$LN36@scan_3d_te:

; 784  : 							}
; 785  : 						}
; 786  : 
; 787  : 						if (	( terrain_3d_tree_rendering_enabled ) &&
; 788  : 						//VJ 040206 for Craigmire: trun on trees in infrared!
; 789  : 								//( active_3d_environment->infrared_mode != INFRARED_ON ) &&
; 790  : 								( terrain_tree_sectors ) &&

  00806	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_3d_tree_rendering_enabled@@3HA, 0 ; terrain_3d_tree_rendering_enabled
  0080d	0f 84 5e 05 00
	00		 je	 $LN14@scan_3d_te
  00813	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A, 0 ; terrain_tree_sectors
  0081a	0f 84 51 05 00
	00		 je	 $LN14@scan_3d_te
  00820	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00823	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A ; terrain_tree_sectors
  00829	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0082c	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  0082f	83 3c c2 00	 cmp	 DWORD PTR [edx+eax*8], 0
  00833	0f 84 38 05 00
	00		 je	 $LN14@scan_3d_te

; 791  : 								( terrain_tree_sectors[current_sector_z][current_sector_x].number_of_trees ) )
; 792  : 						{
; 793  : 
; 794  : 							int
; 795  : 								tree_count;
; 796  : 
; 797  : 							terrain_3d_tree_data
; 798  : 								*trees;
; 799  : 
; 800  : 							terrain_3d_colour
; 801  : 								*colours;
; 802  : 
; 803  : 							//
; 804  : 							// Insert the trees within the sectors.
; 805  : 							//
; 806  : 
; 807  : 							trees = terrain_tree_sectors[current_sector_z][current_sector_x].trees;

  00839	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  0083c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A ; terrain_tree_sectors
  00842	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00845	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00848	8b 4c c2 04	 mov	 ecx, DWORD PTR [edx+eax*8+4]
  0084c	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _trees$35[ebp], ecx

; 808  : 
; 809  : 							colours = terrain_sectors[current_sector_z][current_sector_x].point_colours;

  00852	6b 45 f0 30	 imul	 eax, DWORD PTR _current_sector_x$[ebp], 48
  00856	8b 4d ec	 mov	 ecx, DWORD PTR _current_sector_z$[ebp]
  00859	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_sectors@@3PAPAUTERRAIN_3D_SECTOR@@A ; terrain_sectors
  0085f	8b 0c 8a	 mov	 ecx, DWORD PTR [edx+ecx*4]
  00862	8b 54 01 24	 mov	 edx, DWORD PTR [ecx+eax+36]
  00866	89 95 50 ff ff
	ff		 mov	 DWORD PTR _colours$34[ebp], edx

; 810  : 
; 811  : 							for ( tree_count = 0; tree_count < terrain_tree_sectors[current_sector_z][current_sector_x].number_of_trees; tree_count++ )

  0086c	c7 85 58 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _tree_count$36[ebp], 0
  00876	eb 0f		 jmp	 SHORT $LN15@scan_3d_te
$LN13@scan_3d_te:
  00878	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _tree_count$36[ebp]
  0087e	83 c0 01	 add	 eax, 1
  00881	89 85 58 ff ff
	ff		 mov	 DWORD PTR _tree_count$36[ebp], eax
$LN15@scan_3d_te:
  00887	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  0088a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_tree_sectors@@3PAPAUTERRAIN_3D_TREE_SECTOR@@A ; terrain_tree_sectors
  00890	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00893	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00896	8b 8d 58 ff ff
	ff		 mov	 ecx, DWORD PTR _tree_count$36[ebp]
  0089c	3b 0c c2	 cmp	 ecx, DWORD PTR [edx+eax*8]
  0089f	0f 8d cc 04 00
	00		 jge	 $LN14@scan_3d_te

; 812  : 							{
; 813  : 
; 814  : 								float
; 815  : 									x,
; 816  : 									y,
; 817  : 									z,
; 818  : 									dx,
; 819  : 									dy,
; 820  : 									dz,
; 821  : 									range;
; 822  : 
; 823  : 								x = sector_centre.x;

  008a5	f3 0f 10 45 94	 movss	 xmm0, DWORD PTR _sector_centre$49[ebp]
  008aa	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _x$33[ebp], xmm0

; 824  : 								z = sector_centre.z;

  008b2	f3 0f 10 45 9c	 movss	 xmm0, DWORD PTR _sector_centre$49[ebp+8]
  008b7	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _z$31[ebp], xmm0

; 825  : 
; 826  : 								x += trees->x * TERRAIN_3D_XZ_SCALE / 2;

  008bf	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  008c5	0f bf 08	 movsx	 ecx, WORD PTR [eax]
  008c8	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  008cc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb0000000000000
  008d4	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  008dc	f3 0f 5a 8d 4c
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _x$33[ebp]
  008e4	f2 0f 58 c8	 addsd	 xmm1, xmm0
  008e8	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  008ec	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR _x$33[ebp], xmm0

; 827  : 								z += trees->z * TERRAIN_3D_XZ_SCALE / 2;

  008f4	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  008fa	0f bf 48 02	 movsx	 ecx, WORD PTR [eax+2]
  008fe	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00902	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb0000000000000
  0090a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00912	f3 0f 5a 8d 44
	ff ff ff	 cvtss2sd xmm1, DWORD PTR _z$31[ebp]
  0091a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0091e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00922	f3 0f 11 85 44
	ff ff ff	 movss	 DWORD PTR _z$31[ebp], xmm0

; 828  : 								y = trees->y * terrain_3d_map_scaled_height_difference / 2 + terrain_3d_map_minimum_height;

  0092a	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00930	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00934	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00938	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?terrain_3d_map_scaled_height_difference@@3MA
  00940	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@40000000
  00948	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?terrain_3d_map_minimum_height@@3MA
  00950	f3 0f 11 85 48
	ff ff ff	 movss	 DWORD PTR _y$32[ebp], xmm0

; 829  : 
; 830  : 								dx = x - visual_3d_vp->x;

  00958	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  0095d	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$33[ebp]
  00965	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00969	f3 0f 11 85 40
	ff ff ff	 movss	 DWORD PTR _dx$30[ebp], xmm0

; 831  : 								dy = y - visual_3d_vp->y;

  00971	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00976	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _y$32[ebp]
  0097e	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00983	f3 0f 11 85 3c
	ff ff ff	 movss	 DWORD PTR _dy$29[ebp], xmm0

; 832  : 								dz = z - visual_3d_vp->z;

  0098b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00990	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _z$31[ebp]
  00998	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  0099d	f3 0f 11 85 38
	ff ff ff	 movss	 DWORD PTR _dz$28[ebp], xmm0

; 833  : 
; 834  : 								range = ( ( dx * dx ) + ( dy * dy ) + ( dz * dz ) );

  009a5	f3 0f 10 85 40
	ff ff ff	 movss	 xmm0, DWORD PTR _dx$30[ebp]
  009ad	f3 0f 59 85 40
	ff ff ff	 mulss	 xmm0, DWORD PTR _dx$30[ebp]
  009b5	f3 0f 10 8d 3c
	ff ff ff	 movss	 xmm1, DWORD PTR _dy$29[ebp]
  009bd	f3 0f 59 8d 3c
	ff ff ff	 mulss	 xmm1, DWORD PTR _dy$29[ebp]
  009c5	f3 0f 58 c1	 addss	 xmm0, xmm1
  009c9	f3 0f 10 8d 38
	ff ff ff	 movss	 xmm1, DWORD PTR _dz$28[ebp]
  009d1	f3 0f 59 8d 38
	ff ff ff	 mulss	 xmm1, DWORD PTR _dz$28[ebp]
  009d9	f3 0f 58 c1	 addss	 xmm0, xmm1
  009dd	f3 0f 11 85 34
	ff ff ff	 movss	 DWORD PTR _range$27[ebp], xmm0

; 835  : 
; 836  : 								if ( trees->type )

  009e5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  009eb	8a 48 07	 mov	 cl, BYTE PTR [eax+7]
  009ee	c0 e9 07	 shr	 cl, 7
  009f1	80 e1 01	 and	 cl, 1
  009f4	0f b6 d1	 movzx	 edx, cl
  009f7	85 d2		 test	 edx, edx
  009f9	0f 84 00 02 00
	00		 je	 $LN44@scan_3d_te

; 837  : 								{
; 838  : 
; 839  : 									if ( range < ( 4000 * 4000 ) )

  009ff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@4b742400
  00a07	0f 2f 85 34 ff
	ff ff		 comiss	 xmm0, DWORD PTR _range$27[ebp]
  00a0e	0f 86 e6 01 00
	00		 jbe	 $LN47@scan_3d_te

; 840  : 									{
; 841  : 
; 842  : 										sorting_slot = get_3d_scene_slot ();

  00a14	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  00a19	89 85 64 ff ff
	ff		 mov	 DWORD PTR _sorting_slot$39[ebp], eax

; 843  : 
; 844  : 										if ( sorting_slot )

  00a1f	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _sorting_slot$39[ebp], 0
  00a26	0f 84 ce 01 00
	00		 je	 $LN47@scan_3d_te

; 845  : 										{
; 846  : 
; 847  : 											float
; 848  : 												scale;
; 849  : 
; 850  : 											float
; 851  : 												sq_range;
; 852  : 
; 853  : 											scale = get_terrain_3d_tree_scale ( trees );

  00a2c	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00a32	50		 push	 eax
  00a33	e8 00 00 00 00	 call	 ?get_terrain_3d_tree_scale@@YGMPAUTERRAIN_3D_TREE_DATA@@@Z ; get_terrain_3d_tree_scale
  00a38	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR _scale$26[ebp]

; 854  : 
; 855  : 											sq_range = range;

  00a3e	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _range$27[ebp]
  00a46	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR _sq_range$25[ebp], xmm0

; 856  : 
; 857  : 											range = sqrt ( range );

  00a4e	51		 push	 ecx
  00a4f	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _range$27[ebp]
  00a57	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a5c	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00a61	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR _range$27[ebp]

; 858  : 
; 859  : 											sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_TREE_OBJECT;

  00a67	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00a6d	c7 40 08 0d 00
	00 00		 mov	 DWORD PTR [eax+8], 13	; 0000000dH

; 860  : 											sorting_slot->z = *( ( int * ) &range );

  00a74	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00a7a	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _range$27[ebp]
  00a80	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 861  : 											sorting_slot->terrain_tree.dissolve = 255.0 * (int)max(0, (1 - (3 - (int)max(3000, (int)range) / 1000) * (3 - (int)max(3000, (int)range) / 1000))); // trees dissolve begin to decrease at 3000m thealx 130501 //255.0 - ( ( sq_range / ( 4000.0 * 4000.0 ) ) * 255.0 );

  00a83	f3 0f 2c 85 34
	ff ff ff	 cvttss2si eax, DWORD PTR _range$27[ebp]
  00a8b	89 85 a0 fe ff
	ff		 mov	 DWORD PTR $T6[ebp], eax
  00a91	c7 85 9c fe ff
	ff b8 0b 00 00	 mov	 DWORD PTR $T5[ebp], 3000 ; 00000bb8H
  00a9b	f3 0f 2c 8d 34
	ff ff ff	 cvttss2si ecx, DWORD PTR _range$27[ebp]
  00aa3	89 8d 98 fe ff
	ff		 mov	 DWORD PTR $T4[ebp], ecx
  00aa9	c7 85 94 fe ff
	ff b8 0b 00 00	 mov	 DWORD PTR $T3[ebp], 3000 ; 00000bb8H
  00ab3	8d 95 a0 fe ff
	ff		 lea	 edx, DWORD PTR $T6[ebp]
  00ab9	52		 push	 edx
  00aba	8d 85 9c fe ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  00ac0	50		 push	 eax
  00ac1	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00ac6	8b 00		 mov	 eax, DWORD PTR [eax]
  00ac8	99		 cdq
  00ac9	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00ace	f7 f9		 idiv	 ecx
  00ad0	be 03 00 00 00	 mov	 esi, 3
  00ad5	2b f0		 sub	 esi, eax
  00ad7	8d 95 98 fe ff
	ff		 lea	 edx, DWORD PTR $T4[ebp]
  00add	52		 push	 edx
  00ade	8d 85 94 fe ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00ae4	50		 push	 eax
  00ae5	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00aea	8b 00		 mov	 eax, DWORD PTR [eax]
  00aec	99		 cdq
  00aed	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  00af2	f7 f9		 idiv	 ecx
  00af4	ba 03 00 00 00	 mov	 edx, 3
  00af9	2b d0		 sub	 edx, eax
  00afb	0f af f2	 imul	 esi, edx
  00afe	b8 01 00 00 00	 mov	 eax, 1
  00b03	2b c6		 sub	 eax, esi
  00b05	89 85 a4 fe ff
	ff		 mov	 DWORD PTR $T7[ebp], eax
  00b0b	c7 85 90 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], 0
  00b15	8d 8d a4 fe ff
	ff		 lea	 ecx, DWORD PTR $T7[ebp]
  00b1b	51		 push	 ecx
  00b1c	8d 95 90 fe ff
	ff		 lea	 edx, DWORD PTR $T2[ebp]
  00b22	52		 push	 edx
  00b23	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00b28	f2 0f 2a 00	 cvtsi2sd xmm0, DWORD PTR [eax]
  00b2c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  00b34	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00b38	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00b3e	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 862  : 											sorting_slot->terrain_tree.x = x;

  00b43	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00b49	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$33[ebp]
  00b51	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 863  : 											sorting_slot->terrain_tree.y = y;

  00b56	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00b5c	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _y$32[ebp]
  00b64	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 864  : 											sorting_slot->terrain_tree.z = z;

  00b69	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00b6f	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _z$31[ebp]
  00b77	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 865  : 											sorting_slot->terrain_tree.scale = scale;

  00b7c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00b82	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR _scale$26[ebp]
  00b8a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 866  : 											sorting_slot->terrain_tree.colour.red = colours[trees->colour].red;

  00b8f	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00b95	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00b99	6b d1 03	 imul	 edx, ecx, 3
  00b9c	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00ba2	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00ba8	8a 14 11	 mov	 dl, BYTE PTR [ecx+edx]
  00bab	88 50 26	 mov	 BYTE PTR [eax+38], dl

; 867  : 											sorting_slot->terrain_tree.colour.green = colours[trees->colour].green;

  00bae	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00bb4	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00bb8	6b d1 03	 imul	 edx, ecx, 3
  00bbb	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00bc1	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00bc7	8a 54 11 01	 mov	 dl, BYTE PTR [ecx+edx+1]
  00bcb	88 50 25	 mov	 BYTE PTR [eax+37], dl

; 868  : 											sorting_slot->terrain_tree.colour.blue = colours[trees->colour].blue;

  00bce	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00bd4	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00bd8	6b d1 03	 imul	 edx, ecx, 3
  00bdb	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00be1	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00be7	8a 54 11 02	 mov	 dl, BYTE PTR [ecx+edx+2]
  00beb	88 50 24	 mov	 BYTE PTR [eax+36], dl

; 869  : 
; 870  : 											insert_low_nonzbuffered_scene_slot_into_3d_scene ( sorting_slot );

  00bee	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00bf4	50		 push	 eax
  00bf5	e8 00 00 00 00	 call	 ?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_nonzbuffered_scene_slot_into_3d_scene
$LN47@scan_3d_te:

; 871  : 										}
; 872  : 									}
; 873  : 								}
; 874  : 								else

  00bfa	e9 5e 01 00 00	 jmp	 $LN49@scan_3d_te
$LN44@scan_3d_te:

; 875  : 								{
; 876  : 
; 877  : 									if ( range < ( 1000 * 1000 ) )

  00bff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@49742400
  00c07	0f 2f 85 34 ff
	ff ff		 comiss	 xmm0, DWORD PTR _range$27[ebp]
  00c0e	0f 86 49 01 00
	00		 jbe	 $LN49@scan_3d_te

; 878  : 									{
; 879  : 
; 880  : 										sorting_slot = get_3d_scene_slot ();

  00c14	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  00c19	89 85 64 ff ff
	ff		 mov	 DWORD PTR _sorting_slot$39[ebp], eax

; 881  : 
; 882  : 										if ( sorting_slot )

  00c1f	83 bd 64 ff ff
	ff 00		 cmp	 DWORD PTR _sorting_slot$39[ebp], 0
  00c26	0f 84 31 01 00
	00		 je	 $LN49@scan_3d_te

; 883  : 										{
; 884  : 
; 885  : 											float
; 886  : 												scale;
; 887  : 
; 888  : 											scale = get_terrain_3d_tree_scale ( trees );

  00c2c	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00c32	50		 push	 eax
  00c33	e8 00 00 00 00	 call	 ?get_terrain_3d_tree_scale@@YGMPAUTERRAIN_3D_TREE_DATA@@@Z ; get_terrain_3d_tree_scale
  00c38	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR _scale$24[ebp]

; 889  : 
; 890  : 											range = sqrt ( range );

  00c3e	51		 push	 ecx
  00c3f	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR _range$27[ebp]
  00c47	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c4c	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00c51	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR _range$27[ebp]

; 891  : 
; 892  : 											sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_TREE_OBJECT;

  00c57	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00c5d	c7 40 08 0d 00
	00 00		 mov	 DWORD PTR [eax+8], 13	; 0000000dH

; 893  : 											sorting_slot->z = *( ( int * ) &range );

  00c64	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00c6a	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR _range$27[ebp]
  00c70	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 894  : 											sorting_slot->terrain_tree.dissolve = 255.0 - ( ( range / 1000.0 ) * 255.0 );

  00c73	f3 0f 5a 85 34
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _range$27[ebp]
  00c7b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@408f400000000000
  00c83	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@406fe00000000000
  00c8b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@406fe00000000000
  00c93	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00c97	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00c9b	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00ca1	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 895  : 											sorting_slot->terrain_tree.x = x;

  00ca6	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00cac	f3 0f 10 85 4c
	ff ff ff	 movss	 xmm0, DWORD PTR _x$33[ebp]
  00cb4	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 896  : 											sorting_slot->terrain_tree.y = y;

  00cb9	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00cbf	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _y$32[ebp]
  00cc7	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 897  : 											sorting_slot->terrain_tree.z = z;

  00ccc	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00cd2	f3 0f 10 85 44
	ff ff ff	 movss	 xmm0, DWORD PTR _z$31[ebp]
  00cda	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 898  : 											sorting_slot->terrain_tree.scale = scale;

  00cdf	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00ce5	f3 0f 10 85 28
	ff ff ff	 movss	 xmm0, DWORD PTR _scale$24[ebp]
  00ced	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 899  : 											sorting_slot->terrain_tree.colour.red = colours[trees->colour].red;

  00cf2	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00cf8	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00cfc	6b d1 03	 imul	 edx, ecx, 3
  00cff	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00d05	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00d0b	8a 14 11	 mov	 dl, BYTE PTR [ecx+edx]
  00d0e	88 50 26	 mov	 BYTE PTR [eax+38], dl

; 900  : 											sorting_slot->terrain_tree.colour.green = colours[trees->colour].green;

  00d11	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00d17	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00d1b	6b d1 03	 imul	 edx, ecx, 3
  00d1e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00d24	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00d2a	8a 54 11 01	 mov	 dl, BYTE PTR [ecx+edx+1]
  00d2e	88 50 25	 mov	 BYTE PTR [eax+37], dl

; 901  : 											sorting_slot->terrain_tree.colour.blue = colours[trees->colour].blue;

  00d31	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00d37	0f b6 48 06	 movzx	 ecx, BYTE PTR [eax+6]
  00d3b	6b d1 03	 imul	 edx, ecx, 3
  00d3e	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00d44	8b 8d 50 ff ff
	ff		 mov	 ecx, DWORD PTR _colours$34[ebp]
  00d4a	8a 54 11 02	 mov	 dl, BYTE PTR [ecx+edx+2]
  00d4e	88 50 24	 mov	 BYTE PTR [eax+36], dl

; 902  : 
; 903  : 											insert_low_nonzbuffered_scene_slot_into_3d_scene ( sorting_slot );

  00d51	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$39[ebp]
  00d57	50		 push	 eax
  00d58	e8 00 00 00 00	 call	 ?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_nonzbuffered_scene_slot_into_3d_scene
$LN49@scan_3d_te:

; 904  : 										}
; 905  : 									}
; 906  : 								}
; 907  : 
; 908  : 								trees++;

  00d5d	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _trees$35[ebp]
  00d63	83 c0 08	 add	 eax, 8
  00d66	89 85 54 ff ff
	ff		 mov	 DWORD PTR _trees$35[ebp], eax

; 909  : 							}

  00d6c	e9 07 fb ff ff	 jmp	 $LN13@scan_3d_te
$LN14@scan_3d_te:

; 910  : 						}
; 911  : 
; 912  : 					}
; 913  : 					else

  00d71	eb 0d		 jmp	 SHORT $LN34@scan_3d_te
$LN33@scan_3d_te:

; 914  : 					{
; 915  : 
; 916  : 						terrain_3d_sectors_complex_culled++;

  00d73	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sectors_complex_culled@@3HA ; terrain_3d_sectors_complex_culled
  00d78	83 c0 01	 add	 eax, 1
  00d7b	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sectors_complex_culled@@3HA, eax ; terrain_3d_sectors_complex_culled
$LN34@scan_3d_te:

; 917  : 					}
; 918  : 
; 919  : 					// Casm 20MAY12 Cloud puffs
; 920  : 					if ( terrain_cloud_puff_sectors && terrain_cloud_puff_sectors[current_sector_z][current_sector_x].number_of_cloud_puffs )

  00d80	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_cloud_puff_sectors@@3PAPAUTERRAIN_3D_CLOUD_PUFF_SECTOR@@A, 0 ; terrain_cloud_puff_sectors
  00d87	0f 84 76 03 00
	00		 je	 $LN17@scan_3d_te
  00d8d	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00d90	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_cloud_puff_sectors@@3PAPAUTERRAIN_3D_CLOUD_PUFF_SECTOR@@A ; terrain_cloud_puff_sectors
  00d96	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00d99	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00d9c	83 3c c2 00	 cmp	 DWORD PTR [edx+eax*8], 0
  00da0	0f 84 5d 03 00
	00		 je	 $LN17@scan_3d_te

; 921  : 					{
; 922  : 						unsigned
; 923  : 							outcode2;
; 924  : 
; 925  : 						y_minimum_offset += TERRAIN_3D_CLOUD_Y_CENTER_MIN - TERRAIN_3D_CLOUD_Y_DIFF;

  00da6	f3 0f 5a 85 74
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y_minimum_offset$43[ebp]
  00dae	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4079000000000000
  00db6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00dba	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR _y_minimum_offset$43[ebp], xmm0

; 926  : 						y_maximum_offset += TERRAIN_3D_CLOUD_Y_CENTER_MAX + TERRAIN_3D_CLOUD_Y_DIFF;

  00dc2	f3 0f 5a 85 70
	ff ff ff	 cvtss2sd xmm0, DWORD PTR _y_maximum_offset$42[ebp]
  00dca	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40a0680000000000
  00dd2	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00dd6	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR _y_maximum_offset$42[ebp], xmm0

; 927  : 
; 928  : 						outcode_3d_terrain ( x_minimum_offset, x_maximum_offset, y_minimum_offset, y_maximum_offset, z_minimum_offset, z_maximum_offset, NULL, &outcode2 );

  00dde	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _outcode2$23[ebp]
  00de4	50		 push	 eax
  00de5	6a 00		 push	 0
  00de7	51		 push	 ecx
  00de8	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _z_maximum_offset$40[ebp]
  00df0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00df5	51		 push	 ecx
  00df6	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _z_minimum_offset$41[ebp]
  00dfe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e03	51		 push	 ecx
  00e04	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _y_maximum_offset$42[ebp]
  00e0c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e11	51		 push	 ecx
  00e12	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _y_minimum_offset$43[ebp]
  00e1a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e1f	51		 push	 ecx
  00e20	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR _x_maximum_offset$44[ebp]
  00e28	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e2d	51		 push	 ecx
  00e2e	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR _x_minimum_offset$45[ebp]
  00e36	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e3b	e8 00 00 00 00	 call	 ?outcode_3d_terrain@@YGXMMMMMMPAI0@Z ; outcode_3d_terrain

; 929  : 
; 930  : 						if ( outcode2 == 0 )

  00e40	83 bd 24 ff ff
	ff 00		 cmp	 DWORD PTR _outcode2$23[ebp], 0
  00e47	0f 85 b6 02 00
	00		 jne	 $LN17@scan_3d_te

; 931  : 						{
; 932  : 							scene_slot_drawing_list
; 933  : 								*sorting_slot;
; 934  : 							int
; 935  : 								cloud_puff_count;
; 936  : 
; 937  : 							terrain_3d_cloud_puff_data
; 938  : 								*cloud_puffs;
; 939  : 
; 940  : 							cloud_puffs = terrain_cloud_puff_sectors[current_sector_z][current_sector_x].cloud_puffs;

  00e4d	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00e50	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_cloud_puff_sectors@@3PAPAUTERRAIN_3D_CLOUD_PUFF_SECTOR@@A ; terrain_cloud_puff_sectors
  00e56	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00e59	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00e5c	8b 4c c2 04	 mov	 ecx, DWORD PTR [edx+eax*8+4]
  00e60	89 8d 18 ff ff
	ff		 mov	 DWORD PTR _cloud_puffs$20[ebp], ecx

; 941  : 
; 942  : 							for ( cloud_puff_count = 0; cloud_puff_count < terrain_cloud_puff_sectors[current_sector_z][current_sector_x].number_of_cloud_puffs; cloud_puff_count++ )

  00e66	c7 85 1c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _cloud_puff_count$21[ebp], 0
  00e70	eb 0f		 jmp	 SHORT $LN18@scan_3d_te
$LN16@scan_3d_te:
  00e72	8b 85 1c ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puff_count$21[ebp]
  00e78	83 c0 01	 add	 eax, 1
  00e7b	89 85 1c ff ff
	ff		 mov	 DWORD PTR _cloud_puff_count$21[ebp], eax
$LN18@scan_3d_te:
  00e81	8b 45 ec	 mov	 eax, DWORD PTR _current_sector_z$[ebp]
  00e84	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?terrain_cloud_puff_sectors@@3PAPAUTERRAIN_3D_CLOUD_PUFF_SECTOR@@A ; terrain_cloud_puff_sectors
  00e8a	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00e8d	8b 45 f0	 mov	 eax, DWORD PTR _current_sector_x$[ebp]
  00e90	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR _cloud_puff_count$21[ebp]
  00e96	3b 0c c2	 cmp	 ecx, DWORD PTR [edx+eax*8]
  00e99	0f 8d 64 02 00
	00		 jge	 $LN17@scan_3d_te

; 943  : 							{
; 944  : 								float
; 945  : 									x,
; 946  : 									y,
; 947  : 									z,
; 948  : 									dx,
; 949  : 									dy,
; 950  : 									dz,
; 951  : 									test_range,
; 952  : 									range;
; 953  : 
; 954  : 								x = cloud_puffs->x;

  00e9f	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  00ea5	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00ea9	f3 0f 11 85 14
	ff ff ff	 movss	 DWORD PTR _x$19[ebp], xmm0

; 955  : 								y = cloud_puffs->y;

  00eb1	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  00eb7	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00ebc	f3 0f 11 85 10
	ff ff ff	 movss	 DWORD PTR _y$18[ebp], xmm0

; 956  : 								z = cloud_puffs->z;

  00ec4	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  00eca	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00ecf	f3 0f 11 85 0c
	ff ff ff	 movss	 DWORD PTR _z$17[ebp], xmm0

; 957  : 
; 958  : 								dx = x - visual_3d_vp->x;

  00ed7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00edc	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _x$19[ebp]
  00ee4	f3 0f 5c 00	 subss	 xmm0, DWORD PTR [eax]
  00ee8	f3 0f 11 85 08
	ff ff ff	 movss	 DWORD PTR _dx$16[ebp], xmm0

; 959  : 								dy = y - visual_3d_vp->y;

  00ef0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00ef5	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _y$18[ebp]
  00efd	f3 0f 5c 40 04	 subss	 xmm0, DWORD PTR [eax+4]
  00f02	f3 0f 11 85 04
	ff ff ff	 movss	 DWORD PTR _dy$15[ebp], xmm0

; 960  : 								dz = z - visual_3d_vp->z;

  00f0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?visual_3d_vp@@3PAUVIEWPOINT@@A ; visual_3d_vp
  00f0f	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR _z$17[ebp]
  00f17	f3 0f 5c 40 08	 subss	 xmm0, DWORD PTR [eax+8]
  00f1c	f3 0f 11 85 00
	ff ff ff	 movss	 DWORD PTR _dz$14[ebp], xmm0

; 961  : 
; 962  : 								range = ( ( dx * dx ) + ( dy * dy ) + ( dz * dz ) );

  00f24	f3 0f 10 85 08
	ff ff ff	 movss	 xmm0, DWORD PTR _dx$16[ebp]
  00f2c	f3 0f 59 85 08
	ff ff ff	 mulss	 xmm0, DWORD PTR _dx$16[ebp]
  00f34	f3 0f 10 8d 04
	ff ff ff	 movss	 xmm1, DWORD PTR _dy$15[ebp]
  00f3c	f3 0f 59 8d 04
	ff ff ff	 mulss	 xmm1, DWORD PTR _dy$15[ebp]
  00f44	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f48	f3 0f 10 8d 00
	ff ff ff	 movss	 xmm1, DWORD PTR _dz$14[ebp]
  00f50	f3 0f 59 8d 00
	ff ff ff	 mulss	 xmm1, DWORD PTR _dz$14[ebp]
  00f58	f3 0f 58 c1	 addss	 xmm0, xmm1
  00f5c	f3 0f 11 85 f8
	fe ff ff	 movss	 DWORD PTR _range$12[ebp], xmm0

; 963  : 
; 964  : 								test_range = 4000.0 + 400.0 * min ( cloud_puffs->scale, 10.0f );

  00f64	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00f6c	f3 0f 11 85 8c
	fe ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00f74	8d 85 8c fe ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00f7a	50		 push	 eax
  00f7b	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _cloud_puffs$20[ebp]
  00f81	83 c1 10	 add	 ecx, 16			; 00000010H
  00f84	51		 push	 ecx
  00f85	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00f8a	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00f8e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4079000000000000
  00f96	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40af400000000000
  00f9e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00fa2	f3 0f 11 85 fc
	fe ff ff	 movss	 DWORD PTR _test_range$13[ebp], xmm0

; 965  : 
; 966  : 								if ( range < test_range * test_range )

  00faa	f3 0f 10 85 fc
	fe ff ff	 movss	 xmm0, DWORD PTR _test_range$13[ebp]
  00fb2	f3 0f 59 85 fc
	fe ff ff	 mulss	 xmm0, DWORD PTR _test_range$13[ebp]
  00fba	0f 2f 85 f8 fe
	ff ff		 comiss	 xmm0, DWORD PTR _range$12[ebp]
  00fc1	0f 86 28 01 00
	00		 jbe	 $LN53@scan_3d_te

; 967  : 								{
; 968  : 									sorting_slot = get_3d_scene_slot ();

  00fc7	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  00fcc	89 85 20 ff ff
	ff		 mov	 DWORD PTR _sorting_slot$22[ebp], eax

; 969  : 
; 970  : 									if ( sorting_slot )

  00fd2	83 bd 20 ff ff
	ff 00		 cmp	 DWORD PTR _sorting_slot$22[ebp], 0
  00fd9	0f 84 10 01 00
	00		 je	 $LN53@scan_3d_te

; 971  : 									{
; 972  : 										range = sqrt ( range );

  00fdf	51		 push	 ecx
  00fe0	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _range$12[ebp]
  00fe8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fed	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  00ff2	d9 9d f8 fe ff
	ff		 fstp	 DWORD PTR _range$12[ebp]

; 973  : 
; 974  : 										sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_CLOUD_PUFF_OBJECT;

  00ff8	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  00ffe	c7 40 08 0e 00
	00 00		 mov	 DWORD PTR [eax+8], 14	; 0000000eH

; 975  : 										sorting_slot->z = *( ( int * ) &range );

  01005	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  0100b	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _range$12[ebp]
  01011	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 976  : 										sorting_slot->terrain_cloud_puff.dissolve = ( 1.0 - range / test_range ) * 255.0;

  01014	f3 0f 10 85 f8
	fe ff ff	 movss	 xmm0, DWORD PTR _range$12[ebp]
  0101c	f3 0f 5e 85 fc
	fe ff ff	 divss	 xmm0, DWORD PTR _test_range$13[ebp]
  01024	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  01028	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  01030	f2 0f 5c c8	 subsd	 xmm1, xmm0
  01034	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@406fe00000000000
  0103c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  01040	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  01046	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 977  : 										sorting_slot->terrain_cloud_puff.x = x;

  0104b	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  01051	f3 0f 10 85 14
	ff ff ff	 movss	 xmm0, DWORD PTR _x$19[ebp]
  01059	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 978  : 										sorting_slot->terrain_cloud_puff.y = y;

  0105e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  01064	f3 0f 10 85 10
	ff ff ff	 movss	 xmm0, DWORD PTR _y$18[ebp]
  0106c	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 979  : 										sorting_slot->terrain_cloud_puff.z = z;

  01071	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  01077	f3 0f 10 85 0c
	ff ff ff	 movss	 xmm0, DWORD PTR _z$17[ebp]
  0107f	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 980  : 										get_3d_transformation_matrix ( sorting_slot->terrain_cloud_puff.attitude, cloud_puffs->heading, 0, 0 );

  01084	51		 push	 ecx
  01085	0f 57 c0	 xorps	 xmm0, xmm0
  01088	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0108d	51		 push	 ecx
  0108e	0f 57 c0	 xorps	 xmm0, xmm0
  01091	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01096	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  0109c	51		 push	 ecx
  0109d	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  010a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  010a7	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _sorting_slot$22[ebp]
  010ad	83 c1 24	 add	 ecx, 36			; 00000024H
  010b0	51		 push	 ecx
  010b1	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 981  : 										sorting_slot->terrain_cloud_puff.scale = cloud_puffs->scale;

  010b6	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  010bc	8b 8d 18 ff ff
	ff		 mov	 ecx, DWORD PTR _cloud_puffs$20[ebp]
  010c2	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  010c5	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 982  : 										sorting_slot->terrain_cloud_puff.colour = terrain_3d_cloud_puff_colours[cloud_puffs->colour];

  010c8	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  010ce	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  010d1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?terrain_3d_cloud_puff_colours@@3PAUREAL_COLOUR@@A ; terrain_3d_cloud_puff_colours
  010d7	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  010da	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _sorting_slot$22[ebp]
  010e0	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 983  : 
; 984  : 										insert_low_nonzbuffered_scene_slot_into_3d_scene ( sorting_slot );

  010e3	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$22[ebp]
  010e9	50		 push	 eax
  010ea	e8 00 00 00 00	 call	 ?insert_low_nonzbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_nonzbuffered_scene_slot_into_3d_scene
$LN53@scan_3d_te:

; 985  : 									}
; 986  : 								}
; 987  : 
; 988  : 								cloud_puffs++;

  010ef	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR _cloud_puffs$20[ebp]
  010f5	83 c0 18	 add	 eax, 24			; 00000018H
  010f8	89 85 18 ff ff
	ff		 mov	 DWORD PTR _cloud_puffs$20[ebp], eax

; 989  : 							}

  010fe	e9 6f fd ff ff	 jmp	 $LN16@scan_3d_te
$LN17@scan_3d_te:

; 990  : 						}
; 991  : 					}
; 992  : 				}
; 993  : 			}
; 994  : 
; 995  : 			if ( ( sector->objects ) && ( terrain_object_rendering_enabled ) )

  01103	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  01106	83 78 2c 00	 cmp	 DWORD PTR [eax+44], 0
  0110a	0f 84 c9 00 00
	00		 je	 $LN20@scan_3d_te
  01110	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?terrain_object_rendering_enabled@@3HA, 0 ; terrain_object_rendering_enabled
  01117	0f 84 bc 00 00
	00		 je	 $LN20@scan_3d_te

; 996  : 			{
; 997  : 
; 998  : 				terrain_3d_object
; 999  : 					*object;
; 1000 : 
; 1001 : 				scene_slot_drawing_list
; 1002 : 					*sorting_slot;
; 1003 : 
; 1004 : 				object = sector->objects;

  0111d	8b 45 d8	 mov	 eax, DWORD PTR _sector$[ebp]
  01120	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01123	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _object$11[ebp], ecx
$LN19@scan_3d_te:

; 1005 : 
; 1006 : 				while ( object )

  01129	83 bd f4 fe ff
	ff 00		 cmp	 DWORD PTR _object$11[ebp], 0
  01130	0f 84 a3 00 00
	00		 je	 $LN20@scan_3d_te

; 1007 : 				{
; 1008 : 
; 1009 : 					enum OBJECT_3D_VISIBILITY
; 1010 : 						visibility;
; 1011 : 
; 1012 : 					set_object_3d_instance_relative_position ( object->object );

  01136	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _object$11[ebp]
  0113c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0113f	51		 push	 ecx
  01140	e8 00 00 00 00	 call	 ?set_object_3d_instance_relative_position@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; set_object_3d_instance_relative_position

; 1013 : 
; 1014 : 					visibility = get_object_3d_instance_visibility ( object->object );

  01145	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _object$11[ebp]
  0114b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0114e	51		 push	 ecx
  0114f	e8 00 00 00 00	 call	 ?get_object_3d_instance_visibility@@YG?AW4OBJECT_3D_VISIBILITY@@PAUOBJECT_3D_INSTANCE@@@Z ; get_object_3d_instance_visibility
  01154	89 85 ec fe ff
	ff		 mov	 DWORD PTR _visibility$9[ebp], eax

; 1015 : 
; 1016 : 					if ( visibility != OBJECT_3D_NOT_VISIBLE )

  0115a	83 bd ec fe ff
	ff 03		 cmp	 DWORD PTR _visibility$9[ebp], 3
  01161	74 63		 je	 SHORT $LN56@scan_3d_te

; 1017 : 					{
; 1018 : 
; 1019 : 						sorting_slot = get_3d_scene_slot ();

  01163	e8 00 00 00 00	 call	 ?get_3d_scene_slot@@YGPAUSCENE_SLOT_DRAWING_LIST@@XZ ; get_3d_scene_slot
  01168	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _sorting_slot$10[ebp], eax

; 1020 : 
; 1021 : 						if ( sorting_slot )

  0116e	83 bd f0 fe ff
	ff 00		 cmp	 DWORD PTR _sorting_slot$10[ebp], 0
  01175	74 4f		 je	 SHORT $LN56@scan_3d_te

; 1022 : 						{
; 1023 : 
; 1024 : 							float
; 1025 : 								biased_z;
; 1026 : 
; 1027 : 							biased_z = sector_relative_centre.z + ( TERRAIN_3D_SECTOR_SIDE_LENGTH * 2 );

  01177	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR _sector_relative_centre$48[ebp+8]
  0117c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45800000
  01184	f3 0f 11 85 e8
	fe ff ff	 movss	 DWORD PTR _biased_z$8[ebp], xmm0

; 1028 : 
; 1029 : 							sorting_slot->type = OBJECT_3D_DRAW_TYPE_TERRAIN_3D_OBJECT;

  0118c	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$10[ebp]
  01192	c7 40 08 06 00
	00 00		 mov	 DWORD PTR [eax+8], 6

; 1030 : 
; 1031 : 							sorting_slot->z = *( ( int * ) &biased_z );

  01199	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$10[ebp]
  0119f	8b 8d e8 fe ff
	ff		 mov	 ecx, DWORD PTR _biased_z$8[ebp]
  011a5	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1032 : 
; 1033 : 							sorting_slot->object = object->object;

  011a8	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$10[ebp]
  011ae	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR _object$11[ebp]
  011b4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  011b7	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 1034 : 
; 1035 : 							insert_low_zbuffered_scene_slot_into_3d_scene ( sorting_slot );

  011ba	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _sorting_slot$10[ebp]
  011c0	50		 push	 eax
  011c1	e8 00 00 00 00	 call	 ?insert_low_zbuffered_scene_slot_into_3d_scene@@YGXPAUSCENE_SLOT_DRAWING_LIST@@@Z ; insert_low_zbuffered_scene_slot_into_3d_scene
$LN56@scan_3d_te:

; 1036 : 						}
; 1037 : 					}
; 1038 : 
; 1039 : 					object = object->next_object;

  011c6	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR _object$11[ebp]
  011cc	8b 08		 mov	 ecx, DWORD PTR [eax]
  011ce	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _object$11[ebp], ecx

; 1040 : 				}

  011d4	e9 50 ff ff ff	 jmp	 $LN19@scan_3d_te
$LN20@scan_3d_te:

; 1041 : 			}
; 1042 : 
; 1043 : 			current_sector_x_offset += TERRAIN_3D_SECTOR_SIDE_LENGTH;

  011d9	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _current_sector_x_offset$[ebp]
  011de	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45000000
  011e6	f3 0f 11 45 cc	 movss	 DWORD PTR _current_sector_x_offset$[ebp], xmm0

; 1044 : 		}

  011eb	e9 4b f2 ff ff	 jmp	 $LN10@scan_3d_te
$LN11@scan_3d_te:

; 1045 : 
; 1046 : 		current_sector_z_offset += TERRAIN_3D_SECTOR_SIDE_LENGTH;

  011f0	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _current_sector_z_offset$[ebp]
  011f5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@45000000
  011fd	f3 0f 11 45 c8	 movss	 DWORD PTR _current_sector_z_offset$[ebp], xmm0

; 1047 : 	}

  01202	e9 0d f2 ff ff	 jmp	 $LN7@scan_3d_te
$LN8@scan_3d_te:

; 1048 : }

  01207	5f		 pop	 edi
  01208	5e		 pop	 esi
  01209	5b		 pop	 ebx
  0120a	8b e5		 mov	 esp, ebp
  0120c	5d		 pop	 ebp
  0120d	c3		 ret	 0
?scan_3d_terrain@@YGXXZ ENDP				; scan_3d_terrain
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?initialise_3d_terrain_normals@@YGXXZ
_TEXT	SEGMENT
_m$ = -56						; size = 36
_count$ = -20						; size = 4
_int_pitch$ = -16					; size = 4
_int_heading$ = -12					; size = 4
_pitch$ = -8						; size = 4
_heading$ = -4						; size = 4
?initialise_3d_terrain_normals@@YGXXZ PROC		; initialise_3d_terrain_normals, COMDAT

; 347  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 348  : 
; 349  : 	float
; 350  : 		heading,
; 351  : 		pitch;
; 352  : 
; 353  : 	int
; 354  : 		int_heading,
; 355  : 		int_pitch,
; 356  : 		count;
; 357  : 
; 358  : 	matrix3x3
; 359  : 		m;
; 360  : 
; 361  : 	count = 0;

  00009	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0

; 362  : 
; 363  : 	for ( int_pitch = 0; int_pitch < 90; int_pitch += 9 )

  00010	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _int_pitch$[ebp], 0
  00017	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00019	8b 45 f0	 mov	 eax, DWORD PTR _int_pitch$[ebp]
  0001c	83 c0 09	 add	 eax, 9
  0001f	89 45 f0	 mov	 DWORD PTR _int_pitch$[ebp], eax
$LN4@initialise:
  00022	83 7d f0 5a	 cmp	 DWORD PTR _int_pitch$[ebp], 90 ; 0000005aH
  00026	0f 8d fd 00 00
	00		 jge	 $LN3@initialise

; 364  : 	{
; 365  : 
; 366  : 		pitch = ( ( ( float ) int_pitch ) / 90.0 ) * ( PI / 2 );

  0002c	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _int_pitch$[ebp]
  00031	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00035	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4056800000000000
  0003d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb60000000
  00045	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00049	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 367  : 
; 368  : 		for ( int_heading = 0; int_heading < 360; int_heading += 15 )

  0004e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _int_heading$[ebp], 0
  00055	eb 09		 jmp	 SHORT $LN7@initialise
$LN5@initialise:
  00057	8b 45 f4	 mov	 eax, DWORD PTR _int_heading$[ebp]
  0005a	83 c0 0f	 add	 eax, 15			; 0000000fH
  0005d	89 45 f4	 mov	 DWORD PTR _int_heading$[ebp], eax
$LN7@initialise:
  00060	81 7d f4 68 01
	00 00		 cmp	 DWORD PTR _int_heading$[ebp], 360 ; 00000168H
  00067	0f 8d b7 00 00
	00		 jge	 $LN6@initialise

; 369  : 		{
; 370  : 
; 371  : 			heading = ( ( ( float ) int_heading ) / 360.0 ) * ( PI * 2 );

  0006d	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _int_heading$[ebp]
  00072	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00076	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4076800000000000
  0007e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@401921fb60000000
  00086	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008a	f3 0f 11 45 fc	 movss	 DWORD PTR _heading$[ebp], xmm0

; 372  : 
; 373  : 			get_3d_transformation_matrix ( m, heading, pitch, 0 );

  0008f	51		 push	 ecx
  00090	0f 57 c0	 xorps	 xmm0, xmm0
  00093	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00098	51		 push	 ecx
  00099	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0009e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a3	51		 push	 ecx
  000a4	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  000a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ae	8d 45 c8	 lea	 eax, DWORD PTR _m$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 374  : 
; 375  : 			terrain_3d_point_normals[count].x = m[2][0];

  000b7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000bc	d1 e0		 shl	 eax, 1
  000be	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  000c2	ba 04 00 00 00	 mov	 edx, 4
  000c7	6b c2 00	 imul	 eax, edx, 0
  000ca	6b 55 ec 0c	 imul	 edx, DWORD PTR _count$[ebp], 12
  000ce	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  000d1	89 82 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[edx], eax

; 376  : 			terrain_3d_point_normals[count].y = m[2][1];

  000d7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000dc	d1 e0		 shl	 eax, 1
  000de	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  000e2	ba 04 00 00 00	 mov	 edx, 4
  000e7	c1 e2 00	 shl	 edx, 0
  000ea	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  000ee	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  000f1	89 88 04 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+4], ecx

; 377  : 			terrain_3d_point_normals[count].z = m[2][2];

  000f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fc	d1 e0		 shl	 eax, 1
  000fe	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00102	ba 04 00 00 00	 mov	 edx, 4
  00107	d1 e2		 shl	 edx, 1
  00109	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  0010d	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  00110	89 88 08 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+8], ecx

; 378  : 
; 379  : 			count++;

  00116	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00119	83 c0 01	 add	 eax, 1
  0011c	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 380  : 		}

  0011f	e9 33 ff ff ff	 jmp	 $LN5@initialise
$LN6@initialise:

; 381  : 	}

  00124	e9 f0 fe ff ff	 jmp	 $LN2@initialise
$LN3@initialise:

; 382  : 
; 383  : 	get_3d_transformation_matrix ( m, 0, ( PI / 2 ), 0 );

  00129	51		 push	 ecx
  0012a	0f 57 c0	 xorps	 xmm0, xmm0
  0012d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00132	51		 push	 ecx
  00133	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fc90fdb
  0013b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00140	51		 push	 ecx
  00141	0f 57 c0	 xorps	 xmm0, xmm0
  00144	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00149	8d 45 c8	 lea	 eax, DWORD PTR _m$[ebp]
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 384  : 
; 385  : 	terrain_3d_point_normals[count].x = m[2][0];

  00152	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00157	d1 e0		 shl	 eax, 1
  00159	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0015d	ba 04 00 00 00	 mov	 edx, 4
  00162	6b c2 00	 imul	 eax, edx, 0
  00165	6b 55 ec 0c	 imul	 edx, DWORD PTR _count$[ebp], 12
  00169	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0016c	89 82 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[edx], eax

; 386  : 	terrain_3d_point_normals[count].y = m[2][1];

  00172	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00177	d1 e0		 shl	 eax, 1
  00179	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0017d	ba 04 00 00 00	 mov	 edx, 4
  00182	c1 e2 00	 shl	 edx, 0
  00185	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00189	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0018c	89 88 04 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+4], ecx

; 387  : 	terrain_3d_point_normals[count].z = m[2][2];

  00192	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00197	d1 e0		 shl	 eax, 1
  00199	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0019d	ba 04 00 00 00	 mov	 edx, 4
  001a2	d1 e2		 shl	 edx, 1
  001a4	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  001a8	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  001ab	89 88 08 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+8], ecx

; 388  : 
; 389  : 	count++;

  001b1	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  001b4	83 c0 01	 add	 eax, 1
  001b7	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 390  : 
; 391  : 	int_pitch = -45;

  001ba	c7 45 f0 d3 ff
	ff ff		 mov	 DWORD PTR _int_pitch$[ebp], -45 ; ffffffd3H

; 392  : 
; 393  : 	pitch = ( ( ( float ) int_pitch ) / 90.0 ) * ( PI / 2 );

  001c1	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _int_pitch$[ebp]
  001c6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001ca	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4056800000000000
  001d2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff921fb60000000
  001da	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001de	f3 0f 11 45 f8	 movss	 DWORD PTR _pitch$[ebp], xmm0

; 394  : 
; 395  : 	for ( int_heading = 0; int_heading < 360; int_heading += 30 )

  001e3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _int_heading$[ebp], 0
  001ea	eb 09		 jmp	 SHORT $LN10@initialise
$LN8@initialise:
  001ec	8b 45 f4	 mov	 eax, DWORD PTR _int_heading$[ebp]
  001ef	83 c0 1e	 add	 eax, 30			; 0000001eH
  001f2	89 45 f4	 mov	 DWORD PTR _int_heading$[ebp], eax
$LN10@initialise:
  001f5	81 7d f4 68 01
	00 00		 cmp	 DWORD PTR _int_heading$[ebp], 360 ; 00000168H
  001fc	0f 8d b7 00 00
	00		 jge	 $LN9@initialise

; 396  : 	{
; 397  : 
; 398  : 		heading = ( ( ( float ) int_heading ) / 360.0 ) * ( PI * 2 );

  00202	f3 0f 2a 45 f4	 cvtsi2ss xmm0, DWORD PTR _int_heading$[ebp]
  00207	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0020b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4076800000000000
  00213	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@401921fb60000000
  0021b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0021f	f3 0f 11 45 fc	 movss	 DWORD PTR _heading$[ebp], xmm0

; 399  : 
; 400  : 		get_3d_transformation_matrix ( m, heading, pitch, 0 );

  00224	51		 push	 ecx
  00225	0f 57 c0	 xorps	 xmm0, xmm0
  00228	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022d	51		 push	 ecx
  0022e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00233	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00238	51		 push	 ecx
  00239	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0023e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00243	8d 45 c8	 lea	 eax, DWORD PTR _m$[ebp]
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 401  : 
; 402  : 		terrain_3d_point_normals[count].x = m[2][0];

  0024c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00251	d1 e0		 shl	 eax, 1
  00253	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00257	ba 04 00 00 00	 mov	 edx, 4
  0025c	6b c2 00	 imul	 eax, edx, 0
  0025f	6b 55 ec 0c	 imul	 edx, DWORD PTR _count$[ebp], 12
  00263	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00266	89 82 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[edx], eax

; 403  : 		terrain_3d_point_normals[count].y = m[2][1];

  0026c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00271	d1 e0		 shl	 eax, 1
  00273	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00277	ba 04 00 00 00	 mov	 edx, 4
  0027c	c1 e2 00	 shl	 edx, 0
  0027f	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00283	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  00286	89 88 04 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+4], ecx

; 404  : 		terrain_3d_point_normals[count].z = m[2][2];

  0028c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00291	d1 e0		 shl	 eax, 1
  00293	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  00297	ba 04 00 00 00	 mov	 edx, 4
  0029c	d1 e2		 shl	 edx, 1
  0029e	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  002a2	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  002a5	89 88 08 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+8], ecx

; 405  : 
; 406  : 		count++;

  002ab	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  002ae	83 c0 01	 add	 eax, 1
  002b1	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 407  : 	}

  002b4	e9 33 ff ff ff	 jmp	 $LN8@initialise
$LN9@initialise:

; 408  : 
; 409  : 	get_3d_transformation_matrix ( m, 0, ( -PI / 2 ), 0 );

  002b9	51		 push	 ecx
  002ba	0f 57 c0	 xorps	 xmm0, xmm0
  002bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c2	51		 push	 ecx
  002c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bfc90fdb
  002cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d0	51		 push	 ecx
  002d1	0f 57 c0	 xorps	 xmm0, xmm0
  002d4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002d9	8d 45 c8	 lea	 eax, DWORD PTR _m$[ebp]
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 410  : 
; 411  : 	terrain_3d_point_normals[count].x = m[2][0];

  002e2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002e7	d1 e0		 shl	 eax, 1
  002e9	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  002ed	ba 04 00 00 00	 mov	 edx, 4
  002f2	6b c2 00	 imul	 eax, edx, 0
  002f5	6b 55 ec 0c	 imul	 edx, DWORD PTR _count$[ebp], 12
  002f9	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  002fc	89 82 00 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[edx], eax

; 412  : 	terrain_3d_point_normals[count].y = m[2][1];

  00302	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00307	d1 e0		 shl	 eax, 1
  00309	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0030d	ba 04 00 00 00	 mov	 edx, 4
  00312	c1 e2 00	 shl	 edx, 0
  00315	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00319	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0031c	89 88 04 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+4], ecx

; 413  : 	terrain_3d_point_normals[count].z = m[2][2];

  00322	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00327	d1 e0		 shl	 eax, 1
  00329	8d 4c 05 c8	 lea	 ecx, DWORD PTR _m$[ebp+eax]
  0032d	ba 04 00 00 00	 mov	 edx, 4
  00332	d1 e2		 shl	 edx, 1
  00334	6b 45 ec 0c	 imul	 eax, DWORD PTR _count$[ebp], 12
  00338	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0033b	89 88 08 00 00
	00		 mov	 DWORD PTR ?terrain_3d_point_normals@@3PAUVEC3D@@A[eax+8], ecx

; 414  : 
; 415  : 	count++;

  00341	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00344	83 c0 01	 add	 eax, 1
  00347	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 416  : 
; 417  : 	number_of_terrain_3d_point_normals = count;

  0034a	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  0034d	a3 00 00 00 00	 mov	 DWORD PTR ?number_of_terrain_3d_point_normals@@3HA, eax ; number_of_terrain_3d_point_normals

; 418  : }

  00352	5f		 pop	 edi
  00353	5e		 pop	 esi
  00354	5b		 pop	 ebx
  00355	8b e5		 mov	 esp, ebp
  00357	5d		 pop	 ebp
  00358	c3		 ret	 0
?initialise_3d_terrain_normals@@YGXXZ ENDP		; initialise_3d_terrain_normals
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?get_terrain_3d_sector_scan_radius@@YGHXZ
_TEXT	SEGMENT
?get_terrain_3d_sector_scan_radius@@YGHXZ PROC		; get_terrain_3d_sector_scan_radius, COMDAT

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 288  : 
; 289  : 	return ( terrain_3d_sector_scan_radius );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?terrain_3d_sector_scan_radius@@3HA

; 290  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_terrain_3d_sector_scan_radius@@YGHXZ ENDP		; get_terrain_3d_sector_scan_radius
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\terrain\terrgeom.c
;	COMDAT ?set_terrain_3d_sector_scan_radius@@YGXH@Z
_TEXT	SEGMENT
_radius$ = 8						; size = 4
?set_terrain_3d_sector_scan_radius@@YGXH@Z PROC		; set_terrain_3d_sector_scan_radius, COMDAT

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 266  : 
; 267  : 	if ( radius > 20 )

  00009	83 7d 08 14	 cmp	 DWORD PTR _radius$[ebp], 20 ; 00000014H
  0000d	7e 11		 jle	 SHORT $LN2@set_terrai

; 268  : 	{
; 269  : 
; 270  : 		debug_fatal ( "Unable to set sector scan radius above 7. Tried to set to %d", radius );

  0000f	8b 45 08	 mov	 eax, DWORD PTR _radius$[ebp]
  00012	50		 push	 eax
  00013	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@LKGIAPGJ@Unable?5to?5set?5sector?5scan?5radiu@
  00018	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0001d	83 c4 08	 add	 esp, 8
$LN2@set_terrai:

; 271  : 	}
; 272  : 
; 273  : 	if ( radius < 0 )

  00020	83 7d 08 00	 cmp	 DWORD PTR _radius$[ebp], 0
  00024	7d 11		 jge	 SHORT $LN3@set_terrai

; 274  : 	{
; 275  : 
; 276  : 		debug_fatal ( "Unable to set sector scan radius below 1. Tried to set to %d", radius );

  00026	8b 45 08	 mov	 eax, DWORD PTR _radius$[ebp]
  00029	50		 push	 eax
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0DN@JNACGOFF@Unable?5to?5set?5sector?5scan?5radiu@
  0002f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00034	83 c4 08	 add	 esp, 8
$LN3@set_terrai:

; 277  : 	}
; 278  : 
; 279  : 	terrain_3d_sector_scan_radius = radius;

  00037	8b 45 08	 mov	 eax, DWORD PTR _radius$[ebp]
  0003a	a3 00 00 00 00	 mov	 DWORD PTR ?terrain_3d_sector_scan_radius@@3HA, eax

; 280  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
?set_terrain_3d_sector_scan_radius@@YGXH@Z ENDP		; set_terrain_3d_sector_scan_radius
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\graphics\viewport.h
;	COMDAT ?generate_lookup_outcode@@YGHHHHH@Z
_TEXT	SEGMENT
_xmin$ = 8						; size = 4
_ymin$ = 12						; size = 4
_xmax$ = 16						; size = 4
_ymax$ = 20						; size = 4
?generate_lookup_outcode@@YGHHHHH@Z PROC		; generate_lookup_outcode, COMDAT

; 199  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 200  : 
; 201  : 	__asm mov eax, xmin;

  00009	8b 45 08	 mov	 eax, DWORD PTR _xmin$[ebp]
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _ymin$[ebp]
  0000f	8b 4d 10	 mov	 ecx, DWORD PTR _xmax$[ebp]
  00012	8b 55 14	 mov	 edx, DWORD PTR _ymax$[ebp]
  00015	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00018	81 e3 00 00 00
	80		 and	 ebx, -2147483648	; 80000000H
  0001e	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  00021	81 e2 00 00 00
	80		 and	 edx, -2147483648	; 80000000H
  00027	c1 eb 1e	 shr	 ebx, 30			; 0000001eH
  0002a	83 e0 01	 and	 eax, 1
  0002d	c1 ea 1c	 shr	 edx, 28			; 0000001cH
  00030	83 e1 04	 and	 ecx, 4
  00033	0b c3		 or	 eax, ebx
  00035	0b ca		 or	 ecx, edx
  00037	0b c1		 or	 eax, ecx
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 10 00	 ret	 16			; 00000010H
?generate_lookup_outcode@@YGHHHHH@Z ENDP		; generate_lookup_outcode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
END
