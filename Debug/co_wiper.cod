; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A	; pilot_wiped_rain_texture_screen
PUBLIC	?co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A ; co_pilot_wiped_rain_texture_screen
PUBLIC	?wiper_on@@3HA					; wiper_on
PUBLIC	?pilot_wiper@@3HA				; pilot_wiper
PUBLIC	?co_pilot_wiper@@3HA				; co_pilot_wiper
PUBLIC	?pilot_wipe_type@@3W4WIPE_TYPES@@A		; pilot_wipe_type
PUBLIC	?co_pilot_wipe_type@@3W4WIPE_TYPES@@A		; co_pilot_wipe_type
PUBLIC	?wiper_mode@@3W4WIPER_MODES@@A			; wiper_mode
PUBLIC	?wiper_position@@3MA				; wiper_position
PUBLIC	?rain_mode@@3W4RAIN_MODES@@A			; rain_mode
_BSS	SEGMENT
?pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; pilot_wiped_rain_texture_screen
?co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; co_pilot_wiped_rain_texture_screen
?wiper_on@@3HA DD 01H DUP (?)				; wiper_on
?pilot_wiper@@3HA DD 01H DUP (?)			; pilot_wiper
?co_pilot_wiper@@3HA DD 01H DUP (?)			; co_pilot_wiper
?pilot_wipe_type@@3W4WIPE_TYPES@@A DD 01H DUP (?)	; pilot_wipe_type
?co_pilot_wipe_type@@3W4WIPE_TYPES@@A DD 01H DUP (?)	; co_pilot_wipe_type
?wiper_mode@@3W4WIPER_MODES@@A DD 01H DUP (?)		; wiper_mode
?wiper_position@@3MA DD 01H DUP (?)			; wiper_position
?rain_mode@@3W4RAIN_MODES@@A DD 01H DUP (?)		; rain_mode
_BSS	ENDS
PUBLIC	?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; initialise_common_virtual_cockpit_wiper_and_rain_effect
PUBLIC	?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; deinitialise_common_virtual_cockpit_wiper_and_rain_effect
PUBLIC	?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ; update_common_virtual_cockpit_wiper_and_rain_effect
PUBLIC	?toggle_wiper_on@@YGXXZ				; toggle_wiper_on
PUBLIC	?toggle_intermittent_wipe@@YGXXZ		; toggle_intermittent_wipe
PUBLIC	??_C@_0BI@GHNGLMLL@Invalid?5wiper?5mode?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA ; `get_rain_fall_type'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0BK@GFBEMEAC@Invalid?5weather?5mode?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??clear_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA ; `clear_full_rain_effect'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@GHICIFDI@composite_rain_texture_screen@ ; `string'
PUBLIC	?__LINE__Var@?0??clear_rain_effect@@YGXPAUSCREEN@@@Z@4JA ; `clear_rain_effect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??apply_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA ; `apply_full_rain_effect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??apply_rain_effect@@YGXPAUSCREEN@@HH@Z@4JA ; `apply_rain_effect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA ; `wipe_rain_effect'::`1'::__LINE__Var
PUBLIC	??_C@_0BK@CCGBNJFO@wiped_rain_texture_screen@	; `string'
PUBLIC	??_C@_0CE@DCFPGGLP@composite_wiped_rain_texture_sc@ ; `string'
PUBLIC	??_C@_0BO@EAAKDAJP@wipe_type?5?$CB?$DN?5WIPE_TYPE_BLOWER@ ; `string'
PUBLIC	??_C@_0BC@PDLHLBFJ@WIPE_TYPE_INVALID@		; `string'
PUBLIC	__real@405fff5c28f5c28f
PUBLIC	__real@4099000000000000
PUBLIC	__real@40a00000
PUBLIC	__real@42700000
PUBLIC	__real@42fffae1
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z:PROC ; create_system_texture_screen
EXTRN	?create_screen_for_system_texture@@YGPAUSCREEN@@H@Z:PROC ; create_screen_for_system_texture
EXTRN	?destroy_screen@@YGHPAUSCREEN@@@Z:PROC		; destroy_screen
EXTRN	?get_screen_pixel_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_pixel_width
EXTRN	?get_screen_rgba_masks@@YGXPAUSCREEN@@PAI111@Z:PROC ; get_screen_rgba_masks
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?get_screen_data@@YGPAEPAUSCREEN@@@Z:PROC	; get_screen_data
EXTRN	?get_screen_pitch@@YGHPAUSCREEN@@@Z:PROC	; get_screen_pitch
EXTRN	?blit_screens@@YGXPAUSCREEN@@0HHHHHHHH@Z:PROC	; blit_screens
EXTRN	?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z:PROC ; flush_screen_texture_graphics
EXTRN	?get_position_in_clouds@@YGHM@Z:PROC		; get_position_in_clouds
EXTRN	?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z:PROC ; get_simple_session_weather_at_point
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?d3d_modulate_alpha@@3HA:DWORD			; d3d_modulate_alpha
EXTRN	?command_line_cpu_blit_textures@@3HA:DWORD	; command_line_cpu_blit_textures
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?)	; rain_texture_screen
?composite_rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; composite_rain_texture_screen
?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; composite_pilot_wiped_rain_texture_screen
?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A DD 01H DUP (?) ; composite_co_pilot_wiped_rain_texture_screen
?wipe_interval@@3MA DD 01H DUP (?)			; wipe_interval
?wipe_delay@@3MA DD 01H DUP (?)				; wipe_delay
?rain_timer@@3MA DD 01H DUP (?)				; rain_timer
?intermittent_wipe@@3HA DD 01H DUP (?)			; intermittent_wipe
?wiper_pos1@@3HA DD 01H DUP (?)				; wiper_pos1
?wiper_pos2@@3HA DD 01H DUP (?)				; wiper_pos2
?rain_fall_type@@3W4RAIN_FALL_TYPES@@A DD 01H DUP (?)	; rain_fall_type
?rain_textures_enabled@@3HA DD 01H DUP (?)		; rain_textures_enabled
_BSS	ENDS
;	COMDAT __real@42fffae1
CONST	SEGMENT
__real@42fffae1 DD 042fffae1r			; 127.99
CONST	ENDS
;	COMDAT __real@42700000
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@4099000000000000
CONST	SEGMENT
__real@4099000000000000 DQ 04099000000000000r	; 1600
CONST	ENDS
;	COMDAT __real@405fff5c28f5c28f
CONST	SEGMENT
__real@405fff5c28f5c28f DQ 0405fff5c28f5c28fr	; 127.99
CONST	ENDS
;	COMDAT ??_C@_0BC@PDLHLBFJ@WIPE_TYPE_INVALID@
CONST	SEGMENT
??_C@_0BC@PDLHLBFJ@WIPE_TYPE_INVALID@ DB 'WIPE_TYPE_INVALID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@EAAKDAJP@wipe_type?5?$CB?$DN?5WIPE_TYPE_BLOWER@
CONST	SEGMENT
??_C@_0BO@EAAKDAJP@wipe_type?5?$CB?$DN?5WIPE_TYPE_BLOWER@ DB 'wipe_type !'
	DB	'= WIPE_TYPE_BLOWER', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DCFPGGLP@composite_wiped_rain_texture_sc@
CONST	SEGMENT
??_C@_0CE@DCFPGGLP@composite_wiped_rain_texture_sc@ DB 'composite_wiped_r'
	DB	'ain_texture_screen', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CCGBNJFO@wiped_rain_texture_screen@
CONST	SEGMENT
??_C@_0BK@CCGBNJFO@wiped_rain_texture_screen@ DB 'wiped_rain_texture_scre'
	DB	'en', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA DD 0400H ; `wipe_rain_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??apply_rain_effect@@YGXPAUSCREEN@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??apply_rain_effect@@YGXPAUSCREEN@@HH@Z@4JA DD 0351H ; `apply_rain_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??apply_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??apply_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA DD 0310H ; `apply_full_rain_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??clear_rain_effect@@YGXPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clear_rain_effect@@YGXPAUSCREEN@@@Z@4JA DD 02d6H ; `clear_rain_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
CONST	SEGMENT
??_C@_0BO@GHICIFDI@composite_rain_texture_screen@ DB 'composite_rain_text'
	DB	'ure_screen', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??clear_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??clear_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA DD 02acH ; `clear_full_rain_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BK@GFBEMEAC@Invalid?5weather?5mode?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BK@GFBEMEAC@Invalid?5weather?5mode?5?$DN?5?$CFd@ DB 'Invalid weath'
	DB	'er mode = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@ DB 'get_gunship_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\cockpits\common\co_'
	DB	'wiper.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA DD 024eH ; `get_rain_fall_type'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BI@GHNGLMLL@Invalid?5wiper?5mode?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BI@GHNGLMLL@Invalid?5wiper?5mode?5?$DN?5?$CFd@ DB 'Invalid wiper m'
	DB	'ode = %d', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z
_TEXT	SEGMENT
tv133 = -160						; size = 4
_a_mask$ = -92						; size = 4
_b_mask$ = -88						; size = 4
_g_mask$ = -84						; size = 4
_r_mask$ = -80						; size = 4
_dst_add_on$ = -76					; size = 4
_src_add_on$ = -72					; size = 4
_texture_pixel_width$ = -68				; size = 4
_dx$ = -64						; size = 4
_y2$ = -60						; size = 4
_x2$ = -56						; size = 4
_y1$ = -52						; size = 4
_x1$ = -48						; size = 4
_y$ = -44						; size = 4
_x$ = -40						; size = 4
_pos3$ = -36						; size = 4
_pos2$ = -32						; size = 4
_pos1$ = -28						; size = 4
_composite_wiped_rain_texture_screen_pitch$ = -24	; size = 4
_wiped_rain_texture_screen_pitch$ = -20			; size = 4
_dst$ = -16						; size = 4
_src$ = -12						; size = 4
_composite_wiped_rain_texture_screen_data$ = -8		; size = 4
_wiped_rain_texture_screen_data$ = -4			; size = 4
_wiped_rain_texture_screen$ = 8				; size = 4
_composite_wiped_rain_texture_screen$ = 12		; size = 4
_wipe_type$ = 16					; size = 4
?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z PROC	; wipe_rain_effect, COMDAT

; 1024 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1025 : 	unsigned char
; 1026 : 		*wiped_rain_texture_screen_data,
; 1027 : 		*composite_wiped_rain_texture_screen_data,
; 1028 : 		*src,
; 1029 : 		*dst;
; 1030 : 
; 1031 : 	int
; 1032 : 		wiped_rain_texture_screen_pitch,
; 1033 : 		composite_wiped_rain_texture_screen_pitch,
; 1034 : 		pos1,
; 1035 : 		pos2,
; 1036 : 		pos3,
; 1037 : 		x,
; 1038 : 		y,
; 1039 : 		x1,
; 1040 : 		y1,
; 1041 : 		x2,
; 1042 : 		y2,
; 1043 : 		dx,
; 1044 : 		texture_pixel_width,
; 1045 : 		src_add_on,
; 1046 : 		dst_add_on;
; 1047 : 
; 1048 : 	unsigned int
; 1049 : 		r_mask,
; 1050 : 		g_mask,
; 1051 : 		b_mask,
; 1052 : 		a_mask;
; 1053 : 
; 1054 : 	ASSERT (wiped_rain_texture_screen);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _wiped_rain_texture_screen$[ebp], 0
  00010	75 18		 jne	 SHORT $LN16@wipe_rain_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA
  00017	83 c0 1e	 add	 eax, 30			; 0000001eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CCGBNJFO@wiped_rain_texture_screen@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN16@wipe_rain_:

; 1055 : 
; 1056 : 	ASSERT (composite_wiped_rain_texture_screen);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _composite_wiped_rain_texture_screen$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN17@wipe_rain_
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA
  00035	83 c0 20	 add	 eax, 32			; 00000020H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DCFPGGLP@composite_wiped_rain_texture_sc@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@wipe_rain_:

; 1057 : 
; 1058 : 	ASSERT (wipe_type != WIPE_TYPE_BLOWER);

  00048	83 7d 10 05	 cmp	 DWORD PTR _wipe_type$[ebp], 5
  0004c	75 18		 jne	 SHORT $LN18@wipe_rain_
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z@4JA
  00053	83 c0 22	 add	 eax, 34			; 00000022H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@EAAKDAJP@wipe_type?5?$CB?$DN?5WIPE_TYPE_BLOWER@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN18@wipe_rain_:

; 1059 : 
; 1060 : 	if (wiper_mode != WIPER_MODE_STOWED)

  00066	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 0 ; wiper_mode
  0006d	0f 84 2b 03 00
	00		 je	 $LN1@wipe_rain_

; 1061 : 	{
; 1062 : 		texture_pixel_width = get_screen_pixel_width (composite_wiped_rain_texture_screen);

  00073	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?get_screen_pixel_width@@YGHPAUSCREEN@@@Z ; get_screen_pixel_width
  0007c	89 45 bc	 mov	 DWORD PTR _texture_pixel_width$[ebp], eax

; 1063 : 
; 1064 : 		get_screen_rgba_masks (composite_wiped_rain_texture_screen, &r_mask, &g_mask, &b_mask, &a_mask);

  0007f	8d 45 a4	 lea	 eax, DWORD PTR _a_mask$[ebp]
  00082	50		 push	 eax
  00083	8d 4d a8	 lea	 ecx, DWORD PTR _b_mask$[ebp]
  00086	51		 push	 ecx
  00087	8d 55 ac	 lea	 edx, DWORD PTR _g_mask$[ebp]
  0008a	52		 push	 edx
  0008b	8d 45 b0	 lea	 eax, DWORD PTR _r_mask$[ebp]
  0008e	50		 push	 eax
  0008f	8b 4d 0c	 mov	 ecx, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  00092	51		 push	 ecx
  00093	e8 00 00 00 00	 call	 ?get_screen_rgba_masks@@YGXPAUSCREEN@@PAI111@Z ; get_screen_rgba_masks

; 1065 : 
; 1066 : 		if (lock_screen (wiped_rain_texture_screen))

  00098	8b 45 08	 mov	 eax, DWORD PTR _wiped_rain_texture_screen$[ebp]
  0009b	50		 push	 eax
  0009c	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  000a1	85 c0		 test	 eax, eax
  000a3	0f 84 f5 02 00
	00		 je	 $LN1@wipe_rain_

; 1067 : 		{
; 1068 : 			wiped_rain_texture_screen_data = get_screen_data (wiped_rain_texture_screen);

  000a9	8b 45 08	 mov	 eax, DWORD PTR _wiped_rain_texture_screen$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  000b2	89 45 fc	 mov	 DWORD PTR _wiped_rain_texture_screen_data$[ebp], eax

; 1069 : 			wiped_rain_texture_screen_pitch = get_screen_pitch (wiped_rain_texture_screen);

  000b5	8b 45 08	 mov	 eax, DWORD PTR _wiped_rain_texture_screen$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  000be	89 45 ec	 mov	 DWORD PTR _wiped_rain_texture_screen_pitch$[ebp], eax

; 1070 : 
; 1071 : 			if (lock_screen (composite_wiped_rain_texture_screen))

  000c1	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  000ca	85 c0		 test	 eax, eax
  000cc	0f 84 c3 02 00
	00		 je	 $LN21@wipe_rain_

; 1072 : 			{
; 1073 : 				composite_wiped_rain_texture_screen_data = get_screen_data (composite_wiped_rain_texture_screen);

  000d2	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  000db	89 45 f8	 mov	 DWORD PTR _composite_wiped_rain_texture_screen_data$[ebp], eax

; 1074 : 				composite_wiped_rain_texture_screen_pitch = get_screen_pitch (composite_wiped_rain_texture_screen);

  000de	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  000e7	89 45 e8	 mov	 DWORD PTR _composite_wiped_rain_texture_screen_pitch$[ebp], eax

; 1075 : 
; 1076 : 				switch (wipe_type)

  000ea	8b 45 10	 mov	 eax, DWORD PTR _wipe_type$[ebp]
  000ed	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv133[ebp], eax
  000f3	83 bd 60 ff ff
	ff 04		 cmp	 DWORD PTR tv133[ebp], 4
  000fa	0f 87 53 01 00
	00		 ja	 $LN2@wipe_rain_
  00100	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv133[ebp]
  00106	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN36@wipe_rain_[ecx*4]
$LN22@wipe_rain_:

; 1077 : 				{
; 1078 : 					////////////////////////////////////////
; 1079 : 					case WIPE_TYPE_INVALID:
; 1080 : 					////////////////////////////////////////
; 1081 : 					{
; 1082 : 						debug_fatal ("WIPE_TYPE_INVALID");

  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PDLHLBFJ@WIPE_TYPE_INVALID@
  00112	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00117	83 c4 04	 add	 esp, 4

; 1083 : 
; 1084 : 						break;

  0011a	e9 34 01 00 00	 jmp	 $LN2@wipe_rain_
$LN23@wipe_rain_:

; 1085 : 					}
; 1086 : 					////////////////////////////////////////
; 1087 : 					case WIPE_TYPE_LEFT_THEN_RIGHT:
; 1088 : 					////////////////////////////////////////
; 1089 : 					{
; 1090 : 						pos1 = RAIN_TEXTURE_SIZE - 1 - wiper_pos1;

  0011f	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  00124	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?wiper_pos1@@3HA
  0012a	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1091 : 						pos2 = RAIN_TEXTURE_SIZE - 1 - wiper_pos2;

  0012d	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  00132	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?wiper_pos2@@3HA
  00138	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax

; 1092 : 
; 1093 : 						if (pos1 > pos2)

  0013b	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  0013e	3b 45 e0	 cmp	 eax, DWORD PTR _pos2$[ebp]
  00141	7e 12		 jle	 SHORT $LN24@wipe_rain_

; 1094 : 						{
; 1095 : 							pos3 = pos1;

  00143	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00146	89 45 dc	 mov	 DWORD PTR _pos3$[ebp], eax

; 1096 : 							pos1 = pos2;

  00149	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  0014c	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1097 : 							pos2 = pos3;

  0014f	8b 45 dc	 mov	 eax, DWORD PTR _pos3$[ebp]
  00152	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax
$LN24@wipe_rain_:

; 1098 : 						}
; 1099 : 
; 1100 : 						x1 = pos1;

  00155	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00158	89 45 d0	 mov	 DWORD PTR _x1$[ebp], eax

; 1101 : 						y1 = 0;

  0015b	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _y1$[ebp], 0

; 1102 : 
; 1103 : 						x2 = pos2;

  00162	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00165	89 45 c8	 mov	 DWORD PTR _x2$[ebp], eax

; 1104 : 						y2 = RAIN_TEXTURE_SIZE - 1;

  00168	c7 45 c4 7f 00
	00 00		 mov	 DWORD PTR _y2$[ebp], 127 ; 0000007fH

; 1105 : 
; 1106 : 						break;

  0016f	e9 df 00 00 00	 jmp	 $LN2@wipe_rain_
$LN25@wipe_rain_:

; 1107 : 					}
; 1108 : 					////////////////////////////////////////
; 1109 : 					case WIPE_TYPE_RIGHT_THEN_LEFT:
; 1110 : 					////////////////////////////////////////
; 1111 : 					{
; 1112 : 						pos1 = wiper_pos1;

  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_pos1@@3HA
  00179	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1113 : 						pos2 = wiper_pos2;

  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_pos2@@3HA
  00181	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax

; 1114 : 
; 1115 : 						if (pos1 > pos2)

  00184	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00187	3b 45 e0	 cmp	 eax, DWORD PTR _pos2$[ebp]
  0018a	7e 12		 jle	 SHORT $LN26@wipe_rain_

; 1116 : 						{
; 1117 : 							pos3 = pos1;

  0018c	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  0018f	89 45 dc	 mov	 DWORD PTR _pos3$[ebp], eax

; 1118 : 							pos1 = pos2;

  00192	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00195	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1119 : 							pos2 = pos3;

  00198	8b 45 dc	 mov	 eax, DWORD PTR _pos3$[ebp]
  0019b	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax
$LN26@wipe_rain_:

; 1120 : 						}
; 1121 : 
; 1122 : 						x1 = pos1;

  0019e	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  001a1	89 45 d0	 mov	 DWORD PTR _x1$[ebp], eax

; 1123 : 						y1 = 0;

  001a4	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _y1$[ebp], 0

; 1124 : 
; 1125 : 						x2 = pos2;

  001ab	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  001ae	89 45 c8	 mov	 DWORD PTR _x2$[ebp], eax

; 1126 : 						y2 = RAIN_TEXTURE_SIZE - 1;

  001b1	c7 45 c4 7f 00
	00 00		 mov	 DWORD PTR _y2$[ebp], 127 ; 0000007fH

; 1127 : 
; 1128 : 						break;

  001b8	e9 96 00 00 00	 jmp	 $LN2@wipe_rain_
$LN27@wipe_rain_:

; 1129 : 					}
; 1130 : 					////////////////////////////////////////
; 1131 : 					case WIPE_TYPE_UP_THEN_DOWN:
; 1132 : 					////////////////////////////////////////
; 1133 : 					{
; 1134 : 						pos1 = RAIN_TEXTURE_SIZE - 1 - wiper_pos1;

  001bd	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  001c2	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?wiper_pos1@@3HA
  001c8	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1135 : 						pos2 = RAIN_TEXTURE_SIZE - 1 - wiper_pos2;

  001cb	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  001d0	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?wiper_pos2@@3HA
  001d6	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax

; 1136 : 
; 1137 : 						if (pos1 > pos2)

  001d9	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  001dc	3b 45 e0	 cmp	 eax, DWORD PTR _pos2$[ebp]
  001df	7e 12		 jle	 SHORT $LN28@wipe_rain_

; 1138 : 						{
; 1139 : 							pos3 = pos1;

  001e1	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  001e4	89 45 dc	 mov	 DWORD PTR _pos3$[ebp], eax

; 1140 : 							pos1 = pos2;

  001e7	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  001ea	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1141 : 							pos2 = pos3;

  001ed	8b 45 dc	 mov	 eax, DWORD PTR _pos3$[ebp]
  001f0	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax
$LN28@wipe_rain_:

; 1142 : 						}
; 1143 : 
; 1144 : 						x1 = 0;

  001f3	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _x1$[ebp], 0

; 1145 : 						y1 = pos1;

  001fa	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  001fd	89 45 cc	 mov	 DWORD PTR _y1$[ebp], eax

; 1146 : 
; 1147 : 						x2 = RAIN_TEXTURE_SIZE - 1;

  00200	c7 45 c8 7f 00
	00 00		 mov	 DWORD PTR _x2$[ebp], 127 ; 0000007fH

; 1148 : 						y2 = pos2;

  00207	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  0020a	89 45 c4	 mov	 DWORD PTR _y2$[ebp], eax

; 1149 : 
; 1150 : 						break;

  0020d	eb 44		 jmp	 SHORT $LN2@wipe_rain_
$LN29@wipe_rain_:

; 1151 : 					}
; 1152 : 					////////////////////////////////////////
; 1153 : 					case WIPE_TYPE_DOWN_THEN_UP:
; 1154 : 					////////////////////////////////////////
; 1155 : 					{
; 1156 : 						pos1 = wiper_pos1;

  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_pos1@@3HA
  00214	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1157 : 						pos2 = wiper_pos2;

  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_pos2@@3HA
  0021c	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax

; 1158 : 
; 1159 : 						if (pos1 > pos2)

  0021f	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00222	3b 45 e0	 cmp	 eax, DWORD PTR _pos2$[ebp]
  00225	7e 12		 jle	 SHORT $LN30@wipe_rain_

; 1160 : 						{
; 1161 : 							pos3 = pos1;

  00227	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  0022a	89 45 dc	 mov	 DWORD PTR _pos3$[ebp], eax

; 1162 : 							pos1 = pos2;

  0022d	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00230	89 45 e4	 mov	 DWORD PTR _pos1$[ebp], eax

; 1163 : 							pos2 = pos3;

  00233	8b 45 dc	 mov	 eax, DWORD PTR _pos3$[ebp]
  00236	89 45 e0	 mov	 DWORD PTR _pos2$[ebp], eax
$LN30@wipe_rain_:

; 1164 : 						}
; 1165 : 
; 1166 : 						x1 = 0;

  00239	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _x1$[ebp], 0

; 1167 : 						y1 = pos1;

  00240	8b 45 e4	 mov	 eax, DWORD PTR _pos1$[ebp]
  00243	89 45 cc	 mov	 DWORD PTR _y1$[ebp], eax

; 1168 : 
; 1169 : 						x2 = RAIN_TEXTURE_SIZE - 1;

  00246	c7 45 c8 7f 00
	00 00		 mov	 DWORD PTR _x2$[ebp], 127 ; 0000007fH

; 1170 : 						y2 = pos2;

  0024d	8b 45 e0	 mov	 eax, DWORD PTR _pos2$[ebp]
  00250	89 45 c4	 mov	 DWORD PTR _y2$[ebp], eax
$LN2@wipe_rain_:

; 1171 : 
; 1172 : 						break;
; 1173 : 					}
; 1174 : 				}
; 1175 : 
; 1176 : 				dx = (x2 - x1 + 1) * texture_pixel_width;

  00253	8b 45 c8	 mov	 eax, DWORD PTR _x2$[ebp]
  00256	2b 45 d0	 sub	 eax, DWORD PTR _x1$[ebp]
  00259	83 c0 01	 add	 eax, 1
  0025c	0f af 45 bc	 imul	 eax, DWORD PTR _texture_pixel_width$[ebp]
  00260	89 45 c0	 mov	 DWORD PTR _dx$[ebp], eax

; 1177 : 
; 1178 : 				src_add_on = wiped_rain_texture_screen_pitch - dx;

  00263	8b 45 ec	 mov	 eax, DWORD PTR _wiped_rain_texture_screen_pitch$[ebp]
  00266	2b 45 c0	 sub	 eax, DWORD PTR _dx$[ebp]
  00269	89 45 b8	 mov	 DWORD PTR _src_add_on$[ebp], eax

; 1179 : 
; 1180 : 				dst_add_on = composite_wiped_rain_texture_screen_pitch - dx;

  0026c	8b 45 e8	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen_pitch$[ebp]
  0026f	2b 45 c0	 sub	 eax, DWORD PTR _dx$[ebp]
  00272	89 45 b4	 mov	 DWORD PTR _dst_add_on$[ebp], eax

; 1181 : 
; 1182 : 				src = wiped_rain_texture_screen_data + (y1 * wiped_rain_texture_screen_pitch) + (x1 * texture_pixel_width);

  00275	8b 45 cc	 mov	 eax, DWORD PTR _y1$[ebp]
  00278	0f af 45 ec	 imul	 eax, DWORD PTR _wiped_rain_texture_screen_pitch$[ebp]
  0027c	03 45 fc	 add	 eax, DWORD PTR _wiped_rain_texture_screen_data$[ebp]
  0027f	8b 4d d0	 mov	 ecx, DWORD PTR _x1$[ebp]
  00282	0f af 4d bc	 imul	 ecx, DWORD PTR _texture_pixel_width$[ebp]
  00286	03 c1		 add	 eax, ecx
  00288	89 45 f4	 mov	 DWORD PTR _src$[ebp], eax

; 1183 : 
; 1184 : 				dst = composite_wiped_rain_texture_screen_data + (y1 * composite_wiped_rain_texture_screen_pitch) + (x1 * texture_pixel_width);

  0028b	8b 45 cc	 mov	 eax, DWORD PTR _y1$[ebp]
  0028e	0f af 45 e8	 imul	 eax, DWORD PTR _composite_wiped_rain_texture_screen_pitch$[ebp]
  00292	03 45 f8	 add	 eax, DWORD PTR _composite_wiped_rain_texture_screen_data$[ebp]
  00295	8b 4d d0	 mov	 ecx, DWORD PTR _x1$[ebp]
  00298	0f af 4d bc	 imul	 ecx, DWORD PTR _texture_pixel_width$[ebp]
  0029c	03 c1		 add	 eax, ecx
  0029e	89 45 f0	 mov	 DWORD PTR _dst$[ebp], eax

; 1185 : 
; 1186 : 				if (texture_pixel_width == 2)

  002a1	83 7d bc 02	 cmp	 DWORD PTR _texture_pixel_width$[ebp], 2
  002a5	75 6f		 jne	 SHORT $LN31@wipe_rain_

; 1187 : 				{
; 1188 : 					for (y = y1; y <= y2; y++)

  002a7	8b 45 cc	 mov	 eax, DWORD PTR _y1$[ebp]
  002aa	89 45 d4	 mov	 DWORD PTR _y$[ebp], eax
  002ad	eb 09		 jmp	 SHORT $LN6@wipe_rain_
$LN4@wipe_rain_:
  002af	8b 45 d4	 mov	 eax, DWORD PTR _y$[ebp]
  002b2	83 c0 01	 add	 eax, 1
  002b5	89 45 d4	 mov	 DWORD PTR _y$[ebp], eax
$LN6@wipe_rain_:
  002b8	8b 45 d4	 mov	 eax, DWORD PTR _y$[ebp]
  002bb	3b 45 c4	 cmp	 eax, DWORD PTR _y2$[ebp]
  002be	7f 54		 jg	 SHORT $LN5@wipe_rain_

; 1189 : 					{
; 1190 : 						for (x = x1; x <= x2; x++)

  002c0	8b 45 d0	 mov	 eax, DWORD PTR _x1$[ebp]
  002c3	89 45 d8	 mov	 DWORD PTR _x$[ebp], eax
  002c6	eb 09		 jmp	 SHORT $LN9@wipe_rain_
$LN7@wipe_rain_:
  002c8	8b 45 d8	 mov	 eax, DWORD PTR _x$[ebp]
  002cb	83 c0 01	 add	 eax, 1
  002ce	89 45 d8	 mov	 DWORD PTR _x$[ebp], eax
$LN9@wipe_rain_:
  002d1	8b 45 d8	 mov	 eax, DWORD PTR _x$[ebp]
  002d4	3b 45 c8	 cmp	 eax, DWORD PTR _x2$[ebp]
  002d7	7f 27		 jg	 SHORT $LN8@wipe_rain_

; 1191 : 						{
; 1192 : 							if ((*(rgb_packed *)src & a_mask) == 0)

  002d9	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  002dc	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  002df	23 4d a4	 and	 ecx, DWORD PTR _a_mask$[ebp]
  002e2	75 08		 jne	 SHORT $LN33@wipe_rain_

; 1193 : 							{
; 1194 : 								*(rgb_packed *)dst = 0;

  002e4	33 c0		 xor	 eax, eax
  002e6	8b 4d f0	 mov	 ecx, DWORD PTR _dst$[ebp]
  002e9	66 89 01	 mov	 WORD PTR [ecx], ax
$LN33@wipe_rain_:

; 1195 : 							}
; 1196 : 
; 1197 : 							src += texture_pixel_width;

  002ec	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  002ef	03 45 bc	 add	 eax, DWORD PTR _texture_pixel_width$[ebp]
  002f2	89 45 f4	 mov	 DWORD PTR _src$[ebp], eax

; 1198 : 							dst += texture_pixel_width;

  002f5	8b 45 f0	 mov	 eax, DWORD PTR _dst$[ebp]
  002f8	03 45 bc	 add	 eax, DWORD PTR _texture_pixel_width$[ebp]
  002fb	89 45 f0	 mov	 DWORD PTR _dst$[ebp], eax

; 1199 : 						}

  002fe	eb c8		 jmp	 SHORT $LN7@wipe_rain_
$LN8@wipe_rain_:

; 1200 : 
; 1201 : 						src += src_add_on;

  00300	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  00303	03 45 b8	 add	 eax, DWORD PTR _src_add_on$[ebp]
  00306	89 45 f4	 mov	 DWORD PTR _src$[ebp], eax

; 1202 : 						dst += dst_add_on;

  00309	8b 45 f0	 mov	 eax, DWORD PTR _dst$[ebp]
  0030c	03 45 b4	 add	 eax, DWORD PTR _dst_add_on$[ebp]
  0030f	89 45 f0	 mov	 DWORD PTR _dst$[ebp], eax

; 1203 : 					}

  00312	eb 9b		 jmp	 SHORT $LN4@wipe_rain_
$LN5@wipe_rain_:

; 1204 : 				}
; 1205 : 				else

  00314	eb 6d		 jmp	 SHORT $LN32@wipe_rain_
$LN31@wipe_rain_:

; 1206 : 				{
; 1207 : 					for (y = y1; y <= y2; y++)

  00316	8b 45 cc	 mov	 eax, DWORD PTR _y1$[ebp]
  00319	89 45 d4	 mov	 DWORD PTR _y$[ebp], eax
  0031c	eb 09		 jmp	 SHORT $LN12@wipe_rain_
$LN10@wipe_rain_:
  0031e	8b 45 d4	 mov	 eax, DWORD PTR _y$[ebp]
  00321	83 c0 01	 add	 eax, 1
  00324	89 45 d4	 mov	 DWORD PTR _y$[ebp], eax
$LN12@wipe_rain_:
  00327	8b 45 d4	 mov	 eax, DWORD PTR _y$[ebp]
  0032a	3b 45 c4	 cmp	 eax, DWORD PTR _y2$[ebp]
  0032d	7f 54		 jg	 SHORT $LN32@wipe_rain_

; 1208 : 					{
; 1209 : 						for (x = x1; x <= x2; x++)

  0032f	8b 45 d0	 mov	 eax, DWORD PTR _x1$[ebp]
  00332	89 45 d8	 mov	 DWORD PTR _x$[ebp], eax
  00335	eb 09		 jmp	 SHORT $LN15@wipe_rain_
$LN13@wipe_rain_:
  00337	8b 45 d8	 mov	 eax, DWORD PTR _x$[ebp]
  0033a	83 c0 01	 add	 eax, 1
  0033d	89 45 d8	 mov	 DWORD PTR _x$[ebp], eax
$LN15@wipe_rain_:
  00340	8b 45 d8	 mov	 eax, DWORD PTR _x$[ebp]
  00343	3b 45 c8	 cmp	 eax, DWORD PTR _x2$[ebp]
  00346	7f 27		 jg	 SHORT $LN14@wipe_rain_

; 1210 : 						{
; 1211 : 							if ((*(unsigned int *)src & a_mask) == 0)

  00348	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  0034b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0034d	23 4d a4	 and	 ecx, DWORD PTR _a_mask$[ebp]
  00350	75 09		 jne	 SHORT $LN34@wipe_rain_

; 1212 : 							{
; 1213 : 								*(unsigned int *)dst = 0;

  00352	8b 45 f0	 mov	 eax, DWORD PTR _dst$[ebp]
  00355	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN34@wipe_rain_:

; 1214 : 							}
; 1215 : 
; 1216 : 							src += texture_pixel_width;

  0035b	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  0035e	03 45 bc	 add	 eax, DWORD PTR _texture_pixel_width$[ebp]
  00361	89 45 f4	 mov	 DWORD PTR _src$[ebp], eax

; 1217 : 							dst += texture_pixel_width;

  00364	8b 45 f0	 mov	 eax, DWORD PTR _dst$[ebp]
  00367	03 45 bc	 add	 eax, DWORD PTR _texture_pixel_width$[ebp]
  0036a	89 45 f0	 mov	 DWORD PTR _dst$[ebp], eax

; 1218 : 						}

  0036d	eb c8		 jmp	 SHORT $LN13@wipe_rain_
$LN14@wipe_rain_:

; 1219 : 
; 1220 : 						src += src_add_on;

  0036f	8b 45 f4	 mov	 eax, DWORD PTR _src$[ebp]
  00372	03 45 b8	 add	 eax, DWORD PTR _src_add_on$[ebp]
  00375	89 45 f4	 mov	 DWORD PTR _src$[ebp], eax

; 1221 : 						dst += dst_add_on;

  00378	8b 45 f0	 mov	 eax, DWORD PTR _dst$[ebp]
  0037b	03 45 b4	 add	 eax, DWORD PTR _dst_add_on$[ebp]
  0037e	89 45 f0	 mov	 DWORD PTR _dst$[ebp], eax

; 1222 : 					}

  00381	eb 9b		 jmp	 SHORT $LN10@wipe_rain_
$LN32@wipe_rain_:

; 1223 : 				}
; 1224 : 
; 1225 : 				flush_screen_texture_graphics (composite_wiped_rain_texture_screen);

  00383	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  00386	50		 push	 eax
  00387	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 1226 : 
; 1227 : 				unlock_screen (composite_wiped_rain_texture_screen);

  0038c	8b 45 0c	 mov	 eax, DWORD PTR _composite_wiped_rain_texture_screen$[ebp]
  0038f	50		 push	 eax
  00390	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN21@wipe_rain_:

; 1228 : 			}
; 1229 : 
; 1230 : 			unlock_screen (wiped_rain_texture_screen);

  00395	8b 45 08	 mov	 eax, DWORD PTR _wiped_rain_texture_screen$[ebp]
  00398	50		 push	 eax
  00399	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN1@wipe_rain_:

; 1231 : 		}
; 1232 : 	}
; 1233 : }

  0039e	5f		 pop	 edi
  0039f	5e		 pop	 esi
  003a0	5b		 pop	 ebx
  003a1	8b e5		 mov	 esp, ebp
  003a3	5d		 pop	 ebp
  003a4	c2 0c 00	 ret	 12			; 0000000cH
  003a7	90		 npad	 1
$LN36@wipe_rain_:
  003a8	00 00 00 00	 DD	 $LN22@wipe_rain_
  003ac	00 00 00 00	 DD	 $LN23@wipe_rain_
  003b0	00 00 00 00	 DD	 $LN25@wipe_rain_
  003b4	00 00 00 00	 DD	 $LN27@wipe_rain_
  003b8	00 00 00 00	 DD	 $LN29@wipe_rain_
?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z ENDP	; wipe_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z
_TEXT	SEGMENT
tv188 = -136						; size = 4
tv157 = -136						; size = 4
tv128 = -136						; size = 4
_col32$1 = -68						; size = 4
_col$2 = -64						; size = 2
_y$3 = -60						; size = 4
_x$4 = -56						; size = 4
_composite_rain_texture_screen_pitch$5 = -52		; size = 4
_rain_texture_screen_pitch$6 = -48			; size = 4
_texture_pixel_width$7 = -44				; size = 4
_dst$8 = -40						; size = 4
_src$9 = -36						; size = 4
_composite_rain_texture_screen_data$10 = -32		; size = 4
_rain_texture_screen_data$11 = -28			; size = 4
_y2$ = -24						; size = 4
_x2$ = -20						; size = 4
_y1$ = -16						; size = 4
_x1$ = -12						; size = 4
_count$ = -8						; size = 4
_rain_fall_rate$ = -4					; size = 4
_composite_rain_texture_screen$ = 8			; size = 4
_light_rate$ = 12					; size = 4
_heavy_rate$ = 16					; size = 4
?apply_rain_effect@@YGXPAUSCREEN@@HH@Z PROC		; apply_rain_effect, COMDAT

; 849  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 850  : 
; 851  : 	float
; 852  : 		rain_fall_rate;
; 853  : 
; 854  : 	int
; 855  : 		count,
; 856  : 		x1,
; 857  : 		y1,
; 858  : 		x2,
; 859  : 		y2;
; 860  : 
; 861  : 	ASSERT (composite_rain_texture_screen);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _composite_rain_texture_screen$[ebp], 0
  00010	75 18		 jne	 SHORT $LN8@apply_rain
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??apply_rain_effect@@YGXPAUSCREEN@@HH@Z@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@apply_rain:

; 862  : 
; 863  : 	if (rain_fall_type == RAIN_FALL_TYPE_LIGHT)

  0002a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, 1
  00031	75 0c		 jne	 SHORT $LN9@apply_rain

; 864  : 	{
; 865  : 		rain_fall_rate = light_rate;

  00033	f3 0f 2a 45 0c	 cvtsi2ss xmm0, DWORD PTR _light_rate$[ebp]
  00038	f3 0f 11 45 fc	 movss	 DWORD PTR _rain_fall_rate$[ebp], xmm0

; 866  : 	}
; 867  : 	else

  0003d	eb 0a		 jmp	 SHORT $LN10@apply_rain
$LN9@apply_rain:

; 868  : 	{
; 869  : 		rain_fall_rate = heavy_rate;

  0003f	f3 0f 2a 45 10	 cvtsi2ss xmm0, DWORD PTR _heavy_rate$[ebp]
  00044	f3 0f 11 45 fc	 movss	 DWORD PTR _rain_fall_rate$[ebp], xmm0
$LN10@apply_rain:

; 870  : 	}
; 871  : 
; 872  : 	count = (int) (rain_fall_rate * get_delta_time ());

  00049	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _rain_fall_rate$[ebp]
  0004e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00056	f3 0f 2c c0	 cvttss2si eax, xmm0
  0005a	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax

; 873  : 
; 874  : 	if ( ( command_line_cpu_blit_textures ) || ( !d3d_modulate_alpha ) )

  0005d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_cpu_blit_textures@@3HA, 0 ; command_line_cpu_blit_textures
  00064	75 0d		 jne	 SHORT $LN13@apply_rain
  00066	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_modulate_alpha@@3HA, 0 ; d3d_modulate_alpha
  0006d	0f 85 73 02 00
	00		 jne	 $LN11@apply_rain
$LN13@apply_rain:

; 875  : 	{
; 876  : 
; 877  : 		unsigned char
; 878  : 			*rain_texture_screen_data,
; 879  : 			*composite_rain_texture_screen_data,
; 880  : 			*src,
; 881  : 			*dst;
; 882  : 
; 883  : 		int
; 884  : 			texture_pixel_width,
; 885  : 			rain_texture_screen_pitch,
; 886  : 			composite_rain_texture_screen_pitch,
; 887  : 			x,
; 888  : 			y;
; 889  : 
; 890  : 		rgb_packed
; 891  : 			col;
; 892  : 
; 893  : 		unsigned int
; 894  : 			col32;
; 895  : 
; 896  : 		texture_pixel_width = get_screen_pixel_width (rain_texture_screen);

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?get_screen_pixel_width@@YGHPAUSCREEN@@@Z ; get_screen_pixel_width
  0007e	89 45 d4	 mov	 DWORD PTR _texture_pixel_width$7[ebp], eax

; 897  : 
; 898  : 		if (lock_screen (rain_texture_screen))

  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  0008c	85 c0		 test	 eax, eax
  0008e	0f 84 4d 02 00
	00		 je	 $LN14@apply_rain

; 899  : 		{
; 900  : 			rain_texture_screen_data = get_screen_data (rain_texture_screen);

  00094	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  0009f	89 45 e4	 mov	 DWORD PTR _rain_texture_screen_data$11[ebp], eax

; 901  : 			rain_texture_screen_pitch = get_screen_pitch (rain_texture_screen);

  000a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  000ad	89 45 d0	 mov	 DWORD PTR _rain_texture_screen_pitch$6[ebp], eax

; 902  : 
; 903  : 			if (lock_screen (composite_rain_texture_screen))

  000b0	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  000b9	85 c0		 test	 eax, eax
  000bb	0f 84 15 02 00
	00		 je	 $LN15@apply_rain

; 904  : 			{
; 905  : 				composite_rain_texture_screen_data = get_screen_data (composite_rain_texture_screen);

  000c1	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  000ca	89 45 e0	 mov	 DWORD PTR _composite_rain_texture_screen_data$10[ebp], eax

; 906  : 				composite_rain_texture_screen_pitch = get_screen_pitch (composite_rain_texture_screen);

  000cd	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  000d6	89 45 cc	 mov	 DWORD PTR _composite_rain_texture_screen_pitch$5[ebp], eax

; 907  : 
; 908  : 				if (texture_pixel_width == 2)

  000d9	83 7d d4 02	 cmp	 DWORD PTR _texture_pixel_width$7[ebp], 2
  000dd	0f 85 f6 00 00
	00		 jne	 $LN16@apply_rain
$LN2@apply_rain:

; 909  : 				{
; 910  : 					while (count--)

  000e3	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000e6	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv128[ebp], eax
  000ec	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  000ef	83 e9 01	 sub	 ecx, 1
  000f2	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  000f5	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR tv128[ebp], 0
  000fc	0f 84 d2 00 00
	00		 je	 $LN3@apply_rain

; 911  : 					{
; 912  : 						//
; 913  : 						// copy a random pixel from the rain texture to the composite texture
; 914  : 						//
; 915  : 
; 916  : 						x = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  00102	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0010c	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00111	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0011c	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0011f	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00125	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00128	89 4d c8	 mov	 DWORD PTR _x$4[ebp], ecx

; 917  : 						y = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  0012b	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00135	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0013a	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0013f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00145	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00148	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0014e	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00151	89 4d c4	 mov	 DWORD PTR _y$3[ebp], ecx

; 918  : 
; 919  : 						src = rain_texture_screen_data + (y * rain_texture_screen_pitch) + (x * sizeof (rgb_packed));

  00154	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  00157	0f af 45 d0	 imul	 eax, DWORD PTR _rain_texture_screen_pitch$6[ebp]
  0015b	03 45 e4	 add	 eax, DWORD PTR _rain_texture_screen_data$11[ebp]
  0015e	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  00161	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00164	89 55 dc	 mov	 DWORD PTR _src$9[ebp], edx

; 920  : 
; 921  : 						col = *(rgb_packed *)src;

  00167	8b 45 dc	 mov	 eax, DWORD PTR _src$9[ebp]
  0016a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0016d	66 89 4d c0	 mov	 WORD PTR _col$2[ebp], cx

; 922  : 
; 923  : 						dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * sizeof (rgb_packed));

  00171	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  00174	0f af 45 cc	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$5[ebp]
  00178	03 45 e0	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$10[ebp]
  0017b	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  0017e	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00181	89 55 d8	 mov	 DWORD PTR _dst$8[ebp], edx

; 924  : 
; 925  : 						*(rgb_packed *)dst = col;

  00184	8b 45 d8	 mov	 eax, DWORD PTR _dst$8[ebp]
  00187	66 8b 4d c0	 mov	 cx, WORD PTR _col$2[ebp]
  0018b	66 89 08	 mov	 WORD PTR [eax], cx

; 926  : 
; 927  : 						//
; 928  : 						// copy this pixel to an offset value to create a changing effect
; 929  : 						//
; 930  : 
; 931  : 						x += 64;

  0018e	8b 45 c8	 mov	 eax, DWORD PTR _x$4[ebp]
  00191	83 c0 40	 add	 eax, 64			; 00000040H
  00194	89 45 c8	 mov	 DWORD PTR _x$4[ebp], eax

; 932  : 						y += 64;

  00197	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  0019a	83 c0 40	 add	 eax, 64			; 00000040H
  0019d	89 45 c4	 mov	 DWORD PTR _y$3[ebp], eax

; 933  : 
; 934  : 						x &= RAIN_TEXTURE_SIZE - 1;

  001a0	8b 45 c8	 mov	 eax, DWORD PTR _x$4[ebp]
  001a3	83 e0 7f	 and	 eax, 127		; 0000007fH
  001a6	89 45 c8	 mov	 DWORD PTR _x$4[ebp], eax

; 935  : 						y &= RAIN_TEXTURE_SIZE - 1;

  001a9	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  001ac	83 e0 7f	 and	 eax, 127		; 0000007fH
  001af	89 45 c4	 mov	 DWORD PTR _y$3[ebp], eax

; 936  : 
; 937  : 						dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * sizeof (rgb_packed));

  001b2	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  001b5	0f af 45 cc	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$5[ebp]
  001b9	03 45 e0	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$10[ebp]
  001bc	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  001bf	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  001c2	89 55 d8	 mov	 DWORD PTR _dst$8[ebp], edx

; 938  : 
; 939  : 						*(rgb_packed *)dst = col;

  001c5	8b 45 d8	 mov	 eax, DWORD PTR _dst$8[ebp]
  001c8	66 8b 4d c0	 mov	 cx, WORD PTR _col$2[ebp]
  001cc	66 89 08	 mov	 WORD PTR [eax], cx

; 940  : 					}

  001cf	e9 0f ff ff ff	 jmp	 $LN2@apply_rain
$LN3@apply_rain:

; 941  : 				}
; 942  : 				else

  001d4	e9 f4 00 00 00	 jmp	 $LN5@apply_rain
$LN16@apply_rain:

; 943  : 				{
; 944  : 
; 945  : 					//
; 946  : 					// Texture pixel width == 4 ( 32bit texture )
; 947  : 					//
; 948  : 
; 949  : 					while (count--)

  001d9	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  001dc	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv157[ebp], eax
  001e2	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  001e5	83 e9 01	 sub	 ecx, 1
  001e8	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  001eb	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR tv157[ebp], 0
  001f2	0f 84 d5 00 00
	00		 je	 $LN5@apply_rain

; 950  : 					{
; 951  : 						//
; 952  : 						// copy a random pixel from the rain texture to the composite texture
; 953  : 						//
; 954  : 
; 955  : 						x = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  001f8	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00202	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00207	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0020c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00212	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00215	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0021b	83 e1 7f	 and	 ecx, 127		; 0000007fH
  0021e	89 4d c8	 mov	 DWORD PTR _x$4[ebp], ecx

; 956  : 						y = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  00221	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0022b	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00230	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00235	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0023b	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0023e	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00244	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00247	89 4d c4	 mov	 DWORD PTR _y$3[ebp], ecx

; 957  : 
; 958  : 						src = rain_texture_screen_data + (y * rain_texture_screen_pitch) + (x * texture_pixel_width);

  0024a	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  0024d	0f af 45 d0	 imul	 eax, DWORD PTR _rain_texture_screen_pitch$6[ebp]
  00251	03 45 e4	 add	 eax, DWORD PTR _rain_texture_screen_data$11[ebp]
  00254	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  00257	0f af 4d d4	 imul	 ecx, DWORD PTR _texture_pixel_width$7[ebp]
  0025b	03 c1		 add	 eax, ecx
  0025d	89 45 dc	 mov	 DWORD PTR _src$9[ebp], eax

; 959  : 
; 960  : 						col32 = *(unsigned int *)src;

  00260	8b 45 dc	 mov	 eax, DWORD PTR _src$9[ebp]
  00263	8b 08		 mov	 ecx, DWORD PTR [eax]
  00265	89 4d bc	 mov	 DWORD PTR _col32$1[ebp], ecx

; 961  : 
; 962  : 						dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * texture_pixel_width);

  00268	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  0026b	0f af 45 cc	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$5[ebp]
  0026f	03 45 e0	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$10[ebp]
  00272	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  00275	0f af 4d d4	 imul	 ecx, DWORD PTR _texture_pixel_width$7[ebp]
  00279	03 c1		 add	 eax, ecx
  0027b	89 45 d8	 mov	 DWORD PTR _dst$8[ebp], eax

; 963  : 
; 964  : 						*(unsigned int *)dst = col32;

  0027e	8b 45 d8	 mov	 eax, DWORD PTR _dst$8[ebp]
  00281	8b 4d bc	 mov	 ecx, DWORD PTR _col32$1[ebp]
  00284	89 08		 mov	 DWORD PTR [eax], ecx

; 965  : 
; 966  : 						//
; 967  : 						// copy this pixel to an offset value to create a changing effect
; 968  : 						//
; 969  : 
; 970  : 						x += 64;

  00286	8b 45 c8	 mov	 eax, DWORD PTR _x$4[ebp]
  00289	83 c0 40	 add	 eax, 64			; 00000040H
  0028c	89 45 c8	 mov	 DWORD PTR _x$4[ebp], eax

; 971  : 						y += 64;

  0028f	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  00292	83 c0 40	 add	 eax, 64			; 00000040H
  00295	89 45 c4	 mov	 DWORD PTR _y$3[ebp], eax

; 972  : 
; 973  : 						x &= RAIN_TEXTURE_SIZE - 1;

  00298	8b 45 c8	 mov	 eax, DWORD PTR _x$4[ebp]
  0029b	83 e0 7f	 and	 eax, 127		; 0000007fH
  0029e	89 45 c8	 mov	 DWORD PTR _x$4[ebp], eax

; 974  : 						y &= RAIN_TEXTURE_SIZE - 1;

  002a1	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  002a4	83 e0 7f	 and	 eax, 127		; 0000007fH
  002a7	89 45 c4	 mov	 DWORD PTR _y$3[ebp], eax

; 975  : 
; 976  : 						dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * texture_pixel_width);

  002aa	8b 45 c4	 mov	 eax, DWORD PTR _y$3[ebp]
  002ad	0f af 45 cc	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$5[ebp]
  002b1	03 45 e0	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$10[ebp]
  002b4	8b 4d c8	 mov	 ecx, DWORD PTR _x$4[ebp]
  002b7	0f af 4d d4	 imul	 ecx, DWORD PTR _texture_pixel_width$7[ebp]
  002bb	03 c1		 add	 eax, ecx
  002bd	89 45 d8	 mov	 DWORD PTR _dst$8[ebp], eax

; 977  : 
; 978  : 						*(unsigned int *)dst = col32;

  002c0	8b 45 d8	 mov	 eax, DWORD PTR _dst$8[ebp]
  002c3	8b 4d bc	 mov	 ecx, DWORD PTR _col32$1[ebp]
  002c6	89 08		 mov	 DWORD PTR [eax], ecx

; 979  : 					}

  002c8	e9 0c ff ff ff	 jmp	 $LN16@apply_rain
$LN5@apply_rain:

; 980  : 				}
; 981  : 
; 982  : 				unlock_screen (composite_rain_texture_screen);

  002cd	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN15@apply_rain:

; 983  : 			}
; 984  : 
; 985  : 			unlock_screen (rain_texture_screen);

  002d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  002db	50		 push	 eax
  002dc	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN14@apply_rain:

; 986  : 		}
; 987  : 	}
; 988  : 	else

  002e1	e9 10 01 00 00	 jmp	 $LN7@apply_rain
$LN11@apply_rain:

; 989  : 	{
; 990  : 
; 991  : 		while (count--)

  002e6	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  002e9	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv188[ebp], eax
  002ef	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  002f2	83 e9 01	 sub	 ecx, 1
  002f5	89 4d f8	 mov	 DWORD PTR _count$[ebp], ecx
  002f8	83 bd 78 ff ff
	ff 00		 cmp	 DWORD PTR tv188[ebp], 0
  002ff	0f 84 f1 00 00
	00		 je	 $LN7@apply_rain

; 992  : 		{
; 993  : 			//
; 994  : 			// copy a random pixel from the rain texture to the composite texture
; 995  : 			//
; 996  : 
; 997  : 			x1 = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  00305	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0030f	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00314	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00319	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0031f	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00322	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00328	83 e1 7f	 and	 ecx, 127		; 0000007fH
  0032b	89 4d f4	 mov	 DWORD PTR _x1$[ebp], ecx

; 998  : 			y1 = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  0032e	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00338	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0033d	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00342	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00348	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0034b	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00351	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00354	89 4d f0	 mov	 DWORD PTR _y1$[ebp], ecx

; 999  : 
; 1000 : 			blit_screens ( rain_texture_screen, composite_rain_texture_screen, x1, y1, x1+1, y1+1, x1, y1, x1+1, y1+1 );

  00357	8b 45 f0	 mov	 eax, DWORD PTR _y1$[ebp]
  0035a	83 c0 01	 add	 eax, 1
  0035d	50		 push	 eax
  0035e	8b 4d f4	 mov	 ecx, DWORD PTR _x1$[ebp]
  00361	83 c1 01	 add	 ecx, 1
  00364	51		 push	 ecx
  00365	8b 55 f0	 mov	 edx, DWORD PTR _y1$[ebp]
  00368	52		 push	 edx
  00369	8b 45 f4	 mov	 eax, DWORD PTR _x1$[ebp]
  0036c	50		 push	 eax
  0036d	8b 4d f0	 mov	 ecx, DWORD PTR _y1$[ebp]
  00370	83 c1 01	 add	 ecx, 1
  00373	51		 push	 ecx
  00374	8b 55 f4	 mov	 edx, DWORD PTR _x1$[ebp]
  00377	83 c2 01	 add	 edx, 1
  0037a	52		 push	 edx
  0037b	8b 45 f0	 mov	 eax, DWORD PTR _y1$[ebp]
  0037e	50		 push	 eax
  0037f	8b 4d f4	 mov	 ecx, DWORD PTR _x1$[ebp]
  00382	51		 push	 ecx
  00383	8b 55 08	 mov	 edx, DWORD PTR _composite_rain_texture_screen$[ebp]
  00386	52		 push	 edx
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ?blit_screens@@YGXPAUSCREEN@@0HHHHHHHH@Z ; blit_screens

; 1001 : 
; 1002 : 			//
; 1003 : 			// copy this pixel to an offset value to create a changing effect
; 1004 : 			//
; 1005 : 
; 1006 : 			x2 = x1 + 64;

  00392	8b 45 f4	 mov	 eax, DWORD PTR _x1$[ebp]
  00395	83 c0 40	 add	 eax, 64			; 00000040H
  00398	89 45 ec	 mov	 DWORD PTR _x2$[ebp], eax

; 1007 : 			y2 = y1 + 64;

  0039b	8b 45 f0	 mov	 eax, DWORD PTR _y1$[ebp]
  0039e	83 c0 40	 add	 eax, 64			; 00000040H
  003a1	89 45 e8	 mov	 DWORD PTR _y2$[ebp], eax

; 1008 : 
; 1009 : 			x2 &= RAIN_TEXTURE_SIZE - 1;

  003a4	8b 45 ec	 mov	 eax, DWORD PTR _x2$[ebp]
  003a7	83 e0 7f	 and	 eax, 127		; 0000007fH
  003aa	89 45 ec	 mov	 DWORD PTR _x2$[ebp], eax

; 1010 : 			y2 &= RAIN_TEXTURE_SIZE - 1;

  003ad	8b 45 e8	 mov	 eax, DWORD PTR _y2$[ebp]
  003b0	83 e0 7f	 and	 eax, 127		; 0000007fH
  003b3	89 45 e8	 mov	 DWORD PTR _y2$[ebp], eax

; 1011 : 
; 1012 : 			blit_screens ( rain_texture_screen, composite_rain_texture_screen, x1, y1, x1+1, y1+1, x2, y2, x2+1, y2+1 );

  003b6	8b 45 e8	 mov	 eax, DWORD PTR _y2$[ebp]
  003b9	83 c0 01	 add	 eax, 1
  003bc	50		 push	 eax
  003bd	8b 4d ec	 mov	 ecx, DWORD PTR _x2$[ebp]
  003c0	83 c1 01	 add	 ecx, 1
  003c3	51		 push	 ecx
  003c4	8b 55 e8	 mov	 edx, DWORD PTR _y2$[ebp]
  003c7	52		 push	 edx
  003c8	8b 45 ec	 mov	 eax, DWORD PTR _x2$[ebp]
  003cb	50		 push	 eax
  003cc	8b 4d f0	 mov	 ecx, DWORD PTR _y1$[ebp]
  003cf	83 c1 01	 add	 ecx, 1
  003d2	51		 push	 ecx
  003d3	8b 55 f4	 mov	 edx, DWORD PTR _x1$[ebp]
  003d6	83 c2 01	 add	 edx, 1
  003d9	52		 push	 edx
  003da	8b 45 f0	 mov	 eax, DWORD PTR _y1$[ebp]
  003dd	50		 push	 eax
  003de	8b 4d f4	 mov	 ecx, DWORD PTR _x1$[ebp]
  003e1	51		 push	 ecx
  003e2	8b 55 08	 mov	 edx, DWORD PTR _composite_rain_texture_screen$[ebp]
  003e5	52		 push	 edx
  003e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 ?blit_screens@@YGXPAUSCREEN@@0HHHHHHHH@Z ; blit_screens

; 1013 : 		}

  003f1	e9 f0 fe ff ff	 jmp	 $LN11@apply_rain
$LN7@apply_rain:

; 1014 : 	}
; 1015 : 
; 1016 : 	flush_screen_texture_graphics (composite_rain_texture_screen);

  003f6	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  003f9	50		 push	 eax
  003fa	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 1017 : }

  003ff	5f		 pop	 edi
  00400	5e		 pop	 esi
  00401	5b		 pop	 ebx
  00402	8b e5		 mov	 esp, ebp
  00404	5d		 pop	 ebp
  00405	c2 0c 00	 ret	 12			; 0000000cH
?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ENDP		; apply_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?apply_full_rain_effect@@YGXPAUSCREEN@@@Z
_TEXT	SEGMENT
_y$1 = -28						; size = 4
_composite_rain_texture_screen_pitch$2 = -24		; size = 4
_rain_texture_screen_pitch$3 = -20			; size = 4
_dst$4 = -16						; size = 4
_src$5 = -12						; size = 4
_composite_rain_texture_screen_data$6 = -8		; size = 4
_rain_texture_screen_data$7 = -4			; size = 4
_composite_rain_texture_screen$ = 8			; size = 4
?apply_full_rain_effect@@YGXPAUSCREEN@@@Z PROC		; apply_full_rain_effect, COMDAT

; 784  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 785  : 
; 786  : 	ASSERT (composite_rain_texture_screen);

  00009	83 7d 08 00	 cmp	 DWORD PTR _composite_rain_texture_screen$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@apply_full
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??apply_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@apply_full:

; 787  : 
; 788  : 	if ( ( command_line_cpu_blit_textures ) || ( !d3d_modulate_alpha ) )

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_cpu_blit_textures@@3HA, 0 ; command_line_cpu_blit_textures
  0002e	75 0d		 jne	 SHORT $LN8@apply_full
  00030	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?d3d_modulate_alpha@@3HA, 0 ; d3d_modulate_alpha
  00037	0f 85 d8 00 00
	00		 jne	 $LN6@apply_full
$LN8@apply_full:

; 789  : 	{
; 790  : 
; 791  : 		unsigned char
; 792  : 			*rain_texture_screen_data,
; 793  : 			*composite_rain_texture_screen_data,
; 794  : 			*src,
; 795  : 			*dst;
; 796  : 
; 797  : 		int
; 798  : 			rain_texture_screen_pitch,
; 799  : 			composite_rain_texture_screen_pitch,
; 800  : 			y;
; 801  : 
; 802  : 		ASSERT (composite_rain_texture_screen);

  0003d	83 7d 08 00	 cmp	 DWORD PTR _composite_rain_texture_screen$[ebp], 0
  00041	75 18		 jne	 SHORT $LN9@apply_full
  00043	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??apply_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA
  00048	83 c0 12	 add	 eax, 18			; 00000012H
  0004b	50		 push	 eax
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
  00056	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@apply_full:

; 803  : 
; 804  : 		if (lock_screen (rain_texture_screen))

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00066	85 c0		 test	 eax, eax
  00068	0f 84 a5 00 00
	00		 je	 $LN10@apply_full

; 805  : 		{
; 806  : 			rain_texture_screen_data = get_screen_data (rain_texture_screen);

  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  00079	89 45 fc	 mov	 DWORD PTR _rain_texture_screen_data$7[ebp], eax

; 807  : 			rain_texture_screen_pitch = get_screen_pitch (rain_texture_screen);

  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  00087	89 45 ec	 mov	 DWORD PTR _rain_texture_screen_pitch$3[ebp], eax

; 808  : 
; 809  : 			if (lock_screen (composite_rain_texture_screen))

  0008a	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00093	85 c0		 test	 eax, eax
  00095	74 71		 je	 SHORT $LN11@apply_full

; 810  : 			{
; 811  : 				composite_rain_texture_screen_data = get_screen_data (composite_rain_texture_screen);

  00097	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  000a0	89 45 f8	 mov	 DWORD PTR _composite_rain_texture_screen_data$6[ebp], eax

; 812  : 				composite_rain_texture_screen_pitch = get_screen_pitch (composite_rain_texture_screen);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  000ac	89 45 e8	 mov	 DWORD PTR _composite_rain_texture_screen_pitch$2[ebp], eax

; 813  : 
; 814  : 				src = rain_texture_screen_data;

  000af	8b 45 fc	 mov	 eax, DWORD PTR _rain_texture_screen_data$7[ebp]
  000b2	89 45 f4	 mov	 DWORD PTR _src$5[ebp], eax

; 815  : 
; 816  : 				dst = composite_rain_texture_screen_data;

  000b5	8b 45 f8	 mov	 eax, DWORD PTR _composite_rain_texture_screen_data$6[ebp]
  000b8	89 45 f0	 mov	 DWORD PTR _dst$4[ebp], eax

; 817  : 
; 818  : 				for (y = 0; y < RAIN_TEXTURE_SIZE; y++)

  000bb	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _y$1[ebp], 0
  000c2	eb 09		 jmp	 SHORT $LN4@apply_full
$LN2@apply_full:
  000c4	8b 45 e4	 mov	 eax, DWORD PTR _y$1[ebp]
  000c7	83 c0 01	 add	 eax, 1
  000ca	89 45 e4	 mov	 DWORD PTR _y$1[ebp], eax
$LN4@apply_full:
  000cd	81 7d e4 80 00
	00 00		 cmp	 DWORD PTR _y$1[ebp], 128 ; 00000080H
  000d4	7d 29		 jge	 SHORT $LN3@apply_full

; 819  : 				{
; 820  : 					memcpy (dst, src, RAIN_TEXTURE_SIZE * sizeof (rgb_packed));

  000d6	68 00 01 00 00	 push	 256			; 00000100H
  000db	8b 45 f4	 mov	 eax, DWORD PTR _src$5[ebp]
  000de	50		 push	 eax
  000df	8b 4d f0	 mov	 ecx, DWORD PTR _dst$4[ebp]
  000e2	51		 push	 ecx
  000e3	e8 00 00 00 00	 call	 _memcpy
  000e8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 821  : 
; 822  : 					src += rain_texture_screen_pitch;

  000eb	8b 45 f4	 mov	 eax, DWORD PTR _src$5[ebp]
  000ee	03 45 ec	 add	 eax, DWORD PTR _rain_texture_screen_pitch$3[ebp]
  000f1	89 45 f4	 mov	 DWORD PTR _src$5[ebp], eax

; 823  : 
; 824  : 					dst += composite_rain_texture_screen_pitch;

  000f4	8b 45 f0	 mov	 eax, DWORD PTR _dst$4[ebp]
  000f7	03 45 e8	 add	 eax, DWORD PTR _composite_rain_texture_screen_pitch$2[ebp]
  000fa	89 45 f0	 mov	 DWORD PTR _dst$4[ebp], eax

; 825  : 				}

  000fd	eb c5		 jmp	 SHORT $LN2@apply_full
$LN3@apply_full:

; 826  : 
; 827  : 				unlock_screen (composite_rain_texture_screen);

  000ff	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00102	50		 push	 eax
  00103	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN11@apply_full:

; 828  : 			}
; 829  : 
; 830  : 			unlock_screen (rain_texture_screen);

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN10@apply_full:

; 831  : 		}
; 832  : 	}
; 833  : 	else

  00113	eb 2c		 jmp	 SHORT $LN7@apply_full
$LN6@apply_full:

; 834  : 	{
; 835  : 
; 836  : 		blit_screens ( rain_texture_screen, composite_rain_texture_screen,

  00115	68 80 00 00 00	 push	 128			; 00000080H
  0011a	68 80 00 00 00	 push	 128			; 00000080H
  0011f	6a 00		 push	 0
  00121	6a 00		 push	 0
  00123	68 80 00 00 00	 push	 128			; 00000080H
  00128	68 80 00 00 00	 push	 128			; 00000080H
  0012d	6a 00		 push	 0
  0012f	6a 00		 push	 0
  00131	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00134	50		 push	 eax
  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 ?blit_screens@@YGXPAUSCREEN@@0HHHHHHHH@Z ; blit_screens
$LN7@apply_full:

; 837  : 								0, 0, RAIN_TEXTURE_SIZE, RAIN_TEXTURE_SIZE,
; 838  : 								0, 0, RAIN_TEXTURE_SIZE, RAIN_TEXTURE_SIZE );
; 839  : 	}
; 840  : 
; 841  : 	flush_screen_texture_graphics (composite_rain_texture_screen);

  00141	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 842  : }

  0014a	5f		 pop	 edi
  0014b	5e		 pop	 esi
  0014c	5b		 pop	 ebx
  0014d	8b e5		 mov	 esp, ebp
  0014f	5d		 pop	 ebp
  00150	c2 04 00	 ret	 4
?apply_full_rain_effect@@YGXPAUSCREEN@@@Z ENDP		; apply_full_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?clear_rain_effect@@YGXPAUSCREEN@@@Z
_TEXT	SEGMENT
tv134 = -92						; size = 4
tv85 = -92						; size = 4
_y$ = -24						; size = 4
_x$ = -20						; size = 4
_count$ = -16						; size = 4
_composite_rain_texture_screen_pitch$ = -12		; size = 4
_dst$ = -8						; size = 4
_composite_rain_texture_screen_data$ = -4		; size = 4
_composite_rain_texture_screen$ = 8			; size = 4
?clear_rain_effect@@YGXPAUSCREEN@@@Z PROC		; clear_rain_effect, COMDAT

; 726  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 727  : 	unsigned char
; 728  : 		*composite_rain_texture_screen_data,
; 729  : 		*dst;
; 730  : 
; 731  : 	int
; 732  : 		composite_rain_texture_screen_pitch,
; 733  : 		count,
; 734  : 		x,
; 735  : 		y;
; 736  : 
; 737  : 	ASSERT (composite_rain_texture_screen);

  00009	83 7d 08 00	 cmp	 DWORD PTR _composite_rain_texture_screen$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN6@clear_rain
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clear_rain_effect@@YGXPAUSCREEN@@@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@clear_rain:

; 738  : 
; 739  : 	if (lock_screen (composite_rain_texture_screen))

  00027	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00030	85 c0		 test	 eax, eax
  00032	0f 84 67 01 00
	00		 je	 $LN7@clear_rain

; 740  : 	{
; 741  : 		composite_rain_texture_screen_data = get_screen_data (composite_rain_texture_screen);

  00038	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  00041	89 45 fc	 mov	 DWORD PTR _composite_rain_texture_screen_data$[ebp], eax

; 742  : 		composite_rain_texture_screen_pitch = get_screen_pitch (composite_rain_texture_screen);

  00044	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  0004d	89 45 f4	 mov	 DWORD PTR _composite_rain_texture_screen_pitch$[ebp], eax

; 743  : 
; 744  : 		count = (int) (CLEAR_RAIN_RATE * get_delta_time ());

  00050	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00058	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4099000000000000
  00060	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00064	89 45 f0	 mov	 DWORD PTR _count$[ebp], eax

; 745  : 
; 746  : 		if (get_screen_pixel_width(composite_rain_texture_screen) == 2)

  00067	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 ?get_screen_pixel_width@@YGHPAUSCREEN@@@Z ; get_screen_pixel_width
  00070	83 f8 02	 cmp	 eax, 2
  00073	0f 85 8c 00 00
	00		 jne	 $LN8@clear_rain
$LN2@clear_rain:

; 747  : 		{
; 748  : 
; 749  : 			while (count--)

  00079	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  0007c	89 45 a4	 mov	 DWORD PTR tv85[ebp], eax
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  00082	83 e9 01	 sub	 ecx, 1
  00085	89 4d f0	 mov	 DWORD PTR _count$[ebp], ecx
  00088	83 7d a4 00	 cmp	 DWORD PTR tv85[ebp], 0
  0008c	74 72		 je	 SHORT $LN3@clear_rain

; 750  : 			{
; 751  : 				x = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  0008e	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00098	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  0009d	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  000a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000a8	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000ab	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000b1	83 e1 7f	 and	 ecx, 127		; 0000007fH
  000b4	89 4d ec	 mov	 DWORD PTR _x$[ebp], ecx

; 752  : 				y = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  000b7	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  000c1	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  000c6	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000d1	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000d4	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000da	83 e1 7f	 and	 ecx, 127		; 0000007fH
  000dd	89 4d e8	 mov	 DWORD PTR _y$[ebp], ecx

; 753  : 
; 754  : 				dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * sizeof (rgb_packed));

  000e0	8b 45 e8	 mov	 eax, DWORD PTR _y$[ebp]
  000e3	0f af 45 f4	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$[ebp]
  000e7	03 45 fc	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$[ebp]
  000ea	8b 4d ec	 mov	 ecx, DWORD PTR _x$[ebp]
  000ed	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  000f0	89 55 f8	 mov	 DWORD PTR _dst$[ebp], edx

; 755  : 
; 756  : 				*(rgb_packed *)dst = 0;

  000f3	33 c0		 xor	 eax, eax
  000f5	8b 4d f8	 mov	 ecx, DWORD PTR _dst$[ebp]
  000f8	66 89 01	 mov	 WORD PTR [ecx], ax

; 757  : 			}

  000fb	e9 79 ff ff ff	 jmp	 $LN2@clear_rain
$LN3@clear_rain:

; 758  : 		}
; 759  : 		else

  00100	e9 88 00 00 00	 jmp	 $LN5@clear_rain
$LN8@clear_rain:

; 760  : 		{
; 761  : 
; 762  : 			while (count--)

  00105	8b 45 f0	 mov	 eax, DWORD PTR _count$[ebp]
  00108	89 45 a4	 mov	 DWORD PTR tv134[ebp], eax
  0010b	8b 4d f0	 mov	 ecx, DWORD PTR _count$[ebp]
  0010e	83 e9 01	 sub	 ecx, 1
  00111	89 4d f0	 mov	 DWORD PTR _count$[ebp], ecx
  00114	83 7d a4 00	 cmp	 DWORD PTR tv134[ebp], 0
  00118	74 73		 je	 SHORT $LN5@clear_rain

; 763  : 			{
; 764  : 				x = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  0011a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00124	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00129	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0012e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00134	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00137	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0013d	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00140	89 4d ec	 mov	 DWORD PTR _x$[ebp], ecx

; 765  : 				y = rand16 () & (RAIN_TEXTURE_SIZE - 1);

  00143	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  0014d	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00152	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  0015d	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00160	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00166	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00169	89 4d e8	 mov	 DWORD PTR _y$[ebp], ecx

; 766  : 
; 767  : 				dst = composite_rain_texture_screen_data + (y * composite_rain_texture_screen_pitch) + (x * sizeof (unsigned int));

  0016c	8b 45 e8	 mov	 eax, DWORD PTR _y$[ebp]
  0016f	0f af 45 f4	 imul	 eax, DWORD PTR _composite_rain_texture_screen_pitch$[ebp]
  00173	03 45 fc	 add	 eax, DWORD PTR _composite_rain_texture_screen_data$[ebp]
  00176	8b 4d ec	 mov	 ecx, DWORD PTR _x$[ebp]
  00179	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0017c	89 55 f8	 mov	 DWORD PTR _dst$[ebp], edx

; 768  : 
; 769  : 				*(unsigned int *)dst = 0;

  0017f	8b 45 f8	 mov	 eax, DWORD PTR _dst$[ebp]
  00182	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 770  : 			}

  00188	e9 78 ff ff ff	 jmp	 $LN8@clear_rain
$LN5@clear_rain:

; 771  : 		}
; 772  : 
; 773  : 		flush_screen_texture_graphics (composite_rain_texture_screen);

  0018d	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 774  : 
; 775  : 		unlock_screen (composite_rain_texture_screen);

  00196	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN7@clear_rain:

; 776  : 	}
; 777  : }

  0019f	5f		 pop	 edi
  001a0	5e		 pop	 esi
  001a1	5b		 pop	 ebx
  001a2	8b e5		 mov	 esp, ebp
  001a4	5d		 pop	 ebp
  001a5	c2 04 00	 ret	 4
?clear_rain_effect@@YGXPAUSCREEN@@@Z ENDP		; clear_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z
_TEXT	SEGMENT
_size$1 = -20						; size = 4
_y$ = -16						; size = 4
_composite_rain_texture_screen_pitch$ = -12		; size = 4
_dst$ = -8						; size = 4
_composite_rain_texture_screen_data$ = -4		; size = 4
_composite_rain_texture_screen$ = 8			; size = 4
?clear_full_rain_effect@@YGXPAUSCREEN@@@Z PROC		; clear_full_rain_effect, COMDAT

; 684  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 685  : 	unsigned char
; 686  : 		*composite_rain_texture_screen_data,
; 687  : 		*dst;
; 688  : 
; 689  : 	int
; 690  : 		composite_rain_texture_screen_pitch,
; 691  : 		y;
; 692  : 
; 693  : 	ASSERT (composite_rain_texture_screen);

  00009	83 7d 08 00	 cmp	 DWORD PTR _composite_rain_texture_screen$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@clear_full
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??clear_full_rain_effect@@YGXPAUSCREEN@@@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GHICIFDI@composite_rain_texture_screen@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@clear_full:

; 694  : 
; 695  : 	if (lock_screen (composite_rain_texture_screen))

  00027	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  00030	85 c0		 test	 eax, eax
  00032	74 77		 je	 SHORT $LN1@clear_full

; 696  : 	{
; 697  : 
; 698  : 		int
; 699  : 			size;
; 700  : 
; 701  : 		composite_rain_texture_screen_data = get_screen_data (composite_rain_texture_screen);

  00034	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 ?get_screen_data@@YGPAEPAUSCREEN@@@Z ; get_screen_data
  0003d	89 45 fc	 mov	 DWORD PTR _composite_rain_texture_screen_data$[ebp], eax

; 702  : 		composite_rain_texture_screen_pitch = get_screen_pitch (composite_rain_texture_screen);

  00040	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 ?get_screen_pitch@@YGHPAUSCREEN@@@Z ; get_screen_pitch
  00049	89 45 f4	 mov	 DWORD PTR _composite_rain_texture_screen_pitch$[ebp], eax

; 703  : 
; 704  : 		size = get_screen_pixel_width (composite_rain_texture_screen);

  0004c	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0004f	50		 push	 eax
  00050	e8 00 00 00 00	 call	 ?get_screen_pixel_width@@YGHPAUSCREEN@@@Z ; get_screen_pixel_width
  00055	89 45 ec	 mov	 DWORD PTR _size$1[ebp], eax

; 705  : 
; 706  : 		dst = composite_rain_texture_screen_data;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _composite_rain_texture_screen_data$[ebp]
  0005b	89 45 f8	 mov	 DWORD PTR _dst$[ebp], eax

; 707  : 
; 708  : 		for (y = 0; y < RAIN_TEXTURE_SIZE; y++)

  0005e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _y$[ebp], 0
  00065	eb 09		 jmp	 SHORT $LN4@clear_full
$LN2@clear_full:
  00067	8b 45 f0	 mov	 eax, DWORD PTR _y$[ebp]
  0006a	83 c0 01	 add	 eax, 1
  0006d	89 45 f0	 mov	 DWORD PTR _y$[ebp], eax
$LN4@clear_full:
  00070	81 7d f0 80 00
	00 00		 cmp	 DWORD PTR _y$[ebp], 128	; 00000080H
  00077	7d 20		 jge	 SHORT $LN3@clear_full

; 709  : 		{
; 710  : 			memset (dst, 0, RAIN_TEXTURE_SIZE * size);

  00079	8b 45 ec	 mov	 eax, DWORD PTR _size$1[ebp]
  0007c	c1 e0 07	 shl	 eax, 7
  0007f	50		 push	 eax
  00080	6a 00		 push	 0
  00082	8b 4d f8	 mov	 ecx, DWORD PTR _dst$[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 _memset
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 711  : 
; 712  : 			dst += composite_rain_texture_screen_pitch;

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _dst$[ebp]
  00091	03 45 f4	 add	 eax, DWORD PTR _composite_rain_texture_screen_pitch$[ebp]
  00094	89 45 f8	 mov	 DWORD PTR _dst$[ebp], eax

; 713  : 		}

  00097	eb ce		 jmp	 SHORT $LN2@clear_full
$LN3@clear_full:

; 714  : 
; 715  : 		flush_screen_texture_graphics (composite_rain_texture_screen);

  00099	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  0009c	50		 push	 eax
  0009d	e8 00 00 00 00	 call	 ?flush_screen_texture_graphics@@YGXPAUSCREEN@@@Z ; flush_screen_texture_graphics

; 716  : 
; 717  : 		unlock_screen (composite_rain_texture_screen);

  000a2	8b 45 08	 mov	 eax, DWORD PTR _composite_rain_texture_screen$[ebp]
  000a5	50		 push	 eax
  000a6	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN1@clear_full:

; 718  : 	}
; 719  : }

  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ENDP		; clear_full_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ
_TEXT	SEGMENT
tv137 = -88						; size = 4
tv83 = -88						; size = 4
tv143 = -84						; size = 4
tv129 = -84						; size = 4
tv75 = -84						; size = 4
_rain_fall_type$ = -16					; size = 4
_altitude$ = -12					; size = 4
_position$ = -8						; size = 4
_weather_mode$ = -4					; size = 4
?get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ PROC	; get_rain_fall_type, COMDAT

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 591  : 	weathermodes
; 592  : 		weather_mode;
; 593  : 
; 594  : 	vec3d
; 595  : 		*position;
; 596  : 
; 597  : 	float
; 598  : 		altitude;
; 599  : 
; 600  : 	rain_fall_types
; 601  : 		rain_fall_type;
; 602  : 
; 603  : 	ASSERT (get_gunship_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 18		 jne	 SHORT $LN4@get_rain_f
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
  00017	83 c0 0d	 add	 eax, 13			; 0000000dH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EANNPEON@get_gunship_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_rain_f:

; 604  : 
; 605  : 	position = get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00031	74 0c		 je	 SHORT $LN17@get_rain_f
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d ac	 mov	 DWORD PTR tv75[ebp], ecx
  0003d	eb 21		 jmp	 SHORT $LN18@get_rain_f
$LN17@get_rain_f:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
  00045	83 c2 0f	 add	 edx, 15			; 0000000fH
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN18@get_rain_f:
  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	74 09		 je	 SHORT $LN19@get_rain_f
  00069	c7 45 a8 08 00
	00 00		 mov	 DWORD PTR tv83[ebp], 8
  00070	eb 21		 jmp	 SHORT $LN20@get_rain_f
$LN19@get_rain_f:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
  00078	83 c2 0f	 add	 edx, 15			; 0000000fH
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN20@get_rain_f:
  00093	6a 08		 push	 8
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0009b	51		 push	 ecx
  0009c	6b 55 ac 60	 imul	 edx, DWORD PTR tv75[ebp], 96
  000a0	8b 45 a8	 mov	 eax, DWORD PTR tv83[ebp]
  000a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000aa	ff d1		 call	 ecx
  000ac	89 45 f8	 mov	 DWORD PTR _position$[ebp], eax

; 606  : 
; 607  : 	weather_mode = get_simple_session_weather_at_point (position);

  000af	8b 45 f8	 mov	 eax, DWORD PTR _position$[ebp]
  000b2	50		 push	 eax
  000b3	e8 00 00 00 00	 call	 ?get_simple_session_weather_at_point@@YG?AW4WEATHERMODES@@PAUVEC3D@@@Z ; get_simple_session_weather_at_point
  000b8	89 45 fc	 mov	 DWORD PTR _weather_mode$[ebp], eax

; 608  : 
; 609  : 	altitude = get_local_entity_float_value (get_gunship_entity (), FLOAT_TYPE_ALTITUDE);

  000bb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  000c2	74 0c		 je	 SHORT $LN21@get_rain_f
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	89 4d ac	 mov	 DWORD PTR tv129[ebp], ecx
  000ce	eb 21		 jmp	 SHORT $LN22@get_rain_f
$LN21@get_rain_f:
  000d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
  000d6	83 c2 13	 add	 edx, 19			; 00000013H
  000d9	52		 push	 edx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  000df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e4	50		 push	 eax
  000e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ea	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN22@get_rain_f:
  000f1	b9 01 00 00 00	 mov	 ecx, 1
  000f6	85 c9		 test	 ecx, ecx
  000f8	74 09		 je	 SHORT $LN23@get_rain_f
  000fa	c7 45 a8 06 00
	00 00		 mov	 DWORD PTR tv137[ebp], 6
  00101	eb 21		 jmp	 SHORT $LN24@get_rain_f
$LN23@get_rain_f:
  00103	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ@4JA
  00109	83 c2 13	 add	 edx, 19			; 00000013H
  0010c	52		 push	 edx
  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@CJPFCKCC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011d	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN24@get_rain_f:
  00124	6a 06		 push	 6
  00126	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0012c	51		 push	 ecx
  0012d	69 55 ac bc 02
	00 00		 imul	 edx, DWORD PTR tv129[ebp], 700
  00134	8b 45 a8	 mov	 eax, DWORD PTR tv137[ebp]
  00137	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0013e	ff d1		 call	 ecx
  00140	d9 5d f4	 fstp	 DWORD PTR _altitude$[ebp]

; 610  : 
; 611  : 	switch (weather_mode)

  00143	8b 45 fc	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  00146	89 45 ac	 mov	 DWORD PTR tv143[ebp], eax
  00149	8b 4d ac	 mov	 ecx, DWORD PTR tv143[ebp]
  0014c	83 e9 01	 sub	 ecx, 1
  0014f	89 4d ac	 mov	 DWORD PTR tv143[ebp], ecx
  00152	83 7d ac 03	 cmp	 DWORD PTR tv143[ebp], 3
  00156	0f 87 88 00 00
	00		 ja	 $LN15@get_rain_f
  0015c	8b 55 ac	 mov	 edx, DWORD PTR tv143[ebp]
  0015f	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN25@get_rain_f[edx*4]
$LN5@get_rain_f:

; 612  : 	{
; 613  : 		////////////////////////////////////////
; 614  : 		case WEATHERMODE_DRY:
; 615  : 		////////////////////////////////////////
; 616  : 		{
; 617  : 			rain_fall_type = RAIN_FALL_TYPE_DRY;

  00166	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 0

; 618  : 
; 619  : 			break;

  0016d	e9 83 00 00 00	 jmp	 $LN2@get_rain_f
$LN6@get_rain_f:

; 620  : 		}
; 621  : 		////////////////////////////////////////
; 622  : 		case WEATHERMODE_LIGHT_RAIN:
; 623  : 		////////////////////////////////////////
; 624  : 		{
; 625  : 			if (get_position_in_clouds (altitude) == POSITION_BELOW_CLOUDS)

  00172	51		 push	 ecx
  00173	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  00178	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017d	e8 00 00 00 00	 call	 ?get_position_in_clouds@@YGHM@Z ; get_position_in_clouds
  00182	85 c0		 test	 eax, eax
  00184	75 09		 jne	 SHORT $LN7@get_rain_f

; 626  : 			{
; 627  : 				rain_fall_type = RAIN_FALL_TYPE_LIGHT;

  00186	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 1

; 628  : 			}
; 629  : 			else

  0018d	eb 07		 jmp	 SHORT $LN8@get_rain_f
$LN7@get_rain_f:

; 630  : 			{
; 631  : 				rain_fall_type = RAIN_FALL_TYPE_DRY;

  0018f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 0
$LN8@get_rain_f:

; 632  : 			}
; 633  : 
; 634  : 			break;

  00196	eb 5d		 jmp	 SHORT $LN2@get_rain_f
$LN9@get_rain_f:

; 635  : 		}
; 636  : 		////////////////////////////////////////
; 637  : 		case WEATHERMODE_HEAVY_RAIN:
; 638  : 		////////////////////////////////////////
; 639  : 		{
; 640  : 			if (get_position_in_clouds (altitude) == POSITION_BELOW_CLOUDS)

  00198	51		 push	 ecx
  00199	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  0019e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a3	e8 00 00 00 00	 call	 ?get_position_in_clouds@@YGHM@Z ; get_position_in_clouds
  001a8	85 c0		 test	 eax, eax
  001aa	75 09		 jne	 SHORT $LN10@get_rain_f

; 641  : 			{
; 642  : 				rain_fall_type = RAIN_FALL_TYPE_HEAVY;

  001ac	c7 45 f0 02 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 2

; 643  : 			}
; 644  : 			else

  001b3	eb 07		 jmp	 SHORT $LN11@get_rain_f
$LN10@get_rain_f:

; 645  : 			{
; 646  : 				rain_fall_type = RAIN_FALL_TYPE_DRY;

  001b5	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 0
$LN11@get_rain_f:

; 647  : 			}
; 648  : 
; 649  : 			break;

  001bc	eb 37		 jmp	 SHORT $LN2@get_rain_f
$LN12@get_rain_f:

; 650  : 		}
; 651  : 		////////////////////////////////////////
; 652  : 		case WEATHERMODE_SNOW:
; 653  : 		////////////////////////////////////////
; 654  : 		{
; 655  : 			if (get_position_in_clouds (altitude) == POSITION_BELOW_CLOUDS)

  001be	51		 push	 ecx
  001bf	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _altitude$[ebp]
  001c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c9	e8 00 00 00 00	 call	 ?get_position_in_clouds@@YGHM@Z ; get_position_in_clouds
  001ce	85 c0		 test	 eax, eax
  001d0	75 09		 jne	 SHORT $LN13@get_rain_f

; 656  : 			{
; 657  : 				rain_fall_type = RAIN_FALL_TYPE_LIGHT;

  001d2	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 1

; 658  : 			}
; 659  : 			else

  001d9	eb 07		 jmp	 SHORT $LN14@get_rain_f
$LN13@get_rain_f:

; 660  : 			{
; 661  : 				rain_fall_type = RAIN_FALL_TYPE_DRY;

  001db	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rain_fall_type$[ebp], 0
$LN14@get_rain_f:

; 662  : 			}
; 663  : 
; 664  : 			break;

  001e2	eb 11		 jmp	 SHORT $LN2@get_rain_f
$LN15@get_rain_f:

; 665  : 		}
; 666  : 		////////////////////////////////////////
; 667  : 		default:
; 668  : 		////////////////////////////////////////
; 669  : 		{
; 670  : 			debug_fatal ("Invalid weather mode = %d", weather_mode);

  001e4	8b 45 fc	 mov	 eax, DWORD PTR _weather_mode$[ebp]
  001e7	50		 push	 eax
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GFBEMEAC@Invalid?5weather?5mode?5?$DN?5?$CFd@
  001ed	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  001f2	83 c4 08	 add	 esp, 8
$LN2@get_rain_f:

; 671  : 
; 672  : 			break;
; 673  : 		}
; 674  : 	}
; 675  : 
; 676  : 	return (rain_fall_type);

  001f5	8b 45 f0	 mov	 eax, DWORD PTR _rain_fall_type$[ebp]

; 677  : }

  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	8b e5		 mov	 esp, ebp
  001fd	5d		 pop	 ebp
  001fe	c3		 ret	 0
  001ff	90		 npad	 1
$LN25@get_rain_f:
  00200	00 00 00 00	 DD	 $LN5@get_rain_f
  00204	00 00 00 00	 DD	 $LN6@get_rain_f
  00208	00 00 00 00	 DD	 $LN9@get_rain_f
  0020c	00 00 00 00	 DD	 $LN12@get_rain_f
?get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ ENDP	; get_rain_fall_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?update_rain_effect@@YGXXZ
_TEXT	SEGMENT
tv65 = -68						; size = 4
?update_rain_effect@@YGXXZ PROC				; update_rain_effect, COMDAT

; 455  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 456  : 	rain_fall_type = get_rain_fall_type ();

  00009	e8 00 00 00 00	 call	 ?get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ ; get_rain_fall_type
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, eax

; 457  : 
; 458  : 	switch (rain_mode)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A ; rain_mode
  00018	89 45 bc	 mov	 DWORD PTR tv65[ebp], eax
  0001b	83 7d bc 00	 cmp	 DWORD PTR tv65[ebp], 0
  0001f	74 15		 je	 SHORT $LN4@update_rai
  00021	83 7d bc 01	 cmp	 DWORD PTR tv65[ebp], 1
  00025	74 32		 je	 SHORT $LN6@update_rai
  00027	83 7d bc 02	 cmp	 DWORD PTR tv65[ebp], 2
  0002b	0f 84 19 01 00
	00		 je	 $LN14@update_rai
  00031	e9 21 02 00 00	 jmp	 $LN2@update_rai
$LN4@update_rai:

; 459  : 	{
; 460  : 		////////////////////////////////////////
; 461  : 		case RAIN_MODE_DRY:
; 462  : 		////////////////////////////////////////
; 463  : 		{
; 464  : 			if (rain_fall_type != RAIN_FALL_TYPE_DRY)

  00036	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, 0
  0003d	74 15		 je	 SHORT $LN5@update_rai

; 465  : 			{
; 466  : 				rain_mode = RAIN_MODE_APPLY;

  0003f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 1 ; rain_mode

; 467  : 
; 468  : 				rain_timer = 0.0;

  00049	0f 57 c0	 xorps	 xmm0, xmm0
  0004c	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0
$LN5@update_rai:

; 469  : 			}
; 470  : 
; 471  : 			break;

  00054	e9 fe 01 00 00	 jmp	 $LN2@update_rai
$LN6@update_rai:

; 472  : 		}
; 473  : 		////////////////////////////////////////
; 474  : 		case RAIN_MODE_APPLY:
; 475  : 		////////////////////////////////////////
; 476  : 		{
; 477  : 			if (rain_fall_type == RAIN_FALL_TYPE_DRY)

  00059	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, 0
  00060	75 1f		 jne	 SHORT $LN7@update_rai

; 478  : 			{
; 479  : 				rain_mode = RAIN_MODE_CLEAR;

  00062	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 2 ; rain_mode

; 480  : 
; 481  : 				rain_timer = CLEAR_RAIN_TIME;

  0006c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42700000
  00074	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0

; 482  : 
; 483  : 				break;

  0007c	e9 d6 01 00 00	 jmp	 $LN2@update_rai
$LN7@update_rai:

; 484  : 			}
; 485  : 
; 486  : 			apply_rain_effect (composite_rain_texture_screen, LIGHT_RAIN_FALL_RATE, HEAVY_RAIN_FALL_RATE);

  00081	68 58 02 00 00	 push	 600			; 00000258H
  00086	6a 64		 push	 100			; 00000064H
  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  0008d	50		 push	 eax
  0008e	e8 00 00 00 00	 call	 ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ; apply_rain_effect

; 487  : 
; 488  : 			if (pilot_wiper)

  00093	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  0009a	74 50		 je	 SHORT $LN10@update_rai

; 489  : 			{
; 490  : 				if (pilot_wipe_type == WIPE_TYPE_BLOWER)

  0009c	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?pilot_wipe_type@@3W4WIPE_TYPES@@A, 5 ; pilot_wipe_type
  000a3	75 1c		 jne	 SHORT $LN9@update_rai

; 491  : 				{
; 492  : 					apply_rain_effect (composite_pilot_wiped_rain_texture_screen, BLOWER_LIGHT_RAIN_FALL_RATE, BLOWER_HEAVY_RAIN_FALL_RATE);

  000a5	6a 14		 push	 20			; 00000014H
  000a7	6a 0a		 push	 10			; 0000000aH
  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ; apply_rain_effect

; 493  : 
; 494  : 					clear_rain_effect (composite_pilot_wiped_rain_texture_screen);

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?clear_rain_effect@@YGXPAUSCREEN@@@Z ; clear_rain_effect

; 495  : 				}
; 496  : 				else

  000bf	eb 2b		 jmp	 SHORT $LN10@update_rai
$LN9@update_rai:

; 497  : 				{
; 498  : 					apply_rain_effect (composite_pilot_wiped_rain_texture_screen, LIGHT_RAIN_FALL_RATE, HEAVY_RAIN_FALL_RATE);

  000c1	68 58 02 00 00	 push	 600			; 00000258H
  000c6	6a 64		 push	 100			; 00000064H
  000c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ; apply_rain_effect

; 499  : 
; 500  : 					wipe_rain_effect (pilot_wiped_rain_texture_screen, composite_pilot_wiped_rain_texture_screen, pilot_wipe_type);

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_wipe_type@@3W4WIPE_TYPES@@A ; pilot_wipe_type
  000d8	50		 push	 eax
  000d9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  000df	51		 push	 ecx
  000e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A ; pilot_wiped_rain_texture_screen
  000e6	52		 push	 edx
  000e7	e8 00 00 00 00	 call	 ?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z ; wipe_rain_effect
$LN10@update_rai:

; 501  : 				}
; 502  : 			}
; 503  : 
; 504  : 			if (co_pilot_wiper)

  000ec	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  000f3	74 50		 je	 SHORT $LN13@update_rai

; 505  : 			{
; 506  : 				if (co_pilot_wipe_type == WIPE_TYPE_BLOWER)

  000f5	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?co_pilot_wipe_type@@3W4WIPE_TYPES@@A, 5 ; co_pilot_wipe_type
  000fc	75 1c		 jne	 SHORT $LN12@update_rai

; 507  : 				{
; 508  : 					apply_rain_effect (composite_co_pilot_wiped_rain_texture_screen, BLOWER_LIGHT_RAIN_FALL_RATE, BLOWER_HEAVY_RAIN_FALL_RATE);

  000fe	6a 14		 push	 20			; 00000014H
  00100	6a 0a		 push	 10			; 0000000aH
  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ; apply_rain_effect

; 509  : 
; 510  : 					clear_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?clear_rain_effect@@YGXPAUSCREEN@@@Z ; clear_rain_effect

; 511  : 				}
; 512  : 				else

  00118	eb 2b		 jmp	 SHORT $LN13@update_rai
$LN12@update_rai:

; 513  : 				{
; 514  : 					apply_rain_effect (composite_co_pilot_wiped_rain_texture_screen, LIGHT_RAIN_FALL_RATE, HEAVY_RAIN_FALL_RATE);

  0011a	68 58 02 00 00	 push	 600			; 00000258H
  0011f	6a 64		 push	 100			; 00000064H
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?apply_rain_effect@@YGXPAUSCREEN@@HH@Z ; apply_rain_effect

; 515  : 
; 516  : 					wipe_rain_effect (co_pilot_wiped_rain_texture_screen, composite_co_pilot_wiped_rain_texture_screen, co_pilot_wipe_type);

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?co_pilot_wipe_type@@3W4WIPE_TYPES@@A ; co_pilot_wipe_type
  00131	50		 push	 eax
  00132	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00138	51		 push	 ecx
  00139	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A ; co_pilot_wiped_rain_texture_screen
  0013f	52		 push	 edx
  00140	e8 00 00 00 00	 call	 ?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z ; wipe_rain_effect
$LN13@update_rai:

; 517  : 				}
; 518  : 			}
; 519  : 
; 520  : 			break;

  00145	e9 0d 01 00 00	 jmp	 $LN2@update_rai
$LN14@update_rai:

; 521  : 		}
; 522  : 		////////////////////////////////////////
; 523  : 		case RAIN_MODE_CLEAR:
; 524  : 		////////////////////////////////////////
; 525  : 		{
; 526  : 			if (rain_fall_type != RAIN_FALL_TYPE_DRY)

  0014a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, 0
  00151	74 1a		 je	 SHORT $LN15@update_rai

; 527  : 			{
; 528  : 				rain_mode = RAIN_MODE_APPLY;

  00153	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 1 ; rain_mode

; 529  : 
; 530  : 				rain_timer = 0.0;

  0015d	0f 57 c0	 xorps	 xmm0, xmm0
  00160	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0

; 531  : 
; 532  : 				break;

  00168	e9 ea 00 00 00	 jmp	 $LN2@update_rai
$LN15@update_rai:

; 533  : 			}
; 534  : 
; 535  : 			rain_timer -= get_delta_time ();

  0016d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?rain_timer@@3MA
  00175	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0017d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0

; 536  : 
; 537  : 			if (rain_timer < 0.0)

  00185	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?rain_timer@@3MA
  0018d	0f 57 c9	 xorps	 xmm1, xmm1
  00190	66 0f 2f c8	 comisd	 xmm1, xmm0
  00194	76 4a		 jbe	 SHORT $LN16@update_rai

; 538  : 			{
; 539  : 				rain_mode = RAIN_MODE_DRY;

  00196	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 0 ; rain_mode

; 540  : 
; 541  : 				rain_timer = 0.0;

  001a0	0f 57 c0	 xorps	 xmm0, xmm0
  001a3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0

; 542  : 
; 543  : 				clear_full_rain_effect (composite_rain_texture_screen);

  001ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect

; 544  : 
; 545  : 				if (pilot_wiper)

  001b6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  001bd	74 0b		 je	 SHORT $LN17@update_rai

; 546  : 				{
; 547  : 					clear_full_rain_effect (composite_pilot_wiped_rain_texture_screen);

  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  001c4	50		 push	 eax
  001c5	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN17@update_rai:

; 548  : 				}
; 549  : 
; 550  : 				if (co_pilot_wiper)

  001ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  001d1	74 0b		 je	 SHORT $LN18@update_rai

; 551  : 				{
; 552  : 					clear_full_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  001d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  001d8	50		 push	 eax
  001d9	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN18@update_rai:

; 553  : 				}
; 554  : 
; 555  : 				break;

  001de	eb 77		 jmp	 SHORT $LN2@update_rai
$LN16@update_rai:

; 556  : 			}
; 557  : 
; 558  : 			clear_rain_effect (composite_rain_texture_screen);

  001e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 ?clear_rain_effect@@YGXPAUSCREEN@@@Z ; clear_rain_effect

; 559  : 
; 560  : 			if (pilot_wiper)

  001eb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  001f2	74 2d		 je	 SHORT $LN20@update_rai

; 561  : 			{
; 562  : 				clear_rain_effect (composite_pilot_wiped_rain_texture_screen);

  001f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?clear_rain_effect@@YGXPAUSCREEN@@@Z ; clear_rain_effect

; 563  : 
; 564  : 				if (pilot_wipe_type != WIPE_TYPE_BLOWER)

  001ff	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?pilot_wipe_type@@3W4WIPE_TYPES@@A, 5 ; pilot_wipe_type
  00206	74 19		 je	 SHORT $LN20@update_rai

; 565  : 				{
; 566  : 					wipe_rain_effect (pilot_wiped_rain_texture_screen, composite_pilot_wiped_rain_texture_screen, pilot_wipe_type);

  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_wipe_type@@3W4WIPE_TYPES@@A ; pilot_wipe_type
  0020d	50		 push	 eax
  0020e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00214	51		 push	 ecx
  00215	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A ; pilot_wiped_rain_texture_screen
  0021b	52		 push	 edx
  0021c	e8 00 00 00 00	 call	 ?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z ; wipe_rain_effect
$LN20@update_rai:

; 567  : 				}
; 568  : 			}
; 569  : 
; 570  : 			if (co_pilot_wiper)

  00221	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  00228	74 2d		 je	 SHORT $LN22@update_rai

; 571  : 			{
; 572  : 				clear_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  0022a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  0022f	50		 push	 eax
  00230	e8 00 00 00 00	 call	 ?clear_rain_effect@@YGXPAUSCREEN@@@Z ; clear_rain_effect

; 573  : 
; 574  : 				if (co_pilot_wipe_type != WIPE_TYPE_BLOWER)

  00235	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?co_pilot_wipe_type@@3W4WIPE_TYPES@@A, 5 ; co_pilot_wipe_type
  0023c	74 19		 je	 SHORT $LN22@update_rai

; 575  : 				{
; 576  : 					wipe_rain_effect (co_pilot_wiped_rain_texture_screen, composite_co_pilot_wiped_rain_texture_screen, co_pilot_wipe_type);

  0023e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?co_pilot_wipe_type@@3W4WIPE_TYPES@@A ; co_pilot_wipe_type
  00243	50		 push	 eax
  00244	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  0024a	51		 push	 ecx
  0024b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A ; co_pilot_wiped_rain_texture_screen
  00251	52		 push	 edx
  00252	e8 00 00 00 00	 call	 ?wipe_rain_effect@@YGXPAUSCREEN@@0W4WIPE_TYPES@@@Z ; wipe_rain_effect
$LN22@update_rai:
$LN2@update_rai:

; 577  : 				}
; 578  : 			}
; 579  : 
; 580  : 			break;
; 581  : 		}
; 582  : 	}
; 583  : }

  00257	5f		 pop	 edi
  00258	5e		 pop	 esi
  00259	5b		 pop	 ebx
  0025a	8b e5		 mov	 esp, ebp
  0025c	5d		 pop	 ebp
  0025d	c3		 ret	 0
?update_rain_effect@@YGXXZ ENDP				; update_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?update_wiper@@YGXXZ
_TEXT	SEGMENT
tv64 = -68						; size = 4
?update_wiper@@YGXXZ PROC				; update_wiper, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 376  : 	wiper_pos1 = wiper_pos2;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_pos2@@3HA
  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?wiper_pos1@@3HA, eax

; 377  : 
; 378  : 	switch (wiper_mode)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A ; wiper_mode
  00018	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0001b	83 7d bc 00	 cmp	 DWORD PTR tv64[ebp], 0
  0001f	74 15		 je	 SHORT $LN4@update_wip
  00021	83 7d bc 01	 cmp	 DWORD PTR tv64[ebp], 1
  00025	74 6b		 je	 SHORT $LN7@update_wip
  00027	83 7d bc 02	 cmp	 DWORD PTR tv64[ebp], 2
  0002b	0f 84 ba 00 00
	00		 je	 $LN9@update_wip
  00031	e9 23 01 00 00	 jmp	 $LN14@update_wip
$LN4@update_wip:

; 379  : 	{
; 380  : 		////////////////////////////////////////
; 381  : 		case WIPER_MODE_STOWED:
; 382  : 		////////////////////////////////////////
; 383  : 		{
; 384  : 			if (wiper_on)

  00036	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?wiper_on@@3HA, 0 ; wiper_on
  0003d	74 43		 je	 SHORT $LN6@update_wip

; 385  : 			{
; 386  : 				wipe_delay -= get_delta_time ();

  0003f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?wipe_delay@@3MA
  00047	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0

; 387  : 
; 388  : 				if (wipe_delay < 0.0)

  00057	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wipe_delay@@3MA
  0005f	0f 57 c9	 xorps	 xmm1, xmm1
  00062	66 0f 2f c8	 comisd	 xmm1, xmm0
  00066	76 1a		 jbe	 SHORT $LN6@update_wip

; 389  : 				{
; 390  : 					wiper_mode = WIPER_MODE_EXTEND_SWEEP;

  00068	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 1 ; wiper_mode

; 391  : 
; 392  : 					wipe_delay = wipe_interval;

  00072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?wipe_interval@@3MA
  0007a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0
$LN6@update_wip:

; 393  : 				}
; 394  : 			}
; 395  : 
; 396  : 			wiper_position = MIN_WIPER_POSITION;

  00082	0f 57 c0	 xorps	 xmm0, xmm0
  00085	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 397  : 
; 398  : 			break;

  0008d	e9 da 00 00 00	 jmp	 $LN2@update_wip
$LN7@update_wip:

; 399  : 		}
; 400  : 		////////////////////////////////////////
; 401  : 		case WIPER_MODE_EXTEND_SWEEP:
; 402  : 		////////////////////////////////////////
; 403  : 		{
; 404  : 			wiper_position += (MAX_WIPER_POSITION - MIN_WIPER_POSITION) * WIPER_RATE * get_delta_time ();

  00092	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0009a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@405fff5c28f5c28f
  000a2	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?wiper_position@@3MA
  000aa	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000ae	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000b2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 405  : 
; 406  : 			if (wiper_position > MAX_WIPER_POSITION)

  000ba	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wiper_position@@3MA
  000c2	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@405fff5c28f5c28f
  000ca	76 1a		 jbe	 SHORT $LN8@update_wip

; 407  : 			{
; 408  : 				wiper_position = MAX_WIPER_POSITION;

  000cc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@42fffae1
  000d4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 409  : 
; 410  : 				wiper_mode = WIPER_MODE_RETURN_SWEEP;

  000dc	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 2 ; wiper_mode
$LN8@update_wip:

; 411  : 			}
; 412  : 
; 413  : 			break;

  000e6	e9 81 00 00 00	 jmp	 $LN2@update_wip
$LN9@update_wip:

; 414  : 		}
; 415  : 		////////////////////////////////////////
; 416  : 		case WIPER_MODE_RETURN_SWEEP:
; 417  : 		////////////////////////////////////////
; 418  : 		{
; 419  : 			wiper_position -= (MAX_WIPER_POSITION - MIN_WIPER_POSITION) * WIPER_RATE * get_delta_time ();

  000eb	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  000f3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@405fff5c28f5c28f
  000fb	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?wiper_position@@3MA
  00103	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00107	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0010b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 420  : 
; 421  : 			if (wiper_position < MIN_WIPER_POSITION)

  00113	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?wiper_position@@3MA
  0011b	0f 57 c9	 xorps	 xmm1, xmm1
  0011e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00122	76 33		 jbe	 SHORT $LN12@update_wip

; 422  : 			{
; 423  : 				wiper_position = MIN_WIPER_POSITION;

  00124	0f 57 c0	 xorps	 xmm0, xmm0
  00127	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 424  : 
; 425  : 				if ((!wiper_on) || intermittent_wipe)

  0012f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?wiper_on@@3HA, 0 ; wiper_on
  00136	74 09		 je	 SHORT $LN13@update_wip
  00138	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?intermittent_wipe@@3HA, 0
  0013f	74 0c		 je	 SHORT $LN11@update_wip
$LN13@update_wip:

; 426  : 				{
; 427  : 					wiper_mode = WIPER_MODE_STOWED;

  00141	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 0 ; wiper_mode

; 428  : 				}
; 429  : 				else

  0014b	eb 0a		 jmp	 SHORT $LN12@update_wip
$LN11@update_wip:

; 430  : 				{
; 431  : 					wiper_mode = WIPER_MODE_EXTEND_SWEEP;

  0014d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 1 ; wiper_mode
$LN12@update_wip:

; 432  : 				}
; 433  : 			}
; 434  : 
; 435  : 			break;

  00157	eb 13		 jmp	 SHORT $LN2@update_wip
$LN14@update_wip:

; 436  : 		}
; 437  : 		////////////////////////////////////////
; 438  : 		default:
; 439  : 		////////////////////////////////////////
; 440  : 		{
; 441  : 			debug_fatal ("Invalid wiper mode = %d", wiper_mode);

  00159	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A ; wiper_mode
  0015e	50		 push	 eax
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@GHNGLMLL@Invalid?5wiper?5mode?5?$DN?5?$CFd@
  00164	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00169	83 c4 08	 add	 esp, 8
$LN2@update_wip:

; 442  : 
; 443  : 			break;
; 444  : 		}
; 445  : 	}
; 446  : 
; 447  : 	convert_float_to_int (wiper_position, &wiper_pos2);

  0016c	68 00 00 00 00	 push	 OFFSET ?wiper_pos2@@3HA
  00171	51		 push	 ecx
  00172	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?wiper_position@@3MA
  0017a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017f	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 448  : }

  00184	5f		 pop	 edi
  00185	5e		 pop	 esi
  00186	5b		 pop	 ebx
  00187	8b e5		 mov	 esp, ebp
  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
?update_wiper@@YGXXZ ENDP				; update_wiper
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?toggle_intermittent_wipe@@YGXXZ
_TEXT	SEGMENT
?toggle_intermittent_wipe@@YGXXZ PROC			; toggle_intermittent_wipe, COMDAT

; 351  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 352  : 	if (intermittent_wipe)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?intermittent_wipe@@3HA, 0
  00010	74 22		 je	 SHORT $LN2@toggle_int

; 353  : 	{
; 354  : 		intermittent_wipe = FALSE;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?intermittent_wipe@@3HA, 0

; 355  : 
; 356  : 		wipe_interval = CONTINUOUS_WIPE_INTERVAL;

  0001c	0f 57 c0	 xorps	 xmm0, xmm0
  0001f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_interval@@3MA, xmm0

; 357  : 
; 358  : 		wipe_delay = CONTINUOUS_WIPE_INTERVAL;

  00027	0f 57 c0	 xorps	 xmm0, xmm0
  0002a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0

; 359  : 	}
; 360  : 	else

  00032	eb 2a		 jmp	 SHORT $LN3@toggle_int
$LN2@toggle_int:

; 361  : 	{
; 362  : 		intermittent_wipe = TRUE;

  00034	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?intermittent_wipe@@3HA, 1

; 363  : 
; 364  : 		wipe_interval = INTERMITTENT_WIPE_INTERVAL;

  0003e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00046	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_interval@@3MA, xmm0

; 365  : 
; 366  : 		wipe_delay = INTERMITTENT_WIPE_INTERVAL;

  0004e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40a00000
  00056	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0
$LN3@toggle_int:

; 367  : 	}
; 368  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?toggle_intermittent_wipe@@YGXXZ ENDP			; toggle_intermittent_wipe
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?toggle_wiper_on@@YGXXZ
_TEXT	SEGMENT
?toggle_wiper_on@@YGXXZ PROC				; toggle_wiper_on, COMDAT

; 340  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 341  : 	wiper_on ^= 1;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wiper_on@@3HA ; wiper_on
  0000e	83 f0 01	 xor	 eax, 1
  00011	a3 00 00 00 00	 mov	 DWORD PTR ?wiper_on@@3HA, eax ; wiper_on

; 342  : 
; 343  : 	wipe_delay = 0.0;

  00016	0f 57 c0	 xorps	 xmm0, xmm0
  00019	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0

; 344  : }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?toggle_wiper_on@@YGXXZ ENDP				; toggle_wiper_on
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ
_TEXT	SEGMENT
?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ PROC ; update_common_virtual_cockpit_wiper_and_rain_effect, COMDAT

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 307  : 	if (rain_textures_enabled != get_global_graphics_rain_textures_enabled ())

  00009	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  0000e	c1 e8 02	 shr	 eax, 2
  00011	83 e0 01	 and	 eax, 1
  00014	39 05 00 00 00
	00		 cmp	 DWORD PTR ?rain_textures_enabled@@3HA, eax
  0001a	74 40		 je	 SHORT $LN2@update_com

; 308  : 	{
; 309  : 		if (!get_global_graphics_rain_textures_enabled ())

  0001c	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  00021	c1 e8 02	 shr	 eax, 2
  00024	83 e0 01	 and	 eax, 1
  00027	75 33		 jne	 SHORT $LN2@update_com

; 310  : 		{
; 311  : 			clear_full_rain_effect (composite_rain_texture_screen);

  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  0002e	50		 push	 eax
  0002f	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect

; 312  : 
; 313  : 			if (pilot_wiper)

  00034	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  0003b	74 0b		 je	 SHORT $LN4@update_com

; 314  : 			{
; 315  : 				clear_full_rain_effect (composite_pilot_wiped_rain_texture_screen);

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN4@update_com:

; 316  : 			}
; 317  : 
; 318  : 			if (co_pilot_wiper)

  00048	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  0004f	74 0b		 je	 SHORT $LN2@update_com

; 319  : 			{
; 320  : 				clear_full_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN2@update_com:

; 321  : 			}
; 322  : 		}
; 323  : 	}
; 324  : 
; 325  : 	rain_textures_enabled = get_global_graphics_rain_textures_enabled ();

  0005c	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  00061	c1 e8 02	 shr	 eax, 2
  00064	83 e0 01	 and	 eax, 1
  00067	a3 00 00 00 00	 mov	 DWORD PTR ?rain_textures_enabled@@3HA, eax

; 326  : 
; 327  : 	update_wiper ();

  0006c	e8 00 00 00 00	 call	 ?update_wiper@@YGXXZ	; update_wiper

; 328  : 
; 329  : 	if (rain_textures_enabled)

  00071	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?rain_textures_enabled@@3HA, 0
  00078	74 05		 je	 SHORT $LN1@update_com

; 330  : 	{
; 331  : 		update_rain_effect ();

  0007a	e8 00 00 00 00	 call	 ?update_rain_effect@@YGXXZ ; update_rain_effect
$LN1@update_com:

; 332  : 	}
; 333  : }

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?update_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ENDP ; update_common_virtual_cockpit_wiper_and_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ
_TEXT	SEGMENT
?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ PROC ; deinitialise_common_virtual_cockpit_wiper_and_rain_effect, COMDAT

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 292  : 	destroy_screen (rain_texture_screen);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 293  : 
; 294  : 	destroy_screen (composite_rain_texture_screen);

  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 295  : 
; 296  : 	destroy_screen (composite_pilot_wiped_rain_texture_screen);

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 297  : 
; 298  : 	destroy_screen (composite_co_pilot_wiped_rain_texture_screen);

  0002a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ?destroy_screen@@YGHPAUSCREEN@@@Z ; destroy_screen

; 299  : }

  00035	5f		 pop	 edi
  00036	5e		 pop	 esi
  00037	5b		 pop	 ebx
  00038	8b e5		 mov	 esp, ebp
  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?deinitialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ENDP ; deinitialise_common_virtual_cockpit_wiper_and_rain_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\common\co_wiper.c
;	COMDAT ?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ
_TEXT	SEGMENT
?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ PROC ; initialise_common_virtual_cockpit_wiper_and_rain_effect, COMDAT

; 195  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 196  : 	#if DEBUG_MODULE
; 197  : 
; 198  : 	debug_watch ("wiper_on = %d", MT_INT, &wiper_on);
; 199  : 
; 200  : 	debug_watch ("intermittent_wipe = %d", MT_INT, &intermittent_wipe);
; 201  : 
; 202  : 	debug_watch ("wiper_mode = %d", MT_INT, &wiper_mode);
; 203  : 
; 204  : 	debug_watch ("wiper_position = %f", MT_FLOAT, &wiper_position);
; 205  : 
; 206  : 	debug_watch ("wiper_pos1 = %d", MT_INT, &wiper_pos1);
; 207  : 
; 208  : 	debug_watch ("wiper_pos2 = %d", MT_INT, &wiper_pos2);
; 209  : 
; 210  : 	debug_watch ("wipe_interval = %f", MT_FLOAT, &wipe_interval);
; 211  : 
; 212  : 	debug_watch ("wipe_delay = %f", MT_FLOAT, &wipe_delay);
; 213  : 
; 214  : 	debug_watch ("rain_mode = %d", MT_INT, &rain_mode);
; 215  : 
; 216  : 	debug_watch ("rain_fall_type = %d", MT_INT, &rain_fall_type);
; 217  : 
; 218  : 	debug_watch ("rain_timer = %f", MT_FLOAT, &rain_timer);
; 219  : 
; 220  : 	#endif
; 221  : 
; 222  : 	rain_texture_screen = create_screen_for_system_texture (TEXTURE_INDEX_RAIN);

  00009	68 26 08 00 00	 push	 2086			; 00000826H
  0000e	e8 00 00 00 00	 call	 ?create_screen_for_system_texture@@YGPAUSCREEN@@H@Z ; create_screen_for_system_texture
  00013	a3 00 00 00 00	 mov	 DWORD PTR ?rain_texture_screen@@3PAUSCREEN@@A, eax

; 223  : 
; 224  : 	composite_rain_texture_screen = create_system_texture_screen (RAIN_TEXTURE_SIZE, RAIN_TEXTURE_SIZE, TEXTURE_INDEX_RAIN_EFFECT, TEXTURE_TYPE_MULTIPLEALPHA);

  00018	6a 03		 push	 3
  0001a	68 27 08 00 00	 push	 2087			; 00000827H
  0001f	68 80 00 00 00	 push	 128			; 00000080H
  00024	68 80 00 00 00	 push	 128			; 00000080H
  00029	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  0002e	a3 00 00 00 00	 mov	 DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A, eax

; 225  : 
; 226  : 	composite_pilot_wiped_rain_texture_screen = create_system_texture_screen (RAIN_TEXTURE_SIZE, RAIN_TEXTURE_SIZE, TEXTURE_INDEX_PILOT_RAIN_WIPE_EFFECT, TEXTURE_TYPE_MULTIPLEALPHA);

  00033	6a 03		 push	 3
  00035	68 20 08 00 00	 push	 2080			; 00000820H
  0003a	68 80 00 00 00	 push	 128			; 00000080H
  0003f	68 80 00 00 00	 push	 128			; 00000080H
  00044	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00049	a3 00 00 00 00	 mov	 DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A, eax

; 227  : 
; 228  : 	composite_co_pilot_wiped_rain_texture_screen = create_system_texture_screen (RAIN_TEXTURE_SIZE, RAIN_TEXTURE_SIZE, TEXTURE_INDEX_COPILOT_RAIN_WIPE_EFFECT, TEXTURE_TYPE_MULTIPLEALPHA);

  0004e	6a 03		 push	 3
  00050	68 07 08 00 00	 push	 2055			; 00000807H
  00055	68 80 00 00 00	 push	 128			; 00000080H
  0005a	68 80 00 00 00	 push	 128			; 00000080H
  0005f	e8 00 00 00 00	 call	 ?create_system_texture_screen@@YGPAUSCREEN@@HHHH@Z ; create_system_texture_screen
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A, eax

; 229  : 
; 230  : 	wiper_on = FALSE;

  00069	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wiper_on@@3HA, 0 ; wiper_on

; 231  : 
; 232  : 	wiper_mode = WIPER_MODE_STOWED;

  00073	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wiper_mode@@3W4WIPER_MODES@@A, 0 ; wiper_mode

; 233  : 
; 234  : 	intermittent_wipe = FALSE;

  0007d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?intermittent_wipe@@3HA, 0

; 235  : 
; 236  : 	wiper_position = 0.0;

  00087	0f 57 c0	 xorps	 xmm0, xmm0
  0008a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wiper_position@@3MA, xmm0

; 237  : 
; 238  : 	wiper_pos1 = 0;

  00092	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wiper_pos1@@3HA, 0

; 239  : 
; 240  : 	wiper_pos2 = 0;

  0009c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wiper_pos2@@3HA, 0

; 241  : 
; 242  : 	wipe_interval = CONTINUOUS_WIPE_INTERVAL;

  000a6	0f 57 c0	 xorps	 xmm0, xmm0
  000a9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_interval@@3MA, xmm0

; 243  : 
; 244  : 	wipe_delay = CONTINUOUS_WIPE_INTERVAL;

  000b1	0f 57 c0	 xorps	 xmm0, xmm0
  000b4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?wipe_delay@@3MA, xmm0

; 245  : 
; 246  : 	rain_fall_type = get_rain_fall_type ();

  000bc	e8 00 00 00 00	 call	 ?get_rain_fall_type@@YG?AW4RAIN_FALL_TYPES@@XZ ; get_rain_fall_type
  000c1	a3 00 00 00 00	 mov	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, eax

; 247  : 
; 248  : 	rain_timer = 0.0;

  000c6	0f 57 c0	 xorps	 xmm0, xmm0
  000c9	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?rain_timer@@3MA, xmm0

; 249  : 
; 250  : 	rain_textures_enabled = get_global_graphics_rain_textures_enabled ();

  000d1	a1 50 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+80
  000d6	c1 e8 02	 shr	 eax, 2
  000d9	83 e0 01	 and	 eax, 1
  000dc	a3 00 00 00 00	 mov	 DWORD PTR ?rain_textures_enabled@@3HA, eax

; 251  : 
; 252  : 	if (rain_fall_type == RAIN_FALL_TYPE_DRY)

  000e1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?rain_fall_type@@3W4RAIN_FALL_TYPES@@A, 0
  000e8	75 3f		 jne	 SHORT $LN2@initialise

; 253  : 	{
; 254  : 		rain_mode = RAIN_MODE_DRY;

  000ea	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 0 ; rain_mode

; 255  : 
; 256  : 		clear_full_rain_effect (composite_rain_texture_screen);

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  000f9	50		 push	 eax
  000fa	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect

; 257  : 
; 258  : 		if (pilot_wiper)

  000ff	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  00106	74 0b		 je	 SHORT $LN4@initialise

; 259  : 		{
; 260  : 			clear_full_rain_effect (composite_pilot_wiped_rain_texture_screen);

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN4@initialise:

; 261  : 		}
; 262  : 
; 263  : 		if (co_pilot_wiper)

  00113	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  0011a	74 0b		 je	 SHORT $LN5@initialise

; 264  : 		{
; 265  : 			clear_full_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  0011c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ?clear_full_rain_effect@@YGXPAUSCREEN@@@Z ; clear_full_rain_effect
$LN5@initialise:

; 266  : 		}
; 267  : 	}
; 268  : 	else

  00127	eb 3d		 jmp	 SHORT $LN7@initialise
$LN2@initialise:

; 269  : 	{
; 270  : 		rain_mode = RAIN_MODE_APPLY;

  00129	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?rain_mode@@3W4RAIN_MODES@@A, 1 ; rain_mode

; 271  : 
; 272  : 		apply_full_rain_effect (composite_rain_texture_screen);

  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_rain_texture_screen@@3PAUSCREEN@@A
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 ?apply_full_rain_effect@@YGXPAUSCREEN@@@Z ; apply_full_rain_effect

; 273  : 
; 274  : 		if (pilot_wiper)

  0013e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_wiper@@3HA, 0 ; pilot_wiper
  00145	74 0b		 je	 SHORT $LN6@initialise

; 275  : 		{
; 276  : 			apply_full_rain_effect (composite_pilot_wiped_rain_texture_screen);

  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?apply_full_rain_effect@@YGXPAUSCREEN@@@Z ; apply_full_rain_effect
$LN6@initialise:

; 277  : 		}
; 278  : 
; 279  : 		if (co_pilot_wiper)

  00152	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?co_pilot_wiper@@3HA, 0 ; co_pilot_wiper
  00159	74 0b		 je	 SHORT $LN7@initialise

; 280  : 		{
; 281  : 			apply_full_rain_effect (composite_co_pilot_wiped_rain_texture_screen);

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?composite_co_pilot_wiped_rain_texture_screen@@3PAUSCREEN@@A
  00160	50		 push	 eax
  00161	e8 00 00 00 00	 call	 ?apply_full_rain_effect@@YGXPAUSCREEN@@@Z ; apply_full_rain_effect
$LN7@initialise:

; 282  : 		}
; 283  : 	}
; 284  : }

  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	5b		 pop	 ebx
  00169	8b e5		 mov	 esp, ebp
  0016b	5d		 pop	 ebp
  0016c	c3		 ret	 0
?initialise_common_virtual_cockpit_wiper_and_rain_effect@@YGXXZ ENDP ; initialise_common_virtual_cockpit_wiper_and_rain_effect
_TEXT	ENDS
END
