; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?draw_radar_sweep@@3HA				; draw_radar_sweep
PUBLIC	?draw_radar_terrain_los_markers@@3HA		; draw_radar_terrain_los_markers
PUBLIC	?ground_radar@@3URADAR_PARAMS@@A		; ground_radar
PUBLIC	?air_radar@@3URADAR_PARAMS@@A			; air_radar
PUBLIC	?radar_clutter_hatch_pattern@@3PAIA		; radar_clutter_hatch_pattern
_BSS	SEGMENT
?draw_radar_sweep@@3HA DD 01H DUP (?)			; draw_radar_sweep
?draw_radar_terrain_los_markers@@3HA DD 01H DUP (?)	; draw_radar_terrain_los_markers
?ground_radar@@3URADAR_PARAMS@@A DB 030H DUP (?)	; ground_radar
?air_radar@@3URADAR_PARAMS@@A DB 030H DUP (?)		; air_radar
_BSS	ENDS
_DATA	SEGMENT
?radar_clutter_hatch_pattern@@3PAIA DD 088888888H	; radar_clutter_hatch_pattern
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
	DD	088888888H
	DD	022222222H
_DATA	ENDS
PUBLIC	_atan2f
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_sinf
PUBLIC	_sqrtf
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?sqrt@@YGMM@Z					; sqrt
PUBLIC	?initialise_common_radar@@YGXXZ			; initialise_common_radar
PUBLIC	?deinitialise_common_radar@@YGXXZ		; deinitialise_common_radar
PUBLIC	?limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z	; limit_radar_sweep
PUBLIC	?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_ground_radar
PUBLIC	?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z ; get_target_matches_ground_radar_declutter_criteria
PUBLIC	?get_next_ground_radar_target@@YGXXZ		; get_next_ground_radar_target
PUBLIC	?get_previous_ground_radar_target@@YGXXZ	; get_previous_ground_radar_target
PUBLIC	?select_next_designated_ground_radar_target@@YGXXZ ; select_next_designated_ground_radar_target
PUBLIC	?select_previous_designated_ground_radar_target@@YGXXZ ; select_previous_designated_ground_radar_target
PUBLIC	?update_common_ground_radar@@YGXH@Z		; update_common_ground_radar
PUBLIC	?activate_common_ground_radar@@YGXXZ		; activate_common_ground_radar
PUBLIC	?deactivate_common_ground_radar@@YGXXZ		; deactivate_common_ground_radar
PUBLIC	?toggle_ground_radar_active@@YGXXZ		; toggle_ground_radar_active
PUBLIC	?ground_radar_is_active@@YGHXZ			; ground_radar_is_active
PUBLIC	?set_ground_radar_is_active@@YGXH@Z		; set_ground_radar_is_active
PUBLIC	?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_air_radar
PUBLIC	?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_target_matches_air_radar_declutter_criteria
PUBLIC	?get_next_air_radar_target@@YGXXZ		; get_next_air_radar_target
PUBLIC	?get_previous_air_radar_target@@YGXXZ		; get_previous_air_radar_target
PUBLIC	?update_common_air_radar@@YGXXZ			; update_common_air_radar
PUBLIC	?select_next_designated_air_radar_target@@YGXXZ	; select_next_designated_air_radar_target
PUBLIC	?select_previous_designated_air_radar_target@@YGXXZ ; select_previous_designated_air_radar_target
PUBLIC	?activate_common_air_radar@@YGXXZ		; activate_common_air_radar
PUBLIC	?deactivate_common_air_radar@@YGXXZ		; deactivate_common_air_radar
PUBLIC	?toggle_air_radar_active@@YGXXZ			; toggle_air_radar_active
PUBLIC	?air_radar_is_active@@YGHXZ			; air_radar_is_active
PUBLIC	?set_air_radar_is_active@@YGXH@Z		; set_air_radar_is_active
PUBLIC	?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z	; get_los_clear
PUBLIC	?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@H@std@@YGABHABH0@Z			; std::max<int>
PUBLIC	??$min@H@std@@YGABHABH0@Z			; std::min<int>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z@4JA ; `limit_radar_sweep'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_05EMNNHGFM@radar@				; `string'
PUBLIC	?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA ; `update_radar_sweep'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@CPIDAPHB@cw_sweep_start_offset@	; `string'
PUBLIC	??_C@_0BE@BCILNBBA@cw_sweep_end_offset@		; `string'
PUBLIC	??_C@_0DG@OIGIIKFL@radar?9?$DOsweep_mode?5?$CB?$DN?5RADAR_SWEE@ ; `string'
PUBLIC	?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA ; `get_terrain_los_clear'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@IIPCKJML@source_position@		; `string'
PUBLIC	??_C@_0BA@NENIEICJ@target_position@		; `string'
PUBLIC	?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA ; `get_object_los_clear'::`1'::__LINE__Var
PUBLIC	??_C@_06JJLAMBGK@target@			; `string'
PUBLIC	?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA ; `get_valid_ground_radar_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA ; `get_gunship_target_valid_for_ground_radar'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA ; `get_ground_radar_los_clear'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA ; `get_best_ground_radar_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BN@KALIGLF@Unknown?5target?5priority?5type@ ; `string'
PUBLIC	?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA ; `get_selectable_ground_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z@4JA ; `get_target_matches_ground_radar_declutter_criteria'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_next_ground_radar_target@@YGXXZ@4JA ; `get_next_ground_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_previous_ground_radar_target@@YGXXZ@4JA ; `get_previous_ground_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA ; `update_common_ground_radar'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_valid_air_radar_target@@YGHPAUENTITY@@@Z@4JA ; `get_valid_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z@4JA ; `get_gunship_target_valid_for_air_radar'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA ; `get_los_clear'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA ; `get_best_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA ; `get_selectable_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA ; `get_target_matches_air_radar_declutter_criteria'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_next_air_radar_target@@YGXXZ@4JA ; `get_next_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_previous_air_radar_target@@YGXXZ@4JA ; `get_previous_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA ; `update_common_air_radar'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA ; `select_next_designated_ground_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA ; `select_previous_designated_ground_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA ; `select_next_designated_air_radar_target'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA ; `select_previous_designated_air_radar_target'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@00800000
PUBLIC	__real@3ba3d70a
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f490fdb
PUBLIC	__real@3f800000
PUBLIC	__real@3fd45f30706f8fe6
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe921fb51000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff45f30706f8fe6
PUBLIC	__real@40000000
PUBLIC	__real@400921fb51000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@401921fb51000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4039c4bc10000000
PUBLIC	__real@40400000
PUBLIC	__real@4079000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@41200000
PUBLIC	__real@43fa0000
PUBLIC	__real@7f7fffff
PUBLIC	__real@bf800000
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@bfe921fb51000000
PUBLIC	__real@c00921fb51000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	_sqrt:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?get_3d_range@@YGMPBUVEC3D@@0@Z:PROC		; get_3d_range
EXTRN	?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_3d_range
EXTRN	?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z:PROC ; get_terrain_3d_point_sector_max_elevation
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z:PROC ; delete_local_entity_from_parents_child_list
EXTRN	?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_succ_circular
EXTRN	?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z:PROC ; get_local_entity_child_pred_circular
EXTRN	?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z:PROC ; create_rotated_debug_3d_object
EXTRN	?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z:PROC ; create_debug_3d_line
EXTRN	?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z:PROC ; get_line_of_sight_collision_entity
EXTRN	?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z:PROC ; get_line_of_sight_collision_tree
EXTRN	?set_gunship_target@@YGXPAUENTITY@@@Z:PROC	; set_gunship_target
EXTRN	?is_valid_pfz_target@@YGHPAUVEC3D@@@Z:PROC	; is_valid_pfz_target
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?sys_col_green@@3UREAL_COLOUR@@A:DWORD		; sys_col_green
EXTRN	?sys_col_red@@3UREAL_COLOUR@@A:DWORD		; sys_col_red
EXTRN	?sys_col_white@@3UREAL_COLOUR@@A:DWORD		; sys_col_white
EXTRN	?session_ground_radar_ignores_infantry@@3HA:DWORD ; session_ground_radar_ignores_infantry
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?entity_sector_map@@3PAPAUENTITY@@A:DWORD	; entity_sector_map
EXTRN	?null_sector_entity_map_pointer_message@@3PBDB:DWORD ; null_sector_entity_map_pointer_message
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A:DWORD ; target_acquisition_system
EXTRN	?target_locked@@3HA:DWORD			; target_locked
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?ground_radar_on@@3HA DD 01H DUP (?)			; ground_radar_on
?air_radar_on@@3HA DD 01H DUP (?)			; air_radar_on
_BSS	ENDS
;	COMDAT __real@c00921fb51000000
CONST	SEGMENT
__real@c00921fb51000000 DQ 0c00921fb51000000r	; -3.14159
CONST	ENDS
;	COMDAT __real@bfe921fb51000000
CONST	SEGMENT
__real@bfe921fb51000000 DQ 0bfe921fb51000000r	; -0.785398
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@43fa0000
CONST	SEGMENT
__real@43fa0000 DD 043fa0000r			; 500
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4079000000000000
CONST	SEGMENT
__real@4079000000000000 DQ 04079000000000000r	; 400
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@4039c4bc10000000
CONST	SEGMENT
__real@4039c4bc10000000 DQ 04039c4bc10000000r	; 25.7685
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@401921fb51000000
CONST	SEGMENT
__real@401921fb51000000 DQ 0401921fb51000000r	; 6.28319
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@400921fb51000000
CONST	SEGMENT
__real@400921fb51000000 DQ 0400921fb51000000r	; 3.14159
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff45f30706f8fe6
CONST	SEGMENT
__real@3ff45f30706f8fe6 DQ 03ff45f30706f8fe6r	; 1.27324
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe921fb51000000
CONST	SEGMENT
__real@3fe921fb51000000 DQ 03fe921fb51000000r	; 0.785398
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fd45f30706f8fe6
CONST	SEGMENT
__real@3fd45f30706f8fe6 DQ 03fd45f30706f8fe6r	; 0.31831
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f490fdb
CONST	SEGMENT
__real@3f490fdb DD 03f490fdbr			; 0.785398
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3ba3d70a
CONST	SEGMENT
__real@3ba3d70a DD 03ba3d70ar			; 0.005
CONST	ENDS
;	COMDAT __real@00800000
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-38
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA DD 0c07H ; `select_previous_designated_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA DD 0bd4H ; `select_next_designated_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA DD 0ba6H ; `select_previous_designated_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA DD 0b73H ; `select_next_designated_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA DD 09f9H ; `update_common_air_radar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_previous_air_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_previous_air_radar_target@@YGXXZ@4JA DD 09d3H ; `get_previous_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_next_air_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_next_air_radar_target@@YGXXZ@4JA DD 09adH ; `get_next_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA DD 0998H ; `get_target_matches_air_radar_declutter_criteria'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA DD 095dH ; `get_selectable_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA DD 07eeH ; `get_best_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA DD 07d4H ; `get_los_clear'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z@4JA DD 07c1H ; `get_gunship_target_valid_for_air_radar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_valid_air_radar_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_valid_air_radar_target@@YGHPAUENTITY@@@Z@4JA DD 07abH ; `get_valid_air_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA DD 0600H ; `update_common_ground_radar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_previous_ground_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_previous_ground_radar_target@@YGXXZ@4JA DD 05daH ; `get_previous_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_next_ground_radar_target@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_next_ground_radar_target@@YGXXZ@4JA DD 05b4H ; `get_next_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z@4JA DD 0595H ; `get_target_matches_ground_radar_declutter_criteria'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA DD 0539H ; `get_selectable_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BN@KALIGLF@Unknown?5target?5priority?5type@
CONST	SEGMENT
??_C@_0BN@KALIGLF@Unknown?5target?5priority?5type@ DB 'Unknown target pri'
	DB	'ority type', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA DD 03d4H ; `get_best_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA DD 03abH ; `get_ground_radar_los_clear'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA DD 034cH ; `get_gunship_target_valid_for_ground_radar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@ DB 'Invalid target'
	DB	' type = %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA DD 02faH ; `get_valid_ground_radar_target'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06JJLAMBGK@target@
CONST	SEGMENT
??_C@_06JJLAMBGK@target@ DB 'target', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA DD 028dH ; `get_object_los_clear'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@NENIEICJ@target_position@
CONST	SEGMENT
??_C@_0BA@NENIEICJ@target_position@ DB 'target_position', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIPCKJML@source_position@
CONST	SEGMENT
??_C@_0BA@IIPCKJML@source_position@ DB 'source_position', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA DD 01a3H ; `get_terrain_los_clear'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DG@OIGIIKFL@radar?9?$DOsweep_mode?5?$CB?$DN?5RADAR_SWEE@
CONST	SEGMENT
??_C@_0DG@OIGIIKFL@radar?9?$DOsweep_mode?5?$CB?$DN?5RADAR_SWEE@ DB 'radar'
	DB	'->sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BCILNBBA@cw_sweep_end_offset@
CONST	SEGMENT
??_C@_0BE@BCILNBBA@cw_sweep_end_offset@ DB 'cw_sweep_end_offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CPIDAPHB@cw_sweep_start_offset@
CONST	SEGMENT
??_C@_0BG@CPIDAPHB@cw_sweep_start_offset@ DB 'cw_sweep_start_offset', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA DD 0e4H ; `update_radar_sweep'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05EMNNHGFM@radar@
CONST	SEGMENT
??_C@_05EMNNHGFM@radar@ DB 'radar', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\avionics\common\co_'
	DB	'radar.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z@4JA DD 0a2H ; `limit_radar_sweep'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv162 = -92						; size = 4
tv142 = -92						; size = 4
tv83 = -92						; size = 4
tv154 = -88						; size = 4
tv134 = -88						; size = 4
tv75 = -88						; size = 4
_target_position$ = -20					; size = 4
_source_position$ = -16					; size = 4
_source_side$ = -12					; size = 4
_source$ = -8						; size = 4
_target_range$ = -4					; size = 4
_target$ = 8						; size = 4
?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z PROC	; get_selectable_air_radar_target, COMDAT

; 2397 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2398 : 	float
; 2399 : 		target_range;
; 2400 : 
; 2401 : 	entity
; 2402 : 		*source;
; 2403 : 
; 2404 : 	entity_sides
; 2405 : 		source_side;
; 2406 : 
; 2407 : 	vec3d
; 2408 : 		*source_position,
; 2409 : 		*target_position;
; 2410 : 
; 2411 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_select
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 0e	 add	 eax, 14			; 0000000eH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_select:

; 2412 : 
; 2413 : 	source = get_gunship_entity ();

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002c	89 45 f8	 mov	 DWORD PTR _source$[ebp], eax

; 2414 : 
; 2415 : 	source_side = (entity_sides) get_local_entity_int_value (source, INT_TYPE_SIDE);

  0002f	83 7d f8 00	 cmp	 DWORD PTR _source$[ebp], 0
  00033	74 0a		 je	 SHORT $LN7@get_select
  00035	8b 45 f8	 mov	 eax, DWORD PTR _source$[ebp]
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  0003d	eb 21		 jmp	 SHORT $LN8@get_select
$LN7@get_select:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  00045	83 c2 12	 add	 edx, 18			; 00000012H
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN8@get_select:
  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	74 09		 je	 SHORT $LN9@get_select
  00069	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv83[ebp], 187 ; 000000bbH
  00070	eb 21		 jmp	 SHORT $LN10@get_select
$LN9@get_select:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  00078	83 c2 12	 add	 edx, 18			; 00000012H
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN10@get_select:
  00093	68 bb 00 00 00	 push	 187			; 000000bbH
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _source$[ebp]
  0009b	51		 push	 ecx
  0009c	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  000a3	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  000a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000ad	ff d1		 call	 ecx
  000af	89 45 f4	 mov	 DWORD PTR _source_side$[ebp], eax

; 2416 : 
; 2417 : 	////////////////////////////////////////
; 2418 : 	//
; 2419 : 	// keep MANDATORY checks the same as get_best_air_radar_target ()
; 2420 : 	//
; 2421 : 	////////////////////////////////////////
; 2422 : 
; 2423 : 	if (get_gunship_target_valid_for_air_radar (target))

  000b2	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000b5	50		 push	 eax
  000b6	e8 00 00 00 00	 call	 ?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_air_radar
  000bb	85 c0		 test	 eax, eax
  000bd	0f 84 34 01 00
	00		 je	 $LN5@get_select

; 2424 : 	{
; 2425 : 		//
; 2426 : 		// MANDATORY: target matches declutter criteria
; 2427 : 		//
; 2428 : 
; 2429 : 		if (get_target_matches_air_radar_declutter_criteria (target, source_side))

  000c3	8b 45 f4	 mov	 eax, DWORD PTR _source_side$[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_target_matches_air_radar_declutter_criteria
  000d0	85 c0		 test	 eax, eax
  000d2	0f 84 1f 01 00
	00		 je	 $LN5@get_select

; 2430 : 		{
; 2431 : 			//
; 2432 : 			// MANDATORY: target within scan range
; 2433 : 			//
; 2434 : 
; 2435 : 			source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  000d8	83 7d f8 00	 cmp	 DWORD PTR _source$[ebp], 0
  000dc	74 0a		 je	 SHORT $LN11@get_select
  000de	8b 45 f8	 mov	 eax, DWORD PTR _source$[ebp]
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d a8	 mov	 DWORD PTR tv134[ebp], ecx
  000e6	eb 21		 jmp	 SHORT $LN12@get_select
$LN11@get_select:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  000ee	83 c2 26	 add	 edx, 38			; 00000026H
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN12@get_select:
  00109	b9 01 00 00 00	 mov	 ecx, 1
  0010e	85 c9		 test	 ecx, ecx
  00110	74 09		 je	 SHORT $LN13@get_select
  00112	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv142[ebp], 8
  00119	eb 21		 jmp	 SHORT $LN14@get_select
$LN13@get_select:
  0011b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  00121	83 c2 26	 add	 edx, 38			; 00000026H
  00124	52		 push	 edx
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN14@get_select:
  0013c	6a 08		 push	 8
  0013e	8b 4d f8	 mov	 ecx, DWORD PTR _source$[ebp]
  00141	51		 push	 ecx
  00142	6b 55 a8 60	 imul	 edx, DWORD PTR tv134[ebp], 96
  00146	8b 45 a4	 mov	 eax, DWORD PTR tv142[ebp]
  00149	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00150	ff d1		 call	 ecx
  00152	89 45 f0	 mov	 DWORD PTR _source_position$[ebp], eax

; 2436 : 
; 2437 : 			target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00155	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00159	74 0a		 je	 SHORT $LN15@get_select
  0015b	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0015e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00160	89 4d a8	 mov	 DWORD PTR tv154[ebp], ecx
  00163	eb 21		 jmp	 SHORT $LN16@get_select
$LN15@get_select:
  00165	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  0016b	83 c2 28	 add	 edx, 40			; 00000028H
  0016e	52		 push	 edx
  0016f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN16@get_select:
  00186	b9 01 00 00 00	 mov	 ecx, 1
  0018b	85 c9		 test	 ecx, ecx
  0018d	74 09		 je	 SHORT $LN17@get_select
  0018f	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv162[ebp], 8
  00196	eb 21		 jmp	 SHORT $LN18@get_select
$LN17@get_select:
  00198	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  0019e	83 c2 28	 add	 edx, 40			; 00000028H
  001a1	52		 push	 edx
  001a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b2	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN18@get_select:
  001b9	6a 08		 push	 8
  001bb	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  001be	51		 push	 ecx
  001bf	6b 55 a8 60	 imul	 edx, DWORD PTR tv154[ebp], 96
  001c3	8b 45 a4	 mov	 eax, DWORD PTR tv162[ebp]
  001c6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001cd	ff d1		 call	 ecx
  001cf	89 45 ec	 mov	 DWORD PTR _target_position$[ebp], eax

; 2438 : 
; 2439 : 			target_range = get_3d_range (source_position, target_position);

  001d2	8b 45 ec	 mov	 eax, DWORD PTR _target_position$[ebp]
  001d5	50		 push	 eax
  001d6	8b 4d f0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  001d9	51		 push	 ecx
  001da	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  001df	d9 5d fc	 fstp	 DWORD PTR _target_range$[ebp]

; 2440 : 
; 2441 : 			if (target_range <= air_radar.scan_range)

  001e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  001ea	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  001ee	72 07		 jb	 SHORT $LN5@get_select

; 2442 : 			{
; 2443 : 				return (TRUE);

  001f0	b8 01 00 00 00	 mov	 eax, 1
  001f5	eb 02		 jmp	 SHORT $LN1@get_select
$LN5@get_select:

; 2444 : 			}
; 2445 : 		}
; 2446 : 	}
; 2447 : 
; 2448 : 	return (FALSE);

  001f7	33 c0		 xor	 eax, eax
$LN1@get_select:

; 2449 : }

  001f9	5f		 pop	 edi
  001fa	5e		 pop	 esi
  001fb	5b		 pop	 ebx
  001fc	8b e5		 mov	 esp, ebp
  001fe	5d		 pop	 ebp
  001ff	c2 04 00	 ret	 4
?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ENDP	; get_selectable_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_best_air_radar_target@@YGPAUENTITY@@XZ
_TEXT	SEGMENT
tv438 = -160						; size = 4
tv415 = -160						; size = 4
tv387 = -160						; size = 4
tv368 = -160						; size = 4
tv348 = -160						; size = 4
tv312 = -160						; size = 4
tv231 = -160						; size = 4
tv203 = -160						; size = 4
tv176 = -160						; size = 4
tv150 = -160						; size = 4
tv130 = -160						; size = 4
tv78 = -160						; size = 4
tv430 = -156						; size = 4
tv408 = -156						; size = 4
tv380 = -156						; size = 4
tv361 = -156						; size = 4
tv341 = -156						; size = 4
tv304 = -156						; size = 4
tv223 = -156						; size = 4
tv195 = -156						; size = 4
tv168 = -156						; size = 4
tv142 = -156						; size = 4
tv90 = -156						; size = 4
tv70 = -156						; size = 4
_weapon_sub_type$ = -88					; size = 4
_target_position$ = -84					; size = 4
_source_position$ = -80					; size = 4
_source_side$ = -76					; size = 4
_best_target$ = -72					; size = 4
_target$ = -68						; size = 4
_source$ = -64						; size = 4
_theta$ = -60						; size = 4
_target_bearing$ = -56					; size = 4
_source_bearing$ = -52					; size = 4
_dz$ = -48						; size = 4
_dx$ = -44						; size = 4
_target_heading$ = -40					; size = 4
_source_heading$ = -36					; size = 4
_target_range$ = -32					; size = 4
_weapon_max_range$ = -28				; size = 4
_weapon_min_range$ = -24				; size = 4
_scan_arc_limit$ = -20					; size = 4
_one_over_scan_range$ = -16				; size = 4
_delta_score$ = -12					; size = 4
_best_score$ = -8					; size = 4
_score$ = -4						; size = 4
?get_best_air_radar_target@@YGPAUENTITY@@XZ PROC	; get_best_air_radar_target, COMDAT

; 2030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2031 : 	float
; 2032 : 		score,
; 2033 : 		best_score,
; 2034 : 		delta_score,
; 2035 : 		one_over_scan_range,
; 2036 : 		scan_arc_limit,
; 2037 : 		weapon_min_range,
; 2038 : 		weapon_max_range,
; 2039 : 		target_range,
; 2040 : 		source_heading,
; 2041 : 		target_heading,
; 2042 : 		dx,
; 2043 : 		dz,
; 2044 : 		source_bearing,
; 2045 : 		target_bearing,
; 2046 : 		theta;
; 2047 : 
; 2048 : 	entity
; 2049 : 		*source,
; 2050 : 		*target,
; 2051 : 		*best_target;
; 2052 : 
; 2053 : 	entity_sides
; 2054 : 		source_side;
; 2055 : 
; 2056 : 	vec3d
; 2057 : 		*source_position,
; 2058 : 		*target_position;
; 2059 : 
; 2060 : 	entity_sub_types
; 2061 : 		weapon_sub_type;
; 2062 : 
; 2063 : 	//
; 2064 : 	// clear best score and target
; 2065 : 	//
; 2066 : 
; 2067 : 	best_score = 0.0;

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 f8	 movss	 DWORD PTR _best_score$[ebp], xmm0

; 2068 : 
; 2069 : 	best_target = NULL;

  00014	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 2070 : 
; 2071 : 	//
; 2072 : 	// source
; 2073 : 	//
; 2074 : 
; 2075 : 	source = get_gunship_entity ();

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00020	89 45 c0	 mov	 DWORD PTR _source$[ebp], eax

; 2076 : 
; 2077 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00023	83 7d c0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00027	74 0d		 je	 SHORT $LN36@get_best_a
  00029	8b 45 c0	 mov	 eax, DWORD PTR _source$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00034	eb 24		 jmp	 SHORT $LN37@get_best_a
$LN36@get_best_a:
  00036	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  0003c	83 c2 2f	 add	 edx, 47			; 0000002fH
  0003f	52		 push	 edx
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00050	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN37@get_best_a:
  0005a	b9 01 00 00 00	 mov	 ecx, 1
  0005f	85 c9		 test	 ecx, ecx
  00061	74 0c		 je	 SHORT $LN38@get_best_a
  00063	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  0006d	eb 24		 jmp	 SHORT $LN39@get_best_a
$LN38@get_best_a:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00075	83 c2 2f	 add	 edx, 47			; 0000002fH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN39@get_best_a:
  00093	6a 08		 push	 8
  00095	8b 4d c0	 mov	 ecx, DWORD PTR _source$[ebp]
  00098	51		 push	 ecx
  00099	6b 95 64 ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  000a0	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  000a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000ad	ff d1		 call	 ecx
  000af	89 45 b0	 mov	 DWORD PTR _source_position$[ebp], eax

; 2078 : 
; 2079 : 	source_side = (entity_sides) get_local_entity_int_value (source, INT_TYPE_SIDE);

  000b2	83 7d c0 00	 cmp	 DWORD PTR _source$[ebp], 0
  000b6	74 0d		 je	 SHORT $LN40@get_best_a
  000b8	8b 45 c0	 mov	 eax, DWORD PTR _source$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000c3	eb 24		 jmp	 SHORT $LN41@get_best_a
$LN40@get_best_a:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  000cb	83 c2 31	 add	 edx, 49			; 00000031H
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN41@get_best_a:
  000e9	b9 01 00 00 00	 mov	 ecx, 1
  000ee	85 c9		 test	 ecx, ecx
  000f0	74 0c		 je	 SHORT $LN42@get_best_a
  000f2	c7 85 60 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv130[ebp], 187 ; 000000bbH
  000fc	eb 24		 jmp	 SHORT $LN43@get_best_a
$LN42@get_best_a:
  000fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00104	83 c2 31	 add	 edx, 49			; 00000031H
  00107	52		 push	 edx
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN43@get_best_a:
  00122	68 bb 00 00 00	 push	 187			; 000000bbH
  00127	8b 4d c0	 mov	 ecx, DWORD PTR _source$[ebp]
  0012a	51		 push	 ecx
  0012b	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv90[ebp], 1116
  00135	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  0013b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00142	ff d1		 call	 ecx
  00144	89 45 b4	 mov	 DWORD PTR _source_side$[ebp], eax

; 2080 : 
; 2081 : 	source_heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  00147	83 7d c0 00	 cmp	 DWORD PTR _source$[ebp], 0
  0014b	74 0d		 je	 SHORT $LN44@get_best_a
  0014d	8b 45 c0	 mov	 eax, DWORD PTR _source$[ebp]
  00150	8b 08		 mov	 ecx, DWORD PTR [eax]
  00152	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  00158	eb 24		 jmp	 SHORT $LN45@get_best_a
$LN44@get_best_a:
  0015a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00160	83 c2 33	 add	 edx, 51			; 00000033H
  00163	52		 push	 edx
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00169	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00174	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN45@get_best_a:
  0017e	b9 01 00 00 00	 mov	 ecx, 1
  00183	85 c9		 test	 ecx, ecx
  00185	74 0c		 je	 SHORT $LN46@get_best_a
  00187	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv150[ebp], 52 ; 00000034H
  00191	eb 24		 jmp	 SHORT $LN47@get_best_a
$LN46@get_best_a:
  00193	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00199	83 c2 33	 add	 edx, 51			; 00000033H
  0019c	52		 push	 edx
  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ad	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN47@get_best_a:
  001b7	6a 34		 push	 52			; 00000034H
  001b9	8b 4d c0	 mov	 ecx, DWORD PTR _source$[ebp]
  001bc	51		 push	 ecx
  001bd	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv142[ebp], 700
  001c7	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001cd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  001d4	ff d1		 call	 ecx
  001d6	d9 5d dc	 fstp	 DWORD PTR _source_heading$[ebp]

; 2082 : 
; 2083 : 	//
; 2084 : 	// scan limits
; 2085 : 	//
; 2086 : 
; 2087 : 	one_over_scan_range = 1.0 / air_radar.scan_range;

  001d9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  001e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001e9	f2 0f 5e c8	 divsd	 xmm1, xmm0
  001ed	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001f1	f3 0f 11 45 f0	 movss	 DWORD PTR _one_over_scan_range$[ebp], xmm0

; 2088 : 
; 2089 : 	scan_arc_limit = air_radar.scan_arc_size * 0.5;

  001f6	f3 0f 5a 05 08
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+8
  001fe	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00206	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020a	f3 0f 11 45 ec	 movss	 DWORD PTR _scan_arc_limit$[ebp], xmm0

; 2090 : 
; 2091 : 	//
; 2092 : 	// weapon min and max ranges
; 2093 : 	//
; 2094 : 
; 2095 : 	weapon_sub_type = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  0020f	83 7d c0 00	 cmp	 DWORD PTR _source$[ebp], 0
  00213	74 0d		 je	 SHORT $LN48@get_best_a
  00215	8b 45 c0	 mov	 eax, DWORD PTR _source$[ebp]
  00218	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv168[ebp], ecx
  00220	eb 24		 jmp	 SHORT $LN49@get_best_a
$LN48@get_best_a:
  00222	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00228	83 c2 41	 add	 edx, 65			; 00000041H
  0022b	52		 push	 edx
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00231	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00236	50		 push	 eax
  00237	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023c	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv168[ebp], 0
$LN49@get_best_a:
  00246	b9 01 00 00 00	 mov	 ecx, 1
  0024b	85 c9		 test	 ecx, ecx
  0024d	74 0c		 je	 SHORT $LN50@get_best_a
  0024f	c7 85 60 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv176[ebp], 184 ; 000000b8H
  00259	eb 24		 jmp	 SHORT $LN51@get_best_a
$LN50@get_best_a:
  0025b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00261	83 c2 41	 add	 edx, 65			; 00000041H
  00264	52		 push	 edx
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0026f	50		 push	 eax
  00270	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00275	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv176[ebp], 0
$LN51@get_best_a:
  0027f	68 b8 00 00 00	 push	 184			; 000000b8H
  00284	8b 4d c0	 mov	 ecx, DWORD PTR _source$[ebp]
  00287	51		 push	 ecx
  00288	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv168[ebp], 1116
  00292	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv176[ebp]
  00298	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0029f	ff d1		 call	 ecx
  002a1	89 45 a8	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 2096 : 
; 2097 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  002a4	83 7d a8 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  002a8	74 2a		 je	 SHORT $LN4@get_best_a

; 2098 : 	{
; 2099 : 		weapon_min_range = weapon_database[weapon_sub_type].min_range;

  002aa	69 45 a8 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  002b1	f3 0f 10 80 8c
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140]
  002b9	f3 0f 11 45 e8	 movss	 DWORD PTR _weapon_min_range$[ebp], xmm0

; 2100 : 
; 2101 : 		weapon_max_range = weapon_database[weapon_sub_type].max_range;

  002be	69 45 a8 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  002c5	f3 0f 10 80 90
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]
  002cd	f3 0f 11 45 e4	 movss	 DWORD PTR _weapon_max_range$[ebp], xmm0

; 2102 : 	}
; 2103 : 	else

  002d2	eb 1a		 jmp	 SHORT $LN5@get_best_a
$LN4@get_best_a:

; 2104 : 	{
; 2105 : 		weapon_min_range = FLT_MAX;

  002d4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  002dc	f3 0f 11 45 e8	 movss	 DWORD PTR _weapon_min_range$[ebp], xmm0

; 2106 : 
; 2107 : 		weapon_max_range = FLT_MIN;

  002e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00800000
  002e9	f3 0f 11 45 e4	 movss	 DWORD PTR _weapon_max_range$[ebp], xmm0
$LN5@get_best_a:

; 2108 : 	}
; 2109 : 
; 2110 : 	//
; 2111 : 	// evaluate each target
; 2112 : 	//
; 2113 : 
; 2114 : 	target = get_local_entity_first_child (source, LIST_TYPE_GUNSHIP_TARGET);

  002ee	83 7d c0 00	 cmp	 DWORD PTR _source$[ebp], 0
  002f2	74 0d		 je	 SHORT $LN52@get_best_a
  002f4	8b 45 c0	 mov	 eax, DWORD PTR _source$[ebp]
  002f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f9	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  002ff	eb 24		 jmp	 SHORT $LN53@get_best_a
$LN52@get_best_a:
  00301	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00307	83 c2 54	 add	 edx, 84			; 00000054H
  0030a	52		 push	 edx
  0030b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00310	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00315	50		 push	 eax
  00316	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031b	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN53@get_best_a:
  00325	b9 01 00 00 00	 mov	 ecx, 1
  0032a	85 c9		 test	 ecx, ecx
  0032c	74 0c		 je	 SHORT $LN54@get_best_a
  0032e	c7 85 60 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv203[ebp], 18 ; 00000012H
  00338	eb 24		 jmp	 SHORT $LN55@get_best_a
$LN54@get_best_a:
  0033a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00340	83 c2 54	 add	 edx, 84			; 00000054H
  00343	52		 push	 edx
  00344	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00349	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0034e	50		 push	 eax
  0034f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00354	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN55@get_best_a:
  0035e	6a 12		 push	 18			; 00000012H
  00360	8b 4d c0	 mov	 ecx, DWORD PTR _source$[ebp]
  00363	51		 push	 ecx
  00364	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv195[ebp], 180
  0036e	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv203[ebp]
  00374	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0037b	ff d1		 call	 ecx
  0037d	89 45 bc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@get_best_a:

; 2115 : 
; 2116 : 	while (target)

  00380	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00384	0f 84 10 08 00
	00		 je	 $LN3@get_best_a

; 2117 : 	{
; 2118 : 		////////////////////////////////////////
; 2119 : 		//
; 2120 : 		// keep MANDATORY checks the same as get_selectable_air_radar_target ()
; 2121 : 		//
; 2122 : 		////////////////////////////////////////
; 2123 : 
; 2124 : 		if (get_gunship_target_valid_for_air_radar (target))

  0038a	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  0038d	50		 push	 eax
  0038e	e8 00 00 00 00	 call	 ?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_air_radar
  00393	85 c0		 test	 eax, eax
  00395	0f 84 62 07 00
	00		 je	 $LN34@get_best_a

; 2125 : 		{
; 2126 : 			//
; 2127 : 			// MANDATORY: target matches declutter criteria
; 2128 : 			//
; 2129 : 
; 2130 : 			if (get_target_matches_air_radar_declutter_criteria (target, source_side))

  0039b	8b 45 b4	 mov	 eax, DWORD PTR _source_side$[ebp]
  0039e	50		 push	 eax
  0039f	8b 4d bc	 mov	 ecx, DWORD PTR _target$[ebp]
  003a2	51		 push	 ecx
  003a3	e8 00 00 00 00	 call	 ?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_target_matches_air_radar_declutter_criteria
  003a8	85 c0		 test	 eax, eax
  003aa	0f 84 4d 07 00
	00		 je	 $LN34@get_best_a

; 2131 : 			{
; 2132 : 				//
; 2133 : 				// MANDATORY: target within scan range
; 2134 : 				//
; 2135 : 
; 2136 : 				target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  003b0	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  003b4	74 0d		 je	 SHORT $LN56@get_best_a
  003b6	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  003b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  003bb	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv223[ebp], ecx
  003c1	eb 24		 jmp	 SHORT $LN57@get_best_a
$LN56@get_best_a:
  003c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  003c9	83 c2 6a	 add	 edx, 106		; 0000006aH
  003cc	52		 push	 edx
  003cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d7	50		 push	 eax
  003d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003dd	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv223[ebp], 0
$LN57@get_best_a:
  003e7	b9 01 00 00 00	 mov	 ecx, 1
  003ec	85 c9		 test	 ecx, ecx
  003ee	74 0c		 je	 SHORT $LN58@get_best_a
  003f0	c7 85 60 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv231[ebp], 8
  003fa	eb 24		 jmp	 SHORT $LN59@get_best_a
$LN58@get_best_a:
  003fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00402	83 c2 6a	 add	 edx, 106		; 0000006aH
  00405	52		 push	 edx
  00406	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0040b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00416	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv231[ebp], 0
$LN59@get_best_a:
  00420	6a 08		 push	 8
  00422	8b 4d bc	 mov	 ecx, DWORD PTR _target$[ebp]
  00425	51		 push	 ecx
  00426	6b 95 64 ff ff
	ff 60		 imul	 edx, DWORD PTR tv223[ebp], 96
  0042d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv231[ebp]
  00433	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0043a	ff d1		 call	 ecx
  0043c	89 45 ac	 mov	 DWORD PTR _target_position$[ebp], eax

; 2137 : 
; 2138 : 				target_range = get_3d_range (source_position, target_position);

  0043f	8b 45 ac	 mov	 eax, DWORD PTR _target_position$[ebp]
  00442	50		 push	 eax
  00443	8b 4d b0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00446	51		 push	 ecx
  00447	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  0044c	d9 5d e0	 fstp	 DWORD PTR _target_range$[ebp]

; 2139 : 
; 2140 : 				if (target_range <= air_radar.scan_range)

  0044f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  00457	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  0045b	0f 82 9c 06 00
	00		 jb	 $LN34@get_best_a

; 2141 : 				{
; 2142 : 					////////////////////////////////////////
; 2143 : 					//
; 2144 : 					// evaluate score for target
; 2145 : 					//
; 2146 : 					////////////////////////////////////////
; 2147 : 
; 2148 : 					score = 0.0;

  00461	0f 57 c0	 xorps	 xmm0, xmm0
  00464	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2149 : 
; 2150 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2151 : 
; 2152 : 					debug_log ("AIR RADAR: evaluating %s", get_local_entity_string (target, STRING_TYPE_FULL_NAME));
; 2153 : 
; 2154 : 					#endif
; 2155 : 
; 2156 : 					//
; 2157 : 					// SCORE: within radar scan arc limit
; 2158 : 					//
; 2159 : 
; 2160 : 					dx = target_position->x - source_position->x;

  00469	8b 45 ac	 mov	 eax, DWORD PTR _target_position$[ebp]
  0046c	8b 4d b0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0046f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00473	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00477	f3 0f 11 45 d4	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2161 : 					dz = target_position->z - source_position->z;

  0047c	8b 45 ac	 mov	 eax, DWORD PTR _target_position$[ebp]
  0047f	8b 4d b0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00482	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00487	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0048c	f3 0f 11 45 d0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2162 : 
; 2163 : 					target_bearing = atan2 (dx, dz);

  00491	51		 push	 ecx
  00492	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00497	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049c	51		 push	 ecx
  0049d	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _dx$[ebp]
  004a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a7	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  004ac	d9 5d c8	 fstp	 DWORD PTR _target_bearing$[ebp]

; 2164 : 
; 2165 : 					if (air_radar.scan_arc_size == RADAR_SCAN_ARC_SIZE_360)

  004af	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+8
  004b7	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@40c90fdb
  004be	9f		 lahf
  004bf	f6 c4 44	 test	 ah, 68			; 00000044H
  004c2	0f 8a 84 00 00
	00		 jp	 $LN9@get_best_a

; 2166 : 					{
; 2167 : 						theta = target_bearing - source_heading;

  004c8	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _target_bearing$[ebp]
  004cd	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _source_heading$[ebp]
  004d2	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0

; 2168 : 
; 2169 : 						if (theta > rad (180.0))

  004d7	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  004dc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  004e4	76 18		 jbe	 SHORT $LN11@get_best_a

; 2170 : 						{
; 2171 : 							theta -= rad (360.0);

  004e6	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  004eb	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  004f3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004f7	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
  004fc	eb 29		 jmp	 SHORT $LN13@get_best_a
$LN11@get_best_a:

; 2172 : 						}
; 2173 : 						else if (theta < rad (-180.0))

  004fe	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00503	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  0050b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0050f	76 16		 jbe	 SHORT $LN13@get_best_a

; 2174 : 						{
; 2175 : 							theta += rad (360.0);

  00511	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00516	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  0051e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00522	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN13@get_best_a:

; 2176 : 						}
; 2177 : 
; 2178 : 						theta = fabs (theta);

  00527	51		 push	 ecx
  00528	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _theta$[ebp]
  0052d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00532	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00537	d9 5d c4	 fstp	 DWORD PTR _theta$[ebp]

; 2179 : 
; 2180 : 						delta_score = 1.0;

  0053a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00542	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2181 : 					}
; 2182 : 					else

  00547	e9 a0 00 00 00	 jmp	 $LN18@get_best_a
$LN9@get_best_a:

; 2183 : 					{
; 2184 : 						theta = target_bearing - (source_heading + air_radar.scan_datum);

  0054c	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _source_heading$[ebp]
  00551	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+4
  00559	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _target_bearing$[ebp]
  0055e	f3 0f 5c c8	 subss	 xmm1, xmm0
  00562	f3 0f 11 4d c4	 movss	 DWORD PTR _theta$[ebp], xmm1

; 2185 : 
; 2186 : 						if (theta > rad (180.0))

  00567	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0056c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00574	76 18		 jbe	 SHORT $LN14@get_best_a

; 2187 : 						{
; 2188 : 							theta -= rad (360.0);

  00576	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0057b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00583	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00587	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
  0058c	eb 29		 jmp	 SHORT $LN16@get_best_a
$LN14@get_best_a:

; 2189 : 						}
; 2190 : 						else if (theta < rad (-180.0))

  0058e	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00593	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  0059b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0059f	76 16		 jbe	 SHORT $LN16@get_best_a

; 2191 : 						{
; 2192 : 							theta += rad (360.0);

  005a1	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  005a6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  005ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b2	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN16@get_best_a:

; 2193 : 						}
; 2194 : 
; 2195 : 						theta = fabs (theta);

  005b7	51		 push	 ecx
  005b8	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _theta$[ebp]
  005bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c2	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  005c7	d9 5d c4	 fstp	 DWORD PTR _theta$[ebp]

; 2196 : 
; 2197 : 						if (theta <= scan_arc_limit)

  005ca	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _scan_arc_limit$[ebp]
  005cf	0f 2f 45 c4	 comiss	 xmm0, DWORD PTR _theta$[ebp]
  005d3	72 0f		 jb	 SHORT $LN17@get_best_a

; 2198 : 						{
; 2199 : 							delta_score = 1.0;

  005d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005dd	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2200 : 						}
; 2201 : 						else

  005e2	eb 08		 jmp	 SHORT $LN18@get_best_a
$LN17@get_best_a:

; 2202 : 						{
; 2203 : 							delta_score = 0.0;

  005e4	0f 57 c0	 xorps	 xmm0, xmm0
  005e7	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN18@get_best_a:

; 2204 : 						}
; 2205 : 					}
; 2206 : 
; 2207 : 					score += delta_score;

  005ec	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  005f1	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  005f6	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2208 : 
; 2209 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2210 : 
; 2211 : 					debug_log ("-->delta = %.2f, score = %.2f (within radar scan arc limit, theta = %.2f, limit = %.2f)", delta_score, score, deg (theta), deg (scan_arc_limit));
; 2212 : 
; 2213 : 					#endif
; 2214 : 
; 2215 : 					//
; 2216 : 					// SCORE: deviation from radar scan datum
; 2217 : 					//
; 2218 : 
; 2219 : 					delta_score = 1.0 - (theta * (1.0 / rad (180.0)));

  005fb	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00600	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd45f30706f8fe6
  00608	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00610	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00614	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00618	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2220 : 
; 2221 : 					score += delta_score;

  0061d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00622	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00627	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2222 : 
; 2223 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2224 : 
; 2225 : 					debug_log ("-->delta = %.2f, score = %.2f (deviation from radar scan datum)", delta_score, score);
; 2226 : 
; 2227 : 					#endif
; 2228 : 
; 2229 : 					//
; 2230 : 					// SCORE: aspect (target facing player)
; 2231 : 					//
; 2232 : 
; 2233 : 					source_bearing = target_bearing + rad (180.0);

  0062c	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _target_bearing$[ebp]
  00631	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@400921fb51000000
  00639	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0063d	f3 0f 11 45 cc	 movss	 DWORD PTR _source_bearing$[ebp], xmm0

; 2234 : 
; 2235 : 					if (source_bearing > rad (180.0))

  00642	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _source_bearing$[ebp]
  00647	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  0064f	76 18		 jbe	 SHORT $LN19@get_best_a

; 2236 : 					{
; 2237 : 						source_bearing -= rad (360.0);

  00651	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _source_bearing$[ebp]
  00656	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0065e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00662	f3 0f 11 45 cc	 movss	 DWORD PTR _source_bearing$[ebp], xmm0
  00667	eb 29		 jmp	 SHORT $LN21@get_best_a
$LN19@get_best_a:

; 2238 : 					}
; 2239 : 					else if (source_bearing < rad (-180.0))

  00669	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _source_bearing$[ebp]
  0066e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00676	66 0f 2f c8	 comisd	 xmm1, xmm0
  0067a	76 16		 jbe	 SHORT $LN21@get_best_a

; 2240 : 					{
; 2241 : 						source_bearing += rad (360.0);

  0067c	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _source_bearing$[ebp]
  00681	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00689	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0068d	f3 0f 11 45 cc	 movss	 DWORD PTR _source_bearing$[ebp], xmm0
$LN21@get_best_a:

; 2242 : 					}
; 2243 : 
; 2244 : 					target_heading = get_local_entity_float_value (target, FLOAT_TYPE_HEADING);

  00692	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00696	74 0d		 je	 SHORT $LN60@get_best_a
  00698	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  0069b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0069d	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv304[ebp], ecx
  006a3	eb 27		 jmp	 SHORT $LN61@get_best_a
$LN60@get_best_a:
  006a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  006ab	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  006b1	52		 push	 edx
  006b2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006bc	50		 push	 eax
  006bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006c2	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN61@get_best_a:
  006cc	b9 01 00 00 00	 mov	 ecx, 1
  006d1	85 c9		 test	 ecx, ecx
  006d3	74 0c		 je	 SHORT $LN62@get_best_a
  006d5	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv312[ebp], 52 ; 00000034H
  006df	eb 27		 jmp	 SHORT $LN63@get_best_a
$LN62@get_best_a:
  006e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  006e7	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  006ed	52		 push	 edx
  006ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  006f8	50		 push	 eax
  006f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006fe	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv312[ebp], 0
$LN63@get_best_a:
  00708	6a 34		 push	 52			; 00000034H
  0070a	8b 4d bc	 mov	 ecx, DWORD PTR _target$[ebp]
  0070d	51		 push	 ecx
  0070e	69 95 64 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv304[ebp], 700
  00718	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv312[ebp]
  0071e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00725	ff d1		 call	 ecx
  00727	d9 5d d8	 fstp	 DWORD PTR _target_heading$[ebp]

; 2245 : 
; 2246 : 					theta = source_bearing - target_heading;

  0072a	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _source_bearing$[ebp]
  0072f	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _target_heading$[ebp]
  00734	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0

; 2247 : 
; 2248 : 					if (theta > rad (180.0))

  00739	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0073e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00746	76 18		 jbe	 SHORT $LN22@get_best_a

; 2249 : 					{
; 2250 : 						theta -= rad (360.0);

  00748	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0074d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00755	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00759	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
  0075e	eb 29		 jmp	 SHORT $LN24@get_best_a
$LN22@get_best_a:

; 2251 : 					}
; 2252 : 					else if (theta < rad (-180.0))

  00760	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00765	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  0076d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00771	76 16		 jbe	 SHORT $LN24@get_best_a

; 2253 : 					{
; 2254 : 						theta += rad (360.0);

  00773	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00778	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00780	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00784	f3 0f 11 45 c4	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN24@get_best_a:

; 2255 : 					}
; 2256 : 
; 2257 : 					theta = fabs (theta);

  00789	51		 push	 ecx
  0078a	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _theta$[ebp]
  0078f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00794	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00799	d9 5d c4	 fstp	 DWORD PTR _theta$[ebp]

; 2258 : 
; 2259 : 					delta_score = 1.0 - (theta * (1.0 / rad (180.0)));

  0079c	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  007a1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd45f30706f8fe6
  007a9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  007b1	f2 0f 5c c8	 subsd	 xmm1, xmm0
  007b5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  007b9	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2260 : 
; 2261 : 					score += delta_score;

  007be	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  007c3	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  007c8	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2262 : 
; 2263 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2264 : 
; 2265 : 					debug_log ("-->delta = %.2f, score = %.2f (aspect, theta = %.2f, source bearing = %.2f, target heading = %.2f)", delta_score, score, deg (theta), deg (source_bearing), deg (target_heading));
; 2266 : 
; 2267 : 					#endif
; 2268 : 
; 2269 : 					//
; 2270 : 					// SCORE: line of sight clear
; 2271 : 					//
; 2272 : 
; 2273 : 					if (get_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR))

  007cd	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  007d1	74 0d		 je	 SHORT $LN64@get_best_a
  007d3	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  007d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  007d8	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv341[ebp], ecx
  007de	eb 20		 jmp	 SHORT $LN65@get_best_a
$LN64@get_best_a:
  007e0	68 e1 08 00 00	 push	 2273			; 000008e1H
  007e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007f0	52		 push	 edx
  007f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f6	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv341[ebp], 0
$LN65@get_best_a:
  00800	b8 01 00 00 00	 mov	 eax, 1
  00805	85 c0		 test	 eax, eax
  00807	74 0c		 je	 SHORT $LN66@get_best_a
  00809	c7 85 60 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv348[ebp], 80 ; 00000050H
  00813	eb 20		 jmp	 SHORT $LN67@get_best_a
$LN66@get_best_a:
  00815	68 e1 08 00 00	 push	 2273			; 000008e1H
  0081a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0081f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00825	51		 push	 ecx
  00826	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv348[ebp], 0
$LN67@get_best_a:
  00835	6a 50		 push	 80			; 00000050H
  00837	8b 55 bc	 mov	 edx, DWORD PTR _target$[ebp]
  0083a	52		 push	 edx
  0083b	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv341[ebp], 1116
  00845	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv348[ebp]
  0084b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00852	ff d2		 call	 edx
  00854	85 c0		 test	 eax, eax
  00856	74 0f		 je	 SHORT $LN25@get_best_a

; 2274 : 					{
; 2275 : 						delta_score = 1.0;

  00858	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00860	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2276 : 					}
; 2277 : 					else

  00865	eb 08		 jmp	 SHORT $LN26@get_best_a
$LN25@get_best_a:

; 2278 : 					{
; 2279 : 						delta_score = 0.0;

  00867	0f 57 c0	 xorps	 xmm0, xmm0
  0086a	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN26@get_best_a:

; 2280 : 					}
; 2281 : 
; 2282 : 					score += delta_score;

  0086f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00874	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00879	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2283 : 
; 2284 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2285 : 
; 2286 : 					debug_log ("-->delta = %.2f, score = %.2f (line of sight clear)", delta_score, score);
; 2287 : 
; 2288 : 					#endif
; 2289 : 
; 2290 : 					//
; 2291 : 					// SCORE: targetting player
; 2292 : 					//
; 2293 : 
; 2294 : 					if (get_local_entity_int_value (target, INT_TYPE_IDENTIFY_AIRCRAFT))

  0087e	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00882	74 0d		 je	 SHORT $LN68@get_best_a
  00884	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  00887	8b 08		 mov	 ecx, DWORD PTR [eax]
  00889	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv361[ebp], ecx
  0088f	eb 20		 jmp	 SHORT $LN69@get_best_a
$LN68@get_best_a:
  00891	68 f6 08 00 00	 push	 2294			; 000008f6H
  00896	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0089b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008a1	52		 push	 edx
  008a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008a7	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv361[ebp], 0
$LN69@get_best_a:
  008b1	b8 01 00 00 00	 mov	 eax, 1
  008b6	85 c0		 test	 eax, eax
  008b8	74 0c		 je	 SHORT $LN70@get_best_a
  008ba	c7 85 60 ff ff
	ff 57 00 00 00	 mov	 DWORD PTR tv368[ebp], 87 ; 00000057H
  008c4	eb 20		 jmp	 SHORT $LN71@get_best_a
$LN70@get_best_a:
  008c6	68 f6 08 00 00	 push	 2294			; 000008f6H
  008cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008d6	51		 push	 ecx
  008d7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008dc	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv368[ebp], 0
$LN71@get_best_a:
  008e6	6a 57		 push	 87			; 00000057H
  008e8	8b 55 bc	 mov	 edx, DWORD PTR _target$[ebp]
  008eb	52		 push	 edx
  008ec	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv361[ebp], 1116
  008f6	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  008fc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00903	ff d2		 call	 edx
  00905	85 c0		 test	 eax, eax
  00907	0f 84 a3 00 00
	00		 je	 $LN29@get_best_a

; 2295 : 					{
; 2296 : 						if (source == get_local_entity_parent (target, LIST_TYPE_TARGET))

  0090d	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00911	74 0d		 je	 SHORT $LN72@get_best_a
  00913	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  00916	8b 08		 mov	 ecx, DWORD PTR [eax]
  00918	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv380[ebp], ecx
  0091e	eb 20		 jmp	 SHORT $LN73@get_best_a
$LN72@get_best_a:
  00920	68 f8 08 00 00	 push	 2296			; 000008f8H
  00925	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0092a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00930	52		 push	 edx
  00931	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00936	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv380[ebp], 0
$LN73@get_best_a:
  00940	b8 01 00 00 00	 mov	 eax, 1
  00945	85 c0		 test	 eax, eax
  00947	74 0c		 je	 SHORT $LN74@get_best_a
  00949	c7 85 60 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv387[ebp], 38 ; 00000026H
  00953	eb 20		 jmp	 SHORT $LN75@get_best_a
$LN74@get_best_a:
  00955	68 f8 08 00 00	 push	 2296			; 000008f8H
  0095a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00965	51		 push	 ecx
  00966	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0096b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv387[ebp], 0
$LN75@get_best_a:
  00975	6a 26		 push	 38			; 00000026H
  00977	8b 55 bc	 mov	 edx, DWORD PTR _target$[ebp]
  0097a	52		 push	 edx
  0097b	69 85 64 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv380[ebp], 180
  00985	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv387[ebp]
  0098b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00992	ff d2		 call	 edx
  00994	39 45 c0	 cmp	 DWORD PTR _source$[ebp], eax
  00997	75 0f		 jne	 SHORT $LN28@get_best_a

; 2297 : 						{
; 2298 : 							delta_score = 1.0;

  00999	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009a1	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2299 : 						}
; 2300 : 						else

  009a6	eb 08		 jmp	 SHORT $LN29@get_best_a
$LN28@get_best_a:

; 2301 : 						{
; 2302 : 							delta_score = 0.0;

  009a8	0f 57 c0	 xorps	 xmm0, xmm0
  009ab	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN29@get_best_a:

; 2303 : 						}
; 2304 : 					}
; 2305 : 
; 2306 : 					score += delta_score;

  009b0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  009b5	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  009ba	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2307 : 
; 2308 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2309 : 
; 2310 : 					debug_log ("-->delta = %.2f, score = %.2f (targetting player)", delta_score, score);
; 2311 : 
; 2312 : 					#endif
; 2313 : 
; 2314 : 					//
; 2315 : 					// SCORE: within selected weapon range
; 2316 : 					//
; 2317 : 
; 2318 : 					if ((target_range >= weapon_min_range) && (target_range <= weapon_max_range))

  009bf	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  009c4	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _weapon_min_range$[ebp]
  009c8	72 1a		 jb	 SHORT $LN30@get_best_a
  009ca	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _weapon_max_range$[ebp]
  009cf	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  009d3	72 0f		 jb	 SHORT $LN30@get_best_a

; 2319 : 					{
; 2320 : 						delta_score = 1.0;

  009d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009dd	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2321 : 					}
; 2322 : 					else

  009e2	eb 08		 jmp	 SHORT $LN31@get_best_a
$LN30@get_best_a:

; 2323 : 					{
; 2324 : 						delta_score = 0.0;

  009e4	0f 57 c0	 xorps	 xmm0, xmm0
  009e7	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN31@get_best_a:

; 2325 : 					}
; 2326 : 
; 2327 : 					score += delta_score;

  009ec	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  009f1	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  009f6	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2328 : 
; 2329 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2330 : 
; 2331 : 					debug_log ("-->delta = %.2f, score = %.2f (within selected weapon range, min = %.2f, max = %.2f)", delta_score, score, weapon_min_range, weapon_max_range);
; 2332 : 
; 2333 : 					#endif
; 2334 : 
; 2335 : 					//
; 2336 : 					// SCORE: range
; 2337 : 					//
; 2338 : 
; 2339 : 					delta_score = 1.0 - (target_range * one_over_scan_range);

  009fb	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00a00	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _one_over_scan_range$[ebp]
  00a05	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00a09	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00a11	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00a15	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00a19	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2340 : 
; 2341 : 					score += delta_score;

  00a1e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00a23	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00a28	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2342 : 
; 2343 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2344 : 
; 2345 : 					debug_log ("-->delta = %.2f, score = %.2f (range = %.2f, scan range = %.2f)", delta_score, score, target_range, air_radar.scan_range);
; 2346 : 
; 2347 : 					#endif
; 2348 : 
; 2349 : 					//
; 2350 : 					// SCORE: enemy
; 2351 : 					//
; 2352 : 
; 2353 : 					if (source_side != get_local_entity_int_value (target, INT_TYPE_SIDE))

  00a2d	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a31	74 0d		 je	 SHORT $LN76@get_best_a
  00a33	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  00a36	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a38	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv408[ebp], ecx
  00a3e	eb 20		 jmp	 SHORT $LN77@get_best_a
$LN76@get_best_a:
  00a40	68 31 09 00 00	 push	 2353			; 00000931H
  00a45	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a50	52		 push	 edx
  00a51	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a56	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv408[ebp], 0
$LN77@get_best_a:
  00a60	b8 01 00 00 00	 mov	 eax, 1
  00a65	85 c0		 test	 eax, eax
  00a67	74 0c		 je	 SHORT $LN78@get_best_a
  00a69	c7 85 60 ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv415[ebp], 187 ; 000000bbH
  00a73	eb 20		 jmp	 SHORT $LN79@get_best_a
$LN78@get_best_a:
  00a75	68 31 09 00 00	 push	 2353			; 00000931H
  00a7a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a7f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a85	51		 push	 ecx
  00a86	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a8b	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv415[ebp], 0
$LN79@get_best_a:
  00a95	68 bb 00 00 00	 push	 187			; 000000bbH
  00a9a	8b 55 bc	 mov	 edx, DWORD PTR _target$[ebp]
  00a9d	52		 push	 edx
  00a9e	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv408[ebp], 1116
  00aa8	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv415[ebp]
  00aae	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ab5	ff d2		 call	 edx
  00ab7	39 45 b4	 cmp	 DWORD PTR _source_side$[ebp], eax
  00aba	74 0f		 je	 SHORT $LN32@get_best_a

; 2354 : 					{
; 2355 : 						delta_score = 1.0;

  00abc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00ac4	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 2356 : 					}
; 2357 : 					else

  00ac9	eb 08		 jmp	 SHORT $LN33@get_best_a
$LN32@get_best_a:

; 2358 : 					{
; 2359 : 						delta_score = 0.0;

  00acb	0f 57 c0	 xorps	 xmm0, xmm0
  00ace	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN33@get_best_a:

; 2360 : 					}
; 2361 : 
; 2362 : 					score += delta_score;

  00ad3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00ad8	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00add	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 2363 : 
; 2364 : 					#if DEBUG_MODULE_BEST_TARGET_SCORING
; 2365 : 
; 2366 : 					debug_log ("-->delta = %.2f, score = %.2f (enemy)", delta_score, score);
; 2367 : 
; 2368 : 					#endif
; 2369 : 
; 2370 : 					////////////////////////////////////////
; 2371 : 					//
; 2372 : 					// compare score with best score
; 2373 : 					//
; 2374 : 					////////////////////////////////////////
; 2375 : 
; 2376 : 					if (score > best_score)

  00ae2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00ae7	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _best_score$[ebp]
  00aeb	76 10		 jbe	 SHORT $LN34@get_best_a

; 2377 : 					{
; 2378 : 						best_score = score;

  00aed	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00af2	f3 0f 11 45 f8	 movss	 DWORD PTR _best_score$[ebp], xmm0

; 2379 : 
; 2380 : 						best_target = target;

  00af7	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  00afa	89 45 b8	 mov	 DWORD PTR _best_target$[ebp], eax
$LN34@get_best_a:

; 2381 : 					}
; 2382 : 				}
; 2383 : 			}
; 2384 : 		}
; 2385 : 
; 2386 : 		target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET);

  00afd	83 7d bc 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b01	74 0d		 je	 SHORT $LN80@get_best_a
  00b03	8b 45 bc	 mov	 eax, DWORD PTR _target$[ebp]
  00b06	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b08	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv430[ebp], ecx
  00b0e	eb 27		 jmp	 SHORT $LN81@get_best_a
$LN80@get_best_a:
  00b10	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00b16	81 c2 64 01 00
	00		 add	 edx, 356		; 00000164H
  00b1c	52		 push	 edx
  00b1d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b22	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b27	50		 push	 eax
  00b28	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b2d	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv430[ebp], 0
$LN81@get_best_a:
  00b37	b9 01 00 00 00	 mov	 ecx, 1
  00b3c	85 c9		 test	 ecx, ecx
  00b3e	74 0c		 je	 SHORT $LN82@get_best_a
  00b40	c7 85 60 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv438[ebp], 18 ; 00000012H
  00b4a	eb 27		 jmp	 SHORT $LN83@get_best_a
$LN82@get_best_a:
  00b4c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_air_radar_target@@YGPAUENTITY@@XZ@4JA
  00b52	81 c2 64 01 00
	00		 add	 edx, 356		; 00000164H
  00b58	52		 push	 edx
  00b59	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b63	50		 push	 eax
  00b64	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b69	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv438[ebp], 0
$LN83@get_best_a:
  00b73	6a 12		 push	 18			; 00000012H
  00b75	8b 4d bc	 mov	 ecx, DWORD PTR _target$[ebp]
  00b78	51		 push	 ecx
  00b79	69 95 64 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv430[ebp], 180
  00b83	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv438[ebp]
  00b89	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b90	ff d1		 call	 ecx
  00b92	89 45 bc	 mov	 DWORD PTR _target$[ebp], eax

; 2387 : 	}

  00b95	e9 e6 f7 ff ff	 jmp	 $LN2@get_best_a
$LN3@get_best_a:

; 2388 : 
; 2389 : 	return (best_target);

  00b9a	8b 45 b8	 mov	 eax, DWORD PTR _best_target$[ebp]

; 2390 : }

  00b9d	5f		 pop	 edi
  00b9e	5e		 pop	 esi
  00b9f	5b		 pop	 ebx
  00ba0	8b e5		 mov	 esp, ebp
  00ba2	5d		 pop	 ebp
  00ba3	c3		 ret	 0
?get_best_air_radar_target@@YGPAUENTITY@@XZ ENDP	; get_best_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_valid_air_radar_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv190 = -80						; size = 8
tv151 = -72						; size = 4
tv132 = -72						; size = 4
tv81 = -72						; size = 4
tv144 = -68						; size = 4
tv93 = -68						; size = 4
tv74 = -68						; size = 4
_target$ = 8						; size = 4
?get_valid_air_radar_target@@YGHPAUENTITY@@@Z PROC	; get_valid_air_radar_target, COMDAT

; 1963 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1964 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_valid_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_valid_air_radar_target@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_valid_:

; 1965 : 
; 1966 : 	if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00027	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN7@get_valid_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN8@get_valid_
$LN7@get_valid_:
  00037	68 ae 07 00 00	 push	 1966			; 000007aeH
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN8@get_valid_:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN9@get_valid_
  0005d	c7 45 b8 07 00
	00 00		 mov	 DWORD PTR tv81[ebp], 7
  00064	eb 1d		 jmp	 SHORT $LN10@get_valid_
$LN9@get_valid_:
  00066	68 ae 07 00 00	 push	 1966			; 000007aeH
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN10@get_valid_:
  00083	6a 07		 push	 7
  00085	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00088	52		 push	 edx
  00089	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b8	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 0b 01 00
	00		 je	 $LN5@get_valid_

; 1967 : 	{
; 1968 : 		if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  000a4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000a8	74 0a		 je	 SHORT $LN11@get_valid_
  000aa	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 4d bc	 mov	 DWORD PTR tv93[ebp], ecx
  000b2	eb 1d		 jmp	 SHORT $LN12@get_valid_
$LN11@get_valid_:
  000b4	68 b0 07 00 00	 push	 1968			; 000007b0H
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ca	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN12@get_valid_:
  000d1	b8 01 00 00 00	 mov	 eax, 1
  000d6	85 c0		 test	 eax, eax
  000d8	74 09		 je	 SHORT $LN13@get_valid_
  000da	c7 45 b8 04 00
	00 00		 mov	 DWORD PTR tv132[ebp], 4
  000e1	eb 1d		 jmp	 SHORT $LN14@get_valid_
$LN13@get_valid_:
  000e3	68 b0 07 00 00	 push	 1968			; 000007b0H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN14@get_valid_:
  00100	6a 04		 push	 4
  00102	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00105	52		 push	 edx
  00106	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 1116
  0010d	8b 4d b8	 mov	 ecx, DWORD PTR tv132[ebp]
  00110	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00117	ff d2		 call	 edx
  00119	85 c0		 test	 eax, eax
  0011b	0f 84 8e 00 00
	00		 je	 $LN5@get_valid_

; 1969 : 		{
; 1970 : 			if (get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE) > 5.0)

  00121	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00125	74 0a		 je	 SHORT $LN15@get_valid_
  00127	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	89 4d bc	 mov	 DWORD PTR tv144[ebp], ecx
  0012f	eb 1d		 jmp	 SHORT $LN16@get_valid_
$LN15@get_valid_:
  00131	68 b2 07 00 00	 push	 1970			; 000007b2H
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00141	52		 push	 edx
  00142	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00147	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv144[ebp], 0
$LN16@get_valid_:
  0014e	b8 01 00 00 00	 mov	 eax, 1
  00153	85 c0		 test	 eax, eax
  00155	74 09		 je	 SHORT $LN17@get_valid_
  00157	c7 45 b8 68 00
	00 00		 mov	 DWORD PTR tv151[ebp], 104 ; 00000068H
  0015e	eb 1d		 jmp	 SHORT $LN18@get_valid_
$LN17@get_valid_:
  00160	68 b2 07 00 00	 push	 1970			; 000007b2H
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00170	51		 push	 ecx
  00171	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00176	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN18@get_valid_:
  0017d	6a 68		 push	 104			; 00000068H
  0017f	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00182	52		 push	 edx
  00183	69 45 bc bc 02
	00 00		 imul	 eax, DWORD PTR tv144[ebp], 700
  0018a	8b 4d b8	 mov	 ecx, DWORD PTR tv151[ebp]
  0018d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00194	ff d2		 call	 edx
  00196	dd 5d b0	 fstp	 QWORD PTR tv190[ebp]
  00199	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv190[ebp]
  0019e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4014000000000000
  001a6	76 07		 jbe	 SHORT $LN5@get_valid_

; 1971 : 			{
; 1972 : 				return (TRUE);

  001a8	b8 01 00 00 00	 mov	 eax, 1
  001ad	eb 02		 jmp	 SHORT $LN1@get_valid_
$LN5@get_valid_:

; 1973 : 			}
; 1974 : 		}
; 1975 : 	}
; 1976 : 
; 1977 : 	return (FALSE);

  001af	33 c0		 xor	 eax, eax
$LN1@get_valid_:

; 1978 : }

  001b1	5f		 pop	 edi
  001b2	5e		 pop	 esi
  001b3	5b		 pop	 ebx
  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c2 04 00	 ret	 4
?get_valid_air_radar_target@@YGHPAUENTITY@@@Z ENDP	; get_valid_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@H@std@@YGABHABH0@Z PROC				; std::min<int>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00015	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@min
  00021	eb 4a		 jmp	 SHORT $LN2@min
$LN7@min:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 36 15 00 00	 push	 5430			; 00001536H
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@min
  00049	cc		 int	 3
$LN12@min:
  0004a	6a 00		 push	 0
  0004c	68 36 15 00 00	 push	 5430			; 00001536H
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@min
$LN2@min:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@min:

; 5435 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$min@H@std@@YGABHABH0@Z ENDP				; std::min<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@H@std@@YGABHABH0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@H@std@@YGABHABH0@Z PROC				; std::max<int>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00013	7d 61		 jge	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00015	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00018	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0001f	7c 02		 jl	 SHORT $LN7@max
  00021	eb 4a		 jmp	 SHORT $LN2@max
$LN7@max:
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0002d	6a 00		 push	 0
  0002f	68 0e 15 00 00	 push	 5390			; 0000150eH
  00034	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  00039	6a 02		 push	 2
  0003b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00041	83 c4 18	 add	 esp, 24			; 00000018H
  00044	83 f8 01	 cmp	 eax, 1
  00047	75 01		 jne	 SHORT $LN12@max
  00049	cc		 int	 3
$LN12@max:
  0004a	6a 00		 push	 0
  0004c	68 0e 15 00 00	 push	 5390			; 0000150eH
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  0005b	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  00066	83 c4 14	 add	 esp, 20			; 00000014H
  00069	33 c0		 xor	 eax, eax
  0006b	75 b6		 jne	 SHORT $LN7@max
$LN2@max:
  0006d	33 c0		 xor	 eax, eax
  0006f	75 a4		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00071	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00074	eb 03		 jmp	 SHORT $LN11@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  00076	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN11@max:

; 5395 : 	}

  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5b		 pop	 ebx
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 08 00	 ret	 8
??$max@H@std@@YGABHABH0@Z ENDP				; std::max<int>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv169 = -108						; size = 4
tv141 = -108						; size = 4
tv89 = -108						; size = 4
tv161 = -104						; size = 4
tv133 = -104						; size = 4
tv81 = -104						; size = 4
_target_position$ = -36					; size = 4
_source_position$ = -32					; size = 4
_source$ = -28						; size = 4
_theta$ = -24						; size = 4
_target_bearing$ = -20					; size = 4
_dz$ = -16						; size = 4
_dx$ = -12						; size = 4
_source_heading$ = -8					; size = 4
_target_range$ = -4					; size = 4
_target$ = 8						; size = 4
?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z PROC ; get_selectable_ground_radar_target, COMDAT

; 1337 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1338 : 	float
; 1339 : 		target_range,
; 1340 : 		source_heading,
; 1341 : 		dx,
; 1342 : 		dz,
; 1343 : 		target_bearing,
; 1344 : 		theta;
; 1345 : 
; 1346 : 	entity
; 1347 : 		*source;
; 1348 : 
; 1349 : 	vec3d
; 1350 : 		*source_position,
; 1351 : 		*target_position;
; 1352 : 
; 1353 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_select
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 10	 add	 eax, 16			; 00000010H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_select:

; 1354 : 
; 1355 : 	////////////////////////////////////////
; 1356 : 	//
; 1357 : 	// keep MANDATORY checks the same as get_best_ground_radar_target ()
; 1358 : 	//
; 1359 : 	////////////////////////////////////////
; 1360 : 
; 1361 : 	//
; 1362 : 	// MANDATORY: valid ground radar target
; 1363 : 	//
; 1364 : 
; 1365 : 	if (get_gunship_target_valid_for_ground_radar (target))

  00027	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_ground_radar
  00030	85 c0		 test	 eax, eax
  00032	0f 84 a0 02 00
	00		 je	 $LN11@get_select

; 1366 : 	{
; 1367 : 		//
; 1368 : 		// MANDATORY: target matches declutter criteria
; 1369 : 		//
; 1370 : 
; 1371 : 		if (get_target_matches_ground_radar_declutter_criteria (target))

  00038	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z ; get_target_matches_ground_radar_declutter_criteria
  00041	85 c0		 test	 eax, eax
  00043	0f 84 8f 02 00
	00		 je	 $LN11@get_select

; 1372 : 		{
; 1373 : 			source = get_gunship_entity ();

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0004e	89 45 e4	 mov	 DWORD PTR _source$[ebp], eax

; 1374 : 
; 1375 : 			//
; 1376 : 			// MANDATORY: target within scan range
; 1377 : 			//
; 1378 : 
; 1379 : 			source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00051	83 7d e4 00	 cmp	 DWORD PTR _source$[ebp], 0
  00055	74 0a		 je	 SHORT $LN13@get_select
  00057	8b 45 e4	 mov	 eax, DWORD PTR _source$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d 98	 mov	 DWORD PTR tv81[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN14@get_select
$LN13@get_select:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00067	83 c2 2a	 add	 edx, 42			; 0000002aH
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN14@get_select:
  00082	b9 01 00 00 00	 mov	 ecx, 1
  00087	85 c9		 test	 ecx, ecx
  00089	74 09		 je	 SHORT $LN15@get_select
  0008b	c7 45 94 08 00
	00 00		 mov	 DWORD PTR tv89[ebp], 8
  00092	eb 21		 jmp	 SHORT $LN16@get_select
$LN15@get_select:
  00094	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  0009a	83 c2 2a	 add	 edx, 42			; 0000002aH
  0009d	52		 push	 edx
  0009e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ae	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN16@get_select:
  000b5	6a 08		 push	 8
  000b7	8b 4d e4	 mov	 ecx, DWORD PTR _source$[ebp]
  000ba	51		 push	 ecx
  000bb	6b 55 98 60	 imul	 edx, DWORD PTR tv81[ebp], 96
  000bf	8b 45 94	 mov	 eax, DWORD PTR tv89[ebp]
  000c2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000c9	ff d1		 call	 ecx
  000cb	89 45 e0	 mov	 DWORD PTR _source_position$[ebp], eax

; 1380 : 
; 1381 : 			target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  000ce	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000d2	74 0a		 je	 SHORT $LN17@get_select
  000d4	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	89 4d 98	 mov	 DWORD PTR tv133[ebp], ecx
  000dc	eb 21		 jmp	 SHORT $LN18@get_select
$LN17@get_select:
  000de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  000e4	83 c2 2c	 add	 edx, 44			; 0000002cH
  000e7	52		 push	 edx
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f8	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN18@get_select:
  000ff	b9 01 00 00 00	 mov	 ecx, 1
  00104	85 c9		 test	 ecx, ecx
  00106	74 09		 je	 SHORT $LN19@get_select
  00108	c7 45 94 08 00
	00 00		 mov	 DWORD PTR tv141[ebp], 8
  0010f	eb 21		 jmp	 SHORT $LN20@get_select
$LN19@get_select:
  00111	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00117	83 c2 2c	 add	 edx, 44			; 0000002cH
  0011a	52		 push	 edx
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012b	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN20@get_select:
  00132	6a 08		 push	 8
  00134	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00137	51		 push	 ecx
  00138	6b 55 98 60	 imul	 edx, DWORD PTR tv133[ebp], 96
  0013c	8b 45 94	 mov	 eax, DWORD PTR tv141[ebp]
  0013f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00146	ff d1		 call	 ecx
  00148	89 45 dc	 mov	 DWORD PTR _target_position$[ebp], eax

; 1382 : 
; 1383 : 			// arneh, 20061106 - filter away targets outside pfz for apache
; 1384 : 			if (get_global_gunship_type() == GUNSHIP_TYPE_APACHE)

  0014b	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12, 0
  00152	75 14		 jne	 SHORT $LN6@get_select

; 1385 : 				if (!is_valid_pfz_target(target_position))

  00154	8b 45 dc	 mov	 eax, DWORD PTR _target_position$[ebp]
  00157	50		 push	 eax
  00158	e8 00 00 00 00	 call	 ?is_valid_pfz_target@@YGHPAUVEC3D@@@Z ; is_valid_pfz_target
  0015d	85 c0		 test	 eax, eax
  0015f	75 07		 jne	 SHORT $LN6@get_select

; 1386 : 					return FALSE;

  00161	33 c0		 xor	 eax, eax
  00163	e9 72 01 00 00	 jmp	 $LN1@get_select
$LN6@get_select:

; 1387 : 
; 1388 : 			target_range = get_3d_range (source_position, target_position);

  00168	8b 45 dc	 mov	 eax, DWORD PTR _target_position$[ebp]
  0016b	50		 push	 eax
  0016c	8b 4d e0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0016f	51		 push	 ecx
  00170	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  00175	d9 5d fc	 fstp	 DWORD PTR _target_range$[ebp]

; 1389 : 			if (target_range <= ground_radar.scan_range)

  00178	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  00180	0f 2f 45 fc	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  00184	0f 82 4e 01 00
	00		 jb	 $LN11@get_select

; 1390 : 			{
; 1391 : 				//
; 1392 : 				// MANDATORY: ahead of aircraft
; 1393 : 				//
; 1394 : 
; 1395 : 				source_heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  0018a	83 7d e4 00	 cmp	 DWORD PTR _source$[ebp], 0
  0018e	74 0a		 je	 SHORT $LN21@get_select
  00190	8b 45 e4	 mov	 eax, DWORD PTR _source$[ebp]
  00193	8b 08		 mov	 ecx, DWORD PTR [eax]
  00195	89 4d 98	 mov	 DWORD PTR tv161[ebp], ecx
  00198	eb 21		 jmp	 SHORT $LN22@get_select
$LN21@get_select:
  0019a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  001a0	83 c2 3a	 add	 edx, 58			; 0000003aH
  001a3	52		 push	 edx
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b4	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv161[ebp], 0
$LN22@get_select:
  001bb	b9 01 00 00 00	 mov	 ecx, 1
  001c0	85 c9		 test	 ecx, ecx
  001c2	74 09		 je	 SHORT $LN23@get_select
  001c4	c7 45 94 34 00
	00 00		 mov	 DWORD PTR tv169[ebp], 52 ; 00000034H
  001cb	eb 21		 jmp	 SHORT $LN24@get_select
$LN23@get_select:
  001cd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  001d3	83 c2 3a	 add	 edx, 58			; 0000003aH
  001d6	52		 push	 edx
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  001e1	50		 push	 eax
  001e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e7	c7 45 94 00 00
	00 00		 mov	 DWORD PTR tv169[ebp], 0
$LN24@get_select:
  001ee	6a 34		 push	 52			; 00000034H
  001f0	8b 4d e4	 mov	 ecx, DWORD PTR _source$[ebp]
  001f3	51		 push	 ecx
  001f4	69 55 98 bc 02
	00 00		 imul	 edx, DWORD PTR tv161[ebp], 700
  001fb	8b 45 94	 mov	 eax, DWORD PTR tv169[ebp]
  001fe	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00205	ff d1		 call	 ecx
  00207	d9 5d f8	 fstp	 DWORD PTR _source_heading$[ebp]

; 1396 : 
; 1397 : 				dx = target_position->x - source_position->x;

  0020a	8b 45 dc	 mov	 eax, DWORD PTR _target_position$[ebp]
  0020d	8b 4d e0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00210	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00214	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00218	f3 0f 11 45 f4	 movss	 DWORD PTR _dx$[ebp], xmm0

; 1398 : 				dz = target_position->z - source_position->z;

  0021d	8b 45 dc	 mov	 eax, DWORD PTR _target_position$[ebp]
  00220	8b 4d e0	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00223	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00228	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0022d	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 1399 : 
; 1400 : 				target_bearing = atan2 (dx, dz);

  00232	51		 push	 ecx
  00233	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00238	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023d	51		 push	 ecx
  0023e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00243	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00248	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0024d	d9 5d ec	 fstp	 DWORD PTR _target_bearing$[ebp]

; 1401 : 
; 1402 : 				theta = target_bearing - source_heading;

  00250	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _target_bearing$[ebp]
  00255	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _source_heading$[ebp]
  0025a	f3 0f 11 45 e8	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1403 : 
; 1404 : 				if (theta > rad (180.0))

  0025f	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00264	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  0026c	76 18		 jbe	 SHORT $LN8@get_select

; 1405 : 				{
; 1406 : 					theta -= rad (360.0);

  0026e	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00273	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0027b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027f	f3 0f 11 45 e8	 movss	 DWORD PTR _theta$[ebp], xmm0
  00284	eb 29		 jmp	 SHORT $LN10@get_select
$LN8@get_select:

; 1407 : 				}
; 1408 : 				else if (theta < rad (-180.0))

  00286	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0028b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00293	66 0f 2f c8	 comisd	 xmm1, xmm0
  00297	76 16		 jbe	 SHORT $LN10@get_select

; 1409 : 				{
; 1410 : 					theta += rad (360.0);

  00299	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0029e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  002a6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002aa	f3 0f 11 45 e8	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN10@get_select:

; 1411 : 				}
; 1412 : 
; 1413 : 				if ((theta >= rad (-45.0)) && (theta <= rad (45.0)))

  002af	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  002b4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfe921fb51000000
  002bc	72 1a		 jb	 SHORT $LN11@get_select
  002be	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  002c3	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe921fb51000000
  002cb	66 0f 2f c8	 comisd	 xmm1, xmm0
  002cf	72 07		 jb	 SHORT $LN11@get_select

; 1414 : 				{
; 1415 : 					return (TRUE);

  002d1	b8 01 00 00 00	 mov	 eax, 1
  002d6	eb 02		 jmp	 SHORT $LN1@get_select
$LN11@get_select:

; 1416 : 				}
; 1417 : 			}
; 1418 : 		}
; 1419 : 	}
; 1420 : 
; 1421 : 	return (FALSE);

  002d8	33 c0		 xor	 eax, eax
$LN1@get_select:

; 1422 : }

  002da	5f		 pop	 edi
  002db	5e		 pop	 esi
  002dc	5b		 pop	 ebx
  002dd	8b e5		 mov	 esp, ebp
  002df	5d		 pop	 ebp
  002e0	c2 04 00	 ret	 4
?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ENDP ; get_selectable_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_best_ground_radar_target@@YGPAUENTITY@@XZ
_TEXT	SEGMENT
tv330 = -156						; size = 4
tv365 = -152						; size = 4
tv346 = -152						; size = 4
tv324 = -152						; size = 4
tv304 = -152						; size = 4
tv230 = -152						; size = 4
tv203 = -152						; size = 4
tv183 = -152						; size = 4
tv156 = -152						; size = 4
tv130 = -152						; size = 4
tv78 = -152						; size = 4
tv358 = -148						; size = 4
tv339 = -148						; size = 4
tv317 = -148						; size = 4
tv297 = -148						; size = 4
tv222 = -148						; size = 4
tv195 = -148						; size = 4
tv175 = -148						; size = 4
tv148 = -148						; size = 4
tv90 = -148						; size = 4
tv70 = -148						; size = 4
$T1 = -144						; size = 4
_weapon_sub_type$ = -76					; size = 4
_target_position$ = -72					; size = 4
_source_position$ = -68					; size = 4
_best_target$ = -64					; size = 4
_target$ = -60						; size = 4
_source$ = -56						; size = 4
_theta$ = -52						; size = 4
_target_bearing$ = -48					; size = 4
_dz$ = -44						; size = 4
_dx$ = -40						; size = 4
_source_heading$ = -36					; size = 4
_target_range$ = -32					; size = 4
_weapon_max_range$ = -28				; size = 4
_weapon_min_range$ = -24				; size = 4
_scan_arc_limit$ = -20					; size = 4
_one_over_scan_range$ = -16				; size = 4
_delta_score$ = -12					; size = 4
_best_score$ = -8					; size = 4
_score$ = -4						; size = 4
?get_best_ground_radar_target@@YGPAUENTITY@@XZ PROC	; get_best_ground_radar_target, COMDAT

; 980  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 9c 00 00
	00		 sub	 esp, 156		; 0000009cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 981  : 	float
; 982  : 		score,
; 983  : 		best_score,
; 984  : 		delta_score,
; 985  : 		one_over_scan_range,
; 986  : 		scan_arc_limit,
; 987  : 		weapon_min_range,
; 988  : 		weapon_max_range,
; 989  : 		target_range,
; 990  : 		source_heading,
; 991  : 		dx,
; 992  : 		dz,
; 993  : 		target_bearing,
; 994  : 		theta;
; 995  : 
; 996  : 	entity
; 997  : 		*source,
; 998  : 		*target,
; 999  : 		*best_target;
; 1000 : 
; 1001 : 	vec3d
; 1002 : 		*source_position,
; 1003 : 		*target_position;
; 1004 : 
; 1005 : 	entity_sub_types
; 1006 : 		weapon_sub_type;
; 1007 : 
; 1008 : 	//
; 1009 : 	// clear best score and target
; 1010 : 	//
; 1011 : 
; 1012 : 	best_score = 0.0;

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 f8	 movss	 DWORD PTR _best_score$[ebp], xmm0

; 1013 : 
; 1014 : 	best_target = NULL;

  00014	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _best_target$[ebp], 0

; 1015 : 
; 1016 : 	//
; 1017 : 	// source
; 1018 : 	//
; 1019 : 
; 1020 : 	source = get_gunship_entity ();

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00020	89 45 c8	 mov	 DWORD PTR _source$[ebp], eax

; 1021 : 
; 1022 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00023	83 7d c8 00	 cmp	 DWORD PTR _source$[ebp], 0
  00027	74 0d		 je	 SHORT $LN38@get_best_g
  00029	8b 45 c8	 mov	 eax, DWORD PTR _source$[ebp]
  0002c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002e	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00034	eb 24		 jmp	 SHORT $LN39@get_best_g
$LN38@get_best_g:
  00036	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  0003c	83 c2 2a	 add	 edx, 42			; 0000002aH
  0003f	52		 push	 edx
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00045	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00050	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN39@get_best_g:
  0005a	b9 01 00 00 00	 mov	 ecx, 1
  0005f	85 c9		 test	 ecx, ecx
  00061	74 0c		 je	 SHORT $LN40@get_best_g
  00063	c7 85 68 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  0006d	eb 24		 jmp	 SHORT $LN41@get_best_g
$LN40@get_best_g:
  0006f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00075	83 c2 2a	 add	 edx, 42			; 0000002aH
  00078	52		 push	 edx
  00079	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN41@get_best_g:
  00093	6a 08		 push	 8
  00095	8b 4d c8	 mov	 ecx, DWORD PTR _source$[ebp]
  00098	51		 push	 ecx
  00099	6b 95 6c ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  000a0	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  000a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  000ad	ff d1		 call	 ecx
  000af	89 45 bc	 mov	 DWORD PTR _source_position$[ebp], eax

; 1023 : 
; 1024 : 	source_heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  000b2	83 7d c8 00	 cmp	 DWORD PTR _source$[ebp], 0
  000b6	74 0d		 je	 SHORT $LN42@get_best_g
  000b8	8b 45 c8	 mov	 eax, DWORD PTR _source$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv90[ebp], ecx
  000c3	eb 24		 jmp	 SHORT $LN43@get_best_g
$LN42@get_best_g:
  000c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  000cb	83 c2 2c	 add	 edx, 44			; 0000002cH
  000ce	52		 push	 edx
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000df	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
$LN43@get_best_g:
  000e9	b9 01 00 00 00	 mov	 ecx, 1
  000ee	85 c9		 test	 ecx, ecx
  000f0	74 0c		 je	 SHORT $LN44@get_best_g
  000f2	c7 85 68 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv130[ebp], 52 ; 00000034H
  000fc	eb 24		 jmp	 SHORT $LN45@get_best_g
$LN44@get_best_g:
  000fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00104	83 c2 2c	 add	 edx, 44			; 0000002cH
  00107	52		 push	 edx
  00108	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00118	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
$LN45@get_best_g:
  00122	6a 34		 push	 52			; 00000034H
  00124	8b 4d c8	 mov	 ecx, DWORD PTR _source$[ebp]
  00127	51		 push	 ecx
  00128	69 95 6c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv90[ebp], 700
  00132	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  00138	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0013f	ff d1		 call	 ecx
  00141	d9 5d dc	 fstp	 DWORD PTR _source_heading$[ebp]

; 1025 : 
; 1026 : 	//
; 1027 : 	// scan limits
; 1028 : 	//
; 1029 : 
; 1030 : 	one_over_scan_range = 1.0 / ground_radar.scan_range;

  00144	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  0014c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00154	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00158	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0015c	f3 0f 11 45 f0	 movss	 DWORD PTR _one_over_scan_range$[ebp], xmm0

; 1031 : 
; 1032 : 	scan_arc_limit = ground_radar.scan_arc_size * 0.5;

  00161	f3 0f 5a 05 08
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+8
  00169	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00171	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00175	f3 0f 11 45 ec	 movss	 DWORD PTR _scan_arc_limit$[ebp], xmm0

; 1033 : 
; 1034 : 	//
; 1035 : 	// weapon min and max ranges
; 1036 : 	//
; 1037 : 
; 1038 : 	weapon_sub_type = get_local_entity_int_value (source, INT_TYPE_SELECTED_WEAPON);

  0017a	83 7d c8 00	 cmp	 DWORD PTR _source$[ebp], 0
  0017e	74 0d		 je	 SHORT $LN46@get_best_g
  00180	8b 45 c8	 mov	 eax, DWORD PTR _source$[ebp]
  00183	8b 08		 mov	 ecx, DWORD PTR [eax]
  00185	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv148[ebp], ecx
  0018b	eb 24		 jmp	 SHORT $LN47@get_best_g
$LN46@get_best_g:
  0018d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00193	83 c2 3a	 add	 edx, 58			; 0000003aH
  00196	52		 push	 edx
  00197	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a7	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv148[ebp], 0
$LN47@get_best_g:
  001b1	b9 01 00 00 00	 mov	 ecx, 1
  001b6	85 c9		 test	 ecx, ecx
  001b8	74 0c		 je	 SHORT $LN48@get_best_g
  001ba	c7 85 68 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv156[ebp], 184 ; 000000b8H
  001c4	eb 24		 jmp	 SHORT $LN49@get_best_g
$LN48@get_best_g:
  001c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  001cc	83 c2 3a	 add	 edx, 58			; 0000003aH
  001cf	52		 push	 edx
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e0	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN49@get_best_g:
  001ea	68 b8 00 00 00	 push	 184			; 000000b8H
  001ef	8b 4d c8	 mov	 ecx, DWORD PTR _source$[ebp]
  001f2	51		 push	 ecx
  001f3	69 95 6c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv148[ebp], 1116
  001fd	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv156[ebp]
  00203	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0020a	ff d1		 call	 ecx
  0020c	89 45 b4	 mov	 DWORD PTR _weapon_sub_type$[ebp], eax

; 1039 : 
; 1040 : 	if (weapon_sub_type != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON)

  0020f	83 7d b4 00	 cmp	 DWORD PTR _weapon_sub_type$[ebp], 0
  00213	74 2a		 je	 SHORT $LN7@get_best_g

; 1041 : 	{
; 1042 : 		weapon_min_range = weapon_database[weapon_sub_type].min_range;

  00215	69 45 b4 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  0021c	f3 0f 10 80 8c
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+140]
  00224	f3 0f 11 45 e8	 movss	 DWORD PTR _weapon_min_range$[ebp], xmm0

; 1043 : 
; 1044 : 		weapon_max_range = weapon_database[weapon_sub_type].max_range;

  00229	69 45 b4 e0 00
	00 00		 imul	 eax, DWORD PTR _weapon_sub_type$[ebp], 224
  00230	f3 0f 10 80 90
	00 00 00	 movss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+144]
  00238	f3 0f 11 45 e4	 movss	 DWORD PTR _weapon_max_range$[ebp], xmm0

; 1045 : 	}
; 1046 : 	else

  0023d	eb 1a		 jmp	 SHORT $LN8@get_best_g
$LN7@get_best_g:

; 1047 : 	{
; 1048 : 		weapon_min_range = FLT_MAX;

  0023f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@7f7fffff
  00247	f3 0f 11 45 e8	 movss	 DWORD PTR _weapon_min_range$[ebp], xmm0

; 1049 : 
; 1050 : 		weapon_max_range = FLT_MIN;

  0024c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@00800000
  00254	f3 0f 11 45 e4	 movss	 DWORD PTR _weapon_max_range$[ebp], xmm0
$LN8@get_best_g:

; 1051 : 	}
; 1052 : 
; 1053 : 	//
; 1054 : 	// evaluate each target
; 1055 : 	//
; 1056 : 
; 1057 : 	for (target = get_local_entity_first_child (source, LIST_TYPE_GUNSHIP_TARGET);

  00259	83 7d c8 00	 cmp	 DWORD PTR _source$[ebp], 0
  0025d	74 0d		 je	 SHORT $LN50@get_best_g
  0025f	8b 45 c8	 mov	 eax, DWORD PTR _source$[ebp]
  00262	8b 08		 mov	 ecx, DWORD PTR [eax]
  00264	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv175[ebp], ecx
  0026a	eb 24		 jmp	 SHORT $LN51@get_best_g
$LN50@get_best_g:
  0026c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00272	83 c2 4d	 add	 edx, 77			; 0000004dH
  00275	52		 push	 edx
  00276	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0027b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00280	50		 push	 eax
  00281	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00286	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv175[ebp], 0
$LN51@get_best_g:
  00290	b9 01 00 00 00	 mov	 ecx, 1
  00295	85 c9		 test	 ecx, ecx
  00297	74 0c		 je	 SHORT $LN52@get_best_g
  00299	c7 85 68 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv183[ebp], 18 ; 00000012H
  002a3	eb 24		 jmp	 SHORT $LN53@get_best_g
$LN52@get_best_g:
  002a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  002ab	83 c2 4d	 add	 edx, 77			; 0000004dH
  002ae	52		 push	 edx
  002af	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002b9	50		 push	 eax
  002ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bf	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv183[ebp], 0
$LN53@get_best_g:
  002c9	6a 12		 push	 18			; 00000012H
  002cb	8b 4d c8	 mov	 ecx, DWORD PTR _source$[ebp]
  002ce	51		 push	 ecx
  002cf	69 95 6c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv175[ebp], 180
  002d9	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv183[ebp]
  002df	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002e6	ff d1		 call	 ecx
  002e8	89 45 c4	 mov	 DWORD PTR _target$[ebp], eax
  002eb	e9 92 00 00 00	 jmp	 $LN4@get_best_g
$LN2@get_best_g:

; 1059 : 		 target = get_local_entity_child_succ (target, LIST_TYPE_GUNSHIP_TARGET))

  002f0	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  002f4	74 0d		 je	 SHORT $LN54@get_best_g
  002f6	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  002f9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fb	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  00301	eb 24		 jmp	 SHORT $LN55@get_best_g
$LN54@get_best_g:
  00303	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00309	83 c2 4f	 add	 edx, 79			; 0000004fH
  0030c	52		 push	 edx
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00312	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0031d	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN55@get_best_g:
  00327	b9 01 00 00 00	 mov	 ecx, 1
  0032c	85 c9		 test	 ecx, ecx
  0032e	74 0c		 je	 SHORT $LN56@get_best_g
  00330	c7 85 68 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv203[ebp], 18 ; 00000012H
  0033a	eb 24		 jmp	 SHORT $LN57@get_best_g
$LN56@get_best_g:
  0033c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00342	83 c2 4f	 add	 edx, 79			; 0000004fH
  00345	52		 push	 edx
  00346	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00350	50		 push	 eax
  00351	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00356	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv203[ebp], 0
$LN57@get_best_g:
  00360	6a 12		 push	 18			; 00000012H
  00362	8b 4d c4	 mov	 ecx, DWORD PTR _target$[ebp]
  00365	51		 push	 ecx
  00366	69 95 6c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv195[ebp], 180
  00370	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv203[ebp]
  00376	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0037d	ff d1		 call	 ecx
  0037f	89 45 c4	 mov	 DWORD PTR _target$[ebp], eax
$LN4@get_best_g:

; 1058 : 		 target;

  00382	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00386	0f 84 51 06 00
	00		 je	 $LN3@get_best_g

; 1060 : 	{
; 1061 : 		////////////////////////////////////////
; 1062 : 		//
; 1063 : 		// keep MANDATORY checks the same as get_selectable_ground_radar_target ()
; 1064 : 		//
; 1065 : 		////////////////////////////////////////
; 1066 : 
; 1067 : 		//
; 1068 : 		// MANDATORY: valid ground radar target
; 1069 : 		//
; 1070 : 
; 1071 : 		if (get_gunship_target_valid_for_ground_radar (target))

  0038c	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  0038f	50		 push	 eax
  00390	e8 00 00 00 00	 call	 ?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z ; get_gunship_target_valid_for_ground_radar
  00395	85 c0		 test	 eax, eax
  00397	0f 84 3b 06 00
	00		 je	 $LN36@get_best_g

; 1072 : 		{
; 1073 : 			//
; 1074 : 			// MANDATORY: target matches declutter criteria
; 1075 : 			//
; 1076 : 
; 1077 : 			if (get_target_matches_ground_radar_declutter_criteria (target))

  0039d	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  003a0	50		 push	 eax
  003a1	e8 00 00 00 00	 call	 ?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z ; get_target_matches_ground_radar_declutter_criteria
  003a6	85 c0		 test	 eax, eax
  003a8	0f 84 2a 06 00
	00		 je	 $LN36@get_best_g

; 1078 : 			{
; 1079 : 				//
; 1080 : 				// MANDATORY: target within scan range
; 1081 : 				//
; 1082 : 
; 1083 : 				target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  003ae	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  003b2	74 0d		 je	 SHORT $LN58@get_best_g
  003b4	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  003b7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b9	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv222[ebp], ecx
  003bf	eb 24		 jmp	 SHORT $LN59@get_best_g
$LN58@get_best_g:
  003c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  003c7	83 c2 67	 add	 edx, 103		; 00000067H
  003ca	52		 push	 edx
  003cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003db	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv222[ebp], 0
$LN59@get_best_g:
  003e5	b9 01 00 00 00	 mov	 ecx, 1
  003ea	85 c9		 test	 ecx, ecx
  003ec	74 0c		 je	 SHORT $LN60@get_best_g
  003ee	c7 85 68 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv230[ebp], 8
  003f8	eb 24		 jmp	 SHORT $LN61@get_best_g
$LN60@get_best_g:
  003fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_best_ground_radar_target@@YGPAUENTITY@@XZ@4JA
  00400	83 c2 67	 add	 edx, 103		; 00000067H
  00403	52		 push	 edx
  00404	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00409	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0040e	50		 push	 eax
  0040f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00414	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv230[ebp], 0
$LN61@get_best_g:
  0041e	6a 08		 push	 8
  00420	8b 4d c4	 mov	 ecx, DWORD PTR _target$[ebp]
  00423	51		 push	 ecx
  00424	6b 95 6c ff ff
	ff 60		 imul	 edx, DWORD PTR tv222[ebp], 96
  0042b	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv230[ebp]
  00431	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00438	ff d1		 call	 ecx
  0043a	89 45 b8	 mov	 DWORD PTR _target_position$[ebp], eax

; 1084 : 
; 1085 : 				// arneh, 20061106 - filter away targets outside pfz for apache
; 1086 : 				if (get_global_gunship_type() == GUNSHIP_TYPE_APACHE)

  0043d	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12, 0
  00444	75 12		 jne	 SHORT $LN12@get_best_g

; 1087 : 					if (!is_valid_pfz_target(target_position))

  00446	8b 45 b8	 mov	 eax, DWORD PTR _target_position$[ebp]
  00449	50		 push	 eax
  0044a	e8 00 00 00 00	 call	 ?is_valid_pfz_target@@YGHPAUVEC3D@@@Z ; is_valid_pfz_target
  0044f	85 c0		 test	 eax, eax
  00451	75 05		 jne	 SHORT $LN12@get_best_g

; 1088 : 						continue;

  00453	e9 98 fe ff ff	 jmp	 $LN2@get_best_g
$LN12@get_best_g:

; 1089 : 
; 1090 : 				target_range = get_3d_range (source_position, target_position);

  00458	8b 45 b8	 mov	 eax, DWORD PTR _target_position$[ebp]
  0045b	50		 push	 eax
  0045c	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0045f	51		 push	 ecx
  00460	e8 00 00 00 00	 call	 ?get_3d_range@@YGMPBUVEC3D@@0@Z ; get_3d_range
  00465	d9 5d e0	 fstp	 DWORD PTR _target_range$[ebp]

; 1091 : 				if (target_range <= ground_radar.scan_range)

  00468	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  00470	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  00474	0f 82 5e 05 00
	00		 jb	 $LN36@get_best_g

; 1092 : 				{
; 1093 : 					//
; 1094 : 					// MANDATORY: ahead of aircraft
; 1095 : 					//
; 1096 : 
; 1097 : 					dx = target_position->x - source_position->x;

  0047a	8b 45 b8	 mov	 eax, DWORD PTR _target_position$[ebp]
  0047d	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00480	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00484	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00488	f3 0f 11 45 d8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 1098 : 					dz = target_position->z - source_position->z;

  0048d	8b 45 b8	 mov	 eax, DWORD PTR _target_position$[ebp]
  00490	8b 4d bc	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00493	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00498	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0049d	f3 0f 11 45 d4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 1099 : 
; 1100 : 					target_bearing = atan2 (dx, dz);

  004a2	51		 push	 ecx
  004a3	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  004a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ad	51		 push	 ecx
  004ae	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  004b3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b8	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  004bd	d9 5d d0	 fstp	 DWORD PTR _target_bearing$[ebp]

; 1101 : 
; 1102 : 					theta = target_bearing - source_heading;

  004c0	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _target_bearing$[ebp]
  004c5	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _source_heading$[ebp]
  004ca	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1103 : 
; 1104 : 					if (theta > rad (180.0))

  004cf	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  004d4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  004dc	76 18		 jbe	 SHORT $LN14@get_best_g

; 1105 : 					{
; 1106 : 						theta -= rad (360.0);

  004de	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  004e3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  004eb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004ef	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0
  004f4	eb 29		 jmp	 SHORT $LN16@get_best_g
$LN14@get_best_g:

; 1107 : 					}
; 1108 : 					else if (theta < rad (-180.0))

  004f6	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  004fb	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00503	66 0f 2f c8	 comisd	 xmm1, xmm0
  00507	76 16		 jbe	 SHORT $LN16@get_best_g

; 1109 : 					{
; 1110 : 						theta += rad (360.0);

  00509	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0050e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00516	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0051a	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN16@get_best_g:

; 1111 : 					}
; 1112 : 
; 1113 : 					if ((theta >= rad (-45.0)) && (theta <= rad (45.0)))

  0051f	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00524	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@bfe921fb51000000
  0052c	0f 82 a6 04 00
	00		 jb	 $LN36@get_best_g
  00532	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00537	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fe921fb51000000
  0053f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00543	0f 82 8f 04 00
	00		 jb	 $LN36@get_best_g

; 1114 : 					{
; 1115 : 						////////////////////////////////////////
; 1116 : 						//
; 1117 : 						// evaluate score for target
; 1118 : 						//
; 1119 : 						////////////////////////////////////////
; 1120 : 
; 1121 : 						score = 0.0;

  00549	0f 57 c0	 xorps	 xmm0, xmm0
  0054c	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1122 : 
; 1123 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1124 : 
; 1125 : 						debug_log ("GROUND RADAR: evaluating %s", get_local_entity_string (target, STRING_TYPE_FULL_NAME));
; 1126 : 
; 1127 : 						#endif
; 1128 : 
; 1129 : 						//
; 1130 : 						// SCORE: within radar scan arc limit
; 1131 : 						//
; 1132 : 
; 1133 : 						theta = target_bearing - (source_heading + ground_radar.scan_datum);

  00551	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _source_heading$[ebp]
  00556	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+4
  0055e	f3 0f 10 4d d0	 movss	 xmm1, DWORD PTR _target_bearing$[ebp]
  00563	f3 0f 5c c8	 subss	 xmm1, xmm0
  00567	f3 0f 11 4d cc	 movss	 DWORD PTR _theta$[ebp], xmm1

; 1134 : 
; 1135 : 						if (theta > rad (180.0))

  0056c	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00571	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00579	76 18		 jbe	 SHORT $LN18@get_best_g

; 1136 : 						{
; 1137 : 							theta -= rad (360.0);

  0057b	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00580	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00588	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0058c	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0
  00591	eb 29		 jmp	 SHORT $LN20@get_best_g
$LN18@get_best_g:

; 1138 : 						}
; 1139 : 						else if (theta < rad (-180.0))

  00593	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  00598	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  005a0	66 0f 2f c8	 comisd	 xmm1, xmm0
  005a4	76 16		 jbe	 SHORT $LN20@get_best_g

; 1140 : 						{
; 1141 : 							theta += rad (360.0);

  005a6	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  005ab	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  005b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005b7	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0
$LN20@get_best_g:

; 1142 : 						}
; 1143 : 
; 1144 : 						theta = fabs (theta);

  005bc	51		 push	 ecx
  005bd	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _theta$[ebp]
  005c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c7	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  005cc	d9 5d cc	 fstp	 DWORD PTR _theta$[ebp]

; 1145 : 
; 1146 : 						if (theta <= scan_arc_limit)

  005cf	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _scan_arc_limit$[ebp]
  005d4	0f 2f 45 cc	 comiss	 xmm0, DWORD PTR _theta$[ebp]
  005d8	72 0f		 jb	 SHORT $LN21@get_best_g

; 1147 : 						{
; 1148 : 							delta_score = 1.0;

  005da	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  005e2	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1149 : 						}
; 1150 : 						else

  005e7	eb 08		 jmp	 SHORT $LN22@get_best_g
$LN21@get_best_g:

; 1151 : 						{
; 1152 : 							delta_score = 0.0;

  005e9	0f 57 c0	 xorps	 xmm0, xmm0
  005ec	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN22@get_best_g:

; 1153 : 						}
; 1154 : 
; 1155 : 						score += delta_score;

  005f1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  005f6	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  005fb	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1156 : 
; 1157 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1158 : 
; 1159 : 						debug_log ("-->delta = %.2f, score = %.2f (within radar scan arc limit, theta = %.2f, limit = %.2f)", delta_score, score, deg (theta), deg (scan_arc_limit));
; 1160 : 
; 1161 : 						#endif
; 1162 : 
; 1163 : 						//
; 1164 : 						// SCORE: deviation from radar scan datum
; 1165 : 						//
; 1166 : 
; 1167 : 						theta = min (theta, rad (45.0f));

  00600	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f490fdb
  00608	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00610	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00616	50		 push	 eax
  00617	8d 4d cc	 lea	 ecx, DWORD PTR _theta$[ebp]
  0061a	51		 push	 ecx
  0061b	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00620	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00624	f3 0f 11 45 cc	 movss	 DWORD PTR _theta$[ebp], xmm0

; 1168 : 
; 1169 : 						delta_score = 1.0 - (theta * (1.0 / rad (45.0)));

  00629	f3 0f 5a 45 cc	 cvtss2sd xmm0, DWORD PTR _theta$[ebp]
  0062e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff45f30706f8fe6
  00636	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0063e	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00642	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00646	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1170 : 
; 1171 : 						score += delta_score;

  0064b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00650	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00655	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1172 : 
; 1173 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1174 : 
; 1175 : 						debug_log ("-->delta = %.2f, score = %.2f (deviation from radar scan datum)", delta_score, score);
; 1176 : 
; 1177 : 						#endif
; 1178 : 
; 1179 : 						//
; 1180 : 						// SCORE: line of sight clear
; 1181 : 						//
; 1182 : 
; 1183 : 						if (get_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR))

  0065a	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0065e	74 0d		 je	 SHORT $LN62@get_best_g
  00660	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  00663	8b 08		 mov	 ecx, DWORD PTR [eax]
  00665	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv297[ebp], ecx
  0066b	eb 20		 jmp	 SHORT $LN63@get_best_g
$LN62@get_best_g:
  0066d	68 9f 04 00 00	 push	 1183			; 0000049fH
  00672	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00677	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0067d	52		 push	 edx
  0067e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00683	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv297[ebp], 0
$LN63@get_best_g:
  0068d	b8 01 00 00 00	 mov	 eax, 1
  00692	85 c0		 test	 eax, eax
  00694	74 0c		 je	 SHORT $LN64@get_best_g
  00696	c7 85 68 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv304[ebp], 80 ; 00000050H
  006a0	eb 20		 jmp	 SHORT $LN65@get_best_g
$LN64@get_best_g:
  006a2	68 9f 04 00 00	 push	 1183			; 0000049fH
  006a7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006b2	51		 push	 ecx
  006b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b8	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN65@get_best_g:
  006c2	6a 50		 push	 80			; 00000050H
  006c4	8b 55 c4	 mov	 edx, DWORD PTR _target$[ebp]
  006c7	52		 push	 edx
  006c8	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv297[ebp], 1116
  006d2	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv304[ebp]
  006d8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006df	ff d2		 call	 edx
  006e1	85 c0		 test	 eax, eax
  006e3	74 0f		 je	 SHORT $LN23@get_best_g

; 1184 : 						{
; 1185 : 							delta_score = 1.0;

  006e5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  006ed	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1186 : 						}
; 1187 : 						else

  006f2	eb 08		 jmp	 SHORT $LN24@get_best_g
$LN23@get_best_g:

; 1188 : 						{
; 1189 : 							delta_score = 0.0;

  006f4	0f 57 c0	 xorps	 xmm0, xmm0
  006f7	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN24@get_best_g:

; 1190 : 						}
; 1191 : 
; 1192 : 						score += delta_score;

  006fc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00701	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00706	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1193 : 
; 1194 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1195 : 
; 1196 : 						debug_log ("-->delta = %.2f, score = %.2f (line of sight clear)", delta_score, score);
; 1197 : 
; 1198 : 						#endif
; 1199 : 
; 1200 : 						//
; 1201 : 						// SCORE: target priority
; 1202 : 						//
; 1203 : 
; 1204 : 						switch (get_local_entity_int_value (target, INT_TYPE_TARGET_PRIORITY_TYPE))

  0070b	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0070f	74 0d		 je	 SHORT $LN66@get_best_g
  00711	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  00714	8b 08		 mov	 ecx, DWORD PTR [eax]
  00716	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv317[ebp], ecx
  0071c	eb 20		 jmp	 SHORT $LN67@get_best_g
$LN66@get_best_g:
  0071e	68 b4 04 00 00	 push	 1204			; 000004b4H
  00723	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00728	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0072e	52		 push	 edx
  0072f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00734	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv317[ebp], 0
$LN67@get_best_g:
  0073e	b8 01 00 00 00	 mov	 eax, 1
  00743	85 c0		 test	 eax, eax
  00745	74 0c		 je	 SHORT $LN68@get_best_g
  00747	c7 85 68 ff ff
	ff d4 00 00 00	 mov	 DWORD PTR tv324[ebp], 212 ; 000000d4H
  00751	eb 20		 jmp	 SHORT $LN69@get_best_g
$LN68@get_best_g:
  00753	68 b4 04 00 00	 push	 1204			; 000004b4H
  00758	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0075d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00763	51		 push	 ecx
  00764	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00769	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv324[ebp], 0
$LN69@get_best_g:
  00773	68 d4 00 00 00	 push	 212			; 000000d4H
  00778	8b 55 c4	 mov	 edx, DWORD PTR _target$[ebp]
  0077b	52		 push	 edx
  0077c	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv317[ebp], 1116
  00786	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv324[ebp]
  0078c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00793	ff d2		 call	 edx
  00795	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv330[ebp], eax
  0079b	83 bd 64 ff ff
	ff 03		 cmp	 DWORD PTR tv330[ebp], 3
  007a2	77 44		 ja	 SHORT $LN29@get_best_g
  007a4	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv330[ebp]
  007aa	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN78@get_best_g[eax*4]
$LN25@get_best_g:

; 1205 : 						{
; 1206 : 							case TARGET_PRIORITY_UNKNOWN:
; 1207 : 							{
; 1208 : 								delta_score = 0.0;

  007b1	0f 57 c0	 xorps	 xmm0, xmm0
  007b4	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1209 : 
; 1210 : 								break;

  007b9	eb 3a		 jmp	 SHORT $LN5@get_best_g
$LN26@get_best_g:

; 1211 : 							}
; 1212 : 							case TARGET_PRIORITY_LOW:
; 1213 : 							{
; 1214 : 								delta_score = 0.5;

  007bb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  007c3	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1215 : 
; 1216 : 								break;

  007c8	eb 2b		 jmp	 SHORT $LN5@get_best_g
$LN27@get_best_g:

; 1217 : 							}
; 1218 : 							case TARGET_PRIORITY_MEDIUM:
; 1219 : 							{
; 1220 : 								delta_score = 1.0;

  007ca	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007d2	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1221 : 
; 1222 : 								break;

  007d7	eb 1c		 jmp	 SHORT $LN5@get_best_g
$LN28@get_best_g:

; 1223 : 							}
; 1224 : 							case TARGET_PRIORITY_HIGH:
; 1225 : 							{
; 1226 : 								delta_score = 2.0;

  007d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  007e1	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1227 : 
; 1228 : 								break;

  007e6	eb 0d		 jmp	 SHORT $LN5@get_best_g
$LN29@get_best_g:

; 1229 : 							}
; 1230 : 							default:
; 1231 : 							{
; 1232 : 								debug_fatal ("Unknown target priority type");

  007e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@KALIGLF@Unknown?5target?5priority?5type@
  007ed	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  007f2	83 c4 04	 add	 esp, 4
$LN5@get_best_g:

; 1233 : 
; 1234 : 								break;
; 1235 : 							}
; 1236 : 						}
; 1237 : 
; 1238 : 						score += delta_score;

  007f5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  007fa	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  007ff	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1239 : 
; 1240 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1241 : 
; 1242 : 						debug_log ("-->delta = %.2f, score = %.2f (target priority)", delta_score, score);
; 1243 : 
; 1244 : 						#endif
; 1245 : 
; 1246 : 						//
; 1247 : 						// SCORE: targetting player
; 1248 : 						//
; 1249 : 
; 1250 : 						if (get_local_entity_int_value (target, INT_TYPE_IDENTIFY_MOBILE))

  00804	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00808	74 0d		 je	 SHORT $LN70@get_best_g
  0080a	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  0080d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0080f	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv339[ebp], ecx
  00815	eb 20		 jmp	 SHORT $LN71@get_best_g
$LN70@get_best_g:
  00817	68 e2 04 00 00	 push	 1250			; 000004e2H
  0081c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00821	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00827	52		 push	 edx
  00828	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082d	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv339[ebp], 0
$LN71@get_best_g:
  00837	b8 01 00 00 00	 mov	 eax, 1
  0083c	85 c0		 test	 eax, eax
  0083e	74 0c		 je	 SHORT $LN72@get_best_g
  00840	c7 85 68 ff ff
	ff 5d 00 00 00	 mov	 DWORD PTR tv346[ebp], 93 ; 0000005dH
  0084a	eb 20		 jmp	 SHORT $LN73@get_best_g
$LN72@get_best_g:
  0084c	68 e2 04 00 00	 push	 1250			; 000004e2H
  00851	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00856	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0085c	51		 push	 ecx
  0085d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00862	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv346[ebp], 0
$LN73@get_best_g:
  0086c	6a 5d		 push	 93			; 0000005dH
  0086e	8b 55 c4	 mov	 edx, DWORD PTR _target$[ebp]
  00871	52		 push	 edx
  00872	69 85 6c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv339[ebp], 1116
  0087c	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv346[ebp]
  00882	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00889	ff d2		 call	 edx
  0088b	85 c0		 test	 eax, eax
  0088d	0f 84 a5 00 00
	00		 je	 $LN30@get_best_g

; 1251 : 						{
; 1252 : 							if (source == get_local_entity_parent (target, LIST_TYPE_TARGET))

  00893	83 7d c4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00897	74 0d		 je	 SHORT $LN74@get_best_g
  00899	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  0089c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0089e	89 8d 6c ff ff
	ff		 mov	 DWORD PTR tv358[ebp], ecx
  008a4	eb 20		 jmp	 SHORT $LN75@get_best_g
$LN74@get_best_g:
  008a6	68 e4 04 00 00	 push	 1252			; 000004e4H
  008ab	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008b0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008b6	52		 push	 edx
  008b7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008bc	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv358[ebp], 0
$LN75@get_best_g:
  008c6	b8 01 00 00 00	 mov	 eax, 1
  008cb	85 c0		 test	 eax, eax
  008cd	74 0c		 je	 SHORT $LN76@get_best_g
  008cf	c7 85 68 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv365[ebp], 38 ; 00000026H
  008d9	eb 20		 jmp	 SHORT $LN77@get_best_g
$LN76@get_best_g:
  008db	68 e4 04 00 00	 push	 1252			; 000004e4H
  008e0	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  008eb	51		 push	 ecx
  008ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008f1	c7 85 68 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv365[ebp], 0
$LN77@get_best_g:
  008fb	6a 26		 push	 38			; 00000026H
  008fd	8b 55 c4	 mov	 edx, DWORD PTR _target$[ebp]
  00900	52		 push	 edx
  00901	69 85 6c ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv358[ebp], 180
  0090b	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR tv365[ebp]
  00911	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00918	ff d2		 call	 edx
  0091a	39 45 c8	 cmp	 DWORD PTR _source$[ebp], eax
  0091d	75 0f		 jne	 SHORT $LN32@get_best_g

; 1253 : 							{
; 1254 : 								delta_score = 1.0;

  0091f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00927	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1255 : 							}
; 1256 : 							else

  0092c	eb 08		 jmp	 SHORT $LN33@get_best_g
$LN32@get_best_g:

; 1257 : 							{
; 1258 : 								delta_score = 0.0;

  0092e	0f 57 c0	 xorps	 xmm0, xmm0
  00931	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN33@get_best_g:

; 1259 : 							}
; 1260 : 						}
; 1261 : 						else

  00936	eb 08		 jmp	 SHORT $LN31@get_best_g
$LN30@get_best_g:

; 1262 : 						{
; 1263 : 							delta_score = 0.0;

  00938	0f 57 c0	 xorps	 xmm0, xmm0
  0093b	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN31@get_best_g:

; 1264 : 						}
; 1265 : 
; 1266 : 						score += delta_score;

  00940	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00945	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  0094a	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1267 : 
; 1268 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1269 : 
; 1270 : 						debug_log ("-->delta = %.2f, score = %.2f (targetting player)", delta_score, score);
; 1271 : 
; 1272 : 						#endif
; 1273 : 
; 1274 : 						//
; 1275 : 						// SCORE: within selected weapon range
; 1276 : 						//
; 1277 : 
; 1278 : 						if ((target_range >= weapon_min_range) && (target_range <= weapon_max_range))

  0094f	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00954	0f 2f 45 e8	 comiss	 xmm0, DWORD PTR _weapon_min_range$[ebp]
  00958	72 1a		 jb	 SHORT $LN34@get_best_g
  0095a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _weapon_max_range$[ebp]
  0095f	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _target_range$[ebp]
  00963	72 0f		 jb	 SHORT $LN34@get_best_g

; 1279 : 						{
; 1280 : 							delta_score = 1.0;

  00965	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0096d	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1281 : 						}
; 1282 : 						else

  00972	eb 08		 jmp	 SHORT $LN35@get_best_g
$LN34@get_best_g:

; 1283 : 						{
; 1284 : 							delta_score = 0.0;

  00974	0f 57 c0	 xorps	 xmm0, xmm0
  00977	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0
$LN35@get_best_g:

; 1285 : 						}
; 1286 : 
; 1287 : 						score += delta_score;

  0097c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  00981	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  00986	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1288 : 
; 1289 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1290 : 
; 1291 : 						debug_log ("-->delta = %.2f, score = %.2f (within selected weapon range, min = %.2f, max = %.2f)", delta_score, score, weapon_min_range, weapon_max_range);
; 1292 : 
; 1293 : 						#endif
; 1294 : 
; 1295 : 						//
; 1296 : 						// SCORE: range
; 1297 : 						//
; 1298 : 
; 1299 : 						delta_score = 1.0 - (target_range * one_over_scan_range);

  0098b	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _target_range$[ebp]
  00990	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _one_over_scan_range$[ebp]
  00995	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00999	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  009a1	f2 0f 5c c8	 subsd	 xmm1, xmm0
  009a5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  009a9	f3 0f 11 45 f4	 movss	 DWORD PTR _delta_score$[ebp], xmm0

; 1300 : 
; 1301 : 						score += delta_score;

  009ae	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  009b3	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _delta_score$[ebp]
  009b8	f3 0f 11 45 fc	 movss	 DWORD PTR _score$[ebp], xmm0

; 1302 : 
; 1303 : 						#if DEBUG_MODULE_BEST_TARGET_SCORING
; 1304 : 
; 1305 : 						debug_log ("-->delta = %.2f, score = %.2f (range = %.2f, scan range = %.2f)", delta_score, score, target_range, ground_radar.scan_range);
; 1306 : 
; 1307 : 						#endif
; 1308 : 
; 1309 : 						////////////////////////////////////////
; 1310 : 						//
; 1311 : 						// compare score with best score
; 1312 : 						//
; 1313 : 						////////////////////////////////////////
; 1314 : 
; 1315 : 						if (score > best_score)

  009bd	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  009c2	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _best_score$[ebp]
  009c6	76 10		 jbe	 SHORT $LN36@get_best_g

; 1316 : 						{
; 1317 : 							best_score = score;

  009c8	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _score$[ebp]
  009cd	f3 0f 11 45 f8	 movss	 DWORD PTR _best_score$[ebp], xmm0

; 1318 : 
; 1319 : 							best_target = target;

  009d2	8b 45 c4	 mov	 eax, DWORD PTR _target$[ebp]
  009d5	89 45 c0	 mov	 DWORD PTR _best_target$[ebp], eax
$LN36@get_best_g:

; 1320 : 						}
; 1321 : 					}
; 1322 : 				}
; 1323 : 			}
; 1324 : 		}
; 1325 : 
; 1326 : 		
; 1327 : 	}

  009d8	e9 13 f9 ff ff	 jmp	 $LN2@get_best_g
$LN3@get_best_g:

; 1328 : 
; 1329 : 	return (best_target);

  009dd	8b 45 c0	 mov	 eax, DWORD PTR _best_target$[ebp]

; 1330 : }

  009e0	5f		 pop	 edi
  009e1	5e		 pop	 esi
  009e2	5b		 pop	 ebx
  009e3	8b e5		 mov	 esp, ebp
  009e5	5d		 pop	 ebp
  009e6	c3		 ret	 0
  009e7	90		 npad	 1
$LN78@get_best_g:
  009e8	00 00 00 00	 DD	 $LN25@get_best_g
  009ec	00 00 00 00	 DD	 $LN26@get_best_g
  009f0	00 00 00 00	 DD	 $LN27@get_best_g
  009f4	00 00 00 00	 DD	 $LN28@get_best_g
?get_best_ground_radar_target@@YGPAUENTITY@@XZ ENDP	; get_best_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z
_TEXT	SEGMENT
tv91 = -72						; size = 4
tv139 = -68						; size = 4
tv84 = -68						; size = 4
_target$ = 8						; size = 4
_source_position$ = 12					; size = 4
_target_position$ = 16					; size = 4
_dx$ = 20						; size = 4
_dz$ = 24						; size = 4
?get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z PROC ; get_ground_radar_los_clear, COMDAT

; 939  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 940  : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_ground
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_ground:

; 941  : 
; 942  : 	ASSERT (source_position);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _source_position$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_ground
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIPCKJML@source_position@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_ground:

; 943  : 
; 944  : 	ASSERT (target_position);

  00045	83 7d 10 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@get_ground
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z@4JA
  00050	83 c0 05	 add	 eax, 5
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_ground:

; 945  : 
; 946  : 	if (get_local_entity_int_value (target, INT_TYPE_GROUND_RADAR_CLUTTER))

  00063	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00067	74 0a		 je	 SHORT $LN10@get_ground
  00069	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0006c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006e	89 4d bc	 mov	 DWORD PTR tv84[ebp], ecx
  00071	eb 1d		 jmp	 SHORT $LN11@get_ground
$LN10@get_ground:
  00073	68 b2 03 00 00	 push	 946			; 000003b2H
  00078	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00083	52		 push	 edx
  00084	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00089	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv84[ebp], 0
$LN11@get_ground:
  00090	b8 01 00 00 00	 mov	 eax, 1
  00095	85 c0		 test	 eax, eax
  00097	74 09		 je	 SHORT $LN12@get_ground
  00099	c7 45 b8 42 00
	00 00		 mov	 DWORD PTR tv91[ebp], 66	; 00000042H
  000a0	eb 1d		 jmp	 SHORT $LN13@get_ground
$LN12@get_ground:
  000a2	68 b2 03 00 00	 push	 946			; 000003b2H
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000b2	51		 push	 ecx
  000b3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv91[ebp], 0
$LN13@get_ground:
  000bf	6a 42		 push	 66			; 00000042H
  000c1	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  000c4	52		 push	 edx
  000c5	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv84[ebp], 1116
  000cc	8b 4d b8	 mov	 ecx, DWORD PTR tv91[ebp]
  000cf	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000d6	ff d2		 call	 edx
  000d8	85 c0		 test	 eax, eax
  000da	74 07		 je	 SHORT $LN5@get_ground

; 947  : 	{
; 948  : 		return (TRUE);

  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	eb 69		 jmp	 SHORT $LN1@get_ground
$LN5@get_ground:

; 949  : 	}
; 950  : 
; 951  : 	if (get_terrain_los_clear (source_position, target_position))

  000e3	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  000e6	50		 push	 eax
  000e7	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z ; get_terrain_los_clear
  000f0	85 c0		 test	 eax, eax
  000f2	74 56		 je	 SHORT $LN6@get_ground

; 952  : 	{
; 953  : 		////////////////////////////////////////
; 954  : 		//
; 955  : 		// speed up ground radar around large cities - ignore bridge segments
; 956  : 		//
; 957  : 
; 958  : 		if (get_local_entity_type (target) == ENTITY_TYPE_SEGMENT)

  000f4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000f8	74 0a		 je	 SHORT $LN14@get_ground
  000fa	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ff	89 4d bc	 mov	 DWORD PTR tv139[ebp], ecx
  00102	eb 1d		 jmp	 SHORT $LN15@get_ground
$LN14@get_ground:
  00104	68 be 03 00 00	 push	 958			; 000003beH
  00109	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00114	52		 push	 edx
  00115	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN15@get_ground:
  00121	83 7d bc 1a	 cmp	 DWORD PTR tv139[ebp], 26 ; 0000001aH
  00125	75 07		 jne	 SHORT $LN7@get_ground

; 959  : 		{
; 960  : 			return (TRUE);

  00127	b8 01 00 00 00	 mov	 eax, 1
  0012c	eb 1e		 jmp	 SHORT $LN1@get_ground
$LN7@get_ground:

; 961  : 		}
; 962  : 
; 963  : 		//
; 964  : 		////////////////////////////////////////
; 965  : 
; 966  : 		if (get_object_los_clear (target, source_position, target_position))

  0012e	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00131	50		 push	 eax
  00132	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00135	51		 push	 ecx
  00136	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00139	52		 push	 edx
  0013a	e8 00 00 00 00	 call	 ?get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_object_los_clear
  0013f	85 c0		 test	 eax, eax
  00141	74 07		 je	 SHORT $LN6@get_ground

; 967  : 		{
; 968  : 			return (TRUE);

  00143	b8 01 00 00 00	 mov	 eax, 1
  00148	eb 02		 jmp	 SHORT $LN1@get_ground
$LN6@get_ground:

; 969  : 		}
; 970  : 	}
; 971  : 
; 972  : 	return (FALSE);

  0014a	33 c0		 xor	 eax, eax
$LN1@get_ground:

; 973  : }

  0014c	5f		 pop	 edi
  0014d	5e		 pop	 esi
  0014e	5b		 pop	 ebx
  0014f	8b e5		 mov	 esp, ebp
  00151	5d		 pop	 ebp
  00152	c2 14 00	 ret	 20			; 00000014H
?get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z ENDP ; get_ground_radar_los_clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_valid_ground_radar_target@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv334 = -84						; size = 8
tv320 = -84						; size = 8
tv251 = -76						; size = 4
tv232 = -76						; size = 4
tv212 = -76						; size = 4
tv192 = -76						; size = 4
tv173 = -76						; size = 4
tv155 = -76						; size = 4
tv134 = -76						; size = 4
tv81 = -76						; size = 4
tv244 = -72						; size = 4
tv225 = -72						; size = 4
tv205 = -72						; size = 4
tv185 = -72						; size = 4
tv166 = -72						; size = 4
tv147 = -72						; size = 4
tv140 = -72						; size = 4
tv94 = -72						; size = 4
tv74 = -72						; size = 4
_target_type$ = -4					; size = 4
_target$ = 8						; size = 4
?get_valid_ground_radar_target@@YGHPAUENTITY@@@Z PROC	; get_valid_ground_radar_target, COMDAT

; 762  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 763  : 	target_types
; 764  : 		target_type;
; 765  : 
; 766  : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_valid_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_valid_:

; 767  : 
; 768  : 	if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00027	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN17@get_valid_
  0002d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN18@get_valid_
$LN17@get_valid_:
  00037	68 00 03 00 00	 push	 768			; 00000300H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN18@get_valid_:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN19@get_valid_
  0005d	c7 45 b4 07 00
	00 00		 mov	 DWORD PTR tv81[ebp], 7
  00064	eb 1d		 jmp	 SHORT $LN20@get_valid_
$LN19@get_valid_:
  00066	68 00 03 00 00	 push	 768			; 00000300H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN20@get_valid_:
  00083	6a 07		 push	 7
  00085	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00088	52		 push	 edx
  00089	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 f7 03 00
	00		 je	 $LN2@get_valid_

; 769  : 	{
; 770  : 		target_type = (target_types) get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE);

  000a4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000a8	74 0a		 je	 SHORT $LN21@get_valid_
  000aa	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 4d b8	 mov	 DWORD PTR tv94[ebp], ecx
  000b2	eb 21		 jmp	 SHORT $LN22@get_valid_
$LN21@get_valid_:
  000b4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  000ba	83 c2 08	 add	 edx, 8
  000bd	52		 push	 edx
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ce	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN22@get_valid_:
  000d5	b9 01 00 00 00	 mov	 ecx, 1
  000da	85 c9		 test	 ecx, ecx
  000dc	74 09		 je	 SHORT $LN23@get_valid_
  000de	c7 45 b4 d6 00
	00 00		 mov	 DWORD PTR tv134[ebp], 214 ; 000000d6H
  000e5	eb 21		 jmp	 SHORT $LN24@get_valid_
$LN23@get_valid_:
  000e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  000ed	83 c2 08	 add	 edx, 8
  000f0	52		 push	 edx
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00101	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN24@get_valid_:
  00108	68 d6 00 00 00	 push	 214			; 000000d6H
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00110	51		 push	 ecx
  00111	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv94[ebp], 1116
  00118	8b 45 b4	 mov	 eax, DWORD PTR tv134[ebp]
  0011b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00122	ff d1		 call	 ecx
  00124	89 45 fc	 mov	 DWORD PTR _target_type$[ebp], eax

; 771  : 
; 772  : 		switch (target_type)

  00127	8b 45 fc	 mov	 eax, DWORD PTR _target_type$[ebp]
  0012a	89 45 b8	 mov	 DWORD PTR tv140[ebp], eax
  0012d	83 7d b8 00	 cmp	 DWORD PTR tv140[ebp], 0
  00131	74 19		 je	 SHORT $LN6@get_valid_
  00133	83 7d b8 01	 cmp	 DWORD PTR tv140[ebp], 1
  00137	0f 84 96 00 00
	00		 je	 $LN7@get_valid_
  0013d	83 7d b8 02	 cmp	 DWORD PTR tv140[ebp], 2
  00141	0f 84 9b 00 00
	00		 je	 $LN8@get_valid_
  00147	e9 3a 03 00 00	 jmp	 $LN15@get_valid_
$LN6@get_valid_:

; 773  : 		{
; 774  : 			////////////////////////////////////////
; 775  : 			case TARGET_TYPE_INVALID:
; 776  : 			////////////////////////////////////////
; 777  : 			{
; 778  : 				return (get_local_entity_int_value (target, INT_TYPE_GROUND_RADAR_CLUTTER));

  0014c	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00150	74 0a		 je	 SHORT $LN25@get_valid_
  00152	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00155	8b 08		 mov	 ecx, DWORD PTR [eax]
  00157	89 4d b8	 mov	 DWORD PTR tv147[ebp], ecx
  0015a	eb 21		 jmp	 SHORT $LN26@get_valid_
$LN25@get_valid_:
  0015c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00162	83 c2 10	 add	 edx, 16			; 00000010H
  00165	52		 push	 edx
  00166	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00176	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN26@get_valid_:
  0017d	b9 01 00 00 00	 mov	 ecx, 1
  00182	85 c9		 test	 ecx, ecx
  00184	74 09		 je	 SHORT $LN27@get_valid_
  00186	c7 45 b4 42 00
	00 00		 mov	 DWORD PTR tv155[ebp], 66 ; 00000042H
  0018d	eb 21		 jmp	 SHORT $LN28@get_valid_
$LN27@get_valid_:
  0018f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_valid_ground_radar_target@@YGHPAUENTITY@@@Z@4JA
  00195	83 c2 10	 add	 edx, 16			; 00000010H
  00198	52		 push	 edx
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a3	50		 push	 eax
  001a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN28@get_valid_:
  001b0	6a 42		 push	 66			; 00000042H
  001b2	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  001b5	51		 push	 ecx
  001b6	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv147[ebp], 1116
  001bd	8b 45 b4	 mov	 eax, DWORD PTR tv155[ebp]
  001c0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001c7	ff d1		 call	 ecx
  001c9	e9 cf 02 00 00	 jmp	 $LN1@get_valid_

; 779  : 
; 780  : 				break;

  001ce	e9 c8 02 00 00	 jmp	 $LN2@get_valid_
$LN7@get_valid_:

; 781  : 			}
; 782  : 			////////////////////////////////////////
; 783  : 			case TARGET_TYPE_GROUND:
; 784  : 			////////////////////////////////////////
; 785  : 			{
; 786  : 				return (TRUE);

  001d3	b8 01 00 00 00	 mov	 eax, 1
  001d8	e9 c0 02 00 00	 jmp	 $LN1@get_valid_

; 787  : 
; 788  : 				break;

  001dd	e9 b9 02 00 00	 jmp	 $LN2@get_valid_
$LN8@get_valid_:

; 789  : 			}
; 790  : 			////////////////////////////////////////
; 791  : 			case TARGET_TYPE_AIR:
; 792  : 			////////////////////////////////////////
; 793  : 			{
; 794  : 				if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  001e2	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  001e6	74 0a		 je	 SHORT $LN29@get_valid_
  001e8	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  001eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ed	89 4d b8	 mov	 DWORD PTR tv166[ebp], ecx
  001f0	eb 1d		 jmp	 SHORT $LN30@get_valid_
$LN29@get_valid_:
  001f2	68 1a 03 00 00	 push	 794			; 0000031aH
  001f7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001fc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00202	52		 push	 edx
  00203	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00208	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN30@get_valid_:
  0020f	b8 01 00 00 00	 mov	 eax, 1
  00214	85 c0		 test	 eax, eax
  00216	74 09		 je	 SHORT $LN31@get_valid_
  00218	c7 45 b4 04 00
	00 00		 mov	 DWORD PTR tv173[ebp], 4
  0021f	eb 1d		 jmp	 SHORT $LN32@get_valid_
$LN31@get_valid_:
  00221	68 1a 03 00 00	 push	 794			; 0000031aH
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00231	51		 push	 ecx
  00232	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00237	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN32@get_valid_:
  0023e	6a 04		 push	 4
  00240	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00243	52		 push	 edx
  00244	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv166[ebp], 1116
  0024b	8b 4d b4	 mov	 ecx, DWORD PTR tv173[ebp]
  0024e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00255	ff d2		 call	 edx
  00257	85 c0		 test	 eax, eax
  00259	0f 84 24 01 00
	00		 je	 $LN9@get_valid_

; 795  : 				{
; 796  : 					//
; 797  : 					// allow low and slow flying aircraft
; 798  : 					//
; 799  : 
; 800  : 					if (get_local_entity_float_value (target, FLOAT_TYPE_VELOCITY) < knots_to_metres_per_second (50.0))

  0025f	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00263	74 0a		 je	 SHORT $LN33@get_valid_
  00265	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00268	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026a	89 4d b8	 mov	 DWORD PTR tv185[ebp], ecx
  0026d	eb 1d		 jmp	 SHORT $LN34@get_valid_
$LN33@get_valid_:
  0026f	68 20 03 00 00	 push	 800			; 00000320H
  00274	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00279	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0027f	52		 push	 edx
  00280	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00285	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN34@get_valid_:
  0028c	b8 01 00 00 00	 mov	 eax, 1
  00291	85 c0		 test	 eax, eax
  00293	74 09		 je	 SHORT $LN35@get_valid_
  00295	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv192[ebp], 147 ; 00000093H
  0029c	eb 1d		 jmp	 SHORT $LN36@get_valid_
$LN35@get_valid_:
  0029e	68 20 03 00 00	 push	 800			; 00000320H
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002ae	51		 push	 ecx
  002af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b4	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv192[ebp], 0
$LN36@get_valid_:
  002bb	68 93 00 00 00	 push	 147			; 00000093H
  002c0	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  002c3	52		 push	 edx
  002c4	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv185[ebp], 700
  002cb	8b 4d b4	 mov	 ecx, DWORD PTR tv192[ebp]
  002ce	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  002d5	ff d2		 call	 edx
  002d7	dd 5d ac	 fstp	 QWORD PTR tv320[ebp]
  002da	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4039c4bc10000000
  002e2	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv320[ebp]
  002e7	0f 86 91 00 00
	00		 jbe	 $LN12@get_valid_

; 801  : 					{
; 802  : 						if (get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE) < 10.0)

  002ed	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  002f1	74 0a		 je	 SHORT $LN37@get_valid_
  002f3	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  002f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002f8	89 4d b8	 mov	 DWORD PTR tv205[ebp], ecx
  002fb	eb 1d		 jmp	 SHORT $LN38@get_valid_
$LN37@get_valid_:
  002fd	68 22 03 00 00	 push	 802			; 00000322H
  00302	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00307	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0030d	52		 push	 edx
  0030e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00313	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN38@get_valid_:
  0031a	b8 01 00 00 00	 mov	 eax, 1
  0031f	85 c0		 test	 eax, eax
  00321	74 09		 je	 SHORT $LN39@get_valid_
  00323	c7 45 b4 68 00
	00 00		 mov	 DWORD PTR tv212[ebp], 104 ; 00000068H
  0032a	eb 1d		 jmp	 SHORT $LN40@get_valid_
$LN39@get_valid_:
  0032c	68 22 03 00 00	 push	 802			; 00000322H
  00331	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00336	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0033c	51		 push	 ecx
  0033d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00342	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN40@get_valid_:
  00349	6a 68		 push	 104			; 00000068H
  0034b	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  0034e	52		 push	 edx
  0034f	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv205[ebp], 700
  00356	8b 4d b4	 mov	 ecx, DWORD PTR tv212[ebp]
  00359	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00360	ff d2		 call	 edx
  00362	dd 5d ac	 fstp	 QWORD PTR tv334[ebp]
  00365	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  0036d	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv334[ebp]
  00372	76 0a		 jbe	 SHORT $LN12@get_valid_

; 803  : 						{
; 804  : 							return (TRUE);

  00374	b8 01 00 00 00	 mov	 eax, 1
  00379	e9 1f 01 00 00	 jmp	 $LN1@get_valid_
$LN12@get_valid_:

; 805  : 						}
; 806  : 					}
; 807  : 				}
; 808  : 				else

  0037e	e9 fd 00 00 00	 jmp	 $LN14@get_valid_
$LN9@get_valid_:

; 809  : 				{
; 810  : 					if (!get_local_entity_int_value (target, INT_TYPE_INSIDE_HANGAR))

  00383	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00387	74 0a		 je	 SHORT $LN41@get_valid_
  00389	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0038c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038e	89 4d b8	 mov	 DWORD PTR tv225[ebp], ecx
  00391	eb 1d		 jmp	 SHORT $LN42@get_valid_
$LN41@get_valid_:
  00393	68 2a 03 00 00	 push	 810			; 0000032aH
  00398	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a3	52		 push	 edx
  003a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN42@get_valid_:
  003b0	b8 01 00 00 00	 mov	 eax, 1
  003b5	85 c0		 test	 eax, eax
  003b7	74 09		 je	 SHORT $LN43@get_valid_
  003b9	c7 45 b4 6a 00
	00 00		 mov	 DWORD PTR tv232[ebp], 106 ; 0000006aH
  003c0	eb 1d		 jmp	 SHORT $LN44@get_valid_
$LN43@get_valid_:
  003c2	68 2a 03 00 00	 push	 810			; 0000032aH
  003c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003d2	51		 push	 ecx
  003d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv232[ebp], 0
$LN44@get_valid_:
  003df	6a 6a		 push	 106			; 0000006aH
  003e1	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  003e4	52		 push	 edx
  003e5	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv225[ebp], 1116
  003ec	8b 4d b4	 mov	 ecx, DWORD PTR tv232[ebp]
  003ef	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003f6	ff d2		 call	 edx
  003f8	85 c0		 test	 eax, eax
  003fa	0f 85 80 00 00
	00		 jne	 $LN14@get_valid_

; 811  : 					{
; 812  : 						if (!get_local_entity_int_value (target, INT_TYPE_LANDED_ON_CARRIER))

  00400	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00404	74 0a		 je	 SHORT $LN45@get_valid_
  00406	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00409	8b 08		 mov	 ecx, DWORD PTR [eax]
  0040b	89 4d b8	 mov	 DWORD PTR tv244[ebp], ecx
  0040e	eb 1d		 jmp	 SHORT $LN46@get_valid_
$LN45@get_valid_:
  00410	68 2c 03 00 00	 push	 812			; 0000032cH
  00415	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00420	52		 push	 edx
  00421	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00426	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv244[ebp], 0
$LN46@get_valid_:
  0042d	b8 01 00 00 00	 mov	 eax, 1
  00432	85 c0		 test	 eax, eax
  00434	74 09		 je	 SHORT $LN47@get_valid_
  00436	c7 45 b4 75 00
	00 00		 mov	 DWORD PTR tv251[ebp], 117 ; 00000075H
  0043d	eb 1d		 jmp	 SHORT $LN48@get_valid_
$LN47@get_valid_:
  0043f	68 2c 03 00 00	 push	 812			; 0000032cH
  00444	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00449	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0044f	51		 push	 ecx
  00450	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00455	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN48@get_valid_:
  0045c	6a 75		 push	 117			; 00000075H
  0045e	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00461	52		 push	 edx
  00462	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv244[ebp], 1116
  00469	8b 4d b4	 mov	 ecx, DWORD PTR tv251[ebp]
  0046c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00473	ff d2		 call	 edx
  00475	85 c0		 test	 eax, eax
  00477	75 07		 jne	 SHORT $LN14@get_valid_

; 813  : 						{
; 814  : 							return (TRUE);

  00479	b8 01 00 00 00	 mov	 eax, 1
  0047e	eb 1d		 jmp	 SHORT $LN1@get_valid_
$LN14@get_valid_:

; 815  : 						}
; 816  : 					}
; 817  : 				}
; 818  : 
; 819  : 				return (FALSE);

  00480	33 c0		 xor	 eax, eax
  00482	eb 19		 jmp	 SHORT $LN1@get_valid_

; 820  : 
; 821  : 				break;

  00484	eb 15		 jmp	 SHORT $LN2@get_valid_
$LN15@get_valid_:

; 822  : 			}
; 823  : 			////////////////////////////////////////
; 824  : 			default:
; 825  : 			////////////////////////////////////////
; 826  : 			{
; 827  : 				debug_fatal ("Invalid target type = %d", target_type);

  00486	8b 45 fc	 mov	 eax, DWORD PTR _target_type$[ebp]
  00489	50		 push	 eax
  0048a	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@
  0048f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00494	83 c4 08	 add	 esp, 8

; 828  : 
; 829  : 				return (FALSE);

  00497	33 c0		 xor	 eax, eax
  00499	eb 02		 jmp	 SHORT $LN1@get_valid_
$LN2@get_valid_:

; 830  : 
; 831  : 				break;
; 832  : 			}
; 833  : 		}
; 834  : 	}
; 835  : 
; 836  : 	return (FALSE);

  0049b	33 c0		 xor	 eax, eax
$LN1@get_valid_:

; 837  : }

  0049d	5f		 pop	 edi
  0049e	5e		 pop	 esi
  0049f	5b		 pop	 ebx
  004a0	8b e5		 mov	 esp, ebp
  004a2	5d		 pop	 ebp
  004a3	c2 04 00	 ret	 4
?get_valid_ground_radar_target@@YGHPAUENTITY@@@Z ENDP	; get_valid_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z
_TEXT	SEGMENT
_face_normal$ = -68					; size = 12
_intercept_point$ = -56					; size = 12
_position$ = -44					; size = 12
_ratio$ = -32						; size = 4
_flat_range$ = -28					; size = 4
_ddz$ = -24						; size = 4
_ddy$ = -20						; size = 4
_ddx$ = -16						; size = 4
_dz$ = -12						; size = 4
_dy$ = -8						; size = 4
_dx$ = -4						; size = 4
_target$ = 8						; size = 4
_source_position$ = 12					; size = 4
_target_position$ = 16					; size = 4
?get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z PROC	; get_object_los_clear, COMDAT

; 653  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 654  : 	float
; 655  : 		dx,
; 656  : 		dy,
; 657  : 		dz,
; 658  : 		ddx,
; 659  : 		ddy,
; 660  : 		ddz,
; 661  : 		flat_range,
; 662  : 		ratio;
; 663  : 
; 664  : 	vec3d
; 665  : 		position,
; 666  : 		intercept_point,
; 667  : 		face_normal;
; 668  : 
; 669  : 	ASSERT (target);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@get_object
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_object:

; 670  : 
; 671  : 	ASSERT (source_position);

  0002a	83 7d 0c 00	 cmp	 DWORD PTR _source_position$[ebp], 0
  0002e	75 18		 jne	 SHORT $LN3@get_object
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00035	83 c0 12	 add	 eax, 18			; 00000012H
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIPCKJML@source_position@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_object:

; 672  : 
; 673  : 	ASSERT (target_position);

  00048	83 7d 10 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@get_object
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00053	83 c0 14	 add	 eax, 20			; 00000014H
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_object:

; 674  : 
; 675  : 	dx = target_position->x - source_position->x;

  00066	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00069	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0006c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00070	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00074	f3 0f 11 45 fc	 movss	 DWORD PTR _dx$[ebp], xmm0

; 676  : 	dy = target_position->y - source_position->y;

  00079	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  0007c	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0007f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00084	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00089	f3 0f 11 45 f8	 movss	 DWORD PTR _dy$[ebp], xmm0

; 677  : 	dz = target_position->z - source_position->z;

  0008e	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00091	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00094	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00099	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0009e	f3 0f 11 45 f4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 678  : 
; 679  : 	flat_range = sqrt ((dx * dx) + (dz * dz));

  000a3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  000a8	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  000ad	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR _dz$[ebp]
  000b2	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  000b7	f3 0f 58 c1	 addss	 xmm0, xmm1
  000bb	51		 push	 ecx
  000bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c1	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  000c6	d9 5d e4	 fstp	 DWORD PTR _flat_range$[ebp]

; 680  : 
; 681  : 	if (flat_range <= (OBJECT_LOS_RANGE * 2.0))

  000c9	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _flat_range$[ebp]
  000ce	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@408f400000000000
  000d6	66 0f 2f c8	 comisd	 xmm1, xmm0
  000da	72 54		 jb	 SHORT $LN5@get_object

; 682  : 	{
; 683  : 		if (get_line_of_sight_collision_entity (get_gunship_entity (), target, source_position, target_position, &intercept_point, &face_normal))

  000dc	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  000df	50		 push	 eax
  000e0	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  000e3	51		 push	 ecx
  000e4	8b 55 10	 mov	 edx, DWORD PTR _target_position$[ebp]
  000e7	52		 push	 edx
  000e8	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  000ef	51		 push	 ecx
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000f6	52		 push	 edx
  000f7	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  000fc	85 c0		 test	 eax, eax
  000fe	74 07		 je	 SHORT $LN7@get_object

; 684  : 		{
; 685  : 			return (FALSE);

  00100	33 c0		 xor	 eax, eax
  00102	e9 9f 01 00 00	 jmp	 $LN1@get_object
$LN7@get_object:

; 686  : 		}
; 687  : 
; 688  : 		if (get_line_of_sight_collision_tree (source_position, target_position, &intercept_point, &face_normal, FALSE, TRUE))

  00107	6a 01		 push	 1
  00109	6a 00		 push	 0
  0010b	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  0010e	50		 push	 eax
  0010f	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  00112	51		 push	 ecx
  00113	8b 55 10	 mov	 edx, DWORD PTR _target_position$[ebp]
  00116	52		 push	 edx
  00117	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z ; get_line_of_sight_collision_tree
  00120	85 c0		 test	 eax, eax
  00122	74 07		 je	 SHORT $LN8@get_object

; 689  : 		{
; 690  : 			return (FALSE);

  00124	33 c0		 xor	 eax, eax
  00126	e9 7b 01 00 00	 jmp	 $LN1@get_object
$LN8@get_object:

; 691  : 		}
; 692  : 	}
; 693  : 	else

  0012b	e9 71 01 00 00	 jmp	 $LN12@get_object
$LN5@get_object:

; 694  : 	{
; 695  : 		ratio = OBJECT_LOS_RANGE / flat_range;

  00130	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43fa0000
  00138	f3 0f 5e 45 e4	 divss	 xmm0, DWORD PTR _flat_range$[ebp]
  0013d	f3 0f 11 45 e0	 movss	 DWORD PTR _ratio$[ebp], xmm0

; 696  : 
; 697  : 		ddx = dx * ratio;

  00142	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00147	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  0014c	f3 0f 11 45 f0	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 698  : 		ddy = dy * ratio;

  00151	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00156	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  0015b	f3 0f 11 45 ec	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 699  : 		ddz = dz * ratio;

  00160	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00165	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _ratio$[ebp]
  0016a	f3 0f 11 45 e8	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 700  : 
; 701  : 		position.x = source_position->x + ddx;

  0016f	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  00172	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00176	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  0017b	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp], xmm0

; 702  : 		position.y = source_position->y + ddy;

  00180	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  00183	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00188	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  0018d	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 703  : 		position.z = source_position->z + ddz;

  00192	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  00195	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0019a	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  0019f	f3 0f 11 45 dc	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 704  : 
; 705  : 		if (get_line_of_sight_collision_entity (get_gunship_entity (), target, source_position, &position, &intercept_point, &face_normal))

  001a4	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  001a7	50		 push	 eax
  001a8	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  001ab	51		 push	 ecx
  001ac	8d 55 d4	 lea	 edx, DWORD PTR _position$[ebp]
  001af	52		 push	 edx
  001b0	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  001b3	50		 push	 eax
  001b4	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  001b7	51		 push	 ecx
  001b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001be	52		 push	 edx
  001bf	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  001c4	85 c0		 test	 eax, eax
  001c6	74 07		 je	 SHORT $LN9@get_object

; 706  : 		{
; 707  : 			return (FALSE);

  001c8	33 c0		 xor	 eax, eax
  001ca	e9 d7 00 00 00	 jmp	 $LN1@get_object
$LN9@get_object:

; 708  : 		}
; 709  : 
; 710  : 		if (get_line_of_sight_collision_tree (source_position, &position, &intercept_point, &face_normal, FALSE, TRUE))

  001cf	6a 01		 push	 1
  001d1	6a 00		 push	 0
  001d3	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  001d6	50		 push	 eax
  001d7	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  001da	51		 push	 ecx
  001db	8d 55 d4	 lea	 edx, DWORD PTR _position$[ebp]
  001de	52		 push	 edx
  001df	8b 45 0c	 mov	 eax, DWORD PTR _source_position$[ebp]
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z ; get_line_of_sight_collision_tree
  001e8	85 c0		 test	 eax, eax
  001ea	74 07		 je	 SHORT $LN10@get_object

; 711  : 		{
; 712  : 			return (FALSE);

  001ec	33 c0		 xor	 eax, eax
  001ee	e9 b3 00 00 00	 jmp	 $LN1@get_object
$LN10@get_object:

; 713  : 		}
; 714  : 
; 715  : 		////////////////////////////////////////
; 716  : 		//
; 717  : 		// speed up ground radar around large cities - reduce LOS range at target end
; 718  : 		//
; 719  : 
; 720  : 		position.x = target_position->x - (ddx * 0.5);

  001f3	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  001f6	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  001fa	f3 0f 5a 4d f0	 cvtss2sd xmm1, DWORD PTR _ddx$[ebp]
  001ff	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00207	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0020b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0020f	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp], xmm0

; 721  : 		position.y = target_position->y - (ddy * 0.5);

  00214	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00217	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  0021c	f3 0f 5a 4d ec	 cvtss2sd xmm1, DWORD PTR _ddy$[ebp]
  00221	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00229	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0022d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00231	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 722  : 		position.z = target_position->z - (ddz * 0.5);

  00236	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00239	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0023e	f3 0f 5a 4d e8	 cvtss2sd xmm1, DWORD PTR _ddz$[ebp]
  00243	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  0024b	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0024f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00253	f3 0f 11 45 dc	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 723  : 
; 724  : 		/*
; 725  : 		position.x = target_position->x - ddx;
; 726  : 		position.y = target_position->y - ddy;
; 727  : 		position.z = target_position->z - ddz;
; 728  : 		*/
; 729  : 
; 730  : 		//
; 731  : 		////////////////////////////////////////
; 732  : 
; 733  : 		if (get_line_of_sight_collision_entity (get_gunship_entity (), target, &position, target_position, &intercept_point, &face_normal))

  00258	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  0025b	50		 push	 eax
  0025c	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  0025f	51		 push	 ecx
  00260	8b 55 10	 mov	 edx, DWORD PTR _target_position$[ebp]
  00263	52		 push	 edx
  00264	8d 45 d4	 lea	 eax, DWORD PTR _position$[ebp]
  00267	50		 push	 eax
  00268	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  0026b	51		 push	 ecx
  0026c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00272	52		 push	 edx
  00273	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_entity@@YGPAUENTITY@@PAU1@0PAUVEC3D@@111@Z ; get_line_of_sight_collision_entity
  00278	85 c0		 test	 eax, eax
  0027a	74 04		 je	 SHORT $LN11@get_object

; 734  : 		{
; 735  : 			return (FALSE);

  0027c	33 c0		 xor	 eax, eax
  0027e	eb 26		 jmp	 SHORT $LN1@get_object
$LN11@get_object:

; 736  : 		}
; 737  : 
; 738  : 		if (get_line_of_sight_collision_tree (&position, target_position, &intercept_point, &face_normal, FALSE, TRUE))

  00280	6a 01		 push	 1
  00282	6a 00		 push	 0
  00284	8d 45 bc	 lea	 eax, DWORD PTR _face_normal$[ebp]
  00287	50		 push	 eax
  00288	8d 4d c8	 lea	 ecx, DWORD PTR _intercept_point$[ebp]
  0028b	51		 push	 ecx
  0028c	8b 55 10	 mov	 edx, DWORD PTR _target_position$[ebp]
  0028f	52		 push	 edx
  00290	8d 45 d4	 lea	 eax, DWORD PTR _position$[ebp]
  00293	50		 push	 eax
  00294	e8 00 00 00 00	 call	 ?get_line_of_sight_collision_tree@@YGHPAUVEC3D@@000HH@Z ; get_line_of_sight_collision_tree
  00299	85 c0		 test	 eax, eax
  0029b	74 04		 je	 SHORT $LN12@get_object

; 739  : 		{
; 740  : 			return (FALSE);

  0029d	33 c0		 xor	 eax, eax
  0029f	eb 05		 jmp	 SHORT $LN1@get_object
$LN12@get_object:

; 741  : 		}
; 742  : 	}
; 743  : 
; 744  : 	return (TRUE);

  002a1	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_object:

; 745  : }

  002a6	5f		 pop	 edi
  002a7	5e		 pop	 esi
  002a8	5b		 pop	 ebx
  002a9	8b e5		 mov	 esp, ebp
  002ab	5d		 pop	 ebp
  002ac	c2 0c 00	 ret	 12			; 0000000cH
?get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ENDP	; get_object_los_clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z
_TEXT	SEGMENT
tv458 = -116						; size = 4
tv450 = -116						; size = 4
tv416 = -116						; size = 4
tv408 = -116						; size = 4
tv371 = -116						; size = 4
tv363 = -116						; size = 4
tv321 = -116						; size = 4
tv313 = -116						; size = 4
tv227 = -116						; size = 4
tv202 = -116						; size = 4
tv174 = -116						; size = 4
tv137 = -116						; size = 4
_position$ = -48					; size = 12
_step_ratio$ = -36					; size = 4
_flat_range$ = -32					; size = 4
_ddz$ = -28						; size = 4
_ddy$ = -24						; size = 4
_ddx$ = -20						; size = 4
_dz$ = -16						; size = 4
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_count$ = -4						; size = 4
_source_position$ = 8					; size = 4
_target_position$ = 12					; size = 4
?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z PROC		; get_terrain_los_clear, COMDAT

; 419  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 420  : 	int
; 421  : 		count;
; 422  : 
; 423  : 	float
; 424  : 		dx,
; 425  : 		dy,
; 426  : 		dz,
; 427  : 		ddx,
; 428  : 		ddy,
; 429  : 		ddz,
; 430  : 		flat_range,
; 431  : 		step_ratio;
; 432  : 
; 433  : 	vec3d
; 434  : 		position;
; 435  : 
; 436  : 	ASSERT (source_position);

  00009	83 7d 08 00	 cmp	 DWORD PTR _source_position$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN10@get_terrai
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIPCKJML@source_position@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@get_terrai:

; 437  : 
; 438  : 	ASSERT (target_position);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN11@get_terrai
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_terrain_los_clear@@YGHPAUVEC3D@@0@Z@4JA
  00032	83 c0 13	 add	 eax, 19			; 00000013H
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN11@get_terrai:

; 439  : 
; 440  : 	dx = target_position->x - source_position->x;

  00045	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0004b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0004f	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00053	f3 0f 11 45 f8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 441  : 	dy = target_position->y - source_position->y;

  00058	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0005e	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00063	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00068	f3 0f 11 45 f4	 movss	 DWORD PTR _dy$[ebp], xmm0

; 442  : 	dz = target_position->z - source_position->z;

  0006d	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00073	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00078	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0007d	f3 0f 11 45 f0	 movss	 DWORD PTR _dz$[ebp], xmm0

; 443  : 
; 444  : 	flat_range = sqrt ((dx * dx) + (dz * dz));

  00082	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00087	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dx$[ebp]
  0008c	f3 0f 10 4d f0	 movss	 xmm1, DWORD PTR _dz$[ebp]
  00091	f3 0f 59 4d f0	 mulss	 xmm1, DWORD PTR _dz$[ebp]
  00096	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009a	51		 push	 ecx
  0009b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000a0	e8 00 00 00 00	 call	 ?sqrt@@YGMM@Z		; sqrt
  000a5	d9 5d e0	 fstp	 DWORD PTR _flat_range$[ebp]

; 445  : 
; 446  : 	if (flat_range < (LARGE_STEP_SIZE * 2.0))

  000a8	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _flat_range$[ebp]
  000ad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4079000000000000
  000b5	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b9	0f 86 8f 01 00
	00		 jbe	 $LN12@get_terrai

; 447  : 	{
; 448  : 		////////////////////////////////////////
; 449  : 		//
; 450  : 		// short range
; 451  : 		//
; 452  : 		////////////////////////////////////////
; 453  : 
; 454  : 		//
; 455  : 		// small steps across the entire range
; 456  : 		//
; 457  : 
; 458  : 		convert_float_to_int (flat_range * ONE_OVER_SMALL_STEP_SIZE, &count);

  000bf	8d 45 fc	 lea	 eax, DWORD PTR _count$[ebp]
  000c2	50		 push	 eax
  000c3	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  000c8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3d4ccccd
  000d0	51		 push	 ecx
  000d1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d6	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 459  : 
; 460  : 		if (count == 0)

  000db	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  000df	75 07		 jne	 SHORT $LN14@get_terrai

; 461  : 		{
; 462  : 			count = 1;

  000e1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN14@get_terrai:

; 463  : 		}
; 464  : 
; 465  : 		step_ratio = 1.0 / (float) (count + 1);

  000e8	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000eb	83 c0 01	 add	 eax, 1
  000ee	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000f6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000fe	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00102	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00106	f3 0f 11 45 dc	 movss	 DWORD PTR _step_ratio$[ebp], xmm0

; 466  : 
; 467  : 		ddx = dx * step_ratio;

  0010b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00110	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00115	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 468  : 		ddy = dy * step_ratio;

  0011a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  0011f	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00124	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 469  : 		ddz = dz * step_ratio;

  00129	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  0012e	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  00133	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 470  : 
; 471  : 		position = *source_position;

  00138	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  0013b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013d	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  00140	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00143	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  00146	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00149	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax
$LN2@get_terrai:

; 472  : 
; 473  : 		while (count--)

  0014c	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0014f	89 45 8c	 mov	 DWORD PTR tv137[ebp], eax
  00152	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  00155	83 e9 01	 sub	 ecx, 1
  00158	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  0015b	83 7d 8c 00	 cmp	 DWORD PTR tv137[ebp], 0
  0015f	0f 84 e4 00 00
	00		 je	 $LN3@get_terrai

; 474  : 		{
; 475  : 			position.x += ddx;

  00165	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0016a	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  0016f	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 476  : 			position.y += ddy;

  00174	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  00179	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  0017e	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 477  : 			position.z += ddz;

  00183	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00188	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  0018d	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 478  : 
; 479  : 			if (draw_radar_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00192	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_terrain_los_markers@@3HA, 0 ; draw_radar_terrain_los_markers
  00199	74 4e		 je	 SHORT $LN15@get_terrai
  0019b	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  001a2	75 45		 jne	 SHORT $LN15@get_terrai

; 480  : 			{
; 481  : 				create_rotated_debug_3d_object

  001a4	51		 push	 ecx
  001a5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	51		 push	 ecx
  001b3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  001bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c0	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  001c5	51		 push	 ecx
  001c6	0f 57 c0	 xorps	 xmm0, xmm0
  001c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ce	51		 push	 ecx
  001cf	0f 57 c0	 xorps	 xmm0, xmm0
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	51		 push	 ecx
  001d8	0f 57 c0	 xorps	 xmm0, xmm0
  001db	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e0	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  001e3	50		 push	 eax
  001e4	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN15@get_terrai:

; 482  : 				(
; 483  : 					&position,
; 484  : 					0.0,
; 485  : 					0.0,
; 486  : 					0.0,
; 487  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 488  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 489  : 					TERRAIN_LOS_MARKER_SCALE
; 490  : 				);
; 491  : 			}
; 492  : 
; 493  : 			if (point_below_ground (&position))

  001e9	51		 push	 ecx
  001ea	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	51		 push	 ecx
  001f5	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  001fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ff	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  00204	d9 5d 8c	 fstp	 DWORD PTR tv313[ebp]
  00207	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv313[ebp]
  0020c	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00210	76 32		 jbe	 SHORT $LN16@get_terrai
  00212	6a 00		 push	 0
  00214	51		 push	 ecx
  00215	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0021a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021f	51		 push	 ecx
  00220	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00225	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022a	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0022f	d9 5d 8c	 fstp	 DWORD PTR tv321[ebp]
  00232	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv321[ebp]
  00237	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  0023b	76 07		 jbe	 SHORT $LN16@get_terrai

; 494  : 			{
; 495  : 				return (FALSE);

  0023d	33 c0		 xor	 eax, eax
  0023f	e9 fc 03 00 00	 jmp	 $LN1@get_terrai
$LN16@get_terrai:

; 496  : 			}
; 497  : 		}

  00244	e9 03 ff ff ff	 jmp	 $LN2@get_terrai
$LN3@get_terrai:

; 498  : 	}
; 499  : 	else

  00249	e9 ed 03 00 00	 jmp	 $LN9@get_terrai
$LN12@get_terrai:

; 500  : 	{
; 501  : 		////////////////////////////////////////
; 502  : 		//
; 503  : 		// long range
; 504  : 		//
; 505  : 		////////////////////////////////////////
; 506  : 
; 507  : 		//
; 508  : 		// large steps across the entire range
; 509  : 		//
; 510  : 
; 511  : 		convert_float_to_int (flat_range * ONE_OVER_LARGE_STEP_SIZE, &count);

  0024e	8d 45 fc	 lea	 eax, DWORD PTR _count$[ebp]
  00251	50		 push	 eax
  00252	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _flat_range$[ebp]
  00257	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3ba3d70a
  0025f	51		 push	 ecx
  00260	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00265	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 512  : 
; 513  : 		if (count == 0)

  0026a	83 7d fc 00	 cmp	 DWORD PTR _count$[ebp], 0
  0026e	75 07		 jne	 SHORT $LN17@get_terrai

; 514  : 		{
; 515  : 			count = 1;

  00270	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN17@get_terrai:

; 516  : 		}
; 517  : 
; 518  : 		step_ratio = 1.0 / (float) (count + 1);

  00277	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0027a	83 c0 01	 add	 eax, 1
  0027d	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00281	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00285	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0028d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00291	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00295	f3 0f 11 45 dc	 movss	 DWORD PTR _step_ratio$[ebp], xmm0

; 519  : 
; 520  : 		ddx = dx * step_ratio;

  0029a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0029f	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  002a4	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 521  : 		ddy = dy * step_ratio;

  002a9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _dy$[ebp]
  002ae	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  002b3	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 522  : 		ddz = dz * step_ratio;

  002b8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _dz$[ebp]
  002bd	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _step_ratio$[ebp]
  002c2	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 523  : 
; 524  : 		position = *source_position;

  002c7	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  002ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  002cc	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  002cf	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  002d2	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  002d5	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002d8	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax
$LN4@get_terrai:

; 525  : 
; 526  : 		while (count--)

  002db	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  002de	89 45 8c	 mov	 DWORD PTR tv174[ebp], eax
  002e1	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  002e4	83 e9 01	 sub	 ecx, 1
  002e7	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  002ea	83 7d 8c 00	 cmp	 DWORD PTR tv174[ebp], 0
  002ee	0f 84 e4 00 00
	00		 je	 $LN5@get_terrai

; 527  : 		{
; 528  : 			position.x += ddx;

  002f4	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  002f9	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  002fe	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 529  : 			position.y += ddy;

  00303	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  00308	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  0030d	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 530  : 			position.z += ddz;

  00312	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00317	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  0031c	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 531  : 
; 532  : 			if (draw_radar_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00321	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_terrain_los_markers@@3HA, 0 ; draw_radar_terrain_los_markers
  00328	74 4e		 je	 SHORT $LN18@get_terrai
  0032a	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00331	75 45		 jne	 SHORT $LN18@get_terrai

; 533  : 			{
; 534  : 				create_rotated_debug_3d_object

  00333	51		 push	 ecx
  00334	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0033c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00341	51		 push	 ecx
  00342	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  0034a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034f	68 5e 0a 00 00	 push	 2654			; 00000a5eH
  00354	51		 push	 ecx
  00355	0f 57 c0	 xorps	 xmm0, xmm0
  00358	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0035d	51		 push	 ecx
  0035e	0f 57 c0	 xorps	 xmm0, xmm0
  00361	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00366	51		 push	 ecx
  00367	0f 57 c0	 xorps	 xmm0, xmm0
  0036a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036f	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  00372	50		 push	 eax
  00373	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN18@get_terrai:

; 535  : 				(
; 536  : 					&position,
; 537  : 					0.0,
; 538  : 					0.0,
; 539  : 					0.0,
; 540  : 					TERRAIN_LOS_MARKER_LARGE_STEP_3D_OBJECT,
; 541  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 542  : 					TERRAIN_LOS_MARKER_SCALE
; 543  : 				);
; 544  : 			}
; 545  : 
; 546  : 			if (point_below_ground (&position))

  00378	51		 push	 ecx
  00379	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0037e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00383	51		 push	 ecx
  00384	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00389	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038e	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  00393	d9 5d 8c	 fstp	 DWORD PTR tv363[ebp]
  00396	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv363[ebp]
  0039b	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  0039f	76 32		 jbe	 SHORT $LN19@get_terrai
  003a1	6a 00		 push	 0
  003a3	51		 push	 ecx
  003a4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  003a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ae	51		 push	 ecx
  003af	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  003b4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b9	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  003be	d9 5d 8c	 fstp	 DWORD PTR tv371[ebp]
  003c1	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv371[ebp]
  003c6	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  003ca	76 07		 jbe	 SHORT $LN19@get_terrai

; 547  : 			{
; 548  : 				return (FALSE);

  003cc	33 c0		 xor	 eax, eax
  003ce	e9 6d 02 00 00	 jmp	 $LN1@get_terrai
$LN19@get_terrai:

; 549  : 			}
; 550  : 		}

  003d3	e9 03 ff ff ff	 jmp	 $LN4@get_terrai
$LN5@get_terrai:

; 551  : 
; 552  : 		//
; 553  : 		// small steps across first large step (near source)
; 554  : 		//
; 555  : 
; 556  : 		ddx *= ONE_OVER_NUM_SMALL_STEPS;

  003d8	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _ddx$[ebp]
  003dd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  003e5	f3 0f 11 45 ec	 movss	 DWORD PTR _ddx$[ebp], xmm0

; 557  : 		ddy *= ONE_OVER_NUM_SMALL_STEPS;

  003ea	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _ddy$[ebp]
  003ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  003f7	f3 0f 11 45 e8	 movss	 DWORD PTR _ddy$[ebp], xmm0

; 558  : 		ddz *= ONE_OVER_NUM_SMALL_STEPS;

  003fc	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _ddz$[ebp]
  00401	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3dcccccd
  00409	f3 0f 11 45 e4	 movss	 DWORD PTR _ddz$[ebp], xmm0

; 559  : 
; 560  : 		position = *source_position;

  0040e	8b 45 08	 mov	 eax, DWORD PTR _source_position$[ebp]
  00411	8b 08		 mov	 ecx, DWORD PTR [eax]
  00413	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  00416	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00419	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  0041c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0041f	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax

; 561  : 
; 562  : 		count = NUM_SMALL_STEPS - 1;

  00422	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR _count$[ebp], 9
$LN6@get_terrai:

; 563  : 
; 564  : 		while (count--)

  00429	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0042c	89 45 8c	 mov	 DWORD PTR tv202[ebp], eax
  0042f	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  00432	83 e9 01	 sub	 ecx, 1
  00435	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  00438	83 7d 8c 00	 cmp	 DWORD PTR tv202[ebp], 0
  0043c	0f 84 e4 00 00
	00		 je	 $LN7@get_terrai

; 565  : 		{
; 566  : 			position.x += ddx;

  00442	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00447	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _ddx$[ebp]
  0044c	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 567  : 			position.y += ddy;

  00451	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  00456	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _ddy$[ebp]
  0045b	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 568  : 			position.z += ddz;

  00460	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  00465	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _ddz$[ebp]
  0046a	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 569  : 
; 570  : 			if (draw_radar_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  0046f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_terrain_los_markers@@3HA, 0 ; draw_radar_terrain_los_markers
  00476	74 4e		 je	 SHORT $LN20@get_terrai
  00478	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  0047f	75 45		 jne	 SHORT $LN20@get_terrai

; 571  : 			{
; 572  : 				create_rotated_debug_3d_object

  00481	51		 push	 ecx
  00482	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  0048a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048f	51		 push	 ecx
  00490	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  00498	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049d	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  004a2	51		 push	 ecx
  004a3	0f 57 c0	 xorps	 xmm0, xmm0
  004a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ab	51		 push	 ecx
  004ac	0f 57 c0	 xorps	 xmm0, xmm0
  004af	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b4	51		 push	 ecx
  004b5	0f 57 c0	 xorps	 xmm0, xmm0
  004b8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004bd	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  004c0	50		 push	 eax
  004c1	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN20@get_terrai:

; 573  : 				(
; 574  : 					&position,
; 575  : 					0.0,
; 576  : 					0.0,
; 577  : 					0.0,
; 578  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 579  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 580  : 					TERRAIN_LOS_MARKER_SCALE
; 581  : 				);
; 582  : 			}
; 583  : 
; 584  : 			if (point_below_ground (&position))

  004c6	51		 push	 ecx
  004c7	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  004cc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d1	51		 push	 ecx
  004d2	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  004d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004dc	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  004e1	d9 5d 8c	 fstp	 DWORD PTR tv408[ebp]
  004e4	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv408[ebp]
  004e9	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  004ed	76 32		 jbe	 SHORT $LN21@get_terrai
  004ef	6a 00		 push	 0
  004f1	51		 push	 ecx
  004f2	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  004f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004fc	51		 push	 ecx
  004fd	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  00502	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00507	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0050c	d9 5d 8c	 fstp	 DWORD PTR tv416[ebp]
  0050f	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv416[ebp]
  00514	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00518	76 07		 jbe	 SHORT $LN21@get_terrai

; 585  : 			{
; 586  : 				return (FALSE);

  0051a	33 c0		 xor	 eax, eax
  0051c	e9 1f 01 00 00	 jmp	 $LN1@get_terrai
$LN21@get_terrai:

; 587  : 			}
; 588  : 		}

  00521	e9 03 ff ff ff	 jmp	 $LN6@get_terrai
$LN7@get_terrai:

; 589  : 
; 590  : 		//
; 591  : 		// small steps across last large step (near target)
; 592  : 		//
; 593  : 
; 594  : 		position = *target_position;

  00526	8b 45 0c	 mov	 eax, DWORD PTR _target_position$[ebp]
  00529	8b 08		 mov	 ecx, DWORD PTR [eax]
  0052b	89 4d d0	 mov	 DWORD PTR _position$[ebp], ecx
  0052e	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00531	89 55 d4	 mov	 DWORD PTR _position$[ebp+4], edx
  00534	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00537	89 45 d8	 mov	 DWORD PTR _position$[ebp+8], eax

; 595  : 
; 596  : 		count = NUM_SMALL_STEPS - 1;

  0053a	c7 45 fc 09 00
	00 00		 mov	 DWORD PTR _count$[ebp], 9
$LN8@get_terrai:

; 597  : 
; 598  : 		while (count--)

  00541	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00544	89 45 8c	 mov	 DWORD PTR tv227[ebp], eax
  00547	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  0054a	83 e9 01	 sub	 ecx, 1
  0054d	89 4d fc	 mov	 DWORD PTR _count$[ebp], ecx
  00550	83 7d 8c 00	 cmp	 DWORD PTR tv227[ebp], 0
  00554	0f 84 e1 00 00
	00		 je	 $LN9@get_terrai

; 599  : 		{
; 600  : 			position.x -= ddx;

  0055a	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0055f	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _ddx$[ebp]
  00564	f3 0f 11 45 d0	 movss	 DWORD PTR _position$[ebp], xmm0

; 601  : 			position.y -= ddy;

  00569	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _position$[ebp+4]
  0056e	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _ddy$[ebp]
  00573	f3 0f 11 45 d4	 movss	 DWORD PTR _position$[ebp+4], xmm0

; 602  : 			position.z -= ddz;

  00578	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0057d	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _ddz$[ebp]
  00582	f3 0f 11 45 d8	 movss	 DWORD PTR _position$[ebp+8], xmm0

; 603  : 
; 604  : 			if (draw_radar_terrain_los_markers && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00587	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_terrain_los_markers@@3HA, 0 ; draw_radar_terrain_los_markers
  0058e	74 4e		 je	 SHORT $LN22@get_terrai
  00590	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00597	75 45		 jne	 SHORT $LN22@get_terrai

; 605  : 			{
; 606  : 				create_rotated_debug_3d_object

  00599	51		 push	 ecx
  0059a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  005a2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005a7	51		 push	 ecx
  005a8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40400000
  005b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b5	68 5f 0a 00 00	 push	 2655			; 00000a5fH
  005ba	51		 push	 ecx
  005bb	0f 57 c0	 xorps	 xmm0, xmm0
  005be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005c3	51		 push	 ecx
  005c4	0f 57 c0	 xorps	 xmm0, xmm0
  005c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cc	51		 push	 ecx
  005cd	0f 57 c0	 xorps	 xmm0, xmm0
  005d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005d5	8d 45 d0	 lea	 eax, DWORD PTR _position$[ebp]
  005d8	50		 push	 eax
  005d9	e8 00 00 00 00	 call	 ?create_rotated_debug_3d_object@@YGPAUDEBUG_3D_OBJECT@@PAUVEC3D@@MMMHMM@Z ; create_rotated_debug_3d_object
$LN22@get_terrai:

; 607  : 				(
; 608  : 					&position,
; 609  : 					0.0,
; 610  : 					0.0,
; 611  : 					0.0,
; 612  : 					TERRAIN_LOS_MARKER_SMALL_STEP_3D_OBJECT,
; 613  : 					TERRAIN_LOS_MARKER_LIFETIME,
; 614  : 					TERRAIN_LOS_MARKER_SCALE
; 615  : 				);
; 616  : 			}
; 617  : 
; 618  : 			if (point_below_ground (&position))

  005de	51		 push	 ecx
  005df	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  005e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005e9	51		 push	 ecx
  005ea	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  005ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005f4	e8 00 00 00 00	 call	 ?get_terrain_3d_point_sector_max_elevation@@YGMMM@Z ; get_terrain_3d_point_sector_max_elevation
  005f9	d9 5d 8c	 fstp	 DWORD PTR tv450[ebp]
  005fc	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv450[ebp]
  00601	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00605	76 2f		 jbe	 SHORT $LN23@get_terrai
  00607	6a 00		 push	 0
  00609	51		 push	 ecx
  0060a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _position$[ebp+8]
  0060f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00614	51		 push	 ecx
  00615	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _position$[ebp]
  0061a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0061f	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00624	d9 5d 8c	 fstp	 DWORD PTR tv458[ebp]
  00627	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv458[ebp]
  0062c	0f 2f 45 d4	 comiss	 xmm0, DWORD PTR _position$[ebp+4]
  00630	76 04		 jbe	 SHORT $LN23@get_terrai

; 619  : 			{
; 620  : 				return (FALSE);

  00632	33 c0		 xor	 eax, eax
  00634	eb 0a		 jmp	 SHORT $LN1@get_terrai
$LN23@get_terrai:

; 621  : 			}
; 622  : 		}

  00636	e9 06 ff ff ff	 jmp	 $LN8@get_terrai
$LN9@get_terrai:

; 623  : 	}
; 624  : 
; 625  : 	return (TRUE);

  0063b	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_terrai:

; 626  : }

  00640	5f		 pop	 edi
  00641	5e		 pop	 esi
  00642	5b		 pop	 ebx
  00643	8b e5		 mov	 esp, ebp
  00645	5d		 pop	 ebp
  00646	c2 08 00	 ret	 8
?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z ENDP		; get_terrain_los_clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z
_TEXT	SEGMENT
_sweep_max_limit$ = -8					; size = 4
_sweep_min_limit$ = -4					; size = 4
_radar$ = 8						; size = 4
_cw_sweep_start_offset$ = 12				; size = 4
_cw_sweep_end_offset$ = 16				; size = 4
?update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z PROC	; update_radar_sweep, COMDAT

; 228  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 229  : 	float
; 230  : 		sweep_min_limit,
; 231  : 		sweep_max_limit;
; 232  : 
; 233  : 	ASSERT (radar);

  00009	83 7d 08 00	 cmp	 DWORD PTR _radar$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_rad
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05EMNNHGFM@radar@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_rad:

; 234  : 
; 235  : 	ASSERT (cw_sweep_start_offset);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _cw_sweep_start_offset$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@update_rad
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA
  00032	83 c0 07	 add	 eax, 7
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CPIDAPHB@cw_sweep_start_offset@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_rad:

; 236  : 
; 237  : 	ASSERT (cw_sweep_end_offset);

  00045	83 7d 10 00	 cmp	 DWORD PTR _cw_sweep_end_offset$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@update_rad
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA
  00050	83 c0 09	 add	 eax, 9
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BCILNBBA@cw_sweep_end_offset@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@update_rad:

; 238  : 
; 239  : 	ASSERT (radar->sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE);

  00063	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00066	83 78 28 01	 cmp	 DWORD PTR [eax+40], 1
  0006a	75 18		 jne	 SHORT $LN5@update_rad
  0006c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z@4JA
  00071	83 c0 0b	 add	 eax, 11			; 0000000bH
  00074	50		 push	 eax
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@OIGIIKFL@radar?9?$DOsweep_mode?5?$CB?$DN?5RADAR_SWEE@
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@update_rad:

; 240  : 
; 241  : 	if (radar->scan_arc_size == RADAR_SCAN_ARC_SIZE_360)

  00084	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00087	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0008c	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@40c90fdb
  00093	9f		 lahf
  00094	f6 c4 44	 test	 ah, 68			; 00000044H
  00097	0f 8a 91 01 00
	00		 jp	 $LN6@update_rad

; 242  : 	{
; 243  : 		if (radar->sweep_direction == RADAR_SWEEP_CW)

  0009d	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000a0	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  000a5	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  000ac	9f		 lahf
  000ad	f6 c4 44	 test	 ah, 68			; 00000044H
  000b0	0f 8a ba 00 00
	00		 jp	 $LN8@update_rad

; 244  : 		{
; 245  : 			*cw_sweep_start_offset = radar->sweep_offset;

  000b6	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  000bc	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000bf	89 10		 mov	 DWORD PTR [eax], edx

; 246  : 
; 247  : 			radar->sweep_offset += radar->sweep_rate * radar->sweep_direction * get_delta_time ();

  000c1	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  000c7	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000cc	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]
  000d1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000d9	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  000dc	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  000e1	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000e4	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 248  : 
; 249  : 			if (radar->sweep_offset > rad (180.0))

  000e9	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000ec	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  000f1	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  000f9	76 1c		 jbe	 SHORT $LN10@update_rad

; 250  : 			{
; 251  : 				radar->sweep_offset -= rad (360.0);

  000fb	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000fe	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00103	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  0010b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010f	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00112	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0
$LN10@update_rad:

; 252  : 			}
; 253  : 
; 254  : 			*cw_sweep_end_offset = radar->sweep_offset;

  00117	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  0011a	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  0011d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00120	89 10		 mov	 DWORD PTR [eax], edx

; 255  : 
; 256  : 			if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  00122	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00125	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  00129	75 40		 jne	 SHORT $LN12@update_rad

; 257  : 			{
; 258  : 				if ((*cw_sweep_start_offset < rad (0.0)) && (*cw_sweep_end_offset >= rad (0.0)))

  0012b	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  0012e	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00132	0f 57 c9	 xorps	 xmm1, xmm1
  00135	66 0f 2f c8	 comisd	 xmm1, xmm0
  00139	76 30		 jbe	 SHORT $LN12@update_rad
  0013b	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  0013e	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00142	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0014a	72 1f		 jb	 SHORT $LN12@update_rad

; 259  : 				{
; 260  : 					radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  0014c	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0014f	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1

; 261  : 
; 262  : 					radar->sweep_offset = rad (0.0);

  00156	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00159	0f 57 c0	 xorps	 xmm0, xmm0
  0015c	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 263  : 
; 264  : 					*cw_sweep_end_offset = rad (0.0);

  00161	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00164	0f 57 c0	 xorps	 xmm0, xmm0
  00167	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN12@update_rad:

; 265  : 				}
; 266  : 			}
; 267  : 		}
; 268  : 		else

  0016b	e9 b9 00 00 00	 jmp	 $LN15@update_rad
$LN8@update_rad:

; 269  : 		{
; 270  : 			*cw_sweep_end_offset = radar->sweep_offset;

  00170	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00173	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00176	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00179	89 10		 mov	 DWORD PTR [eax], edx

; 271  : 
; 272  : 			radar->sweep_offset += radar->sweep_rate * radar->sweep_direction * get_delta_time ();

  0017b	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0017e	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00181	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00186	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]
  0018b	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00193	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  00196	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  0019b	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0019e	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 273  : 
; 274  : 			if (radar->sweep_offset < rad (-180.0))

  001a3	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  001a6	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  001ab	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  001b3	66 0f 2f c8	 comisd	 xmm1, xmm0
  001b7	76 1c		 jbe	 SHORT $LN13@update_rad

; 275  : 			{
; 276  : 				radar->sweep_offset += rad (360.0);

  001b9	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  001bc	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  001c1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  001c9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001cd	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  001d0	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0
$LN13@update_rad:

; 277  : 			}
; 278  : 
; 279  : 			*cw_sweep_start_offset = radar->sweep_offset;

  001d5	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  001d8	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  001db	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  001de	89 10		 mov	 DWORD PTR [eax], edx

; 280  : 
; 281  : 			if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  001e0	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  001e3	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  001e7	75 40		 jne	 SHORT $LN15@update_rad

; 282  : 			{
; 283  : 				if ((*cw_sweep_start_offset <= rad (0.0)) && (*cw_sweep_end_offset > rad (0.0)))

  001e9	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  001ec	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  001f0	0f 57 c9	 xorps	 xmm1, xmm1
  001f3	66 0f 2f c8	 comisd	 xmm1, xmm0
  001f7	72 30		 jb	 SHORT $LN15@update_rad
  001f9	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  001fc	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00200	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00208	76 1f		 jbe	 SHORT $LN15@update_rad

; 284  : 				{
; 285  : 					radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  0020a	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0020d	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1

; 286  : 
; 287  : 					radar->sweep_offset = rad (0.0);

  00214	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00217	0f 57 c0	 xorps	 xmm0, xmm0
  0021a	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 288  : 
; 289  : 					*cw_sweep_end_offset = rad (0.0);

  0021f	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00222	0f 57 c0	 xorps	 xmm0, xmm0
  00225	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
$LN15@update_rad:

; 290  : 				}
; 291  : 			}
; 292  : 		}
; 293  : 	}
; 294  : 	else

  00229	e9 0e 02 00 00	 jmp	 $LN24@update_rad
$LN6@update_rad:

; 295  : 	{
; 296  : 		sweep_min_limit = radar->scan_arc_size * -0.5;

  0022e	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00231	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00236	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0000000000000
  0023e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00242	f3 0f 11 45 fc	 movss	 DWORD PTR _sweep_min_limit$[ebp], xmm0

; 297  : 
; 298  : 		sweep_max_limit = radar->scan_arc_size * 0.5;

  00247	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0024a	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0024f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00257	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0025b	f3 0f 11 45 f8	 movss	 DWORD PTR _sweep_max_limit$[ebp], xmm0

; 299  : 
; 300  : 		if (radar->sweep_direction == RADAR_SWEEP_CW)

  00260	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00263	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00268	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  0026f	9f		 lahf
  00270	f6 c4 44	 test	 ah, 68			; 00000044H
  00273	0f 8a e6 00 00
	00		 jp	 $LN16@update_rad

; 301  : 		{
; 302  : 			*cw_sweep_start_offset = radar->sweep_offset;

  00279	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  0027c	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  0027f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00282	89 10		 mov	 DWORD PTR [eax], edx

; 303  : 
; 304  : 			radar->sweep_offset += radar->sweep_rate * radar->sweep_direction * get_delta_time ();

  00284	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00287	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  0028a	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  0028f	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]
  00294	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0029c	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  0029f	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  002a4	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002a7	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 305  : 
; 306  : 			if (radar->sweep_offset > sweep_max_limit)

  002ac	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002af	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  002b4	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  002b8	0f 86 91 00 00
	00		 jbe	 $LN18@update_rad

; 307  : 			{
; 308  : 				*cw_sweep_end_offset = sweep_max_limit;

  002be	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  002c1	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  002c6	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 309  : 
; 310  : 				if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  002ca	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002cd	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  002d1	75 19		 jne	 SHORT $LN20@update_rad

; 311  : 				{
; 312  : 					radar->sweep_offset = sweep_max_limit;

  002d3	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002d6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  002db	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 313  : 
; 314  : 					radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  002e0	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002e3	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1

; 315  : 				}
; 316  : 				else

  002ea	eb 51		 jmp	 SHORT $LN22@update_rad
$LN20@update_rad:

; 317  : 				{
; 318  : 					radar->sweep_offset = sweep_max_limit - (radar->sweep_offset - sweep_max_limit);

  002ec	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  002ef	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  002f4	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  002f9	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _sweep_max_limit$[ebp]
  002fe	f3 0f 5c c8	 subss	 xmm1, xmm0
  00302	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00305	f3 0f 11 49 0c	 movss	 DWORD PTR [ecx+12], xmm1

; 319  : 
; 320  : 					radar->sweep_offset = max (radar->sweep_offset, sweep_min_limit);

  0030a	8d 45 fc	 lea	 eax, DWORD PTR _sweep_min_limit$[ebp]
  0030d	50		 push	 eax
  0030e	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00311	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00314	51		 push	 ecx
  00315	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0031a	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  0031d	8b 00		 mov	 eax, DWORD PTR [eax]
  0031f	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 321  : 
; 322  : 					if (radar->sweep_offset < *cw_sweep_start_offset)

  00322	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  00325	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00328	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0032c	0f 2f 41 0c	 comiss	 xmm0, DWORD PTR [ecx+12]
  00330	76 0b		 jbe	 SHORT $LN22@update_rad

; 323  : 					{
; 324  : 						*cw_sweep_start_offset = radar->sweep_offset;

  00332	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  00335	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00338	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0033b	89 10		 mov	 DWORD PTR [eax], edx
$LN22@update_rad:

; 325  : 					}
; 326  : 				}
; 327  : 
; 328  : 				radar->sweep_direction = RADAR_SWEEP_CCW;

  0033d	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00340	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00348	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 329  : 			}
; 330  : 			else

  0034d	eb 0b		 jmp	 SHORT $LN19@update_rad
$LN18@update_rad:

; 331  : 			{
; 332  : 				*cw_sweep_end_offset = radar->sweep_offset;

  0034f	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00352	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00355	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00358	89 10		 mov	 DWORD PTR [eax], edx
$LN19@update_rad:

; 333  : 			}
; 334  : 		}
; 335  : 		else

  0035a	e9 dd 00 00 00	 jmp	 $LN24@update_rad
$LN16@update_rad:

; 336  : 		{
; 337  : 			*cw_sweep_end_offset = radar->sweep_offset;

  0035f	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00362	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00365	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00368	89 10		 mov	 DWORD PTR [eax], edx

; 338  : 
; 339  : 			radar->sweep_offset += radar->sweep_rate * radar->sweep_direction * get_delta_time ();

  0036a	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0036d	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00370	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00375	f3 0f 59 41 14	 mulss	 xmm0, DWORD PTR [ecx+20]
  0037a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00382	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  00385	f3 0f 58 42 0c	 addss	 xmm0, DWORD PTR [edx+12]
  0038a	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0038d	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 340  : 
; 341  : 			if (radar->sweep_offset < sweep_min_limit)

  00392	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00395	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  0039a	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  0039e	0f 86 8d 00 00
	00		 jbe	 $LN23@update_rad

; 342  : 			{
; 343  : 				*cw_sweep_start_offset = sweep_min_limit;

  003a4	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  003a7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  003ac	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 344  : 
; 345  : 				if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  003b0	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  003b3	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  003b7	75 19		 jne	 SHORT $LN25@update_rad

; 346  : 				{
; 347  : 					radar->sweep_offset = sweep_min_limit;

  003b9	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  003bc	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  003c1	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 348  : 
; 349  : 					radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  003c6	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  003c9	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1

; 350  : 				}
; 351  : 				else

  003d0	eb 4d		 jmp	 SHORT $LN27@update_rad
$LN25@update_rad:

; 352  : 				{
; 353  : 					radar->sweep_offset = sweep_min_limit + (sweep_min_limit - radar->sweep_offset);

  003d2	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  003d5	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  003da	f3 0f 5c 40 0c	 subss	 xmm0, DWORD PTR [eax+12]
  003df	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  003e4	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  003e7	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 354  : 
; 355  : 					radar->sweep_offset = min (radar->sweep_offset, sweep_max_limit);

  003ec	8d 45 f8	 lea	 eax, DWORD PTR _sweep_max_limit$[ebp]
  003ef	50		 push	 eax
  003f0	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  003f3	83 c1 0c	 add	 ecx, 12			; 0000000cH
  003f6	51		 push	 ecx
  003f7	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003fc	8b 55 08	 mov	 edx, DWORD PTR _radar$[ebp]
  003ff	8b 00		 mov	 eax, DWORD PTR [eax]
  00401	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 356  : 
; 357  : 					if (radar->sweep_offset > *cw_sweep_end_offset)

  00404	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00407	8b 4d 10	 mov	 ecx, DWORD PTR _cw_sweep_end_offset$[ebp]
  0040a	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0040f	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00412	76 0b		 jbe	 SHORT $LN27@update_rad

; 358  : 					{
; 359  : 						*cw_sweep_end_offset = radar->sweep_offset;

  00414	8b 45 10	 mov	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  00417	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  0041a	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0041d	89 10		 mov	 DWORD PTR [eax], edx
$LN27@update_rad:

; 360  : 					}
; 361  : 				}
; 362  : 
; 363  : 				radar->sweep_direction = RADAR_SWEEP_CW;

  0041f	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00422	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0042a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 364  : 			}
; 365  : 			else

  0042f	eb 0b		 jmp	 SHORT $LN24@update_rad
$LN23@update_rad:

; 366  : 			{
; 367  : 				*cw_sweep_start_offset = radar->sweep_offset;

  00431	8b 45 0c	 mov	 eax, DWORD PTR _cw_sweep_start_offset$[ebp]
  00434	8b 4d 08	 mov	 ecx, DWORD PTR _radar$[ebp]
  00437	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  0043a	89 10		 mov	 DWORD PTR [eax], edx
$LN24@update_rad:

; 368  : 			}
; 369  : 		}
; 370  : 	}
; 371  : }

  0043c	5f		 pop	 edi
  0043d	5e		 pop	 esi
  0043e	5b		 pop	 ebx
  0043f	8b e5		 mov	 esp, ebp
  00441	5d		 pop	 ebp
  00442	c2 0c 00	 ret	 12			; 0000000cH
?update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z ENDP	; update_radar_sweep
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z
_TEXT	SEGMENT
tv73 = -72						; size = 4
tv71 = -72						; size = 4
tv67 = -72						; size = 4
_result$ = -4						; size = 4
_bearing$ = 8						; size = 4
_cw_sweep_start_direction$ = 12				; size = 4
_cw_sweep_end_direction$ = 16				; size = 4
?check_bearing_within_cw_sweep_segment@@YGHMMM@Z PROC	; check_bearing_within_cw_sweep_segment, COMDAT

; 378  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 379  : 	int
; 380  : 		result;
; 381  : 
; 382  : 	if (cw_sweep_start_direction <= cw_sweep_end_direction)

  00009	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0000e	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00012	72 2e		 jb	 SHORT $LN2@check_bear

; 383  : 	{
; 384  : 		result = (bearing >= cw_sweep_start_direction) && (bearing <= cw_sweep_end_direction);

  00014	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00019	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0001d	72 14		 jb	 SHORT $LN7@check_bear
  0001f	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00024	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _bearing$[ebp]
  00028	72 09		 jb	 SHORT $LN7@check_bear
  0002a	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv67[ebp], 1
  00031	eb 07		 jmp	 SHORT $LN8@check_bear
$LN7@check_bear:
  00033	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv67[ebp], 0
$LN8@check_bear:
  0003a	8b 45 b8	 mov	 eax, DWORD PTR tv67[ebp]
  0003d	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 385  : 	}
; 386  : 	else

  00040	eb 53		 jmp	 SHORT $LN5@check_bear
$LN2@check_bear:

; 387  : 	{
; 388  : 		//
; 389  : 		// crossed over +/-180 degs
; 390  : 		//
; 391  : 
; 392  : 		if (bearing > 0.0)

  00042	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR _bearing$[ebp]
  00047	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  0004f	76 23		 jbe	 SHORT $LN4@check_bear

; 393  : 		{
; 394  : 			result = bearing >= cw_sweep_start_direction;

  00051	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00056	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0005a	72 09		 jb	 SHORT $LN9@check_bear
  0005c	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv71[ebp], 1
  00063	eb 07		 jmp	 SHORT $LN10@check_bear
$LN9@check_bear:
  00065	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv71[ebp], 0
$LN10@check_bear:
  0006c	8b 45 b8	 mov	 eax, DWORD PTR tv71[ebp]
  0006f	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax

; 395  : 		}
; 396  : 		else

  00072	eb 21		 jmp	 SHORT $LN5@check_bear
$LN4@check_bear:

; 397  : 		{
; 398  : 			result = bearing <= cw_sweep_end_direction;

  00074	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00079	0f 2f 45 08	 comiss	 xmm0, DWORD PTR _bearing$[ebp]
  0007d	72 09		 jb	 SHORT $LN11@check_bear
  0007f	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv73[ebp], 1
  00086	eb 07		 jmp	 SHORT $LN12@check_bear
$LN11@check_bear:
  00088	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv73[ebp], 0
$LN12@check_bear:
  0008f	8b 45 b8	 mov	 eax, DWORD PTR tv73[ebp]
  00092	89 45 fc	 mov	 DWORD PTR _result$[ebp], eax
$LN5@check_bear:

; 399  : 		}
; 400  : 	}
; 401  : 
; 402  : 	return (result);

  00095	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 403  : }

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	8b e5		 mov	 esp, ebp
  0009d	5d		 pop	 ebp
  0009e	c2 0c 00	 ret	 12			; 0000000cH
?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ENDP	; check_bearing_within_cw_sweep_segment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z
_TEXT	SEGMENT
_target$ = 8						; size = 4
_source_position$ = 12					; size = 4
_target_position$ = 16					; size = 4
?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z PROC	; get_los_clear, COMDAT

; 2004 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2005 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_los_cl
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_los_cl:

; 2006 : 
; 2007 : 	ASSERT (source_position);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _source_position$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN3@get_los_cl
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IIPCKJML@source_position@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_los_cl:

; 2008 : 
; 2009 : 	ASSERT (target_position);

  00045	83 7d 10 00	 cmp	 DWORD PTR _target_position$[ebp], 0
  00049	75 18		 jne	 SHORT $LN4@get_los_cl
  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z@4JA
  00050	83 c0 05	 add	 eax, 5
  00053	50		 push	 eax
  00054	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00059	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NENIEICJ@target_position@
  0005e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_los_cl:

; 2010 : 
; 2011 : 	if (get_terrain_los_clear (source_position, target_position))

  00063	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00066	50		 push	 eax
  00067	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0006a	51		 push	 ecx
  0006b	e8 00 00 00 00	 call	 ?get_terrain_los_clear@@YGHPAUVEC3D@@0@Z ; get_terrain_los_clear
  00070	85 c0		 test	 eax, eax
  00072	74 29		 je	 SHORT $LN5@get_los_cl

; 2012 : 	{
; 2013 : 		if (!target)

  00074	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00078	75 07		 jne	 SHORT $LN6@get_los_cl

; 2014 : 			return TRUE;

  0007a	b8 01 00 00 00	 mov	 eax, 1
  0007f	eb 1e		 jmp	 SHORT $LN1@get_los_cl
$LN6@get_los_cl:

; 2015 : 
; 2016 : 		if (get_object_los_clear (target, source_position, target_position))

  00081	8b 45 10	 mov	 eax, DWORD PTR _target_position$[ebp]
  00084	50		 push	 eax
  00085	8b 4d 0c	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00088	51		 push	 ecx
  00089	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  0008c	52		 push	 edx
  0008d	e8 00 00 00 00	 call	 ?get_object_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_object_los_clear
  00092	85 c0		 test	 eax, eax
  00094	74 07		 je	 SHORT $LN5@get_los_cl

; 2017 : 		{
; 2018 : 			return (TRUE);

  00096	b8 01 00 00 00	 mov	 eax, 1
  0009b	eb 02		 jmp	 SHORT $LN1@get_los_cl
$LN5@get_los_cl:

; 2019 : 		}
; 2020 : 	}
; 2021 : 
; 2022 : 	return (FALSE);

  0009d	33 c0		 xor	 eax, eax
$LN1@get_los_cl:

; 2023 : }

  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	5b		 pop	 ebx
  000a2	8b e5		 mov	 esp, ebp
  000a4	5d		 pop	 ebp
  000a5	c2 0c 00	 ret	 12			; 0000000cH
?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ENDP	; get_los_clear
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?set_air_radar_is_active@@YGXH@Z
_TEXT	SEGMENT
_is_active$ = 8						; size = 4
?set_air_radar_is_active@@YGXH@Z PROC			; set_air_radar_is_active, COMDAT

; 2909 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2910 : 	air_radar_on = is_active;

  00009	8b 45 08	 mov	 eax, DWORD PTR _is_active$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?air_radar_on@@3HA, eax

; 2911 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_air_radar_is_active@@YGXH@Z ENDP			; set_air_radar_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?air_radar_is_active@@YGHXZ
_TEXT	SEGMENT
?air_radar_is_active@@YGHXZ PROC			; air_radar_is_active, COMDAT

; 2904 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2905 : 	return air_radar_on;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?air_radar_on@@3HA

; 2906 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?air_radar_is_active@@YGHXZ ENDP			; air_radar_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?toggle_air_radar_active@@YGXXZ
_TEXT	SEGMENT
?toggle_air_radar_active@@YGXXZ PROC			; toggle_air_radar_active, COMDAT

; 2896 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2897 : 	if (air_radar_on)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?air_radar_on@@3HA, 0
  00010	74 07		 je	 SHORT $LN2@toggle_air

; 2898 : 		deactivate_common_air_radar();

  00012	e8 00 00 00 00	 call	 ?deactivate_common_air_radar@@YGXXZ ; deactivate_common_air_radar

; 2899 : 	else

  00017	eb 05		 jmp	 SHORT $LN1@toggle_air
$LN2@toggle_air:

; 2900 : 		activate_common_air_radar();	

  00019	e8 00 00 00 00	 call	 ?activate_common_air_radar@@YGXXZ ; activate_common_air_radar
$LN1@toggle_air:

; 2901 : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?toggle_air_radar_active@@YGXXZ ENDP			; toggle_air_radar_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?deactivate_common_air_radar@@YGXXZ
_TEXT	SEGMENT
?deactivate_common_air_radar@@YGXXZ PROC		; deactivate_common_air_radar, COMDAT

; 2918 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2919 : 	air_radar_on = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar_on@@3HA, 0

; 2920 : 
; 2921 : 	air_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0

; 2922 : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?deactivate_common_air_radar@@YGXXZ ENDP		; deactivate_common_air_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?activate_common_air_radar@@YGXXZ
_TEXT	SEGMENT
?activate_common_air_radar@@YGXXZ PROC			; activate_common_air_radar, COMDAT

; 2883 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2884 : 	if (air_radar.sweep_mode == RADAR_SWEEP_MODE_SINGLE_INACTIVE)

  00009	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+40, 1
  00010	75 0a		 jne	 SHORT $LN2@activate_c

; 2885 : 	{
; 2886 : 		air_radar.sweep_mode = RADAR_SWEEP_MODE_SINGLE_ACTIVE;

  00012	c7 05 28 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+40, 2
$LN2@activate_c:

; 2887 : 	}
; 2888 : 	
; 2889 : 	ground_radar_on = FALSE;

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar_on@@3HA, 0

; 2890 : 	air_radar_on = TRUE;

  00026	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?air_radar_on@@3HA, 1

; 2891 : 
; 2892 : 	air_radar.target_locked = target_locked;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_locked@@3HA ; target_locked
  00035	a3 20 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, eax

; 2893 : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?activate_common_air_radar@@YGXXZ ENDP			; activate_common_air_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?select_previous_designated_air_radar_target@@YGXXZ
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv150 = -84						; size = 4
tv129 = -84						; size = 4
tv78 = -84						; size = 4
tv166 = -80						; size = 4
tv142 = -80						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_current_target$ = -12					; size = 4
_new_target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_designated_air_radar_target@@YGXXZ PROC ; select_previous_designated_air_radar_target, COMDAT

; 3079 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3080 : 	entity
; 3081 : 		*target,
; 3082 : 		*new_target,
; 3083 : 		*current_target;
; 3084 : 
; 3085 : 	new_target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new_target$[ebp], 0

; 3086 : 
; 3087 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00017	74 0c		 je	 SHORT $LN12@select_pre
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00023	eb 21		 jmp	 SHORT $LN13@select_pre
$LN12@select_pre:
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  0002b	83 c2 08	 add	 edx, 8
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@select_pre:
  00046	b9 01 00 00 00	 mov	 ecx, 1
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 09		 je	 SHORT $LN14@select_pre
  0004f	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00056	eb 21		 jmp	 SHORT $LN15@select_pre
$LN14@select_pre:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  0005e	83 c2 08	 add	 edx, 8
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@select_pre:
  00079	6a 26		 push	 38			; 00000026H
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00081	51		 push	 ecx
  00082	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00089	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  0008c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00093	ff d1		 call	 ecx
  00095	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 3088 : 
; 3089 : 	if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  00098	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0009c	74 7d		 je	 SHORT $LN8@select_pre
  0009e	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a2	74 0a		 je	 SHORT $LN16@select_pre
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000ac	eb 1d		 jmp	 SHORT $LN17@select_pre
$LN16@select_pre:
  000ae	68 11 0c 00 00	 push	 3089			; 00000c11H
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN17@select_pre:
  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	85 c0		 test	 eax, eax
  000d2	74 09		 je	 SHORT $LN18@select_pre
  000d4	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv129[ebp], 10 ; 0000000aH
  000db	eb 1d		 jmp	 SHORT $LN19@select_pre
$LN18@select_pre:
  000dd	68 11 0c 00 00	 push	 3089			; 00000c11H
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN19@select_pre:
  000fa	6a 0a		 push	 10			; 0000000aH
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  000ff	52		 push	 edx
  00100	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00107	8b 4d ac	 mov	 ecx, DWORD PTR tv129[ebp]
  0010a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00111	ff d2		 call	 edx
  00113	85 c0		 test	 eax, eax
  00115	0f 85 31 01 00
	00		 jne	 $LN6@select_pre
$LN8@select_pre:

; 3090 : 	{
; 3091 : 		target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00122	74 0c		 je	 SHORT $LN20@select_pre
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00129	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012b	89 4d b0	 mov	 DWORD PTR tv142[ebp], ecx
  0012e	eb 21		 jmp	 SHORT $LN21@select_pre
$LN20@select_pre:
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  00136	83 c2 0c	 add	 edx, 12			; 0000000cH
  00139	52		 push	 edx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN21@select_pre:
  00151	b9 01 00 00 00	 mov	 ecx, 1
  00156	85 c9		 test	 ecx, ecx
  00158	74 09		 je	 SHORT $LN22@select_pre
  0015a	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv150[ebp], 10 ; 0000000aH
  00161	eb 21		 jmp	 SHORT $LN23@select_pre
$LN22@select_pre:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  00169	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN23@select_pre:
  00184	6a 0a		 push	 10			; 0000000aH
  00186	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0018c	51		 push	 ecx
  0018d	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 180
  00194	8b 45 ac	 mov	 eax, DWORD PTR tv150[ebp]
  00197	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0019e	ff d1		 call	 ecx
  001a0	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 3092 : 
; 3093 : 		while (target)

  001a3	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001a7	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 3094 : 		{
; 3095 : 			if (get_selectable_air_radar_target (target))

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  001b6	85 c0		 test	 eax, eax
  001b8	74 0b		 je	 SHORT $LN9@select_pre

; 3096 : 			{
; 3097 : 				new_target = target;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3098 : 
; 3099 : 				break;

  001c0	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN9@select_pre:

; 3100 : 			}
; 3101 : 
; 3102 : 			target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001c5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001c9	74 0a		 je	 SHORT $LN24@select_pre
  001cb	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 4d b0	 mov	 DWORD PTR tv166[ebp], ecx
  001d3	eb 21		 jmp	 SHORT $LN25@select_pre
$LN24@select_pre:
  001d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  001db	83 c2 17	 add	 edx, 23			; 00000017H
  001de	52		 push	 edx
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ef	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN25@select_pre:
  001f6	b9 01 00 00 00	 mov	 ecx, 1
  001fb	85 c9		 test	 ecx, ecx
  001fd	74 09		 je	 SHORT $LN26@select_pre
  001ff	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv174[ebp], 10 ; 0000000aH
  00206	eb 21		 jmp	 SHORT $LN27@select_pre
$LN26@select_pre:
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_air_radar_target@@YGXXZ@4JA
  0020e	83 c2 17	 add	 edx, 23			; 00000017H
  00211	52		 push	 edx
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021c	50		 push	 eax
  0021d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00222	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN27@select_pre:
  00229	6a 0a		 push	 10			; 0000000aH
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0022e	51		 push	 ecx
  0022f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 180
  00236	8b 45 ac	 mov	 eax, DWORD PTR tv174[ebp]
  00239	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00240	ff d1		 call	 ecx
  00242	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3103 : 		}

  00245	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 3104 : 	}
; 3105 : 	else

  0024a	eb 3b		 jmp	 SHORT $LN7@select_pre
$LN6@select_pre:

; 3106 : 	{
; 3107 : 		target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  0024c	6a 0a		 push	 10			; 0000000aH
  0024e	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00257	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 3108 : 
; 3109 : 		while (target != current_target)

  0025a	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0025d	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00260	74 25		 je	 SHORT $LN7@select_pre

; 3110 : 		{
; 3111 : 			if (get_selectable_air_radar_target (target))

  00262	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  0026b	85 c0		 test	 eax, eax
  0026d	74 08		 je	 SHORT $LN10@select_pre

; 3112 : 			{
; 3113 : 				new_target = target;

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3114 : 
; 3115 : 				break;

  00275	eb 10		 jmp	 SHORT $LN7@select_pre
$LN10@select_pre:

; 3116 : 			}
; 3117 : 
; 3118 : 			target = get_local_entity_child_pred_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00277	6a 0a		 push	 10			; 0000000aH
  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00282	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3119 : 		}

  00285	eb d3		 jmp	 SHORT $LN4@select_pre
$LN7@select_pre:

; 3120 : 	}
; 3121 : 	set_gunship_target (new_target);

  00287	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 3122 : }

  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
?select_previous_designated_air_radar_target@@YGXXZ ENDP ; select_previous_designated_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?select_next_designated_air_radar_target@@YGXXZ
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv150 = -84						; size = 4
tv129 = -84						; size = 4
tv78 = -84						; size = 4
tv166 = -80						; size = 4
tv142 = -80						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_current_target$ = -12					; size = 4
_new_target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_designated_air_radar_target@@YGXXZ PROC	; select_next_designated_air_radar_target, COMDAT

; 3028 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 3029 : 	entity
; 3030 : 		*target,
; 3031 : 		*new_target,
; 3032 : 		*current_target;
; 3033 : 
; 3034 : 	new_target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new_target$[ebp], 0

; 3035 : 
; 3036 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00017	74 0c		 je	 SHORT $LN12@select_nex
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00023	eb 21		 jmp	 SHORT $LN13@select_nex
$LN12@select_nex:
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  0002b	83 c2 08	 add	 edx, 8
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@select_nex:
  00046	b9 01 00 00 00	 mov	 ecx, 1
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 09		 je	 SHORT $LN14@select_nex
  0004f	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00056	eb 21		 jmp	 SHORT $LN15@select_nex
$LN14@select_nex:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  0005e	83 c2 08	 add	 edx, 8
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@select_nex:
  00079	6a 26		 push	 38			; 00000026H
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00081	51		 push	 ecx
  00082	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00089	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  0008c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00093	ff d1		 call	 ecx
  00095	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 3037 : 
; 3038 : 	if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  00098	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0009c	74 7d		 je	 SHORT $LN8@select_nex
  0009e	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a2	74 0a		 je	 SHORT $LN16@select_nex
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000ac	eb 1d		 jmp	 SHORT $LN17@select_nex
$LN16@select_nex:
  000ae	68 de 0b 00 00	 push	 3038			; 00000bdeH
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN17@select_nex:
  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	85 c0		 test	 eax, eax
  000d2	74 09		 je	 SHORT $LN18@select_nex
  000d4	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv129[ebp], 10 ; 0000000aH
  000db	eb 1d		 jmp	 SHORT $LN19@select_nex
$LN18@select_nex:
  000dd	68 de 0b 00 00	 push	 3038			; 00000bdeH
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN19@select_nex:
  000fa	6a 0a		 push	 10			; 0000000aH
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  000ff	52		 push	 edx
  00100	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00107	8b 4d ac	 mov	 ecx, DWORD PTR tv129[ebp]
  0010a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00111	ff d2		 call	 edx
  00113	85 c0		 test	 eax, eax
  00115	0f 85 31 01 00
	00		 jne	 $LN6@select_nex
$LN8@select_nex:

; 3039 : 	{
; 3040 : 		target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00122	74 0c		 je	 SHORT $LN20@select_nex
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00129	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012b	89 4d b0	 mov	 DWORD PTR tv142[ebp], ecx
  0012e	eb 21		 jmp	 SHORT $LN21@select_nex
$LN20@select_nex:
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  00136	83 c2 0c	 add	 edx, 12			; 0000000cH
  00139	52		 push	 edx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN21@select_nex:
  00151	b9 01 00 00 00	 mov	 ecx, 1
  00156	85 c9		 test	 ecx, ecx
  00158	74 09		 je	 SHORT $LN22@select_nex
  0015a	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv150[ebp], 10 ; 0000000aH
  00161	eb 21		 jmp	 SHORT $LN23@select_nex
$LN22@select_nex:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  00169	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN23@select_nex:
  00184	6a 0a		 push	 10			; 0000000aH
  00186	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0018c	51		 push	 ecx
  0018d	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 180
  00194	8b 45 ac	 mov	 eax, DWORD PTR tv150[ebp]
  00197	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0019e	ff d1		 call	 ecx
  001a0	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 3041 : 
; 3042 : 		while (target)

  001a3	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001a7	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 3043 : 		{
; 3044 : 			if (get_selectable_air_radar_target (target))

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  001b6	85 c0		 test	 eax, eax
  001b8	74 0b		 je	 SHORT $LN9@select_nex

; 3045 : 			{
; 3046 : 				new_target = target;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3047 : 
; 3048 : 				break;

  001c0	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN9@select_nex:

; 3049 : 			}
; 3050 : 
; 3051 : 			target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001c5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001c9	74 0a		 je	 SHORT $LN24@select_nex
  001cb	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 4d b0	 mov	 DWORD PTR tv166[ebp], ecx
  001d3	eb 21		 jmp	 SHORT $LN25@select_nex
$LN24@select_nex:
  001d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  001db	83 c2 17	 add	 edx, 23			; 00000017H
  001de	52		 push	 edx
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ef	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN25@select_nex:
  001f6	b9 01 00 00 00	 mov	 ecx, 1
  001fb	85 c9		 test	 ecx, ecx
  001fd	74 09		 je	 SHORT $LN26@select_nex
  001ff	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv174[ebp], 10 ; 0000000aH
  00206	eb 21		 jmp	 SHORT $LN27@select_nex
$LN26@select_nex:
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_air_radar_target@@YGXXZ@4JA
  0020e	83 c2 17	 add	 edx, 23			; 00000017H
  00211	52		 push	 edx
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021c	50		 push	 eax
  0021d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00222	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN27@select_nex:
  00229	6a 0a		 push	 10			; 0000000aH
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0022e	51		 push	 ecx
  0022f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 180
  00236	8b 45 ac	 mov	 eax, DWORD PTR tv174[ebp]
  00239	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00240	ff d1		 call	 ecx
  00242	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3052 : 		}

  00245	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 3053 : 	}
; 3054 : 	else

  0024a	eb 3b		 jmp	 SHORT $LN7@select_nex
$LN6@select_nex:

; 3055 : 	{
; 3056 : 		target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  0024c	6a 0a		 push	 10			; 0000000aH
  0024e	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00257	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 3057 : 
; 3058 : 		while (target != current_target)

  0025a	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0025d	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00260	74 25		 je	 SHORT $LN7@select_nex

; 3059 : 		{
; 3060 : 			if (get_selectable_air_radar_target (target))

  00262	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  0026b	85 c0		 test	 eax, eax
  0026d	74 08		 je	 SHORT $LN10@select_nex

; 3061 : 			{
; 3062 : 				new_target = target;

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3063 : 
; 3064 : 				break;

  00275	eb 10		 jmp	 SHORT $LN7@select_nex
$LN10@select_nex:

; 3065 : 			}
; 3066 : 
; 3067 : 			target = get_local_entity_child_succ_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00277	6a 0a		 push	 10			; 0000000aH
  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00282	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3068 : 		}

  00285	eb d3		 jmp	 SHORT $LN4@select_nex
$LN7@select_nex:

; 3069 : 	}
; 3070 : 
; 3071 : 	set_gunship_target (new_target);

  00287	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 3072 : }

  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
?select_next_designated_air_radar_target@@YGXXZ ENDP	; select_next_designated_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?update_common_air_radar@@YGXXZ
_TEXT	SEGMENT
tv674 = -208						; size = 4
tv651 = -208						; size = 4
tv631 = -208						; size = 4
tv584 = -208						; size = 4
tv561 = -208						; size = 4
tv537 = -208						; size = 4
tv515 = -208						; size = 4
tv495 = -208						; size = 4
tv474 = -208						; size = 4
tv433 = -208						; size = 4
tv410 = -208						; size = 4
tv389 = -208						; size = 4
tv338 = -208						; size = 4
tv287 = -208						; size = 4
tv136 = -208						; size = 4
tv78 = -208						; size = 4
tv760 = -204						; size = 4
tv750 = -204						; size = 4
tv742 = -204						; size = 4
tv732 = -204						; size = 4
tv667 = -204						; size = 4
tv643 = -204						; size = 4
tv623 = -204						; size = 4
tv576 = -204						; size = 4
tv553 = -204						; size = 4
tv529 = -204						; size = 4
tv507 = -204						; size = 4
tv487 = -204						; size = 4
tv467 = -204						; size = 4
tv425 = -204						; size = 4
tv402 = -204						; size = 4
tv350 = -204						; size = 4
tv331 = -204						; size = 4
tv279 = -204						; size = 4
tv272 = -204						; size = 4
tv128 = -204						; size = 4
tv70 = -204						; size = 4
_cw_sweep_end_position$ = -136				; size = 12
_cw_sweep_start_position$ = -124			; size = 12
_target_position$ = -112				; size = 4
_source_position$ = -108				; size = 4
_sector$ = -104						; size = 4
_new_target$ = -100					; size = 4
_old_target$ = -96					; size = 4
_target$ = -92						; size = 4
_source$ = -88						; size = 4
_radar_stealth_factor$ = -84				; size = 4
_sqr_target_range$ = -80				; size = 4
_sqr_scan_range$ = -76					; size = 4
_z_max$ = -72						; size = 4
_x_max$ = -68						; size = 4
_z_min$ = -64						; size = 4
_x_min$ = -60						; size = 4
_dz$ = -56						; size = 4
_dx$ = -52						; size = 4
_bearing$ = -48						; size = 4
_heading$ = -44						; size = 4
_cw_sweep_end_direction$ = -40				; size = 4
_cw_sweep_start_direction$ = -36			; size = 4
_cw_sweep_end_offset$ = -32				; size = 4
_cw_sweep_start_offset$ = -28				; size = 4
_z_sec_max$ = -24					; size = 4
_x_sec_max$ = -20					; size = 4
_z_sec_min$ = -16					; size = 4
_x_sec_min$ = -12					; size = 4
_z_sec$ = -8						; size = 4
_x_sec$ = -4						; size = 4
?update_common_air_radar@@YGXXZ PROC			; update_common_air_radar, COMDAT

; 2553 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2554 : 	int
; 2555 : 		x_sec,
; 2556 : 		z_sec,
; 2557 : 		x_sec_min,
; 2558 : 		z_sec_min,
; 2559 : 		x_sec_max,
; 2560 : 		z_sec_max;
; 2561 : 
; 2562 : 	float
; 2563 : 		cw_sweep_start_offset,
; 2564 : 		cw_sweep_end_offset,
; 2565 : 		cw_sweep_start_direction,
; 2566 : 		cw_sweep_end_direction,
; 2567 : 		heading,
; 2568 : 		bearing,
; 2569 : 		dx,
; 2570 : 		dz,
; 2571 : 		x_min,
; 2572 : 		z_min,
; 2573 : 		x_max,
; 2574 : 		z_max,
; 2575 : 		sqr_scan_range,
; 2576 : 		sqr_target_range,
; 2577 : 		radar_stealth_factor;
; 2578 : 
; 2579 : 	entity
; 2580 : 		*source,
; 2581 : 		*target,
; 2582 : 		*old_target,
; 2583 : 		*new_target,
; 2584 : 		*sector;
; 2585 : 
; 2586 : 	vec3d
; 2587 : 		*source_position,
; 2588 : 		*target_position,
; 2589 : 		cw_sweep_start_position,
; 2590 : 		cw_sweep_end_position;
; 2591 : 
; 2592 : 	////////////////////////////////////////
; 2593 : 	//
; 2594 : 	// get source data
; 2595 : 	//
; 2596 : 	////////////////////////////////////////
; 2597 : 
; 2598 : 	source = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 a8	 mov	 DWORD PTR _source$[ebp], eax

; 2599 : 
; 2600 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00014	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  00018	74 0d		 je	 SHORT $LN44@update_com
  0001a	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00025	eb 24		 jmp	 SHORT $LN45@update_com
$LN44@update_com:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  0002d	83 c2 2f	 add	 edx, 47			; 0000002fH
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN45@update_com:
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 0c		 je	 SHORT $LN46@update_com
  00054	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  0005e	eb 24		 jmp	 SHORT $LN47@update_com
$LN46@update_com:
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00066	83 c2 2f	 add	 edx, 47			; 0000002fH
  00069	52		 push	 edx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007a	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN47@update_com:
  00084	6a 08		 push	 8
  00086	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  00089	51		 push	 ecx
  0008a	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  00091	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00097	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0009e	ff d1		 call	 ecx
  000a0	89 45 94	 mov	 DWORD PTR _source_position$[ebp], eax

; 2601 : 
; 2602 : 	////////////////////////////////////////
; 2603 : 	//
; 2604 : 	// get radar sweep start and end
; 2605 : 	//
; 2606 : 	////////////////////////////////////////
; 2607 : 
; 2608 : 	if (air_radar.sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE && air_radar_is_active())

  000a3	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+40, 1
  000aa	0f 84 b4 0f 00
	00		 je	 $LN41@update_com
  000b0	e8 00 00 00 00	 call	 ?air_radar_is_active@@YGHXZ ; air_radar_is_active
  000b5	85 c0		 test	 eax, eax
  000b7	0f 84 a7 0f 00
	00		 je	 $LN41@update_com

; 2609 : 	{
; 2610 : 		update_radar_sweep (&air_radar, &cw_sweep_start_offset, &cw_sweep_end_offset);

  000bd	8d 45 e0	 lea	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  000c0	50		 push	 eax
  000c1	8d 4d e4	 lea	 ecx, DWORD PTR _cw_sweep_start_offset$[ebp]
  000c4	51		 push	 ecx
  000c5	68 00 00 00 00	 push	 OFFSET ?air_radar@@3URADAR_PARAMS@@A ; air_radar
  000ca	e8 00 00 00 00	 call	 ?update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z ; update_radar_sweep

; 2611 : 
; 2612 : 		//
; 2613 : 		// note: it is possible for sweep_mode to have switched to RADAR_SWEEP_MODE_SINGLE_INACTIVE after update_radar_sweep
; 2614 : 		//
; 2615 : 
; 2616 : 		heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  000cf	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  000d3	74 0d		 je	 SHORT $LN48@update_com
  000d5	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  000d8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000da	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv128[ebp], ecx
  000e0	eb 24		 jmp	 SHORT $LN49@update_com
$LN48@update_com:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  000e8	83 c2 3f	 add	 edx, 63			; 0000003fH
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv128[ebp], 0
$LN49@update_com:
  00106	b9 01 00 00 00	 mov	 ecx, 1
  0010b	85 c9		 test	 ecx, ecx
  0010d	74 0c		 je	 SHORT $LN50@update_com
  0010f	c7 85 30 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv136[ebp], 52 ; 00000034H
  00119	eb 24		 jmp	 SHORT $LN51@update_com
$LN50@update_com:
  0011b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00121	83 c2 3f	 add	 edx, 63			; 0000003fH
  00124	52		 push	 edx
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN51@update_com:
  0013f	6a 34		 push	 52			; 00000034H
  00141	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  00144	51		 push	 ecx
  00145	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv128[ebp], 700
  0014f	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  00155	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0015c	ff d1		 call	 ecx
  0015e	d9 5d d4	 fstp	 DWORD PTR _heading$[ebp]

; 2617 : 
; 2618 : 		cw_sweep_start_direction = heading + air_radar.scan_datum + cw_sweep_start_offset;

  00161	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00166	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+4
  0016e	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _cw_sweep_start_offset$[ebp]
  00173	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0

; 2619 : 
; 2620 : 		if (cw_sweep_start_direction > rad (180.0))

  00178	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0017d	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00185	76 18		 jbe	 SHORT $LN11@update_com

; 2621 : 		{
; 2622 : 			cw_sweep_start_direction -= rad (360.0);

  00187	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0018c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00194	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00198	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
  0019d	eb 29		 jmp	 SHORT $LN13@update_com
$LN11@update_com:

; 2623 : 		}
; 2624 : 		else if (cw_sweep_start_direction < rad (-180.0))

  0019f	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  001a4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  001ac	66 0f 2f c8	 comisd	 xmm1, xmm0
  001b0	76 16		 jbe	 SHORT $LN13@update_com

; 2625 : 		{
; 2626 : 			cw_sweep_start_direction += rad (360.0);

  001b2	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  001b7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  001bf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c3	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
$LN13@update_com:

; 2627 : 		}
; 2628 : 
; 2629 : 		cw_sweep_end_direction = heading + air_radar.scan_datum + cw_sweep_end_offset;

  001c8	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001cd	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+4
  001d5	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _cw_sweep_end_offset$[ebp]
  001da	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0

; 2630 : 
; 2631 : 		if (cw_sweep_end_direction > rad (180.0))

  001df	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  001e4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  001ec	76 18		 jbe	 SHORT $LN14@update_com

; 2632 : 		{
; 2633 : 			cw_sweep_end_direction -= rad (360.0);

  001ee	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  001f3	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  001fb	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001ff	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
  00204	eb 29		 jmp	 SHORT $LN16@update_com
$LN14@update_com:

; 2634 : 		}
; 2635 : 		else if (cw_sweep_end_direction < rad (-180.0))

  00206	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0020b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00213	66 0f 2f c8	 comisd	 xmm1, xmm0
  00217	76 16		 jbe	 SHORT $LN16@update_com

; 2636 : 		{
; 2637 : 			cw_sweep_end_direction += rad (360.0);

  00219	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0021e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00226	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022a	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
$LN16@update_com:

; 2638 : 		}
; 2639 : 
; 2640 : 		////////////////////////////////////////
; 2641 : 		//
; 2642 : 		// get sector scan area
; 2643 : 		//
; 2644 : 		////////////////////////////////////////
; 2645 : 
; 2646 : 		cw_sweep_start_position.x = source_position->x + (sin (cw_sweep_start_direction) * air_radar.scan_range);

  0022f	51		 push	 ecx
  00230	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00235	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0023f	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv732[ebp]
  00245	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv732[ebp]
  0024d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  00255	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00258	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0025c	f3 0f 11 45 84	 movss	 DWORD PTR _cw_sweep_start_position$[ebp], xmm0

; 2647 : 		cw_sweep_start_position.y = source_position->y;

  00261	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00264	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00269	f3 0f 11 45 88	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+4], xmm0

; 2648 : 		cw_sweep_start_position.z = source_position->z + (cos (cw_sweep_start_direction) * air_radar.scan_range);

  0026e	51		 push	 ecx
  0026f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00274	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00279	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0027e	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv742[ebp]
  00284	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv742[ebp]
  0028c	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  00294	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00297	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0029c	f3 0f 11 45 8c	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+8], xmm0

; 2649 : 
; 2650 : 		cw_sweep_end_position.x = source_position->x + (sin (cw_sweep_end_direction) * air_radar.scan_range);

  002a1	51		 push	 ecx
  002a2	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ac	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  002b1	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv750[ebp]
  002b7	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv750[ebp]
  002bf	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  002c7	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  002ca	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  002ce	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _cw_sweep_end_position$[ebp], xmm0

; 2651 : 		cw_sweep_end_position.y = source_position->y;

  002d6	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  002d9	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002de	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+4], xmm0

; 2652 : 		cw_sweep_end_position.z = source_position->z + (cos (cw_sweep_end_direction) * air_radar.scan_range);

  002e6	51		 push	 ecx
  002e7	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f1	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002f6	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv760[ebp]
  002fc	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv760[ebp]
  00304	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  0030c	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  0030f	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00314	f3 0f 11 45 80	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+8], xmm0

; 2653 : 
; 2654 : 		//
; 2655 : 		// draw sweep
; 2656 : 		//
; 2657 : 
; 2658 : 		if (draw_radar_sweep && (get_view_mode () == VIEW_MODE_EXTERNAL))

  00319	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_sweep@@3HA, 0 ; draw_radar_sweep
  00320	74 63		 je	 SHORT $LN17@update_com
  00322	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  00329	75 5a		 jne	 SHORT $LN17@update_com

; 2659 : 		{
; 2660 : 			create_debug_3d_line (source_position, &cw_sweep_start_position, sys_col_green, 0.0);

  0032b	51		 push	 ecx
  0032c	0f 57 c0	 xorps	 xmm0, xmm0
  0032f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_green@@3UREAL_COLOUR@@A ; sys_col_green
  00339	50		 push	 eax
  0033a	8d 4d 84	 lea	 ecx, DWORD PTR _cw_sweep_start_position$[ebp]
  0033d	51		 push	 ecx
  0033e	8b 55 94	 mov	 edx, DWORD PTR _source_position$[ebp]
  00341	52		 push	 edx
  00342	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 2661 : 
; 2662 : 			create_debug_3d_line (source_position, &cw_sweep_end_position, sys_col_red, 0.0);

  00347	51		 push	 ecx
  00348	0f 57 c0	 xorps	 xmm0, xmm0
  0034b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00350	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00355	50		 push	 eax
  00356	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0035c	51		 push	 ecx
  0035d	8b 55 94	 mov	 edx, DWORD PTR _source_position$[ebp]
  00360	52		 push	 edx
  00361	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 2663 : 
; 2664 : 			create_debug_3d_line (&cw_sweep_start_position, &cw_sweep_end_position, sys_col_white, 0.0);

  00366	51		 push	 ecx
  00367	0f 57 c0	 xorps	 xmm0, xmm0
  0036a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  00374	50		 push	 eax
  00375	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0037b	51		 push	 ecx
  0037c	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  0037f	52		 push	 edx
  00380	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line
$LN17@update_com:

; 2665 : 		}
; 2666 : 
; 2667 : 		//
; 2668 : 		// sector scan min
; 2669 : 		//
; 2670 : 
; 2671 : 		x_min = min (min (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  00385	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00388	50		 push	 eax
  00389	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0038f	51		 push	 ecx
  00390	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  00393	52		 push	 edx
  00394	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00399	50		 push	 eax
  0039a	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0039f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003a3	f3 0f 11 45 c4	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 2672 : 		z_min = min (min (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  003a8	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  003ab	83 c0 08	 add	 eax, 8
  003ae	50		 push	 eax
  003af	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  003b2	51		 push	 ecx
  003b3	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  003b6	52		 push	 edx
  003b7	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003bc	50		 push	 eax
  003bd	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003c2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003c6	f3 0f 11 45 c0	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 2673 : 
; 2674 : 		get_x_sector (x_sec_min, x_min);

  003cb	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  003ce	50		 push	 eax
  003cf	51		 push	 ecx
  003d0	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  003d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003da	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  003df	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  003e2	99		 cdq
  003e3	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  003e9	89 45 f4	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 2675 : 		get_z_sector (z_sec_min, z_min);

  003ec	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  003ef	50		 push	 eax
  003f0	51		 push	 ecx
  003f1	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  003f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fb	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00400	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  00403	99		 cdq
  00404	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0040a	89 45 f0	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 2676 : 
; 2677 : 		x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  0040d	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  00412	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00415	50		 push	 eax
  00416	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0041b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041d	89 4d f4	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 2678 : 		z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  00420	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  00425	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  00428	50		 push	 eax
  00429	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0042e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00430	89 4d f0	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 2679 : 
; 2680 : 		//
; 2681 : 		// sector scan max
; 2682 : 		//
; 2683 : 
; 2684 : 		x_max = max (max (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  00433	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00436	50		 push	 eax
  00437	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0043d	51		 push	 ecx
  0043e	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  00441	52		 push	 edx
  00442	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00447	50		 push	 eax
  00448	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0044d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00451	f3 0f 11 45 bc	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 2685 : 		z_max = max (max (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  00456	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00459	83 c0 08	 add	 eax, 8
  0045c	50		 push	 eax
  0045d	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  00460	51		 push	 ecx
  00461	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  00464	52		 push	 edx
  00465	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0046a	50		 push	 eax
  0046b	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00470	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00474	f3 0f 11 45 b8	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 2686 : 
; 2687 : 		get_x_sector (x_sec_max, x_max);

  00479	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  0047c	50		 push	 eax
  0047d	51		 push	 ecx
  0047e	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00483	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00488	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0048d	8b 45 ec	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  00490	99		 cdq
  00491	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00497	89 45 ec	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 2688 : 		get_z_sector (z_sec_max, z_max);

  0049a	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  0049d	50		 push	 eax
  0049e	51		 push	 ecx
  0049f	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  004a4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a9	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004ae	8b 45 e8	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  004b1	99		 cdq
  004b2	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  004b8	89 45 e8	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 2689 : 
; 2690 : 		x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  004bb	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  004c0	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  004c3	50		 push	 eax
  004c4	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  004c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cb	89 4d ec	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 2691 : 		z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  004ce	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  004d3	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  004d6	50		 push	 eax
  004d7	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  004dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  004de	89 4d e8	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 2692 : 
; 2693 : 		////////////////////////////////////////
; 2694 : 		//
; 2695 : 		// sector scan
; 2696 : 		//
; 2697 : 		////////////////////////////////////////
; 2698 : 
; 2699 : 		sqr_scan_range = air_radar.scan_range * air_radar.scan_range;

  004e1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  004e9	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A
  004f1	f3 0f 11 45 b4	 movss	 DWORD PTR _sqr_scan_range$[ebp], xmm0

; 2700 : 
; 2701 : 		for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  004f6	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  004f9	89 45 f8	 mov	 DWORD PTR _z_sec$[ebp], eax
  004fc	eb 09		 jmp	 SHORT $LN4@update_com
$LN2@update_com:
  004fe	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00501	83 c0 01	 add	 eax, 1
  00504	89 45 f8	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@update_com:
  00507	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0050a	3b 45 e8	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  0050d	0f 8f 89 09 00
	00		 jg	 $LN3@update_com

; 2702 : 		{
; 2703 : 			for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  00513	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  00516	89 45 fc	 mov	 DWORD PTR _x_sec$[ebp], eax
  00519	eb 09		 jmp	 SHORT $LN7@update_com
$LN5@update_com:
  0051b	8b 45 fc	 mov	 eax, DWORD PTR _x_sec$[ebp]
  0051e	83 c0 01	 add	 eax, 1
  00521	89 45 fc	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@update_com:
  00524	8b 45 fc	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00527	3b 45 ec	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  0052a	0f 8f 67 09 00
	00		 jg	 $LN6@update_com

; 2704 : 			{
; 2705 : 				sector = get_local_raw_sector_entity (x_sec, z_sec);

  00530	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00533	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0053a	03 45 fc	 add	 eax, DWORD PTR _x_sec$[ebp]
  0053d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00543	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00547	74 1d		 je	 SHORT $LN52@update_com
  00549	8b 55 f8	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0054c	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00553	03 55 fc	 add	 edx, DWORD PTR _x_sec$[ebp]
  00556	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0055b	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0055e	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv272[ebp], ecx
  00564	eb 27		 jmp	 SHORT $LN53@update_com
$LN52@update_com:
  00566	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  0056c	81 c2 98 00 00
	00		 add	 edx, 152		; 00000098H
  00572	52		 push	 edx
  00573	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00578	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0057d	50		 push	 eax
  0057e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00583	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv272[ebp], 0
$LN53@update_com:
  0058d	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv272[ebp]
  00593	89 4d 98	 mov	 DWORD PTR _sector$[ebp], ecx

; 2706 : 
; 2707 : 				target = get_local_entity_first_child (sector, LIST_TYPE_SECTOR);

  00596	83 7d 98 00	 cmp	 DWORD PTR _sector$[ebp], 0
  0059a	74 0d		 je	 SHORT $LN54@update_com
  0059c	8b 45 98	 mov	 eax, DWORD PTR _sector$[ebp]
  0059f	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a1	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv279[ebp], ecx
  005a7	eb 27		 jmp	 SHORT $LN55@update_com
$LN54@update_com:
  005a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  005af	81 c2 9a 00 00
	00		 add	 edx, 154		; 0000009aH
  005b5	52		 push	 edx
  005b6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c0	50		 push	 eax
  005c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c6	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv279[ebp], 0
$LN55@update_com:
  005d0	b9 01 00 00 00	 mov	 ecx, 1
  005d5	85 c9		 test	 ecx, ecx
  005d7	74 0c		 je	 SHORT $LN56@update_com
  005d9	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv287[ebp], 33 ; 00000021H
  005e3	eb 27		 jmp	 SHORT $LN57@update_com
$LN56@update_com:
  005e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  005eb	81 c2 9a 00 00
	00		 add	 edx, 154		; 0000009aH
  005f1	52		 push	 edx
  005f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005fc	50		 push	 eax
  005fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00602	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv287[ebp], 0
$LN57@update_com:
  0060c	6a 21		 push	 33			; 00000021H
  0060e	8b 4d 98	 mov	 ecx, DWORD PTR _sector$[ebp]
  00611	51		 push	 ecx
  00612	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv279[ebp], 180
  0061c	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv287[ebp]
  00622	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00629	ff d1		 call	 ecx
  0062b	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax
$LN8@update_com:

; 2708 : 
; 2709 : 				while (target)

  0062e	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00632	0f 84 5a 08 00
	00		 je	 $LN9@update_com

; 2710 : 				{
; 2711 : 					if (get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) == TARGET_TYPE_AIR)

  00638	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0063c	74 0d		 je	 SHORT $LN58@update_com
  0063e	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00641	8b 08		 mov	 ecx, DWORD PTR [eax]
  00643	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv331[ebp], ecx
  00649	eb 20		 jmp	 SHORT $LN59@update_com
$LN58@update_com:
  0064b	68 97 0a 00 00	 push	 2711			; 00000a97H
  00650	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00655	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0065b	52		 push	 edx
  0065c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00661	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv331[ebp], 0
$LN59@update_com:
  0066b	b8 01 00 00 00	 mov	 eax, 1
  00670	85 c0		 test	 eax, eax
  00672	74 0c		 je	 SHORT $LN60@update_com
  00674	c7 85 30 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv338[ebp], 214 ; 000000d6H
  0067e	eb 20		 jmp	 SHORT $LN61@update_com
$LN60@update_com:
  00680	68 97 0a 00 00	 push	 2711			; 00000a97H
  00685	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0068a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00690	51		 push	 ecx
  00691	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00696	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv338[ebp], 0
$LN61@update_com:
  006a0	68 d6 00 00 00	 push	 214			; 000000d6H
  006a5	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  006a8	52		 push	 edx
  006a9	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv331[ebp], 1116
  006b3	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv338[ebp]
  006b9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006c0	ff d2		 call	 edx
  006c2	83 f8 02	 cmp	 eax, 2
  006c5	0f 85 2a 07 00
	00		 jne	 $LN32@update_com

; 2712 : 					{
; 2713 : 						if (get_local_entity_parent (target, LIST_TYPE_GUNSHIP_TARGET))

  006cb	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  006cf	74 0d		 je	 SHORT $LN62@update_com
  006d1	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  006d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  006d6	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv350[ebp], ecx
  006dc	eb 20		 jmp	 SHORT $LN63@update_com
$LN62@update_com:
  006de	68 99 0a 00 00	 push	 2713			; 00000a99H
  006e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006ee	52		 push	 edx
  006ef	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f4	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv350[ebp], 0
$LN63@update_com:
  006fe	b8 01 00 00 00	 mov	 eax, 1
  00703	85 c0		 test	 eax, eax
  00705	74 0c		 je	 SHORT $LN64@update_com
  00707	c7 85 30 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv389[ebp], 18 ; 00000012H
  00711	eb 20		 jmp	 SHORT $LN65@update_com
$LN64@update_com:
  00713	68 99 0a 00 00	 push	 2713			; 00000a99H
  00718	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0071d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00723	51		 push	 ecx
  00724	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00729	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv389[ebp], 0
$LN65@update_com:
  00733	6a 12		 push	 18			; 00000012H
  00735	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00738	52		 push	 edx
  00739	69 85 34 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv350[ebp], 180
  00743	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv389[ebp]
  00749	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00750	ff d2		 call	 edx
  00752	85 c0		 test	 eax, eax
  00754	0f 84 76 04 00
	00		 je	 $LN19@update_com

; 2714 : 						{
; 2715 : 							////////////////////////////////////////
; 2716 : 							//
; 2717 : 							// target already on target list
; 2718 : 							//
; 2719 : 							////////////////////////////////////////
; 2720 : 
; 2721 : 							//
; 2722 : 							// only update target info if the target is within range, sweep segment and los is clear
; 2723 : 							//
; 2724 : 
; 2725 : 							target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  0075a	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0075e	74 0d		 je	 SHORT $LN66@update_com
  00760	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00763	8b 08		 mov	 ecx, DWORD PTR [eax]
  00765	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv402[ebp], ecx
  0076b	eb 27		 jmp	 SHORT $LN67@update_com
$LN66@update_com:
  0076d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00773	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  00779	52		 push	 edx
  0077a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0077f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00784	50		 push	 eax
  00785	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078a	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv402[ebp], 0
$LN67@update_com:
  00794	b9 01 00 00 00	 mov	 ecx, 1
  00799	85 c9		 test	 ecx, ecx
  0079b	74 0c		 je	 SHORT $LN68@update_com
  0079d	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv410[ebp], 8
  007a7	eb 27		 jmp	 SHORT $LN69@update_com
$LN68@update_com:
  007a9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  007af	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  007b5	52		 push	 edx
  007b6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  007c0	50		 push	 eax
  007c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007c6	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv410[ebp], 0
$LN69@update_com:
  007d0	6a 08		 push	 8
  007d2	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  007d5	51		 push	 ecx
  007d6	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv402[ebp], 96
  007dd	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv410[ebp]
  007e3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  007ea	ff d1		 call	 ecx
  007ec	89 45 90	 mov	 DWORD PTR _target_position$[ebp], eax

; 2726 : 
; 2727 : 							sqr_target_range = get_sqr_3d_range (source_position, target_position);

  007ef	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  007f2	50		 push	 eax
  007f3	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  007f6	51		 push	 ecx
  007f7	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  007fc	d9 5d b0	 fstp	 DWORD PTR _sqr_target_range$[ebp]

; 2728 : 
; 2729 : 							radar_stealth_factor = get_local_entity_float_value (target, FLOAT_TYPE_RADAR_STEALTH_FACTOR);

  007ff	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00803	74 0d		 je	 SHORT $LN70@update_com
  00805	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00808	8b 08		 mov	 ecx, DWORD PTR [eax]
  0080a	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv425[ebp], ecx
  00810	eb 27		 jmp	 SHORT $LN71@update_com
$LN70@update_com:
  00812	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00818	81 c2 b0 00 00
	00		 add	 edx, 176		; 000000b0H
  0081e	52		 push	 edx
  0081f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00824	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00829	50		 push	 eax
  0082a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0082f	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN71@update_com:
  00839	b9 01 00 00 00	 mov	 ecx, 1
  0083e	85 c9		 test	 ecx, ecx
  00840	74 0c		 je	 SHORT $LN72@update_com
  00842	c7 85 30 ff ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv433[ebp], 106 ; 0000006aH
  0084c	eb 27		 jmp	 SHORT $LN73@update_com
$LN72@update_com:
  0084e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00854	81 c2 b0 00 00
	00		 add	 edx, 176		; 000000b0H
  0085a	52		 push	 edx
  0085b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00860	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00865	50		 push	 eax
  00866	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0086b	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv433[ebp], 0
$LN73@update_com:
  00875	6a 6a		 push	 106			; 0000006aH
  00877	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  0087a	51		 push	 ecx
  0087b	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv425[ebp], 700
  00885	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv433[ebp]
  0088b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00892	ff d1		 call	 ecx
  00894	d9 5d ac	 fstp	 DWORD PTR _radar_stealth_factor$[ebp]

; 2730 : 
; 2731 : 							if (radar_stealth_factor < NO_RADAR_STEALTH_FACTOR)

  00897	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0089f	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  008a3	76 18		 jbe	 SHORT $LN21@update_com

; 2732 : 							{
; 2733 : 								sqr_target_range /= radar_stealth_factor * radar_stealth_factor;

  008a5	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  008aa	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  008af	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _sqr_target_range$[ebp]
  008b4	f3 0f 5e c8	 divss	 xmm1, xmm0
  008b8	f3 0f 11 4d b0	 movss	 DWORD PTR _sqr_target_range$[ebp], xmm1
$LN21@update_com:

; 2734 : 							}
; 2735 : 
; 2736 : 							if (sqr_target_range <= sqr_scan_range)

  008bd	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _sqr_scan_range$[ebp]
  008c2	0f 2f 45 b0	 comiss	 xmm0, DWORD PTR _sqr_target_range$[ebp]
  008c6	0f 82 ff 02 00
	00		 jb	 $LN25@update_com

; 2737 : 							{
; 2738 : 								dx = target_position->x - source_position->x;

  008cc	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  008cf	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  008d2	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008d6	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  008da	f3 0f 11 45 cc	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2739 : 								dz = target_position->z - source_position->z;

  008df	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  008e2	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  008e5	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  008ea	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  008ef	f3 0f 11 45 c8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2740 : 
; 2741 : 								bearing = atan2 (dx, dz);

  008f4	51		 push	 ecx
  008f5	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dz$[ebp]
  008fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008ff	51		 push	 ecx
  00900	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00905	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0090a	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0090f	d9 5d d0	 fstp	 DWORD PTR _bearing$[ebp]

; 2742 : 
; 2743 : 								if (check_bearing_within_cw_sweep_segment (bearing, cw_sweep_start_direction, cw_sweep_end_direction))

  00912	51		 push	 ecx
  00913	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00918	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0091d	51		 push	 ecx
  0091e	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00923	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00928	51		 push	 ecx
  00929	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  0092e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00933	e8 00 00 00 00	 call	 ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
  00938	85 c0		 test	 eax, eax
  0093a	0f 84 8b 02 00
	00		 je	 $LN25@update_com

; 2744 : 								{
; 2745 : 									if (get_los_clear (target, source_position, target_position))

  00940	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00943	50		 push	 eax
  00944	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00947	51		 push	 ecx
  00948	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  0094b	52		 push	 edx
  0094c	e8 00 00 00 00	 call	 ?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_los_clear
  00951	85 c0		 test	 eax, eax
  00953	0f 84 db 01 00
	00		 je	 $LN24@update_com

; 2746 : 									{
; 2747 : 										if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  00959	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0095d	74 0d		 je	 SHORT $LN74@update_com
  0095f	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00962	8b 08		 mov	 ecx, DWORD PTR [eax]
  00964	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv467[ebp], ecx
  0096a	eb 20		 jmp	 SHORT $LN75@update_com
$LN74@update_com:
  0096c	68 bb 0a 00 00	 push	 2747			; 00000abbH
  00971	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00976	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0097c	52		 push	 edx
  0097d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00982	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv467[ebp], 0
$LN75@update_com:
  0098c	b8 01 00 00 00	 mov	 eax, 1
  00991	85 c0		 test	 eax, eax
  00993	74 0c		 je	 SHORT $LN76@update_com
  00995	c7 85 30 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv474[ebp], 7
  0099f	eb 20		 jmp	 SHORT $LN77@update_com
$LN76@update_com:
  009a1	68 bb 0a 00 00	 push	 2747			; 00000abbH
  009a6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009b1	51		 push	 ecx
  009b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009b7	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv474[ebp], 0
$LN77@update_com:
  009c1	6a 07		 push	 7
  009c3	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  009c6	52		 push	 edx
  009c7	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv467[ebp], 1116
  009d1	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv474[ebp]
  009d7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  009de	ff d2		 call	 edx
  009e0	85 c0		 test	 eax, eax
  009e2	0f 84 3c 01 00
	00		 je	 $LN26@update_com

; 2748 : 										{
; 2749 : 											set_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR, TRUE);

  009e8	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  009ec	74 0d		 je	 SHORT $LN78@update_com
  009ee	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  009f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  009f3	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv487[ebp], ecx
  009f9	eb 27		 jmp	 SHORT $LN79@update_com
$LN78@update_com:
  009fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00a01	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  00a07	52		 push	 edx
  00a08	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a12	50		 push	 eax
  00a13	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a18	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv487[ebp], 0
$LN79@update_com:
  00a22	b9 01 00 00 00	 mov	 ecx, 1
  00a27	85 c9		 test	 ecx, ecx
  00a29	74 0c		 je	 SHORT $LN80@update_com
  00a2b	c7 85 30 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv495[ebp], 80 ; 00000050H
  00a35	eb 27		 jmp	 SHORT $LN81@update_com
$LN80@update_com:
  00a37	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00a3d	81 c2 c4 00 00
	00		 add	 edx, 196		; 000000c4H
  00a43	52		 push	 edx
  00a44	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a49	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a4e	50		 push	 eax
  00a4f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a54	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv495[ebp], 0
$LN81@update_com:
  00a5e	6a 01		 push	 1
  00a60	6a 50		 push	 80			; 00000050H
  00a62	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00a65	51		 push	 ecx
  00a66	69 95 34 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv487[ebp], 1116
  00a70	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv495[ebp]
  00a76	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00a7d	ff d1		 call	 ecx

; 2750 : 
; 2751 : 											set_local_entity_float_value (target, FLOAT_TYPE_AIR_RADAR_CONTACT_TIMEOUT, AIR_RADAR_CONTACT_TIMEOUT);

  00a7f	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a83	74 0d		 je	 SHORT $LN82@update_com
  00a85	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00a88	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a8a	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv507[ebp], ecx
  00a90	eb 27		 jmp	 SHORT $LN83@update_com
$LN82@update_com:
  00a92	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00a98	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  00a9e	52		 push	 edx
  00a9f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00aa9	50		 push	 eax
  00aaa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aaf	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv507[ebp], 0
$LN83@update_com:
  00ab9	b9 01 00 00 00	 mov	 ecx, 1
  00abe	85 c9		 test	 ecx, ecx
  00ac0	74 0c		 je	 SHORT $LN84@update_com
  00ac2	c7 85 30 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv515[ebp], 2
  00acc	eb 27		 jmp	 SHORT $LN85@update_com
$LN84@update_com:
  00ace	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00ad4	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  00ada	52		 push	 edx
  00adb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ae0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00ae5	50		 push	 eax
  00ae6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aeb	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv515[ebp], 0
$LN85@update_com:
  00af5	51		 push	 ecx
  00af6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00afe	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b03	6a 02		 push	 2
  00b05	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00b08	51		 push	 ecx
  00b09	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv507[ebp], 700
  00b13	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv515[ebp]
  00b19	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00b20	ff d1		 call	 ecx

; 2752 : 										}
; 2753 : 										else

  00b22	eb 0b		 jmp	 SHORT $LN27@update_com
$LN26@update_com:

; 2754 : 										{
; 2755 : 											delete_local_entity_from_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET);

  00b24	6a 12		 push	 18			; 00000012H
  00b26	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00b29	50		 push	 eax
  00b2a	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN27@update_com:

; 2756 : 										}
; 2757 : 									}
; 2758 : 									else

  00b2f	e9 97 00 00 00	 jmp	 $LN25@update_com
$LN24@update_com:

; 2759 : 									{
; 2760 : 										set_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR, FALSE);

  00b34	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b38	74 0d		 je	 SHORT $LN86@update_com
  00b3a	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00b3d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b3f	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv529[ebp], ecx
  00b45	eb 27		 jmp	 SHORT $LN87@update_com
$LN86@update_com:
  00b47	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00b4d	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  00b53	52		 push	 edx
  00b54	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b59	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b5e	50		 push	 eax
  00b5f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b64	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv529[ebp], 0
$LN87@update_com:
  00b6e	b9 01 00 00 00	 mov	 ecx, 1
  00b73	85 c9		 test	 ecx, ecx
  00b75	74 0c		 je	 SHORT $LN88@update_com
  00b77	c7 85 30 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv537[ebp], 80 ; 00000050H
  00b81	eb 27		 jmp	 SHORT $LN89@update_com
$LN88@update_com:
  00b83	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00b89	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  00b8f	52		 push	 edx
  00b90	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b95	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00b9a	50		 push	 eax
  00b9b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ba0	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv537[ebp], 0
$LN89@update_com:
  00baa	6a 00		 push	 0
  00bac	6a 50		 push	 80			; 00000050H
  00bae	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00bb1	51		 push	 ecx
  00bb2	69 95 34 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv529[ebp], 1116
  00bbc	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv537[ebp]
  00bc2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00bc9	ff d1		 call	 ecx
$LN25@update_com:

; 2761 : 									}
; 2762 : 								}
; 2763 : 							}
; 2764 : 						}
; 2765 : 						else

  00bcb	e9 25 02 00 00	 jmp	 $LN32@update_com
$LN19@update_com:

; 2766 : 						{
; 2767 : 							////////////////////////////////////////
; 2768 : 							//
; 2769 : 							// target not on target list
; 2770 : 							//
; 2771 : 							////////////////////////////////////////
; 2772 : 
; 2773 : 							if ((target != source) && get_valid_air_radar_target (target))

  00bd0	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00bd3	3b 45 a8	 cmp	 eax, DWORD PTR _source$[ebp]
  00bd6	0f 84 19 02 00
	00		 je	 $LN32@update_com
  00bdc	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00bdf	50		 push	 eax
  00be0	e8 00 00 00 00	 call	 ?get_valid_air_radar_target@@YGHPAUENTITY@@@Z ; get_valid_air_radar_target
  00be5	85 c0		 test	 eax, eax
  00be7	0f 84 08 02 00
	00		 je	 $LN32@update_com

; 2774 : 							{
; 2775 : 								target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00bed	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00bf1	74 0d		 je	 SHORT $LN90@update_com
  00bf3	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00bf6	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bf8	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv553[ebp], ecx
  00bfe	eb 27		 jmp	 SHORT $LN91@update_com
$LN90@update_com:
  00c00	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00c06	81 c2 de 00 00
	00		 add	 edx, 222		; 000000deH
  00c0c	52		 push	 edx
  00c0d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c12	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c17	50		 push	 eax
  00c18	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c1d	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv553[ebp], 0
$LN91@update_com:
  00c27	b9 01 00 00 00	 mov	 ecx, 1
  00c2c	85 c9		 test	 ecx, ecx
  00c2e	74 0c		 je	 SHORT $LN92@update_com
  00c30	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv561[ebp], 8
  00c3a	eb 27		 jmp	 SHORT $LN93@update_com
$LN92@update_com:
  00c3c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00c42	81 c2 de 00 00
	00		 add	 edx, 222		; 000000deH
  00c48	52		 push	 edx
  00c49	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00c53	50		 push	 eax
  00c54	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c59	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv561[ebp], 0
$LN93@update_com:
  00c63	6a 08		 push	 8
  00c65	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00c68	51		 push	 ecx
  00c69	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv553[ebp], 96
  00c70	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv561[ebp]
  00c76	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00c7d	ff d1		 call	 ecx
  00c7f	89 45 90	 mov	 DWORD PTR _target_position$[ebp], eax

; 2776 : 
; 2777 : 								sqr_target_range = get_sqr_3d_range (source_position, target_position);

  00c82	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00c85	50		 push	 eax
  00c86	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00c89	51		 push	 ecx
  00c8a	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  00c8f	d9 5d b0	 fstp	 DWORD PTR _sqr_target_range$[ebp]

; 2778 : 
; 2779 : 								radar_stealth_factor = get_local_entity_float_value (target, FLOAT_TYPE_RADAR_STEALTH_FACTOR);

  00c92	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00c96	74 0d		 je	 SHORT $LN94@update_com
  00c98	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00c9b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c9d	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv576[ebp], ecx
  00ca3	eb 27		 jmp	 SHORT $LN95@update_com
$LN94@update_com:
  00ca5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00cab	81 c2 e2 00 00
	00		 add	 edx, 226		; 000000e2H
  00cb1	52		 push	 edx
  00cb2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cbc	50		 push	 eax
  00cbd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cc2	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv576[ebp], 0
$LN95@update_com:
  00ccc	b9 01 00 00 00	 mov	 ecx, 1
  00cd1	85 c9		 test	 ecx, ecx
  00cd3	74 0c		 je	 SHORT $LN96@update_com
  00cd5	c7 85 30 ff ff
	ff 6a 00 00 00	 mov	 DWORD PTR tv584[ebp], 106 ; 0000006aH
  00cdf	eb 27		 jmp	 SHORT $LN97@update_com
$LN96@update_com:
  00ce1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00ce7	81 c2 e2 00 00
	00		 add	 edx, 226		; 000000e2H
  00ced	52		 push	 edx
  00cee	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cf3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00cf8	50		 push	 eax
  00cf9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cfe	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv584[ebp], 0
$LN97@update_com:
  00d08	6a 6a		 push	 106			; 0000006aH
  00d0a	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00d0d	51		 push	 ecx
  00d0e	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv576[ebp], 700
  00d18	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv584[ebp]
  00d1e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00d25	ff d1		 call	 ecx
  00d27	d9 5d ac	 fstp	 DWORD PTR _radar_stealth_factor$[ebp]

; 2780 : 
; 2781 : 								if (radar_stealth_factor < NO_RADAR_STEALTH_FACTOR)

  00d2a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00d32	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  00d36	76 18		 jbe	 SHORT $LN29@update_com

; 2782 : 								{
; 2783 : 									sqr_target_range /= radar_stealth_factor * radar_stealth_factor;

  00d38	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  00d3d	f3 0f 59 45 ac	 mulss	 xmm0, DWORD PTR _radar_stealth_factor$[ebp]
  00d42	f3 0f 10 4d b0	 movss	 xmm1, DWORD PTR _sqr_target_range$[ebp]
  00d47	f3 0f 5e c8	 divss	 xmm1, xmm0
  00d4b	f3 0f 11 4d b0	 movss	 DWORD PTR _sqr_target_range$[ebp], xmm1
$LN29@update_com:

; 2784 : 								}
; 2785 : 
; 2786 : 								if (sqr_target_range <= sqr_scan_range)

  00d50	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _sqr_scan_range$[ebp]
  00d55	0f 2f 45 b0	 comiss	 xmm0, DWORD PTR _sqr_target_range$[ebp]
  00d59	0f 82 96 00 00
	00		 jb	 $LN32@update_com

; 2787 : 								{
; 2788 : 									dx = target_position->x - source_position->x;

  00d5f	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00d62	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00d65	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00d69	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00d6d	f3 0f 11 45 cc	 movss	 DWORD PTR _dx$[ebp], xmm0

; 2789 : 									dz = target_position->z - source_position->z;

  00d72	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00d75	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00d78	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00d7d	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00d82	f3 0f 11 45 c8	 movss	 DWORD PTR _dz$[ebp], xmm0

; 2790 : 
; 2791 : 									bearing = atan2 (dx, dz);

  00d87	51		 push	 ecx
  00d88	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00d8d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d92	51		 push	 ecx
  00d93	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00d98	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d9d	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00da2	d9 5d d0	 fstp	 DWORD PTR _bearing$[ebp]

; 2792 : 
; 2793 : 									if (check_bearing_within_cw_sweep_segment (bearing, cw_sweep_start_direction, cw_sweep_end_direction))

  00da5	51		 push	 ecx
  00da6	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00dab	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00db0	51		 push	 ecx
  00db1	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00db6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dbb	51		 push	 ecx
  00dbc	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00dc1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dc6	e8 00 00 00 00	 call	 ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
  00dcb	85 c0		 test	 eax, eax
  00dcd	74 26		 je	 SHORT $LN32@update_com

; 2794 : 									{
; 2795 : 										if (get_los_clear (target, source_position, target_position))

  00dcf	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00dd2	50		 push	 eax
  00dd3	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00dd6	51		 push	 ecx
  00dd7	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00dda	52		 push	 edx
  00ddb	e8 00 00 00 00	 call	 ?get_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1@Z ; get_los_clear
  00de0	85 c0		 test	 eax, eax
  00de2	74 11		 je	 SHORT $LN32@update_com

; 2796 : 										{
; 2797 : 											insert_local_entity_into_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET, source, NULL);

  00de4	6a 00		 push	 0
  00de6	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  00de9	50		 push	 eax
  00dea	6a 12		 push	 18			; 00000012H
  00dec	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00def	51		 push	 ecx
  00df0	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN32@update_com:

; 2798 : 										}
; 2799 : 									}
; 2800 : 								}
; 2801 : 							}
; 2802 : 						}
; 2803 : 					}
; 2804 : 
; 2805 : 					target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR);

  00df5	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00df9	74 0d		 je	 SHORT $LN98@update_com
  00dfb	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00dfe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e00	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv623[ebp], ecx
  00e06	eb 27		 jmp	 SHORT $LN99@update_com
$LN98@update_com:
  00e08	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00e0e	81 c2 fc 00 00
	00		 add	 edx, 252		; 000000fcH
  00e14	52		 push	 edx
  00e15	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e1f	50		 push	 eax
  00e20	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e25	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv623[ebp], 0
$LN99@update_com:
  00e2f	b9 01 00 00 00	 mov	 ecx, 1
  00e34	85 c9		 test	 ecx, ecx
  00e36	74 0c		 je	 SHORT $LN100@update_com
  00e38	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv631[ebp], 33 ; 00000021H
  00e42	eb 27		 jmp	 SHORT $LN101@update_com
$LN100@update_com:
  00e44	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00e4a	81 c2 fc 00 00
	00		 add	 edx, 252		; 000000fcH
  00e50	52		 push	 edx
  00e51	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e56	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00e5b	50		 push	 eax
  00e5c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e61	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv631[ebp], 0
$LN101@update_com:
  00e6b	6a 21		 push	 33			; 00000021H
  00e6d	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00e70	51		 push	 ecx
  00e71	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv623[ebp], 180
  00e7b	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv631[ebp]
  00e81	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00e88	ff d1		 call	 ecx
  00e8a	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax

; 2806 : 				}

  00e8d	e9 9c f7 ff ff	 jmp	 $LN8@update_com
$LN9@update_com:

; 2807 : 			}

  00e92	e9 84 f6 ff ff	 jmp	 $LN5@update_com
$LN6@update_com:

; 2808 : 		}

  00e97	e9 62 f6 ff ff	 jmp	 $LN2@update_com
$LN3@update_com:

; 2809 : 
; 2810 : 		////////////////////////////////////////
; 2811 : 		//
; 2812 : 		// update target
; 2813 : 		//
; 2814 : 		////////////////////////////////////////
; 2815 : 
; 2816 : 		old_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00e9c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00ea3	74 0f		 je	 SHORT $LN102@update_com
  00ea5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00eaa	8b 08		 mov	 ecx, DWORD PTR [eax]
  00eac	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv643[ebp], ecx
  00eb2	eb 27		 jmp	 SHORT $LN103@update_com
$LN102@update_com:
  00eb4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00eba	81 c2 07 01 00
	00		 add	 edx, 263		; 00000107H
  00ec0	52		 push	 edx
  00ec1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ec6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ecb	50		 push	 eax
  00ecc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ed1	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv643[ebp], 0
$LN103@update_com:
  00edb	b9 01 00 00 00	 mov	 ecx, 1
  00ee0	85 c9		 test	 ecx, ecx
  00ee2	74 0c		 je	 SHORT $LN104@update_com
  00ee4	c7 85 30 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv651[ebp], 38 ; 00000026H
  00eee	eb 27		 jmp	 SHORT $LN105@update_com
$LN104@update_com:
  00ef0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_air_radar@@YGXXZ@4JA
  00ef6	81 c2 07 01 00
	00		 add	 edx, 263		; 00000107H
  00efc	52		 push	 edx
  00efd	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f02	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00f07	50		 push	 eax
  00f08	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f0d	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv651[ebp], 0
$LN105@update_com:
  00f17	6a 26		 push	 38			; 00000026H
  00f19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00f1f	51		 push	 ecx
  00f20	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv643[ebp], 180
  00f2a	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv651[ebp]
  00f30	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00f37	ff d1		 call	 ecx
  00f39	89 45 a0	 mov	 DWORD PTR _old_target$[ebp], eax

; 2817 : 
; 2818 : 		new_target = old_target;

  00f3c	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  00f3f	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 2819 : 
; 2820 : 		if (air_radar.auto_target && !air_radar.target_locked)

  00f42	83 3d 24 00 00
	00 00		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+36, 0
  00f49	74 1f		 je	 SHORT $LN33@update_com
  00f4b	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0
  00f52	75 16		 jne	 SHORT $LN33@update_com

; 2821 : 		{
; 2822 : 			new_target = get_best_air_radar_target ();

  00f54	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  00f59	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 2823 : 
; 2824 : 			set_gunship_target (new_target);

  00f5c	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  00f5f	50		 push	 eax
  00f60	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 2825 : 		}
; 2826 : 		else

  00f65	e9 d9 00 00 00	 jmp	 $LN36@update_com
$LN33@update_com:

; 2827 : 		{
; 2828 : 			if (old_target)

  00f6a	83 7d a0 00	 cmp	 DWORD PTR _old_target$[ebp], 0
  00f6e	0f 84 be 00 00
	00		 je	 $LN35@update_com

; 2829 : 			{
; 2830 : 				if (get_local_entity_parent (old_target, LIST_TYPE_GUNSHIP_TARGET))

  00f74	83 7d a0 00	 cmp	 DWORD PTR _old_target$[ebp], 0
  00f78	74 0d		 je	 SHORT $LN106@update_com
  00f7a	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  00f7d	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f7f	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv667[ebp], ecx
  00f85	eb 20		 jmp	 SHORT $LN107@update_com
$LN106@update_com:
  00f87	68 0e 0b 00 00	 push	 2830			; 00000b0eH
  00f8c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f91	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f97	52		 push	 edx
  00f98	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f9d	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv667[ebp], 0
$LN107@update_com:
  00fa7	b8 01 00 00 00	 mov	 eax, 1
  00fac	85 c0		 test	 eax, eax
  00fae	74 0c		 je	 SHORT $LN108@update_com
  00fb0	c7 85 30 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv674[ebp], 18 ; 00000012H
  00fba	eb 20		 jmp	 SHORT $LN109@update_com
$LN108@update_com:
  00fbc	68 0e 0b 00 00	 push	 2830			; 00000b0eH
  00fc1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fc6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00fcc	51		 push	 ecx
  00fcd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fd2	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv674[ebp], 0
$LN109@update_com:
  00fdc	6a 12		 push	 18			; 00000012H
  00fde	8b 55 a0	 mov	 edx, DWORD PTR _old_target$[ebp]
  00fe1	52		 push	 edx
  00fe2	69 85 34 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv667[ebp], 180
  00fec	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv674[ebp]
  00ff2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00ff9	ff d2		 call	 edx
  00ffb	85 c0		 test	 eax, eax
  00ffd	74 20		 je	 SHORT $LN37@update_com

; 2831 : 				{
; 2832 : 					if (!get_selectable_air_radar_target (old_target))

  00fff	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  01002	50		 push	 eax
  01003	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  01008	85 c0		 test	 eax, eax
  0100a	75 11		 jne	 SHORT $LN39@update_com

; 2833 : 					{
; 2834 : 						//
; 2835 : 						// target is no longer valid
; 2836 : 						//
; 2837 : 
; 2838 : 						new_target = get_best_air_radar_target ();

  0100c	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  01011	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 2839 : 
; 2840 : 						set_gunship_target (new_target);

  01014	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  01017	50		 push	 eax
  01018	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN39@update_com:

; 2841 : 					}
; 2842 : 				}
; 2843 : 				else

  0101d	eb 11		 jmp	 SHORT $LN38@update_com
$LN37@update_com:

; 2844 : 				{
; 2845 : 					//
; 2846 : 					// target is no longer on the air radar
; 2847 : 					//
; 2848 : 
; 2849 : 					new_target = get_best_air_radar_target ();

  0101f	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  01024	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 2850 : 
; 2851 : 					set_gunship_target (new_target);

  01027	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  0102a	50		 push	 eax
  0102b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN38@update_com:

; 2852 : 				}
; 2853 : 			}
; 2854 : 			else

  01030	eb 11		 jmp	 SHORT $LN36@update_com
$LN35@update_com:

; 2855 : 			{
; 2856 : 				//
; 2857 : 				// no target
; 2858 : 				//
; 2859 : 
; 2860 : 				new_target = get_best_air_radar_target ();

  01032	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  01037	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 2861 : 
; 2862 : 				set_gunship_target (new_target);

  0103a	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  0103d	50		 push	 eax
  0103e	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN36@update_com:

; 2863 : 			}
; 2864 : 		}
; 2865 : 
; 2866 : 		if (air_radar.target_locked)

  01043	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0
  0104a	74 18		 je	 SHORT $LN41@update_com

; 2867 : 		{
; 2868 : 			if ((new_target != old_target) || (new_target == NULL))

  0104c	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  0104f	3b 45 a0	 cmp	 eax, DWORD PTR _old_target$[ebp]
  01052	75 06		 jne	 SHORT $LN42@update_com
  01054	83 7d 9c 00	 cmp	 DWORD PTR _new_target$[ebp], 0
  01058	75 0a		 jne	 SHORT $LN41@update_com
$LN42@update_com:

; 2869 : 			{
; 2870 : 				air_radar.target_locked = FALSE;

  0105a	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0
$LN41@update_com:

; 2871 : 			}
; 2872 : 		}
; 2873 : 	}
; 2874 : 
; 2875 : 	target_locked = air_radar.target_locked;

  01064	a1 20 00 00 00	 mov	 eax, DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32
  01069	a3 00 00 00 00	 mov	 DWORD PTR ?target_locked@@3HA, eax ; target_locked

; 2876 : }

  0106e	5f		 pop	 edi
  0106f	5e		 pop	 esi
  01070	5b		 pop	 ebx
  01071	8b e5		 mov	 esp, ebp
  01073	5d		 pop	 ebp
  01074	c3		 ret	 0
?update_common_air_radar@@YGXXZ ENDP			; update_common_air_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_previous_air_radar_target@@YGXXZ
_TEXT	SEGMENT
tv129 = -80						; size = 4
tv78 = -80						; size = 4
tv90 = -76						; size = 4
tv70 = -76						; size = 4
_new_target$ = -8					; size = 4
_current_target$ = -4					; size = 4
?get_previous_air_radar_target@@YGXXZ PROC		; get_previous_air_radar_target, COMDAT

; 2515 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2516 : 	entity
; 2517 : 		*current_target,
; 2518 : 		*new_target;
; 2519 : 
; 2520 : 	air_radar.auto_target = FALSE;

  00009	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+36, 0

; 2521 : 
; 2522 : 	air_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0

; 2523 : 
; 2524 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN8@get_previo
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN9@get_previo
$LN8@get_previo:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_air_radar_target@@YGXXZ@4JA
  00038	83 c2 09	 add	 edx, 9
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@get_previo:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN10@get_previo
  0005c	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN11@get_previo
$LN10@get_previo:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_air_radar_target@@YGXXZ@4JA
  0006b	83 c2 09	 add	 edx, 9
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@get_previo:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00096	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 fc	 mov	 DWORD PTR _current_target$[ebp], eax

; 2525 : 
; 2526 : 	if (current_target && get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET))

  000a5	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	0f 84 b0 00 00
	00		 je	 $LN4@get_previo
  000af	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 0a		 je	 SHORT $LN12@get_previo
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  000bd	eb 1d		 jmp	 SHORT $LN13@get_previo
$LN12@get_previo:
  000bf	68 de 09 00 00	 push	 2526			; 000009deH
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@get_previo:
  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	85 c0		 test	 eax, eax
  000e3	74 09		 je	 SHORT $LN14@get_previo
  000e5	c7 45 b0 12 00
	00 00		 mov	 DWORD PTR tv129[ebp], 18 ; 00000012H
  000ec	eb 1d		 jmp	 SHORT $LN15@get_previo
$LN14@get_previo:
  000ee	68 de 09 00 00	 push	 2526			; 000009deH
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN15@get_previo:
  0010b	6a 12		 push	 18			; 00000012H
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _current_target$[ebp]
  00110	52		 push	 edx
  00111	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00118	8b 4d b0	 mov	 ecx, DWORD PTR tv129[ebp]
  0011b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00122	ff d2		 call	 edx
  00124	85 c0		 test	 eax, eax
  00126	74 37		 je	 SHORT $LN4@get_previo

; 2527 : 	{
; 2528 : 		new_target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00128	6a 12		 push	 18			; 00000012H
  0012a	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00133	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN2@get_previo:

; 2529 : 
; 2530 : 		while (new_target != current_target)

  00136	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00139	3b 45 fc	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0013c	74 1f		 je	 SHORT $LN3@get_previo

; 2531 : 		{
; 2532 : 			if (get_selectable_air_radar_target (new_target))

  0013e	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  00147	85 c0		 test	 eax, eax
  00149	74 02		 je	 SHORT $LN6@get_previo

; 2533 : 			{
; 2534 : 				break;

  0014b	eb 10		 jmp	 SHORT $LN3@get_previo
$LN6@get_previo:

; 2535 : 			}
; 2536 : 
; 2537 : 			new_target = get_local_entity_child_pred_circular (new_target, LIST_TYPE_GUNSHIP_TARGET);

  0014d	6a 12		 push	 18			; 00000012H
  0014f	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00158	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 2538 : 		}

  0015b	eb d9		 jmp	 SHORT $LN2@get_previo
$LN3@get_previo:

; 2539 : 	}
; 2540 : 	else

  0015d	eb 08		 jmp	 SHORT $LN5@get_previo
$LN4@get_previo:

; 2541 : 	{
; 2542 : 		new_target = get_best_air_radar_target ();

  0015f	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  00164	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN5@get_previo:

; 2543 : 	}
; 2544 : 
; 2545 : 	set_gunship_target (new_target);

  00167	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 2546 : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
?get_previous_air_radar_target@@YGXXZ ENDP		; get_previous_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_next_air_radar_target@@YGXXZ
_TEXT	SEGMENT
tv129 = -80						; size = 4
tv78 = -80						; size = 4
tv90 = -76						; size = 4
tv70 = -76						; size = 4
_new_target$ = -8					; size = 4
_current_target$ = -4					; size = 4
?get_next_air_radar_target@@YGXXZ PROC			; get_next_air_radar_target, COMDAT

; 2477 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2478 : 	entity
; 2479 : 		*current_target,
; 2480 : 		*new_target;
; 2481 : 
; 2482 : 	air_radar.auto_target = FALSE;

  00009	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+36, 0

; 2483 : 
; 2484 : 	air_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+32, 0

; 2485 : 
; 2486 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN8@get_next_a
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN9@get_next_a
$LN8@get_next_a:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_air_radar_target@@YGXXZ@4JA
  00038	83 c2 09	 add	 edx, 9
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@get_next_a:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN10@get_next_a
  0005c	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN11@get_next_a
$LN10@get_next_a:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_air_radar_target@@YGXXZ@4JA
  0006b	83 c2 09	 add	 edx, 9
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@get_next_a:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00096	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 fc	 mov	 DWORD PTR _current_target$[ebp], eax

; 2487 : 
; 2488 : 	if (current_target && get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET))

  000a5	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	0f 84 b0 00 00
	00		 je	 $LN4@get_next_a
  000af	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 0a		 je	 SHORT $LN12@get_next_a
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  000bd	eb 1d		 jmp	 SHORT $LN13@get_next_a
$LN12@get_next_a:
  000bf	68 b8 09 00 00	 push	 2488			; 000009b8H
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@get_next_a:
  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	85 c0		 test	 eax, eax
  000e3	74 09		 je	 SHORT $LN14@get_next_a
  000e5	c7 45 b0 12 00
	00 00		 mov	 DWORD PTR tv129[ebp], 18 ; 00000012H
  000ec	eb 1d		 jmp	 SHORT $LN15@get_next_a
$LN14@get_next_a:
  000ee	68 b8 09 00 00	 push	 2488			; 000009b8H
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN15@get_next_a:
  0010b	6a 12		 push	 18			; 00000012H
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _current_target$[ebp]
  00110	52		 push	 edx
  00111	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00118	8b 4d b0	 mov	 ecx, DWORD PTR tv129[ebp]
  0011b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00122	ff d2		 call	 edx
  00124	85 c0		 test	 eax, eax
  00126	74 37		 je	 SHORT $LN4@get_next_a

; 2489 : 	{
; 2490 : 		new_target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00128	6a 12		 push	 18			; 00000012H
  0012a	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00133	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN2@get_next_a:

; 2491 : 
; 2492 : 		while (new_target != current_target)

  00136	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00139	3b 45 fc	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0013c	74 1f		 je	 SHORT $LN3@get_next_a

; 2493 : 		{
; 2494 : 			if (get_selectable_air_radar_target (new_target))

  0013e	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?get_selectable_air_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_air_radar_target
  00147	85 c0		 test	 eax, eax
  00149	74 02		 je	 SHORT $LN6@get_next_a

; 2495 : 			{
; 2496 : 				break;

  0014b	eb 10		 jmp	 SHORT $LN3@get_next_a
$LN6@get_next_a:

; 2497 : 			}
; 2498 : 
; 2499 : 			new_target = get_local_entity_child_succ_circular (new_target, LIST_TYPE_GUNSHIP_TARGET);

  0014d	6a 12		 push	 18			; 00000012H
  0014f	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00158	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 2500 : 		}

  0015b	eb d9		 jmp	 SHORT $LN2@get_next_a
$LN3@get_next_a:

; 2501 : 	}
; 2502 : 	else

  0015d	eb 08		 jmp	 SHORT $LN5@get_next_a
$LN4@get_next_a:

; 2503 : 	{
; 2504 : 		new_target = get_best_air_radar_target ();

  0015f	e8 00 00 00 00	 call	 ?get_best_air_radar_target@@YGPAUENTITY@@XZ ; get_best_air_radar_target
  00164	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN5@get_next_a:

; 2505 : 	}
; 2506 : 
; 2507 : 	set_gunship_target (new_target);

  00167	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 2508 : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
?get_next_air_radar_target@@YGXXZ ENDP			; get_next_air_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z
_TEXT	SEGMENT
tv82 = -72						; size = 4
tv75 = -68						; size = 4
_target$ = 8						; size = 4
_source_side$ = 12					; size = 4
?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z PROC ; get_target_matches_air_radar_declutter_criteria, COMDAT

; 2456 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2457 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_target
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_target:

; 2458 : 
; 2459 : 	if (air_radar.show_allied_targets)

  00027	83 3d 1c 00 00
	00 00		 cmp	 DWORD PTR ?air_radar@@3URADAR_PARAMS@@A+28, 0
  0002e	74 0a		 je	 SHORT $LN3@get_target

; 2460 : 	{
; 2461 : 		return (TRUE);

  00030	b8 01 00 00 00	 mov	 eax, 1
  00035	e9 86 00 00 00	 jmp	 $LN1@get_target
$LN3@get_target:

; 2462 : 	}
; 2463 : 
; 2464 : 	if (source_side != get_local_entity_int_value (target, INT_TYPE_SIDE))

  0003a	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0003e	74 0a		 je	 SHORT $LN6@get_target
  00040	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00043	8b 08		 mov	 ecx, DWORD PTR [eax]
  00045	89 4d bc	 mov	 DWORD PTR tv75[ebp], ecx
  00048	eb 1d		 jmp	 SHORT $LN7@get_target
$LN6@get_target:
  0004a	68 a0 09 00 00	 push	 2464			; 000009a0H
  0004f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00054	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005a	52		 push	 edx
  0005b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00060	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN7@get_target:
  00067	b8 01 00 00 00	 mov	 eax, 1
  0006c	85 c0		 test	 eax, eax
  0006e	74 09		 je	 SHORT $LN8@get_target
  00070	c7 45 b8 bb 00
	00 00		 mov	 DWORD PTR tv82[ebp], 187 ; 000000bbH
  00077	eb 1d		 jmp	 SHORT $LN9@get_target
$LN8@get_target:
  00079	68 a0 09 00 00	 push	 2464			; 000009a0H
  0007e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv82[ebp], 0
$LN9@get_target:
  00096	68 bb 00 00 00	 push	 187			; 000000bbH
  0009b	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  0009e	52		 push	 edx
  0009f	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv75[ebp], 1116
  000a6	8b 4d b8	 mov	 ecx, DWORD PTR tv82[ebp]
  000a9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000b0	ff d2		 call	 edx
  000b2	39 45 0c	 cmp	 DWORD PTR _source_side$[ebp], eax
  000b5	74 07		 je	 SHORT $LN4@get_target

; 2465 : 	{
; 2466 : 		return (TRUE);

  000b7	b8 01 00 00 00	 mov	 eax, 1
  000bc	eb 02		 jmp	 SHORT $LN1@get_target
$LN4@get_target:

; 2467 : 	}
; 2468 : 
; 2469 : 	return (FALSE);

  000be	33 c0		 xor	 eax, eax
$LN1@get_target:

; 2470 : }

  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 08 00	 ret	 8
?get_target_matches_air_radar_declutter_criteria@@YGHPAUENTITY@@W4ENTITY_SIDES@@@Z ENDP ; get_target_matches_air_radar_declutter_criteria
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv162 = -80						; size = 8
tv132 = -72						; size = 4
tv81 = -72						; size = 4
tv93 = -68						; size = 4
tv74 = -68						; size = 4
_target$ = 8						; size = 4
?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z PROC ; get_gunship_target_valid_for_air_radar, COMDAT

; 1985 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1986 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_gunshi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_gunshi:

; 1987 : 
; 1988 : 	if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  00027	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN6@get_gunshi
  0002d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  00035	eb 1d		 jmp	 SHORT $LN7@get_gunshi
$LN6@get_gunshi:
  00037	68 c4 07 00 00	 push	 1988			; 000007c4H
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00047	52		 push	 edx
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN7@get_gunshi:
  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	85 c0		 test	 eax, eax
  0005b	74 09		 je	 SHORT $LN8@get_gunshi
  0005d	c7 45 b8 04 00
	00 00		 mov	 DWORD PTR tv81[ebp], 4
  00064	eb 1d		 jmp	 SHORT $LN9@get_gunshi
$LN8@get_gunshi:
  00066	68 c4 07 00 00	 push	 1988			; 000007c4H
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN9@get_gunshi:
  00083	6a 04		 push	 4
  00085	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00088	52		 push	 edx
  00089	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  00090	8b 4d b8	 mov	 ecx, DWORD PTR tv81[ebp]
  00093	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0009a	ff d2		 call	 edx
  0009c	85 c0		 test	 eax, eax
  0009e	0f 84 8e 00 00
	00		 je	 $LN4@get_gunshi

; 1989 : 	{
; 1990 : 		if (get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE) > 5.0)

  000a4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000a8	74 0a		 je	 SHORT $LN10@get_gunshi
  000aa	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  000af	89 4d bc	 mov	 DWORD PTR tv93[ebp], ecx
  000b2	eb 1d		 jmp	 SHORT $LN11@get_gunshi
$LN10@get_gunshi:
  000b4	68 c6 07 00 00	 push	 1990			; 000007c6H
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c4	52		 push	 edx
  000c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ca	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN11@get_gunshi:
  000d1	b8 01 00 00 00	 mov	 eax, 1
  000d6	85 c0		 test	 eax, eax
  000d8	74 09		 je	 SHORT $LN12@get_gunshi
  000da	c7 45 b8 68 00
	00 00		 mov	 DWORD PTR tv132[ebp], 104 ; 00000068H
  000e1	eb 1d		 jmp	 SHORT $LN13@get_gunshi
$LN12@get_gunshi:
  000e3	68 c6 07 00 00	 push	 1990			; 000007c6H
  000e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000f3	51		 push	 ecx
  000f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN13@get_gunshi:
  00100	6a 68		 push	 104			; 00000068H
  00102	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00105	52		 push	 edx
  00106	69 45 bc bc 02
	00 00		 imul	 eax, DWORD PTR tv93[ebp], 700
  0010d	8b 4d b8	 mov	 ecx, DWORD PTR tv132[ebp]
  00110	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  00117	ff d2		 call	 edx
  00119	dd 5d b0	 fstp	 QWORD PTR tv162[ebp]
  0011c	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR tv162[ebp]
  00121	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4014000000000000
  00129	76 07		 jbe	 SHORT $LN4@get_gunshi

; 1991 : 		{
; 1992 : 			return (TRUE);

  0012b	b8 01 00 00 00	 mov	 eax, 1
  00130	eb 02		 jmp	 SHORT $LN1@get_gunshi
$LN4@get_gunshi:

; 1993 : 		}
; 1994 : 	}
; 1995 : 
; 1996 : 	return (FALSE);

  00132	33 c0		 xor	 eax, eax
$LN1@get_gunshi:

; 1997 : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
?get_gunship_target_valid_for_air_radar@@YGHPAUENTITY@@@Z ENDP ; get_gunship_target_valid_for_air_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?set_ground_radar_is_active@@YGXH@Z
_TEXT	SEGMENT
_is_active$ = 8						; size = 4
?set_ground_radar_is_active@@YGXH@Z PROC		; set_ground_radar_is_active, COMDAT

; 1937 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1938 : 	ground_radar_on = is_active;

  00009	8b 45 08	 mov	 eax, DWORD PTR _is_active$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?ground_radar_on@@3HA, eax

; 1939 : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_ground_radar_is_active@@YGXH@Z ENDP		; set_ground_radar_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?ground_radar_is_active@@YGHXZ
_TEXT	SEGMENT
?ground_radar_is_active@@YGHXZ PROC			; ground_radar_is_active, COMDAT

; 1932 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1933 : 	return ground_radar_on;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ground_radar_on@@3HA

; 1934 : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?ground_radar_is_active@@YGHXZ ENDP			; ground_radar_is_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?toggle_ground_radar_active@@YGXXZ
_TEXT	SEGMENT
?toggle_ground_radar_active@@YGXXZ PROC			; toggle_ground_radar_active, COMDAT

; 1924 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1925 : 	if (ground_radar_on)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar_on@@3HA, 0
  00010	74 07		 je	 SHORT $LN2@toggle_gro

; 1926 : 		deactivate_common_ground_radar();

  00012	e8 00 00 00 00	 call	 ?deactivate_common_ground_radar@@YGXXZ ; deactivate_common_ground_radar

; 1927 : 	else

  00017	eb 05		 jmp	 SHORT $LN1@toggle_gro
$LN2@toggle_gro:

; 1928 : 		activate_common_ground_radar();	

  00019	e8 00 00 00 00	 call	 ?activate_common_ground_radar@@YGXXZ ; activate_common_ground_radar
$LN1@toggle_gro:

; 1929 : }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?toggle_ground_radar_active@@YGXXZ ENDP			; toggle_ground_radar_active
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?deactivate_common_ground_radar@@YGXXZ
_TEXT	SEGMENT
?deactivate_common_ground_radar@@YGXXZ PROC		; deactivate_common_ground_radar, COMDAT

; 1946 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1947 : 	ground_radar_on = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar_on@@3HA, 0

; 1948 : 	
; 1949 : 	ground_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0

; 1950 : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?deactivate_common_ground_radar@@YGXXZ ENDP		; deactivate_common_ground_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?activate_common_ground_radar@@YGXXZ
_TEXT	SEGMENT
?activate_common_ground_radar@@YGXXZ PROC		; activate_common_ground_radar, COMDAT

; 1911 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1912 : 	if (ground_radar.sweep_mode == RADAR_SWEEP_MODE_SINGLE_INACTIVE)

  00009	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 1
  00010	75 0a		 jne	 SHORT $LN2@activate_c

; 1913 : 	{
; 1914 : 		ground_radar.sweep_mode = RADAR_SWEEP_MODE_SINGLE_ACTIVE;

  00012	c7 05 28 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 2
$LN2@activate_c:

; 1915 : 	}
; 1916 : 
; 1917 : 	ground_radar_on = TRUE;

  0001c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ground_radar_on@@3HA, 1

; 1918 : 	air_radar_on = FALSE;

  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar_on@@3HA, 0

; 1919 : 
; 1920 : 	ground_radar.target_locked = target_locked;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?target_locked@@3HA ; target_locked
  00035	a3 20 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, eax

; 1921 : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?activate_common_ground_radar@@YGXXZ ENDP		; activate_common_ground_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?update_common_ground_radar@@YGXH@Z
_TEXT	SEGMENT
tv667 = -208						; size = 4
tv644 = -208						; size = 4
tv623 = -208						; size = 4
tv574 = -208						; size = 4
tv543 = -208						; size = 4
tv521 = -208						; size = 4
tv501 = -208						; size = 4
tv480 = -208						; size = 4
tv437 = -208						; size = 4
tv409 = -208						; size = 4
tv390 = -208						; size = 4
tv339 = -208						; size = 4
tv320 = -208						; size = 4
tv137 = -208						; size = 4
tv78 = -208						; size = 4
tv753 = -204						; size = 4
tv743 = -204						; size = 4
tv735 = -204						; size = 4
tv725 = -204						; size = 4
tv660 = -204						; size = 4
tv636 = -204						; size = 4
tv615 = -204						; size = 4
tv566 = -204						; size = 4
tv535 = -204						; size = 4
tv513 = -204						; size = 4
tv493 = -204						; size = 4
tv473 = -204						; size = 4
tv429 = -204						; size = 4
tv402 = -204						; size = 4
tv351 = -204						; size = 4
tv332 = -204						; size = 4
tv280 = -204						; size = 4
tv273 = -204						; size = 4
tv129 = -204						; size = 4
tv70 = -204						; size = 4
_cw_sweep_end_position$ = -136				; size = 12
_cw_sweep_start_position$ = -124			; size = 12
_target_position$ = -112				; size = 4
_source_position$ = -108				; size = 4
_sector$ = -104						; size = 4
_new_target$ = -100					; size = 4
_old_target$ = -96					; size = 4
_target$ = -92						; size = 4
_source$ = -88						; size = 4
_sqr_target_range$ = -84				; size = 4
_sqr_scan_range$ = -80					; size = 4
_z_max$ = -76						; size = 4
_x_max$ = -72						; size = 4
_z_min$ = -68						; size = 4
_x_min$ = -64						; size = 4
_dz$ = -60						; size = 4
_dx$ = -56						; size = 4
_bearing$ = -52						; size = 4
_heading$ = -48						; size = 4
_sweep_direction$ = -44					; size = 4
_cw_sweep_end_direction$ = -40				; size = 4
_cw_sweep_start_direction$ = -36			; size = 4
_cw_sweep_end_offset$ = -32				; size = 4
_cw_sweep_start_offset$ = -28				; size = 4
_z_sec_max$ = -24					; size = 4
_x_sec_max$ = -20					; size = 4
_z_sec_min$ = -16					; size = 4
_x_sec_min$ = -12					; size = 4
_z_sec$ = -8						; size = 4
_x_sec$ = -4						; size = 4
_inactive_check$ = 8					; size = 4
?update_common_ground_radar@@YGXH@Z PROC		; update_common_ground_radar, COMDAT

; 1536 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1537 : 	int
; 1538 : 		x_sec,
; 1539 : 		z_sec,
; 1540 : 		x_sec_min,
; 1541 : 		z_sec_min,
; 1542 : 		x_sec_max,
; 1543 : 		z_sec_max;
; 1544 : 
; 1545 : 	float
; 1546 : 		cw_sweep_start_offset,
; 1547 : 		cw_sweep_end_offset,
; 1548 : 		cw_sweep_start_direction,
; 1549 : 		cw_sweep_end_direction,
; 1550 : 		sweep_direction,
; 1551 : 		heading,
; 1552 : 		bearing,
; 1553 : 		dx,
; 1554 : 		dz,
; 1555 : 		x_min,
; 1556 : 		z_min,
; 1557 : 		x_max,
; 1558 : 		z_max,
; 1559 : 		sqr_scan_range,
; 1560 : 		sqr_target_range;
; 1561 : 
; 1562 : 	entity
; 1563 : 		*source,
; 1564 : 		*target,
; 1565 : 		*old_target,
; 1566 : 		*new_target,
; 1567 : 		*sector;
; 1568 : 
; 1569 : 	vec3d
; 1570 : 		*source_position,
; 1571 : 		*target_position,
; 1572 : 		cw_sweep_start_position,
; 1573 : 		cw_sweep_end_position;
; 1574 : 
; 1575 : 	////////////////////////////////////////
; 1576 : 	//
; 1577 : 	// get source data
; 1578 : 	//
; 1579 : 	////////////////////////////////////////
; 1580 : 
; 1581 : 	source = get_gunship_entity ();

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00011	89 45 a8	 mov	 DWORD PTR _source$[ebp], eax

; 1582 : 
; 1583 : 	source_position = get_local_entity_vec3d_ptr (source, VEC3D_TYPE_POSITION);

  00014	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  00018	74 0d		 je	 SHORT $LN56@update_com
  0001a	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  0001d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001f	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00025	eb 24		 jmp	 SHORT $LN57@update_com
$LN56@update_com:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  0002d	83 c2 2f	 add	 edx, 47			; 0000002fH
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN57@update_com:
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	85 c9		 test	 ecx, ecx
  00052	74 0c		 je	 SHORT $LN58@update_com
  00054	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  0005e	eb 24		 jmp	 SHORT $LN59@update_com
$LN58@update_com:
  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00066	83 c2 2f	 add	 edx, 47			; 0000002fH
  00069	52		 push	 edx
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007a	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN59@update_com:
  00084	6a 08		 push	 8
  00086	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  00089	51		 push	 ecx
  0008a	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  00091	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  00097	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0009e	ff d1		 call	 ecx
  000a0	89 45 94	 mov	 DWORD PTR _source_position$[ebp], eax

; 1584 : 
; 1585 : 	////////////////////////////////////////
; 1586 : 	//
; 1587 : 	// get radar sweep start and end
; 1588 : 	//
; 1589 : 	////////////////////////////////////////
; 1590 : 
; 1591 : 	if ((ground_radar.sweep_mode != RADAR_SWEEP_MODE_SINGLE_INACTIVE && ground_radar_is_active())
; 1592 : 		|| inactive_check)

  000a3	83 3d 28 00 00
	00 01		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 1
  000aa	74 09		 je	 SHORT $LN12@update_com
  000ac	e8 00 00 00 00	 call	 ?ground_radar_is_active@@YGHXZ ; ground_radar_is_active
  000b1	85 c0		 test	 eax, eax
  000b3	75 0a		 jne	 SHORT $LN11@update_com
$LN12@update_com:
  000b5	83 7d 08 00	 cmp	 DWORD PTR _inactive_check$[ebp], 0
  000b9	0f 84 e3 0d 00
	00		 je	 $LN3@update_com
$LN11@update_com:

; 1593 : 	{
; 1594 : 		update_radar_sweep (&ground_radar, &cw_sweep_start_offset, &cw_sweep_end_offset);

  000bf	8d 45 e0	 lea	 eax, DWORD PTR _cw_sweep_end_offset$[ebp]
  000c2	50		 push	 eax
  000c3	8d 4d e4	 lea	 ecx, DWORD PTR _cw_sweep_start_offset$[ebp]
  000c6	51		 push	 ecx
  000c7	68 00 00 00 00	 push	 OFFSET ?ground_radar@@3URADAR_PARAMS@@A ; ground_radar
  000cc	e8 00 00 00 00	 call	 ?update_radar_sweep@@YGXPAURADAR_PARAMS@@PAM1@Z ; update_radar_sweep

; 1595 : 
; 1596 : 		//
; 1597 : 		// note: it is possible for sweep_mode to have switched to RADAR_SWEEP_MODE_SINGLE_INACTIVE after update_radar_sweep
; 1598 : 		//
; 1599 : 
; 1600 : 		heading = get_local_entity_float_value (source, FLOAT_TYPE_HEADING);

  000d1	83 7d a8 00	 cmp	 DWORD PTR _source$[ebp], 0
  000d5	74 0d		 je	 SHORT $LN60@update_com
  000d7	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  000da	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dc	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv129[ebp], ecx
  000e2	eb 24		 jmp	 SHORT $LN61@update_com
$LN60@update_com:
  000e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  000ea	83 c2 40	 add	 edx, 64			; 00000040H
  000ed	52		 push	 edx
  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fe	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv129[ebp], 0
$LN61@update_com:
  00108	b9 01 00 00 00	 mov	 ecx, 1
  0010d	85 c9		 test	 ecx, ecx
  0010f	74 0c		 je	 SHORT $LN62@update_com
  00111	c7 85 30 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv137[ebp], 52 ; 00000034H
  0011b	eb 24		 jmp	 SHORT $LN63@update_com
$LN62@update_com:
  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00123	83 c2 40	 add	 edx, 64			; 00000040H
  00126	52		 push	 edx
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00137	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv137[ebp], 0
$LN63@update_com:
  00141	6a 34		 push	 52			; 00000034H
  00143	8b 4d a8	 mov	 ecx, DWORD PTR _source$[ebp]
  00146	51		 push	 ecx
  00147	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv129[ebp], 700
  00151	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv137[ebp]
  00157	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  0015e	ff d1		 call	 ecx
  00160	d9 5d d0	 fstp	 DWORD PTR _heading$[ebp]

; 1601 : 
; 1602 : 		cw_sweep_start_direction = heading + ground_radar.scan_datum + cw_sweep_start_offset;

  00163	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00168	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+4
  00170	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _cw_sweep_start_offset$[ebp]
  00175	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0

; 1603 : 
; 1604 : 		if (cw_sweep_start_direction > rad (180.0))

  0017a	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0017f	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  00187	76 18		 jbe	 SHORT $LN13@update_com

; 1605 : 		{
; 1606 : 			cw_sweep_start_direction -= rad (360.0);

  00189	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0018e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  00196	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019a	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
  0019f	eb 29		 jmp	 SHORT $LN15@update_com
$LN13@update_com:

; 1607 : 		}
; 1608 : 		else if (cw_sweep_start_direction < rad (-180.0))

  001a1	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  001a6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  001ae	66 0f 2f c8	 comisd	 xmm1, xmm0
  001b2	76 16		 jbe	 SHORT $LN15@update_com

; 1609 : 		{
; 1610 : 			cw_sweep_start_direction += rad (360.0);

  001b4	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  001b9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  001c1	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c5	f3 0f 11 45 dc	 movss	 DWORD PTR _cw_sweep_start_direction$[ebp], xmm0
$LN15@update_com:

; 1611 : 		}
; 1612 : 
; 1613 : 		cw_sweep_end_direction = heading + ground_radar.scan_datum + cw_sweep_end_offset;

  001ca	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001cf	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+4
  001d7	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _cw_sweep_end_offset$[ebp]
  001dc	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0

; 1614 : 
; 1615 : 		if (cw_sweep_end_direction > rad (180.0))

  001e1	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  001e6	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@400921fb51000000
  001ee	76 18		 jbe	 SHORT $LN16@update_com

; 1616 : 		{
; 1617 : 			cw_sweep_end_direction -= rad (360.0);

  001f0	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  001f5	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@401921fb51000000
  001fd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00201	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
  00206	eb 29		 jmp	 SHORT $LN18@update_com
$LN16@update_com:

; 1618 : 		}
; 1619 : 		else if (cw_sweep_end_direction < rad (-180.0))

  00208	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0020d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@c00921fb51000000
  00215	66 0f 2f c8	 comisd	 xmm1, xmm0
  00219	76 16		 jbe	 SHORT $LN18@update_com

; 1620 : 		{
; 1621 : 			cw_sweep_end_direction += rad (360.0);

  0021b	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00220	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@401921fb51000000
  00228	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022c	f3 0f 11 45 d8	 movss	 DWORD PTR _cw_sweep_end_direction$[ebp], xmm0
$LN18@update_com:

; 1622 : 		}
; 1623 : 
; 1624 : 		////////////////////////////////////////
; 1625 : 		//
; 1626 : 		// get sector scan area
; 1627 : 		//
; 1628 : 		////////////////////////////////////////
; 1629 : 
; 1630 : 		cw_sweep_start_position.x = source_position->x + (sin (cw_sweep_start_direction) * ground_radar.scan_range);

  00231	51		 push	 ecx
  00232	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00237	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023c	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00241	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv725[ebp]
  00247	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv725[ebp]
  0024f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  00257	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  0025a	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  0025e	f3 0f 11 45 84	 movss	 DWORD PTR _cw_sweep_start_position$[ebp], xmm0

; 1631 : 		cw_sweep_start_position.y = source_position->y;

  00263	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00266	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0026b	f3 0f 11 45 88	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+4], xmm0

; 1632 : 		cw_sweep_start_position.z = source_position->z + (cos (cw_sweep_start_direction) * ground_radar.scan_range);

  00270	51		 push	 ecx
  00271	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00276	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0027b	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00280	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv735[ebp]
  00286	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv735[ebp]
  0028e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  00296	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00299	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  0029e	f3 0f 11 45 8c	 movss	 DWORD PTR _cw_sweep_start_position$[ebp+8], xmm0

; 1633 : 
; 1634 : 		cw_sweep_end_position.x = source_position->x + (sin (cw_sweep_end_direction) * ground_radar.scan_range);

  002a3	51		 push	 ecx
  002a4	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ae	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  002b3	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv743[ebp]
  002b9	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv743[ebp]
  002c1	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  002c9	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  002cc	f3 0f 58 00	 addss	 xmm0, DWORD PTR [eax]
  002d0	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR _cw_sweep_end_position$[ebp], xmm0

; 1635 : 		cw_sweep_end_position.y = source_position->y;

  002d8	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  002db	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  002e0	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+4], xmm0

; 1636 : 		cw_sweep_end_position.z = source_position->z + (cos (cw_sweep_end_direction) * ground_radar.scan_range);

  002e8	51		 push	 ecx
  002e9	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  002ee	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f3	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  002f8	d9 9d 34 ff ff
	ff		 fstp	 DWORD PTR tv753[ebp]
  002fe	f3 0f 10 85 34
	ff ff ff	 movss	 xmm0, DWORD PTR tv753[ebp]
  00306	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  0030e	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00311	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00316	f3 0f 11 45 80	 movss	 DWORD PTR _cw_sweep_end_position$[ebp+8], xmm0

; 1637 : 
; 1638 : 		//
; 1639 : 		// draw sweep
; 1640 : 		//
; 1641 : 
; 1642 : 		if (draw_radar_sweep && (get_view_mode () == VIEW_MODE_EXTERNAL))

  0031b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_radar_sweep@@3HA, 0 ; draw_radar_sweep
  00322	74 63		 je	 SHORT $LN19@update_com
  00324	83 3d 00 00 00
	00 2a		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 42 ; view_mode, 0000002aH
  0032b	75 5a		 jne	 SHORT $LN19@update_com

; 1643 : 		{
; 1644 : 			create_debug_3d_line (source_position, &cw_sweep_start_position, sys_col_green, 0.0);

  0032d	51		 push	 ecx
  0032e	0f 57 c0	 xorps	 xmm0, xmm0
  00331	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00336	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_green@@3UREAL_COLOUR@@A ; sys_col_green
  0033b	50		 push	 eax
  0033c	8d 4d 84	 lea	 ecx, DWORD PTR _cw_sweep_start_position$[ebp]
  0033f	51		 push	 ecx
  00340	8b 55 94	 mov	 edx, DWORD PTR _source_position$[ebp]
  00343	52		 push	 edx
  00344	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 1645 : 
; 1646 : 			create_debug_3d_line (source_position, &cw_sweep_end_position, sys_col_red, 0.0);

  00349	51		 push	 ecx
  0034a	0f 57 c0	 xorps	 xmm0, xmm0
  0034d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00352	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_red@@3UREAL_COLOUR@@A ; sys_col_red
  00357	50		 push	 eax
  00358	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0035e	51		 push	 ecx
  0035f	8b 55 94	 mov	 edx, DWORD PTR _source_position$[ebp]
  00362	52		 push	 edx
  00363	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line

; 1647 : 
; 1648 : 			create_debug_3d_line (&cw_sweep_start_position, &cw_sweep_end_position, sys_col_white, 0.0);

  00368	51		 push	 ecx
  00369	0f 57 c0	 xorps	 xmm0, xmm0
  0036c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00371	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sys_col_white@@3UREAL_COLOUR@@A ; sys_col_white
  00376	50		 push	 eax
  00377	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0037d	51		 push	 ecx
  0037e	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  00381	52		 push	 edx
  00382	e8 00 00 00 00	 call	 ?create_debug_3d_line@@YGPAUDEBUG_3D_LINE@@PAUVEC3D@@0UREAL_COLOUR@@M@Z ; create_debug_3d_line
$LN19@update_com:

; 1649 : 		}
; 1650 : 
; 1651 : 		//
; 1652 : 		// sector scan min
; 1653 : 		//
; 1654 : 
; 1655 : 		x_min = min (min (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  00387	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  0038a	50		 push	 eax
  0038b	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  00391	51		 push	 ecx
  00392	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  00395	52		 push	 edx
  00396	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0039b	50		 push	 eax
  0039c	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003a1	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003a5	f3 0f 11 45 c0	 movss	 DWORD PTR _x_min$[ebp], xmm0

; 1656 : 		z_min = min (min (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  003aa	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  003ad	83 c0 08	 add	 eax, 8
  003b0	50		 push	 eax
  003b1	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  003b4	51		 push	 ecx
  003b5	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  003b8	52		 push	 edx
  003b9	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003be	50		 push	 eax
  003bf	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  003c4	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  003c8	f3 0f 11 45 bc	 movss	 DWORD PTR _z_min$[ebp], xmm0

; 1657 : 
; 1658 : 		get_x_sector (x_sec_min, x_min);

  003cd	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  003d0	50		 push	 eax
  003d1	51		 push	 ecx
  003d2	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _x_min$[ebp]
  003d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003dc	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  003e1	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  003e4	99		 cdq
  003e5	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  003eb	89 45 f4	 mov	 DWORD PTR _x_sec_min$[ebp], eax

; 1659 : 		get_z_sector (z_sec_min, z_min);

  003ee	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  003f1	50		 push	 eax
  003f2	51		 push	 ecx
  003f3	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _z_min$[ebp]
  003f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003fd	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00402	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  00405	99		 cdq
  00406	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  0040c	89 45 f0	 mov	 DWORD PTR _z_sec_min$[ebp], eax

; 1660 : 
; 1661 : 		x_sec_min = max (x_sec_min, MIN_MAP_X_SECTOR);

  0040f	68 14 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+20
  00414	8d 45 f4	 lea	 eax, DWORD PTR _x_sec_min$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  0041d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0041f	89 4d f4	 mov	 DWORD PTR _x_sec_min$[ebp], ecx

; 1662 : 		z_sec_min = max (z_sec_min, MIN_MAP_Z_SECTOR);

  00422	68 18 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+24
  00427	8d 45 f0	 lea	 eax, DWORD PTR _z_sec_min$[ebp]
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 ??$max@H@std@@YGABHABH0@Z ; std::max<int>
  00430	8b 08		 mov	 ecx, DWORD PTR [eax]
  00432	89 4d f0	 mov	 DWORD PTR _z_sec_min$[ebp], ecx

; 1663 : 
; 1664 : 		//
; 1665 : 		// sector scan max
; 1666 : 		//
; 1667 : 
; 1668 : 		x_max = max (max (cw_sweep_start_position.x, cw_sweep_end_position.x), source_position->x);

  00435	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  00438	50		 push	 eax
  00439	8d 8d 78 ff ff
	ff		 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp]
  0043f	51		 push	 ecx
  00440	8d 55 84	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp]
  00443	52		 push	 edx
  00444	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00449	50		 push	 eax
  0044a	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0044f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00453	f3 0f 11 45 b8	 movss	 DWORD PTR _x_max$[ebp], xmm0

; 1669 : 		z_max = max (max (cw_sweep_start_position.z, cw_sweep_end_position.z), source_position->z);

  00458	8b 45 94	 mov	 eax, DWORD PTR _source_position$[ebp]
  0045b	83 c0 08	 add	 eax, 8
  0045e	50		 push	 eax
  0045f	8d 4d 80	 lea	 ecx, DWORD PTR _cw_sweep_end_position$[ebp+8]
  00462	51		 push	 ecx
  00463	8d 55 8c	 lea	 edx, DWORD PTR _cw_sweep_start_position$[ebp+8]
  00466	52		 push	 edx
  00467	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0046c	50		 push	 eax
  0046d	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00472	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00476	f3 0f 11 45 b4	 movss	 DWORD PTR _z_max$[ebp], xmm0

; 1670 : 
; 1671 : 		get_x_sector (x_sec_max, x_max);

  0047b	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  0047e	50		 push	 eax
  0047f	51		 push	 ecx
  00480	f3 0f 10 45 b8	 movss	 xmm0, DWORD PTR _x_max$[ebp]
  00485	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048a	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0048f	8b 45 ec	 mov	 eax, DWORD PTR _x_sec_max$[ebp]
  00492	99		 cdq
  00493	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00499	89 45 ec	 mov	 DWORD PTR _x_sec_max$[ebp], eax

; 1672 : 		get_z_sector (z_sec_max, z_max);

  0049c	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  0049f	50		 push	 eax
  004a0	51		 push	 ecx
  004a1	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR _z_max$[ebp]
  004a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ab	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  004b0	8b 45 e8	 mov	 eax, DWORD PTR _z_sec_max$[ebp]
  004b3	99		 cdq
  004b4	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  004ba	89 45 e8	 mov	 DWORD PTR _z_sec_max$[ebp], eax

; 1673 : 
; 1674 : 		x_sec_max = min (x_sec_max, MAX_MAP_X_SECTOR);

  004bd	68 1c 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+28
  004c2	8d 45 ec	 lea	 eax, DWORD PTR _x_sec_max$[ebp]
  004c5	50		 push	 eax
  004c6	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  004cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cd	89 4d ec	 mov	 DWORD PTR _x_sec_max$[ebp], ecx

; 1675 : 		z_sec_max = min (z_sec_max, MAX_MAP_Z_SECTOR);

  004d0	68 20 00 00 00	 push	 OFFSET ?world_map@@3UWORLD_MAP_DATA@@A+32
  004d5	8d 45 e8	 lea	 eax, DWORD PTR _z_sec_max$[ebp]
  004d8	50		 push	 eax
  004d9	e8 00 00 00 00	 call	 ??$min@H@std@@YGABHABH0@Z ; std::min<int>
  004de	8b 08		 mov	 ecx, DWORD PTR [eax]
  004e0	89 4d e8	 mov	 DWORD PTR _z_sec_max$[ebp], ecx

; 1676 : 
; 1677 : 		////////////////////////////////////////
; 1678 : 		//
; 1679 : 		// sector scan
; 1680 : 		//
; 1681 : 		////////////////////////////////////////
; 1682 : 
; 1683 : 		sqr_scan_range = ground_radar.scan_range * ground_radar.scan_range;

  004e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  004eb	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A
  004f3	f3 0f 11 45 b0	 movss	 DWORD PTR _sqr_scan_range$[ebp], xmm0

; 1684 : 
; 1685 : 		for (z_sec = z_sec_min; z_sec <= z_sec_max; z_sec++)

  004f8	8b 45 f0	 mov	 eax, DWORD PTR _z_sec_min$[ebp]
  004fb	89 45 f8	 mov	 DWORD PTR _z_sec$[ebp], eax
  004fe	eb 09		 jmp	 SHORT $LN4@update_com
$LN2@update_com:
  00500	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00503	83 c0 01	 add	 eax, 1
  00506	89 45 f8	 mov	 DWORD PTR _z_sec$[ebp], eax
$LN4@update_com:
  00509	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  0050c	3b 45 e8	 cmp	 eax, DWORD PTR _z_sec_max$[ebp]
  0050f	0f 8f 8d 09 00
	00		 jg	 $LN3@update_com

; 1686 : 		{
; 1687 : 			for (x_sec = x_sec_min; x_sec <= x_sec_max; x_sec++)

  00515	8b 45 f4	 mov	 eax, DWORD PTR _x_sec_min$[ebp]
  00518	89 45 fc	 mov	 DWORD PTR _x_sec$[ebp], eax
  0051b	eb 09		 jmp	 SHORT $LN7@update_com
$LN5@update_com:
  0051d	8b 45 fc	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00520	83 c0 01	 add	 eax, 1
  00523	89 45 fc	 mov	 DWORD PTR _x_sec$[ebp], eax
$LN7@update_com:
  00526	8b 45 fc	 mov	 eax, DWORD PTR _x_sec$[ebp]
  00529	3b 45 ec	 cmp	 eax, DWORD PTR _x_sec_max$[ebp]
  0052c	0f 8f 6b 09 00
	00		 jg	 $LN6@update_com

; 1688 : 			{
; 1689 : 				sector = get_local_raw_sector_entity (x_sec, z_sec);

  00532	8b 45 f8	 mov	 eax, DWORD PTR _z_sec$[ebp]
  00535	0f af 05 08 00
	00 00		 imul	 eax, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  0053c	03 45 fc	 add	 eax, DWORD PTR _x_sec$[ebp]
  0053f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  00545	83 3c 81 00	 cmp	 DWORD PTR [ecx+eax*4], 0
  00549	74 1d		 je	 SHORT $LN64@update_com
  0054b	8b 55 f8	 mov	 edx, DWORD PTR _z_sec$[ebp]
  0054e	0f af 15 08 00
	00 00		 imul	 edx, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8
  00555	03 55 fc	 add	 edx, DWORD PTR _x_sec$[ebp]
  00558	a1 00 00 00 00	 mov	 eax, DWORD PTR ?entity_sector_map@@3PAPAUENTITY@@A ; entity_sector_map
  0055d	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  00560	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv273[ebp], ecx
  00566	eb 27		 jmp	 SHORT $LN65@update_com
$LN64@update_com:
  00568	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  0056e	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00574	52		 push	 edx
  00575	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0057a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_sector_entity_map_pointer_message@@3PBDB ; null_sector_entity_map_pointer_message
  0057f	50		 push	 eax
  00580	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00585	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv273[ebp], 0
$LN65@update_com:
  0058f	8b 8d 34 ff ff
	ff		 mov	 ecx, DWORD PTR tv273[ebp]
  00595	89 4d 98	 mov	 DWORD PTR _sector$[ebp], ecx

; 1690 : 
; 1691 : 				target = get_local_entity_first_child (sector, LIST_TYPE_SECTOR);

  00598	83 7d 98 00	 cmp	 DWORD PTR _sector$[ebp], 0
  0059c	74 0d		 je	 SHORT $LN66@update_com
  0059e	8b 45 98	 mov	 eax, DWORD PTR _sector$[ebp]
  005a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005a3	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv280[ebp], ecx
  005a9	eb 27		 jmp	 SHORT $LN67@update_com
$LN66@update_com:
  005ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  005b1	81 c2 9b 00 00
	00		 add	 edx, 155		; 0000009bH
  005b7	52		 push	 edx
  005b8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c2	50		 push	 eax
  005c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005c8	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv280[ebp], 0
$LN67@update_com:
  005d2	b9 01 00 00 00	 mov	 ecx, 1
  005d7	85 c9		 test	 ecx, ecx
  005d9	74 0c		 je	 SHORT $LN68@update_com
  005db	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv320[ebp], 33 ; 00000021H
  005e5	eb 27		 jmp	 SHORT $LN69@update_com
$LN68@update_com:
  005e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  005ed	81 c2 9b 00 00
	00		 add	 edx, 155		; 0000009bH
  005f3	52		 push	 edx
  005f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  005fe	50		 push	 eax
  005ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00604	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv320[ebp], 0
$LN69@update_com:
  0060e	6a 21		 push	 33			; 00000021H
  00610	8b 4d 98	 mov	 ecx, DWORD PTR _sector$[ebp]
  00613	51		 push	 ecx
  00614	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv280[ebp], 180
  0061e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv320[ebp]
  00624	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0062b	ff d1		 call	 ecx
  0062d	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax
$LN8@update_com:

; 1692 : 
; 1693 : 				while (target)

  00630	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00634	0f 84 5e 08 00
	00		 je	 $LN9@update_com

; 1694 : 				{
; 1695 : 					if ((get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE) != TARGET_TYPE_INVALID) || get_local_entity_int_value (target, INT_TYPE_GROUND_RADAR_CLUTTER))

  0063a	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0063e	74 0d		 je	 SHORT $LN70@update_com
  00640	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00643	8b 08		 mov	 ecx, DWORD PTR [eax]
  00645	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv332[ebp], ecx
  0064b	eb 20		 jmp	 SHORT $LN71@update_com
$LN70@update_com:
  0064d	68 9f 06 00 00	 push	 1695			; 0000069fH
  00652	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00657	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0065d	52		 push	 edx
  0065e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00663	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv332[ebp], 0
$LN71@update_com:
  0066d	b8 01 00 00 00	 mov	 eax, 1
  00672	85 c0		 test	 eax, eax
  00674	74 0c		 je	 SHORT $LN72@update_com
  00676	c7 85 30 ff ff
	ff d6 00 00 00	 mov	 DWORD PTR tv339[ebp], 214 ; 000000d6H
  00680	eb 20		 jmp	 SHORT $LN73@update_com
$LN72@update_com:
  00682	68 9f 06 00 00	 push	 1695			; 0000069fH
  00687	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0068c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00692	51		 push	 ecx
  00693	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00698	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv339[ebp], 0
$LN73@update_com:
  006a2	68 d6 00 00 00	 push	 214			; 000000d6H
  006a7	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  006aa	52		 push	 edx
  006ab	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv332[ebp], 1116
  006b5	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv339[ebp]
  006bb	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006c2	ff d2		 call	 edx
  006c4	85 c0		 test	 eax, eax
  006c6	0f 85 8f 00 00
	00		 jne	 $LN21@update_com
  006cc	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  006d0	74 0d		 je	 SHORT $LN74@update_com
  006d2	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  006d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  006d7	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv351[ebp], ecx
  006dd	eb 20		 jmp	 SHORT $LN75@update_com
$LN74@update_com:
  006df	68 9f 06 00 00	 push	 1695			; 0000069fH
  006e4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  006e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006ef	52		 push	 edx
  006f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006f5	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv351[ebp], 0
$LN75@update_com:
  006ff	b8 01 00 00 00	 mov	 eax, 1
  00704	85 c0		 test	 eax, eax
  00706	74 0c		 je	 SHORT $LN76@update_com
  00708	c7 85 30 ff ff
	ff 42 00 00 00	 mov	 DWORD PTR tv390[ebp], 66 ; 00000042H
  00712	eb 20		 jmp	 SHORT $LN77@update_com
$LN76@update_com:
  00714	68 9f 06 00 00	 push	 1695			; 0000069fH
  00719	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0071e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00724	51		 push	 ecx
  00725	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072a	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv390[ebp], 0
$LN77@update_com:
  00734	6a 42		 push	 66			; 00000042H
  00736	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00739	52		 push	 edx
  0073a	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv351[ebp], 1116
  00744	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv390[ebp]
  0074a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00751	ff d2		 call	 edx
  00753	85 c0		 test	 eax, eax
  00755	0f 84 a0 06 00
	00		 je	 $LN43@update_com
$LN21@update_com:

; 1696 : 					{
; 1697 : 						if (get_local_entity_parent (target, LIST_TYPE_GUNSHIP_TARGET))

  0075b	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  0075f	74 0d		 je	 SHORT $LN78@update_com
  00761	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00764	8b 08		 mov	 ecx, DWORD PTR [eax]
  00766	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv402[ebp], ecx
  0076c	eb 20		 jmp	 SHORT $LN79@update_com
$LN78@update_com:
  0076e	68 a1 06 00 00	 push	 1697			; 000006a1H
  00773	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00778	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0077e	52		 push	 edx
  0077f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00784	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv402[ebp], 0
$LN79@update_com:
  0078e	b8 01 00 00 00	 mov	 eax, 1
  00793	85 c0		 test	 eax, eax
  00795	74 0c		 je	 SHORT $LN80@update_com
  00797	c7 85 30 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv409[ebp], 18 ; 00000012H
  007a1	eb 20		 jmp	 SHORT $LN81@update_com
$LN80@update_com:
  007a3	68 a1 06 00 00	 push	 1697			; 000006a1H
  007a8	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  007ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  007b3	51		 push	 ecx
  007b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007b9	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN81@update_com:
  007c3	6a 12		 push	 18			; 00000012H
  007c5	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  007c8	52		 push	 edx
  007c9	69 85 34 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv402[ebp], 180
  007d3	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv409[ebp]
  007d9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  007e0	ff d2		 call	 edx
  007e2	85 c0		 test	 eax, eax
  007e4	0f 84 33 04 00
	00		 je	 $LN22@update_com

; 1698 : 						{
; 1699 : 							////////////////////////////////////////
; 1700 : 							//
; 1701 : 							// target already on target list
; 1702 : 							//
; 1703 : 							////////////////////////////////////////
; 1704 : 
; 1705 : 							//
; 1706 : 							// reduce number of los checks by only considering 'even' entities on CW sweep and 'odd' entities on CCW sweep
; 1707 : 							//
; 1708 : 
; 1709 : 							if (ground_radar.sweep_mode == RADAR_SWEEP_MODE_CONTINUOUS)

  007ea	83 3d 28 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 0
  007f1	75 2f		 jne	 SHORT $LN24@update_com

; 1710 : 							{
; 1711 : 								if (get_local_entity_index (target) & 1)

  007f3	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  007f6	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  007fc	c1 f8 04	 sar	 eax, 4
  007ff	83 e0 01	 and	 eax, 1
  00802	74 0f		 je	 SHORT $LN26@update_com

; 1712 : 								{
; 1713 : 									sweep_direction = RADAR_SWEEP_CCW;

  00804	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  0080c	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0

; 1714 : 								}
; 1715 : 								else

  00811	eb 0d		 jmp	 SHORT $LN27@update_com
$LN26@update_com:

; 1716 : 								{
; 1717 : 									sweep_direction = RADAR_SWEEP_CW;

  00813	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0081b	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0
$LN27@update_com:

; 1718 : 								}
; 1719 : 							}
; 1720 : 							else

  00820	eb 0d		 jmp	 SHORT $LN25@update_com
$LN24@update_com:

; 1721 : 							{
; 1722 : 								//
; 1723 : 								// sweep all targets in single sweep mode
; 1724 : 								//
; 1725 : 
; 1726 : 								sweep_direction = ground_radar.sweep_direction;

  00822	f3 0f 10 05 14
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+20
  0082a	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0
$LN25@update_com:

; 1727 : 							}
; 1728 : 
; 1729 : 							if (ground_radar.sweep_direction == sweep_direction && !inactive_check)

  0082f	f3 0f 10 05 14
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+20
  00837	0f 2e 45 d4	 ucomiss xmm0, DWORD PTR _sweep_direction$[ebp]
  0083b	9f		 lahf
  0083c	f6 c4 44	 test	 ah, 68			; 00000044H
  0083f	0f 8a d3 03 00
	00		 jp	 $LN32@update_com
  00845	83 7d 08 00	 cmp	 DWORD PTR _inactive_check$[ebp], 0
  00849	0f 85 c9 03 00
	00		 jne	 $LN32@update_com

; 1730 : 							{
; 1731 : 								//
; 1732 : 								// only update target info if the target is within range, sweep segment and los is clear
; 1733 : 								//
; 1734 : 
; 1735 : 								target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  0084f	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00853	74 0d		 je	 SHORT $LN82@update_com
  00855	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00858	8b 08		 mov	 ecx, DWORD PTR [eax]
  0085a	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv429[ebp], ecx
  00860	eb 27		 jmp	 SHORT $LN83@update_com
$LN82@update_com:
  00862	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00868	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  0086e	52		 push	 edx
  0086f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00874	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00879	50		 push	 eax
  0087a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0087f	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv429[ebp], 0
$LN83@update_com:
  00889	b9 01 00 00 00	 mov	 ecx, 1
  0088e	85 c9		 test	 ecx, ecx
  00890	74 0c		 je	 SHORT $LN84@update_com
  00892	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv437[ebp], 8
  0089c	eb 27		 jmp	 SHORT $LN85@update_com
$LN84@update_com:
  0089e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  008a4	81 c2 c7 00 00
	00		 add	 edx, 199		; 000000c7H
  008aa	52		 push	 edx
  008ab	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  008b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  008b5	50		 push	 eax
  008b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008bb	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv437[ebp], 0
$LN85@update_com:
  008c5	6a 08		 push	 8
  008c7	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  008ca	51		 push	 ecx
  008cb	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv429[ebp], 96
  008d2	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv437[ebp]
  008d8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  008df	ff d1		 call	 ecx
  008e1	89 45 90	 mov	 DWORD PTR _target_position$[ebp], eax

; 1736 : 
; 1737 : 								sqr_target_range = get_sqr_3d_range (source_position, target_position);

  008e4	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  008e7	50		 push	 eax
  008e8	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  008eb	51		 push	 ecx
  008ec	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  008f1	d9 5d ac	 fstp	 DWORD PTR _sqr_target_range$[ebp]

; 1738 : 
; 1739 : 								if (sqr_target_range <= sqr_scan_range)

  008f4	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _sqr_scan_range$[ebp]
  008f9	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _sqr_target_range$[ebp]
  008fd	0f 82 15 03 00
	00		 jb	 $LN32@update_com

; 1740 : 								{
; 1741 : 									dx = target_position->x - source_position->x;

  00903	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00906	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00909	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0090d	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00911	f3 0f 11 45 c8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 1742 : 									dz = target_position->z - source_position->z;

  00916	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00919	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  0091c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00921	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00926	f3 0f 11 45 c4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 1743 : 
; 1744 : 									bearing = atan2 (dx, dz);

  0092b	51		 push	 ecx
  0092c	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00931	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00936	51		 push	 ecx
  00937	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0093c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00941	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00946	d9 5d cc	 fstp	 DWORD PTR _bearing$[ebp]

; 1745 : 
; 1746 : 									if (check_bearing_within_cw_sweep_segment (bearing, cw_sweep_start_direction, cw_sweep_end_direction))

  00949	51		 push	 ecx
  0094a	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  0094f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00954	51		 push	 ecx
  00955	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  0095a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0095f	51		 push	 ecx
  00960	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00965	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0096a	e8 00 00 00 00	 call	 ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
  0096f	85 c0		 test	 eax, eax
  00971	0f 84 a1 02 00
	00		 je	 $LN32@update_com

; 1747 : 									{
; 1748 : 										if (get_ground_radar_los_clear (target, source_position, target_position, dx, dz))

  00977	51		 push	 ecx
  00978	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  0097d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00982	51		 push	 ecx
  00983	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00988	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0098d	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00990	50		 push	 eax
  00991	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00994	51		 push	 ecx
  00995	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00998	52		 push	 edx
  00999	e8 00 00 00 00	 call	 ?get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z ; get_ground_radar_los_clear
  0099e	85 c0		 test	 eax, eax
  009a0	0f 84 db 01 00
	00		 je	 $LN31@update_com

; 1749 : 										{
; 1750 : 											if (get_local_entity_int_value (target, INT_TYPE_ALIVE))

  009a6	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  009aa	74 0d		 je	 SHORT $LN86@update_com
  009ac	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  009af	8b 08		 mov	 ecx, DWORD PTR [eax]
  009b1	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv473[ebp], ecx
  009b7	eb 20		 jmp	 SHORT $LN87@update_com
$LN86@update_com:
  009b9	68 d6 06 00 00	 push	 1750			; 000006d6H
  009be	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009c9	52		 push	 edx
  009ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009cf	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv473[ebp], 0
$LN87@update_com:
  009d9	b8 01 00 00 00	 mov	 eax, 1
  009de	85 c0		 test	 eax, eax
  009e0	74 0c		 je	 SHORT $LN88@update_com
  009e2	c7 85 30 ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv480[ebp], 7
  009ec	eb 20		 jmp	 SHORT $LN89@update_com
$LN88@update_com:
  009ee	68 d6 06 00 00	 push	 1750			; 000006d6H
  009f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009fe	51		 push	 ecx
  009ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a04	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv480[ebp], 0
$LN89@update_com:
  00a0e	6a 07		 push	 7
  00a10	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00a13	52		 push	 edx
  00a14	69 85 34 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv473[ebp], 1116
  00a1e	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv480[ebp]
  00a24	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00a2b	ff d2		 call	 edx
  00a2d	85 c0		 test	 eax, eax
  00a2f	0f 84 3c 01 00
	00		 je	 $LN33@update_com

; 1751 : 											{
; 1752 : 												set_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR, TRUE);

  00a35	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00a39	74 0d		 je	 SHORT $LN90@update_com
  00a3b	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00a3e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a40	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv493[ebp], ecx
  00a46	eb 27		 jmp	 SHORT $LN91@update_com
$LN90@update_com:
  00a48	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00a4e	81 c2 d8 00 00
	00		 add	 edx, 216		; 000000d8H
  00a54	52		 push	 edx
  00a55	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a5a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a5f	50		 push	 eax
  00a60	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a65	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv493[ebp], 0
$LN91@update_com:
  00a6f	b9 01 00 00 00	 mov	 ecx, 1
  00a74	85 c9		 test	 ecx, ecx
  00a76	74 0c		 je	 SHORT $LN92@update_com
  00a78	c7 85 30 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv501[ebp], 80 ; 00000050H
  00a82	eb 27		 jmp	 SHORT $LN93@update_com
$LN92@update_com:
  00a84	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00a8a	81 c2 d8 00 00
	00		 add	 edx, 216		; 000000d8H
  00a90	52		 push	 edx
  00a91	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a96	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a9b	50		 push	 eax
  00a9c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00aa1	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv501[ebp], 0
$LN93@update_com:
  00aab	6a 01		 push	 1
  00aad	6a 50		 push	 80			; 00000050H
  00aaf	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00ab2	51		 push	 ecx
  00ab3	69 95 34 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv493[ebp], 1116
  00abd	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv501[ebp]
  00ac3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00aca	ff d1		 call	 ecx

; 1753 : 
; 1754 : 												set_local_entity_float_value (target, FLOAT_TYPE_AIR_RADAR_CONTACT_TIMEOUT, AIR_RADAR_CONTACT_TIMEOUT);

  00acc	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00ad0	74 0d		 je	 SHORT $LN94@update_com
  00ad2	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00ad5	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ad7	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv513[ebp], ecx
  00add	eb 27		 jmp	 SHORT $LN95@update_com
$LN94@update_com:
  00adf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00ae5	81 c2 da 00 00
	00		 add	 edx, 218		; 000000daH
  00aeb	52		 push	 edx
  00aec	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00af1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00af6	50		 push	 eax
  00af7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00afc	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv513[ebp], 0
$LN95@update_com:
  00b06	b9 01 00 00 00	 mov	 ecx, 1
  00b0b	85 c9		 test	 ecx, ecx
  00b0d	74 0c		 je	 SHORT $LN96@update_com
  00b0f	c7 85 30 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv521[ebp], 2
  00b19	eb 27		 jmp	 SHORT $LN97@update_com
$LN96@update_com:
  00b1b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00b21	81 c2 da 00 00
	00		 add	 edx, 218		; 000000daH
  00b27	52		 push	 edx
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b32	50		 push	 eax
  00b33	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b38	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv521[ebp], 0
$LN97@update_com:
  00b42	51		 push	 ecx
  00b43	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41200000
  00b4b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b50	6a 02		 push	 2
  00b52	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00b55	51		 push	 ecx
  00b56	69 95 34 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv513[ebp], 700
  00b60	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv521[ebp]
  00b66	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00b6d	ff d1		 call	 ecx

; 1755 : 											}
; 1756 : 											else

  00b6f	eb 0b		 jmp	 SHORT $LN34@update_com
$LN33@update_com:

; 1757 : 											{
; 1758 : 												delete_local_entity_from_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET);

  00b71	6a 12		 push	 18			; 00000012H
  00b73	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00b76	50		 push	 eax
  00b77	e8 00 00 00 00	 call	 ?delete_local_entity_from_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@@Z ; delete_local_entity_from_parents_child_list
$LN34@update_com:

; 1759 : 											}
; 1760 : 										}
; 1761 : 										else

  00b7c	e9 97 00 00 00	 jmp	 $LN32@update_com
$LN31@update_com:

; 1762 : 										{
; 1763 : 											set_local_entity_int_value (target, INT_TYPE_GUNSHIP_RADAR_LOS_CLEAR, FALSE);

  00b81	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00b85	74 0d		 je	 SHORT $LN98@update_com
  00b87	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00b8a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b8c	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv535[ebp], ecx
  00b92	eb 27		 jmp	 SHORT $LN99@update_com
$LN98@update_com:
  00b94	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00b9a	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  00ba0	52		 push	 edx
  00ba1	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ba6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bab	50		 push	 eax
  00bac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bb1	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv535[ebp], 0
$LN99@update_com:
  00bbb	b9 01 00 00 00	 mov	 ecx, 1
  00bc0	85 c9		 test	 ecx, ecx
  00bc2	74 0c		 je	 SHORT $LN100@update_com
  00bc4	c7 85 30 ff ff
	ff 50 00 00 00	 mov	 DWORD PTR tv543[ebp], 80 ; 00000050H
  00bce	eb 27		 jmp	 SHORT $LN101@update_com
$LN100@update_com:
  00bd0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00bd6	81 c2 e3 00 00
	00		 add	 edx, 227		; 000000e3H
  00bdc	52		 push	 edx
  00bdd	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00be2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00be7	50		 push	 eax
  00be8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bed	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv543[ebp], 0
$LN101@update_com:
  00bf7	6a 00		 push	 0
  00bf9	6a 50		 push	 80			; 00000050H
  00bfb	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00bfe	51		 push	 ecx
  00bff	69 95 34 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv535[ebp], 1116
  00c09	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv543[ebp]
  00c0f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00c16	ff d1		 call	 ecx
$LN32@update_com:

; 1764 : 										}
; 1765 : 									}
; 1766 : 								}
; 1767 : 							}
; 1768 : 						}
; 1769 : 						else

  00c18	e9 de 01 00 00	 jmp	 $LN43@update_com
$LN22@update_com:

; 1770 : 						{
; 1771 : 							////////////////////////////////////////
; 1772 : 							//
; 1773 : 							// target not on target list
; 1774 : 							//
; 1775 : 							////////////////////////////////////////
; 1776 : 
; 1777 : 							if ((target != source) && get_valid_ground_radar_target (target))

  00c1d	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00c20	3b 45 a8	 cmp	 eax, DWORD PTR _source$[ebp]
  00c23	0f 84 d2 01 00
	00		 je	 $LN43@update_com
  00c29	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00c2c	50		 push	 eax
  00c2d	e8 00 00 00 00	 call	 ?get_valid_ground_radar_target@@YGHPAUENTITY@@@Z ; get_valid_ground_radar_target
  00c32	85 c0		 test	 eax, eax
  00c34	0f 84 c1 01 00
	00		 je	 $LN43@update_com

; 1778 : 							{
; 1779 : 								//
; 1780 : 								// reduce number of los checks by only considering 'even' entities on CW sweep and 'odd' entities on CCW sweep
; 1781 : 								//
; 1782 : 
; 1783 : 								if (ground_radar.sweep_mode == RADAR_SWEEP_MODE_CONTINUOUS && !inactive_check)

  00c3a	83 3d 28 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+40, 0
  00c41	75 35		 jne	 SHORT $LN36@update_com
  00c43	83 7d 08 00	 cmp	 DWORD PTR _inactive_check$[ebp], 0
  00c47	75 2f		 jne	 SHORT $LN36@update_com

; 1784 : 								{
; 1785 : 									if (get_local_entity_index (target) & 1)

  00c49	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00c4c	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00c52	c1 f8 04	 sar	 eax, 4
  00c55	83 e0 01	 and	 eax, 1
  00c58	74 0f		 je	 SHORT $LN38@update_com

; 1786 : 									{
; 1787 : 										sweep_direction = RADAR_SWEEP_CCW;

  00c5a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  00c62	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0

; 1788 : 									}
; 1789 : 									else

  00c67	eb 0d		 jmp	 SHORT $LN39@update_com
$LN38@update_com:

; 1790 : 									{
; 1791 : 										sweep_direction = RADAR_SWEEP_CW;

  00c69	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00c71	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0
$LN39@update_com:

; 1792 : 									}
; 1793 : 								}
; 1794 : 								else

  00c76	eb 0d		 jmp	 SHORT $LN37@update_com
$LN36@update_com:

; 1795 : 								{
; 1796 : 									//
; 1797 : 									// sweep all targets in single sweep mode
; 1798 : 									//
; 1799 : 
; 1800 : 									sweep_direction = ground_radar.sweep_direction;

  00c78	f3 0f 10 05 14
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+20
  00c80	f3 0f 11 45 d4	 movss	 DWORD PTR _sweep_direction$[ebp], xmm0
$LN37@update_com:

; 1801 : 								}
; 1802 : 
; 1803 : 								if (ground_radar.sweep_direction == sweep_direction)

  00c85	f3 0f 10 05 14
	00 00 00	 movss	 xmm0, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+20
  00c8d	0f 2e 45 d4	 ucomiss xmm0, DWORD PTR _sweep_direction$[ebp]
  00c91	9f		 lahf
  00c92	f6 c4 44	 test	 ah, 68			; 00000044H
  00c95	0f 8a 60 01 00
	00		 jp	 $LN43@update_com

; 1804 : 								{
; 1805 : 									target_position = get_local_entity_vec3d_ptr (target, VEC3D_TYPE_POSITION);

  00c9b	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00c9f	74 0d		 je	 SHORT $LN102@update_com
  00ca1	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00ca4	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ca6	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv566[ebp], ecx
  00cac	eb 27		 jmp	 SHORT $LN103@update_com
$LN102@update_com:
  00cae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00cb4	81 c2 0d 01 00
	00		 add	 edx, 269		; 0000010dH
  00cba	52		 push	 edx
  00cbb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00cc5	50		 push	 eax
  00cc6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ccb	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv566[ebp], 0
$LN103@update_com:
  00cd5	b9 01 00 00 00	 mov	 ecx, 1
  00cda	85 c9		 test	 ecx, ecx
  00cdc	74 0c		 je	 SHORT $LN104@update_com
  00cde	c7 85 30 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv574[ebp], 8
  00ce8	eb 27		 jmp	 SHORT $LN105@update_com
$LN104@update_com:
  00cea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00cf0	81 c2 0d 01 00
	00		 add	 edx, 269		; 0000010dH
  00cf6	52		 push	 edx
  00cf7	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cfc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00d01	50		 push	 eax
  00d02	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d07	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv574[ebp], 0
$LN105@update_com:
  00d11	6a 08		 push	 8
  00d13	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00d16	51		 push	 ecx
  00d17	6b 95 34 ff ff
	ff 60		 imul	 edx, DWORD PTR tv566[ebp], 96
  00d1e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv574[ebp]
  00d24	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00d2b	ff d1		 call	 ecx
  00d2d	89 45 90	 mov	 DWORD PTR _target_position$[ebp], eax

; 1806 : 
; 1807 : 									sqr_target_range = get_sqr_3d_range (source_position, target_position);

  00d30	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00d33	50		 push	 eax
  00d34	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00d37	51		 push	 ecx
  00d38	e8 00 00 00 00	 call	 ?get_sqr_3d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_3d_range
  00d3d	d9 5d ac	 fstp	 DWORD PTR _sqr_target_range$[ebp]

; 1808 : 
; 1809 : 									if (sqr_target_range <= sqr_scan_range)

  00d40	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR _sqr_scan_range$[ebp]
  00d45	0f 2f 45 ac	 comiss	 xmm0, DWORD PTR _sqr_target_range$[ebp]
  00d49	0f 82 ac 00 00
	00		 jb	 $LN43@update_com

; 1810 : 									{
; 1811 : 										dx = target_position->x - source_position->x;

  00d4f	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00d52	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00d55	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00d59	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00d5d	f3 0f 11 45 c8	 movss	 DWORD PTR _dx$[ebp], xmm0

; 1812 : 										dz = target_position->z - source_position->z;

  00d62	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00d65	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00d68	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00d6d	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00d72	f3 0f 11 45 c4	 movss	 DWORD PTR _dz$[ebp], xmm0

; 1813 : 
; 1814 : 										bearing = atan2 (dx, dz);

  00d77	51		 push	 ecx
  00d78	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00d7d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d82	51		 push	 ecx
  00d83	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00d88	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d8d	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00d92	d9 5d cc	 fstp	 DWORD PTR _bearing$[ebp]

; 1815 : 
; 1816 : 										if (check_bearing_within_cw_sweep_segment (bearing, cw_sweep_start_direction, cw_sweep_end_direction))

  00d95	51		 push	 ecx
  00d96	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _cw_sweep_end_direction$[ebp]
  00d9b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00da0	51		 push	 ecx
  00da1	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cw_sweep_start_direction$[ebp]
  00da6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dab	51		 push	 ecx
  00dac	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _bearing$[ebp]
  00db1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00db6	e8 00 00 00 00	 call	 ?check_bearing_within_cw_sweep_segment@@YGHMMM@Z ; check_bearing_within_cw_sweep_segment
  00dbb	85 c0		 test	 eax, eax
  00dbd	74 3c		 je	 SHORT $LN43@update_com

; 1817 : 										{
; 1818 : 											if (get_ground_radar_los_clear (target, source_position, target_position, dx, dz))

  00dbf	51		 push	 ecx
  00dc0	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _dz$[ebp]
  00dc5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dca	51		 push	 ecx
  00dcb	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  00dd0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dd5	8b 45 90	 mov	 eax, DWORD PTR _target_position$[ebp]
  00dd8	50		 push	 eax
  00dd9	8b 4d 94	 mov	 ecx, DWORD PTR _source_position$[ebp]
  00ddc	51		 push	 ecx
  00ddd	8b 55 a4	 mov	 edx, DWORD PTR _target$[ebp]
  00de0	52		 push	 edx
  00de1	e8 00 00 00 00	 call	 ?get_ground_radar_los_clear@@YGHPAUENTITY@@PAUVEC3D@@1MM@Z ; get_ground_radar_los_clear
  00de6	85 c0		 test	 eax, eax
  00de8	74 11		 je	 SHORT $LN43@update_com

; 1819 : 											{
; 1820 : 												insert_local_entity_into_parents_child_list (target, LIST_TYPE_GUNSHIP_TARGET, source, NULL);

  00dea	6a 00		 push	 0
  00dec	8b 45 a8	 mov	 eax, DWORD PTR _source$[ebp]
  00def	50		 push	 eax
  00df0	6a 12		 push	 18			; 00000012H
  00df2	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00df5	51		 push	 ecx
  00df6	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN43@update_com:

; 1821 : 											}
; 1822 : 										}
; 1823 : 									}
; 1824 : 								}
; 1825 : 							}
; 1826 : 						}
; 1827 : 					}
; 1828 : 
; 1829 : 					target = get_local_entity_child_succ (target, LIST_TYPE_SECTOR);

  00dfb	83 7d a4 00	 cmp	 DWORD PTR _target$[ebp], 0
  00dff	74 0d		 je	 SHORT $LN106@update_com
  00e01	8b 45 a4	 mov	 eax, DWORD PTR _target$[ebp]
  00e04	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e06	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv615[ebp], ecx
  00e0c	eb 27		 jmp	 SHORT $LN107@update_com
$LN106@update_com:
  00e0e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00e14	81 c2 25 01 00
	00		 add	 edx, 293		; 00000125H
  00e1a	52		 push	 edx
  00e1b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e25	50		 push	 eax
  00e26	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e2b	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv615[ebp], 0
$LN107@update_com:
  00e35	b9 01 00 00 00	 mov	 ecx, 1
  00e3a	85 c9		 test	 ecx, ecx
  00e3c	74 0c		 je	 SHORT $LN108@update_com
  00e3e	c7 85 30 ff ff
	ff 21 00 00 00	 mov	 DWORD PTR tv623[ebp], 33 ; 00000021H
  00e48	eb 27		 jmp	 SHORT $LN109@update_com
$LN108@update_com:
  00e4a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00e50	81 c2 25 01 00
	00		 add	 edx, 293		; 00000125H
  00e56	52		 push	 edx
  00e57	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00e61	50		 push	 eax
  00e62	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e67	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv623[ebp], 0
$LN109@update_com:
  00e71	6a 21		 push	 33			; 00000021H
  00e73	8b 4d a4	 mov	 ecx, DWORD PTR _target$[ebp]
  00e76	51		 push	 ecx
  00e77	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv615[ebp], 180
  00e81	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv623[ebp]
  00e87	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00e8e	ff d1		 call	 ecx
  00e90	89 45 a4	 mov	 DWORD PTR _target$[ebp], eax

; 1830 : 				}

  00e93	e9 98 f7 ff ff	 jmp	 $LN8@update_com
$LN9@update_com:

; 1831 : 			}

  00e98	e9 80 f6 ff ff	 jmp	 $LN5@update_com
$LN6@update_com:

; 1832 : 		}

  00e9d	e9 5e f6 ff ff	 jmp	 $LN2@update_com
$LN3@update_com:

; 1833 : 	}
; 1834 : 	
; 1835 : 	
; 1836 : 	if (target_acquisition_system == TARGET_ACQUISITION_SYSTEM_GROUND_RADAR)

  00ea2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?target_acquisition_system@@3W4TARGET_ACQUISITION_SYSTEMS@@A, 1 ; target_acquisition_system
  00ea9	0f 85 c8 01 00
	00		 jne	 $LN53@update_com

; 1837 : 	{
; 1838 : 		////////////////////////////////////////
; 1839 : 		//
; 1840 : 		// update target
; 1841 : 		//
; 1842 : 		////////////////////////////////////////
; 1843 : 
; 1844 : 		old_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00eaf	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00eb6	74 0f		 je	 SHORT $LN110@update_com
  00eb8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00ebd	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ebf	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv636[ebp], ecx
  00ec5	eb 27		 jmp	 SHORT $LN111@update_com
$LN110@update_com:
  00ec7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00ecd	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  00ed3	52		 push	 edx
  00ed4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ed9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ede	50		 push	 eax
  00edf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ee4	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv636[ebp], 0
$LN111@update_com:
  00eee	b9 01 00 00 00	 mov	 ecx, 1
  00ef3	85 c9		 test	 ecx, ecx
  00ef5	74 0c		 je	 SHORT $LN112@update_com
  00ef7	c7 85 30 ff ff
	ff 26 00 00 00	 mov	 DWORD PTR tv644[ebp], 38 ; 00000026H
  00f01	eb 27		 jmp	 SHORT $LN113@update_com
$LN112@update_com:
  00f03	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_common_ground_radar@@YGXH@Z@4JA
  00f09	81 c2 34 01 00
	00		 add	 edx, 308		; 00000134H
  00f0f	52		 push	 edx
  00f10	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00f1a	50		 push	 eax
  00f1b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f20	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv644[ebp], 0
$LN113@update_com:
  00f2a	6a 26		 push	 38			; 00000026H
  00f2c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00f32	51		 push	 ecx
  00f33	69 95 34 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv636[ebp], 180
  00f3d	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv644[ebp]
  00f43	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00f4a	ff d1		 call	 ecx
  00f4c	89 45 a0	 mov	 DWORD PTR _old_target$[ebp], eax

; 1845 : 
; 1846 : 		new_target = old_target;

  00f4f	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  00f52	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 1847 : 
; 1848 : 		if (ground_radar.auto_target && !ground_radar.target_locked)

  00f55	83 3d 24 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+36, 0
  00f5c	74 1f		 je	 SHORT $LN45@update_com
  00f5e	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0
  00f65	75 16		 jne	 SHORT $LN45@update_com

; 1849 : 		{
; 1850 : 			new_target = get_best_ground_radar_target ();

  00f67	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  00f6c	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 1851 : 
; 1852 : 			set_gunship_target (new_target);

  00f6f	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  00f72	50		 push	 eax
  00f73	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1853 : 		}
; 1854 : 		else

  00f78	e9 d9 00 00 00	 jmp	 $LN48@update_com
$LN45@update_com:

; 1855 : 		{
; 1856 : 			if (old_target)

  00f7d	83 7d a0 00	 cmp	 DWORD PTR _old_target$[ebp], 0
  00f81	0f 84 be 00 00
	00		 je	 $LN47@update_com

; 1857 : 			{
; 1858 : 				if (get_local_entity_parent (old_target, LIST_TYPE_GUNSHIP_TARGET))

  00f87	83 7d a0 00	 cmp	 DWORD PTR _old_target$[ebp], 0
  00f8b	74 0d		 je	 SHORT $LN114@update_com
  00f8d	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  00f90	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f92	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv660[ebp], ecx
  00f98	eb 20		 jmp	 SHORT $LN115@update_com
$LN114@update_com:
  00f9a	68 42 07 00 00	 push	 1858			; 00000742H
  00f9f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fa4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00faa	52		 push	 edx
  00fab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fb0	c7 85 34 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv660[ebp], 0
$LN115@update_com:
  00fba	b8 01 00 00 00	 mov	 eax, 1
  00fbf	85 c0		 test	 eax, eax
  00fc1	74 0c		 je	 SHORT $LN116@update_com
  00fc3	c7 85 30 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv667[ebp], 18 ; 00000012H
  00fcd	eb 20		 jmp	 SHORT $LN117@update_com
$LN116@update_com:
  00fcf	68 42 07 00 00	 push	 1858			; 00000742H
  00fd4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fd9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00fdf	51		 push	 ecx
  00fe0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fe5	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv667[ebp], 0
$LN117@update_com:
  00fef	6a 12		 push	 18			; 00000012H
  00ff1	8b 55 a0	 mov	 edx, DWORD PTR _old_target$[ebp]
  00ff4	52		 push	 edx
  00ff5	69 85 34 ff ff
	ff b4 00 00 00	 imul	 eax, DWORD PTR tv660[ebp], 180
  00fff	8b 8d 30 ff ff
	ff		 mov	 ecx, DWORD PTR tv667[ebp]
  01005	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  0100c	ff d2		 call	 edx
  0100e	85 c0		 test	 eax, eax
  01010	74 20		 je	 SHORT $LN49@update_com

; 1859 : 				{
; 1860 : 					if (!get_selectable_ground_radar_target (old_target))

  01012	8b 45 a0	 mov	 eax, DWORD PTR _old_target$[ebp]
  01015	50		 push	 eax
  01016	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  0101b	85 c0		 test	 eax, eax
  0101d	75 11		 jne	 SHORT $LN51@update_com

; 1861 : 					{
; 1862 : 						//
; 1863 : 						// target is no longer valid
; 1864 : 						//
; 1865 : 
; 1866 : 						new_target = get_best_ground_radar_target ();

  0101f	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  01024	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 1867 : 
; 1868 : 						set_gunship_target (new_target);

  01027	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  0102a	50		 push	 eax
  0102b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN51@update_com:

; 1869 : 					}
; 1870 : 				}
; 1871 : 				else

  01030	eb 11		 jmp	 SHORT $LN50@update_com
$LN49@update_com:

; 1872 : 				{
; 1873 : 					//
; 1874 : 					// target is no longer on the ground radar
; 1875 : 					//
; 1876 : 
; 1877 : 					new_target = get_best_ground_radar_target ();

  01032	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  01037	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 1878 : 
; 1879 : 					set_gunship_target (new_target);

  0103a	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  0103d	50		 push	 eax
  0103e	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN50@update_com:

; 1880 : 				}
; 1881 : 			}
; 1882 : 			else

  01043	eb 11		 jmp	 SHORT $LN48@update_com
$LN47@update_com:

; 1883 : 			{
; 1884 : 				//
; 1885 : 				// no target
; 1886 : 				//
; 1887 : 
; 1888 : 				new_target = get_best_ground_radar_target ();

  01045	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  0104a	89 45 9c	 mov	 DWORD PTR _new_target$[ebp], eax

; 1889 : 
; 1890 : 				set_gunship_target (new_target);

  0104d	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  01050	50		 push	 eax
  01051	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target
$LN48@update_com:

; 1891 : 			}
; 1892 : 		}
; 1893 : 
; 1894 : 		if (ground_radar.target_locked)

  01056	83 3d 20 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0
  0105d	74 18		 je	 SHORT $LN53@update_com

; 1895 : 		{
; 1896 : 			if ((new_target != old_target) || (new_target == NULL))

  0105f	8b 45 9c	 mov	 eax, DWORD PTR _new_target$[ebp]
  01062	3b 45 a0	 cmp	 eax, DWORD PTR _old_target$[ebp]
  01065	75 06		 jne	 SHORT $LN54@update_com
  01067	83 7d 9c 00	 cmp	 DWORD PTR _new_target$[ebp], 0
  0106b	75 0a		 jne	 SHORT $LN53@update_com
$LN54@update_com:

; 1897 : 			{
; 1898 : 				ground_radar.target_locked = FALSE;

  0106d	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0
$LN53@update_com:

; 1899 : 			}
; 1900 : 		}
; 1901 : 	}
; 1902 : 
; 1903 : 	target_locked = ground_radar.target_locked;

  01077	a1 20 00 00 00	 mov	 eax, DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32
  0107c	a3 00 00 00 00	 mov	 DWORD PTR ?target_locked@@3HA, eax ; target_locked

; 1904 : }

  01081	5f		 pop	 edi
  01082	5e		 pop	 esi
  01083	5b		 pop	 ebx
  01084	8b e5		 mov	 esp, ebp
  01086	5d		 pop	 ebp
  01087	c2 04 00	 ret	 4
?update_common_ground_radar@@YGXH@Z ENDP		; update_common_ground_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?select_previous_designated_ground_radar_target@@YGXXZ
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv150 = -84						; size = 4
tv129 = -84						; size = 4
tv78 = -84						; size = 4
tv166 = -80						; size = 4
tv142 = -80						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_current_target$ = -12					; size = 4
_new_target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_previous_designated_ground_radar_target@@YGXXZ PROC ; select_previous_designated_ground_radar_target, COMDAT

; 2982 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2983 : 	entity
; 2984 : 		*target,
; 2985 : 		*new_target,
; 2986 : 		*current_target;
; 2987 : 
; 2988 : 	new_target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new_target$[ebp], 0

; 2989 : 
; 2990 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00017	74 0c		 je	 SHORT $LN12@select_pre
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00023	eb 21		 jmp	 SHORT $LN13@select_pre
$LN12@select_pre:
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  0002b	83 c2 08	 add	 edx, 8
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@select_pre:
  00046	b9 01 00 00 00	 mov	 ecx, 1
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 09		 je	 SHORT $LN14@select_pre
  0004f	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00056	eb 21		 jmp	 SHORT $LN15@select_pre
$LN14@select_pre:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  0005e	83 c2 08	 add	 edx, 8
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@select_pre:
  00079	6a 26		 push	 38			; 00000026H
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00081	51		 push	 ecx
  00082	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00089	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  0008c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00093	ff d1		 call	 ecx
  00095	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 2991 : 
; 2992 : 	if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  00098	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0009c	74 7d		 je	 SHORT $LN8@select_pre
  0009e	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a2	74 0a		 je	 SHORT $LN16@select_pre
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000ac	eb 1d		 jmp	 SHORT $LN17@select_pre
$LN16@select_pre:
  000ae	68 b0 0b 00 00	 push	 2992			; 00000bb0H
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN17@select_pre:
  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	85 c0		 test	 eax, eax
  000d2	74 09		 je	 SHORT $LN18@select_pre
  000d4	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv129[ebp], 10 ; 0000000aH
  000db	eb 1d		 jmp	 SHORT $LN19@select_pre
$LN18@select_pre:
  000dd	68 b0 0b 00 00	 push	 2992			; 00000bb0H
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN19@select_pre:
  000fa	6a 0a		 push	 10			; 0000000aH
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  000ff	52		 push	 edx
  00100	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00107	8b 4d ac	 mov	 ecx, DWORD PTR tv129[ebp]
  0010a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00111	ff d2		 call	 edx
  00113	85 c0		 test	 eax, eax
  00115	0f 85 31 01 00
	00		 jne	 $LN6@select_pre
$LN8@select_pre:

; 2993 : 	{
; 2994 : 		target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00122	74 0c		 je	 SHORT $LN20@select_pre
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00129	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012b	89 4d b0	 mov	 DWORD PTR tv142[ebp], ecx
  0012e	eb 21		 jmp	 SHORT $LN21@select_pre
$LN20@select_pre:
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  00136	83 c2 0c	 add	 edx, 12			; 0000000cH
  00139	52		 push	 edx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN21@select_pre:
  00151	b9 01 00 00 00	 mov	 ecx, 1
  00156	85 c9		 test	 ecx, ecx
  00158	74 09		 je	 SHORT $LN22@select_pre
  0015a	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv150[ebp], 10 ; 0000000aH
  00161	eb 21		 jmp	 SHORT $LN23@select_pre
$LN22@select_pre:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  00169	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN23@select_pre:
  00184	6a 0a		 push	 10			; 0000000aH
  00186	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0018c	51		 push	 ecx
  0018d	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 180
  00194	8b 45 ac	 mov	 eax, DWORD PTR tv150[ebp]
  00197	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0019e	ff d1		 call	 ecx
  001a0	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_pre:

; 2995 : 
; 2996 : 		while (target)

  001a3	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001a7	0f 84 9d 00 00
	00		 je	 $LN3@select_pre

; 2997 : 		{
; 2998 : 			if (get_selectable_ground_radar_target (target))

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  001b6	85 c0		 test	 eax, eax
  001b8	74 0b		 je	 SHORT $LN9@select_pre

; 2999 : 			{
; 3000 : 				new_target = target;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3001 : 
; 3002 : 				break;

  001c0	e9 85 00 00 00	 jmp	 $LN3@select_pre
$LN9@select_pre:

; 3003 : 			}
; 3004 : 
; 3005 : 			target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001c5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001c9	74 0a		 je	 SHORT $LN24@select_pre
  001cb	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 4d b0	 mov	 DWORD PTR tv166[ebp], ecx
  001d3	eb 21		 jmp	 SHORT $LN25@select_pre
$LN24@select_pre:
  001d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  001db	83 c2 17	 add	 edx, 23			; 00000017H
  001de	52		 push	 edx
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ef	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN25@select_pre:
  001f6	b9 01 00 00 00	 mov	 ecx, 1
  001fb	85 c9		 test	 ecx, ecx
  001fd	74 09		 je	 SHORT $LN26@select_pre
  001ff	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv174[ebp], 10 ; 0000000aH
  00206	eb 21		 jmp	 SHORT $LN27@select_pre
$LN26@select_pre:
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_previous_designated_ground_radar_target@@YGXXZ@4JA
  0020e	83 c2 17	 add	 edx, 23			; 00000017H
  00211	52		 push	 edx
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021c	50		 push	 eax
  0021d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00222	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN27@select_pre:
  00229	6a 0a		 push	 10			; 0000000aH
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0022e	51		 push	 ecx
  0022f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 180
  00236	8b 45 ac	 mov	 eax, DWORD PTR tv174[ebp]
  00239	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00240	ff d1		 call	 ecx
  00242	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3006 : 		}

  00245	e9 59 ff ff ff	 jmp	 $LN2@select_pre
$LN3@select_pre:

; 3007 : 	}
; 3008 : 	else

  0024a	eb 3b		 jmp	 SHORT $LN7@select_pre
$LN6@select_pre:

; 3009 : 	{
; 3010 : 		target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  0024c	6a 0a		 push	 10			; 0000000aH
  0024e	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00257	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_pre:

; 3011 : 
; 3012 : 		while (target != current_target)

  0025a	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0025d	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00260	74 25		 je	 SHORT $LN7@select_pre

; 3013 : 		{
; 3014 : 			if (get_selectable_ground_radar_target (target))

  00262	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  0026b	85 c0		 test	 eax, eax
  0026d	74 08		 je	 SHORT $LN10@select_pre

; 3015 : 			{
; 3016 : 				new_target = target;

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 3017 : 
; 3018 : 				break;

  00275	eb 10		 jmp	 SHORT $LN7@select_pre
$LN10@select_pre:

; 3019 : 			}
; 3020 : 
; 3021 : 			target = get_local_entity_child_pred_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00277	6a 0a		 push	 10			; 0000000aH
  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00282	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 3022 : 		}

  00285	eb d3		 jmp	 SHORT $LN4@select_pre
$LN7@select_pre:

; 3023 : 	}
; 3024 : 	set_gunship_target (new_target);

  00287	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 3025 : }

  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
?select_previous_designated_ground_radar_target@@YGXXZ ENDP ; select_previous_designated_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?select_next_designated_ground_radar_target@@YGXXZ
_TEXT	SEGMENT
tv174 = -84						; size = 4
tv150 = -84						; size = 4
tv129 = -84						; size = 4
tv78 = -84						; size = 4
tv166 = -80						; size = 4
tv142 = -80						; size = 4
tv90 = -80						; size = 4
tv70 = -80						; size = 4
_current_target$ = -12					; size = 4
_new_target$ = -8					; size = 4
_target$ = -4						; size = 4
?select_next_designated_ground_radar_target@@YGXXZ PROC	; select_next_designated_ground_radar_target, COMDAT

; 2931 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2932 : 	entity
; 2933 : 		*target,
; 2934 : 		*new_target,
; 2935 : 		*current_target;
; 2936 : 
; 2937 : 	new_target = NULL;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _new_target$[ebp], 0

; 2938 : 
; 2939 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00017	74 0c		 je	 SHORT $LN12@select_nex
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  00023	eb 21		 jmp	 SHORT $LN13@select_nex
$LN12@select_nex:
  00025	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  0002b	83 c2 08	 add	 edx, 8
  0002e	52		 push	 edx
  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN13@select_nex:
  00046	b9 01 00 00 00	 mov	 ecx, 1
  0004b	85 c9		 test	 ecx, ecx
  0004d	74 09		 je	 SHORT $LN14@select_nex
  0004f	c7 45 ac 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00056	eb 21		 jmp	 SHORT $LN15@select_nex
$LN14@select_nex:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  0005e	83 c2 08	 add	 edx, 8
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN15@select_nex:
  00079	6a 26		 push	 38			; 00000026H
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00081	51		 push	 ecx
  00082	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00089	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  0008c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00093	ff d1		 call	 ecx
  00095	89 45 f4	 mov	 DWORD PTR _current_target$[ebp], eax

; 2940 : 
; 2941 : 	if ((!current_target) || (get_local_entity_parent (current_target, LIST_TYPE_DESIGNATED_TARGET) == NULL))

  00098	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  0009c	74 7d		 je	 SHORT $LN8@select_nex
  0009e	83 7d f4 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a2	74 0a		 je	 SHORT $LN16@select_nex
  000a4	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	89 4d b0	 mov	 DWORD PTR tv90[ebp], ecx
  000ac	eb 1d		 jmp	 SHORT $LN17@select_nex
$LN16@select_nex:
  000ae	68 7d 0b 00 00	 push	 2941			; 00000b7dH
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000be	52		 push	 edx
  000bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c4	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN17@select_nex:
  000cb	b8 01 00 00 00	 mov	 eax, 1
  000d0	85 c0		 test	 eax, eax
  000d2	74 09		 je	 SHORT $LN18@select_nex
  000d4	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv129[ebp], 10 ; 0000000aH
  000db	eb 1d		 jmp	 SHORT $LN19@select_nex
$LN18@select_nex:
  000dd	68 7d 0b 00 00	 push	 2941			; 00000b7dH
  000e2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN19@select_nex:
  000fa	6a 0a		 push	 10			; 0000000aH
  000fc	8b 55 f4	 mov	 edx, DWORD PTR _current_target$[ebp]
  000ff	52		 push	 edx
  00100	69 45 b0 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00107	8b 4d ac	 mov	 ecx, DWORD PTR tv129[ebp]
  0010a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00111	ff d2		 call	 edx
  00113	85 c0		 test	 eax, eax
  00115	0f 85 31 01 00
	00		 jne	 $LN6@select_nex
$LN8@select_nex:

; 2942 : 	{
; 2943 : 		target = get_local_entity_first_child (get_gunship_entity (), LIST_TYPE_DESIGNATED_TARGET);

  0011b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00122	74 0c		 je	 SHORT $LN20@select_nex
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00129	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012b	89 4d b0	 mov	 DWORD PTR tv142[ebp], ecx
  0012e	eb 21		 jmp	 SHORT $LN21@select_nex
$LN20@select_nex:
  00130	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  00136	83 c2 0c	 add	 edx, 12			; 0000000cH
  00139	52		 push	 edx
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0014a	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv142[ebp], 0
$LN21@select_nex:
  00151	b9 01 00 00 00	 mov	 ecx, 1
  00156	85 c9		 test	 ecx, ecx
  00158	74 09		 je	 SHORT $LN22@select_nex
  0015a	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv150[ebp], 10 ; 0000000aH
  00161	eb 21		 jmp	 SHORT $LN23@select_nex
$LN22@select_nex:
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  00169	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016c	52		 push	 edx
  0016d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00172	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00177	50		 push	 eax
  00178	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN23@select_nex:
  00184	6a 0a		 push	 10			; 0000000aH
  00186	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0018c	51		 push	 ecx
  0018d	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv142[ebp], 180
  00194	8b 45 ac	 mov	 eax, DWORD PTR tv150[ebp]
  00197	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0019e	ff d1		 call	 ecx
  001a0	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN2@select_nex:

; 2944 : 
; 2945 : 		while (target)

  001a3	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001a7	0f 84 9d 00 00
	00		 je	 $LN3@select_nex

; 2946 : 		{
; 2947 : 			if (get_selectable_ground_radar_target (target))

  001ad	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  001b6	85 c0		 test	 eax, eax
  001b8	74 0b		 je	 SHORT $LN9@select_nex

; 2948 : 			{
; 2949 : 				new_target = target;

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001bd	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 2950 : 
; 2951 : 				break;

  001c0	e9 85 00 00 00	 jmp	 $LN3@select_nex
$LN9@select_nex:

; 2952 : 			}
; 2953 : 
; 2954 : 			target = get_local_entity_child_succ (target, LIST_TYPE_DESIGNATED_TARGET);

  001c5	83 7d fc 00	 cmp	 DWORD PTR _target$[ebp], 0
  001c9	74 0a		 je	 SHORT $LN24@select_nex
  001cb	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  001ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d0	89 4d b0	 mov	 DWORD PTR tv166[ebp], ecx
  001d3	eb 21		 jmp	 SHORT $LN25@select_nex
$LN24@select_nex:
  001d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  001db	83 c2 17	 add	 edx, 23			; 00000017H
  001de	52		 push	 edx
  001df	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e9	50		 push	 eax
  001ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ef	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN25@select_nex:
  001f6	b9 01 00 00 00	 mov	 ecx, 1
  001fb	85 c9		 test	 ecx, ecx
  001fd	74 09		 je	 SHORT $LN26@select_nex
  001ff	c7 45 ac 0a 00
	00 00		 mov	 DWORD PTR tv174[ebp], 10 ; 0000000aH
  00206	eb 21		 jmp	 SHORT $LN27@select_nex
$LN26@select_nex:
  00208	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??select_next_designated_ground_radar_target@@YGXXZ@4JA
  0020e	83 c2 17	 add	 edx, 23			; 00000017H
  00211	52		 push	 edx
  00212	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0021c	50		 push	 eax
  0021d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00222	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN27@select_nex:
  00229	6a 0a		 push	 10			; 0000000aH
  0022b	8b 4d fc	 mov	 ecx, DWORD PTR _target$[ebp]
  0022e	51		 push	 ecx
  0022f	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 180
  00236	8b 45 ac	 mov	 eax, DWORD PTR tv174[ebp]
  00239	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00240	ff d1		 call	 ecx
  00242	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 2955 : 		}

  00245	e9 59 ff ff ff	 jmp	 $LN2@select_nex
$LN3@select_nex:

; 2956 : 	}
; 2957 : 	else

  0024a	eb 3b		 jmp	 SHORT $LN7@select_nex
$LN6@select_nex:

; 2958 : 	{
; 2959 : 		target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_DESIGNATED_TARGET);

  0024c	6a 0a		 push	 10			; 0000000aH
  0024e	8b 45 f4	 mov	 eax, DWORD PTR _current_target$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00257	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax
$LN4@select_nex:

; 2960 : 
; 2961 : 		while (target != current_target)

  0025a	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0025d	3b 45 f4	 cmp	 eax, DWORD PTR _current_target$[ebp]
  00260	74 25		 je	 SHORT $LN7@select_nex

; 2962 : 		{
; 2963 : 			if (get_selectable_ground_radar_target (target))

  00262	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  0026b	85 c0		 test	 eax, eax
  0026d	74 08		 je	 SHORT $LN10@select_nex

; 2964 : 			{
; 2965 : 				new_target = target;

  0026f	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  00272	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 2966 : 
; 2967 : 				break;

  00275	eb 10		 jmp	 SHORT $LN7@select_nex
$LN10@select_nex:

; 2968 : 			}
; 2969 : 
; 2970 : 			target = get_local_entity_child_succ_circular (target, LIST_TYPE_DESIGNATED_TARGET);

  00277	6a 0a		 push	 10			; 0000000aH
  00279	8b 45 fc	 mov	 eax, DWORD PTR _target$[ebp]
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00282	89 45 fc	 mov	 DWORD PTR _target$[ebp], eax

; 2971 : 		}

  00285	eb d3		 jmp	 SHORT $LN4@select_nex
$LN7@select_nex:

; 2972 : 	}
; 2973 : 
; 2974 : 	set_gunship_target (new_target);

  00287	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 2975 : }

  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c3		 ret	 0
?select_next_designated_ground_radar_target@@YGXXZ ENDP	; select_next_designated_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_previous_ground_radar_target@@YGXXZ
_TEXT	SEGMENT
tv129 = -80						; size = 4
tv78 = -80						; size = 4
tv90 = -76						; size = 4
tv70 = -76						; size = 4
_new_target$ = -8					; size = 4
_current_target$ = -4					; size = 4
?get_previous_ground_radar_target@@YGXXZ PROC		; get_previous_ground_radar_target, COMDAT

; 1498 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1499 : 	entity
; 1500 : 		*current_target,
; 1501 : 		*new_target;
; 1502 : 
; 1503 : 	ground_radar.auto_target = FALSE;

  00009	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+36, 0

; 1504 : 
; 1505 : 	ground_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0

; 1506 : 
; 1507 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN8@get_previo
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN9@get_previo
$LN8@get_previo:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_ground_radar_target@@YGXXZ@4JA
  00038	83 c2 09	 add	 edx, 9
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@get_previo:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN10@get_previo
  0005c	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN11@get_previo
$LN10@get_previo:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_previous_ground_radar_target@@YGXXZ@4JA
  0006b	83 c2 09	 add	 edx, 9
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@get_previo:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00096	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 fc	 mov	 DWORD PTR _current_target$[ebp], eax

; 1508 : 
; 1509 : 	if (current_target && get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET))

  000a5	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	0f 84 b0 00 00
	00		 je	 $LN4@get_previo
  000af	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 0a		 je	 SHORT $LN12@get_previo
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  000bd	eb 1d		 jmp	 SHORT $LN13@get_previo
$LN12@get_previo:
  000bf	68 e5 05 00 00	 push	 1509			; 000005e5H
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@get_previo:
  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	85 c0		 test	 eax, eax
  000e3	74 09		 je	 SHORT $LN14@get_previo
  000e5	c7 45 b0 12 00
	00 00		 mov	 DWORD PTR tv129[ebp], 18 ; 00000012H
  000ec	eb 1d		 jmp	 SHORT $LN15@get_previo
$LN14@get_previo:
  000ee	68 e5 05 00 00	 push	 1509			; 000005e5H
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN15@get_previo:
  0010b	6a 12		 push	 18			; 00000012H
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _current_target$[ebp]
  00110	52		 push	 edx
  00111	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00118	8b 4d b0	 mov	 ecx, DWORD PTR tv129[ebp]
  0011b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00122	ff d2		 call	 edx
  00124	85 c0		 test	 eax, eax
  00126	74 37		 je	 SHORT $LN4@get_previo

; 1510 : 	{
; 1511 : 		new_target = get_local_entity_child_pred_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00128	6a 12		 push	 18			; 00000012H
  0012a	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00133	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN2@get_previo:

; 1512 : 
; 1513 : 		while (new_target != current_target)

  00136	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00139	3b 45 fc	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0013c	74 1f		 je	 SHORT $LN3@get_previo

; 1514 : 		{
; 1515 : 			if (get_selectable_ground_radar_target (new_target))

  0013e	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  00147	85 c0		 test	 eax, eax
  00149	74 02		 je	 SHORT $LN6@get_previo

; 1516 : 			{
; 1517 : 				break;

  0014b	eb 10		 jmp	 SHORT $LN3@get_previo
$LN6@get_previo:

; 1518 : 			}
; 1519 : 
; 1520 : 			new_target = get_local_entity_child_pred_circular (new_target, LIST_TYPE_GUNSHIP_TARGET);

  0014d	6a 12		 push	 18			; 00000012H
  0014f	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?get_local_entity_child_pred_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_pred_circular
  00158	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 1521 : 		}

  0015b	eb d9		 jmp	 SHORT $LN2@get_previo
$LN3@get_previo:

; 1522 : 	}
; 1523 : 	else

  0015d	eb 08		 jmp	 SHORT $LN5@get_previo
$LN4@get_previo:

; 1524 : 	{
; 1525 : 		new_target = get_best_ground_radar_target ();

  0015f	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  00164	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN5@get_previo:

; 1526 : 	}
; 1527 : 
; 1528 : 	set_gunship_target (new_target);

  00167	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1529 : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
?get_previous_ground_radar_target@@YGXXZ ENDP		; get_previous_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_next_ground_radar_target@@YGXXZ
_TEXT	SEGMENT
tv129 = -80						; size = 4
tv78 = -80						; size = 4
tv90 = -76						; size = 4
tv70 = -76						; size = 4
_new_target$ = -8					; size = 4
_current_target$ = -4					; size = 4
?get_next_ground_radar_target@@YGXXZ PROC		; get_next_ground_radar_target, COMDAT

; 1460 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1461 : 	entity
; 1462 : 		*current_target,
; 1463 : 		*new_target;
; 1464 : 
; 1465 : 	ground_radar.auto_target = FALSE;

  00009	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+36, 0

; 1466 : 
; 1467 : 	ground_radar.target_locked = FALSE;

  00013	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+32, 0

; 1468 : 
; 1469 : 	current_target = get_local_entity_parent (get_gunship_entity (), LIST_TYPE_TARGET);

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00024	74 0c		 je	 SHORT $LN8@get_next_g
  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0002b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002d	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00030	eb 21		 jmp	 SHORT $LN9@get_next_g
$LN8@get_next_g:
  00032	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_ground_radar_target@@YGXXZ@4JA
  00038	83 c2 09	 add	 edx, 9
  0003b	52		 push	 edx
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0004c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@get_next_g:
  00053	b9 01 00 00 00	 mov	 ecx, 1
  00058	85 c9		 test	 ecx, ecx
  0005a	74 09		 je	 SHORT $LN10@get_next_g
  0005c	c7 45 b0 26 00
	00 00		 mov	 DWORD PTR tv78[ebp], 38	; 00000026H
  00063	eb 21		 jmp	 SHORT $LN11@get_next_g
$LN10@get_next_g:
  00065	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_next_ground_radar_target@@YGXXZ@4JA
  0006b	83 c2 09	 add	 edx, 9
  0006e	52		 push	 edx
  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00074	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@get_next_g:
  00086	6a 26		 push	 38			; 00000026H
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008e	51		 push	 ecx
  0008f	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00096	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00099	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a0	ff d1		 call	 ecx
  000a2	89 45 fc	 mov	 DWORD PTR _current_target$[ebp], eax

; 1470 : 
; 1471 : 	if (current_target && get_local_entity_parent (current_target, LIST_TYPE_GUNSHIP_TARGET))

  000a5	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000a9	0f 84 b0 00 00
	00		 je	 $LN4@get_next_g
  000af	83 7d fc 00	 cmp	 DWORD PTR _current_target$[ebp], 0
  000b3	74 0a		 je	 SHORT $LN12@get_next_g
  000b5	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  000b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ba	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  000bd	eb 1d		 jmp	 SHORT $LN13@get_next_g
$LN12@get_next_g:
  000bf	68 bf 05 00 00	 push	 1471			; 000005bfH
  000c4	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000cf	52		 push	 edx
  000d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN13@get_next_g:
  000dc	b8 01 00 00 00	 mov	 eax, 1
  000e1	85 c0		 test	 eax, eax
  000e3	74 09		 je	 SHORT $LN14@get_next_g
  000e5	c7 45 b0 12 00
	00 00		 mov	 DWORD PTR tv129[ebp], 18 ; 00000012H
  000ec	eb 1d		 jmp	 SHORT $LN15@get_next_g
$LN14@get_next_g:
  000ee	68 bf 05 00 00	 push	 1471			; 000005bfH
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN15@get_next_g:
  0010b	6a 12		 push	 18			; 00000012H
  0010d	8b 55 fc	 mov	 edx, DWORD PTR _current_target$[ebp]
  00110	52		 push	 edx
  00111	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 180
  00118	8b 4d b0	 mov	 ecx, DWORD PTR tv129[ebp]
  0011b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00122	ff d2		 call	 edx
  00124	85 c0		 test	 eax, eax
  00126	74 37		 je	 SHORT $LN4@get_next_g

; 1472 : 	{
; 1473 : 		new_target = get_local_entity_child_succ_circular (current_target, LIST_TYPE_GUNSHIP_TARGET);

  00128	6a 12		 push	 18			; 00000012H
  0012a	8b 45 fc	 mov	 eax, DWORD PTR _current_target$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00133	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN2@get_next_g:

; 1474 : 
; 1475 : 		while (new_target != current_target)

  00136	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00139	3b 45 fc	 cmp	 eax, DWORD PTR _current_target$[ebp]
  0013c	74 1f		 je	 SHORT $LN3@get_next_g

; 1476 : 		{
; 1477 : 			if (get_selectable_ground_radar_target (new_target))

  0013e	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?get_selectable_ground_radar_target@@YGHPAUENTITY@@@Z ; get_selectable_ground_radar_target
  00147	85 c0		 test	 eax, eax
  00149	74 02		 je	 SHORT $LN6@get_next_g

; 1478 : 			{
; 1479 : 				break;

  0014b	eb 10		 jmp	 SHORT $LN3@get_next_g
$LN6@get_next_g:

; 1480 : 			}
; 1481 : 
; 1482 : 			new_target = get_local_entity_child_succ_circular (new_target, LIST_TYPE_GUNSHIP_TARGET);

  0014d	6a 12		 push	 18			; 00000012H
  0014f	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?get_local_entity_child_succ_circular@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_entity_child_succ_circular
  00158	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax

; 1483 : 		}

  0015b	eb d9		 jmp	 SHORT $LN2@get_next_g
$LN3@get_next_g:

; 1484 : 	}
; 1485 : 	else

  0015d	eb 08		 jmp	 SHORT $LN5@get_next_g
$LN4@get_next_g:

; 1486 : 	{
; 1487 : 		new_target = get_best_ground_radar_target ();

  0015f	e8 00 00 00 00	 call	 ?get_best_ground_radar_target@@YGPAUENTITY@@XZ ; get_best_ground_radar_target
  00164	89 45 f8	 mov	 DWORD PTR _new_target$[ebp], eax
$LN5@get_next_g:

; 1488 : 	}
; 1489 : 
; 1490 : 	set_gunship_target (new_target);

  00167	8b 45 f8	 mov	 eax, DWORD PTR _new_target$[ebp]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?set_gunship_target@@YGXPAUENTITY@@@Z ; set_gunship_target

; 1491 : }

  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	5b		 pop	 ebx
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
?get_next_ground_radar_target@@YGXXZ ENDP		; get_next_ground_radar_target
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv134 = -72						; size = 4
tv83 = -72						; size = 4
tv95 = -68						; size = 4
tv76 = -68						; size = 4
_target$ = 8						; size = 4
?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z PROC ; get_target_matches_ground_radar_declutter_criteria, COMDAT

; 1429 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1430 : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_target
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_target:

; 1431 : 
; 1432 : 	if (ground_radar.target_priority_type == TARGET_PRIORITY_UNKNOWN)

  00027	83 3d 2c 00 00
	00 00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+44, 0
  0002e	75 0a		 jne	 SHORT $LN3@get_target

; 1433 : 	{
; 1434 : 		return (TRUE);

  00030	b8 01 00 00 00	 mov	 eax, 1
  00035	e9 19 01 00 00	 jmp	 $LN1@get_target
$LN3@get_target:

; 1435 : 	}
; 1436 : // Jabberwock 031107 Designated targets
; 1437 : 
; 1438 : 	if (ground_radar.target_priority_type == TARGET_PRIORITY_DESIGNATED)

  0003a	83 3d 2c 00 00
	00 04		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+44, 4
  00041	0f 85 83 00 00
	00		 jne	 $LN4@get_target

; 1439 : 	{
; 1440 : 		if (get_local_entity_parent (target, LIST_TYPE_DESIGNATED_TARGET))

  00047	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0004b	74 0a		 je	 SHORT $LN8@get_target
  0004d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00050	8b 08		 mov	 ecx, DWORD PTR [eax]
  00052	89 4d bc	 mov	 DWORD PTR tv76[ebp], ecx
  00055	eb 1d		 jmp	 SHORT $LN9@get_target
$LN8@get_target:
  00057	68 a0 05 00 00	 push	 1440			; 000005a0H
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00067	52		 push	 edx
  00068	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006d	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN9@get_target:
  00074	b8 01 00 00 00	 mov	 eax, 1
  00079	85 c0		 test	 eax, eax
  0007b	74 09		 je	 SHORT $LN10@get_target
  0007d	c7 45 b8 0a 00
	00 00		 mov	 DWORD PTR tv83[ebp], 10	; 0000000aH
  00084	eb 1d		 jmp	 SHORT $LN11@get_target
$LN10@get_target:
  00086	68 a0 05 00 00	 push	 1440			; 000005a0H
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00096	51		 push	 ecx
  00097	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@get_target:
  000a3	6a 0a		 push	 10			; 0000000aH
  000a5	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  000a8	52		 push	 edx
  000a9	69 45 bc b4 00
	00 00		 imul	 eax, DWORD PTR tv76[ebp], 180
  000b0	8b 4d b8	 mov	 ecx, DWORD PTR tv83[ebp]
  000b3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  000ba	ff d2		 call	 edx
  000bc	85 c0		 test	 eax, eax
  000be	74 0a		 je	 SHORT $LN4@get_target

; 1441 : 		{
; 1442 : 			return (TRUE);

  000c0	b8 01 00 00 00	 mov	 eax, 1
  000c5	e9 89 00 00 00	 jmp	 $LN1@get_target
$LN4@get_target:

; 1443 : 		}
; 1444 : 	}
; 1445 : // Jabberwock 031107 ends
; 1446 : 
; 1447 : 	if (ground_radar.target_priority_type == get_local_entity_int_value (target, INT_TYPE_TARGET_PRIORITY_TYPE))

  000ca	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000ce	74 0a		 je	 SHORT $LN12@get_target
  000d0	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000d3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d5	89 4d bc	 mov	 DWORD PTR tv95[ebp], ecx
  000d8	eb 1d		 jmp	 SHORT $LN13@get_target
$LN12@get_target:
  000da	68 a7 05 00 00	 push	 1447			; 000005a7H
  000df	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ea	52		 push	 edx
  000eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f0	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN13@get_target:
  000f7	b8 01 00 00 00	 mov	 eax, 1
  000fc	85 c0		 test	 eax, eax
  000fe	74 09		 je	 SHORT $LN14@get_target
  00100	c7 45 b8 d4 00
	00 00		 mov	 DWORD PTR tv134[ebp], 212 ; 000000d4H
  00107	eb 1d		 jmp	 SHORT $LN15@get_target
$LN14@get_target:
  00109	68 a7 05 00 00	 push	 1447			; 000005a7H
  0010e	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00119	51		 push	 ecx
  0011a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv134[ebp], 0
$LN15@get_target:
  00126	68 d4 00 00 00	 push	 212			; 000000d4H
  0012b	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  0012e	52		 push	 edx
  0012f	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv95[ebp], 1116
  00136	8b 4d b8	 mov	 ecx, DWORD PTR tv134[ebp]
  00139	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00140	ff d2		 call	 edx
  00142	39 05 2c 00 00
	00		 cmp	 DWORD PTR ?ground_radar@@3URADAR_PARAMS@@A+44, eax
  00148	75 07		 jne	 SHORT $LN6@get_target

; 1448 : 	{
; 1449 : 		return (TRUE);

  0014a	b8 01 00 00 00	 mov	 eax, 1
  0014f	eb 02		 jmp	 SHORT $LN1@get_target
$LN6@get_target:

; 1450 : 	}
; 1451 : 
; 1452 : 	return (FALSE);

  00151	33 c0		 xor	 eax, eax
$LN1@get_target:

; 1453 : }

  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
?get_target_matches_ground_radar_declutter_criteria@@YGHPAUENTITY@@@Z ENDP ; get_target_matches_ground_radar_declutter_criteria
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv305 = -84						; size = 8
tv291 = -84						; size = 8
tv232 = -76						; size = 4
tv213 = -76						; size = 4
tv193 = -76						; size = 4
tv173 = -76						; size = 4
tv154 = -76						; size = 4
tv135 = -76						; size = 4
tv83 = -76						; size = 4
tv225 = -72						; size = 4
tv206 = -72						; size = 4
tv186 = -72						; size = 4
tv166 = -72						; size = 4
tv147 = -72						; size = 4
tv128 = -72						; size = 4
tv89 = -72						; size = 4
tv75 = -72						; size = 4
_target_type$ = -4					; size = 4
_target$ = 8						; size = 4
?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z PROC ; get_gunship_target_valid_for_ground_radar, COMDAT

; 844  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 845  : 	target_types
; 846  : 		target_type;
; 847  : 
; 848  : 	ASSERT (target);

  00009	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@get_gunshi
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06JJLAMBGK@target@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_gunshi:

; 849  : 
; 850  : 	target_type = (target_types) get_local_entity_int_value (target, INT_TYPE_TARGET_TYPE);

  00027	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0002b	74 0a		 je	 SHORT $LN18@get_gunshi
  0002d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	89 4d b8	 mov	 DWORD PTR tv75[ebp], ecx
  00035	eb 21		 jmp	 SHORT $LN19@get_gunshi
$LN18@get_gunshi:
  00037	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA
  0003d	83 c2 06	 add	 edx, 6
  00040	52		 push	 edx
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00051	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN19@get_gunshi:
  00058	b9 01 00 00 00	 mov	 ecx, 1
  0005d	85 c9		 test	 ecx, ecx
  0005f	74 09		 je	 SHORT $LN20@get_gunshi
  00061	c7 45 b4 d6 00
	00 00		 mov	 DWORD PTR tv83[ebp], 214 ; 000000d6H
  00068	eb 21		 jmp	 SHORT $LN21@get_gunshi
$LN20@get_gunshi:
  0006a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z@4JA
  00070	83 c2 06	 add	 edx, 6
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00084	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN21@get_gunshi:
  0008b	68 d6 00 00 00	 push	 214			; 000000d6H
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _target$[ebp]
  00093	51		 push	 ecx
  00094	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 1116
  0009b	8b 45 b4	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _target_type$[ebp], eax

; 851  : 
; 852  : 	switch (target_type)

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _target_type$[ebp]
  000ad	89 45 b8	 mov	 DWORD PTR tv89[ebp], eax
  000b0	83 7d b8 00	 cmp	 DWORD PTR tv89[ebp], 0
  000b4	74 15		 je	 SHORT $LN5@get_gunshi
  000b6	83 7d b8 01	 cmp	 DWORD PTR tv89[ebp], 1
  000ba	74 1b		 je	 SHORT $LN6@get_gunshi
  000bc	83 7d b8 02	 cmp	 DWORD PTR tv89[ebp], 2
  000c0	0f 84 b1 00 00
	00		 je	 $LN9@get_gunshi
  000c6	e9 50 03 00 00	 jmp	 $LN16@get_gunshi
$LN5@get_gunshi:

; 853  : 	{
; 854  : 		////////////////////////////////////////
; 855  : 		case TARGET_TYPE_INVALID:
; 856  : 		////////////////////////////////////////
; 857  : 		{
; 858  : 			//
; 859  : 			// this implicitly ignores radar clutter
; 860  : 			//
; 861  : 
; 862  : 			return (FALSE);

  000cb	33 c0		 xor	 eax, eax
  000cd	e9 60 03 00 00	 jmp	 $LN1@get_gunshi

; 863  : 
; 864  : 			break;

  000d2	e9 59 03 00 00	 jmp	 $LN2@get_gunshi
$LN6@get_gunshi:

; 865  : 		}
; 866  : 		////////////////////////////////////////
; 867  : 		case TARGET_TYPE_GROUND:
; 868  : 		////////////////////////////////////////
; 869  : 		{
; 870  : 
; 871  : 			// loke 030322
; 872  : 			// infantry should never show up on ground radar
; 873  : 
; 874  : 			if (session_ground_radar_ignores_infantry)

  000d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_ground_radar_ignores_infantry@@3HA, 0 ; session_ground_radar_ignores_infantry
  000de	0f 84 84 00 00
	00		 je	 $LN8@get_gunshi

; 875  : 			{
; 876  : 				if (get_local_entity_int_value (target, INT_TYPE_VIEW_CATEGORY) == VIEW_CATEGORY_INFANTRY)

  000e4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  000e8	74 0a		 je	 SHORT $LN22@get_gunshi
  000ea	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	89 4d b8	 mov	 DWORD PTR tv128[ebp], ecx
  000f2	eb 1d		 jmp	 SHORT $LN23@get_gunshi
$LN22@get_gunshi:
  000f4	68 6c 03 00 00	 push	 876			; 0000036cH
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00104	52		 push	 edx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN23@get_gunshi:
  00111	b8 01 00 00 00	 mov	 eax, 1
  00116	85 c0		 test	 eax, eax
  00118	74 09		 je	 SHORT $LN24@get_gunshi
  0011a	c7 45 b4 f6 00
	00 00		 mov	 DWORD PTR tv135[ebp], 246 ; 000000f6H
  00121	eb 1d		 jmp	 SHORT $LN25@get_gunshi
$LN24@get_gunshi:
  00123	68 6c 03 00 00	 push	 876			; 0000036cH
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00139	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN25@get_gunshi:
  00140	68 f6 00 00 00	 push	 246			; 000000f6H
  00145	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00148	52		 push	 edx
  00149	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv128[ebp], 1116
  00150	8b 4d b4	 mov	 ecx, DWORD PTR tv135[ebp]
  00153	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0015a	ff d2		 call	 edx
  0015c	83 f8 09	 cmp	 eax, 9
  0015f	75 07		 jne	 SHORT $LN8@get_gunshi

; 877  : 				{
; 878  : 					return (FALSE);

  00161	33 c0		 xor	 eax, eax
  00163	e9 ca 02 00 00	 jmp	 $LN1@get_gunshi
$LN8@get_gunshi:

; 879  : 				}
; 880  : 			}
; 881  : 
; 882  : 			return (TRUE);

  00168	b8 01 00 00 00	 mov	 eax, 1
  0016d	e9 c0 02 00 00	 jmp	 $LN1@get_gunshi

; 883  : 
; 884  : 			break;

  00172	e9 b9 02 00 00	 jmp	 $LN2@get_gunshi
$LN9@get_gunshi:

; 885  : 		}
; 886  : 		////////////////////////////////////////
; 887  : 		case TARGET_TYPE_AIR:
; 888  : 		////////////////////////////////////////
; 889  : 		{
; 890  : 			if (get_local_entity_int_value (target, INT_TYPE_AIRBORNE_AIRCRAFT))

  00177	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0017b	74 0a		 je	 SHORT $LN26@get_gunshi
  0017d	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00180	8b 08		 mov	 ecx, DWORD PTR [eax]
  00182	89 4d b8	 mov	 DWORD PTR tv147[ebp], ecx
  00185	eb 1d		 jmp	 SHORT $LN27@get_gunshi
$LN26@get_gunshi:
  00187	68 7a 03 00 00	 push	 890			; 0000037aH
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00197	52		 push	 edx
  00198	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0019d	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv147[ebp], 0
$LN27@get_gunshi:
  001a4	b8 01 00 00 00	 mov	 eax, 1
  001a9	85 c0		 test	 eax, eax
  001ab	74 09		 je	 SHORT $LN28@get_gunshi
  001ad	c7 45 b4 04 00
	00 00		 mov	 DWORD PTR tv154[ebp], 4
  001b4	eb 1d		 jmp	 SHORT $LN29@get_gunshi
$LN28@get_gunshi:
  001b6	68 7a 03 00 00	 push	 890			; 0000037aH
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001cc	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN29@get_gunshi:
  001d3	6a 04		 push	 4
  001d5	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  001d8	52		 push	 edx
  001d9	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv147[ebp], 1116
  001e0	8b 4d b4	 mov	 ecx, DWORD PTR tv154[ebp]
  001e3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001ea	ff d2		 call	 edx
  001ec	85 c0		 test	 eax, eax
  001ee	0f 84 24 01 00
	00		 je	 $LN10@get_gunshi

; 891  : 			{
; 892  : 				//
; 893  : 				// allow low and slow flying aircraft
; 894  : 				//
; 895  : 
; 896  : 				if (get_local_entity_float_value (target, FLOAT_TYPE_VELOCITY) < knots_to_metres_per_second (50.0))

  001f4	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  001f8	74 0a		 je	 SHORT $LN30@get_gunshi
  001fa	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  001fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ff	89 4d b8	 mov	 DWORD PTR tv166[ebp], ecx
  00202	eb 1d		 jmp	 SHORT $LN31@get_gunshi
$LN30@get_gunshi:
  00204	68 80 03 00 00	 push	 896			; 00000380H
  00209	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0020e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00214	52		 push	 edx
  00215	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021a	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN31@get_gunshi:
  00221	b8 01 00 00 00	 mov	 eax, 1
  00226	85 c0		 test	 eax, eax
  00228	74 09		 je	 SHORT $LN32@get_gunshi
  0022a	c7 45 b4 93 00
	00 00		 mov	 DWORD PTR tv173[ebp], 147 ; 00000093H
  00231	eb 1d		 jmp	 SHORT $LN33@get_gunshi
$LN32@get_gunshi:
  00233	68 80 03 00 00	 push	 896			; 00000380H
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00243	51		 push	 ecx
  00244	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00249	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv173[ebp], 0
$LN33@get_gunshi:
  00250	68 93 00 00 00	 push	 147			; 00000093H
  00255	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00258	52		 push	 edx
  00259	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv166[ebp], 700
  00260	8b 4d b4	 mov	 ecx, DWORD PTR tv173[ebp]
  00263	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  0026a	ff d2		 call	 edx
  0026c	dd 5d ac	 fstp	 QWORD PTR tv291[ebp]
  0026f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4039c4bc10000000
  00277	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv291[ebp]
  0027c	0f 86 91 00 00
	00		 jbe	 $LN13@get_gunshi

; 897  : 				{
; 898  : 					if (get_local_entity_float_value (target, FLOAT_TYPE_RADAR_ALTITUDE) < 10.0)

  00282	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00286	74 0a		 je	 SHORT $LN34@get_gunshi
  00288	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0028b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0028d	89 4d b8	 mov	 DWORD PTR tv186[ebp], ecx
  00290	eb 1d		 jmp	 SHORT $LN35@get_gunshi
$LN34@get_gunshi:
  00292	68 82 03 00 00	 push	 898			; 00000382H
  00297	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a2	52		 push	 edx
  002a3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv186[ebp], 0
$LN35@get_gunshi:
  002af	b8 01 00 00 00	 mov	 eax, 1
  002b4	85 c0		 test	 eax, eax
  002b6	74 09		 je	 SHORT $LN36@get_gunshi
  002b8	c7 45 b4 68 00
	00 00		 mov	 DWORD PTR tv193[ebp], 104 ; 00000068H
  002bf	eb 1d		 jmp	 SHORT $LN37@get_gunshi
$LN36@get_gunshi:
  002c1	68 82 03 00 00	 push	 898			; 00000382H
  002c6	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  002cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  002d1	51		 push	 ecx
  002d2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv193[ebp], 0
$LN37@get_gunshi:
  002de	6a 68		 push	 104			; 00000068H
  002e0	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  002e3	52		 push	 edx
  002e4	69 45 b8 bc 02
	00 00		 imul	 eax, DWORD PTR tv186[ebp], 700
  002eb	8b 4d b4	 mov	 ecx, DWORD PTR tv193[ebp]
  002ee	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  002f5	ff d2		 call	 edx
  002f7	dd 5d ac	 fstp	 QWORD PTR tv305[ebp]
  002fa	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00302	66 0f 2f 45 ac	 comisd	 xmm0, QWORD PTR tv305[ebp]
  00307	76 0a		 jbe	 SHORT $LN13@get_gunshi

; 899  : 					{
; 900  : 						return (TRUE);

  00309	b8 01 00 00 00	 mov	 eax, 1
  0030e	e9 1f 01 00 00	 jmp	 $LN1@get_gunshi
$LN13@get_gunshi:

; 901  : 					}
; 902  : 				}
; 903  : 			}
; 904  : 			else

  00313	e9 fd 00 00 00	 jmp	 $LN15@get_gunshi
$LN10@get_gunshi:

; 905  : 			{
; 906  : 				if (!get_local_entity_int_value (target, INT_TYPE_INSIDE_HANGAR))

  00318	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  0031c	74 0a		 je	 SHORT $LN38@get_gunshi
  0031e	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  00321	8b 08		 mov	 ecx, DWORD PTR [eax]
  00323	89 4d b8	 mov	 DWORD PTR tv206[ebp], ecx
  00326	eb 1d		 jmp	 SHORT $LN39@get_gunshi
$LN38@get_gunshi:
  00328	68 8a 03 00 00	 push	 906			; 0000038aH
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00332	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00338	52		 push	 edx
  00339	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv206[ebp], 0
$LN39@get_gunshi:
  00345	b8 01 00 00 00	 mov	 eax, 1
  0034a	85 c0		 test	 eax, eax
  0034c	74 09		 je	 SHORT $LN40@get_gunshi
  0034e	c7 45 b4 6a 00
	00 00		 mov	 DWORD PTR tv213[ebp], 106 ; 0000006aH
  00355	eb 1d		 jmp	 SHORT $LN41@get_gunshi
$LN40@get_gunshi:
  00357	68 8a 03 00 00	 push	 906			; 0000038aH
  0035c	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00361	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00367	51		 push	 ecx
  00368	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0036d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN41@get_gunshi:
  00374	6a 6a		 push	 106			; 0000006aH
  00376	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  00379	52		 push	 edx
  0037a	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv206[ebp], 1116
  00381	8b 4d b4	 mov	 ecx, DWORD PTR tv213[ebp]
  00384	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0038b	ff d2		 call	 edx
  0038d	85 c0		 test	 eax, eax
  0038f	0f 85 80 00 00
	00		 jne	 $LN15@get_gunshi

; 907  : 				{
; 908  : 					if (!get_local_entity_int_value (target, INT_TYPE_LANDED_ON_CARRIER))

  00395	83 7d 08 00	 cmp	 DWORD PTR _target$[ebp], 0
  00399	74 0a		 je	 SHORT $LN42@get_gunshi
  0039b	8b 45 08	 mov	 eax, DWORD PTR _target$[ebp]
  0039e	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a0	89 4d b8	 mov	 DWORD PTR tv225[ebp], ecx
  003a3	eb 1d		 jmp	 SHORT $LN43@get_gunshi
$LN42@get_gunshi:
  003a5	68 8c 03 00 00	 push	 908			; 0000038cH
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003af	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b5	52		 push	 edx
  003b6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003bb	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN43@get_gunshi:
  003c2	b8 01 00 00 00	 mov	 eax, 1
  003c7	85 c0		 test	 eax, eax
  003c9	74 09		 je	 SHORT $LN44@get_gunshi
  003cb	c7 45 b4 75 00
	00 00		 mov	 DWORD PTR tv232[ebp], 117 ; 00000075H
  003d2	eb 1d		 jmp	 SHORT $LN45@get_gunshi
$LN44@get_gunshi:
  003d4	68 8c 03 00 00	 push	 908			; 0000038cH
  003d9	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  003de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003e4	51		 push	 ecx
  003e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ea	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv232[ebp], 0
$LN45@get_gunshi:
  003f1	6a 75		 push	 117			; 00000075H
  003f3	8b 55 08	 mov	 edx, DWORD PTR _target$[ebp]
  003f6	52		 push	 edx
  003f7	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv225[ebp], 1116
  003fe	8b 4d b4	 mov	 ecx, DWORD PTR tv232[ebp]
  00401	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00408	ff d2		 call	 edx
  0040a	85 c0		 test	 eax, eax
  0040c	75 07		 jne	 SHORT $LN15@get_gunshi

; 909  : 					{
; 910  : 						return (TRUE);

  0040e	b8 01 00 00 00	 mov	 eax, 1
  00413	eb 1d		 jmp	 SHORT $LN1@get_gunshi
$LN15@get_gunshi:

; 911  : 					}
; 912  : 				}
; 913  : 			}
; 914  : 
; 915  : 			return (FALSE);

  00415	33 c0		 xor	 eax, eax
  00417	eb 19		 jmp	 SHORT $LN1@get_gunshi

; 916  : 
; 917  : 			break;

  00419	eb 15		 jmp	 SHORT $LN2@get_gunshi
$LN16@get_gunshi:

; 918  : 		}
; 919  : 		////////////////////////////////////////
; 920  : 		default:
; 921  : 		////////////////////////////////////////
; 922  : 		{
; 923  : 			debug_fatal ("Invalid target type = %d", target_type);

  0041b	8b 45 fc	 mov	 eax, DWORD PTR _target_type$[ebp]
  0041e	50		 push	 eax
  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BOOGNJOO@Invalid?5target?5type?5?$DN?5?$CFd@
  00424	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00429	83 c4 08	 add	 esp, 8

; 924  : 
; 925  : 			return (FALSE);

  0042c	33 c0		 xor	 eax, eax
  0042e	eb 02		 jmp	 SHORT $LN1@get_gunshi
$LN2@get_gunshi:

; 926  : 
; 927  : 			break;
; 928  : 		}
; 929  : 	}
; 930  : 
; 931  : 	return (FALSE);

  00430	33 c0		 xor	 eax, eax
$LN1@get_gunshi:

; 932  : }

  00432	5f		 pop	 edi
  00433	5e		 pop	 esi
  00434	5b		 pop	 ebx
  00435	8b e5		 mov	 esp, ebp
  00437	5d		 pop	 ebp
  00438	c2 04 00	 ret	 4
?get_gunship_target_valid_for_ground_radar@@YGHPAUENTITY@@@Z ENDP ; get_gunship_target_valid_for_ground_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z
_TEXT	SEGMENT
_sweep_max_limit$ = -8					; size = 4
_sweep_min_limit$ = -4					; size = 4
_radar$ = 8						; size = 4
?limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z PROC		; limit_radar_sweep, COMDAT

; 162  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 163  : 	float
; 164  : 		sweep_min_limit,
; 165  : 		sweep_max_limit;
; 166  : 
; 167  : 	ASSERT (radar);

  00009	83 7d 08 00	 cmp	 DWORD PTR _radar$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@limit_rada
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@OBCKGCKM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_05EMNNHGFM@radar@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@limit_rada:

; 168  : 
; 169  : 	if (radar->scan_arc_size != RADAR_SCAN_ARC_SIZE_360)

  00027	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0002a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0002f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@40c90fdb
  00036	9f		 lahf
  00037	f6 c4 44	 test	 ah, 68			; 00000044H
  0003a	0f 8b e8 00 00
	00		 jnp	 $LN3@limit_rada

; 170  : 	{
; 171  : 		sweep_min_limit = radar->scan_arc_size * -0.5;

  00040	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00043	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00048	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@bfe0000000000000
  00050	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00054	f3 0f 11 45 fc	 movss	 DWORD PTR _sweep_min_limit$[ebp], xmm0

; 172  : 
; 173  : 		sweep_max_limit = radar->scan_arc_size * 0.5;

  00059	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0005c	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00061	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00069	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0006d	f3 0f 11 45 f8	 movss	 DWORD PTR _sweep_max_limit$[ebp], xmm0

; 174  : 
; 175  : 		if (radar->sweep_offset < sweep_min_limit)

  00072	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00075	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  0007a	0f 2f 40 0c	 comiss	 xmm0, DWORD PTR [eax+12]
  0007e	76 32		 jbe	 SHORT $LN5@limit_rada

; 176  : 		{
; 177  : 			radar->sweep_offset = sweep_min_limit;

  00080	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00083	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  00088	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 178  : 
; 179  : 			radar->sweep_direction = RADAR_SWEEP_CW;

  0008d	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00090	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00098	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 180  : 
; 181  : 			if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  0009d	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000a0	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  000a4	75 0a		 jne	 SHORT $LN7@limit_rada

; 182  : 			{
; 183  : 				radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  000a6	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000a9	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1
$LN7@limit_rada:

; 184  : 			}
; 185  : 		}

  000b0	eb 3e		 jmp	 SHORT $LN9@limit_rada
$LN5@limit_rada:

; 186  : 		else if (radar->sweep_offset > sweep_max_limit)

  000b2	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000b5	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  000ba	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  000be	76 30		 jbe	 SHORT $LN9@limit_rada

; 187  : 		{
; 188  : 			radar->sweep_offset = sweep_max_limit;

  000c0	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000c3	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  000c8	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 189  : 
; 190  : 			radar->sweep_direction = RADAR_SWEEP_CCW;

  000cd	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000d0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@bf800000
  000d8	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 191  : 
; 192  : 			if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_ACTIVE)

  000dd	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000e0	83 78 28 02	 cmp	 DWORD PTR [eax+40], 2
  000e4	75 0a		 jne	 SHORT $LN9@limit_rada

; 193  : 			{
; 194  : 				radar->sweep_mode = RADAR_SWEEP_MODE_SINGLE_INACTIVE;

  000e6	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000e9	c7 40 28 01 00
	00 00		 mov	 DWORD PTR [eax+40], 1
$LN9@limit_rada:

; 195  : 			}
; 196  : 		}
; 197  : 
; 198  : 		//
; 199  : 		// if single sweep inactive then ensure that the sweep offset is kept to the sweep limit (when scan arc size is increased)
; 200  : 		//
; 201  : 
; 202  : 		if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_INACTIVE)

  000f0	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000f3	83 78 28 01	 cmp	 DWORD PTR [eax+40], 1
  000f7	75 2d		 jne	 SHORT $LN12@limit_rada

; 203  : 		{
; 204  : 			if (radar->sweep_offset <= rad (0.0))

  000f9	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  000fc	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00101	0f 57 c9	 xorps	 xmm1, xmm1
  00104	66 0f 2f c8	 comisd	 xmm1, xmm0
  00108	72 0f		 jb	 SHORT $LN11@limit_rada

; 205  : 			{
; 206  : 				radar->sweep_offset = sweep_min_limit;

  0010a	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0010d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sweep_min_limit$[ebp]
  00112	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 207  : 			}
; 208  : 			else

  00117	eb 0d		 jmp	 SHORT $LN12@limit_rada
$LN11@limit_rada:

; 209  : 			{
; 210  : 				radar->sweep_offset = sweep_max_limit;

  00119	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0011c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _sweep_max_limit$[ebp]
  00121	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
$LN12@limit_rada:

; 211  : 			}
; 212  : 		}
; 213  : 	}
; 214  : 	else

  00126	eb 14		 jmp	 SHORT $LN13@limit_rada
$LN3@limit_rada:

; 215  : 	{
; 216  : 		if (radar->sweep_mode == RADAR_SWEEP_MODE_SINGLE_INACTIVE)

  00128	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  0012b	83 78 28 01	 cmp	 DWORD PTR [eax+40], 1
  0012f	75 0b		 jne	 SHORT $LN13@limit_rada

; 217  : 		{
; 218  : 			radar->sweep_offset = rad (0.0);

  00131	8b 45 08	 mov	 eax, DWORD PTR _radar$[ebp]
  00134	0f 57 c0	 xorps	 xmm0, xmm0
  00137	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0
$LN13@limit_rada:

; 219  : 		}
; 220  : 	}
; 221  : }

  0013c	5f		 pop	 edi
  0013d	5e		 pop	 esi
  0013e	5b		 pop	 ebx
  0013f	8b e5		 mov	 esp, ebp
  00141	5d		 pop	 ebp
  00142	c2 04 00	 ret	 4
?limit_radar_sweep@@YGXPAURADAR_PARAMS@@@Z ENDP		; limit_radar_sweep
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?deinitialise_common_radar@@YGXXZ
_TEXT	SEGMENT
?deinitialise_common_radar@@YGXXZ PROC			; deinitialise_common_radar, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?deinitialise_common_radar@@YGXXZ ENDP			; deinitialise_common_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\avionics\common\co_radar.c
;	COMDAT ?initialise_common_radar@@YGXXZ
_TEXT	SEGMENT
?initialise_common_radar@@YGXXZ PROC			; initialise_common_radar, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 	ground_radar_on = FALSE,

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ground_radar_on@@3HA, 0
  00013	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?air_radar_on@@3HA, 0

; 146  : 	air_radar_on = FALSE;
; 147  : }

  0001d	5f		 pop	 edi
  0001e	5e		 pop	 esi
  0001f	5b		 pop	 ebx
  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?initialise_common_radar@@YGXXZ ENDP			; initialise_common_radar
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sqrt@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sqrt@@YGMM@Z PROC					; sqrt, COMDAT

; 294  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 295  : 	return (_CSTD sqrtf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sqrtf
  00019	83 c4 04	 add	 esp, 4

; 296  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sqrt@@YGMM@Z ENDP					; sqrt
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT

; 759  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  :             return (float)sqrt(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sqrt
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 761  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
END
