; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\system\en_debug\en_dbarg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0L@OCGCDOAE@SERVER?1TX?1@			; `string'
PUBLIC	??_C@_0L@MHAJGBNI@SERVER?1RX?1@			; `string'
PUBLIC	??_C@_0L@LIHOIMIG@CLIENT?1TX?1@			; `string'
PUBLIC	??_C@_0L@JNBFNDFK@CLIENT?1RX?1@			; `string'
PUBLIC	??_C@_08OBEDCDLM@LOCAL?5?3?5@			; `string'
PUBLIC	??_C@_08CCNMGHMI@REMOTE?3?5@			; `string'
PUBLIC	??_C@_08EDGEDJMB@PACK?5?5?3?5@			; `string'
PUBLIC	??_C@_08BFMLLGII@UNPACK?3?5@			; `string'
;	COMDAT ??_C@_08BFMLLGII@UNPACK?3?5@
CONST	SEGMENT
??_C@_08BFMLLGII@UNPACK?3?5@ DB 'UNPACK: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EDGEDJMB@PACK?5?5?3?5@
CONST	SEGMENT
??_C@_08EDGEDJMB@PACK?5?5?3?5@ DB 'PACK  : ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08CCNMGHMI@REMOTE?3?5@
CONST	SEGMENT
??_C@_08CCNMGHMI@REMOTE?3?5@ DB 'REMOTE: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBEDCDLM@LOCAL?5?3?5@
CONST	SEGMENT
??_C@_08OBEDCDLM@LOCAL?5?3?5@ DB 'LOCAL : ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JNBFNDFK@CLIENT?1RX?1@
CONST	SEGMENT
??_C@_0L@JNBFNDFK@CLIENT?1RX?1@ DB 'CLIENT/RX/', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LIHOIMIG@CLIENT?1TX?1@
CONST	SEGMENT
??_C@_0L@LIHOIMIG@CLIENT?1TX?1@ DB 'CLIENT/TX/', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MHAJGBNI@SERVER?1RX?1@
CONST	SEGMENT
??_C@_0L@MHAJGBNI@SERVER?1RX?1@ DB 'SERVER/RX/', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCGCDOAE@SERVER?1TX?1@
CONST	SEGMENT
??_C@_0L@OCGCDOAE@SERVER?1TX?1@ DB 'SERVER/TX/', 00H	; `string'
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_vsprintf
PUBLIC	_sprintf
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?enable_debug_log_entity_args@@YGXXZ		; enable_debug_log_entity_args
PUBLIC	?disable_debug_log_entity_args@@YGXXZ		; disable_debug_log_entity_args
PUBLIC	?debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ ; debug_log_entity_args
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ@4JA ; `debug_log_text'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BJ@EKCJPCKO@?$CF?925?425s?5?$CIindex?5?$DN?5?$CF5d?$CJ?3?5@ ; `string'
PUBLIC	?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA ; `debug_log_entity_args'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@KJPFEHAJ@attitude?5angles?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@ ; `string'
PUBLIC	??_C@_08EKMPKBMJ@attitude@			; `string'
PUBLIC	??_C@_0CP@DLOBPJAP@attitude?5matrix?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@ ; `string'
PUBLIC	??_C@_0P@ELKEALEF@char?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_07HILCOMEC@?$CFs?5?$DN?5?$CFc@		; `string'
PUBLIC	??_C@_0BJ@GJGAFBNB@create?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@ ; `string'
PUBLIC	??_C@_07OKFGPCEA@destroy@			; `string'
PUBLIC	??_C@_0P@FIMEGKKE@destroy?5family@		; `string'
PUBLIC	??_C@_0BG@MBNPHMDA@entity?5attribute?5?$DN?5?$CFs@ ; `string'
PUBLIC	??_C@_0BK@KKLCBCID@entity?5comms?5message?5?$DN?5?$CFs@ ; `string'
PUBLIC	??_C@_0BC@CDBAIKJH@entity?5index?5?$DN?5?$CFd@	; `string'
PUBLIC	??_C@_0BB@FBMGPJFF@entity?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_0BA@MEGEGLCJ@float?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_09BHAHOMGO@?$CFs?5?$DN?5?$CF?43f@		; `string'
PUBLIC	??_C@_0O@ELMNMPFM@int?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_07DHPDHKIF@?$CFs?5?$DN?5?$CFd@		; `string'
PUBLIC	??_C@_04BJJEOANI@kill@				; `string'
PUBLIC	??_C@_0P@LJEFJPNP@list?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_0BJ@GKMIKOJM@?$CFs?5child?5pred?5index?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0BJ@FNLAFIJK@?$CFs?5child?5succ?5index?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0BK@KBADCPMH@?$CFs?5first?5child?5index?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0BF@LABNAKOJ@?$CFs?5parent?5index?5?$DN?5?$CFd@ ; `string'
PUBLIC	??_C@_0O@OCEMGJGM@ptr?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_09JNILEEPP@?$CFs?5?$DN?50x?$CFx@		; `string'
PUBLIC	??_C@_0BB@LKLMHJHO@string?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_01LKDEMHDF@s@				; `string'
PUBLIC	??_C@_07DCHAPOBD@?$CFs?5?$DN?5?$CFs@		; `string'
PUBLIC	??_C@_0BA@BLAKLMDD@vec3d?5type?5?$DN?5?$CFs@	; `string'
PUBLIC	??_C@_01MHEDDDHA@v@				; `string'
PUBLIC	??_C@_0DM@PLOAMDAI@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@ ; `string'
PUBLIC	??_C@_0CE@LIJLNIO@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@ ; `string'
PUBLIC	??_C@_0BO@BPNCLOKB@Invalid?5entity?5debug?5arg?5?$DN?5?$CFd@ ; `string'
PUBLIC	__real@42652ee0
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcat:PROC
EXTRN	_strcpy:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A:DWORD ; direct_play_comms_mode
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A:DWORD ; system_comms_data_flow
EXTRN	?world_map@@3UWORLD_MAP_DATA@@A:BYTE		; world_map
EXTRN	?entity_attribute_database@@3PAUENTITY_ATTRIBUTE_DATA@@A:BYTE ; entity_attribute_database
EXTRN	?list_type_database@@3PAULIST_TYPE_DATA@@A:BYTE	; list_type_database
EXTRN	?char_type_database@@3PAUCHAR_TYPE_DATA@@A:BYTE	; char_type_database
EXTRN	?float_type_database@@3PAUFLOAT_TYPE_DATA@@A:BYTE ; float_type_database
EXTRN	?int_type_database@@3PAUINT_TYPE_DATA@@A:BYTE	; int_type_database
EXTRN	?ptr_type_database@@3PAUPTR_TYPE_DATA@@A:BYTE	; ptr_type_database
EXTRN	?string_type_database@@3PAUSTRING_TYPE_DATA@@A:BYTE ; string_type_database
EXTRN	?vec3d_type_database@@3PAUVEC3D_TYPE_DATA@@A:BYTE ; vec3d_type_database
EXTRN	?entity_comms_message_database@@3PAUENTITY_COMMS_MESSAGE_DATA@@A:BYTE ; entity_comms_message_database
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@42652ee0
CONST	SEGMENT
__real@42652ee0 DD 042652ee0r			; 57.2958
CONST	ENDS
;	COMDAT ??_C@_0BO@BPNCLOKB@Invalid?5entity?5debug?5arg?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BO@BPNCLOKB@Invalid?5entity?5debug?5arg?5?$DN?5?$CFd@ DB 'Invalid '
	DB	'entity debug arg = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@LIJLNIO@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@
CONST	SEGMENT
??_C@_0CE@LIJLNIO@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@ DB '%'
	DB	's = (x = %.3f, y = %.3f, z = %.3f)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@PLOAMDAI@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@
CONST	SEGMENT
??_C@_0DM@PLOAMDAI@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@ DB '%'
	DB	's = (x = %.3f, y = %.3f, z = %.3f, x sec = %d, z sec = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MHEDDDHA@v@
CONST	SEGMENT
??_C@_01MHEDDDHA@v@ DB 'v', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BLAKLMDD@vec3d?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BA@BLAKLMDD@vec3d?5type?5?$DN?5?$CFs@ DB 'vec3d type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCHAPOBD@?$CFs?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_07DCHAPOBD@?$CFs?5?$DN?5?$CFs@ DB '%s = %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01LKDEMHDF@s@
CONST	SEGMENT
??_C@_01LKDEMHDF@s@ DB 's', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LKLMHJHO@string?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BB@LKLMHJHO@string?5type?5?$DN?5?$CFs@ DB 'string type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JNILEEPP@?$CFs?5?$DN?50x?$CFx@
CONST	SEGMENT
??_C@_09JNILEEPP@?$CFs?5?$DN?50x?$CFx@ DB '%s = 0x%x', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OCEMGJGM@ptr?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0O@OCEMGJGM@ptr?5type?5?$DN?5?$CFs@ DB 'ptr type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LABNAKOJ@?$CFs?5parent?5index?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BF@LABNAKOJ@?$CFs?5parent?5index?5?$DN?5?$CFd@ DB '%s parent index'
	DB	' = %d', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KBADCPMH@?$CFs?5first?5child?5index?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BK@KBADCPMH@?$CFs?5first?5child?5index?5?$DN?5?$CFd@ DB '%s first '
	DB	'child index = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FNLAFIJK@?$CFs?5child?5succ?5index?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BJ@FNLAFIJK@?$CFs?5child?5succ?5index?5?$DN?5?$CFd@ DB '%s child s'
	DB	'ucc index = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GKMIKOJM@?$CFs?5child?5pred?5index?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BJ@GKMIKOJM@?$CFs?5child?5pred?5index?5?$DN?5?$CFd@ DB '%s child p'
	DB	'red index = %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LJEFJPNP@list?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0P@LJEFJPNP@list?5type?5?$DN?5?$CFs@ DB 'list type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BJJEOANI@kill@
CONST	SEGMENT
??_C@_04BJJEOANI@kill@ DB 'kill', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07DHPDHKIF@?$CFs?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_07DHPDHKIF@?$CFs?5?$DN?5?$CFd@ DB '%s = %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ELMNMPFM@int?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0O@ELMNMPFM@int?5type?5?$DN?5?$CFs@ DB 'int type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BHAHOMGO@?$CFs?5?$DN?5?$CF?43f@
CONST	SEGMENT
??_C@_09BHAHOMGO@?$CFs?5?$DN?5?$CF?43f@ DB '%s = %.3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MEGEGLCJ@float?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BA@MEGEGLCJ@float?5type?5?$DN?5?$CFs@ DB 'float type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FBMGPJFF@entity?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BB@FBMGPJFF@entity?5type?5?$DN?5?$CFs@ DB 'entity type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDBAIKJH@entity?5index?5?$DN?5?$CFd@
CONST	SEGMENT
??_C@_0BC@CDBAIKJH@entity?5index?5?$DN?5?$CFd@ DB 'entity index = %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KKLCBCID@entity?5comms?5message?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BK@KKLCBCID@entity?5comms?5message?5?$DN?5?$CFs@ DB 'entity comms '
	DB	'message = %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MBNPHMDA@entity?5attribute?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0BG@MBNPHMDA@entity?5attribute?5?$DN?5?$CFs@ DB 'entity attribute ='
	DB	' %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FIMEGKKE@destroy?5family@
CONST	SEGMENT
??_C@_0P@FIMEGKKE@destroy?5family@ DB 'destroy family', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07OKFGPCEA@destroy@
CONST	SEGMENT
??_C@_07OKFGPCEA@destroy@ DB 'destroy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GJGAFBNB@create?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@
CONST	SEGMENT
??_C@_0BJ@GJGAFBNB@create?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@ DB 'cre'
	DB	'ate %s (index = %d): ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07HILCOMEC@?$CFs?5?$DN?5?$CFc@
CONST	SEGMENT
??_C@_07HILCOMEC@?$CFs?5?$DN?5?$CFc@ DB '%s = %c', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ELKEALEF@char?5type?5?$DN?5?$CFs@
CONST	SEGMENT
??_C@_0P@ELKEALEF@char?5type?5?$DN?5?$CFs@ DB 'char type = %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@DLOBPJAP@attitude?5matrix?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@
CONST	SEGMENT
??_C@_0CP@DLOBPJAP@attitude?5matrix?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@ DB 'a'
	DB	'ttitude matrix (h = %.3f, p = %.3f, r = %.3f)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKMPKBMJ@attitude@
CONST	SEGMENT
??_C@_08EKMPKBMJ@attitude@ DB 'attitude', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KJPFEHAJ@attitude?5angles?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@
CONST	SEGMENT
??_C@_0CP@KJPFEHAJ@attitude?5angles?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@ DB 'a'
	DB	'ttitude angles (h = %.3f, p = %.3f, r = %.3f)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA DD 0bcH ; `debug_log_entity_args'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@EKCJPCKO@?$CF?925?425s?5?$CIindex?5?$DN?5?$CF5d?$CJ?3?5@
CONST	SEGMENT
??_C@_0BJ@EKCJPCKO@?$CF?925?425s?5?$CIindex?5?$DN?5?$CF5d?$CJ?3?5@ DB '%-'
	DB	'25.25s (index = %5d): ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_debug\en_db'
	DB	'arg.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ@4JA DD 07dH ; `debug_log_text'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?debug_log_entity_args_enabled@@3HA DD 01H		; debug_log_entity_args_enabled
?debug_log_comms_prefix@@3PAY01PBDA DD FLAT:??_C@_0L@OCGCDOAE@SERVER?1TX?1@ ; debug_log_comms_prefix
	DD	FLAT:??_C@_0L@MHAJGBNI@SERVER?1RX?1@
	DD	FLAT:??_C@_0L@LIHOIMIG@CLIENT?1TX?1@
	DD	FLAT:??_C@_0L@JNBFNDFK@CLIENT?1RX?1@
?debug_log_mode_prefix@@3PAPBDA DD FLAT:??_C@_08OBEDCDLM@LOCAL?5?3?5@ ; debug_log_mode_prefix
	DD	FLAT:??_C@_08CCNMGHMI@REMOTE?3?5@
	DD	FLAT:??_C@_08EDGEDJMB@PACK?5?5?3?5@
	DD	FLAT:??_C@_08BFMLLGII@UNPACK?3?5@
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbarg.c
;	COMDAT ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ
_TEXT	SEGMENT
tv92 = -944						; size = 4
tv81 = -944						; size = 4
_name$ = -808						; size = 4
_s2$ = -804						; size = 400
_s1$ = -404						; size = 400
_pargs$ = -4						; size = 4
_mode$ = 8						; size = 4
_en$ = 12						; size = 4
_format$ = 16						; size = 4
?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ PROC ; debug_log_text, COMDAT

; 125  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b0 03 00
	00		 sub	 esp, 944		; 000003b0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 126  : 	va_list
; 127  : 		pargs;
; 128  : 
; 129  : 	char
; 130  : 		s1[400],
; 131  : 		s2[400];
; 132  : 	const char
; 133  : 		*name;
; 134  : 
; 135  : 	//
; 136  : 	// prefix
; 137  : 	//
; 138  : 
; 139  : 	strcpy (s1, debug_log_comms_prefix[get_comms_model ()][get_comms_data_flow ()]);

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A ; system_comms_data_flow
  00011	c1 e0 02	 shl	 eax, 2
  00014	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0001a	8b 94 c8 00 00
	00 00		 mov	 edx, DWORD PTR ?debug_log_comms_prefix@@3PAY01PBDA[eax+ecx*8]
  00021	52		 push	 edx
  00022	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _s1$[ebp]
  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 _strcpy
  0002e	83 c4 08	 add	 esp, 8

; 140  : 
; 141  : 	strcat (s1, debug_log_mode_prefix[mode]);

  00031	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00034	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?debug_log_mode_prefix@@3PAPBDA[eax*4]
  0003b	51		 push	 ecx
  0003c	8d 95 6c fe ff
	ff		 lea	 edx, DWORD PTR _s1$[ebp]
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 _strcat
  00048	83 c4 08	 add	 esp, 8

; 142  : 
; 143  : 	//
; 144  : 	// entity type and index
; 145  : 	//
; 146  : 
; 147  : 	if (en)

  0004b	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004f	74 4c		 je	 SHORT $LN2@debug_log_

; 148  : 	{
; 149  : 		name = get_local_entity_type_name (en);

  00051	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0d		 je	 SHORT $LN5@debug_log_
  00057	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 8d 50 fc ff
	ff		 mov	 DWORD PTR tv81[ebp], ecx
  00062	eb 24		 jmp	 SHORT $LN6@debug_log_
$LN5@debug_log_:
  00064	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ@4JA
  0006a	83 c2 18	 add	 edx, 24			; 00000018H
  0006d	52		 push	 edx
  0006e	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007e	c7 85 50 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN6@debug_log_:
  00088	6b 8d 50 fc ff
	ff 0c		 imul	 ecx, DWORD PTR tv81[ebp], 12
  0008f	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[ecx]
  00095	89 95 d8 fc ff
	ff		 mov	 DWORD PTR _name$[ebp], edx

; 150  : 	}
; 151  : 	else

  0009b	eb 14		 jmp	 SHORT $LN3@debug_log_
$LN2@debug_log_:

; 152  : 	{
; 153  : 		name = get_entity_type_name (ENTITY_TYPE_UNKNOWN);

  0009d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a2	6b c8 00	 imul	 ecx, eax, 0
  000a5	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[ecx]
  000ab	89 95 d8 fc ff
	ff		 mov	 DWORD PTR _name$[ebp], edx
$LN3@debug_log_:

; 154  : 	}
; 155  : 
; 156  : 	sprintf (s2, "%-25.25s (index = %5d): ", name, get_local_entity_safe_index (en));

  000b1	83 7d 0c 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b5	74 14		 je	 SHORT $LN7@debug_log_
  000b7	8b 45 0c	 mov	 eax, DWORD PTR _en$[ebp]
  000ba	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000c0	c1 f8 04	 sar	 eax, 4
  000c3	89 85 50 fc ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000c9	eb 0a		 jmp	 SHORT $LN8@debug_log_
$LN7@debug_log_:
  000cb	c7 85 50 fc ff
	ff ff ff ff ff	 mov	 DWORD PTR tv92[ebp], -1
$LN8@debug_log_:
  000d5	8b 8d 50 fc ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000db	51		 push	 ecx
  000dc	8b 95 d8 fc ff
	ff		 mov	 edx, DWORD PTR _name$[ebp]
  000e2	52		 push	 edx
  000e3	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EKCJPCKO@?$CF?925?425s?5?$CIindex?5?$DN?5?$CF5d?$CJ?3?5@
  000e8	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 _sprintf
  000f4	83 c4 10	 add	 esp, 16			; 00000010H

; 157  : 
; 158  : 	strcat (s1, s2);

  000f7	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  000fd	50		 push	 eax
  000fe	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _s1$[ebp]
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 _strcat
  0010a	83 c4 08	 add	 esp, 8

; 159  : 
; 160  : 	//
; 161  : 	// args
; 162  : 	//
; 163  : 
; 164  : 	va_start (pargs, format);

  0010d	8d 45 14	 lea	 eax, DWORD PTR _format$[ebp+4]
  00110	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax

; 165  : 
; 166  : 	vsprintf (s2, format, pargs);

  00113	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00116	50		 push	 eax
  00117	8b 4d 10	 mov	 ecx, DWORD PTR _format$[ebp]
  0011a	51		 push	 ecx
  0011b	8d 95 dc fc ff
	ff		 lea	 edx, DWORD PTR _s2$[ebp]
  00121	52		 push	 edx
  00122	e8 00 00 00 00	 call	 _vsprintf
  00127	83 c4 0c	 add	 esp, 12			; 0000000cH

; 167  : 
; 168  : 	va_end (pargs);

  0012a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pargs$[ebp], 0

; 169  : 
; 170  : 	strcat (s1, s2);

  00131	8d 85 dc fc ff
	ff		 lea	 eax, DWORD PTR _s2$[ebp]
  00137	50		 push	 eax
  00138	8d 8d 6c fe ff
	ff		 lea	 ecx, DWORD PTR _s1$[ebp]
  0013e	51		 push	 ecx
  0013f	e8 00 00 00 00	 call	 _strcat
  00144	83 c4 08	 add	 esp, 8

; 171  : 
; 172  : 	debug_log (s1);

  00147	8d 85 6c fe ff
	ff		 lea	 eax, DWORD PTR _s1$[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00153	83 c4 04	 add	 esp, 4

; 173  : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	8b e5		 mov	 esp, ebp
  0015b	5d		 pop	 ebp
  0015c	c3		 ret	 0
?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ENDP ; debug_log_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbarg.c
;	COMDAT ?debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ
_TEXT	SEGMENT
tv424 = -260						; size = 4
tv344 = -260						; size = 4
tv328 = -260						; size = 4
tv312 = -260						; size = 4
tv68 = -260						; size = 4
_z_sec$1 = -188						; size = 4
_x_sec$2 = -184						; size = 4
_v$3 = -180						; size = 4
_type$4 = -176						; size = 4
_type$5 = -172						; size = 4
_s$6 = -168						; size = 4
_type$7 = -164						; size = 4
_type$8 = -160						; size = 4
_ptr$9 = -156						; size = 4
_type$10 = -152						; size = 4
_type$11 = -148						; size = 4
_index$12 = -144					; size = 4
_parent$13 = -140					; size = 4
_type$14 = -136						; size = 4
_index$15 = -132					; size = 4
_first_child$16 = -128					; size = 4
_type$17 = -124						; size = 4
_index$18 = -120					; size = 4
_child_succ$19 = -116					; size = 4
_type$20 = -112						; size = 4
_index$21 = -108					; size = 4
_child_pred$22 = -104					; size = 4
_type$23 = -100						; size = 4
_type$24 = -96						; size = 4
_value$25 = -92						; size = 4
_type$26 = -88						; size = 4
_type$27 = -84						; size = 4
_value$28 = -80						; size = 4
_type$29 = -76						; size = 4
_type$30 = -72						; size = 4
_type$31 = -68						; size = 4
_index$32 = -64						; size = 4
_message$33 = -60					; size = 4
_attr$34 = -56						; size = 4
_index$35 = -52						; size = 4
_type$36 = -48						; size = 4
_value$37 = -41						; size = 1
_type$38 = -40						; size = 4
_type$39 = -36						; size = 4
_roll$40 = -32						; size = 4
_pitch$41 = -28						; size = 4
_heading$42 = -24					; size = 4
_attitude$43 = -20					; size = 4
_roll$44 = -16						; size = 4
_pitch$45 = -12						; size = 4
_heading$46 = -8					; size = 4
_pargs$ = -4						; size = 4
_mode$ = 8						; size = 4
_arg$ = 12						; size = 4
_en$ = 16						; size = 4
?debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ PROC ; debug_log_entity_args, COMDAT

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 189  : 	va_list
; 190  : 		pargs;
; 191  : 
; 192  : 	////////////////////////////////////////
; 193  : 	//
; 194  : 	// trap remote args in single player game
; 195  : 	//
; 196  : 	////////////////////////////////////////
; 197  : 
; 198  : 	if (!debug_log_entity_args_enabled)

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?debug_log_entity_args_enabled@@3HA, 0
  00013	75 05		 jne	 SHORT $LN4@debug_log_

; 199  : 	{
; 200  : 		return;

  00015	e9 83 0a 00 00	 jmp	 $LN1@debug_log_
$LN4@debug_log_:

; 201  : 	}
; 202  : 
; 203  : 	if (mode == ENTITY_DEBUG_REMOTE)

  0001a	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  0001e	75 0e		 jne	 SHORT $LN6@debug_log_

; 204  : 	{
; 205  : 		if (direct_play_get_comms_mode () == DIRECT_PLAY_COMMS_MODE_NONE)

  00020	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?direct_play_comms_mode@@3W4DIRECT_PLAY_COMMS_MODE_TYPES@@A, 0 ; direct_play_comms_mode
  00027	75 05		 jne	 SHORT $LN6@debug_log_

; 206  : 		{
; 207  : 			return;

  00029	e9 6f 0a 00 00	 jmp	 $LN1@debug_log_
$LN6@debug_log_:

; 208  : 		}
; 209  : 	}
; 210  : 
; 211  : 	////////////////////////////////////////
; 212  : 	//
; 213  : 	// sort debug log text
; 214  : 	//
; 215  : 	////////////////////////////////////////
; 216  : 
; 217  : 	va_start (pargs, en);

  0002e	8d 45 14	 lea	 eax, DWORD PTR _en$[ebp+4]
  00031	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax

; 218  : 
; 219  : 	switch (arg)

  00034	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  00037	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv68[ebp], eax
  0003d	83 bd fc fe ff
	ff 1a		 cmp	 DWORD PTR tv68[ebp], 26	; 0000001aH
  00044	0f 87 3b 0a 00
	00		 ja	 $LN39@debug_log_
  0004a	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv68[ebp]
  00050	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN49@debug_log_[ecx*4]
$LN7@debug_log_:

; 220  : 	{
; 221  : 		////////////////////////////////////////
; 222  : 		case ENTITY_DEBUG_ATTITUDE_ANGLES:
; 223  : 		////////////////////////////////////////
; 224  : 		{
; 225  : 			//
; 226  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, float heading, float pitch, float roll)
; 227  : 			//
; 228  : 
; 229  : 			float
; 230  : 				heading,
; 231  : 				pitch,
; 232  : 				roll;
; 233  : 
; 234  : 			heading = va_arg (pargs, double);

  00057	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0005a	83 c0 08	 add	 eax, 8
  0005d	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00063	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00068	f3 0f 11 45 f8	 movss	 DWORD PTR _heading$46[ebp], xmm0

; 235  : 
; 236  : 			pitch = va_arg (pargs, double);

  0006d	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00070	83 c0 08	 add	 eax, 8
  00073	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00076	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00079	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0007e	f3 0f 11 45 f4	 movss	 DWORD PTR _pitch$45[ebp], xmm0

; 237  : 
; 238  : 			roll = va_arg (pargs, double);

  00083	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00086	83 c0 08	 add	 eax, 8
  00089	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0008f	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00094	f3 0f 11 45 f0	 movss	 DWORD PTR _roll$44[ebp], xmm0

; 239  : 
; 240  : 			debug_log_text (mode, en, "attitude angles (h = %.3f, p = %.3f, r = %.3f)", deg (heading), deg (pitch), deg (roll));

  00099	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _roll$44[ebp]
  0009e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  000a6	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000aa	83 ec 08	 sub	 esp, 8
  000ad	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _pitch$45[ebp]
  000b7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  000bf	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000c3	83 ec 08	 sub	 esp, 8
  000c6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000cb	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _heading$46[ebp]
  000d0	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  000d8	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000dc	83 ec 08	 sub	 esp, 8
  000df	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@KJPFEHAJ@attitude?5angles?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@
  000e9	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  000ec	50		 push	 eax
  000ed	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  000f0	51		 push	 ecx
  000f1	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  000f6	83 c4 24	 add	 esp, 36			; 00000024H

; 241  : 
; 242  : 			break;

  000f9	e9 98 09 00 00	 jmp	 $LN2@debug_log_
$LN8@debug_log_:

; 243  : 		}
; 244  : 		////////////////////////////////////////
; 245  : 		case ENTITY_DEBUG_ATTITUDE_MATRIX:
; 246  : 		////////////////////////////////////////
; 247  : 		{
; 248  : 			//
; 249  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, matrix3x3 attitude)
; 250  : 			//
; 251  : 
; 252  : 			matrix3x3
; 253  : 				*attitude;
; 254  : 
; 255  : 			float
; 256  : 				heading,
; 257  : 				pitch,
; 258  : 				roll;
; 259  : 
; 260  : 			attitude = va_arg (pargs, matrix3x3 *);

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00101	83 c0 04	 add	 eax, 4
  00104	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00107	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0010a	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0010d	89 55 ec	 mov	 DWORD PTR _attitude$43[ebp], edx

; 261  : 
; 262  : 			ASSERT (attitude);

  00110	83 7d ec 00	 cmp	 DWORD PTR _attitude$43[ebp], 0
  00114	75 18		 jne	 SHORT $LN9@debug_log_
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA
  0011b	83 c0 4a	 add	 eax, 74			; 0000004aH
  0011e	50		 push	 eax
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_08EKMPKBMJ@attitude@
  00129	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@debug_log_:

; 263  : 
; 264  : 			heading = get_heading_from_attitude_matrix (*attitude);

  0012e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00133	d1 e0		 shl	 eax, 1
  00135	03 45 ec	 add	 eax, DWORD PTR _attitude$43[ebp]
  00138	b9 04 00 00 00	 mov	 ecx, 4
  0013d	d1 e1		 shl	 ecx, 1
  0013f	51		 push	 ecx
  00140	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00145	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0014f	d1 e2		 shl	 edx, 1
  00151	03 55 ec	 add	 edx, DWORD PTR _attitude$43[ebp]
  00154	b8 04 00 00 00	 mov	 eax, 4
  00159	6b c8 00	 imul	 ecx, eax, 0
  0015c	51		 push	 ecx
  0015d	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00162	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00167	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  0016c	d9 5d e8	 fstp	 DWORD PTR _heading$42[ebp]

; 265  : 
; 266  : 			pitch = get_pitch_from_attitude_matrix (*attitude);

  0016f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00174	d1 e0		 shl	 eax, 1
  00176	03 45 ec	 add	 eax, DWORD PTR _attitude$43[ebp]
  00179	b9 04 00 00 00	 mov	 ecx, 4
  0017e	c1 e1 00	 shl	 ecx, 0
  00181	51		 push	 ecx
  00182	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  00187	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018c	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  00191	d9 5d e4	 fstp	 DWORD PTR _pitch$41[ebp]

; 267  : 
; 268  : 			roll = get_roll_from_attitude_matrix (*attitude);

  00194	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00199	c1 e0 00	 shl	 eax, 0
  0019c	03 45 ec	 add	 eax, DWORD PTR _attitude$43[ebp]
  0019f	b9 04 00 00 00	 mov	 ecx, 4
  001a4	c1 e1 00	 shl	 ecx, 0
  001a7	51		 push	 ecx
  001a8	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001b7	6b c2 00	 imul	 eax, edx, 0
  001ba	03 45 ec	 add	 eax, DWORD PTR _attitude$43[ebp]
  001bd	b9 04 00 00 00	 mov	 ecx, 4
  001c2	c1 e1 00	 shl	 ecx, 0
  001c5	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  001ca	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001d1	51		 push	 ecx
  001d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d7	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  001dc	d9 5d e0	 fstp	 DWORD PTR _roll$40[ebp]

; 269  : 
; 270  : 			debug_log_text (mode, en, "attitude matrix (h = %.3f, p = %.3f, r = %.3f)", deg (heading), deg (pitch), deg (roll));

  001df	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _roll$40[ebp]
  001e4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  001ec	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001f0	83 ec 08	 sub	 esp, 8
  001f3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001f8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _pitch$41[ebp]
  001fd	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  00205	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00209	83 ec 08	 sub	 esp, 8
  0020c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00211	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _heading$42[ebp]
  00216	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42652ee0
  0021e	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00222	83 ec 08	 sub	 esp, 8
  00225	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0022a	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@DLOBPJAP@attitude?5matrix?5?$CIh?5?$DN?5?$CF?43f?0?5p?5?$DN?5@
  0022f	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00232	50		 push	 eax
  00233	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  00236	51		 push	 ecx
  00237	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0023c	83 c4 24	 add	 esp, 36			; 00000024H

; 271  : 
; 272  : 			break;

  0023f	e9 52 08 00 00	 jmp	 $LN2@debug_log_
$LN10@debug_log_:

; 273  : 		}
; 274  : 		////////////////////////////////////////
; 275  : 		case ENTITY_DEBUG_CHAR_TYPE:
; 276  : 		////////////////////////////////////////
; 277  : 		{
; 278  : 			//
; 279  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, char_types type)
; 280  : 			//
; 281  : 
; 282  : 			char_types
; 283  : 				type;
; 284  : 
; 285  : 			type = va_arg (pargs, char_types);

  00244	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00247	83 c0 04	 add	 eax, 4
  0024a	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0024d	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00250	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00253	89 55 dc	 mov	 DWORD PTR _type$39[ebp], edx

; 286  : 
; 287  : 			debug_log_text (mode, NULL, "char type = %s", get_char_type_name (type));

  00256	8b 45 dc	 mov	 eax, DWORD PTR _type$39[ebp]
  00259	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?char_type_database@@3PAUCHAR_TYPE_DATA@@A[eax*8]
  00260	51		 push	 ecx
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ELKEALEF@char?5type?5?$DN?5?$CFs@
  00266	6a 00		 push	 0
  00268	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  0026b	52		 push	 edx
  0026c	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00271	83 c4 10	 add	 esp, 16			; 00000010H

; 288  : 
; 289  : 			break;

  00274	e9 1d 08 00 00	 jmp	 $LN2@debug_log_
$LN11@debug_log_:

; 290  : 		}
; 291  : 		////////////////////////////////////////
; 292  : 		case ENTITY_DEBUG_CHAR_VALUE:
; 293  : 		////////////////////////////////////////
; 294  : 		{
; 295  : 			//
; 296  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, char_types type, char value)
; 297  : 			//
; 298  : 
; 299  : 			char_types
; 300  : 				type;
; 301  : 
; 302  : 			char
; 303  : 				value;
; 304  : 
; 305  : 			type = va_arg (pargs, char_types);

  00279	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0027c	83 c0 04	 add	 eax, 4
  0027f	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00282	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00285	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00288	89 55 d8	 mov	 DWORD PTR _type$38[ebp], edx

; 306  : 
; 307  : 			value = va_arg (pargs, int);

  0028b	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0028e	83 c0 04	 add	 eax, 4
  00291	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00294	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00297	8a 51 fc	 mov	 dl, BYTE PTR [ecx-4]
  0029a	88 55 d7	 mov	 BYTE PTR _value$37[ebp], dl

; 308  : 
; 309  : 			debug_log_text (mode, en, "%s = %c", get_char_type_name (type), value);

  0029d	0f b6 45 d7	 movzx	 eax, BYTE PTR _value$37[ebp]
  002a1	50		 push	 eax
  002a2	8b 4d d8	 mov	 ecx, DWORD PTR _type$38[ebp]
  002a5	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?char_type_database@@3PAUCHAR_TYPE_DATA@@A[ecx*8]
  002ac	52		 push	 edx
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_07HILCOMEC@?$CFs?5?$DN?5?$CFc@
  002b2	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  002b5	50		 push	 eax
  002b6	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  002b9	51		 push	 ecx
  002ba	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  002bf	83 c4 14	 add	 esp, 20			; 00000014H

; 310  : 
; 311  : 			break;

  002c2	e9 cf 07 00 00	 jmp	 $LN2@debug_log_
$LN12@debug_log_:

; 312  : 		}
; 313  : 		////////////////////////////////////////
; 314  : 		case ENTITY_DEBUG_CREATE:
; 315  : 		////////////////////////////////////////
; 316  : 		{
; 317  : 			//
; 318  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, entity_types type, int index)
; 319  : 			//
; 320  : 
; 321  : 			entity_types
; 322  : 				type;
; 323  : 
; 324  : 			int
; 325  : 				index;
; 326  : 
; 327  : 			type = va_arg (pargs, entity_types);

  002c7	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  002ca	83 c0 04	 add	 eax, 4
  002cd	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  002d0	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  002d3	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  002d6	89 55 d0	 mov	 DWORD PTR _type$36[ebp], edx

; 328  : 
; 329  : 			index = va_arg (pargs, int);

  002d9	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  002dc	83 c0 04	 add	 eax, 4
  002df	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  002e2	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  002e5	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  002e8	89 55 cc	 mov	 DWORD PTR _index$35[ebp], edx

; 330  : 
; 331  : 			debug_log_text (mode, NULL, "create %s (index = %d): ", get_entity_type_name (type), index);

  002eb	8b 45 cc	 mov	 eax, DWORD PTR _index$35[ebp]
  002ee	50		 push	 eax
  002ef	6b 4d d0 0c	 imul	 ecx, DWORD PTR _type$36[ebp], 12
  002f3	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[ecx]
  002f9	52		 push	 edx
  002fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GJGAFBNB@create?5?$CFs?5?$CIindex?5?$DN?5?$CFd?$CJ?3?5@
  002ff	6a 00		 push	 0
  00301	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00304	50		 push	 eax
  00305	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0030a	83 c4 14	 add	 esp, 20			; 00000014H

; 332  : 
; 333  : 			break;

  0030d	e9 84 07 00 00	 jmp	 $LN2@debug_log_
$LN13@debug_log_:

; 334  : 		}
; 335  : 		////////////////////////////////////////
; 336  : 		case ENTITY_DEBUG_DESTROY:
; 337  : 		////////////////////////////////////////
; 338  : 		{
; 339  : 			//
; 340  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en)
; 341  : 			//
; 342  : 
; 343  : 			debug_log_text (mode, en, "destroy");

  00312	68 00 00 00 00	 push	 OFFSET ??_C@_07OKFGPCEA@destroy@
  00317	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  0031a	50		 push	 eax
  0031b	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  0031e	51		 push	 ecx
  0031f	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00324	83 c4 0c	 add	 esp, 12			; 0000000cH

; 344  : 
; 345  : 			break;

  00327	e9 6a 07 00 00	 jmp	 $LN2@debug_log_
$LN14@debug_log_:

; 346  : 		}
; 347  : 		////////////////////////////////////////
; 348  : 		case ENTITY_DEBUG_DESTROY_FAMILY:
; 349  : 		////////////////////////////////////////
; 350  : 		{
; 351  : 			//
; 352  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en)
; 353  : 			//
; 354  : 
; 355  : 			debug_log_text (mode, en, "destroy family");

  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FIMEGKKE@destroy?5family@
  00331	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00334	50		 push	 eax
  00335	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  00338	51		 push	 ecx
  00339	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0033e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 356  : 
; 357  : 			break;

  00341	e9 50 07 00 00	 jmp	 $LN2@debug_log_
$LN15@debug_log_:

; 358  : 		}
; 359  : 		////////////////////////////////////////
; 360  : 		case ENTITY_DEBUG_ENTITY_ATTRIBUTE:
; 361  : 		////////////////////////////////////////
; 362  : 		{
; 363  : 			//
; 364  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, entity_attributes attr)
; 365  : 			//
; 366  : 
; 367  : 			entity_attributes
; 368  : 				attr;
; 369  : 
; 370  : 			attr = va_arg (pargs, entity_attributes);

  00346	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00349	83 c0 04	 add	 eax, 4
  0034c	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0034f	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00352	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00355	89 55 c8	 mov	 DWORD PTR _attr$34[ebp], edx

; 371  : 
; 372  : 			debug_log_text (mode, NULL, "entity attribute = %s", get_entity_attribute_name (attr));

  00358	8b 45 c8	 mov	 eax, DWORD PTR _attr$34[ebp]
  0035b	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?entity_attribute_database@@3PAUENTITY_ATTRIBUTE_DATA@@A[eax*8]
  00362	51		 push	 ecx
  00363	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MBNPHMDA@entity?5attribute?5?$DN?5?$CFs@
  00368	6a 00		 push	 0
  0036a	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  0036d	52		 push	 edx
  0036e	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00373	83 c4 10	 add	 esp, 16			; 00000010H

; 373  : 
; 374  : 			break;

  00376	e9 1b 07 00 00	 jmp	 $LN2@debug_log_
$LN16@debug_log_:

; 375  : 		}
; 376  : 		////////////////////////////////////////
; 377  : 		case ENTITY_DEBUG_ENTITY_COMMS_MESSAGE:
; 378  : 		////////////////////////////////////////
; 379  : 		{
; 380  : 			//
; 381  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, entity_comms_messages message)
; 382  : 			//
; 383  : 
; 384  : 			entity_comms_messages
; 385  : 				message;
; 386  : 
; 387  : 			message = va_arg (pargs, entity_comms_messages);

  0037b	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0037e	83 c0 04	 add	 eax, 4
  00381	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00384	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00387	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0038a	89 55 c4	 mov	 DWORD PTR _message$33[ebp], edx

; 388  : 
; 389  : 			debug_log_text (mode, NULL, "entity comms message = %s", get_entity_comms_message_name (message));

  0038d	8b 45 c4	 mov	 eax, DWORD PTR _message$33[ebp]
  00390	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?entity_comms_message_database@@3PAUENTITY_COMMS_MESSAGE_DATA@@A[eax*8]
  00397	51		 push	 ecx
  00398	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KKLCBCID@entity?5comms?5message?5?$DN?5?$CFs@
  0039d	6a 00		 push	 0
  0039f	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  003a2	52		 push	 edx
  003a3	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  003a8	83 c4 10	 add	 esp, 16			; 00000010H

; 390  : 
; 391  : 			break;

  003ab	e9 e6 06 00 00	 jmp	 $LN2@debug_log_
$LN17@debug_log_:

; 392  : 		}
; 393  : 		////////////////////////////////////////
; 394  : 		case ENTITY_DEBUG_ENTITY_INDEX:
; 395  : 		////////////////////////////////////////
; 396  : 		{
; 397  : 			//
; 398  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, int index)
; 399  : 			//
; 400  : 
; 401  : 			int
; 402  : 				index;
; 403  : 
; 404  : 			index = va_arg (pargs, int);

  003b0	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  003b3	83 c0 04	 add	 eax, 4
  003b6	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  003b9	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003bc	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  003bf	89 55 c0	 mov	 DWORD PTR _index$32[ebp], edx

; 405  : 
; 406  : 			debug_log_text (mode, en, "entity index = %d", index);

  003c2	8b 45 c0	 mov	 eax, DWORD PTR _index$32[ebp]
  003c5	50		 push	 eax
  003c6	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CDBAIKJH@entity?5index?5?$DN?5?$CFd@
  003cb	8b 4d 10	 mov	 ecx, DWORD PTR _en$[ebp]
  003ce	51		 push	 ecx
  003cf	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  003d2	52		 push	 edx
  003d3	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  003d8	83 c4 10	 add	 esp, 16			; 00000010H

; 407  : 
; 408  : 			break;

  003db	e9 b6 06 00 00	 jmp	 $LN2@debug_log_
$LN18@debug_log_:

; 409  : 		}
; 410  : 		////////////////////////////////////////
; 411  : 		case ENTITY_DEBUG_ENTITY_TYPE:
; 412  : 		////////////////////////////////////////
; 413  : 		{
; 414  : 			//
; 415  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, entity_types type)
; 416  : 			//
; 417  : 
; 418  : 			entity_types
; 419  : 				type;
; 420  : 
; 421  : 			type = va_arg (pargs, entity_types);

  003e0	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  003e3	83 c0 04	 add	 eax, 4
  003e6	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  003e9	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  003ec	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  003ef	89 55 bc	 mov	 DWORD PTR _type$31[ebp], edx

; 422  : 
; 423  : 			debug_log_text (mode, en, "entity type = %s", get_entity_type_name (type));

  003f2	6b 45 bc 0c	 imul	 eax, DWORD PTR _type$31[ebp], 12
  003f6	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[eax]
  003fc	51		 push	 ecx
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FBMGPJFF@entity?5type?5?$DN?5?$CFs@
  00402	8b 55 10	 mov	 edx, DWORD PTR _en$[ebp]
  00405	52		 push	 edx
  00406	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00409	50		 push	 eax
  0040a	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0040f	83 c4 10	 add	 esp, 16			; 00000010H

; 424  : 
; 425  : 			break;

  00412	e9 7f 06 00 00	 jmp	 $LN2@debug_log_
$LN19@debug_log_:

; 426  : 		}
; 427  : 		////////////////////////////////////////
; 428  : 		case ENTITY_DEBUG_FLOAT_TYPE:
; 429  : 		////////////////////////////////////////
; 430  : 		{
; 431  : 			//
; 432  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, float_types type)
; 433  : 			//
; 434  : 
; 435  : 			float_types
; 436  : 				type;
; 437  : 
; 438  : 			type = va_arg (pargs, float_types);

  00417	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0041a	83 c0 04	 add	 eax, 4
  0041d	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00420	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00423	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00426	89 55 b8	 mov	 DWORD PTR _type$30[ebp], edx

; 439  : 
; 440  : 			debug_log_text (mode, NULL, "float type = %s", get_float_type_name (type));

  00429	6b 45 b8 18	 imul	 eax, DWORD PTR _type$30[ebp], 24
  0042d	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?float_type_database@@3PAUFLOAT_TYPE_DATA@@A[eax]
  00433	51		 push	 ecx
  00434	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MEGEGLCJ@float?5type?5?$DN?5?$CFs@
  00439	6a 00		 push	 0
  0043b	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  0043e	52		 push	 edx
  0043f	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00444	83 c4 10	 add	 esp, 16			; 00000010H

; 441  : 
; 442  : 			break;

  00447	e9 4a 06 00 00	 jmp	 $LN2@debug_log_
$LN20@debug_log_:

; 443  : 		}
; 444  : 		////////////////////////////////////////
; 445  : 		case ENTITY_DEBUG_FLOAT_VALUE:
; 446  : 		////////////////////////////////////////
; 447  : 		{
; 448  : 			//
; 449  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, float_types type, float value)
; 450  : 			//
; 451  : 
; 452  : 			float_types
; 453  : 				type;
; 454  : 
; 455  : 			float
; 456  : 				value;
; 457  : 
; 458  : 			type = va_arg (pargs, float_types);

  0044c	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0044f	83 c0 04	 add	 eax, 4
  00452	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00455	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00458	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0045b	89 55 b4	 mov	 DWORD PTR _type$29[ebp], edx

; 459  : 
; 460  : 			value = va_arg (pargs, double);

  0045e	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00461	83 c0 08	 add	 eax, 8
  00464	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00467	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0046a	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  0046f	f3 0f 11 45 b0	 movss	 DWORD PTR _value$28[ebp], xmm0

; 461  : 
; 462  : 			debug_log_text (mode, en, "%s = %.3f", get_float_type_name (type), value);

  00474	f3 0f 5a 45 b0	 cvtss2sd xmm0, DWORD PTR _value$28[ebp]
  00479	83 ec 08	 sub	 esp, 8
  0047c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00481	6b 45 b4 18	 imul	 eax, DWORD PTR _type$29[ebp], 24
  00485	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?float_type_database@@3PAUFLOAT_TYPE_DATA@@A[eax]
  0048b	51		 push	 ecx
  0048c	68 00 00 00 00	 push	 OFFSET ??_C@_09BHAHOMGO@?$CFs?5?$DN?5?$CF?43f@
  00491	8b 55 10	 mov	 edx, DWORD PTR _en$[ebp]
  00494	52		 push	 edx
  00495	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00498	50		 push	 eax
  00499	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0049e	83 c4 18	 add	 esp, 24			; 00000018H

; 463  : 
; 464  : 			break;

  004a1	e9 f0 05 00 00	 jmp	 $LN2@debug_log_
$LN21@debug_log_:

; 465  : 		}
; 466  : 		////////////////////////////////////////
; 467  : 		case ENTITY_DEBUG_INT_TYPE:
; 468  : 		////////////////////////////////////////
; 469  : 		{
; 470  : 			//
; 471  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, int_types type)
; 472  : 			//
; 473  : 
; 474  : 			int_types
; 475  : 				type;
; 476  : 
; 477  : 			type = va_arg (pargs, int_types);

  004a6	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  004a9	83 c0 04	 add	 eax, 4
  004ac	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  004af	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  004b2	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  004b5	89 55 ac	 mov	 DWORD PTR _type$27[ebp], edx

; 478  : 
; 479  : 			debug_log_text (mode, NULL, "int type = %s", get_int_type_name (type));

  004b8	6b 45 ac 14	 imul	 eax, DWORD PTR _type$27[ebp], 20
  004bc	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?int_type_database@@3PAUINT_TYPE_DATA@@A[eax]
  004c2	51		 push	 ecx
  004c3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ELMNMPFM@int?5type?5?$DN?5?$CFs@
  004c8	6a 00		 push	 0
  004ca	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  004cd	52		 push	 edx
  004ce	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  004d3	83 c4 10	 add	 esp, 16			; 00000010H

; 480  : 
; 481  : 			break;

  004d6	e9 bb 05 00 00	 jmp	 $LN2@debug_log_
$LN22@debug_log_:

; 482  : 		}
; 483  : 		////////////////////////////////////////
; 484  : 		case ENTITY_DEBUG_INT_VALUE:
; 485  : 		////////////////////////////////////////
; 486  : 		{
; 487  : 			//
; 488  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, int_types type, int value)
; 489  : 			//
; 490  : 
; 491  : 			int_types
; 492  : 				type;
; 493  : 
; 494  : 			int
; 495  : 				value;
; 496  : 
; 497  : 			type = va_arg (pargs, int_types);

  004db	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  004de	83 c0 04	 add	 eax, 4
  004e1	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  004e4	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  004e7	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  004ea	89 55 a8	 mov	 DWORD PTR _type$26[ebp], edx

; 498  : 
; 499  : 			value = va_arg (pargs, int);

  004ed	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  004f0	83 c0 04	 add	 eax, 4
  004f3	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  004f6	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  004f9	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  004fc	89 55 a4	 mov	 DWORD PTR _value$25[ebp], edx

; 500  : 
; 501  : 			debug_log_text (mode, en, "%s = %d", get_int_type_name (type), value);

  004ff	8b 45 a4	 mov	 eax, DWORD PTR _value$25[ebp]
  00502	50		 push	 eax
  00503	6b 4d a8 14	 imul	 ecx, DWORD PTR _type$26[ebp], 20
  00507	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?int_type_database@@3PAUINT_TYPE_DATA@@A[ecx]
  0050d	52		 push	 edx
  0050e	68 00 00 00 00	 push	 OFFSET ??_C@_07DHPDHKIF@?$CFs?5?$DN?5?$CFd@
  00513	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00516	50		 push	 eax
  00517	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  0051a	51		 push	 ecx
  0051b	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00520	83 c4 14	 add	 esp, 20			; 00000014H

; 502  : 
; 503  : 			break;

  00523	e9 6e 05 00 00	 jmp	 $LN2@debug_log_
$LN23@debug_log_:

; 504  : 		}
; 505  : 		////////////////////////////////////////
; 506  : 		case ENTITY_DEBUG_KILL:
; 507  : 		////////////////////////////////////////
; 508  : 		{
; 509  : 			//
; 510  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en)
; 511  : 			//
; 512  : 
; 513  : 			debug_log_text (mode, en, "kill");

  00528	68 00 00 00 00	 push	 OFFSET ??_C@_04BJJEOANI@kill@
  0052d	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00530	50		 push	 eax
  00531	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  00534	51		 push	 ecx
  00535	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0053a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 514  : 
; 515  : 			break;

  0053d	e9 54 05 00 00	 jmp	 $LN2@debug_log_
$LN24@debug_log_:

; 516  : 		}
; 517  : 		////////////////////////////////////////
; 518  : 		case ENTITY_DEBUG_LIST_TYPE:
; 519  : 		////////////////////////////////////////
; 520  : 		{
; 521  : 			//
; 522  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, list_types type)
; 523  : 			//
; 524  : 
; 525  : 			list_types
; 526  : 				type;
; 527  : 
; 528  : 			type = va_arg (pargs, list_types);

  00542	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00545	83 c0 04	 add	 eax, 4
  00548	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0054b	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0054e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00551	89 55 a0	 mov	 DWORD PTR _type$24[ebp], edx

; 529  : 
; 530  : 			debug_log_text (mode, NULL, "list type = %s", get_list_type_name (type));

  00554	8b 45 a0	 mov	 eax, DWORD PTR _type$24[ebp]
  00557	8b 0c c5 00 00
	00 00		 mov	 ecx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[eax*8]
  0055e	51		 push	 ecx
  0055f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LJEFJPNP@list?5type?5?$DN?5?$CFs@
  00564	6a 00		 push	 0
  00566	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  00569	52		 push	 edx
  0056a	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  0056f	83 c4 10	 add	 esp, 16			; 00000010H

; 531  : 
; 532  : 			break;

  00572	e9 1f 05 00 00	 jmp	 $LN2@debug_log_
$LN25@debug_log_:

; 533  : 		}
; 534  : 		////////////////////////////////////////
; 535  : 		case ENTITY_DEBUG_LIST_TYPE_CHILD_PRED:
; 536  : 		////////////////////////////////////////
; 537  : 		{
; 538  : 			//
; 539  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, list_types type, entity *child_pred)
; 540  : 			//
; 541  : 
; 542  : 			list_types
; 543  : 				type;
; 544  : 
; 545  : 			entity
; 546  : 				*child_pred;
; 547  : 
; 548  : 			int
; 549  : 				index;
; 550  : 
; 551  : 			type = va_arg (pargs, list_types);

  00577	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0057a	83 c0 04	 add	 eax, 4
  0057d	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00580	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00583	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00586	89 55 9c	 mov	 DWORD PTR _type$23[ebp], edx

; 552  : 
; 553  : 			child_pred = va_arg (pargs, entity *);

  00589	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0058c	83 c0 04	 add	 eax, 4
  0058f	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00592	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00595	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00598	89 55 98	 mov	 DWORD PTR _child_pred$22[ebp], edx

; 554  : 
; 555  : 			index = get_local_entity_safe_index (child_pred);

  0059b	83 7d 98 00	 cmp	 DWORD PTR _child_pred$22[ebp], 0
  0059f	74 14		 je	 SHORT $LN41@debug_log_
  005a1	8b 45 98	 mov	 eax, DWORD PTR _child_pred$22[ebp]
  005a4	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  005aa	c1 f8 04	 sar	 eax, 4
  005ad	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv312[ebp], eax
  005b3	eb 0a		 jmp	 SHORT $LN42@debug_log_
$LN41@debug_log_:
  005b5	c7 85 fc fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv312[ebp], -1
$LN42@debug_log_:
  005bf	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv312[ebp]
  005c5	89 4d 94	 mov	 DWORD PTR _index$21[ebp], ecx

; 556  : 
; 557  : 			debug_log_text (mode, en, "%s child pred index = %d", get_list_type_name (type), index);

  005c8	8b 45 94	 mov	 eax, DWORD PTR _index$21[ebp]
  005cb	50		 push	 eax
  005cc	8b 4d 9c	 mov	 ecx, DWORD PTR _type$23[ebp]
  005cf	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[ecx*8]
  005d6	52		 push	 edx
  005d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GKMIKOJM@?$CFs?5child?5pred?5index?5?$DN?5?$CFd@
  005dc	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  005df	50		 push	 eax
  005e0	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  005e3	51		 push	 ecx
  005e4	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  005e9	83 c4 14	 add	 esp, 20			; 00000014H

; 558  : 
; 559  : 			break;

  005ec	e9 a5 04 00 00	 jmp	 $LN2@debug_log_
$LN26@debug_log_:

; 560  : 		}
; 561  : 		////////////////////////////////////////
; 562  : 		case ENTITY_DEBUG_LIST_TYPE_CHILD_SUCC:
; 563  : 		////////////////////////////////////////
; 564  : 		{
; 565  : 			//
; 566  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, list_types type, entity *child_succ)
; 567  : 			//
; 568  : 
; 569  : 			list_types
; 570  : 				type;
; 571  : 
; 572  : 			entity
; 573  : 				*child_succ;
; 574  : 
; 575  : 			int
; 576  : 				index;
; 577  : 
; 578  : 			type = va_arg (pargs, list_types);

  005f1	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  005f4	83 c0 04	 add	 eax, 4
  005f7	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  005fa	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  005fd	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00600	89 55 90	 mov	 DWORD PTR _type$20[ebp], edx

; 579  : 
; 580  : 			child_succ = va_arg (pargs, entity *);

  00603	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00606	83 c0 04	 add	 eax, 4
  00609	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0060c	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0060f	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00612	89 55 8c	 mov	 DWORD PTR _child_succ$19[ebp], edx

; 581  : 
; 582  : 			index = get_local_entity_safe_index (child_succ);

  00615	83 7d 8c 00	 cmp	 DWORD PTR _child_succ$19[ebp], 0
  00619	74 14		 je	 SHORT $LN43@debug_log_
  0061b	8b 45 8c	 mov	 eax, DWORD PTR _child_succ$19[ebp]
  0061e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00624	c1 f8 04	 sar	 eax, 4
  00627	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv328[ebp], eax
  0062d	eb 0a		 jmp	 SHORT $LN44@debug_log_
$LN43@debug_log_:
  0062f	c7 85 fc fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv328[ebp], -1
$LN44@debug_log_:
  00639	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv328[ebp]
  0063f	89 4d 88	 mov	 DWORD PTR _index$18[ebp], ecx

; 583  : 
; 584  : 			debug_log_text (mode, en, "%s child succ index = %d", get_list_type_name (type), index);

  00642	8b 45 88	 mov	 eax, DWORD PTR _index$18[ebp]
  00645	50		 push	 eax
  00646	8b 4d 90	 mov	 ecx, DWORD PTR _type$20[ebp]
  00649	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[ecx*8]
  00650	52		 push	 edx
  00651	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FNLAFIJK@?$CFs?5child?5succ?5index?5?$DN?5?$CFd@
  00656	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00659	50		 push	 eax
  0065a	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  0065d	51		 push	 ecx
  0065e	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00663	83 c4 14	 add	 esp, 20			; 00000014H

; 585  : 
; 586  : 			break;

  00666	e9 2b 04 00 00	 jmp	 $LN2@debug_log_
$LN27@debug_log_:

; 587  : 		}
; 588  : 		////////////////////////////////////////
; 589  : 		case ENTITY_DEBUG_LIST_TYPE_FIRST_CHILD:
; 590  : 		////////////////////////////////////////
; 591  : 		{
; 592  : 			//
; 593  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, list_types type, entity *first_child)
; 594  : 			//
; 595  : 
; 596  : 			list_types
; 597  : 				type;
; 598  : 
; 599  : 			entity
; 600  : 				*first_child;
; 601  : 
; 602  : 			int
; 603  : 				index;
; 604  : 
; 605  : 			type = va_arg (pargs, list_types);

  0066b	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0066e	83 c0 04	 add	 eax, 4
  00671	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00674	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00677	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0067a	89 55 84	 mov	 DWORD PTR _type$17[ebp], edx

; 606  : 
; 607  : 			first_child = va_arg (pargs, entity *);

  0067d	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00680	83 c0 04	 add	 eax, 4
  00683	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00686	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00689	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0068c	89 55 80	 mov	 DWORD PTR _first_child$16[ebp], edx

; 608  : 
; 609  : 			index = get_local_entity_safe_index (first_child);

  0068f	83 7d 80 00	 cmp	 DWORD PTR _first_child$16[ebp], 0
  00693	74 14		 je	 SHORT $LN45@debug_log_
  00695	8b 45 80	 mov	 eax, DWORD PTR _first_child$16[ebp]
  00698	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0069e	c1 f8 04	 sar	 eax, 4
  006a1	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv344[ebp], eax
  006a7	eb 0a		 jmp	 SHORT $LN46@debug_log_
$LN45@debug_log_:
  006a9	c7 85 fc fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv344[ebp], -1
$LN46@debug_log_:
  006b3	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv344[ebp]
  006b9	89 8d 7c ff ff
	ff		 mov	 DWORD PTR _index$15[ebp], ecx

; 610  : 
; 611  : 			debug_log_text (mode, en, "%s first child index = %d", get_list_type_name (type), index);

  006bf	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _index$15[ebp]
  006c5	50		 push	 eax
  006c6	8b 4d 84	 mov	 ecx, DWORD PTR _type$17[ebp]
  006c9	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[ecx*8]
  006d0	52		 push	 edx
  006d1	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@KBADCPMH@?$CFs?5first?5child?5index?5?$DN?5?$CFd@
  006d6	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  006d9	50		 push	 eax
  006da	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  006dd	51		 push	 ecx
  006de	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  006e3	83 c4 14	 add	 esp, 20			; 00000014H

; 612  : 
; 613  : 			break;

  006e6	e9 ab 03 00 00	 jmp	 $LN2@debug_log_
$LN28@debug_log_:

; 614  : 		}
; 615  : 		////////////////////////////////////////
; 616  : 		case ENTITY_DEBUG_LIST_TYPE_PARENT:
; 617  : 		////////////////////////////////////////
; 618  : 		{
; 619  : 			//
; 620  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, list_types type, entity *parent)
; 621  : 			//
; 622  : 
; 623  : 			list_types
; 624  : 				type;
; 625  : 
; 626  : 			entity
; 627  : 				*parent;
; 628  : 
; 629  : 			int
; 630  : 				index;
; 631  : 
; 632  : 			type = va_arg (pargs, list_types);

  006eb	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  006ee	83 c0 04	 add	 eax, 4
  006f1	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  006f4	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  006f7	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  006fa	89 95 78 ff ff
	ff		 mov	 DWORD PTR _type$14[ebp], edx

; 633  : 
; 634  : 			parent = va_arg (pargs, entity *);

  00700	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00703	83 c0 04	 add	 eax, 4
  00706	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00709	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0070c	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0070f	89 95 74 ff ff
	ff		 mov	 DWORD PTR _parent$13[ebp], edx

; 635  : 
; 636  : 			index = get_local_entity_safe_index (parent);

  00715	83 bd 74 ff ff
	ff 00		 cmp	 DWORD PTR _parent$13[ebp], 0
  0071c	74 17		 je	 SHORT $LN47@debug_log_
  0071e	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR _parent$13[ebp]
  00724	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  0072a	c1 f8 04	 sar	 eax, 4
  0072d	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv424[ebp], eax
  00733	eb 0a		 jmp	 SHORT $LN48@debug_log_
$LN47@debug_log_:
  00735	c7 85 fc fe ff
	ff ff ff ff ff	 mov	 DWORD PTR tv424[ebp], -1
$LN48@debug_log_:
  0073f	8b 8d fc fe ff
	ff		 mov	 ecx, DWORD PTR tv424[ebp]
  00745	89 8d 70 ff ff
	ff		 mov	 DWORD PTR _index$12[ebp], ecx

; 637  : 
; 638  : 			debug_log_text (mode, en, "%s parent index = %d", get_list_type_name (type), index);

  0074b	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR _index$12[ebp]
  00751	50		 push	 eax
  00752	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR _type$14[ebp]
  00758	8b 14 cd 00 00
	00 00		 mov	 edx, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[ecx*8]
  0075f	52		 push	 edx
  00760	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LABNAKOJ@?$CFs?5parent?5index?5?$DN?5?$CFd@
  00765	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  00768	50		 push	 eax
  00769	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  0076c	51		 push	 ecx
  0076d	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00772	83 c4 14	 add	 esp, 20			; 00000014H

; 639  : 
; 640  : 			break;

  00775	e9 1c 03 00 00	 jmp	 $LN2@debug_log_
$LN29@debug_log_:

; 641  : 		}
; 642  : 		////////////////////////////////////////
; 643  : 		case ENTITY_DEBUG_PTR_TYPE:
; 644  : 		////////////////////////////////////////
; 645  : 		{
; 646  : 			//
; 647  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, ptr_types type)
; 648  : 			//
; 649  : 
; 650  : 			ptr_types
; 651  : 				type;
; 652  : 
; 653  : 			type = va_arg (pargs, ptr_types);

  0077a	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0077d	83 c0 04	 add	 eax, 4
  00780	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00783	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00786	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00789	89 95 6c ff ff
	ff		 mov	 DWORD PTR _type$11[ebp], edx

; 654  : 
; 655  : 			debug_log_text (mode, NULL, "ptr type = %s", get_ptr_type_name (type));

  0078f	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _type$11[ebp]
  00795	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?ptr_type_database@@3PAUPTR_TYPE_DATA@@A[eax*4]
  0079c	51		 push	 ecx
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OCEMGJGM@ptr?5type?5?$DN?5?$CFs@
  007a2	6a 00		 push	 0
  007a4	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  007a7	52		 push	 edx
  007a8	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  007ad	83 c4 10	 add	 esp, 16			; 00000010H

; 656  : 
; 657  : 			break;

  007b0	e9 e1 02 00 00	 jmp	 $LN2@debug_log_
$LN30@debug_log_:

; 658  : 		}
; 659  : 		////////////////////////////////////////
; 660  : 		case ENTITY_DEBUG_PTR_VALUE:
; 661  : 		////////////////////////////////////////
; 662  : 		{
; 663  : 			//
; 664  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, ptr_types type, void *ptr)
; 665  : 			//
; 666  : 
; 667  : 			ptr_types
; 668  : 				type;
; 669  : 
; 670  : 			void
; 671  : 				*ptr;
; 672  : 
; 673  : 			type = va_arg (pargs, ptr_types);

  007b5	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  007b8	83 c0 04	 add	 eax, 4
  007bb	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  007be	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  007c1	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  007c4	89 95 68 ff ff
	ff		 mov	 DWORD PTR _type$10[ebp], edx

; 674  : 
; 675  : 			ptr = va_arg (pargs, void *);

  007ca	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  007cd	83 c0 04	 add	 eax, 4
  007d0	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  007d3	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  007d6	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  007d9	89 95 64 ff ff
	ff		 mov	 DWORD PTR _ptr$9[ebp], edx

; 676  : 
; 677  : 			debug_log_text (mode, en, "%s = 0x%x", get_ptr_type_name (type), ptr);

  007df	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR _ptr$9[ebp]
  007e5	50		 push	 eax
  007e6	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _type$10[ebp]
  007ec	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?ptr_type_database@@3PAUPTR_TYPE_DATA@@A[ecx*4]
  007f3	52		 push	 edx
  007f4	68 00 00 00 00	 push	 OFFSET ??_C@_09JNILEEPP@?$CFs?5?$DN?50x?$CFx@
  007f9	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  007fc	50		 push	 eax
  007fd	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  00800	51		 push	 ecx
  00801	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00806	83 c4 14	 add	 esp, 20			; 00000014H

; 678  : 
; 679  : 			break;

  00809	e9 88 02 00 00	 jmp	 $LN2@debug_log_
$LN31@debug_log_:

; 680  : 		}
; 681  : 		////////////////////////////////////////
; 682  : 		case ENTITY_DEBUG_STRING_TYPE:
; 683  : 		////////////////////////////////////////
; 684  : 		{
; 685  : 			//
; 686  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, string_types type)
; 687  : 			//
; 688  : 
; 689  : 			string_types
; 690  : 				type;
; 691  : 
; 692  : 			type = va_arg (pargs, string_types);

  0080e	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00811	83 c0 04	 add	 eax, 4
  00814	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00817	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0081a	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0081d	89 95 60 ff ff
	ff		 mov	 DWORD PTR _type$8[ebp], edx

; 693  : 
; 694  : 			debug_log_text (mode, NULL, "string type = %s", get_string_type_name (type));

  00823	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _type$8[ebp]
  00829	c1 e0 04	 shl	 eax, 4
  0082c	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?string_type_database@@3PAUSTRING_TYPE_DATA@@A[eax]
  00832	51		 push	 ecx
  00833	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LKLMHJHO@string?5type?5?$DN?5?$CFs@
  00838	6a 00		 push	 0
  0083a	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  0083d	52		 push	 edx
  0083e	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00843	83 c4 10	 add	 esp, 16			; 00000010H

; 695  : 
; 696  : 			break;

  00846	e9 4b 02 00 00	 jmp	 $LN2@debug_log_
$LN32@debug_log_:

; 697  : 		}
; 698  : 		////////////////////////////////////////
; 699  : 		case ENTITY_DEBUG_STRING:
; 700  : 		////////////////////////////////////////
; 701  : 		{
; 702  : 			//
; 703  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, string_types type, char *s)
; 704  : 			//
; 705  : 
; 706  : 			string_types
; 707  : 				type;
; 708  : 
; 709  : 			const char
; 710  : 				*s;
; 711  : 
; 712  : 			type = va_arg (pargs, string_types);

  0084b	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0084e	83 c0 04	 add	 eax, 4
  00851	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00854	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00857	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0085a	89 95 5c ff ff
	ff		 mov	 DWORD PTR _type$7[ebp], edx

; 713  : 
; 714  : 			s = va_arg (pargs, const char *);

  00860	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00863	83 c0 04	 add	 eax, 4
  00866	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00869	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0086c	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  0086f	89 95 58 ff ff
	ff		 mov	 DWORD PTR _s$6[ebp], edx

; 715  : 
; 716  : 			ASSERT (s);

  00875	83 bd 58 ff ff
	ff 00		 cmp	 DWORD PTR _s$6[ebp], 0
  0087c	75 1a		 jne	 SHORT $LN33@debug_log_
  0087e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA
  00883	05 10 02 00 00	 add	 eax, 528		; 00000210H
  00888	50		 push	 eax
  00889	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@
  0088e	68 00 00 00 00	 push	 OFFSET ??_C@_01LKDEMHDF@s@
  00893	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN33@debug_log_:

; 717  : 
; 718  : 			debug_log_text (mode, en, "%s = %s", get_string_type_name (type), s);

  00898	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR _s$6[ebp]
  0089e	50		 push	 eax
  0089f	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR _type$7[ebp]
  008a5	c1 e1 04	 shl	 ecx, 4
  008a8	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?string_type_database@@3PAUSTRING_TYPE_DATA@@A[ecx]
  008ae	52		 push	 edx
  008af	68 00 00 00 00	 push	 OFFSET ??_C@_07DCHAPOBD@?$CFs?5?$DN?5?$CFs@
  008b4	8b 45 10	 mov	 eax, DWORD PTR _en$[ebp]
  008b7	50		 push	 eax
  008b8	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  008bb	51		 push	 ecx
  008bc	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  008c1	83 c4 14	 add	 esp, 20			; 00000014H

; 719  : 
; 720  : 			break;

  008c4	e9 cd 01 00 00	 jmp	 $LN2@debug_log_
$LN34@debug_log_:

; 721  : 		}
; 722  : 		////////////////////////////////////////
; 723  : 		case ENTITY_DEBUG_VEC3D_TYPE:
; 724  : 		////////////////////////////////////////
; 725  : 		{
; 726  : 			//
; 727  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, vec3d_types type)
; 728  : 			//
; 729  : 
; 730  : 			vec3d_types
; 731  : 				type;
; 732  : 
; 733  : 			type = va_arg (pargs, vec3d_types);

  008c9	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  008cc	83 c0 04	 add	 eax, 4
  008cf	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  008d2	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  008d5	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  008d8	89 95 54 ff ff
	ff		 mov	 DWORD PTR _type$5[ebp], edx

; 734  : 
; 735  : 			debug_log_text (mode, NULL, "vec3d type = %s", get_vec3d_type_name (type));

  008de	6b 85 54 ff ff
	ff 0c		 imul	 eax, DWORD PTR _type$5[ebp], 12
  008e5	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vec3d_type_database@@3PAUVEC3D_TYPE_DATA@@A[eax]
  008eb	51		 push	 ecx
  008ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BLAKLMDD@vec3d?5type?5?$DN?5?$CFs@
  008f1	6a 00		 push	 0
  008f3	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  008f6	52		 push	 edx
  008f7	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  008fc	83 c4 10	 add	 esp, 16			; 00000010H

; 736  : 
; 737  : 			break;

  008ff	e9 92 01 00 00	 jmp	 $LN2@debug_log_
$LN35@debug_log_:

; 738  : 		}
; 739  : 		////////////////////////////////////////
; 740  : 		case ENTITY_DEBUG_VEC3D:
; 741  : 		////////////////////////////////////////
; 742  : 		{
; 743  : 			//
; 744  : 			// (entity_debug_modes mode, entity_debug_args arg, entity *en, vec3d_types type, vec3d *v)
; 745  : 			//
; 746  : 
; 747  : 			vec3d_types
; 748  : 				type;
; 749  : 
; 750  : 			vec3d
; 751  : 				*v;
; 752  : 
; 753  : 			type = va_arg (pargs, vec3d_types);

  00904	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  00907	83 c0 04	 add	 eax, 4
  0090a	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  0090d	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00910	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00913	89 95 50 ff ff
	ff		 mov	 DWORD PTR _type$4[ebp], edx

; 754  : 
; 755  : 			v = va_arg (pargs, vec3d *);

  00919	8b 45 fc	 mov	 eax, DWORD PTR _pargs$[ebp]
  0091c	83 c0 04	 add	 eax, 4
  0091f	89 45 fc	 mov	 DWORD PTR _pargs$[ebp], eax
  00922	8b 4d fc	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00925	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00928	89 95 4c ff ff
	ff		 mov	 DWORD PTR _v$3[ebp], edx

; 756  : 
; 757  : 			ASSERT (v);

  0092e	83 bd 4c ff ff
	ff 00		 cmp	 DWORD PTR _v$3[ebp], 0
  00935	75 1a		 jne	 SHORT $LN36@debug_log_
  00937	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ@4JA
  0093c	05 39 02 00 00	 add	 eax, 569		; 00000239H
  00941	50		 push	 eax
  00942	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@GCCPCGMN@c?3?2users?2nhv90?2projects?2eech?2ap@
  00947	68 00 00 00 00	 push	 OFFSET ??_C@_01MHEDDDHA@v@
  0094c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN36@debug_log_:

; 758  : 
; 759  : 			if (type == VEC3D_TYPE_POSITION)

  00951	83 bd 50 ff ff
	ff 08		 cmp	 DWORD PTR _type$4[ebp], 8
  00958	0f 85 ca 00 00
	00		 jne	 $LN37@debug_log_

; 760  : 			{
; 761  : 				int
; 762  : 					x_sec,
; 763  : 					z_sec;
; 764  : 
; 765  : 				get_x_sector (x_sec, v->x);

  0095e	8d 85 48 ff ff
	ff		 lea	 eax, DWORD PTR _x_sec$2[ebp]
  00964	50		 push	 eax
  00965	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _v$3[ebp]
  0096b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0096f	51		 push	 ecx
  00970	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00975	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0097a	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _x_sec$2[ebp]
  00980	99		 cdq
  00981	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  00987	89 85 48 ff ff
	ff		 mov	 DWORD PTR _x_sec$2[ebp], eax

; 766  : 				get_z_sector (z_sec, v->z);

  0098d	8d 85 44 ff ff
	ff		 lea	 eax, DWORD PTR _z_sec$1[ebp]
  00993	50		 push	 eax
  00994	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _v$3[ebp]
  0099a	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  0099f	51		 push	 ecx
  009a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009a5	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  009aa	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _z_sec$1[ebp]
  009b0	99		 cdq
  009b1	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A
  009b7	89 85 44 ff ff
	ff		 mov	 DWORD PTR _z_sec$1[ebp], eax

; 767  : 
; 768  : 				debug_log_text (mode, en, "%s = (x = %.3f, y = %.3f, z = %.3f, x sec = %d, z sec = %d)", get_vec3d_type_name (type), v->x, v->y, v->z, x_sec, z_sec);

  009bd	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _z_sec$1[ebp]
  009c3	50		 push	 eax
  009c4	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR _x_sec$2[ebp]
  009ca	51		 push	 ecx
  009cb	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR _v$3[ebp]
  009d1	f3 0f 5a 42 08	 cvtss2sd xmm0, DWORD PTR [edx+8]
  009d6	83 ec 08	 sub	 esp, 8
  009d9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009de	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _v$3[ebp]
  009e4	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  009e9	83 ec 08	 sub	 esp, 8
  009ec	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009f1	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _v$3[ebp]
  009f7	f3 0f 5a 01	 cvtss2sd xmm0, DWORD PTR [ecx]
  009fb	83 ec 08	 sub	 esp, 8
  009fe	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a03	6b 95 50 ff ff
	ff 0c		 imul	 edx, DWORD PTR _type$4[ebp], 12
  00a0a	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?vec3d_type_database@@3PAUVEC3D_TYPE_DATA@@A[edx]
  00a10	50		 push	 eax
  00a11	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PLOAMDAI@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@
  00a16	8b 4d 10	 mov	 ecx, DWORD PTR _en$[ebp]
  00a19	51		 push	 ecx
  00a1a	8b 55 08	 mov	 edx, DWORD PTR _mode$[ebp]
  00a1d	52		 push	 edx
  00a1e	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00a23	83 c4 30	 add	 esp, 48			; 00000030H

; 769  : 			}
; 770  : 			else

  00a26	eb 5b		 jmp	 SHORT $LN38@debug_log_
$LN37@debug_log_:

; 771  : 			{
; 772  : 				debug_log_text (mode, en, "%s = (x = %.3f, y = %.3f, z = %.3f)", get_vec3d_type_name (type), v->x, v->y, v->z);

  00a28	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR _v$3[ebp]
  00a2e	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00a33	83 ec 08	 sub	 esp, 8
  00a36	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a3b	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR _v$3[ebp]
  00a41	f3 0f 5a 41 04	 cvtss2sd xmm0, DWORD PTR [ecx+4]
  00a46	83 ec 08	 sub	 esp, 8
  00a49	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a4e	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR _v$3[ebp]
  00a54	f3 0f 5a 02	 cvtss2sd xmm0, DWORD PTR [edx]
  00a58	83 ec 08	 sub	 esp, 8
  00a5b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00a60	6b 85 50 ff ff
	ff 0c		 imul	 eax, DWORD PTR _type$4[ebp], 12
  00a67	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?vec3d_type_database@@3PAUVEC3D_TYPE_DATA@@A[eax]
  00a6d	51		 push	 ecx
  00a6e	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@LIJLNIO@?$CFs?5?$DN?5?$CIx?5?$DN?5?$CF?43f?0?5y?5?$DN?5?$CF?43f?0?5z?5?$DN?5?$CF@
  00a73	8b 55 10	 mov	 edx, DWORD PTR _en$[ebp]
  00a76	52		 push	 edx
  00a77	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00a7a	50		 push	 eax
  00a7b	e8 00 00 00 00	 call	 ?debug_log_text@@YAXW4ENTITY_DEBUG_MODES@@PAUENTITY@@PADZZ ; debug_log_text
  00a80	83 c4 28	 add	 esp, 40			; 00000028H
$LN38@debug_log_:

; 773  : 			}
; 774  : 
; 775  : 			break;

  00a83	eb 11		 jmp	 SHORT $LN2@debug_log_
$LN39@debug_log_:

; 776  : 		}
; 777  : 		////////////////////////////////////////
; 778  : 		default:
; 779  : 		////////////////////////////////////////
; 780  : 		{
; 781  : 			debug_fatal ("Invalid entity debug arg = %d", arg);

  00a85	8b 45 0c	 mov	 eax, DWORD PTR _arg$[ebp]
  00a88	50		 push	 eax
  00a89	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BPNCLOKB@Invalid?5entity?5debug?5arg?5?$DN?5?$CFd@
  00a8e	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00a93	83 c4 08	 add	 esp, 8
$LN2@debug_log_:

; 782  : 
; 783  : 			break;
; 784  : 		}
; 785  : 	}
; 786  : 
; 787  : 	va_end (pargs);

  00a96	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _pargs$[ebp], 0
$LN1@debug_log_:

; 788  : }

  00a9d	5f		 pop	 edi
  00a9e	5e		 pop	 esi
  00a9f	5b		 pop	 ebx
  00aa0	8b e5		 mov	 esp, ebp
  00aa2	5d		 pop	 ebp
  00aa3	c3		 ret	 0
$LN49@debug_log_:
  00aa4	00 00 00 00	 DD	 $LN7@debug_log_
  00aa8	00 00 00 00	 DD	 $LN8@debug_log_
  00aac	00 00 00 00	 DD	 $LN10@debug_log_
  00ab0	00 00 00 00	 DD	 $LN11@debug_log_
  00ab4	00 00 00 00	 DD	 $LN12@debug_log_
  00ab8	00 00 00 00	 DD	 $LN13@debug_log_
  00abc	00 00 00 00	 DD	 $LN14@debug_log_
  00ac0	00 00 00 00	 DD	 $LN15@debug_log_
  00ac4	00 00 00 00	 DD	 $LN16@debug_log_
  00ac8	00 00 00 00	 DD	 $LN17@debug_log_
  00acc	00 00 00 00	 DD	 $LN18@debug_log_
  00ad0	00 00 00 00	 DD	 $LN19@debug_log_
  00ad4	00 00 00 00	 DD	 $LN20@debug_log_
  00ad8	00 00 00 00	 DD	 $LN21@debug_log_
  00adc	00 00 00 00	 DD	 $LN22@debug_log_
  00ae0	00 00 00 00	 DD	 $LN23@debug_log_
  00ae4	00 00 00 00	 DD	 $LN24@debug_log_
  00ae8	00 00 00 00	 DD	 $LN25@debug_log_
  00aec	00 00 00 00	 DD	 $LN26@debug_log_
  00af0	00 00 00 00	 DD	 $LN27@debug_log_
  00af4	00 00 00 00	 DD	 $LN28@debug_log_
  00af8	00 00 00 00	 DD	 $LN29@debug_log_
  00afc	00 00 00 00	 DD	 $LN30@debug_log_
  00b00	00 00 00 00	 DD	 $LN31@debug_log_
  00b04	00 00 00 00	 DD	 $LN32@debug_log_
  00b08	00 00 00 00	 DD	 $LN34@debug_log_
  00b0c	00 00 00 00	 DD	 $LN35@debug_log_
?debug_log_entity_args@@YAXW4ENTITY_DEBUG_MODES@@W4ENTITY_DEBUG_ARGS@@PAUENTITY@@ZZ ENDP ; debug_log_entity_args
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbarg.c
;	COMDAT ?disable_debug_log_entity_args@@YGXXZ
_TEXT	SEGMENT
?disable_debug_log_entity_args@@YGXXZ PROC		; disable_debug_log_entity_args, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 117  : 	debug_log_entity_args_enabled = FALSE;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?debug_log_entity_args_enabled@@3HA, 0

; 118  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?disable_debug_log_entity_args@@YGXXZ ENDP		; disable_debug_log_entity_args
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_debug\en_dbarg.c
;	COMDAT ?enable_debug_log_entity_args@@YGXXZ
_TEXT	SEGMENT
?enable_debug_log_entity_args@@YGXXZ PROC		; enable_debug_log_entity_args, COMDAT

; 107  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 108  : 	debug_log_entity_args_enabled = TRUE;

  00009	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?debug_log_entity_args_enabled@@3HA, 1

; 109  : }

  00013	5f		 pop	 edi
  00014	5e		 pop	 esi
  00015	5b		 pop	 ebx
  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?enable_debug_log_entity_args@@YGXXZ ENDP		; enable_debug_log_entity_args
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1477 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

  00009	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	6a 00		 push	 0
  0000f	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00012	51		 push	 ecx
  00013	6a ff		 push	 -1
  00015	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00018	52		 push	 edx
  00019	e8 00 00 00 00	 call	 __vsnprintf_l
  0001e	83 c4 14	 add	 esp, 20			; 00000014H

; 1481 :         #pragma warning(pop)
; 1482 :     }

  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
