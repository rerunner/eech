; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3dwface1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?asm_convert_float_to_int@@YGXMPAH@Z		; asm_convert_float_to_int
PUBLIC	?wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_textured_polygon
PUBLIC	?wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_gouraud_textured_polygon
PUBLIC	?wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_polygon
PUBLIC	?wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_gouraud_polygon
PUBLIC	?wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_white_polygon
PUBLIC	?wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_white_textured_polygon
PUBLIC	?wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_gouraud_white_polygon
PUBLIC	?wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_textured_lightmap_polygon
PUBLIC	?wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_clipped_3d_object_gouraud_textured_lightmap_polygon
PUBLIC	?wrender_clipped_3d_object_textured_line@@YGXXZ	; wrender_clipped_3d_object_textured_line
PUBLIC	?wrender_clipped_3d_object_plain_line@@YGXXZ	; wrender_clipped_3d_object_plain_line
PUBLIC	?wrender_clipped_3d_object_plain_white_line@@YGXXZ ; wrender_clipped_3d_object_plain_white_line
PUBLIC	?wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_3d_shadow_surface_plain_polygon
PUBLIC	?wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_3d_shadow_surface_alpha_textured_polygon
PUBLIC	?wrender_3d_object_luminous_surface@@YGXH@Z	; wrender_3d_object_luminous_surface
PUBLIC	?wrender_3d_object_surface@@YGXH@Z		; wrender_3d_object_surface
PUBLIC	?wrender_3d_object_gouraud_surface@@YGXH@Z	; wrender_3d_object_gouraud_surface
PUBLIC	?wrender_3d_object_gouraud_textured_surface@@YGXH@Z ; wrender_3d_object_gouraud_textured_surface
PUBLIC	?wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z ; wrender_3d_object_gouraud_textured_nospecular_surface
PUBLIC	?wrender_3d_object_textured_surface@@YGXH@Z	; wrender_3d_object_textured_surface
PUBLIC	?wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_textured_polygon
PUBLIC	?wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_gouraud_textured_polygon
PUBLIC	?wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_polygon
PUBLIC	?wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_gouraud_polygon
PUBLIC	?wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_reflective_polygon
PUBLIC	?wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ; wrender_translucent_clipped_3d_object_reflective_gouraud_polygon
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_textured_polygon'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@ ; `string'
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_white_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_white_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_gouraud_white_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_textured_lightmap_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_clipped_3d_object_gouraud_textured_lightmap_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_textured_line@@YGXXZ@4JA ; `wrender_clipped_3d_object_textured_line'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@ ; `string'
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_plain_line@@YGXXZ@4JA ; `wrender_clipped_3d_object_plain_line'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_clipped_3d_object_plain_white_line@@YGXXZ@4JA ; `wrender_clipped_3d_object_plain_white_line'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_3d_shadow_surface_plain_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_3d_shadow_surface_alpha_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_object_luminous_surface@@YGXH@Z@4JA ; `wrender_3d_object_luminous_surface'::`1'::__LINE__Var
PUBLIC	??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@ ; `string'
PUBLIC	?__LINE__Var@?0??wrender_3d_object_surface@@YGXH@Z@4JA ; `wrender_3d_object_surface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_object_gouraud_surface@@YGXH@Z@4JA ; `wrender_3d_object_gouraud_surface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_object_gouraud_textured_surface@@YGXH@Z@4JA ; `wrender_3d_object_gouraud_textured_surface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z@4JA ; `wrender_3d_object_gouraud_textured_nospecular_surface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_3d_object_textured_surface@@YGXH@Z@4JA ; `wrender_3d_object_textured_surface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_reflective_polygon'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA ; `wrender_translucent_clipped_3d_object_reflective_gouraud_polygon'::`1'::__LINE__Var
PUBLIC	__real@3f800000
PUBLIC	__real@406fe00000000000
PUBLIC	__real@437f0000
PUBLIC	__real@4b40005a
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC	; clip_3d_polygon
EXTRN	?clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@H@Z:PROC ; clip_3d_dual_texture_polygon
EXTRN	?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z:PROC ; draw_fan_primitive
EXTRN	?set_d3d_plain_renderstate@@YGXXZ:PROC		; set_d3d_plain_renderstate
EXTRN	?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z:PROC ; set_d3d_flat_shaded_textured_renderstate
EXTRN	?commit_deferred_state_changes@@YGXXZ:PROC	; commit_deferred_state_changes
EXTRN	?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z:PROC ; get_d3d_vertices_points_address
EXTRN	?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z:PROC ; draw_wbuffered_plain_line
EXTRN	?draw_wbuffered_flat_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@UREAL_COLOUR@@@Z:PROC ; draw_wbuffered_flat_shaded_textured_line
EXTRN	?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z:PROC ; draw_wbuffered_gouraud_shaded_line
EXTRN	?draw_wbuffered_gouraud_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@@Z:PROC ; draw_wbuffered_gouraud_shaded_textured_line
EXTRN	?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_plain_polygon
EXTRN	?draw_wbuffered_gouraud_shaded_polygon@@YGXPAUVERTEX@@MMMH@Z:PROC ; draw_wbuffered_gouraud_shaded_polygon
EXTRN	?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z:PROC ; draw_wbuffered_flat_shaded_textured_polygon
EXTRN	?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z:PROC ; draw_wbuffered_gouraud_shaded_textured_polygon
EXTRN	?draw_wbuffered_shadow_polygon@@YGXPAUVERTEX@@MMM@Z:PROC ; draw_wbuffered_shadow_polygon
EXTRN	?draw_wbuffered_shadow_textured_polygon@@YGXPAUVERTEX@@PAUSCREEN@@@Z:PROC ; draw_wbuffered_shadow_textured_polygon
EXTRN	?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z:PROC ; buffer_wbuffered_plain_polygon
EXTRN	?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z:PROC ; buffer_wbuffered_gouraud_shaded_polygon
EXTRN	?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z:PROC ; buffer_wbuffered_flat_shaded_textured_polygon
EXTRN	?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z:PROC ; buffer_wbuffered_gouraud_shaded_textured_polygon
EXTRN	?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z:PROC ; buffer_wbuffered_flat_shaded_textured_line
EXTRN	?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ:PROC ; get_temporary_translucent_polygon_vertices
EXTRN	?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z:PROC ; add_temporary_buffered_processed_polygon
EXTRN	?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_polygon
EXTRN	?hither_clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@PAH@Z:PROC ; hither_clip_3d_dual_texture_polygon
EXTRN	?construct_3d_surface_shadow_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_shadow_triangle_fan
EXTRN	?construct_3d_surface_shadow_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_shadow_textured_triangle_fan
EXTRN	?outcode_3d_surface_polygon@@YGHHHPAH@Z:PROC	; outcode_3d_surface_polygon
EXTRN	?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_texture
EXTRN	?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_texture
EXTRN	?apply_perspective_to_polygon_dual_texture@@YGXPAUVERTEX@@@Z:PROC ; apply_perspective_to_polygon_dual_texture
EXTRN	?remove_perspective_from_polygon_dual_texture@@YGXPAUVERTEX@@@Z:PROC ; remove_perspective_from_polygon_dual_texture
EXTRN	?construct_3d_surface_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_triangle_fan
EXTRN	?construct_3d_surface_gouraud_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z:PROC ; construct_3d_surface_gouraud_triangle_fan
EXTRN	?construct_3d_surface_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_textured_triangle_fan
EXTRN	?construct_3d_surface_gouraud_textured_triangle_fan@@YGPAUVERTEX@@HMHHPAH@Z:PROC ; construct_3d_surface_gouraud_textured_triangle_fan
EXTRN	?construct_3d_surface_dual_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_dual_textured_triangle_fan
EXTRN	?construct_3d_surface_gouraud_dual_textured_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z:PROC ; construct_3d_surface_gouraud_dual_textured_triangle_fan
EXTRN	?construct_3d_surface_line@@YGPAUVERTEX@@HPAH@Z:PROC ; construct_3d_surface_line
EXTRN	?construct_3d_surface_textured_line@@YGPAUVERTEX@@HPAH@Z:PROC ; construct_3d_surface_textured_line
EXTRN	?construct_3d_surface_reflective_triangle_fan@@YGPAUVERTEX@@HHPAHPAUVEC3D@@@Z:PROC ; construct_3d_surface_reflective_triangle_fan
EXTRN	?construct_3d_surface_gouraud_reflective_triangle_fan@@YGPAUVERTEX@@HHPAH@Z:PROC ; construct_3d_surface_gouraud_reflective_triangle_fan
EXTRN	?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z:PROC ; calculate_luminous_colour
EXTRN	?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z:PROC ; calculate_lightmap_luminous_colour
EXTRN	?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z:PROC ; calculate_line_colour
EXTRN	?generate_object_3d_point_normal@@YGXPAUOBJECT_3D_HEADING_PITCH_NORMAL@@PAUVEC3D@@@Z:PROC ; generate_object_3d_point_normal
EXTRN	?clip_3d_coord@@3HA:DWORD			; clip_3d_coord
EXTRN	?d3d_fog_intensity@@3KA:DWORD			; d3d_fog_intensity
EXTRN	?polygon_shadow_colour@@3KA:DWORD		; polygon_shadow_colour
EXTRN	?system_textures@@3PAPAUSCREEN@@A:BYTE		; system_textures
EXTRN	?zbuffer_factor@@3NA:QWORD			; zbuffer_factor
EXTRN	?zbuffer_constant@@3NA:QWORD			; zbuffer_constant
EXTRN	?objects_3d_data@@3PAUOBJECT_3D@@A:DWORD	; objects_3d_data
EXTRN	?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A:DWORD ; texture_animations
EXTRN	?current_object_3d_luminosity_texture@@3PAUSCREEN@@A:DWORD ; current_object_3d_luminosity_texture
EXTRN	?current_object_3d_luminosity_texture_u_address@@3HA:DWORD ; current_object_3d_luminosity_texture_u_address
EXTRN	?current_object_3d_luminosity_texture_v_address@@3HA:DWORD ; current_object_3d_luminosity_texture_v_address
EXTRN	?current_object_3d_luminosity_texture_filter@@3HA:DWORD ; current_object_3d_luminosity_texture_filter
EXTRN	?current_object_3d_luminosity_texture_mipmap@@3HA:DWORD ; current_object_3d_luminosity_texture_mipmap
EXTRN	?current_object_3d_light_maps_enabled@@3HA:DWORD ; current_object_3d_light_maps_enabled
EXTRN	?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A:DWORD ; current_object_3d_surface
EXTRN	?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A:DWORD ; current_object_3d_point_list
EXTRN	?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_face_normal_list
EXTRN	?current_object_3d_texture@@3PAUSCREEN@@A:DWORD	; current_object_3d_texture
EXTRN	?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A:DWORD ; current_object_3d_transformed_normals
EXTRN	?current_object_3d_texture_u_address@@3HA:DWORD	; current_object_3d_texture_u_address
EXTRN	?current_object_3d_texture_v_address@@3HA:DWORD	; current_object_3d_texture_v_address
EXTRN	?current_object_3d_texture_filter@@3HA:DWORD	; current_object_3d_texture_filter
EXTRN	?current_object_3d_texture_mipmap@@3HA:DWORD	; current_object_3d_texture_mipmap
EXTRN	?current_object_3d_specular@@3HA:DWORD		; current_object_3d_specular
EXTRN	?current_object_3d_dissolve_factor@@3MA:DWORD	; current_object_3d_dissolve_factor
EXTRN	?current_object_3d_dissolve_value@@3EA:BYTE	; current_object_3d_dissolve_value
EXTRN	?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A:DWORD ; current_object_3d_surface_point_texture_list
EXTRN	?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_list
EXTRN	?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A:DWORD ; current_object_3d_surface_point_normal_list
EXTRN	?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A:DWORD ; current_object_3d_surface_vertices
EXTRN	?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A:DWORD ; current_object_3d_object_base
EXTRN	?transformed_3d_points@@3PAUVERTEX@@A:BYTE	; transformed_3d_points
EXTRN	?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A:BYTE ; transformed_3d_2d_points
EXTRN	__fltused:DWORD
;	COMDAT __real@4b40005a
CONST	SEGMENT
__real@4b40005a DD 04b40005ar			; 1.2583e+07
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0a6cH ; `wrender_translucent_clipped_3d_object_reflective_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0a15H ; `wrender_translucent_clipped_3d_object_reflective_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 09bcH ; `wrender_translucent_clipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0942H ; `wrender_translucent_clipped_3d_object_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 08f2H ; `wrender_translucent_clipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0875H ; `wrender_translucent_clipped_3d_object_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_textured_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_textured_surface@@YGXH@Z@4JA DD 0843H ; `wrender_3d_object_textured_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z@4JA DD 080fH ; `wrender_3d_object_gouraud_textured_nospecular_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_gouraud_textured_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_gouraud_textured_surface@@YGXH@Z@4JA DD 07ceH ; `wrender_3d_object_gouraud_textured_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_gouraud_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_gouraud_surface@@YGXH@Z@4JA DD 0772H ; `wrender_3d_object_gouraud_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_surface@@YGXH@Z@4JA DD 074fH ; `wrender_3d_object_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
CONST	SEGMENT
??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@ DB '!current_obj'
	DB	'ect_3d_surface->translucent', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_object_luminous_surface@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_object_luminous_surface@@YGXH@Z@4JA DD 0725H ; `wrender_3d_object_luminous_surface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0694H ; `wrender_3d_shadow_surface_alpha_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0617H ; `wrender_3d_shadow_surface_plain_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_plain_white_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_plain_white_line@@YGXXZ@4JA DD 05d3H ; `wrender_clipped_3d_object_plain_white_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_plain_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_plain_line@@YGXXZ@4JA DD 058dH ; `wrender_clipped_3d_object_plain_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
CONST	SEGMENT
??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@ DB '!current_o'
	DB	'bject_3d_surface->polygons', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_textured_line@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_textured_line@@YGXXZ@4JA DD 052bH ; `wrender_clipped_3d_object_textured_line'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 046dH ; `wrender_clipped_3d_object_gouraud_textured_lightmap_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 03a1H ; `wrender_clipped_3d_object_textured_lightmap_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 034bH ; `wrender_clipped_3d_object_gouraud_white_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 02ecH ; `wrender_clipped_3d_object_white_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0284H ; `wrender_clipped_3d_object_white_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0219H ; `wrender_clipped_3d_object_gouraud_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 013cH ; `wrender_clipped_3d_object_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 0d5H ; `wrender_clipped_3d_object_gouraud_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
CONST	SEGMENT
??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@ DB 'current_objec'
	DB	't_3d_surface->polygons', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3dwface1.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA DD 04aH ; `wrender_clipped_3d_object_textured_polygon'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_poly$ = -12						; size = 4
_outcode$ = -8						; size = 4
_triangle_count$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_reflective_gouraud_polygon, COMDAT

; 2668 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2669 : 
; 2670 : 	int
; 2671 : 		triangle_count,
; 2672 : 		outcode;
; 2673 : 
; 2674 : 	vertex
; 2675 : 		*poly;
; 2676 : 
; 2677 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 09	 add	 eax, 9
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2678 : 
; 2679 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00034	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  0003b	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 fc	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  00046	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00049	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0004c	83 e9 02	 sub	 ecx, 2
  0004f	39 4d fc	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00052	0f 8d 91 00 00
	00		 jge	 $LN1@wrender_tr

; 2680 : 	{
; 2681 : 
; 2682 : 		poly = construct_3d_surface_gouraud_reflective_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  00058	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0005b	50		 push	 eax
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00062	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00065	52		 push	 edx
  00066	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00069	50		 push	 eax
  0006a	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_reflective_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_gouraud_reflective_triangle_fan
  0006f	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 2683 : 
; 2684 : 		if ( poly )

  00072	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00076	74 6c		 je	 SHORT $LN6@wrender_tr

; 2685 : 		{
; 2686 : 
; 2687 : 			if ( outcode )

  00078	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0007c	74 5d		 je	 SHORT $LN7@wrender_tr

; 2688 : 			{
; 2689 : 		
; 2690 : 				clip_3d_coord = 0;

  0007e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2691 : 
; 2692 : 				if ( outcode & CLIP_HITHER )

  00088	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0008b	83 e0 20	 and	 eax, 32			; 00000020H
  0008e	74 18		 je	 SHORT $LN8@wrender_tr

; 2693 : 				{
; 2694 : 			
; 2695 : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  00090	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00093	50		 push	 eax
  00094	8b 4d f4	 mov	 ecx, DWORD PTR _poly$[ebp]
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0009d	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 2696 : 		
; 2697 : 					if ( !poly )

  000a0	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000a4	75 02		 jne	 SHORT $LN8@wrender_tr

; 2698 : 					{
; 2699 : 		
; 2700 : 						continue;

  000a6	eb 95		 jmp	 SHORT $LN2@wrender_tr
$LN8@wrender_tr:

; 2701 : 					}
; 2702 : 				}
; 2703 : 			
; 2704 : 				if ( outcode )

  000a8	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000ac	74 2d		 je	 SHORT $LN7@wrender_tr

; 2705 : 				{
; 2706 : 		
; 2707 : 					apply_perspective_to_polygon_texture ( poly );

  000ae	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  000b1	50		 push	 eax
  000b2	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 2708 : 						
; 2709 : 					poly = clip_3d_polygon ( poly, outcode );

  000b7	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  000ba	50		 push	 eax
  000bb	8b 4d f4	 mov	 ecx, DWORD PTR _poly$[ebp]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  000c4	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 2710 : 		
; 2711 : 					if ( !poly )

  000c7	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000cb	75 05		 jne	 SHORT $LN11@wrender_tr

; 2712 : 					{
; 2713 : 		
; 2714 : 						continue;

  000cd	e9 6b ff ff ff	 jmp	 $LN2@wrender_tr
$LN11@wrender_tr:

; 2715 : 					}
; 2716 : 		
; 2717 : 					remove_perspective_from_polygon_texture ( poly );

  000d2	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  000d5	50		 push	 eax
  000d6	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN7@wrender_tr:

; 2718 : 				}
; 2719 : 			}
; 2720 : 		
; 2721 : 			draw_wbuffered_gouraud_shaded_textured_polygon ( poly );

  000db	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z ; draw_wbuffered_gouraud_shaded_textured_polygon
$LN6@wrender_tr:

; 2722 : 		}
; 2723 : 	}

  000e4	e9 54 ff ff ff	 jmp	 $LN2@wrender_tr
$LN1@wrender_tr:

; 2724 : }

  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_reflective_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_reflective_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_point_normal$ = -36					; size = 4
_specular$ = -32					; size = 4
_diffuse$ = -28						; size = 4
_poly$ = -24						; size = 4
_normal$ = -20						; size = 12
_outcode$ = -8						; size = 4
_triangle_count$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_reflective_polygon, COMDAT

; 2581 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2582 : 
; 2583 : 	int
; 2584 : 		triangle_count,
; 2585 : 		outcode;
; 2586 : 
; 2587 : 	vec3d
; 2588 : 		normal;
; 2589 : 
; 2590 : 	vertex
; 2591 : 		*poly;
; 2592 : 
; 2593 : 	rgb_colour
; 2594 : 		diffuse,
; 2595 : 		specular;
; 2596 : 
; 2597 : 	object_3d_heading_pitch_normal
; 2598 : 		*point_normal;
; 2599 : 
; 2600 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 13	 add	 eax, 19			; 00000013H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2601 : 
; 2602 : 	point_normal = &objects_3d_data[current_object_3d_object_base->object_number].point_normals[current_object_3d_face_normal_list->point];

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00039	6b 48 20 68	 imul	 ecx, DWORD PTR [eax+32], 104
  0003d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00043	0f b7 02	 movzx	 eax, WORD PTR [edx]
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?objects_3d_data@@3PAUOBJECT_3D@@A ; objects_3d_data
  0004c	8b 4c 0a 48	 mov	 ecx, DWORD PTR [edx+ecx+72]
  00050	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  00053	89 55 dc	 mov	 DWORD PTR _point_normal$[ebp], edx

; 2603 : 	generate_object_3d_point_normal ( point_normal, &normal );

  00056	8d 45 ec	 lea	 eax, DWORD PTR _normal$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d dc	 mov	 ecx, DWORD PTR _point_normal$[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 ?generate_object_3d_point_normal@@YGXPAUOBJECT_3D_HEADING_PITCH_NORMAL@@PAUVEC3D@@@Z ; generate_object_3d_point_normal

; 2604 : //	normal.x = point_normal->x / 32767.0;
; 2605 : //	normal.y = point_normal->y / 32767.0;
; 2606 : //	normal.z = point_normal->z / 32767.0;
; 2607 : 
; 2608 : 	diffuse.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00068	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0006b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00071	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  00074	89 45 e4	 mov	 DWORD PTR _diffuse$[ebp], eax

; 2609 : 	diffuse.alpha = current_object_3d_surface->reflectivity;

  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0007c	8a 48 0a	 mov	 cl, BYTE PTR [eax+10]
  0007f	88 4d e7	 mov	 BYTE PTR _diffuse$[ebp+3], cl

; 2610 : 
; 2611 : 	specular.r = 0;

  00082	c6 45 e2 00	 mov	 BYTE PTR _specular$[ebp+2], 0

; 2612 : 	specular.g = 0;

  00086	c6 45 e1 00	 mov	 BYTE PTR _specular$[ebp+1], 0

; 2613 : 	specular.b = 0;

  0008a	c6 45 e0 00	 mov	 BYTE PTR _specular$[ebp], 0

; 2614 : 	specular.f = 255;

  0008e	c6 45 e3 ff	 mov	 BYTE PTR _specular$[ebp+3], 255 ; 000000ffH

; 2615 : 
; 2616 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00092	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00099	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0009b	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0009e	83 c0 01	 add	 eax, 1
  000a1	89 45 fc	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  000a4	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000a7	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000aa	83 e9 02	 sub	 ecx, 2
  000ad	39 4d fc	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  000b0	0f 8d 9d 00 00
	00		 jge	 $LN1@wrender_tr

; 2617 : 	{
; 2618 : 
; 2619 : 		poly = construct_3d_surface_reflective_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode, &normal );

  000b6	8d 45 ec	 lea	 eax, DWORD PTR _normal$[ebp]
  000b9	50		 push	 eax
  000ba	8d 4d f8	 lea	 ecx, DWORD PTR _outcode$[ebp]
  000bd	51		 push	 ecx
  000be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000c4	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  000c7	50		 push	 eax
  000c8	8b 4d fc	 mov	 ecx, DWORD PTR _triangle_count$[ebp]
  000cb	51		 push	 ecx
  000cc	e8 00 00 00 00	 call	 ?construct_3d_surface_reflective_triangle_fan@@YGPAUVERTEX@@HHPAHPAUVEC3D@@@Z ; construct_3d_surface_reflective_triangle_fan
  000d1	89 45 e8	 mov	 DWORD PTR _poly$[ebp], eax

; 2620 : 
; 2621 : 		if ( poly )

  000d4	83 7d e8 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000d8	74 74		 je	 SHORT $LN6@wrender_tr

; 2622 : 		{
; 2623 : 
; 2624 : 			if ( outcode )

  000da	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000de	74 5d		 je	 SHORT $LN7@wrender_tr

; 2625 : 			{
; 2626 : 		
; 2627 : 				clip_3d_coord = 0;

  000e0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2628 : 
; 2629 : 				if ( outcode & CLIP_HITHER )

  000ea	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  000ed	83 e0 20	 and	 eax, 32			; 00000020H
  000f0	74 18		 je	 SHORT $LN8@wrender_tr

; 2630 : 				{
; 2631 : 			
; 2632 : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  000f2	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000f5	50		 push	 eax
  000f6	8b 4d e8	 mov	 ecx, DWORD PTR _poly$[ebp]
  000f9	51		 push	 ecx
  000fa	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  000ff	89 45 e8	 mov	 DWORD PTR _poly$[ebp], eax

; 2633 : 		
; 2634 : 					if ( !poly )

  00102	83 7d e8 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00106	75 02		 jne	 SHORT $LN8@wrender_tr

; 2635 : 					{
; 2636 : 		
; 2637 : 						continue;

  00108	eb 91		 jmp	 SHORT $LN2@wrender_tr
$LN8@wrender_tr:

; 2638 : 					}
; 2639 : 				}
; 2640 : 			
; 2641 : 				if ( outcode )

  0010a	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0010e	74 2d		 je	 SHORT $LN7@wrender_tr

; 2642 : 				{
; 2643 : 		
; 2644 : 					apply_perspective_to_polygon_texture ( poly );

  00110	8b 45 e8	 mov	 eax, DWORD PTR _poly$[ebp]
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 2645 : 						
; 2646 : 					poly = clip_3d_polygon ( poly, outcode );

  00119	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0011c	50		 push	 eax
  0011d	8b 4d e8	 mov	 ecx, DWORD PTR _poly$[ebp]
  00120	51		 push	 ecx
  00121	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00126	89 45 e8	 mov	 DWORD PTR _poly$[ebp], eax

; 2647 : 		
; 2648 : 					if ( !poly )

  00129	83 7d e8 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0012d	75 05		 jne	 SHORT $LN11@wrender_tr

; 2649 : 					{
; 2650 : 		
; 2651 : 						continue;

  0012f	e9 67 ff ff ff	 jmp	 $LN2@wrender_tr
$LN11@wrender_tr:

; 2652 : 					}
; 2653 : 		
; 2654 : 					remove_perspective_from_polygon_texture ( poly );

  00134	8b 45 e8	 mov	 eax, DWORD PTR _poly$[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN7@wrender_tr:

; 2655 : 				}
; 2656 : 			}
; 2657 : 		
; 2658 : 			draw_wbuffered_flat_shaded_textured_polygon ( poly, diffuse, specular );

  0013d	8b 45 e0	 mov	 eax, DWORD PTR _specular$[ebp]
  00140	50		 push	 eax
  00141	8b 4d e4	 mov	 ecx, DWORD PTR _diffuse$[ebp]
  00144	51		 push	 ecx
  00145	8b 55 e8	 mov	 edx, DWORD PTR _poly$[ebp]
  00148	52		 push	 edx
  00149	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN6@wrender_tr:

; 2659 : 		}
; 2660 : 	}

  0014e	e9 48 ff ff ff	 jmp	 $LN2@wrender_tr
$LN1@wrender_tr:

; 2661 : }

  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_reflective_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_reflective_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_surface_specular$ = -32				; size = 4
_surface_blue$ = -28					; size = 4
_surface_green$ = -24					; size = 4
_surface_red$ = -20					; size = 4
_polygon_alpha$ = -16					; size = 4
_outcode$ = -12						; size = 4
_triangle_count$ = -8					; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_gouraud_polygon, COMDAT

; 2492 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2493 : 
; 2494 : 	vertex
; 2495 : 		*poly;
; 2496 : 
; 2497 : 	int
; 2498 : 		triangle_count,
; 2499 : 		outcode,
; 2500 : 		polygon_alpha;
; 2501 : 
; 2502 : 	float
; 2503 : 		surface_red,
; 2504 : 		surface_green,
; 2505 : 		surface_blue,
; 2506 : 		surface_specular;
; 2507 : 
; 2508 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 10	 add	 eax, 16			; 00000010H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2509 : 
; 2510 : 	surface_red = ( ( float ) current_object_3d_surface->red ) / 255.0;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  0003d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00041	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00045	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0004d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00051	f3 0f 11 45 ec	 movss	 DWORD PTR _surface_red$[ebp], xmm0

; 2511 : 	surface_green = ( ( float ) current_object_3d_surface->green ) / 255.0;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0005b	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  0005f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00063	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00067	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0006f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00073	f3 0f 11 45 e8	 movss	 DWORD PTR _surface_green$[ebp], xmm0

; 2512 : 	surface_blue = ( ( float ) current_object_3d_surface->blue ) / 255.0;

  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0007d	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00081	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00085	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00089	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00091	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00095	f3 0f 11 45 e4	 movss	 DWORD PTR _surface_blue$[ebp], xmm0

; 2513 : 
; 2514 : 	if ( current_object_3d_specular )

  0009a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000a1	74 14		 je	 SHORT $LN6@wrender_tr

; 2515 : 	{
; 2516 : 
; 2517 : 		surface_specular = ( float ) current_object_3d_surface->specularity;

  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000a8	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000ac	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000b0	f3 0f 11 45 e0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0

; 2518 : 	}
; 2519 : 	else

  000b5	eb 08		 jmp	 SHORT $LN7@wrender_tr
$LN6@wrender_tr:

; 2520 : 	{
; 2521 : 
; 2522 : 		surface_specular = 0;

  000b7	0f 57 c0	 xorps	 xmm0, xmm0
  000ba	f3 0f 11 45 e0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0
$LN7@wrender_tr:

; 2523 : 	}
; 2524 : 
; 2525 : 	polygon_alpha = 255;

  000bf	c7 45 f0 ff 00
	00 00		 mov	 DWORD PTR _polygon_alpha$[ebp], 255 ; 000000ffH

; 2526 : 
; 2527 : 	if ( current_object_3d_surface->translucent )

  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000cb	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ce	66 c1 e9 06	 shr	 cx, 6
  000d2	66 83 e1 01	 and	 cx, 1
  000d6	0f b7 d1	 movzx	 edx, cx
  000d9	85 d2		 test	 edx, edx
  000db	74 25		 je	 SHORT $LN8@wrender_tr

; 2528 : 	{
; 2529 : 
; 2530 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  000dd	8d 45 f0	 lea	 eax, DWORD PTR _polygon_alpha$[ebp]
  000e0	50		 push	 eax
  000e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e7	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000eb	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000ef	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000f7	51		 push	 ecx
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int
$LN8@wrender_tr:

; 2531 : 	}
; 2532 : 
; 2533 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00102	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00109	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  0010b	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0010e	83 c0 01	 add	 eax, 1
  00111	89 45 f8	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  00114	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00117	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0011a	83 e9 02	 sub	 ecx, 2
  0011d	39 4d f8	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00120	0f 8d af 00 00
	00		 jge	 $LN3@wrender_tr

; 2534 : 	{
; 2535 : 
; 2536 : 		poly = construct_3d_surface_gouraud_triangle_fan ( triangle_count, surface_specular, current_object_3d_object_base->points_base, &outcode );

  00126	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  00129	50		 push	 eax
  0012a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00130	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00133	52		 push	 edx
  00134	51		 push	 ecx
  00135	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _surface_specular$[ebp]
  0013a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013f	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z ; construct_3d_surface_gouraud_triangle_fan
  00148	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2537 : 
; 2538 : 		if ( poly )

  0014b	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0014f	74 7f		 je	 SHORT $LN9@wrender_tr

; 2539 : 		{
; 2540 : 	
; 2541 : 			if ( outcode )

  00151	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00155	74 4b		 je	 SHORT $LN14@wrender_tr

; 2542 : 			{
; 2543 : 		
; 2544 : 				clip_3d_coord = 0;

  00157	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2545 : 
; 2546 : 				if ( outcode & CLIP_HITHER )

  00161	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  00164	83 e0 20	 and	 eax, 32			; 00000020H
  00167	74 18		 je	 SHORT $LN12@wrender_tr

; 2547 : 				{
; 2548 : 			
; 2549 : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  00169	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  0016c	50		 push	 eax
  0016d	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00170	51		 push	 ecx
  00171	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00176	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2550 : 		
; 2551 : 					if ( !poly )

  00179	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0017d	75 02		 jne	 SHORT $LN12@wrender_tr

; 2552 : 					{
; 2553 : 		
; 2554 : 						continue;

  0017f	eb 8a		 jmp	 SHORT $LN2@wrender_tr
$LN12@wrender_tr:

; 2555 : 					}
; 2556 : 				}
; 2557 : 			
; 2558 : 				if ( outcode )

  00181	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00185	74 1b		 je	 SHORT $LN14@wrender_tr

; 2559 : 				{
; 2560 : 			
; 2561 : 					poly = clip_3d_polygon ( poly, outcode );

  00187	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  0018a	50		 push	 eax
  0018b	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0018e	51		 push	 ecx
  0018f	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00194	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2562 : 		
; 2563 : 					if ( !poly )

  00197	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0019b	75 05		 jne	 SHORT $LN14@wrender_tr

; 2564 : 					{
; 2565 : 		
; 2566 : 						continue;

  0019d	e9 69 ff ff ff	 jmp	 $LN2@wrender_tr
$LN14@wrender_tr:

; 2567 : 					}
; 2568 : 				}
; 2569 : 			}
; 2570 : 		
; 2571 : 			draw_wbuffered_gouraud_shaded_polygon ( poly, surface_red, surface_green, surface_blue, polygon_alpha );

  001a2	8b 45 f0	 mov	 eax, DWORD PTR _polygon_alpha$[ebp]
  001a5	50		 push	 eax
  001a6	51		 push	 ecx
  001a7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _surface_blue$[ebp]
  001ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b1	51		 push	 ecx
  001b2	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _surface_green$[ebp]
  001b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bc	51		 push	 ecx
  001bd	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _surface_red$[ebp]
  001c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c7	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001ca	51		 push	 ecx
  001cb	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_polygon@@YGXPAUVERTEX@@MMMH@Z ; draw_wbuffered_gouraud_shaded_polygon
$LN9@wrender_tr:

; 2572 : 		}
; 2573 : 	}

  001d0	e9 36 ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2574 : }

  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5b		 pop	 ebx
  001d8	8b e5		 mov	 esp, ebp
  001da	5d		 pop	 ebp
  001db	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_imixed_dissolve$1 = -56				; size = 4
_ispecular$2 = -52					; size = 4
_ib$3 = -48						; size = 4
_ig$4 = -44						; size = 4
_ir$5 = -40						; size = 4
_specular$6 = -36					; size = 4
_blue$7 = -32						; size = 4
_green$8 = -28						; size = 4
_red$9 = -24						; size = 4
_specular_colour$ = -20					; size = 4
_colour$ = -16						; size = 4
_triangle_count$ = -12					; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_polygon, COMDAT

; 2370 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2371 : 
; 2372 : 	vertex
; 2373 : 		*poly;
; 2374 : 
; 2375 : 	int
; 2376 : 		outcode,
; 2377 : 		triangle_count;
; 2378 : 
; 2379 : 	real_colour
; 2380 : 		colour,
; 2381 : 		specular_colour;
; 2382 : 
; 2383 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2384 : 
; 2385 : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 16		 je	 SHORT $LN6@wrender_tr

; 2386 : 	{
; 2387 : 
; 2388 : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f0	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 2389 : 
; 2390 : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2391 : 	}
; 2392 : 	else

  0005c	e9 62 01 00 00	 jmp	 $LN7@wrender_tr
$LN6@wrender_tr:

; 2393 : 	{
; 2394 : 
; 2395 : 		float
; 2396 : 			red,
; 2397 : 			green,
; 2398 : 			blue,
; 2399 : 			specular;
; 2400 : 
; 2401 : 		int
; 2402 : 			ir,
; 2403 : 			ig,
; 2404 : 			ib,
; 2405 : 			ispecular;
; 2406 : 
; 2407 : 		//
; 2408 : 		// Look up the colour of the face normal
; 2409 : 		//
; 2410 : 	
; 2411 : 		red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00066	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006f	0f b6 44 ca 02	 movzx	 eax, BYTE PTR [edx+ecx*8+2]
  00074	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00078	f3 0f 11 45 e8	 movss	 DWORD PTR _red$9[ebp], xmm0

; 2412 : 		green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00082	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008b	0f b6 44 ca 01	 movzx	 eax, BYTE PTR [edx+ecx*8+1]
  00090	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00094	f3 0f 11 45 e4	 movss	 DWORD PTR _green$8[ebp], xmm0

; 2413 : 		blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0009e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000a7	0f b6 04 ca	 movzx	 eax, BYTE PTR [edx+ecx*8]
  000ab	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000af	f3 0f 11 45 e0	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 2414 : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000b9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000c2	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000c8	f3 0f 11 45 dc	 movss	 DWORD PTR _specular$6[ebp], xmm0

; 2415 : 	
; 2416 : 		red /= 255.0;

  000cd	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _red$9[ebp]
  000d2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000da	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000de	f3 0f 11 45 e8	 movss	 DWORD PTR _red$9[ebp], xmm0

; 2417 : 		green /= 255.0;

  000e3	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _green$8[ebp]
  000e8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f4	f3 0f 11 45 e4	 movss	 DWORD PTR _green$8[ebp], xmm0

; 2418 : 		blue /= 255.0;

  000f9	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _blue$7[ebp]
  000fe	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	f3 0f 11 45 e0	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 2419 : 	
; 2420 : 		asm_convert_float_to_int ( ( red * current_object_3d_surface->red ), &ir );

  0010f	8d 45 d8	 lea	 eax, DWORD PTR _ir$5[ebp]
  00112	50		 push	 eax
  00113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00119	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  0011d	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00121	f3 0f 59 45 e8	 mulss	 xmm0, DWORD PTR _red$9[ebp]
  00126	51		 push	 ecx
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2421 : 		asm_convert_float_to_int ( ( green * current_object_3d_surface->green ), &ig );

  00131	8d 45 d4	 lea	 eax, DWORD PTR _ig$4[ebp]
  00134	50		 push	 eax
  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0013b	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  0013f	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00143	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _green$8[ebp]
  00148	51		 push	 ecx
  00149	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014e	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2422 : 		asm_convert_float_to_int ( ( blue * current_object_3d_surface->blue ), &ib );

  00153	8d 45 d0	 lea	 eax, DWORD PTR _ib$3[ebp]
  00156	50		 push	 eax
  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0015d	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00161	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00165	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _blue$7[ebp]
  0016a	51		 push	 ecx
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2423 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  00175	8d 45 cc	 lea	 eax, DWORD PTR _ispecular$2[ebp]
  00178	50		 push	 eax
  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0017f	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00183	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00187	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _specular$6[ebp]
  0018c	51		 push	 ecx
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2424 : 	
; 2425 : 		colour.red = ir;

  00197	8a 45 d8	 mov	 al, BYTE PTR _ir$5[ebp]
  0019a	88 45 f2	 mov	 BYTE PTR _colour$[ebp+2], al

; 2426 : 		colour.green = ig;

  0019d	8a 45 d4	 mov	 al, BYTE PTR _ig$4[ebp]
  001a0	88 45 f1	 mov	 BYTE PTR _colour$[ebp+1], al

; 2427 : 		colour.blue = ib;

  001a3	8a 45 d0	 mov	 al, BYTE PTR _ib$3[ebp]
  001a6	88 45 f0	 mov	 BYTE PTR _colour$[ebp], al

; 2428 : 
; 2429 : 		specular_colour.colour = d3d_fog_intensity;

  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001ae	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2430 : 		specular_colour.red = ispecular;

  001b1	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001b4	88 45 ee	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2431 : 		specular_colour.green = ispecular;

  001b7	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001ba	88 45 ed	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2432 : 		specular_colour.blue = ispecular;

  001bd	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001c0	88 45 ec	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN7@wrender_tr:

; 2433 : 	}
; 2434 : 
; 2435 : 	{
; 2436 : 
; 2437 : 		int
; 2438 : 			imixed_dissolve;
; 2439 : 
; 2440 : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  001c3	8d 45 c8	 lea	 eax, DWORD PTR _imixed_dissolve$1[ebp]
  001c6	50		 push	 eax
  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001cd	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  001d1	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001d5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001dd	51		 push	 ecx
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2441 : 		colour.alpha = imixed_dissolve;

  001e8	8a 45 c8	 mov	 al, BYTE PTR _imixed_dissolve$1[ebp]
  001eb	88 45 f3	 mov	 BYTE PTR _colour$[ebp+3], al

; 2442 : 	}
; 2443 : 
; 2444 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  001ee	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  001f5	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  001f7	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  001fa	83 c0 01	 add	 eax, 1
  001fd	89 45 f4	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  00200	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00203	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00206	83 e9 02	 sub	 ecx, 2
  00209	39 4d f4	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  0020c	0f 8d 87 00 00
	00		 jge	 $LN3@wrender_tr

; 2445 : 	{
; 2446 : 
; 2447 : 		poly = construct_3d_surface_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  00212	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00215	50		 push	 eax
  00216	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0021c	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0021f	52		 push	 edx
  00220	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?construct_3d_surface_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_triangle_fan
  00229	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2448 : 
; 2449 : 		if ( poly )

  0022c	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00230	74 62		 je	 SHORT $LN8@wrender_tr

; 2450 : 		{
; 2451 : 
; 2452 : 			if ( outcode )

  00232	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00236	74 4b		 je	 SHORT $LN13@wrender_tr

; 2453 : 			{
; 2454 : 		
; 2455 : 				clip_3d_coord = 0;

  00238	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2456 : 
; 2457 : 				if ( outcode & CLIP_HITHER )

  00242	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00245	83 e0 20	 and	 eax, 32			; 00000020H
  00248	74 18		 je	 SHORT $LN11@wrender_tr

; 2458 : 				{
; 2459 : 			
; 2460 : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  0024a	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0024d	50		 push	 eax
  0024e	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00251	51		 push	 ecx
  00252	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00257	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2461 : 		
; 2462 : 					if ( !poly )

  0025a	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0025e	75 02		 jne	 SHORT $LN11@wrender_tr

; 2463 : 					{
; 2464 : 		
; 2465 : 						continue;

  00260	eb 95		 jmp	 SHORT $LN2@wrender_tr
$LN11@wrender_tr:

; 2466 : 					}
; 2467 : 				}
; 2468 : 			
; 2469 : 				if ( outcode )

  00262	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00266	74 1b		 je	 SHORT $LN13@wrender_tr

; 2470 : 				{
; 2471 : 			
; 2472 : 					poly = clip_3d_polygon ( poly, outcode );

  00268	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0026b	50		 push	 eax
  0026c	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0026f	51		 push	 ecx
  00270	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00275	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2473 : 		
; 2474 : 					if ( !poly )

  00278	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0027c	75 05		 jne	 SHORT $LN13@wrender_tr

; 2475 : 					{
; 2476 : 		
; 2477 : 						continue;

  0027e	e9 74 ff ff ff	 jmp	 $LN2@wrender_tr
$LN13@wrender_tr:

; 2478 : 					}
; 2479 : 				}
; 2480 : 			}
; 2481 : 		
; 2482 : 			draw_wbuffered_plain_polygon ( poly, colour, specular_colour );

  00283	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  00286	50		 push	 eax
  00287	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  0028a	51		 push	 ecx
  0028b	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  0028e	52		 push	 edx
  0028f	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_plain_polygon
$LN8@wrender_tr:

; 2483 : 		}
; 2484 : 	}

  00294	e9 5e ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2485 : }

  00299	5f		 pop	 edi
  0029a	5e		 pop	 esi
  0029b	5b		 pop	 ebx
  0029c	8b e5		 mov	 esp, ebp
  0029e	5d		 pop	 ebp
  0029f	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_poly$ = -20						; size = 4
_specular$ = -16					; size = 4
_alpha$ = -12						; size = 4
_outcode$ = -8						; size = 4
_triangle_count$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_gouraud_textured_polygon, COMDAT

; 2290 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2291 : 
; 2292 : 	int
; 2293 : 		triangle_count,
; 2294 : 		outcode,
; 2295 : 		alpha;
; 2296 : 
; 2297 : 	float
; 2298 : 		specular;
; 2299 : 
; 2300 : 	vertex
; 2301 : 		*poly;
; 2302 : 
; 2303 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2304 : 
; 2305 : 	specular = current_object_3d_surface->specularity;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  0003d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00041	f3 0f 11 45 f0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 2306 : 
; 2307 : 	if ( current_object_3d_surface->translucent )

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0004b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0004e	66 c1 e9 06	 shr	 cx, 6
  00052	66 83 e1 01	 and	 cx, 1
  00056	0f b7 d1	 movzx	 edx, cx
  00059	85 d2		 test	 edx, edx
  0005b	74 27		 je	 SHORT $LN6@wrender_tr

; 2308 : 	{
; 2309 : 
; 2310 : 		asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &alpha );

  0005d	8d 45 f4	 lea	 eax, DWORD PTR _alpha$[ebp]
  00060	50		 push	 eax
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00067	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  0006b	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0006f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00077	51		 push	 ecx
  00078	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007d	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2311 : 	}
; 2312 : 	else

  00082	eb 0a		 jmp	 SHORT $LN7@wrender_tr
$LN6@wrender_tr:

; 2313 : 	{
; 2314 : 
; 2315 : 		alpha = current_object_3d_dissolve_value;

  00084	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  0008b	89 45 f4	 mov	 DWORD PTR _alpha$[ebp], eax
$LN7@wrender_tr:

; 2316 : 	}
; 2317 : 	
; 2318 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0008e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00095	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  00097	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0009a	83 c0 01	 add	 eax, 1
  0009d	89 45 fc	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  000a0	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000a3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a6	83 e9 02	 sub	 ecx, 2
  000a9	39 4d fc	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  000ac	0f 8d a0 00 00
	00		 jge	 $LN3@wrender_tr

; 2319 : 	{
; 2320 : 
; 2321 : 		poly = construct_3d_surface_gouraud_textured_triangle_fan ( triangle_count, specular, alpha, current_object_3d_object_base->points_base, &outcode );

  000b2	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000b5	50		 push	 eax
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000bc	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000bf	52		 push	 edx
  000c0	8b 45 f4	 mov	 eax, DWORD PTR _alpha$[ebp]
  000c3	50		 push	 eax
  000c4	51		 push	 ecx
  000c5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _specular$[ebp]
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _triangle_count$[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_textured_triangle_fan@@YGPAUVERTEX@@HMHHPAH@Z ; construct_3d_surface_gouraud_textured_triangle_fan
  000d8	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 2322 : 
; 2323 : 		if ( poly )

  000db	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000df	74 6c		 je	 SHORT $LN8@wrender_tr

; 2324 : 		{
; 2325 : 
; 2326 : 			if ( outcode )

  000e1	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000e5	74 5d		 je	 SHORT $LN12@wrender_tr

; 2327 : 			{
; 2328 : 		
; 2329 : 				clip_3d_coord = 0;

  000e7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2330 : 
; 2331 : 				if ( outcode & CLIP_HITHER )

  000f1	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  000f4	83 e0 20	 and	 eax, 32			; 00000020H
  000f7	74 18		 je	 SHORT $LN11@wrender_tr

; 2332 : 				{
; 2333 : 			
; 2334 : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  000f9	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000fc	50		 push	 eax
  000fd	8b 4d ec	 mov	 ecx, DWORD PTR _poly$[ebp]
  00100	51		 push	 ecx
  00101	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00106	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 2335 : 		
; 2336 : 					if ( !poly )

  00109	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0010d	75 02		 jne	 SHORT $LN11@wrender_tr

; 2337 : 					{
; 2338 : 		
; 2339 : 						continue;

  0010f	eb 86		 jmp	 SHORT $LN2@wrender_tr
$LN11@wrender_tr:

; 2340 : 					}
; 2341 : 				}
; 2342 : 			
; 2343 : 				if ( outcode )

  00111	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00115	74 2d		 je	 SHORT $LN12@wrender_tr

; 2344 : 				{
; 2345 : 		
; 2346 : 					apply_perspective_to_polygon_texture ( poly );

  00117	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  0011a	50		 push	 eax
  0011b	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 2347 : 						
; 2348 : 					poly = clip_3d_polygon ( poly, outcode );

  00120	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00123	50		 push	 eax
  00124	8b 4d ec	 mov	 ecx, DWORD PTR _poly$[ebp]
  00127	51		 push	 ecx
  00128	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  0012d	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 2349 : 		
; 2350 : 					if ( !poly )

  00130	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00134	75 05		 jne	 SHORT $LN13@wrender_tr

; 2351 : 					{
; 2352 : 		
; 2353 : 						continue;

  00136	e9 5c ff ff ff	 jmp	 $LN2@wrender_tr
$LN13@wrender_tr:

; 2354 : 					}
; 2355 : 		
; 2356 : 					remove_perspective_from_polygon_texture ( poly );

  0013b	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  0013e	50		 push	 eax
  0013f	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN12@wrender_tr:

; 2357 : 				}
; 2358 : 			}
; 2359 : 		
; 2360 : 			draw_wbuffered_gouraud_shaded_textured_polygon ( poly );

  00144	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z ; draw_wbuffered_gouraud_shaded_textured_polygon
$LN8@wrender_tr:

; 2361 : 		}
; 2362 : 	}

  0014d	e9 45 ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2363 : }

  00152	5f		 pop	 edi
  00153	5e		 pop	 esi
  00154	5b		 pop	 ebx
  00155	8b e5		 mov	 esp, ebp
  00157	5d		 pop	 ebp
  00158	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_gouraud_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_ispecular$1 = -32					; size = 4
_specular$2 = -28					; size = 4
_ialpha$3 = -24						; size = 4
_triangle_count$ = -20					; size = 4
_outcode$ = -16						; size = 4
_specular_colour$ = -12					; size = 4
_colour$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_translucent_clipped_3d_object_textured_polygon, COMDAT

; 2165 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2166 : 
; 2167 : 	vertex
; 2168 : 		*poly;
; 2169 : 
; 2170 : 	real_colour
; 2171 : 		colour,
; 2172 : 		specular_colour;
; 2173 : 
; 2174 : 	int
; 2175 : 		outcode,
; 2176 : 		triangle_count;
; 2177 : 
; 2178 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_tr
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_tr:

; 2179 : 
; 2180 : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 16		 je	 SHORT $LN6@wrender_tr

; 2181 : 	{
; 2182 : 
; 2183 : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f8	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 2184 : 
; 2185 : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2186 : 	}
; 2187 : 	else

  0005c	e9 d6 00 00 00	 jmp	 $LN11@wrender_tr
$LN6@wrender_tr:

; 2188 : 	{
; 2189 : 
; 2190 : 		//
; 2191 : 		// Look up the colour of the face normal
; 2192 : 		//
; 2193 : 
; 2194 : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00066	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006f	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  00072	89 45 f8	 mov	 DWORD PTR _colour$[ebp], eax

; 2195 : 
; 2196 : 		if ( current_object_3d_surface->translucent )

  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0007a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0007d	66 c1 e9 06	 shr	 cx, 6
  00081	66 83 e1 01	 and	 cx, 1
  00085	0f b7 d1	 movzx	 edx, cx
  00088	85 d2		 test	 edx, edx
  0008a	74 2d		 je	 SHORT $LN8@wrender_tr

; 2197 : 		{
; 2198 : 
; 2199 : 			int
; 2200 : 				ialpha;
; 2201 : 
; 2202 : 			asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &ialpha );

  0008c	8d 45 e8	 lea	 eax, DWORD PTR _ialpha$3[ebp]
  0008f	50		 push	 eax
  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00096	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  0009a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0009e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000a6	51		 push	 ecx
  000a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ac	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2203 : 
; 2204 : 			colour.alpha = ialpha;

  000b1	8a 45 e8	 mov	 al, BYTE PTR _ialpha$3[ebp]
  000b4	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al

; 2205 : 		}
; 2206 : 		else

  000b7	eb 08		 jmp	 SHORT $LN9@wrender_tr
$LN8@wrender_tr:

; 2207 : 		{
; 2208 : 
; 2209 : 			colour.alpha = current_object_3d_dissolve_value;

  000b9	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000be	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al
$LN9@wrender_tr:

; 2210 : 		}
; 2211 : 
; 2212 : 		//
; 2213 : 		// Construct the specular colour
; 2214 : 		//
; 2215 : 
; 2216 : 		if ( current_object_3d_surface->additive )

  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c6	66 8b 08	 mov	 cx, WORD PTR [eax]
  000c9	66 c1 e9 05	 shr	 cx, 5
  000cd	66 83 e1 01	 and	 cx, 1
  000d1	0f b7 d1	 movzx	 edx, cx
  000d4	85 d2		 test	 edx, edx
  000d6	74 0a		 je	 SHORT $LN10@wrender_tr

; 2217 : 		{
; 2218 : 	
; 2219 : 			specular_colour.colour = d3d_fog_intensity;

  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000dd	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2220 : 		}
; 2221 : 		else

  000e0	eb 55		 jmp	 SHORT $LN11@wrender_tr
$LN10@wrender_tr:

; 2222 : 		{
; 2223 : 	
; 2224 : 			float
; 2225 : 				specular;
; 2226 : 	
; 2227 : 			int
; 2228 : 				ispecular;
; 2229 : 	
; 2230 : 			specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000e7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000f0	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000f6	f3 0f 11 45 e4	 movss	 DWORD PTR _specular$2[ebp], xmm0

; 2231 : 	
; 2232 : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  000fb	8d 45 e0	 lea	 eax, DWORD PTR _ispecular$1[ebp]
  000fe	50		 push	 eax
  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00105	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00109	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0010d	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _specular$2[ebp]
  00112	51		 push	 ecx
  00113	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00118	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2233 : 	
; 2234 : 			specular_colour.colour = d3d_fog_intensity;

  0011d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00122	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 2235 : 			specular_colour.red = ispecular;

  00125	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  00128	88 45 f6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 2236 : 			specular_colour.green = ispecular;

  0012b	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  0012e	88 45 f5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 2237 : 			specular_colour.blue = ispecular;

  00131	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  00134	88 45 f4	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN11@wrender_tr:

; 2238 : 		}
; 2239 : 	}
; 2240 : 
; 2241 : 			
; 2242 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00137	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  0013e	eb 09		 jmp	 SHORT $LN4@wrender_tr
$LN2@wrender_tr:
  00140	8b 45 ec	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00143	83 c0 01	 add	 eax, 1
  00146	89 45 ec	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_tr:
  00149	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0014c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0014f	83 e9 02	 sub	 ecx, 2
  00152	39 4d ec	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00155	0f 8d 93 00 00
	00		 jge	 $LN3@wrender_tr

; 2243 : 	{
; 2244 : 	
; 2245 : 		poly = construct_3d_surface_textured_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  0015b	8d 45 f0	 lea	 eax, DWORD PTR _outcode$[ebp]
  0015e	50		 push	 eax
  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00165	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00168	52		 push	 edx
  00169	8b 45 ec	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?construct_3d_surface_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_textured_triangle_fan
  00172	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2246 : 
; 2247 : 		if ( poly )

  00175	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00179	74 6e		 je	 SHORT $LN12@wrender_tr

; 2248 : 		{
; 2249 : 	
; 2250 : 			clip_3d_coord = 0;

  0017b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 2251 : 		
; 2252 : 			if ( outcode & CLIP_HITHER )

  00185	8b 45 f0	 mov	 eax, DWORD PTR _outcode$[ebp]
  00188	83 e0 20	 and	 eax, 32			; 00000020H
  0018b	74 18		 je	 SHORT $LN14@wrender_tr

; 2253 : 			{
; 2254 : 		
; 2255 : 				poly = hither_clip_3d_polygon ( poly, &outcode );

  0018d	8d 45 f0	 lea	 eax, DWORD PTR _outcode$[ebp]
  00190	50		 push	 eax
  00191	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0019a	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2256 : 		
; 2257 : 				if ( !poly )

  0019d	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001a1	75 02		 jne	 SHORT $LN14@wrender_tr

; 2258 : 				{
; 2259 : 		
; 2260 : 					continue;

  001a3	eb 9b		 jmp	 SHORT $LN2@wrender_tr
$LN14@wrender_tr:

; 2261 : 				}
; 2262 : 			}
; 2263 : 		
; 2264 : 			if ( outcode )

  001a5	83 7d f0 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  001a9	74 2d		 je	 SHORT $LN15@wrender_tr

; 2265 : 			{
; 2266 : 		
; 2267 : 				apply_perspective_to_polygon_texture ( poly );

  001ab	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 2268 : 					
; 2269 : 				poly = clip_3d_polygon ( poly, outcode );

  001b4	8b 45 f0	 mov	 eax, DWORD PTR _outcode$[ebp]
  001b7	50		 push	 eax
  001b8	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001bb	51		 push	 ecx
  001bc	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  001c1	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 2270 : 		
; 2271 : 				if ( !poly )

  001c4	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001c8	75 05		 jne	 SHORT $LN16@wrender_tr

; 2272 : 				{
; 2273 : 		
; 2274 : 					continue;

  001ca	e9 71 ff ff ff	 jmp	 $LN2@wrender_tr
$LN16@wrender_tr:

; 2275 : 				}
; 2276 : 		
; 2277 : 				remove_perspective_from_polygon_texture ( poly );

  001cf	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN15@wrender_tr:

; 2278 : 			}
; 2279 : 		
; 2280 : 			draw_wbuffered_flat_shaded_textured_polygon ( poly, colour, specular_colour );

  001d8	8b 45 f4	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  001db	50		 push	 eax
  001dc	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  001df	51		 push	 ecx
  001e0	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  001e3	52		 push	 edx
  001e4	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN12@wrender_tr:

; 2281 : 		}
; 2282 : 	}

  001e9	e9 52 ff ff ff	 jmp	 $LN2@wrender_tr
$LN3@wrender_tr:

; 2283 : }

  001ee	5f		 pop	 edi
  001ef	5e		 pop	 esi
  001f0	5b		 pop	 ebx
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c2 04 00	 ret	 4
?wrender_translucent_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_translucent_clipped_3d_object_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_textured_surface@@YGXH@Z
_TEXT	SEGMENT
_adjusted_z$1 = -20					; size = 4
_transformed_points$ = -16				; size = 4
_vert$ = -12						; size = 4
_destination_vertices$ = -8				; size = 4
_count$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_textured_surface@@YGXH@Z PROC	; wrender_3d_object_textured_surface, COMDAT

; 2115 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2116 : 
; 2117 : 	int
; 2118 : 		count;
; 2119 : 
; 2120 : 	LPD3DTLVERTEX
; 2121 : 		destination_vertices;
; 2122 : 
; 2123 : 	object_transformed_2d_point
; 2124 : 		*vert,
; 2125 : 		*transformed_points;
; 2126 : 
; 2127 : 	ASSERT ( !current_object_3d_surface->translucent );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 c1 e9 06	 shr	 cx, 6
  00015	66 83 e1 01	 and	 cx, 1
  00019	0f b7 d1	 movzx	 edx, cx
  0001c	85 d2		 test	 edx, edx
  0001e	74 18		 je	 SHORT $LN5@wrender_3d
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_textured_surface@@YGXH@Z@4JA
  00025	83 c0 0c	 add	 eax, 12			; 0000000cH
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 2128 : 
; 2129 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00040	c1 e1 04	 shl	 ecx, 4
  00043	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00049	89 4d f0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2130 : 
; 2131 : 	destination_vertices = current_object_3d_surface_vertices;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  00051	89 45 f8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2132 : 
; 2133 : 	for ( count = 0; count < number_of_points; count++ )

  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0005b	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00060	83 c0 01	 add	 eax, 1
  00063	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  00066	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00069	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  0006c	0f 8d d2 00 00
	00		 jge	 $LN3@wrender_3d

; 2134 : 	{
; 2135 : 
; 2136 : 		float
; 2137 : 			adjusted_z;
; 2138 : 
; 2139 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0007b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0007f	c1 e2 04	 shl	 edx, 4
  00082	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00085	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 2140 : 
; 2141 : 		adjusted_z = vert->q;

  00088	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0008b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00090	f3 0f 11 45 ec	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2142 : 
; 2143 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00095	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00098	c1 e0 05	 shl	 eax, 5
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0009e	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000a1	8b 12		 mov	 edx, DWORD PTR [edx]
  000a3	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2144 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000a9	c1 e0 05	 shl	 eax, 5
  000ac	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000af	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000b2	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000b5	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2145 : 		*( ( int * ) &destination_vertices[count].rhw ) = *( ( int * ) &vert->q );

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000bc	c1 e0 05	 shl	 eax, 5
  000bf	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000c2	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000c5	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  000c8	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2146 : 		adjusted_z *= zbuffer_factor;

  000cc	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _adjusted_z$1[ebp]
  000d1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  000d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000dd	f3 0f 11 45 ec	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2147 : 
; 2148 : 		destination_vertices[count].tu = current_object_3d_surface_point_texture_list[count].u;

  000e2	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000e5	c1 e0 05	 shl	 eax, 5
  000e8	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000eb	8b 55 fc	 mov	 edx, DWORD PTR _count$[ebp]
  000ee	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  000f4	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  000f7	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 2149 : 		destination_vertices[count].tv = current_object_3d_surface_point_texture_list[count].v;

  000fb	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000fe	c1 e0 05	 shl	 eax, 5
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00104	8b 55 fc	 mov	 edx, DWORD PTR _count$[ebp]
  00107	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0010d	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00111	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 2150 : 		adjusted_z += zbuffer_constant;

  00115	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _adjusted_z$1[ebp]
  0011a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00122	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00126	f3 0f 11 45 ec	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2151 : 
; 2152 : 		destination_vertices[count].sz = adjusted_z;

  0012b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0012e	c1 e0 05	 shl	 eax, 5
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00134	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _adjusted_z$1[ebp]
  00139	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 2153 : 	}

  0013f	e9 19 ff ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 2154 : }

  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?wrender_3d_object_textured_surface@@YGXH@Z ENDP	; wrender_3d_object_textured_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z
_TEXT	SEGMENT
_adjusted_z$1 = -24					; size = 4
_surface_normal_point_index$2 = -20			; size = 4
_transformed_points$ = -16				; size = 4
_vert$ = -12						; size = 4
_destination_vertices$ = -8				; size = 4
_count$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z PROC ; wrender_3d_object_gouraud_textured_nospecular_surface, COMDAT

; 2063 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2064 : 
; 2065 : 	int
; 2066 : 		count;
; 2067 : 
; 2068 : 	LPD3DTLVERTEX
; 2069 : 		destination_vertices;
; 2070 : 
; 2071 : 	object_transformed_2d_point
; 2072 : 		*vert,
; 2073 : 		*transformed_points;
; 2074 : 
; 2075 : 	ASSERT ( !current_object_3d_surface->translucent );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 c1 e9 06	 shr	 cx, 6
  00015	66 83 e1 01	 and	 cx, 1
  00019	0f b7 d1	 movzx	 edx, cx
  0001c	85 d2		 test	 edx, edx
  0001e	74 18		 je	 SHORT $LN5@wrender_3d
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z@4JA
  00025	83 c0 0c	 add	 eax, 12			; 0000000cH
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 2076 : 
; 2077 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00040	c1 e1 04	 shl	 ecx, 4
  00043	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00049	89 4d f0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2078 : 
; 2079 : 	destination_vertices = current_object_3d_surface_vertices;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  00051	89 45 f8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2080 : 
; 2081 : 	for ( count = 0; count < number_of_points; count++ )

  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0005b	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00060	83 c0 01	 add	 eax, 1
  00063	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  00066	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00069	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  0006c	0f 8d 0e 01 00
	00		 jge	 $LN3@wrender_3d

; 2082 : 	{
; 2083 : 
; 2084 : 		int
; 2085 : 			surface_normal_point_index;
; 2086 : 
; 2087 : 		float
; 2088 : 			adjusted_z;
; 2089 : 
; 2090 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00075	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0007b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0007f	c1 e2 04	 shl	 edx, 4
  00082	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00085	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 2091 : 
; 2092 : 		adjusted_z = vert->q;

  00088	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  0008b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00090	f3 0f 11 45 e8	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2093 : 		surface_normal_point_index = current_object_3d_surface_point_normal_list[count].point;

  00095	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  0009e	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000a2	89 55 ec	 mov	 DWORD PTR _surface_normal_point_index$2[ebp], edx

; 2094 : 
; 2095 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000a8	c1 e0 05	 shl	 eax, 5
  000ab	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000ae	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000b1	8b 12		 mov	 edx, DWORD PTR [edx]
  000b3	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2096 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  000b6	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000b9	c1 e0 05	 shl	 eax, 5
  000bc	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000bf	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000c2	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000c5	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2097 : 		*( ( int * ) &destination_vertices[count].rhw ) = *( ( int * ) &vert->q );

  000c9	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000cc	c1 e0 05	 shl	 eax, 5
  000cf	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000d2	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000d5	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  000d8	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2098 : 		adjusted_z *= zbuffer_factor;

  000dc	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _adjusted_z$1[ebp]
  000e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  000e9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ed	f3 0f 11 45 e8	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2099 : 
; 2100 : 		destination_vertices[count].tu = current_object_3d_surface_point_texture_list[count].u;

  000f2	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000f5	c1 e0 05	 shl	 eax, 5
  000f8	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000fb	8b 55 fc	 mov	 edx, DWORD PTR _count$[ebp]
  000fe	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00104	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  00107	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 2101 : 		destination_vertices[count].tv = current_object_3d_surface_point_texture_list[count].v;

  0010b	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0010e	c1 e0 05	 shl	 eax, 5
  00111	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00114	8b 55 fc	 mov	 edx, DWORD PTR _count$[ebp]
  00117	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  0011d	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  00121	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 2102 : 		destination_vertices[count].color = current_object_3d_transformed_normals[surface_normal_point_index].colour;

  00125	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00128	c1 e0 05	 shl	 eax, 5
  0012b	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0012e	8b 55 ec	 mov	 edx, DWORD PTR _surface_normal_point_index$2[ebp]
  00131	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00137	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  0013a	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 2103 : 		adjusted_z += zbuffer_constant;

  0013e	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _adjusted_z$1[ebp]
  00143	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0014b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0014f	f3 0f 11 45 e8	 movss	 DWORD PTR _adjusted_z$1[ebp], xmm0

; 2104 : 
; 2105 : 		destination_vertices[count].specular = d3d_fog_intensity;

  00154	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00157	c1 e0 05	 shl	 eax, 5
  0015a	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0015d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00163	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2106 : 		destination_vertices[count].sz = adjusted_z;

  00167	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  0016a	c1 e0 05	 shl	 eax, 5
  0016d	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00170	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _adjusted_z$1[ebp]
  00175	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 2107 : 	}

  0017b	e9 dd fe ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 2108 : }

  00180	5f		 pop	 edi
  00181	5e		 pop	 esi
  00182	5b		 pop	 ebx
  00183	8b e5		 mov	 esp, ebp
  00185	5d		 pop	 ebp
  00186	c2 04 00	 ret	 4
?wrender_3d_object_gouraud_textured_nospecular_surface@@YGXH@Z ENDP ; wrender_3d_object_gouraud_textured_nospecular_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_gouraud_textured_surface@@YGXH@Z
_TEXT	SEGMENT
_specular$1 = -36					; size = 4
_specular_colour$2 = -32				; size = 4
_texture_list$ = -28					; size = 4
_gouraud_list$ = -24					; size = 4
_transformed_points$ = -20				; size = 4
_vert$ = -16						; size = 4
_destination_vertices$ = -12				; size = 4
_count$ = -8						; size = 4
_ispecular$ = -4					; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_gouraud_textured_surface@@YGXH@Z PROC ; wrender_3d_object_gouraud_textured_surface, COMDAT

; 1998 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 64	 sub	 esp, 100		; 00000064H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1999 : 
; 2000 : 	int
; 2001 : 		ispecular,
; 2002 : 		count;
; 2003 : 
; 2004 : 	LPD3DTLVERTEX
; 2005 : 		destination_vertices;
; 2006 : 
; 2007 : 	object_transformed_2d_point
; 2008 : 		*vert,
; 2009 : 		*transformed_points;
; 2010 : 
; 2011 : 	point_3d_plain_reference
; 2012 : 		*gouraud_list;
; 2013 : 
; 2014 : 	object_3d_short_textured_point
; 2015 : 		*texture_list;
; 2016 : 
; 2017 : 	ASSERT ( !current_object_3d_surface->translucent );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 c1 e9 06	 shr	 cx, 6
  00015	66 83 e1 01	 and	 cx, 1
  00019	0f b7 d1	 movzx	 edx, cx
  0001c	85 d2		 test	 edx, edx
  0001e	74 18		 je	 SHORT $LN5@wrender_3d
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_gouraud_textured_surface@@YGXH@Z@4JA
  00025	83 c0 13	 add	 eax, 19			; 00000013H
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 2018 : 
; 2019 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00040	c1 e1 04	 shl	 ecx, 4
  00043	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00049	89 4d ec	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 2020 : 
; 2021 : 	destination_vertices = current_object_3d_surface_vertices;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  00051	89 45 f4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 2022 : 	gouraud_list = current_object_3d_surface_point_normal_list;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  00059	89 45 e8	 mov	 DWORD PTR _gouraud_list$[ebp], eax

; 2023 : 	texture_list = current_object_3d_surface_point_texture_list;

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  00061	89 45 e4	 mov	 DWORD PTR _texture_list$[ebp], eax

; 2024 : 
; 2025 : 	for ( count = 0; count < number_of_points; count++ )

  00064	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0006b	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  0006d	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00070	83 c0 01	 add	 eax, 1
  00073	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  00076	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00079	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  0007c	0f 8d 33 01 00
	00		 jge	 $LN3@wrender_3d

; 2026 : 	{
; 2027 : 
; 2028 : 		real_colour
; 2029 : 			specular_colour;
; 2030 : 
; 2031 : 		float
; 2032 : 			specular;
; 2033 : 
; 2034 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  00082	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00085	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  0008b	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0008f	c1 e2 04	 shl	 edx, 4
  00092	03 55 ec	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00095	89 55 f0	 mov	 DWORD PTR _vert$[ebp], edx

; 2035 : 	
; 2036 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00098	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0009b	c1 e0 05	 shl	 eax, 5
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000a1	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  000a4	8b 12		 mov	 edx, DWORD PTR [edx]
  000a6	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 2037 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  000a9	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000ac	c1 e0 05	 shl	 eax, 5
  000af	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000b2	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  000b5	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000b8	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 2038 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  000bc	8b 45 f0	 mov	 eax, DWORD PTR _vert$[ebp]
  000bf	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000c4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  000cc	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  000d4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d8	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  000db	c1 e1 05	 shl	 ecx, 5
  000de	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  000e1	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 2039 : 		destination_vertices[count].rhw = vert->q;

  000e7	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000ea	c1 e0 05	 shl	 eax, 5
  000ed	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000f0	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  000f3	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  000f6	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 2040 : 		destination_vertices[count].tu = texture_list->u;

  000fa	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000fd	c1 e0 05	 shl	 eax, 5
  00100	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00103	8b 55 e4	 mov	 edx, DWORD PTR _texture_list$[ebp]
  00106	8b 12		 mov	 edx, DWORD PTR [edx]
  00108	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 2041 : 		destination_vertices[count].tv = texture_list->v;

  0010c	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0010f	c1 e0 05	 shl	 eax, 5
  00112	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00115	8b 55 e4	 mov	 edx, DWORD PTR _texture_list$[ebp]
  00118	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0011b	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 2042 : 		destination_vertices[count].color = current_object_3d_transformed_normals[gouraud_list->point].colour;

  0011f	8b 45 e8	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  00122	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00125	8b 55 f8	 mov	 edx, DWORD PTR _count$[ebp]
  00128	c1 e2 05	 shl	 edx, 5
  0012b	8b 45 f4	 mov	 eax, DWORD PTR _destination_vertices$[ebp]
  0012e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00134	8b 0c ce	 mov	 ecx, DWORD PTR [esi+ecx*8]
  00137	89 4c 10 10	 mov	 DWORD PTR [eax+edx+16], ecx

; 2043 : 
; 2044 : 		specular = current_object_3d_transformed_normals[gouraud_list->point].specular;

  0013b	8b 45 e8	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  0013e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00141	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00147	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  0014d	f3 0f 11 45 dc	 movss	 DWORD PTR _specular$1[ebp], xmm0

; 2045 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  00152	8d 45 fc	 lea	 eax, DWORD PTR _ispecular$[ebp]
  00155	50		 push	 eax
  00156	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0015c	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00160	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00164	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _specular$1[ebp]
  00169	51		 push	 ecx
  0016a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016f	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 2046 : 		specular_colour.colour = d3d_fog_intensity;

  00174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00179	89 45 e0	 mov	 DWORD PTR _specular_colour$2[ebp], eax

; 2047 : 		specular_colour.red = ispecular;

  0017c	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  0017f	88 45 e2	 mov	 BYTE PTR _specular_colour$2[ebp+2], al

; 2048 : 		specular_colour.green = ispecular;

  00182	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  00185	88 45 e1	 mov	 BYTE PTR _specular_colour$2[ebp+1], al

; 2049 : 		specular_colour.blue = ispecular;

  00188	8a 45 fc	 mov	 al, BYTE PTR _ispecular$[ebp]
  0018b	88 45 e0	 mov	 BYTE PTR _specular_colour$2[ebp], al

; 2050 : 
; 2051 : 		destination_vertices[count].specular = specular_colour.colour;

  0018e	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00191	c1 e0 05	 shl	 eax, 5
  00194	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00197	8b 55 e0	 mov	 edx, DWORD PTR _specular_colour$2[ebp]
  0019a	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 2052 : 
; 2053 : 		gouraud_list++;

  0019e	8b 45 e8	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  001a1	83 c0 02	 add	 eax, 2
  001a4	89 45 e8	 mov	 DWORD PTR _gouraud_list$[ebp], eax

; 2054 : 		texture_list++;

  001a7	8b 45 e4	 mov	 eax, DWORD PTR _texture_list$[ebp]
  001aa	83 c0 08	 add	 eax, 8
  001ad	89 45 e4	 mov	 DWORD PTR _texture_list$[ebp], eax

; 2055 : 	}

  001b0	e9 b8 fe ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 2056 : }

  001b5	5f		 pop	 edi
  001b6	5e		 pop	 esi
  001b7	5b		 pop	 ebx
  001b8	8b e5		 mov	 esp, ebp
  001ba	5d		 pop	 ebp
  001bb	c2 04 00	 ret	 4
?wrender_3d_object_gouraud_textured_surface@@YGXH@Z ENDP ; wrender_3d_object_gouraud_textured_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_gouraud_surface@@YGXH@Z
_TEXT	SEGMENT
_specular_colour$ = -72					; size = 4
_gouraud_list$ = -68					; size = 4
_transformed_points$ = -64				; size = 4
_vert$ = -60						; size = 4
_destination_vertices$ = -56				; size = 4
_specular$ = -52					; size = 4
_blue$ = -48						; size = 4
_green$ = -44						; size = 4
_red$ = -40						; size = 4
_b$ = -36						; size = 4
_g$ = -32						; size = 4
_r$ = -28						; size = 4
_ispecular$ = -24					; size = 4
_count$ = -20						; size = 4
_surface_specular$ = -16				; size = 4
_surface_blue$ = -12					; size = 4
_surface_green$ = -8					; size = 4
_surface_red$ = -4					; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_gouraud_surface@@YGXH@Z PROC		; wrender_3d_object_gouraud_surface, COMDAT

; 1906 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1907 : 
; 1908 : 	float
; 1909 : 		surface_red,
; 1910 : 		surface_green,
; 1911 : 		surface_blue,
; 1912 : 		surface_specular;
; 1913 : 
; 1914 : 	int
; 1915 : 		count,
; 1916 : 		ispecular,
; 1917 : 		r,
; 1918 : 		g,
; 1919 : 		b;
; 1920 : 
; 1921 : 	float
; 1922 : 		red,
; 1923 : 		green,
; 1924 : 		blue,
; 1925 : 		specular;
; 1926 : 
; 1927 : 	LPD3DTLVERTEX
; 1928 : 		destination_vertices;
; 1929 : 
; 1930 : 	object_transformed_2d_point
; 1931 : 		*vert,
; 1932 : 		*transformed_points;
; 1933 : 
; 1934 : 	point_3d_plain_reference
; 1935 : 		*gouraud_list;
; 1936 : 
; 1937 : 	real_colour
; 1938 : 		specular_colour;
; 1939 : 
; 1940 : 	ASSERT ( !current_object_3d_surface->translucent );

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00011	66 8b 08	 mov	 cx, WORD PTR [eax]
  00014	66 c1 e9 06	 shr	 cx, 6
  00018	66 83 e1 01	 and	 cx, 1
  0001c	0f b7 d1	 movzx	 edx, cx
  0001f	85 d2		 test	 edx, edx
  00021	74 18		 je	 SHORT $LN5@wrender_3d
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_gouraud_surface@@YGXH@Z@4JA
  00028	83 c0 22	 add	 eax, 34			; 00000022H
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00036	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 1941 : 
; 1942 : 	surface_red = ( ( float ) current_object_3d_surface->red ) / 255.0;

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00040	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  00044	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00048	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0004c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00054	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00058	f3 0f 11 45 fc	 movss	 DWORD PTR _surface_red$[ebp], xmm0

; 1943 : 	surface_green = ( ( float ) current_object_3d_surface->green ) / 255.0;

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00062	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  00066	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0006a	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0006e	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00076	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007a	f3 0f 11 45 f8	 movss	 DWORD PTR _surface_green$[ebp], xmm0

; 1944 : 	surface_blue = ( ( float ) current_object_3d_surface->blue ) / 255.0;

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00084	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00088	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0008c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00090	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00098	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009c	f3 0f 11 45 f4	 movss	 DWORD PTR _surface_blue$[ebp], xmm0

; 1945 : 
; 1946 : 	if ( current_object_3d_specular )

  000a1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000a8	74 14		 je	 SHORT $LN6@wrender_3d

; 1947 : 	{
; 1948 : 
; 1949 : 		surface_specular = ( float ) current_object_3d_surface->specularity;

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000af	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000b3	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000b7	f3 0f 11 45 f0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0

; 1950 : 	}
; 1951 : 	else

  000bc	eb 08		 jmp	 SHORT $LN7@wrender_3d
$LN6@wrender_3d:

; 1952 : 	{
; 1953 : 
; 1954 : 		surface_specular = 0;

  000be	0f 57 c0	 xorps	 xmm0, xmm0
  000c1	f3 0f 11 45 f0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0
$LN7@wrender_3d:

; 1955 : 	}
; 1956 : 
; 1957 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000cb	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000ce	c1 e1 04	 shl	 ecx, 4
  000d1	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  000d7	89 4d c0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 1958 : 
; 1959 : 	destination_vertices = current_object_3d_surface_vertices;

  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  000df	89 45 c8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1960 : 
; 1961 : 	gouraud_list = current_object_3d_surface_point_normal_list;

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_point_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_normal_list
  000e7	89 45 bc	 mov	 DWORD PTR _gouraud_list$[ebp], eax

; 1962 : 
; 1963 : 	for ( count = 0; count < number_of_points; count++ )

  000ea	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  000f1	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  000f3	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  000f6	83 c0 01	 add	 eax, 1
  000f9	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  000fc	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  000ff	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  00102	0f 8d 9c 01 00
	00		 jge	 $LN3@wrender_3d

; 1964 : 	{
; 1965 : 
; 1966 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  00108	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  0010b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00111	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00115	c1 e2 04	 shl	 edx, 4
  00118	03 55 c0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0011b	89 55 c4	 mov	 DWORD PTR _vert$[ebp], edx

; 1967 : 	
; 1968 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  0011e	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00121	c1 e0 05	 shl	 eax, 5
  00124	8b 4d c8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00127	8b 55 c4	 mov	 edx, DWORD PTR _vert$[ebp]
  0012a	8b 12		 mov	 edx, DWORD PTR [edx]
  0012c	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1969 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  0012f	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00132	c1 e0 05	 shl	 eax, 5
  00135	8b 4d c8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00138	8b 55 c4	 mov	 edx, DWORD PTR _vert$[ebp]
  0013b	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0013e	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1970 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00142	8b 45 c4	 mov	 eax, DWORD PTR _vert$[ebp]
  00145	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0014a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00152	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0015a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0015e	8b 4d ec	 mov	 ecx, DWORD PTR _count$[ebp]
  00161	c1 e1 05	 shl	 ecx, 5
  00164	8b 55 c8	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  00167	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1971 : 		destination_vertices[count].rhw = vert->q;

  0016d	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00170	c1 e0 05	 shl	 eax, 5
  00173	8b 4d c8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  00176	8b 55 c4	 mov	 edx, DWORD PTR _vert$[ebp]
  00179	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  0017c	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1972 : 		red = ( current_object_3d_transformed_normals[gouraud_list->point].r * surface_red ) + FLOAT_FLOAT_FACTOR;

  00180	8b 45 bc	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  00183	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00186	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0018c	0f b6 44 ca 02	 movzx	 eax, BYTE PTR [edx+ecx*8+2]
  00191	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00195	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _surface_red$[ebp]
  0019a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001a2	f3 0f 11 45 d8	 movss	 DWORD PTR _red$[ebp], xmm0

; 1973 : 		green = ( current_object_3d_transformed_normals[gouraud_list->point].g * surface_green ) + FLOAT_FLOAT_FACTOR;

  001a7	8b 45 bc	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  001aa	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  001b3	0f b6 44 ca 01	 movzx	 eax, BYTE PTR [edx+ecx*8+1]
  001b8	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001bc	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _surface_green$[ebp]
  001c1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001c9	f3 0f 11 45 d4	 movss	 DWORD PTR _green$[ebp], xmm0

; 1974 : 		blue = ( current_object_3d_transformed_normals[gouraud_list->point].b * surface_blue ) + FLOAT_FLOAT_FACTOR;

  001ce	8b 45 bc	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  001d1	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  001d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  001da	0f b6 04 ca	 movzx	 eax, BYTE PTR [edx+ecx*8]
  001de	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001e2	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _surface_blue$[ebp]
  001e7	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@4b40005a
  001ef	f3 0f 11 45 d0	 movss	 DWORD PTR _blue$[ebp], xmm0

; 1975 : 		r = ( *( int * ) &red ) - INTEGER_FLOAT_FACTOR;

  001f4	8b 45 d8	 mov	 eax, DWORD PTR _red$[ebp]
  001f7	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  001fc	89 45 e4	 mov	 DWORD PTR _r$[ebp], eax

; 1976 : 		g = ( *( int * ) &green ) - INTEGER_FLOAT_FACTOR;

  001ff	8b 45 d4	 mov	 eax, DWORD PTR _green$[ebp]
  00202	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00207	89 45 e0	 mov	 DWORD PTR _g$[ebp], eax

; 1977 : 		b = ( *( int * ) &blue ) - INTEGER_FLOAT_FACTOR;

  0020a	8b 45 d0	 mov	 eax, DWORD PTR _blue$[ebp]
  0020d	2d 5a 00 40 4b	 sub	 eax, 1262485594		; 4b40005aH
  00212	89 45 dc	 mov	 DWORD PTR _b$[ebp], eax

; 1978 : 		destination_vertices[count].color = RGB_MAKE ( r, g, b );

  00215	8b 45 e4	 mov	 eax, DWORD PTR _r$[ebp]
  00218	c1 e0 10	 shl	 eax, 16			; 00000010H
  0021b	8b 4d e0	 mov	 ecx, DWORD PTR _g$[ebp]
  0021e	c1 e1 08	 shl	 ecx, 8
  00221	0b c1		 or	 eax, ecx
  00223	0b 45 dc	 or	 eax, DWORD PTR _b$[ebp]
  00226	8b 55 ec	 mov	 edx, DWORD PTR _count$[ebp]
  00229	c1 e2 05	 shl	 edx, 5
  0022c	8b 4d c8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0022f	89 44 11 10	 mov	 DWORD PTR [ecx+edx+16], eax

; 1979 : 
; 1980 : 		specular = current_object_3d_transformed_normals[gouraud_list->point].specular;

  00233	8b 45 bc	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  00236	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00239	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0023f	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  00245	f3 0f 11 45 cc	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1981 : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  0024a	8d 45 e8	 lea	 eax, DWORD PTR _ispecular$[ebp]
  0024d	50		 push	 eax
  0024e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00254	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00258	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0025c	f3 0f 59 45 cc	 mulss	 xmm0, DWORD PTR _specular$[ebp]
  00261	51		 push	 ecx
  00262	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00267	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 1982 : 		specular_colour.colour = d3d_fog_intensity;

  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00271	89 45 b8	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 1983 : 		specular_colour.red = ispecular;

  00274	8a 45 e8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00277	88 45 ba	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 1984 : 		specular_colour.green = ispecular;

  0027a	8a 45 e8	 mov	 al, BYTE PTR _ispecular$[ebp]
  0027d	88 45 b9	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 1985 : 		specular_colour.blue = ispecular;

  00280	8a 45 e8	 mov	 al, BYTE PTR _ispecular$[ebp]
  00283	88 45 b8	 mov	 BYTE PTR _specular_colour$[ebp], al

; 1986 : 
; 1987 : 		destination_vertices[count].specular = specular_colour.colour;

  00286	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  00289	c1 e0 05	 shl	 eax, 5
  0028c	8b 4d c8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0028f	8b 55 b8	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  00292	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1988 : 
; 1989 : 		gouraud_list++;

  00296	8b 45 bc	 mov	 eax, DWORD PTR _gouraud_list$[ebp]
  00299	83 c0 02	 add	 eax, 2
  0029c	89 45 bc	 mov	 DWORD PTR _gouraud_list$[ebp], eax

; 1990 : 	}

  0029f	e9 4f fe ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 1991 : }

  002a4	5f		 pop	 edi
  002a5	5e		 pop	 esi
  002a6	5b		 pop	 ebx
  002a7	8b e5		 mov	 esp, ebp
  002a9	5d		 pop	 ebp
  002aa	c2 04 00	 ret	 4
?wrender_3d_object_gouraud_surface@@YGXH@Z ENDP		; wrender_3d_object_gouraud_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_surface@@YGXH@Z
_TEXT	SEGMENT
_transformed_points$ = -16				; size = 4
_vert$ = -12						; size = 4
_destination_vertices$ = -8				; size = 4
_count$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_surface@@YGXH@Z PROC			; wrender_3d_object_surface, COMDAT

; 1871 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1872 : 
; 1873 : 	int
; 1874 : 		count;
; 1875 : 
; 1876 : 	LPD3DTLVERTEX
; 1877 : 		destination_vertices;
; 1878 : 
; 1879 : 	object_transformed_2d_point
; 1880 : 		*vert,
; 1881 : 		*transformed_points;
; 1882 : 
; 1883 : 	ASSERT ( !current_object_3d_surface->translucent );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 c1 e9 06	 shr	 cx, 6
  00015	66 83 e1 01	 and	 cx, 1
  00019	0f b7 d1	 movzx	 edx, cx
  0001c	85 d2		 test	 edx, edx
  0001e	74 18		 je	 SHORT $LN5@wrender_3d
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_surface@@YGXH@Z@4JA
  00025	83 c0 0c	 add	 eax, 12			; 0000000cH
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 1884 : 
; 1885 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0003d	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00040	c1 e1 04	 shl	 ecx, 4
  00043	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00049	89 4d f0	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 1886 : 
; 1887 : 	destination_vertices = current_object_3d_surface_vertices;

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  00051	89 45 f8	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1888 : 
; 1889 : 	for ( count = 0; count < number_of_points; count++ )

  00054	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  0005b	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00060	83 c0 01	 add	 eax, 1
  00063	89 45 fc	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  00066	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00069	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  0006c	7d 7d		 jge	 SHORT $LN3@wrender_3d

; 1890 : 	{
; 1891 : 
; 1892 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  0006e	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00077	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0007b	c1 e2 04	 shl	 edx, 4
  0007e	03 55 f0	 add	 edx, DWORD PTR _transformed_points$[ebp]
  00081	89 55 f4	 mov	 DWORD PTR _vert$[ebp], edx

; 1893 : 	
; 1894 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00084	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00087	c1 e0 05	 shl	 eax, 5
  0008a	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0008d	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  00090	8b 12		 mov	 edx, DWORD PTR [edx]
  00092	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1895 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  00095	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  00098	c1 e0 05	 shl	 eax, 5
  0009b	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0009e	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000a1	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000a4	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1896 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  000a8	8b 45 f4	 mov	 eax, DWORD PTR _vert$[ebp]
  000ab	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000b0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  000b8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  000c0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _count$[ebp]
  000c7	c1 e1 05	 shl	 ecx, 5
  000ca	8b 55 f8	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  000cd	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1897 : 		destination_vertices[count].rhw = vert->q;

  000d3	8b 45 fc	 mov	 eax, DWORD PTR _count$[ebp]
  000d6	c1 e0 05	 shl	 eax, 5
  000d9	8b 4d f8	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000dc	8b 55 f4	 mov	 edx, DWORD PTR _vert$[ebp]
  000df	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  000e2	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1898 : 	}

  000e6	e9 72 ff ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 1899 : }

  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5b		 pop	 ebx
  000ee	8b e5		 mov	 esp, ebp
  000f0	5d		 pop	 ebp
  000f1	c2 04 00	 ret	 4
?wrender_3d_object_surface@@YGXH@Z ENDP			; wrender_3d_object_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_object_luminous_surface@@YGXH@Z
_TEXT	SEGMENT
_transformed_points$ = -20				; size = 4
_vert$ = -16						; size = 4
_destination_vertices$ = -12				; size = 4
_count$ = -8						; size = 4
_colour$ = -4						; size = 4
_number_of_points$ = 8					; size = 4
?wrender_3d_object_luminous_surface@@YGXH@Z PROC	; wrender_3d_object_luminous_surface, COMDAT

; 1829 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1830 : 
; 1831 : 	real_colour
; 1832 : 		colour;
; 1833 : 
; 1834 : 	int
; 1835 : 		count;
; 1836 : 
; 1837 : 	LPD3DTLVERTEX
; 1838 : 		destination_vertices;
; 1839 : 
; 1840 : 	object_transformed_2d_point
; 1841 : 		*vert,
; 1842 : 		*transformed_points;
; 1843 : 
; 1844 : 	ASSERT ( !current_object_3d_surface->translucent );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 c1 e9 06	 shr	 cx, 6
  00015	66 83 e1 01	 and	 cx, 1
  00019	0f b7 d1	 movzx	 edx, cx
  0001c	85 d2		 test	 edx, edx
  0001e	74 18		 je	 SHORT $LN5@wrender_3d
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_object_luminous_surface@@YGXH@Z@4JA
  00025	83 c0 0f	 add	 eax, 15			; 0000000fH
  00028	50		 push	 eax
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CAOMDH@?$CBcurrent_object_3d_surface?9?$DOtra@
  00033	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_3d:

; 1845 : 
; 1846 : 	calculate_luminous_colour ( &colour );

  00038	8d 45 fc	 lea	 eax, DWORD PTR _colour$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1847 : 
; 1848 : 	transformed_points = transformed_3d_2d_points + current_object_3d_object_base->points_base;

  00041	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00046	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00049	c1 e1 04	 shl	 ecx, 4
  0004c	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_2d_points@@3PAUOBJECT_TRANSFORMED_2D_POINT@@A ; transformed_3d_2d_points
  00052	89 4d ec	 mov	 DWORD PTR _transformed_points$[ebp], ecx

; 1849 : 
; 1850 : 	destination_vertices = current_object_3d_surface_vertices;

  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface_vertices@@3PAU_D3DTLVERTEX@@A ; current_object_3d_surface_vertices
  0005a	89 45 f4	 mov	 DWORD PTR _destination_vertices$[ebp], eax

; 1851 : 
; 1852 : 	for ( count = 0; count < number_of_points; count++ )

  0005d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
  00064	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  00066	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00069	83 c0 01	 add	 eax, 1
  0006c	89 45 f8	 mov	 DWORD PTR _count$[ebp], eax
$LN4@wrender_3d:
  0006f	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00072	3b 45 08	 cmp	 eax, DWORD PTR _number_of_points$[ebp]
  00075	0f 8d a0 00 00
	00		 jge	 $LN3@wrender_3d

; 1853 : 	{
; 1854 : 
; 1855 : 		vert = transformed_points + current_object_3d_surface_point_list[count].point;

  0007b	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  0007e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00084	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  00088	c1 e2 04	 shl	 edx, 4
  0008b	03 55 ec	 add	 edx, DWORD PTR _transformed_points$[ebp]
  0008e	89 55 f0	 mov	 DWORD PTR _vert$[ebp], edx

; 1856 : 	
; 1857 : 		*( ( int * ) &destination_vertices[count].sx ) = *( ( int * ) &vert->i );

  00091	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00094	c1 e0 05	 shl	 eax, 5
  00097	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0009a	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  0009d	8b 12		 mov	 edx, DWORD PTR [edx]
  0009f	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1858 : 		*( ( int * ) &destination_vertices[count].sy ) = *( ( int * ) &vert->j );

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000a5	c1 e0 05	 shl	 eax, 5
  000a8	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000ab	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  000ae	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  000b1	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1859 : 		destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  000b5	8b 45 f0	 mov	 eax, DWORD PTR _vert$[ebp]
  000b8	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000bd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  000c5	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  000cd	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d1	8b 4d f8	 mov	 ecx, DWORD PTR _count$[ebp]
  000d4	c1 e1 05	 shl	 ecx, 5
  000d7	8b 55 f4	 mov	 edx, DWORD PTR _destination_vertices$[ebp]
  000da	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1860 : 		destination_vertices[count].rhw = vert->q;

  000e0	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000e3	c1 e0 05	 shl	 eax, 5
  000e6	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000e9	8b 55 f0	 mov	 edx, DWORD PTR _vert$[ebp]
  000ec	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  000ef	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1861 : 		destination_vertices[count].color = colour.colour;

  000f3	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  000f6	c1 e0 05	 shl	 eax, 5
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  000fc	8b 55 fc	 mov	 edx, DWORD PTR _colour$[ebp]
  000ff	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1862 : 		destination_vertices[count].specular = d3d_fog_intensity;

  00103	8b 45 f8	 mov	 eax, DWORD PTR _count$[ebp]
  00106	c1 e0 05	 shl	 eax, 5
  00109	8b 4d f4	 mov	 ecx, DWORD PTR _destination_vertices$[ebp]
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00112	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1863 : 	}

  00116	e9 4b ff ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 1864 : }

  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5b		 pop	 ebx
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c2 04 00	 ret	 4
?wrender_3d_object_luminous_surface@@YGXH@Z ENDP	; wrender_3d_object_luminous_surface
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_triangle_count$1 = -40					; size = 4
_transformed_points$2 = -36				; size = 4
_destination_vertices$3 = -32				; size = 4
_vert$4 = -28						; size = 4
_count$5 = -24						; size = 4
_surface_point_index$6 = -20				; size = 4
_frame$7 = -16						; size = 4
_texture$ = -12						; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_3d_shadow_surface_alpha_textured_polygon, COMDAT

; 1684 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1685 : 
; 1686 : 	vertex
; 1687 : 		*poly;
; 1688 : 
; 1689 : 	int
; 1690 : 		outcode;
; 1691 : 
; 1692 : 	screen
; 1693 : 		*texture;
; 1694 : 
; 1695 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_3d
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0b	 add	 eax, 11			; 0000000bH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_3d:

; 1696 : 
; 1697 : 	if ( current_object_3d_surface->detail )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 d1 e9	 shr	 cx, 1
  0003f	66 83 e1 01	 and	 cx, 1
  00043	0f b7 d1	 movzx	 edx, cx
  00046	85 d2		 test	 edx, edx
  00048	74 05		 je	 SHORT $LN9@wrender_3d

; 1698 : 	{
; 1699 : 
; 1700 : 		return;

  0004a	e9 a0 02 00 00	 jmp	 $LN1@wrender_3d
$LN9@wrender_3d:

; 1701 : 	}
; 1702 : 
; 1703 : 	if ( current_object_3d_surface->texture_animation )

  0004f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00054	66 8b 08	 mov	 cx, WORD PTR [eax]
  00057	66 c1 e9 09	 shr	 cx, 9
  0005b	66 83 e1 01	 and	 cx, 1
  0005f	0f b7 d1	 movzx	 edx, cx
  00062	85 d2		 test	 edx, edx
  00064	74 3f		 je	 SHORT $LN10@wrender_3d

; 1704 : 	{
; 1705 : 
; 1706 : 		int
; 1707 : 			frame;
; 1708 : 
; 1709 : 		frame = texture_animations[current_object_3d_surface->texture_index].current_frame;

  00066	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0006b	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  0006f	6b d1 0c	 imul	 edx, ecx, 12
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  00077	8b 4c 10 04	 mov	 ecx, DWORD PTR [eax+edx+4]
  0007b	89 4d f0	 mov	 DWORD PTR _frame$7[ebp], ecx

; 1710 : 
; 1711 : 		texture = system_textures[ texture_animations[current_object_3d_surface->texture_index].texture_indices[frame] ];

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00083	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  00087	6b d1 0c	 imul	 edx, ecx, 12
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?texture_animations@@3PAUTEXTURE_ANIMATION_INFORMATION@@A ; texture_animations
  0008f	8b 4c 10 08	 mov	 ecx, DWORD PTR [eax+edx+8]
  00093	8b 55 f0	 mov	 edx, DWORD PTR _frame$7[ebp]
  00096	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00099	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  000a0	89 4d f4	 mov	 DWORD PTR _texture$[ebp], ecx

; 1712 : 	}
; 1713 : 	else

  000a3	eb 13		 jmp	 SHORT $LN11@wrender_3d
$LN10@wrender_3d:

; 1714 : 	{
; 1715 : 
; 1716 : 		texture = system_textures[current_object_3d_surface->texture_index];

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000aa	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000ae	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  000b5	89 55 f4	 mov	 DWORD PTR _texture$[ebp], edx
$LN11@wrender_3d:

; 1717 : 	}
; 1718 : 
; 1719 : 	if ( !outcode_3d_surface_polygon ( this_face->number_of_points, current_object_3d_object_base->points_base, &outcode ) )

  000b8	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000bb	50		 push	 eax
  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000c2	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000c5	52		 push	 edx
  000c6	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000c9	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000cc	51		 push	 ecx
  000cd	e8 00 00 00 00	 call	 ?outcode_3d_surface_polygon@@YGHHHPAH@Z ; outcode_3d_surface_polygon
  000d2	85 c0		 test	 eax, eax
  000d4	0f 85 15 02 00
	00		 jne	 $LN6@wrender_3d

; 1720 : 	{
; 1721 : 
; 1722 : 		int
; 1723 : 			surface_point_index;
; 1724 : 
; 1725 : 		if ( outcode == 0 )

  000da	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000de	0f 85 47 01 00
	00		 jne	 $LN13@wrender_3d

; 1726 : 		{
; 1727 : 	
; 1728 : 			int
; 1729 : 				count;
; 1730 : 		
; 1731 : 			vertex
; 1732 : 				*vert;
; 1733 : 		
; 1734 : 			LPD3DTLVERTEX
; 1735 : 				destination_vertices;
; 1736 : 		
; 1737 : 			vertex
; 1738 : 				*transformed_points;
; 1739 : 		
; 1740 : 			set_d3d_flat_shaded_textured_renderstate ( texture );

  000e4	8b 45 f4	 mov	 eax, DWORD PTR _texture$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 1741 : 
; 1742 : 			transformed_points = &transformed_3d_points[current_object_3d_object_base->points_base];

  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000f2	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000f5	c1 e1 06	 shl	 ecx, 6
  000f8	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
  000fe	89 4d dc	 mov	 DWORD PTR _transformed_points$2[ebp], ecx

; 1743 : 		
; 1744 : 			destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00101	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00104	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00107	51		 push	 ecx
  00108	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  0010d	89 45 e0	 mov	 DWORD PTR _destination_vertices$3[ebp], eax

; 1745 : 		
; 1746 : 			for ( count = 0; count < this_face->number_of_points; count++ )

  00110	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _count$5[ebp], 0
  00117	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  00119	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  0011c	83 c0 01	 add	 eax, 1
  0011f	89 45 e8	 mov	 DWORD PTR _count$5[ebp], eax
$LN4@wrender_3d:
  00122	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00125	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00128	39 4d e8	 cmp	 DWORD PTR _count$5[ebp], ecx
  0012b	0f 8d e5 00 00
	00		 jge	 $LN3@wrender_3d

; 1747 : 			{
; 1748 : 
; 1749 : 				surface_point_index = current_object_3d_point_list[count].point;

  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  00136	03 45 e8	 add	 eax, DWORD PTR _count$5[ebp]
  00139	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0013c	89 4d ec	 mov	 DWORD PTR _surface_point_index$6[ebp], ecx

; 1750 : 				vert = transformed_points + current_object_3d_surface_point_list[surface_point_index].point;

  0013f	8b 45 ec	 mov	 eax, DWORD PTR _surface_point_index$6[ebp]
  00142	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  00148	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  0014c	c1 e2 06	 shl	 edx, 6
  0014f	03 55 dc	 add	 edx, DWORD PTR _transformed_points$2[ebp]
  00152	89 55 e4	 mov	 DWORD PTR _vert$4[ebp], edx

; 1751 : 			
; 1752 : 				destination_vertices[count].sx = vert->i;

  00155	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  00158	c1 e0 05	 shl	 eax, 5
  0015b	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  0015e	8b 55 e4	 mov	 edx, DWORD PTR _vert$4[ebp]
  00161	8b 52 10	 mov	 edx, DWORD PTR [edx+16]
  00164	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1753 : 				destination_vertices[count].sy = vert->j;

  00167	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  0016a	c1 e0 05	 shl	 eax, 5
  0016d	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  00170	8b 55 e4	 mov	 edx, DWORD PTR _vert$4[ebp]
  00173	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00176	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1754 : 				destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0017a	8b 45 e4	 mov	 eax, DWORD PTR _vert$4[ebp]
  0017d	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00182	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0018a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00192	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00196	8b 4d e8	 mov	 ecx, DWORD PTR _count$5[ebp]
  00199	c1 e1 05	 shl	 ecx, 5
  0019c	8b 55 e0	 mov	 edx, DWORD PTR _destination_vertices$3[ebp]
  0019f	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1755 : 				destination_vertices[count].rhw = vert->q;

  001a5	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  001a8	c1 e0 05	 shl	 eax, 5
  001ab	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  001ae	8b 55 e4	 mov	 edx, DWORD PTR _vert$4[ebp]
  001b1	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  001b4	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1756 : 				destination_vertices[count].tu = current_object_3d_surface_point_texture_list[surface_point_index].u;

  001b8	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  001bb	c1 e0 05	 shl	 eax, 5
  001be	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  001c1	8b 55 ec	 mov	 edx, DWORD PTR _surface_point_index$6[ebp]
  001c4	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001ca	8b 14 d6	 mov	 edx, DWORD PTR [esi+edx*8]
  001cd	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1757 : 				destination_vertices[count].tv = current_object_3d_surface_point_texture_list[surface_point_index].v;

  001d1	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  001d4	c1 e0 05	 shl	 eax, 5
  001d7	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  001da	8b 55 ec	 mov	 edx, DWORD PTR _surface_point_index$6[ebp]
  001dd	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_object_3d_surface_point_texture_list@@3PAUOBJECT_3D_SHORT_TEXTURED_POINT@@A ; current_object_3d_surface_point_texture_list
  001e3	8b 54 d6 04	 mov	 edx, DWORD PTR [esi+edx*8+4]
  001e7	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1758 : 				destination_vertices[count].color = polygon_shadow_colour;

  001eb	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  001ee	c1 e0 05	 shl	 eax, 5
  001f1	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  001f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?polygon_shadow_colour@@3KA ; polygon_shadow_colour
  001fa	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1759 : 				destination_vertices[count].specular = d3d_fog_intensity;

  001fe	8b 45 e8	 mov	 eax, DWORD PTR _count$5[ebp]
  00201	c1 e0 05	 shl	 eax, 5
  00204	8b 4d e0	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  00207	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0020d	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1760 : 			}

  00211	e9 03 ff ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 1761 : 		
; 1762 : 			draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00216	8b 45 e0	 mov	 eax, DWORD PTR _destination_vertices$3[ebp]
  00219	50		 push	 eax
  0021a	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  0021d	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00220	52		 push	 edx
  00221	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1763 : 		}
; 1764 : 		else

  00226	e9 c4 00 00 00	 jmp	 $LN6@wrender_3d
$LN13@wrender_3d:

; 1765 : 		{
; 1766 : 	
; 1767 : 			int
; 1768 : 				triangle_count;
; 1769 : 	
; 1770 : 			for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0022b	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _triangle_count$1[ebp], 0
  00232	eb 09		 jmp	 SHORT $LN7@wrender_3d
$LN5@wrender_3d:
  00234	8b 45 d8	 mov	 eax, DWORD PTR _triangle_count$1[ebp]
  00237	83 c0 01	 add	 eax, 1
  0023a	89 45 d8	 mov	 DWORD PTR _triangle_count$1[ebp], eax
$LN7@wrender_3d:
  0023d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00240	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00243	83 e9 02	 sub	 ecx, 2
  00246	39 4d d8	 cmp	 DWORD PTR _triangle_count$1[ebp], ecx
  00249	0f 8d a0 00 00
	00		 jge	 $LN6@wrender_3d

; 1771 : 			{
; 1772 : 			
; 1773 : 		
; 1774 : 				poly = construct_3d_surface_shadow_textured_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  0024f	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00252	50		 push	 eax
  00253	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00259	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0025c	52		 push	 edx
  0025d	8b 45 d8	 mov	 eax, DWORD PTR _triangle_count$1[ebp]
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ?construct_3d_surface_shadow_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_shadow_textured_triangle_fan
  00266	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1775 : 			
; 1776 : 				if ( !poly )

  00269	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0026d	75 02		 jne	 SHORT $LN15@wrender_3d

; 1777 : 				{
; 1778 : 			
; 1779 : 					continue;

  0026f	eb c3		 jmp	 SHORT $LN5@wrender_3d
$LN15@wrender_3d:

; 1780 : 				}
; 1781 : 			
; 1782 : 				if ( outcode )

  00271	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00275	74 5d		 je	 SHORT $LN19@wrender_3d

; 1783 : 				{
; 1784 : 			
; 1785 : 					clip_3d_coord = 0;

  00277	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1786 : 			
; 1787 : 					if ( outcode & CLIP_HITHER )

  00281	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00284	83 e0 20	 and	 eax, 32			; 00000020H
  00287	74 18		 je	 SHORT $LN18@wrender_3d

; 1788 : 					{
; 1789 : 				
; 1790 : 						poly = hither_clip_3d_polygon ( poly, &outcode );

  00289	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0028c	50		 push	 eax
  0028d	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00290	51		 push	 ecx
  00291	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00296	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1791 : 			
; 1792 : 						if ( !poly )

  00299	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0029d	75 02		 jne	 SHORT $LN18@wrender_3d

; 1793 : 						{
; 1794 : 			
; 1795 : 							continue;

  0029f	eb 93		 jmp	 SHORT $LN5@wrender_3d
$LN18@wrender_3d:

; 1796 : 						}
; 1797 : 					}
; 1798 : 				
; 1799 : 					if ( outcode )

  002a1	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  002a5	74 2d		 je	 SHORT $LN19@wrender_3d

; 1800 : 					{
; 1801 : 
; 1802 : 						apply_perspective_to_polygon_texture ( poly );

  002a7	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  002aa	50		 push	 eax
  002ab	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 1803 : 
; 1804 : 						poly = clip_3d_polygon ( poly, outcode );

  002b0	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  002b3	50		 push	 eax
  002b4	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  002b7	51		 push	 ecx
  002b8	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  002bd	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1805 : 			
; 1806 : 						if ( !poly )

  002c0	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  002c4	75 05		 jne	 SHORT $LN20@wrender_3d

; 1807 : 						{
; 1808 : 			
; 1809 : 							continue;

  002c6	e9 69 ff ff ff	 jmp	 $LN5@wrender_3d
$LN20@wrender_3d:

; 1810 : 						}
; 1811 : 
; 1812 : 						remove_perspective_from_polygon_texture ( poly );

  002cb	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  002ce	50		 push	 eax
  002cf	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN19@wrender_3d:

; 1813 : 					}
; 1814 : 				}
; 1815 : 			
; 1816 : 				set_d3d_flat_shaded_textured_renderstate ( texture );

  002d4	8b 45 f4	 mov	 eax, DWORD PTR _texture$[ebp]
  002d7	50		 push	 eax
  002d8	e8 00 00 00 00	 call	 ?set_d3d_flat_shaded_textured_renderstate@@YGXPAUSCREEN@@@Z ; set_d3d_flat_shaded_textured_renderstate

; 1817 : 
; 1818 : 				draw_wbuffered_shadow_textured_polygon ( poly, texture );

  002dd	8b 45 f4	 mov	 eax, DWORD PTR _texture$[ebp]
  002e0	50		 push	 eax
  002e1	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  002e4	51		 push	 ecx
  002e5	e8 00 00 00 00	 call	 ?draw_wbuffered_shadow_textured_polygon@@YGXPAUVERTEX@@PAUSCREEN@@@Z ; draw_wbuffered_shadow_textured_polygon

; 1819 : 			}

  002ea	e9 45 ff ff ff	 jmp	 $LN5@wrender_3d
$LN6@wrender_3d:
$LN1@wrender_3d:

; 1820 : 		}
; 1821 : 	}
; 1822 : }

  002ef	5f		 pop	 edi
  002f0	5e		 pop	 esi
  002f1	5b		 pop	 ebx
  002f2	8b e5		 mov	 esp, ebp
  002f4	5d		 pop	 ebp
  002f5	c2 04 00	 ret	 4
?wrender_3d_shadow_surface_alpha_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_3d_shadow_surface_alpha_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_triangle_count$1 = -32					; size = 4
_surface_point_index$2 = -28				; size = 4
_transformed_points$3 = -24				; size = 4
_destination_vertices$4 = -20				; size = 4
_vert$5 = -16						; size = 4
_count$6 = -12						; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_3d_shadow_surface_plain_polygon, COMDAT

; 1559 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1560 : 
; 1561 : 	vertex
; 1562 : 		*poly;
; 1563 : 
; 1564 : 	int
; 1565 : 		outcode;
; 1566 : 
; 1567 : 	//
; 1568 : 	// The face is a true polygon - triangle or above
; 1569 : 	//
; 1570 : 
; 1571 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN8@wrender_3d
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0c	 add	 eax, 12			; 0000000cH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@wrender_3d:

; 1572 : 
; 1573 : 	if ( current_object_3d_surface->detail )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 d1 e9	 shr	 cx, 1
  0003f	66 83 e1 01	 and	 cx, 1
  00043	0f b7 d1	 movzx	 edx, cx
  00046	85 d2		 test	 edx, edx
  00048	74 05		 je	 SHORT $LN9@wrender_3d

; 1574 : 	{
; 1575 : 
; 1576 : 		return;

  0004a	e9 fc 01 00 00	 jmp	 $LN1@wrender_3d
$LN9@wrender_3d:

; 1577 : 	}
; 1578 : 
; 1579 : 	if ( !outcode_3d_surface_polygon ( this_face->number_of_points, current_object_3d_object_base->points_base, &outcode ) )

  0004f	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00052	50		 push	 eax
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00059	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0005c	52		 push	 edx
  0005d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00060	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 ?outcode_3d_surface_polygon@@YGHHHPAH@Z ; outcode_3d_surface_polygon
  00069	85 c0		 test	 eax, eax
  0006b	0f 85 da 01 00
	00		 jne	 $LN6@wrender_3d

; 1580 : 	{
; 1581 : 
; 1582 : 		if ( outcode == 0 )

  00071	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00075	0f 85 10 01 00
	00		 jne	 $LN11@wrender_3d

; 1583 : 		{
; 1584 : 	
; 1585 : 			int
; 1586 : 				count;
; 1587 : 		
; 1588 : 			vertex
; 1589 : 				*vert;
; 1590 : 		
; 1591 : 			LPD3DTLVERTEX
; 1592 : 				destination_vertices;
; 1593 : 		
; 1594 : 			vertex
; 1595 : 				*transformed_points;
; 1596 : 		
; 1597 : 			//
; 1598 : 			// Should draw a gouraud shaded polygon
; 1599 : 			//
; 1600 : 	
; 1601 : 			set_d3d_plain_renderstate ();

  0007b	e8 00 00 00 00	 call	 ?set_d3d_plain_renderstate@@YGXXZ ; set_d3d_plain_renderstate

; 1602 : 
; 1603 : 			transformed_points = &transformed_3d_points[current_object_3d_object_base->points_base];

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00085	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00088	c1 e1 06	 shl	 ecx, 6
  0008b	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?transformed_3d_points@@3PAUVERTEX@@A ; transformed_3d_points
  00091	89 4d e8	 mov	 DWORD PTR _transformed_points$3[ebp], ecx

; 1604 : 		
; 1605 : 			destination_vertices = get_d3d_vertices_points_address ( this_face->number_of_points );

  00094	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00097	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  000a0	89 45 ec	 mov	 DWORD PTR _destination_vertices$4[ebp], eax

; 1606 : 		
; 1607 : 			for ( count = 0; count < this_face->number_of_points; count++ )

  000a3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _count$6[ebp], 0
  000aa	eb 09		 jmp	 SHORT $LN4@wrender_3d
$LN2@wrender_3d:
  000ac	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  000af	83 c0 01	 add	 eax, 1
  000b2	89 45 f4	 mov	 DWORD PTR _count$6[ebp], eax
$LN4@wrender_3d:
  000b5	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000b8	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000bb	39 4d f4	 cmp	 DWORD PTR _count$6[ebp], ecx
  000be	0f 8d b2 00 00
	00		 jge	 $LN3@wrender_3d

; 1608 : 			{
; 1609 : 
; 1610 : 				int
; 1611 : 					surface_point_index;
; 1612 : 
; 1613 : 				surface_point_index = current_object_3d_point_list[count].point;

  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_point_list@@3PAUPOINT_3D_SHORT_REFERENCE@@A ; current_object_3d_point_list
  000c9	03 45 f4	 add	 eax, DWORD PTR _count$6[ebp]
  000cc	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000cf	89 4d e4	 mov	 DWORD PTR _surface_point_index$2[ebp], ecx

; 1614 : 				vert = &transformed_points[ current_object_3d_surface_point_list[surface_point_index].point ];

  000d2	8b 45 e4	 mov	 eax, DWORD PTR _surface_point_index$2[ebp]
  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface_point_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_surface_point_list
  000db	0f b7 14 41	 movzx	 edx, WORD PTR [ecx+eax*2]
  000df	c1 e2 06	 shl	 edx, 6
  000e2	03 55 e8	 add	 edx, DWORD PTR _transformed_points$3[ebp]
  000e5	89 55 f0	 mov	 DWORD PTR _vert$5[ebp], edx

; 1615 : 			
; 1616 : 				destination_vertices[count].sx = vert->i;

  000e8	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  000eb	c1 e0 05	 shl	 eax, 5
  000ee	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  000f1	8b 55 f0	 mov	 edx, DWORD PTR _vert$5[ebp]
  000f4	8b 52 10	 mov	 edx, DWORD PTR [edx+16]
  000f7	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1617 : 				destination_vertices[count].sy = vert->j;

  000fa	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  000fd	c1 e0 05	 shl	 eax, 5
  00100	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00103	8b 55 f0	 mov	 edx, DWORD PTR _vert$5[ebp]
  00106	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00109	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx

; 1618 : 				destination_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  0010d	8b 45 f0	 mov	 eax, DWORD PTR _vert$5[ebp]
  00110	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  00115	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  0011d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  00125	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00129	8b 4d f4	 mov	 ecx, DWORD PTR _count$6[ebp]
  0012c	c1 e1 05	 shl	 ecx, 5
  0012f	8b 55 ec	 mov	 edx, DWORD PTR _destination_vertices$4[ebp]
  00132	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0

; 1619 : 				destination_vertices[count].rhw = vert->q;

  00138	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  0013b	c1 e0 05	 shl	 eax, 5
  0013e	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00141	8b 55 f0	 mov	 edx, DWORD PTR _vert$5[ebp]
  00144	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00147	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 1620 : 				destination_vertices[count].color = polygon_shadow_colour;

  0014b	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  0014e	c1 e0 05	 shl	 eax, 5
  00151	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00154	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?polygon_shadow_colour@@3KA ; polygon_shadow_colour
  0015a	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1621 : 				destination_vertices[count].specular = d3d_fog_intensity;

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _count$6[ebp]
  00161	c1 e0 05	 shl	 eax, 5
  00164	8b 4d ec	 mov	 ecx, DWORD PTR _destination_vertices$4[ebp]
  00167	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  0016d	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1622 : 			}

  00171	e9 36 ff ff ff	 jmp	 $LN2@wrender_3d
$LN3@wrender_3d:

; 1623 : 		
; 1624 : 			draw_fan_primitive ( this_face->number_of_points, destination_vertices );

  00176	8b 45 ec	 mov	 eax, DWORD PTR _destination_vertices$4[ebp]
  00179	50		 push	 eax
  0017a	8b 4d 08	 mov	 ecx, DWORD PTR _this_face$[ebp]
  0017d	0f b6 11	 movzx	 edx, BYTE PTR [ecx]
  00180	52		 push	 edx
  00181	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1625 : 		}
; 1626 : 		else

  00186	e9 c0 00 00 00	 jmp	 $LN6@wrender_3d
$LN11@wrender_3d:

; 1627 : 		{
; 1628 : 
; 1629 : 			int
; 1630 : 				triangle_count;
; 1631 : 	
; 1632 : 			for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0018b	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _triangle_count$1[ebp], 0
  00192	eb 09		 jmp	 SHORT $LN7@wrender_3d
$LN5@wrender_3d:
  00194	8b 45 e0	 mov	 eax, DWORD PTR _triangle_count$1[ebp]
  00197	83 c0 01	 add	 eax, 1
  0019a	89 45 e0	 mov	 DWORD PTR _triangle_count$1[ebp], eax
$LN7@wrender_3d:
  0019d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  001a0	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  001a3	83 e9 02	 sub	 ecx, 2
  001a6	39 4d e0	 cmp	 DWORD PTR _triangle_count$1[ebp], ecx
  001a9	0f 8d 9c 00 00
	00		 jge	 $LN6@wrender_3d

; 1633 : 			{
; 1634 : 			
; 1635 : 				poly = construct_3d_surface_shadow_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  001af	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  001b2	50		 push	 eax
  001b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  001b9	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  001bc	52		 push	 edx
  001bd	8b 45 e0	 mov	 eax, DWORD PTR _triangle_count$1[ebp]
  001c0	50		 push	 eax
  001c1	e8 00 00 00 00	 call	 ?construct_3d_surface_shadow_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_shadow_triangle_fan
  001c6	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1636 : 			
; 1637 : 				if ( !poly )

  001c9	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001cd	75 02		 jne	 SHORT $LN13@wrender_3d

; 1638 : 				{
; 1639 : 			
; 1640 : 					continue;

  001cf	eb c3		 jmp	 SHORT $LN5@wrender_3d
$LN13@wrender_3d:

; 1641 : 				}
; 1642 : 			
; 1643 : 				if ( outcode )

  001d1	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  001d5	74 4b		 je	 SHORT $LN18@wrender_3d

; 1644 : 				{
; 1645 : 			
; 1646 : 					clip_3d_coord = 0;

  001d7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1647 : 			
; 1648 : 					if ( outcode & CLIP_HITHER )

  001e1	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  001e4	83 e0 20	 and	 eax, 32			; 00000020H
  001e7	74 18		 je	 SHORT $LN16@wrender_3d

; 1649 : 					{
; 1650 : 				
; 1651 : 						poly = hither_clip_3d_polygon ( poly, &outcode );

  001e9	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  001ec	50		 push	 eax
  001ed	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001f0	51		 push	 ecx
  001f1	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  001f6	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1652 : 			
; 1653 : 						if ( !poly )

  001f9	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001fd	75 02		 jne	 SHORT $LN16@wrender_3d

; 1654 : 						{
; 1655 : 			
; 1656 : 							continue;

  001ff	eb 93		 jmp	 SHORT $LN5@wrender_3d
$LN16@wrender_3d:

; 1657 : 						}
; 1658 : 					}
; 1659 : 				
; 1660 : 					if ( outcode )

  00201	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00205	74 1b		 je	 SHORT $LN18@wrender_3d

; 1661 : 					{
; 1662 : 				
; 1663 : 						poly = clip_3d_polygon ( poly, outcode );

  00207	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0020a	50		 push	 eax
  0020b	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0020e	51		 push	 ecx
  0020f	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00214	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1664 : 			
; 1665 : 						if ( !poly )

  00217	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0021b	75 05		 jne	 SHORT $LN18@wrender_3d

; 1666 : 						{
; 1667 : 			
; 1668 : 							continue;

  0021d	e9 72 ff ff ff	 jmp	 $LN5@wrender_3d
$LN18@wrender_3d:

; 1669 : 						}
; 1670 : 					}
; 1671 : 				}
; 1672 : 			
; 1673 : 				draw_wbuffered_shadow_polygon ( poly, 0, 0, 0 );

  00222	51		 push	 ecx
  00223	0f 57 c0	 xorps	 xmm0, xmm0
  00226	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022b	51		 push	 ecx
  0022c	0f 57 c0	 xorps	 xmm0, xmm0
  0022f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00234	51		 push	 ecx
  00235	0f 57 c0	 xorps	 xmm0, xmm0
  00238	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0023d	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  00240	50		 push	 eax
  00241	e8 00 00 00 00	 call	 ?draw_wbuffered_shadow_polygon@@YGXPAUVERTEX@@MMM@Z ; draw_wbuffered_shadow_polygon

; 1674 : 			}

  00246	e9 49 ff ff ff	 jmp	 $LN5@wrender_3d
$LN6@wrender_3d:
$LN1@wrender_3d:

; 1675 : 		}
; 1676 : 	}
; 1677 : }

  0024b	5f		 pop	 edi
  0024c	5e		 pop	 esi
  0024d	5b		 pop	 ebx
  0024e	8b e5		 mov	 esp, ebp
  00250	5d		 pop	 ebp
  00251	c2 04 00	 ret	 4
?wrender_3d_shadow_surface_plain_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_3d_shadow_surface_plain_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_plain_white_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_colour$2 = -12						; size = 4
_outcode$ = -8						; size = 4
_line$ = -4						; size = 4
?wrender_clipped_3d_object_plain_white_line@@YGXXZ PROC	; wrender_clipped_3d_object_plain_white_line, COMDAT

; 1491 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1492 : 
; 1493 : 	vertex
; 1494 : 		*line;
; 1495 : 
; 1496 : 	int
; 1497 : 		outcode;
; 1498 : 
; 1499 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_plain_white_line@@YGXXZ@4JA
  00021	83 c0 08	 add	 eax, 8
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_cl:

; 1500 : 
; 1501 : 	clip_3d_coord = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1502 : 
; 1503 : 	line = construct_3d_surface_line ( current_object_3d_object_base->points_base, &outcode );

  0003e	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00041	50		 push	 eax
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00048	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?construct_3d_surface_line@@YGPAUVERTEX@@HPAH@Z ; construct_3d_surface_line
  00051	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1504 : 
; 1505 : 	if ( !line )

  00054	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  00058	75 05		 jne	 SHORT $LN3@wrender_cl

; 1506 : 	{
; 1507 : 
; 1508 : 		return;

  0005a	e9 b3 00 00 00	 jmp	 $LN1@wrender_cl
$LN3@wrender_cl:

; 1509 : 	}
; 1510 : 
; 1511 : 	if ( outcode & CLIP_HITHER )

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00062	83 e0 20	 and	 eax, 32			; 00000020H
  00065	74 1b		 je	 SHORT $LN5@wrender_cl

; 1512 : 	{
; 1513 : 
; 1514 : 		line = hither_clip_3d_polygon ( line, &outcode );

  00067	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00074	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1515 : 
; 1516 : 		if ( !line )

  00077	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  0007b	75 05		 jne	 SHORT $LN5@wrender_cl

; 1517 : 		{
; 1518 : 
; 1519 : 			return;

  0007d	e9 90 00 00 00	 jmp	 $LN1@wrender_cl
$LN5@wrender_cl:

; 1520 : 		}
; 1521 : 	}
; 1522 : 
; 1523 : 	if ( outcode )

  00082	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00086	74 18		 je	 SHORT $LN7@wrender_cl

; 1524 : 	{
; 1525 : 
; 1526 : 		line = clip_3d_polygon ( line, outcode );

  00088	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00095	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1527 : 
; 1528 : 		if ( !line )

  00098	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  0009c	75 02		 jne	 SHORT $LN7@wrender_cl

; 1529 : 		{
; 1530 : 
; 1531 : 			return;

  0009e	eb 72		 jmp	 SHORT $LN1@wrender_cl
$LN7@wrender_cl:

; 1532 : 		}
; 1533 : 	}
; 1534 : 
; 1535 : 	commit_deferred_state_changes ();

  000a0	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1536 : 
; 1537 : 	if ( current_object_3d_surface->smoothed )

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000aa	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ad	66 c1 e9 02	 shr	 cx, 2
  000b1	66 83 e1 01	 and	 cx, 1
  000b5	0f b7 d1	 movzx	 edx, cx
  000b8	85 d2		 test	 edx, edx
  000ba	74 35		 je	 SHORT $LN8@wrender_cl

; 1538 : 	{
; 1539 : 
; 1540 : 		draw_wbuffered_gouraud_shaded_line ( line, 255, 255, 255 );

  000bc	51		 push	 ecx
  000bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  000c5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ca	51		 push	 ecx
  000cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  000d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d8	51		 push	 ecx
  000d9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@437f0000
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z ; draw_wbuffered_gouraud_shaded_line

; 1541 : 	}
; 1542 : 	else

  000ef	eb 21		 jmp	 SHORT $LN9@wrender_cl
$LN8@wrender_cl:

; 1543 : 	{
; 1544 : 
; 1545 : 		real_colour
; 1546 : 			colour;
; 1547 : 
; 1548 : 		colour = calculate_line_colour ( current_object_3d_object_base );

  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  000fc	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  000ff	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00102	89 4d f4	 mov	 DWORD PTR _colour$2[ebp], ecx

; 1549 : 
; 1550 : 		draw_wbuffered_plain_line ( line, colour );

  00105	8b 45 f4	 mov	 eax, DWORD PTR _colour$2[ebp]
  00108	50		 push	 eax
  00109	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0010c	51		 push	 ecx
  0010d	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z ; draw_wbuffered_plain_line
$LN9@wrender_cl:
$LN1@wrender_cl:

; 1551 : 	}
; 1552 : }

  00112	5f		 pop	 edi
  00113	5e		 pop	 esi
  00114	5b		 pop	 ebx
  00115	8b e5		 mov	 esp, ebp
  00117	5d		 pop	 ebp
  00118	c3		 ret	 0
?wrender_clipped_3d_object_plain_white_line@@YGXXZ ENDP	; wrender_clipped_3d_object_plain_white_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_plain_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_colour$2 = -12						; size = 4
_outcode$ = -8						; size = 4
_line$ = -4						; size = 4
?wrender_clipped_3d_object_plain_line@@YGXXZ PROC	; wrender_clipped_3d_object_plain_line, COMDAT

; 1421 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1422 : 
; 1423 : 	vertex
; 1424 : 		*line;
; 1425 : 
; 1426 : 	int
; 1427 : 		outcode;
; 1428 : 
; 1429 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_plain_line@@YGXXZ@4JA
  00021	83 c0 08	 add	 eax, 8
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_cl:

; 1430 : 
; 1431 : 	clip_3d_coord = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1432 : 
; 1433 : 	line = construct_3d_surface_line ( current_object_3d_object_base->points_base, &outcode );

  0003e	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00041	50		 push	 eax
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00048	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?construct_3d_surface_line@@YGPAUVERTEX@@HPAH@Z ; construct_3d_surface_line
  00051	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1434 : 
; 1435 : 	if ( !line )

  00054	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  00058	75 05		 jne	 SHORT $LN3@wrender_cl

; 1436 : 	{
; 1437 : 
; 1438 : 		return;

  0005a	e9 cc 00 00 00	 jmp	 $LN1@wrender_cl
$LN3@wrender_cl:

; 1439 : 	}
; 1440 : 
; 1441 : 	if ( outcode & CLIP_HITHER )

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00062	83 e0 20	 and	 eax, 32			; 00000020H
  00065	74 1b		 je	 SHORT $LN5@wrender_cl

; 1442 : 	{
; 1443 : 
; 1444 : 		line = hither_clip_3d_polygon ( line, &outcode );

  00067	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00074	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1445 : 
; 1446 : 		if ( !line )

  00077	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  0007b	75 05		 jne	 SHORT $LN5@wrender_cl

; 1447 : 		{
; 1448 : 
; 1449 : 			return;

  0007d	e9 a9 00 00 00	 jmp	 $LN1@wrender_cl
$LN5@wrender_cl:

; 1450 : 		}
; 1451 : 	}
; 1452 : 
; 1453 : 	if ( outcode )

  00082	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00086	74 1b		 je	 SHORT $LN7@wrender_cl

; 1454 : 	{
; 1455 : 
; 1456 : 		line = clip_3d_polygon ( line, outcode );

  00088	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0008f	51		 push	 ecx
  00090	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00095	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1457 : 
; 1458 : 		if ( !line )

  00098	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  0009c	75 05		 jne	 SHORT $LN7@wrender_cl

; 1459 : 		{
; 1460 : 
; 1461 : 			return;

  0009e	e9 88 00 00 00	 jmp	 $LN1@wrender_cl
$LN7@wrender_cl:

; 1462 : 		}
; 1463 : 	}
; 1464 : 
; 1465 : 	if ( current_object_3d_surface->smoothed )

  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000a8	66 8b 08	 mov	 cx, WORD PTR [eax]
  000ab	66 c1 e9 02	 shr	 cx, 2
  000af	66 83 e1 01	 and	 cx, 1
  000b3	0f b7 d1	 movzx	 edx, cx
  000b6	85 d2		 test	 edx, edx
  000b8	74 4b		 je	 SHORT $LN8@wrender_cl

; 1466 : 	{
; 1467 : 
; 1468 : 		commit_deferred_state_changes ();

  000ba	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1469 : 
; 1470 : 		draw_wbuffered_gouraud_shaded_line ( line, current_object_3d_surface->red, current_object_3d_surface->green, current_object_3d_surface->blue );

  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c4	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  000c8	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000cc	51		 push	 ecx
  000cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000d8	0f b6 42 0d	 movzx	 eax, BYTE PTR [edx+13]
  000dc	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000e0	51		 push	 ecx
  000e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ec	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  000f0	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000f4	51		 push	 ecx
  000f5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fa	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  000fd	50		 push	 eax
  000fe	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_line@@YGXPAUVERTEX@@MMM@Z ; draw_wbuffered_gouraud_shaded_line

; 1471 : 	}
; 1472 : 	else

  00103	eb 26		 jmp	 SHORT $LN9@wrender_cl
$LN8@wrender_cl:

; 1473 : 	{
; 1474 : 
; 1475 : 		real_colour
; 1476 : 			colour;
; 1477 : 
; 1478 : 		commit_deferred_state_changes ();

  00105	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1479 : 
; 1480 : 		colour = calculate_line_colour ( current_object_3d_object_base );

  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  00115	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  00118	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  0011b	89 4d f4	 mov	 DWORD PTR _colour$2[ebp], ecx

; 1481 : 
; 1482 : 		draw_wbuffered_plain_line ( line, colour );

  0011e	8b 45 f4	 mov	 eax, DWORD PTR _colour$2[ebp]
  00121	50		 push	 eax
  00122	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  00125	51		 push	 ecx
  00126	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_line@@YGXPAUVERTEX@@UREAL_COLOUR@@@Z ; draw_wbuffered_plain_line
$LN9@wrender_cl:
$LN1@wrender_cl:

; 1483 : 	}
; 1484 : }

  0012b	5f		 pop	 edi
  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	8b e5		 mov	 esp, ebp
  00130	5d		 pop	 ebp
  00131	c3		 ret	 0
?wrender_clipped_3d_object_plain_line@@YGXXZ ENDP	; wrender_clipped_3d_object_plain_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_textured_line@@YGXXZ
_TEXT	SEGMENT
$T1 = -80						; size = 4
_colour$2 = -12						; size = 4
_outcode$ = -8						; size = 4
_line$ = -4						; size = 4
?wrender_clipped_3d_object_textured_line@@YGXXZ PROC	; wrender_clipped_3d_object_textured_line, COMDAT

; 1323 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1324 : 
; 1325 : 	vertex
; 1326 : 		*line;
; 1327 : 
; 1328 : 	int
; 1329 : 		outcode;
; 1330 : 
; 1331 : 	ASSERT ( !current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	74 18		 je	 SHORT $LN2@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_textured_line@@YGXXZ@4JA
  00021	83 c0 08	 add	 eax, 8
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@EENMLFNH@?$CBcurrent_object_3d_surface?9?$DOpol@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@wrender_cl:

; 1332 : 
; 1333 : 	clip_3d_coord = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1334 : 
; 1335 : 	line = construct_3d_surface_textured_line ( current_object_3d_object_base->points_base, &outcode );

  0003e	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00041	50		 push	 eax
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00048	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0004b	52		 push	 edx
  0004c	e8 00 00 00 00	 call	 ?construct_3d_surface_textured_line@@YGPAUVERTEX@@HPAH@Z ; construct_3d_surface_textured_line
  00051	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1336 : 
; 1337 : 	if ( !line )

  00054	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  00058	75 05		 jne	 SHORT $LN3@wrender_cl

; 1338 : 	{
; 1339 : 
; 1340 : 		return;

  0005a	e9 44 01 00 00	 jmp	 $LN1@wrender_cl
$LN3@wrender_cl:

; 1341 : 	}
; 1342 : 
; 1343 : 	if ( outcode & CLIP_HITHER )

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00062	83 e0 20	 and	 eax, 32			; 00000020H
  00065	74 1b		 je	 SHORT $LN4@wrender_cl

; 1344 : 	{
; 1345 : 
; 1346 : 		line = hither_clip_3d_polygon ( line, &outcode );

  00067	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0006a	50		 push	 eax
  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0006e	51		 push	 ecx
  0006f	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00074	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1347 : 
; 1348 : 		if ( !line )

  00077	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  0007b	75 05		 jne	 SHORT $LN4@wrender_cl

; 1349 : 		{
; 1350 : 
; 1351 : 			return;

  0007d	e9 21 01 00 00	 jmp	 $LN1@wrender_cl
$LN4@wrender_cl:

; 1352 : 		}
; 1353 : 	}
; 1354 : 
; 1355 : 	if ( outcode )

  00082	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00086	74 2d		 je	 SHORT $LN6@wrender_cl

; 1356 : 	{
; 1357 : 
; 1358 : 		apply_perspective_to_polygon_texture ( line );

  00088	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 1359 : 				
; 1360 : 		line = clip_3d_polygon ( line, outcode );

  00091	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00094	50		 push	 eax
  00095	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  00098	51		 push	 ecx
  00099	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  0009e	89 45 fc	 mov	 DWORD PTR _line$[ebp], eax

; 1361 : 
; 1362 : 		if ( !line )

  000a1	83 7d fc 00	 cmp	 DWORD PTR _line$[ebp], 0
  000a5	75 05		 jne	 SHORT $LN7@wrender_cl

; 1363 : 		{
; 1364 : 
; 1365 : 			return;

  000a7	e9 f7 00 00 00	 jmp	 $LN1@wrender_cl
$LN7@wrender_cl:

; 1366 : 		}
; 1367 : 
; 1368 : 		remove_perspective_from_polygon_texture ( line );

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN6@wrender_cl:

; 1369 : 	}
; 1370 : 
; 1371 : 
; 1372 : 	if ( current_object_3d_surface->smoothed )

  000b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ba	66 8b 08	 mov	 cx, WORD PTR [eax]
  000bd	66 c1 e9 02	 shr	 cx, 2
  000c1	66 83 e1 01	 and	 cx, 1
  000c5	0f b7 d1	 movzx	 edx, cx
  000c8	85 d2		 test	 edx, edx
  000ca	74 24		 je	 SHORT $LN8@wrender_cl

; 1373 : 	{
; 1374 : 
; 1375 : 		commit_deferred_state_changes ();

  000cc	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1376 : 
; 1377 : 		draw_wbuffered_gouraud_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index] );

  000d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000d6	0f b7 48 04	 movzx	 ecx, WORD PTR [eax+4]
  000da	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[ecx*4]
  000e1	52		 push	 edx
  000e2	8b 45 fc	 mov	 eax, DWORD PTR _line$[ebp]
  000e5	50		 push	 eax
  000e6	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@@Z ; draw_wbuffered_gouraud_shaded_textured_line

; 1378 : 	}
; 1379 : 	else

  000eb	e9 b3 00 00 00	 jmp	 $LN1@wrender_cl
$LN8@wrender_cl:

; 1380 : 	{
; 1381 : 
; 1382 : 		real_colour
; 1383 : 			colour;
; 1384 : 
; 1385 : 		if ( current_object_3d_surface->luminous )

  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000f5	66 8b 08	 mov	 cx, WORD PTR [eax]
  000f8	66 c1 e9 07	 shr	 cx, 7
  000fc	66 83 e1 01	 and	 cx, 1
  00100	0f b7 d1	 movzx	 edx, cx
  00103	85 d2		 test	 edx, edx
  00105	74 0f		 je	 SHORT $LN10@wrender_cl

; 1386 : 		{
; 1387 : 
; 1388 : 			calculate_luminous_colour ( &colour );

  00107	8d 45 f4	 lea	 eax, DWORD PTR _colour$2[ebp]
  0010a	50		 push	 eax
  0010b	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 1389 : 
; 1390 : 			colour.alpha = 255;

  00110	c6 45 f7 ff	 mov	 BYTE PTR _colour$2[ebp+3], 255 ; 000000ffH

; 1391 : 		}
; 1392 : 		else

  00114	eb 14		 jmp	 SHORT $LN11@wrender_cl
$LN10@wrender_cl:

; 1393 : 		{
; 1394 : 	
; 1395 : 			colour = calculate_line_colour ( current_object_3d_object_base );

  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?calculate_line_colour@@YG?AUREAL_COLOUR@@PAUOBJECT_3D_INFO@@@Z ; calculate_line_colour
  00121	89 45 b0	 mov	 DWORD PTR $T1[ebp], eax
  00124	8b 4d b0	 mov	 ecx, DWORD PTR $T1[ebp]
  00127	89 4d f4	 mov	 DWORD PTR _colour$2[ebp], ecx
$LN11@wrender_cl:

; 1396 : 		}
; 1397 : 
; 1398 : 		if ( current_object_3d_surface->additive )

  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0012f	66 8b 08	 mov	 cx, WORD PTR [eax]
  00132	66 c1 e9 05	 shr	 cx, 5
  00136	66 83 e1 01	 and	 cx, 1
  0013a	0f b7 d1	 movzx	 edx, cx
  0013d	85 d2		 test	 edx, edx
  0013f	74 3e		 je	 SHORT $LN12@wrender_cl

; 1399 : 		{
; 1400 : 
; 1401 : 			buffer_wbuffered_flat_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index],

  00141	6a 01		 push	 1
  00143	8b 45 f4	 mov	 eax, DWORD PTR _colour$2[ebp]
  00146	50		 push	 eax
  00147	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  0014d	51		 push	 ecx
  0014e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00154	52		 push	 edx
  00155	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  0015a	50		 push	 eax
  0015b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00161	51		 push	 ecx
  00162	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00168	0f b7 42 04	 movzx	 eax, WORD PTR [edx+4]
  0016c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[eax*4]
  00173	51		 push	 ecx
  00174	8b 55 fc	 mov	 edx, DWORD PTR _line$[ebp]
  00177	52		 push	 edx
  00178	e8 00 00 00 00	 call	 ?buffer_wbuffered_flat_shaded_textured_line@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@H@Z ; buffer_wbuffered_flat_shaded_textured_line

; 1402 : 																		current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1403 : 																		current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1404 : 																		colour, TRUE );
; 1405 : 		}
; 1406 : 		else

  0017d	eb 24		 jmp	 SHORT $LN1@wrender_cl
$LN12@wrender_cl:

; 1407 : 		{
; 1408 : 	
; 1409 : 			commit_deferred_state_changes ();

  0017f	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1410 : 
; 1411 : 			draw_wbuffered_flat_shaded_textured_line ( line, system_textures[current_object_3d_surface->texture_index], colour );

  00184	8b 45 f4	 mov	 eax, DWORD PTR _colour$2[ebp]
  00187	50		 push	 eax
  00188	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0018e	0f b7 51 04	 movzx	 edx, WORD PTR [ecx+4]
  00192	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?system_textures@@3PAPAUSCREEN@@A[edx*4]
  00199	50		 push	 eax
  0019a	8b 4d fc	 mov	 ecx, DWORD PTR _line$[ebp]
  0019d	51		 push	 ecx
  0019e	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_line@@YGXPAUVERTEX@@PAUSCREEN@@UREAL_COLOUR@@@Z ; draw_wbuffered_flat_shaded_textured_line
$LN1@wrender_cl:

; 1412 : 		}
; 1413 : 	}
; 1414 : }

  001a3	5f		 pop	 edi
  001a4	5e		 pop	 esi
  001a5	5b		 pop	 ebx
  001a6	8b e5		 mov	 esp, ebp
  001a8	5d		 pop	 ebp
  001a9	c3		 ret	 0
?wrender_clipped_3d_object_textured_line@@YGXXZ ENDP	; wrender_clipped_3d_object_textured_line
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
tv188 = -112						; size = 4
_specular_colour$1 = -44				; size = 4
_lightmap_vertices$2 = -40				; size = 4
_destination_vertices$3 = -36				; size = 4
_count$4 = -32						; size = 4
_number_of_points$5 = -28				; size = 4
_vert$6 = -24						; size = 4
_lightmap_colour$ = -20					; size = 4
_specular$ = -16					; size = 4
_poly$ = -12						; size = 4
_outcode$ = -8						; size = 4
_triangle_count$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_gouraud_textured_lightmap_polygon, COMDAT

; 1133 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1134 : 
; 1135 : 	int
; 1136 : 		triangle_count,
; 1137 : 		outcode;
; 1138 : 
; 1139 : 	vertex
; 1140 : 		*poly;
; 1141 : 
; 1142 : 	float
; 1143 : 		specular;
; 1144 : 
; 1145 : 	real_colour
; 1146 : 		lightmap_colour;
; 1147 : 
; 1148 : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN9@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0f	 add	 eax, 15			; 0000000fH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@wrender_cl:

; 1149 : 
; 1150 : 	//
; 1151 : 	// Figure out the lightmap colours
; 1152 : 	//
; 1153 : 
; 1154 : 	lightmap_colour.red = current_object_3d_surface->red;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  0003c	88 4d ee	 mov	 BYTE PTR _lightmap_colour$[ebp+2], cl

; 1155 : 	lightmap_colour.green = current_object_3d_surface->green;

  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00044	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  00047	88 4d ed	 mov	 BYTE PTR _lightmap_colour$[ebp+1], cl

; 1156 : 	lightmap_colour.blue = current_object_3d_surface->blue;

  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0004f	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00052	88 4d ec	 mov	 BYTE PTR _lightmap_colour$[ebp], cl

; 1157 : 	lightmap_colour.alpha = 255;

  00055	c6 45 ef ff	 mov	 BYTE PTR _lightmap_colour$[ebp+3], 255 ; 000000ffH

; 1158 : 
; 1159 : 	calculate_lightmap_luminous_colour ( &lightmap_colour );

  00059	8d 45 ec	 lea	 eax, DWORD PTR _lightmap_colour$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_lightmap_luminous_colour

; 1160 : 
; 1161 : 	specular = current_object_3d_surface->specularity;

  00062	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00067	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  0006b	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  0006f	f3 0f 11 45 f0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 1162 : 
; 1163 : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00074	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  0007b	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00080	83 c0 01	 add	 eax, 1
  00083	89 45 fc	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  00086	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00089	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0008c	83 e9 02	 sub	 ecx, 2
  0008f	39 4d fc	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00092	0f 8d 1e 03 00
	00		 jge	 $LN3@wrender_cl

; 1164 : 	{
; 1165 : 
; 1166 : 		poly = construct_3d_surface_gouraud_dual_textured_triangle_fan ( triangle_count, specular, current_object_3d_object_base->points_base, &outcode );

  00098	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0009b	50		 push	 eax
  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000a2	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000a5	52		 push	 edx
  000a6	51		 push	 ecx
  000a7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _specular$[ebp]
  000ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b1	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_dual_textured_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z ; construct_3d_surface_gouraud_dual_textured_triangle_fan
  000ba	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 1167 : 
; 1168 : 		if ( poly )

  000bd	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000c1	0f 84 ea 02 00
	00		 je	 $LN18@wrender_cl

; 1169 : 		{
; 1170 : 		
; 1171 : 			if ( outcode )

  000c7	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000cb	74 5d		 je	 SHORT $LN14@wrender_cl

; 1172 : 			{
; 1173 : 		
; 1174 : 				clip_3d_coord = 0;

  000cd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1175 : 
; 1176 : 				if ( outcode & CLIP_HITHER )

  000d7	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  000da	83 e0 20	 and	 eax, 32			; 00000020H
  000dd	74 18		 je	 SHORT $LN13@wrender_cl

; 1177 : 				{
; 1178 : 			
; 1179 : 					poly = hither_clip_3d_dual_texture_polygon ( poly, &outcode );

  000df	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000e2	50		 push	 eax
  000e3	8b 4d f4	 mov	 ecx, DWORD PTR _poly$[ebp]
  000e6	51		 push	 ecx
  000e7	e8 00 00 00 00	 call	 ?hither_clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_dual_texture_polygon
  000ec	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 1180 : 		
; 1181 : 					if ( !poly )

  000ef	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000f3	75 02		 jne	 SHORT $LN13@wrender_cl

; 1182 : 					{
; 1183 : 		
; 1184 : 						continue;

  000f5	eb 86		 jmp	 SHORT $LN2@wrender_cl
$LN13@wrender_cl:

; 1185 : 					}
; 1186 : 				}
; 1187 : 			
; 1188 : 				if ( outcode )

  000f7	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000fb	74 2d		 je	 SHORT $LN14@wrender_cl

; 1189 : 				{
; 1190 : 		
; 1191 : 					apply_perspective_to_polygon_dual_texture ( poly );

  000fd	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_dual_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_dual_texture

; 1192 : 						
; 1193 : 					poly = clip_3d_dual_texture_polygon ( poly, outcode );

  00106	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00109	50		 push	 eax
  0010a	8b 4d f4	 mov	 ecx, DWORD PTR _poly$[ebp]
  0010d	51		 push	 ecx
  0010e	e8 00 00 00 00	 call	 ?clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_dual_texture_polygon
  00113	89 45 f4	 mov	 DWORD PTR _poly$[ebp], eax

; 1194 : 		
; 1195 : 					if ( !poly )

  00116	83 7d f4 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0011a	75 05		 jne	 SHORT $LN15@wrender_cl

; 1196 : 					{
; 1197 : 		
; 1198 : 						continue;

  0011c	e9 5c ff ff ff	 jmp	 $LN2@wrender_cl
$LN15@wrender_cl:

; 1199 : 					}
; 1200 : 		
; 1201 : 					remove_perspective_from_polygon_dual_texture ( poly );

  00121	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  00124	50		 push	 eax
  00125	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_dual_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_dual_texture
$LN14@wrender_cl:

; 1202 : 				}
; 1203 : 			}
; 1204 : 		
; 1205 : 			if ( current_object_3d_texture->contains_alpha )

  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0012f	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00133	66 c1 e9 07	 shr	 cx, 7
  00137	66 83 e1 01	 and	 cx, 1
  0013b	0f b7 d1	 movzx	 edx, cx
  0013e	85 d2		 test	 edx, edx
  00140	74 3d		 je	 SHORT $LN16@wrender_cl

; 1206 : 			{
; 1207 : 
; 1208 : 				//
; 1209 : 				// Should draw a transparent gouraud shaded textured polygon
; 1210 : 				//
; 1211 : 
; 1212 : 				buffer_wbuffered_gouraud_shaded_textured_polygon ( poly, current_object_3d_texture,

  00142	68 ff 00 00 00	 push	 255			; 000000ffH
  00147	6a 00		 push	 0
  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  0014e	50		 push	 eax
  0014f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00155	51		 push	 ecx
  00156	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  0015c	52		 push	 edx
  0015d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00162	50		 push	 eax
  00163	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00169	51		 push	 ecx
  0016a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00170	52		 push	 edx
  00171	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  00174	50		 push	 eax
  00175	e8 00 00 00 00	 call	 ?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z ; buffer_wbuffered_gouraud_shaded_textured_polygon

; 1213 : 																					current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1214 : 																					current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1215 : 																					current_object_3d_specular, FALSE, 255 );
; 1216 : 			}
; 1217 : 			else

  0017a	e9 32 02 00 00	 jmp	 $LN18@wrender_cl
$LN16@wrender_cl:

; 1218 : 			{
; 1219 : 
; 1220 : 				//
; 1221 : 				// Should draw a solid gouraud shaded textured polygon
; 1222 : 				//
; 1223 : 
; 1224 : 				{
; 1225 : 			
; 1226 : 					vertex
; 1227 : 						*vert;
; 1228 : 		
; 1229 : 					int
; 1230 : 						number_of_points,
; 1231 : 						count;
; 1232 : 		
; 1233 : 					LPD3DTLVERTEX
; 1234 : 						destination_vertices,
; 1235 : 						lightmap_vertices;
; 1236 : 
; 1237 : 					real_colour
; 1238 : 						specular_colour;
; 1239 : 		
; 1240 : 					//
; 1241 : 					// Set main polygon rendertype
; 1242 : 					//
; 1243 : 		
; 1244 : 					commit_deferred_state_changes ();

  0017f	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1245 : 		
; 1246 : 					//
; 1247 : 					// Count vertices
; 1248 : 					//
; 1249 : 		
; 1250 : 					number_of_points = 0;

  00184	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _number_of_points$5[ebp], 0

; 1251 : 		
; 1252 : 					vert = poly;

  0018b	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  0018e	89 45 e8	 mov	 DWORD PTR _vert$6[ebp], eax
$LN5@wrender_cl:

; 1253 : 		
; 1254 : 					while ( vert )

  00191	83 7d e8 00	 cmp	 DWORD PTR _vert$6[ebp], 0
  00195	74 14		 je	 SHORT $LN6@wrender_cl

; 1255 : 					{
; 1256 : 		
; 1257 : 						number_of_points++;

  00197	8b 45 e4	 mov	 eax, DWORD PTR _number_of_points$5[ebp]
  0019a	83 c0 01	 add	 eax, 1
  0019d	89 45 e4	 mov	 DWORD PTR _number_of_points$5[ebp], eax

; 1258 : 		
; 1259 : 						vert = vert->next_vertex;

  001a0	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  001a3	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  001a6	89 4d e8	 mov	 DWORD PTR _vert$6[ebp], ecx

; 1260 : 					}

  001a9	eb e6		 jmp	 SHORT $LN5@wrender_cl
$LN6@wrender_cl:

; 1261 : 		
; 1262 : 					destination_vertices = get_d3d_vertices_points_address ( number_of_points );

  001ab	8b 45 e4	 mov	 eax, DWORD PTR _number_of_points$5[ebp]
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  001b4	89 45 dc	 mov	 DWORD PTR _destination_vertices$3[ebp], eax

; 1263 : 		
; 1264 : 					lightmap_vertices = get_temporary_translucent_polygon_vertices ();

  001b7	e8 00 00 00 00	 call	 ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
  001bc	89 45 d8	 mov	 DWORD PTR _lightmap_vertices$2[ebp], eax

; 1265 : 		
; 1266 : 					vert = poly;

  001bf	8b 45 f4	 mov	 eax, DWORD PTR _poly$[ebp]
  001c2	89 45 e8	 mov	 DWORD PTR _vert$6[ebp], eax

; 1267 : 					count = 0;

  001c5	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _count$4[ebp], 0

; 1268 : 
; 1269 : 					specular_colour.colour = d3d_fog_intensity;

  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001d1	89 45 d4	 mov	 DWORD PTR _specular_colour$1[ebp], eax
$LN7@wrender_cl:

; 1270 : 		
; 1271 : 					while ( vert )

  001d4	83 7d e8 00	 cmp	 DWORD PTR _vert$6[ebp], 0
  001d8	0f 84 91 01 00
	00		 je	 $LN8@wrender_cl

; 1272 : 					{
; 1273 : 
; 1274 : 						destination_vertices[count].sx = lightmap_vertices[count].sx = vert->i;

  001de	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  001e1	c1 e0 05	 shl	 eax, 5
  001e4	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  001e7	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  001ea	8b 52 10	 mov	 edx, DWORD PTR [edx+16]
  001ed	89 14 01	 mov	 DWORD PTR [ecx+eax], edx
  001f0	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  001f3	c1 e0 05	 shl	 eax, 5
  001f6	8b 4d e0	 mov	 ecx, DWORD PTR _count$4[ebp]
  001f9	c1 e1 05	 shl	 ecx, 5
  001fc	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$3[ebp]
  001ff	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$2[ebp]
  00202	8b 04 06	 mov	 eax, DWORD PTR [esi+eax]
  00205	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1275 : 						destination_vertices[count].sy = lightmap_vertices[count].sy = vert->j;

  00208	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  0020b	c1 e0 05	 shl	 eax, 5
  0020e	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  00211	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  00214	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00217	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx
  0021b	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  0021e	c1 e0 05	 shl	 eax, 5
  00221	8b 4d e0	 mov	 ecx, DWORD PTR _count$4[ebp]
  00224	c1 e1 05	 shl	 ecx, 5
  00227	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$3[ebp]
  0022a	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$2[ebp]
  0022d	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  00231	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 1276 : 						destination_vertices[count].sz = lightmap_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  00235	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  00238	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  0023d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  00245	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  0024d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00251	f3 0f 11 45 90	 movss	 DWORD PTR tv188[ebp], xmm0
  00256	8b 4d e0	 mov	 ecx, DWORD PTR _count$4[ebp]
  00259	c1 e1 05	 shl	 ecx, 5
  0025c	8b 55 d8	 mov	 edx, DWORD PTR _lightmap_vertices$2[ebp]
  0025f	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv188[ebp]
  00264	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0
  0026a	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  0026d	c1 e0 05	 shl	 eax, 5
  00270	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  00273	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv188[ebp]
  00278	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1277 : 						destination_vertices[count].rhw = lightmap_vertices[count].rhw = vert->q;

  0027e	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00281	c1 e0 05	 shl	 eax, 5
  00284	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  00287	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  0028a	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  0028d	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx
  00291	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00294	c1 e0 05	 shl	 eax, 5
  00297	8b 4d e0	 mov	 ecx, DWORD PTR _count$4[ebp]
  0029a	c1 e1 05	 shl	 ecx, 5
  0029d	8b 55 dc	 mov	 edx, DWORD PTR _destination_vertices$3[ebp]
  002a0	8b 75 d8	 mov	 esi, DWORD PTR _lightmap_vertices$2[ebp]
  002a3	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  002a7	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 1278 : 			
; 1279 : 						destination_vertices[count].tu = vert->u;

  002ab	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  002ae	c1 e0 05	 shl	 eax, 5
  002b1	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  002b4	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  002b7	8b 52 18	 mov	 edx, DWORD PTR [edx+24]
  002ba	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1280 : 						destination_vertices[count].tv = vert->v;

  002be	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  002c1	c1 e0 05	 shl	 eax, 5
  002c4	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  002c7	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  002ca	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  002cd	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1281 : 
; 1282 : 						lightmap_vertices[count].tu = vert->u2;

  002d1	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  002d4	c1 e0 05	 shl	 eax, 5
  002d7	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  002da	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  002dd	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  002e0	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1283 : 						lightmap_vertices[count].tv = vert->v2;

  002e4	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  002e7	c1 e0 05	 shl	 eax, 5
  002ea	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  002ed	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  002f0	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  002f3	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1284 : 
; 1285 : 						specular_colour.red = vert->specular;

  002f7	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  002fa	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  002fd	88 4d d6	 mov	 BYTE PTR _specular_colour$1[ebp+2], cl

; 1286 : 						specular_colour.green = vert->specular;

  00300	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  00303	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  00306	88 4d d5	 mov	 BYTE PTR _specular_colour$1[ebp+1], cl

; 1287 : 						specular_colour.blue = vert->specular;

  00309	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  0030c	8a 48 2d	 mov	 cl, BYTE PTR [eax+45]
  0030f	88 4d d4	 mov	 BYTE PTR _specular_colour$1[ebp], cl

; 1288 : 
; 1289 : 						destination_vertices[count].color = vert->colour;

  00312	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00315	c1 e0 05	 shl	 eax, 5
  00318	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  0031b	8b 55 e8	 mov	 edx, DWORD PTR _vert$6[ebp]
  0031e	8b 52 30	 mov	 edx, DWORD PTR [edx+48]
  00321	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1290 : 						destination_vertices[count].specular = specular_colour.colour;

  00325	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00328	c1 e0 05	 shl	 eax, 5
  0032b	8b 4d dc	 mov	 ecx, DWORD PTR _destination_vertices$3[ebp]
  0032e	8b 55 d4	 mov	 edx, DWORD PTR _specular_colour$1[ebp]
  00331	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1291 : 
; 1292 : 						lightmap_vertices[count].color = lightmap_colour.colour;

  00335	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00338	c1 e0 05	 shl	 eax, 5
  0033b	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  0033e	8b 55 ec	 mov	 edx, DWORD PTR _lightmap_colour$[ebp]
  00341	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1293 : 						lightmap_vertices[count].specular = d3d_fog_intensity;

  00345	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00348	c1 e0 05	 shl	 eax, 5
  0034b	8b 4d d8	 mov	 ecx, DWORD PTR _lightmap_vertices$2[ebp]
  0034e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00354	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1294 : 		
; 1295 : 						vert = vert->next_vertex;

  00358	8b 45 e8	 mov	 eax, DWORD PTR _vert$6[ebp]
  0035b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0035e	89 4d e8	 mov	 DWORD PTR _vert$6[ebp], ecx

; 1296 : 						count++;

  00361	8b 45 e0	 mov	 eax, DWORD PTR _count$4[ebp]
  00364	83 c0 01	 add	 eax, 1
  00367	89 45 e0	 mov	 DWORD PTR _count$4[ebp], eax

; 1297 : 					}

  0036a	e9 65 fe ff ff	 jmp	 $LN7@wrender_cl
$LN8@wrender_cl:

; 1298 : 
; 1299 : 					draw_fan_primitive ( number_of_points, destination_vertices );

  0036f	8b 45 dc	 mov	 eax, DWORD PTR _destination_vertices$3[ebp]
  00372	50		 push	 eax
  00373	8b 4d e4	 mov	 ecx, DWORD PTR _number_of_points$5[ebp]
  00376	51		 push	 ecx
  00377	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1300 : 
; 1301 : 					if ( current_object_3d_light_maps_enabled )

  0037c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  00383	74 2c		 je	 SHORT $LN18@wrender_cl

; 1302 : 					{
; 1303 : 	
; 1304 : 						add_temporary_buffered_processed_polygon ( number_of_points,

  00385	6a 01		 push	 1
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  0038c	50		 push	 eax
  0038d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  00393	51		 push	 ecx
  00394	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  0039a	52		 push	 edx
  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  003a0	50		 push	 eax
  003a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  003a7	51		 push	 ecx
  003a8	8b 55 e4	 mov	 edx, DWORD PTR _number_of_points$5[ebp]
  003ab	52		 push	 edx
  003ac	e8 00 00 00 00	 call	 ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
$LN18@wrender_cl:

; 1305 : 																						current_object_3d_luminosity_texture,
; 1306 : 																						current_object_3d_luminosity_texture_filter,
; 1307 : 																						current_object_3d_luminosity_texture_mipmap,
; 1308 : 																						current_object_3d_luminosity_texture_u_address,
; 1309 : 																						current_object_3d_luminosity_texture_v_address,
; 1310 : 																						TRUE );
; 1311 : 					}
; 1312 : 				}
; 1313 : 			}
; 1314 : 		}
; 1315 : 	}

  003b1	e9 c7 fc ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 1316 : }

  003b6	5f		 pop	 edi
  003b7	5e		 pop	 esi
  003b8	5b		 pop	 ebx
  003b9	8b e5		 mov	 esp, ebp
  003bb	5d		 pop	 ebp
  003bc	c2 04 00	 ret	 4
?wrender_clipped_3d_object_gouraud_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_gouraud_textured_lightmap_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
tv240 = -120						; size = 4
_lightmap_vertices$1 = -52				; size = 4
_destination_vertices$2 = -48				; size = 4
_count$3 = -44						; size = 4
_number_of_points$4 = -40				; size = 4
_vert$5 = -36						; size = 4
_ispecular$6 = -32					; size = 4
_specular$7 = -28					; size = 4
_triangle_count$ = -24					; size = 4
_outcode$ = -20						; size = 4
_lightmap_colour$ = -16					; size = 4
_specular_colour$ = -12					; size = 4
_colour$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_textured_lightmap_polygon, COMDAT

; 929  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 930  : 
; 931  : 	vertex
; 932  : 		*poly;
; 933  : 
; 934  : 	real_colour
; 935  : 		colour,
; 936  : 		specular_colour,
; 937  : 		lightmap_colour;
; 938  : 
; 939  : 	int
; 940  : 		outcode,
; 941  : 		triangle_count;
; 942  : 
; 943  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN9@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0e	 add	 eax, 14			; 0000000eH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@wrender_cl:

; 944  : 
; 945  : 	specular_colour.colour = d3d_fog_intensity;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00039	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 946  : 
; 947  : 	if ( current_object_3d_surface->luminous )

  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00041	66 8b 08	 mov	 cx, WORD PTR [eax]
  00044	66 c1 e9 07	 shr	 cx, 7
  00048	66 83 e1 01	 and	 cx, 1
  0004c	0f b7 d1	 movzx	 edx, cx
  0004f	85 d2		 test	 edx, edx
  00051	74 2b		 je	 SHORT $LN10@wrender_cl

; 948  : 	{
; 949  : 	
; 950  : 		colour.red = current_object_3d_surface->red;

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00058	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  0005b	88 4d fa	 mov	 BYTE PTR _colour$[ebp+2], cl

; 951  : 		colour.green = current_object_3d_surface->green;

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00063	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  00066	88 4d f9	 mov	 BYTE PTR _colour$[ebp+1], cl

; 952  : 		colour.blue = current_object_3d_surface->blue;

  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0006e	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  00071	88 4d f8	 mov	 BYTE PTR _colour$[ebp], cl

; 953  : 		colour.alpha = current_object_3d_dissolve_value;

  00074	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00079	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al

; 954  : 	}
; 955  : 	else

  0007c	eb 71		 jmp	 SHORT $LN11@wrender_cl
$LN10@wrender_cl:

; 956  : 	{
; 957  : 
; 958  : 		float
; 959  : 			specular;
; 960  : 
; 961  : 		int
; 962  : 			ispecular;
; 963  : 
; 964  : 		//
; 965  : 		// Look up the colour of the face normal
; 966  : 		//
; 967  : 
; 968  : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00083	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00086	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008c	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  0008f	89 45 f8	 mov	 DWORD PTR _colour$[ebp], eax

; 969  : 		colour.alpha = current_object_3d_dissolve_value;

  00092	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  00097	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al

; 970  : 
; 971  : 		//
; 972  : 		// Construct the specular colour
; 973  : 		//
; 974  : 	
; 975  : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0009f	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000a8	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000ae	f3 0f 11 45 e4	 movss	 DWORD PTR _specular$7[ebp], xmm0

; 976  : 	
; 977  : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  000b3	8d 45 e0	 lea	 eax, DWORD PTR _ispecular$6[ebp]
  000b6	50		 push	 eax
  000b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000bd	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  000c1	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000c5	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _specular$7[ebp]
  000ca	51		 push	 ecx
  000cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d0	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 978  : 	
; 979  : 		specular_colour.colour = d3d_fog_intensity;

  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000da	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 980  : 		specular_colour.red = ispecular;

  000dd	8a 45 e0	 mov	 al, BYTE PTR _ispecular$6[ebp]
  000e0	88 45 f6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 981  : 		specular_colour.green = ispecular;

  000e3	8a 45 e0	 mov	 al, BYTE PTR _ispecular$6[ebp]
  000e6	88 45 f5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 982  : 		specular_colour.blue = ispecular;

  000e9	8a 45 e0	 mov	 al, BYTE PTR _ispecular$6[ebp]
  000ec	88 45 f4	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN11@wrender_cl:

; 983  : 	}
; 984  : 
; 985  : 	//
; 986  : 	// Now figure out the lightmap colours
; 987  : 	//
; 988  : 
; 989  : 	lightmap_colour.red = current_object_3d_surface->red;

  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000f4	8a 48 0e	 mov	 cl, BYTE PTR [eax+14]
  000f7	88 4d f2	 mov	 BYTE PTR _lightmap_colour$[ebp+2], cl

; 990  : 	lightmap_colour.green = current_object_3d_surface->green;

  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ff	8a 48 0d	 mov	 cl, BYTE PTR [eax+13]
  00102	88 4d f1	 mov	 BYTE PTR _lightmap_colour$[ebp+1], cl

; 991  : 	lightmap_colour.blue = current_object_3d_surface->blue;

  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0010a	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  0010d	88 4d f0	 mov	 BYTE PTR _lightmap_colour$[ebp], cl

; 992  : 	lightmap_colour.alpha = 255;

  00110	c6 45 f3 ff	 mov	 BYTE PTR _lightmap_colour$[ebp+3], 255 ; 000000ffH

; 993  : 
; 994  : 	calculate_lightmap_luminous_colour ( &lightmap_colour );

  00114	8d 45 f0	 lea	 eax, DWORD PTR _lightmap_colour$[ebp]
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 ?calculate_lightmap_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_lightmap_luminous_colour

; 995  : 
; 996  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0011d	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00124	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  00126	8b 45 e8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00129	83 c0 01	 add	 eax, 1
  0012c	89 45 e8	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  0012f	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00132	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00135	83 e9 02	 sub	 ecx, 2
  00138	39 4d e8	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  0013b	0f 8d e3 02 00
	00		 jge	 $LN3@wrender_cl

; 997  : 	{
; 998  : 	
; 999  : 		poly = construct_3d_surface_dual_textured_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  00141	8d 45 ec	 lea	 eax, DWORD PTR _outcode$[ebp]
  00144	50		 push	 eax
  00145	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0014b	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0014e	52		 push	 edx
  0014f	8b 45 e8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 ?construct_3d_surface_dual_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_dual_textured_triangle_fan
  00158	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1000 : 
; 1001 : 		if ( poly )

  0015b	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0015f	0f 84 ba 02 00
	00		 je	 $LN19@wrender_cl

; 1002 : 		{
; 1003 : 	
; 1004 : 			clip_3d_coord = 0;

  00165	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 1005 : 		
; 1006 : 			if ( outcode & CLIP_HITHER )

  0016f	8b 45 ec	 mov	 eax, DWORD PTR _outcode$[ebp]
  00172	83 e0 20	 and	 eax, 32			; 00000020H
  00175	74 18		 je	 SHORT $LN14@wrender_cl

; 1007 : 			{
; 1008 : 		
; 1009 : 				poly = hither_clip_3d_dual_texture_polygon ( poly, &outcode );

  00177	8d 45 ec	 lea	 eax, DWORD PTR _outcode$[ebp]
  0017a	50		 push	 eax
  0017b	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0017e	51		 push	 ecx
  0017f	e8 00 00 00 00	 call	 ?hither_clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_dual_texture_polygon
  00184	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1010 : 		
; 1011 : 				if ( !poly )

  00187	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0018b	75 02		 jne	 SHORT $LN14@wrender_cl

; 1012 : 				{
; 1013 : 		
; 1014 : 					continue;

  0018d	eb 97		 jmp	 SHORT $LN2@wrender_cl
$LN14@wrender_cl:

; 1015 : 				}
; 1016 : 			}
; 1017 : 		
; 1018 : 			if ( outcode )

  0018f	83 7d ec 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00193	74 2d		 je	 SHORT $LN15@wrender_cl

; 1019 : 			{
; 1020 : 		
; 1021 : 				apply_perspective_to_polygon_dual_texture ( poly );

  00195	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  00198	50		 push	 eax
  00199	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_dual_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_dual_texture

; 1022 : 					
; 1023 : 				poly = clip_3d_dual_texture_polygon ( poly, outcode );

  0019e	8b 45 ec	 mov	 eax, DWORD PTR _outcode$[ebp]
  001a1	50		 push	 eax
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001a5	51		 push	 ecx
  001a6	e8 00 00 00 00	 call	 ?clip_3d_dual_texture_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_dual_texture_polygon
  001ab	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 1024 : 		
; 1025 : 				if ( !poly )

  001ae	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001b2	75 05		 jne	 SHORT $LN16@wrender_cl

; 1026 : 				{
; 1027 : 		
; 1028 : 					continue;

  001b4	e9 6d ff ff ff	 jmp	 $LN2@wrender_cl
$LN16@wrender_cl:

; 1029 : 				}
; 1030 : 		
; 1031 : 				remove_perspective_from_polygon_dual_texture ( poly );

  001b9	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_dual_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_dual_texture
$LN15@wrender_cl:

; 1032 : 			}
; 1033 : 		
; 1034 : 			if ( current_object_3d_texture->contains_alpha )

  001c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  001c7	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  001cb	66 c1 e9 07	 shr	 cx, 7
  001cf	66 83 e1 01	 and	 cx, 1
  001d3	0f b7 d1	 movzx	 edx, cx
  001d6	85 d2		 test	 edx, edx
  001d8	74 39		 je	 SHORT $LN17@wrender_cl

; 1035 : 			{
; 1036 : 		
; 1037 : 				buffer_wbuffered_flat_shaded_textured_polygon ( poly, current_object_3d_texture,

  001da	6a 00		 push	 0
  001dc	8b 45 f4	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  001df	50		 push	 eax
  001e0	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  001e3	51		 push	 ecx
  001e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  001ea	52		 push	 edx
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  001f0	50		 push	 eax
  001f1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  001f7	51		 push	 ecx
  001f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  001fe	52		 push	 edx
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  00204	50		 push	 eax
  00205	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00208	51		 push	 ecx
  00209	e8 00 00 00 00	 call	 ?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z ; buffer_wbuffered_flat_shaded_textured_polygon

; 1038 : 																				current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 1039 : 																				current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 1040 : 																				colour, specular_colour, FALSE );
; 1041 : 			}
; 1042 : 			else

  0020e	e9 0c 02 00 00	 jmp	 $LN19@wrender_cl
$LN17@wrender_cl:

; 1043 : 			{
; 1044 : 		
; 1045 : 				vertex
; 1046 : 					*vert;
; 1047 : 		
; 1048 : 				int
; 1049 : 					number_of_points,
; 1050 : 					count;
; 1051 : 		
; 1052 : 				LPD3DTLVERTEX
; 1053 : 					destination_vertices,
; 1054 : 					lightmap_vertices;
; 1055 : 		
; 1056 : 				//
; 1057 : 				// Set main polygon rendertype
; 1058 : 				//
; 1059 : 		
; 1060 : 				commit_deferred_state_changes ();

  00213	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 1061 : 		
; 1062 : 				//
; 1063 : 				// Count vertices
; 1064 : 				//
; 1065 : 		
; 1066 : 				number_of_points = 0;

  00218	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _number_of_points$4[ebp], 0

; 1067 : 		
; 1068 : 				vert = poly;

  0021f	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  00222	89 45 dc	 mov	 DWORD PTR _vert$5[ebp], eax
$LN5@wrender_cl:

; 1069 : 		
; 1070 : 				while ( vert )

  00225	83 7d dc 00	 cmp	 DWORD PTR _vert$5[ebp], 0
  00229	74 14		 je	 SHORT $LN6@wrender_cl

; 1071 : 				{
; 1072 : 		
; 1073 : 					number_of_points++;

  0022b	8b 45 d8	 mov	 eax, DWORD PTR _number_of_points$4[ebp]
  0022e	83 c0 01	 add	 eax, 1
  00231	89 45 d8	 mov	 DWORD PTR _number_of_points$4[ebp], eax

; 1074 : 		
; 1075 : 					vert = vert->next_vertex;

  00234	8b 45 dc	 mov	 eax, DWORD PTR _vert$5[ebp]
  00237	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0023a	89 4d dc	 mov	 DWORD PTR _vert$5[ebp], ecx

; 1076 : 				}

  0023d	eb e6		 jmp	 SHORT $LN5@wrender_cl
$LN6@wrender_cl:

; 1077 : 		
; 1078 : 				destination_vertices = get_d3d_vertices_points_address ( number_of_points );

  0023f	8b 45 d8	 mov	 eax, DWORD PTR _number_of_points$4[ebp]
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?get_d3d_vertices_points_address@@YGPAU_D3DTLVERTEX@@H@Z ; get_d3d_vertices_points_address
  00248	89 45 d0	 mov	 DWORD PTR _destination_vertices$2[ebp], eax

; 1079 : 		
; 1080 : 				lightmap_vertices = get_temporary_translucent_polygon_vertices ();

  0024b	e8 00 00 00 00	 call	 ?get_temporary_translucent_polygon_vertices@@YGPAU_D3DTLVERTEX@@XZ ; get_temporary_translucent_polygon_vertices
  00250	89 45 cc	 mov	 DWORD PTR _lightmap_vertices$1[ebp], eax

; 1081 : 		
; 1082 : 				vert = poly;

  00253	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  00256	89 45 dc	 mov	 DWORD PTR _vert$5[ebp], eax

; 1083 : 				count = 0;

  00259	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _count$3[ebp], 0
$LN7@wrender_cl:

; 1084 : 		
; 1085 : 				while ( vert )

  00260	83 7d dc 00	 cmp	 DWORD PTR _vert$5[ebp], 0
  00264	0f 84 73 01 00
	00		 je	 $LN8@wrender_cl

; 1086 : 				{
; 1087 : 		
; 1088 : 					destination_vertices[count].sx = lightmap_vertices[count].sx = vert->i;

  0026a	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  0026d	c1 e0 05	 shl	 eax, 5
  00270	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  00273	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  00276	8b 52 10	 mov	 edx, DWORD PTR [edx+16]
  00279	89 14 01	 mov	 DWORD PTR [ecx+eax], edx
  0027c	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  0027f	c1 e0 05	 shl	 eax, 5
  00282	8b 4d d4	 mov	 ecx, DWORD PTR _count$3[ebp]
  00285	c1 e1 05	 shl	 ecx, 5
  00288	8b 55 d0	 mov	 edx, DWORD PTR _destination_vertices$2[ebp]
  0028b	8b 75 cc	 mov	 esi, DWORD PTR _lightmap_vertices$1[ebp]
  0028e	8b 04 06	 mov	 eax, DWORD PTR [esi+eax]
  00291	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1089 : 					destination_vertices[count].sy = lightmap_vertices[count].sy = vert->j;

  00294	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00297	c1 e0 05	 shl	 eax, 5
  0029a	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  0029d	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  002a0	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  002a3	89 54 01 04	 mov	 DWORD PTR [ecx+eax+4], edx
  002a7	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  002aa	c1 e0 05	 shl	 eax, 5
  002ad	8b 4d d4	 mov	 ecx, DWORD PTR _count$3[ebp]
  002b0	c1 e1 05	 shl	 ecx, 5
  002b3	8b 55 d0	 mov	 edx, DWORD PTR _destination_vertices$2[ebp]
  002b6	8b 75 cc	 mov	 esi, DWORD PTR _lightmap_vertices$1[ebp]
  002b9	8b 44 06 04	 mov	 eax, DWORD PTR [esi+eax+4]
  002bd	89 44 0a 04	 mov	 DWORD PTR [edx+ecx+4], eax

; 1090 : 					destination_vertices[count].sz = lightmap_vertices[count].sz = ( vert->q * zbuffer_factor ) + zbuffer_constant;

  002c1	8b 45 dc	 mov	 eax, DWORD PTR _vert$5[ebp]
  002c4	f3 0f 5a 40 0c	 cvtss2sd xmm0, DWORD PTR [eax+12]
  002c9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR ?zbuffer_factor@@3NA
  002d1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR ?zbuffer_constant@@3NA
  002d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002dd	f3 0f 11 45 88	 movss	 DWORD PTR tv240[ebp], xmm0
  002e2	8b 4d d4	 mov	 ecx, DWORD PTR _count$3[ebp]
  002e5	c1 e1 05	 shl	 ecx, 5
  002e8	8b 55 cc	 mov	 edx, DWORD PTR _lightmap_vertices$1[ebp]
  002eb	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv240[ebp]
  002f0	f3 0f 11 44 0a
	08		 movss	 DWORD PTR [edx+ecx+8], xmm0
  002f6	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  002f9	c1 e0 05	 shl	 eax, 5
  002fc	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$2[ebp]
  002ff	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv240[ebp]
  00304	f3 0f 11 44 01
	08		 movss	 DWORD PTR [ecx+eax+8], xmm0

; 1091 : 					destination_vertices[count].rhw = lightmap_vertices[count].rhw = vert->q;

  0030a	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  0030d	c1 e0 05	 shl	 eax, 5
  00310	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  00313	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  00316	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00319	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx
  0031d	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00320	c1 e0 05	 shl	 eax, 5
  00323	8b 4d d4	 mov	 ecx, DWORD PTR _count$3[ebp]
  00326	c1 e1 05	 shl	 ecx, 5
  00329	8b 55 d0	 mov	 edx, DWORD PTR _destination_vertices$2[ebp]
  0032c	8b 75 cc	 mov	 esi, DWORD PTR _lightmap_vertices$1[ebp]
  0032f	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00333	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax

; 1092 : 		
; 1093 : 		
; 1094 : 					destination_vertices[count].tu = vert->u;

  00337	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  0033a	c1 e0 05	 shl	 eax, 5
  0033d	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$2[ebp]
  00340	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  00343	8b 52 18	 mov	 edx, DWORD PTR [edx+24]
  00346	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1095 : 					destination_vertices[count].tv = vert->v;

  0034a	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  0034d	c1 e0 05	 shl	 eax, 5
  00350	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$2[ebp]
  00353	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  00356	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  00359	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1096 : 
; 1097 : 					lightmap_vertices[count].tu = vert->u2;

  0035d	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00360	c1 e0 05	 shl	 eax, 5
  00363	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  00366	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  00369	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  0036c	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 1098 : 					lightmap_vertices[count].tv = vert->v2;

  00370	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00373	c1 e0 05	 shl	 eax, 5
  00376	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  00379	8b 55 dc	 mov	 edx, DWORD PTR _vert$5[ebp]
  0037c	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  0037f	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 1099 : 		
; 1100 : 					destination_vertices[count].color = colour.colour;

  00383	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00386	c1 e0 05	 shl	 eax, 5
  00389	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$2[ebp]
  0038c	8b 55 f8	 mov	 edx, DWORD PTR _colour$[ebp]
  0038f	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1101 : 					destination_vertices[count].specular = specular_colour.colour;

  00393	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  00396	c1 e0 05	 shl	 eax, 5
  00399	8b 4d d0	 mov	 ecx, DWORD PTR _destination_vertices$2[ebp]
  0039c	8b 55 f4	 mov	 edx, DWORD PTR _specular_colour$[ebp]
  0039f	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1102 : 		
; 1103 : 					lightmap_vertices[count].color = lightmap_colour.colour;

  003a3	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  003a6	c1 e0 05	 shl	 eax, 5
  003a9	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  003ac	8b 55 f0	 mov	 edx, DWORD PTR _lightmap_colour$[ebp]
  003af	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 1104 : 					lightmap_vertices[count].specular = d3d_fog_intensity;

  003b3	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  003b6	c1 e0 05	 shl	 eax, 5
  003b9	8b 4d cc	 mov	 ecx, DWORD PTR _lightmap_vertices$1[ebp]
  003bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  003c2	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 1105 : 		
; 1106 : 					vert = vert->next_vertex;

  003c6	8b 45 dc	 mov	 eax, DWORD PTR _vert$5[ebp]
  003c9	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  003cc	89 4d dc	 mov	 DWORD PTR _vert$5[ebp], ecx

; 1107 : 					count++;

  003cf	8b 45 d4	 mov	 eax, DWORD PTR _count$3[ebp]
  003d2	83 c0 01	 add	 eax, 1
  003d5	89 45 d4	 mov	 DWORD PTR _count$3[ebp], eax

; 1108 : 				}

  003d8	e9 83 fe ff ff	 jmp	 $LN7@wrender_cl
$LN8@wrender_cl:

; 1109 : 			
; 1110 : 				draw_fan_primitive ( number_of_points, destination_vertices );

  003dd	8b 45 d0	 mov	 eax, DWORD PTR _destination_vertices$2[ebp]
  003e0	50		 push	 eax
  003e1	8b 4d d8	 mov	 ecx, DWORD PTR _number_of_points$4[ebp]
  003e4	51		 push	 ecx
  003e5	e8 00 00 00 00	 call	 ?draw_fan_primitive@@YGXHPAU_D3DTLVERTEX@@@Z ; draw_fan_primitive

; 1111 : 		
; 1112 : 				if ( current_object_3d_light_maps_enabled )

  003ea	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_light_maps_enabled@@3HA, 0 ; current_object_3d_light_maps_enabled
  003f1	74 2c		 je	 SHORT $LN19@wrender_cl

; 1113 : 				{
; 1114 : 		
; 1115 : 					add_temporary_buffered_processed_polygon ( number_of_points,

  003f3	6a 01		 push	 1
  003f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_v_address@@3HA ; current_object_3d_luminosity_texture_v_address
  003fa	50		 push	 eax
  003fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture_u_address@@3HA ; current_object_3d_luminosity_texture_u_address
  00401	51		 push	 ecx
  00402	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_luminosity_texture_mipmap@@3HA ; current_object_3d_luminosity_texture_mipmap
  00408	52		 push	 edx
  00409	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_luminosity_texture_filter@@3HA ; current_object_3d_luminosity_texture_filter
  0040e	50		 push	 eax
  0040f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_luminosity_texture@@3PAUSCREEN@@A ; current_object_3d_luminosity_texture
  00415	51		 push	 ecx
  00416	8b 55 d8	 mov	 edx, DWORD PTR _number_of_points$4[ebp]
  00419	52		 push	 edx
  0041a	e8 00 00 00 00	 call	 ?add_temporary_buffered_processed_polygon@@YGXHPAUSCREEN@@HHHHH@Z ; add_temporary_buffered_processed_polygon
$LN19@wrender_cl:

; 1116 : 																					current_object_3d_luminosity_texture,
; 1117 : 																					current_object_3d_luminosity_texture_filter,
; 1118 : 																					current_object_3d_luminosity_texture_mipmap,
; 1119 : 																					current_object_3d_luminosity_texture_u_address,
; 1120 : 																					current_object_3d_luminosity_texture_v_address,
; 1121 : 																					TRUE );
; 1122 : 				}
; 1123 : 			}
; 1124 : 		}
; 1125 : 	}

  0041f	e9 02 fd ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 1126 : }

  00424	5f		 pop	 edi
  00425	5e		 pop	 esi
  00426	5b		 pop	 ebx
  00427	8b e5		 mov	 esp, ebp
  00429	5d		 pop	 ebp
  0042a	c2 04 00	 ret	 4
?wrender_clipped_3d_object_textured_lightmap_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_textured_lightmap_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_polygon_alpha$ = -16					; size = 4
_outcode$ = -12						; size = 4
_triangle_count$ = -8					; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_gouraud_white_polygon, COMDAT

; 843  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 844  : 
; 845  : 	vertex
; 846  : 		*poly;
; 847  : 
; 848  : 	int
; 849  : 		triangle_count,
; 850  : 		outcode,
; 851  : 		polygon_alpha;
; 852  : 
; 853  : 
; 854  : 	//
; 855  : 	// The face is a true polygon - triangle or above
; 856  : 	//
; 857  : 
; 858  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0f	 add	 eax, 15			; 0000000fH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 859  : 
; 860  : 	if ( current_object_3d_surface->translucent )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 06	 shr	 cx, 6
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 25		 je	 SHORT $LN6@wrender_cl

; 861  : 	{
; 862  : 
; 863  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  0004b	8d 45 f0	 lea	 eax, DWORD PTR _polygon_alpha$[ebp]
  0004e	50		 push	 eax
  0004f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00055	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  00059	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0005d	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00065	51		 push	 ecx
  00066	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006b	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int
$LN6@wrender_cl:

; 864  : 	}
; 865  : 
; 866  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00070	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00077	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  00079	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0007c	83 c0 01	 add	 eax, 1
  0007f	89 45 f8	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  00082	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00085	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00088	83 e9 02	 sub	 ecx, 2
  0008b	39 4d f8	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  0008e	0f 8d 1b 01 00
	00		 jge	 $LN3@wrender_cl

; 867  : 	{
; 868  : 
; 869  : 		poly = construct_3d_surface_gouraud_triangle_fan ( triangle_count, 0, current_object_3d_object_base->points_base, &outcode );

  00094	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  00097	50		 push	 eax
  00098	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0009e	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000a1	52		 push	 edx
  000a2	51		 push	 ecx
  000a3	0f 57 c0	 xorps	 xmm0, xmm0
  000a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z ; construct_3d_surface_gouraud_triangle_fan
  000b4	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 870  : 
; 871  : 		if ( poly )

  000b7	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000bb	0f 84 e9 00 00
	00		 je	 $LN14@wrender_cl

; 872  : 		{
; 873  : 	
; 874  : 			if ( outcode )

  000c1	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000c5	74 4b		 je	 SHORT $LN12@wrender_cl

; 875  : 			{
; 876  : 		
; 877  : 				clip_3d_coord = 0;

  000c7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 878  : 
; 879  : 				if ( outcode & CLIP_HITHER )

  000d1	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  000d4	83 e0 20	 and	 eax, 32			; 00000020H
  000d7	74 18		 je	 SHORT $LN10@wrender_cl

; 880  : 				{
; 881  : 			
; 882  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  000d9	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  000dc	50		 push	 eax
  000dd	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  000e0	51		 push	 ecx
  000e1	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  000e6	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 883  : 		
; 884  : 					if ( !poly )

  000e9	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000ed	75 02		 jne	 SHORT $LN10@wrender_cl

; 885  : 					{
; 886  : 		
; 887  : 						continue;

  000ef	eb 88		 jmp	 SHORT $LN2@wrender_cl
$LN10@wrender_cl:

; 888  : 					}
; 889  : 				}
; 890  : 			
; 891  : 				if ( outcode )

  000f1	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000f5	74 1b		 je	 SHORT $LN12@wrender_cl

; 892  : 				{
; 893  : 			
; 894  : 					poly = clip_3d_polygon ( poly, outcode );

  000f7	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  000fa	50		 push	 eax
  000fb	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  000fe	51		 push	 ecx
  000ff	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00104	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 895  : 		
; 896  : 					if ( !poly )

  00107	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0010b	75 05		 jne	 SHORT $LN12@wrender_cl

; 897  : 					{
; 898  : 		
; 899  : 						continue;

  0010d	e9 67 ff ff ff	 jmp	 $LN2@wrender_cl
$LN12@wrender_cl:

; 900  : 					}
; 901  : 				}
; 902  : 			}
; 903  : 		
; 904  : 			//
; 905  : 			// Should draw a gouraud shaded polygon
; 906  : 			//
; 907  : 	
; 908  : 			if ( current_object_3d_surface->translucent )

  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00117	66 8b 08	 mov	 cx, WORD PTR [eax]
  0011a	66 c1 e9 06	 shr	 cx, 6
  0011e	66 83 e1 01	 and	 cx, 1
  00122	0f b7 d1	 movzx	 edx, cx
  00125	85 d2		 test	 edx, edx
  00127	74 44		 je	 SHORT $LN13@wrender_cl

; 909  : 			{
; 910  : 
; 911  : 				buffer_wbuffered_gouraud_shaded_polygon ( poly, 1.0, 1.0, 1.0, polygon_alpha, 0, FALSE );

  00129	6a 00		 push	 0
  0012b	51		 push	 ecx
  0012c	0f 57 c0	 xorps	 xmm0, xmm0
  0012f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00134	8b 45 f0	 mov	 eax, DWORD PTR _polygon_alpha$[ebp]
  00137	50		 push	 eax
  00138	51		 push	 ecx
  00139	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00141	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00146	51		 push	 ecx
  00147	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0014f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00154	51		 push	 ecx
  00155	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0015d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00162	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00165	51		 push	 ecx
  00166	e8 00 00 00 00	 call	 ?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z ; buffer_wbuffered_gouraud_shaded_polygon

; 912  : 			}
; 913  : 			else

  0016b	eb 3d		 jmp	 SHORT $LN14@wrender_cl
$LN13@wrender_cl:

; 914  : 			{
; 915  : 	
; 916  : 				commit_deferred_state_changes ();

  0016d	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 917  : 
; 918  : 				draw_wbuffered_gouraud_shaded_polygon ( poly, 1.0, 1.0, 1.0, 255 );

  00172	68 ff 00 00 00	 push	 255			; 000000ffH
  00177	51		 push	 ecx
  00178	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00180	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00185	51		 push	 ecx
  00186	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0018e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00193	51		 push	 ecx
  00194	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0019c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a1	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_polygon@@YGXPAUVERTEX@@MMMH@Z ; draw_wbuffered_gouraud_shaded_polygon
$LN14@wrender_cl:

; 919  : 			}
; 920  : 		}
; 921  : 	}

  001aa	e9 ca fe ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 922  : }

  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	5b		 pop	 ebx
  001b2	8b e5		 mov	 esp, ebp
  001b4	5d		 pop	 ebp
  001b5	c2 04 00	 ret	 4
?wrender_clipped_3d_object_gouraud_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_gouraud_white_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_imixed_dissolve$1 = -24				; size = 4
_specular_colour$ = -20					; size = 4
_colour$ = -16						; size = 4
_triangle_count$ = -12					; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_white_textured_polygon, COMDAT

; 748  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 749  : 
; 750  : 	vertex
; 751  : 		*poly;
; 752  : 
; 753  : 	int
; 754  : 		outcode,
; 755  : 		triangle_count;
; 756  : 
; 757  : 	real_colour
; 758  : 		colour,
; 759  : 		specular_colour;
; 760  : 
; 761  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 762  : 
; 763  : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 13		 je	 SHORT $LN6@wrender_cl

; 764  : 	{
; 765  : 
; 766  : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f0	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 767  : 	
; 768  : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 769  : 	}
; 770  : 	else

  0005c	eb 46		 jmp	 SHORT $LN7@wrender_cl
$LN6@wrender_cl:

; 771  : 	{
; 772  : 
; 773  : 		//
; 774  : 		// Look up the colour of the face normal
; 775  : 		//
; 776  : 	
; 777  : 		colour.red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00063	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006c	8a 44 ca 02	 mov	 al, BYTE PTR [edx+ecx*8+2]
  00070	88 45 f2	 mov	 BYTE PTR _colour$[ebp+2], al

; 778  : 		colour.green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00078	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00081	8a 44 ca 01	 mov	 al, BYTE PTR [edx+ecx*8+1]
  00085	88 45 f1	 mov	 BYTE PTR _colour$[ebp+1], al

; 779  : 		colour.blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0008d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00096	8a 04 ca	 mov	 al, BYTE PTR [edx+ecx*8]
  00099	88 45 f0	 mov	 BYTE PTR _colour$[ebp], al

; 780  : 	
; 781  : 		specular_colour.colour = d3d_fog_intensity;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000a1	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax
$LN7@wrender_cl:

; 782  : 	}
; 783  : 
; 784  : 	{
; 785  : 
; 786  : 		int
; 787  : 			imixed_dissolve;
; 788  : 
; 789  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  000a4	8d 45 e8	 lea	 eax, DWORD PTR _imixed_dissolve$1[ebp]
  000a7	50		 push	 eax
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ae	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000b2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000be	51		 push	 ecx
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 790  : 		colour.alpha = imixed_dissolve;

  000c9	8a 45 e8	 mov	 al, BYTE PTR _imixed_dissolve$1[ebp]
  000cc	88 45 f3	 mov	 BYTE PTR _colour$[ebp+3], al

; 791  : 	}
; 792  : 
; 793  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  000cf	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  000d6	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  000d8	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  000db	83 c0 01	 add	 eax, 1
  000de	89 45 f4	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  000e1	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000e4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000e7	83 e9 02	 sub	 ecx, 2
  000ea	39 4d f4	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  000ed	0f 8d 8c 00 00
	00		 jge	 $LN3@wrender_cl

; 794  : 	{
; 795  : 
; 796  : 		poly = construct_3d_surface_textured_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  000f3	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000f6	50		 push	 eax
  000f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000fd	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00100	52		 push	 edx
  00101	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?construct_3d_surface_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_textured_triangle_fan
  0010a	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 797  : 
; 798  : 		if ( poly )

  0010d	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00111	74 67		 je	 SHORT $LN8@wrender_cl

; 799  : 		{
; 800  : 
; 801  : 			if ( outcode )

  00113	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00117	74 4b		 je	 SHORT $LN13@wrender_cl

; 802  : 			{
; 803  : 		
; 804  : 				clip_3d_coord = 0;

  00119	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 805  : 
; 806  : 				if ( outcode & CLIP_HITHER )

  00123	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00126	83 e0 20	 and	 eax, 32			; 00000020H
  00129	74 18		 je	 SHORT $LN11@wrender_cl

; 807  : 				{
; 808  : 			
; 809  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  0012b	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  0012e	50		 push	 eax
  0012f	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00138	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 810  : 		
; 811  : 					if ( !poly )

  0013b	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0013f	75 02		 jne	 SHORT $LN11@wrender_cl

; 812  : 					{
; 813  : 		
; 814  : 						continue;

  00141	eb 95		 jmp	 SHORT $LN2@wrender_cl
$LN11@wrender_cl:

; 815  : 					}
; 816  : 				}
; 817  : 			
; 818  : 				if ( outcode )

  00143	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00147	74 1b		 je	 SHORT $LN13@wrender_cl

; 819  : 				{
; 820  : 			
; 821  : 					poly = clip_3d_polygon ( poly, outcode );

  00149	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0014c	50		 push	 eax
  0014d	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00150	51		 push	 ecx
  00151	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00156	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 822  : 		
; 823  : 					if ( !poly )

  00159	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0015d	75 05		 jne	 SHORT $LN13@wrender_cl

; 824  : 					{
; 825  : 		
; 826  : 						continue;

  0015f	e9 74 ff ff ff	 jmp	 $LN2@wrender_cl
$LN13@wrender_cl:

; 827  : 					}
; 828  : 				}
; 829  : 			}
; 830  : 		
; 831  : 			commit_deferred_state_changes ();

  00164	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 832  : 	
; 833  : 			draw_wbuffered_flat_shaded_textured_polygon ( poly, colour, specular_colour );

  00169	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  0016c	50		 push	 eax
  0016d	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  00170	51		 push	 ecx
  00171	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  00174	52		 push	 edx
  00175	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN8@wrender_cl:

; 834  : 		}
; 835  : 	}

  0017a	e9 59 ff ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 836  : }

  0017f	5f		 pop	 edi
  00180	5e		 pop	 esi
  00181	5b		 pop	 ebx
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c2 04 00	 ret	 4
?wrender_clipped_3d_object_white_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_white_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_imixed_dissolve$1 = -24				; size = 4
_specular_colour$ = -20					; size = 4
_colour$ = -16						; size = 4
_triangle_count$ = -12					; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_white_polygon, COMDAT

; 644  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 645  : 
; 646  : 	vertex
; 647  : 		*poly;
; 648  : 
; 649  : 	int
; 650  : 		outcode,
; 651  : 		triangle_count;
; 652  : 
; 653  : 	real_colour
; 654  : 		colour,
; 655  : 		specular_colour;
; 656  : 
; 657  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 658  : 
; 659  : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 13		 je	 SHORT $LN6@wrender_cl

; 660  : 	{
; 661  : 
; 662  : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f0	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 663  : 	
; 664  : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 665  : 	}
; 666  : 	else

  0005c	eb 46		 jmp	 SHORT $LN7@wrender_cl
$LN6@wrender_cl:

; 667  : 	{
; 668  : 
; 669  : 		//
; 670  : 		// Look up the colour of the face normal
; 671  : 		//
; 672  : 	
; 673  : 		colour.red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00063	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00066	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006c	8a 44 ca 02	 mov	 al, BYTE PTR [edx+ecx*8+2]
  00070	88 45 f2	 mov	 BYTE PTR _colour$[ebp+2], al

; 674  : 		colour.green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  00073	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00078	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  0007b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00081	8a 44 ca 01	 mov	 al, BYTE PTR [edx+ecx*8+1]
  00085	88 45 f1	 mov	 BYTE PTR _colour$[ebp+1], al

; 675  : 		colour.blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0008d	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00090	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  00096	8a 04 ca	 mov	 al, BYTE PTR [edx+ecx*8]
  00099	88 45 f0	 mov	 BYTE PTR _colour$[ebp], al

; 676  : 	
; 677  : 		specular_colour.colour = d3d_fog_intensity;

  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000a1	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax
$LN7@wrender_cl:

; 678  : 	}
; 679  : 
; 680  : 	{
; 681  : 
; 682  : 		int
; 683  : 			imixed_dissolve;
; 684  : 
; 685  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  000a4	8d 45 e8	 lea	 eax, DWORD PTR _imixed_dissolve$1[ebp]
  000a7	50		 push	 eax
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000ae	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000b2	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000b6	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000be	51		 push	 ecx
  000bf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c4	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 686  : 		colour.alpha = imixed_dissolve;

  000c9	8a 45 e8	 mov	 al, BYTE PTR _imixed_dissolve$1[ebp]
  000cc	88 45 f3	 mov	 BYTE PTR _colour$[ebp+3], al

; 687  : 	}
; 688  : 
; 689  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  000cf	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  000d6	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  000d8	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  000db	83 c0 01	 add	 eax, 1
  000de	89 45 f4	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  000e1	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000e4	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000e7	83 e9 02	 sub	 ecx, 2
  000ea	39 4d f4	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  000ed	0f 8d ce 00 00
	00		 jge	 $LN3@wrender_cl

; 690  : 	{
; 691  : 
; 692  : 		poly = construct_3d_surface_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  000f3	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000f6	50		 push	 eax
  000f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000fd	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00100	52		 push	 edx
  00101	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?construct_3d_surface_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_triangle_fan
  0010a	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 693  : 
; 694  : 		if ( poly )

  0010d	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00111	0f 84 a5 00 00
	00		 je	 $LN15@wrender_cl

; 695  : 		{
; 696  : 
; 697  : 			if ( outcode )

  00117	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0011b	74 4b		 je	 SHORT $LN13@wrender_cl

; 698  : 			{
; 699  : 		
; 700  : 				clip_3d_coord = 0;

  0011d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 701  : 
; 702  : 				if ( outcode & CLIP_HITHER )

  00127	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0012a	83 e0 20	 and	 eax, 32			; 00000020H
  0012d	74 18		 je	 SHORT $LN11@wrender_cl

; 703  : 				{
; 704  : 			
; 705  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  0012f	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00132	50		 push	 eax
  00133	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00136	51		 push	 ecx
  00137	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0013c	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 706  : 		
; 707  : 					if ( !poly )

  0013f	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00143	75 02		 jne	 SHORT $LN11@wrender_cl

; 708  : 					{
; 709  : 		
; 710  : 						continue;

  00145	eb 91		 jmp	 SHORT $LN2@wrender_cl
$LN11@wrender_cl:

; 711  : 					}
; 712  : 				}
; 713  : 			
; 714  : 				if ( outcode )

  00147	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0014b	74 1b		 je	 SHORT $LN13@wrender_cl

; 715  : 				{
; 716  : 			
; 717  : 					poly = clip_3d_polygon ( poly, outcode );

  0014d	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00150	50		 push	 eax
  00151	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00154	51		 push	 ecx
  00155	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  0015a	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 718  : 		
; 719  : 					if ( !poly )

  0015d	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00161	75 05		 jne	 SHORT $LN13@wrender_cl

; 720  : 					{
; 721  : 		
; 722  : 						continue;

  00163	e9 70 ff ff ff	 jmp	 $LN2@wrender_cl
$LN13@wrender_cl:

; 723  : 					}
; 724  : 				}
; 725  : 			}
; 726  : 		
; 727  : 			if ( current_object_3d_surface->translucent )

  00168	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0016d	66 8b 08	 mov	 cx, WORD PTR [eax]
  00170	66 c1 e9 06	 shr	 cx, 6
  00174	66 83 e1 01	 and	 cx, 1
  00178	0f b7 d1	 movzx	 edx, cx
  0017b	85 d2		 test	 edx, edx
  0017d	74 27		 je	 SHORT $LN14@wrender_cl

; 728  : 			{
; 729  : 		
; 730  : 				buffer_wbuffered_plain_polygon ( poly, colour, specular_colour, current_object_3d_surface->additive );

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00184	66 8b 08	 mov	 cx, WORD PTR [eax]
  00187	66 c1 e9 05	 shr	 cx, 5
  0018b	66 83 e1 01	 and	 cx, 1
  0018f	0f b7 d1	 movzx	 edx, cx
  00192	52		 push	 edx
  00193	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  00196	50		 push	 eax
  00197	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  0019a	51		 push	 ecx
  0019b	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  0019e	52		 push	 edx
  0019f	e8 00 00 00 00	 call	 ?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z ; buffer_wbuffered_plain_polygon

; 731  : 			}
; 732  : 			else

  001a4	eb 16		 jmp	 SHORT $LN15@wrender_cl
$LN14@wrender_cl:

; 733  : 			{
; 734  : 		
; 735  : 				commit_deferred_state_changes ();

  001a6	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 736  : 		
; 737  : 				draw_wbuffered_plain_polygon ( poly, colour, specular_colour );

  001ab	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  001ae	50		 push	 eax
  001af	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  001b2	51		 push	 ecx
  001b3	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  001b6	52		 push	 edx
  001b7	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_plain_polygon
$LN15@wrender_cl:

; 738  : 			}
; 739  : 		}
; 740  : 	}

  001bc	e9 17 ff ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 741  : }

  001c1	5f		 pop	 edi
  001c2	5e		 pop	 esi
  001c3	5b		 pop	 ebx
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c2 04 00	 ret	 4
?wrender_clipped_3d_object_white_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_white_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_surface_specular$ = -32				; size = 4
_surface_blue$ = -28					; size = 4
_surface_green$ = -24					; size = 4
_surface_red$ = -20					; size = 4
_polygon_alpha$ = -16					; size = 4
_outcode$ = -12						; size = 4
_triangle_count$ = -8					; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_gouraud_polygon, COMDAT

; 537  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 538  : 
; 539  : 	vertex
; 540  : 		*poly;
; 541  : 
; 542  : 	int
; 543  : 		triangle_count,
; 544  : 		outcode,
; 545  : 		polygon_alpha;
; 546  : 
; 547  : 	float
; 548  : 		surface_red,
; 549  : 		surface_green,
; 550  : 		surface_blue,
; 551  : 		surface_specular;
; 552  : 
; 553  : 
; 554  : 	//
; 555  : 	// The face is a true polygon - triangle or above
; 556  : 	//
; 557  : 
; 558  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 15	 add	 eax, 21			; 00000015H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 559  : 
; 560  : 	surface_red = ( ( float ) current_object_3d_surface->red ) / 255.0;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	0f b6 48 0e	 movzx	 ecx, BYTE PTR [eax+14]
  0003d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00041	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00045	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0004d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00051	f3 0f 11 45 ec	 movss	 DWORD PTR _surface_red$[ebp], xmm0

; 561  : 	surface_green = ( ( float ) current_object_3d_surface->green ) / 255.0;

  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0005b	0f b6 48 0d	 movzx	 ecx, BYTE PTR [eax+13]
  0005f	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00063	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00067	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0006f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00073	f3 0f 11 45 e8	 movss	 DWORD PTR _surface_green$[ebp], xmm0

; 562  : 	surface_blue = ( ( float ) current_object_3d_surface->blue ) / 255.0;

  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0007d	0f b6 48 0c	 movzx	 ecx, BYTE PTR [eax+12]
  00081	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00085	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00089	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00091	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00095	f3 0f 11 45 e4	 movss	 DWORD PTR _surface_blue$[ebp], xmm0

; 563  : 
; 564  : 	if ( current_object_3d_specular )

  0009a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_object_3d_specular@@3HA, 0 ; current_object_3d_specular
  000a1	74 14		 je	 SHORT $LN6@wrender_cl

; 565  : 	{
; 566  : 
; 567  : 		surface_specular = ( float ) current_object_3d_surface->specularity;

  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000a8	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  000ac	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  000b0	f3 0f 11 45 e0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0

; 568  : 	}
; 569  : 	else

  000b5	eb 08		 jmp	 SHORT $LN7@wrender_cl
$LN6@wrender_cl:

; 570  : 	{
; 571  : 
; 572  : 		surface_specular = 0;

  000b7	0f 57 c0	 xorps	 xmm0, xmm0
  000ba	f3 0f 11 45 e0	 movss	 DWORD PTR _surface_specular$[ebp], xmm0
$LN7@wrender_cl:

; 573  : 	}
; 574  : 
; 575  : 	if ( current_object_3d_surface->translucent )

  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c4	66 8b 08	 mov	 cx, WORD PTR [eax]
  000c7	66 c1 e9 06	 shr	 cx, 6
  000cb	66 83 e1 01	 and	 cx, 1
  000cf	0f b7 d1	 movzx	 edx, cx
  000d2	85 d2		 test	 edx, edx
  000d4	74 25		 je	 SHORT $LN8@wrender_cl

; 576  : 	{
; 577  : 
; 578  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &polygon_alpha );

  000d6	8d 45 f0	 lea	 eax, DWORD PTR _polygon_alpha$[ebp]
  000d9	50		 push	 eax
  000da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000e0	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  000e4	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  000e8	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000f0	51		 push	 ecx
  000f1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f6	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int
$LN8@wrender_cl:

; 579  : 	}
; 580  : 
; 581  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  000fb	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00102	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  00104	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00107	83 c0 01	 add	 eax, 1
  0010a	89 45 f8	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  0010d	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00110	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00113	83 e9 02	 sub	 ecx, 2
  00116	39 4d f8	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00119	0f 8d 0d 01 00
	00		 jge	 $LN3@wrender_cl

; 582  : 	{
; 583  : 
; 584  : 		poly = construct_3d_surface_gouraud_triangle_fan ( triangle_count, surface_specular, current_object_3d_object_base->points_base, &outcode );

  0011f	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  00122	50		 push	 eax
  00123	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00129	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0012c	52		 push	 edx
  0012d	51		 push	 ecx
  0012e	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _surface_specular$[ebp]
  00133	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00138	8b 45 f8	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_triangle_fan@@YGPAUVERTEX@@HMHPAH@Z ; construct_3d_surface_gouraud_triangle_fan
  00141	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 585  : 
; 586  : 		if ( poly )

  00144	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00148	0f 84 d9 00 00
	00		 je	 $LN16@wrender_cl

; 587  : 		{
; 588  : 	
; 589  : 			if ( outcode )

  0014e	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00152	74 4b		 je	 SHORT $LN14@wrender_cl

; 590  : 			{
; 591  : 		
; 592  : 				clip_3d_coord = 0;

  00154	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 593  : 
; 594  : 				if ( outcode & CLIP_HITHER )

  0015e	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  00161	83 e0 20	 and	 eax, 32			; 00000020H
  00164	74 18		 je	 SHORT $LN12@wrender_cl

; 595  : 				{
; 596  : 			
; 597  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  00166	8d 45 f4	 lea	 eax, DWORD PTR _outcode$[ebp]
  00169	50		 push	 eax
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0016d	51		 push	 ecx
  0016e	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  00173	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 598  : 		
; 599  : 					if ( !poly )

  00176	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  0017a	75 02		 jne	 SHORT $LN12@wrender_cl

; 600  : 					{
; 601  : 		
; 602  : 						continue;

  0017c	eb 86		 jmp	 SHORT $LN2@wrender_cl
$LN12@wrender_cl:

; 603  : 					}
; 604  : 				}
; 605  : 			
; 606  : 				if ( outcode )

  0017e	83 7d f4 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00182	74 1b		 je	 SHORT $LN14@wrender_cl

; 607  : 				{
; 608  : 			
; 609  : 					poly = clip_3d_polygon ( poly, outcode );

  00184	8b 45 f4	 mov	 eax, DWORD PTR _outcode$[ebp]
  00187	50		 push	 eax
  00188	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  0018b	51		 push	 ecx
  0018c	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00191	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 610  : 		
; 611  : 					if ( !poly )

  00194	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00198	75 05		 jne	 SHORT $LN14@wrender_cl

; 612  : 					{
; 613  : 		
; 614  : 						continue;

  0019a	e9 65 ff ff ff	 jmp	 $LN2@wrender_cl
$LN14@wrender_cl:

; 615  : 					}
; 616  : 				}
; 617  : 			}
; 618  : 		
; 619  : 			//
; 620  : 			// Should draw a gouraud shaded polygon
; 621  : 			//
; 622  : 	
; 623  : 			if ( current_object_3d_surface->translucent )

  0019f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001a4	66 8b 08	 mov	 cx, WORD PTR [eax]
  001a7	66 c1 e9 06	 shr	 cx, 6
  001ab	66 83 e1 01	 and	 cx, 1
  001af	0f b7 d1	 movzx	 edx, cx
  001b2	85 d2		 test	 edx, edx
  001b4	74 3d		 je	 SHORT $LN15@wrender_cl

; 624  : 			{
; 625  : 
; 626  : 				buffer_wbuffered_gouraud_shaded_polygon ( poly, surface_red, surface_green, surface_blue, polygon_alpha, surface_specular, FALSE );

  001b6	6a 00		 push	 0
  001b8	51		 push	 ecx
  001b9	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _surface_specular$[ebp]
  001be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c3	8b 45 f0	 mov	 eax, DWORD PTR _polygon_alpha$[ebp]
  001c6	50		 push	 eax
  001c7	51		 push	 ecx
  001c8	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _surface_blue$[ebp]
  001cd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d2	51		 push	 ecx
  001d3	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _surface_green$[ebp]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	51		 push	 ecx
  001de	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _surface_red$[ebp]
  001e3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e8	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001eb	51		 push	 ecx
  001ec	e8 00 00 00 00	 call	 ?buffer_wbuffered_gouraud_shaded_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@MMMHMH@Z ; buffer_wbuffered_gouraud_shaded_polygon

; 627  : 			}
; 628  : 			else

  001f1	eb 34		 jmp	 SHORT $LN16@wrender_cl
$LN15@wrender_cl:

; 629  : 			{
; 630  : 	
; 631  : 				commit_deferred_state_changes ();

  001f3	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 632  : 
; 633  : 				draw_wbuffered_gouraud_shaded_polygon ( poly, surface_red, surface_green, surface_blue, 255 );

  001f8	68 ff 00 00 00	 push	 255			; 000000ffH
  001fd	51		 push	 ecx
  001fe	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _surface_blue$[ebp]
  00203	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00208	51		 push	 ecx
  00209	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _surface_green$[ebp]
  0020e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00213	51		 push	 ecx
  00214	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _surface_red$[ebp]
  00219	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021e	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_polygon@@YGXPAUVERTEX@@MMMH@Z ; draw_wbuffered_gouraud_shaded_polygon
$LN16@wrender_cl:

; 634  : 			}
; 635  : 		}
; 636  : 	}

  00227	e9 d8 fe ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 637  : }

  0022c	5f		 pop	 edi
  0022d	5e		 pop	 esi
  0022e	5b		 pop	 ebx
  0022f	8b e5		 mov	 esp, ebp
  00231	5d		 pop	 ebp
  00232	c2 04 00	 ret	 4
?wrender_clipped_3d_object_gouraud_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_gouraud_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_imixed_dissolve$1 = -56				; size = 4
_ispecular$2 = -52					; size = 4
_ib$3 = -48						; size = 4
_ig$4 = -44						; size = 4
_ir$5 = -40						; size = 4
_specular$6 = -36					; size = 4
_blue$7 = -32						; size = 4
_green$8 = -28						; size = 4
_red$9 = -24						; size = 4
_specular_colour$ = -20					; size = 4
_colour$ = -16						; size = 4
_triangle_count$ = -12					; size = 4
_outcode$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_polygon, COMDAT

; 316  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 317  : 
; 318  : 	vertex
; 319  : 		*poly;
; 320  : 
; 321  : 	int
; 322  : 		outcode,
; 323  : 		triangle_count;
; 324  : 
; 325  : 	real_colour
; 326  : 		colour,
; 327  : 		specular_colour;
; 328  : 
; 329  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 330  : 
; 331  : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 16		 je	 SHORT $LN6@wrender_cl

; 332  : 	{
; 333  : 
; 334  : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f0	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 335  : 
; 336  : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 337  : 	}
; 338  : 	else

  0005c	e9 62 01 00 00	 jmp	 $LN7@wrender_cl
$LN6@wrender_cl:

; 339  : 	{
; 340  : 
; 341  : 		float
; 342  : 			red,
; 343  : 			green,
; 344  : 			blue,
; 345  : 			specular;
; 346  : 
; 347  : 		int
; 348  : 			ir,
; 349  : 			ig,
; 350  : 			ib,
; 351  : 			ispecular;
; 352  : 
; 353  : 		//
; 354  : 		// Look up the colour of the face normal
; 355  : 		//
; 356  : 	
; 357  : 		red = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].r;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00066	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006f	0f b6 44 ca 02	 movzx	 eax, BYTE PTR [edx+ecx*8+2]
  00074	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00078	f3 0f 11 45 e8	 movss	 DWORD PTR _red$9[ebp], xmm0

; 358  : 		green = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].g;

  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00082	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00085	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0008b	0f b6 44 ca 01	 movzx	 eax, BYTE PTR [edx+ecx*8+1]
  00090	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00094	f3 0f 11 45 e4	 movss	 DWORD PTR _green$8[ebp], xmm0

; 359  : 		blue = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].b;

  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  0009e	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000a7	0f b6 04 ca	 movzx	 eax, BYTE PTR [edx+ecx*8]
  000ab	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000af	f3 0f 11 45 e0	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 360  : 		specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000b9	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000c2	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000c8	f3 0f 11 45 dc	 movss	 DWORD PTR _specular$6[ebp], xmm0

; 361  : 	
; 362  : 		red /= 255.0;

  000cd	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _red$9[ebp]
  000d2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000da	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000de	f3 0f 11 45 e8	 movss	 DWORD PTR _red$9[ebp], xmm0

; 363  : 		green /= 255.0;

  000e3	f3 0f 5a 45 e4	 cvtss2sd xmm0, DWORD PTR _green$8[ebp]
  000e8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000f0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000f4	f3 0f 11 45 e4	 movss	 DWORD PTR _green$8[ebp], xmm0

; 364  : 		blue /= 255.0;

  000f9	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _blue$7[ebp]
  000fe	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00106	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010a	f3 0f 11 45 e0	 movss	 DWORD PTR _blue$7[ebp], xmm0

; 365  : 	
; 366  : 		asm_convert_float_to_int ( ( red * current_object_3d_surface->red ), &ir );

  0010f	8d 45 d8	 lea	 eax, DWORD PTR _ir$5[ebp]
  00112	50		 push	 eax
  00113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00119	0f b6 51 0e	 movzx	 edx, BYTE PTR [ecx+14]
  0011d	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00121	f3 0f 59 45 e8	 mulss	 xmm0, DWORD PTR _red$9[ebp]
  00126	51		 push	 ecx
  00127	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012c	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 367  : 		asm_convert_float_to_int ( ( green * current_object_3d_surface->green ), &ig );

  00131	8d 45 d4	 lea	 eax, DWORD PTR _ig$4[ebp]
  00134	50		 push	 eax
  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0013b	0f b6 51 0d	 movzx	 edx, BYTE PTR [ecx+13]
  0013f	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00143	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _green$8[ebp]
  00148	51		 push	 ecx
  00149	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014e	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 368  : 		asm_convert_float_to_int ( ( blue * current_object_3d_surface->blue ), &ib );

  00153	8d 45 d0	 lea	 eax, DWORD PTR _ib$3[ebp]
  00156	50		 push	 eax
  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0015d	0f b6 51 0c	 movzx	 edx, BYTE PTR [ecx+12]
  00161	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00165	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _blue$7[ebp]
  0016a	51		 push	 ecx
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 369  : 		asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  00175	8d 45 cc	 lea	 eax, DWORD PTR _ispecular$2[ebp]
  00178	50		 push	 eax
  00179	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0017f	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00183	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  00187	f3 0f 59 45 dc	 mulss	 xmm0, DWORD PTR _specular$6[ebp]
  0018c	51		 push	 ecx
  0018d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00192	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 370  : 	
; 371  : 		colour.red = ir;

  00197	8a 45 d8	 mov	 al, BYTE PTR _ir$5[ebp]
  0019a	88 45 f2	 mov	 BYTE PTR _colour$[ebp+2], al

; 372  : 		colour.green = ig;

  0019d	8a 45 d4	 mov	 al, BYTE PTR _ig$4[ebp]
  001a0	88 45 f1	 mov	 BYTE PTR _colour$[ebp+1], al

; 373  : 		colour.blue = ib;

  001a3	8a 45 d0	 mov	 al, BYTE PTR _ib$3[ebp]
  001a6	88 45 f0	 mov	 BYTE PTR _colour$[ebp], al

; 374  : 
; 375  : 		specular_colour.colour = d3d_fog_intensity;

  001a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  001ae	89 45 ec	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 376  : 		specular_colour.red = ispecular;

  001b1	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001b4	88 45 ee	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 377  : 		specular_colour.green = ispecular;

  001b7	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001ba	88 45 ed	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 378  : 		specular_colour.blue = ispecular;

  001bd	8a 45 cc	 mov	 al, BYTE PTR _ispecular$2[ebp]
  001c0	88 45 ec	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN7@wrender_cl:

; 379  : 	}
; 380  : 
; 381  : 	{
; 382  : 
; 383  : 		int
; 384  : 			imixed_dissolve;
; 385  : 
; 386  : 		asm_convert_float_to_int ( ( current_object_3d_surface->alpha * current_object_3d_dissolve_factor ), &imixed_dissolve );

  001c3	8d 45 c8	 lea	 eax, DWORD PTR _imixed_dissolve$1[ebp]
  001c6	50		 push	 eax
  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001cd	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  001d1	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  001d5	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  001dd	51		 push	 ecx
  001de	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e3	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 387  : 		colour.alpha = imixed_dissolve;

  001e8	8a 45 c8	 mov	 al, BYTE PTR _imixed_dissolve$1[ebp]
  001eb	88 45 f3	 mov	 BYTE PTR _colour$[ebp+3], al

; 388  : 	}
; 389  : 
; 390  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  001ee	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  001f5	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  001f7	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  001fa	83 c0 01	 add	 eax, 1
  001fd	89 45 f4	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  00200	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  00203	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  00206	83 e9 02	 sub	 ecx, 2
  00209	39 4d f4	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  0020c	0f 8d bc 00 00
	00		 jge	 $LN3@wrender_cl

; 391  : 	{
; 392  : 
; 393  : 		poly = construct_3d_surface_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  00212	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00215	50		 push	 eax
  00216	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  0021c	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0021f	52		 push	 edx
  00220	8b 45 f4	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?construct_3d_surface_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_triangle_fan
  00229	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 394  : 
; 395  : 		if ( poly )

  0022c	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00230	0f 84 93 00 00
	00		 je	 $LN15@wrender_cl

; 396  : 		{
; 397  : 
; 398  : 			if ( outcode )

  00236	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0023a	74 4b		 je	 SHORT $LN13@wrender_cl

; 399  : 			{
; 400  : 		
; 401  : 				clip_3d_coord = 0;

  0023c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 402  : 
; 403  : 				if ( outcode & CLIP_HITHER )

  00246	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00249	83 e0 20	 and	 eax, 32			; 00000020H
  0024c	74 18		 je	 SHORT $LN11@wrender_cl

; 404  : 				{
; 405  : 			
; 406  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  0024e	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00251	50		 push	 eax
  00252	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00255	51		 push	 ecx
  00256	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0025b	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 407  : 		
; 408  : 					if ( !poly )

  0025e	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00262	75 02		 jne	 SHORT $LN11@wrender_cl

; 409  : 					{
; 410  : 		
; 411  : 						continue;

  00264	eb 91		 jmp	 SHORT $LN2@wrender_cl
$LN11@wrender_cl:

; 412  : 					}
; 413  : 				}
; 414  : 			
; 415  : 				if ( outcode )

  00266	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  0026a	74 1b		 je	 SHORT $LN13@wrender_cl

; 416  : 				{
; 417  : 			
; 418  : 					poly = clip_3d_polygon ( poly, outcode );

  0026c	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  0026f	50		 push	 eax
  00270	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00273	51		 push	 ecx
  00274	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00279	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 419  : 		
; 420  : 					if ( !poly )

  0027c	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00280	75 05		 jne	 SHORT $LN13@wrender_cl

; 421  : 					{
; 422  : 		
; 423  : 						continue;

  00282	e9 70 ff ff ff	 jmp	 $LN2@wrender_cl
$LN13@wrender_cl:

; 424  : 					}
; 425  : 				}
; 426  : 			}
; 427  : 		
; 428  : 			if ( current_object_3d_surface->translucent )

  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0028c	66 8b 08	 mov	 cx, WORD PTR [eax]
  0028f	66 c1 e9 06	 shr	 cx, 6
  00293	66 83 e1 01	 and	 cx, 1
  00297	0f b7 d1	 movzx	 edx, cx
  0029a	85 d2		 test	 edx, edx
  0029c	74 15		 je	 SHORT $LN14@wrender_cl

; 429  : 			{
; 430  : 		
; 431  : 				buffer_wbuffered_plain_polygon ( poly, colour, specular_colour, FALSE );	//current_object_3d_surface->additive );

  0029e	6a 00		 push	 0
  002a0	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  002a3	50		 push	 eax
  002a4	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  002a7	51		 push	 ecx
  002a8	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  002ab	52		 push	 edx
  002ac	e8 00 00 00 00	 call	 ?buffer_wbuffered_plain_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@UREAL_COLOUR@@1H@Z ; buffer_wbuffered_plain_polygon

; 432  : 			}
; 433  : 			else

  002b1	eb 16		 jmp	 SHORT $LN15@wrender_cl
$LN14@wrender_cl:

; 434  : 			{
; 435  : 
; 436  : 				commit_deferred_state_changes ();

  002b3	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 437  : 		
; 438  : 				draw_wbuffered_plain_polygon ( poly, colour, specular_colour );

  002b8	8b 45 ec	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  002bb	50		 push	 eax
  002bc	8b 4d f0	 mov	 ecx, DWORD PTR _colour$[ebp]
  002bf	51		 push	 ecx
  002c0	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  002c3	52		 push	 edx
  002c4	e8 00 00 00 00	 call	 ?draw_wbuffered_plain_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_plain_polygon
$LN15@wrender_cl:

; 439  : 			}
; 440  : 		}
; 441  : 	}

  002c9	e9 29 ff ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 442  : 
; 443  : /*
; 444  : 	if ( current_object_3d_surface->reflectivity != 0.0 )
; 445  : 	{
; 446  : 
; 447  : 		matrix3x3
; 448  : 			reflection_matrix;
; 449  : 
; 450  : 		int
; 451  : 			count,
; 452  : 			normal_index;
; 453  : 
; 454  : 		vec3d
; 455  : 			camera_position,
; 456  : 			reflected_ray;
; 457  : 
; 458  : 		float
; 459  : 			model_x,
; 460  : 			model_y,
; 461  : 			model_z,
; 462  : 			u,
; 463  : 			v;
; 464  : 
; 465  : 		vertex
; 466  : 			*this_point;
; 467  : 
; 468  : 		normal_index = current_object_3d_face_normal_list->point;
; 469  : 
; 470  : 		get_reflection_matrix ( reflection_matrix, &objects_3d_data[current_object_3d_object_base->object_number].point_normals[normal_index] );
; 471  : 
; 472  : 		camera_position = current_object_3d_object_base->camera_position;
; 473  : 
; 474  : 		//
; 475  : 		// Now get the u,v coordinates
; 476  : 		//
; 477  : 
; 478  : 		this_point = poly;
; 479  : 
; 480  : 		for ( count = 0; count < this_face->number_of_points; count++ )
; 481  : 		{
; 482  : 
; 483  : 			vec3d
; 484  : 				ray;
; 485  : 
; 486  : 			model_x = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].x;
; 487  : 			model_y = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].y;
; 488  : 			model_z = objects_3d_data[current_object_3d_object_base->object_number].points[current_object_3d_point_list[count].point].z;
; 489  : 	
; 490  : 			ray.x = camera_position.x - model_x;
; 491  : 			ray.y = camera_position.y - model_y;
; 492  : 			ray.z = camera_position.z - model_z;
; 493  : 
; 494  : 			multiply_matrix3x3_vec3d ( &reflected_ray, reflection_matrix, &ray );
; 495  : 	
; 496  : 			normalise_any_3d_vector ( &reflected_ray );
; 497  : 	
; 498  : 			u = atan2 ( reflected_ray.x, reflected_ray.z );
; 499  : 			v = asin ( reflected_ray.y );
; 500  : 
; 501  : 			this_point->u = u / PI2;
; 502  : 			this_point->v = v / PI2;
; 503  : 
; 504  : 			this_point = this_point->next_vertex;
; 505  : 		}
; 506  : 	}
; 507  : 	*/
; 508  : 
; 509  : 	//
; 510  : 	// Should draw a light sourced plain polygon
; 511  : 	//
; 512  : 
; 513  : /*
; 514  : 	if ( current_object_3d_surface->reflectivity != 0.0 )
; 515  : 	{
; 516  : 
; 517  : 		real_colour
; 518  : 			this_colour;
; 519  : 
; 520  : 		this_colour.red = 255;
; 521  : 		this_colour.green = 255;
; 522  : 		this_colour.blue = 255;
; 523  : 		this_colour.alpha = 255;
; 524  : 
; 525  : 		buffer_sorted_translucent_flat_shaded_textured_polygon ( poly, &system_textures[TEXTURE_INDEX_CLOUDDRY],
; 526  : 																					D3DFILTER_LINEAR, D3DFILTER_NEAREST, D3DTADDRESS_WRAP,
; 527  : 																					this_colour, FALSE );
; 528  : 	}
; 529  : 	*/
; 530  : }

  002ce	5f		 pop	 edi
  002cf	5e		 pop	 esi
  002d0	5b		 pop	 ebx
  002d1	8b e5		 mov	 esp, ebp
  002d3	5d		 pop	 ebp
  002d4	c2 04 00	 ret	 4
?wrender_clipped_3d_object_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_poly$ = -20						; size = 4
_specular$ = -16					; size = 4
_alpha$ = -12						; size = 4
_outcode$ = -8						; size = 4
_triangle_count$ = -4					; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_gouraud_textured_polygon, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 
; 215  : 	int
; 216  : 		triangle_count,
; 217  : 		outcode,
; 218  : 		alpha;
; 219  : 
; 220  : 	float
; 221  : 		specular;
; 222  : 
; 223  : 	vertex
; 224  : 		*poly;
; 225  : 
; 226  : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 227  : 
; 228  : 	specular = current_object_3d_surface->specularity;

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	0f b6 48 0b	 movzx	 ecx, BYTE PTR [eax+11]
  0003d	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00041	f3 0f 11 45 f0	 movss	 DWORD PTR _specular$[ebp], xmm0

; 229  : 
; 230  : 	if ( current_object_3d_surface->translucent )

  00046	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0004b	66 8b 08	 mov	 cx, WORD PTR [eax]
  0004e	66 c1 e9 06	 shr	 cx, 6
  00052	66 83 e1 01	 and	 cx, 1
  00056	0f b7 d1	 movzx	 edx, cx
  00059	85 d2		 test	 edx, edx
  0005b	74 27		 je	 SHORT $LN6@wrender_cl

; 231  : 	{
; 232  : 
; 233  : 		asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &alpha );

  0005d	8d 45 f4	 lea	 eax, DWORD PTR _alpha$[ebp]
  00060	50		 push	 eax
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00067	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  0006b	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0006f	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  00077	51		 push	 ecx
  00078	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007d	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 234  : 	}
; 235  : 	else

  00082	eb 0a		 jmp	 SHORT $LN7@wrender_cl
$LN6@wrender_cl:

; 236  : 	{
; 237  : 
; 238  : 		alpha = current_object_3d_dissolve_value;

  00084	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  0008b	89 45 f4	 mov	 DWORD PTR _alpha$[ebp], eax
$LN7@wrender_cl:

; 239  : 	}
; 240  : 	
; 241  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  0008e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  00095	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  00097	8b 45 fc	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0009a	83 c0 01	 add	 eax, 1
  0009d	89 45 fc	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  000a0	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  000a3	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  000a6	83 e9 02	 sub	 ecx, 2
  000a9	39 4d fc	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  000ac	0f 8d 11 01 00
	00		 jge	 $LN3@wrender_cl

; 242  : 	{
; 243  : 
; 244  : 		poly = construct_3d_surface_gouraud_textured_triangle_fan ( triangle_count, specular, alpha, current_object_3d_object_base->points_base, &outcode );

  000b2	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  000b5	50		 push	 eax
  000b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  000bc	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  000bf	52		 push	 edx
  000c0	8b 45 f4	 mov	 eax, DWORD PTR _alpha$[ebp]
  000c3	50		 push	 eax
  000c4	51		 push	 ecx
  000c5	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _specular$[ebp]
  000ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _triangle_count$[ebp]
  000d2	51		 push	 ecx
  000d3	e8 00 00 00 00	 call	 ?construct_3d_surface_gouraud_textured_triangle_fan@@YGPAUVERTEX@@HMHHPAH@Z ; construct_3d_surface_gouraud_textured_triangle_fan
  000d8	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 245  : 
; 246  : 		if ( poly )

  000db	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  000df	0f 84 d9 00 00
	00		 je	 $LN15@wrender_cl

; 247  : 		{
; 248  : 
; 249  : 			if ( outcode )

  000e5	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  000e9	74 5d		 je	 SHORT $LN12@wrender_cl

; 250  : 			{
; 251  : 		
; 252  : 				clip_3d_coord = 0;

  000eb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 253  : 
; 254  : 				if ( outcode & CLIP_HITHER )

  000f5	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  000f8	83 e0 20	 and	 eax, 32			; 00000020H
  000fb	74 18		 je	 SHORT $LN11@wrender_cl

; 255  : 				{
; 256  : 			
; 257  : 					poly = hither_clip_3d_polygon ( poly, &outcode );

  000fd	8d 45 f8	 lea	 eax, DWORD PTR _outcode$[ebp]
  00100	50		 push	 eax
  00101	8b 4d ec	 mov	 ecx, DWORD PTR _poly$[ebp]
  00104	51		 push	 ecx
  00105	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0010a	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 258  : 		
; 259  : 					if ( !poly )

  0010d	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00111	75 02		 jne	 SHORT $LN11@wrender_cl

; 260  : 					{
; 261  : 		
; 262  : 						continue;

  00113	eb 82		 jmp	 SHORT $LN2@wrender_cl
$LN11@wrender_cl:

; 263  : 					}
; 264  : 				}
; 265  : 			
; 266  : 				if ( outcode )

  00115	83 7d f8 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  00119	74 2d		 je	 SHORT $LN12@wrender_cl

; 267  : 				{
; 268  : 		
; 269  : 					apply_perspective_to_polygon_texture ( poly );

  0011b	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 270  : 						
; 271  : 					poly = clip_3d_polygon ( poly, outcode );

  00124	8b 45 f8	 mov	 eax, DWORD PTR _outcode$[ebp]
  00127	50		 push	 eax
  00128	8b 4d ec	 mov	 ecx, DWORD PTR _poly$[ebp]
  0012b	51		 push	 ecx
  0012c	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  00131	89 45 ec	 mov	 DWORD PTR _poly$[ebp], eax

; 272  : 		
; 273  : 					if ( !poly )

  00134	83 7d ec 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00138	75 05		 jne	 SHORT $LN13@wrender_cl

; 274  : 					{
; 275  : 		
; 276  : 						continue;

  0013a	e9 58 ff ff ff	 jmp	 $LN2@wrender_cl
$LN13@wrender_cl:

; 277  : 					}
; 278  : 		
; 279  : 					remove_perspective_from_polygon_texture ( poly );

  0013f	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN12@wrender_cl:

; 280  : 				}
; 281  : 			}
; 282  : 		
; 283  : 
; 284  : 			if ( ( current_object_3d_texture->contains_alpha ) || ( current_object_3d_surface->translucent ) )

  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0014d	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00151	66 c1 e9 07	 shr	 cx, 7
  00155	66 83 e1 01	 and	 cx, 1
  00159	0f b7 d1	 movzx	 edx, cx
  0015c	85 d2		 test	 edx, edx
  0015e	75 17		 jne	 SHORT $LN16@wrender_cl
  00160	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00165	66 8b 08	 mov	 cx, WORD PTR [eax]
  00168	66 c1 e9 06	 shr	 cx, 6
  0016c	66 83 e1 01	 and	 cx, 1
  00170	0f b7 d1	 movzx	 edx, cx
  00173	85 d2		 test	 edx, edx
  00175	74 39		 je	 SHORT $LN14@wrender_cl
$LN16@wrender_cl:

; 285  : 			{
; 286  : 
; 287  : 				//
; 288  : 				// Should draw a transparent gouraud shaded textured polygon ( not additive - its gouraud shaded )
; 289  : 				//
; 290  : 
; 291  : 				buffer_wbuffered_gouraud_shaded_textured_polygon ( poly, current_object_3d_texture,

  00177	8b 45 f4	 mov	 eax, DWORD PTR _alpha$[ebp]
  0017a	50		 push	 eax
  0017b	6a 00		 push	 0
  0017d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_specular@@3HA ; current_object_3d_specular
  00183	51		 push	 ecx
  00184	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  0018a	52		 push	 edx
  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  00190	50		 push	 eax
  00191	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00197	51		 push	 ecx
  00198	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  0019e	52		 push	 edx
  0019f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  001a4	50		 push	 eax
  001a5	8b 4d ec	 mov	 ecx, DWORD PTR _poly$[ebp]
  001a8	51		 push	 ecx
  001a9	e8 00 00 00 00	 call	 ?buffer_wbuffered_gouraud_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHHHH@Z ; buffer_wbuffered_gouraud_shaded_textured_polygon

; 292  : 																					current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 293  : 																					current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 294  : 																					current_object_3d_specular, FALSE, alpha );
; 295  : 			}
; 296  : 			else

  001ae	eb 0e		 jmp	 SHORT $LN15@wrender_cl
$LN14@wrender_cl:

; 297  : 			{
; 298  : 
; 299  : 				//
; 300  : 				// Should draw a solid gouraud shaded textured polygon
; 301  : 				//
; 302  : 
; 303  : 				commit_deferred_state_changes ();

  001b0	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 304  : 
; 305  : 				draw_wbuffered_gouraud_shaded_textured_polygon ( poly );

  001b5	8b 45 ec	 mov	 eax, DWORD PTR _poly$[ebp]
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?draw_wbuffered_gouraud_shaded_textured_polygon@@YGXPAUVERTEX@@@Z ; draw_wbuffered_gouraud_shaded_textured_polygon
$LN15@wrender_cl:

; 306  : 			}
; 307  : 		}
; 308  : 	}

  001be	e9 d4 fe ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 309  : }

  001c3	5f		 pop	 edi
  001c4	5e		 pop	 esi
  001c5	5b		 pop	 ebx
  001c6	8b e5		 mov	 esp, ebp
  001c8	5d		 pop	 ebp
  001c9	c2 04 00	 ret	 4
?wrender_clipped_3d_object_gouraud_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_gouraud_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3dwface1.c
;	COMDAT ?wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z
_TEXT	SEGMENT
_ispecular$1 = -32					; size = 4
_specular$2 = -28					; size = 4
_ialpha$3 = -24						; size = 4
_triangle_count$ = -20					; size = 4
_outcode$ = -16						; size = 4
_specular_colour$ = -12					; size = 4
_colour$ = -8						; size = 4
_poly$ = -4						; size = 4
_this_face$ = 8						; size = 4
?wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z PROC ; wrender_clipped_3d_object_textured_polygon, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	vertex
; 77   : 		*poly;
; 78   : 
; 79   : 	real_colour
; 80   : 		colour,
; 81   : 		specular_colour;
; 82   : 
; 83   : 	int
; 84   : 		outcode,
; 85   : 		triangle_count;
; 86   : 
; 87   : 	ASSERT ( current_object_3d_surface->polygons );

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0000e	66 8b 08	 mov	 cx, WORD PTR [eax]
  00011	66 83 e1 01	 and	 cx, 1
  00015	0f b7 d1	 movzx	 edx, cx
  00018	85 d2		 test	 edx, edx
  0001a	75 18		 jne	 SHORT $LN5@wrender_cl
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z@4JA
  00021	83 c0 0d	 add	 eax, 13			; 0000000dH
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@PBLNBMPD@c?3?2users?2nhv90?2projects?2eech?2mo@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@EODDNGAD@current_object_3d_surface?9?$DOpoly@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@wrender_cl:

; 88   : 
; 89   : 	if ( current_object_3d_surface->luminous )

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00039	66 8b 08	 mov	 cx, WORD PTR [eax]
  0003c	66 c1 e9 07	 shr	 cx, 7
  00040	66 83 e1 01	 and	 cx, 1
  00044	0f b7 d1	 movzx	 edx, cx
  00047	85 d2		 test	 edx, edx
  00049	74 16		 je	 SHORT $LN6@wrender_cl

; 90   : 	{
; 91   : 
; 92   : 		calculate_luminous_colour ( &colour );

  0004b	8d 45 f8	 lea	 eax, DWORD PTR _colour$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_luminous_colour@@YGXPAUREAL_COLOUR@@@Z ; calculate_luminous_colour

; 93   : 
; 94   : 		specular_colour.colour = d3d_fog_intensity;

  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00059	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 95   : 	}
; 96   : 	else

  0005c	e9 d6 00 00 00	 jmp	 $LN11@wrender_cl
$LN6@wrender_cl:

; 97   : 	{
; 98   : 
; 99   : 		//
; 100  : 		// Look up the colour of the face normal
; 101  : 		//
; 102  : 
; 103  : 		colour.colour = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].colour;

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  00066	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00069	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  0006f	8b 04 ca	 mov	 eax, DWORD PTR [edx+ecx*8]
  00072	89 45 f8	 mov	 DWORD PTR _colour$[ebp], eax

; 104  : 
; 105  : 		if ( current_object_3d_surface->translucent )

  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  0007a	66 8b 08	 mov	 cx, WORD PTR [eax]
  0007d	66 c1 e9 06	 shr	 cx, 6
  00081	66 83 e1 01	 and	 cx, 1
  00085	0f b7 d1	 movzx	 edx, cx
  00088	85 d2		 test	 edx, edx
  0008a	74 2d		 je	 SHORT $LN8@wrender_cl

; 106  : 		{
; 107  : 
; 108  : 			int
; 109  : 				ialpha;
; 110  : 
; 111  : 			asm_convert_float_to_int ( ( ( ( float ) current_object_3d_surface->alpha ) * current_object_3d_dissolve_factor ), &ialpha );

  0008c	8d 45 e8	 lea	 eax, DWORD PTR _ialpha$3[ebp]
  0008f	50		 push	 eax
  00090	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00096	0f b6 51 0f	 movzx	 edx, BYTE PTR [ecx+15]
  0009a	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0009e	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR ?current_object_3d_dissolve_factor@@3MA
  000a6	51		 push	 ecx
  000a7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ac	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 112  : 
; 113  : 			colour.alpha = ialpha;

  000b1	8a 45 e8	 mov	 al, BYTE PTR _ialpha$3[ebp]
  000b4	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al

; 114  : 		}
; 115  : 		else

  000b7	eb 08		 jmp	 SHORT $LN9@wrender_cl
$LN8@wrender_cl:

; 116  : 		{
; 117  : 
; 118  : 			colour.alpha = current_object_3d_dissolve_value;

  000b9	a0 00 00 00 00	 mov	 al, BYTE PTR ?current_object_3d_dissolve_value@@3EA ; current_object_3d_dissolve_value
  000be	88 45 fb	 mov	 BYTE PTR _colour$[ebp+3], al
$LN9@wrender_cl:

; 119  : 		}
; 120  : 
; 121  : 		//
; 122  : 		// Construct the specular colour
; 123  : 		//
; 124  : 
; 125  : 		if ( current_object_3d_surface->additive )

  000c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  000c6	66 8b 08	 mov	 cx, WORD PTR [eax]
  000c9	66 c1 e9 05	 shr	 cx, 5
  000cd	66 83 e1 01	 and	 cx, 1
  000d1	0f b7 d1	 movzx	 edx, cx
  000d4	85 d2		 test	 edx, edx
  000d6	74 0a		 je	 SHORT $LN10@wrender_cl

; 126  : 		{
; 127  : 	
; 128  : 			specular_colour.colour = d3d_fog_intensity;

  000d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  000dd	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 129  : 		}
; 130  : 		else

  000e0	eb 55		 jmp	 SHORT $LN11@wrender_cl
$LN10@wrender_cl:

; 131  : 		{
; 132  : 	
; 133  : 			float
; 134  : 				specular;
; 135  : 	
; 136  : 			int
; 137  : 				ispecular;
; 138  : 	
; 139  : 			specular = current_object_3d_transformed_normals[current_object_3d_face_normal_list->point].specular;

  000e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_face_normal_list@@3PAUPOINT_3D_PLAIN_REFERENCE@@A ; current_object_3d_face_normal_list
  000e7	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_transformed_normals@@3PAUOBJECT_3D_TRANSFORMED_POINT_NORMAL@@A ; current_object_3d_transformed_normals
  000f0	f3 0f 10 44 ca
	04		 movss	 xmm0, DWORD PTR [edx+ecx*8+4]
  000f6	f3 0f 11 45 e4	 movss	 DWORD PTR _specular$2[ebp], xmm0

; 140  : 	
; 141  : 			asm_convert_float_to_int ( ( specular * current_object_3d_surface->specularity ), &ispecular );

  000fb	8d 45 e0	 lea	 eax, DWORD PTR _ispecular$1[ebp]
  000fe	50		 push	 eax
  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00105	0f b6 51 0b	 movzx	 edx, BYTE PTR [ecx+11]
  00109	f3 0f 2a c2	 cvtsi2ss xmm0, edx
  0010d	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _specular$2[ebp]
  00112	51		 push	 ecx
  00113	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00118	e8 00 00 00 00	 call	 ?asm_convert_float_to_int@@YGXMPAH@Z ; asm_convert_float_to_int

; 142  : 	
; 143  : 			specular_colour.colour = d3d_fog_intensity;

  0011d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?d3d_fog_intensity@@3KA ; d3d_fog_intensity
  00122	89 45 f4	 mov	 DWORD PTR _specular_colour$[ebp], eax

; 144  : 			specular_colour.red = ispecular;

  00125	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  00128	88 45 f6	 mov	 BYTE PTR _specular_colour$[ebp+2], al

; 145  : 			specular_colour.green = ispecular;

  0012b	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  0012e	88 45 f5	 mov	 BYTE PTR _specular_colour$[ebp+1], al

; 146  : 			specular_colour.blue = ispecular;

  00131	8a 45 e0	 mov	 al, BYTE PTR _ispecular$1[ebp]
  00134	88 45 f4	 mov	 BYTE PTR _specular_colour$[ebp], al
$LN11@wrender_cl:

; 147  : 		}
; 148  : 	}
; 149  : 
; 150  : 			
; 151  : 	for ( triangle_count = 0; triangle_count < ( this_face->number_of_points - 2 ); triangle_count++ )

  00137	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _triangle_count$[ebp], 0
  0013e	eb 09		 jmp	 SHORT $LN4@wrender_cl
$LN2@wrender_cl:
  00140	8b 45 ec	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  00143	83 c0 01	 add	 eax, 1
  00146	89 45 ec	 mov	 DWORD PTR _triangle_count$[ebp], eax
$LN4@wrender_cl:
  00149	8b 45 08	 mov	 eax, DWORD PTR _this_face$[ebp]
  0014c	0f b6 08	 movzx	 ecx, BYTE PTR [eax]
  0014f	83 e9 02	 sub	 ecx, 2
  00152	39 4d ec	 cmp	 DWORD PTR _triangle_count$[ebp], ecx
  00155	0f 8d 2a 01 00
	00		 jge	 $LN3@wrender_cl

; 152  : 	{
; 153  : 	
; 154  : 		poly = construct_3d_surface_textured_triangle_fan ( triangle_count, current_object_3d_object_base->points_base, &outcode );

  0015b	8d 45 f0	 lea	 eax, DWORD PTR _outcode$[ebp]
  0015e	50		 push	 eax
  0015f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_object_base@@3PAUOBJECT_3D_INFO@@A ; current_object_3d_object_base
  00165	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00168	52		 push	 edx
  00169	8b 45 ec	 mov	 eax, DWORD PTR _triangle_count$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?construct_3d_surface_textured_triangle_fan@@YGPAUVERTEX@@HHPAH@Z ; construct_3d_surface_textured_triangle_fan
  00172	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 155  : 
; 156  : 		if ( poly )

  00175	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  00179	0f 84 01 01 00
	00		 je	 $LN18@wrender_cl

; 157  : 		{
; 158  : 	
; 159  : 			clip_3d_coord = 0;

  0017f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?clip_3d_coord@@3HA, 0 ; clip_3d_coord

; 160  : 		
; 161  : 			if ( outcode & CLIP_HITHER )

  00189	8b 45 f0	 mov	 eax, DWORD PTR _outcode$[ebp]
  0018c	83 e0 20	 and	 eax, 32			; 00000020H
  0018f	74 18		 je	 SHORT $LN14@wrender_cl

; 162  : 			{
; 163  : 		
; 164  : 				poly = hither_clip_3d_polygon ( poly, &outcode );

  00191	8d 45 f0	 lea	 eax, DWORD PTR _outcode$[ebp]
  00194	50		 push	 eax
  00195	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00198	51		 push	 ecx
  00199	e8 00 00 00 00	 call	 ?hither_clip_3d_polygon@@YGPAUVERTEX@@PAU1@PAH@Z ; hither_clip_3d_polygon
  0019e	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 165  : 		
; 166  : 				if ( !poly )

  001a1	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001a5	75 02		 jne	 SHORT $LN14@wrender_cl

; 167  : 				{
; 168  : 		
; 169  : 					continue;

  001a7	eb 97		 jmp	 SHORT $LN2@wrender_cl
$LN14@wrender_cl:

; 170  : 				}
; 171  : 			}
; 172  : 		
; 173  : 			if ( outcode )

  001a9	83 7d f0 00	 cmp	 DWORD PTR _outcode$[ebp], 0
  001ad	74 2d		 je	 SHORT $LN15@wrender_cl

; 174  : 			{
; 175  : 		
; 176  : 				apply_perspective_to_polygon_texture ( poly );

  001af	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001b2	50		 push	 eax
  001b3	e8 00 00 00 00	 call	 ?apply_perspective_to_polygon_texture@@YGXPAUVERTEX@@@Z ; apply_perspective_to_polygon_texture

; 177  : 					
; 178  : 				poly = clip_3d_polygon ( poly, outcode );

  001b8	8b 45 f0	 mov	 eax, DWORD PTR _outcode$[ebp]
  001bb	50		 push	 eax
  001bc	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  001bf	51		 push	 ecx
  001c0	e8 00 00 00 00	 call	 ?clip_3d_polygon@@YGPAUVERTEX@@PAU1@H@Z ; clip_3d_polygon
  001c5	89 45 fc	 mov	 DWORD PTR _poly$[ebp], eax

; 179  : 		
; 180  : 				if ( !poly )

  001c8	83 7d fc 00	 cmp	 DWORD PTR _poly$[ebp], 0
  001cc	75 05		 jne	 SHORT $LN16@wrender_cl

; 181  : 				{
; 182  : 		
; 183  : 					continue;

  001ce	e9 6d ff ff ff	 jmp	 $LN2@wrender_cl
$LN16@wrender_cl:

; 184  : 				}
; 185  : 		
; 186  : 				remove_perspective_from_polygon_texture ( poly );

  001d3	8b 45 fc	 mov	 eax, DWORD PTR _poly$[ebp]
  001d6	50		 push	 eax
  001d7	e8 00 00 00 00	 call	 ?remove_perspective_from_polygon_texture@@YGXPAUVERTEX@@@Z ; remove_perspective_from_polygon_texture
$LN15@wrender_cl:

; 187  : 			}
; 188  : 		
; 189  : 			if ( ( current_object_3d_surface->additive ) || ( current_object_3d_surface->translucent ) || ( current_object_3d_texture->contains_alpha ) )

  001dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001e1	66 8b 08	 mov	 cx, WORD PTR [eax]
  001e4	66 c1 e9 05	 shr	 cx, 5
  001e8	66 83 e1 01	 and	 cx, 1
  001ec	0f b7 d1	 movzx	 edx, cx
  001ef	85 d2		 test	 edx, edx
  001f1	75 2f		 jne	 SHORT $LN19@wrender_cl
  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  001f8	66 8b 08	 mov	 cx, WORD PTR [eax]
  001fb	66 c1 e9 06	 shr	 cx, 6
  001ff	66 83 e1 01	 and	 cx, 1
  00203	0f b7 d1	 movzx	 edx, cx
  00206	85 d2		 test	 edx, edx
  00208	75 18		 jne	 SHORT $LN19@wrender_cl
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0020f	66 8b 48 0a	 mov	 cx, WORD PTR [eax+10]
  00213	66 c1 e9 07	 shr	 cx, 7
  00217	66 83 e1 01	 and	 cx, 1
  0021b	0f b7 d1	 movzx	 edx, cx
  0021e	85 d2		 test	 edx, edx
  00220	74 48		 je	 SHORT $LN17@wrender_cl
$LN19@wrender_cl:

; 190  : 			{
; 191  : 		
; 192  : 				buffer_wbuffered_flat_shaded_textured_polygon ( poly, current_object_3d_texture,

  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_surface@@3PAUFACE_SURFACE_DESCRIPTION@@A ; current_object_3d_surface
  00227	66 8b 08	 mov	 cx, WORD PTR [eax]
  0022a	66 c1 e9 05	 shr	 cx, 5
  0022e	66 83 e1 01	 and	 cx, 1
  00232	0f b7 d1	 movzx	 edx, cx
  00235	52		 push	 edx
  00236	8b 45 f4	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  00239	50		 push	 eax
  0023a	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  0023d	51		 push	 ecx
  0023e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_v_address@@3HA ; current_object_3d_texture_v_address
  00244	52		 push	 edx
  00245	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture_u_address@@3HA ; current_object_3d_texture_u_address
  0024a	50		 push	 eax
  0024b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_object_3d_texture_mipmap@@3HA ; current_object_3d_texture_mipmap
  00251	51		 push	 ecx
  00252	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_object_3d_texture_filter@@3HA ; current_object_3d_texture_filter
  00258	52		 push	 edx
  00259	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_object_3d_texture@@3PAUSCREEN@@A ; current_object_3d_texture
  0025e	50		 push	 eax
  0025f	8b 4d fc	 mov	 ecx, DWORD PTR _poly$[ebp]
  00262	51		 push	 ecx
  00263	e8 00 00 00 00	 call	 ?buffer_wbuffered_flat_shaded_textured_polygon@@YGPAUBUFFERED_POLYGON@@PAUVERTEX@@PAUSCREEN@@HHHHUREAL_COLOUR@@2H@Z ; buffer_wbuffered_flat_shaded_textured_polygon

; 193  : 																				current_object_3d_texture_filter, current_object_3d_texture_mipmap,
; 194  : 																				current_object_3d_texture_u_address, current_object_3d_texture_v_address,
; 195  : 																				colour, specular_colour, current_object_3d_surface->additive );
; 196  : 			}
; 197  : 			else

  00268	eb 16		 jmp	 SHORT $LN18@wrender_cl
$LN17@wrender_cl:

; 198  : 			{
; 199  : 
; 200  : 				commit_deferred_state_changes ();

  0026a	e8 00 00 00 00	 call	 ?commit_deferred_state_changes@@YGXXZ ; commit_deferred_state_changes

; 201  : 
; 202  : 				draw_wbuffered_flat_shaded_textured_polygon ( poly, colour, specular_colour );

  0026f	8b 45 f4	 mov	 eax, DWORD PTR _specular_colour$[ebp]
  00272	50		 push	 eax
  00273	8b 4d f8	 mov	 ecx, DWORD PTR _colour$[ebp]
  00276	51		 push	 ecx
  00277	8b 55 fc	 mov	 edx, DWORD PTR _poly$[ebp]
  0027a	52		 push	 edx
  0027b	e8 00 00 00 00	 call	 ?draw_wbuffered_flat_shaded_textured_polygon@@YGXPAUVERTEX@@UREAL_COLOUR@@1@Z ; draw_wbuffered_flat_shaded_textured_polygon
$LN18@wrender_cl:

; 203  : 			}
; 204  : 		}
; 205  : 	}

  00280	e9 bb fe ff ff	 jmp	 $LN2@wrender_cl
$LN3@wrender_cl:

; 206  : }

  00285	5f		 pop	 edi
  00286	5e		 pop	 esi
  00287	5b		 pop	 ebx
  00288	8b e5		 mov	 esp, ebp
  0028a	5d		 pop	 ebp
  0028b	c2 04 00	 ret	 4
?wrender_clipped_3d_object_textured_polygon@@YGXPAUOBJECT_3D_FACE@@@Z ENDP ; wrender_clipped_3d_object_textured_polygon
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\system\fpu.h
;	COMDAT ?asm_convert_float_to_int@@YGXMPAH@Z
_TEXT	SEGMENT
_value$ = 8						; size = 4
_integer$ = 12						; size = 4
?asm_convert_float_to_int@@YGXMPAH@Z PROC		; asm_convert_float_to_int, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 131  : 
; 132  : 	__asm
; 133  : 	{
; 134  : 
; 135  : 		fld value

  00009	d9 45 08	 fld	 DWORD PTR _value$[ebp]

; 136  : 		mov edx, integer

  0000c	8b 55 0c	 mov	 edx, DWORD PTR _integer$[ebp]

; 137  : 		fistp dword ptr [edx]

  0000f	db 1a		 fistp	 DWORD PTR [edx]

; 138  : 	}
; 139  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 08 00	 ret	 8
?asm_convert_float_to_int@@YGXMPAH@Z ENDP		; asm_convert_float_to_int
_TEXT	ENDS
END
