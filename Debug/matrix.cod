; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\maths\matrix.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?identity_matrix3x3@@3PAY02MA			; identity_matrix3x3
PUBLIC	?double_identity_matrix3x3@@3PAY02NA		; double_identity_matrix3x3
_DATA	SEGMENT
?identity_matrix3x3@@3PAY02MA DD 03f800000r	; 1	; identity_matrix3x3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
	ORG $+4
?double_identity_matrix3x3@@3PAY02NA DQ 03ff0000000000000r ; 1 ; double_identity_matrix3x3
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	03ff0000000000000r		; 1
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	00000000000000000r		; 0
	DQ	03ff0000000000000r		; 1
_DATA	ENDS
PUBLIC	_asinf
PUBLIC	_atan2f
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_sinf
PUBLIC	?asin@@YGMM@Z					; asin
PUBLIC	?atan2@@YGMMM@Z					; atan2
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z	; get_3d_transformation_matrix
PUBLIC	?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix_fast
PUBLIC	?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z ; get_3d_transformation_heading_pitch_matrix
PUBLIC	?get_3d_transformation_heading_matrix@@YGXQAY02MM@Z ; get_3d_transformation_heading_matrix
PUBLIC	?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z ; get_arbitrary_rotation_matrix
PUBLIC	?get_4d_transformation_matrix@@YGXQAY03MMMMPBUVEC3D@@@Z ; get_4d_transformation_matrix
PUBLIC	?get_4d_projection_matrix@@YGXQAY03MMMMM@Z	; get_4d_projection_matrix
PUBLIC	?get_reflection_matrix@@YGXQAY02MPBUVEC3D@@@Z	; get_reflection_matrix
PUBLIC	?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_matrix3x3_vec3d
PUBLIC	?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ; multiply_transpose_matrix3x3_vec3d
PUBLIC	?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3
PUBLIC	?multiply_transpose_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_transpose_matrix3x3_matrix3x3
PUBLIC	?multiply_matrix3x3_transpose_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_transpose_matrix3x3
PUBLIC	?multiply_matrix4x4_matrix4x4@@YGXQAY03MQAY03$$CBM1@Z ; multiply_matrix4x4_matrix4x4
PUBLIC	?multiply_matrix4x4_vec4d@@YGXPAUVEC4D@@QAY03$$CBMPBU1@@Z ; multiply_matrix4x4_vec4d
PUBLIC	?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ; multiply_matrix3x3_matrix3x3_2d
PUBLIC	?get_identity_matrix3x3@@YGXQAY02M@Z		; get_identity_matrix3x3
PUBLIC	?get_inverse_matrix@@YGXQAY02MQAY02$$CBM@Z	; get_inverse_matrix
PUBLIC	?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ; get_matrix3x3_from_unit_vec3d
PUBLIC	?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z ; get_matrix3x3_from_unit_vec3d_and_roll
PUBLIC	?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z ; get_3d_transformation_matrix_from_face_normal_and_heading
PUBLIC	?check_identity_matrix3x3@@YGHQAY02$$CBM@Z	; check_identity_matrix3x3
PUBLIC	?multiply_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z ; multiply_double_matrix3x3_double_vec3d
PUBLIC	?multiply_transpose_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z ; multiply_transpose_double_matrix3x3_double_vec3d
PUBLIC	?multiply_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ; multiply_double_matrix3x3_double_matrix3x3
PUBLIC	?multiply_transpose_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ; multiply_transpose_double_matrix3x3_double_matrix3x3
PUBLIC	?multiply_double_matrix3x3_transpose_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ; multiply_double_matrix3x3_transpose_double_matrix3x3
PUBLIC	?get_arbitrary_rotation_double_matrix@@YGXQAY02NPBUDOUBLE_VEC3D@@M@Z ; get_arbitrary_rotation_double_matrix
PUBLIC	?get_identity_double_matrix3x3@@YGXQAY02N@Z	; get_identity_double_matrix3x3
PUBLIC	?get_double_matrix3x3_from_unit_double_vec3d@@YGXQAY02NPBUDOUBLE_VEC3D@@@Z ; get_double_matrix3x3_from_unit_double_vec3d
PUBLIC	?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z ; get_3d_transformation_double_matrix
PUBLIC	?get_double_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z ; get_double_matrix3x3_from_unit_double_vec3d_and_roll
PUBLIC	?get_inverse_double_matrix@@YGXQAY02NQAY02$$CBN@Z ; get_inverse_double_matrix
PUBLIC	?get_3d_transformation_double_matrix_from_face_normal_and_heading@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z ; get_3d_transformation_double_matrix_from_face_normal_and_heading
PUBLIC	?get_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02MPBUDOUBLE_VEC3D@@N@Z ; get_matrix3x3_from_unit_double_vec3d_and_roll
PUBLIC	?multiply_transpose_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z ; multiply_transpose_double_matrix3x3_vec3d
PUBLIC	?multiply_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z ; multiply_double_matrix3x3_vec3d
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40845f306446f9b4
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_memcmp:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_asin:PROC
EXTRN	_atan2:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	_tan:PROC
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?normalise_3d_vector@@YGMPAUVEC3D@@@Z:PROC	; normalise_3d_vector
EXTRN	?get_3d_vector_cross_product@@YGXPAUVEC3D@@PBU1@1@Z:PROC ; get_3d_vector_cross_product
EXTRN	?normalise_any_3d_double_vector@@YGNPAUDOUBLE_VEC3D@@@Z:PROC ; normalise_any_3d_double_vector
EXTRN	?get_3d_double_vector_cross_product@@YGXPAUDOUBLE_VEC3D@@PBU1@1@Z:PROC ; get_3d_double_vector_cross_product
EXTRN	_memset:PROC
EXTRN	?sine_table@@3PAMA:BYTE				; sine_table
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@40845f306446f9b4
CONST	SEGMENT
__real@40845f306446f9b4 DQ 040845f306446f9b4r	; 651.899
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1a36e2eb1c432d
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z
_TEXT	SEGMENT
_temp$ = -12						; size = 12
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z PROC ; multiply_double_matrix3x3_vec3d, COMDAT

; 1199 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1200 : 
; 1201 : 	vec3d
; 1202 : 		temp;
; 1203 : 
; 1204 : 	temp.x = v->x * m[0][0];

  00009	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00010	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00015	6b d1 00	 imul	 edx, ecx, 0
  00018	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  0001b	b8 08 00 00 00	 mov	 eax, 8
  00020	6b c8 00	 imul	 ecx, eax, 0
  00023	f2 0f 59 04 0a	 mulsd	 xmm0, QWORD PTR [edx+ecx]
  00028	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002c	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1205 : 	temp.x += v->y * m[1][0];

  00031	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00034	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00039	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0003e	c1 e1 00	 shl	 ecx, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00044	ba 08 00 00 00	 mov	 edx, 8
  00049	6b c2 00	 imul	 eax, edx, 0
  0004c	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  00051	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00056	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0005a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1206 : 	temp.x += v->z * m[2][0];

  00063	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00066	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0006b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00070	d1 e1		 shl	 ecx, 1
  00072	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00075	ba 08 00 00 00	 mov	 edx, 8
  0007a	6b c2 00	 imul	 eax, edx, 0
  0007d	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  00082	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00087	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0008b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0008f	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1207 : 
; 1208 : 	temp.y = v->x * m[0][1];

  00094	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00097	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0009b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000a0	6b d1 00	 imul	 edx, ecx, 0
  000a3	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  000a6	b8 08 00 00 00	 mov	 eax, 8
  000ab	c1 e0 00	 shl	 eax, 0
  000ae	f2 0f 59 04 02	 mulsd	 xmm0, QWORD PTR [edx+eax]
  000b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b7	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1209 : 	temp.y += v->y * m[1][1];

  000bc	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000bf	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  000c4	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000c9	c1 e1 00	 shl	 ecx, 0
  000cc	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  000cf	ba 08 00 00 00	 mov	 edx, 8
  000d4	c1 e2 00	 shl	 edx, 0
  000d7	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  000dc	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  000e1	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000e5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000e9	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1210 : 	temp.y += v->z * m[2][1];

  000ee	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000f1	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000f6	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000fb	d1 e1		 shl	 ecx, 1
  000fd	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00100	ba 08 00 00 00	 mov	 edx, 8
  00105	c1 e2 00	 shl	 edx, 0
  00108	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  0010d	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  00112	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00116	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0011a	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1211 : 
; 1212 : 	temp.z = v->x * m[0][2];

  0011f	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00122	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00126	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0012b	6b d1 00	 imul	 edx, ecx, 0
  0012e	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  00131	b8 08 00 00 00	 mov	 eax, 8
  00136	d1 e0		 shl	 eax, 1
  00138	f2 0f 59 04 02	 mulsd	 xmm0, QWORD PTR [edx+eax]
  0013d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00141	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1213 : 	temp.z += v->y * m[1][2];

  00146	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00149	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  0014e	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00153	c1 e1 00	 shl	 ecx, 0
  00156	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00159	ba 08 00 00 00	 mov	 edx, 8
  0015e	d1 e2		 shl	 edx, 1
  00160	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  00165	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0016a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0016e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00172	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1214 : 	temp.z += v->z * m[2][2];

  00177	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0017a	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0017f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00184	d1 e1		 shl	 ecx, 1
  00186	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00189	ba 08 00 00 00	 mov	 edx, 8
  0018e	d1 e2		 shl	 edx, 1
  00190	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  00195	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0019a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0019e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001a2	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1215 : 
; 1216 : 	result->x = temp.x;

  001a7	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001aa	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _temp$[ebp]
  001af	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1217 : 	result->y = temp.y;

  001b3	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001b6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _temp$[ebp+4]
  001bb	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1218 : 	result->z = temp.z;

  001c0	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001c3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _temp$[ebp+8]
  001c8	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1219 : }

  001cd	5f		 pop	 edi
  001ce	5e		 pop	 esi
  001cf	5b		 pop	 ebx
  001d0	8b e5		 mov	 esp, ebp
  001d2	5d		 pop	 ebp
  001d3	c2 0c 00	 ret	 12			; 0000000cH
?multiply_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z ENDP ; multiply_double_matrix3x3_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_transpose_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z
_TEXT	SEGMENT
_temp$ = -12						; size = 12
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_transpose_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z PROC ; multiply_transpose_double_matrix3x3_vec3d, COMDAT

; 1172 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1173 : 
; 1174 : 	vec3d
; 1175 : 		temp;
; 1176 : 
; 1177 : 	temp.x = v->x * m[0][0];

  00009	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00010	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00015	6b d1 00	 imul	 edx, ecx, 0
  00018	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  0001b	b8 08 00 00 00	 mov	 eax, 8
  00020	6b c8 00	 imul	 ecx, eax, 0
  00023	f2 0f 59 04 0a	 mulsd	 xmm0, QWORD PTR [edx+ecx]
  00028	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002c	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1178 : 	temp.x += v->y * m[0][1];

  00031	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00034	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  00039	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0003e	6b d1 00	 imul	 edx, ecx, 0
  00041	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  00044	b8 08 00 00 00	 mov	 eax, 8
  00049	c1 e0 00	 shl	 eax, 0
  0004c	f2 0f 59 04 02	 mulsd	 xmm0, QWORD PTR [edx+eax]
  00051	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00056	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0005a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1179 : 	temp.x += v->z * m[0][2];

  00063	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00066	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0006b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00070	6b d1 00	 imul	 edx, ecx, 0
  00073	03 55 0c	 add	 edx, DWORD PTR _m$[ebp]
  00076	b8 08 00 00 00	 mov	 eax, 8
  0007b	d1 e0		 shl	 eax, 1
  0007d	f2 0f 59 04 02	 mulsd	 xmm0, QWORD PTR [edx+eax]
  00082	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00087	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0008b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0008f	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 1180 : 
; 1181 : 	temp.y = v->x * m[1][0];

  00094	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00097	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  0009b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000a0	c1 e1 00	 shl	 ecx, 0
  000a3	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  000a6	ba 08 00 00 00	 mov	 edx, 8
  000ab	6b c2 00	 imul	 eax, edx, 0
  000ae	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  000b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b7	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1182 : 	temp.y += v->y * m[1][1];

  000bc	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000bf	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  000c4	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000c9	c1 e1 00	 shl	 ecx, 0
  000cc	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  000cf	ba 08 00 00 00	 mov	 edx, 8
  000d4	c1 e2 00	 shl	 edx, 0
  000d7	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  000dc	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  000e1	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000e5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000e9	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1183 : 	temp.y += v->z * m[1][2];

  000ee	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000f1	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000f6	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000fb	c1 e1 00	 shl	 ecx, 0
  000fe	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00101	ba 08 00 00 00	 mov	 edx, 8
  00106	d1 e2		 shl	 edx, 1
  00108	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  0010d	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  00112	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00116	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0011a	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 1184 : 
; 1185 : 	temp.z = v->x * m[2][0];

  0011f	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00122	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00126	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0012b	d1 e1		 shl	 ecx, 1
  0012d	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00130	ba 08 00 00 00	 mov	 edx, 8
  00135	6b c2 00	 imul	 eax, edx, 0
  00138	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  0013d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00141	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1186 : 	temp.z += v->y * m[2][1];

  00146	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00149	f3 0f 5a 40 04	 cvtss2sd xmm0, DWORD PTR [eax+4]
  0014e	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00153	d1 e1		 shl	 ecx, 1
  00155	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00158	ba 08 00 00 00	 mov	 edx, 8
  0015d	c1 e2 00	 shl	 edx, 0
  00160	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  00165	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0016a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0016e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00172	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1187 : 	temp.z += v->z * m[2][2];

  00177	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0017a	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0017f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00184	d1 e1		 shl	 ecx, 1
  00186	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00189	ba 08 00 00 00	 mov	 edx, 8
  0018e	d1 e2		 shl	 edx, 1
  00190	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  00195	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0019a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0019e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001a2	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 1188 : 
; 1189 : 	result->x = temp.x;

  001a7	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001aa	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _temp$[ebp]
  001af	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 1190 : 	result->y = temp.y;

  001b3	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001b6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _temp$[ebp+4]
  001bb	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1191 : 	result->z = temp.z;

  001c0	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001c3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _temp$[ebp+8]
  001c8	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1192 : }

  001cd	5f		 pop	 edi
  001ce	5e		 pop	 esi
  001cf	5b		 pop	 ebx
  001d0	8b e5		 mov	 esp, ebp
  001d2	5d		 pop	 ebp
  001d3	c2 0c 00	 ret	 12			; 0000000cH
?multiply_transpose_double_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBNPBU1@@Z ENDP ; multiply_transpose_double_matrix3x3_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02MPBUDOUBLE_VEC3D@@N@Z
_TEXT	SEGMENT
_pitch$ = -8						; size = 4
_heading$ = -4						; size = 4
_result$ = 8						; size = 4
_v$ = 12						; size = 4
_roll$ = 16						; size = 8
?get_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02MPBUDOUBLE_VEC3D@@N@Z PROC ; get_matrix3x3_from_unit_double_vec3d_and_roll, COMDAT

; 1155 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1156 : 	float
; 1157 : 		heading,
; 1158 : 		pitch;
; 1159 : 
; 1160 : 	heading = atan2 (v->x, v->z);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  00014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001c	83 ec 08	 sub	 esp, 8
  0001f	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00023	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 _atan2
  0002d	83 c4 10	 add	 esp, 16			; 00000010H
  00030	d9 5d fc	 fstp	 DWORD PTR _heading$[ebp]

; 1161 : 
; 1162 : 	pitch = asin (v->y);

  00033	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00036	83 ec 08	 sub	 esp, 8
  00039	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	e8 00 00 00 00	 call	 _asin
  00048	83 c4 08	 add	 esp, 8
  0004b	d9 5d f8	 fstp	 DWORD PTR _pitch$[ebp]

; 1163 : 
; 1164 : 	get_3d_transformation_matrix (result, (float) heading, (float) pitch, (float) roll);

  0004e	f2 0f 5a 45 10	 cvtsd2ss xmm0, QWORD PTR _roll$[ebp]
  00053	51		 push	 ecx
  00054	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00059	51		 push	 ecx
  0005a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0005f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00064	51		 push	 ecx
  00065	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0006a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0006f	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00072	50		 push	 eax
  00073	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 1165 : }

  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	8b e5		 mov	 esp, ebp
  0007d	5d		 pop	 ebp
  0007e	c2 10 00	 ret	 16			; 00000010H
?get_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02MPBUDOUBLE_VEC3D@@N@Z ENDP ; get_matrix3x3_from_unit_double_vec3d_and_roll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_double_matrix_from_face_normal_and_heading@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z
_TEXT	SEGMENT
tv167 = -72						; size = 8
_result$ = 8						; size = 4
_normal$ = 12						; size = 4
_heading$ = 16						; size = 8
?get_3d_transformation_double_matrix_from_face_normal_and_heading@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z PROC ; get_3d_transformation_double_matrix_from_face_normal_and_heading, COMDAT

; 1105 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1106 : 	//
; 1107 : 	// guard against possible divide by zero
; 1108 : 	//
; 1109 : 
; 1110 : 	if (fabs (normal->y) > 0.0001)

  00009	8b 45 0c	 mov	 eax, DWORD PTR _normal$[ebp]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  00014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00019	e8 00 00 00 00	 call	 _fabs
  0001e	83 c4 08	 add	 esp, 8
  00021	dd 5d b8	 fstp	 QWORD PTR tv167[ebp]
  00024	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR tv167[ebp]
  00029	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f1a36e2eb1c432d
  00031	0f 86 41 01 00
	00		 jbe	 $LN2@get_3d_tra

; 1111 : 	{
; 1112 : 		//
; 1113 : 		// set y vector to face normal
; 1114 : 		//
; 1115 : 
; 1116 : 		memcpy (&result[1][0], normal, sizeof (double_vec3d));

  00037	6a 18		 push	 24			; 00000018H
  00039	8b 45 0c	 mov	 eax, DWORD PTR _normal$[ebp]
  0003c	50		 push	 eax
  0003d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00042	c1 e1 00	 shl	 ecx, 0
  00045	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00048	ba 08 00 00 00	 mov	 edx, 8
  0004d	6b c2 00	 imul	 eax, edx, 0
  00050	03 c8		 add	 ecx, eax
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 _memcpy
  00058	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1117 : 
; 1118 : 		// set z vector perpendicular to face normal in the heading direction
; 1119 : 		//
; 1120 : 		// use 'planes through the origin' to get y
; 1121 : 		//
; 1122 : 		// r.n = 0, where r = (x y z) and n = (a b c), then ax + by + cz = 0, therefore y = - (ax + cz) / b
; 1123 : 
; 1124 : 		result[2][0] = sin (heading);

  0005b	83 ec 08	 sub	 esp, 8
  0005e	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  00063	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00068	e8 00 00 00 00	 call	 _sin
  0006d	83 c4 08	 add	 esp, 8
  00070	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00075	d1 e0		 shl	 eax, 1
  00077	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0007a	b9 08 00 00 00	 mov	 ecx, 8
  0007f	6b d1 00	 imul	 edx, ecx, 0
  00082	dd 1c 10	 fstp	 QWORD PTR [eax+edx]

; 1125 : 		result[2][2] = cos (heading);

  00085	83 ec 08	 sub	 esp, 8
  00088	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  0008d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00092	e8 00 00 00 00	 call	 _cos
  00097	83 c4 08	 add	 esp, 8
  0009a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0009f	d1 e0		 shl	 eax, 1
  000a1	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000a4	b9 08 00 00 00	 mov	 ecx, 8
  000a9	d1 e1		 shl	 ecx, 1
  000ab	dd 1c 08	 fstp	 QWORD PTR [eax+ecx]

; 1126 : 		result[2][1] = - ((normal->x * result[2][0]) + (normal->z * result[2][2])) / normal->y;

  000ae	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000b3	d1 e0		 shl	 eax, 1
  000b5	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000b8	b9 08 00 00 00	 mov	 ecx, 8
  000bd	6b d1 00	 imul	 edx, ecx, 0
  000c0	8b 4d 0c	 mov	 ecx, DWORD PTR _normal$[ebp]
  000c3	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  000c7	f2 0f 59 04 10	 mulsd	 xmm0, QWORD PTR [eax+edx]
  000cc	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000d1	d1 e2		 shl	 edx, 1
  000d3	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  000d6	b8 08 00 00 00	 mov	 eax, 8
  000db	d1 e0		 shl	 eax, 1
  000dd	8b 4d 0c	 mov	 ecx, DWORD PTR _normal$[ebp]
  000e0	f2 0f 10 49 10	 movsd	 xmm1, QWORD PTR [ecx+16]
  000e5	f2 0f 59 0c 02	 mulsd	 xmm1, QWORD PTR [edx+eax]
  000ea	f2 0f 58 c1	 addsd	 xmm0, xmm1
  000ee	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  000f5	8b 55 0c	 mov	 edx, DWORD PTR _normal$[ebp]
  000f8	f2 0f 5e 42 08	 divsd	 xmm0, QWORD PTR [edx+8]
  000fd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00102	d1 e0		 shl	 eax, 1
  00104	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00107	b9 08 00 00 00	 mov	 ecx, 8
  0010c	c1 e1 00	 shl	 ecx, 0
  0010f	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1127 : 
; 1128 : 		normalise_any_3d_double_vector ((double_vec3d *) &result[2][0]);

  00114	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00119	d1 e0		 shl	 eax, 1
  0011b	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0011e	b9 08 00 00 00	 mov	 ecx, 8
  00123	6b d1 00	 imul	 edx, ecx, 0
  00126	03 c2		 add	 eax, edx
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?normalise_any_3d_double_vector@@YGNPAUDOUBLE_VEC3D@@@Z ; normalise_any_3d_double_vector
  0012e	dd d8		 fstp	 ST(0)

; 1129 : 
; 1130 : 		//
; 1131 : 		// get x vector (y X z)
; 1132 : 		//
; 1133 : 
; 1134 : 		get_3d_double_vector_cross_product ((double_vec3d *) &result[0][0], (double_vec3d *) &result[1][0], (double_vec3d *) &result[2][0]);

  00130	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00135	d1 e0		 shl	 eax, 1
  00137	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0013a	b9 08 00 00 00	 mov	 ecx, 8
  0013f	6b d1 00	 imul	 edx, ecx, 0
  00142	03 c2		 add	 eax, edx
  00144	50		 push	 eax
  00145	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0014a	c1 e0 00	 shl	 eax, 0
  0014d	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00150	b9 08 00 00 00	 mov	 ecx, 8
  00155	6b d1 00	 imul	 edx, ecx, 0
  00158	03 c2		 add	 eax, edx
  0015a	50		 push	 eax
  0015b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00160	6b c8 00	 imul	 ecx, eax, 0
  00163	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00166	ba 08 00 00 00	 mov	 edx, 8
  0016b	6b c2 00	 imul	 eax, edx, 0
  0016e	03 c8		 add	 ecx, eax
  00170	51		 push	 ecx
  00171	e8 00 00 00 00	 call	 ?get_3d_double_vector_cross_product@@YGXPAUDOUBLE_VEC3D@@PBU1@1@Z ; get_3d_double_vector_cross_product

; 1135 : 
; 1136 : 		//
; 1137 : 		// (no need to normalise x vector because y and z vectors are perpendicular unit vectors)
; 1138 : 		//
; 1139 : 	}
; 1140 : 	else

  00176	eb 09		 jmp	 SHORT $LN3@get_3d_tra
$LN2@get_3d_tra:

; 1141 : 	{
; 1142 : 		get_identity_double_matrix3x3 (result);

  00178	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?get_identity_double_matrix3x3@@YGXQAY02N@Z ; get_identity_double_matrix3x3
$LN3@get_3d_tra:

; 1143 : 	}
; 1144 : }

  00181	5f		 pop	 edi
  00182	5e		 pop	 esi
  00183	5b		 pop	 ebx
  00184	8b e5		 mov	 esp, ebp
  00186	5d		 pop	 ebp
  00187	c2 10 00	 ret	 16			; 00000010H
?get_3d_transformation_double_matrix_from_face_normal_and_heading@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z ENDP ; get_3d_transformation_double_matrix_from_face_normal_and_heading
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_inverse_double_matrix@@YGXQAY02NQAY02$$CBN@Z
_TEXT	SEGMENT
_cofactors$ = -80					; size = 72
_det$ = -8						; size = 8
_result$ = 8						; size = 4
_matrix$ = 12						; size = 4
?get_inverse_double_matrix@@YGXQAY02NQAY02$$CBN@Z PROC	; get_inverse_double_matrix, COMDAT

; 1228 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1229 : 
; 1230 : 	double
; 1231 : 		det;
; 1232 : 
; 1233 : 	double_matrix3x3
; 1234 : 		cofactors = {0};

  0000c	6a 48		 push	 72			; 00000048H
  0000e	6a 00		 push	 0
  00010	8d 45 b0	 lea	 eax, DWORD PTR _cofactors$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memset
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1235 : 
; 1236 : 	// form cofactors, with sign adjustment.
; 1237 : 
; 1238 : 	// top row
; 1239 : 	cofactors [0][0] = ((matrix [1][1] * matrix [2][2]) - (matrix [1][2] * matrix [2][1]));

  0001c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00021	c1 e0 00	 shl	 eax, 0
  00024	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00027	b9 08 00 00 00	 mov	 ecx, 8
  0002c	c1 e1 00	 shl	 ecx, 0
  0002f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00034	d1 e2		 shl	 edx, 1
  00036	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00039	be 08 00 00 00	 mov	 esi, 8
  0003e	d1 e6		 shl	 esi, 1
  00040	f2 0f 10 04 08	 movsd	 xmm0, QWORD PTR [eax+ecx]
  00045	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  0004a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0004f	c1 e0 00	 shl	 eax, 0
  00052	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00055	b9 08 00 00 00	 mov	 ecx, 8
  0005a	d1 e1		 shl	 ecx, 1
  0005c	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00061	d1 e2		 shl	 edx, 1
  00063	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00066	be 08 00 00 00	 mov	 esi, 8
  0006b	c1 e6 00	 shl	 esi, 0
  0006e	f2 0f 10 0c 08	 movsd	 xmm1, QWORD PTR [eax+ecx]
  00073	f2 0f 59 0c 32	 mulsd	 xmm1, QWORD PTR [edx+esi]
  00078	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0007c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00081	6b c8 00	 imul	 ecx, eax, 0
  00084	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00088	b8 08 00 00 00	 mov	 eax, 8
  0008d	6b c8 00	 imul	 ecx, eax, 0
  00090	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 1240 : 	cofactors [1][0] = ((matrix [0][1] * matrix [2][2]) - (matrix [0][2] * matrix [2][1]));

  00095	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0009a	6b c8 00	 imul	 ecx, eax, 0
  0009d	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  000a0	ba 08 00 00 00	 mov	 edx, 8
  000a5	c1 e2 00	 shl	 edx, 0
  000a8	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ad	d1 e0		 shl	 eax, 1
  000af	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  000b2	be 08 00 00 00	 mov	 esi, 8
  000b7	d1 e6		 shl	 esi, 1
  000b9	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  000be	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  000c3	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000c8	6b d1 00	 imul	 edx, ecx, 0
  000cb	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  000ce	b8 08 00 00 00	 mov	 eax, 8
  000d3	d1 e0		 shl	 eax, 1
  000d5	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000da	d1 e1		 shl	 ecx, 1
  000dc	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  000df	be 08 00 00 00	 mov	 esi, 8
  000e4	c1 e6 00	 shl	 esi, 0
  000e7	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  000ec	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  000f1	f2 0f 5c c1	 subsd	 xmm0, xmm1
  000f5	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000fa	c1 e2 00	 shl	 edx, 0
  000fd	8d 44 15 b0	 lea	 eax, DWORD PTR _cofactors$[ebp+edx]
  00101	b9 08 00 00 00	 mov	 ecx, 8
  00106	6b d1 00	 imul	 edx, ecx, 0
  00109	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1241 : 	cofactors [2][0] = ((matrix [0][1] * matrix [1][2]) - (matrix [0][2] * matrix [1][1]));

  0010e	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00113	6b c8 00	 imul	 ecx, eax, 0
  00116	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00119	ba 08 00 00 00	 mov	 edx, 8
  0011e	c1 e2 00	 shl	 edx, 0
  00121	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00126	c1 e0 00	 shl	 eax, 0
  00129	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  0012c	be 08 00 00 00	 mov	 esi, 8
  00131	d1 e6		 shl	 esi, 1
  00133	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  00138	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  0013d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00142	6b d1 00	 imul	 edx, ecx, 0
  00145	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00148	b8 08 00 00 00	 mov	 eax, 8
  0014d	d1 e0		 shl	 eax, 1
  0014f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00154	c1 e1 00	 shl	 ecx, 0
  00157	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0015a	be 08 00 00 00	 mov	 esi, 8
  0015f	c1 e6 00	 shl	 esi, 0
  00162	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00167	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0016c	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00170	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00175	d1 e2		 shl	 edx, 1
  00177	8d 44 15 b0	 lea	 eax, DWORD PTR _cofactors$[ebp+edx]
  0017b	b9 08 00 00 00	 mov	 ecx, 8
  00180	6b d1 00	 imul	 edx, ecx, 0
  00183	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1242 : 
; 1243 : 	// mid row
; 1244 : 	cofactors [0][1] = ((matrix [1][0] * matrix [2][2]) - (matrix [1][2] * matrix [2][0]));

  00188	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0018d	c1 e0 00	 shl	 eax, 0
  00190	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00193	b9 08 00 00 00	 mov	 ecx, 8
  00198	6b d1 00	 imul	 edx, ecx, 0
  0019b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001a0	d1 e1		 shl	 ecx, 1
  001a2	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  001a5	be 08 00 00 00	 mov	 esi, 8
  001aa	d1 e6		 shl	 esi, 1
  001ac	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  001b1	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  001b6	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  001bb	c1 e2 00	 shl	 edx, 0
  001be	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  001c1	b8 08 00 00 00	 mov	 eax, 8
  001c6	d1 e0		 shl	 eax, 1
  001c8	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001cd	d1 e1		 shl	 ecx, 1
  001cf	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  001d2	be 08 00 00 00	 mov	 esi, 8
  001d7	6b f6 00	 imul	 esi, esi, 0
  001da	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  001df	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  001e4	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001e8	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  001ed	6b c2 00	 imul	 eax, edx, 0
  001f0	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  001f4	ba 08 00 00 00	 mov	 edx, 8
  001f9	c1 e2 00	 shl	 edx, 0
  001fc	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1245 : 	cofactors [1][1] = ((matrix [0][0] * matrix [2][2]) - (matrix [0][2] * matrix [2][0]));

  00201	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00206	6b c8 00	 imul	 ecx, eax, 0
  00209	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0020c	ba 08 00 00 00	 mov	 edx, 8
  00211	6b c2 00	 imul	 eax, edx, 0
  00214	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00219	d1 e2		 shl	 edx, 1
  0021b	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  0021e	be 08 00 00 00	 mov	 esi, 8
  00223	d1 e6		 shl	 esi, 1
  00225	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0022a	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  0022f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00234	6b c8 00	 imul	 ecx, eax, 0
  00237	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0023a	ba 08 00 00 00	 mov	 edx, 8
  0023f	d1 e2		 shl	 edx, 1
  00241	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00246	d1 e0		 shl	 eax, 1
  00248	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  0024b	be 08 00 00 00	 mov	 esi, 8
  00250	6b f6 00	 imul	 esi, esi, 0
  00253	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00258	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0025d	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00261	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00266	c1 e1 00	 shl	 ecx, 0
  00269	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  0026d	b8 08 00 00 00	 mov	 eax, 8
  00272	c1 e0 00	 shl	 eax, 0
  00275	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1246 : 	cofactors [2][1] = ((matrix [0][0] * matrix [1][2]) - (matrix [0][2] * matrix [1][0]));

  0027a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0027f	6b c8 00	 imul	 ecx, eax, 0
  00282	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00285	ba 08 00 00 00	 mov	 edx, 8
  0028a	6b c2 00	 imul	 eax, edx, 0
  0028d	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00292	c1 e2 00	 shl	 edx, 0
  00295	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00298	be 08 00 00 00	 mov	 esi, 8
  0029d	d1 e6		 shl	 esi, 1
  0029f	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  002a4	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  002a9	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002ae	6b c8 00	 imul	 ecx, eax, 0
  002b1	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  002b4	ba 08 00 00 00	 mov	 edx, 8
  002b9	d1 e2		 shl	 edx, 1
  002bb	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002c0	c1 e0 00	 shl	 eax, 0
  002c3	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  002c6	be 08 00 00 00	 mov	 esi, 8
  002cb	6b f6 00	 imul	 esi, esi, 0
  002ce	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  002d3	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  002d8	f2 0f 5c c1	 subsd	 xmm0, xmm1
  002dc	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  002e1	d1 e1		 shl	 ecx, 1
  002e3	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  002e7	b8 08 00 00 00	 mov	 eax, 8
  002ec	c1 e0 00	 shl	 eax, 0
  002ef	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1247 : 
; 1248 : 	// bottom row
; 1249 : 	cofactors [0][2] = ((matrix [1][0] * matrix [2][1]) - (matrix [1][1] * matrix [2][0]));

  002f4	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002f9	c1 e0 00	 shl	 eax, 0
  002fc	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  002ff	b9 08 00 00 00	 mov	 ecx, 8
  00304	6b d1 00	 imul	 edx, ecx, 0
  00307	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0030c	d1 e1		 shl	 ecx, 1
  0030e	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00311	be 08 00 00 00	 mov	 esi, 8
  00316	c1 e6 00	 shl	 esi, 0
  00319	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  0031e	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  00323	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00328	c1 e2 00	 shl	 edx, 0
  0032b	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  0032e	b8 08 00 00 00	 mov	 eax, 8
  00333	c1 e0 00	 shl	 eax, 0
  00336	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0033b	d1 e1		 shl	 ecx, 1
  0033d	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00340	be 08 00 00 00	 mov	 esi, 8
  00345	6b f6 00	 imul	 esi, esi, 0
  00348	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0034d	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00352	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00356	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0035b	6b c2 00	 imul	 eax, edx, 0
  0035e	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00362	ba 08 00 00 00	 mov	 edx, 8
  00367	d1 e2		 shl	 edx, 1
  00369	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1250 : 	cofactors [1][2] = ((matrix [0][0] * matrix [2][1]) - (matrix [0][1] * matrix [2][0]));

  0036e	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00373	6b c8 00	 imul	 ecx, eax, 0
  00376	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00379	ba 08 00 00 00	 mov	 edx, 8
  0037e	6b c2 00	 imul	 eax, edx, 0
  00381	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00386	d1 e2		 shl	 edx, 1
  00388	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  0038b	be 08 00 00 00	 mov	 esi, 8
  00390	c1 e6 00	 shl	 esi, 0
  00393	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00398	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  0039d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  003a2	6b c8 00	 imul	 ecx, eax, 0
  003a5	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  003a8	ba 08 00 00 00	 mov	 edx, 8
  003ad	c1 e2 00	 shl	 edx, 0
  003b0	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  003b5	d1 e0		 shl	 eax, 1
  003b7	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  003ba	be 08 00 00 00	 mov	 esi, 8
  003bf	6b f6 00	 imul	 esi, esi, 0
  003c2	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  003c7	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  003cc	f2 0f 5c c1	 subsd	 xmm0, xmm1
  003d0	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003d5	c1 e1 00	 shl	 ecx, 0
  003d8	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  003dc	b8 08 00 00 00	 mov	 eax, 8
  003e1	d1 e0		 shl	 eax, 1
  003e3	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1251 : 	cofactors [2][2] = ((matrix [0][0] * matrix [1][1]) - (matrix [0][1] * matrix [1][0]));

  003e8	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  003ed	6b c8 00	 imul	 ecx, eax, 0
  003f0	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  003f3	ba 08 00 00 00	 mov	 edx, 8
  003f8	6b c2 00	 imul	 eax, edx, 0
  003fb	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00400	c1 e2 00	 shl	 edx, 0
  00403	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00406	be 08 00 00 00	 mov	 esi, 8
  0040b	c1 e6 00	 shl	 esi, 0
  0040e	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00413	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00418	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0041d	6b c8 00	 imul	 ecx, eax, 0
  00420	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00423	ba 08 00 00 00	 mov	 edx, 8
  00428	c1 e2 00	 shl	 edx, 0
  0042b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00430	c1 e0 00	 shl	 eax, 0
  00433	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00436	be 08 00 00 00	 mov	 esi, 8
  0043b	6b f6 00	 imul	 esi, esi, 0
  0043e	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00443	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00448	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0044c	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00451	d1 e1		 shl	 ecx, 1
  00453	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00457	b8 08 00 00 00	 mov	 eax, 8
  0045c	d1 e0		 shl	 eax, 1
  0045e	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1252 : 
; 1253 : 	// determinant
; 1254 : 
; 1255 : 	det = (matrix [0][0] * cofactors [0][0]) -

  00463	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00468	6b c8 00	 imul	 ecx, eax, 0
  0046b	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0046e	ba 08 00 00 00	 mov	 edx, 8
  00473	6b c2 00	 imul	 eax, edx, 0
  00476	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0047b	6b d2 00	 imul	 edx, edx, 0
  0047e	8d 54 15 b0	 lea	 edx, DWORD PTR _cofactors$[ebp+edx]
  00482	be 08 00 00 00	 mov	 esi, 8
  00487	6b f6 00	 imul	 esi, esi, 0
  0048a	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0048f	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00494	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00499	c1 e0 00	 shl	 eax, 0
  0049c	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  0049f	b9 08 00 00 00	 mov	 ecx, 8
  004a4	6b d1 00	 imul	 edx, ecx, 0
  004a7	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  004ac	c1 e1 00	 shl	 ecx, 0
  004af	8d 4c 0d b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+ecx]
  004b3	be 08 00 00 00	 mov	 esi, 8
  004b8	6b f6 00	 imul	 esi, esi, 0
  004bb	f2 0f 10 0c 10	 movsd	 xmm1, QWORD PTR [eax+edx]
  004c0	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  004c5	f2 0f 5c c1	 subsd	 xmm0, xmm1
  004c9	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  004ce	d1 e2		 shl	 edx, 1
  004d0	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  004d3	b8 08 00 00 00	 mov	 eax, 8
  004d8	6b c8 00	 imul	 ecx, eax, 0
  004db	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  004e0	d1 e0		 shl	 eax, 1
  004e2	8d 44 05 b0	 lea	 eax, DWORD PTR _cofactors$[ebp+eax]
  004e6	be 08 00 00 00	 mov	 esi, 8
  004eb	6b f6 00	 imul	 esi, esi, 0
  004ee	f2 0f 10 0c 0a	 movsd	 xmm1, QWORD PTR [edx+ecx]
  004f3	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  004f8	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004fc	f2 0f 11 45 f8	 movsd	 QWORD PTR _det$[ebp], xmm0

; 1256 : 			(matrix [1][0] * cofactors [1][0]) +
; 1257 : 			(matrix [2][0] * cofactors [2][0]);
; 1258 : 
; 1259 : 	// divide transposed cofactors by det
; 1260 : 
; 1261 : 	// first column
; 1262 : 	result [0][0] = +cofactors [0][0] / det;

  00501	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00506	6b c8 00	 imul	 ecx, eax, 0
  00509	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  0050d	b8 08 00 00 00	 mov	 eax, 8
  00512	6b c8 00	 imul	 ecx, eax, 0
  00515	f2 0f 10 04 0a	 movsd	 xmm0, QWORD PTR [edx+ecx]
  0051a	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  0051f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00524	6b c2 00	 imul	 eax, edx, 0
  00527	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0052a	b9 08 00 00 00	 mov	 ecx, 8
  0052f	6b d1 00	 imul	 edx, ecx, 0
  00532	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1263 : 	result [0][1] = -cofactors [1][0] / det;

  00537	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0053c	c1 e0 00	 shl	 eax, 0
  0053f	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00543	ba 08 00 00 00	 mov	 edx, 8
  00548	6b c2 00	 imul	 eax, edx, 0
  0054b	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00550	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  00557	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  0055c	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00561	6b d1 00	 imul	 edx, ecx, 0
  00564	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00567	b8 08 00 00 00	 mov	 eax, 8
  0056c	c1 e0 00	 shl	 eax, 0
  0056f	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1264 : 	result [0][2] = +cofactors [2][0] / det;

  00574	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00579	d1 e0		 shl	 eax, 1
  0057b	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  0057f	ba 08 00 00 00	 mov	 edx, 8
  00584	6b c2 00	 imul	 eax, edx, 0
  00587	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0058c	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  00591	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00596	6b d1 00	 imul	 edx, ecx, 0
  00599	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0059c	b8 08 00 00 00	 mov	 eax, 8
  005a1	d1 e0		 shl	 eax, 1
  005a3	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 1265 : 
; 1266 : 	// second column
; 1267 : 	result [1][0] = -cofactors [0][1] / det;

  005a8	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  005ad	6b c8 00	 imul	 ecx, eax, 0
  005b0	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  005b4	b8 08 00 00 00	 mov	 eax, 8
  005b9	c1 e0 00	 shl	 eax, 0
  005bc	f2 0f 10 04 02	 movsd	 xmm0, QWORD PTR [edx+eax]
  005c1	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  005c8	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  005cd	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005d2	c1 e1 00	 shl	 ecx, 0
  005d5	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  005d8	ba 08 00 00 00	 mov	 edx, 8
  005dd	6b c2 00	 imul	 eax, edx, 0
  005e0	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 1268 : 	result [1][1] = +cofactors [1][1] / det;

  005e5	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  005ea	c1 e0 00	 shl	 eax, 0
  005ed	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  005f1	ba 08 00 00 00	 mov	 edx, 8
  005f6	c1 e2 00	 shl	 edx, 0
  005f9	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  005fe	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  00603	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00608	c1 e0 00	 shl	 eax, 0
  0060b	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0060e	b9 08 00 00 00	 mov	 ecx, 8
  00613	c1 e1 00	 shl	 ecx, 0
  00616	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1269 : 	result [1][2] = -cofactors [2][1] / det;

  0061b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00620	d1 e0		 shl	 eax, 1
  00622	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00626	ba 08 00 00 00	 mov	 edx, 8
  0062b	c1 e2 00	 shl	 edx, 0
  0062e	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  00633	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  0063a	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  0063f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00644	c1 e0 00	 shl	 eax, 0
  00647	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0064a	b9 08 00 00 00	 mov	 ecx, 8
  0064f	d1 e1		 shl	 ecx, 1
  00651	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1270 : 
; 1271 : 	// third column
; 1272 : 	result [2][0] = +cofactors [0][2] / det;

  00656	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0065b	6b c8 00	 imul	 ecx, eax, 0
  0065e	8d 54 0d b0	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00662	b8 08 00 00 00	 mov	 eax, 8
  00667	d1 e0		 shl	 eax, 1
  00669	f2 0f 10 04 02	 movsd	 xmm0, QWORD PTR [edx+eax]
  0066e	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  00673	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00678	d1 e1		 shl	 ecx, 1
  0067a	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0067d	ba 08 00 00 00	 mov	 edx, 8
  00682	6b c2 00	 imul	 eax, edx, 0
  00685	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 1273 : 	result [2][1] = -cofactors [1][2] / det;

  0068a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0068f	c1 e0 00	 shl	 eax, 0
  00692	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00696	ba 08 00 00 00	 mov	 edx, 8
  0069b	d1 e2		 shl	 edx, 1
  0069d	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  006a2	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  006a9	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  006ae	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  006b3	d1 e0		 shl	 eax, 1
  006b5	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  006b8	b9 08 00 00 00	 mov	 ecx, 8
  006bd	c1 e1 00	 shl	 ecx, 0
  006c0	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1274 : 	result [2][2] = +cofactors [2][2] / det;

  006c5	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  006ca	d1 e0		 shl	 eax, 1
  006cc	8d 4c 05 b0	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  006d0	ba 08 00 00 00	 mov	 edx, 8
  006d5	d1 e2		 shl	 edx, 1
  006d7	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  006dc	f2 0f 5e 45 f8	 divsd	 xmm0, QWORD PTR _det$[ebp]
  006e1	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  006e6	d1 e0		 shl	 eax, 1
  006e8	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  006eb	b9 08 00 00 00	 mov	 ecx, 8
  006f0	d1 e1		 shl	 ecx, 1
  006f2	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1275 : }

  006f7	5f		 pop	 edi
  006f8	5e		 pop	 esi
  006f9	5b		 pop	 ebx
  006fa	8b e5		 mov	 esp, ebp
  006fc	5d		 pop	 ebp
  006fd	c2 08 00	 ret	 8
?get_inverse_double_matrix@@YGXQAY02NQAY02$$CBN@Z ENDP	; get_inverse_double_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_double_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z
_TEXT	SEGMENT
_pitch$ = -16						; size = 8
_heading$ = -8						; size = 8
_result$ = 8						; size = 4
_v$ = 12						; size = 4
_roll$ = 16						; size = 8
?get_double_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z PROC ; get_double_matrix3x3_from_unit_double_vec3d_and_roll, COMDAT

; 1088 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1089 : 	double
; 1090 : 		heading,
; 1091 : 		pitch;
; 1092 : 
; 1093 : 	heading = atan2 (v->x, v->z);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  00014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001c	83 ec 08	 sub	 esp, 8
  0001f	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00023	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 _atan2
  0002d	83 c4 10	 add	 esp, 16			; 00000010H
  00030	dd 5d f8	 fstp	 QWORD PTR _heading$[ebp]

; 1094 : 
; 1095 : 	pitch = asin (v->y);

  00033	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00036	83 ec 08	 sub	 esp, 8
  00039	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	e8 00 00 00 00	 call	 _asin
  00048	83 c4 08	 add	 esp, 8
  0004b	dd 5d f0	 fstp	 QWORD PTR _pitch$[ebp]

; 1096 : 
; 1097 : 	get_3d_transformation_double_matrix (result, heading, pitch, roll);

  0004e	83 ec 08	 sub	 esp, 8
  00051	f2 0f 10 45 10	 movsd	 xmm0, QWORD PTR _roll$[ebp]
  00056	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0005b	83 ec 08	 sub	 esp, 8
  0005e	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _pitch$[ebp]
  00063	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00068	83 ec 08	 sub	 esp, 8
  0006b	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  00070	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00075	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00078	50		 push	 eax
  00079	e8 00 00 00 00	 call	 ?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z ; get_3d_transformation_double_matrix

; 1098 : }

  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	5b		 pop	 ebx
  00081	8b e5		 mov	 esp, ebp
  00083	5d		 pop	 ebp
  00084	c2 10 00	 ret	 16			; 00000010H
?get_double_matrix3x3_from_unit_double_vec3d_and_roll@@YGXQAY02NPBUDOUBLE_VEC3D@@N@Z ENDP ; get_double_matrix3x3_from_unit_double_vec3d_and_roll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z
_TEXT	SEGMENT
_cosrcosh$ = -80					; size = 8
_cosrsinh$ = -72					; size = 8
_sinrcosh$ = -64					; size = 8
_sinrsinh$ = -56					; size = 8
_cosr$ = -48						; size = 8
_sinr$ = -40						; size = 8
_cosp$ = -32						; size = 8
_sinp$ = -24						; size = 8
_cosh$ = -16						; size = 8
_sinh$ = -8						; size = 8
_m$ = 8							; size = 4
_heading$ = 12						; size = 8
_pitch$ = 20						; size = 8
_roll$ = 28						; size = 8
?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z PROC ; get_3d_transformation_double_matrix, COMDAT

; 1033 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1034 : 
; 1035 : 	double
; 1036 : 		sinh,
; 1037 : 		cosh,
; 1038 : 		sinp,
; 1039 : 		cosp,
; 1040 : 		sinr,
; 1041 : 		cosr,
; 1042 : 		sinrsinh,
; 1043 : 		sinrcosh,
; 1044 : 		cosrsinh,
; 1045 : 		cosrcosh;
; 1046 : 
; 1047 : 	sinh = sin ( heading );

  0000c	83 ec 08	 sub	 esp, 8
  0000f	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  00014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00019	e8 00 00 00 00	 call	 _sin
  0001e	83 c4 08	 add	 esp, 8
  00021	dd 5d f8	 fstp	 QWORD PTR _sinh$[ebp]

; 1048 : 	cosh = cos ( heading );

  00024	83 ec 08	 sub	 esp, 8
  00027	f2 0f 10 45 0c	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  0002c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00031	e8 00 00 00 00	 call	 _cos
  00036	83 c4 08	 add	 esp, 8
  00039	dd 5d f0	 fstp	 QWORD PTR _cosh$[ebp]

; 1049 : 
; 1050 : 	sinp = sin ( pitch );

  0003c	83 ec 08	 sub	 esp, 8
  0003f	f2 0f 10 45 14	 movsd	 xmm0, QWORD PTR _pitch$[ebp]
  00044	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00049	e8 00 00 00 00	 call	 _sin
  0004e	83 c4 08	 add	 esp, 8
  00051	dd 5d e8	 fstp	 QWORD PTR _sinp$[ebp]

; 1051 : 	cosp = cos ( pitch );

  00054	83 ec 08	 sub	 esp, 8
  00057	f2 0f 10 45 14	 movsd	 xmm0, QWORD PTR _pitch$[ebp]
  0005c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00061	e8 00 00 00 00	 call	 _cos
  00066	83 c4 08	 add	 esp, 8
  00069	dd 5d e0	 fstp	 QWORD PTR _cosp$[ebp]

; 1052 : 
; 1053 : 	sinr = sin ( roll );

  0006c	83 ec 08	 sub	 esp, 8
  0006f	f2 0f 10 45 1c	 movsd	 xmm0, QWORD PTR _roll$[ebp]
  00074	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00079	e8 00 00 00 00	 call	 _sin
  0007e	83 c4 08	 add	 esp, 8
  00081	dd 5d d8	 fstp	 QWORD PTR _sinr$[ebp]

; 1054 : 	cosr = cos ( roll );

  00084	83 ec 08	 sub	 esp, 8
  00087	f2 0f 10 45 1c	 movsd	 xmm0, QWORD PTR _roll$[ebp]
  0008c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00091	e8 00 00 00 00	 call	 _cos
  00096	83 c4 08	 add	 esp, 8
  00099	dd 5d d0	 fstp	 QWORD PTR _cosr$[ebp]

; 1055 : 
; 1056 : 	sinrsinh = sinr * sinh;

  0009c	f2 0f 10 45 d8	 movsd	 xmm0, QWORD PTR _sinr$[ebp]
  000a1	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _sinh$[ebp]
  000a6	f2 0f 11 45 c8	 movsd	 QWORD PTR _sinrsinh$[ebp], xmm0

; 1057 : 
; 1058 : 	sinrcosh = sinr * cosh;

  000ab	f2 0f 10 45 d8	 movsd	 xmm0, QWORD PTR _sinr$[ebp]
  000b0	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _cosh$[ebp]
  000b5	f2 0f 11 45 c0	 movsd	 QWORD PTR _sinrcosh$[ebp], xmm0

; 1059 : 
; 1060 : 	cosrsinh = cosr * sinh;

  000ba	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _cosr$[ebp]
  000bf	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _sinh$[ebp]
  000c4	f2 0f 11 45 b8	 movsd	 QWORD PTR _cosrsinh$[ebp], xmm0

; 1061 : 
; 1062 : 	cosrcosh = cosr * cosh;

  000c9	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _cosr$[ebp]
  000ce	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _cosh$[ebp]
  000d3	f2 0f 11 45 b0	 movsd	 QWORD PTR _cosrcosh$[ebp], xmm0

; 1063 : 
; 1064 : 	m [ 0 ] [ 0 ] = cosrcosh + ( sinrsinh * sinp );

  000d8	f2 0f 10 45 c8	 movsd	 xmm0, QWORD PTR _sinrsinh$[ebp]
  000dd	f2 0f 59 45 e8	 mulsd	 xmm0, QWORD PTR _sinp$[ebp]
  000e2	f2 0f 58 45 b0	 addsd	 xmm0, QWORD PTR _cosrcosh$[ebp]
  000e7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000f2	ba 08 00 00 00	 mov	 edx, 8
  000f7	6b c2 00	 imul	 eax, edx, 0
  000fa	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 1065 : 
; 1066 : 	m [ 0 ] [ 1 ] = -sinr * cosp;

  000ff	f2 0f 10 45 d8	 movsd	 xmm0, QWORD PTR _sinr$[ebp]
  00104	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  0010b	f2 0f 59 45 e0	 mulsd	 xmm0, QWORD PTR _cosp$[ebp]
  00110	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00115	6b c8 00	 imul	 ecx, eax, 0
  00118	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0011b	ba 08 00 00 00	 mov	 edx, 8
  00120	c1 e2 00	 shl	 edx, 0
  00123	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1067 : 
; 1068 : 	m [ 0 ] [ 2 ] = ( sinrcosh * sinp ) - cosrsinh;

  00128	f2 0f 10 45 c0	 movsd	 xmm0, QWORD PTR _sinrcosh$[ebp]
  0012d	f2 0f 59 45 e8	 mulsd	 xmm0, QWORD PTR _sinp$[ebp]
  00132	f2 0f 5c 45 b8	 subsd	 xmm0, QWORD PTR _cosrsinh$[ebp]
  00137	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0013c	6b c8 00	 imul	 ecx, eax, 0
  0013f	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00142	ba 08 00 00 00	 mov	 edx, 8
  00147	d1 e2		 shl	 edx, 1
  00149	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1069 : 
; 1070 : 	m [ 1 ] [ 0 ] = sinrcosh - ( cosrsinh * sinp );

  0014e	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR _cosrsinh$[ebp]
  00153	f2 0f 59 45 e8	 mulsd	 xmm0, QWORD PTR _sinp$[ebp]
  00158	f2 0f 10 4d c0	 movsd	 xmm1, QWORD PTR _sinrcosh$[ebp]
  0015d	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00161	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00166	c1 e0 00	 shl	 eax, 0
  00169	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0016c	b9 08 00 00 00	 mov	 ecx, 8
  00171	6b d1 00	 imul	 edx, ecx, 0
  00174	f2 0f 11 0c 10	 movsd	 QWORD PTR [eax+edx], xmm1

; 1071 : 
; 1072 : 	m [ 1 ] [ 1 ] = cosr * cosp;

  00179	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _cosr$[ebp]
  0017e	f2 0f 59 45 e0	 mulsd	 xmm0, QWORD PTR _cosp$[ebp]
  00183	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00188	c1 e0 00	 shl	 eax, 0
  0018b	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0018e	b9 08 00 00 00	 mov	 ecx, 8
  00193	c1 e1 00	 shl	 ecx, 0
  00196	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1073 : 
; 1074 : 	m [ 1 ] [ 2 ] = -sinrsinh - ( cosrcosh * sinp );

  0019b	f2 0f 10 45 c8	 movsd	 xmm0, QWORD PTR _sinrsinh$[ebp]
  001a0	0f 57 05 00 00
	00 00		 xorps	 xmm0, QWORD PTR __xmm@80000000000000008000000000000000
  001a7	f2 0f 10 4d b0	 movsd	 xmm1, QWORD PTR _cosrcosh$[ebp]
  001ac	f2 0f 59 4d e8	 mulsd	 xmm1, QWORD PTR _sinp$[ebp]
  001b1	f2 0f 5c c1	 subsd	 xmm0, xmm1
  001b5	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001ba	c1 e0 00	 shl	 eax, 0
  001bd	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001c0	b9 08 00 00 00	 mov	 ecx, 8
  001c5	d1 e1		 shl	 ecx, 1
  001c7	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1075 : 
; 1076 : 	m [ 2 ] [ 0 ] = cosp * sinh;

  001cc	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _cosp$[ebp]
  001d1	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _sinh$[ebp]
  001d6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001db	d1 e0		 shl	 eax, 1
  001dd	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001e0	b9 08 00 00 00	 mov	 ecx, 8
  001e5	6b d1 00	 imul	 edx, ecx, 0
  001e8	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1077 : 
; 1078 : 	m [ 2 ] [ 1 ] = sinp;

  001ed	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001f2	d1 e0		 shl	 eax, 1
  001f4	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001f7	b9 08 00 00 00	 mov	 ecx, 8
  001fc	c1 e1 00	 shl	 ecx, 0
  001ff	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _sinp$[ebp]
  00204	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1079 : 
; 1080 : 	m [ 2 ] [ 2 ] = cosp * cosh;

  00209	f2 0f 10 45 e0	 movsd	 xmm0, QWORD PTR _cosp$[ebp]
  0020e	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _cosh$[ebp]
  00213	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00218	d1 e0		 shl	 eax, 1
  0021a	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0021d	b9 08 00 00 00	 mov	 ecx, 8
  00222	d1 e1		 shl	 ecx, 1
  00224	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1081 : }

  00229	5f		 pop	 edi
  0022a	5e		 pop	 esi
  0022b	5b		 pop	 ebx
  0022c	8b e5		 mov	 esp, ebp
  0022e	5d		 pop	 ebp
  0022f	c2 1c 00	 ret	 28			; 0000001cH
?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z ENDP ; get_3d_transformation_double_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_double_matrix3x3_from_unit_double_vec3d@@YGXQAY02NPBUDOUBLE_VEC3D@@@Z
_TEXT	SEGMENT
_pitch$ = -16						; size = 8
_heading$ = -8						; size = 8
_result$ = 8						; size = 4
_v$ = 12						; size = 4
?get_double_matrix3x3_from_unit_double_vec3d@@YGXQAY02NPBUDOUBLE_VEC3D@@@Z PROC ; get_double_matrix3x3_from_unit_double_vec3d, COMDAT

; 1016 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1017 : 	double
; 1018 : 		heading,
; 1019 : 		pitch;
; 1020 : 
; 1021 : 	heading = atan2 (v->x, v->z);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	83 ec 08	 sub	 esp, 8
  0000f	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  00014	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00019	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001c	83 ec 08	 sub	 esp, 8
  0001f	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00023	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00028	e8 00 00 00 00	 call	 _atan2
  0002d	83 c4 10	 add	 esp, 16			; 00000010H
  00030	dd 5d f8	 fstp	 QWORD PTR _heading$[ebp]

; 1022 : 
; 1023 : 	pitch = asin (v->y);

  00033	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00036	83 ec 08	 sub	 esp, 8
  00039	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  0003e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00043	e8 00 00 00 00	 call	 _asin
  00048	83 c4 08	 add	 esp, 8
  0004b	dd 5d f0	 fstp	 QWORD PTR _pitch$[ebp]

; 1024 : 
; 1025 : 	get_3d_transformation_double_matrix (result, heading, pitch, 0.0);

  0004e	83 ec 08	 sub	 esp, 8
  00051	0f 57 c0	 xorps	 xmm0, xmm0
  00054	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00059	83 ec 08	 sub	 esp, 8
  0005c	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _pitch$[ebp]
  00061	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00066	83 ec 08	 sub	 esp, 8
  00069	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _heading$[ebp]
  0006e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00073	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?get_3d_transformation_double_matrix@@YGXQAY02NNNN@Z ; get_3d_transformation_double_matrix

; 1026 : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 08 00	 ret	 8
?get_double_matrix3x3_from_unit_double_vec3d@@YGXQAY02NPBUDOUBLE_VEC3D@@@Z ENDP ; get_double_matrix3x3_from_unit_double_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_identity_double_matrix3x3@@YGXQAY02N@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
?get_identity_double_matrix3x3@@YGXQAY02N@Z PROC	; get_identity_double_matrix3x3, COMDAT

; 997  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 998  : 	m[0][0] = 1.0;

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00024	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 999  : 	m[0][1] = 0.0;

  00029	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0002e	6b c8 00	 imul	 ecx, eax, 0
  00031	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00034	ba 08 00 00 00	 mov	 edx, 8
  00039	c1 e2 00	 shl	 edx, 0
  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1000 : 	m[0][2] = 0.0;

  00044	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00049	6b c8 00	 imul	 ecx, eax, 0
  0004c	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0004f	ba 08 00 00 00	 mov	 edx, 8
  00054	d1 e2		 shl	 edx, 1
  00056	0f 57 c0	 xorps	 xmm0, xmm0
  00059	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 1001 : 
; 1002 : 	m[1][0] = 0.0;

  0005e	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00063	c1 e0 00	 shl	 eax, 0
  00066	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00069	b9 08 00 00 00	 mov	 ecx, 8
  0006e	6b d1 00	 imul	 edx, ecx, 0
  00071	0f 57 c0	 xorps	 xmm0, xmm0
  00074	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1003 : 	m[1][1] = 1.0;

  00079	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0007e	c1 e0 00	 shl	 eax, 0
  00081	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00084	b9 08 00 00 00	 mov	 ecx, 8
  00089	c1 e1 00	 shl	 ecx, 0
  0008c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00094	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1004 : 	m[1][2] = 0.0;

  00099	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0009e	c1 e0 00	 shl	 eax, 0
  000a1	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000a4	b9 08 00 00 00	 mov	 ecx, 8
  000a9	d1 e1		 shl	 ecx, 1
  000ab	0f 57 c0	 xorps	 xmm0, xmm0
  000ae	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1005 : 
; 1006 : 	m[2][0] = 0.0;

  000b3	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000b8	d1 e0		 shl	 eax, 1
  000ba	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000bd	b9 08 00 00 00	 mov	 ecx, 8
  000c2	6b d1 00	 imul	 edx, ecx, 0
  000c5	0f 57 c0	 xorps	 xmm0, xmm0
  000c8	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 1007 : 	m[2][1] = 0.0;

  000cd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000d2	d1 e0		 shl	 eax, 1
  000d4	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000d7	b9 08 00 00 00	 mov	 ecx, 8
  000dc	c1 e1 00	 shl	 ecx, 0
  000df	0f 57 c0	 xorps	 xmm0, xmm0
  000e2	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1008 : 	m[2][2] = 1.0;

  000e7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ec	d1 e0		 shl	 eax, 1
  000ee	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000f1	b9 08 00 00 00	 mov	 ecx, 8
  000f6	d1 e1		 shl	 ecx, 1
  000f8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00100	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 1009 : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 04 00	 ret	 4
?get_identity_double_matrix3x3@@YGXQAY02N@Z ENDP	; get_identity_double_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_arbitrary_rotation_double_matrix@@YGXQAY02NPBUDOUBLE_VEC3D@@M@Z
_TEXT	SEGMENT
_one_minus_n3_n3_cos$ = -136				; size = 8
_one_minus_n2_n2_cos$ = -128				; size = 8
_one_minus_n1_n1_cos$ = -120				; size = 8
_n2_n3_cos$ = -112					; size = 8
_n1_n3_cos$ = -104					; size = 8
_n1_n2_cos$ = -96					; size = 8
_n3_n3$ = -88						; size = 8
_n2_n2$ = -80						; size = 8
_n2_n3$ = -72						; size = 8
_n1_n3$ = -64						; size = 8
_n1_n2$ = -56						; size = 8
_n1_n1$ = -48						; size = 8
_n3_sin$ = -40						; size = 8
_n2_sin$ = -32						; size = 8
_n1_sin$ = -24						; size = 8
_sine$ = -16						; size = 8
_cosine$ = -8						; size = 8
_m$ = 8							; size = 4
_v$ = 12						; size = 4
_angle$ = 16						; size = 4
?get_arbitrary_rotation_double_matrix@@YGXQAY02NPBUDOUBLE_VEC3D@@M@Z PROC ; get_arbitrary_rotation_double_matrix, COMDAT

; 932  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 933  : 
; 934  : 	double
; 935  : 		cosine,
; 936  : 		sine,
; 937  : 
; 938  : 		n1_sin,
; 939  : 		n2_sin,
; 940  : 		n3_sin,
; 941  : 
; 942  : 		n1_n1,
; 943  : 		n1_n2,
; 944  : 		n1_n3,
; 945  : 		n2_n3,
; 946  : 
; 947  : 		n2_n2,
; 948  : 		n3_n3,
; 949  : 
; 950  : 		n1_n2_cos,
; 951  : 		n1_n3_cos,
; 952  : 		n2_n3_cos,
; 953  : 
; 954  : 		one_minus_n1_n1_cos,
; 955  : 		one_minus_n2_n2_cos,
; 956  : 		one_minus_n3_n3_cos;
; 957  : 
; 958  : 	cosine = cos ( angle );

  0000c	51		 push	 ecx
  0000d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _angle$[ebp]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0001c	dd 5d f8	 fstp	 QWORD PTR _cosine$[ebp]

; 959  : 
; 960  : 	sine = sin ( angle );

  0001f	51		 push	 ecx
  00020	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _angle$[ebp]
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0002f	dd 5d f0	 fstp	 QWORD PTR _sine$[ebp]

; 961  : 
; 962  : 	n1_sin = ( v->x * sine );

  00032	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00035	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00039	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _sine$[ebp]
  0003e	f2 0f 11 45 e8	 movsd	 QWORD PTR _n1_sin$[ebp], xmm0

; 963  : 	n2_sin = ( v->y * sine );

  00043	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00046	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  0004b	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _sine$[ebp]
  00050	f2 0f 11 45 e0	 movsd	 QWORD PTR _n2_sin$[ebp], xmm0

; 964  : 	n3_sin = ( v->z * sine );

  00055	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00058	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  0005d	f2 0f 59 45 f0	 mulsd	 xmm0, QWORD PTR _sine$[ebp]
  00062	f2 0f 11 45 d8	 movsd	 QWORD PTR _n3_sin$[ebp], xmm0

; 965  : 
; 966  : 	n1_n1 = ( v->x * v->x );

  00067	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0006d	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00071	f2 0f 59 01	 mulsd	 xmm0, QWORD PTR [ecx]
  00075	f2 0f 11 45 d0	 movsd	 QWORD PTR _n1_n1$[ebp], xmm0

; 967  : 	n1_n2 = ( v->x * v->y );

  0007a	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00080	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00084	f2 0f 59 41 08	 mulsd	 xmm0, QWORD PTR [ecx+8]
  00089	f2 0f 11 45 c8	 movsd	 QWORD PTR _n1_n2$[ebp], xmm0

; 968  : 	n1_n3 = ( v->x * v->z );

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00091	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00094	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00098	f2 0f 59 41 10	 mulsd	 xmm0, QWORD PTR [ecx+16]
  0009d	f2 0f 11 45 c0	 movsd	 QWORD PTR _n1_n3$[ebp], xmm0

; 969  : 	n2_n3 = ( v->y * v->z );

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000a5	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000a8	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  000ad	f2 0f 59 41 10	 mulsd	 xmm0, QWORD PTR [ecx+16]
  000b2	f2 0f 11 45 b8	 movsd	 QWORD PTR _n2_n3$[ebp], xmm0

; 970  : 	n2_n2 = ( v->y * v->y );

  000b7	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000ba	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000bd	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  000c2	f2 0f 59 41 08	 mulsd	 xmm0, QWORD PTR [ecx+8]
  000c7	f2 0f 11 45 b0	 movsd	 QWORD PTR _n2_n2$[ebp], xmm0

; 971  : 	n3_n3 = ( v->z * v->z );

  000cc	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000d2	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  000d7	f2 0f 59 41 10	 mulsd	 xmm0, QWORD PTR [ecx+16]
  000dc	f2 0f 11 45 a8	 movsd	 QWORD PTR _n3_n3$[ebp], xmm0

; 972  : 
; 973  : 	n1_n2_cos = ( n1_n2 * cosine );

  000e1	f2 0f 10 45 c8	 movsd	 xmm0, QWORD PTR _n1_n2$[ebp]
  000e6	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  000eb	f2 0f 11 45 a0	 movsd	 QWORD PTR _n1_n2_cos$[ebp], xmm0

; 974  : 	n1_n3_cos = ( n1_n3 * cosine );

  000f0	f2 0f 10 45 c0	 movsd	 xmm0, QWORD PTR _n1_n3$[ebp]
  000f5	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  000fa	f2 0f 11 45 98	 movsd	 QWORD PTR _n1_n3_cos$[ebp], xmm0

; 975  : 	n2_n3_cos = ( n2_n3 * cosine );

  000ff	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR _n2_n3$[ebp]
  00104	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  00109	f2 0f 11 45 90	 movsd	 QWORD PTR _n2_n3_cos$[ebp], xmm0

; 976  : 
; 977  : 	one_minus_n1_n1_cos = ( ( 1.0 - n1_n1 ) * cosine );

  0010e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00116	f2 0f 5c 45 d0	 subsd	 xmm0, QWORD PTR _n1_n1$[ebp]
  0011b	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  00120	f2 0f 11 45 88	 movsd	 QWORD PTR _one_minus_n1_n1_cos$[ebp], xmm0

; 978  : 	one_minus_n2_n2_cos = ( ( 1.0 - n2_n2 ) * cosine );

  00125	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0012d	f2 0f 5c 45 b0	 subsd	 xmm0, QWORD PTR _n2_n2$[ebp]
  00132	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  00137	f2 0f 11 45 80	 movsd	 QWORD PTR _one_minus_n2_n2_cos$[ebp], xmm0

; 979  : 	one_minus_n3_n3_cos = ( ( 1.0 - n3_n3 ) * cosine );

  0013c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00144	f2 0f 5c 45 a8	 subsd	 xmm0, QWORD PTR _n3_n3$[ebp]
  00149	f2 0f 59 45 f8	 mulsd	 xmm0, QWORD PTR _cosine$[ebp]
  0014e	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR _one_minus_n3_n3_cos$[ebp], xmm0

; 980  : 
; 981  : 	m[0][0] = n1_n1 + one_minus_n1_n1_cos;

  00156	f2 0f 10 45 d0	 movsd	 xmm0, QWORD PTR _n1_n1$[ebp]
  0015b	f2 0f 58 45 88	 addsd	 xmm0, QWORD PTR _one_minus_n1_n1_cos$[ebp]
  00160	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00165	6b c8 00	 imul	 ecx, eax, 0
  00168	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0016b	ba 08 00 00 00	 mov	 edx, 8
  00170	6b c2 00	 imul	 eax, edx, 0
  00173	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 982  : 	m[0][1] = n1_n2 - n1_n2_cos - n3_sin;

  00178	f2 0f 10 45 c8	 movsd	 xmm0, QWORD PTR _n1_n2$[ebp]
  0017d	f2 0f 5c 45 a0	 subsd	 xmm0, QWORD PTR _n1_n2_cos$[ebp]
  00182	f2 0f 5c 45 d8	 subsd	 xmm0, QWORD PTR _n3_sin$[ebp]
  00187	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0018c	6b c8 00	 imul	 ecx, eax, 0
  0018f	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00192	ba 08 00 00 00	 mov	 edx, 8
  00197	c1 e2 00	 shl	 edx, 0
  0019a	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 983  : 	m[0][2] = n1_n3 - n1_n3_cos + n2_sin;

  0019f	f2 0f 10 45 c0	 movsd	 xmm0, QWORD PTR _n1_n3$[ebp]
  001a4	f2 0f 5c 45 98	 subsd	 xmm0, QWORD PTR _n1_n3_cos$[ebp]
  001a9	f2 0f 58 45 e0	 addsd	 xmm0, QWORD PTR _n2_sin$[ebp]
  001ae	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001b3	6b c8 00	 imul	 ecx, eax, 0
  001b6	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  001b9	ba 08 00 00 00	 mov	 edx, 8
  001be	d1 e2		 shl	 edx, 1
  001c0	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 984  : 	m[1][0] = n1_n2 - n1_n2_cos + n3_sin;

  001c5	f2 0f 10 45 c8	 movsd	 xmm0, QWORD PTR _n1_n2$[ebp]
  001ca	f2 0f 5c 45 a0	 subsd	 xmm0, QWORD PTR _n1_n2_cos$[ebp]
  001cf	f2 0f 58 45 d8	 addsd	 xmm0, QWORD PTR _n3_sin$[ebp]
  001d4	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001d9	c1 e0 00	 shl	 eax, 0
  001dc	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001df	b9 08 00 00 00	 mov	 ecx, 8
  001e4	6b d1 00	 imul	 edx, ecx, 0
  001e7	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 985  : 	m[1][1] = n2_n2 + one_minus_n2_n2_cos;

  001ec	f2 0f 10 45 b0	 movsd	 xmm0, QWORD PTR _n2_n2$[ebp]
  001f1	f2 0f 58 45 80	 addsd	 xmm0, QWORD PTR _one_minus_n2_n2_cos$[ebp]
  001f6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001fb	c1 e0 00	 shl	 eax, 0
  001fe	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00201	b9 08 00 00 00	 mov	 ecx, 8
  00206	c1 e1 00	 shl	 ecx, 0
  00209	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 986  : 	m[1][2] = n2_n3 - n2_n3_cos - n1_sin;

  0020e	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR _n2_n3$[ebp]
  00213	f2 0f 5c 45 90	 subsd	 xmm0, QWORD PTR _n2_n3_cos$[ebp]
  00218	f2 0f 5c 45 e8	 subsd	 xmm0, QWORD PTR _n1_sin$[ebp]
  0021d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00222	c1 e0 00	 shl	 eax, 0
  00225	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00228	b9 08 00 00 00	 mov	 ecx, 8
  0022d	d1 e1		 shl	 ecx, 1
  0022f	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 987  : 	m[2][0] = n1_n3 - n1_n3_cos - n2_sin;

  00234	f2 0f 10 45 c0	 movsd	 xmm0, QWORD PTR _n1_n3$[ebp]
  00239	f2 0f 5c 45 98	 subsd	 xmm0, QWORD PTR _n1_n3_cos$[ebp]
  0023e	f2 0f 5c 45 e0	 subsd	 xmm0, QWORD PTR _n2_sin$[ebp]
  00243	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00248	d1 e0		 shl	 eax, 1
  0024a	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0024d	b9 08 00 00 00	 mov	 ecx, 8
  00252	6b d1 00	 imul	 edx, ecx, 0
  00255	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 988  : 	m[2][1] = n2_n3 - n2_n3_cos + n1_sin;

  0025a	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR _n2_n3$[ebp]
  0025f	f2 0f 5c 45 90	 subsd	 xmm0, QWORD PTR _n2_n3_cos$[ebp]
  00264	f2 0f 58 45 e8	 addsd	 xmm0, QWORD PTR _n1_sin$[ebp]
  00269	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0026e	d1 e0		 shl	 eax, 1
  00270	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00273	b9 08 00 00 00	 mov	 ecx, 8
  00278	c1 e1 00	 shl	 ecx, 0
  0027b	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 989  : 	m[2][2] = n3_n3 + one_minus_n3_n3_cos;

  00280	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR _n3_n3$[ebp]
  00285	f2 0f 58 85 78
	ff ff ff	 addsd	 xmm0, QWORD PTR _one_minus_n3_n3_cos$[ebp]
  0028d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00292	d1 e0		 shl	 eax, 1
  00294	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00297	b9 08 00 00 00	 mov	 ecx, 8
  0029c	d1 e1		 shl	 ecx, 1
  0029e	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 990  : }

  002a3	5f		 pop	 edi
  002a4	5e		 pop	 esi
  002a5	5b		 pop	 ebx
  002a6	8b e5		 mov	 esp, ebp
  002a8	5d		 pop	 ebp
  002a9	c2 0c 00	 ret	 12			; 0000000cH
?get_arbitrary_rotation_double_matrix@@YGXQAY02NPBUDOUBLE_VEC3D@@M@Z ENDP ; get_arbitrary_rotation_double_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_double_matrix3x3_transpose_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_double_matrix3x3_transpose_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z PROC ; multiply_double_matrix3x3_transpose_double_matrix3x3, COMDAT

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 913  : 
; 914  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[0][1] * b[0][1] ) + ( a[0][2] * b[0][2] ) );

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 08 00 00 00	 mov	 esi, 8
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00034	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00039	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 08 00 00 00	 mov	 edx, 8
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00051	6b c0 00	 imul	 eax, eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 08 00 00 00	 mov	 esi, 8
  0005c	c1 e6 00	 shl	 esi, 0
  0005f	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00064	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00069	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0006d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00078	b8 08 00 00 00	 mov	 eax, 8
  0007d	d1 e0		 shl	 eax, 1
  0007f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00084	6b c9 00	 imul	 ecx, ecx, 0
  00087	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0008a	be 08 00 00 00	 mov	 esi, 8
  0008f	d1 e6		 shl	 esi, 1
  00091	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00096	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0009b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0009f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000a4	6b c2 00	 imul	 eax, edx, 0
  000a7	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000aa	b9 08 00 00 00	 mov	 ecx, 8
  000af	6b d1 00	 imul	 edx, ecx, 0
  000b2	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 915  : 	result[0][1] = ( ( a[0][0] * b[1][0] ) + ( a[0][1] * b[1][1] ) + ( a[0][2] * b[1][2] ) );

  000b7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 08 00 00 00	 mov	 edx, 8
  000c7	6b c2 00	 imul	 eax, edx, 0
  000ca	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000cf	c1 e2 00	 shl	 edx, 0
  000d2	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  000d5	be 08 00 00 00	 mov	 esi, 8
  000da	6b f6 00	 imul	 esi, esi, 0
  000dd	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  000e2	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  000e7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 08 00 00 00	 mov	 edx, 8
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 08 00 00 00	 mov	 esi, 8
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00112	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00117	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0011b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00120	6b d1 00	 imul	 edx, ecx, 0
  00123	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00126	b8 08 00 00 00	 mov	 eax, 8
  0012b	d1 e0		 shl	 eax, 1
  0012d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00132	c1 e1 00	 shl	 ecx, 0
  00135	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00138	be 08 00 00 00	 mov	 esi, 8
  0013d	d1 e6		 shl	 esi, 1
  0013f	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00144	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00149	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0014d	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00152	6b c2 00	 imul	 eax, edx, 0
  00155	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00158	b9 08 00 00 00	 mov	 ecx, 8
  0015d	c1 e1 00	 shl	 ecx, 0
  00160	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 916  : 	result[0][2] = ( ( a[0][0] * b[2][0] ) + ( a[0][1] * b[2][1] ) + ( a[0][2] * b[2][2] ) );

  00165	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 08 00 00 00	 mov	 edx, 8
  00175	6b c2 00	 imul	 eax, edx, 0
  00178	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0017d	d1 e2		 shl	 edx, 1
  0017f	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00182	be 08 00 00 00	 mov	 esi, 8
  00187	6b f6 00	 imul	 esi, esi, 0
  0018a	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0018f	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00194	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00199	6b c8 00	 imul	 ecx, eax, 0
  0019c	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019f	ba 08 00 00 00	 mov	 edx, 8
  001a4	c1 e2 00	 shl	 edx, 0
  001a7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001ac	d1 e0		 shl	 eax, 1
  001ae	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b1	be 08 00 00 00	 mov	 esi, 8
  001b6	c1 e6 00	 shl	 esi, 0
  001b9	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  001be	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  001c3	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001c7	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001cc	6b d1 00	 imul	 edx, ecx, 0
  001cf	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  001d2	b8 08 00 00 00	 mov	 eax, 8
  001d7	d1 e0		 shl	 eax, 1
  001d9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001de	d1 e1		 shl	 ecx, 1
  001e0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001e3	be 08 00 00 00	 mov	 esi, 8
  001e8	d1 e6		 shl	 esi, 1
  001ea	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  001ef	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  001f4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001f8	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  001fd	6b c2 00	 imul	 eax, edx, 0
  00200	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00203	b9 08 00 00 00	 mov	 ecx, 8
  00208	d1 e1		 shl	 ecx, 1
  0020a	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 917  : 
; 918  : 	result[1][0] = ( ( a[1][0] * b[0][0] ) + ( a[1][1] * b[0][1] ) + ( a[1][2] * b[0][2] ) );

  0020f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00214	c1 e0 00	 shl	 eax, 0
  00217	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0021a	b9 08 00 00 00	 mov	 ecx, 8
  0021f	6b d1 00	 imul	 edx, ecx, 0
  00222	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00227	6b c9 00	 imul	 ecx, ecx, 0
  0022a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0022d	be 08 00 00 00	 mov	 esi, 8
  00232	6b f6 00	 imul	 esi, esi, 0
  00235	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  0023a	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  0023f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00244	c1 e2 00	 shl	 edx, 0
  00247	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0024a	b8 08 00 00 00	 mov	 eax, 8
  0024f	c1 e0 00	 shl	 eax, 0
  00252	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00257	6b c9 00	 imul	 ecx, ecx, 0
  0025a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025d	be 08 00 00 00	 mov	 esi, 8
  00262	c1 e6 00	 shl	 esi, 0
  00265	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0026a	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0026f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00273	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00278	c1 e2 00	 shl	 edx, 0
  0027b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027e	b8 08 00 00 00	 mov	 eax, 8
  00283	d1 e0		 shl	 eax, 1
  00285	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0028a	6b c9 00	 imul	 ecx, ecx, 0
  0028d	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00290	be 08 00 00 00	 mov	 esi, 8
  00295	d1 e6		 shl	 esi, 1
  00297	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0029c	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  002a1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002a5	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  002aa	c1 e2 00	 shl	 edx, 0
  002ad	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  002b0	b8 08 00 00 00	 mov	 eax, 8
  002b5	6b c8 00	 imul	 ecx, eax, 0
  002b8	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 919  : 	result[1][1] = ( ( a[1][0] * b[1][0] ) + ( a[1][1] * b[1][1] ) + ( a[1][2] * b[1][2] ) );

  002bd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002c2	c1 e0 00	 shl	 eax, 0
  002c5	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  002c8	b9 08 00 00 00	 mov	 ecx, 8
  002cd	6b d1 00	 imul	 edx, ecx, 0
  002d0	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  002d5	c1 e1 00	 shl	 ecx, 0
  002d8	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  002db	be 08 00 00 00	 mov	 esi, 8
  002e0	6b f6 00	 imul	 esi, esi, 0
  002e3	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  002e8	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  002ed	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  002f2	c1 e2 00	 shl	 edx, 0
  002f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  002f8	b8 08 00 00 00	 mov	 eax, 8
  002fd	c1 e0 00	 shl	 eax, 0
  00300	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00305	c1 e1 00	 shl	 ecx, 0
  00308	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0030b	be 08 00 00 00	 mov	 esi, 8
  00310	c1 e6 00	 shl	 esi, 0
  00313	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00318	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0031d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00321	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00326	c1 e2 00	 shl	 edx, 0
  00329	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0032c	b8 08 00 00 00	 mov	 eax, 8
  00331	d1 e0		 shl	 eax, 1
  00333	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00338	c1 e1 00	 shl	 ecx, 0
  0033b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0033e	be 08 00 00 00	 mov	 esi, 8
  00343	d1 e6		 shl	 esi, 1
  00345	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0034a	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0034f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00353	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00358	c1 e2 00	 shl	 edx, 0
  0035b	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0035e	b8 08 00 00 00	 mov	 eax, 8
  00363	c1 e0 00	 shl	 eax, 0
  00366	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 920  : 	result[1][2] = ( ( a[1][0] * b[2][0] ) + ( a[1][1] * b[2][1] ) + ( a[1][2] * b[2][2] ) );

  0036b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00370	c1 e0 00	 shl	 eax, 0
  00373	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00376	b9 08 00 00 00	 mov	 ecx, 8
  0037b	6b d1 00	 imul	 edx, ecx, 0
  0037e	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00383	d1 e1		 shl	 ecx, 1
  00385	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00388	be 08 00 00 00	 mov	 esi, 8
  0038d	6b f6 00	 imul	 esi, esi, 0
  00390	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  00395	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  0039a	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0039f	c1 e2 00	 shl	 edx, 0
  003a2	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003a5	b8 08 00 00 00	 mov	 eax, 8
  003aa	c1 e0 00	 shl	 eax, 0
  003ad	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003b2	d1 e1		 shl	 ecx, 1
  003b4	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003b7	be 08 00 00 00	 mov	 esi, 8
  003bc	c1 e6 00	 shl	 esi, 0
  003bf	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  003c4	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  003c9	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003cd	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  003d2	c1 e2 00	 shl	 edx, 0
  003d5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003d8	b8 08 00 00 00	 mov	 eax, 8
  003dd	d1 e0		 shl	 eax, 1
  003df	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003e4	d1 e1		 shl	 ecx, 1
  003e6	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003e9	be 08 00 00 00	 mov	 esi, 8
  003ee	d1 e6		 shl	 esi, 1
  003f0	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  003f5	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  003fa	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003fe	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00403	c1 e2 00	 shl	 edx, 0
  00406	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00409	b8 08 00 00 00	 mov	 eax, 8
  0040e	d1 e0		 shl	 eax, 1
  00410	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 921  : 
; 922  : 	result[2][0] = ( ( a[2][0] * b[0][0] ) + ( a[2][1] * b[0][1] ) + ( a[2][2] * b[0][2] ) );

  00415	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0041a	d1 e0		 shl	 eax, 1
  0041c	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0041f	b9 08 00 00 00	 mov	 ecx, 8
  00424	6b d1 00	 imul	 edx, ecx, 0
  00427	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0042c	6b c9 00	 imul	 ecx, ecx, 0
  0042f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00432	be 08 00 00 00	 mov	 esi, 8
  00437	6b f6 00	 imul	 esi, esi, 0
  0043a	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  0043f	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  00444	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00449	d1 e2		 shl	 edx, 1
  0044b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0044e	b8 08 00 00 00	 mov	 eax, 8
  00453	c1 e0 00	 shl	 eax, 0
  00456	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0045b	6b c9 00	 imul	 ecx, ecx, 0
  0045e	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00461	be 08 00 00 00	 mov	 esi, 8
  00466	c1 e6 00	 shl	 esi, 0
  00469	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0046e	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00473	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00477	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0047c	d1 e2		 shl	 edx, 1
  0047e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00481	b8 08 00 00 00	 mov	 eax, 8
  00486	d1 e0		 shl	 eax, 1
  00488	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0048d	6b c9 00	 imul	 ecx, ecx, 0
  00490	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00493	be 08 00 00 00	 mov	 esi, 8
  00498	d1 e6		 shl	 esi, 1
  0049a	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0049f	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  004a4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004a8	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  004ad	d1 e2		 shl	 edx, 1
  004af	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  004b2	b8 08 00 00 00	 mov	 eax, 8
  004b7	6b c8 00	 imul	 ecx, eax, 0
  004ba	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 923  : 	result[2][1] = ( ( a[2][0] * b[1][0] ) + ( a[2][1] * b[1][1] ) + ( a[2][2] * b[1][2] ) );

  004bf	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  004c4	d1 e0		 shl	 eax, 1
  004c6	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  004c9	b9 08 00 00 00	 mov	 ecx, 8
  004ce	6b d1 00	 imul	 edx, ecx, 0
  004d1	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  004d6	c1 e1 00	 shl	 ecx, 0
  004d9	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004dc	be 08 00 00 00	 mov	 esi, 8
  004e1	6b f6 00	 imul	 esi, esi, 0
  004e4	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  004e9	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  004ee	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  004f3	d1 e2		 shl	 edx, 1
  004f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004f8	b8 08 00 00 00	 mov	 eax, 8
  004fd	c1 e0 00	 shl	 eax, 0
  00500	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00505	c1 e1 00	 shl	 ecx, 0
  00508	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0050b	be 08 00 00 00	 mov	 esi, 8
  00510	c1 e6 00	 shl	 esi, 0
  00513	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00518	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0051d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00521	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00526	d1 e2		 shl	 edx, 1
  00528	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0052b	b8 08 00 00 00	 mov	 eax, 8
  00530	d1 e0		 shl	 eax, 1
  00532	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00537	c1 e1 00	 shl	 ecx, 0
  0053a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0053d	be 08 00 00 00	 mov	 esi, 8
  00542	d1 e6		 shl	 esi, 1
  00544	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00549	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0054e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00552	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00557	d1 e2		 shl	 edx, 1
  00559	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0055c	b8 08 00 00 00	 mov	 eax, 8
  00561	c1 e0 00	 shl	 eax, 0
  00564	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 924  : 	result[2][2] = ( ( a[2][0] * b[2][0] ) + ( a[2][1] * b[2][1] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0056e	d1 e0		 shl	 eax, 1
  00570	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00573	b9 08 00 00 00	 mov	 ecx, 8
  00578	6b d1 00	 imul	 edx, ecx, 0
  0057b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00580	d1 e1		 shl	 ecx, 1
  00582	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00585	be 08 00 00 00	 mov	 esi, 8
  0058a	6b f6 00	 imul	 esi, esi, 0
  0058d	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  00592	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  00597	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0059c	d1 e2		 shl	 edx, 1
  0059e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005a1	b8 08 00 00 00	 mov	 eax, 8
  005a6	c1 e0 00	 shl	 eax, 0
  005a9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005ae	d1 e1		 shl	 ecx, 1
  005b0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005b3	be 08 00 00 00	 mov	 esi, 8
  005b8	c1 e6 00	 shl	 esi, 0
  005bb	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  005c0	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  005c5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005c9	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  005ce	d1 e2		 shl	 edx, 1
  005d0	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005d3	b8 08 00 00 00	 mov	 eax, 8
  005d8	d1 e0		 shl	 eax, 1
  005da	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005df	d1 e1		 shl	 ecx, 1
  005e1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005e4	be 08 00 00 00	 mov	 esi, 8
  005e9	d1 e6		 shl	 esi, 1
  005eb	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  005f0	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  005f5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005f9	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  005fe	d1 e2		 shl	 edx, 1
  00600	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00603	b8 08 00 00 00	 mov	 eax, 8
  00608	d1 e0		 shl	 eax, 1
  0060a	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 925  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_double_matrix3x3_transpose_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ENDP ; multiply_double_matrix3x3_transpose_double_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_transpose_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_transpose_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z PROC ; multiply_transpose_double_matrix3x3_double_matrix3x3, COMDAT

; 892  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 893  : 
; 894  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 08 00 00 00	 mov	 esi, 8
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00034	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00039	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0003e	c1 e0 00	 shl	 eax, 0
  00041	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00044	b9 08 00 00 00	 mov	 ecx, 8
  00049	6b d1 00	 imul	 edx, ecx, 0
  0004c	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00051	c1 e1 00	 shl	 ecx, 0
  00054	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00057	be 08 00 00 00	 mov	 esi, 8
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f2 0f 10 0c 10	 movsd	 xmm1, QWORD PTR [eax+edx]
  00064	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00069	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0006d	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00072	d1 e2		 shl	 edx, 1
  00074	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00077	b8 08 00 00 00	 mov	 eax, 8
  0007c	6b c8 00	 imul	 ecx, eax, 0
  0007f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00084	d1 e0		 shl	 eax, 1
  00086	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00089	be 08 00 00 00	 mov	 esi, 8
  0008e	6b f6 00	 imul	 esi, esi, 0
  00091	f2 0f 10 0c 0a	 movsd	 xmm1, QWORD PTR [edx+ecx]
  00096	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0009b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0009f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000a4	6b d1 00	 imul	 edx, ecx, 0
  000a7	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  000aa	b8 08 00 00 00	 mov	 eax, 8
  000af	6b c8 00	 imul	 ecx, eax, 0
  000b2	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 895  : 	result[0][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  000b7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 08 00 00 00	 mov	 edx, 8
  000c7	c1 e2 00	 shl	 edx, 0
  000ca	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000cf	6b c0 00	 imul	 eax, eax, 0
  000d2	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  000d5	be 08 00 00 00	 mov	 esi, 8
  000da	c1 e6 00	 shl	 esi, 0
  000dd	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  000e2	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  000e7	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  000ec	c1 e1 00	 shl	 ecx, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 08 00 00 00	 mov	 edx, 8
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 08 00 00 00	 mov	 esi, 8
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00112	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00117	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0011b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00120	d1 e1		 shl	 ecx, 1
  00122	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00125	ba 08 00 00 00	 mov	 edx, 8
  0012a	c1 e2 00	 shl	 edx, 0
  0012d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00132	d1 e0		 shl	 eax, 1
  00134	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00137	be 08 00 00 00	 mov	 esi, 8
  0013c	c1 e6 00	 shl	 esi, 0
  0013f	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00144	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00149	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0014d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00152	6b d1 00	 imul	 edx, ecx, 0
  00155	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00158	b8 08 00 00 00	 mov	 eax, 8
  0015d	c1 e0 00	 shl	 eax, 0
  00160	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 896  : 	result[0][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00165	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 08 00 00 00	 mov	 edx, 8
  00175	d1 e2		 shl	 edx, 1
  00177	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0017c	6b c0 00	 imul	 eax, eax, 0
  0017f	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00182	be 08 00 00 00	 mov	 esi, 8
  00187	d1 e6		 shl	 esi, 1
  00189	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  0018e	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  00193	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00198	c1 e1 00	 shl	 ecx, 0
  0019b	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019e	ba 08 00 00 00	 mov	 edx, 8
  001a3	d1 e2		 shl	 edx, 1
  001a5	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001aa	c1 e0 00	 shl	 eax, 0
  001ad	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b0	be 08 00 00 00	 mov	 esi, 8
  001b5	d1 e6		 shl	 esi, 1
  001b7	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  001bc	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  001c1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001c5	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001ca	d1 e1		 shl	 ecx, 1
  001cc	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  001cf	ba 08 00 00 00	 mov	 edx, 8
  001d4	d1 e2		 shl	 edx, 1
  001d6	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001db	d1 e0		 shl	 eax, 1
  001dd	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001e0	be 08 00 00 00	 mov	 esi, 8
  001e5	d1 e6		 shl	 esi, 1
  001e7	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  001ec	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  001f1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001f5	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001fa	6b d1 00	 imul	 edx, ecx, 0
  001fd	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00200	b8 08 00 00 00	 mov	 eax, 8
  00205	d1 e0		 shl	 eax, 1
  00207	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 897  : 
; 898  : 	result[1][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  0020c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00211	6b c8 00	 imul	 ecx, eax, 0
  00214	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00217	ba 08 00 00 00	 mov	 edx, 8
  0021c	6b c2 00	 imul	 eax, edx, 0
  0021f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00224	6b d2 00	 imul	 edx, edx, 0
  00227	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  0022a	be 08 00 00 00	 mov	 esi, 8
  0022f	6b f6 00	 imul	 esi, esi, 0
  00232	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00237	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  0023c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00241	c1 e0 00	 shl	 eax, 0
  00244	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00247	b9 08 00 00 00	 mov	 ecx, 8
  0024c	6b d1 00	 imul	 edx, ecx, 0
  0024f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00254	c1 e1 00	 shl	 ecx, 0
  00257	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025a	be 08 00 00 00	 mov	 esi, 8
  0025f	6b f6 00	 imul	 esi, esi, 0
  00262	f2 0f 10 0c 10	 movsd	 xmm1, QWORD PTR [eax+edx]
  00267	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0026c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00270	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00275	d1 e2		 shl	 edx, 1
  00277	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027a	b8 08 00 00 00	 mov	 eax, 8
  0027f	6b c8 00	 imul	 ecx, eax, 0
  00282	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00287	d1 e0		 shl	 eax, 1
  00289	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0028c	be 08 00 00 00	 mov	 esi, 8
  00291	6b f6 00	 imul	 esi, esi, 0
  00294	f2 0f 10 0c 0a	 movsd	 xmm1, QWORD PTR [edx+ecx]
  00299	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0029e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002a2	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  002a7	c1 e1 00	 shl	 ecx, 0
  002aa	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  002ad	ba 08 00 00 00	 mov	 edx, 8
  002b2	6b c2 00	 imul	 eax, edx, 0
  002b5	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 899  : 	result[1][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  002ba	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002bf	6b c8 00	 imul	 ecx, eax, 0
  002c2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002c5	ba 08 00 00 00	 mov	 edx, 8
  002ca	c1 e2 00	 shl	 edx, 0
  002cd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002d2	6b c0 00	 imul	 eax, eax, 0
  002d5	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  002d8	be 08 00 00 00	 mov	 esi, 8
  002dd	c1 e6 00	 shl	 esi, 0
  002e0	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  002e5	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  002ea	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  002ef	c1 e1 00	 shl	 ecx, 0
  002f2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002f5	ba 08 00 00 00	 mov	 edx, 8
  002fa	c1 e2 00	 shl	 edx, 0
  002fd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00302	c1 e0 00	 shl	 eax, 0
  00305	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00308	be 08 00 00 00	 mov	 esi, 8
  0030d	c1 e6 00	 shl	 esi, 0
  00310	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00315	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0031a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0031e	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00323	d1 e1		 shl	 ecx, 1
  00325	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00328	ba 08 00 00 00	 mov	 edx, 8
  0032d	c1 e2 00	 shl	 edx, 0
  00330	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00335	d1 e0		 shl	 eax, 1
  00337	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0033a	be 08 00 00 00	 mov	 esi, 8
  0033f	c1 e6 00	 shl	 esi, 0
  00342	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00347	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0034c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00350	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00355	c1 e1 00	 shl	 ecx, 0
  00358	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0035b	ba 08 00 00 00	 mov	 edx, 8
  00360	c1 e2 00	 shl	 edx, 0
  00363	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 900  : 	result[1][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00368	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0036d	6b c8 00	 imul	 ecx, eax, 0
  00370	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00373	ba 08 00 00 00	 mov	 edx, 8
  00378	d1 e2		 shl	 edx, 1
  0037a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0037f	6b c0 00	 imul	 eax, eax, 0
  00382	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00385	be 08 00 00 00	 mov	 esi, 8
  0038a	d1 e6		 shl	 esi, 1
  0038c	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  00391	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  00396	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0039b	c1 e1 00	 shl	 ecx, 0
  0039e	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  003a1	ba 08 00 00 00	 mov	 edx, 8
  003a6	d1 e2		 shl	 edx, 1
  003a8	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  003ad	c1 e0 00	 shl	 eax, 0
  003b0	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  003b3	be 08 00 00 00	 mov	 esi, 8
  003b8	d1 e6		 shl	 esi, 1
  003ba	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  003bf	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  003c4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003c8	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003cd	d1 e1		 shl	 ecx, 1
  003cf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  003d2	ba 08 00 00 00	 mov	 edx, 8
  003d7	d1 e2		 shl	 edx, 1
  003d9	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  003de	d1 e0		 shl	 eax, 1
  003e0	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  003e3	be 08 00 00 00	 mov	 esi, 8
  003e8	d1 e6		 shl	 esi, 1
  003ea	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  003ef	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  003f4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003f8	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003fd	c1 e1 00	 shl	 ecx, 0
  00400	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00403	ba 08 00 00 00	 mov	 edx, 8
  00408	d1 e2		 shl	 edx, 1
  0040a	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 901  : 
; 902  : 	result[2][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  0040f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00414	6b c8 00	 imul	 ecx, eax, 0
  00417	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0041a	ba 08 00 00 00	 mov	 edx, 8
  0041f	6b c2 00	 imul	 eax, edx, 0
  00422	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00427	6b d2 00	 imul	 edx, edx, 0
  0042a	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  0042d	be 08 00 00 00	 mov	 esi, 8
  00432	6b f6 00	 imul	 esi, esi, 0
  00435	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0043a	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  0043f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00444	c1 e0 00	 shl	 eax, 0
  00447	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0044a	b9 08 00 00 00	 mov	 ecx, 8
  0044f	6b d1 00	 imul	 edx, ecx, 0
  00452	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00457	c1 e1 00	 shl	 ecx, 0
  0045a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0045d	be 08 00 00 00	 mov	 esi, 8
  00462	6b f6 00	 imul	 esi, esi, 0
  00465	f2 0f 10 0c 10	 movsd	 xmm1, QWORD PTR [eax+edx]
  0046a	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0046f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00473	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00478	d1 e2		 shl	 edx, 1
  0047a	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0047d	b8 08 00 00 00	 mov	 eax, 8
  00482	6b c8 00	 imul	 ecx, eax, 0
  00485	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0048a	d1 e0		 shl	 eax, 1
  0048c	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0048f	be 08 00 00 00	 mov	 esi, 8
  00494	6b f6 00	 imul	 esi, esi, 0
  00497	f2 0f 10 0c 0a	 movsd	 xmm1, QWORD PTR [edx+ecx]
  0049c	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  004a1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004a5	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  004aa	d1 e1		 shl	 ecx, 1
  004ac	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  004af	ba 08 00 00 00	 mov	 edx, 8
  004b4	6b c2 00	 imul	 eax, edx, 0
  004b7	f2 0f 11 04 01	 movsd	 QWORD PTR [ecx+eax], xmm0

; 903  : 	result[2][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  004bc	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  004c1	6b c8 00	 imul	 ecx, eax, 0
  004c4	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  004c7	ba 08 00 00 00	 mov	 edx, 8
  004cc	c1 e2 00	 shl	 edx, 0
  004cf	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  004d4	6b c0 00	 imul	 eax, eax, 0
  004d7	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  004da	be 08 00 00 00	 mov	 esi, 8
  004df	c1 e6 00	 shl	 esi, 0
  004e2	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  004e7	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  004ec	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  004f1	c1 e1 00	 shl	 ecx, 0
  004f4	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  004f7	ba 08 00 00 00	 mov	 edx, 8
  004fc	c1 e2 00	 shl	 edx, 0
  004ff	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00504	c1 e0 00	 shl	 eax, 0
  00507	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0050a	be 08 00 00 00	 mov	 esi, 8
  0050f	c1 e6 00	 shl	 esi, 0
  00512	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00517	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0051c	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00520	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00525	d1 e1		 shl	 ecx, 1
  00527	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0052a	ba 08 00 00 00	 mov	 edx, 8
  0052f	c1 e2 00	 shl	 edx, 0
  00532	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00537	d1 e0		 shl	 eax, 1
  00539	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0053c	be 08 00 00 00	 mov	 esi, 8
  00541	c1 e6 00	 shl	 esi, 0
  00544	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00549	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  0054e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00552	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00557	d1 e1		 shl	 ecx, 1
  00559	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0055c	ba 08 00 00 00	 mov	 edx, 8
  00561	c1 e2 00	 shl	 edx, 0
  00564	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 904  : 	result[2][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0056e	6b c8 00	 imul	 ecx, eax, 0
  00571	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00574	ba 08 00 00 00	 mov	 edx, 8
  00579	d1 e2		 shl	 edx, 1
  0057b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00580	6b c0 00	 imul	 eax, eax, 0
  00583	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00586	be 08 00 00 00	 mov	 esi, 8
  0058b	d1 e6		 shl	 esi, 1
  0058d	f2 0f 10 04 11	 movsd	 xmm0, QWORD PTR [ecx+edx]
  00592	f2 0f 59 04 30	 mulsd	 xmm0, QWORD PTR [eax+esi]
  00597	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0059c	c1 e1 00	 shl	 ecx, 0
  0059f	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  005a2	ba 08 00 00 00	 mov	 edx, 8
  005a7	d1 e2		 shl	 edx, 1
  005a9	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  005ae	c1 e0 00	 shl	 eax, 0
  005b1	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  005b4	be 08 00 00 00	 mov	 esi, 8
  005b9	d1 e6		 shl	 esi, 1
  005bb	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  005c0	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  005c5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005c9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005ce	d1 e1		 shl	 ecx, 1
  005d0	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  005d3	ba 08 00 00 00	 mov	 edx, 8
  005d8	d1 e2		 shl	 edx, 1
  005da	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  005df	d1 e0		 shl	 eax, 1
  005e1	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  005e4	be 08 00 00 00	 mov	 esi, 8
  005e9	d1 e6		 shl	 esi, 1
  005eb	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  005f0	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  005f5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005f9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005fe	d1 e1		 shl	 ecx, 1
  00600	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00603	ba 08 00 00 00	 mov	 edx, 8
  00608	d1 e2		 shl	 edx, 1
  0060a	f2 0f 11 04 11	 movsd	 QWORD PTR [ecx+edx], xmm0

; 905  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_transpose_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ENDP ; multiply_transpose_double_matrix3x3_double_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z PROC ; multiply_double_matrix3x3_double_matrix3x3, COMDAT

; 872  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 873  : 
; 874  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[0][1] * b[1][0] ) + ( a[0][2] * b[2][0] ) );

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 08 00 00 00	 mov	 esi, 8
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  00034	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00039	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 08 00 00 00	 mov	 edx, 8
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00051	c1 e0 00	 shl	 eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 08 00 00 00	 mov	 esi, 8
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00064	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00069	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0006d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00078	b8 08 00 00 00	 mov	 eax, 8
  0007d	d1 e0		 shl	 eax, 1
  0007f	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00084	d1 e1		 shl	 ecx, 1
  00086	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00089	be 08 00 00 00	 mov	 esi, 8
  0008e	6b f6 00	 imul	 esi, esi, 0
  00091	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00096	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0009b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0009f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000a4	6b c2 00	 imul	 eax, edx, 0
  000a7	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000aa	b9 08 00 00 00	 mov	 ecx, 8
  000af	6b d1 00	 imul	 edx, ecx, 0
  000b2	f2 0f 11 04 10	 movsd	 QWORD PTR [eax+edx], xmm0

; 875  : 	result[0][1] = ( ( a[0][0] * b[0][1] ) + ( a[0][1] * b[1][1] ) + ( a[0][2] * b[2][1] ) );

  000b7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 08 00 00 00	 mov	 edx, 8
  000c7	6b c2 00	 imul	 eax, edx, 0
  000ca	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  000cf	6b d2 00	 imul	 edx, edx, 0
  000d2	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  000d5	be 08 00 00 00	 mov	 esi, 8
  000da	c1 e6 00	 shl	 esi, 0
  000dd	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  000e2	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  000e7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 08 00 00 00	 mov	 edx, 8
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 08 00 00 00	 mov	 esi, 8
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  00112	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  00117	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0011b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00120	6b d1 00	 imul	 edx, ecx, 0
  00123	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00126	b8 08 00 00 00	 mov	 eax, 8
  0012b	d1 e0		 shl	 eax, 1
  0012d	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00132	d1 e1		 shl	 ecx, 1
  00134	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00137	be 08 00 00 00	 mov	 esi, 8
  0013c	c1 e6 00	 shl	 esi, 0
  0013f	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00144	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00149	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0014d	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00152	6b c2 00	 imul	 eax, edx, 0
  00155	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00158	b9 08 00 00 00	 mov	 ecx, 8
  0015d	c1 e1 00	 shl	 ecx, 0
  00160	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 876  : 	result[0][2] = ( ( a[0][0] * b[0][2] ) + ( a[0][1] * b[1][2] ) + ( a[0][2] * b[2][2] ) );

  00165	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 08 00 00 00	 mov	 edx, 8
  00175	6b c2 00	 imul	 eax, edx, 0
  00178	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0017d	6b d2 00	 imul	 edx, edx, 0
  00180	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00183	be 08 00 00 00	 mov	 esi, 8
  00188	d1 e6		 shl	 esi, 1
  0018a	f2 0f 10 04 01	 movsd	 xmm0, QWORD PTR [ecx+eax]
  0018f	f2 0f 59 04 32	 mulsd	 xmm0, QWORD PTR [edx+esi]
  00194	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00199	6b c8 00	 imul	 ecx, eax, 0
  0019c	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019f	ba 08 00 00 00	 mov	 edx, 8
  001a4	c1 e2 00	 shl	 edx, 0
  001a7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001ac	c1 e0 00	 shl	 eax, 0
  001af	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b2	be 08 00 00 00	 mov	 esi, 8
  001b7	d1 e6		 shl	 esi, 1
  001b9	f2 0f 10 0c 11	 movsd	 xmm1, QWORD PTR [ecx+edx]
  001be	f2 0f 59 0c 30	 mulsd	 xmm1, QWORD PTR [eax+esi]
  001c3	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001c7	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001cc	6b d1 00	 imul	 edx, ecx, 0
  001cf	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  001d2	b8 08 00 00 00	 mov	 eax, 8
  001d7	d1 e0		 shl	 eax, 1
  001d9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  001de	d1 e1		 shl	 ecx, 1
  001e0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001e3	be 08 00 00 00	 mov	 esi, 8
  001e8	d1 e6		 shl	 esi, 1
  001ea	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  001ef	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  001f4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001f8	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  001fd	6b c2 00	 imul	 eax, edx, 0
  00200	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00203	b9 08 00 00 00	 mov	 ecx, 8
  00208	d1 e1		 shl	 ecx, 1
  0020a	f2 0f 11 04 08	 movsd	 QWORD PTR [eax+ecx], xmm0

; 877  : 
; 878  : 	result[1][0] = ( ( a[1][0] * b[0][0] ) + ( a[1][1] * b[1][0] ) + ( a[1][2] * b[2][0] ) );

  0020f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00214	c1 e0 00	 shl	 eax, 0
  00217	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0021a	b9 08 00 00 00	 mov	 ecx, 8
  0021f	6b d1 00	 imul	 edx, ecx, 0
  00222	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00227	6b c9 00	 imul	 ecx, ecx, 0
  0022a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0022d	be 08 00 00 00	 mov	 esi, 8
  00232	6b f6 00	 imul	 esi, esi, 0
  00235	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  0023a	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  0023f	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00244	c1 e2 00	 shl	 edx, 0
  00247	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0024a	b8 08 00 00 00	 mov	 eax, 8
  0024f	c1 e0 00	 shl	 eax, 0
  00252	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00257	c1 e1 00	 shl	 ecx, 0
  0025a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025d	be 08 00 00 00	 mov	 esi, 8
  00262	6b f6 00	 imul	 esi, esi, 0
  00265	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0026a	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0026f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00273	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00278	c1 e2 00	 shl	 edx, 0
  0027b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027e	b8 08 00 00 00	 mov	 eax, 8
  00283	d1 e0		 shl	 eax, 1
  00285	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0028a	d1 e1		 shl	 ecx, 1
  0028c	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0028f	be 08 00 00 00	 mov	 esi, 8
  00294	6b f6 00	 imul	 esi, esi, 0
  00297	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0029c	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  002a1	f2 0f 58 c1	 addsd	 xmm0, xmm1
  002a5	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  002aa	c1 e2 00	 shl	 edx, 0
  002ad	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  002b0	b8 08 00 00 00	 mov	 eax, 8
  002b5	6b c8 00	 imul	 ecx, eax, 0
  002b8	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 879  : 	result[1][1] = ( ( a[1][0] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[1][2] * b[2][1] ) );

  002bd	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  002c2	c1 e0 00	 shl	 eax, 0
  002c5	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  002c8	b9 08 00 00 00	 mov	 ecx, 8
  002cd	6b d1 00	 imul	 edx, ecx, 0
  002d0	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  002d5	6b c9 00	 imul	 ecx, ecx, 0
  002d8	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  002db	be 08 00 00 00	 mov	 esi, 8
  002e0	c1 e6 00	 shl	 esi, 0
  002e3	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  002e8	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  002ed	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  002f2	c1 e2 00	 shl	 edx, 0
  002f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  002f8	b8 08 00 00 00	 mov	 eax, 8
  002fd	c1 e0 00	 shl	 eax, 0
  00300	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00305	c1 e1 00	 shl	 ecx, 0
  00308	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0030b	be 08 00 00 00	 mov	 esi, 8
  00310	c1 e6 00	 shl	 esi, 0
  00313	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00318	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0031d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00321	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00326	c1 e2 00	 shl	 edx, 0
  00329	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0032c	b8 08 00 00 00	 mov	 eax, 8
  00331	d1 e0		 shl	 eax, 1
  00333	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00338	d1 e1		 shl	 ecx, 1
  0033a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0033d	be 08 00 00 00	 mov	 esi, 8
  00342	c1 e6 00	 shl	 esi, 0
  00345	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0034a	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0034f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00353	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00358	c1 e2 00	 shl	 edx, 0
  0035b	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0035e	b8 08 00 00 00	 mov	 eax, 8
  00363	c1 e0 00	 shl	 eax, 0
  00366	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 880  : 	result[1][2] = ( ( a[1][0] * b[0][2] ) + ( a[1][1] * b[1][2] ) + ( a[1][2] * b[2][2] ) );

  0036b	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00370	c1 e0 00	 shl	 eax, 0
  00373	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00376	b9 08 00 00 00	 mov	 ecx, 8
  0037b	6b d1 00	 imul	 edx, ecx, 0
  0037e	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00383	6b c9 00	 imul	 ecx, ecx, 0
  00386	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00389	be 08 00 00 00	 mov	 esi, 8
  0038e	d1 e6		 shl	 esi, 1
  00390	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  00395	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  0039a	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0039f	c1 e2 00	 shl	 edx, 0
  003a2	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003a5	b8 08 00 00 00	 mov	 eax, 8
  003aa	c1 e0 00	 shl	 eax, 0
  003ad	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003b2	c1 e1 00	 shl	 ecx, 0
  003b5	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003b8	be 08 00 00 00	 mov	 esi, 8
  003bd	d1 e6		 shl	 esi, 1
  003bf	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  003c4	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  003c9	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003cd	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  003d2	c1 e2 00	 shl	 edx, 0
  003d5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003d8	b8 08 00 00 00	 mov	 eax, 8
  003dd	d1 e0		 shl	 eax, 1
  003df	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  003e4	d1 e1		 shl	 ecx, 1
  003e6	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003e9	be 08 00 00 00	 mov	 esi, 8
  003ee	d1 e6		 shl	 esi, 1
  003f0	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  003f5	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  003fa	f2 0f 58 c1	 addsd	 xmm0, xmm1
  003fe	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00403	c1 e2 00	 shl	 edx, 0
  00406	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00409	b8 08 00 00 00	 mov	 eax, 8
  0040e	d1 e0		 shl	 eax, 1
  00410	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 881  : 
; 882  : 	result[2][0] = ( ( a[2][0] * b[0][0] ) + ( a[2][1] * b[1][0] ) + ( a[2][2] * b[2][0] ) );

  00415	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0041a	d1 e0		 shl	 eax, 1
  0041c	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0041f	b9 08 00 00 00	 mov	 ecx, 8
  00424	6b d1 00	 imul	 edx, ecx, 0
  00427	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0042c	6b c9 00	 imul	 ecx, ecx, 0
  0042f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00432	be 08 00 00 00	 mov	 esi, 8
  00437	6b f6 00	 imul	 esi, esi, 0
  0043a	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  0043f	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  00444	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00449	d1 e2		 shl	 edx, 1
  0044b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0044e	b8 08 00 00 00	 mov	 eax, 8
  00453	c1 e0 00	 shl	 eax, 0
  00456	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0045b	c1 e1 00	 shl	 ecx, 0
  0045e	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00461	be 08 00 00 00	 mov	 esi, 8
  00466	6b f6 00	 imul	 esi, esi, 0
  00469	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0046e	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  00473	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00477	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0047c	d1 e2		 shl	 edx, 1
  0047e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00481	b8 08 00 00 00	 mov	 eax, 8
  00486	d1 e0		 shl	 eax, 1
  00488	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  0048d	d1 e1		 shl	 ecx, 1
  0048f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00492	be 08 00 00 00	 mov	 esi, 8
  00497	6b f6 00	 imul	 esi, esi, 0
  0049a	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  0049f	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  004a4	f2 0f 58 c1	 addsd	 xmm0, xmm1
  004a8	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  004ad	d1 e2		 shl	 edx, 1
  004af	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  004b2	b8 08 00 00 00	 mov	 eax, 8
  004b7	6b c8 00	 imul	 ecx, eax, 0
  004ba	f2 0f 11 04 0a	 movsd	 QWORD PTR [edx+ecx], xmm0

; 883  : 	result[2][1] = ( ( a[2][0] * b[0][1] ) + ( a[2][1] * b[1][1] ) + ( a[2][2] * b[2][1] ) );

  004bf	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  004c4	d1 e0		 shl	 eax, 1
  004c6	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  004c9	b9 08 00 00 00	 mov	 ecx, 8
  004ce	6b d1 00	 imul	 edx, ecx, 0
  004d1	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  004d6	6b c9 00	 imul	 ecx, ecx, 0
  004d9	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004dc	be 08 00 00 00	 mov	 esi, 8
  004e1	c1 e6 00	 shl	 esi, 0
  004e4	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  004e9	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  004ee	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  004f3	d1 e2		 shl	 edx, 1
  004f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004f8	b8 08 00 00 00	 mov	 eax, 8
  004fd	c1 e0 00	 shl	 eax, 0
  00500	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00505	c1 e1 00	 shl	 ecx, 0
  00508	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0050b	be 08 00 00 00	 mov	 esi, 8
  00510	c1 e6 00	 shl	 esi, 0
  00513	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00518	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0051d	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00521	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00526	d1 e2		 shl	 edx, 1
  00528	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0052b	b8 08 00 00 00	 mov	 eax, 8
  00530	d1 e0		 shl	 eax, 1
  00532	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00537	d1 e1		 shl	 ecx, 1
  00539	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0053c	be 08 00 00 00	 mov	 esi, 8
  00541	c1 e6 00	 shl	 esi, 0
  00544	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  00549	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  0054e	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00552	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  00557	d1 e2		 shl	 edx, 1
  00559	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0055c	b8 08 00 00 00	 mov	 eax, 8
  00561	c1 e0 00	 shl	 eax, 0
  00564	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 884  : 	result[2][2] = ( ( a[2][0] * b[0][2] ) + ( a[2][1] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0056e	d1 e0		 shl	 eax, 1
  00570	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00573	b9 08 00 00 00	 mov	 ecx, 8
  00578	6b d1 00	 imul	 edx, ecx, 0
  0057b	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  00580	6b c9 00	 imul	 ecx, ecx, 0
  00583	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00586	be 08 00 00 00	 mov	 esi, 8
  0058b	d1 e6		 shl	 esi, 1
  0058d	f2 0f 10 04 10	 movsd	 xmm0, QWORD PTR [eax+edx]
  00592	f2 0f 59 04 31	 mulsd	 xmm0, QWORD PTR [ecx+esi]
  00597	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  0059c	d1 e2		 shl	 edx, 1
  0059e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005a1	b8 08 00 00 00	 mov	 eax, 8
  005a6	c1 e0 00	 shl	 eax, 0
  005a9	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005ae	c1 e1 00	 shl	 ecx, 0
  005b1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005b4	be 08 00 00 00	 mov	 esi, 8
  005b9	d1 e6		 shl	 esi, 1
  005bb	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  005c0	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  005c5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005c9	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  005ce	d1 e2		 shl	 edx, 1
  005d0	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005d3	b8 08 00 00 00	 mov	 eax, 8
  005d8	d1 e0		 shl	 eax, 1
  005da	b9 18 00 00 00	 mov	 ecx, 24			; 00000018H
  005df	d1 e1		 shl	 ecx, 1
  005e1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005e4	be 08 00 00 00	 mov	 esi, 8
  005e9	d1 e6		 shl	 esi, 1
  005eb	f2 0f 10 0c 02	 movsd	 xmm1, QWORD PTR [edx+eax]
  005f0	f2 0f 59 0c 31	 mulsd	 xmm1, QWORD PTR [ecx+esi]
  005f5	f2 0f 58 c1	 addsd	 xmm0, xmm1
  005f9	ba 18 00 00 00	 mov	 edx, 24			; 00000018H
  005fe	d1 e2		 shl	 edx, 1
  00600	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00603	b8 08 00 00 00	 mov	 eax, 8
  00608	d1 e0		 shl	 eax, 1
  0060a	f2 0f 11 04 02	 movsd	 QWORD PTR [edx+eax], xmm0

; 885  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_double_matrix3x3_double_matrix3x3@@YGXQAY02NQAY02$$CBN1@Z ENDP ; multiply_double_matrix3x3_double_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_transpose_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z
_TEXT	SEGMENT
_temp$ = -24						; size = 24
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_transpose_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z PROC ; multiply_transpose_double_matrix3x3_double_vec3d, COMDAT

; 843  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 844  : 
; 845  : 	double_vec3d
; 846  : 		temp;
; 847  : 
; 848  : 	temp.x = v->x * m[0][0];

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0001f	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  00023	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  00028	f2 0f 11 45 e8	 movsd	 QWORD PTR _temp$[ebp], xmm0

; 849  : 	temp.x += v->y * m[0][1];

  0002d	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00032	6b c8 00	 imul	 ecx, eax, 0
  00035	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00038	ba 08 00 00 00	 mov	 edx, 8
  0003d	c1 e2 00	 shl	 edx, 0
  00040	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00043	f2 0f 10 40 08	 movsd	 xmm0, QWORD PTR [eax+8]
  00048	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  0004d	f2 0f 58 45 e8	 addsd	 xmm0, QWORD PTR _temp$[ebp]
  00052	f2 0f 11 45 e8	 movsd	 QWORD PTR _temp$[ebp], xmm0

; 850  : 	temp.x += v->z * m[0][2];

  00057	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0005c	6b c8 00	 imul	 ecx, eax, 0
  0005f	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00062	ba 08 00 00 00	 mov	 edx, 8
  00067	d1 e2		 shl	 edx, 1
  00069	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0006c	f2 0f 10 40 10	 movsd	 xmm0, QWORD PTR [eax+16]
  00071	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  00076	f2 0f 58 45 e8	 addsd	 xmm0, QWORD PTR _temp$[ebp]
  0007b	f2 0f 11 45 e8	 movsd	 QWORD PTR _temp$[ebp], xmm0

; 851  : 
; 852  : 	temp.y = v->x * m[1][0];

  00080	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00085	c1 e0 00	 shl	 eax, 0
  00088	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0008b	b9 08 00 00 00	 mov	 ecx, 8
  00090	6b d1 00	 imul	 edx, ecx, 0
  00093	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00096	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  0009a	f2 0f 59 04 10	 mulsd	 xmm0, QWORD PTR [eax+edx]
  0009f	f2 0f 11 45 f0	 movsd	 QWORD PTR _temp$[ebp+8], xmm0

; 853  : 	temp.y += v->y * m[1][1];

  000a4	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000a9	c1 e0 00	 shl	 eax, 0
  000ac	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000af	b9 08 00 00 00	 mov	 ecx, 8
  000b4	c1 e1 00	 shl	 ecx, 0
  000b7	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000ba	f2 0f 10 42 08	 movsd	 xmm0, QWORD PTR [edx+8]
  000bf	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  000c4	f2 0f 58 45 f0	 addsd	 xmm0, QWORD PTR _temp$[ebp+8]
  000c9	f2 0f 11 45 f0	 movsd	 QWORD PTR _temp$[ebp+8], xmm0

; 854  : 	temp.y += v->z * m[1][2];

  000ce	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000d3	c1 e0 00	 shl	 eax, 0
  000d6	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000d9	b9 08 00 00 00	 mov	 ecx, 8
  000de	d1 e1		 shl	 ecx, 1
  000e0	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000e3	f2 0f 10 42 10	 movsd	 xmm0, QWORD PTR [edx+16]
  000e8	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  000ed	f2 0f 58 45 f0	 addsd	 xmm0, QWORD PTR _temp$[ebp+8]
  000f2	f2 0f 11 45 f0	 movsd	 QWORD PTR _temp$[ebp+8], xmm0

; 855  : 
; 856  : 	temp.z = v->x * m[2][0];

  000f7	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000fc	d1 e0		 shl	 eax, 1
  000fe	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00101	b9 08 00 00 00	 mov	 ecx, 8
  00106	6b d1 00	 imul	 edx, ecx, 0
  00109	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  0010c	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [ecx]
  00110	f2 0f 59 04 10	 mulsd	 xmm0, QWORD PTR [eax+edx]
  00115	f2 0f 11 45 f8	 movsd	 QWORD PTR _temp$[ebp+16], xmm0

; 857  : 	temp.z += v->y * m[2][1];

  0011a	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0011f	d1 e0		 shl	 eax, 1
  00121	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00124	b9 08 00 00 00	 mov	 ecx, 8
  00129	c1 e1 00	 shl	 ecx, 0
  0012c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0012f	f2 0f 10 42 08	 movsd	 xmm0, QWORD PTR [edx+8]
  00134	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  00139	f2 0f 58 45 f8	 addsd	 xmm0, QWORD PTR _temp$[ebp+16]
  0013e	f2 0f 11 45 f8	 movsd	 QWORD PTR _temp$[ebp+16], xmm0

; 858  : 	temp.z += v->z * m[2][2];

  00143	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00148	d1 e0		 shl	 eax, 1
  0014a	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0014d	b9 08 00 00 00	 mov	 ecx, 8
  00152	d1 e1		 shl	 ecx, 1
  00154	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00157	f2 0f 10 42 10	 movsd	 xmm0, QWORD PTR [edx+16]
  0015c	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  00161	f2 0f 58 45 f8	 addsd	 xmm0, QWORD PTR _temp$[ebp+16]
  00166	f2 0f 11 45 f8	 movsd	 QWORD PTR _temp$[ebp+16], xmm0

; 859  : 
; 860  : 	result->x = temp.x;

  0016b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0016e	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _temp$[ebp]
  00173	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0

; 861  : 	result->y = temp.y;

  00177	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0017a	f2 0f 10 45 f0	 movsd	 xmm0, QWORD PTR _temp$[ebp+8]
  0017f	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 862  : 	result->z = temp.z;

  00184	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00187	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _temp$[ebp+16]
  0018c	f2 0f 11 40 10	 movsd	 QWORD PTR [eax+16], xmm0

; 863  : }

  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	5b		 pop	 ebx
  00194	8b e5		 mov	 esp, ebp
  00196	5d		 pop	 ebp
  00197	c2 0c 00	 ret	 12			; 0000000cH
?multiply_transpose_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z ENDP ; multiply_transpose_double_matrix3x3_double_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z
_TEXT	SEGMENT
_temp$ = -12						; size = 12
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z PROC ; multiply_double_matrix3x3_double_vec3d, COMDAT

; 816  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 817  : 
; 818  : 	vec3d
; 819  : 		temp;
; 820  : 
; 821  : 	temp.x = v->x * m[0][0];

  00009	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 08 00 00 00	 mov	 edx, 8
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0001f	f2 0f 10 02	 movsd	 xmm0, QWORD PTR [edx]
  00023	f2 0f 59 04 01	 mulsd	 xmm0, QWORD PTR [ecx+eax]
  00028	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0002c	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 822  : 	temp.x += v->y * m[1][0];

  00031	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00036	c1 e0 00	 shl	 eax, 0
  00039	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0003c	b9 08 00 00 00	 mov	 ecx, 8
  00041	6b d1 00	 imul	 edx, ecx, 0
  00044	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00047	f2 0f 10 41 08	 movsd	 xmm0, QWORD PTR [ecx+8]
  0004c	f2 0f 59 04 10	 mulsd	 xmm0, QWORD PTR [eax+edx]
  00051	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00056	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0005a	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0005e	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 823  : 	temp.x += v->z * m[2][0];

  00063	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00068	d1 e0		 shl	 eax, 1
  0006a	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0006d	b9 08 00 00 00	 mov	 ecx, 8
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00078	f2 0f 10 41 10	 movsd	 xmm0, QWORD PTR [ecx+16]
  0007d	f2 0f 59 04 10	 mulsd	 xmm0, QWORD PTR [eax+edx]
  00082	f3 0f 5a 4d f4	 cvtss2sd xmm1, DWORD PTR _temp$[ebp]
  00087	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0008b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0008f	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 824  : 
; 825  : 	temp.y = v->x * m[0][1];

  00094	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00099	6b c8 00	 imul	 ecx, eax, 0
  0009c	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0009f	ba 08 00 00 00	 mov	 edx, 8
  000a4	c1 e2 00	 shl	 edx, 0
  000a7	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000aa	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  000ae	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  000b3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b7	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 826  : 	temp.y += v->y * m[1][1];

  000bc	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000c1	c1 e0 00	 shl	 eax, 0
  000c4	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000c7	b9 08 00 00 00	 mov	 ecx, 8
  000cc	c1 e1 00	 shl	 ecx, 0
  000cf	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000d2	f2 0f 10 42 08	 movsd	 xmm0, QWORD PTR [edx+8]
  000d7	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  000dc	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  000e1	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000e5	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000e9	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 827  : 	temp.y += v->z * m[2][1];

  000ee	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  000f3	d1 e0		 shl	 eax, 1
  000f5	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000f8	b9 08 00 00 00	 mov	 ecx, 8
  000fd	c1 e1 00	 shl	 ecx, 0
  00100	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00103	f2 0f 10 42 10	 movsd	 xmm0, QWORD PTR [edx+16]
  00108	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  0010d	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+4]
  00112	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00116	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0011a	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 828  : 
; 829  : 	temp.z = v->x * m[0][2];

  0011f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00124	6b c8 00	 imul	 ecx, eax, 0
  00127	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0012a	ba 08 00 00 00	 mov	 edx, 8
  0012f	d1 e2		 shl	 edx, 1
  00131	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00134	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [eax]
  00138	f2 0f 59 04 11	 mulsd	 xmm0, QWORD PTR [ecx+edx]
  0013d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00141	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 830  : 	temp.z += v->y * m[1][2];

  00146	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0014b	c1 e0 00	 shl	 eax, 0
  0014e	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00151	b9 08 00 00 00	 mov	 ecx, 8
  00156	d1 e1		 shl	 ecx, 1
  00158	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0015b	f2 0f 10 42 08	 movsd	 xmm0, QWORD PTR [edx+8]
  00160	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  00165	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0016a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0016e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00172	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 831  : 	temp.z += v->z * m[2][2];

  00177	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  0017c	d1 e0		 shl	 eax, 1
  0017e	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00181	b9 08 00 00 00	 mov	 ecx, 8
  00186	d1 e1		 shl	 ecx, 1
  00188	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0018b	f2 0f 10 42 10	 movsd	 xmm0, QWORD PTR [edx+16]
  00190	f2 0f 59 04 08	 mulsd	 xmm0, QWORD PTR [eax+ecx]
  00195	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _temp$[ebp+8]
  0019a	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0019e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001a2	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 832  : 
; 833  : 	result->x = temp.x;

  001a7	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _temp$[ebp]
  001ac	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001af	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0

; 834  : 	result->y = temp.y;

  001b3	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _temp$[ebp+4]
  001b8	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001bb	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 835  : 	result->z = temp.z;

  001c0	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _temp$[ebp+8]
  001c5	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  001c8	f2 0f 11 40 10	 movsd	 QWORD PTR [eax+16], xmm0

; 836  : }

  001cd	5f		 pop	 edi
  001ce	5e		 pop	 esi
  001cf	5b		 pop	 ebx
  001d0	8b e5		 mov	 esp, ebp
  001d2	5d		 pop	 ebp
  001d3	c2 0c 00	 ret	 12			; 0000000cH
?multiply_double_matrix3x3_double_vec3d@@YGXPAUDOUBLE_VEC3D@@QAY02$$CBNPBU1@@Z ENDP ; multiply_double_matrix3x3_double_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?check_identity_matrix3x3@@YGHQAY02$$CBM@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
?check_identity_matrix3x3@@YGHQAY02$$CBM@Z PROC		; check_identity_matrix3x3, COMDAT

; 797  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 798  : 
; 799  : 	if (memcmp (m, &identity_matrix3x3, sizeof (matrix3x3)) == 0)

  00009	6a 24		 push	 36			; 00000024H
  0000b	68 00 00 00 00	 push	 OFFSET ?identity_matrix3x3@@3PAY02MA ; identity_matrix3x3
  00010	8b 45 08	 mov	 eax, DWORD PTR _m$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 _memcmp
  00019	83 c4 0c	 add	 esp, 12			; 0000000cH
  0001c	85 c0		 test	 eax, eax
  0001e	75 07		 jne	 SHORT $LN2@check_iden

; 800  : 	{
; 801  : 		return TRUE;

  00020	b8 01 00 00 00	 mov	 eax, 1
  00025	eb 02		 jmp	 SHORT $LN1@check_iden
$LN2@check_iden:

; 802  : 	}
; 803  : 
; 804  : 	return FALSE;

  00027	33 c0		 xor	 eax, eax
$LN1@check_iden:

; 805  : }

  00029	5f		 pop	 edi
  0002a	5e		 pop	 esi
  0002b	5b		 pop	 ebx
  0002c	8b e5		 mov	 esp, ebp
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
?check_identity_matrix3x3@@YGHQAY02$$CBM@Z ENDP		; check_identity_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z
_TEXT	SEGMENT
tv169 = -72						; size = 8
_result$ = 8						; size = 4
_normal$ = 12						; size = 4
_heading$ = 16						; size = 4
?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z PROC ; get_3d_transformation_matrix_from_face_normal_and_heading, COMDAT

; 751  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 752  : 	//
; 753  : 	// guard against possible divide by zero
; 754  : 	//
; 755  : 
; 756  : 	if (fabs (normal->y) > 0.0001)

  00009	8b 45 0c	 mov	 eax, DWORD PTR _normal$[ebp]
  0000c	51		 push	 ecx
  0000d	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0001c	dd 5d b8	 fstp	 QWORD PTR tv169[ebp]
  0001f	f2 0f 10 45 b8	 movsd	 xmm0, QWORD PTR tv169[ebp]
  00024	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3f1a36e2eb1c432d
  0002c	0f 86 37 01 00
	00		 jbe	 $LN2@get_3d_tra

; 757  : 	{
; 758  : 		//
; 759  : 		// set y vector to face normal
; 760  : 		//
; 761  : 
; 762  : 		memcpy (&result[1][0], normal, sizeof (vec3d));

  00032	6a 0c		 push	 12			; 0000000cH
  00034	8b 45 0c	 mov	 eax, DWORD PTR _normal$[ebp]
  00037	50		 push	 eax
  00038	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0003d	c1 e1 00	 shl	 ecx, 0
  00040	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00043	ba 04 00 00 00	 mov	 edx, 4
  00048	6b c2 00	 imul	 eax, edx, 0
  0004b	03 c8		 add	 ecx, eax
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memcpy
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 763  : 
; 764  : 		// set z vector perpendicular to face normal in the heading direction
; 765  : 		//
; 766  : 		// use 'planes through the origin' to get y
; 767  : 		//
; 768  : 		// r.n = 0, where r = (x y z) and n = (a b c), then ax + by + cz = 0, therefore y = - (ax + cz) / b
; 769  : 
; 770  : 		result[2][0] = sin (heading);

  00056	51		 push	 ecx
  00057	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00066	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0006b	d1 e0		 shl	 eax, 1
  0006d	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00070	b9 04 00 00 00	 mov	 ecx, 4
  00075	6b d1 00	 imul	 edx, ecx, 0
  00078	d9 1c 10	 fstp	 DWORD PTR [eax+edx]

; 771  : 		result[2][2] = cos (heading);

  0007b	51		 push	 ecx
  0007c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00081	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00086	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0008b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00090	d1 e0		 shl	 eax, 1
  00092	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00095	b9 04 00 00 00	 mov	 ecx, 4
  0009a	d1 e1		 shl	 ecx, 1
  0009c	d9 1c 08	 fstp	 DWORD PTR [eax+ecx]

; 772  : 		result[2][1] = - ((normal->x * result[2][0]) + (normal->z * result[2][2])) / normal->y;

  0009f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a4	d1 e0		 shl	 eax, 1
  000a6	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000a9	b9 04 00 00 00	 mov	 ecx, 4
  000ae	6b d1 00	 imul	 edx, ecx, 0
  000b1	8b 4d 0c	 mov	 ecx, DWORD PTR _normal$[ebp]
  000b4	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  000b8	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  000bd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000c2	d1 e2		 shl	 edx, 1
  000c4	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  000c7	b8 04 00 00 00	 mov	 eax, 4
  000cc	d1 e0		 shl	 eax, 1
  000ce	8b 4d 0c	 mov	 ecx, DWORD PTR _normal$[ebp]
  000d1	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  000d6	f3 0f 59 0c 02	 mulss	 xmm1, DWORD PTR [edx+eax]
  000db	f3 0f 58 c1	 addss	 xmm0, xmm1
  000df	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000e6	8b 55 0c	 mov	 edx, DWORD PTR _normal$[ebp]
  000e9	f3 0f 5e 42 04	 divss	 xmm0, DWORD PTR [edx+4]
  000ee	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f3	d1 e0		 shl	 eax, 1
  000f5	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000f8	b9 04 00 00 00	 mov	 ecx, 4
  000fd	c1 e1 00	 shl	 ecx, 0
  00100	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 773  : 
; 774  : 		normalise_3d_vector ((vec3d *) &result[2][0]);

  00105	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0010a	d1 e0		 shl	 eax, 1
  0010c	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0010f	b9 04 00 00 00	 mov	 ecx, 4
  00114	6b d1 00	 imul	 edx, ecx, 0
  00117	03 c2		 add	 eax, edx
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?normalise_3d_vector@@YGMPAUVEC3D@@@Z ; normalise_3d_vector
  0011f	dd d8		 fstp	 ST(0)

; 775  : 
; 776  : 		//
; 777  : 		// get x vector (y X z)
; 778  : 		//
; 779  : 
; 780  : 		get_3d_vector_cross_product ((vec3d *) &result[0][0], (vec3d *) &result[1][0], (vec3d *) &result[2][0]);

  00121	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00126	d1 e0		 shl	 eax, 1
  00128	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0012b	b9 04 00 00 00	 mov	 ecx, 4
  00130	6b d1 00	 imul	 edx, ecx, 0
  00133	03 c2		 add	 eax, edx
  00135	50		 push	 eax
  00136	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0013b	c1 e0 00	 shl	 eax, 0
  0013e	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00141	b9 04 00 00 00	 mov	 ecx, 4
  00146	6b d1 00	 imul	 edx, ecx, 0
  00149	03 c2		 add	 eax, edx
  0014b	50		 push	 eax
  0014c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00151	6b c8 00	 imul	 ecx, eax, 0
  00154	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00157	ba 04 00 00 00	 mov	 edx, 4
  0015c	6b c2 00	 imul	 eax, edx, 0
  0015f	03 c8		 add	 ecx, eax
  00161	51		 push	 ecx
  00162	e8 00 00 00 00	 call	 ?get_3d_vector_cross_product@@YGXPAUVEC3D@@PBU1@1@Z ; get_3d_vector_cross_product

; 781  : 
; 782  : 		//
; 783  : 		// (no need to normalise x vector because y and z vectors are perpendicular unit vectors)
; 784  : 		//
; 785  : 	}
; 786  : 	else

  00167	eb 09		 jmp	 SHORT $LN3@get_3d_tra
$LN2@get_3d_tra:

; 787  : 	{
; 788  : 		get_identity_matrix3x3 (result);

  00169	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?get_identity_matrix3x3@@YGXQAY02M@Z ; get_identity_matrix3x3
$LN3@get_3d_tra:

; 789  : 	}
; 790  : }

  00172	5f		 pop	 edi
  00173	5e		 pop	 esi
  00174	5b		 pop	 ebx
  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c2 0c 00	 ret	 12			; 0000000cH
?get_3d_transformation_matrix_from_face_normal_and_heading@@YGXQAY02MPBUVEC3D@@M@Z ENDP ; get_3d_transformation_matrix_from_face_normal_and_heading
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z
_TEXT	SEGMENT
_pitch$ = -8						; size = 4
_heading$ = -4						; size = 4
_result$ = 8						; size = 4
_v$ = 12						; size = 4
_roll$ = 16						; size = 4
?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z PROC ; get_matrix3x3_from_unit_vec3d_and_roll, COMDAT

; 734  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 735  : 	float
; 736  : 		heading,
; 737  : 		pitch;
; 738  : 
; 739  : 	heading = atan2 (v->x, v->z);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	51		 push	 ecx
  0000d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001a	51		 push	 ecx
  0001b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0001f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00024	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00029	d9 5d fc	 fstp	 DWORD PTR _heading$[ebp]

; 740  : 
; 741  : 	pitch = asin (v->y);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0002f	51		 push	 ecx
  00030	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  0003f	d9 5d f8	 fstp	 DWORD PTR _pitch$[ebp]

; 742  : 
; 743  : 	get_3d_transformation_matrix (result, heading, pitch, roll);

  00042	51		 push	 ecx
  00043	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _roll$[ebp]
  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	51		 push	 ecx
  0004e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00053	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00058	51		 push	 ecx
  00059	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 744  : }

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c2 0c 00	 ret	 12			; 0000000cH
?get_matrix3x3_from_unit_vec3d_and_roll@@YGXQAY02MPBUVEC3D@@M@Z ENDP ; get_matrix3x3_from_unit_vec3d_and_roll
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z
_TEXT	SEGMENT
_pitch$ = -8						; size = 4
_heading$ = -4						; size = 4
_result$ = 8						; size = 4
_v$ = 12						; size = 4
?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z PROC ; get_matrix3x3_from_unit_vec3d, COMDAT

; 717  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 718  : 	float
; 719  : 		heading,
; 720  : 		pitch;
; 721  : 
; 722  : 	heading = atan2 (v->x, v->z);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	51		 push	 ecx
  0000d	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0001a	51		 push	 ecx
  0001b	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0001f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00024	e8 00 00 00 00	 call	 ?atan2@@YGMMM@Z		; atan2
  00029	d9 5d fc	 fstp	 DWORD PTR _heading$[ebp]

; 723  : 
; 724  : 	pitch = asin (v->y);

  0002c	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0002f	51		 push	 ecx
  00030	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?asin@@YGMM@Z		; asin
  0003f	d9 5d f8	 fstp	 DWORD PTR _pitch$[ebp]

; 725  : 
; 726  : 	get_3d_transformation_matrix (result, heading, pitch, 0.0);

  00042	51		 push	 ecx
  00043	0f 57 c0	 xorps	 xmm0, xmm0
  00046	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004b	51		 push	 ecx
  0004c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00051	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00056	51		 push	 ecx
  00057	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0005c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00061	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 727  : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?get_matrix3x3_from_unit_vec3d@@YGXQAY02MPBUVEC3D@@@Z ENDP ; get_matrix3x3_from_unit_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_inverse_matrix@@YGXQAY02MQAY02$$CBM@Z
_TEXT	SEGMENT
_cofactors$ = -40					; size = 36
_det$ = -4						; size = 4
_result$ = 8						; size = 4
_matrix$ = 12						; size = 4
?get_inverse_matrix@@YGXQAY02MQAY02$$CBM@Z PROC		; get_inverse_matrix, COMDAT

; 663  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 664  : 
; 665  : 	float
; 666  : 		det;
; 667  : 
; 668  : 	matrix3x3
; 669  : 		cofactors = {0};

  00009	33 c0		 xor	 eax, eax
  0000b	89 45 d8	 mov	 DWORD PTR _cofactors$[ebp], eax
  0000e	89 45 dc	 mov	 DWORD PTR _cofactors$[ebp+4], eax
  00011	89 45 e0	 mov	 DWORD PTR _cofactors$[ebp+8], eax
  00014	89 45 e4	 mov	 DWORD PTR _cofactors$[ebp+12], eax
  00017	89 45 e8	 mov	 DWORD PTR _cofactors$[ebp+16], eax
  0001a	89 45 ec	 mov	 DWORD PTR _cofactors$[ebp+20], eax
  0001d	89 45 f0	 mov	 DWORD PTR _cofactors$[ebp+24], eax
  00020	89 45 f4	 mov	 DWORD PTR _cofactors$[ebp+28], eax
  00023	89 45 f8	 mov	 DWORD PTR _cofactors$[ebp+32], eax

; 670  : 
; 671  : 	// form cofactors, with sign adjustment.
; 672  : 
; 673  : 	// top row
; 674  : 	cofactors [0][0] = ((matrix [1][1] * matrix [2][2]) - (matrix [1][2] * matrix [2][1]));

  00026	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0002b	c1 e0 00	 shl	 eax, 0
  0002e	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00031	b9 04 00 00 00	 mov	 ecx, 4
  00036	c1 e1 00	 shl	 ecx, 0
  00039	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0003e	d1 e2		 shl	 edx, 1
  00040	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00043	be 04 00 00 00	 mov	 esi, 4
  00048	d1 e6		 shl	 esi, 1
  0004a	f3 0f 10 04 08	 movss	 xmm0, DWORD PTR [eax+ecx]
  0004f	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00054	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00059	c1 e0 00	 shl	 eax, 0
  0005c	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  0005f	b9 04 00 00 00	 mov	 ecx, 4
  00064	d1 e1		 shl	 ecx, 1
  00066	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0006b	d1 e2		 shl	 edx, 1
  0006d	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00070	be 04 00 00 00	 mov	 esi, 4
  00075	c1 e6 00	 shl	 esi, 0
  00078	f3 0f 10 0c 08	 movss	 xmm1, DWORD PTR [eax+ecx]
  0007d	f3 0f 59 0c 32	 mulss	 xmm1, DWORD PTR [edx+esi]
  00082	f3 0f 5c c1	 subss	 xmm0, xmm1
  00086	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008b	6b c8 00	 imul	 ecx, eax, 0
  0008e	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00092	b8 04 00 00 00	 mov	 eax, 4
  00097	6b c8 00	 imul	 ecx, eax, 0
  0009a	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 675  : 	cofactors [1][0] = ((matrix [0][1] * matrix [2][2]) - (matrix [0][2] * matrix [2][1]));

  0009f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a4	6b c8 00	 imul	 ecx, eax, 0
  000a7	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  000aa	ba 04 00 00 00	 mov	 edx, 4
  000af	c1 e2 00	 shl	 edx, 0
  000b2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b7	d1 e0		 shl	 eax, 1
  000b9	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  000bc	be 04 00 00 00	 mov	 esi, 4
  000c1	d1 e6		 shl	 esi, 1
  000c3	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000c8	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  000cd	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000d2	6b d1 00	 imul	 edx, ecx, 0
  000d5	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  000d8	b8 04 00 00 00	 mov	 eax, 4
  000dd	d1 e0		 shl	 eax, 1
  000df	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000e4	d1 e1		 shl	 ecx, 1
  000e6	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  000e9	be 04 00 00 00	 mov	 esi, 4
  000ee	c1 e6 00	 shl	 esi, 0
  000f1	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  000f6	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  000fb	f3 0f 5c c1	 subss	 xmm0, xmm1
  000ff	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00104	c1 e2 00	 shl	 edx, 0
  00107	8d 44 15 d8	 lea	 eax, DWORD PTR _cofactors$[ebp+edx]
  0010b	b9 04 00 00 00	 mov	 ecx, 4
  00110	6b d1 00	 imul	 edx, ecx, 0
  00113	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 676  : 	cofactors [2][0] = ((matrix [0][1] * matrix [1][2]) - (matrix [0][2] * matrix [1][1]));

  00118	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011d	6b c8 00	 imul	 ecx, eax, 0
  00120	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00123	ba 04 00 00 00	 mov	 edx, 4
  00128	c1 e2 00	 shl	 edx, 0
  0012b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00130	c1 e0 00	 shl	 eax, 0
  00133	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00136	be 04 00 00 00	 mov	 esi, 4
  0013b	d1 e6		 shl	 esi, 1
  0013d	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00142	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  00147	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0014c	6b d1 00	 imul	 edx, ecx, 0
  0014f	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00152	b8 04 00 00 00	 mov	 eax, 4
  00157	d1 e0		 shl	 eax, 1
  00159	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0015e	c1 e1 00	 shl	 ecx, 0
  00161	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00164	be 04 00 00 00	 mov	 esi, 4
  00169	c1 e6 00	 shl	 esi, 0
  0016c	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00171	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00176	f3 0f 5c c1	 subss	 xmm0, xmm1
  0017a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017f	d1 e2		 shl	 edx, 1
  00181	8d 44 15 d8	 lea	 eax, DWORD PTR _cofactors$[ebp+edx]
  00185	b9 04 00 00 00	 mov	 ecx, 4
  0018a	6b d1 00	 imul	 edx, ecx, 0
  0018d	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 677  : 
; 678  : 	// mid row
; 679  : 	cofactors [0][1] = ((matrix [1][0] * matrix [2][2]) - (matrix [1][2] * matrix [2][0]));

  00192	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00197	c1 e0 00	 shl	 eax, 0
  0019a	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  0019d	b9 04 00 00 00	 mov	 ecx, 4
  001a2	6b d1 00	 imul	 edx, ecx, 0
  001a5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001aa	d1 e1		 shl	 ecx, 1
  001ac	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  001af	be 04 00 00 00	 mov	 esi, 4
  001b4	d1 e6		 shl	 esi, 1
  001b6	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  001bb	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  001c0	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001c5	c1 e2 00	 shl	 edx, 0
  001c8	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  001cb	b8 04 00 00 00	 mov	 eax, 4
  001d0	d1 e0		 shl	 eax, 1
  001d2	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001d7	d1 e1		 shl	 ecx, 1
  001d9	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  001dc	be 04 00 00 00	 mov	 esi, 4
  001e1	6b f6 00	 imul	 esi, esi, 0
  001e4	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  001e9	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  001ee	f3 0f 5c c1	 subss	 xmm0, xmm1
  001f2	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001f7	6b c2 00	 imul	 eax, edx, 0
  001fa	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  001fe	ba 04 00 00 00	 mov	 edx, 4
  00203	c1 e2 00	 shl	 edx, 0
  00206	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 680  : 	cofactors [1][1] = ((matrix [0][0] * matrix [2][2]) - (matrix [0][2] * matrix [2][0]));

  0020b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00210	6b c8 00	 imul	 ecx, eax, 0
  00213	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00216	ba 04 00 00 00	 mov	 edx, 4
  0021b	6b c2 00	 imul	 eax, edx, 0
  0021e	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00223	d1 e2		 shl	 edx, 1
  00225	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00228	be 04 00 00 00	 mov	 esi, 4
  0022d	d1 e6		 shl	 esi, 1
  0022f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00234	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00239	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0023e	6b c8 00	 imul	 ecx, eax, 0
  00241	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00244	ba 04 00 00 00	 mov	 edx, 4
  00249	d1 e2		 shl	 edx, 1
  0024b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00250	d1 e0		 shl	 eax, 1
  00252	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00255	be 04 00 00 00	 mov	 esi, 4
  0025a	6b f6 00	 imul	 esi, esi, 0
  0025d	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00262	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00267	f3 0f 5c c1	 subss	 xmm0, xmm1
  0026b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00270	c1 e1 00	 shl	 ecx, 0
  00273	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00277	b8 04 00 00 00	 mov	 eax, 4
  0027c	c1 e0 00	 shl	 eax, 0
  0027f	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 681  : 	cofactors [2][1] = ((matrix [0][0] * matrix [1][2]) - (matrix [0][2] * matrix [1][0]));

  00284	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00289	6b c8 00	 imul	 ecx, eax, 0
  0028c	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0028f	ba 04 00 00 00	 mov	 edx, 4
  00294	6b c2 00	 imul	 eax, edx, 0
  00297	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0029c	c1 e2 00	 shl	 edx, 0
  0029f	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  002a2	be 04 00 00 00	 mov	 esi, 4
  002a7	d1 e6		 shl	 esi, 1
  002a9	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  002ae	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  002b3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002b8	6b c8 00	 imul	 ecx, eax, 0
  002bb	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  002be	ba 04 00 00 00	 mov	 edx, 4
  002c3	d1 e2		 shl	 edx, 1
  002c5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ca	c1 e0 00	 shl	 eax, 0
  002cd	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  002d0	be 04 00 00 00	 mov	 esi, 4
  002d5	6b f6 00	 imul	 esi, esi, 0
  002d8	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  002dd	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  002e2	f3 0f 5c c1	 subss	 xmm0, xmm1
  002e6	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002eb	d1 e1		 shl	 ecx, 1
  002ed	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  002f1	b8 04 00 00 00	 mov	 eax, 4
  002f6	c1 e0 00	 shl	 eax, 0
  002f9	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 682  : 
; 683  : 	// bottom row
; 684  : 	cofactors [0][2] = ((matrix [1][0] * matrix [2][1]) - (matrix [1][1] * matrix [2][0]));

  002fe	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00303	c1 e0 00	 shl	 eax, 0
  00306	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00309	b9 04 00 00 00	 mov	 ecx, 4
  0030e	6b d1 00	 imul	 edx, ecx, 0
  00311	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00316	d1 e1		 shl	 ecx, 1
  00318	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0031b	be 04 00 00 00	 mov	 esi, 4
  00320	c1 e6 00	 shl	 esi, 0
  00323	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00328	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0032d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00332	c1 e2 00	 shl	 edx, 0
  00335	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00338	b8 04 00 00 00	 mov	 eax, 4
  0033d	c1 e0 00	 shl	 eax, 0
  00340	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00345	d1 e1		 shl	 ecx, 1
  00347	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0034a	be 04 00 00 00	 mov	 esi, 4
  0034f	6b f6 00	 imul	 esi, esi, 0
  00352	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00357	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0035c	f3 0f 5c c1	 subss	 xmm0, xmm1
  00360	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00365	6b c2 00	 imul	 eax, edx, 0
  00368	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  0036c	ba 04 00 00 00	 mov	 edx, 4
  00371	d1 e2		 shl	 edx, 1
  00373	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 685  : 	cofactors [1][2] = ((matrix [0][0] * matrix [2][1]) - (matrix [0][1] * matrix [2][0]));

  00378	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0037d	6b c8 00	 imul	 ecx, eax, 0
  00380	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00383	ba 04 00 00 00	 mov	 edx, 4
  00388	6b c2 00	 imul	 eax, edx, 0
  0038b	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00390	d1 e2		 shl	 edx, 1
  00392	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00395	be 04 00 00 00	 mov	 esi, 4
  0039a	c1 e6 00	 shl	 esi, 0
  0039d	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  003a2	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  003a7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003ac	6b c8 00	 imul	 ecx, eax, 0
  003af	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  003b2	ba 04 00 00 00	 mov	 edx, 4
  003b7	c1 e2 00	 shl	 edx, 0
  003ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003bf	d1 e0		 shl	 eax, 1
  003c1	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  003c4	be 04 00 00 00	 mov	 esi, 4
  003c9	6b f6 00	 imul	 esi, esi, 0
  003cc	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  003d1	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  003d6	f3 0f 5c c1	 subss	 xmm0, xmm1
  003da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003df	c1 e1 00	 shl	 ecx, 0
  003e2	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  003e6	b8 04 00 00 00	 mov	 eax, 4
  003eb	d1 e0		 shl	 eax, 1
  003ed	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 686  : 	cofactors [2][2] = ((matrix [0][0] * matrix [1][1]) - (matrix [0][1] * matrix [1][0]));

  003f2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003f7	6b c8 00	 imul	 ecx, eax, 0
  003fa	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  003fd	ba 04 00 00 00	 mov	 edx, 4
  00402	6b c2 00	 imul	 eax, edx, 0
  00405	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0040a	c1 e2 00	 shl	 edx, 0
  0040d	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  00410	be 04 00 00 00	 mov	 esi, 4
  00415	c1 e6 00	 shl	 esi, 0
  00418	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0041d	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00422	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00427	6b c8 00	 imul	 ecx, eax, 0
  0042a	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  0042d	ba 04 00 00 00	 mov	 edx, 4
  00432	c1 e2 00	 shl	 edx, 0
  00435	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0043a	c1 e0 00	 shl	 eax, 0
  0043d	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  00440	be 04 00 00 00	 mov	 esi, 4
  00445	6b f6 00	 imul	 esi, esi, 0
  00448	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  0044d	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00452	f3 0f 5c c1	 subss	 xmm0, xmm1
  00456	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0045b	d1 e1		 shl	 ecx, 1
  0045d	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00461	b8 04 00 00 00	 mov	 eax, 4
  00466	d1 e0		 shl	 eax, 1
  00468	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 687  : 
; 688  : 	// determinant
; 689  : 
; 690  : 	det = (matrix [0][0] * cofactors [0][0]) -

  0046d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00472	6b c8 00	 imul	 ecx, eax, 0
  00475	03 4d 0c	 add	 ecx, DWORD PTR _matrix$[ebp]
  00478	ba 04 00 00 00	 mov	 edx, 4
  0047d	6b c2 00	 imul	 eax, edx, 0
  00480	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00485	6b d2 00	 imul	 edx, edx, 0
  00488	8d 54 15 d8	 lea	 edx, DWORD PTR _cofactors$[ebp+edx]
  0048c	be 04 00 00 00	 mov	 esi, 4
  00491	6b f6 00	 imul	 esi, esi, 0
  00494	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00499	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  0049e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004a3	c1 e0 00	 shl	 eax, 0
  004a6	03 45 0c	 add	 eax, DWORD PTR _matrix$[ebp]
  004a9	b9 04 00 00 00	 mov	 ecx, 4
  004ae	6b d1 00	 imul	 edx, ecx, 0
  004b1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004b6	c1 e1 00	 shl	 ecx, 0
  004b9	8d 4c 0d d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+ecx]
  004bd	be 04 00 00 00	 mov	 esi, 4
  004c2	6b f6 00	 imul	 esi, esi, 0
  004c5	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  004ca	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  004cf	f3 0f 5c c1	 subss	 xmm0, xmm1
  004d3	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004d8	d1 e2		 shl	 edx, 1
  004da	03 55 0c	 add	 edx, DWORD PTR _matrix$[ebp]
  004dd	b8 04 00 00 00	 mov	 eax, 4
  004e2	6b c8 00	 imul	 ecx, eax, 0
  004e5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004ea	d1 e0		 shl	 eax, 1
  004ec	8d 44 05 d8	 lea	 eax, DWORD PTR _cofactors$[ebp+eax]
  004f0	be 04 00 00 00	 mov	 esi, 4
  004f5	6b f6 00	 imul	 esi, esi, 0
  004f8	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  004fd	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00502	f3 0f 58 c1	 addss	 xmm0, xmm1
  00506	f3 0f 11 45 fc	 movss	 DWORD PTR _det$[ebp], xmm0

; 691  : 			(matrix [1][0] * cofactors [1][0]) +
; 692  : 			(matrix [2][0] * cofactors [2][0]);
; 693  : 
; 694  : 	// divide transposed cofactors by det
; 695  : 
; 696  : 	// first column
; 697  : 	result [0][0] = +cofactors [0][0] / det;

  0050b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00510	6b c8 00	 imul	 ecx, eax, 0
  00513	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  00517	b8 04 00 00 00	 mov	 eax, 4
  0051c	6b c8 00	 imul	 ecx, eax, 0
  0051f	f3 0f 10 04 0a	 movss	 xmm0, DWORD PTR [edx+ecx]
  00524	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  00529	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0052e	6b c2 00	 imul	 eax, edx, 0
  00531	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00534	b9 04 00 00 00	 mov	 ecx, 4
  00539	6b d1 00	 imul	 edx, ecx, 0
  0053c	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 698  : 	result [0][1] = -cofactors [1][0] / det;

  00541	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00546	c1 e0 00	 shl	 eax, 0
  00549	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  0054d	ba 04 00 00 00	 mov	 edx, 4
  00552	6b c2 00	 imul	 eax, edx, 0
  00555	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0055a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00561	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  00566	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0056b	6b d1 00	 imul	 edx, ecx, 0
  0056e	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00571	b8 04 00 00 00	 mov	 eax, 4
  00576	c1 e0 00	 shl	 eax, 0
  00579	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 699  : 	result [0][2] = +cofactors [2][0] / det;

  0057e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00583	d1 e0		 shl	 eax, 1
  00585	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00589	ba 04 00 00 00	 mov	 edx, 4
  0058e	6b c2 00	 imul	 eax, edx, 0
  00591	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00596	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  0059b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005a0	6b d1 00	 imul	 edx, ecx, 0
  005a3	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  005a6	b8 04 00 00 00	 mov	 eax, 4
  005ab	d1 e0		 shl	 eax, 1
  005ad	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 700  : 
; 701  : 	// second column
; 702  : 	result [1][0] = -cofactors [0][1] / det;

  005b2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005b7	6b c8 00	 imul	 ecx, eax, 0
  005ba	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  005be	b8 04 00 00 00	 mov	 eax, 4
  005c3	c1 e0 00	 shl	 eax, 0
  005c6	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  005cb	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  005d2	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  005d7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005dc	c1 e1 00	 shl	 ecx, 0
  005df	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  005e2	ba 04 00 00 00	 mov	 edx, 4
  005e7	6b c2 00	 imul	 eax, edx, 0
  005ea	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 703  : 	result [1][1] = +cofactors [1][1] / det;

  005ef	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005f4	c1 e0 00	 shl	 eax, 0
  005f7	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  005fb	ba 04 00 00 00	 mov	 edx, 4
  00600	c1 e2 00	 shl	 edx, 0
  00603	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00608	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  0060d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00612	c1 e0 00	 shl	 eax, 0
  00615	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00618	b9 04 00 00 00	 mov	 ecx, 4
  0061d	c1 e1 00	 shl	 ecx, 0
  00620	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 704  : 	result [1][2] = -cofactors [2][1] / det;

  00625	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0062a	d1 e0		 shl	 eax, 1
  0062c	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  00630	ba 04 00 00 00	 mov	 edx, 4
  00635	c1 e2 00	 shl	 edx, 0
  00638	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0063d	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00644	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  00649	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0064e	c1 e0 00	 shl	 eax, 0
  00651	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00654	b9 04 00 00 00	 mov	 ecx, 4
  00659	d1 e1		 shl	 ecx, 1
  0065b	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 705  : 
; 706  : 	// third column
; 707  : 	result [2][0] = +cofactors [0][2] / det;

  00660	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00665	6b c8 00	 imul	 ecx, eax, 0
  00668	8d 54 0d d8	 lea	 edx, DWORD PTR _cofactors$[ebp+ecx]
  0066c	b8 04 00 00 00	 mov	 eax, 4
  00671	d1 e0		 shl	 eax, 1
  00673	f3 0f 10 04 02	 movss	 xmm0, DWORD PTR [edx+eax]
  00678	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  0067d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00682	d1 e1		 shl	 ecx, 1
  00684	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00687	ba 04 00 00 00	 mov	 edx, 4
  0068c	6b c2 00	 imul	 eax, edx, 0
  0068f	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 708  : 	result [2][1] = -cofactors [1][2] / det;

  00694	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00699	c1 e0 00	 shl	 eax, 0
  0069c	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  006a0	ba 04 00 00 00	 mov	 edx, 4
  006a5	d1 e2		 shl	 edx, 1
  006a7	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  006ac	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  006b3	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  006b8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006bd	d1 e0		 shl	 eax, 1
  006bf	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  006c2	b9 04 00 00 00	 mov	 ecx, 4
  006c7	c1 e1 00	 shl	 ecx, 0
  006ca	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 709  : 	result [2][2] = +cofactors [2][2] / det;

  006cf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006d4	d1 e0		 shl	 eax, 1
  006d6	8d 4c 05 d8	 lea	 ecx, DWORD PTR _cofactors$[ebp+eax]
  006da	ba 04 00 00 00	 mov	 edx, 4
  006df	d1 e2		 shl	 edx, 1
  006e1	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  006e6	f3 0f 5e 45 fc	 divss	 xmm0, DWORD PTR _det$[ebp]
  006eb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  006f0	d1 e0		 shl	 eax, 1
  006f2	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  006f5	b9 04 00 00 00	 mov	 ecx, 4
  006fa	d1 e1		 shl	 ecx, 1
  006fc	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 710  : }

  00701	5f		 pop	 edi
  00702	5e		 pop	 esi
  00703	5b		 pop	 ebx
  00704	8b e5		 mov	 esp, ebp
  00706	5d		 pop	 ebp
  00707	c2 08 00	 ret	 8
?get_inverse_matrix@@YGXQAY02MQAY02$$CBM@Z ENDP		; get_inverse_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_identity_matrix3x3@@YGXQAY02M@Z
_TEXT	SEGMENT
_m$ = 8							; size = 4
?get_identity_matrix3x3@@YGXQAY02M@Z PROC		; get_identity_matrix3x3, COMDAT

; 642  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  : 	m[0][0] = 1.0;

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00024	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 644  : 	m[0][1] = 0.0;

  00029	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0002e	6b c8 00	 imul	 ecx, eax, 0
  00031	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00034	ba 04 00 00 00	 mov	 edx, 4
  00039	c1 e2 00	 shl	 edx, 0
  0003c	0f 57 c0	 xorps	 xmm0, xmm0
  0003f	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 645  : 	m[0][2] = 0.0;

  00044	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00049	6b c8 00	 imul	 ecx, eax, 0
  0004c	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0004f	ba 04 00 00 00	 mov	 edx, 4
  00054	d1 e2		 shl	 edx, 1
  00056	0f 57 c0	 xorps	 xmm0, xmm0
  00059	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 646  : 
; 647  : 	m[1][0] = 0.0;

  0005e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00063	c1 e0 00	 shl	 eax, 0
  00066	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00069	b9 04 00 00 00	 mov	 ecx, 4
  0006e	6b d1 00	 imul	 edx, ecx, 0
  00071	0f 57 c0	 xorps	 xmm0, xmm0
  00074	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 648  : 	m[1][1] = 1.0;

  00079	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0007e	c1 e0 00	 shl	 eax, 0
  00081	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00084	b9 04 00 00 00	 mov	 ecx, 4
  00089	c1 e1 00	 shl	 ecx, 0
  0008c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00094	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 649  : 	m[1][2] = 0.0;

  00099	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0009e	c1 e0 00	 shl	 eax, 0
  000a1	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000a4	b9 04 00 00 00	 mov	 ecx, 4
  000a9	d1 e1		 shl	 ecx, 1
  000ab	0f 57 c0	 xorps	 xmm0, xmm0
  000ae	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 650  : 
; 651  : 	m[2][0] = 0.0;

  000b3	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000b8	d1 e0		 shl	 eax, 1
  000ba	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000bd	b9 04 00 00 00	 mov	 ecx, 4
  000c2	6b d1 00	 imul	 edx, ecx, 0
  000c5	0f 57 c0	 xorps	 xmm0, xmm0
  000c8	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 652  : 	m[2][1] = 0.0;

  000cd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000d2	d1 e0		 shl	 eax, 1
  000d4	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000d7	b9 04 00 00 00	 mov	 ecx, 4
  000dc	c1 e1 00	 shl	 ecx, 0
  000df	0f 57 c0	 xorps	 xmm0, xmm0
  000e2	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 653  : 	m[2][2] = 1.0;

  000e7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ec	d1 e0		 shl	 eax, 1
  000ee	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000f1	b9 04 00 00 00	 mov	 ecx, 4
  000f6	d1 e1		 shl	 ecx, 1
  000f8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00100	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 654  : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 04 00	 ret	 4
?get_identity_matrix3x3@@YGXQAY02M@Z ENDP		; get_identity_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z PROC ; multiply_matrix3x3_matrix3x3_2d, COMDAT

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  : 	result[0][0] = (a[0][0] * b[0][0]) + (a[0][1] * b[1][0]);

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 04 00 00 00	 mov	 esi, 4
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00034	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00039	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 04 00 00 00	 mov	 edx, 4
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00051	c1 e0 00	 shl	 eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 04 00 00 00	 mov	 esi, 4
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00064	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00069	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00078	b8 04 00 00 00	 mov	 eax, 4
  0007d	6b c8 00	 imul	 ecx, eax, 0
  00080	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 625  : 	result[0][1] = (a[0][0] * b[0][1]) + (a[0][1] * b[1][1]);

  00085	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008a	6b c8 00	 imul	 ecx, eax, 0
  0008d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00090	ba 04 00 00 00	 mov	 edx, 4
  00095	6b c2 00	 imul	 eax, edx, 0
  00098	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0009d	6b d2 00	 imul	 edx, edx, 0
  000a0	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  000a3	be 04 00 00 00	 mov	 esi, 4
  000a8	c1 e6 00	 shl	 esi, 0
  000ab	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  000b0	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  000b5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ba	6b c8 00	 imul	 ecx, eax, 0
  000bd	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c0	ba 04 00 00 00	 mov	 edx, 4
  000c5	c1 e2 00	 shl	 edx, 0
  000c8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000cd	c1 e0 00	 shl	 eax, 0
  000d0	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  000d3	be 04 00 00 00	 mov	 esi, 4
  000d8	c1 e6 00	 shl	 esi, 0
  000db	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  000e0	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  000e5	f3 0f 58 c1	 addss	 xmm0, xmm1
  000e9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000ee	6b d1 00	 imul	 edx, ecx, 0
  000f1	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  000f4	b8 04 00 00 00	 mov	 eax, 4
  000f9	c1 e0 00	 shl	 eax, 0
  000fc	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 626  : 	result[0][2] = 0.0;

  00101	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00106	6b c8 00	 imul	 ecx, eax, 0
  00109	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0010c	ba 04 00 00 00	 mov	 edx, 4
  00111	d1 e2		 shl	 edx, 1
  00113	0f 57 c0	 xorps	 xmm0, xmm0
  00116	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 627  : 
; 628  : 	result[1][0] = (a[1][0] * b[0][0]) + (a[1][1] * b[1][0]);

  0011b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00120	c1 e0 00	 shl	 eax, 0
  00123	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00126	b9 04 00 00 00	 mov	 ecx, 4
  0012b	6b d1 00	 imul	 edx, ecx, 0
  0012e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00133	6b c9 00	 imul	 ecx, ecx, 0
  00136	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00139	be 04 00 00 00	 mov	 esi, 4
  0013e	6b f6 00	 imul	 esi, esi, 0
  00141	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00146	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0014b	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00150	c1 e2 00	 shl	 edx, 0
  00153	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00156	b8 04 00 00 00	 mov	 eax, 4
  0015b	c1 e0 00	 shl	 eax, 0
  0015e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00163	c1 e1 00	 shl	 ecx, 0
  00166	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00169	be 04 00 00 00	 mov	 esi, 4
  0016e	6b f6 00	 imul	 esi, esi, 0
  00171	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00176	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0017b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0017f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00184	c1 e2 00	 shl	 edx, 0
  00187	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0018a	b8 04 00 00 00	 mov	 eax, 4
  0018f	6b c8 00	 imul	 ecx, eax, 0
  00192	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 629  : 	result[1][1] = (a[1][0] * b[0][1]) + (a[1][1] * b[1][1]);

  00197	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0019c	c1 e0 00	 shl	 eax, 0
  0019f	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  001a2	b9 04 00 00 00	 mov	 ecx, 4
  001a7	6b d1 00	 imul	 edx, ecx, 0
  001aa	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001af	6b c9 00	 imul	 ecx, ecx, 0
  001b2	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001b5	be 04 00 00 00	 mov	 esi, 4
  001ba	c1 e6 00	 shl	 esi, 0
  001bd	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  001c2	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  001c7	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001cc	c1 e2 00	 shl	 edx, 0
  001cf	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  001d2	b8 04 00 00 00	 mov	 eax, 4
  001d7	c1 e0 00	 shl	 eax, 0
  001da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001df	c1 e1 00	 shl	 ecx, 0
  001e2	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001e5	be 04 00 00 00	 mov	 esi, 4
  001ea	c1 e6 00	 shl	 esi, 0
  001ed	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  001f2	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  001f7	f3 0f 58 c1	 addss	 xmm0, xmm1
  001fb	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00200	c1 e2 00	 shl	 edx, 0
  00203	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00206	b8 04 00 00 00	 mov	 eax, 4
  0020b	c1 e0 00	 shl	 eax, 0
  0020e	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 630  : 	result[1][2] = 0.0;

  00213	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00218	c1 e0 00	 shl	 eax, 0
  0021b	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0021e	b9 04 00 00 00	 mov	 ecx, 4
  00223	d1 e1		 shl	 ecx, 1
  00225	0f 57 c0	 xorps	 xmm0, xmm0
  00228	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 631  : 
; 632  : 	result[2][0] = (a[2][0] * b[0][0]) + (a[2][1] * b[1][0]) + b[2][0];

  0022d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00232	d1 e0		 shl	 eax, 1
  00234	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00237	b9 04 00 00 00	 mov	 ecx, 4
  0023c	6b d1 00	 imul	 edx, ecx, 0
  0023f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00244	6b c9 00	 imul	 ecx, ecx, 0
  00247	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0024a	be 04 00 00 00	 mov	 esi, 4
  0024f	6b f6 00	 imul	 esi, esi, 0
  00252	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00257	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0025c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00261	d1 e2		 shl	 edx, 1
  00263	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00266	b8 04 00 00 00	 mov	 eax, 4
  0026b	c1 e0 00	 shl	 eax, 0
  0026e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00273	c1 e1 00	 shl	 ecx, 0
  00276	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00279	be 04 00 00 00	 mov	 esi, 4
  0027e	6b f6 00	 imul	 esi, esi, 0
  00281	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00286	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0028b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0028f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00294	d1 e2		 shl	 edx, 1
  00296	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00299	b8 04 00 00 00	 mov	 eax, 4
  0029e	6b c8 00	 imul	 ecx, eax, 0
  002a1	f3 0f 58 04 0a	 addss	 xmm0, DWORD PTR [edx+ecx]
  002a6	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002ab	d1 e2		 shl	 edx, 1
  002ad	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  002b0	b8 04 00 00 00	 mov	 eax, 4
  002b5	6b c8 00	 imul	 ecx, eax, 0
  002b8	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 633  : 	result[2][1] = (a[2][0] * b[0][1]) + (a[2][1] * b[1][1]) + b[2][1];

  002bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002c2	d1 e0		 shl	 eax, 1
  002c4	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  002c7	b9 04 00 00 00	 mov	 ecx, 4
  002cc	6b d1 00	 imul	 edx, ecx, 0
  002cf	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002d4	6b c9 00	 imul	 ecx, ecx, 0
  002d7	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  002da	be 04 00 00 00	 mov	 esi, 4
  002df	c1 e6 00	 shl	 esi, 0
  002e2	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  002e7	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  002ec	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002f1	d1 e2		 shl	 edx, 1
  002f3	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  002f6	b8 04 00 00 00	 mov	 eax, 4
  002fb	c1 e0 00	 shl	 eax, 0
  002fe	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00303	c1 e1 00	 shl	 ecx, 0
  00306	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00309	be 04 00 00 00	 mov	 esi, 4
  0030e	c1 e6 00	 shl	 esi, 0
  00311	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00316	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0031b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0031f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00324	d1 e2		 shl	 edx, 1
  00326	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00329	b8 04 00 00 00	 mov	 eax, 4
  0032e	c1 e0 00	 shl	 eax, 0
  00331	f3 0f 58 04 02	 addss	 xmm0, DWORD PTR [edx+eax]
  00336	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0033b	d1 e1		 shl	 ecx, 1
  0033d	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00340	ba 04 00 00 00	 mov	 edx, 4
  00345	c1 e2 00	 shl	 edx, 0
  00348	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 634  : 	result[2][2] = 1.0;

  0034d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00352	d1 e0		 shl	 eax, 1
  00354	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00357	b9 04 00 00 00	 mov	 ecx, 4
  0035c	d1 e1		 shl	 ecx, 1
  0035e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00366	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 635  : }

  0036b	5f		 pop	 edi
  0036c	5e		 pop	 esi
  0036d	5b		 pop	 ebx
  0036e	8b e5		 mov	 esp, ebp
  00370	5d		 pop	 ebp
  00371	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix3x3_matrix3x3_2d@@YGXQAY02MQAY02$$CBM1@Z ENDP ; multiply_matrix3x3_matrix3x3_2d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix4x4_vec4d@@YGXPAUVEC4D@@QAY03$$CBMPBU1@@Z
_TEXT	SEGMENT
_temp$ = -16						; size = 16
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_matrix4x4_vec4d@@YGXPAUVEC4D@@QAY03$$CBMPBU1@@Z PROC ; multiply_matrix4x4_vec4d, COMDAT

; 581  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 582  : 
; 583  : 	vec4d
; 584  : 		temp;
; 585  : 
; 586  : 	temp.x = v->x * m[0][0];

  00009	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0001f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00023	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00028	f3 0f 11 45 f0	 movss	 DWORD PTR _temp$[ebp], xmm0

; 587  : 	temp.x += v->y * m[1][0];

  0002d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00032	c1 e0 00	 shl	 eax, 0
  00035	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00038	b9 04 00 00 00	 mov	 ecx, 4
  0003d	6b d1 00	 imul	 edx, ecx, 0
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00043	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00048	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0004d	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _temp$[ebp]
  00052	f3 0f 11 45 f0	 movss	 DWORD PTR _temp$[ebp], xmm0

; 588  : 	temp.x += v->z * m[2][0];

  00057	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0005c	d1 e0		 shl	 eax, 1
  0005e	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00061	b9 04 00 00 00	 mov	 ecx, 4
  00066	6b d1 00	 imul	 edx, ecx, 0
  00069	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  0006c	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00071	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00076	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _temp$[ebp]
  0007b	f3 0f 11 45 f0	 movss	 DWORD PTR _temp$[ebp], xmm0

; 589  : 	temp.x += v->a * m[3][0];

  00080	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00085	6b c8 03	 imul	 ecx, eax, 3
  00088	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0008b	ba 04 00 00 00	 mov	 edx, 4
  00090	6b c2 00	 imul	 eax, edx, 0
  00093	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00096	f3 0f 10 42 0c	 movss	 xmm0, DWORD PTR [edx+12]
  0009b	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  000a0	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _temp$[ebp]
  000a5	f3 0f 11 45 f0	 movss	 DWORD PTR _temp$[ebp], xmm0

; 590  : 
; 591  : 	temp.y = v->x * m[0][1];

  000aa	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000af	6b c8 00	 imul	 ecx, eax, 0
  000b2	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  000b5	ba 04 00 00 00	 mov	 edx, 4
  000ba	c1 e2 00	 shl	 edx, 0
  000bd	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  000c0	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  000c4	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  000c9	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 592  : 	temp.y += v->y * m[1][1];

  000ce	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000d3	c1 e0 00	 shl	 eax, 0
  000d6	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000d9	b9 04 00 00 00	 mov	 ecx, 4
  000de	c1 e1 00	 shl	 ecx, 0
  000e1	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000e4	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000e9	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  000ee	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  000f3	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 593  : 	temp.y += v->z * m[2][1];

  000f8	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000fd	d1 e0		 shl	 eax, 1
  000ff	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00102	b9 04 00 00 00	 mov	 ecx, 4
  00107	c1 e1 00	 shl	 ecx, 0
  0010a	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0010d	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  00112	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00117	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  0011c	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 594  : 	temp.y += v->a * m[3][1];

  00121	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00126	6b c8 03	 imul	 ecx, eax, 3
  00129	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0012c	ba 04 00 00 00	 mov	 edx, 4
  00131	c1 e2 00	 shl	 edx, 0
  00134	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00137	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0013c	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  00141	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  00146	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 595  : 
; 596  : 	temp.z = v->x * m[0][2];

  0014b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00150	6b c8 00	 imul	 ecx, eax, 0
  00153	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00156	ba 04 00 00 00	 mov	 edx, 4
  0015b	d1 e2		 shl	 edx, 1
  0015d	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00160	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00164	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  00169	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 597  : 	temp.z += v->y * m[1][2];

  0016e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00173	c1 e0 00	 shl	 eax, 0
  00176	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00179	b9 04 00 00 00	 mov	 ecx, 4
  0017e	d1 e1		 shl	 ecx, 1
  00180	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00183	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00188	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  0018d	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  00192	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 598  : 	temp.z += v->z * m[2][2];

  00197	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0019c	d1 e0		 shl	 eax, 1
  0019e	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  001a1	b9 04 00 00 00	 mov	 ecx, 4
  001a6	d1 e1		 shl	 ecx, 1
  001a8	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  001ab	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  001b0	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  001b5	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  001ba	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 599  : 	temp.z += v->a * m[3][2];

  001bf	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001c4	6b c8 03	 imul	 ecx, eax, 3
  001c7	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  001ca	ba 04 00 00 00	 mov	 edx, 4
  001cf	d1 e2		 shl	 edx, 1
  001d1	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  001d4	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  001d9	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  001de	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  001e3	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 600  : 
; 601  : 	temp.a = v->x * m[0][3];

  001e8	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001ed	6b c8 00	 imul	 ecx, eax, 0
  001f0	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  001f3	ba 04 00 00 00	 mov	 edx, 4
  001f8	6b c2 03	 imul	 eax, edx, 3
  001fb	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  001fe	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00202	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00207	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+12], xmm0

; 602  : 	temp.a += v->y * m[1][3];

  0020c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00211	c1 e0 00	 shl	 eax, 0
  00214	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00217	b9 04 00 00 00	 mov	 ecx, 4
  0021c	6b d1 03	 imul	 edx, ecx, 3
  0021f	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00222	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00227	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0022c	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+12]
  00231	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+12], xmm0

; 603  : 	temp.a += v->z * m[2][3];

  00236	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0023b	d1 e0		 shl	 eax, 1
  0023d	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00240	b9 04 00 00 00	 mov	 ecx, 4
  00245	6b d1 03	 imul	 edx, ecx, 3
  00248	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  0024b	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00250	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00255	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+12]
  0025a	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+12], xmm0

; 604  : 	temp.a += v->a * m[3][3];

  0025f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00264	6b c8 03	 imul	 ecx, eax, 3
  00267	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0026a	ba 04 00 00 00	 mov	 edx, 4
  0026f	6b c2 03	 imul	 eax, edx, 3
  00272	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00275	f3 0f 10 42 0c	 movss	 xmm0, DWORD PTR [edx+12]
  0027a	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  0027f	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+12]
  00284	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+12], xmm0

; 605  : 
; 606  : 	result->x = temp.x;

  00289	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0028c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _temp$[ebp]
  00291	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 607  : 	result->y = temp.y;

  00295	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00298	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _temp$[ebp+4]
  0029d	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 608  : 	result->z = temp.z;

  002a2	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  002a5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _temp$[ebp+8]
  002aa	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 609  : 	result->a = temp.a;

  002af	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  002b2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _temp$[ebp+12]
  002b7	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 610  : }

  002bc	5f		 pop	 edi
  002bd	5e		 pop	 esi
  002be	5b		 pop	 ebx
  002bf	8b e5		 mov	 esp, ebp
  002c1	5d		 pop	 ebp
  002c2	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix4x4_vec4d@@YGXPAUVEC4D@@QAY03$$CBMPBU1@@Z ENDP ; multiply_matrix4x4_vec4d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix4x4_matrix4x4@@YGXQAY03MQAY03$$CBM1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_matrix4x4_matrix4x4@@YGXQAY03MQAY03$$CBM1@Z PROC ; multiply_matrix4x4_matrix4x4, COMDAT

; 553  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 554  : 
; 555  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[0][1] * b[1][0] ) + ( a[0][2] * b[2][0] ) + a[0][3] * b[3][0]);

  00009	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 04 00 00 00	 mov	 esi, 4
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00034	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00039	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 04 00 00 00	 mov	 edx, 4
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00051	c1 e0 00	 shl	 eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 04 00 00 00	 mov	 esi, 4
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00064	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00069	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00078	b8 04 00 00 00	 mov	 eax, 4
  0007d	d1 e0		 shl	 eax, 1
  0007f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00084	d1 e1		 shl	 ecx, 1
  00086	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00089	be 04 00 00 00	 mov	 esi, 4
  0008e	6b f6 00	 imul	 esi, esi, 0
  00091	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00096	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0009b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009f	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000a4	6b c2 00	 imul	 eax, edx, 0
  000a7	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  000aa	b9 04 00 00 00	 mov	 ecx, 4
  000af	6b d1 03	 imul	 edx, ecx, 3
  000b2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  000b7	6b c9 03	 imul	 ecx, ecx, 3
  000ba	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  000bd	be 04 00 00 00	 mov	 esi, 4
  000c2	6b f6 00	 imul	 esi, esi, 0
  000c5	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  000ca	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  000cf	f3 0f 58 c1	 addss	 xmm0, xmm1
  000d3	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  000d8	6b c2 00	 imul	 eax, edx, 0
  000db	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000de	b9 04 00 00 00	 mov	 ecx, 4
  000e3	6b d1 00	 imul	 edx, ecx, 0
  000e6	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 556  : 	result[0][1] = ( ( a[0][0] * b[0][1] ) + ( a[0][1] * b[1][1] ) + ( a[0][2] * b[2][1] ) + a[0][3] * b[3][1]);

  000eb	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000f0	6b c8 00	 imul	 ecx, eax, 0
  000f3	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f6	ba 04 00 00 00	 mov	 edx, 4
  000fb	6b c2 00	 imul	 eax, edx, 0
  000fe	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00103	6b d2 00	 imul	 edx, edx, 0
  00106	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00109	be 04 00 00 00	 mov	 esi, 4
  0010e	c1 e6 00	 shl	 esi, 0
  00111	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00116	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  0011b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00120	6b c8 00	 imul	 ecx, eax, 0
  00123	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00126	ba 04 00 00 00	 mov	 edx, 4
  0012b	c1 e2 00	 shl	 edx, 0
  0012e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00133	c1 e0 00	 shl	 eax, 0
  00136	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00139	be 04 00 00 00	 mov	 esi, 4
  0013e	c1 e6 00	 shl	 esi, 0
  00141	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00146	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0014b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00154	6b d1 00	 imul	 edx, ecx, 0
  00157	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0015a	b8 04 00 00 00	 mov	 eax, 4
  0015f	d1 e0		 shl	 eax, 1
  00161	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00166	d1 e1		 shl	 ecx, 1
  00168	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0016b	be 04 00 00 00	 mov	 esi, 4
  00170	c1 e6 00	 shl	 esi, 0
  00173	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00178	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0017d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00181	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00186	6b c2 00	 imul	 eax, edx, 0
  00189	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0018c	b9 04 00 00 00	 mov	 ecx, 4
  00191	6b d1 03	 imul	 edx, ecx, 3
  00194	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00199	6b c9 03	 imul	 ecx, ecx, 3
  0019c	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0019f	be 04 00 00 00	 mov	 esi, 4
  001a4	c1 e6 00	 shl	 esi, 0
  001a7	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  001ac	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  001b1	f3 0f 58 c1	 addss	 xmm0, xmm1
  001b5	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  001ba	6b c2 00	 imul	 eax, edx, 0
  001bd	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  001c0	b9 04 00 00 00	 mov	 ecx, 4
  001c5	c1 e1 00	 shl	 ecx, 0
  001c8	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 557  : 	result[0][2] = ( ( a[0][0] * b[0][2] ) + ( a[0][1] * b[1][2] ) + ( a[0][2] * b[2][2] ) + a[0][3] * b[3][2]);

  001cd	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001d2	6b c8 00	 imul	 ecx, eax, 0
  001d5	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  001d8	ba 04 00 00 00	 mov	 edx, 4
  001dd	6b c2 00	 imul	 eax, edx, 0
  001e0	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  001e5	6b d2 00	 imul	 edx, edx, 0
  001e8	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  001eb	be 04 00 00 00	 mov	 esi, 4
  001f0	d1 e6		 shl	 esi, 1
  001f2	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  001f7	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  001fc	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00201	6b c8 00	 imul	 ecx, eax, 0
  00204	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00207	ba 04 00 00 00	 mov	 edx, 4
  0020c	c1 e2 00	 shl	 edx, 0
  0020f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00214	c1 e0 00	 shl	 eax, 0
  00217	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0021a	be 04 00 00 00	 mov	 esi, 4
  0021f	d1 e6		 shl	 esi, 1
  00221	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00226	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0022b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0022f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00234	6b d1 00	 imul	 edx, ecx, 0
  00237	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0023a	b8 04 00 00 00	 mov	 eax, 4
  0023f	d1 e0		 shl	 eax, 1
  00241	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00246	d1 e1		 shl	 ecx, 1
  00248	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0024b	be 04 00 00 00	 mov	 esi, 4
  00250	d1 e6		 shl	 esi, 1
  00252	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00257	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0025c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00260	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00265	6b c2 00	 imul	 eax, edx, 0
  00268	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0026b	b9 04 00 00 00	 mov	 ecx, 4
  00270	6b d1 03	 imul	 edx, ecx, 3
  00273	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00278	6b c9 03	 imul	 ecx, ecx, 3
  0027b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0027e	be 04 00 00 00	 mov	 esi, 4
  00283	d1 e6		 shl	 esi, 1
  00285	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  0028a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0028f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00293	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00298	6b c2 00	 imul	 eax, edx, 0
  0029b	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0029e	b9 04 00 00 00	 mov	 ecx, 4
  002a3	d1 e1		 shl	 ecx, 1
  002a5	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 558  : 	result[0][3] = ( ( a[0][0] * b[0][3] ) + ( a[0][1] * b[1][3] ) + ( a[0][2] * b[2][3] ) + a[0][3] * b[3][3]);

  002aa	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002af	6b c8 00	 imul	 ecx, eax, 0
  002b2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002b5	ba 04 00 00 00	 mov	 edx, 4
  002ba	6b c2 00	 imul	 eax, edx, 0
  002bd	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  002c2	6b d2 00	 imul	 edx, edx, 0
  002c5	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  002c8	be 04 00 00 00	 mov	 esi, 4
  002cd	6b f6 03	 imul	 esi, esi, 3
  002d0	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  002d5	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  002da	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002df	6b c8 00	 imul	 ecx, eax, 0
  002e2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002e5	ba 04 00 00 00	 mov	 edx, 4
  002ea	c1 e2 00	 shl	 edx, 0
  002ed	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002f2	c1 e0 00	 shl	 eax, 0
  002f5	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  002f8	be 04 00 00 00	 mov	 esi, 4
  002fd	6b f6 03	 imul	 esi, esi, 3
  00300	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00305	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0030a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0030e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00313	6b d1 00	 imul	 edx, ecx, 0
  00316	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00319	b8 04 00 00 00	 mov	 eax, 4
  0031e	d1 e0		 shl	 eax, 1
  00320	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00325	d1 e1		 shl	 ecx, 1
  00327	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0032a	be 04 00 00 00	 mov	 esi, 4
  0032f	6b f6 03	 imul	 esi, esi, 3
  00332	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00337	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0033c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00340	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00345	6b c2 00	 imul	 eax, edx, 0
  00348	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0034b	b9 04 00 00 00	 mov	 ecx, 4
  00350	6b d1 03	 imul	 edx, ecx, 3
  00353	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00358	6b c9 03	 imul	 ecx, ecx, 3
  0035b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0035e	be 04 00 00 00	 mov	 esi, 4
  00363	6b f6 03	 imul	 esi, esi, 3
  00366	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  0036b	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00370	f3 0f 58 c1	 addss	 xmm0, xmm1
  00374	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00379	6b c2 00	 imul	 eax, edx, 0
  0037c	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  0037f	b9 04 00 00 00	 mov	 ecx, 4
  00384	6b d1 03	 imul	 edx, ecx, 3
  00387	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 559  : 
; 560  : 	result[1][0] = ( ( a[1][0] * b[0][0] ) + ( a[1][1] * b[1][0] ) + ( a[1][2] * b[2][0] ) + a[1][3] * b[3][0]);

  0038c	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00391	c1 e0 00	 shl	 eax, 0
  00394	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00397	b9 04 00 00 00	 mov	 ecx, 4
  0039c	6b d1 00	 imul	 edx, ecx, 0
  0039f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  003a4	6b c9 00	 imul	 ecx, ecx, 0
  003a7	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003aa	be 04 00 00 00	 mov	 esi, 4
  003af	6b f6 00	 imul	 esi, esi, 0
  003b2	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  003b7	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  003bc	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  003c1	c1 e2 00	 shl	 edx, 0
  003c4	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003c7	b8 04 00 00 00	 mov	 eax, 4
  003cc	c1 e0 00	 shl	 eax, 0
  003cf	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  003d4	c1 e1 00	 shl	 ecx, 0
  003d7	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003da	be 04 00 00 00	 mov	 esi, 4
  003df	6b f6 00	 imul	 esi, esi, 0
  003e2	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  003e7	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  003ec	f3 0f 58 c1	 addss	 xmm0, xmm1
  003f0	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  003f5	c1 e2 00	 shl	 edx, 0
  003f8	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003fb	b8 04 00 00 00	 mov	 eax, 4
  00400	d1 e0		 shl	 eax, 1
  00402	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00407	d1 e1		 shl	 ecx, 1
  00409	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0040c	be 04 00 00 00	 mov	 esi, 4
  00411	6b f6 00	 imul	 esi, esi, 0
  00414	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00419	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0041e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00422	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00427	c1 e2 00	 shl	 edx, 0
  0042a	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0042d	b8 04 00 00 00	 mov	 eax, 4
  00432	6b c8 03	 imul	 ecx, eax, 3
  00435	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0043a	6b c0 03	 imul	 eax, eax, 3
  0043d	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00440	be 04 00 00 00	 mov	 esi, 4
  00445	6b f6 00	 imul	 esi, esi, 0
  00448	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  0044d	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00452	f3 0f 58 c1	 addss	 xmm0, xmm1
  00456	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0045b	c1 e1 00	 shl	 ecx, 0
  0045e	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00461	ba 04 00 00 00	 mov	 edx, 4
  00466	6b c2 00	 imul	 eax, edx, 0
  00469	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 561  : 	result[1][1] = ( ( a[1][0] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[1][2] * b[2][1] ) + a[1][3] * b[3][1]);

  0046e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00473	c1 e0 00	 shl	 eax, 0
  00476	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00479	b9 04 00 00 00	 mov	 ecx, 4
  0047e	6b d1 00	 imul	 edx, ecx, 0
  00481	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00486	6b c9 00	 imul	 ecx, ecx, 0
  00489	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0048c	be 04 00 00 00	 mov	 esi, 4
  00491	c1 e6 00	 shl	 esi, 0
  00494	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00499	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0049e	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  004a3	c1 e2 00	 shl	 edx, 0
  004a6	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004a9	b8 04 00 00 00	 mov	 eax, 4
  004ae	c1 e0 00	 shl	 eax, 0
  004b1	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  004b6	c1 e1 00	 shl	 ecx, 0
  004b9	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004bc	be 04 00 00 00	 mov	 esi, 4
  004c1	c1 e6 00	 shl	 esi, 0
  004c4	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  004c9	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  004ce	f3 0f 58 c1	 addss	 xmm0, xmm1
  004d2	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  004d7	c1 e2 00	 shl	 edx, 0
  004da	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004dd	b8 04 00 00 00	 mov	 eax, 4
  004e2	d1 e0		 shl	 eax, 1
  004e4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  004e9	d1 e1		 shl	 ecx, 1
  004eb	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004ee	be 04 00 00 00	 mov	 esi, 4
  004f3	c1 e6 00	 shl	 esi, 0
  004f6	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  004fb	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00500	f3 0f 58 c1	 addss	 xmm0, xmm1
  00504	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00509	c1 e2 00	 shl	 edx, 0
  0050c	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0050f	b8 04 00 00 00	 mov	 eax, 4
  00514	6b c8 03	 imul	 ecx, eax, 3
  00517	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0051c	6b c0 03	 imul	 eax, eax, 3
  0051f	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00522	be 04 00 00 00	 mov	 esi, 4
  00527	c1 e6 00	 shl	 esi, 0
  0052a	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  0052f	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00534	f3 0f 58 c1	 addss	 xmm0, xmm1
  00538	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0053d	c1 e1 00	 shl	 ecx, 0
  00540	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00543	ba 04 00 00 00	 mov	 edx, 4
  00548	c1 e2 00	 shl	 edx, 0
  0054b	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 562  : 	result[1][2] = ( ( a[1][0] * b[0][2] ) + ( a[1][1] * b[1][2] ) + ( a[1][2] * b[2][2] ) + a[1][3] * b[3][2]);

  00550	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00555	c1 e0 00	 shl	 eax, 0
  00558	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0055b	b9 04 00 00 00	 mov	 ecx, 4
  00560	6b d1 00	 imul	 edx, ecx, 0
  00563	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00568	6b c9 00	 imul	 ecx, ecx, 0
  0056b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0056e	be 04 00 00 00	 mov	 esi, 4
  00573	d1 e6		 shl	 esi, 1
  00575	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0057a	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0057f	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00584	c1 e2 00	 shl	 edx, 0
  00587	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0058a	b8 04 00 00 00	 mov	 eax, 4
  0058f	c1 e0 00	 shl	 eax, 0
  00592	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00597	c1 e1 00	 shl	 ecx, 0
  0059a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0059d	be 04 00 00 00	 mov	 esi, 4
  005a2	d1 e6		 shl	 esi, 1
  005a4	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005a9	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005ae	f3 0f 58 c1	 addss	 xmm0, xmm1
  005b2	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  005b7	c1 e2 00	 shl	 edx, 0
  005ba	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005bd	b8 04 00 00 00	 mov	 eax, 4
  005c2	d1 e0		 shl	 eax, 1
  005c4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  005c9	d1 e1		 shl	 ecx, 1
  005cb	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005ce	be 04 00 00 00	 mov	 esi, 4
  005d3	d1 e6		 shl	 esi, 1
  005d5	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005da	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005df	f3 0f 58 c1	 addss	 xmm0, xmm1
  005e3	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  005e8	c1 e2 00	 shl	 edx, 0
  005eb	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005ee	b8 04 00 00 00	 mov	 eax, 4
  005f3	6b c8 03	 imul	 ecx, eax, 3
  005f6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  005fb	6b c0 03	 imul	 eax, eax, 3
  005fe	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00601	be 04 00 00 00	 mov	 esi, 4
  00606	d1 e6		 shl	 esi, 1
  00608	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  0060d	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00612	f3 0f 58 c1	 addss	 xmm0, xmm1
  00616	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0061b	c1 e1 00	 shl	 ecx, 0
  0061e	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00621	ba 04 00 00 00	 mov	 edx, 4
  00626	d1 e2		 shl	 edx, 1
  00628	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 563  : 	result[1][3] = ( ( a[1][0] * b[0][3] ) + ( a[1][1] * b[1][3] ) + ( a[1][2] * b[2][3] ) + a[1][3] * b[3][3]);

  0062d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00632	c1 e0 00	 shl	 eax, 0
  00635	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00638	b9 04 00 00 00	 mov	 ecx, 4
  0063d	6b d1 00	 imul	 edx, ecx, 0
  00640	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00645	6b c9 00	 imul	 ecx, ecx, 0
  00648	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0064b	be 04 00 00 00	 mov	 esi, 4
  00650	6b f6 03	 imul	 esi, esi, 3
  00653	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00658	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0065d	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00662	c1 e2 00	 shl	 edx, 0
  00665	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00668	b8 04 00 00 00	 mov	 eax, 4
  0066d	c1 e0 00	 shl	 eax, 0
  00670	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00675	c1 e1 00	 shl	 ecx, 0
  00678	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0067b	be 04 00 00 00	 mov	 esi, 4
  00680	6b f6 03	 imul	 esi, esi, 3
  00683	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00688	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0068d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00691	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00696	c1 e2 00	 shl	 edx, 0
  00699	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0069c	b8 04 00 00 00	 mov	 eax, 4
  006a1	d1 e0		 shl	 eax, 1
  006a3	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  006a8	d1 e1		 shl	 ecx, 1
  006aa	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  006ad	be 04 00 00 00	 mov	 esi, 4
  006b2	6b f6 03	 imul	 esi, esi, 3
  006b5	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  006ba	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  006bf	f3 0f 58 c1	 addss	 xmm0, xmm1
  006c3	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  006c8	c1 e2 00	 shl	 edx, 0
  006cb	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  006ce	b8 04 00 00 00	 mov	 eax, 4
  006d3	6b c8 03	 imul	 ecx, eax, 3
  006d6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  006db	6b c0 03	 imul	 eax, eax, 3
  006de	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  006e1	be 04 00 00 00	 mov	 esi, 4
  006e6	6b f6 03	 imul	 esi, esi, 3
  006e9	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  006ee	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  006f3	f3 0f 58 c1	 addss	 xmm0, xmm1
  006f7	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  006fc	c1 e1 00	 shl	 ecx, 0
  006ff	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00702	ba 04 00 00 00	 mov	 edx, 4
  00707	6b c2 03	 imul	 eax, edx, 3
  0070a	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 564  : 
; 565  : 	result[2][0] = ( ( a[2][0] * b[0][0] ) + ( a[2][1] * b[1][0] ) + ( a[2][2] * b[2][0] ) + a[2][3] * b[3][0]);

  0070f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00714	d1 e0		 shl	 eax, 1
  00716	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00719	b9 04 00 00 00	 mov	 ecx, 4
  0071e	6b d1 00	 imul	 edx, ecx, 0
  00721	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00726	6b c9 00	 imul	 ecx, ecx, 0
  00729	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0072c	be 04 00 00 00	 mov	 esi, 4
  00731	6b f6 00	 imul	 esi, esi, 0
  00734	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00739	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0073e	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00743	d1 e2		 shl	 edx, 1
  00745	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00748	b8 04 00 00 00	 mov	 eax, 4
  0074d	c1 e0 00	 shl	 eax, 0
  00750	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00755	c1 e1 00	 shl	 ecx, 0
  00758	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0075b	be 04 00 00 00	 mov	 esi, 4
  00760	6b f6 00	 imul	 esi, esi, 0
  00763	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00768	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0076d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00771	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00776	d1 e2		 shl	 edx, 1
  00778	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0077b	b8 04 00 00 00	 mov	 eax, 4
  00780	d1 e0		 shl	 eax, 1
  00782	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00787	d1 e1		 shl	 ecx, 1
  00789	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0078c	be 04 00 00 00	 mov	 esi, 4
  00791	6b f6 00	 imul	 esi, esi, 0
  00794	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00799	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0079e	f3 0f 58 c1	 addss	 xmm0, xmm1
  007a2	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  007a7	d1 e2		 shl	 edx, 1
  007a9	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  007ac	b8 04 00 00 00	 mov	 eax, 4
  007b1	6b c8 03	 imul	 ecx, eax, 3
  007b4	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  007b9	6b c0 03	 imul	 eax, eax, 3
  007bc	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  007bf	be 04 00 00 00	 mov	 esi, 4
  007c4	6b f6 00	 imul	 esi, esi, 0
  007c7	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  007cc	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  007d1	f3 0f 58 c1	 addss	 xmm0, xmm1
  007d5	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  007da	d1 e1		 shl	 ecx, 1
  007dc	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  007df	ba 04 00 00 00	 mov	 edx, 4
  007e4	6b c2 00	 imul	 eax, edx, 0
  007e7	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 566  : 	result[2][1] = ( ( a[2][0] * b[0][1] ) + ( a[2][1] * b[1][1] ) + ( a[2][2] * b[2][1] ) + a[2][3] * b[3][1]);

  007ec	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  007f1	d1 e0		 shl	 eax, 1
  007f3	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  007f6	b9 04 00 00 00	 mov	 ecx, 4
  007fb	6b d1 00	 imul	 edx, ecx, 0
  007fe	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00803	6b c9 00	 imul	 ecx, ecx, 0
  00806	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00809	be 04 00 00 00	 mov	 esi, 4
  0080e	c1 e6 00	 shl	 esi, 0
  00811	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00816	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0081b	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00820	d1 e2		 shl	 edx, 1
  00822	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00825	b8 04 00 00 00	 mov	 eax, 4
  0082a	c1 e0 00	 shl	 eax, 0
  0082d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00832	c1 e1 00	 shl	 ecx, 0
  00835	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00838	be 04 00 00 00	 mov	 esi, 4
  0083d	c1 e6 00	 shl	 esi, 0
  00840	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00845	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0084a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0084e	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00853	d1 e2		 shl	 edx, 1
  00855	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00858	b8 04 00 00 00	 mov	 eax, 4
  0085d	d1 e0		 shl	 eax, 1
  0085f	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00864	d1 e1		 shl	 ecx, 1
  00866	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00869	be 04 00 00 00	 mov	 esi, 4
  0086e	c1 e6 00	 shl	 esi, 0
  00871	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00876	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0087b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0087f	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00884	d1 e2		 shl	 edx, 1
  00886	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00889	b8 04 00 00 00	 mov	 eax, 4
  0088e	6b c8 03	 imul	 ecx, eax, 3
  00891	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00896	6b c0 03	 imul	 eax, eax, 3
  00899	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0089c	be 04 00 00 00	 mov	 esi, 4
  008a1	c1 e6 00	 shl	 esi, 0
  008a4	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  008a9	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  008ae	f3 0f 58 c1	 addss	 xmm0, xmm1
  008b2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  008b7	d1 e1		 shl	 ecx, 1
  008b9	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  008bc	ba 04 00 00 00	 mov	 edx, 4
  008c1	c1 e2 00	 shl	 edx, 0
  008c4	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 567  : 	result[2][2] = ( ( a[2][0] * b[0][2] ) + ( a[2][1] * b[1][2] ) + ( a[2][2] * b[2][2] ) + a[2][3] * b[3][2]);

  008c9	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  008ce	d1 e0		 shl	 eax, 1
  008d0	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  008d3	b9 04 00 00 00	 mov	 ecx, 4
  008d8	6b d1 00	 imul	 edx, ecx, 0
  008db	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  008e0	6b c9 00	 imul	 ecx, ecx, 0
  008e3	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  008e6	be 04 00 00 00	 mov	 esi, 4
  008eb	d1 e6		 shl	 esi, 1
  008ed	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  008f2	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  008f7	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  008fc	d1 e2		 shl	 edx, 1
  008fe	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00901	b8 04 00 00 00	 mov	 eax, 4
  00906	c1 e0 00	 shl	 eax, 0
  00909	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0090e	c1 e1 00	 shl	 ecx, 0
  00911	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00914	be 04 00 00 00	 mov	 esi, 4
  00919	d1 e6		 shl	 esi, 1
  0091b	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00920	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00925	f3 0f 58 c1	 addss	 xmm0, xmm1
  00929	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  0092e	d1 e2		 shl	 edx, 1
  00930	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00933	b8 04 00 00 00	 mov	 eax, 4
  00938	d1 e0		 shl	 eax, 1
  0093a	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0093f	d1 e1		 shl	 ecx, 1
  00941	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00944	be 04 00 00 00	 mov	 esi, 4
  00949	d1 e6		 shl	 esi, 1
  0094b	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00950	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00955	f3 0f 58 c1	 addss	 xmm0, xmm1
  00959	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  0095e	d1 e2		 shl	 edx, 1
  00960	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00963	b8 04 00 00 00	 mov	 eax, 4
  00968	6b c8 03	 imul	 ecx, eax, 3
  0096b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00970	6b c0 03	 imul	 eax, eax, 3
  00973	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00976	be 04 00 00 00	 mov	 esi, 4
  0097b	d1 e6		 shl	 esi, 1
  0097d	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00982	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00987	f3 0f 58 c1	 addss	 xmm0, xmm1
  0098b	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00990	d1 e1		 shl	 ecx, 1
  00992	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00995	ba 04 00 00 00	 mov	 edx, 4
  0099a	d1 e2		 shl	 edx, 1
  0099c	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 568  : 	result[2][3] = ( ( a[2][0] * b[0][3] ) + ( a[2][1] * b[1][3] ) + ( a[2][2] * b[2][3] ) + a[2][3] * b[3][3]);

  009a1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  009a6	d1 e0		 shl	 eax, 1
  009a8	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  009ab	b9 04 00 00 00	 mov	 ecx, 4
  009b0	6b d1 00	 imul	 edx, ecx, 0
  009b3	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  009b8	6b c9 00	 imul	 ecx, ecx, 0
  009bb	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  009be	be 04 00 00 00	 mov	 esi, 4
  009c3	6b f6 03	 imul	 esi, esi, 3
  009c6	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  009cb	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  009d0	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  009d5	d1 e2		 shl	 edx, 1
  009d7	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  009da	b8 04 00 00 00	 mov	 eax, 4
  009df	c1 e0 00	 shl	 eax, 0
  009e2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  009e7	c1 e1 00	 shl	 ecx, 0
  009ea	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  009ed	be 04 00 00 00	 mov	 esi, 4
  009f2	6b f6 03	 imul	 esi, esi, 3
  009f5	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  009fa	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  009ff	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a03	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00a08	d1 e2		 shl	 edx, 1
  00a0a	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00a0d	b8 04 00 00 00	 mov	 eax, 4
  00a12	d1 e0		 shl	 eax, 1
  00a14	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a19	d1 e1		 shl	 ecx, 1
  00a1b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00a1e	be 04 00 00 00	 mov	 esi, 4
  00a23	6b f6 03	 imul	 esi, esi, 3
  00a26	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00a2b	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00a30	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a34	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00a39	d1 e2		 shl	 edx, 1
  00a3b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00a3e	b8 04 00 00 00	 mov	 eax, 4
  00a43	6b c8 03	 imul	 ecx, eax, 3
  00a46	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a4b	6b c0 03	 imul	 eax, eax, 3
  00a4e	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00a51	be 04 00 00 00	 mov	 esi, 4
  00a56	6b f6 03	 imul	 esi, esi, 3
  00a59	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00a5e	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00a63	f3 0f 58 c1	 addss	 xmm0, xmm1
  00a67	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00a6c	d1 e1		 shl	 ecx, 1
  00a6e	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00a71	ba 04 00 00 00	 mov	 edx, 4
  00a76	6b c2 03	 imul	 eax, edx, 3
  00a79	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 569  : 
; 570  : 	result[3][0] = ( ( a[3][0] * b[0][0] ) + ( a[3][1] * b[1][0] ) + ( a[3][2] * b[2][0] ) + a[3][3] * b[3][0]);

  00a7e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00a83	6b c8 03	 imul	 ecx, eax, 3
  00a86	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00a89	ba 04 00 00 00	 mov	 edx, 4
  00a8e	6b c2 00	 imul	 eax, edx, 0
  00a91	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00a96	6b d2 00	 imul	 edx, edx, 0
  00a99	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00a9c	be 04 00 00 00	 mov	 esi, 4
  00aa1	6b f6 00	 imul	 esi, esi, 0
  00aa4	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00aa9	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00aae	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00ab3	6b c8 03	 imul	 ecx, eax, 3
  00ab6	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00ab9	ba 04 00 00 00	 mov	 edx, 4
  00abe	c1 e2 00	 shl	 edx, 0
  00ac1	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00ac6	c1 e0 00	 shl	 eax, 0
  00ac9	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00acc	be 04 00 00 00	 mov	 esi, 4
  00ad1	6b f6 00	 imul	 esi, esi, 0
  00ad4	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00ad9	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00ade	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ae2	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ae7	6b d1 03	 imul	 edx, ecx, 3
  00aea	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00aed	b8 04 00 00 00	 mov	 eax, 4
  00af2	d1 e0		 shl	 eax, 1
  00af4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00af9	d1 e1		 shl	 ecx, 1
  00afb	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00afe	be 04 00 00 00	 mov	 esi, 4
  00b03	6b f6 00	 imul	 esi, esi, 0
  00b06	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00b0b	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00b10	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b14	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b19	6b c2 03	 imul	 eax, edx, 3
  00b1c	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00b1f	b9 04 00 00 00	 mov	 ecx, 4
  00b24	6b d1 03	 imul	 edx, ecx, 3
  00b27	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00b2c	6b c9 03	 imul	 ecx, ecx, 3
  00b2f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00b32	be 04 00 00 00	 mov	 esi, 4
  00b37	6b f6 00	 imul	 esi, esi, 0
  00b3a	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00b3f	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00b44	f3 0f 58 c1	 addss	 xmm0, xmm1
  00b48	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b4d	6b c2 03	 imul	 eax, edx, 3
  00b50	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00b53	b9 04 00 00 00	 mov	 ecx, 4
  00b58	6b d1 00	 imul	 edx, ecx, 0
  00b5b	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 571  : 	result[3][1] = ( ( a[3][0] * b[0][1] ) + ( a[3][1] * b[1][1] ) + ( a[3][2] * b[2][1] ) + a[3][3] * b[3][1]);

  00b60	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b65	6b c8 03	 imul	 ecx, eax, 3
  00b68	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00b6b	ba 04 00 00 00	 mov	 edx, 4
  00b70	6b c2 00	 imul	 eax, edx, 0
  00b73	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00b78	6b d2 00	 imul	 edx, edx, 0
  00b7b	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00b7e	be 04 00 00 00	 mov	 esi, 4
  00b83	c1 e6 00	 shl	 esi, 0
  00b86	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00b8b	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00b90	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00b95	6b c8 03	 imul	 ecx, eax, 3
  00b98	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00b9b	ba 04 00 00 00	 mov	 edx, 4
  00ba0	c1 e2 00	 shl	 edx, 0
  00ba3	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00ba8	c1 e0 00	 shl	 eax, 0
  00bab	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00bae	be 04 00 00 00	 mov	 esi, 4
  00bb3	c1 e6 00	 shl	 esi, 0
  00bb6	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00bbb	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00bc0	f3 0f 58 c1	 addss	 xmm0, xmm1
  00bc4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00bc9	6b d1 03	 imul	 edx, ecx, 3
  00bcc	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00bcf	b8 04 00 00 00	 mov	 eax, 4
  00bd4	d1 e0		 shl	 eax, 1
  00bd6	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00bdb	d1 e1		 shl	 ecx, 1
  00bdd	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00be0	be 04 00 00 00	 mov	 esi, 4
  00be5	c1 e6 00	 shl	 esi, 0
  00be8	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00bed	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00bf2	f3 0f 58 c1	 addss	 xmm0, xmm1
  00bf6	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00bfb	6b c2 03	 imul	 eax, edx, 3
  00bfe	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00c01	b9 04 00 00 00	 mov	 ecx, 4
  00c06	6b d1 03	 imul	 edx, ecx, 3
  00c09	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00c0e	6b c9 03	 imul	 ecx, ecx, 3
  00c11	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00c14	be 04 00 00 00	 mov	 esi, 4
  00c19	c1 e6 00	 shl	 esi, 0
  00c1c	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00c21	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00c26	f3 0f 58 c1	 addss	 xmm0, xmm1
  00c2a	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00c2f	6b c2 03	 imul	 eax, edx, 3
  00c32	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00c35	b9 04 00 00 00	 mov	 ecx, 4
  00c3a	c1 e1 00	 shl	 ecx, 0
  00c3d	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 572  : 	result[3][2] = ( ( a[3][0] * b[0][2] ) + ( a[3][1] * b[1][2] ) + ( a[3][2] * b[2][2] ) + a[3][3] * b[3][2]);

  00c42	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c47	6b c8 03	 imul	 ecx, eax, 3
  00c4a	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00c4d	ba 04 00 00 00	 mov	 edx, 4
  00c52	6b c2 00	 imul	 eax, edx, 0
  00c55	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00c5a	6b d2 00	 imul	 edx, edx, 0
  00c5d	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00c60	be 04 00 00 00	 mov	 esi, 4
  00c65	d1 e6		 shl	 esi, 1
  00c67	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00c6c	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00c71	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c76	6b c8 03	 imul	 ecx, eax, 3
  00c79	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00c7c	ba 04 00 00 00	 mov	 edx, 4
  00c81	c1 e2 00	 shl	 edx, 0
  00c84	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00c89	c1 e0 00	 shl	 eax, 0
  00c8c	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00c8f	be 04 00 00 00	 mov	 esi, 4
  00c94	d1 e6		 shl	 esi, 1
  00c96	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00c9b	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00ca0	f3 0f 58 c1	 addss	 xmm0, xmm1
  00ca4	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ca9	6b d1 03	 imul	 edx, ecx, 3
  00cac	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00caf	b8 04 00 00 00	 mov	 eax, 4
  00cb4	d1 e0		 shl	 eax, 1
  00cb6	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00cbb	d1 e1		 shl	 ecx, 1
  00cbd	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00cc0	be 04 00 00 00	 mov	 esi, 4
  00cc5	d1 e6		 shl	 esi, 1
  00cc7	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00ccc	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00cd1	f3 0f 58 c1	 addss	 xmm0, xmm1
  00cd5	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00cda	6b c2 03	 imul	 eax, edx, 3
  00cdd	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00ce0	b9 04 00 00 00	 mov	 ecx, 4
  00ce5	6b d1 03	 imul	 edx, ecx, 3
  00ce8	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00ced	6b c9 03	 imul	 ecx, ecx, 3
  00cf0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00cf3	be 04 00 00 00	 mov	 esi, 4
  00cf8	d1 e6		 shl	 esi, 1
  00cfa	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00cff	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00d04	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d08	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00d0d	6b c2 03	 imul	 eax, edx, 3
  00d10	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00d13	b9 04 00 00 00	 mov	 ecx, 4
  00d18	d1 e1		 shl	 ecx, 1
  00d1a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 573  : 	result[3][3] = ( ( a[3][0] * b[0][3] ) + ( a[3][1] * b[1][3] ) + ( a[3][2] * b[2][3] ) + a[3][3] * b[3][3]);

  00d1f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00d24	6b c8 03	 imul	 ecx, eax, 3
  00d27	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00d2a	ba 04 00 00 00	 mov	 edx, 4
  00d2f	6b c2 00	 imul	 eax, edx, 0
  00d32	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00d37	6b d2 00	 imul	 edx, edx, 0
  00d3a	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00d3d	be 04 00 00 00	 mov	 esi, 4
  00d42	6b f6 03	 imul	 esi, esi, 3
  00d45	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00d4a	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00d4f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00d54	6b c8 03	 imul	 ecx, eax, 3
  00d57	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00d5a	ba 04 00 00 00	 mov	 edx, 4
  00d5f	c1 e2 00	 shl	 edx, 0
  00d62	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00d67	c1 e0 00	 shl	 eax, 0
  00d6a	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00d6d	be 04 00 00 00	 mov	 esi, 4
  00d72	6b f6 03	 imul	 esi, esi, 3
  00d75	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00d7a	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00d7f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00d83	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d88	6b d1 03	 imul	 edx, ecx, 3
  00d8b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00d8e	b8 04 00 00 00	 mov	 eax, 4
  00d93	d1 e0		 shl	 eax, 1
  00d95	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00d9a	d1 e1		 shl	 ecx, 1
  00d9c	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00d9f	be 04 00 00 00	 mov	 esi, 4
  00da4	6b f6 03	 imul	 esi, esi, 3
  00da7	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00dac	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00db1	f3 0f 58 c1	 addss	 xmm0, xmm1
  00db5	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00dba	6b c2 03	 imul	 eax, edx, 3
  00dbd	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00dc0	b9 04 00 00 00	 mov	 ecx, 4
  00dc5	6b d1 03	 imul	 edx, ecx, 3
  00dc8	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00dcd	6b c9 03	 imul	 ecx, ecx, 3
  00dd0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00dd3	be 04 00 00 00	 mov	 esi, 4
  00dd8	6b f6 03	 imul	 esi, esi, 3
  00ddb	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00de0	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00de5	f3 0f 58 c1	 addss	 xmm0, xmm1
  00de9	ba 10 00 00 00	 mov	 edx, 16			; 00000010H
  00dee	6b c2 03	 imul	 eax, edx, 3
  00df1	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00df4	b9 04 00 00 00	 mov	 ecx, 4
  00df9	6b d1 03	 imul	 edx, ecx, 3
  00dfc	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 574  : }

  00e01	5f		 pop	 edi
  00e02	5e		 pop	 esi
  00e03	5b		 pop	 ebx
  00e04	8b e5		 mov	 esp, ebp
  00e06	5d		 pop	 ebp
  00e07	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix4x4_matrix4x4@@YGXQAY03MQAY03$$CBM1@Z ENDP ; multiply_matrix4x4_matrix4x4
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix3x3_transpose_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_matrix3x3_transpose_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z PROC ; multiply_matrix3x3_transpose_matrix3x3, COMDAT

; 533  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 534  : 
; 535  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[0][1] * b[0][1] ) + ( a[0][2] * b[0][2] ) );

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 04 00 00 00	 mov	 esi, 4
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00034	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00039	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 04 00 00 00	 mov	 edx, 4
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00051	6b c0 00	 imul	 eax, eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 04 00 00 00	 mov	 esi, 4
  0005c	c1 e6 00	 shl	 esi, 0
  0005f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00064	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00069	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00078	b8 04 00 00 00	 mov	 eax, 4
  0007d	d1 e0		 shl	 eax, 1
  0007f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00084	6b c9 00	 imul	 ecx, ecx, 0
  00087	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0008a	be 04 00 00 00	 mov	 esi, 4
  0008f	d1 e6		 shl	 esi, 1
  00091	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00096	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0009b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000a4	6b c2 00	 imul	 eax, edx, 0
  000a7	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000aa	b9 04 00 00 00	 mov	 ecx, 4
  000af	6b d1 00	 imul	 edx, ecx, 0
  000b2	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 536  : 	result[0][1] = ( ( a[0][0] * b[1][0] ) + ( a[0][1] * b[1][1] ) + ( a[0][2] * b[1][2] ) );

  000b7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 04 00 00 00	 mov	 edx, 4
  000c7	6b c2 00	 imul	 eax, edx, 0
  000ca	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000cf	c1 e2 00	 shl	 edx, 0
  000d2	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  000d5	be 04 00 00 00	 mov	 esi, 4
  000da	6b f6 00	 imul	 esi, esi, 0
  000dd	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  000e2	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  000e7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 04 00 00 00	 mov	 edx, 4
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 04 00 00 00	 mov	 esi, 4
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00112	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00117	f3 0f 58 c1	 addss	 xmm0, xmm1
  0011b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00120	6b d1 00	 imul	 edx, ecx, 0
  00123	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00126	b8 04 00 00 00	 mov	 eax, 4
  0012b	d1 e0		 shl	 eax, 1
  0012d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00132	c1 e1 00	 shl	 ecx, 0
  00135	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00138	be 04 00 00 00	 mov	 esi, 4
  0013d	d1 e6		 shl	 esi, 1
  0013f	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00144	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00149	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00152	6b c2 00	 imul	 eax, edx, 0
  00155	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00158	b9 04 00 00 00	 mov	 ecx, 4
  0015d	c1 e1 00	 shl	 ecx, 0
  00160	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 537  : 	result[0][2] = ( ( a[0][0] * b[2][0] ) + ( a[0][1] * b[2][1] ) + ( a[0][2] * b[2][2] ) );

  00165	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 04 00 00 00	 mov	 edx, 4
  00175	6b c2 00	 imul	 eax, edx, 0
  00178	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017d	d1 e2		 shl	 edx, 1
  0017f	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00182	be 04 00 00 00	 mov	 esi, 4
  00187	6b f6 00	 imul	 esi, esi, 0
  0018a	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0018f	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00194	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00199	6b c8 00	 imul	 ecx, eax, 0
  0019c	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019f	ba 04 00 00 00	 mov	 edx, 4
  001a4	c1 e2 00	 shl	 edx, 0
  001a7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ac	d1 e0		 shl	 eax, 1
  001ae	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b1	be 04 00 00 00	 mov	 esi, 4
  001b6	c1 e6 00	 shl	 esi, 0
  001b9	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  001be	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  001c3	f3 0f 58 c1	 addss	 xmm0, xmm1
  001c7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001cc	6b d1 00	 imul	 edx, ecx, 0
  001cf	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  001d2	b8 04 00 00 00	 mov	 eax, 4
  001d7	d1 e0		 shl	 eax, 1
  001d9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001de	d1 e1		 shl	 ecx, 1
  001e0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001e3	be 04 00 00 00	 mov	 esi, 4
  001e8	d1 e6		 shl	 esi, 1
  001ea	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  001ef	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  001f4	f3 0f 58 c1	 addss	 xmm0, xmm1
  001f8	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001fd	6b c2 00	 imul	 eax, edx, 0
  00200	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00203	b9 04 00 00 00	 mov	 ecx, 4
  00208	d1 e1		 shl	 ecx, 1
  0020a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 538  : 
; 539  : 	result[1][0] = ( ( a[1][0] * b[0][0] ) + ( a[1][1] * b[0][1] ) + ( a[1][2] * b[0][2] ) );

  0020f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00214	c1 e0 00	 shl	 eax, 0
  00217	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0021a	b9 04 00 00 00	 mov	 ecx, 4
  0021f	6b d1 00	 imul	 edx, ecx, 0
  00222	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00227	6b c9 00	 imul	 ecx, ecx, 0
  0022a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0022d	be 04 00 00 00	 mov	 esi, 4
  00232	6b f6 00	 imul	 esi, esi, 0
  00235	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0023a	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0023f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00244	c1 e2 00	 shl	 edx, 0
  00247	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0024a	b8 04 00 00 00	 mov	 eax, 4
  0024f	c1 e0 00	 shl	 eax, 0
  00252	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00257	6b c9 00	 imul	 ecx, ecx, 0
  0025a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025d	be 04 00 00 00	 mov	 esi, 4
  00262	c1 e6 00	 shl	 esi, 0
  00265	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0026a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0026f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00273	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00278	c1 e2 00	 shl	 edx, 0
  0027b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027e	b8 04 00 00 00	 mov	 eax, 4
  00283	d1 e0		 shl	 eax, 1
  00285	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0028a	6b c9 00	 imul	 ecx, ecx, 0
  0028d	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00290	be 04 00 00 00	 mov	 esi, 4
  00295	d1 e6		 shl	 esi, 1
  00297	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0029c	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  002a1	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a5	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002aa	c1 e2 00	 shl	 edx, 0
  002ad	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  002b0	b8 04 00 00 00	 mov	 eax, 4
  002b5	6b c8 00	 imul	 ecx, eax, 0
  002b8	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 540  : 	result[1][1] = ( ( a[1][0] * b[1][0] ) + ( a[1][1] * b[1][1] ) + ( a[1][2] * b[1][2] ) );

  002bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002c2	c1 e0 00	 shl	 eax, 0
  002c5	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  002c8	b9 04 00 00 00	 mov	 ecx, 4
  002cd	6b d1 00	 imul	 edx, ecx, 0
  002d0	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002d5	c1 e1 00	 shl	 ecx, 0
  002d8	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  002db	be 04 00 00 00	 mov	 esi, 4
  002e0	6b f6 00	 imul	 esi, esi, 0
  002e3	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  002e8	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  002ed	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002f2	c1 e2 00	 shl	 edx, 0
  002f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  002f8	b8 04 00 00 00	 mov	 eax, 4
  002fd	c1 e0 00	 shl	 eax, 0
  00300	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00305	c1 e1 00	 shl	 ecx, 0
  00308	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0030b	be 04 00 00 00	 mov	 esi, 4
  00310	c1 e6 00	 shl	 esi, 0
  00313	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00318	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0031d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00321	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00326	c1 e2 00	 shl	 edx, 0
  00329	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0032c	b8 04 00 00 00	 mov	 eax, 4
  00331	d1 e0		 shl	 eax, 1
  00333	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00338	c1 e1 00	 shl	 ecx, 0
  0033b	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0033e	be 04 00 00 00	 mov	 esi, 4
  00343	d1 e6		 shl	 esi, 1
  00345	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0034a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0034f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00353	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00358	c1 e2 00	 shl	 edx, 0
  0035b	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0035e	b8 04 00 00 00	 mov	 eax, 4
  00363	c1 e0 00	 shl	 eax, 0
  00366	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 541  : 	result[1][2] = ( ( a[1][0] * b[2][0] ) + ( a[1][1] * b[2][1] ) + ( a[1][2] * b[2][2] ) );

  0036b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00370	c1 e0 00	 shl	 eax, 0
  00373	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00376	b9 04 00 00 00	 mov	 ecx, 4
  0037b	6b d1 00	 imul	 edx, ecx, 0
  0037e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00383	d1 e1		 shl	 ecx, 1
  00385	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00388	be 04 00 00 00	 mov	 esi, 4
  0038d	6b f6 00	 imul	 esi, esi, 0
  00390	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00395	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0039a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0039f	c1 e2 00	 shl	 edx, 0
  003a2	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003a5	b8 04 00 00 00	 mov	 eax, 4
  003aa	c1 e0 00	 shl	 eax, 0
  003ad	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003b2	d1 e1		 shl	 ecx, 1
  003b4	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003b7	be 04 00 00 00	 mov	 esi, 4
  003bc	c1 e6 00	 shl	 esi, 0
  003bf	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  003c4	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  003c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  003cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  003d2	c1 e2 00	 shl	 edx, 0
  003d5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003d8	b8 04 00 00 00	 mov	 eax, 4
  003dd	d1 e0		 shl	 eax, 1
  003df	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003e4	d1 e1		 shl	 ecx, 1
  003e6	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003e9	be 04 00 00 00	 mov	 esi, 4
  003ee	d1 e6		 shl	 esi, 1
  003f0	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  003f5	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  003fa	f3 0f 58 c1	 addss	 xmm0, xmm1
  003fe	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00403	c1 e2 00	 shl	 edx, 0
  00406	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00409	b8 04 00 00 00	 mov	 eax, 4
  0040e	d1 e0		 shl	 eax, 1
  00410	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 542  : 
; 543  : 	result[2][0] = ( ( a[2][0] * b[0][0] ) + ( a[2][1] * b[0][1] ) + ( a[2][2] * b[0][2] ) );

  00415	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0041a	d1 e0		 shl	 eax, 1
  0041c	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0041f	b9 04 00 00 00	 mov	 ecx, 4
  00424	6b d1 00	 imul	 edx, ecx, 0
  00427	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0042c	6b c9 00	 imul	 ecx, ecx, 0
  0042f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00432	be 04 00 00 00	 mov	 esi, 4
  00437	6b f6 00	 imul	 esi, esi, 0
  0043a	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0043f	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  00444	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00449	d1 e2		 shl	 edx, 1
  0044b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0044e	b8 04 00 00 00	 mov	 eax, 4
  00453	c1 e0 00	 shl	 eax, 0
  00456	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0045b	6b c9 00	 imul	 ecx, ecx, 0
  0045e	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00461	be 04 00 00 00	 mov	 esi, 4
  00466	c1 e6 00	 shl	 esi, 0
  00469	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0046e	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00473	f3 0f 58 c1	 addss	 xmm0, xmm1
  00477	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0047c	d1 e2		 shl	 edx, 1
  0047e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00481	b8 04 00 00 00	 mov	 eax, 4
  00486	d1 e0		 shl	 eax, 1
  00488	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0048d	6b c9 00	 imul	 ecx, ecx, 0
  00490	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00493	be 04 00 00 00	 mov	 esi, 4
  00498	d1 e6		 shl	 esi, 1
  0049a	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0049f	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  004a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  004a8	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004ad	d1 e2		 shl	 edx, 1
  004af	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  004b2	b8 04 00 00 00	 mov	 eax, 4
  004b7	6b c8 00	 imul	 ecx, eax, 0
  004ba	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 544  : 	result[2][1] = ( ( a[2][0] * b[1][0] ) + ( a[2][1] * b[1][1] ) + ( a[2][2] * b[1][2] ) );

  004bf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c4	d1 e0		 shl	 eax, 1
  004c6	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  004c9	b9 04 00 00 00	 mov	 ecx, 4
  004ce	6b d1 00	 imul	 edx, ecx, 0
  004d1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004d6	c1 e1 00	 shl	 ecx, 0
  004d9	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004dc	be 04 00 00 00	 mov	 esi, 4
  004e1	6b f6 00	 imul	 esi, esi, 0
  004e4	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  004e9	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  004ee	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004f3	d1 e2		 shl	 edx, 1
  004f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004f8	b8 04 00 00 00	 mov	 eax, 4
  004fd	c1 e0 00	 shl	 eax, 0
  00500	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00505	c1 e1 00	 shl	 ecx, 0
  00508	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0050b	be 04 00 00 00	 mov	 esi, 4
  00510	c1 e6 00	 shl	 esi, 0
  00513	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00518	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0051d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00521	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00526	d1 e2		 shl	 edx, 1
  00528	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0052b	b8 04 00 00 00	 mov	 eax, 4
  00530	d1 e0		 shl	 eax, 1
  00532	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00537	c1 e1 00	 shl	 ecx, 0
  0053a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0053d	be 04 00 00 00	 mov	 esi, 4
  00542	d1 e6		 shl	 esi, 1
  00544	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00549	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0054e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00552	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00557	d1 e2		 shl	 edx, 1
  00559	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0055c	b8 04 00 00 00	 mov	 eax, 4
  00561	c1 e0 00	 shl	 eax, 0
  00564	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 545  : 	result[2][2] = ( ( a[2][0] * b[2][0] ) + ( a[2][1] * b[2][1] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056e	d1 e0		 shl	 eax, 1
  00570	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00573	b9 04 00 00 00	 mov	 ecx, 4
  00578	6b d1 00	 imul	 edx, ecx, 0
  0057b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00580	d1 e1		 shl	 ecx, 1
  00582	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00585	be 04 00 00 00	 mov	 esi, 4
  0058a	6b f6 00	 imul	 esi, esi, 0
  0058d	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00592	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  00597	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0059c	d1 e2		 shl	 edx, 1
  0059e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005a1	b8 04 00 00 00	 mov	 eax, 4
  005a6	c1 e0 00	 shl	 eax, 0
  005a9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005ae	d1 e1		 shl	 ecx, 1
  005b0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005b3	be 04 00 00 00	 mov	 esi, 4
  005b8	c1 e6 00	 shl	 esi, 0
  005bb	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005c0	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005c5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005c9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005ce	d1 e2		 shl	 edx, 1
  005d0	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005d3	b8 04 00 00 00	 mov	 eax, 4
  005d8	d1 e0		 shl	 eax, 1
  005da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005df	d1 e1		 shl	 ecx, 1
  005e1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005e4	be 04 00 00 00	 mov	 esi, 4
  005e9	d1 e6		 shl	 esi, 1
  005eb	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005f0	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005f5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005f9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005fe	d1 e2		 shl	 edx, 1
  00600	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00603	b8 04 00 00 00	 mov	 eax, 4
  00608	d1 e0		 shl	 eax, 1
  0060a	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 546  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix3x3_transpose_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ENDP ; multiply_matrix3x3_transpose_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_transpose_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_transpose_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z PROC ; multiply_transpose_matrix3x3_matrix3x3, COMDAT

; 513  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 514  : 
; 515  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 04 00 00 00	 mov	 esi, 4
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00034	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00039	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0003e	c1 e0 00	 shl	 eax, 0
  00041	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00044	b9 04 00 00 00	 mov	 ecx, 4
  00049	6b d1 00	 imul	 edx, ecx, 0
  0004c	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00051	c1 e1 00	 shl	 ecx, 0
  00054	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00057	be 04 00 00 00	 mov	 esi, 4
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00064	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00069	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00072	d1 e2		 shl	 edx, 1
  00074	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00077	b8 04 00 00 00	 mov	 eax, 4
  0007c	6b c8 00	 imul	 ecx, eax, 0
  0007f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00084	d1 e0		 shl	 eax, 1
  00086	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00089	be 04 00 00 00	 mov	 esi, 4
  0008e	6b f6 00	 imul	 esi, esi, 0
  00091	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00096	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0009b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000a4	6b d1 00	 imul	 edx, ecx, 0
  000a7	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  000aa	b8 04 00 00 00	 mov	 eax, 4
  000af	6b c8 00	 imul	 ecx, eax, 0
  000b2	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 516  : 	result[0][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  000b7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 04 00 00 00	 mov	 edx, 4
  000c7	c1 e2 00	 shl	 edx, 0
  000ca	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000cf	6b c0 00	 imul	 eax, eax, 0
  000d2	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  000d5	be 04 00 00 00	 mov	 esi, 4
  000da	c1 e6 00	 shl	 esi, 0
  000dd	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  000e2	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  000e7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  000ec	c1 e1 00	 shl	 ecx, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 04 00 00 00	 mov	 edx, 4
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 04 00 00 00	 mov	 esi, 4
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00112	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00117	f3 0f 58 c1	 addss	 xmm0, xmm1
  0011b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00120	d1 e1		 shl	 ecx, 1
  00122	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00125	ba 04 00 00 00	 mov	 edx, 4
  0012a	c1 e2 00	 shl	 edx, 0
  0012d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00132	d1 e0		 shl	 eax, 1
  00134	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00137	be 04 00 00 00	 mov	 esi, 4
  0013c	c1 e6 00	 shl	 esi, 0
  0013f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00144	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00149	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00152	6b d1 00	 imul	 edx, ecx, 0
  00155	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00158	b8 04 00 00 00	 mov	 eax, 4
  0015d	c1 e0 00	 shl	 eax, 0
  00160	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 517  : 	result[0][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00165	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 04 00 00 00	 mov	 edx, 4
  00175	d1 e2		 shl	 edx, 1
  00177	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0017c	6b c0 00	 imul	 eax, eax, 0
  0017f	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00182	be 04 00 00 00	 mov	 esi, 4
  00187	d1 e6		 shl	 esi, 1
  00189	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  0018e	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  00193	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00198	c1 e1 00	 shl	 ecx, 0
  0019b	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019e	ba 04 00 00 00	 mov	 edx, 4
  001a3	d1 e2		 shl	 edx, 1
  001a5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001aa	c1 e0 00	 shl	 eax, 0
  001ad	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b0	be 04 00 00 00	 mov	 esi, 4
  001b5	d1 e6		 shl	 esi, 1
  001b7	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  001bc	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  001c1	f3 0f 58 c1	 addss	 xmm0, xmm1
  001c5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001ca	d1 e1		 shl	 ecx, 1
  001cc	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  001cf	ba 04 00 00 00	 mov	 edx, 4
  001d4	d1 e2		 shl	 edx, 1
  001d6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001db	d1 e0		 shl	 eax, 1
  001dd	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001e0	be 04 00 00 00	 mov	 esi, 4
  001e5	d1 e6		 shl	 esi, 1
  001e7	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  001ec	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  001f1	f3 0f 58 c1	 addss	 xmm0, xmm1
  001f5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001fa	6b d1 00	 imul	 edx, ecx, 0
  001fd	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00200	b8 04 00 00 00	 mov	 eax, 4
  00205	d1 e0		 shl	 eax, 1
  00207	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 518  : 
; 519  : 	result[1][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  0020c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00211	6b c8 00	 imul	 ecx, eax, 0
  00214	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00217	ba 04 00 00 00	 mov	 edx, 4
  0021c	6b c2 00	 imul	 eax, edx, 0
  0021f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00224	6b d2 00	 imul	 edx, edx, 0
  00227	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  0022a	be 04 00 00 00	 mov	 esi, 4
  0022f	6b f6 00	 imul	 esi, esi, 0
  00232	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00237	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  0023c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00241	c1 e0 00	 shl	 eax, 0
  00244	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00247	b9 04 00 00 00	 mov	 ecx, 4
  0024c	6b d1 00	 imul	 edx, ecx, 0
  0024f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00254	c1 e1 00	 shl	 ecx, 0
  00257	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025a	be 04 00 00 00	 mov	 esi, 4
  0025f	6b f6 00	 imul	 esi, esi, 0
  00262	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  00267	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0026c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00270	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00275	d1 e2		 shl	 edx, 1
  00277	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027a	b8 04 00 00 00	 mov	 eax, 4
  0027f	6b c8 00	 imul	 ecx, eax, 0
  00282	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00287	d1 e0		 shl	 eax, 1
  00289	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0028c	be 04 00 00 00	 mov	 esi, 4
  00291	6b f6 00	 imul	 esi, esi, 0
  00294	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  00299	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0029e	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a2	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002a7	c1 e1 00	 shl	 ecx, 0
  002aa	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  002ad	ba 04 00 00 00	 mov	 edx, 4
  002b2	6b c2 00	 imul	 eax, edx, 0
  002b5	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 520  : 	result[1][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  002ba	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002bf	6b c8 00	 imul	 ecx, eax, 0
  002c2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002c5	ba 04 00 00 00	 mov	 edx, 4
  002ca	c1 e2 00	 shl	 edx, 0
  002cd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002d2	6b c0 00	 imul	 eax, eax, 0
  002d5	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  002d8	be 04 00 00 00	 mov	 esi, 4
  002dd	c1 e6 00	 shl	 esi, 0
  002e0	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  002e5	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  002ea	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002ef	c1 e1 00	 shl	 ecx, 0
  002f2	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  002f5	ba 04 00 00 00	 mov	 edx, 4
  002fa	c1 e2 00	 shl	 edx, 0
  002fd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00302	c1 e0 00	 shl	 eax, 0
  00305	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00308	be 04 00 00 00	 mov	 esi, 4
  0030d	c1 e6 00	 shl	 esi, 0
  00310	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00315	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0031a	f3 0f 58 c1	 addss	 xmm0, xmm1
  0031e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00323	d1 e1		 shl	 ecx, 1
  00325	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00328	ba 04 00 00 00	 mov	 edx, 4
  0032d	c1 e2 00	 shl	 edx, 0
  00330	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00335	d1 e0		 shl	 eax, 1
  00337	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0033a	be 04 00 00 00	 mov	 esi, 4
  0033f	c1 e6 00	 shl	 esi, 0
  00342	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00347	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0034c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00350	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00355	c1 e1 00	 shl	 ecx, 0
  00358	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0035b	ba 04 00 00 00	 mov	 edx, 4
  00360	c1 e2 00	 shl	 edx, 0
  00363	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 521  : 	result[1][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00368	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0036d	6b c8 00	 imul	 ecx, eax, 0
  00370	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00373	ba 04 00 00 00	 mov	 edx, 4
  00378	d1 e2		 shl	 edx, 1
  0037a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0037f	6b c0 00	 imul	 eax, eax, 0
  00382	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00385	be 04 00 00 00	 mov	 esi, 4
  0038a	d1 e6		 shl	 esi, 1
  0038c	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00391	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  00396	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0039b	c1 e1 00	 shl	 ecx, 0
  0039e	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  003a1	ba 04 00 00 00	 mov	 edx, 4
  003a6	d1 e2		 shl	 edx, 1
  003a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003ad	c1 e0 00	 shl	 eax, 0
  003b0	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  003b3	be 04 00 00 00	 mov	 esi, 4
  003b8	d1 e6		 shl	 esi, 1
  003ba	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  003bf	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  003c4	f3 0f 58 c1	 addss	 xmm0, xmm1
  003c8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003cd	d1 e1		 shl	 ecx, 1
  003cf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  003d2	ba 04 00 00 00	 mov	 edx, 4
  003d7	d1 e2		 shl	 edx, 1
  003d9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  003de	d1 e0		 shl	 eax, 1
  003e0	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  003e3	be 04 00 00 00	 mov	 esi, 4
  003e8	d1 e6		 shl	 esi, 1
  003ea	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  003ef	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  003f4	f3 0f 58 c1	 addss	 xmm0, xmm1
  003f8	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003fd	c1 e1 00	 shl	 ecx, 0
  00400	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00403	ba 04 00 00 00	 mov	 edx, 4
  00408	d1 e2		 shl	 edx, 1
  0040a	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 522  : 
; 523  : 	result[2][0] = ( ( a[0][0] * b[0][0] ) + ( a[1][0] * b[1][0] ) + ( a[2][0] * b[2][0] ) );

  0040f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00414	6b c8 00	 imul	 ecx, eax, 0
  00417	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0041a	ba 04 00 00 00	 mov	 edx, 4
  0041f	6b c2 00	 imul	 eax, edx, 0
  00422	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00427	6b d2 00	 imul	 edx, edx, 0
  0042a	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  0042d	be 04 00 00 00	 mov	 esi, 4
  00432	6b f6 00	 imul	 esi, esi, 0
  00435	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0043a	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  0043f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00444	c1 e0 00	 shl	 eax, 0
  00447	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0044a	b9 04 00 00 00	 mov	 ecx, 4
  0044f	6b d1 00	 imul	 edx, ecx, 0
  00452	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00457	c1 e1 00	 shl	 ecx, 0
  0045a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0045d	be 04 00 00 00	 mov	 esi, 4
  00462	6b f6 00	 imul	 esi, esi, 0
  00465	f3 0f 10 0c 10	 movss	 xmm1, DWORD PTR [eax+edx]
  0046a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0046f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00473	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00478	d1 e2		 shl	 edx, 1
  0047a	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0047d	b8 04 00 00 00	 mov	 eax, 4
  00482	6b c8 00	 imul	 ecx, eax, 0
  00485	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0048a	d1 e0		 shl	 eax, 1
  0048c	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0048f	be 04 00 00 00	 mov	 esi, 4
  00494	6b f6 00	 imul	 esi, esi, 0
  00497	f3 0f 10 0c 0a	 movss	 xmm1, DWORD PTR [edx+ecx]
  0049c	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  004a1	f3 0f 58 c1	 addss	 xmm0, xmm1
  004a5	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004aa	d1 e1		 shl	 ecx, 1
  004ac	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  004af	ba 04 00 00 00	 mov	 edx, 4
  004b4	6b c2 00	 imul	 eax, edx, 0
  004b7	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 524  : 	result[2][1] = ( ( a[0][1] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[2][1] * b[2][1] ) );

  004bc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c1	6b c8 00	 imul	 ecx, eax, 0
  004c4	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  004c7	ba 04 00 00 00	 mov	 edx, 4
  004cc	c1 e2 00	 shl	 edx, 0
  004cf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004d4	6b c0 00	 imul	 eax, eax, 0
  004d7	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  004da	be 04 00 00 00	 mov	 esi, 4
  004df	c1 e6 00	 shl	 esi, 0
  004e2	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  004e7	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  004ec	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004f1	c1 e1 00	 shl	 ecx, 0
  004f4	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  004f7	ba 04 00 00 00	 mov	 edx, 4
  004fc	c1 e2 00	 shl	 edx, 0
  004ff	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00504	c1 e0 00	 shl	 eax, 0
  00507	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0050a	be 04 00 00 00	 mov	 esi, 4
  0050f	c1 e6 00	 shl	 esi, 0
  00512	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00517	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0051c	f3 0f 58 c1	 addss	 xmm0, xmm1
  00520	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00525	d1 e1		 shl	 ecx, 1
  00527	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0052a	ba 04 00 00 00	 mov	 edx, 4
  0052f	c1 e2 00	 shl	 edx, 0
  00532	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00537	d1 e0		 shl	 eax, 1
  00539	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  0053c	be 04 00 00 00	 mov	 esi, 4
  00541	c1 e6 00	 shl	 esi, 0
  00544	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00549	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  0054e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00552	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00557	d1 e1		 shl	 ecx, 1
  00559	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  0055c	ba 04 00 00 00	 mov	 edx, 4
  00561	c1 e2 00	 shl	 edx, 0
  00564	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 525  : 	result[2][2] = ( ( a[0][2] * b[0][2] ) + ( a[1][2] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056e	6b c8 00	 imul	 ecx, eax, 0
  00571	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00574	ba 04 00 00 00	 mov	 edx, 4
  00579	d1 e2		 shl	 edx, 1
  0057b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00580	6b c0 00	 imul	 eax, eax, 0
  00583	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00586	be 04 00 00 00	 mov	 esi, 4
  0058b	d1 e6		 shl	 esi, 1
  0058d	f3 0f 10 04 11	 movss	 xmm0, DWORD PTR [ecx+edx]
  00592	f3 0f 59 04 30	 mulss	 xmm0, DWORD PTR [eax+esi]
  00597	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0059c	c1 e1 00	 shl	 ecx, 0
  0059f	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  005a2	ba 04 00 00 00	 mov	 edx, 4
  005a7	d1 e2		 shl	 edx, 1
  005a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005ae	c1 e0 00	 shl	 eax, 0
  005b1	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  005b4	be 04 00 00 00	 mov	 esi, 4
  005b9	d1 e6		 shl	 esi, 1
  005bb	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  005c0	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  005c5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005c9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005ce	d1 e1		 shl	 ecx, 1
  005d0	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  005d3	ba 04 00 00 00	 mov	 edx, 4
  005d8	d1 e2		 shl	 edx, 1
  005da	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  005df	d1 e0		 shl	 eax, 1
  005e1	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  005e4	be 04 00 00 00	 mov	 esi, 4
  005e9	d1 e6		 shl	 esi, 1
  005eb	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  005f0	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  005f5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005f9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005fe	d1 e1		 shl	 ecx, 1
  00600	03 4d 08	 add	 ecx, DWORD PTR _result$[ebp]
  00603	ba 04 00 00 00	 mov	 edx, 4
  00608	d1 e2		 shl	 edx, 1
  0060a	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 526  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_transpose_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ENDP ; multiply_transpose_matrix3x3_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z
_TEXT	SEGMENT
_result$ = 8						; size = 4
_a$ = 12						; size = 4
_b$ = 16						; size = 4
?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z PROC ; multiply_matrix3x3_matrix3x3, COMDAT

; 493  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 494  : 
; 495  : 	result[0][0] = ( ( a[0][0] * b[0][0] ) + ( a[0][1] * b[1][0] ) + ( a[0][2] * b[2][0] ) );

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00021	6b d2 00	 imul	 edx, edx, 0
  00024	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00027	be 04 00 00 00	 mov	 esi, 4
  0002c	6b f6 00	 imul	 esi, esi, 0
  0002f	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  00034	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00039	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0003e	6b c8 00	 imul	 ecx, eax, 0
  00041	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00044	ba 04 00 00 00	 mov	 edx, 4
  00049	c1 e2 00	 shl	 edx, 0
  0004c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00051	c1 e0 00	 shl	 eax, 0
  00054	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00057	be 04 00 00 00	 mov	 esi, 4
  0005c	6b f6 00	 imul	 esi, esi, 0
  0005f	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00064	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00069	f3 0f 58 c1	 addss	 xmm0, xmm1
  0006d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00072	6b d1 00	 imul	 edx, ecx, 0
  00075	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00078	b8 04 00 00 00	 mov	 eax, 4
  0007d	d1 e0		 shl	 eax, 1
  0007f	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00084	d1 e1		 shl	 ecx, 1
  00086	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00089	be 04 00 00 00	 mov	 esi, 4
  0008e	6b f6 00	 imul	 esi, esi, 0
  00091	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00096	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0009b	f3 0f 58 c1	 addss	 xmm0, xmm1
  0009f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000a4	6b c2 00	 imul	 eax, edx, 0
  000a7	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  000aa	b9 04 00 00 00	 mov	 ecx, 4
  000af	6b d1 00	 imul	 edx, ecx, 0
  000b2	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 496  : 	result[0][1] = ( ( a[0][0] * b[0][1] ) + ( a[0][1] * b[1][1] ) + ( a[0][2] * b[2][1] ) );

  000b7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000bc	6b c8 00	 imul	 ecx, eax, 0
  000bf	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000c2	ba 04 00 00 00	 mov	 edx, 4
  000c7	6b c2 00	 imul	 eax, edx, 0
  000ca	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  000cf	6b d2 00	 imul	 edx, edx, 0
  000d2	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  000d5	be 04 00 00 00	 mov	 esi, 4
  000da	c1 e6 00	 shl	 esi, 0
  000dd	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  000e2	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  000e7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ec	6b c8 00	 imul	 ecx, eax, 0
  000ef	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  000f2	ba 04 00 00 00	 mov	 edx, 4
  000f7	c1 e2 00	 shl	 edx, 0
  000fa	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ff	c1 e0 00	 shl	 eax, 0
  00102	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  00105	be 04 00 00 00	 mov	 esi, 4
  0010a	c1 e6 00	 shl	 esi, 0
  0010d	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  00112	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  00117	f3 0f 58 c1	 addss	 xmm0, xmm1
  0011b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00120	6b d1 00	 imul	 edx, ecx, 0
  00123	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00126	b8 04 00 00 00	 mov	 eax, 4
  0012b	d1 e0		 shl	 eax, 1
  0012d	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00132	d1 e1		 shl	 ecx, 1
  00134	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00137	be 04 00 00 00	 mov	 esi, 4
  0013c	c1 e6 00	 shl	 esi, 0
  0013f	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00144	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00149	f3 0f 58 c1	 addss	 xmm0, xmm1
  0014d	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00152	6b c2 00	 imul	 eax, edx, 0
  00155	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00158	b9 04 00 00 00	 mov	 ecx, 4
  0015d	c1 e1 00	 shl	 ecx, 0
  00160	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 497  : 	result[0][2] = ( ( a[0][0] * b[0][2] ) + ( a[0][1] * b[1][2] ) + ( a[0][2] * b[2][2] ) );

  00165	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0016a	6b c8 00	 imul	 ecx, eax, 0
  0016d	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  00170	ba 04 00 00 00	 mov	 edx, 4
  00175	6b c2 00	 imul	 eax, edx, 0
  00178	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0017d	6b d2 00	 imul	 edx, edx, 0
  00180	03 55 10	 add	 edx, DWORD PTR _b$[ebp]
  00183	be 04 00 00 00	 mov	 esi, 4
  00188	d1 e6		 shl	 esi, 1
  0018a	f3 0f 10 04 01	 movss	 xmm0, DWORD PTR [ecx+eax]
  0018f	f3 0f 59 04 32	 mulss	 xmm0, DWORD PTR [edx+esi]
  00194	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00199	6b c8 00	 imul	 ecx, eax, 0
  0019c	03 4d 0c	 add	 ecx, DWORD PTR _a$[ebp]
  0019f	ba 04 00 00 00	 mov	 edx, 4
  001a4	c1 e2 00	 shl	 edx, 0
  001a7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ac	c1 e0 00	 shl	 eax, 0
  001af	03 45 10	 add	 eax, DWORD PTR _b$[ebp]
  001b2	be 04 00 00 00	 mov	 esi, 4
  001b7	d1 e6		 shl	 esi, 1
  001b9	f3 0f 10 0c 11	 movss	 xmm1, DWORD PTR [ecx+edx]
  001be	f3 0f 59 0c 30	 mulss	 xmm1, DWORD PTR [eax+esi]
  001c3	f3 0f 58 c1	 addss	 xmm0, xmm1
  001c7	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001cc	6b d1 00	 imul	 edx, ecx, 0
  001cf	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  001d2	b8 04 00 00 00	 mov	 eax, 4
  001d7	d1 e0		 shl	 eax, 1
  001d9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  001de	d1 e1		 shl	 ecx, 1
  001e0	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  001e3	be 04 00 00 00	 mov	 esi, 4
  001e8	d1 e6		 shl	 esi, 1
  001ea	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  001ef	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  001f4	f3 0f 58 c1	 addss	 xmm0, xmm1
  001f8	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  001fd	6b c2 00	 imul	 eax, edx, 0
  00200	03 45 08	 add	 eax, DWORD PTR _result$[ebp]
  00203	b9 04 00 00 00	 mov	 ecx, 4
  00208	d1 e1		 shl	 ecx, 1
  0020a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 498  : 
; 499  : 	result[1][0] = ( ( a[1][0] * b[0][0] ) + ( a[1][1] * b[1][0] ) + ( a[1][2] * b[2][0] ) );

  0020f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00214	c1 e0 00	 shl	 eax, 0
  00217	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0021a	b9 04 00 00 00	 mov	 ecx, 4
  0021f	6b d1 00	 imul	 edx, ecx, 0
  00222	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00227	6b c9 00	 imul	 ecx, ecx, 0
  0022a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0022d	be 04 00 00 00	 mov	 esi, 4
  00232	6b f6 00	 imul	 esi, esi, 0
  00235	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0023a	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0023f	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00244	c1 e2 00	 shl	 edx, 0
  00247	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0024a	b8 04 00 00 00	 mov	 eax, 4
  0024f	c1 e0 00	 shl	 eax, 0
  00252	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00257	c1 e1 00	 shl	 ecx, 0
  0025a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0025d	be 04 00 00 00	 mov	 esi, 4
  00262	6b f6 00	 imul	 esi, esi, 0
  00265	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0026a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0026f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00273	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00278	c1 e2 00	 shl	 edx, 0
  0027b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0027e	b8 04 00 00 00	 mov	 eax, 4
  00283	d1 e0		 shl	 eax, 1
  00285	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0028a	d1 e1		 shl	 ecx, 1
  0028c	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0028f	be 04 00 00 00	 mov	 esi, 4
  00294	6b f6 00	 imul	 esi, esi, 0
  00297	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0029c	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  002a1	f3 0f 58 c1	 addss	 xmm0, xmm1
  002a5	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002aa	c1 e2 00	 shl	 edx, 0
  002ad	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  002b0	b8 04 00 00 00	 mov	 eax, 4
  002b5	6b c8 00	 imul	 ecx, eax, 0
  002b8	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 500  : 	result[1][1] = ( ( a[1][0] * b[0][1] ) + ( a[1][1] * b[1][1] ) + ( a[1][2] * b[2][1] ) );

  002bd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002c2	c1 e0 00	 shl	 eax, 0
  002c5	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  002c8	b9 04 00 00 00	 mov	 ecx, 4
  002cd	6b d1 00	 imul	 edx, ecx, 0
  002d0	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  002d5	6b c9 00	 imul	 ecx, ecx, 0
  002d8	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  002db	be 04 00 00 00	 mov	 esi, 4
  002e0	c1 e6 00	 shl	 esi, 0
  002e3	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  002e8	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  002ed	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  002f2	c1 e2 00	 shl	 edx, 0
  002f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  002f8	b8 04 00 00 00	 mov	 eax, 4
  002fd	c1 e0 00	 shl	 eax, 0
  00300	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00305	c1 e1 00	 shl	 ecx, 0
  00308	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0030b	be 04 00 00 00	 mov	 esi, 4
  00310	c1 e6 00	 shl	 esi, 0
  00313	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00318	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0031d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00321	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00326	c1 e2 00	 shl	 edx, 0
  00329	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0032c	b8 04 00 00 00	 mov	 eax, 4
  00331	d1 e0		 shl	 eax, 1
  00333	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00338	d1 e1		 shl	 ecx, 1
  0033a	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0033d	be 04 00 00 00	 mov	 esi, 4
  00342	c1 e6 00	 shl	 esi, 0
  00345	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0034a	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0034f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00353	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00358	c1 e2 00	 shl	 edx, 0
  0035b	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0035e	b8 04 00 00 00	 mov	 eax, 4
  00363	c1 e0 00	 shl	 eax, 0
  00366	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 501  : 	result[1][2] = ( ( a[1][0] * b[0][2] ) + ( a[1][1] * b[1][2] ) + ( a[1][2] * b[2][2] ) );

  0036b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00370	c1 e0 00	 shl	 eax, 0
  00373	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00376	b9 04 00 00 00	 mov	 ecx, 4
  0037b	6b d1 00	 imul	 edx, ecx, 0
  0037e	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00383	6b c9 00	 imul	 ecx, ecx, 0
  00386	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00389	be 04 00 00 00	 mov	 esi, 4
  0038e	d1 e6		 shl	 esi, 1
  00390	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00395	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  0039a	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0039f	c1 e2 00	 shl	 edx, 0
  003a2	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003a5	b8 04 00 00 00	 mov	 eax, 4
  003aa	c1 e0 00	 shl	 eax, 0
  003ad	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003b2	c1 e1 00	 shl	 ecx, 0
  003b5	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003b8	be 04 00 00 00	 mov	 esi, 4
  003bd	d1 e6		 shl	 esi, 1
  003bf	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  003c4	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  003c9	f3 0f 58 c1	 addss	 xmm0, xmm1
  003cd	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  003d2	c1 e2 00	 shl	 edx, 0
  003d5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  003d8	b8 04 00 00 00	 mov	 eax, 4
  003dd	d1 e0		 shl	 eax, 1
  003df	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  003e4	d1 e1		 shl	 ecx, 1
  003e6	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  003e9	be 04 00 00 00	 mov	 esi, 4
  003ee	d1 e6		 shl	 esi, 1
  003f0	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  003f5	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  003fa	f3 0f 58 c1	 addss	 xmm0, xmm1
  003fe	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00403	c1 e2 00	 shl	 edx, 0
  00406	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00409	b8 04 00 00 00	 mov	 eax, 4
  0040e	d1 e0		 shl	 eax, 1
  00410	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 502  : 
; 503  : 	result[2][0] = ( ( a[2][0] * b[0][0] ) + ( a[2][1] * b[1][0] ) + ( a[2][2] * b[2][0] ) );

  00415	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0041a	d1 e0		 shl	 eax, 1
  0041c	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  0041f	b9 04 00 00 00	 mov	 ecx, 4
  00424	6b d1 00	 imul	 edx, ecx, 0
  00427	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0042c	6b c9 00	 imul	 ecx, ecx, 0
  0042f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00432	be 04 00 00 00	 mov	 esi, 4
  00437	6b f6 00	 imul	 esi, esi, 0
  0043a	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  0043f	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  00444	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00449	d1 e2		 shl	 edx, 1
  0044b	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0044e	b8 04 00 00 00	 mov	 eax, 4
  00453	c1 e0 00	 shl	 eax, 0
  00456	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0045b	c1 e1 00	 shl	 ecx, 0
  0045e	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00461	be 04 00 00 00	 mov	 esi, 4
  00466	6b f6 00	 imul	 esi, esi, 0
  00469	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0046e	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  00473	f3 0f 58 c1	 addss	 xmm0, xmm1
  00477	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0047c	d1 e2		 shl	 edx, 1
  0047e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  00481	b8 04 00 00 00	 mov	 eax, 4
  00486	d1 e0		 shl	 eax, 1
  00488	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  0048d	d1 e1		 shl	 ecx, 1
  0048f	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00492	be 04 00 00 00	 mov	 esi, 4
  00497	6b f6 00	 imul	 esi, esi, 0
  0049a	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  0049f	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  004a4	f3 0f 58 c1	 addss	 xmm0, xmm1
  004a8	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004ad	d1 e2		 shl	 edx, 1
  004af	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  004b2	b8 04 00 00 00	 mov	 eax, 4
  004b7	6b c8 00	 imul	 ecx, eax, 0
  004ba	f3 0f 11 04 0a	 movss	 DWORD PTR [edx+ecx], xmm0

; 504  : 	result[2][1] = ( ( a[2][0] * b[0][1] ) + ( a[2][1] * b[1][1] ) + ( a[2][2] * b[2][1] ) );

  004bf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  004c4	d1 e0		 shl	 eax, 1
  004c6	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  004c9	b9 04 00 00 00	 mov	 ecx, 4
  004ce	6b d1 00	 imul	 edx, ecx, 0
  004d1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  004d6	6b c9 00	 imul	 ecx, ecx, 0
  004d9	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  004dc	be 04 00 00 00	 mov	 esi, 4
  004e1	c1 e6 00	 shl	 esi, 0
  004e4	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  004e9	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  004ee	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  004f3	d1 e2		 shl	 edx, 1
  004f5	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  004f8	b8 04 00 00 00	 mov	 eax, 4
  004fd	c1 e0 00	 shl	 eax, 0
  00500	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00505	c1 e1 00	 shl	 ecx, 0
  00508	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0050b	be 04 00 00 00	 mov	 esi, 4
  00510	c1 e6 00	 shl	 esi, 0
  00513	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00518	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0051d	f3 0f 58 c1	 addss	 xmm0, xmm1
  00521	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00526	d1 e2		 shl	 edx, 1
  00528	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  0052b	b8 04 00 00 00	 mov	 eax, 4
  00530	d1 e0		 shl	 eax, 1
  00532	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00537	d1 e1		 shl	 ecx, 1
  00539	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  0053c	be 04 00 00 00	 mov	 esi, 4
  00541	c1 e6 00	 shl	 esi, 0
  00544	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  00549	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  0054e	f3 0f 58 c1	 addss	 xmm0, xmm1
  00552	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  00557	d1 e2		 shl	 edx, 1
  00559	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  0055c	b8 04 00 00 00	 mov	 eax, 4
  00561	c1 e0 00	 shl	 eax, 0
  00564	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 505  : 	result[2][2] = ( ( a[2][0] * b[0][2] ) + ( a[2][1] * b[1][2] ) + ( a[2][2] * b[2][2] ) );

  00569	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0056e	d1 e0		 shl	 eax, 1
  00570	03 45 0c	 add	 eax, DWORD PTR _a$[ebp]
  00573	b9 04 00 00 00	 mov	 ecx, 4
  00578	6b d1 00	 imul	 edx, ecx, 0
  0057b	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00580	6b c9 00	 imul	 ecx, ecx, 0
  00583	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  00586	be 04 00 00 00	 mov	 esi, 4
  0058b	d1 e6		 shl	 esi, 1
  0058d	f3 0f 10 04 10	 movss	 xmm0, DWORD PTR [eax+edx]
  00592	f3 0f 59 04 31	 mulss	 xmm0, DWORD PTR [ecx+esi]
  00597	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  0059c	d1 e2		 shl	 edx, 1
  0059e	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005a1	b8 04 00 00 00	 mov	 eax, 4
  005a6	c1 e0 00	 shl	 eax, 0
  005a9	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005ae	c1 e1 00	 shl	 ecx, 0
  005b1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005b4	be 04 00 00 00	 mov	 esi, 4
  005b9	d1 e6		 shl	 esi, 1
  005bb	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005c0	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005c5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005c9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005ce	d1 e2		 shl	 edx, 1
  005d0	03 55 0c	 add	 edx, DWORD PTR _a$[ebp]
  005d3	b8 04 00 00 00	 mov	 eax, 4
  005d8	d1 e0		 shl	 eax, 1
  005da	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  005df	d1 e1		 shl	 ecx, 1
  005e1	03 4d 10	 add	 ecx, DWORD PTR _b$[ebp]
  005e4	be 04 00 00 00	 mov	 esi, 4
  005e9	d1 e6		 shl	 esi, 1
  005eb	f3 0f 10 0c 02	 movss	 xmm1, DWORD PTR [edx+eax]
  005f0	f3 0f 59 0c 31	 mulss	 xmm1, DWORD PTR [ecx+esi]
  005f5	f3 0f 58 c1	 addss	 xmm0, xmm1
  005f9	ba 0c 00 00 00	 mov	 edx, 12			; 0000000cH
  005fe	d1 e2		 shl	 edx, 1
  00600	03 55 08	 add	 edx, DWORD PTR _result$[ebp]
  00603	b8 04 00 00 00	 mov	 eax, 4
  00608	d1 e0		 shl	 eax, 1
  0060a	f3 0f 11 04 02	 movss	 DWORD PTR [edx+eax], xmm0

; 506  : }

  0060f	5f		 pop	 edi
  00610	5e		 pop	 esi
  00611	5b		 pop	 ebx
  00612	8b e5		 mov	 esp, ebp
  00614	5d		 pop	 ebp
  00615	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix3x3_matrix3x3@@YGXQAY02MQAY02$$CBM1@Z ENDP ; multiply_matrix3x3_matrix3x3
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z
_TEXT	SEGMENT
_temp$ = -12						; size = 12
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z PROC ; multiply_transpose_matrix3x3_vec3d, COMDAT

; 464  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 465  : 
; 466  : 	vec3d
; 467  : 		temp;
; 468  : 
; 469  : 	temp.x = v->x * m[0][0];

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0001f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00023	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00028	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 470  : 	temp.x += v->y * m[0][1];

  0002d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00032	6b c8 00	 imul	 ecx, eax, 0
  00035	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00038	ba 04 00 00 00	 mov	 edx, 4
  0003d	c1 e2 00	 shl	 edx, 0
  00040	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00043	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00048	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  0004d	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp]
  00052	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 471  : 	temp.x += v->z * m[0][2];

  00057	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0005c	6b c8 00	 imul	 ecx, eax, 0
  0005f	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00062	ba 04 00 00 00	 mov	 edx, 4
  00067	d1 e2		 shl	 edx, 1
  00069	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0006c	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00071	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  00076	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp]
  0007b	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 472  : 
; 473  : 	temp.y = v->x * m[1][0];

  00080	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00085	c1 e0 00	 shl	 eax, 0
  00088	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0008b	b9 04 00 00 00	 mov	 ecx, 4
  00090	6b d1 00	 imul	 edx, ecx, 0
  00093	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00096	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0009a	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0009f	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 474  : 	temp.y += v->y * m[1][1];

  000a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a9	c1 e0 00	 shl	 eax, 0
  000ac	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000af	b9 04 00 00 00	 mov	 ecx, 4
  000b4	c1 e1 00	 shl	 ecx, 0
  000b7	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000ba	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000bf	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  000c4	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 475  : 	temp.y += v->z * m[1][2];

  000ce	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000d3	c1 e0 00	 shl	 eax, 0
  000d6	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000d9	b9 04 00 00 00	 mov	 ecx, 4
  000de	d1 e1		 shl	 ecx, 1
  000e0	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000e3	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  000e8	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  000ed	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  000f2	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 476  : 
; 477  : 	temp.z = v->x * m[2][0];

  000f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fc	d1 e0		 shl	 eax, 1
  000fe	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00101	b9 04 00 00 00	 mov	 ecx, 4
  00106	6b d1 00	 imul	 edx, ecx, 0
  00109	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  0010c	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  00110	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00115	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 478  : 	temp.z += v->y * m[2][1];

  0011a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011f	d1 e0		 shl	 eax, 1
  00121	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00124	b9 04 00 00 00	 mov	 ecx, 4
  00129	c1 e1 00	 shl	 ecx, 0
  0012c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0012f	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00134	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00139	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  0013e	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 479  : 	temp.z += v->z * m[2][2];

  00143	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00148	d1 e0		 shl	 eax, 1
  0014a	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0014d	b9 04 00 00 00	 mov	 ecx, 4
  00152	d1 e1		 shl	 ecx, 1
  00154	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00157	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0015c	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00161	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  00166	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 480  : 
; 481  : 	result->x = temp.x;

  0016b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0016e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _temp$[ebp]
  00173	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 482  : 	result->y = temp.y;

  00177	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0017a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _temp$[ebp+4]
  0017f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 483  : 	result->z = temp.z;

  00184	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00187	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _temp$[ebp+8]
  0018c	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 484  : }

  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	5b		 pop	 ebx
  00194	8b e5		 mov	 esp, ebp
  00196	5d		 pop	 ebp
  00197	c2 0c 00	 ret	 12			; 0000000cH
?multiply_transpose_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ENDP ; multiply_transpose_matrix3x3_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z
_TEXT	SEGMENT
_temp$ = -12						; size = 12
_result$ = 8						; size = 4
_m$ = 12						; size = 4
_v$ = 16						; size = 4
?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z PROC ; multiply_matrix3x3_vec3d, COMDAT

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 438  : 
; 439  : 	vec3d
; 440  : 		temp;
; 441  : 
; 442  : 	temp.x = v->x * m[0][0];

  00009	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00014	ba 04 00 00 00	 mov	 edx, 4
  00019	6b c2 00	 imul	 eax, edx, 0
  0001c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0001f	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00023	f3 0f 59 04 01	 mulss	 xmm0, DWORD PTR [ecx+eax]
  00028	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 443  : 	temp.x += v->y * m[1][0];

  0002d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00032	c1 e0 00	 shl	 eax, 0
  00035	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00038	b9 04 00 00 00	 mov	 ecx, 4
  0003d	6b d1 00	 imul	 edx, ecx, 0
  00040	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  00043	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  00048	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  0004d	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp]
  00052	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 444  : 	temp.x += v->z * m[2][0];

  00057	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0005c	d1 e0		 shl	 eax, 1
  0005e	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00061	b9 04 00 00 00	 mov	 ecx, 4
  00066	6b d1 00	 imul	 edx, ecx, 0
  00069	8b 4d 10	 mov	 ecx, DWORD PTR _v$[ebp]
  0006c	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00071	f3 0f 59 04 10	 mulss	 xmm0, DWORD PTR [eax+edx]
  00076	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _temp$[ebp]
  0007b	f3 0f 11 45 f4	 movss	 DWORD PTR _temp$[ebp], xmm0

; 445  : 
; 446  : 	temp.y = v->x * m[0][1];

  00080	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00085	6b c8 00	 imul	 ecx, eax, 0
  00088	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  0008b	ba 04 00 00 00	 mov	 edx, 4
  00090	c1 e2 00	 shl	 edx, 0
  00093	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  00096	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0009a	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  0009f	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 447  : 	temp.y += v->y * m[1][1];

  000a4	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a9	c1 e0 00	 shl	 eax, 0
  000ac	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000af	b9 04 00 00 00	 mov	 ecx, 4
  000b4	c1 e1 00	 shl	 ecx, 0
  000b7	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000ba	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  000bf	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  000c4	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  000c9	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 448  : 	temp.y += v->z * m[2][1];

  000ce	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000d3	d1 e0		 shl	 eax, 1
  000d5	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  000d8	b9 04 00 00 00	 mov	 ecx, 4
  000dd	c1 e1 00	 shl	 ecx, 0
  000e0	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  000e3	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  000e8	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  000ed	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _temp$[ebp+4]
  000f2	f3 0f 11 45 f8	 movss	 DWORD PTR _temp$[ebp+4], xmm0

; 449  : 
; 450  : 	temp.z = v->x * m[0][2];

  000f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000fc	6b c8 00	 imul	 ecx, eax, 0
  000ff	03 4d 0c	 add	 ecx, DWORD PTR _m$[ebp]
  00102	ba 04 00 00 00	 mov	 edx, 4
  00107	d1 e2		 shl	 edx, 1
  00109	8b 45 10	 mov	 eax, DWORD PTR _v$[ebp]
  0010c	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00110	f3 0f 59 04 11	 mulss	 xmm0, DWORD PTR [ecx+edx]
  00115	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 451  : 	temp.z += v->y * m[1][2];

  0011a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011f	c1 e0 00	 shl	 eax, 0
  00122	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  00125	b9 04 00 00 00	 mov	 ecx, 4
  0012a	d1 e1		 shl	 ecx, 1
  0012c	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  0012f	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00134	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00139	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  0013e	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 452  : 	temp.z += v->z * m[2][2];

  00143	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00148	d1 e0		 shl	 eax, 1
  0014a	03 45 0c	 add	 eax, DWORD PTR _m$[ebp]
  0014d	b9 04 00 00 00	 mov	 ecx, 4
  00152	d1 e1		 shl	 ecx, 1
  00154	8b 55 10	 mov	 edx, DWORD PTR _v$[ebp]
  00157	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0015c	f3 0f 59 04 08	 mulss	 xmm0, DWORD PTR [eax+ecx]
  00161	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _temp$[ebp+8]
  00166	f3 0f 11 45 fc	 movss	 DWORD PTR _temp$[ebp+8], xmm0

; 453  : 
; 454  : 	result->x = temp.x;

  0016b	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0016e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _temp$[ebp]
  00173	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 455  : 	result->y = temp.y;

  00177	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  0017a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _temp$[ebp+4]
  0017f	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 456  : 	result->z = temp.z;

  00184	8b 45 08	 mov	 eax, DWORD PTR _result$[ebp]
  00187	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _temp$[ebp+8]
  0018c	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 457  : }

  00191	5f		 pop	 edi
  00192	5e		 pop	 esi
  00193	5b		 pop	 ebx
  00194	8b e5		 mov	 esp, ebp
  00196	5d		 pop	 ebp
  00197	c2 0c 00	 ret	 12			; 0000000cH
?multiply_matrix3x3_vec3d@@YGXPAUVEC3D@@QAY02$$CBMPBU1@@Z ENDP ; multiply_matrix3x3_vec3d
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_reflection_matrix@@YGXQAY02MPBUVEC3D@@@Z
_TEXT	SEGMENT
_n3_n3$ = -24						; size = 4
_n2_n2$ = -20						; size = 4
_n2_n3$ = -16						; size = 4
_n1_n3$ = -12						; size = 4
_n1_n2$ = -8						; size = 4
_n1_n1$ = -4						; size = 4
_m$ = 8							; size = 4
_v$ = 12						; size = 4
?get_reflection_matrix@@YGXQAY02MPBUVEC3D@@@Z PROC	; get_reflection_matrix, COMDAT

; 404  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 405  : 
; 406  : 	float
; 407  : 		n1_n1,
; 408  : 		n1_n2,
; 409  : 		n1_n3,
; 410  : 		n2_n3,
; 411  : 		n2_n2,
; 412  : 		n3_n3;
; 413  : 
; 414  : 	n1_n1 = ( v->x * v->x );

  00009	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00017	f3 0f 11 45 fc	 movss	 DWORD PTR _n1_n1$[ebp], xmm0

; 415  : 	n1_n2 = ( v->x * v->y );

  0001c	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0001f	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00022	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00026	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  0002b	f3 0f 11 45 f8	 movss	 DWORD PTR _n1_n2$[ebp], xmm0

; 416  : 	n1_n3 = ( v->x * v->z );

  00030	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00036	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0003a	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  0003f	f3 0f 11 45 f4	 movss	 DWORD PTR _n1_n3$[ebp], xmm0

; 417  : 	n2_n3 = ( v->y * v->z );

  00044	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00047	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0004a	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004f	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  00054	f3 0f 11 45 f0	 movss	 DWORD PTR _n2_n3$[ebp], xmm0

; 418  : 	n2_n2 = ( v->y * v->y );

  00059	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0005c	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0005f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00064	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00069	f3 0f 11 45 ec	 movss	 DWORD PTR _n2_n2$[ebp], xmm0

; 419  : 	n3_n3 = ( v->z * v->z );

  0006e	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00071	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00074	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00079	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  0007e	f3 0f 11 45 e8	 movss	 DWORD PTR _n3_n3$[ebp], xmm0

; 420  : 
; 421  : 	m[0][0] = n1_n1 + n1_n1 - 1.0;

  00083	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _n1_n1$[ebp]
  00088	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _n1_n1$[ebp]
  0008d	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00091	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00099	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0009d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000a2	6b c8 00	 imul	 ecx, eax, 0
  000a5	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000a8	ba 04 00 00 00	 mov	 edx, 4
  000ad	6b c2 00	 imul	 eax, edx, 0
  000b0	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 422  : 	m[0][1] = n1_n2 + n1_n2;

  000b5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _n1_n2$[ebp]
  000ba	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _n1_n2$[ebp]
  000bf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000c4	6b c8 00	 imul	 ecx, eax, 0
  000c7	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000ca	ba 04 00 00 00	 mov	 edx, 4
  000cf	c1 e2 00	 shl	 edx, 0
  000d2	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 423  : 	m[0][2] = n1_n3 + n1_n3;

  000d7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _n1_n3$[ebp]
  000dc	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _n1_n3$[ebp]
  000e1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000e6	6b c8 00	 imul	 ecx, eax, 0
  000e9	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000ec	ba 04 00 00 00	 mov	 edx, 4
  000f1	d1 e2		 shl	 edx, 1
  000f3	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 424  : 	m[1][0] = n1_n2 + n1_n2;

  000f8	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _n1_n2$[ebp]
  000fd	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _n1_n2$[ebp]
  00102	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00107	c1 e0 00	 shl	 eax, 0
  0010a	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0010d	b9 04 00 00 00	 mov	 ecx, 4
  00112	6b d1 00	 imul	 edx, ecx, 0
  00115	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 425  : 	m[1][1] = n2_n2 + n2_n2 - 1.0;

  0011a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _n2_n2$[ebp]
  0011f	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _n2_n2$[ebp]
  00124	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00128	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00130	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00134	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00139	c1 e0 00	 shl	 eax, 0
  0013c	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0013f	b9 04 00 00 00	 mov	 ecx, 4
  00144	c1 e1 00	 shl	 ecx, 0
  00147	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 426  : 	m[1][2] = n2_n3 + n2_n3;

  0014c	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00151	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00156	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0015b	c1 e0 00	 shl	 eax, 0
  0015e	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00161	b9 04 00 00 00	 mov	 ecx, 4
  00166	d1 e1		 shl	 ecx, 1
  00168	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 427  : 	m[2][0] = n1_n3 + n1_n3;

  0016d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _n1_n3$[ebp]
  00172	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _n1_n3$[ebp]
  00177	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0017c	d1 e0		 shl	 eax, 1
  0017e	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00181	b9 04 00 00 00	 mov	 ecx, 4
  00186	6b d1 00	 imul	 edx, ecx, 0
  00189	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 428  : 	m[2][1] = n2_n3 + n2_n3;

  0018e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00193	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00198	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0019d	d1 e0		 shl	 eax, 1
  0019f	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001a2	b9 04 00 00 00	 mov	 ecx, 4
  001a7	c1 e1 00	 shl	 ecx, 0
  001aa	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 429  : 	m[2][2] = n3_n3 + n3_n3 - 1.0;

  001af	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _n3_n3$[ebp]
  001b4	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _n3_n3$[ebp]
  001b9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  001bd	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001c5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ce	d1 e0		 shl	 eax, 1
  001d0	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001d3	b9 04 00 00 00	 mov	 ecx, 4
  001d8	d1 e1		 shl	 ecx, 1
  001da	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 430  : }

  001df	5f		 pop	 edi
  001e0	5e		 pop	 esi
  001e1	5b		 pop	 ebx
  001e2	8b e5		 mov	 esp, ebp
  001e4	5d		 pop	 ebp
  001e5	c2 08 00	 ret	 8
?get_reflection_matrix@@YGXQAY02MPBUVEC3D@@@Z ENDP	; get_reflection_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_4d_projection_matrix@@YGXQAY03MMMMM@Z
_TEXT	SEGMENT
tv148 = -84						; size = 8
tv142 = -84						; size = 8
_Q$ = -12						; size = 4
_w$ = -8						; size = 4
_h$ = -4						; size = 4
_m$ = 8							; size = 4
_near_plane$ = 12					; size = 4
_far_plane$ = 16					; size = 4
_fov_width$ = 20					; size = 4
_fov_height$ = 24					; size = 4
?get_4d_projection_matrix@@YGXQAY03MMMMM@Z PROC		; get_4d_projection_matrix, COMDAT

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 315  : 
; 316  : 	float
; 317  : 		h,
; 318  : 		w,
; 319  : 		Q;
; 320  : 
; 321  : 	w = ( float ) ( 1.0 / ( tan ( fov_width * 0.5 ) ) );

  00009	f3 0f 5a 45 14	 cvtss2sd xmm0, DWORD PTR _fov_width$[ebp]
  0000e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00016	83 ec 08	 sub	 esp, 8
  00019	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0001e	e8 00 00 00 00	 call	 _tan
  00023	83 c4 08	 add	 esp, 8
  00026	dd 5d ac	 fstp	 QWORD PTR tv142[ebp]
  00029	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00031	f2 0f 5e 45 ac	 divsd	 xmm0, QWORD PTR tv142[ebp]
  00036	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003a	f3 0f 11 45 f8	 movss	 DWORD PTR _w$[ebp], xmm0

; 322  : 	h = ( float ) ( 1.0 / ( tan ( fov_height * 0.5 ) ) );

  0003f	f3 0f 5a 45 18	 cvtss2sd xmm0, DWORD PTR _fov_height$[ebp]
  00044	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0004c	83 ec 08	 sub	 esp, 8
  0004f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00054	e8 00 00 00 00	 call	 _tan
  00059	83 c4 08	 add	 esp, 8
  0005c	dd 5d ac	 fstp	 QWORD PTR tv148[ebp]
  0005f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00067	f2 0f 5e 45 ac	 divsd	 xmm0, QWORD PTR tv148[ebp]
  0006c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00070	f3 0f 11 45 fc	 movss	 DWORD PTR _h$[ebp], xmm0

; 323  : 	Q = far_plane / ( far_plane - near_plane );

  00075	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _far_plane$[ebp]
  0007a	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _near_plane$[ebp]
  0007f	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _far_plane$[ebp]
  00084	f3 0f 5e c8	 divss	 xmm1, xmm0
  00088	f3 0f 11 4d f4	 movss	 DWORD PTR _Q$[ebp], xmm1

; 324  : 
; 325  : 	memset ( m, 0, sizeof ( matrix4x4 ) );

  0008d	6a 40		 push	 64			; 00000040H
  0008f	6a 00		 push	 0
  00091	8b 45 08	 mov	 eax, DWORD PTR _m$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 _memset
  0009a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 326  : 
; 327  : 	m[0][0] = w;

  0009d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000a2	6b c8 00	 imul	 ecx, eax, 0
  000a5	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000a8	ba 04 00 00 00	 mov	 edx, 4
  000ad	6b c2 00	 imul	 eax, edx, 0
  000b0	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _w$[ebp]
  000b5	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 328  : 	m[1][1] = h;

  000ba	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000bf	c1 e0 00	 shl	 eax, 0
  000c2	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000c5	b9 04 00 00 00	 mov	 ecx, 4
  000ca	c1 e1 00	 shl	 ecx, 0
  000cd	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _h$[ebp]
  000d2	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 329  : 	m[2][2] = Q;

  000d7	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000dc	d1 e0		 shl	 eax, 1
  000de	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000e1	b9 04 00 00 00	 mov	 ecx, 4
  000e6	d1 e1		 shl	 ecx, 1
  000e8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Q$[ebp]
  000ed	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 330  : 	m[3][2] = -Q*near_plane;

  000f2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _Q$[ebp]
  000f7	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000fe	f3 0f 59 45 0c	 mulss	 xmm0, DWORD PTR _near_plane$[ebp]
  00103	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00108	6b c8 03	 imul	 ecx, eax, 3
  0010b	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0010e	ba 04 00 00 00	 mov	 edx, 4
  00113	d1 e2		 shl	 edx, 1
  00115	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 331  : 	m[2][3] = 1;

  0011a	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0011f	d1 e0		 shl	 eax, 1
  00121	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00124	b9 04 00 00 00	 mov	 ecx, 4
  00129	6b d1 03	 imul	 edx, ecx, 3
  0012c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00134	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 332  : }

  00139	5f		 pop	 edi
  0013a	5e		 pop	 esi
  0013b	5b		 pop	 ebx
  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c2 14 00	 ret	 20			; 00000014H
?get_4d_projection_matrix@@YGXQAY03MMMMM@Z ENDP		; get_4d_projection_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_4d_transformation_matrix@@YGXQAY03MMMMPBUVEC3D@@@Z
_TEXT	SEGMENT
_cosrcosh$ = -40					; size = 4
_cosrsinh$ = -36					; size = 4
_sinrcosh$ = -32					; size = 4
_sinrsinh$ = -28					; size = 4
_cosr$ = -24						; size = 4
_sinr$ = -20						; size = 4
_cosp$ = -16						; size = 4
_sinp$ = -12						; size = 4
_cosh$ = -8						; size = 4
_sinh$ = -4						; size = 4
_m$ = 8							; size = 4
_heading$ = 12						; size = 4
_pitch$ = 16						; size = 4
_roll$ = 20						; size = 4
_position$ = 24						; size = 4
?get_4d_transformation_matrix@@YGXQAY03MMMMPBUVEC3D@@@Z PROC ; get_4d_transformation_matrix, COMDAT

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 261  : 
; 262  : 	float
; 263  : 		sinh,
; 264  : 		cosh,
; 265  : 		sinp,
; 266  : 		cosp,
; 267  : 		sinr,
; 268  : 		cosr,
; 269  : 		sinrsinh,
; 270  : 		sinrcosh,
; 271  : 		cosrsinh,
; 272  : 		cosrcosh;
; 273  : 
; 274  : 	sinh = sin ( heading );

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00019	d9 5d fc	 fstp	 DWORD PTR _sinh$[ebp]

; 275  : 	cosh = cos ( heading );

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0002c	d9 5d f8	 fstp	 DWORD PTR _cosh$[ebp]

; 276  : 
; 277  : 	sinp = sin ( pitch );

  0002f	51		 push	 ecx
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0003f	d9 5d f4	 fstp	 DWORD PTR _sinp$[ebp]

; 278  : 	cosp = cos ( pitch );

  00042	51		 push	 ecx
  00043	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00052	d9 5d f0	 fstp	 DWORD PTR _cosp$[ebp]

; 279  : 
; 280  : 	sinr = sin ( roll );

  00055	51		 push	 ecx
  00056	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0005b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00060	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00065	d9 5d ec	 fstp	 DWORD PTR _sinr$[ebp]

; 281  : 	cosr = cos ( roll );

  00068	51		 push	 ecx
  00069	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00078	d9 5d e8	 fstp	 DWORD PTR _cosr$[ebp]

; 282  : 
; 283  : 	sinrsinh = sinr * sinh;

  0007b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  00080	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  00085	f3 0f 11 45 e4	 movss	 DWORD PTR _sinrsinh$[ebp], xmm0

; 284  : 
; 285  : 	sinrcosh = sinr * cosh;

  0008a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  0008f	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  00094	f3 0f 11 45 e0	 movss	 DWORD PTR _sinrcosh$[ebp], xmm0

; 286  : 
; 287  : 	cosrsinh = cosr * sinh;

  00099	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  0009e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  000a3	f3 0f 11 45 dc	 movss	 DWORD PTR _cosrsinh$[ebp], xmm0

; 288  : 
; 289  : 	cosrcosh = cosr * cosh;

  000a8	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  000ad	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  000b2	f3 0f 11 45 d8	 movss	 DWORD PTR _cosrcosh$[ebp], xmm0

; 290  : 
; 291  : 	m[0][0] = cosrcosh + ( sinrsinh * sinp );

  000b7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  000bc	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  000c1	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _cosrcosh$[ebp]
  000c6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000cb	6b c8 00	 imul	 ecx, eax, 0
  000ce	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000d1	ba 04 00 00 00	 mov	 edx, 4
  000d6	6b c2 00	 imul	 eax, edx, 0
  000d9	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 292  : 	m[0][1] = -sinr * cosp;

  000de	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  000e3	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000ea	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  000ef	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  000f4	6b c8 00	 imul	 ecx, eax, 0
  000f7	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000fa	ba 04 00 00 00	 mov	 edx, 4
  000ff	c1 e2 00	 shl	 edx, 0
  00102	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 293  : 	m[0][2] = ( sinrcosh * sinp ) - cosrsinh;

  00107	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sinrcosh$[ebp]
  0010c	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00111	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  00116	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0011b	6b c8 00	 imul	 ecx, eax, 0
  0011e	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00121	ba 04 00 00 00	 mov	 edx, 4
  00126	d1 e2		 shl	 edx, 1
  00128	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 294  : 	m[0][3] = 0;

  0012d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00132	6b c8 00	 imul	 ecx, eax, 0
  00135	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00138	ba 04 00 00 00	 mov	 edx, 4
  0013d	6b c2 03	 imul	 eax, edx, 3
  00140	0f 57 c0	 xorps	 xmm0, xmm0
  00143	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 295  : 	m[1][0] = sinrcosh - ( cosrsinh * sinp );

  00148	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  0014d	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00152	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sinrcosh$[ebp]
  00157	f3 0f 5c c8	 subss	 xmm1, xmm0
  0015b	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00160	c1 e0 00	 shl	 eax, 0
  00163	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00166	b9 04 00 00 00	 mov	 ecx, 4
  0016b	6b d1 00	 imul	 edx, ecx, 0
  0016e	f3 0f 11 0c 10	 movss	 DWORD PTR [eax+edx], xmm1

; 296  : 	m[1][1] = cosr * cosp;

  00173	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  00178	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  0017d	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00182	c1 e0 00	 shl	 eax, 0
  00185	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00188	b9 04 00 00 00	 mov	 ecx, 4
  0018d	c1 e1 00	 shl	 ecx, 0
  00190	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 297  : 	m[1][2] = -sinrsinh - ( cosrcosh * sinp );

  00195	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  0019a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001a1	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _cosrcosh$[ebp]
  001a6	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _sinp$[ebp]
  001ab	f3 0f 5c c1	 subss	 xmm0, xmm1
  001af	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001b4	c1 e0 00	 shl	 eax, 0
  001b7	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001ba	b9 04 00 00 00	 mov	 ecx, 4
  001bf	d1 e1		 shl	 ecx, 1
  001c1	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 298  : 	m[1][3] = 0;

  001c6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001cb	c1 e0 00	 shl	 eax, 0
  001ce	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001d1	b9 04 00 00 00	 mov	 ecx, 4
  001d6	6b d1 03	 imul	 edx, ecx, 3
  001d9	0f 57 c0	 xorps	 xmm0, xmm0
  001dc	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 299  : 	m[2][0] = cosp * sinh;

  001e1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  001e6	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  001eb	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  001f0	d1 e0		 shl	 eax, 1
  001f2	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001f5	b9 04 00 00 00	 mov	 ecx, 4
  001fa	6b d1 00	 imul	 edx, ecx, 0
  001fd	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 300  : 	m[2][1] = sinp;

  00202	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00207	d1 e0		 shl	 eax, 1
  00209	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0020c	b9 04 00 00 00	 mov	 ecx, 4
  00211	c1 e1 00	 shl	 ecx, 0
  00214	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sinp$[ebp]
  00219	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 301  : 	m[2][2] = cosp * cosh;

  0021e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  00223	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  00228	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0022d	d1 e0		 shl	 eax, 1
  0022f	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00232	b9 04 00 00 00	 mov	 ecx, 4
  00237	d1 e1		 shl	 ecx, 1
  00239	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 302  : 	m[2][3] = 0;

  0023e	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00243	d1 e0		 shl	 eax, 1
  00245	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00248	b9 04 00 00 00	 mov	 ecx, 4
  0024d	6b d1 03	 imul	 edx, ecx, 3
  00250	0f 57 c0	 xorps	 xmm0, xmm0
  00253	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 303  : 	m[3][0] = position->x;

  00258	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0025d	6b c8 03	 imul	 ecx, eax, 3
  00260	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00263	ba 04 00 00 00	 mov	 edx, 4
  00268	6b c2 00	 imul	 eax, edx, 0
  0026b	8b 55 18	 mov	 edx, DWORD PTR _position$[ebp]
  0026e	8b 12		 mov	 edx, DWORD PTR [edx]
  00270	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 304  : 	m[3][1] = position->y;

  00273	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00278	6b c8 03	 imul	 ecx, eax, 3
  0027b	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0027e	ba 04 00 00 00	 mov	 edx, 4
  00283	c1 e2 00	 shl	 edx, 0
  00286	8b 45 18	 mov	 eax, DWORD PTR _position$[ebp]
  00289	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0028c	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 305  : 	m[3][2] = position->z;

  0028f	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00294	6b c8 03	 imul	 ecx, eax, 3
  00297	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0029a	ba 04 00 00 00	 mov	 edx, 4
  0029f	d1 e2		 shl	 edx, 1
  002a1	8b 45 18	 mov	 eax, DWORD PTR _position$[ebp]
  002a4	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  002a7	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 306  : 	m[3][3] = 1;

  002aa	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  002af	6b c8 03	 imul	 ecx, eax, 3
  002b2	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  002b5	ba 04 00 00 00	 mov	 edx, 4
  002ba	6b c2 03	 imul	 eax, edx, 3
  002bd	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  002c5	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 307  : }

  002ca	5f		 pop	 edi
  002cb	5e		 pop	 esi
  002cc	5b		 pop	 ebx
  002cd	8b e5		 mov	 esp, ebp
  002cf	5d		 pop	 ebp
  002d0	c2 14 00	 ret	 20			; 00000014H
?get_4d_transformation_matrix@@YGXQAY03MMMMPBUVEC3D@@@Z ENDP ; get_4d_transformation_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z
_TEXT	SEGMENT
_one_minus_n3_n3_cos$ = -68				; size = 4
_one_minus_n2_n2_cos$ = -64				; size = 4
_one_minus_n1_n1_cos$ = -60				; size = 4
_n2_n3_cos$ = -56					; size = 4
_n1_n3_cos$ = -52					; size = 4
_n1_n2_cos$ = -48					; size = 4
_n3_n3$ = -44						; size = 4
_n2_n2$ = -40						; size = 4
_n2_n3$ = -36						; size = 4
_n1_n3$ = -32						; size = 4
_n1_n2$ = -28						; size = 4
_n1_n1$ = -24						; size = 4
_n3_sin$ = -20						; size = 4
_n2_sin$ = -16						; size = 4
_n1_sin$ = -12						; size = 4
_sine$ = -8						; size = 4
_cosine$ = -4						; size = 4
_m$ = 8							; size = 4
_v$ = 12						; size = 4
_angle$ = 16						; size = 4
?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z PROC ; get_arbitrary_rotation_matrix, COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 340  : 
; 341  : 	float
; 342  : 		cosine,
; 343  : 		sine,
; 344  : 
; 345  : 		n1_sin,
; 346  : 		n2_sin,
; 347  : 		n3_sin,
; 348  : 
; 349  : 		n1_n1,
; 350  : 		n1_n2,
; 351  : 		n1_n3,
; 352  : 		n2_n3,
; 353  : 
; 354  : 		n2_n2,
; 355  : 		n3_n3,
; 356  : 
; 357  : 		n1_n2_cos,
; 358  : 		n1_n3_cos,
; 359  : 		n2_n3_cos,
; 360  : 
; 361  : 		one_minus_n1_n1_cos,
; 362  : 		one_minus_n2_n2_cos,
; 363  : 		one_minus_n3_n3_cos;
; 364  : 
; 365  : 	cosine = cos ( angle );

  0000c	51		 push	 ecx
  0000d	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _angle$[ebp]
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0001c	d9 5d fc	 fstp	 DWORD PTR _cosine$[ebp]

; 366  : 
; 367  : 	sine = sin ( angle );

  0001f	51		 push	 ecx
  00020	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _angle$[ebp]
  00025	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0002f	d9 5d f8	 fstp	 DWORD PTR _sine$[ebp]

; 368  : 
; 369  : 	n1_sin = ( v->x * sine );

  00032	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00035	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00039	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _sine$[ebp]
  0003e	f3 0f 11 45 f4	 movss	 DWORD PTR _n1_sin$[ebp], xmm0

; 370  : 	n2_sin = ( v->y * sine );

  00043	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00046	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0004b	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _sine$[ebp]
  00050	f3 0f 11 45 f0	 movss	 DWORD PTR _n2_sin$[ebp], xmm0

; 371  : 	n3_sin = ( v->z * sine );

  00055	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00058	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0005d	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _sine$[ebp]
  00062	f3 0f 11 45 ec	 movss	 DWORD PTR _n3_sin$[ebp], xmm0

; 372  : 
; 373  : 	n1_n1 = ( v->x * v->x );

  00067	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0006a	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  0006d	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00071	f3 0f 59 01	 mulss	 xmm0, DWORD PTR [ecx]
  00075	f3 0f 11 45 e8	 movss	 DWORD PTR _n1_n1$[ebp], xmm0

; 374  : 	n1_n2 = ( v->x * v->y );

  0007a	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00080	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00084	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  00089	f3 0f 11 45 e4	 movss	 DWORD PTR _n1_n2$[ebp], xmm0

; 375  : 	n1_n3 = ( v->x * v->z );

  0008e	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  00091	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  00094	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00098	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  0009d	f3 0f 11 45 e0	 movss	 DWORD PTR _n1_n3$[ebp], xmm0

; 376  : 	n2_n3 = ( v->y * v->z );

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000a5	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000a8	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000ad	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  000b2	f3 0f 11 45 dc	 movss	 DWORD PTR _n2_n3$[ebp], xmm0

; 377  : 	n2_n2 = ( v->y * v->y );

  000b7	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000ba	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000bd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000c2	f3 0f 59 41 04	 mulss	 xmm0, DWORD PTR [ecx+4]
  000c7	f3 0f 11 45 d8	 movss	 DWORD PTR _n2_n2$[ebp], xmm0

; 378  : 	n3_n3 = ( v->z * v->z );

  000cc	8b 45 0c	 mov	 eax, DWORD PTR _v$[ebp]
  000cf	8b 4d 0c	 mov	 ecx, DWORD PTR _v$[ebp]
  000d2	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000d7	f3 0f 59 41 08	 mulss	 xmm0, DWORD PTR [ecx+8]
  000dc	f3 0f 11 45 d4	 movss	 DWORD PTR _n3_n3$[ebp], xmm0

; 379  : 
; 380  : 	n1_n2_cos = ( n1_n2 * cosine );

  000e1	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _n1_n2$[ebp]
  000e6	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _cosine$[ebp]
  000eb	f3 0f 11 45 d0	 movss	 DWORD PTR _n1_n2_cos$[ebp], xmm0

; 381  : 	n1_n3_cos = ( n1_n3 * cosine );

  000f0	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _n1_n3$[ebp]
  000f5	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _cosine$[ebp]
  000fa	f3 0f 11 45 cc	 movss	 DWORD PTR _n1_n3_cos$[ebp], xmm0

; 382  : 	n2_n3_cos = ( n2_n3 * cosine );

  000ff	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00104	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _cosine$[ebp]
  00109	f3 0f 11 45 c8	 movss	 DWORD PTR _n2_n3_cos$[ebp], xmm0

; 383  : 
; 384  : 	one_minus_n1_n1_cos = ( ( 1.0 - n1_n1 ) * cosine );

  0010e	f3 0f 5a 45 e8	 cvtss2sd xmm0, DWORD PTR _n1_n1$[ebp]
  00113	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0011b	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0011f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _cosine$[ebp]
  00124	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00128	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0012c	f3 0f 11 45 c4	 movss	 DWORD PTR _one_minus_n1_n1_cos$[ebp], xmm0

; 385  : 	one_minus_n2_n2_cos = ( ( 1.0 - n2_n2 ) * cosine );

  00131	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _n2_n2$[ebp]
  00136	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0013e	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00142	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _cosine$[ebp]
  00147	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0014b	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  0014f	f3 0f 11 45 c0	 movss	 DWORD PTR _one_minus_n2_n2_cos$[ebp], xmm0

; 386  : 	one_minus_n3_n3_cos = ( ( 1.0 - n3_n3 ) * cosine );

  00154	f3 0f 5a 45 d4	 cvtss2sd xmm0, DWORD PTR _n3_n3$[ebp]
  00159	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00161	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00165	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _cosine$[ebp]
  0016a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0016e	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00172	f3 0f 11 45 bc	 movss	 DWORD PTR _one_minus_n3_n3_cos$[ebp], xmm0

; 387  : 
; 388  : 	m[0][0] = n1_n1 + one_minus_n1_n1_cos;

  00177	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _n1_n1$[ebp]
  0017c	f3 0f 58 45 c4	 addss	 xmm0, DWORD PTR _one_minus_n1_n1_cos$[ebp]
  00181	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00186	6b c8 00	 imul	 ecx, eax, 0
  00189	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0018c	ba 04 00 00 00	 mov	 edx, 4
  00191	6b c2 00	 imul	 eax, edx, 0
  00194	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 389  : 	m[0][1] = n1_n2 - n1_n2_cos - n3_sin;

  00199	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _n1_n2$[ebp]
  0019e	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _n1_n2_cos$[ebp]
  001a3	f3 0f 5c 45 ec	 subss	 xmm0, DWORD PTR _n3_sin$[ebp]
  001a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ad	6b c8 00	 imul	 ecx, eax, 0
  001b0	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  001b3	ba 04 00 00 00	 mov	 edx, 4
  001b8	c1 e2 00	 shl	 edx, 0
  001bb	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 390  : 	m[0][2] = n1_n3 - n1_n3_cos + n2_sin;

  001c0	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _n1_n3$[ebp]
  001c5	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _n1_n3_cos$[ebp]
  001ca	f3 0f 58 45 f0	 addss	 xmm0, DWORD PTR _n2_sin$[ebp]
  001cf	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001d4	6b c8 00	 imul	 ecx, eax, 0
  001d7	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  001da	ba 04 00 00 00	 mov	 edx, 4
  001df	d1 e2		 shl	 edx, 1
  001e1	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 391  : 	m[1][0] = n1_n2 - n1_n2_cos + n3_sin;

  001e6	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _n1_n2$[ebp]
  001eb	f3 0f 5c 45 d0	 subss	 xmm0, DWORD PTR _n1_n2_cos$[ebp]
  001f0	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _n3_sin$[ebp]
  001f5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001fa	c1 e0 00	 shl	 eax, 0
  001fd	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00200	b9 04 00 00 00	 mov	 ecx, 4
  00205	6b d1 00	 imul	 edx, ecx, 0
  00208	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 392  : 	m[1][1] = n2_n2 + one_minus_n2_n2_cos;

  0020d	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _n2_n2$[ebp]
  00212	f3 0f 58 45 c0	 addss	 xmm0, DWORD PTR _one_minus_n2_n2_cos$[ebp]
  00217	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021c	c1 e0 00	 shl	 eax, 0
  0021f	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00222	b9 04 00 00 00	 mov	 ecx, 4
  00227	c1 e1 00	 shl	 ecx, 0
  0022a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 393  : 	m[1][2] = n2_n3 - n2_n3_cos - n1_sin;

  0022f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00234	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _n2_n3_cos$[ebp]
  00239	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _n1_sin$[ebp]
  0023e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00243	c1 e0 00	 shl	 eax, 0
  00246	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00249	b9 04 00 00 00	 mov	 ecx, 4
  0024e	d1 e1		 shl	 ecx, 1
  00250	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 394  : 	m[2][0] = n1_n3 - n1_n3_cos - n2_sin;

  00255	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _n1_n3$[ebp]
  0025a	f3 0f 5c 45 cc	 subss	 xmm0, DWORD PTR _n1_n3_cos$[ebp]
  0025f	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _n2_sin$[ebp]
  00264	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00269	d1 e0		 shl	 eax, 1
  0026b	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0026e	b9 04 00 00 00	 mov	 ecx, 4
  00273	6b d1 00	 imul	 edx, ecx, 0
  00276	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 395  : 	m[2][1] = n2_n3 - n2_n3_cos + n1_sin;

  0027b	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _n2_n3$[ebp]
  00280	f3 0f 5c 45 c8	 subss	 xmm0, DWORD PTR _n2_n3_cos$[ebp]
  00285	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _n1_sin$[ebp]
  0028a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0028f	d1 e0		 shl	 eax, 1
  00291	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00294	b9 04 00 00 00	 mov	 ecx, 4
  00299	c1 e1 00	 shl	 ecx, 0
  0029c	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 396  : 	m[2][2] = n3_n3 + one_minus_n3_n3_cos;

  002a1	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _n3_n3$[ebp]
  002a6	f3 0f 58 45 bc	 addss	 xmm0, DWORD PTR _one_minus_n3_n3_cos$[ebp]
  002ab	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002b0	d1 e0		 shl	 eax, 1
  002b2	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  002b5	b9 04 00 00 00	 mov	 ecx, 4
  002ba	d1 e1		 shl	 ecx, 1
  002bc	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 397  : }

  002c1	5f		 pop	 edi
  002c2	5e		 pop	 esi
  002c3	5b		 pop	 ebx
  002c4	8b e5		 mov	 esp, ebp
  002c6	5d		 pop	 ebp
  002c7	c2 0c 00	 ret	 12			; 0000000cH
?get_arbitrary_rotation_matrix@@YGXQAY02MPBUVEC3D@@M@Z ENDP ; get_arbitrary_rotation_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_heading_matrix@@YGXQAY02MM@Z
_TEXT	SEGMENT
_cosh$ = -8						; size = 4
_sinh$ = -4						; size = 4
_m$ = 8							; size = 4
_heading$ = 12						; size = 4
?get_3d_transformation_heading_matrix@@YGXQAY02MM@Z PROC ; get_3d_transformation_heading_matrix, COMDAT

; 235  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 236  : 
; 237  : 	float
; 238  : 		sinh,
; 239  : 		cosh;
; 240  : 
; 241  : 	sinh = sin ( heading );

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00019	d9 5d fc	 fstp	 DWORD PTR _sinh$[ebp]

; 242  : 	cosh = cos ( heading );

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0002c	d9 5d f8	 fstp	 DWORD PTR _cosh$[ebp]

; 243  : 
; 244  : 	m[0][0] = cosh;

  0002f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00034	6b c8 00	 imul	 ecx, eax, 0
  00037	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0003a	ba 04 00 00 00	 mov	 edx, 4
  0003f	6b c2 00	 imul	 eax, edx, 0
  00042	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cosh$[ebp]
  00047	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 245  : 	m[0][1] = 0.0;

  0004c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00051	6b c8 00	 imul	 ecx, eax, 0
  00054	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00057	ba 04 00 00 00	 mov	 edx, 4
  0005c	c1 e2 00	 shl	 edx, 0
  0005f	0f 57 c0	 xorps	 xmm0, xmm0
  00062	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 246  : 	m[0][2] = -sinh;

  00067	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sinh$[ebp]
  0006c	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00073	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00078	6b c8 00	 imul	 ecx, eax, 0
  0007b	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0007e	ba 04 00 00 00	 mov	 edx, 4
  00083	d1 e2		 shl	 edx, 1
  00085	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 247  : 	m[1][0] = 0.0;

  0008a	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0008f	c1 e0 00	 shl	 eax, 0
  00092	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00095	b9 04 00 00 00	 mov	 ecx, 4
  0009a	6b d1 00	 imul	 edx, ecx, 0
  0009d	0f 57 c0	 xorps	 xmm0, xmm0
  000a0	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 248  : 	m[1][1] = 1.0;

  000a5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000aa	c1 e0 00	 shl	 eax, 0
  000ad	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000b0	b9 04 00 00 00	 mov	 ecx, 4
  000b5	c1 e1 00	 shl	 ecx, 0
  000b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000c0	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 249  : 	m[1][2] = 0.0;

  000c5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000ca	c1 e0 00	 shl	 eax, 0
  000cd	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000d0	b9 04 00 00 00	 mov	 ecx, 4
  000d5	d1 e1		 shl	 ecx, 1
  000d7	0f 57 c0	 xorps	 xmm0, xmm0
  000da	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 250  : 	m[2][0] = sinh;

  000df	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000e4	d1 e0		 shl	 eax, 1
  000e6	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000e9	b9 04 00 00 00	 mov	 ecx, 4
  000ee	6b d1 00	 imul	 edx, ecx, 0
  000f1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sinh$[ebp]
  000f6	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 251  : 	m[2][1] = 0.0;

  000fb	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00100	d1 e0		 shl	 eax, 1
  00102	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00105	b9 04 00 00 00	 mov	 ecx, 4
  0010a	c1 e1 00	 shl	 ecx, 0
  0010d	0f 57 c0	 xorps	 xmm0, xmm0
  00110	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 252  : 	m[2][2] = cosh;

  00115	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011a	d1 e0		 shl	 eax, 1
  0011c	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0011f	b9 04 00 00 00	 mov	 ecx, 4
  00124	d1 e1		 shl	 ecx, 1
  00126	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cosh$[ebp]
  0012b	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 253  : }

  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
  00132	5b		 pop	 ebx
  00133	8b e5		 mov	 esp, ebp
  00135	5d		 pop	 ebp
  00136	c2 08 00	 ret	 8
?get_3d_transformation_heading_matrix@@YGXQAY02MM@Z ENDP ; get_3d_transformation_heading_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z
_TEXT	SEGMENT
_cosp$ = -16						; size = 4
_sinp$ = -12						; size = 4
_cosh$ = -8						; size = 4
_sinh$ = -4						; size = 4
_m$ = 8							; size = 4
_heading$ = 12						; size = 4
_pitch$ = 16						; size = 4
?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z PROC ; get_3d_transformation_heading_pitch_matrix, COMDAT

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 206  : 
; 207  : 	float
; 208  : 		sinh,
; 209  : 		cosh,
; 210  : 		sinp,
; 211  : 		cosp;
; 212  : 
; 213  : 	sinh = sin ( heading );

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00019	d9 5d fc	 fstp	 DWORD PTR _sinh$[ebp]

; 214  : 	cosh = cos ( heading );

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0002c	d9 5d f8	 fstp	 DWORD PTR _cosh$[ebp]

; 215  : 
; 216  : 	sinp = sin ( pitch );

  0002f	51		 push	 ecx
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0003f	d9 5d f4	 fstp	 DWORD PTR _sinp$[ebp]

; 217  : 	cosp = cos ( pitch );

  00042	51		 push	 ecx
  00043	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00052	d9 5d f0	 fstp	 DWORD PTR _cosp$[ebp]

; 218  : 
; 219  : 	m[0][0] = cosh;

  00055	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0005a	6b c8 00	 imul	 ecx, eax, 0
  0005d	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00060	ba 04 00 00 00	 mov	 edx, 4
  00065	6b c2 00	 imul	 eax, edx, 0
  00068	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cosh$[ebp]
  0006d	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 220  : 	m[0][1] = 0;

  00072	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00077	6b c8 00	 imul	 ecx, eax, 0
  0007a	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  0007d	ba 04 00 00 00	 mov	 edx, 4
  00082	c1 e2 00	 shl	 edx, 0
  00085	0f 57 c0	 xorps	 xmm0, xmm0
  00088	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 221  : 	m[0][2] = -sinh;

  0008d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sinh$[ebp]
  00092	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00099	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0009e	6b c8 00	 imul	 ecx, eax, 0
  000a1	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000a4	ba 04 00 00 00	 mov	 edx, 4
  000a9	d1 e2		 shl	 edx, 1
  000ab	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 222  : 	m[1][0] = -( sinh * sinp );

  000b0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _sinh$[ebp]
  000b5	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  000ba	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000c1	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000c6	c1 e0 00	 shl	 eax, 0
  000c9	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000cc	b9 04 00 00 00	 mov	 ecx, 4
  000d1	6b d1 00	 imul	 edx, ecx, 0
  000d4	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 223  : 	m[1][1] = cosp;

  000d9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000de	c1 e0 00	 shl	 eax, 0
  000e1	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  000e4	b9 04 00 00 00	 mov	 ecx, 4
  000e9	c1 e1 00	 shl	 ecx, 0
  000ec	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  000f1	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 224  : 	m[1][2] = -( cosh * sinp );

  000f6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _cosh$[ebp]
  000fb	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00100	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00107	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0010c	c1 e0 00	 shl	 eax, 0
  0010f	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00112	b9 04 00 00 00	 mov	 ecx, 4
  00117	d1 e1		 shl	 ecx, 1
  00119	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 225  : 	m[2][0] = cosp * sinh;

  0011e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  00123	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  00128	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0012d	d1 e0		 shl	 eax, 1
  0012f	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00132	b9 04 00 00 00	 mov	 ecx, 4
  00137	6b d1 00	 imul	 edx, ecx, 0
  0013a	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 226  : 	m[2][1] = sinp;

  0013f	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00144	d1 e0		 shl	 eax, 1
  00146	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00149	b9 04 00 00 00	 mov	 ecx, 4
  0014e	c1 e1 00	 shl	 ecx, 0
  00151	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sinp$[ebp]
  00156	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 227  : 	m[2][2] = cosp * cosh;

  0015b	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  00160	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  00165	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0016a	d1 e0		 shl	 eax, 1
  0016c	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0016f	b9 04 00 00 00	 mov	 ecx, 4
  00174	d1 e1		 shl	 ecx, 1
  00176	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 228  : }

  0017b	5f		 pop	 edi
  0017c	5e		 pop	 esi
  0017d	5b		 pop	 ebx
  0017e	8b e5		 mov	 esp, ebp
  00180	5d		 pop	 ebp
  00181	c2 0c 00	 ret	 12			; 0000000cH
?get_3d_transformation_heading_pitch_matrix@@YGXQAY02MMM@Z ENDP ; get_3d_transformation_heading_pitch_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z
_TEXT	SEGMENT
_index$1 = -52						; size = 4
_index$2 = -48						; size = 4
_index$3 = -44						; size = 4
_cosrcosh$ = -40					; size = 4
_cosrsinh$ = -36					; size = 4
_sinrcosh$ = -32					; size = 4
_sinrsinh$ = -28					; size = 4
_cosr$ = -24						; size = 4
_sinr$ = -20						; size = 4
_cosp$ = -16						; size = 4
_sinp$ = -12						; size = 4
_cosh$ = -8						; size = 4
_sinh$ = -4						; size = 4
_m$ = 8							; size = 4
_heading$ = 12						; size = 4
_pitch$ = 16						; size = 4
_roll$ = 20						; size = 4
?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z PROC	; get_3d_transformation_matrix_fast, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 154  : 
; 155  : 	float
; 156  : 		sinh,
; 157  : 		cosh,
; 158  : 		sinp,
; 159  : 		cosp,
; 160  : 		sinr,
; 161  : 		cosr,
; 162  : 		sinrsinh,
; 163  : 		sinrcosh,
; 164  : 		cosrsinh,
; 165  : 		cosrcosh;
; 166  : 
; 167  : 	sine_cosine ( heading, &sinh, &cosh );

  00009	8d 45 d4	 lea	 eax, DWORD PTR _index$3[ebp]
  0000c	50		 push	 eax
  0000d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _heading$[ebp]
  00012	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  0001a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0001e	51		 push	 ecx
  0001f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00024	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  00029	8b 45 d4	 mov	 eax, DWORD PTR _index$3[ebp]
  0002c	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00031	89 45 d4	 mov	 DWORD PTR _index$3[ebp], eax
  00034	8b 45 d4	 mov	 eax, DWORD PTR _index$3[ebp]
  00037	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00040	f3 0f 11 45 fc	 movss	 DWORD PTR _sinh$[ebp], xmm0
  00045	8b 45 d4	 mov	 eax, DWORD PTR _index$3[ebp]
  00048	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  0004d	89 45 d4	 mov	 DWORD PTR _index$3[ebp], eax
  00050	8b 45 d4	 mov	 eax, DWORD PTR _index$3[ebp]
  00053	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00058	89 45 d4	 mov	 DWORD PTR _index$3[ebp], eax
  0005b	8b 45 d4	 mov	 eax, DWORD PTR _index$3[ebp]
  0005e	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00067	f3 0f 11 45 f8	 movss	 DWORD PTR _cosh$[ebp], xmm0

; 168  : 
; 169  : 	sine_cosine ( pitch, &sinp, &cosp );

  0006c	8d 45 d0	 lea	 eax, DWORD PTR _index$2[ebp]
  0006f	50		 push	 eax
  00070	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _pitch$[ebp]
  00075	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  0007d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00081	51		 push	 ecx
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  0008c	8b 45 d0	 mov	 eax, DWORD PTR _index$2[ebp]
  0008f	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  00094	89 45 d0	 mov	 DWORD PTR _index$2[ebp], eax
  00097	8b 45 d0	 mov	 eax, DWORD PTR _index$2[ebp]
  0009a	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  000a3	f3 0f 11 45 f4	 movss	 DWORD PTR _sinp$[ebp], xmm0
  000a8	8b 45 d0	 mov	 eax, DWORD PTR _index$2[ebp]
  000ab	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  000b0	89 45 d0	 mov	 DWORD PTR _index$2[ebp], eax
  000b3	8b 45 d0	 mov	 eax, DWORD PTR _index$2[ebp]
  000b6	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000bb	89 45 d0	 mov	 DWORD PTR _index$2[ebp], eax
  000be	8b 45 d0	 mov	 eax, DWORD PTR _index$2[ebp]
  000c1	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  000ca	f3 0f 11 45 f0	 movss	 DWORD PTR _cosp$[ebp], xmm0

; 170  : 
; 171  : 	sine_cosine ( roll, &sinr, &cosr );

  000cf	8d 45 cc	 lea	 eax, DWORD PTR _index$1[ebp]
  000d2	50		 push	 eax
  000d3	f3 0f 5a 45 14	 cvtss2sd xmm0, DWORD PTR _roll$[ebp]
  000d8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40845f306446f9b4
  000e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e4	51		 push	 ecx
  000e5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ea	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int
  000ef	8b 45 cc	 mov	 eax, DWORD PTR _index$1[ebp]
  000f2	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  000f7	89 45 cc	 mov	 DWORD PTR _index$1[ebp], eax
  000fa	8b 45 cc	 mov	 eax, DWORD PTR _index$1[ebp]
  000fd	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  00106	f3 0f 11 45 ec	 movss	 DWORD PTR _sinr$[ebp], xmm0
  0010b	8b 45 cc	 mov	 eax, DWORD PTR _index$1[ebp]
  0010e	05 00 04 00 00	 add	 eax, 1024		; 00000400H
  00113	89 45 cc	 mov	 DWORD PTR _index$1[ebp], eax
  00116	8b 45 cc	 mov	 eax, DWORD PTR _index$1[ebp]
  00119	25 ff 0f 00 00	 and	 eax, 4095		; 00000fffH
  0011e	89 45 cc	 mov	 DWORD PTR _index$1[ebp], eax
  00121	8b 45 cc	 mov	 eax, DWORD PTR _index$1[ebp]
  00124	f3 0f 10 04 85
	00 00 00 00	 movss	 xmm0, DWORD PTR ?sine_table@@3PAMA[eax*4]
  0012d	f3 0f 11 45 e8	 movss	 DWORD PTR _cosr$[ebp], xmm0

; 172  : 
; 173  : 	sinrsinh = sinr * sinh;

  00132	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  00137	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  0013c	f3 0f 11 45 e4	 movss	 DWORD PTR _sinrsinh$[ebp], xmm0

; 174  : 
; 175  : 	sinrcosh = sinr * cosh;

  00141	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  00146	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  0014b	f3 0f 11 45 e0	 movss	 DWORD PTR _sinrcosh$[ebp], xmm0

; 176  : 
; 177  : 	cosrsinh = cosr * sinh;

  00150	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  00155	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  0015a	f3 0f 11 45 dc	 movss	 DWORD PTR _cosrsinh$[ebp], xmm0

; 178  : 
; 179  : 	cosrcosh = cosr * cosh;

  0015f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  00164	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  00169	f3 0f 11 45 d8	 movss	 DWORD PTR _cosrcosh$[ebp], xmm0

; 180  : 
; 181  : 	m [ 0 ] [ 0 ] = cosrcosh + ( sinrsinh * sinp );

  0016e	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  00173	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00178	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _cosrcosh$[ebp]
  0017d	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00182	6b c8 00	 imul	 ecx, eax, 0
  00185	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00188	ba 04 00 00 00	 mov	 edx, 4
  0018d	6b c2 00	 imul	 eax, edx, 0
  00190	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 182  : 
; 183  : 	m [ 0 ] [ 1 ] = -sinr * cosp;

  00195	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  0019a	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  001a1	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  001a6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ab	6b c8 00	 imul	 ecx, eax, 0
  001ae	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  001b1	ba 04 00 00 00	 mov	 edx, 4
  001b6	c1 e2 00	 shl	 edx, 0
  001b9	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 184  : 
; 185  : 	m [ 0 ] [ 2 ] = ( sinrcosh * sinp ) - cosrsinh;

  001be	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sinrcosh$[ebp]
  001c3	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  001c8	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  001cd	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001d2	6b c8 00	 imul	 ecx, eax, 0
  001d5	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  001d8	ba 04 00 00 00	 mov	 edx, 4
  001dd	d1 e2		 shl	 edx, 1
  001df	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 186  : 
; 187  : 	m [ 1 ] [ 0 ] = sinrcosh - ( cosrsinh * sinp );

  001e4	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  001e9	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  001ee	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sinrcosh$[ebp]
  001f3	f3 0f 5c c8	 subss	 xmm1, xmm0
  001f7	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001fc	c1 e0 00	 shl	 eax, 0
  001ff	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00202	b9 04 00 00 00	 mov	 ecx, 4
  00207	6b d1 00	 imul	 edx, ecx, 0
  0020a	f3 0f 11 0c 10	 movss	 DWORD PTR [eax+edx], xmm1

; 188  : 
; 189  : 	m [ 1 ] [ 1 ] = cosr * cosp;

  0020f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  00214	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  00219	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0021e	c1 e0 00	 shl	 eax, 0
  00221	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00224	b9 04 00 00 00	 mov	 ecx, 4
  00229	c1 e1 00	 shl	 ecx, 0
  0022c	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 190  : 
; 191  : 	m [ 1 ] [ 2 ] = -sinrsinh - ( cosrcosh * sinp );

  00231	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  00236	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0023d	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _cosrcosh$[ebp]
  00242	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _sinp$[ebp]
  00247	f3 0f 5c c1	 subss	 xmm0, xmm1
  0024b	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00250	c1 e0 00	 shl	 eax, 0
  00253	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00256	b9 04 00 00 00	 mov	 ecx, 4
  0025b	d1 e1		 shl	 ecx, 1
  0025d	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 192  : 
; 193  : 	m [ 2 ] [ 0 ] = cosp * sinh;

  00262	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  00267	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  0026c	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00271	d1 e0		 shl	 eax, 1
  00273	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  00276	b9 04 00 00 00	 mov	 ecx, 4
  0027b	6b d1 00	 imul	 edx, ecx, 0
  0027e	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 194  : 
; 195  : 	m [ 2 ] [ 1 ] = sinp;

  00283	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00288	d1 e0		 shl	 eax, 1
  0028a	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0028d	b9 04 00 00 00	 mov	 ecx, 4
  00292	c1 e1 00	 shl	 ecx, 0
  00295	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sinp$[ebp]
  0029a	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 196  : 
; 197  : 	m [ 2 ] [ 2 ] = cosp * cosh;

  0029f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  002a4	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  002a9	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ae	d1 e0		 shl	 eax, 1
  002b0	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  002b3	b9 04 00 00 00	 mov	 ecx, 4
  002b8	d1 e1		 shl	 ecx, 1
  002ba	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 198  : }

  002bf	5f		 pop	 edi
  002c0	5e		 pop	 esi
  002c1	5b		 pop	 ebx
  002c2	8b e5		 mov	 esp, ebp
  002c4	5d		 pop	 ebp
  002c5	c2 10 00	 ret	 16			; 00000010H
?get_3d_transformation_matrix_fast@@YGXQAY02MMMM@Z ENDP	; get_3d_transformation_matrix_fast
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\maths\matrix.c
;	COMDAT ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z
_TEXT	SEGMENT
_cosrcosh$ = -40					; size = 4
_cosrsinh$ = -36					; size = 4
_sinrcosh$ = -32					; size = 4
_sinrsinh$ = -28					; size = 4
_cosr$ = -24						; size = 4
_sinr$ = -20						; size = 4
_cosp$ = -16						; size = 4
_sinp$ = -12						; size = 4
_cosh$ = -8						; size = 4
_sinh$ = -4						; size = 4
_m$ = 8							; size = 4
_heading$ = 12						; size = 4
_pitch$ = 16						; size = 4
_roll$ = 20						; size = 4
?get_3d_transformation_matrix@@YGXQAY02MMMM@Z PROC	; get_3d_transformation_matrix, COMDAT

; 98   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 99   : 
; 100  : 	float
; 101  : 		sinh,
; 102  : 		cosh,
; 103  : 		sinp,
; 104  : 		cosp,
; 105  : 		sinr,
; 106  : 		cosr,
; 107  : 		sinrsinh,
; 108  : 		sinrcosh,
; 109  : 		cosrsinh,
; 110  : 		cosrcosh;
; 111  : 
; 112  : 	sinh = sin ( heading );

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00019	d9 5d fc	 fstp	 DWORD PTR _sinh$[ebp]

; 113  : 	cosh = cos ( heading );

  0001c	51		 push	 ecx
  0001d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00022	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00027	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  0002c	d9 5d f8	 fstp	 DWORD PTR _cosh$[ebp]

; 114  : 
; 115  : 	sinp = sin ( pitch );

  0002f	51		 push	 ecx
  00030	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0003f	d9 5d f4	 fstp	 DWORD PTR _sinp$[ebp]

; 116  : 	cosp = cos ( pitch );

  00042	51		 push	 ecx
  00043	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00048	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004d	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00052	d9 5d f0	 fstp	 DWORD PTR _cosp$[ebp]

; 117  : 
; 118  : 	sinr = sin ( roll );

  00055	51		 push	 ecx
  00056	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0005b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00060	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00065	d9 5d ec	 fstp	 DWORD PTR _sinr$[ebp]

; 119  : 	cosr = cos ( roll );

  00068	51		 push	 ecx
  00069	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _roll$[ebp]
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00078	d9 5d e8	 fstp	 DWORD PTR _cosr$[ebp]

; 120  : 
; 121  : 	sinrsinh = sinr * sinh;

  0007b	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  00080	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  00085	f3 0f 11 45 e4	 movss	 DWORD PTR _sinrsinh$[ebp], xmm0

; 122  : 
; 123  : 	sinrcosh = sinr * cosh;

  0008a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  0008f	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  00094	f3 0f 11 45 e0	 movss	 DWORD PTR _sinrcosh$[ebp], xmm0

; 124  : 
; 125  : 	cosrsinh = cosr * sinh;

  00099	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  0009e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  000a3	f3 0f 11 45 dc	 movss	 DWORD PTR _cosrsinh$[ebp], xmm0

; 126  : 
; 127  : 	cosrcosh = cosr * cosh;

  000a8	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  000ad	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  000b2	f3 0f 11 45 d8	 movss	 DWORD PTR _cosrcosh$[ebp], xmm0

; 128  : 
; 129  : 	m [ 0 ] [ 0 ] = cosrcosh + ( sinrsinh * sinp );

  000b7	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  000bc	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  000c1	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _cosrcosh$[ebp]
  000c6	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000cb	6b c8 00	 imul	 ecx, eax, 0
  000ce	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000d1	ba 04 00 00 00	 mov	 edx, 4
  000d6	6b c2 00	 imul	 eax, edx, 0
  000d9	f3 0f 11 04 01	 movss	 DWORD PTR [ecx+eax], xmm0

; 130  : 
; 131  : 	m [ 0 ] [ 1 ] = -sinr * cosp;

  000de	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _sinr$[ebp]
  000e3	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  000ea	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  000ef	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000f4	6b c8 00	 imul	 ecx, eax, 0
  000f7	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  000fa	ba 04 00 00 00	 mov	 edx, 4
  000ff	c1 e2 00	 shl	 edx, 0
  00102	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 132  : 
; 133  : 	m [ 0 ] [ 2 ] = ( sinrcosh * sinp ) - cosrsinh;

  00107	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _sinrcosh$[ebp]
  0010c	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00111	f3 0f 5c 45 dc	 subss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  00116	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0011b	6b c8 00	 imul	 ecx, eax, 0
  0011e	03 4d 08	 add	 ecx, DWORD PTR _m$[ebp]
  00121	ba 04 00 00 00	 mov	 edx, 4
  00126	d1 e2		 shl	 edx, 1
  00128	f3 0f 11 04 11	 movss	 DWORD PTR [ecx+edx], xmm0

; 134  : 
; 135  : 	m [ 1 ] [ 0 ] = sinrcosh - ( cosrsinh * sinp );

  0012d	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _cosrsinh$[ebp]
  00132	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _sinp$[ebp]
  00137	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _sinrcosh$[ebp]
  0013c	f3 0f 5c c8	 subss	 xmm1, xmm0
  00140	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00145	c1 e0 00	 shl	 eax, 0
  00148	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0014b	b9 04 00 00 00	 mov	 ecx, 4
  00150	6b d1 00	 imul	 edx, ecx, 0
  00153	f3 0f 11 0c 10	 movss	 DWORD PTR [eax+edx], xmm1

; 136  : 
; 137  : 	m [ 1 ] [ 1 ] = cosr * cosp;

  00158	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _cosr$[ebp]
  0015d	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _cosp$[ebp]
  00162	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00167	c1 e0 00	 shl	 eax, 0
  0016a	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0016d	b9 04 00 00 00	 mov	 ecx, 4
  00172	c1 e1 00	 shl	 ecx, 0
  00175	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 138  : 
; 139  : 	m [ 1 ] [ 2 ] = -sinrsinh - ( cosrcosh * sinp );

  0017a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _sinrsinh$[ebp]
  0017f	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00186	f3 0f 10 4d d8	 movss	 xmm1, DWORD PTR _cosrcosh$[ebp]
  0018b	f3 0f 59 4d f4	 mulss	 xmm1, DWORD PTR _sinp$[ebp]
  00190	f3 0f 5c c1	 subss	 xmm0, xmm1
  00194	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00199	c1 e0 00	 shl	 eax, 0
  0019c	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  0019f	b9 04 00 00 00	 mov	 ecx, 4
  001a4	d1 e1		 shl	 ecx, 1
  001a6	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 140  : 
; 141  : 	m [ 2 ] [ 0 ] = cosp * sinh;

  001ab	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  001b0	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _sinh$[ebp]
  001b5	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001ba	d1 e0		 shl	 eax, 1
  001bc	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001bf	b9 04 00 00 00	 mov	 ecx, 4
  001c4	6b d1 00	 imul	 edx, ecx, 0
  001c7	f3 0f 11 04 10	 movss	 DWORD PTR [eax+edx], xmm0

; 142  : 
; 143  : 	m [ 2 ] [ 1 ] = sinp;

  001cc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001d1	d1 e0		 shl	 eax, 1
  001d3	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001d6	b9 04 00 00 00	 mov	 ecx, 4
  001db	c1 e1 00	 shl	 ecx, 0
  001de	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _sinp$[ebp]
  001e3	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 144  : 
; 145  : 	m [ 2 ] [ 2 ] = cosp * cosh;

  001e8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _cosp$[ebp]
  001ed	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _cosh$[ebp]
  001f2	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  001f7	d1 e0		 shl	 eax, 1
  001f9	03 45 08	 add	 eax, DWORD PTR _m$[ebp]
  001fc	b9 04 00 00 00	 mov	 ecx, 4
  00201	d1 e1		 shl	 ecx, 1
  00203	f3 0f 11 04 08	 movss	 DWORD PTR [eax+ecx], xmm0

; 146  : }

  00208	5f		 pop	 edi
  00209	5e		 pop	 esi
  0020a	5b		 pop	 ebx
  0020b	8b e5		 mov	 esp, ebp
  0020d	5d		 pop	 ebp
  0020e	c2 10 00	 ret	 16			; 00000010H
?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ENDP	; get_3d_transformation_matrix
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?atan2@@YGMMM@Z
_TEXT	SEGMENT
__Yx$ = 8						; size = 4
__Xx$ = 12						; size = 4
?atan2@@YGMMM@Z PROC					; atan2, COMDAT

; 56   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 57   : 	return (_CSTD atan2f(_Yx, _Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	51		 push	 ecx
  00015	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Yx$[ebp]
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 _atan2f
  00024	83 c4 08	 add	 esp, 8

; 58   : 	}

  00027	5f		 pop	 edi
  00028	5e		 pop	 esi
  00029	5b		 pop	 ebx
  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c2 08 00	 ret	 8
?atan2@@YGMMM@Z ENDP					; atan2
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?asin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?asin@@YGMM@Z PROC					; asin, COMDAT

; 36   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 37   : 	return (_CSTD asinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _asinf
  00019	83 c4 04	 add	 esp, 4

; 38   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?asin@@YGMM@Z ENDP					; asin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _atan2f
_TEXT	SEGMENT
tv74 = -68						; size = 4
__Y$ = 8						; size = 4
__X$ = 12						; size = 4
_atan2f	PROC						; COMDAT

; 633  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 634  :             return (float)atan2(_Y, _X);

  00009	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __Y$[ebp]
  0001b	83 ec 08	 sub	 esp, 8
  0001e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00023	e8 00 00 00 00	 call	 _atan2
  00028	83 c4 10	 add	 esp, 16			; 00000010H
  0002b	d9 5d bc	 fstp	 DWORD PTR tv74[ebp]
  0002e	d9 45 bc	 fld	 DWORD PTR tv74[ebp]

; 635  :         }

  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx
  00034	8b e5		 mov	 esp, ebp
  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
_atan2f	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _asinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_asinf	PROC						; COMDAT

; 628  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  :             return (float)asin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _asin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 630  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_asinf	ENDP
_TEXT	ENDS
END
