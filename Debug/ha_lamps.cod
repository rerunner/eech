; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A		; havoc_lamps
PUBLIC	??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ ; `string'
_BSS	SEGMENT
?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A DB 010H DUP (?)	; havoc_lamps
_BSS	ENDS
;	COMDAT ??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@
CONST	SEGMENT
??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ DB 'Cannot draw lamps '
	DB	'on panel', 00H				; `string'
CONST	ENDS
PUBLIC	?initialise_havoc_lamps@@YGXXZ			; initialise_havoc_lamps
PUBLIC	?draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_havoc_weapons_management_panel_lamps
PUBLIC	?draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_havoc_status_panel_lamps
PUBLIC	?draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z ; draw_havoc_threat_warning_display
PUBLIC	?draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z ; draw_havoc_master_caution_lamp
PUBLIC	?draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ; draw_havoc_warning_panel_lamps
PUBLIC	?draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z	; draw_havoc_radio_lamp
PUBLIC	?draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z	; draw_havoc_oil_gauges
PUBLIC	?draw_overlaid_threat_warning_display@@YGXHH@Z	; draw_overlaid_threat_warning_display
PUBLIC	??_C@_0EP@HKJPNIE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4018000000000000
PUBLIC	__real@401c000000000000
PUBLIC	__real@4020000000000000
PUBLIC	__real@4022000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4026000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@402a000000000000
PUBLIC	__real@402c000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@4030000000000000
PUBLIC	__real@4031000000000000
PUBLIC	__real@4032000000000000
PUBLIC	__real@4033000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4035000000000000
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?lock_screen@@YGHPAUSCREEN@@@Z:PROC		; lock_screen
EXTRN	?unlock_screen@@YGHPAUSCREEN@@@Z:PROC		; unlock_screen
EXTRN	?blit_rgb_graphic@@YGXPBEHH@Z:PROC		; blit_rgb_graphic
EXTRN	?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z:PROC ; blit_rgb_alpha_masked_sprite
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?application_video_colourdepth@@3HA:DWORD	; application_video_colourdepth
EXTRN	?active_screen@@3PAUSCREEN@@A:DWORD		; active_screen
EXTRN	?graphics_files@@3PAUFILE_DATA@@A:BYTE		; graphics_files
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?ix_640_480@@3HA:DWORD				; ix_640_480
EXTRN	?iy_640_480@@3HA:DWORD				; iy_640_480
EXTRN	?test_cockpit_instruments@@3HA:DWORD		; test_cockpit_instruments
EXTRN	?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A:DWORD ; base_cockpit_graphics_file
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A DB 01cH DUP (?) ; sprite_values
?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_weapons_management_panel_lamps'::`5'::timer
?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_status_panel_lamps'::`5'::timer
?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_threat_warning_display'::`6'::timer
?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_threat_warning_display'::`36'::timer
?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_threat_warning_display'::`122'::timer
?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_threat_warning_display'::`188'::timer
?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_master_caution_lamp'::`5'::timer
?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_warning_panel_lamps'::`5'::timer
?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_radio_lamp'::`5'::timer
?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA DD 01H DUP (?) ; `draw_havoc_oil_gauges'::`5'::timer
?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA DD 01H DUP (?) ; `draw_overlaid_threat_warning_display'::`18'::timer
?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA DD 01H DUP (?) ; `draw_overlaid_threat_warning_display'::`48'::timer
?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA DD 01H DUP (?) ; `draw_overlaid_threat_warning_display'[::G]::timer
?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA DD 01H DUP (?) ; `draw_overlaid_threat_warning_display'::`200'::timer
_BSS	ENDS
;	COMDAT __real@4035000000000000
CONST	SEGMENT
__real@4035000000000000 DQ 04035000000000000r	; 21
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4033000000000000
CONST	SEGMENT
__real@4033000000000000 DQ 04033000000000000r	; 19
CONST	ENDS
;	COMDAT __real@4032000000000000
CONST	SEGMENT
__real@4032000000000000 DQ 04032000000000000r	; 18
CONST	ENDS
;	COMDAT __real@4031000000000000
CONST	SEGMENT
__real@4031000000000000 DQ 04031000000000000r	; 17
CONST	ENDS
;	COMDAT __real@4030000000000000
CONST	SEGMENT
__real@4030000000000000 DQ 04030000000000000r	; 16
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@402c000000000000
CONST	SEGMENT
__real@402c000000000000 DQ 0402c000000000000r	; 14
CONST	ENDS
;	COMDAT __real@402a000000000000
CONST	SEGMENT
__real@402a000000000000 DQ 0402a000000000000r	; 13
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4026000000000000
CONST	SEGMENT
__real@4026000000000000 DQ 04026000000000000r	; 11
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4022000000000000
CONST	SEGMENT
__real@4022000000000000 DQ 04022000000000000r	; 9
CONST	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
CONST	ENDS
;	COMDAT __real@401c000000000000
CONST	SEGMENT
__real@401c000000000000 DQ 0401c000000000000r	; 7
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT ??_C@_0EP@HKJPNIE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EP@HKJPNIE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nhv'
	DB	'90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_la'
	DB	'mps.c', 00H					; `string'
CONST	ENDS
_DATA	SEGMENT
?lamp_error@@3PBDB DD FLAT:??_C@_0BL@OAPACHOC@Cannot?5draw?5lamps?5on?5panel@ ; lamp_error
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_overlaid_threat_warning_display@@YGXHH@Z
_TEXT	SEGMENT
tv83 = -84						; size = 4
tv77 = -80						; size = 4
tv70 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_x_org$ = 8						; size = 4
_y_org$ = 12						; size = 4
?draw_overlaid_threat_warning_display@@YGXHH@Z PROC	; draw_overlaid_threat_warning_display, COMDAT

; 1866 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1867 : 	unsigned char
; 1868 : 		*sprite_data,
; 1869 : 		*mask_data;
; 1870 : 
; 1871 : 	if (application_video_colourdepth != 16)

  00009	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR ?application_video_colourdepth@@3HA, 16 ; application_video_colourdepth, 00000010H
  00010	74 05		 je	 SHORT $LN4@draw_overl

; 1872 : 	{
; 1873 : 		return;

  00012	e9 c5 22 00 00	 jmp	 $LN1@draw_overl
$LN4@draw_overl:

; 1874 : 	}
; 1875 : 
; 1876 : 	////////////////////////////////////////
; 1877 : 	//
; 1878 : 	// select cockpit graphics wrt time of day - required here for hi-res virtual cockpits
; 1879 : 	//
; 1880 : 
; 1881 : 	switch (get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE))

  00017	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  0001e	74 0c		 je	 SHORT $LN155@draw_overl
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  0002a	eb 1d		 jmp	 SHORT $LN156@draw_overl
$LN155@draw_overl:
  0002c	68 59 07 00 00	 push	 1881			; 00000759H
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@HKJPNIE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003c	52		 push	 edx
  0003d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00042	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN156@draw_overl:
  00049	b8 01 00 00 00	 mov	 eax, 1
  0004e	85 c0		 test	 eax, eax
  00050	74 09		 je	 SHORT $LN157@draw_overl
  00052	c7 45 b0 27 00
	00 00		 mov	 DWORD PTR tv77[ebp], 39	; 00000027H
  00059	eb 1d		 jmp	 SHORT $LN158@draw_overl
$LN157@draw_overl:
  0005b	68 59 07 00 00	 push	 1881			; 00000759H
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@HKJPNIE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00071	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN158@draw_overl:
  00078	6a 27		 push	 39			; 00000027H
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00080	52		 push	 edx
  00081	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv70[ebp], 1116
  00088	8b 4d b0	 mov	 ecx, DWORD PTR tv77[ebp]
  0008b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00092	ff d2		 call	 edx
  00094	89 45 ac	 mov	 DWORD PTR tv83[ebp], eax
  00097	83 7d ac 03	 cmp	 DWORD PTR tv83[ebp], 3
  0009b	77 38		 ja	 SHORT $LN2@draw_overl
  0009d	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000a0	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN159@draw_overl[eax*4]
$LN5@draw_overl:

; 1882 : 	{
; 1883 : 		case DAY_SEGMENT_TYPE_DAWN:
; 1884 : 		{
; 1885 : 			base_cockpit_graphics_file = GRAPHICS_COCKPITS_HAVOC_LEVEL2_BASE;

  000a7	c7 05 00 00 00
	00 e8 00 00 00	 mov	 DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A, 232 ; base_cockpit_graphics_file, 000000e8H

; 1886 : 
; 1887 : 			break;

  000b1	eb 22		 jmp	 SHORT $LN2@draw_overl
$LN6@draw_overl:

; 1888 : 		}
; 1889 : 		case DAY_SEGMENT_TYPE_DAY:
; 1890 : 		{
; 1891 : 			base_cockpit_graphics_file = GRAPHICS_COCKPITS_HAVOC_LEVEL1_BASE;

  000b3	c7 05 00 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A, 186 ; base_cockpit_graphics_file, 000000baH

; 1892 : 
; 1893 : 			break;

  000bd	eb 16		 jmp	 SHORT $LN2@draw_overl
$LN7@draw_overl:

; 1894 : 		}
; 1895 : 		case DAY_SEGMENT_TYPE_DUSK:
; 1896 : 		{
; 1897 : 			base_cockpit_graphics_file = GRAPHICS_COCKPITS_HAVOC_LEVEL2_BASE;

  000bf	c7 05 00 00 00
	00 e8 00 00 00	 mov	 DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A, 232 ; base_cockpit_graphics_file, 000000e8H

; 1898 : 
; 1899 : 			break;

  000c9	eb 0a		 jmp	 SHORT $LN2@draw_overl
$LN8@draw_overl:

; 1900 : 		}
; 1901 : 		case DAY_SEGMENT_TYPE_NIGHT:
; 1902 : 		{
; 1903 : 			base_cockpit_graphics_file = GRAPHICS_COCKPITS_HAVOC_LEVEL3_BASE;

  000cb	c7 05 00 00 00
	00 16 01 00 00	 mov	 DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A, 278 ; base_cockpit_graphics_file, 00000116H
$LN2@draw_overl:

; 1904 : 
; 1905 : 			break;
; 1906 : 		}
; 1907 : 	}
; 1908 : 
; 1909 : 	#if DEMO_VERSION
; 1910 : 
; 1911 : 	base_cockpit_graphics_file = GRAPHICS_COCKPITS_HAVOC_LEVEL1_BASE;
; 1912 : 
; 1913 : 	#endif
; 1914 : 
; 1915 : 	//
; 1916 : 	////////////////////////////////////////
; 1917 : 
; 1918 : 	if (lock_screen (active_screen))

  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?lock_screen@@YGHPAUSCREEN@@@Z ; lock_screen
  000e0	85 c0		 test	 eax, eax
  000e2	0f 84 f4 21 00
	00		 je	 $LN9@draw_overl

; 1919 : 	{
; 1920 : 		blit_rgb_graphic (get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_TWD), x_org, y_org);

  000e8	8b 45 0c	 mov	 eax, DWORD PTR _y_org$[ebp]
  000eb	50		 push	 eax
  000ec	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  000ef	51		 push	 ecx
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  000f6	83 c2 2d	 add	 edx, 45			; 0000002dH
  000f9	6b c2 28	 imul	 eax, edx, 40
  000fc	8b 88 1c 00 00
	00		 mov	 ecx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[eax+28]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 ?blit_rgb_graphic@@YGXPBEHH@Z ; blit_rgb_graphic

; 1921 : 
; 1922 : 		sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0010d	83 c0 2b	 add	 eax, 43			; 0000002bH
  00110	6b c8 28	 imul	 ecx, eax, 40
  00113	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00119	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 1923 : 
; 1924 : 		mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0011c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00121	83 c0 2c	 add	 eax, 44			; 0000002cH
  00124	6b c8 28	 imul	 ecx, eax, 40
  00127	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0012d	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 1925 : 
; 1926 : 		if (test_cockpit_instruments)

  00130	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00137	0f 84 6c 0d 00
	00		 je	 $LN108@draw_overl

; 1927 : 		{
; 1928 : 			////////////////////////////////////////
; 1929 : 			//
; 1930 : 			// test radar type lamps
; 1931 : 			//
; 1932 : 			////////////////////////////////////////
; 1933 : 			{
; 1934 : 				static float
; 1935 : 					timer = 0.0;
; 1936 : 
; 1937 : 				havoc_lamps.threat_warning_radar_type_1 = 0;

  0013d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00142	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  00147	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1938 : 				havoc_lamps.threat_warning_radar_type_2 = 0;

  0014c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00151	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  00156	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1939 : 				havoc_lamps.threat_warning_radar_type_3 = 0;

  0015b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00160	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  00165	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1940 : 				havoc_lamps.threat_warning_radar_type_4 = 0;

  0016a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0016f	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  00174	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1941 : 				havoc_lamps.threat_warning_radar_type_5 = 0;

  00179	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0017e	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  00183	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1942 : 				havoc_lamps.threat_warning_radar_type_6 = 0;

  00188	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0018d	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  00192	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1943 : 
; 1944 : 				timer += get_delta_time ();

  00197	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0019f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  001a7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0

; 1945 : 
; 1946 : 				if (timer < (ONE_SECOND * 1.0))

  001af	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  001b7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  001bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  001c3	76 14		 jbe	 SHORT $LN11@draw_overl

; 1947 : 				{
; 1948 : 					havoc_lamps.threat_warning_radar_type_1 = 1;

  001c5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001ca	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  001cf	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  001d4	e9 4c 01 00 00	 jmp	 $LN24@draw_overl
$LN11@draw_overl:

; 1949 : 				}
; 1950 : 				else if (timer < (ONE_SECOND * 2.0))

  001d9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  001e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  001e9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001ed	76 14		 jbe	 SHORT $LN13@draw_overl

; 1951 : 				{
; 1952 : 					havoc_lamps.threat_warning_radar_type_2 = 1;

  001ef	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001f4	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  001f9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  001fe	e9 22 01 00 00	 jmp	 $LN24@draw_overl
$LN13@draw_overl:

; 1953 : 				}
; 1954 : 				else if (timer < (ONE_SECOND * 3.0))

  00203	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0020b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00213	66 0f 2f c8	 comisd	 xmm1, xmm0
  00217	76 14		 jbe	 SHORT $LN15@draw_overl

; 1955 : 				{
; 1956 : 					havoc_lamps.threat_warning_radar_type_3 = 1;

  00219	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0021e	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00223	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00228	e9 f8 00 00 00	 jmp	 $LN24@draw_overl
$LN15@draw_overl:

; 1957 : 				}
; 1958 : 				else if (timer < (ONE_SECOND * 4.0))

  0022d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00235	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0023d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00241	76 14		 jbe	 SHORT $LN17@draw_overl

; 1959 : 				{
; 1960 : 					havoc_lamps.threat_warning_radar_type_4 = 1;

  00243	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00248	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  0024d	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00252	e9 ce 00 00 00	 jmp	 $LN24@draw_overl
$LN17@draw_overl:

; 1961 : 				}
; 1962 : 				else if (timer < (ONE_SECOND * 5.0))

  00257	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0025f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00267	66 0f 2f c8	 comisd	 xmm1, xmm0
  0026b	76 14		 jbe	 SHORT $LN19@draw_overl

; 1963 : 				{
; 1964 : 					havoc_lamps.threat_warning_radar_type_5 = 1;

  0026d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00272	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00277	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0027c	e9 a4 00 00 00	 jmp	 $LN24@draw_overl
$LN19@draw_overl:

; 1965 : 				}
; 1966 : 				else if (timer < (ONE_SECOND * 6.0))

  00281	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00289	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00291	66 0f 2f c8	 comisd	 xmm1, xmm0
  00295	76 11		 jbe	 SHORT $LN21@draw_overl

; 1967 : 				{
; 1968 : 					havoc_lamps.threat_warning_radar_type_6 = 1;

  00297	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0029c	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  002a1	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  002a6	eb 7d		 jmp	 SHORT $LN24@draw_overl
$LN21@draw_overl:

; 1969 : 				}
; 1970 : 				else if (timer < (ONE_SECOND * 7.0))

  002a8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  002b0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  002b8	66 0f 2f c8	 comisd	 xmm1, xmm0
  002bc	76 5c		 jbe	 SHORT $LN23@draw_overl

; 1971 : 				{
; 1972 : 					havoc_lamps.threat_warning_radar_type_1 = 1;

  002be	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002c3	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  002c8	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1973 : 					havoc_lamps.threat_warning_radar_type_2 = 1;

  002cd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002d2	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  002d7	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1974 : 					havoc_lamps.threat_warning_radar_type_3 = 1;

  002dc	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002e1	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  002e6	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1975 : 					havoc_lamps.threat_warning_radar_type_4 = 1;

  002eb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002f0	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  002f5	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1976 : 					havoc_lamps.threat_warning_radar_type_5 = 1;

  002fa	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002ff	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00304	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1977 : 					havoc_lamps.threat_warning_radar_type_6 = 1;

  00309	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0030e	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  00313	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 1978 : 				}
; 1979 : 				else

  00318	eb 0b		 jmp	 SHORT $LN24@draw_overl
$LN23@draw_overl:

; 1980 : 				{
; 1981 : 					timer = 0.0;

  0031a	0f 57 c0	 xorps	 xmm0, xmm0
  0031d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?BC@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0
$LN24@draw_overl:

; 1982 : 				}
; 1983 : 			}
; 1984 : 			////////////////////////////////////////
; 1985 : 			//
; 1986 : 			// test radar bearing lamps
; 1987 : 			//
; 1988 : 			////////////////////////////////////////
; 1989 : 			{
; 1990 : 				static float
; 1991 : 					timer = 0.0;
; 1992 : 
; 1993 : 				havoc_lamps.threat_warning_bearing_lh_rear_close_range = 0;

  00325	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0032a	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  0032f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1994 : 				havoc_lamps.threat_warning_bearing_lh_90_close_range = 0;

  00334	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00339	83 e0 fb	 and	 eax, -5			; fffffffbH
  0033c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1995 : 				havoc_lamps.threat_warning_bearing_lh_67_close_range = 0;

  00341	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00346	83 e0 f7	 and	 eax, -9			; fffffff7H
  00349	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1996 : 				havoc_lamps.threat_warning_bearing_lh_45_close_range = 0;

  0034e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00353	83 e0 ef	 and	 eax, -17		; ffffffefH
  00356	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1997 : 				havoc_lamps.threat_warning_bearing_lh_22_close_range = 0;

  0035b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00360	83 e0 df	 and	 eax, -33		; ffffffdfH
  00363	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1998 : 				havoc_lamps.threat_warning_bearing_rh_22_close_range = 0;

  00368	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0036d	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00370	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1999 : 				havoc_lamps.threat_warning_bearing_rh_45_close_range = 0;

  00375	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0037a	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  0037f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2000 : 				havoc_lamps.threat_warning_bearing_rh_67_close_range = 0;

  00384	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00389	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  0038e	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2001 : 				havoc_lamps.threat_warning_bearing_rh_90_close_range = 0;

  00393	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00398	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  0039d	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2002 : 				havoc_lamps.threat_warning_bearing_rh_rear_close_range = 0;

  003a2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003a7	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  003ac	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2003 : 				havoc_lamps.threat_warning_bearing_lh_rear = 0;

  003b1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  003b6	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  003bb	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2004 : 				havoc_lamps.threat_warning_bearing_lh_90 = 0;

  003c0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003c5	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  003ca	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2005 : 				havoc_lamps.threat_warning_bearing_lh_67 = 0;

  003cf	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003d4	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  003d9	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2006 : 				havoc_lamps.threat_warning_bearing_lh_45 = 0;

  003de	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003e3	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  003e8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2007 : 				havoc_lamps.threat_warning_bearing_lh_22 = 0;

  003ed	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003f2	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  003f7	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2008 : 				havoc_lamps.threat_warning_bearing_rh_22 = 0;

  003fc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00401	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  00406	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2009 : 				havoc_lamps.threat_warning_bearing_rh_45 = 0;

  0040b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00410	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  00415	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2010 : 				havoc_lamps.threat_warning_bearing_rh_67 = 0;

  0041a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0041f	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  00424	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2011 : 				havoc_lamps.threat_warning_bearing_rh_90 = 0;

  00429	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0042e	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  00433	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2012 : 				havoc_lamps.threat_warning_bearing_rh_rear = 0;

  00438	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0043d	25 ff ff fb ff	 and	 eax, -262145		; fffbffffH
  00442	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2013 : 
; 2014 : 				timer += get_delta_time ();

  00447	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0044f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00457	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0

; 2015 : 
; 2016 : 				if (timer < (ONE_SECOND * 1.0))

  0045f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00467	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0046f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00473	76 14		 jbe	 SHORT $LN25@draw_overl

; 2017 : 				{
; 2018 : 					havoc_lamps.threat_warning_bearing_lh_rear_close_range = 1;

  00475	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0047a	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  0047f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00484	e9 5d 04 00 00	 jmp	 $LN66@draw_overl
$LN25@draw_overl:

; 2019 : 				}
; 2020 : 				else if (timer < (ONE_SECOND * 2.0))

  00489	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00491	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00499	66 0f 2f c8	 comisd	 xmm1, xmm0
  0049d	76 12		 jbe	 SHORT $LN27@draw_overl

; 2021 : 				{
; 2022 : 					havoc_lamps.threat_warning_bearing_lh_90_close_range = 1;

  0049f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  004a4	83 c8 04	 or	 eax, 4
  004a7	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004ac	e9 35 04 00 00	 jmp	 $LN66@draw_overl
$LN27@draw_overl:

; 2023 : 				}
; 2024 : 				else if (timer < (ONE_SECOND * 3.0))

  004b1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  004b9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  004c1	66 0f 2f c8	 comisd	 xmm1, xmm0
  004c5	76 12		 jbe	 SHORT $LN29@draw_overl

; 2025 : 				{
; 2026 : 					havoc_lamps.threat_warning_bearing_lh_67_close_range = 1;

  004c7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  004cc	83 c8 08	 or	 eax, 8
  004cf	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004d4	e9 0d 04 00 00	 jmp	 $LN66@draw_overl
$LN29@draw_overl:

; 2027 : 				}
; 2028 : 				else if (timer < (ONE_SECOND * 4.0))

  004d9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  004e1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  004e9	66 0f 2f c8	 comisd	 xmm1, xmm0
  004ed	76 12		 jbe	 SHORT $LN31@draw_overl

; 2029 : 				{
; 2030 : 					havoc_lamps.threat_warning_bearing_lh_45_close_range = 1;

  004ef	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  004f4	83 c8 10	 or	 eax, 16			; 00000010H
  004f7	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004fc	e9 e5 03 00 00	 jmp	 $LN66@draw_overl
$LN31@draw_overl:

; 2031 : 				}
; 2032 : 				else if (timer < (ONE_SECOND * 5.0))

  00501	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00509	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00511	66 0f 2f c8	 comisd	 xmm1, xmm0
  00515	76 12		 jbe	 SHORT $LN33@draw_overl

; 2033 : 				{
; 2034 : 					havoc_lamps.threat_warning_bearing_lh_22_close_range = 1;

  00517	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0051c	83 c8 20	 or	 eax, 32			; 00000020H
  0051f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00524	e9 bd 03 00 00	 jmp	 $LN66@draw_overl
$LN33@draw_overl:

; 2035 : 				}
; 2036 : 				else if (timer < (ONE_SECOND * 6.0))

  00529	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00531	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00539	66 0f 2f c8	 comisd	 xmm1, xmm0
  0053d	76 12		 jbe	 SHORT $LN35@draw_overl

; 2037 : 				{
; 2038 : 					havoc_lamps.threat_warning_bearing_rh_22_close_range = 1;

  0053f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00544	83 c8 40	 or	 eax, 64			; 00000040H
  00547	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0054c	e9 95 03 00 00	 jmp	 $LN66@draw_overl
$LN35@draw_overl:

; 2039 : 				}
; 2040 : 				else if (timer < (ONE_SECOND * 7.0))

  00551	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00559	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  00561	66 0f 2f c8	 comisd	 xmm1, xmm0
  00565	76 14		 jbe	 SHORT $LN37@draw_overl

; 2041 : 				{
; 2042 : 					havoc_lamps.threat_warning_bearing_rh_45_close_range = 1;

  00567	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0056c	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00571	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00576	e9 6b 03 00 00	 jmp	 $LN66@draw_overl
$LN37@draw_overl:

; 2043 : 				}
; 2044 : 				else if (timer < (ONE_SECOND * 8.0))

  0057b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00583	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  0058b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0058f	76 14		 jbe	 SHORT $LN39@draw_overl

; 2045 : 				{
; 2046 : 					havoc_lamps.threat_warning_bearing_rh_67_close_range = 1;

  00591	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00596	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  0059b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  005a0	e9 41 03 00 00	 jmp	 $LN66@draw_overl
$LN39@draw_overl:

; 2047 : 				}
; 2048 : 				else if (timer < (ONE_SECOND * 9.0))

  005a5	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  005ad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  005b5	66 0f 2f c8	 comisd	 xmm1, xmm0
  005b9	76 14		 jbe	 SHORT $LN41@draw_overl

; 2049 : 				{
; 2050 : 					havoc_lamps.threat_warning_bearing_rh_90_close_range = 1;

  005bb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  005c0	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  005c5	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  005ca	e9 17 03 00 00	 jmp	 $LN66@draw_overl
$LN41@draw_overl:

; 2051 : 				}
; 2052 : 				else if (timer < (ONE_SECOND * 10.0))

  005cf	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  005d7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  005df	66 0f 2f c8	 comisd	 xmm1, xmm0
  005e3	76 14		 jbe	 SHORT $LN43@draw_overl

; 2053 : 				{
; 2054 : 					havoc_lamps.threat_warning_bearing_rh_rear_close_range = 1;

  005e5	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  005ea	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  005ef	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  005f4	e9 ed 02 00 00	 jmp	 $LN66@draw_overl
$LN43@draw_overl:

; 2055 : 				}
; 2056 : 				else if (timer < (ONE_SECOND * 11.0))

  005f9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00601	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  00609	66 0f 2f c8	 comisd	 xmm1, xmm0
  0060d	76 14		 jbe	 SHORT $LN45@draw_overl

; 2057 : 				{
; 2058 : 					havoc_lamps.threat_warning_bearing_lh_rear = 1;

  0060f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00614	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  00619	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0061e	e9 c3 02 00 00	 jmp	 $LN66@draw_overl
$LN45@draw_overl:

; 2059 : 				}
; 2060 : 				else if (timer < (ONE_SECOND * 12.0))

  00623	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0062b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  00633	66 0f 2f c8	 comisd	 xmm1, xmm0
  00637	76 14		 jbe	 SHORT $LN47@draw_overl

; 2061 : 				{
; 2062 : 					havoc_lamps.threat_warning_bearing_lh_90 = 1;

  00639	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0063e	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00643	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00648	e9 99 02 00 00	 jmp	 $LN66@draw_overl
$LN47@draw_overl:

; 2063 : 				}
; 2064 : 				else if (timer < (ONE_SECOND * 13.0))

  0064d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00655	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  0065d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00661	76 14		 jbe	 SHORT $LN49@draw_overl

; 2065 : 				{
; 2066 : 					havoc_lamps.threat_warning_bearing_lh_67 = 1;

  00663	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00668	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0066d	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00672	e9 6f 02 00 00	 jmp	 $LN66@draw_overl
$LN49@draw_overl:

; 2067 : 				}
; 2068 : 				else if (timer < (ONE_SECOND * 14.0))

  00677	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0067f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  00687	66 0f 2f c8	 comisd	 xmm1, xmm0
  0068b	76 14		 jbe	 SHORT $LN51@draw_overl

; 2069 : 				{
; 2070 : 					havoc_lamps.threat_warning_bearing_lh_45 = 1;

  0068d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00692	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  00697	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0069c	e9 45 02 00 00	 jmp	 $LN66@draw_overl
$LN51@draw_overl:

; 2071 : 				}
; 2072 : 				else if (timer < (ONE_SECOND * 15.0))

  006a1	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  006a9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  006b1	66 0f 2f c8	 comisd	 xmm1, xmm0
  006b5	76 14		 jbe	 SHORT $LN53@draw_overl

; 2073 : 				{
; 2074 : 					havoc_lamps.threat_warning_bearing_lh_22 = 1;

  006b7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006bc	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  006c1	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  006c6	e9 1b 02 00 00	 jmp	 $LN66@draw_overl
$LN53@draw_overl:

; 2075 : 				}
; 2076 : 				else if (timer < (ONE_SECOND * 16.0))

  006cb	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  006d3	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  006db	66 0f 2f c8	 comisd	 xmm1, xmm0
  006df	76 14		 jbe	 SHORT $LN55@draw_overl

; 2077 : 				{
; 2078 : 					havoc_lamps.threat_warning_bearing_rh_22 = 1;

  006e1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006e6	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  006eb	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  006f0	e9 f1 01 00 00	 jmp	 $LN66@draw_overl
$LN55@draw_overl:

; 2079 : 				}
; 2080 : 				else if (timer < (ONE_SECOND * 17.0))

  006f5	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  006fd	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4031000000000000
  00705	66 0f 2f c8	 comisd	 xmm1, xmm0
  00709	76 14		 jbe	 SHORT $LN57@draw_overl

; 2081 : 				{
; 2082 : 					havoc_lamps.threat_warning_bearing_rh_45 = 1;

  0070b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00710	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00715	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0071a	e9 c7 01 00 00	 jmp	 $LN66@draw_overl
$LN57@draw_overl:

; 2083 : 				}
; 2084 : 				else if (timer < (ONE_SECOND * 18.0))

  0071f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00727	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4032000000000000
  0072f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00733	76 14		 jbe	 SHORT $LN59@draw_overl

; 2085 : 				{
; 2086 : 					havoc_lamps.threat_warning_bearing_rh_67 = 1;

  00735	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0073a	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  0073f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00744	e9 9d 01 00 00	 jmp	 $LN66@draw_overl
$LN59@draw_overl:

; 2087 : 				}
; 2088 : 				else if (timer < (ONE_SECOND * 19.0))

  00749	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00751	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4033000000000000
  00759	66 0f 2f c8	 comisd	 xmm1, xmm0
  0075d	76 14		 jbe	 SHORT $LN61@draw_overl

; 2089 : 				{
; 2090 : 					havoc_lamps.threat_warning_bearing_rh_90 = 1;

  0075f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00764	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  00769	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0076e	e9 73 01 00 00	 jmp	 $LN66@draw_overl
$LN61@draw_overl:

; 2091 : 				}
; 2092 : 				else if (timer < (ONE_SECOND * 20.0))

  00773	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  0077b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4034000000000000
  00783	66 0f 2f c8	 comisd	 xmm1, xmm0
  00787	76 14		 jbe	 SHORT $LN63@draw_overl

; 2093 : 				{
; 2094 : 					havoc_lamps.threat_warning_bearing_rh_rear = 1;

  00789	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0078e	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00793	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00798	e9 49 01 00 00	 jmp	 $LN66@draw_overl
$LN63@draw_overl:

; 2095 : 				}
; 2096 : 				else if (timer < (ONE_SECOND * 21.0))

  0079d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  007a5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4035000000000000
  007ad	66 0f 2f c8	 comisd	 xmm1, xmm0
  007b1	0f 86 24 01 00
	00		 jbe	 $LN65@draw_overl

; 2097 : 				{
; 2098 : 					havoc_lamps.threat_warning_bearing_lh_rear_close_range = 1;

  007b7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007bc	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  007c1	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2099 : 					havoc_lamps.threat_warning_bearing_lh_90_close_range = 1;

  007c6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007cb	83 c8 04	 or	 eax, 4
  007ce	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2100 : 					havoc_lamps.threat_warning_bearing_lh_67_close_range = 1;

  007d3	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007d8	83 c8 08	 or	 eax, 8
  007db	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2101 : 					havoc_lamps.threat_warning_bearing_lh_45_close_range = 1;

  007e0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007e5	83 c8 10	 or	 eax, 16			; 00000010H
  007e8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2102 : 					havoc_lamps.threat_warning_bearing_lh_22_close_range = 1;

  007ed	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007f2	83 c8 20	 or	 eax, 32			; 00000020H
  007f5	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2103 : 					havoc_lamps.threat_warning_bearing_rh_22_close_range = 1;

  007fa	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007ff	83 c8 40	 or	 eax, 64			; 00000040H
  00802	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2104 : 					havoc_lamps.threat_warning_bearing_rh_45_close_range = 1;

  00807	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0080c	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00811	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2105 : 					havoc_lamps.threat_warning_bearing_rh_67_close_range = 1;

  00816	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0081b	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  00820	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2106 : 					havoc_lamps.threat_warning_bearing_rh_90_close_range = 1;

  00825	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0082a	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  0082f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2107 : 					havoc_lamps.threat_warning_bearing_rh_rear_close_range = 1;

  00834	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00839	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  0083e	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2108 : 					havoc_lamps.threat_warning_bearing_lh_rear = 1;

  00843	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00848	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  0084d	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2109 : 					havoc_lamps.threat_warning_bearing_lh_90 = 1;

  00852	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00857	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  0085c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2110 : 					havoc_lamps.threat_warning_bearing_lh_67 = 1;

  00861	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00866	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0086b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2111 : 					havoc_lamps.threat_warning_bearing_lh_45 = 1;

  00870	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00875	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  0087a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2112 : 					havoc_lamps.threat_warning_bearing_lh_22 = 1;

  0087f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00884	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00889	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2113 : 					havoc_lamps.threat_warning_bearing_rh_22 = 1;

  0088e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00893	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00898	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2114 : 					havoc_lamps.threat_warning_bearing_rh_45 = 1;

  0089d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008a2	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  008a7	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2115 : 					havoc_lamps.threat_warning_bearing_rh_67 = 1;

  008ac	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008b1	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  008b6	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2116 : 					havoc_lamps.threat_warning_bearing_rh_90 = 1;

  008bb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008c0	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  008c5	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2117 : 					havoc_lamps.threat_warning_bearing_rh_rear = 1;

  008ca	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008cf	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  008d4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2118 : 				}
; 2119 : 				else

  008d9	eb 0b		 jmp	 SHORT $LN66@draw_overl
$LN65@draw_overl:

; 2120 : 				{
; 2121 : 					timer = 0.0;

  008db	0f 57 c0	 xorps	 xmm0, xmm0
  008de	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?DA@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0
$LN66@draw_overl:

; 2122 : 				}
; 2123 : 			}
; 2124 : 			////////////////////////////////////////
; 2125 : 			//
; 2126 : 			// test close range lamps
; 2127 : 			//
; 2128 : 			////////////////////////////////////////
; 2129 : 			{
; 2130 : 				static float
; 2131 : 					timer = 0.0;
; 2132 : 
; 2133 : 				havoc_lamps.threat_warning_close_range_1 = 0;

  008e6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008eb	25 ff ff f7 ff	 and	 eax, -524289		; fff7ffffH
  008f0	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2134 : 				havoc_lamps.threat_warning_close_range_2 = 0;

  008f5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008fa	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  008ff	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2135 : 				havoc_lamps.threat_warning_close_range_3 = 0;

  00904	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00909	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  0090e	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2136 : 				havoc_lamps.threat_warning_close_range_4 = 0;

  00913	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00918	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  0091d	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2137 : 				havoc_lamps.threat_warning_close_range_5 = 0;

  00922	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00927	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  0092c	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2138 : 				havoc_lamps.threat_warning_close_range_6 = 0;

  00931	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00936	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  0093b	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2139 : 				havoc_lamps.threat_warning_close_range_7 = 0;

  00940	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00945	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  0094a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2140 : 				havoc_lamps.threat_warning_close_range_8 = 0;

  0094f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00954	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  00959	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2141 : 				havoc_lamps.threat_warning_close_range_9 = 0;

  0095e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00963	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00968	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2142 : 				havoc_lamps.threat_warning_close_range_10 = 0;

  0096d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00972	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  00977	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2143 : 				havoc_lamps.threat_warning_close_range_11 = 0;

  0097c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00981	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  00986	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2144 : 				havoc_lamps.threat_warning_close_range_12 = 0;

  0098b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00990	25 ff ff ff bf	 and	 eax, -1073741825	; bfffffffH
  00995	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2145 : 				havoc_lamps.threat_warning_close_range_13 = 0;

  0099a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0099f	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  009a4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2146 : 				havoc_lamps.threat_warning_close_range_14 = 0;

  009a9	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  009ae	83 e0 fe	 and	 eax, -2			; fffffffeH
  009b1	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2147 : 				havoc_lamps.threat_warning_close_range_15 = 0;

  009b6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  009bb	83 e0 fd	 and	 eax, -3			; fffffffdH
  009be	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2148 : 
; 2149 : 				timer += get_delta_time ();

  009c3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  009cb	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  009d3	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0

; 2150 : 
; 2151 : 				if (timer < (ONE_SECOND * 1.0))

  009db	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  009e3	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  009eb	66 0f 2f c8	 comisd	 xmm1, xmm0
  009ef	76 14		 jbe	 SHORT $LN67@draw_overl

; 2152 : 				{
; 2153 : 					havoc_lamps.threat_warning_close_range_1 = 1;

  009f1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  009f6	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  009fb	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a00	e9 4c 03 00 00	 jmp	 $LN98@draw_overl
$LN67@draw_overl:

; 2154 : 				}
; 2155 : 				else if (timer < (ONE_SECOND * 2.0))

  00a05	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00a0d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00a15	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a19	76 14		 jbe	 SHORT $LN69@draw_overl

; 2156 : 				{
; 2157 : 					havoc_lamps.threat_warning_close_range_2 = 1;

  00a1b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a20	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00a25	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a2a	e9 22 03 00 00	 jmp	 $LN98@draw_overl
$LN69@draw_overl:

; 2158 : 				}
; 2159 : 				else if (timer < (ONE_SECOND * 3.0))

  00a2f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00a37	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00a3f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a43	76 14		 jbe	 SHORT $LN71@draw_overl

; 2160 : 				{
; 2161 : 					havoc_lamps.threat_warning_close_range_3 = 1;

  00a45	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a4a	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00a4f	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a54	e9 f8 02 00 00	 jmp	 $LN98@draw_overl
$LN71@draw_overl:

; 2162 : 				}
; 2163 : 				else if (timer < (ONE_SECOND * 4.0))

  00a59	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00a61	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  00a69	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a6d	76 14		 jbe	 SHORT $LN73@draw_overl

; 2164 : 				{
; 2165 : 					havoc_lamps.threat_warning_close_range_4 = 1;

  00a6f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a74	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00a79	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a7e	e9 ce 02 00 00	 jmp	 $LN98@draw_overl
$LN73@draw_overl:

; 2166 : 				}
; 2167 : 				else if (timer < (ONE_SECOND * 5.0))

  00a83	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00a8b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00a93	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a97	76 14		 jbe	 SHORT $LN75@draw_overl

; 2168 : 				{
; 2169 : 					havoc_lamps.threat_warning_close_range_5 = 1;

  00a99	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a9e	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  00aa3	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00aa8	e9 a4 02 00 00	 jmp	 $LN98@draw_overl
$LN75@draw_overl:

; 2170 : 				}
; 2171 : 				else if (timer < (ONE_SECOND * 6.0))

  00aad	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00ab5	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00abd	66 0f 2f c8	 comisd	 xmm1, xmm0
  00ac1	76 14		 jbe	 SHORT $LN77@draw_overl

; 2172 : 				{
; 2173 : 					havoc_lamps.threat_warning_close_range_6 = 1;

  00ac3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ac8	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  00acd	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00ad2	e9 7a 02 00 00	 jmp	 $LN98@draw_overl
$LN77@draw_overl:

; 2174 : 				}
; 2175 : 				else if (timer < (ONE_SECOND * 7.0))

  00ad7	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00adf	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  00ae7	66 0f 2f c8	 comisd	 xmm1, xmm0
  00aeb	76 14		 jbe	 SHORT $LN79@draw_overl

; 2176 : 				{
; 2177 : 					havoc_lamps.threat_warning_close_range_7 = 1;

  00aed	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00af2	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  00af7	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00afc	e9 50 02 00 00	 jmp	 $LN98@draw_overl
$LN79@draw_overl:

; 2178 : 				}
; 2179 : 				else if (timer < (ONE_SECOND * 8.0))

  00b01	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00b09	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  00b11	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b15	76 14		 jbe	 SHORT $LN81@draw_overl

; 2180 : 				{
; 2181 : 					havoc_lamps.threat_warning_close_range_8 = 1;

  00b17	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b1c	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  00b21	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00b26	e9 26 02 00 00	 jmp	 $LN98@draw_overl
$LN81@draw_overl:

; 2182 : 				}
; 2183 : 				else if (timer < (ONE_SECOND * 9.0))

  00b2b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00b33	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  00b3b	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b3f	76 14		 jbe	 SHORT $LN83@draw_overl

; 2184 : 				{
; 2185 : 					havoc_lamps.threat_warning_close_range_9 = 1;

  00b41	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b46	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  00b4b	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00b50	e9 fc 01 00 00	 jmp	 $LN98@draw_overl
$LN83@draw_overl:

; 2186 : 				}
; 2187 : 				else if (timer < (ONE_SECOND * 10.0))

  00b55	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00b5d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  00b65	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b69	76 14		 jbe	 SHORT $LN85@draw_overl

; 2188 : 				{
; 2189 : 					havoc_lamps.threat_warning_close_range_10 = 1;

  00b6b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b70	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  00b75	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00b7a	e9 d2 01 00 00	 jmp	 $LN98@draw_overl
$LN85@draw_overl:

; 2190 : 				}
; 2191 : 				else if (timer < (ONE_SECOND * 11.0))

  00b7f	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00b87	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  00b8f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b93	76 14		 jbe	 SHORT $LN87@draw_overl

; 2192 : 				{
; 2193 : 					havoc_lamps.threat_warning_close_range_11 = 1;

  00b95	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b9a	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  00b9f	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00ba4	e9 a8 01 00 00	 jmp	 $LN98@draw_overl
$LN87@draw_overl:

; 2194 : 				}
; 2195 : 				else if (timer < (ONE_SECOND * 12.0))

  00ba9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00bb1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  00bb9	66 0f 2f c8	 comisd	 xmm1, xmm0
  00bbd	76 14		 jbe	 SHORT $LN89@draw_overl

; 2196 : 				{
; 2197 : 					havoc_lamps.threat_warning_close_range_12 = 1;

  00bbf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bc4	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00bc9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00bce	e9 7e 01 00 00	 jmp	 $LN98@draw_overl
$LN89@draw_overl:

; 2198 : 				}
; 2199 : 				else if (timer < (ONE_SECOND * 13.0))

  00bd3	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00bdb	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  00be3	66 0f 2f c8	 comisd	 xmm1, xmm0
  00be7	76 14		 jbe	 SHORT $LN91@draw_overl

; 2200 : 				{
; 2201 : 					havoc_lamps.threat_warning_close_range_13 = 1;

  00be9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bee	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00bf3	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00bf8	e9 54 01 00 00	 jmp	 $LN98@draw_overl
$LN91@draw_overl:

; 2202 : 				}
; 2203 : 				else if (timer < (ONE_SECOND * 14.0))

  00bfd	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00c05	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  00c0d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00c11	76 12		 jbe	 SHORT $LN93@draw_overl

; 2204 : 				{
; 2205 : 					havoc_lamps.threat_warning_close_range_14 = 1;

  00c13	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c18	83 c8 01	 or	 eax, 1
  00c1b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00c20	e9 2c 01 00 00	 jmp	 $LN98@draw_overl
$LN93@draw_overl:

; 2206 : 				}
; 2207 : 				else if (timer < (ONE_SECOND * 15.0))

  00c25	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00c2d	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  00c35	66 0f 2f c8	 comisd	 xmm1, xmm0
  00c39	76 12		 jbe	 SHORT $LN95@draw_overl

; 2208 : 				{
; 2209 : 					havoc_lamps.threat_warning_close_range_15 = 1;

  00c3b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c40	83 c8 02	 or	 eax, 2
  00c43	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00c48	e9 04 01 00 00	 jmp	 $LN98@draw_overl
$LN95@draw_overl:

; 2210 : 				}
; 2211 : 				else if (timer < (ONE_SECOND * 16.0))

  00c4d	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00c55	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  00c5d	66 0f 2f c8	 comisd	 xmm1, xmm0
  00c61	0f 86 df 00 00
	00		 jbe	 $LN97@draw_overl

; 2212 : 				{
; 2213 : 					havoc_lamps.threat_warning_close_range_1 = 1;

  00c67	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c6c	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00c71	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2214 : 					havoc_lamps.threat_warning_close_range_2 = 1;

  00c76	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c7b	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00c80	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2215 : 					havoc_lamps.threat_warning_close_range_3 = 1;

  00c85	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c8a	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00c8f	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2216 : 					havoc_lamps.threat_warning_close_range_4 = 1;

  00c94	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c99	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00c9e	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2217 : 					havoc_lamps.threat_warning_close_range_5 = 1;

  00ca3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ca8	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  00cad	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2218 : 					havoc_lamps.threat_warning_close_range_6 = 1;

  00cb2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00cb7	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  00cbc	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2219 : 					havoc_lamps.threat_warning_close_range_7 = 1;

  00cc1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00cc6	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  00ccb	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2220 : 					havoc_lamps.threat_warning_close_range_8 = 1;

  00cd0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00cd5	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  00cda	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2221 : 					havoc_lamps.threat_warning_close_range_9 = 1;

  00cdf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ce4	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  00ce9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2222 : 					havoc_lamps.threat_warning_close_range_10 = 1;

  00cee	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00cf3	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  00cf8	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2223 : 					havoc_lamps.threat_warning_close_range_11 = 1;

  00cfd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00d02	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  00d07	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2224 : 					havoc_lamps.threat_warning_close_range_12 = 1;

  00d0c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00d11	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00d16	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2225 : 					havoc_lamps.threat_warning_close_range_13 = 1;

  00d1b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00d20	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00d25	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 2226 : 					havoc_lamps.threat_warning_close_range_14 = 1;

  00d2a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d2f	83 c8 01	 or	 eax, 1
  00d32	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2227 : 					havoc_lamps.threat_warning_close_range_15 = 1;

  00d37	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d3c	83 c8 02	 or	 eax, 2
  00d3f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2228 : 				}
; 2229 : 				else

  00d44	eb 0b		 jmp	 SHORT $LN98@draw_overl
$LN97@draw_overl:

; 2230 : 				{
; 2231 : 					timer = 0.0;

  00d46	0f 57 c0	 xorps	 xmm0, xmm0
  00d49	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?IG@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0
$LN98@draw_overl:

; 2232 : 				}
; 2233 : 			}
; 2234 : 			////////////////////////////////////////
; 2235 : 			//
; 2236 : 			// test radar lock lamps
; 2237 : 			//
; 2238 : 			////////////////////////////////////////
; 2239 : 			{
; 2240 : 				static float
; 2241 : 					timer = 0.0;
; 2242 : 
; 2243 : 				havoc_lamps.threat_warning_missile_below = 0;

  00d51	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d56	25 ff ff fb ff	 and	 eax, -262145		; fffbffffH
  00d5b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2244 : 				havoc_lamps.threat_warning_missile_above = 0;

  00d60	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d65	25 ff ff f7 ff	 and	 eax, -524289		; fff7ffffH
  00d6a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2245 : 				havoc_lamps.threat_warning_missile_lh_lock = 0;

  00d6f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d74	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00d79	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2246 : 				havoc_lamps.threat_warning_missile_rh_lock = 0;

  00d7e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d83	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  00d88	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2247 : 
; 2248 : 				timer += get_delta_time ();

  00d8d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00d95	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00d9d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0

; 2249 : 
; 2250 : 				if (timer < (ONE_SECOND * 1.0))

  00da5	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00dad	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00db5	66 0f 2f c8	 comisd	 xmm1, xmm0
  00db9	76 14		 jbe	 SHORT $LN99@draw_overl

; 2251 : 				{
; 2252 : 					havoc_lamps.threat_warning_missile_below = 1;

  00dbb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00dc0	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00dc5	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00dca	e9 da 00 00 00	 jmp	 $LN108@draw_overl
$LN99@draw_overl:

; 2253 : 				}
; 2254 : 				else if (timer < (ONE_SECOND * 2.0))

  00dcf	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00dd7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00ddf	66 0f 2f c8	 comisd	 xmm1, xmm0
  00de3	76 14		 jbe	 SHORT $LN101@draw_overl

; 2255 : 				{
; 2256 : 					havoc_lamps.threat_warning_missile_above = 1;

  00de5	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00dea	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00def	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00df4	e9 b0 00 00 00	 jmp	 $LN108@draw_overl
$LN101@draw_overl:

; 2257 : 				}
; 2258 : 				else if (timer < (ONE_SECOND * 3.0))

  00df9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00e01	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00e09	66 0f 2f c8	 comisd	 xmm1, xmm0
  00e0d	76 14		 jbe	 SHORT $LN103@draw_overl

; 2259 : 				{
; 2260 : 					havoc_lamps.threat_warning_missile_lh_lock = 1;

  00e0f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e14	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00e19	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00e1e	e9 86 00 00 00	 jmp	 $LN108@draw_overl
$LN103@draw_overl:

; 2261 : 				}
; 2262 : 				else if (timer < (ONE_SECOND * 4.0))

  00e23	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00e2b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  00e33	66 0f 2f c8	 comisd	 xmm1, xmm0
  00e37	76 11		 jbe	 SHORT $LN105@draw_overl

; 2263 : 				{
; 2264 : 					havoc_lamps.threat_warning_missile_rh_lock = 1;

  00e39	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e3e	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00e43	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00e48	eb 5f		 jmp	 SHORT $LN108@draw_overl
$LN105@draw_overl:

; 2265 : 				}
; 2266 : 				else if (timer < (ONE_SECOND * 5.0))

  00e4a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA
  00e52	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00e5a	66 0f 2f c8	 comisd	 xmm1, xmm0
  00e5e	76 3e		 jbe	 SHORT $LN107@draw_overl

; 2267 : 				{
; 2268 : 					havoc_lamps.threat_warning_missile_below = 1;

  00e60	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e65	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00e6a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2269 : 					havoc_lamps.threat_warning_missile_above = 1;

  00e6f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e74	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00e79	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2270 : 					havoc_lamps.threat_warning_missile_lh_lock = 1;

  00e7e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e83	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00e88	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2271 : 					havoc_lamps.threat_warning_missile_rh_lock = 1;

  00e8d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00e92	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00e97	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 2272 : 				}
; 2273 : 				else

  00e9c	eb 0b		 jmp	 SHORT $LN108@draw_overl
$LN107@draw_overl:

; 2274 : 				{
; 2275 : 					timer = 0.0;

  00e9e	0f 57 c0	 xorps	 xmm0, xmm0
  00ea1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?MI@??draw_overlaid_threat_warning_display@@YGXHH@Z@4MA, xmm0
$LN108@draw_overl:

; 2276 : 				}
; 2277 : 			}
; 2278 : 		}
; 2279 : 
; 2280 : 		x_org += 2 - ix_640_480;

  00ea9	b8 02 00 00 00	 mov	 eax, 2
  00eae	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00eb4	03 45 08	 add	 eax, DWORD PTR _x_org$[ebp]
  00eb7	89 45 08	 mov	 DWORD PTR _x_org$[ebp], eax

; 2281 : 		y_org += 2 - iy_640_480;

  00eba	b8 02 00 00 00	 mov	 eax, 2
  00ebf	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ec5	03 45 0c	 add	 eax, DWORD PTR _y_org$[ebp]
  00ec8	89 45 0c	 mov	 DWORD PTR _y_org$[ebp], eax

; 2282 : 
; 2283 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_1							, x_org +   5, y_org +  49, 274, 230,   8,   6, 229);	// (10% alpha)

  00ecb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ed0	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00ed3	83 e0 01	 and	 eax, 1
  00ed6	74 65		 je	 SHORT $LN109@draw_overl
  00ed8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00edd	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  00ee0	8d 54 01 05	 lea	 edx, DWORD PTR [ecx+eax+5]
  00ee4	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  00eea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00eef	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  00ef2	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  00ef6	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  00efc	c7 05 08 00 00
	00 12 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 274 ; 00000112H
  00f06	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  00f10	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00f1a	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00f24	c6 05 18 00 00
	00 e5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 229 ; 000000e5H
  00f2b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f30	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f33	50		 push	 eax
  00f34	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f37	51		 push	 ecx
  00f38	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN109@draw_overl:

; 2284 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_2							, x_org +  13, y_org +  49, 282, 230,   8,   6, 227);	// (11% alpha)

  00f3d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00f42	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  00f45	83 e0 01	 and	 eax, 1
  00f48	74 65		 je	 SHORT $LN110@draw_overl
  00f4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f4f	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  00f52	8d 54 01 0d	 lea	 edx, DWORD PTR [ecx+eax+13]
  00f56	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  00f5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f61	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  00f64	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  00f68	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  00f6e	c7 05 08 00 00
	00 1a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 282 ; 0000011aH
  00f78	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  00f82	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00f8c	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00f96	c6 05 18 00 00
	00 e3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 227 ; 000000e3H
  00f9d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00fa2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00fa5	50		 push	 eax
  00fa6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00fa9	51		 push	 ecx
  00faa	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN110@draw_overl:

; 2285 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_3							, x_org +  21, y_org +  49, 290, 230,   8,   6, 224);	// (12% alpha)

  00faf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00fb4	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00fb7	83 e0 01	 and	 eax, 1
  00fba	74 65		 je	 SHORT $LN111@draw_overl
  00fbc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00fc1	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  00fc4	8d 54 01 15	 lea	 edx, DWORD PTR [ecx+eax+21]
  00fc8	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  00fce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fd3	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  00fd6	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  00fda	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  00fe0	c7 05 08 00 00
	00 22 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 290 ; 00000122H
  00fea	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  00ff4	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00ffe	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01008	c6 05 18 00 00
	00 e0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 224 ; 000000e0H
  0100f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01014	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01017	50		 push	 eax
  01018	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0101b	51		 push	 ecx
  0101c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN111@draw_overl:

; 2286 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_4							, x_org +  29, y_org +  49, 298, 230,   7,   6, 222);	// (13% alpha)

  01021	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01026	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  01029	83 e0 01	 and	 eax, 1
  0102c	74 65		 je	 SHORT $LN112@draw_overl
  0102e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01033	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01036	8d 54 01 1d	 lea	 edx, DWORD PTR [ecx+eax+29]
  0103a	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01045	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01048	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  0104c	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01052	c7 05 08 00 00
	00 2a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 298 ; 0000012aH
  0105c	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  01066	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01070	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0107a	c6 05 18 00 00
	00 de		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 222 ; 000000deH
  01081	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01086	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01089	50		 push	 eax
  0108a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0108d	51		 push	 ecx
  0108e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN112@draw_overl:

; 2287 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_5							, x_org +  36, y_org +  49, 305, 230,   8,   6, 219);	// (14% alpha)

  01093	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01098	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  0109b	83 e0 01	 and	 eax, 1
  0109e	74 65		 je	 SHORT $LN113@draw_overl
  010a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  010a5	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  010a8	8d 54 01 24	 lea	 edx, DWORD PTR [ecx+eax+36]
  010ac	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  010b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  010b7	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  010ba	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  010be	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  010c4	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  010ce	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  010d8	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  010e2	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  010ec	c6 05 18 00 00
	00 db		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 219 ; 000000dbH
  010f3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010f8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010fb	50		 push	 eax
  010fc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010ff	51		 push	 ecx
  01100	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN113@draw_overl:

; 2288 : 		draw_lamp (havoc_lamps.threat_warning_radar_type_6							, x_org +  44, y_org +  49, 313, 230,   8,   6, 217);	// (15% alpha)

  01105	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0110a	c1 e8 10	 shr	 eax, 16			; 00000010H
  0110d	83 e0 01	 and	 eax, 1
  01110	74 65		 je	 SHORT $LN114@draw_overl
  01112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01117	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0111a	8d 54 01 2c	 lea	 edx, DWORD PTR [ecx+eax+44]
  0111e	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01129	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0112c	8d 54 01 31	 lea	 edx, DWORD PTR [ecx+eax+49]
  01130	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01136	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  01140	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  0114a	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  01154	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0115e	c6 05 18 00 00
	00 d9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 217 ; 000000d9H
  01165	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0116a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0116d	50		 push	 eax
  0116e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01171	51		 push	 ecx
  01172	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN114@draw_overl:

; 2289 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear						, x_org +  12, y_org +  43, 281, 224,   7,   6, 214);	// (16% alpha)

  01177	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0117c	c1 e8 11	 shr	 eax, 17			; 00000011H
  0117f	83 e0 01	 and	 eax, 1
  01182	74 65		 je	 SHORT $LN115@draw_overl
  01184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01189	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0118c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01190	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0119b	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0119e	8d 54 01 2b	 lea	 edx, DWORD PTR [ecx+eax+43]
  011a2	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  011a8	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  011b2	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  011bc	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  011c6	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  011d0	c6 05 18 00 00
	00 d6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 214 ; 000000d6H
  011d7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011dc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  011df	50		 push	 eax
  011e0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  011e3	51		 push	 ecx
  011e4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN115@draw_overl:

; 2290 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear						, x_org +  38, y_org +  43, 307, 224,   6,   6, 212);	// (17% alpha)

  011e9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  011ee	c1 e8 12	 shr	 eax, 18			; 00000012H
  011f1	83 e0 01	 and	 eax, 1
  011f4	74 65		 je	 SHORT $LN116@draw_overl
  011f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011fb	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  011fe	8d 54 01 26	 lea	 edx, DWORD PTR [ecx+eax+38]
  01202	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0120d	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01210	8d 54 01 2b	 lea	 edx, DWORD PTR [ecx+eax+43]
  01214	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0121a	c7 05 08 00 00
	00 33 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 307 ; 00000133H
  01224	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  0122e	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01238	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01242	c6 05 18 00 00
	00 d4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 212 ; 000000d4H
  01249	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0124e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01251	50		 push	 eax
  01252	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01255	51		 push	 ecx
  01256	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN116@draw_overl:

; 2291 : 		draw_lamp (havoc_lamps.threat_warning_close_range_1						, x_org +  20, y_org +  40, 289, 221,   5,   3, 209);	// (18% alpha)

  0125b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01260	c1 e8 13	 shr	 eax, 19			; 00000013H
  01263	83 e0 01	 and	 eax, 1
  01266	74 65		 je	 SHORT $LN117@draw_overl
  01268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0126d	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01270	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  01274	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0127a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0127f	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01282	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  01286	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0128c	c7 05 08 00 00
	00 21 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 289 ; 00000121H
  01296	c7 05 0c 00 00
	00 dd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 221 ; 000000ddH
  012a0	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  012aa	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  012b4	c6 05 18 00 00
	00 d1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 209 ; 000000d1H
  012bb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012c0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  012c3	50		 push	 eax
  012c4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  012c7	51		 push	 ecx
  012c8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN117@draw_overl:

; 2292 : 		draw_lamp (havoc_lamps.threat_warning_close_range_2						, x_org +  15, y_org +  36, 284, 217,   5,   5, 207);	// (19% alpha)

  012cd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  012d2	c1 e8 14	 shr	 eax, 20			; 00000014H
  012d5	83 e0 01	 and	 eax, 1
  012d8	74 65		 je	 SHORT $LN118@draw_overl
  012da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012df	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  012e2	8d 54 01 0f	 lea	 edx, DWORD PTR [ecx+eax+15]
  012e6	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  012ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  012f1	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  012f4	8d 54 01 24	 lea	 edx, DWORD PTR [ecx+eax+36]
  012f8	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  012fe	c7 05 08 00 00
	00 1c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 284 ; 0000011cH
  01308	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  01312	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  0131c	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01326	c6 05 18 00 00
	00 cf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 207 ; 000000cfH
  0132d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01332	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01335	50		 push	 eax
  01336	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01339	51		 push	 ecx
  0133a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN118@draw_overl:

; 2293 : 		draw_lamp (havoc_lamps.threat_warning_close_range_3						, x_org +  12, y_org +  30, 281, 211,   4,   6, 204);	// (20% alpha)

  0133f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01344	c1 e8 15	 shr	 eax, 21			; 00000015H
  01347	83 e0 01	 and	 eax, 1
  0134a	74 65		 je	 SHORT $LN119@draw_overl
  0134c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01351	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01354	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01358	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0135e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01363	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01366	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  0136a	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01370	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  0137a	c7 05 0c 00 00
	00 d3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 211 ; 000000d3H
  01384	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0138e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01398	c6 05 18 00 00
	00 cc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 204 ; 000000ccH
  0139f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  013a4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  013a7	50		 push	 eax
  013a8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  013ab	51		 push	 ecx
  013ac	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN119@draw_overl:

; 2294 : 		draw_lamp (havoc_lamps.threat_warning_close_range_4						, x_org +  12, y_org +  24, 281, 205,   3,   6, 201);	// (21% alpha)

  013b1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  013b6	c1 e8 16	 shr	 eax, 22			; 00000016H
  013b9	83 e0 01	 and	 eax, 1
  013bc	74 65		 je	 SHORT $LN120@draw_overl
  013be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  013c3	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  013c6	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  013ca	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  013d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  013d5	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  013d8	8d 54 01 18	 lea	 edx, DWORD PTR [ecx+eax+24]
  013dc	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  013e2	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  013ec	c7 05 0c 00 00
	00 cd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 205 ; 000000cdH
  013f6	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  01400	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0140a	c6 05 18 00 00
	00 c9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 201 ; 000000c9H
  01411	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01416	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01419	50		 push	 eax
  0141a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0141d	51		 push	 ecx
  0141e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN120@draw_overl:

; 2295 : 		draw_lamp (havoc_lamps.threat_warning_close_range_5						, x_org +  13, y_org +  19, 282, 200,   3,   5, 199);	// (22% alpha)

  01423	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01428	c1 e8 17	 shr	 eax, 23			; 00000017H
  0142b	83 e0 01	 and	 eax, 1
  0142e	74 65		 je	 SHORT $LN121@draw_overl
  01430	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01435	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01438	8d 54 01 0d	 lea	 edx, DWORD PTR [ecx+eax+13]
  0143c	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01442	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01447	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0144a	8d 54 01 13	 lea	 edx, DWORD PTR [ecx+eax+19]
  0144e	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01454	c7 05 08 00 00
	00 1a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 282 ; 0000011aH
  0145e	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  01468	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  01472	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0147c	c6 05 18 00 00
	00 c7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 199 ; 000000c7H
  01483	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01488	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0148b	50		 push	 eax
  0148c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0148f	51		 push	 ecx
  01490	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN121@draw_overl:

; 2296 : 		draw_lamp (havoc_lamps.threat_warning_close_range_6						, x_org +  16, y_org +  14, 285, 195,   4,   5, 196);	// (23% alpha)

  01495	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0149a	c1 e8 18	 shr	 eax, 24			; 00000018H
  0149d	83 e0 01	 and	 eax, 1
  014a0	74 65		 je	 SHORT $LN122@draw_overl
  014a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  014a7	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  014aa	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  014ae	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  014b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  014b9	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  014bc	8d 54 01 0e	 lea	 edx, DWORD PTR [ecx+eax+14]
  014c0	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  014c6	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  014d0	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  014da	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  014e4	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  014ee	c6 05 18 00 00
	00 c4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 196 ; 000000c4H
  014f5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  014fa	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  014fd	50		 push	 eax
  014fe	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01501	51		 push	 ecx
  01502	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN122@draw_overl:

; 2297 : 		draw_lamp (havoc_lamps.threat_warning_close_range_7						, x_org +  20, y_org +  11, 289, 192,   6,   4, 194);	// (24% alpha)

  01507	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0150c	c1 e8 19	 shr	 eax, 25			; 00000019H
  0150f	83 e0 01	 and	 eax, 1
  01512	74 65		 je	 SHORT $LN123@draw_overl
  01514	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01519	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0151c	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  01520	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01526	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0152b	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0152e	8d 54 01 0b	 lea	 edx, DWORD PTR [ecx+eax+11]
  01532	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01538	c7 05 08 00 00
	00 21 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 289 ; 00000121H
  01542	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  0154c	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01556	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01560	c6 05 18 00 00
	00 c2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 194 ; 000000c2H
  01567	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0156c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0156f	50		 push	 eax
  01570	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01573	51		 push	 ecx
  01574	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN123@draw_overl:

; 2298 : 		draw_lamp (havoc_lamps.threat_warning_close_range_8						, x_org +  26, y_org +  11, 295, 192,   5,   2, 191);	// (25% alpha)

  01579	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0157e	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  01581	83 e0 01	 and	 eax, 1
  01584	74 65		 je	 SHORT $LN124@draw_overl
  01586	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0158b	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0158e	8d 54 01 1a	 lea	 edx, DWORD PTR [ecx+eax+26]
  01592	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01598	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0159d	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  015a0	8d 54 01 0b	 lea	 edx, DWORD PTR [ecx+eax+11]
  015a4	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  015aa	c7 05 08 00 00
	00 27 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 295 ; 00000127H
  015b4	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  015be	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  015c8	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 2
  015d2	c6 05 18 00 00
	00 bf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 191 ; 000000bfH
  015d9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  015de	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  015e1	50		 push	 eax
  015e2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  015e5	51		 push	 ecx
  015e6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN124@draw_overl:

; 2299 : 		draw_lamp (havoc_lamps.threat_warning_close_range_9						, x_org +  31, y_org +  11, 300, 192,   6,   4, 189);	// (26% alpha)

  015eb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  015f0	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  015f3	83 e0 01	 and	 eax, 1
  015f6	74 65		 je	 SHORT $LN125@draw_overl
  015f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  015fd	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01600	8d 54 01 1f	 lea	 edx, DWORD PTR [ecx+eax+31]
  01604	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0160a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0160f	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01612	8d 54 01 0b	 lea	 edx, DWORD PTR [ecx+eax+11]
  01616	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0161c	c7 05 08 00 00
	00 2c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 300 ; 0000012cH
  01626	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  01630	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0163a	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01644	c6 05 18 00 00
	00 bd		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 189 ; 000000bdH
  0164b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01650	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01653	50		 push	 eax
  01654	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01657	51		 push	 ecx
  01658	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN125@draw_overl:

; 2300 : 		draw_lamp (havoc_lamps.threat_warning_close_range_10						, x_org +  37, y_org +  14, 306, 195,   4,   5, 186);	// (27% alpha)

  0165d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01662	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  01665	83 e0 01	 and	 eax, 1
  01668	74 65		 je	 SHORT $LN126@draw_overl
  0166a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0166f	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01672	8d 54 01 25	 lea	 edx, DWORD PTR [ecx+eax+37]
  01676	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0167c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01681	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01684	8d 54 01 0e	 lea	 edx, DWORD PTR [ecx+eax+14]
  01688	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0168e	c7 05 08 00 00
	00 32 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 306 ; 00000132H
  01698	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  016a2	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  016ac	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  016b6	c6 05 18 00 00
	00 ba		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 186 ; 000000baH
  016bd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  016c2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  016c5	50		 push	 eax
  016c6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  016c9	51		 push	 ecx
  016ca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN126@draw_overl:

; 2301 : 		draw_lamp (havoc_lamps.threat_warning_close_range_11						, x_org +  41, y_org +  19, 310, 200,   3,   6, 184);	// (28% alpha)

  016cf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  016d4	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  016d7	83 e0 01	 and	 eax, 1
  016da	74 65		 je	 SHORT $LN127@draw_overl
  016dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  016e1	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  016e4	8d 54 01 29	 lea	 edx, DWORD PTR [ecx+eax+41]
  016e8	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  016ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  016f3	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  016f6	8d 54 01 13	 lea	 edx, DWORD PTR [ecx+eax+19]
  016fa	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01700	c7 05 08 00 00
	00 36 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 310 ; 00000136H
  0170a	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  01714	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  0171e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01728	c6 05 18 00 00
	00 b8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 184 ; 000000b8H
  0172f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01734	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01737	50		 push	 eax
  01738	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0173b	51		 push	 ecx
  0173c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN127@draw_overl:

; 2302 : 		draw_lamp (havoc_lamps.threat_warning_close_range_12						, x_org +  42, y_org +  25, 311, 206,   3,   5, 181);	// (29% alpha)

  01741	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01746	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  01749	83 e0 01	 and	 eax, 1
  0174c	74 65		 je	 SHORT $LN128@draw_overl
  0174e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01753	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01756	8d 54 01 2a	 lea	 edx, DWORD PTR [ecx+eax+42]
  0175a	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01760	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01765	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01768	8d 54 01 19	 lea	 edx, DWORD PTR [ecx+eax+25]
  0176c	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01772	c7 05 08 00 00
	00 37 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 311 ; 00000137H
  0177c	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  01786	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  01790	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0179a	c6 05 18 00 00
	00 b5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 181 ; 000000b5H
  017a1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  017a6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  017a9	50		 push	 eax
  017aa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  017ad	51		 push	 ecx
  017ae	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN128@draw_overl:

; 2303 : 		draw_lamp (havoc_lamps.threat_warning_close_range_13						, x_org +  40, y_org +  30, 309, 211,   5,   6, 178);	// (30% alpha)

  017b3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  017b8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  017bb	83 e0 01	 and	 eax, 1
  017be	74 65		 je	 SHORT $LN129@draw_overl
  017c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  017c5	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  017c8	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  017cc	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  017d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  017d7	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  017da	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  017de	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  017e4	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  017ee	c7 05 0c 00 00
	00 d3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 211 ; 000000d3H
  017f8	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  01802	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0180c	c6 05 18 00 00
	00 b2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 178 ; 000000b2H
  01813	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01818	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0181b	50		 push	 eax
  0181c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0181f	51		 push	 ecx
  01820	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN129@draw_overl:

; 2304 : 		draw_lamp (havoc_lamps.threat_warning_close_range_14						, x_org +  37, y_org +  36, 306, 217,   5,   4, 176);	// (31% alpha)

  01825	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0182a	83 e0 01	 and	 eax, 1
  0182d	74 65		 je	 SHORT $LN130@draw_overl
  0182f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01834	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01837	8d 54 01 25	 lea	 edx, DWORD PTR [ecx+eax+37]
  0183b	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01841	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01846	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01849	8d 54 01 24	 lea	 edx, DWORD PTR [ecx+eax+36]
  0184d	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01853	c7 05 08 00 00
	00 32 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 306 ; 00000132H
  0185d	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  01867	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  01871	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0187b	c6 05 18 00 00
	00 b0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 176 ; 000000b0H
  01882	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01887	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0188a	50		 push	 eax
  0188b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0188e	51		 push	 ecx
  0188f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN130@draw_overl:

; 2305 : 		draw_lamp (havoc_lamps.threat_warning_close_range_15						, x_org +  31, y_org +  39, 300, 220,   6,   4, 173);	// (32% alpha)

  01894	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01899	d1 e8		 shr	 eax, 1
  0189b	83 e0 01	 and	 eax, 1
  0189e	74 65		 je	 SHORT $LN131@draw_overl
  018a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  018a5	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  018a8	8d 54 01 1f	 lea	 edx, DWORD PTR [ecx+eax+31]
  018ac	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  018b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  018b7	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  018ba	8d 54 01 27	 lea	 edx, DWORD PTR [ecx+eax+39]
  018be	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  018c4	c7 05 08 00 00
	00 2c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 300 ; 0000012cH
  018ce	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  018d8	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  018e2	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  018ec	c6 05 18 00 00
	00 ad		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 173 ; 000000adH
  018f3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  018f8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  018fb	50		 push	 eax
  018fc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  018ff	51		 push	 ecx
  01900	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN131@draw_overl:

; 2306 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_90_close_range		, x_org +   9, y_org +  22, 278, 203,   4,   4, 171);	// (33% alpha)

  01905	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0190a	c1 e8 02	 shr	 eax, 2
  0190d	83 e0 01	 and	 eax, 1
  01910	74 65		 je	 SHORT $LN132@draw_overl
  01912	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01917	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0191a	8d 54 01 09	 lea	 edx, DWORD PTR [ecx+eax+9]
  0191e	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01924	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01929	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0192c	8d 54 01 16	 lea	 edx, DWORD PTR [ecx+eax+22]
  01930	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01936	c7 05 08 00 00
	00 16 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 278 ; 00000116H
  01940	c7 05 0c 00 00
	00 cb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 203 ; 000000cbH
  0194a	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01954	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0195e	c6 05 18 00 00
	00 ab		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 171 ; 000000abH
  01965	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0196a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0196d	50		 push	 eax
  0196e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01971	51		 push	 ecx
  01972	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN132@draw_overl:

; 2307 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_67_close_range		, x_org +  12, y_org +  15, 281, 196,   4,   4, 168);	// (34% alpha)

  01977	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0197c	c1 e8 03	 shr	 eax, 3
  0197f	83 e0 01	 and	 eax, 1
  01982	74 65		 je	 SHORT $LN133@draw_overl
  01984	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01989	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0198c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01990	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01996	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0199b	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0199e	8d 54 01 0f	 lea	 edx, DWORD PTR [ecx+eax+15]
  019a2	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  019a8	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  019b2	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  019bc	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  019c6	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  019d0	c6 05 18 00 00
	00 a8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 168 ; 000000a8H
  019d7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  019dc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  019df	50		 push	 eax
  019e0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  019e3	51		 push	 ecx
  019e4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN133@draw_overl:

; 2308 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_45_close_range		, x_org +  16, y_org +  10, 285, 191,   4,   4, 166);	// (35% alpha)

  019e9	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  019ee	c1 e8 04	 shr	 eax, 4
  019f1	83 e0 01	 and	 eax, 1
  019f4	74 65		 je	 SHORT $LN134@draw_overl
  019f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  019fb	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  019fe	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  01a02	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01a08	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01a0d	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01a10	8d 54 01 0a	 lea	 edx, DWORD PTR [ecx+eax+10]
  01a14	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01a1a	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  01a24	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  01a2e	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01a38	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01a42	c6 05 18 00 00
	00 a6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 166 ; 000000a6H
  01a49	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01a4e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01a51	50		 push	 eax
  01a52	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01a55	51		 push	 ecx
  01a56	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN134@draw_overl:

; 2309 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_22_close_range		, x_org +  23, y_org +   7, 292, 188,   4,   4, 163);	// (36% alpha)

  01a5b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01a60	c1 e8 05	 shr	 eax, 5
  01a63	83 e0 01	 and	 eax, 1
  01a66	74 65		 je	 SHORT $LN135@draw_overl
  01a68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01a6d	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01a70	8d 54 01 17	 lea	 edx, DWORD PTR [ecx+eax+23]
  01a74	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01a7a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01a7f	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01a82	8d 54 01 07	 lea	 edx, DWORD PTR [ecx+eax+7]
  01a86	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01a8c	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  01a96	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  01aa0	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01aaa	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01ab4	c6 05 18 00 00
	00 a3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 163 ; 000000a3H
  01abb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01ac0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01ac3	50		 push	 eax
  01ac4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01ac7	51		 push	 ecx
  01ac8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN135@draw_overl:

; 2310 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_22_close_range		, x_org +  30, y_org +   7, 299, 188,   4,   4, 161);	// (37% alpha)

  01acd	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01ad2	c1 e8 06	 shr	 eax, 6
  01ad5	83 e0 01	 and	 eax, 1
  01ad8	74 65		 je	 SHORT $LN136@draw_overl
  01ada	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01adf	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01ae2	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  01ae6	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01aec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01af1	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01af4	8d 54 01 07	 lea	 edx, DWORD PTR [ecx+eax+7]
  01af8	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01afe	c7 05 08 00 00
	00 2b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 299 ; 0000012bH
  01b08	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  01b12	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01b1c	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01b26	c6 05 18 00 00
	00 a1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 161 ; 000000a1H
  01b2d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01b32	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01b35	50		 push	 eax
  01b36	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01b39	51		 push	 ecx
  01b3a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN136@draw_overl:

; 2311 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_45_close_range		, x_org +  36, y_org +  10, 305, 191,   4,   4, 158);	// (38% alpha)

  01b3f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01b44	c1 e8 07	 shr	 eax, 7
  01b47	83 e0 01	 and	 eax, 1
  01b4a	74 65		 je	 SHORT $LN137@draw_overl
  01b4c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01b51	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01b54	8d 54 01 24	 lea	 edx, DWORD PTR [ecx+eax+36]
  01b58	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01b5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01b63	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01b66	8d 54 01 0a	 lea	 edx, DWORD PTR [ecx+eax+10]
  01b6a	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01b70	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  01b7a	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  01b84	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01b8e	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01b98	c6 05 18 00 00
	00 9e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 158 ; 0000009eH
  01b9f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01ba4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01ba7	50		 push	 eax
  01ba8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01bab	51		 push	 ecx
  01bac	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN137@draw_overl:

; 2312 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_67_close_range		, x_org +  41, y_org +  15, 310, 196,   4,   4, 156);	// (39% alpha)

  01bb1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01bb6	c1 e8 08	 shr	 eax, 8
  01bb9	83 e0 01	 and	 eax, 1
  01bbc	74 65		 je	 SHORT $LN138@draw_overl
  01bbe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01bc3	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01bc6	8d 54 01 29	 lea	 edx, DWORD PTR [ecx+eax+41]
  01bca	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01bd0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01bd5	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01bd8	8d 54 01 0f	 lea	 edx, DWORD PTR [ecx+eax+15]
  01bdc	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01be2	c7 05 08 00 00
	00 36 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 310 ; 00000136H
  01bec	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  01bf6	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01c00	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01c0a	c6 05 18 00 00
	00 9c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 156 ; 0000009cH
  01c11	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01c16	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01c19	50		 push	 eax
  01c1a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01c1d	51		 push	 ecx
  01c1e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN138@draw_overl:

; 2313 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_90_close_range		, x_org +  44, y_org +  22, 313, 203,   4,   4, 153);	// (40% alpha)

  01c23	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01c28	c1 e8 09	 shr	 eax, 9
  01c2b	83 e0 01	 and	 eax, 1
  01c2e	74 65		 je	 SHORT $LN139@draw_overl
  01c30	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01c35	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01c38	8d 54 01 2c	 lea	 edx, DWORD PTR [ecx+eax+44]
  01c3c	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01c42	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01c47	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01c4a	8d 54 01 16	 lea	 edx, DWORD PTR [ecx+eax+22]
  01c4e	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01c54	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  01c5e	c7 05 0c 00 00
	00 cb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 203 ; 000000cbH
  01c68	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01c72	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01c7c	c6 05 18 00 00
	00 99		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 153 ; 00000099H
  01c83	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01c88	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01c8b	50		 push	 eax
  01c8c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01c8f	51		 push	 ecx
  01c90	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN139@draw_overl:

; 2314 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_90						, x_org +   3, y_org +  19, 272, 200,   6,   7, 150);	// (41% alpha)

  01c95	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01c9a	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  01c9d	83 e0 01	 and	 eax, 1
  01ca0	74 65		 je	 SHORT $LN140@draw_overl
  01ca2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01ca7	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01caa	8d 54 01 03	 lea	 edx, DWORD PTR [ecx+eax+3]
  01cae	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01cb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01cb9	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01cbc	8d 54 01 13	 lea	 edx, DWORD PTR [ecx+eax+19]
  01cc0	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01cc6	c7 05 08 00 00
	00 10 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 272 ; 00000110H
  01cd0	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  01cda	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01ce4	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01cee	c6 05 18 00 00
	00 96		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 150 ; 00000096H
  01cf5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01cfa	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01cfd	50		 push	 eax
  01cfe	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01d01	51		 push	 ecx
  01d02	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN140@draw_overl:

; 2315 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_67						, x_org +   6, y_org +  11, 275, 192,   7,   7, 148);	// (42% alpha)

  01d07	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01d0c	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  01d0f	83 e0 01	 and	 eax, 1
  01d12	74 65		 je	 SHORT $LN141@draw_overl
  01d14	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01d19	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01d1c	8d 54 01 06	 lea	 edx, DWORD PTR [ecx+eax+6]
  01d20	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01d26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01d2b	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01d2e	8d 54 01 0b	 lea	 edx, DWORD PTR [ecx+eax+11]
  01d32	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01d38	c7 05 08 00 00
	00 13 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 275 ; 00000113H
  01d42	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  01d4c	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01d56	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01d60	c6 05 18 00 00
	00 94		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 148 ; 00000094H
  01d67	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01d6c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01d6f	50		 push	 eax
  01d70	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01d73	51		 push	 ecx
  01d74	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN141@draw_overl:

; 2316 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, x_org +  12, y_org +   5, 281, 186,   7,   6, 145);	// (43% alpha)

  01d79	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01d7e	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  01d81	83 e0 01	 and	 eax, 1
  01d84	74 65		 je	 SHORT $LN142@draw_overl
  01d86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01d8b	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01d8e	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  01d92	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01d98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01d9d	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01da0	8d 54 01 05	 lea	 edx, DWORD PTR [ecx+eax+5]
  01da4	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01daa	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  01db4	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  01dbe	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01dc8	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01dd2	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  01dd9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01dde	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01de1	50		 push	 eax
  01de2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01de5	51		 push	 ecx
  01de6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN142@draw_overl:

; 2317 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, x_org +  21, y_org +   2, 290, 183,   6,   6, 143);	// (44% alpha)

  01deb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01df0	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  01df3	83 e0 01	 and	 eax, 1
  01df6	74 65		 je	 SHORT $LN143@draw_overl
  01df8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01dfd	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01e00	8d 54 01 15	 lea	 edx, DWORD PTR [ecx+eax+21]
  01e04	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01e0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01e0f	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01e12	8d 54 01 02	 lea	 edx, DWORD PTR [ecx+eax+2]
  01e16	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01e1c	c7 05 08 00 00
	00 22 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 290 ; 00000122H
  01e26	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  01e30	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01e3a	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01e44	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  01e4b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01e50	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01e53	50		 push	 eax
  01e54	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01e57	51		 push	 ecx
  01e58	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN143@draw_overl:

; 2318 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_22						, x_org +  30, y_org +   2, 299, 183,   6,   6, 140);	// (45% alpha)

  01e5d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01e62	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  01e65	83 e0 01	 and	 eax, 1
  01e68	74 65		 je	 SHORT $LN144@draw_overl
  01e6a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01e6f	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01e72	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  01e76	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01e7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01e81	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01e84	8d 54 01 02	 lea	 edx, DWORD PTR [ecx+eax+2]
  01e88	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01e8e	c7 05 08 00 00
	00 2b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 299 ; 0000012bH
  01e98	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  01ea2	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01eac	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01eb6	c6 05 18 00 00
	00 8c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 140 ; 0000008cH
  01ebd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01ec2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01ec5	50		 push	 eax
  01ec6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01ec9	51		 push	 ecx
  01eca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN144@draw_overl:

; 2319 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_45						, x_org +  38, y_org +   5, 307, 186,   6,   6, 138);	// (46% alpha)

  01ecf	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01ed4	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  01ed7	83 e0 01	 and	 eax, 1
  01eda	74 65		 je	 SHORT $LN145@draw_overl
  01edc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01ee1	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01ee4	8d 54 01 26	 lea	 edx, DWORD PTR [ecx+eax+38]
  01ee8	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01eee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01ef3	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01ef6	8d 54 01 05	 lea	 edx, DWORD PTR [ecx+eax+5]
  01efa	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01f00	c7 05 08 00 00
	00 33 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 307 ; 00000133H
  01f0a	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  01f14	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01f1e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01f28	c6 05 18 00 00
	00 8a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 138 ; 0000008aH
  01f2f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01f34	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01f37	50		 push	 eax
  01f38	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01f3b	51		 push	 ecx
  01f3c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN145@draw_overl:

; 2320 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_67						, x_org +  44, y_org +  11, 313, 192,   7,   7, 135);	// (47% alpha)

  01f41	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01f46	c1 e8 10	 shr	 eax, 16			; 00000010H
  01f49	83 e0 01	 and	 eax, 1
  01f4c	74 65		 je	 SHORT $LN146@draw_overl
  01f4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01f53	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01f56	8d 54 01 2c	 lea	 edx, DWORD PTR [ecx+eax+44]
  01f5a	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01f60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01f65	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01f68	8d 54 01 0b	 lea	 edx, DWORD PTR [ecx+eax+11]
  01f6c	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01f72	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  01f7c	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  01f86	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01f90	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01f9a	c6 05 18 00 00
	00 87		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 135 ; 00000087H
  01fa1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01fa6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01fa9	50		 push	 eax
  01faa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01fad	51		 push	 ecx
  01fae	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN146@draw_overl:

; 2321 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_90						, x_org +  48, y_org +  20, 317, 201,   6,   6, 133);	// (48% alpha)

  01fb3	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01fb8	c1 e8 11	 shr	 eax, 17			; 00000011H
  01fbb	83 e0 01	 and	 eax, 1
  01fbe	74 65		 je	 SHORT $LN147@draw_overl
  01fc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01fc5	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  01fc8	8d 54 01 30	 lea	 edx, DWORD PTR [ecx+eax+48]
  01fcc	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  01fd2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01fd7	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  01fda	8d 54 01 14	 lea	 edx, DWORD PTR [ecx+eax+20]
  01fde	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  01fe4	c7 05 08 00 00
	00 3d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 317 ; 0000013dH
  01fee	c7 05 0c 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 201 ; 000000c9H
  01ff8	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02002	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0200c	c6 05 18 00 00
	00 85		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 133 ; 00000085H
  02013	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02018	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0201b	50		 push	 eax
  0201c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0201f	51		 push	 ecx
  02020	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN147@draw_overl:

; 2322 : 		draw_lamp (havoc_lamps.threat_warning_missile_below						, x_org +  23, y_org +  25, 292, 206,  11,   5, 130);	// (49% alpha)

  02025	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0202a	c1 e8 12	 shr	 eax, 18			; 00000012H
  0202d	83 e0 01	 and	 eax, 1
  02030	74 65		 je	 SHORT $LN148@draw_overl
  02032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02037	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0203a	8d 54 01 17	 lea	 edx, DWORD PTR [ecx+eax+23]
  0203e	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  02044	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02049	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  0204c	8d 54 01 19	 lea	 edx, DWORD PTR [ecx+eax+25]
  02050	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  02056	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  02060	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  0206a	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  02074	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0207e	c6 05 18 00 00
	00 82		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 130 ; 00000082H
  02085	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0208a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0208d	50		 push	 eax
  0208e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02091	51		 push	 ecx
  02092	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN148@draw_overl:

; 2323 : 		draw_lamp (havoc_lamps.threat_warning_missile_above						, x_org +  23, y_org +  21, 292, 202,  11,   4, 127);	// (50% alpha)

  02097	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0209c	c1 e8 13	 shr	 eax, 19			; 00000013H
  0209f	83 e0 01	 and	 eax, 1
  020a2	74 65		 je	 SHORT $LN149@draw_overl
  020a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  020a9	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  020ac	8d 54 01 17	 lea	 edx, DWORD PTR [ecx+eax+23]
  020b0	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  020b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  020bb	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  020be	8d 54 01 15	 lea	 edx, DWORD PTR [ecx+eax+21]
  020c2	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  020c8	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  020d2	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  020dc	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  020e6	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  020f0	c6 05 18 00 00
	00 7f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 127 ; 0000007fH
  020f7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  020fc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  020ff	50		 push	 eax
  02100	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02103	51		 push	 ecx
  02104	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN149@draw_overl:

; 2324 : 		draw_lamp (havoc_lamps.threat_warning_missile_lh_lock		 				, x_org +  17, y_org +  16, 286, 197,  11,  23, 125);	// (51% alpha)

  02109	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0210e	c1 e8 14	 shr	 eax, 20			; 00000014H
  02111	83 e0 01	 and	 eax, 1
  02114	74 65		 je	 SHORT $LN150@draw_overl
  02116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0211b	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  0211e	8d 54 01 11	 lea	 edx, DWORD PTR [ecx+eax+17]
  02122	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  02128	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0212d	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  02130	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  02134	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0213a	c7 05 08 00 00
	00 1e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 286 ; 0000011eH
  02144	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  0214e	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  02158	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  02162	c6 05 18 00 00
	00 7d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 125 ; 0000007dH
  02169	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0216e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02171	50		 push	 eax
  02172	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02175	51		 push	 ecx
  02176	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN150@draw_overl:

; 2325 : 		draw_lamp (havoc_lamps.threat_warning_missile_rh_lock						, x_org +  29, y_org +  16, 298, 197,  11,  23, 122);	// (52% alpha)

  0217b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02180	c1 e8 15	 shr	 eax, 21			; 00000015H
  02183	83 e0 01	 and	 eax, 1
  02186	74 65		 je	 SHORT $LN151@draw_overl
  02188	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0218d	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  02190	8d 54 01 1d	 lea	 edx, DWORD PTR [ecx+eax+29]
  02194	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0219a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0219f	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  021a2	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  021a6	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  021ac	c7 05 08 00 00
	00 2a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 298 ; 0000012aH
  021b6	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  021c0	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  021ca	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  021d4	c6 05 18 00 00
	00 7a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 122 ; 0000007aH
  021db	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  021e0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  021e3	50		 push	 eax
  021e4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  021e7	51		 push	 ecx
  021e8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN151@draw_overl:

; 2326 : 		draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear_close_range		, x_org +  16, y_org +  41, 285, 222,   4,   4, 120);	// (53% alpha)

  021ed	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  021f2	c1 e8 16	 shr	 eax, 22			; 00000016H
  021f5	83 e0 01	 and	 eax, 1
  021f8	74 65		 je	 SHORT $LN152@draw_overl
  021fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  021ff	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  02202	8d 54 01 10	 lea	 edx, DWORD PTR [ecx+eax+16]
  02206	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0220c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02211	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  02214	8d 54 01 29	 lea	 edx, DWORD PTR [ecx+eax+41]
  02218	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  0221e	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  02228	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  02232	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0223c	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02246	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  0224d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02252	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02255	50		 push	 eax
  02256	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02259	51		 push	 ecx
  0225a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN152@draw_overl:

; 2327 : 		draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear_close_range		, x_org +  36, y_org +  41, 305, 222,   5,   4, 117);	// (54% alpha)

  0225f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02264	c1 e8 17	 shr	 eax, 23			; 00000017H
  02267	83 e0 01	 and	 eax, 1
  0226a	74 65		 je	 SHORT $LN153@draw_overl
  0226c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02271	8b 4d 08	 mov	 ecx, DWORD PTR _x_org$[ebp]
  02274	8d 54 01 24	 lea	 edx, DWORD PTR [ecx+eax+36]
  02278	89 15 00 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, edx
  0227e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02283	8b 4d 0c	 mov	 ecx, DWORD PTR _y_org$[ebp]
  02286	8d 54 01 29	 lea	 edx, DWORD PTR [ecx+eax+41]
  0228a	89 15 04 00 00
	00		 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, edx
  02290	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  0229a	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  022a4	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  022ae	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  022b8	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  022bf	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  022c4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  022c7	50		 push	 eax
  022c8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  022cb	51		 push	 ecx
  022cc	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN153@draw_overl:

; 2328 : 
; 2329 : 		unlock_screen (active_screen);

  022d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_screen@@3PAUSCREEN@@A ; active_screen
  022d6	50		 push	 eax
  022d7	e8 00 00 00 00	 call	 ?unlock_screen@@YGHPAUSCREEN@@@Z ; unlock_screen
$LN9@draw_overl:
$LN1@draw_overl:

; 2330 : 	}
; 2331 : }

  022dc	5f		 pop	 edi
  022dd	5e		 pop	 esi
  022de	5b		 pop	 ebx
  022df	8b e5		 mov	 esp, ebp
  022e1	5d		 pop	 ebp
  022e2	c2 08 00	 ret	 8
  022e5	0f 1f 00	 npad	 3
$LN159@draw_overl:
  022e8	00 00 00 00	 DD	 $LN5@draw_overl
  022ec	00 00 00 00	 DD	 $LN6@draw_overl
  022f0	00 00 00 00	 DD	 $LN7@draw_overl
  022f4	00 00 00 00	 DD	 $LN8@draw_overl
?draw_overlaid_threat_warning_display@@YGXHH@Z ENDP	; draw_overlaid_threat_warning_display
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z PROC	; draw_havoc_oil_gauges, COMDAT

; 1677 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1678 : 	unsigned char
; 1679 : 		*sprite_data,
; 1680 : 		*mask_data;
; 1681 : 
; 1682 : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 1683 : 
; 1684 : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 1685 : 
; 1686 : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 51 01 00
	00		 je	 $LN9@draw_havoc

; 1687 : 	{
; 1688 : 		static float
; 1689 : 			timer = 0.0;
; 1690 : 
; 1691 : 		havoc_lamps.lh_engine_oil_pressure_normal = 0;

  0003e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00043	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  00048	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1692 : 		havoc_lamps.rh_engine_oil_pressure_normal = 0;

  0004d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00052	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  00057	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1693 : 		havoc_lamps.lh_engine_oil_pressure_low = 0;

  0005c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00061	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00066	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1694 : 		havoc_lamps.rh_engine_oil_pressure_low = 0;

  0006b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00070	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  00075	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1695 : 		havoc_lamps.lh_engine_oil_temperature_normal = 0;

  0007a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0007f	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  00084	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1696 : 		havoc_lamps.rh_engine_oil_temperature_normal = 0;

  00089	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0008e	25 ff ff ff bf	 and	 eax, -1073741825	; bfffffffH
  00093	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1697 : 		havoc_lamps.lh_engine_oil_temperature_high = 0;

  00098	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0009d	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  000a2	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1698 : 		havoc_lamps.rh_engine_oil_temperature_high = 0;

  000a7	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  000ac	83 e0 fe	 and	 eax, -2			; fffffffeH
  000af	a3 0c 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12, eax

; 1699 : 
; 1700 : 		timer += get_delta_time ();

  000b4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000bc	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000c4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 1701 : 
; 1702 : 		if (timer < (ONE_SECOND * 1.0))

  000cc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000d4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000dc	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e0	76 3e		 jbe	 SHORT $LN5@draw_havoc

; 1703 : 		{
; 1704 : 			havoc_lamps.lh_engine_oil_pressure_normal = 1;

  000e2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  000e7	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  000ec	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1705 : 			havoc_lamps.rh_engine_oil_pressure_normal = 1;

  000f1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  000f6	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  000fb	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1706 : 			havoc_lamps.lh_engine_oil_temperature_normal = 1;

  00100	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00105	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  0010a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1707 : 			havoc_lamps.rh_engine_oil_temperature_normal = 1;

  0010f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00114	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00119	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0011e	eb 6f		 jmp	 SHORT $LN9@draw_havoc
$LN5@draw_havoc:

; 1708 : 		}
; 1709 : 		else if (timer < (ONE_SECOND * 2.0))

  00120	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00128	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00130	66 0f 2f c8	 comisd	 xmm1, xmm0
  00134	76 3c		 jbe	 SHORT $LN7@draw_havoc

; 1710 : 		{
; 1711 : 			havoc_lamps.lh_engine_oil_pressure_low = 1;

  00136	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0013b	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  00140	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1712 : 			havoc_lamps.rh_engine_oil_pressure_low = 1;

  00145	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0014a	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  0014f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1713 : 			havoc_lamps.lh_engine_oil_temperature_high = 1;

  00154	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00159	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  0015e	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1714 : 			havoc_lamps.rh_engine_oil_temperature_high = 1;

  00163	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  00168	83 c8 01	 or	 eax, 1
  0016b	a3 0c 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12, eax
  00170	eb 1d		 jmp	 SHORT $LN9@draw_havoc
$LN7@draw_havoc:

; 1715 : 		}
; 1716 : 		else if (timer > (ONE_SECOND * 3.0))

  00172	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0017a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4008000000000000
  00182	76 0b		 jbe	 SHORT $LN9@draw_havoc

; 1717 : 		{
; 1718 : 			timer = 0.0;

  00184	0f 57 c0	 xorps	 xmm0, xmm0
  00187	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN9@draw_havoc:

; 1719 : 		}
; 1720 : 	}
; 1721 : 
; 1722 : 	switch (panel)

  0018f	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00192	89 45 b4	 mov	 DWORD PTR tv128[ebp], eax
  00195	83 7d b4 18	 cmp	 DWORD PTR tv128[ebp], 24 ; 00000018H
  00199	74 19		 je	 SHORT $LN10@draw_havoc
  0019b	83 7d b4 19	 cmp	 DWORD PTR tv128[ebp], 25 ; 00000019H
  0019f	0f 84 71 03 00
	00		 je	 $LN19@draw_havoc
  001a5	83 7d b4 1a	 cmp	 DWORD PTR tv128[ebp], 26 ; 0000001aH
  001a9	0f 84 c9 06 00
	00		 je	 $LN28@draw_havoc
  001af	e9 13 0a 00 00	 jmp	 $LN37@draw_havoc
$LN10@draw_havoc:

; 1723 : 	{
; 1724 : 		////////////////////////////////////////
; 1725 : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 1726 : 		////////////////////////////////////////
; 1727 : 		{
; 1728 : 			#define X_ORG (547)
; 1729 : 			#define Y_ORG (383)
; 1730 : 
; 1731 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_normal		, X_ORG +   2, Y_ORG +   2, 580,  55,   3,  13,  46);	// (82% alpha)

  001b4	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  001b9	c1 e8 19	 shr	 eax, 25			; 00000019H
  001bc	83 e0 01	 and	 eax, 1
  001bf	74 5f		 je	 SHORT $LN11@draw_havoc
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  001c6	05 25 02 00 00	 add	 eax, 549		; 00000225H
  001cb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001d5	05 81 01 00 00	 add	 eax, 385		; 00000181H
  001da	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001df	c7 05 08 00 00
	00 44 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 580 ; 00000244H
  001e9	c7 05 0c 00 00
	00 37 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 55 ; 00000037H
  001f3	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  001fd	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00207	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  0020e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00213	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00216	50		 push	 eax
  00217	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0021a	51		 push	 ecx
  0021b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN11@draw_havoc:

; 1732 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_normal		, X_ORG +  13, Y_ORG +   2, 591,  55,   4,  13,  43);	// (83% alpha)

  00220	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00225	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  00228	83 e0 01	 and	 eax, 1
  0022b	74 5f		 je	 SHORT $LN12@draw_havoc
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00232	05 30 02 00 00	 add	 eax, 560		; 00000230H
  00237	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0023c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00241	05 81 01 00 00	 add	 eax, 385		; 00000181H
  00246	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0024b	c7 05 08 00 00
	00 4f 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 591 ; 0000024fH
  00255	c7 05 0c 00 00
	00 37 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 55 ; 00000037H
  0025f	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  00269	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00273	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  0027a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0027f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00282	50		 push	 eax
  00283	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00286	51		 push	 ecx
  00287	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN12@draw_havoc:

; 1733 : 
; 1734 : 			#undef X_ORG
; 1735 : 			#undef Y_ORG
; 1736 : 
; 1737 : 			#define X_ORG (547)
; 1738 : 			#define Y_ORG (393)
; 1739 : 
; 1740 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_low			, X_ORG +   1, Y_ORG +   1, 579,  90,   4,   5,  46);	// (82% alpha)

  0028c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00291	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  00294	83 e0 01	 and	 eax, 1
  00297	74 5f		 je	 SHORT $LN13@draw_havoc
  00299	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0029e	05 24 02 00 00	 add	 eax, 548		; 00000224H
  002a3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  002ad	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  002b2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  002b7	c7 05 08 00 00
	00 43 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 579 ; 00000243H
  002c1	c7 05 0c 00 00
	00 5a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 90 ; 0000005aH
  002cb	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  002d5	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  002df	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  002e6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  002eb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  002ee	50		 push	 eax
  002ef	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  002f2	51		 push	 ecx
  002f3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN13@draw_havoc:

; 1741 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_low			, X_ORG +  13, Y_ORG +   1, 591,  90,   4,   5,  43);	// (83% alpha)

  002f8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002fd	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  00300	83 e0 01	 and	 eax, 1
  00303	74 5f		 je	 SHORT $LN14@draw_havoc
  00305	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0030a	05 30 02 00 00	 add	 eax, 560		; 00000230H
  0030f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00319	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  0031e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00323	c7 05 08 00 00
	00 4f 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 591 ; 0000024fH
  0032d	c7 05 0c 00 00
	00 5a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 90 ; 0000005aH
  00337	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  00341	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0034b	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  00352	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00357	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0035a	50		 push	 eax
  0035b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0035e	51		 push	 ecx
  0035f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN14@draw_havoc:

; 1742 : 
; 1743 : 			#undef X_ORG
; 1744 : 			#undef Y_ORG
; 1745 : 
; 1746 : 			#define X_ORG (547)
; 1747 : 			#define Y_ORG (420)
; 1748 : 
; 1749 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_normal	, X_ORG +   1, Y_ORG +   1, 579,  72,   5,  15,  46);	// (82% alpha)

  00364	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00369	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  0036c	83 e0 01	 and	 eax, 1
  0036f	74 5f		 je	 SHORT $LN15@draw_havoc
  00371	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00376	05 24 02 00 00	 add	 eax, 548		; 00000224H
  0037b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00380	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00385	05 a5 01 00 00	 add	 eax, 421		; 000001a5H
  0038a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0038f	c7 05 08 00 00
	00 43 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 579 ; 00000243H
  00399	c7 05 0c 00 00
	00 48 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 72 ; 00000048H
  003a3	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  003ad	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  003b7	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  003be	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  003c3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003c6	50		 push	 eax
  003c7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003ca	51		 push	 ecx
  003cb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN15@draw_havoc:

; 1750 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_normal	, X_ORG +  13, Y_ORG +   1, 591,  72,   5,  15,  43);	// (83% alpha)

  003d0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003d5	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  003d8	83 e0 01	 and	 eax, 1
  003db	74 5f		 je	 SHORT $LN16@draw_havoc
  003dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  003e2	05 30 02 00 00	 add	 eax, 560		; 00000230H
  003e7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  003f1	05 a5 01 00 00	 add	 eax, 421		; 000001a5H
  003f6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  003fb	c7 05 08 00 00
	00 4f 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 591 ; 0000024fH
  00405	c7 05 0c 00 00
	00 48 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 72 ; 00000048H
  0040f	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  00419	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  00423	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  0042a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0042f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00432	50		 push	 eax
  00433	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00436	51		 push	 ecx
  00437	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN16@draw_havoc:

; 1751 : 
; 1752 : 			#undef X_ORG
; 1753 : 			#undef Y_ORG
; 1754 : 
; 1755 : 			#define X_ORG (547)
; 1756 : 			#define Y_ORG (410)
; 1757 : 
; 1758 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_high		, X_ORG +   1, Y_ORG +   1, 576,  99,   4,  25,  46);	// (82% alpha)

  0043c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00441	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00444	83 e0 01	 and	 eax, 1
  00447	74 5f		 je	 SHORT $LN17@draw_havoc
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0044e	05 24 02 00 00	 add	 eax, 548		; 00000224H
  00453	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00458	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0045d	05 9b 01 00 00	 add	 eax, 411		; 0000019bH
  00462	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00467	c7 05 08 00 00
	00 40 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 576 ; 00000240H
  00471	c7 05 0c 00 00
	00 63 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 99 ; 00000063H
  0047b	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  00485	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  0048f	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00496	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0049b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0049e	50		 push	 eax
  0049f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004a2	51		 push	 ecx
  004a3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN17@draw_havoc:

; 1759 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_high		, X_ORG +  13, Y_ORG +   1, 588,  99,   4,  25,  43);	// (83% alpha)

  004a8	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  004ad	83 e0 01	 and	 eax, 1
  004b0	74 5f		 je	 SHORT $LN18@draw_havoc
  004b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  004b7	05 30 02 00 00	 add	 eax, 560		; 00000230H
  004bc	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004c6	05 9b 01 00 00	 add	 eax, 411		; 0000019bH
  004cb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004d0	c7 05 08 00 00
	00 4c 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 588 ; 0000024cH
  004da	c7 05 0c 00 00
	00 63 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 99 ; 00000063H
  004e4	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  004ee	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  004f8	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  004ff	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00504	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00507	50		 push	 eax
  00508	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0050b	51		 push	 ecx
  0050c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN18@draw_havoc:

; 1760 : 
; 1761 : 			#undef X_ORG
; 1762 : 			#undef Y_ORG
; 1763 : 
; 1764 : 			break;

  00511	e9 bf 06 00 00	 jmp	 $LN2@draw_havoc
$LN19@draw_havoc:

; 1765 : 		}
; 1766 : 		////////////////////////////////////////
; 1767 : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 1768 : 		////////////////////////////////////////
; 1769 : 		{
; 1770 : 			#define X_ORG (284)
; 1771 : 			#define Y_ORG (353)
; 1772 : 
; 1773 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_normal		, X_ORG +   1, Y_ORG +   4, 600,  57,   4,  12,  46);	// (82% alpha)

  00516	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0051b	c1 e8 19	 shr	 eax, 25			; 00000019H
  0051e	83 e0 01	 and	 eax, 1
  00521	74 5f		 je	 SHORT $LN20@draw_havoc
  00523	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00528	05 1d 01 00 00	 add	 eax, 285		; 0000011dH
  0052d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00537	05 65 01 00 00	 add	 eax, 357		; 00000165H
  0053c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00541	c7 05 08 00 00
	00 58 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 600 ; 00000258H
  0054b	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00555	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0055f	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00569	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00570	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00575	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00578	50		 push	 eax
  00579	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0057c	51		 push	 ecx
  0057d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN20@draw_havoc:

; 1774 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_normal		, X_ORG +  11, Y_ORG +   1, 610,  54,   4,  12,  43);	// (83% alpha)

  00582	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00587	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  0058a	83 e0 01	 and	 eax, 1
  0058d	74 5f		 je	 SHORT $LN21@draw_havoc
  0058f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00594	05 27 01 00 00	 add	 eax, 295		; 00000127H
  00599	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0059e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005a3	05 62 01 00 00	 add	 eax, 354		; 00000162H
  005a8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  005ad	c7 05 08 00 00
	00 62 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 610 ; 00000262H
  005b7	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  005c1	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  005cb	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  005d5	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  005dc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  005e1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  005e4	50		 push	 eax
  005e5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  005e8	51		 push	 ecx
  005e9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN21@draw_havoc:

; 1775 : 
; 1776 : 			#undef X_ORG
; 1777 : 			#undef Y_ORG
; 1778 : 
; 1779 : 			#define X_ORG (284)
; 1780 : 			#define Y_ORG (362)
; 1781 : 
; 1782 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_low			, X_ORG +   2, Y_ORG +   3, 601,  92,   4,   5,  46);	// (82% alpha)

  005ee	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  005f3	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  005f6	83 e0 01	 and	 eax, 1
  005f9	74 5f		 je	 SHORT $LN22@draw_havoc
  005fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00600	05 1e 01 00 00	 add	 eax, 286		; 0000011eH
  00605	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0060a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0060f	05 6d 01 00 00	 add	 eax, 365		; 0000016dH
  00614	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00619	c7 05 08 00 00
	00 59 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 601 ; 00000259H
  00623	c7 05 0c 00 00
	00 5c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 92 ; 0000005cH
  0062d	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  00637	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  00641	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00648	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0064d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00650	50		 push	 eax
  00651	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00654	51		 push	 ecx
  00655	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN22@draw_havoc:

; 1783 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_low			, X_ORG +  12, Y_ORG +   0, 611,  89,   4,   4,  43);	// (83% alpha)

  0065a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0065f	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  00662	83 e0 01	 and	 eax, 1
  00665	74 5f		 je	 SHORT $LN23@draw_havoc
  00667	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0066c	05 28 01 00 00	 add	 eax, 296		; 00000128H
  00671	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00676	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0067b	05 6a 01 00 00	 add	 eax, 362		; 0000016aH
  00680	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00685	c7 05 08 00 00
	00 63 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 611 ; 00000263H
  0068f	c7 05 0c 00 00
	00 59 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 89 ; 00000059H
  00699	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  006a3	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  006ad	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  006b4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  006b9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  006bc	50		 push	 eax
  006bd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006c0	51		 push	 ecx
  006c1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN23@draw_havoc:

; 1784 : 
; 1785 : 			#undef X_ORG
; 1786 : 			#undef Y_ORG
; 1787 : 
; 1788 : 			#define X_ORG (290)
; 1789 : 			#define Y_ORG (386)
; 1790 : 
; 1791 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_normal	, X_ORG +   0, Y_ORG +   4, 599,  75,   6,  13,  46);	// (82% alpha)

  006c6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006cb	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  006ce	83 e0 01	 and	 eax, 1
  006d1	74 5f		 je	 SHORT $LN24@draw_havoc
  006d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  006d8	05 22 01 00 00	 add	 eax, 290		; 00000122H
  006dd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  006e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  006e7	05 86 01 00 00	 add	 eax, 390		; 00000186H
  006ec	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  006f1	c7 05 08 00 00
	00 57 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 599 ; 00000257H
  006fb	c7 05 0c 00 00
	00 4b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 75 ; 0000004bH
  00705	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0070f	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00719	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00720	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00725	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00728	50		 push	 eax
  00729	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0072c	51		 push	 ecx
  0072d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN24@draw_havoc:

; 1792 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_normal	, X_ORG +  11, Y_ORG +   1, 610,  72,   5,  12,  43);	// (83% alpha)

  00732	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00737	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  0073a	83 e0 01	 and	 eax, 1
  0073d	74 5f		 je	 SHORT $LN25@draw_havoc
  0073f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00744	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  00749	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0074e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00753	05 83 01 00 00	 add	 eax, 387		; 00000183H
  00758	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0075d	c7 05 08 00 00
	00 62 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 610 ; 00000262H
  00767	c7 05 0c 00 00
	00 48 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 72 ; 00000048H
  00771	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  0077b	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00785	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  0078c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00791	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00794	50		 push	 eax
  00795	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00798	51		 push	 ecx
  00799	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN25@draw_havoc:

; 1793 : 
; 1794 : 			#undef X_ORG
; 1795 : 			#undef Y_ORG
; 1796 : 
; 1797 : 			#define X_ORG (288)
; 1798 : 			#define Y_ORG (377)
; 1799 : 
; 1800 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_high		, X_ORG +   0, Y_ORG +   3, 596, 101,   8,  23,  46);	// (82% alpha)

  0079e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007a3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  007a6	83 e0 01	 and	 eax, 1
  007a9	74 5f		 je	 SHORT $LN26@draw_havoc
  007ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  007b0	05 20 01 00 00	 add	 eax, 288		; 00000120H
  007b5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  007ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  007bf	05 7c 01 00 00	 add	 eax, 380		; 0000017cH
  007c4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  007c9	c7 05 08 00 00
	00 54 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 596 ; 00000254H
  007d3	c7 05 0c 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 101 ; 00000065H
  007dd	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  007e7	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  007f1	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  007f8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  007fd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00800	50		 push	 eax
  00801	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00804	51		 push	 ecx
  00805	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN26@draw_havoc:

; 1801 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_high		, X_ORG +  10, Y_ORG +   0, 606,  98,   8,  22,  43);	// (83% alpha)

  0080a	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  0080f	83 e0 01	 and	 eax, 1
  00812	74 5f		 je	 SHORT $LN27@draw_havoc
  00814	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00819	05 2a 01 00 00	 add	 eax, 298		; 0000012aH
  0081e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00823	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00828	05 79 01 00 00	 add	 eax, 377		; 00000179H
  0082d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00832	c7 05 08 00 00
	00 5e 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 606 ; 0000025eH
  0083c	c7 05 0c 00 00
	00 62 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 98 ; 00000062H
  00846	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00850	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  0085a	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  00861	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00866	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00869	50		 push	 eax
  0086a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0086d	51		 push	 ecx
  0086e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN27@draw_havoc:

; 1802 : 
; 1803 : 			#undef X_ORG
; 1804 : 			#undef Y_ORG
; 1805 : 
; 1806 : 			break;

  00873	e9 5d 03 00 00	 jmp	 $LN2@draw_havoc
$LN28@draw_havoc:

; 1807 : 		}
; 1808 : 		////////////////////////////////////////
; 1809 : 		case COCKPIT_PANEL_DOWN20_RIGHT60:
; 1810 : 		////////////////////////////////////////
; 1811 : 		{
; 1812 : 			#define X_ORG (5)
; 1813 : 			#define Y_ORG (399)
; 1814 : 
; 1815 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_normal		, X_ORG +   0, Y_ORG +   9, 618,  62,   9,  14,  46);	// (82% alpha)

  00878	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0087d	c1 e8 19	 shr	 eax, 25			; 00000019H
  00880	83 e0 01	 and	 eax, 1
  00883	74 5d		 je	 SHORT $LN29@draw_havoc
  00885	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0088a	83 c0 05	 add	 eax, 5
  0088d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00892	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00897	05 98 01 00 00	 add	 eax, 408		; 00000198H
  0089c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  008a1	c7 05 08 00 00
	00 6a 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 618 ; 0000026aH
  008ab	c7 05 0c 00 00
	00 3e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 62 ; 0000003eH
  008b5	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  008bf	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  008c9	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  008d0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  008d5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  008d8	50		 push	 eax
  008d9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  008dc	51		 push	 ecx
  008dd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN29@draw_havoc:

; 1816 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_normal		, X_ORG +  12, Y_ORG +   2, 630,  55,   8,  13,  43);	// (83% alpha)

  008e2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008e7	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  008ea	83 e0 01	 and	 eax, 1
  008ed	74 5d		 je	 SHORT $LN30@draw_havoc
  008ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  008f4	83 c0 11	 add	 eax, 17			; 00000011H
  008f7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  008fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00901	05 91 01 00 00	 add	 eax, 401		; 00000191H
  00906	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0090b	c7 05 08 00 00
	00 76 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 630 ; 00000276H
  00915	c7 05 0c 00 00
	00 37 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 55 ; 00000037H
  0091f	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00929	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00933	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  0093a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0093f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00942	50		 push	 eax
  00943	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00946	51		 push	 ecx
  00947	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN30@draw_havoc:

; 1817 : 
; 1818 : 			#undef X_ORG
; 1819 : 			#undef Y_ORG
; 1820 : 
; 1821 : 			#define X_ORG (6)
; 1822 : 			#define Y_ORG (410)
; 1823 : 
; 1824 : 			draw_lamp (havoc_lamps.lh_engine_oil_pressure_low			, X_ORG +   4, Y_ORG +   7, 622, 107,   3,   4,  46);	// (82% alpha)

  0094c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00951	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  00954	83 e0 01	 and	 eax, 1
  00957	74 5d		 je	 SHORT $LN31@draw_havoc
  00959	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0095e	83 c0 0a	 add	 eax, 10			; 0000000aH
  00961	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00966	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0096b	05 a1 01 00 00	 add	 eax, 417		; 000001a1H
  00970	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00975	c7 05 08 00 00
	00 6e 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 622 ; 0000026eH
  0097f	c7 05 0c 00 00
	00 6b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 107 ; 0000006bH
  00989	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  00993	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0099d	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  009a4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  009a9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  009ac	50		 push	 eax
  009ad	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  009b0	51		 push	 ecx
  009b1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN31@draw_havoc:

; 1825 : 			draw_lamp (havoc_lamps.rh_engine_oil_pressure_low			, X_ORG +  16, Y_ORG +   0, 634, 100,   3,   3,  43);	// (83% alpha)

  009b6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  009bb	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  009be	83 e0 01	 and	 eax, 1
  009c1	74 5d		 je	 SHORT $LN32@draw_havoc
  009c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  009c8	83 c0 16	 add	 eax, 22			; 00000016H
  009cb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  009d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  009d5	05 9a 01 00 00	 add	 eax, 410		; 0000019aH
  009da	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  009df	c7 05 08 00 00
	00 7a 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 634 ; 0000027aH
  009e9	c7 05 0c 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 100 ; 00000064H
  009f3	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  009fd	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  00a07	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  00a0e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a13	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a16	50		 push	 eax
  00a17	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a1a	51		 push	 ecx
  00a1b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN32@draw_havoc:

; 1826 : 
; 1827 : 			#undef X_ORG
; 1828 : 			#undef Y_ORG
; 1829 : 
; 1830 : 			#define X_ORG (20)
; 1831 : 			#define Y_ORG (434)
; 1832 : 
; 1833 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_normal	, X_ORG +   1, Y_ORG +   9, 619,  86,   8,  13,  46);	// (82% alpha)

  00a20	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00a25	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00a28	83 e0 01	 and	 eax, 1
  00a2b	74 5d		 je	 SHORT $LN33@draw_havoc
  00a2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a32	83 c0 15	 add	 eax, 21			; 00000015H
  00a35	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00a3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00a3f	05 bb 01 00 00	 add	 eax, 443		; 000001bbH
  00a44	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a49	c7 05 08 00 00
	00 6b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 619 ; 0000026bH
  00a53	c7 05 0c 00 00
	00 56 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 86 ; 00000056H
  00a5d	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00a67	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00a71	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00a78	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a7d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a80	50		 push	 eax
  00a81	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a84	51		 push	 ecx
  00a85	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN33@draw_havoc:

; 1834 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_normal	, X_ORG +  13, Y_ORG +   1, 631,  78,   7,  14,  43);	// (83% alpha)

  00a8a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00a8f	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  00a92	83 e0 01	 and	 eax, 1
  00a95	74 5d		 je	 SHORT $LN34@draw_havoc
  00a97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a9c	83 c0 21	 add	 eax, 33			; 00000021H
  00a9f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00aa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00aa9	05 b3 01 00 00	 add	 eax, 435		; 000001b3H
  00aae	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ab3	c7 05 08 00 00
	00 77 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 631 ; 00000277H
  00abd	c7 05 0c 00 00
	00 4e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 78 ; 0000004eH
  00ac7	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  00ad1	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00adb	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  00ae2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ae7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00aea	50		 push	 eax
  00aeb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00aee	51		 push	 ecx
  00aef	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN34@draw_havoc:

; 1835 : 
; 1836 : 			#undef X_ORG
; 1837 : 			#undef Y_ORG
; 1838 : 
; 1839 : 			#define X_ORG (16)
; 1840 : 			#define Y_ORG (425)
; 1841 : 
; 1842 : 			draw_lamp (havoc_lamps.lh_engine_oil_temperature_high		, X_ORG +   0, Y_ORG +   7, 615, 120,  14,  25,  46);	// (82% alpha)

  00af4	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00af9	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00afc	83 e0 01	 and	 eax, 1
  00aff	74 5d		 je	 SHORT $LN35@draw_havoc
  00b01	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b06	83 c0 10	 add	 eax, 16			; 00000010H
  00b09	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b13	05 b0 01 00 00	 add	 eax, 432		; 000001b0H
  00b18	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b1d	c7 05 08 00 00
	00 67 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 615 ; 00000267H
  00b27	c7 05 0c 00 00
	00 78 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 120 ; 00000078H
  00b31	c7 05 10 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 14 ; 0000000eH
  00b3b	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  00b45	c6 05 18 00 00
	00 2e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 46 ; 0000002eH
  00b4c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b51	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b54	50		 push	 eax
  00b55	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b58	51		 push	 ecx
  00b59	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN35@draw_havoc:

; 1843 : 			draw_lamp (havoc_lamps.rh_engine_oil_temperature_high		, X_ORG +  11, Y_ORG +   0, 626, 113,  13,  23,  43);	// (83% alpha)

  00b5e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+12
  00b63	83 e0 01	 and	 eax, 1
  00b66	74 5d		 je	 SHORT $LN36@draw_havoc
  00b68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b6d	83 c0 1b	 add	 eax, 27			; 0000001bH
  00b70	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b75	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b7a	05 a9 01 00 00	 add	 eax, 425		; 000001a9H
  00b7f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b84	c7 05 08 00 00
	00 72 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 626 ; 00000272H
  00b8e	c7 05 0c 00 00
	00 71 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 113 ; 00000071H
  00b98	c7 05 10 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 13 ; 0000000dH
  00ba2	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  00bac	c6 05 18 00 00
	00 2b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 43 ; 0000002bH
  00bb3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00bb8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00bbb	50		 push	 eax
  00bbc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00bbf	51		 push	 ecx
  00bc0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN36@draw_havoc:

; 1844 : 
; 1845 : 			#undef X_ORG
; 1846 : 			#undef Y_ORG
; 1847 : 
; 1848 : 			break;

  00bc5	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN37@draw_havoc:

; 1849 : 		}
; 1850 : 		////////////////////////////////////////
; 1851 : 		default:
; 1852 : 		////////////////////////////////////////
; 1853 : 		{
; 1854 : 			debug_fatal (lamp_error);

  00bc7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  00bcc	50		 push	 eax
  00bcd	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00bd2	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 1855 : 
; 1856 : 			break;
; 1857 : 		}
; 1858 : 	}
; 1859 : }

  00bd5	5f		 pop	 edi
  00bd6	5e		 pop	 esi
  00bd7	5b		 pop	 ebx
  00bd8	8b e5		 mov	 esp, ebp
  00bda	5d		 pop	 ebp
  00bdb	c2 04 00	 ret	 4
?draw_havoc_oil_gauges@@YGXW4COCKPIT_PANELS@@@Z ENDP	; draw_havoc_oil_gauges
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv80 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z PROC	; draw_havoc_radio_lamp, COMDAT

; 1586 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1587 : 	unsigned char
; 1588 : 		*sprite_data,
; 1589 : 		*mask_data;
; 1590 : 
; 1591 : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 1592 : 
; 1593 : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 1594 : 
; 1595 : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	74 6b		 je	 SHORT $LN7@draw_havoc

; 1596 : 	{
; 1597 : 		static float
; 1598 : 			timer = 0.0;
; 1599 : 
; 1600 : 		timer += get_delta_time ();

  0003a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00042	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 1601 : 
; 1602 : 		if (timer < (ONE_SECOND * 1.0))

  00052	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0005a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00062	66 0f 2f c8	 comisd	 xmm1, xmm0
  00066	76 11		 jbe	 SHORT $LN5@draw_havoc

; 1603 : 		{
; 1604 : 			havoc_lamps.radio = 0;

  00068	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0006d	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  00072	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1605 : 		}
; 1606 : 		else

  00077	eb 2c		 jmp	 SHORT $LN7@draw_havoc
$LN5@draw_havoc:

; 1607 : 		{
; 1608 : 			havoc_lamps.radio = 1;

  00079	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0007e	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  00083	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 1609 : 
; 1610 : 			if (timer > (ONE_SECOND * 2.0))

  00088	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00090	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  00098	76 0b		 jbe	 SHORT $LN7@draw_havoc

; 1611 : 			{
; 1612 : 				timer = 0.0;

  0009a	0f 57 c0	 xorps	 xmm0, xmm0
  0009d	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN7@draw_havoc:

; 1613 : 			}
; 1614 : 		}
; 1615 : 	}
; 1616 : 
; 1617 : 	switch (panel)

  000a5	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  000a8	89 45 b4	 mov	 DWORD PTR tv80[ebp], eax
  000ab	83 7d b4 18	 cmp	 DWORD PTR tv80[ebp], 24	; 00000018H
  000af	74 19		 je	 SHORT $LN8@draw_havoc
  000b1	83 7d b4 19	 cmp	 DWORD PTR tv80[ebp], 25	; 00000019H
  000b5	0f 84 80 00 00
	00		 je	 $LN10@draw_havoc
  000bb	83 7d b4 1a	 cmp	 DWORD PTR tv80[ebp], 26	; 0000001aH
  000bf	0f 84 e4 00 00
	00		 je	 $LN12@draw_havoc
  000c5	e9 4b 01 00 00	 jmp	 $LN14@draw_havoc
$LN8@draw_havoc:

; 1618 : 	{
; 1619 : 		////////////////////////////////////////
; 1620 : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 1621 : 		////////////////////////////////////////
; 1622 : 		{
; 1623 : 			#define X_ORG (585)
; 1624 : 			#define Y_ORG (376)
; 1625 : 
; 1626 : 			draw_lamp (havoc_lamps.radio, X_ORG +   1, Y_ORG +   1, 401,  50,  29,  17,  74);	// (71% alpha)

  000ca	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  000cf	c1 e8 18	 shr	 eax, 24			; 00000018H
  000d2	83 e0 01	 and	 eax, 1
  000d5	74 5f		 je	 SHORT $LN9@draw_havoc
  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  000dc	05 4a 02 00 00	 add	 eax, 586		; 0000024aH
  000e1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  000eb	05 79 01 00 00	 add	 eax, 377		; 00000179H
  000f0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  000f5	c7 05 08 00 00
	00 91 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 401 ; 00000191H
  000ff	c7 05 0c 00 00
	00 32 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 50 ; 00000032H
  00109	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  00113	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  0011d	c6 05 18 00 00
	00 4a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 74 ; 0000004aH
  00124	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00129	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0012c	50		 push	 eax
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00130	51		 push	 ecx
  00131	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN9@draw_havoc:

; 1627 : 
; 1628 : 			#undef X_ORG
; 1629 : 			#undef Y_ORG
; 1630 : 
; 1631 : 			break;

  00136	e9 e8 00 00 00	 jmp	 $LN2@draw_havoc
$LN10@draw_havoc:

; 1632 : 		}
; 1633 : 		////////////////////////////////////////
; 1634 : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 1635 : 		////////////////////////////////////////
; 1636 : 		{
; 1637 : 			#define X_ORG (313)
; 1638 : 			#define Y_ORG (335)
; 1639 : 
; 1640 : 			draw_lamp (havoc_lamps.radio, X_ORG +   1, Y_ORG +   1, 401,  29,  24,  19,  74);	// (71% alpha)

  0013b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00140	c1 e8 18	 shr	 eax, 24			; 00000018H
  00143	83 e0 01	 and	 eax, 1
  00146	74 5f		 je	 SHORT $LN11@draw_havoc
  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0014d	05 3a 01 00 00	 add	 eax, 314		; 0000013aH
  00152	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0015c	05 50 01 00 00	 add	 eax, 336		; 00000150H
  00161	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00166	c7 05 08 00 00
	00 91 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 401 ; 00000191H
  00170	c7 05 0c 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 29 ; 0000001dH
  0017a	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00184	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  0018e	c6 05 18 00 00
	00 4a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 74 ; 0000004aH
  00195	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0019a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0019d	50		 push	 eax
  0019e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  001a1	51		 push	 ecx
  001a2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN11@draw_havoc:

; 1641 : 
; 1642 : 			#undef X_ORG
; 1643 : 			#undef Y_ORG
; 1644 : 
; 1645 : 			break;

  001a7	eb 7a		 jmp	 SHORT $LN2@draw_havoc
$LN12@draw_havoc:

; 1646 : 		}
; 1647 : 		////////////////////////////////////////
; 1648 : 		case COCKPIT_PANEL_DOWN20_RIGHT60:
; 1649 : 		////////////////////////////////////////
; 1650 : 		{
; 1651 : 			#define X_ORG (39)
; 1652 : 			#define Y_ORG (368)
; 1653 : 
; 1654 : 			draw_lamp (havoc_lamps.radio, X_ORG +   0, Y_ORG +   1, 400,   2,  30,  25,  74);	// (71% alpha)

  001a9	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  001ae	c1 e8 18	 shr	 eax, 24			; 00000018H
  001b1	83 e0 01	 and	 eax, 1
  001b4	74 5d		 je	 SHORT $LN13@draw_havoc
  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  001bb	83 c0 27	 add	 eax, 39			; 00000027H
  001be	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001c8	05 71 01 00 00	 add	 eax, 369		; 00000171H
  001cd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001d2	c7 05 08 00 00
	00 90 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 400 ; 00000190H
  001dc	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  001e6	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  001f0	c7 05 14 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 25 ; 00000019H
  001fa	c6 05 18 00 00
	00 4a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 74 ; 0000004aH
  00201	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00206	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00209	50		 push	 eax
  0020a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0020d	51		 push	 ecx
  0020e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN13@draw_havoc:

; 1655 : 
; 1656 : 			#undef X_ORG
; 1657 : 			#undef Y_ORG
; 1658 : 
; 1659 : 			break;

  00213	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN14@draw_havoc:

; 1660 : 		}
; 1661 : 		////////////////////////////////////////
; 1662 : 		default:
; 1663 : 		////////////////////////////////////////
; 1664 : 		{
; 1665 : 			debug_fatal (lamp_error);

  00215	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  0021a	50		 push	 eax
  0021b	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00220	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 1666 : 
; 1667 : 			break;
; 1668 : 		}
; 1669 : 	}
; 1670 : }

  00223	5f		 pop	 edi
  00224	5e		 pop	 esi
  00225	5b		 pop	 ebx
  00226	8b e5		 mov	 esp, ebp
  00228	5d		 pop	 ebp
  00229	c2 04 00	 ret	 4
?draw_havoc_radio_lamp@@YGXW4COCKPIT_PANELS@@@Z ENDP	; draw_havoc_radio_lamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv148 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_havoc_warning_panel_lamps, COMDAT

; 1389 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 : 	unsigned char
; 1391 : 		*sprite_data,
; 1392 : 		*mask_data;
; 1393 : 
; 1394 : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 1395 : 
; 1396 : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 1397 : 
; 1398 : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 7b 02 00
	00		 je	 $LN22@draw_havoc

; 1399 : 	{
; 1400 : 		static float
; 1401 : 			timer = 0.0;
; 1402 : 
; 1403 : 		havoc_lamps.warning_1 = 0;

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00043	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  00048	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1404 : 		havoc_lamps.warning_2 = 0;

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00052	25 ff ff fb ff	 and	 eax, -262145		; fffbffffH
  00057	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1405 : 		havoc_lamps.warning_3 = 0;

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00061	25 ff ff f7 ff	 and	 eax, -524289		; fff7ffffH
  00066	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1406 : 		havoc_lamps.warning_4 = 0;

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00070	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00075	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1407 : 		havoc_lamps.warning_5 = 0;

  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0007f	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  00084	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1408 : 		havoc_lamps.warning_6 = 0;

  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0008e	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  00093	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1409 : 		havoc_lamps.warning_7 = 0;

  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0009d	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1410 : 		havoc_lamps.warning_8 = 0;

  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000ac	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  000b1	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1411 : 
; 1412 : 		timer += get_delta_time ();

  000b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000be	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000c6	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 1413 : 
; 1414 : 		if (timer < (ONE_SECOND * 1.0))

  000ce	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000d6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000de	66 0f 2f c8	 comisd	 xmm1, xmm0
  000e2	76 14		 jbe	 SHORT $LN5@draw_havoc

; 1415 : 		{
; 1416 : 			havoc_lamps.warning_1 = 1;

  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000e9	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  000ee	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  000f3	e9 c1 01 00 00	 jmp	 $LN22@draw_havoc
$LN5@draw_havoc:

; 1417 : 		}
; 1418 : 		else if (timer < (ONE_SECOND * 2.0))

  000f8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00100	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00108	66 0f 2f c8	 comisd	 xmm1, xmm0
  0010c	76 14		 jbe	 SHORT $LN7@draw_havoc

; 1419 : 		{
; 1420 : 			havoc_lamps.warning_2 = 1;

  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00113	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00118	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0011d	e9 97 01 00 00	 jmp	 $LN22@draw_havoc
$LN7@draw_havoc:

; 1421 : 		}
; 1422 : 		else if (timer < (ONE_SECOND * 3.0))

  00122	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0012a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00132	66 0f 2f c8	 comisd	 xmm1, xmm0
  00136	76 14		 jbe	 SHORT $LN9@draw_havoc

; 1423 : 		{
; 1424 : 			havoc_lamps.warning_3 = 1;

  00138	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0013d	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00142	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00147	e9 6d 01 00 00	 jmp	 $LN22@draw_havoc
$LN9@draw_havoc:

; 1425 : 		}
; 1426 : 		else if (timer < (ONE_SECOND * 4.0))

  0014c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00154	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0015c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00160	76 14		 jbe	 SHORT $LN11@draw_havoc

; 1427 : 		{
; 1428 : 			havoc_lamps.warning_4 = 1;

  00162	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00167	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  0016c	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00171	e9 43 01 00 00	 jmp	 $LN22@draw_havoc
$LN11@draw_havoc:

; 1429 : 		}
; 1430 : 		else if (timer < (ONE_SECOND * 5.0))

  00176	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0017e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00186	66 0f 2f c8	 comisd	 xmm1, xmm0
  0018a	76 14		 jbe	 SHORT $LN13@draw_havoc

; 1431 : 		{
; 1432 : 			havoc_lamps.warning_5 = 1;

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00191	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00196	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0019b	e9 19 01 00 00	 jmp	 $LN22@draw_havoc
$LN13@draw_havoc:

; 1433 : 		}
; 1434 : 		else if (timer < (ONE_SECOND * 6.0))

  001a0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001a8	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  001b0	66 0f 2f c8	 comisd	 xmm1, xmm0
  001b4	76 14		 jbe	 SHORT $LN15@draw_havoc

; 1435 : 		{
; 1436 : 			havoc_lamps.warning_6 = 1;

  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001bb	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  001c0	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001c5	e9 ef 00 00 00	 jmp	 $LN22@draw_havoc
$LN15@draw_havoc:

; 1437 : 		}
; 1438 : 		else if (timer < (ONE_SECOND * 7.0))

  001ca	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001d2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  001da	66 0f 2f c8	 comisd	 xmm1, xmm0
  001de	76 14		 jbe	 SHORT $LN17@draw_havoc

; 1439 : 		{
; 1440 : 			havoc_lamps.warning_7 = 1;

  001e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001e5	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  001ea	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001ef	e9 c5 00 00 00	 jmp	 $LN22@draw_havoc
$LN17@draw_havoc:

; 1441 : 		}
; 1442 : 		else if (timer < (ONE_SECOND * 8.0))

  001f4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001fc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  00204	66 0f 2f c8	 comisd	 xmm1, xmm0
  00208	76 14		 jbe	 SHORT $LN19@draw_havoc

; 1443 : 		{
; 1444 : 			havoc_lamps.warning_8 = 1;

  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0020f	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  00214	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00219	e9 9b 00 00 00	 jmp	 $LN22@draw_havoc
$LN19@draw_havoc:

; 1445 : 		}
; 1446 : 		else if (timer < (ONE_SECOND * 9.0))

  0021e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00226	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  0022e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00232	76 7a		 jbe	 SHORT $LN21@draw_havoc

; 1447 : 		{
; 1448 : 			havoc_lamps.warning_1 = 1;

  00234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00239	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  0023e	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1449 : 			havoc_lamps.warning_2 = 1;

  00243	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00248	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  0024d	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1450 : 			havoc_lamps.warning_3 = 1;

  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00257	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  0025c	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1451 : 			havoc_lamps.warning_4 = 1;

  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00266	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  0026b	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1452 : 			havoc_lamps.warning_5 = 1;

  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00275	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  0027a	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1453 : 			havoc_lamps.warning_6 = 1;

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00284	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00289	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1454 : 			havoc_lamps.warning_7 = 1;

  0028e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00293	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  00298	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1455 : 			havoc_lamps.warning_8 = 1;

  0029d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  002a2	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  002a7	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1456 : 		}
; 1457 : 		else

  002ac	eb 0b		 jmp	 SHORT $LN22@draw_havoc
$LN21@draw_havoc:

; 1458 : 		{
; 1459 : 			timer = 0.0;

  002ae	0f 57 c0	 xorps	 xmm0, xmm0
  002b1	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN22@draw_havoc:

; 1460 : 		}
; 1461 : 	}
; 1462 : 
; 1463 : 	switch (panel)

  002b9	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  002bc	89 45 b4	 mov	 DWORD PTR tv148[ebp], eax
  002bf	8b 4d b4	 mov	 ecx, DWORD PTR tv148[ebp]
  002c2	83 e9 11	 sub	 ecx, 17			; 00000011H
  002c5	89 4d b4	 mov	 DWORD PTR tv148[ebp], ecx
  002c8	83 7d b4 0e	 cmp	 DWORD PTR tv148[ebp], 14 ; 0000000eH
  002cc	0f 87 07 11 00
	00		 ja	 $LN68@draw_havoc
  002d2	8b 55 b4	 mov	 edx, DWORD PTR tv148[ebp]
  002d5	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN70@draw_havoc[edx]
  002dc	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN71@draw_havoc[eax*4]
$LN23@draw_havoc:

; 1464 : 	{
; 1465 : 		////////////////////////////////////////
; 1466 : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 1467 : 		////////////////////////////////////////
; 1468 : 		{
; 1469 : 			#define X_ORG (456)
; 1470 : 			#define Y_ORG (325)
; 1471 : 
; 1472 : 			draw_lamp (havoc_lamps.warning_1, X_ORG +   2, Y_ORG +   1, 434,   2,  23,  11,  71);	// (72% alpha)

  002e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  002e8	c1 e8 11	 shr	 eax, 17			; 00000011H
  002eb	83 e0 01	 and	 eax, 1
  002ee	74 5f		 je	 SHORT $LN24@draw_havoc
  002f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  002f5	05 ca 01 00 00	 add	 eax, 458		; 000001caH
  002fa	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  002ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00304	05 46 01 00 00	 add	 eax, 326		; 00000146H
  00309	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0030e	c7 05 08 00 00
	00 b2 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 434 ; 000001b2H
  00318	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00322	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  0032c	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00336	c6 05 18 00 00
	00 47		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 71 ; 00000047H
  0033d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00342	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00345	50		 push	 eax
  00346	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00349	51		 push	 ecx
  0034a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN24@draw_havoc:

; 1473 : 			draw_lamp (havoc_lamps.warning_2, X_ORG +  25, Y_ORG +   1, 457,   2,  23,  11,  69);	// (73% alpha)

  0034f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00354	c1 e8 12	 shr	 eax, 18			; 00000012H
  00357	83 e0 01	 and	 eax, 1
  0035a	74 5f		 je	 SHORT $LN25@draw_havoc
  0035c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00361	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  00366	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0036b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00370	05 46 01 00 00	 add	 eax, 326		; 00000146H
  00375	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0037a	c7 05 08 00 00
	00 c9 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 457 ; 000001c9H
  00384	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  0038e	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00398	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  003a2	c6 05 18 00 00
	00 45		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 69 ; 00000045H
  003a9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  003ae	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  003b1	50		 push	 eax
  003b2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  003b5	51		 push	 ecx
  003b6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN25@draw_havoc:

; 1474 : 			draw_lamp (havoc_lamps.warning_3, X_ORG +   3, Y_ORG +  13, 435,  14,  23,  11,  66);	// (74% alpha)

  003bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  003c0	c1 e8 13	 shr	 eax, 19			; 00000013H
  003c3	83 e0 01	 and	 eax, 1
  003c6	74 5f		 je	 SHORT $LN26@draw_havoc
  003c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  003cd	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  003d2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  003d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  003dc	05 52 01 00 00	 add	 eax, 338		; 00000152H
  003e1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  003e6	c7 05 08 00 00
	00 b3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 435 ; 000001b3H
  003f0	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  003fa	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00404	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0040e	c6 05 18 00 00
	00 42		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 66 ; 00000042H
  00415	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0041a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0041d	50		 push	 eax
  0041e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00421	51		 push	 ecx
  00422	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN26@draw_havoc:

; 1475 : 			draw_lamp (havoc_lamps.warning_4, X_ORG +  26, Y_ORG +  13, 458,  14,  23,  11,  64);	// (75% alpha)

  00427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0042c	c1 e8 14	 shr	 eax, 20			; 00000014H
  0042f	83 e0 01	 and	 eax, 1
  00432	74 5f		 je	 SHORT $LN27@draw_havoc
  00434	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00439	05 e2 01 00 00	 add	 eax, 482		; 000001e2H
  0043e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00448	05 52 01 00 00	 add	 eax, 338		; 00000152H
  0044d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00452	c7 05 08 00 00
	00 ca 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 458 ; 000001caH
  0045c	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  00466	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00470	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0047a	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  00481	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00486	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00489	50		 push	 eax
  0048a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0048d	51		 push	 ecx
  0048e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN27@draw_havoc:

; 1476 : 			draw_lamp (havoc_lamps.warning_5, X_ORG +   3, Y_ORG +  24, 435,  25,  24,  11,  61);	// (76% alpha)

  00493	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00498	c1 e8 15	 shr	 eax, 21			; 00000015H
  0049b	83 e0 01	 and	 eax, 1
  0049e	74 5f		 je	 SHORT $LN28@draw_havoc
  004a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  004a5	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  004aa	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004b4	05 5d 01 00 00	 add	 eax, 349		; 0000015dH
  004b9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004be	c7 05 08 00 00
	00 b3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 435 ; 000001b3H
  004c8	c7 05 0c 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 25 ; 00000019H
  004d2	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  004dc	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  004e6	c6 05 18 00 00
	00 3d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 61 ; 0000003dH
  004ed	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  004f2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  004f5	50		 push	 eax
  004f6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004f9	51		 push	 ecx
  004fa	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN28@draw_havoc:

; 1477 : 			draw_lamp (havoc_lamps.warning_6, X_ORG +  27, Y_ORG +  24, 459,  25,  23,  11,  59);	// (77% alpha)

  004ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00504	c1 e8 16	 shr	 eax, 22			; 00000016H
  00507	83 e0 01	 and	 eax, 1
  0050a	74 5f		 je	 SHORT $LN29@draw_havoc
  0050c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00511	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  00516	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0051b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00520	05 5d 01 00 00	 add	 eax, 349		; 0000015dH
  00525	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0052a	c7 05 08 00 00
	00 cb 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 459 ; 000001cbH
  00534	c7 05 0c 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 25 ; 00000019H
  0053e	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00548	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00552	c6 05 18 00 00
	00 3b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 59 ; 0000003bH
  00559	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0055e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00561	50		 push	 eax
  00562	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00565	51		 push	 ecx
  00566	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN29@draw_havoc:

; 1478 : 			draw_lamp (havoc_lamps.warning_7, X_ORG +   4, Y_ORG +  36, 436,  37,  24,  11,  56);	// (78% alpha)

  0056b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00570	c1 e8 17	 shr	 eax, 23			; 00000017H
  00573	83 e0 01	 and	 eax, 1
  00576	74 5f		 je	 SHORT $LN30@draw_havoc
  00578	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0057d	05 cc 01 00 00	 add	 eax, 460		; 000001ccH
  00582	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00587	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0058c	05 69 01 00 00	 add	 eax, 361		; 00000169H
  00591	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00596	c7 05 08 00 00
	00 b4 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 436 ; 000001b4H
  005a0	c7 05 0c 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 37 ; 00000025H
  005aa	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  005b4	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  005be	c6 05 18 00 00
	00 38		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 56 ; 00000038H
  005c5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  005ca	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  005cd	50		 push	 eax
  005ce	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  005d1	51		 push	 ecx
  005d2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN30@draw_havoc:

; 1479 : 			draw_lamp (havoc_lamps.warning_8, X_ORG +  28, Y_ORG +  36, 460,  37,  23,  11,  54);	// (79% alpha)

  005d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  005dc	c1 e8 18	 shr	 eax, 24			; 00000018H
  005df	83 e0 01	 and	 eax, 1
  005e2	74 5f		 je	 SHORT $LN31@draw_havoc
  005e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  005e9	05 e4 01 00 00	 add	 eax, 484		; 000001e4H
  005ee	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  005f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005f8	05 69 01 00 00	 add	 eax, 361		; 00000169H
  005fd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00602	c7 05 08 00 00
	00 cc 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 460 ; 000001ccH
  0060c	c7 05 0c 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 37 ; 00000025H
  00616	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00620	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0062a	c6 05 18 00 00
	00 36		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 54 ; 00000036H
  00631	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00636	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00639	50		 push	 eax
  0063a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0063d	51		 push	 ecx
  0063e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN31@draw_havoc:

; 1480 : 
; 1481 : 			#undef X_ORG
; 1482 : 			#undef Y_ORG
; 1483 : 
; 1484 : 			break;

  00643	e9 9f 0d 00 00	 jmp	 $LN2@draw_havoc
$LN32@draw_havoc:

; 1485 : 		}
; 1486 : 		////////////////////////////////////////
; 1487 : 		case COCKPIT_PANEL_LEVEL_RIGHT30:
; 1488 : 		////////////////////////////////////////
; 1489 : 		{
; 1490 : 			#define X_ORG (159)
; 1491 : 			#define Y_ORG (323)
; 1492 : 
; 1493 : 			draw_lamp (havoc_lamps.warning_1, X_ORG +   1, Y_ORG +   2, 487,   3,  24,  14,  71);	// (72% alpha)

  00648	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0064d	c1 e8 11	 shr	 eax, 17			; 00000011H
  00650	83 e0 01	 and	 eax, 1
  00653	74 5f		 je	 SHORT $LN33@draw_havoc
  00655	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0065a	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  0065f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00664	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00669	05 45 01 00 00	 add	 eax, 325		; 00000145H
  0066e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00673	c7 05 08 00 00
	00 e7 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 487 ; 000001e7H
  0067d	c7 05 0c 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 3
  00687	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00691	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0069b	c6 05 18 00 00
	00 47		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 71 ; 00000047H
  006a2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  006a7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  006aa	50		 push	 eax
  006ab	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006ae	51		 push	 ecx
  006af	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN33@draw_havoc:

; 1494 : 			draw_lamp (havoc_lamps.warning_2, X_ORG +  24, Y_ORG +   1, 510,   2,  22,  12,  69);	// (73% alpha)

  006b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  006b9	c1 e8 12	 shr	 eax, 18			; 00000012H
  006bc	83 e0 01	 and	 eax, 1
  006bf	74 5f		 je	 SHORT $LN34@draw_havoc
  006c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  006c6	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  006cb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  006d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  006d5	05 44 01 00 00	 add	 eax, 324		; 00000144H
  006da	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  006df	c7 05 08 00 00
	00 fe 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 510 ; 000001feH
  006e9	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  006f3	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  006fd	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00707	c6 05 18 00 00
	00 45		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 69 ; 00000045H
  0070e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00713	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00716	50		 push	 eax
  00717	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0071a	51		 push	 ecx
  0071b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN34@draw_havoc:

; 1495 : 			draw_lamp (havoc_lamps.warning_3, X_ORG +   3, Y_ORG +  13, 489,  14,  22,  13,  66);	// (74% alpha)

  00720	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00725	c1 e8 13	 shr	 eax, 19			; 00000013H
  00728	83 e0 01	 and	 eax, 1
  0072b	74 5f		 je	 SHORT $LN35@draw_havoc
  0072d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00732	05 a2 00 00 00	 add	 eax, 162		; 000000a2H
  00737	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0073c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00741	05 50 01 00 00	 add	 eax, 336		; 00000150H
  00746	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0074b	c7 05 08 00 00
	00 e9 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 489 ; 000001e9H
  00755	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  0075f	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00769	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00773	c6 05 18 00 00
	00 42		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 66 ; 00000042H
  0077a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0077f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00782	50		 push	 eax
  00783	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00786	51		 push	 ecx
  00787	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN35@draw_havoc:

; 1496 : 			draw_lamp (havoc_lamps.warning_4, X_ORG +  25, Y_ORG +  12, 511,  13,  22,  12,  64);	// (75% alpha)

  0078c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00791	c1 e8 14	 shr	 eax, 20			; 00000014H
  00794	83 e0 01	 and	 eax, 1
  00797	74 5f		 je	 SHORT $LN36@draw_havoc
  00799	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0079e	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  007a3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  007a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  007ad	05 4f 01 00 00	 add	 eax, 335		; 0000014fH
  007b2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  007b7	c7 05 08 00 00
	00 ff 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 511 ; 000001ffH
  007c1	c7 05 0c 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 13 ; 0000000dH
  007cb	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  007d5	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  007df	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  007e6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  007eb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  007ee	50		 push	 eax
  007ef	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  007f2	51		 push	 ecx
  007f3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN36@draw_havoc:

; 1497 : 			draw_lamp (havoc_lamps.warning_5, X_ORG +   3, Y_ORG +  24, 489,  25,  24,  15,  61);	// (76% alpha)

  007f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  007fd	c1 e8 15	 shr	 eax, 21			; 00000015H
  00800	83 e0 01	 and	 eax, 1
  00803	74 5f		 je	 SHORT $LN37@draw_havoc
  00805	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0080a	05 a2 00 00 00	 add	 eax, 162		; 000000a2H
  0080f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00814	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00819	05 5b 01 00 00	 add	 eax, 347		; 0000015bH
  0081e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00823	c7 05 08 00 00
	00 e9 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 489 ; 000001e9H
  0082d	c7 05 0c 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 25 ; 00000019H
  00837	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00841	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  0084b	c6 05 18 00 00
	00 3d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 61 ; 0000003dH
  00852	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00857	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0085a	50		 push	 eax
  0085b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0085e	51		 push	 ecx
  0085f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN37@draw_havoc:

; 1498 : 			draw_lamp (havoc_lamps.warning_6, X_ORG +  26, Y_ORG +  23, 512,  24,  22,  12,  59);	// (77% alpha)

  00864	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00869	c1 e8 16	 shr	 eax, 22			; 00000016H
  0086c	83 e0 01	 and	 eax, 1
  0086f	74 5f		 je	 SHORT $LN38@draw_havoc
  00871	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00876	05 b9 00 00 00	 add	 eax, 185		; 000000b9H
  0087b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00880	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00885	05 5a 01 00 00	 add	 eax, 346		; 0000015aH
  0088a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0088f	c7 05 08 00 00
	00 00 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 512 ; 00000200H
  00899	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  008a3	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  008ad	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  008b7	c6 05 18 00 00
	00 3b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 59 ; 0000003bH
  008be	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  008c3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  008c6	50		 push	 eax
  008c7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  008ca	51		 push	 ecx
  008cb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN38@draw_havoc:

; 1499 : 			draw_lamp (havoc_lamps.warning_7, X_ORG +   4, Y_ORG +  36, 490,  37,  24,  14,  56);	// (78% alpha)

  008d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  008d5	c1 e8 17	 shr	 eax, 23			; 00000017H
  008d8	83 e0 01	 and	 eax, 1
  008db	74 5f		 je	 SHORT $LN39@draw_havoc
  008dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  008e2	05 a3 00 00 00	 add	 eax, 163		; 000000a3H
  008e7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  008ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  008f1	05 67 01 00 00	 add	 eax, 359		; 00000167H
  008f6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  008fb	c7 05 08 00 00
	00 ea 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 490 ; 000001eaH
  00905	c7 05 0c 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 37 ; 00000025H
  0090f	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00919	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00923	c6 05 18 00 00
	00 38		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 56 ; 00000038H
  0092a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0092f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00932	50		 push	 eax
  00933	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00936	51		 push	 ecx
  00937	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN39@draw_havoc:

; 1500 : 			draw_lamp (havoc_lamps.warning_8, X_ORG +  27, Y_ORG +  34, 513,  35,  22,  14,  54);	// (79% alpha)

  0093c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00941	c1 e8 18	 shr	 eax, 24			; 00000018H
  00944	83 e0 01	 and	 eax, 1
  00947	74 5f		 je	 SHORT $LN40@draw_havoc
  00949	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0094e	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  00953	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00958	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0095d	05 65 01 00 00	 add	 eax, 357		; 00000165H
  00962	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00967	c7 05 08 00 00
	00 01 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 513 ; 00000201H
  00971	c7 05 0c 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 35 ; 00000023H
  0097b	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00985	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0098f	c6 05 18 00 00
	00 36		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 54 ; 00000036H
  00996	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0099b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0099e	50		 push	 eax
  0099f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  009a2	51		 push	 ecx
  009a3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN40@draw_havoc:

; 1501 : 
; 1502 : 			#undef X_ORG
; 1503 : 			#undef Y_ORG
; 1504 : 
; 1505 : 			break;

  009a8	e9 3a 0a 00 00	 jmp	 $LN2@draw_havoc
$LN41@draw_havoc:

; 1506 : 		}
; 1507 : 		////////////////////////////////////////
; 1508 : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 1509 : 		////////////////////////////////////////
; 1510 : 		{
; 1511 : 			#define X_ORG (457)
; 1512 : 			#define Y_ORG (129)
; 1513 : 
; 1514 : 			draw_lamp (havoc_lamps.warning_1, X_ORG +   2, Y_ORG +   1, 539,   2,  22,  12,  71);	// (72% alpha)

  009ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  009b2	c1 e8 11	 shr	 eax, 17			; 00000011H
  009b5	83 e0 01	 and	 eax, 1
  009b8	74 5f		 je	 SHORT $LN42@draw_havoc
  009ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  009bf	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  009c4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  009c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  009ce	05 82 00 00 00	 add	 eax, 130		; 00000082H
  009d3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  009d8	c7 05 08 00 00
	00 1b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 539 ; 0000021bH
  009e2	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  009ec	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  009f6	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00a00	c6 05 18 00 00
	00 47		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 71 ; 00000047H
  00a07	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a0c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a0f	50		 push	 eax
  00a10	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a13	51		 push	 ecx
  00a14	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN42@draw_havoc:

; 1515 : 			draw_lamp (havoc_lamps.warning_2, X_ORG +  24, Y_ORG +   1, 561,   2,  23,  12,  69);	// (73% alpha)

  00a19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00a1e	c1 e8 12	 shr	 eax, 18			; 00000012H
  00a21	83 e0 01	 and	 eax, 1
  00a24	74 5f		 je	 SHORT $LN43@draw_havoc
  00a26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a2b	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  00a30	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00a35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00a3a	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00a3f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a44	c7 05 08 00 00
	00 31 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 561 ; 00000231H
  00a4e	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00a58	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00a62	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00a6c	c6 05 18 00 00
	00 45		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 69 ; 00000045H
  00a73	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a78	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a7b	50		 push	 eax
  00a7c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a7f	51		 push	 ecx
  00a80	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN43@draw_havoc:

; 1516 : 			draw_lamp (havoc_lamps.warning_3, X_ORG +   2, Y_ORG +  13, 539,  14,  22,  11,  66);	// (74% alpha)

  00a85	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00a8a	c1 e8 13	 shr	 eax, 19			; 00000013H
  00a8d	83 e0 01	 and	 eax, 1
  00a90	74 5f		 je	 SHORT $LN44@draw_havoc
  00a92	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a97	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  00a9c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00aa1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00aa6	05 8e 00 00 00	 add	 eax, 142		; 0000008eH
  00aab	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ab0	c7 05 08 00 00
	00 1b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 539 ; 0000021bH
  00aba	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  00ac4	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00ace	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00ad8	c6 05 18 00 00
	00 42		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 66 ; 00000042H
  00adf	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ae4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ae7	50		 push	 eax
  00ae8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00aeb	51		 push	 ecx
  00aec	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN44@draw_havoc:

; 1517 : 			draw_lamp (havoc_lamps.warning_4, X_ORG +  24, Y_ORG +  13, 561,  14,  23,  11,  64);	// (75% alpha)

  00af1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00af6	c1 e8 14	 shr	 eax, 20			; 00000014H
  00af9	83 e0 01	 and	 eax, 1
  00afc	74 5f		 je	 SHORT $LN45@draw_havoc
  00afe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b03	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  00b08	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b12	05 8e 00 00 00	 add	 eax, 142		; 0000008eH
  00b17	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b1c	c7 05 08 00 00
	00 31 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 561 ; 00000231H
  00b26	c7 05 0c 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 14 ; 0000000eH
  00b30	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00b3a	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00b44	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  00b4b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b50	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b53	50		 push	 eax
  00b54	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b57	51		 push	 ecx
  00b58	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN45@draw_havoc:

; 1518 : 			draw_lamp (havoc_lamps.warning_5, X_ORG +   2, Y_ORG +  24, 539,  25,  22,  11,  61);	// (76% alpha)

  00b5d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00b62	c1 e8 15	 shr	 eax, 21			; 00000015H
  00b65	83 e0 01	 and	 eax, 1
  00b68	74 5f		 je	 SHORT $LN46@draw_havoc
  00b6a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b6f	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  00b74	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b79	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b7e	05 99 00 00 00	 add	 eax, 153		; 00000099H
  00b83	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b88	c7 05 08 00 00
	00 1b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 539 ; 0000021bH
  00b92	c7 05 0c 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 25 ; 00000019H
  00b9c	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00ba6	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00bb0	c6 05 18 00 00
	00 3d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 61 ; 0000003dH
  00bb7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00bbc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00bbf	50		 push	 eax
  00bc0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00bc3	51		 push	 ecx
  00bc4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN46@draw_havoc:

; 1519 : 			draw_lamp (havoc_lamps.warning_6, X_ORG +  24, Y_ORG +  24, 561,  25,  23,  11,  59);	// (77% alpha)

  00bc9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00bce	c1 e8 16	 shr	 eax, 22			; 00000016H
  00bd1	83 e0 01	 and	 eax, 1
  00bd4	74 5f		 je	 SHORT $LN47@draw_havoc
  00bd6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00bdb	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  00be0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00be5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00bea	05 99 00 00 00	 add	 eax, 153		; 00000099H
  00bef	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00bf4	c7 05 08 00 00
	00 31 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 561 ; 00000231H
  00bfe	c7 05 0c 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 25 ; 00000019H
  00c08	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00c12	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00c1c	c6 05 18 00 00
	00 3b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 59 ; 0000003bH
  00c23	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00c28	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00c2b	50		 push	 eax
  00c2c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00c2f	51		 push	 ecx
  00c30	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN47@draw_havoc:

; 1520 : 			draw_lamp (havoc_lamps.warning_7, X_ORG +   2, Y_ORG +  35, 539,  36,  22,  12,  56);	// (78% alpha)

  00c35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00c3a	c1 e8 17	 shr	 eax, 23			; 00000017H
  00c3d	83 e0 01	 and	 eax, 1
  00c40	74 5f		 je	 SHORT $LN48@draw_havoc
  00c42	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00c47	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  00c4c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c56	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  00c5b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c60	c7 05 08 00 00
	00 1b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 539 ; 0000021bH
  00c6a	c7 05 0c 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 36 ; 00000024H
  00c74	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00c7e	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00c88	c6 05 18 00 00
	00 38		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 56 ; 00000038H
  00c8f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00c94	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00c97	50		 push	 eax
  00c98	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00c9b	51		 push	 ecx
  00c9c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN48@draw_havoc:

; 1521 : 			draw_lamp (havoc_lamps.warning_8, X_ORG +  24, Y_ORG +  35, 561,  36,  23,  12,  54);	// (79% alpha)

  00ca1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ca6	c1 e8 18	 shr	 eax, 24			; 00000018H
  00ca9	83 e0 01	 and	 eax, 1
  00cac	74 5f		 je	 SHORT $LN49@draw_havoc
  00cae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00cb3	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  00cb8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00cbd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00cc2	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  00cc7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ccc	c7 05 08 00 00
	00 31 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 561 ; 00000231H
  00cd6	c7 05 0c 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 36 ; 00000024H
  00ce0	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00cea	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00cf4	c6 05 18 00 00
	00 36		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 54 ; 00000036H
  00cfb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d00	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d03	50		 push	 eax
  00d04	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d07	51		 push	 ecx
  00d08	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN49@draw_havoc:

; 1522 : 
; 1523 : 			#undef X_ORG
; 1524 : 			#undef Y_ORG
; 1525 : 
; 1526 : 			break;

  00d0d	e9 d5 06 00 00	 jmp	 $LN2@draw_havoc
$LN50@draw_havoc:

; 1527 : 		}
; 1528 : 		////////////////////////////////////////
; 1529 : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 1530 : 		////////////////////////////////////////
; 1531 : 		{
; 1532 : 			#define X_ORG (158)
; 1533 : 			#define Y_ORG (127)
; 1534 : 
; 1535 : 			draw_lamp (havoc_lamps.warning_1, X_ORG +   1, Y_ORG +   3, 587,   4,  24,  13,  71);	// (72% alpha)

  00d12	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00d17	c1 e8 11	 shr	 eax, 17			; 00000011H
  00d1a	83 e0 01	 and	 eax, 1
  00d1d	74 5f		 je	 SHORT $LN51@draw_havoc
  00d1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00d24	05 9f 00 00 00	 add	 eax, 159		; 0000009fH
  00d29	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00d2e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00d33	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00d38	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00d3d	c7 05 08 00 00
	00 4b 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 587 ; 0000024bH
  00d47	c7 05 0c 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 4
  00d51	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00d5b	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00d65	c6 05 18 00 00
	00 47		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 71 ; 00000047H
  00d6c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d71	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d74	50		 push	 eax
  00d75	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d78	51		 push	 ecx
  00d79	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN51@draw_havoc:

; 1536 : 			draw_lamp (havoc_lamps.warning_2, X_ORG +  24, Y_ORG +   1, 610,   2,  23,  12,  69);	// (73% alpha)

  00d7e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00d83	c1 e8 12	 shr	 eax, 18			; 00000012H
  00d86	83 e0 01	 and	 eax, 1
  00d89	74 5f		 je	 SHORT $LN52@draw_havoc
  00d8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00d90	05 b6 00 00 00	 add	 eax, 182		; 000000b6H
  00d95	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00d9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00d9f	05 80 00 00 00	 add	 eax, 128		; 00000080H
  00da4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00da9	c7 05 08 00 00
	00 62 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 610 ; 00000262H
  00db3	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00dbd	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00dc7	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00dd1	c6 05 18 00 00
	00 45		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 69 ; 00000045H
  00dd8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ddd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00de0	50		 push	 eax
  00de1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00de4	51		 push	 ecx
  00de5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN52@draw_havoc:

; 1537 : 			draw_lamp (havoc_lamps.warning_3, X_ORG +   3, Y_ORG +  14, 589,  15,  24,  13,  66);	// (74% alpha)

  00dea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00def	c1 e8 13	 shr	 eax, 19			; 00000013H
  00df2	83 e0 01	 and	 eax, 1
  00df5	74 5f		 je	 SHORT $LN53@draw_havoc
  00df7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00dfc	05 a1 00 00 00	 add	 eax, 161		; 000000a1H
  00e01	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e0b	05 8d 00 00 00	 add	 eax, 141		; 0000008dH
  00e10	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e15	c7 05 08 00 00
	00 4d 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 589 ; 0000024dH
  00e1f	c7 05 0c 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 15 ; 0000000fH
  00e29	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00e33	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00e3d	c6 05 18 00 00
	00 42		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 66 ; 00000042H
  00e44	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e49	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e4c	50		 push	 eax
  00e4d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e50	51		 push	 ecx
  00e51	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN53@draw_havoc:

; 1538 : 			draw_lamp (havoc_lamps.warning_4, X_ORG +  25, Y_ORG +  12, 611,  13,  24,  13,  64);	// (75% alpha)

  00e56	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00e5b	c1 e8 14	 shr	 eax, 20			; 00000014H
  00e5e	83 e0 01	 and	 eax, 1
  00e61	74 5f		 je	 SHORT $LN54@draw_havoc
  00e63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e68	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  00e6d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e77	05 8b 00 00 00	 add	 eax, 139		; 0000008bH
  00e7c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e81	c7 05 08 00 00
	00 63 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 611 ; 00000263H
  00e8b	c7 05 0c 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 13 ; 0000000dH
  00e95	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  00e9f	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00ea9	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  00eb0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00eb5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00eb8	50		 push	 eax
  00eb9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00ebc	51		 push	 ecx
  00ebd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN54@draw_havoc:

; 1539 : 			draw_lamp (havoc_lamps.warning_5, X_ORG +   5, Y_ORG +  25, 591,  26,  25,  14,  61);	// (76% alpha)

  00ec2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ec7	c1 e8 15	 shr	 eax, 21			; 00000015H
  00eca	83 e0 01	 and	 eax, 1
  00ecd	74 5f		 je	 SHORT $LN55@draw_havoc
  00ecf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ed4	05 a3 00 00 00	 add	 eax, 163		; 000000a3H
  00ed9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ede	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ee3	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00ee8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00eed	c7 05 08 00 00
	00 4f 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 591 ; 0000024fH
  00ef7	c7 05 0c 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 26 ; 0000001aH
  00f01	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00f0b	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00f15	c6 05 18 00 00
	00 3d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 61 ; 0000003dH
  00f1c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f21	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f24	50		 push	 eax
  00f25	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f28	51		 push	 ecx
  00f29	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN55@draw_havoc:

; 1540 : 			draw_lamp (havoc_lamps.warning_6, X_ORG +  29, Y_ORG +  23, 615,  24,  22,  12,  59);	// (77% alpha)

  00f2e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00f33	c1 e8 16	 shr	 eax, 22			; 00000016H
  00f36	83 e0 01	 and	 eax, 1
  00f39	74 5f		 je	 SHORT $LN56@draw_havoc
  00f3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f40	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  00f45	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00f4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f4f	05 96 00 00 00	 add	 eax, 150		; 00000096H
  00f54	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f59	c7 05 08 00 00
	00 67 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 615 ; 00000267H
  00f63	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  00f6d	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00f77	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  00f81	c6 05 18 00 00
	00 3b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 59 ; 0000003bH
  00f88	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f8d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f90	50		 push	 eax
  00f91	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f94	51		 push	 ecx
  00f95	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN56@draw_havoc:

; 1541 : 			draw_lamp (havoc_lamps.warning_7, X_ORG +   8, Y_ORG +  36, 594,  37,  23,  13,  56);	// (78% alpha)

  00f9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00f9f	c1 e8 17	 shr	 eax, 23			; 00000017H
  00fa2	83 e0 01	 and	 eax, 1
  00fa5	74 5f		 je	 SHORT $LN57@draw_havoc
  00fa7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00fac	05 a6 00 00 00	 add	 eax, 166		; 000000a6H
  00fb1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00fb6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fbb	05 a3 00 00 00	 add	 eax, 163		; 000000a3H
  00fc0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00fc5	c7 05 08 00 00
	00 52 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 594 ; 00000252H
  00fcf	c7 05 0c 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 37 ; 00000025H
  00fd9	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00fe3	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  00fed	c6 05 18 00 00
	00 38		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 56 ; 00000038H
  00ff4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ff9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ffc	50		 push	 eax
  00ffd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01000	51		 push	 ecx
  01001	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN57@draw_havoc:

; 1542 : 			draw_lamp (havoc_lamps.warning_8, X_ORG +  30, Y_ORG +  34, 616,  35,  23,  13,  54);	// (79% alpha)

  01006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0100b	c1 e8 18	 shr	 eax, 24			; 00000018H
  0100e	83 e0 01	 and	 eax, 1
  01011	74 5f		 je	 SHORT $LN58@draw_havoc
  01013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01018	05 bc 00 00 00	 add	 eax, 188		; 000000bcH
  0101d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01027	05 a1 00 00 00	 add	 eax, 161		; 000000a1H
  0102c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01031	c7 05 08 00 00
	00 68 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 616 ; 00000268H
  0103b	c7 05 0c 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 35 ; 00000023H
  01045	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  0104f	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  01059	c6 05 18 00 00
	00 36		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 54 ; 00000036H
  01060	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01065	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01068	50		 push	 eax
  01069	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0106c	51		 push	 ecx
  0106d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN58@draw_havoc:

; 1543 : 
; 1544 : 			#undef X_ORG
; 1545 : 			#undef Y_ORG
; 1546 : 
; 1547 : 			break;

  01072	e9 70 03 00 00	 jmp	 $LN2@draw_havoc
$LN59@draw_havoc:

; 1548 : 		}
; 1549 : 		////////////////////////////////////////
; 1550 : 		case COCKPIT_PANEL_SPECIAL_HAVOC_HUD:
; 1551 : 		////////////////////////////////////////
; 1552 : 		{
; 1553 : 			#define X_ORG (582)
; 1554 : 			#define Y_ORG (362)
; 1555 : 
; 1556 : 			draw_lamp (havoc_lamps.warning_1, X_ORG +   7, Y_ORG +   6, 407,  75,  42,  19,  71);	// (72% alpha)

  01077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0107c	c1 e8 11	 shr	 eax, 17			; 00000011H
  0107f	83 e0 01	 and	 eax, 1
  01082	74 5f		 je	 SHORT $LN60@draw_havoc
  01084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01089	05 4d 02 00 00	 add	 eax, 589		; 0000024dH
  0108e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01093	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01098	05 70 01 00 00	 add	 eax, 368		; 00000170H
  0109d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  010a2	c7 05 08 00 00
	00 97 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 407 ; 00000197H
  010ac	c7 05 0c 00 00
	00 4b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 75 ; 0000004bH
  010b6	c7 05 10 00 00
	00 2a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 42 ; 0000002aH
  010c0	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  010ca	c6 05 18 00 00
	00 47		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 71 ; 00000047H
  010d1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010d6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010d9	50		 push	 eax
  010da	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010dd	51		 push	 ecx
  010de	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN60@draw_havoc:

; 1557 : 			draw_lamp (havoc_lamps.warning_2, X_ORG +  51, Y_ORG +   6, 451,  75,   7,  19,  69);	// (73% alpha)

  010e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  010e8	c1 e8 12	 shr	 eax, 18			; 00000012H
  010eb	83 e0 01	 and	 eax, 1
  010ee	74 5f		 je	 SHORT $LN61@draw_havoc
  010f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  010f5	05 79 02 00 00	 add	 eax, 633		; 00000279H
  010fa	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  010ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01104	05 70 01 00 00	 add	 eax, 368		; 00000170H
  01109	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0110e	c7 05 08 00 00
	00 c3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 451 ; 000001c3H
  01118	c7 05 0c 00 00
	00 4b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 75 ; 0000004bH
  01122	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  0112c	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  01136	c6 05 18 00 00
	00 45		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 69 ; 00000045H
  0113d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01142	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01145	50		 push	 eax
  01146	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01149	51		 push	 ecx
  0114a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN61@draw_havoc:

; 1558 : 			draw_lamp (havoc_lamps.warning_3, X_ORG +   8, Y_ORG +  27, 408,  96,  43,  19,  66);	// (74% alpha)

  0114f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01154	c1 e8 13	 shr	 eax, 19			; 00000013H
  01157	83 e0 01	 and	 eax, 1
  0115a	74 5f		 je	 SHORT $LN62@draw_havoc
  0115c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01161	05 4e 02 00 00	 add	 eax, 590		; 0000024eH
  01166	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0116b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01170	05 85 01 00 00	 add	 eax, 389		; 00000185H
  01175	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0117a	c7 05 08 00 00
	00 98 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 408 ; 00000198H
  01184	c7 05 0c 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 96 ; 00000060H
  0118e	c7 05 10 00 00
	00 2b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 43 ; 0000002bH
  01198	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  011a2	c6 05 18 00 00
	00 42		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 66 ; 00000042H
  011a9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011ae	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  011b1	50		 push	 eax
  011b2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  011b5	51		 push	 ecx
  011b6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN62@draw_havoc:

; 1559 : 			draw_lamp (havoc_lamps.warning_4, X_ORG +  52, Y_ORG +  27, 452,  96,   6,  19,  64);	// (75% alpha)

  011bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  011c0	c1 e8 14	 shr	 eax, 20			; 00000014H
  011c3	83 e0 01	 and	 eax, 1
  011c6	74 5f		 je	 SHORT $LN63@draw_havoc
  011c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011cd	05 7a 02 00 00	 add	 eax, 634		; 0000027aH
  011d2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  011d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  011dc	05 85 01 00 00	 add	 eax, 389		; 00000185H
  011e1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  011e6	c7 05 08 00 00
	00 c4 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 452 ; 000001c4H
  011f0	c7 05 0c 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 96 ; 00000060H
  011fa	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01204	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  0120e	c6 05 18 00 00
	00 40		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 64 ; 00000040H
  01215	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0121a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0121d	50		 push	 eax
  0121e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01221	51		 push	 ecx
  01222	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN63@draw_havoc:

; 1560 : 			draw_lamp (havoc_lamps.warning_5, X_ORG +  10, Y_ORG +  48, 410, 117,  43,  20,  61);	// (76% alpha)

  01227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0122c	c1 e8 15	 shr	 eax, 21			; 00000015H
  0122f	83 e0 01	 and	 eax, 1
  01232	74 5f		 je	 SHORT $LN64@draw_havoc
  01234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01239	05 50 02 00 00	 add	 eax, 592		; 00000250H
  0123e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01243	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01248	05 9a 01 00 00	 add	 eax, 410		; 0000019aH
  0124d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01252	c7 05 08 00 00
	00 9a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 410 ; 0000019aH
  0125c	c7 05 0c 00 00
	00 75 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 117 ; 00000075H
  01266	c7 05 10 00 00
	00 2b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 43 ; 0000002bH
  01270	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  0127a	c6 05 18 00 00
	00 3d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 61 ; 0000003dH
  01281	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01286	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01289	50		 push	 eax
  0128a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0128d	51		 push	 ecx
  0128e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN64@draw_havoc:

; 1561 : 			draw_lamp (havoc_lamps.warning_6, X_ORG +  54, Y_ORG +  48, 454, 117,   4,  20,  59);	// (77% alpha)

  01293	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01298	c1 e8 16	 shr	 eax, 22			; 00000016H
  0129b	83 e0 01	 and	 eax, 1
  0129e	74 5f		 je	 SHORT $LN65@draw_havoc
  012a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012a5	05 7c 02 00 00	 add	 eax, 636		; 0000027cH
  012aa	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  012af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  012b4	05 9a 01 00 00	 add	 eax, 410		; 0000019aH
  012b9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  012be	c7 05 08 00 00
	00 c6 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 454 ; 000001c6H
  012c8	c7 05 0c 00 00
	00 75 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 117 ; 00000075H
  012d2	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  012dc	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  012e6	c6 05 18 00 00
	00 3b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 59 ; 0000003bH
  012ed	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012f2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  012f5	50		 push	 eax
  012f6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  012f9	51		 push	 ecx
  012fa	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN65@draw_havoc:

; 1562 : 			draw_lamp (havoc_lamps.warning_7, X_ORG +  11, Y_ORG +  70, 411, 139,  43,  20,  56);	// (78% alpha)

  012ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01304	c1 e8 17	 shr	 eax, 23			; 00000017H
  01307	83 e0 01	 and	 eax, 1
  0130a	74 5f		 je	 SHORT $LN66@draw_havoc
  0130c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01311	05 51 02 00 00	 add	 eax, 593		; 00000251H
  01316	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0131b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01320	05 b0 01 00 00	 add	 eax, 432		; 000001b0H
  01325	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0132a	c7 05 08 00 00
	00 9b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 411 ; 0000019bH
  01334	c7 05 0c 00 00
	00 8b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 139 ; 0000008bH
  0133e	c7 05 10 00 00
	00 2b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 43 ; 0000002bH
  01348	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  01352	c6 05 18 00 00
	00 38		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 56 ; 00000038H
  01359	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0135e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01361	50		 push	 eax
  01362	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01365	51		 push	 ecx
  01366	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN66@draw_havoc:

; 1563 : 			draw_lamp (havoc_lamps.warning_8, X_ORG +  56, Y_ORG +  70, 456, 139,   2,  20,  54);	// (79% alpha)

  0136b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01370	c1 e8 18	 shr	 eax, 24			; 00000018H
  01373	83 e0 01	 and	 eax, 1
  01376	74 5f		 je	 SHORT $LN67@draw_havoc
  01378	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0137d	05 7e 02 00 00	 add	 eax, 638		; 0000027eH
  01382	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0138c	05 b0 01 00 00	 add	 eax, 432		; 000001b0H
  01391	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01396	c7 05 08 00 00
	00 c8 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 456 ; 000001c8H
  013a0	c7 05 0c 00 00
	00 8b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 139 ; 0000008bH
  013aa	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 2
  013b4	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  013be	c6 05 18 00 00
	00 36		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 54 ; 00000036H
  013c5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  013ca	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  013cd	50		 push	 eax
  013ce	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  013d1	51		 push	 ecx
  013d2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN67@draw_havoc:

; 1564 : 
; 1565 : 			#undef X_ORG
; 1566 : 			#undef Y_ORG
; 1567 : 
; 1568 : 			break;

  013d7	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN68@draw_havoc:

; 1569 : 		}
; 1570 : 		////////////////////////////////////////
; 1571 : 		default:
; 1572 : 		////////////////////////////////////////
; 1573 : 		{
; 1574 : 			debug_fatal (lamp_error);

  013d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  013de	50		 push	 eax
  013df	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  013e4	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 1575 : 
; 1576 : 			break;
; 1577 : 		}
; 1578 : 	}
; 1579 : }

  013e7	5f		 pop	 edi
  013e8	5e		 pop	 esi
  013e9	5b		 pop	 ebx
  013ea	8b e5		 mov	 esp, ebp
  013ec	5d		 pop	 ebp
  013ed	c2 04 00	 ret	 4
$LN71@draw_havoc:
  013f0	00 00 00 00	 DD	 $LN23@draw_havoc
  013f4	00 00 00 00	 DD	 $LN32@draw_havoc
  013f8	00 00 00 00	 DD	 $LN41@draw_havoc
  013fc	00 00 00 00	 DD	 $LN50@draw_havoc
  01400	00 00 00 00	 DD	 $LN59@draw_havoc
  01404	00 00 00 00	 DD	 $LN68@draw_havoc
$LN70@draw_havoc:
  01408	00		 DB	 0
  01409	01		 DB	 1
  0140a	05		 DB	 5
  0140b	05		 DB	 5
  0140c	05		 DB	 5
  0140d	05		 DB	 5
  0140e	05		 DB	 5
  0140f	02		 DB	 2
  01410	03		 DB	 3
  01411	05		 DB	 5
  01412	05		 DB	 5
  01413	05		 DB	 5
  01414	05		 DB	 5
  01415	05		 DB	 5
  01416	04		 DB	 4
?draw_havoc_warning_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_havoc_warning_panel_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv80 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_havoc_master_caution_lamp, COMDAT

; 1270 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1271 : 	unsigned char
; 1272 : 		*sprite_data,
; 1273 : 		*mask_data;
; 1274 : 
; 1275 : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 1276 : 
; 1277 : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 1278 : 
; 1279 : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	74 67		 je	 SHORT $LN7@draw_havoc

; 1280 : 	{
; 1281 : 		static float
; 1282 : 			timer = 0.0;
; 1283 : 
; 1284 : 		timer += get_delta_time ();

  0003a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00042	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0004a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 1285 : 
; 1286 : 		if (timer < (ONE_SECOND * 1.0))

  00052	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0005a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00062	66 0f 2f c8	 comisd	 xmm1, xmm0
  00066	76 0f		 jbe	 SHORT $LN5@draw_havoc

; 1287 : 		{
; 1288 : 			havoc_lamps.master_caution = 0;

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0006d	83 e0 fe	 and	 eax, -2			; fffffffeH
  00070	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1289 : 		}
; 1290 : 		else

  00075	eb 2a		 jmp	 SHORT $LN7@draw_havoc
$LN5@draw_havoc:

; 1291 : 		{
; 1292 : 			havoc_lamps.master_caution = 1;

  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0007c	83 c8 01	 or	 eax, 1
  0007f	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 1293 : 
; 1294 : 			if (timer > (ONE_SECOND * 2.0))

  00084	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0008c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  00094	76 0b		 jbe	 SHORT $LN7@draw_havoc

; 1295 : 			{
; 1296 : 				timer = 0.0;

  00096	0f 57 c0	 xorps	 xmm0, xmm0
  00099	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN7@draw_havoc:

; 1297 : 			}
; 1298 : 		}
; 1299 : 	}
; 1300 : 
; 1301 : 	switch (panel)

  000a1	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  000a4	89 45 b4	 mov	 DWORD PTR tv80[ebp], eax
  000a7	8b 4d b4	 mov	 ecx, DWORD PTR tv80[ebp]
  000aa	83 e9 10	 sub	 ecx, 16			; 00000010H
  000ad	89 4d b4	 mov	 DWORD PTR tv80[ebp], ecx
  000b0	83 7d b4 0f	 cmp	 DWORD PTR tv80[ebp], 15	; 0000000fH
  000b4	0f 87 2f 02 00
	00		 ja	 $LN18@draw_havoc
  000ba	8b 55 b4	 mov	 edx, DWORD PTR tv80[ebp]
  000bd	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN20@draw_havoc[edx]
  000c4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN21@draw_havoc[eax*4]
$LN8@draw_havoc:

; 1302 : 	{
; 1303 : 		////////////////////////////////////////
; 1304 : 		case COCKPIT_PANEL_LEVEL_LEFT30:
; 1305 : 		////////////////////////////////////////
; 1306 : 		{
; 1307 : 			#define X_ORG (452)
; 1308 : 			#define Y_ORG (328)
; 1309 : 
; 1310 : 			draw_lamp (havoc_lamps.master_caution, X_ORG +   1, Y_ORG +   0, 348, 150,  38,  28, 232);	// (9% alpha)

  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000d0	83 e0 01	 and	 eax, 1
  000d3	74 5f		 je	 SHORT $LN9@draw_havoc
  000d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  000da	05 c5 01 00 00	 add	 eax, 453		; 000001c5H
  000df	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  000e9	05 48 01 00 00	 add	 eax, 328		; 00000148H
  000ee	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  000f3	c7 05 08 00 00
	00 5c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 348 ; 0000015cH
  000fd	c7 05 0c 00 00
	00 96 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 150 ; 00000096H
  00107	c7 05 10 00 00
	00 26 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 38 ; 00000026H
  00111	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  0011b	c6 05 18 00 00
	00 e8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 232 ; 000000e8H
  00122	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00127	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0012a	50		 push	 eax
  0012b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0012e	51		 push	 ecx
  0012f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN9@draw_havoc:

; 1311 : 
; 1312 : 			#undef X_ORG
; 1313 : 			#undef Y_ORG
; 1314 : 
; 1315 : 			break;

  00134	e9 be 01 00 00	 jmp	 $LN2@draw_havoc
$LN10@draw_havoc:

; 1316 : 		}
; 1317 : 		////////////////////////////////////////
; 1318 : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 1319 : 		////////////////////////////////////////
; 1320 : 		{
; 1321 : 			#define X_ORG (154)
; 1322 : 			#define Y_ORG (328)
; 1323 : 
; 1324 : 			draw_lamp (havoc_lamps.master_caution, X_ORG +   1, Y_ORG +   0, 303, 150,  40,  29, 232);	// (9% alpha)

  00139	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0013e	83 e0 01	 and	 eax, 1
  00141	74 5f		 je	 SHORT $LN11@draw_havoc
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00148	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  0014d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00157	05 48 01 00 00	 add	 eax, 328		; 00000148H
  0015c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00161	c7 05 08 00 00
	00 2f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 303 ; 0000012fH
  0016b	c7 05 0c 00 00
	00 96 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 150 ; 00000096H
  00175	c7 05 10 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 40 ; 00000028H
  0017f	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  00189	c6 05 18 00 00
	00 e8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 232 ; 000000e8H
  00190	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00195	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00198	50		 push	 eax
  00199	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0019c	51		 push	 ecx
  0019d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN11@draw_havoc:

; 1325 : 
; 1326 : 			#undef X_ORG
; 1327 : 			#undef Y_ORG
; 1328 : 
; 1329 : 			break;

  001a2	e9 50 01 00 00	 jmp	 $LN2@draw_havoc
$LN12@draw_havoc:

; 1330 : 		}
; 1331 : 		////////////////////////////////////////
; 1332 : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 1333 : 		////////////////////////////////////////
; 1334 : 		{
; 1335 : 			#define X_ORG (453)
; 1336 : 			#define Y_ORG (132)
; 1337 : 
; 1338 : 			draw_lamp (havoc_lamps.master_caution, X_ORG +   0, Y_ORG +   0, 257, 150,  39,  29, 232);	// (9% alpha)

  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001ac	83 e0 01	 and	 eax, 1
  001af	74 5f		 je	 SHORT $LN13@draw_havoc
  001b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  001b6	05 c5 01 00 00	 add	 eax, 453		; 000001c5H
  001bb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  001c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  001c5	05 84 00 00 00	 add	 eax, 132		; 00000084H
  001ca	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  001cf	c7 05 08 00 00
	00 01 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 257 ; 00000101H
  001d9	c7 05 0c 00 00
	00 96 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 150 ; 00000096H
  001e3	c7 05 10 00 00
	00 27 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 39 ; 00000027H
  001ed	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  001f7	c6 05 18 00 00
	00 e8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 232 ; 000000e8H
  001fe	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00203	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00206	50		 push	 eax
  00207	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0020a	51		 push	 ecx
  0020b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN13@draw_havoc:

; 1339 : 
; 1340 : 			#undef X_ORG
; 1341 : 			#undef Y_ORG
; 1342 : 
; 1343 : 			break;

  00210	e9 e2 00 00 00	 jmp	 $LN2@draw_havoc
$LN14@draw_havoc:

; 1344 : 		}
; 1345 : 		////////////////////////////////////////
; 1346 : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 1347 : 		////////////////////////////////////////
; 1348 : 		{
; 1349 : 			#define X_ORG (153)
; 1350 : 			#define Y_ORG (132)
; 1351 : 
; 1352 : 			draw_lamp (havoc_lamps.master_caution, X_ORG +   1, Y_ORG +   0, 213, 150,  42,  29, 232);	// (9% alpha)

  00215	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0021a	83 e0 01	 and	 eax, 1
  0021d	74 5f		 je	 SHORT $LN15@draw_havoc
  0021f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00224	05 9a 00 00 00	 add	 eax, 154		; 0000009aH
  00229	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00233	05 84 00 00 00	 add	 eax, 132		; 00000084H
  00238	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0023d	c7 05 08 00 00
	00 d5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 213 ; 000000d5H
  00247	c7 05 0c 00 00
	00 96 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 150 ; 00000096H
  00251	c7 05 10 00 00
	00 2a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 42 ; 0000002aH
  0025b	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  00265	c6 05 18 00 00
	00 e8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 232 ; 000000e8H
  0026c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00271	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00274	50		 push	 eax
  00275	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00278	51		 push	 ecx
  00279	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN15@draw_havoc:

; 1353 : 
; 1354 : 			#undef X_ORG
; 1355 : 			#undef Y_ORG
; 1356 : 
; 1357 : 			break;

  0027e	eb 77		 jmp	 SHORT $LN2@draw_havoc
$LN16@draw_havoc:

; 1358 : 		}
; 1359 : 		////////////////////////////////////////
; 1360 : 		case COCKPIT_PANEL_SPECIAL_HAVOC_HUD:
; 1361 : 		////////////////////////////////////////
; 1362 : 		{
; 1363 : 			#define X_ORG (0)
; 1364 : 			#define Y_ORG (372)
; 1365 : 
; 1366 : 			draw_lamp (havoc_lamps.master_caution, X_ORG +   2, Y_ORG +   1, 214,  96,  71,  50, 232);	// (9% alpha)

  00280	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00285	83 e0 01	 and	 eax, 1
  00288	74 5d		 je	 SHORT $LN17@draw_havoc
  0028a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0028f	83 c0 02	 add	 eax, 2
  00292	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00297	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0029c	05 75 01 00 00	 add	 eax, 373		; 00000175H
  002a1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  002a6	c7 05 08 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 214 ; 000000d6H
  002b0	c7 05 0c 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 96 ; 00000060H
  002ba	c7 05 10 00 00
	00 47 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 71 ; 00000047H
  002c4	c7 05 14 00 00
	00 32 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 50 ; 00000032H
  002ce	c6 05 18 00 00
	00 e8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 232 ; 000000e8H
  002d5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  002da	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  002dd	50		 push	 eax
  002de	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  002e1	51		 push	 ecx
  002e2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN17@draw_havoc:

; 1367 : 
; 1368 : 			#undef X_ORG
; 1369 : 			#undef Y_ORG
; 1370 : 
; 1371 : 			break;

  002e7	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN18@draw_havoc:

; 1372 : 		}
; 1373 : 		////////////////////////////////////////
; 1374 : 		default:
; 1375 : 		////////////////////////////////////////
; 1376 : 		{
; 1377 : 			debug_fatal (lamp_error);

  002e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  002ee	50		 push	 eax
  002ef	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  002f4	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 1378 : 
; 1379 : 			break;
; 1380 : 		}
; 1381 : 	}
; 1382 : }

  002f7	5f		 pop	 edi
  002f8	5e		 pop	 esi
  002f9	5b		 pop	 ebx
  002fa	8b e5		 mov	 esp, ebp
  002fc	5d		 pop	 ebp
  002fd	c2 04 00	 ret	 4
$LN21@draw_havoc:
  00300	00 00 00 00	 DD	 $LN8@draw_havoc
  00304	00 00 00 00	 DD	 $LN10@draw_havoc
  00308	00 00 00 00	 DD	 $LN12@draw_havoc
  0030c	00 00 00 00	 DD	 $LN14@draw_havoc
  00310	00 00 00 00	 DD	 $LN16@draw_havoc
  00314	00 00 00 00	 DD	 $LN18@draw_havoc
$LN20@draw_havoc:
  00318	00		 DB	 0
  00319	01		 DB	 1
  0031a	05		 DB	 5
  0031b	05		 DB	 5
  0031c	05		 DB	 5
  0031d	05		 DB	 5
  0031e	05		 DB	 5
  0031f	02		 DB	 2
  00320	03		 DB	 3
  00321	05		 DB	 5
  00322	05		 DB	 5
  00323	05		 DB	 5
  00324	05		 DB	 5
  00325	05		 DB	 5
  00326	05		 DB	 5
  00327	04		 DB	 4
?draw_havoc_master_caution_lamp@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_havoc_master_caution_lamp
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv342 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_havoc_threat_warning_display, COMDAT

; 642  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 643  : 	unsigned char
; 644  : 		*sprite_data,
; 645  : 		*mask_data;
; 646  : 
; 647  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 648  : 
; 649  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 650  : 
; 651  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 6c 0d 00
	00		 je	 $LN102@draw_havoc

; 652  : 	{
; 653  : 		////////////////////////////////////////
; 654  : 		//
; 655  : 		// test radar type lamps
; 656  : 		//
; 657  : 		////////////////////////////////////////
; 658  : 		{
; 659  : 			static float
; 660  : 				timer = 0.0;
; 661  : 
; 662  : 			havoc_lamps.threat_warning_radar_type_1 = 0;

  0003e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00043	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  00048	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 663  : 			havoc_lamps.threat_warning_radar_type_2 = 0;

  0004d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00052	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  00057	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 664  : 			havoc_lamps.threat_warning_radar_type_3 = 0;

  0005c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00061	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  00066	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 665  : 			havoc_lamps.threat_warning_radar_type_4 = 0;

  0006b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00070	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  00075	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 666  : 			havoc_lamps.threat_warning_radar_type_5 = 0;

  0007a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0007f	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  00084	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 667  : 			havoc_lamps.threat_warning_radar_type_6 = 0;

  00089	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0008e	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  00093	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 668  : 
; 669  : 			timer += get_delta_time ();

  00098	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000a0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  000a8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 670  : 
; 671  : 			if (timer < (ONE_SECOND * 1.0))

  000b0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000b8	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000c0	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c4	76 14		 jbe	 SHORT $LN5@draw_havoc

; 672  : 			{
; 673  : 				havoc_lamps.threat_warning_radar_type_1 = 1;

  000c6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000cb	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  000d0	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  000d5	e9 4c 01 00 00	 jmp	 $LN18@draw_havoc
$LN5@draw_havoc:

; 674  : 			}
; 675  : 			else if (timer < (ONE_SECOND * 2.0))

  000da	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  000e2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  000ea	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ee	76 14		 jbe	 SHORT $LN7@draw_havoc

; 676  : 			{
; 677  : 				havoc_lamps.threat_warning_radar_type_2 = 1;

  000f0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000f5	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  000fa	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  000ff	e9 22 01 00 00	 jmp	 $LN18@draw_havoc
$LN7@draw_havoc:

; 678  : 			}
; 679  : 			else if (timer < (ONE_SECOND * 3.0))

  00104	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0010c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00114	66 0f 2f c8	 comisd	 xmm1, xmm0
  00118	76 14		 jbe	 SHORT $LN9@draw_havoc

; 680  : 			{
; 681  : 				havoc_lamps.threat_warning_radar_type_3 = 1;

  0011a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0011f	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00124	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00129	e9 f8 00 00 00	 jmp	 $LN18@draw_havoc
$LN9@draw_havoc:

; 682  : 			}
; 683  : 			else if (timer < (ONE_SECOND * 4.0))

  0012e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00136	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0013e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00142	76 14		 jbe	 SHORT $LN11@draw_havoc

; 684  : 			{
; 685  : 				havoc_lamps.threat_warning_radar_type_4 = 1;

  00144	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00149	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  0014e	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00153	e9 ce 00 00 00	 jmp	 $LN18@draw_havoc
$LN11@draw_havoc:

; 686  : 			}
; 687  : 			else if (timer < (ONE_SECOND * 5.0))

  00158	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00160	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00168	66 0f 2f c8	 comisd	 xmm1, xmm0
  0016c	76 14		 jbe	 SHORT $LN13@draw_havoc

; 688  : 			{
; 689  : 				havoc_lamps.threat_warning_radar_type_5 = 1;

  0016e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00173	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00178	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0017d	e9 a4 00 00 00	 jmp	 $LN18@draw_havoc
$LN13@draw_havoc:

; 690  : 			}
; 691  : 			else if (timer < (ONE_SECOND * 6.0))

  00182	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0018a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00192	66 0f 2f c8	 comisd	 xmm1, xmm0
  00196	76 11		 jbe	 SHORT $LN15@draw_havoc

; 692  : 			{
; 693  : 				havoc_lamps.threat_warning_radar_type_6 = 1;

  00198	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0019d	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  001a2	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  001a7	eb 7d		 jmp	 SHORT $LN18@draw_havoc
$LN15@draw_havoc:

; 694  : 			}
; 695  : 			else if (timer < (ONE_SECOND * 7.0))

  001a9	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001b1	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  001b9	66 0f 2f c8	 comisd	 xmm1, xmm0
  001bd	76 5c		 jbe	 SHORT $LN17@draw_havoc

; 696  : 			{
; 697  : 				havoc_lamps.threat_warning_radar_type_1 = 1;

  001bf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001c4	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  001c9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 698  : 				havoc_lamps.threat_warning_radar_type_2 = 1;

  001ce	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001d3	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  001d8	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 699  : 				havoc_lamps.threat_warning_radar_type_3 = 1;

  001dd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001e2	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  001e7	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 700  : 				havoc_lamps.threat_warning_radar_type_4 = 1;

  001ec	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  001f1	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  001f6	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 701  : 				havoc_lamps.threat_warning_radar_type_5 = 1;

  001fb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00200	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00205	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 702  : 				havoc_lamps.threat_warning_radar_type_6 = 1;

  0020a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0020f	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  00214	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 703  : 			}
; 704  : 			else

  00219	eb 0b		 jmp	 SHORT $LN18@draw_havoc
$LN17@draw_havoc:

; 705  : 			{
; 706  : 				timer = 0.0;

  0021b	0f 57 c0	 xorps	 xmm0, xmm0
  0021e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?5??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN18@draw_havoc:

; 707  : 			}
; 708  : 		}
; 709  : 		////////////////////////////////////////
; 710  : 		//
; 711  : 		// test radar bearing lamps
; 712  : 		//
; 713  : 		////////////////////////////////////////
; 714  : 		{
; 715  : 			static float
; 716  : 				timer = 0.0;
; 717  : 
; 718  : 			havoc_lamps.threat_warning_bearing_lh_rear_close_range = 0;

  00226	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0022b	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  00230	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 719  : 			havoc_lamps.threat_warning_bearing_lh_90_close_range = 0;

  00235	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0023a	83 e0 fb	 and	 eax, -5			; fffffffbH
  0023d	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 720  : 			havoc_lamps.threat_warning_bearing_lh_67_close_range = 0;

  00242	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00247	83 e0 f7	 and	 eax, -9			; fffffff7H
  0024a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 721  : 			havoc_lamps.threat_warning_bearing_lh_45_close_range = 0;

  0024f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00254	83 e0 ef	 and	 eax, -17		; ffffffefH
  00257	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 722  : 			havoc_lamps.threat_warning_bearing_lh_22_close_range = 0;

  0025c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00261	83 e0 df	 and	 eax, -33		; ffffffdfH
  00264	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 723  : 			havoc_lamps.threat_warning_bearing_rh_22_close_range = 0;

  00269	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0026e	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00271	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 724  : 			havoc_lamps.threat_warning_bearing_rh_45_close_range = 0;

  00276	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0027b	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00280	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 725  : 			havoc_lamps.threat_warning_bearing_rh_67_close_range = 0;

  00285	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0028a	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  0028f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 726  : 			havoc_lamps.threat_warning_bearing_rh_90_close_range = 0;

  00294	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00299	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  0029e	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 727  : 			havoc_lamps.threat_warning_bearing_rh_rear_close_range = 0;

  002a3	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002a8	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  002ad	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 728  : 			havoc_lamps.threat_warning_bearing_lh_rear = 0;

  002b2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002b7	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  002bc	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 729  : 			havoc_lamps.threat_warning_bearing_lh_90 = 0;

  002c1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002c6	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  002cb	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 730  : 			havoc_lamps.threat_warning_bearing_lh_67 = 0;

  002d0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002d5	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  002da	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 731  : 			havoc_lamps.threat_warning_bearing_lh_45 = 0;

  002df	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002e4	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  002e9	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 732  : 			havoc_lamps.threat_warning_bearing_lh_22 = 0;

  002ee	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  002f3	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  002f8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 733  : 			havoc_lamps.threat_warning_bearing_rh_22 = 0;

  002fd	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00302	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  00307	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 734  : 			havoc_lamps.threat_warning_bearing_rh_45 = 0;

  0030c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00311	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  00316	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 735  : 			havoc_lamps.threat_warning_bearing_rh_67 = 0;

  0031b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00320	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  00325	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 736  : 			havoc_lamps.threat_warning_bearing_rh_90 = 0;

  0032a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0032f	25 ff ff fd ff	 and	 eax, -131073		; fffdffffH
  00334	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 737  : 			havoc_lamps.threat_warning_bearing_rh_rear = 0;

  00339	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0033e	25 ff ff fb ff	 and	 eax, -262145		; fffbffffH
  00343	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 738  : 
; 739  : 			timer += get_delta_time ();

  00348	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00350	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00358	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 740  : 
; 741  : 			if (timer < (ONE_SECOND * 1.0))

  00360	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00368	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00370	66 0f 2f c8	 comisd	 xmm1, xmm0
  00374	76 14		 jbe	 SHORT $LN19@draw_havoc

; 742  : 			{
; 743  : 				havoc_lamps.threat_warning_bearing_lh_rear_close_range = 1;

  00376	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0037b	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00380	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00385	e9 5d 04 00 00	 jmp	 $LN60@draw_havoc
$LN19@draw_havoc:

; 744  : 			}
; 745  : 			else if (timer < (ONE_SECOND * 2.0))

  0038a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00392	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  0039a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0039e	76 12		 jbe	 SHORT $LN21@draw_havoc

; 746  : 			{
; 747  : 				havoc_lamps.threat_warning_bearing_lh_90_close_range = 1;

  003a0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003a5	83 c8 04	 or	 eax, 4
  003a8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  003ad	e9 35 04 00 00	 jmp	 $LN60@draw_havoc
$LN21@draw_havoc:

; 748  : 			}
; 749  : 			else if (timer < (ONE_SECOND * 3.0))

  003b2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  003ba	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  003c2	66 0f 2f c8	 comisd	 xmm1, xmm0
  003c6	76 12		 jbe	 SHORT $LN23@draw_havoc

; 750  : 			{
; 751  : 				havoc_lamps.threat_warning_bearing_lh_67_close_range = 1;

  003c8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003cd	83 c8 08	 or	 eax, 8
  003d0	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  003d5	e9 0d 04 00 00	 jmp	 $LN60@draw_havoc
$LN23@draw_havoc:

; 752  : 			}
; 753  : 			else if (timer < (ONE_SECOND * 4.0))

  003da	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  003e2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  003ea	66 0f 2f c8	 comisd	 xmm1, xmm0
  003ee	76 12		 jbe	 SHORT $LN25@draw_havoc

; 754  : 			{
; 755  : 				havoc_lamps.threat_warning_bearing_lh_45_close_range = 1;

  003f0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  003f5	83 c8 10	 or	 eax, 16			; 00000010H
  003f8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  003fd	e9 e5 03 00 00	 jmp	 $LN60@draw_havoc
$LN25@draw_havoc:

; 756  : 			}
; 757  : 			else if (timer < (ONE_SECOND * 5.0))

  00402	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0040a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00412	66 0f 2f c8	 comisd	 xmm1, xmm0
  00416	76 12		 jbe	 SHORT $LN27@draw_havoc

; 758  : 			{
; 759  : 				havoc_lamps.threat_warning_bearing_lh_22_close_range = 1;

  00418	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0041d	83 c8 20	 or	 eax, 32			; 00000020H
  00420	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00425	e9 bd 03 00 00	 jmp	 $LN60@draw_havoc
$LN27@draw_havoc:

; 760  : 			}
; 761  : 			else if (timer < (ONE_SECOND * 6.0))

  0042a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00432	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  0043a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0043e	76 12		 jbe	 SHORT $LN29@draw_havoc

; 762  : 			{
; 763  : 				havoc_lamps.threat_warning_bearing_rh_22_close_range = 1;

  00440	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00445	83 c8 40	 or	 eax, 64			; 00000040H
  00448	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0044d	e9 95 03 00 00	 jmp	 $LN60@draw_havoc
$LN29@draw_havoc:

; 764  : 			}
; 765  : 			else if (timer < (ONE_SECOND * 7.0))

  00452	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0045a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  00462	66 0f 2f c8	 comisd	 xmm1, xmm0
  00466	76 14		 jbe	 SHORT $LN31@draw_havoc

; 766  : 			{
; 767  : 				havoc_lamps.threat_warning_bearing_rh_45_close_range = 1;

  00468	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0046d	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00472	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00477	e9 6b 03 00 00	 jmp	 $LN60@draw_havoc
$LN31@draw_havoc:

; 768  : 			}
; 769  : 			else if (timer < (ONE_SECOND * 8.0))

  0047c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00484	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  0048c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00490	76 14		 jbe	 SHORT $LN33@draw_havoc

; 770  : 			{
; 771  : 				havoc_lamps.threat_warning_bearing_rh_67_close_range = 1;

  00492	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00497	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  0049c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004a1	e9 41 03 00 00	 jmp	 $LN60@draw_havoc
$LN33@draw_havoc:

; 772  : 			}
; 773  : 			else if (timer < (ONE_SECOND * 9.0))

  004a6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  004ae	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  004b6	66 0f 2f c8	 comisd	 xmm1, xmm0
  004ba	76 14		 jbe	 SHORT $LN35@draw_havoc

; 774  : 			{
; 775  : 				havoc_lamps.threat_warning_bearing_rh_90_close_range = 1;

  004bc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  004c1	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  004c6	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004cb	e9 17 03 00 00	 jmp	 $LN60@draw_havoc
$LN35@draw_havoc:

; 776  : 			}
; 777  : 			else if (timer < (ONE_SECOND * 10.0))

  004d0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  004d8	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  004e0	66 0f 2f c8	 comisd	 xmm1, xmm0
  004e4	76 14		 jbe	 SHORT $LN37@draw_havoc

; 778  : 			{
; 779  : 				havoc_lamps.threat_warning_bearing_rh_rear_close_range = 1;

  004e6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  004eb	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  004f0	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  004f5	e9 ed 02 00 00	 jmp	 $LN60@draw_havoc
$LN37@draw_havoc:

; 780  : 			}
; 781  : 			else if (timer < (ONE_SECOND * 11.0))

  004fa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00502	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  0050a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0050e	76 14		 jbe	 SHORT $LN39@draw_havoc

; 782  : 			{
; 783  : 				havoc_lamps.threat_warning_bearing_lh_rear = 1;

  00510	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00515	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  0051a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0051f	e9 c3 02 00 00	 jmp	 $LN60@draw_havoc
$LN39@draw_havoc:

; 784  : 			}
; 785  : 			else if (timer < (ONE_SECOND * 12.0))

  00524	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0052c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  00534	66 0f 2f c8	 comisd	 xmm1, xmm0
  00538	76 14		 jbe	 SHORT $LN41@draw_havoc

; 786  : 			{
; 787  : 				havoc_lamps.threat_warning_bearing_lh_90 = 1;

  0053a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0053f	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00544	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00549	e9 99 02 00 00	 jmp	 $LN60@draw_havoc
$LN41@draw_havoc:

; 788  : 			}
; 789  : 			else if (timer < (ONE_SECOND * 13.0))

  0054e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00556	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  0055e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00562	76 14		 jbe	 SHORT $LN43@draw_havoc

; 790  : 			{
; 791  : 				havoc_lamps.threat_warning_bearing_lh_67 = 1;

  00564	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00569	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0056e	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00573	e9 6f 02 00 00	 jmp	 $LN60@draw_havoc
$LN43@draw_havoc:

; 792  : 			}
; 793  : 			else if (timer < (ONE_SECOND * 14.0))

  00578	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00580	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  00588	66 0f 2f c8	 comisd	 xmm1, xmm0
  0058c	76 14		 jbe	 SHORT $LN45@draw_havoc

; 794  : 			{
; 795  : 				havoc_lamps.threat_warning_bearing_lh_45 = 1;

  0058e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00593	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  00598	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0059d	e9 45 02 00 00	 jmp	 $LN60@draw_havoc
$LN45@draw_havoc:

; 796  : 			}
; 797  : 			else if (timer < (ONE_SECOND * 15.0))

  005a2	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  005aa	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  005b2	66 0f 2f c8	 comisd	 xmm1, xmm0
  005b6	76 14		 jbe	 SHORT $LN47@draw_havoc

; 798  : 			{
; 799  : 				havoc_lamps.threat_warning_bearing_lh_22 = 1;

  005b8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  005bd	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  005c2	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  005c7	e9 1b 02 00 00	 jmp	 $LN60@draw_havoc
$LN47@draw_havoc:

; 800  : 			}
; 801  : 			else if (timer < (ONE_SECOND * 16.0))

  005cc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  005d4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  005dc	66 0f 2f c8	 comisd	 xmm1, xmm0
  005e0	76 14		 jbe	 SHORT $LN49@draw_havoc

; 802  : 			{
; 803  : 				havoc_lamps.threat_warning_bearing_rh_22 = 1;

  005e2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  005e7	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  005ec	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  005f1	e9 f1 01 00 00	 jmp	 $LN60@draw_havoc
$LN49@draw_havoc:

; 804  : 			}
; 805  : 			else if (timer < (ONE_SECOND * 17.0))

  005f6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  005fe	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4031000000000000
  00606	66 0f 2f c8	 comisd	 xmm1, xmm0
  0060a	76 14		 jbe	 SHORT $LN51@draw_havoc

; 806  : 			{
; 807  : 				havoc_lamps.threat_warning_bearing_rh_45 = 1;

  0060c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00611	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00616	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0061b	e9 c7 01 00 00	 jmp	 $LN60@draw_havoc
$LN51@draw_havoc:

; 808  : 			}
; 809  : 			else if (timer < (ONE_SECOND * 18.0))

  00620	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00628	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4032000000000000
  00630	66 0f 2f c8	 comisd	 xmm1, xmm0
  00634	76 14		 jbe	 SHORT $LN53@draw_havoc

; 810  : 			{
; 811  : 				havoc_lamps.threat_warning_bearing_rh_67 = 1;

  00636	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0063b	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  00640	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00645	e9 9d 01 00 00	 jmp	 $LN60@draw_havoc
$LN53@draw_havoc:

; 812  : 			}
; 813  : 			else if (timer < (ONE_SECOND * 19.0))

  0064a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00652	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4033000000000000
  0065a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0065e	76 14		 jbe	 SHORT $LN55@draw_havoc

; 814  : 			{
; 815  : 				havoc_lamps.threat_warning_bearing_rh_90 = 1;

  00660	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00665	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  0066a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  0066f	e9 73 01 00 00	 jmp	 $LN60@draw_havoc
$LN55@draw_havoc:

; 816  : 			}
; 817  : 			else if (timer < (ONE_SECOND * 20.0))

  00674	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0067c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4034000000000000
  00684	66 0f 2f c8	 comisd	 xmm1, xmm0
  00688	76 14		 jbe	 SHORT $LN57@draw_havoc

; 818  : 			{
; 819  : 				havoc_lamps.threat_warning_bearing_rh_rear = 1;

  0068a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0068f	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00694	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00699	e9 49 01 00 00	 jmp	 $LN60@draw_havoc
$LN57@draw_havoc:

; 820  : 			}
; 821  : 			else if (timer < (ONE_SECOND * 21.0))

  0069e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  006a6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4035000000000000
  006ae	66 0f 2f c8	 comisd	 xmm1, xmm0
  006b2	0f 86 24 01 00
	00		 jbe	 $LN59@draw_havoc

; 822  : 			{
; 823  : 				havoc_lamps.threat_warning_bearing_lh_rear_close_range = 1;

  006b8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006bd	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  006c2	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 824  : 				havoc_lamps.threat_warning_bearing_lh_90_close_range = 1;

  006c7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006cc	83 c8 04	 or	 eax, 4
  006cf	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 825  : 				havoc_lamps.threat_warning_bearing_lh_67_close_range = 1;

  006d4	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006d9	83 c8 08	 or	 eax, 8
  006dc	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 826  : 				havoc_lamps.threat_warning_bearing_lh_45_close_range = 1;

  006e1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006e6	83 c8 10	 or	 eax, 16			; 00000010H
  006e9	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 827  : 				havoc_lamps.threat_warning_bearing_lh_22_close_range = 1;

  006ee	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  006f3	83 c8 20	 or	 eax, 32			; 00000020H
  006f6	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 828  : 				havoc_lamps.threat_warning_bearing_rh_22_close_range = 1;

  006fb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00700	83 c8 40	 or	 eax, 64			; 00000040H
  00703	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 829  : 				havoc_lamps.threat_warning_bearing_rh_45_close_range = 1;

  00708	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0070d	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00712	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 830  : 				havoc_lamps.threat_warning_bearing_rh_67_close_range = 1;

  00717	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0071c	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  00721	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 831  : 				havoc_lamps.threat_warning_bearing_rh_90_close_range = 1;

  00726	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0072b	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  00730	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 832  : 				havoc_lamps.threat_warning_bearing_rh_rear_close_range = 1;

  00735	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0073a	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  0073f	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 833  : 				havoc_lamps.threat_warning_bearing_lh_rear = 1;

  00744	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00749	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  0074e	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 834  : 				havoc_lamps.threat_warning_bearing_lh_90 = 1;

  00753	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00758	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  0075d	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 835  : 				havoc_lamps.threat_warning_bearing_lh_67 = 1;

  00762	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00767	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  0076c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 836  : 				havoc_lamps.threat_warning_bearing_lh_45 = 1;

  00771	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00776	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  0077b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 837  : 				havoc_lamps.threat_warning_bearing_lh_22 = 1;

  00780	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00785	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0078a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 838  : 				havoc_lamps.threat_warning_bearing_rh_22 = 1;

  0078f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00794	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00799	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 839  : 				havoc_lamps.threat_warning_bearing_rh_45 = 1;

  0079e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007a3	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  007a8	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 840  : 				havoc_lamps.threat_warning_bearing_rh_67 = 1;

  007ad	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007b2	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  007b7	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 841  : 				havoc_lamps.threat_warning_bearing_rh_90 = 1;

  007bc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  007c1	0d 00 00 02 00	 or	 eax, 131072		; 00020000H
  007c6	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 842  : 				havoc_lamps.threat_warning_bearing_rh_rear = 1;

  007cb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  007d0	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  007d5	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 843  : 			}
; 844  : 			else

  007da	eb 0b		 jmp	 SHORT $LN60@draw_havoc
$LN59@draw_havoc:

; 845  : 			{
; 846  : 				timer = 0.0;

  007dc	0f 57 c0	 xorps	 xmm0, xmm0
  007df	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?CE@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN60@draw_havoc:

; 847  : 			}
; 848  : 		}
; 849  : 		////////////////////////////////////////
; 850  : 		//
; 851  : 		// test close range lamps
; 852  : 		//
; 853  : 		////////////////////////////////////////
; 854  : 		{
; 855  : 			static float
; 856  : 				timer = 0.0;
; 857  : 
; 858  : 			havoc_lamps.threat_warning_close_range_1 = 0;

  007e7	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  007ec	25 ff ff f7 ff	 and	 eax, -524289		; fff7ffffH
  007f1	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 859  : 			havoc_lamps.threat_warning_close_range_2 = 0;

  007f6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  007fb	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00800	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 860  : 			havoc_lamps.threat_warning_close_range_3 = 0;

  00805	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0080a	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  0080f	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 861  : 			havoc_lamps.threat_warning_close_range_4 = 0;

  00814	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00819	25 ff ff bf ff	 and	 eax, -4194305		; ffbfffffH
  0081e	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 862  : 			havoc_lamps.threat_warning_close_range_5 = 0;

  00823	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00828	25 ff ff 7f ff	 and	 eax, -8388609		; ff7fffffH
  0082d	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 863  : 			havoc_lamps.threat_warning_close_range_6 = 0;

  00832	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00837	25 ff ff ff fe	 and	 eax, -16777217		; feffffffH
  0083c	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 864  : 			havoc_lamps.threat_warning_close_range_7 = 0;

  00841	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00846	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  0084b	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 865  : 			havoc_lamps.threat_warning_close_range_8 = 0;

  00850	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00855	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  0085a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 866  : 			havoc_lamps.threat_warning_close_range_9 = 0;

  0085f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00864	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00869	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 867  : 			havoc_lamps.threat_warning_close_range_10 = 0;

  0086e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00873	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  00878	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 868  : 			havoc_lamps.threat_warning_close_range_11 = 0;

  0087d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00882	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  00887	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 869  : 			havoc_lamps.threat_warning_close_range_12 = 0;

  0088c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00891	25 ff ff ff bf	 and	 eax, -1073741825	; bfffffffH
  00896	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 870  : 			havoc_lamps.threat_warning_close_range_13 = 0;

  0089b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008a0	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  008a5	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 871  : 			havoc_lamps.threat_warning_close_range_14 = 0;

  008aa	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008af	83 e0 fe	 and	 eax, -2			; fffffffeH
  008b2	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 872  : 			havoc_lamps.threat_warning_close_range_15 = 0;

  008b7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  008bc	83 e0 fd	 and	 eax, -3			; fffffffdH
  008bf	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 873  : 
; 874  : 			timer += get_delta_time ();

  008c4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  008cc	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  008d4	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 875  : 
; 876  : 			if (timer < (ONE_SECOND * 1.0))

  008dc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  008e4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  008ec	66 0f 2f c8	 comisd	 xmm1, xmm0
  008f0	76 14		 jbe	 SHORT $LN61@draw_havoc

; 877  : 			{
; 878  : 				havoc_lamps.threat_warning_close_range_1 = 1;

  008f2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008f7	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  008fc	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00901	e9 4c 03 00 00	 jmp	 $LN92@draw_havoc
$LN61@draw_havoc:

; 879  : 			}
; 880  : 			else if (timer < (ONE_SECOND * 2.0))

  00906	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0090e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00916	66 0f 2f c8	 comisd	 xmm1, xmm0
  0091a	76 14		 jbe	 SHORT $LN63@draw_havoc

; 881  : 			{
; 882  : 				havoc_lamps.threat_warning_close_range_2 = 1;

  0091c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00921	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00926	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0092b	e9 22 03 00 00	 jmp	 $LN92@draw_havoc
$LN63@draw_havoc:

; 883  : 			}
; 884  : 			else if (timer < (ONE_SECOND * 3.0))

  00930	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00938	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00940	66 0f 2f c8	 comisd	 xmm1, xmm0
  00944	76 14		 jbe	 SHORT $LN65@draw_havoc

; 885  : 			{
; 886  : 				havoc_lamps.threat_warning_close_range_3 = 1;

  00946	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0094b	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00950	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00955	e9 f8 02 00 00	 jmp	 $LN92@draw_havoc
$LN65@draw_havoc:

; 887  : 			}
; 888  : 			else if (timer < (ONE_SECOND * 4.0))

  0095a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00962	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  0096a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0096e	76 14		 jbe	 SHORT $LN67@draw_havoc

; 889  : 			{
; 890  : 				havoc_lamps.threat_warning_close_range_4 = 1;

  00970	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00975	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  0097a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0097f	e9 ce 02 00 00	 jmp	 $LN92@draw_havoc
$LN67@draw_havoc:

; 891  : 			}
; 892  : 			else if (timer < (ONE_SECOND * 5.0))

  00984	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0098c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00994	66 0f 2f c8	 comisd	 xmm1, xmm0
  00998	76 14		 jbe	 SHORT $LN69@draw_havoc

; 893  : 			{
; 894  : 				havoc_lamps.threat_warning_close_range_5 = 1;

  0099a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0099f	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  009a4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  009a9	e9 a4 02 00 00	 jmp	 $LN92@draw_havoc
$LN69@draw_havoc:

; 895  : 			}
; 896  : 			else if (timer < (ONE_SECOND * 6.0))

  009ae	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  009b6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  009be	66 0f 2f c8	 comisd	 xmm1, xmm0
  009c2	76 14		 jbe	 SHORT $LN71@draw_havoc

; 897  : 			{
; 898  : 				havoc_lamps.threat_warning_close_range_6 = 1;

  009c4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  009c9	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  009ce	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  009d3	e9 7a 02 00 00	 jmp	 $LN92@draw_havoc
$LN71@draw_havoc:

; 899  : 			}
; 900  : 			else if (timer < (ONE_SECOND * 7.0))

  009d8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  009e0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  009e8	66 0f 2f c8	 comisd	 xmm1, xmm0
  009ec	76 14		 jbe	 SHORT $LN73@draw_havoc

; 901  : 			{
; 902  : 				havoc_lamps.threat_warning_close_range_7 = 1;

  009ee	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  009f3	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  009f8	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  009fd	e9 50 02 00 00	 jmp	 $LN92@draw_havoc
$LN73@draw_havoc:

; 903  : 			}
; 904  : 			else if (timer < (ONE_SECOND * 8.0))

  00a02	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00a0a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  00a12	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a16	76 14		 jbe	 SHORT $LN75@draw_havoc

; 905  : 			{
; 906  : 				havoc_lamps.threat_warning_close_range_8 = 1;

  00a18	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a1d	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  00a22	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a27	e9 26 02 00 00	 jmp	 $LN92@draw_havoc
$LN75@draw_havoc:

; 907  : 			}
; 908  : 			else if (timer < (ONE_SECOND * 9.0))

  00a2c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00a34	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  00a3c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a40	76 14		 jbe	 SHORT $LN77@draw_havoc

; 909  : 			{
; 910  : 				havoc_lamps.threat_warning_close_range_9 = 1;

  00a42	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a47	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  00a4c	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a51	e9 fc 01 00 00	 jmp	 $LN92@draw_havoc
$LN77@draw_havoc:

; 911  : 			}
; 912  : 			else if (timer < (ONE_SECOND * 10.0))

  00a56	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00a5e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  00a66	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a6a	76 14		 jbe	 SHORT $LN79@draw_havoc

; 913  : 			{
; 914  : 				havoc_lamps.threat_warning_close_range_10 = 1;

  00a6c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a71	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  00a76	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00a7b	e9 d2 01 00 00	 jmp	 $LN92@draw_havoc
$LN79@draw_havoc:

; 915  : 			}
; 916  : 			else if (timer < (ONE_SECOND * 11.0))

  00a80	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00a88	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  00a90	66 0f 2f c8	 comisd	 xmm1, xmm0
  00a94	76 14		 jbe	 SHORT $LN81@draw_havoc

; 917  : 			{
; 918  : 				havoc_lamps.threat_warning_close_range_11 = 1;

  00a96	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a9b	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  00aa0	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00aa5	e9 a8 01 00 00	 jmp	 $LN92@draw_havoc
$LN81@draw_havoc:

; 919  : 			}
; 920  : 			else if (timer < (ONE_SECOND * 12.0))

  00aaa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00ab2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  00aba	66 0f 2f c8	 comisd	 xmm1, xmm0
  00abe	76 14		 jbe	 SHORT $LN83@draw_havoc

; 921  : 			{
; 922  : 				havoc_lamps.threat_warning_close_range_12 = 1;

  00ac0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ac5	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00aca	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00acf	e9 7e 01 00 00	 jmp	 $LN92@draw_havoc
$LN83@draw_havoc:

; 923  : 			}
; 924  : 			else if (timer < (ONE_SECOND * 13.0))

  00ad4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00adc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  00ae4	66 0f 2f c8	 comisd	 xmm1, xmm0
  00ae8	76 14		 jbe	 SHORT $LN85@draw_havoc

; 925  : 			{
; 926  : 				havoc_lamps.threat_warning_close_range_13 = 1;

  00aea	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00aef	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00af4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00af9	e9 54 01 00 00	 jmp	 $LN92@draw_havoc
$LN85@draw_havoc:

; 927  : 			}
; 928  : 			else if (timer < (ONE_SECOND * 14.0))

  00afe	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00b06	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  00b0e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b12	76 12		 jbe	 SHORT $LN87@draw_havoc

; 929  : 			{
; 930  : 				havoc_lamps.threat_warning_close_range_14 = 1;

  00b14	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00b19	83 c8 01	 or	 eax, 1
  00b1c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00b21	e9 2c 01 00 00	 jmp	 $LN92@draw_havoc
$LN87@draw_havoc:

; 931  : 			}
; 932  : 			else if (timer < (ONE_SECOND * 15.0))

  00b26	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00b2e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  00b36	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b3a	76 12		 jbe	 SHORT $LN89@draw_havoc

; 933  : 			{
; 934  : 				havoc_lamps.threat_warning_close_range_15 = 1;

  00b3c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00b41	83 c8 02	 or	 eax, 2
  00b44	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00b49	e9 04 01 00 00	 jmp	 $LN92@draw_havoc
$LN89@draw_havoc:

; 935  : 			}
; 936  : 			else if (timer < (ONE_SECOND * 16.0))

  00b4e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00b56	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  00b5e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00b62	0f 86 df 00 00
	00		 jbe	 $LN91@draw_havoc

; 937  : 			{
; 938  : 				havoc_lamps.threat_warning_close_range_1 = 1;

  00b68	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b6d	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00b72	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 939  : 				havoc_lamps.threat_warning_close_range_2 = 1;

  00b77	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b7c	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00b81	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 940  : 				havoc_lamps.threat_warning_close_range_3 = 1;

  00b86	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b8b	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00b90	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 941  : 				havoc_lamps.threat_warning_close_range_4 = 1;

  00b95	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b9a	0d 00 00 40 00	 or	 eax, 4194304		; 00400000H
  00b9f	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 942  : 				havoc_lamps.threat_warning_close_range_5 = 1;

  00ba4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ba9	0d 00 00 80 00	 or	 eax, 8388608		; 00800000H
  00bae	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 943  : 				havoc_lamps.threat_warning_close_range_6 = 1;

  00bb3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bb8	0d 00 00 00 01	 or	 eax, 16777216		; 01000000H
  00bbd	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 944  : 				havoc_lamps.threat_warning_close_range_7 = 1;

  00bc2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bc7	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  00bcc	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 945  : 				havoc_lamps.threat_warning_close_range_8 = 1;

  00bd1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bd6	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  00bdb	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 946  : 				havoc_lamps.threat_warning_close_range_9 = 1;

  00be0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00be5	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  00bea	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 947  : 				havoc_lamps.threat_warning_close_range_10 = 1;

  00bef	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00bf4	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  00bf9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 948  : 				havoc_lamps.threat_warning_close_range_11 = 1;

  00bfe	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c03	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  00c08	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 949  : 				havoc_lamps.threat_warning_close_range_12 = 1;

  00c0d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c12	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00c17	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 950  : 				havoc_lamps.threat_warning_close_range_13 = 1;

  00c1c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c21	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00c26	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 951  : 				havoc_lamps.threat_warning_close_range_14 = 1;

  00c2b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c30	83 c8 01	 or	 eax, 1
  00c33	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 952  : 				havoc_lamps.threat_warning_close_range_15 = 1;

  00c38	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c3d	83 c8 02	 or	 eax, 2
  00c40	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 953  : 			}
; 954  : 			else

  00c45	eb 0b		 jmp	 SHORT $LN92@draw_havoc
$LN91@draw_havoc:

; 955  : 			{
; 956  : 				timer = 0.0;

  00c47	0f 57 c0	 xorps	 xmm0, xmm0
  00c4a	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?HK@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN92@draw_havoc:

; 957  : 			}
; 958  : 		}
; 959  : 		////////////////////////////////////////
; 960  : 		//
; 961  : 		// test radar lock lamps
; 962  : 		//
; 963  : 		////////////////////////////////////////
; 964  : 		{
; 965  : 			static float
; 966  : 				timer = 0.0;
; 967  : 
; 968  : 			havoc_lamps.threat_warning_missile_below = 0;

  00c52	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c57	25 ff ff fb ff	 and	 eax, -262145		; fffbffffH
  00c5c	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 969  : 			havoc_lamps.threat_warning_missile_above = 0;

  00c61	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c66	25 ff ff f7 ff	 and	 eax, -524289		; fff7ffffH
  00c6b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 970  : 			havoc_lamps.threat_warning_missile_lh_lock = 0;

  00c70	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c75	25 ff ff ef ff	 and	 eax, -1048577		; ffefffffH
  00c7a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 971  : 			havoc_lamps.threat_warning_missile_rh_lock = 0;

  00c7f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00c84	25 ff ff df ff	 and	 eax, -2097153		; ffdfffffH
  00c89	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 972  : 
; 973  : 			timer += get_delta_time ();

  00c8e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00c96	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00c9e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 974  : 
; 975  : 			if (timer < (ONE_SECOND * 1.0))

  00ca6	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00cae	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00cb6	66 0f 2f c8	 comisd	 xmm1, xmm0
  00cba	76 14		 jbe	 SHORT $LN93@draw_havoc

; 976  : 			{
; 977  : 				havoc_lamps.threat_warning_missile_below = 1;

  00cbc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00cc1	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00cc6	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00ccb	e9 da 00 00 00	 jmp	 $LN102@draw_havoc
$LN93@draw_havoc:

; 978  : 			}
; 979  : 			else if (timer < (ONE_SECOND * 2.0))

  00cd0	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00cd8	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00ce0	66 0f 2f c8	 comisd	 xmm1, xmm0
  00ce4	76 14		 jbe	 SHORT $LN95@draw_havoc

; 980  : 			{
; 981  : 				havoc_lamps.threat_warning_missile_above = 1;

  00ce6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00ceb	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00cf0	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00cf5	e9 b0 00 00 00	 jmp	 $LN102@draw_havoc
$LN95@draw_havoc:

; 982  : 			}
; 983  : 			else if (timer < (ONE_SECOND * 3.0))

  00cfa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00d02	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00d0a	66 0f 2f c8	 comisd	 xmm1, xmm0
  00d0e	76 14		 jbe	 SHORT $LN97@draw_havoc

; 984  : 			{
; 985  : 				havoc_lamps.threat_warning_missile_lh_lock = 1;

  00d10	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d15	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00d1a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00d1f	e9 86 00 00 00	 jmp	 $LN102@draw_havoc
$LN97@draw_havoc:

; 986  : 			}
; 987  : 			else if (timer < (ONE_SECOND * 4.0))

  00d24	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00d2c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  00d34	66 0f 2f c8	 comisd	 xmm1, xmm0
  00d38	76 11		 jbe	 SHORT $LN99@draw_havoc

; 988  : 			{
; 989  : 				havoc_lamps.threat_warning_missile_rh_lock = 1;

  00d3a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d3f	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00d44	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax
  00d49	eb 5f		 jmp	 SHORT $LN102@draw_havoc
$LN99@draw_havoc:

; 990  : 			}
; 991  : 			else if (timer < (ONE_SECOND * 5.0))

  00d4b	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00d53	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  00d5b	66 0f 2f c8	 comisd	 xmm1, xmm0
  00d5f	76 3e		 jbe	 SHORT $LN101@draw_havoc

; 992  : 			{
; 993  : 				havoc_lamps.threat_warning_missile_below = 1;

  00d61	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d66	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  00d6b	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 994  : 				havoc_lamps.threat_warning_missile_above = 1;

  00d70	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d75	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  00d7a	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 995  : 				havoc_lamps.threat_warning_missile_lh_lock = 1;

  00d7f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d84	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  00d89	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 996  : 				havoc_lamps.threat_warning_missile_rh_lock = 1;

  00d8e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  00d93	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  00d98	a3 08 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8, eax

; 997  : 			}
; 998  : 			else

  00d9d	eb 0b		 jmp	 SHORT $LN102@draw_havoc
$LN101@draw_havoc:

; 999  : 			{
; 1000 : 				timer = 0.0;

  00d9f	0f 57 c0	 xorps	 xmm0, xmm0
  00da2	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?LM@??draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN102@draw_havoc:

; 1001 : 			}
; 1002 : 		}
; 1003 : 	}
; 1004 : 
; 1005 : 	switch (panel)

  00daa	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00dad	89 45 b4	 mov	 DWORD PTR tv342[ebp], eax
  00db0	8b 4d b4	 mov	 ecx, DWORD PTR tv342[ebp]
  00db3	83 e9 11	 sub	 ecx, 17			; 00000011H
  00db6	89 4d b4	 mov	 DWORD PTR tv342[ebp], ecx
  00db9	83 7d b4 0e	 cmp	 DWORD PTR tv342[ebp], 14 ; 0000000eH
  00dbd	0f 87 df 4c 00
	00		 ja	 $LN290@draw_havoc
  00dc3	8b 55 b4	 mov	 edx, DWORD PTR tv342[ebp]
  00dc6	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN292@draw_havoc[edx]
  00dcd	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN293@draw_havoc[eax*4]
$LN103@draw_havoc:

; 1006 : 	{
; 1007 : 		////////////////////////////////////////
; 1008 : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 1009 : 		////////////////////////////////////////
; 1010 : 		{
; 1011 : 			#define X_ORG (460)
; 1012 : 			#define Y_ORG (379)
; 1013 : 
; 1014 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_1							, X_ORG +   6, Y_ORG +  54, 390, 235,   9,   6, 229);	// (10% alpha)

  00dd4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00dd9	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00ddc	83 e0 01	 and	 eax, 1
  00ddf	74 5f		 je	 SHORT $LN104@draw_havoc
  00de1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00de6	05 d2 01 00 00	 add	 eax, 466		; 000001d2H
  00deb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00df0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00df5	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00dfa	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00dff	c7 05 08 00 00
	00 86 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 390 ; 00000186H
  00e09	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  00e13	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  00e1d	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00e27	c6 05 18 00 00
	00 e5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 229 ; 000000e5H
  00e2e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e33	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e36	50		 push	 eax
  00e37	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e3a	51		 push	 ecx
  00e3b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN104@draw_havoc:

; 1015 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_2							, X_ORG +  15, Y_ORG +  54, 399, 235,   8,   6, 227);	// (11% alpha)

  00e40	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00e45	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  00e48	83 e0 01	 and	 eax, 1
  00e4b	74 5f		 je	 SHORT $LN105@draw_havoc
  00e4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e52	05 db 01 00 00	 add	 eax, 475		; 000001dbH
  00e57	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e61	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00e66	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e6b	c7 05 08 00 00
	00 8f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 399 ; 0000018fH
  00e75	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  00e7f	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00e89	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00e93	c6 05 18 00 00
	00 e3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 227 ; 000000e3H
  00e9a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e9f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ea2	50		 push	 eax
  00ea3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00ea6	51		 push	 ecx
  00ea7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN105@draw_havoc:

; 1016 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_3							, X_ORG +  23, Y_ORG +  54, 407, 235,   8,   6, 224);	// (12% alpha)

  00eac	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00eb1	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00eb4	83 e0 01	 and	 eax, 1
  00eb7	74 5f		 je	 SHORT $LN106@draw_havoc
  00eb9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ebe	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  00ec3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ec8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ecd	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00ed2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ed7	c7 05 08 00 00
	00 97 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 407 ; 00000197H
  00ee1	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  00eeb	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00ef5	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00eff	c6 05 18 00 00
	00 e0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 224 ; 000000e0H
  00f06	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f0b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f0e	50		 push	 eax
  00f0f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f12	51		 push	 ecx
  00f13	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN106@draw_havoc:

; 1017 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_4							, X_ORG +  31, Y_ORG +  54, 415, 235,   8,   6, 222);	// (13% alpha)

  00f18	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00f1d	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  00f20	83 e0 01	 and	 eax, 1
  00f23	74 5f		 je	 SHORT $LN107@draw_havoc
  00f25	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f2a	05 eb 01 00 00	 add	 eax, 491		; 000001ebH
  00f2f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00f34	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f39	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00f3e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f43	c7 05 08 00 00
	00 9f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 415 ; 0000019fH
  00f4d	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  00f57	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00f61	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00f6b	c6 05 18 00 00
	00 de		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 222 ; 000000deH
  00f72	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f77	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f7a	50		 push	 eax
  00f7b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f7e	51		 push	 ecx
  00f7f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN107@draw_havoc:

; 1018 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_5							, X_ORG +  39, Y_ORG +  54, 423, 235,   9,   6, 219);	// (14% alpha)

  00f84	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00f89	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  00f8c	83 e0 01	 and	 eax, 1
  00f8f	74 5f		 je	 SHORT $LN108@draw_havoc
  00f91	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f96	05 f3 01 00 00	 add	 eax, 499		; 000001f3H
  00f9b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00fa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fa5	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  00faa	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00faf	c7 05 08 00 00
	00 a7 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 423 ; 000001a7H
  00fb9	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  00fc3	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  00fcd	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00fd7	c6 05 18 00 00
	00 db		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 219 ; 000000dbH
  00fde	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00fe3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00fe6	50		 push	 eax
  00fe7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00fea	51		 push	 ecx
  00feb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN108@draw_havoc:

; 1019 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_6							, X_ORG +  48, Y_ORG +  54, 432, 235,   8,   6, 217);	// (15% alpha)

  00ff0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00ff5	c1 e8 10	 shr	 eax, 16			; 00000010H
  00ff8	83 e0 01	 and	 eax, 1
  00ffb	74 5f		 je	 SHORT $LN109@draw_havoc
  00ffd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01002	05 fc 01 00 00	 add	 eax, 508		; 000001fcH
  01007	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0100c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01011	05 b1 01 00 00	 add	 eax, 433		; 000001b1H
  01016	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0101b	c7 05 08 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 432 ; 000001b0H
  01025	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  0102f	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  01039	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01043	c6 05 18 00 00
	00 d9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 217 ; 000000d9H
  0104a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0104f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01052	50		 push	 eax
  01053	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01056	51		 push	 ecx
  01057	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN109@draw_havoc:

; 1020 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear						, X_ORG +  14, Y_ORG +  47, 398, 228,   7,   7, 214);	// (16% alpha)

  0105c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01061	c1 e8 11	 shr	 eax, 17			; 00000011H
  01064	83 e0 01	 and	 eax, 1
  01067	74 5f		 je	 SHORT $LN110@draw_havoc
  01069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0106e	05 da 01 00 00	 add	 eax, 474		; 000001daH
  01073	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0107d	05 aa 01 00 00	 add	 eax, 426		; 000001aaH
  01082	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01087	c7 05 08 00 00
	00 8e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 398 ; 0000018eH
  01091	c7 05 0c 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 228 ; 000000e4H
  0109b	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  010a5	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  010af	c6 05 18 00 00
	00 d6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 214 ; 000000d6H
  010b6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010bb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010be	50		 push	 eax
  010bf	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010c2	51		 push	 ecx
  010c3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN110@draw_havoc:

; 1021 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear						, X_ORG +  40, Y_ORG +  47, 424, 228,   7,   7, 212);	// (17% alpha)

  010c8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  010cd	c1 e8 12	 shr	 eax, 18			; 00000012H
  010d0	83 e0 01	 and	 eax, 1
  010d3	74 5f		 je	 SHORT $LN111@draw_havoc
  010d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  010da	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  010df	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  010e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  010e9	05 aa 01 00 00	 add	 eax, 426		; 000001aaH
  010ee	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  010f3	c7 05 08 00 00
	00 a8 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 424 ; 000001a8H
  010fd	c7 05 0c 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 228 ; 000000e4H
  01107	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01111	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0111b	c6 05 18 00 00
	00 d4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 212 ; 000000d4H
  01122	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01127	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0112a	50		 push	 eax
  0112b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0112e	51		 push	 ecx
  0112f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN111@draw_havoc:

; 1022 : 			draw_lamp (havoc_lamps.threat_warning_close_range_1						, X_ORG +  21, Y_ORG +  43, 405, 224,   6,   3, 209);	// (18% alpha)

  01134	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01139	c1 e8 13	 shr	 eax, 19			; 00000013H
  0113c	83 e0 01	 and	 eax, 1
  0113f	74 5f		 je	 SHORT $LN112@draw_havoc
  01141	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01146	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  0114b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01155	05 a6 01 00 00	 add	 eax, 422		; 000001a6H
  0115a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0115f	c7 05 08 00 00
	00 95 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 405 ; 00000195H
  01169	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  01173	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0117d	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  01187	c6 05 18 00 00
	00 d1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 209 ; 000000d1H
  0118e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01193	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01196	50		 push	 eax
  01197	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0119a	51		 push	 ecx
  0119b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN112@draw_havoc:

; 1023 : 			draw_lamp (havoc_lamps.threat_warning_close_range_2						, X_ORG +  16, Y_ORG +  39, 400, 220,   5,   5, 207);	// (19% alpha)

  011a0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  011a5	c1 e8 14	 shr	 eax, 20			; 00000014H
  011a8	83 e0 01	 and	 eax, 1
  011ab	74 5f		 je	 SHORT $LN113@draw_havoc
  011ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011b2	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  011b7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  011bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  011c1	05 a2 01 00 00	 add	 eax, 418		; 000001a2H
  011c6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  011cb	c7 05 08 00 00
	00 90 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 400 ; 00000190H
  011d5	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  011df	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  011e9	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  011f3	c6 05 18 00 00
	00 cf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 207 ; 000000cfH
  011fa	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011ff	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01202	50		 push	 eax
  01203	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01206	51		 push	 ecx
  01207	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN113@draw_havoc:

; 1024 : 			draw_lamp (havoc_lamps.threat_warning_close_range_3						, X_ORG +  12, Y_ORG +  33, 396, 214,   5,   6, 204);	// (20% alpha)

  0120c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01211	c1 e8 15	 shr	 eax, 21			; 00000015H
  01214	83 e0 01	 and	 eax, 1
  01217	74 5f		 je	 SHORT $LN114@draw_havoc
  01219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0121e	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  01223	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01228	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0122d	05 9c 01 00 00	 add	 eax, 412		; 0000019cH
  01232	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01237	c7 05 08 00 00
	00 8c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 396 ; 0000018cH
  01241	c7 05 0c 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 214 ; 000000d6H
  0124b	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  01255	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0125f	c6 05 18 00 00
	00 cc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 204 ; 000000ccH
  01266	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0126b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0126e	50		 push	 eax
  0126f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01272	51		 push	 ecx
  01273	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN114@draw_havoc:

; 1025 : 			draw_lamp (havoc_lamps.threat_warning_close_range_4						, X_ORG +  11, Y_ORG +  25, 395, 206,   3,   8, 201);	// (21% alpha)

  01278	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0127d	c1 e8 16	 shr	 eax, 22			; 00000016H
  01280	83 e0 01	 and	 eax, 1
  01283	74 5f		 je	 SHORT $LN115@draw_havoc
  01285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0128a	05 d7 01 00 00	 add	 eax, 471		; 000001d7H
  0128f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01294	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01299	05 94 01 00 00	 add	 eax, 404		; 00000194H
  0129e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  012a3	c7 05 08 00 00
	00 8b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 395 ; 0000018bH
  012ad	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  012b7	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  012c1	c7 05 14 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 8
  012cb	c6 05 18 00 00
	00 c9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 201 ; 000000c9H
  012d2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012d7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  012da	50		 push	 eax
  012db	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  012de	51		 push	 ecx
  012df	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN115@draw_havoc:

; 1026 : 			draw_lamp (havoc_lamps.threat_warning_close_range_5						, X_ORG +  11, Y_ORG +  19, 395, 200,   5,   6, 199);	// (22% alpha)

  012e4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  012e9	c1 e8 17	 shr	 eax, 23			; 00000017H
  012ec	83 e0 01	 and	 eax, 1
  012ef	74 5f		 je	 SHORT $LN116@draw_havoc
  012f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012f6	05 d7 01 00 00	 add	 eax, 471		; 000001d7H
  012fb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01300	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01305	05 8e 01 00 00	 add	 eax, 398		; 0000018eH
  0130a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0130f	c7 05 08 00 00
	00 8b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 395 ; 0000018bH
  01319	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  01323	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  0132d	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01337	c6 05 18 00 00
	00 c7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 199 ; 000000c7H
  0133e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01343	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01346	50		 push	 eax
  01347	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0134a	51		 push	 ecx
  0134b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN116@draw_havoc:

; 1027 : 			draw_lamp (havoc_lamps.threat_warning_close_range_6						, X_ORG +  14, Y_ORG +  15, 398, 196,   5,   4, 196);	// (23% alpha)

  01350	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01355	c1 e8 18	 shr	 eax, 24			; 00000018H
  01358	83 e0 01	 and	 eax, 1
  0135b	74 5f		 je	 SHORT $LN117@draw_havoc
  0135d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01362	05 da 01 00 00	 add	 eax, 474		; 000001daH
  01367	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0136c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01371	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  01376	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0137b	c7 05 08 00 00
	00 8e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 398 ; 0000018eH
  01385	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  0138f	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  01399	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  013a3	c6 05 18 00 00
	00 c4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 196 ; 000000c4H
  013aa	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  013af	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  013b2	50		 push	 eax
  013b3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  013b6	51		 push	 ecx
  013b7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN117@draw_havoc:

; 1028 : 			draw_lamp (havoc_lamps.threat_warning_close_range_7						, X_ORG +  18, Y_ORG +  12, 402, 193,   7,   4, 194);	// (24% alpha)

  013bc	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  013c1	c1 e8 19	 shr	 eax, 25			; 00000019H
  013c4	83 e0 01	 and	 eax, 1
  013c7	74 5f		 je	 SHORT $LN118@draw_havoc
  013c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  013ce	05 de 01 00 00	 add	 eax, 478		; 000001deH
  013d3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  013d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  013dd	05 87 01 00 00	 add	 eax, 391		; 00000187H
  013e2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  013e7	c7 05 08 00 00
	00 92 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 402 ; 00000192H
  013f1	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  013fb	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01405	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0140f	c6 05 18 00 00
	00 c2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 194 ; 000000c2H
  01416	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0141b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0141e	50		 push	 eax
  0141f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01422	51		 push	 ecx
  01423	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN118@draw_havoc:

; 1029 : 			draw_lamp (havoc_lamps.threat_warning_close_range_8						, X_ORG +  25, Y_ORG +  12, 409, 193,   4,   2, 191);	// (25% alpha)

  01428	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0142d	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  01430	83 e0 01	 and	 eax, 1
  01433	74 5f		 je	 SHORT $LN119@draw_havoc
  01435	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0143a	05 e5 01 00 00	 add	 eax, 485		; 000001e5H
  0143f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01444	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01449	05 87 01 00 00	 add	 eax, 391		; 00000187H
  0144e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01453	c7 05 08 00 00
	00 99 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 409 ; 00000199H
  0145d	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  01467	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01471	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 2
  0147b	c6 05 18 00 00
	00 bf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 191 ; 000000bfH
  01482	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01487	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0148a	50		 push	 eax
  0148b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0148e	51		 push	 ecx
  0148f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN119@draw_havoc:

; 1030 : 			draw_lamp (havoc_lamps.threat_warning_close_range_9						, X_ORG +  29, Y_ORG +  12, 413, 193,   7,   4, 189);	// (26% alpha)

  01494	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01499	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  0149c	83 e0 01	 and	 eax, 1
  0149f	74 5f		 je	 SHORT $LN120@draw_havoc
  014a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  014a6	05 e9 01 00 00	 add	 eax, 489		; 000001e9H
  014ab	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  014b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  014b5	05 87 01 00 00	 add	 eax, 391		; 00000187H
  014ba	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  014bf	c7 05 08 00 00
	00 9d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 413 ; 0000019dH
  014c9	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  014d3	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  014dd	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  014e7	c6 05 18 00 00
	00 bd		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 189 ; 000000bdH
  014ee	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  014f3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  014f6	50		 push	 eax
  014f7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  014fa	51		 push	 ecx
  014fb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN120@draw_havoc:

; 1031 : 			draw_lamp (havoc_lamps.threat_warning_close_range_10						, X_ORG +  35, Y_ORG +  14, 419, 195,   7,   7, 186);	// (27% alpha)

  01500	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01505	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  01508	83 e0 01	 and	 eax, 1
  0150b	74 5f		 je	 SHORT $LN121@draw_havoc
  0150d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01512	05 ef 01 00 00	 add	 eax, 495		; 000001efH
  01517	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0151c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01521	05 89 01 00 00	 add	 eax, 393		; 00000189H
  01526	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0152b	c7 05 08 00 00
	00 a3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 419 ; 000001a3H
  01535	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  0153f	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01549	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01553	c6 05 18 00 00
	00 ba		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 186 ; 000000baH
  0155a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0155f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01562	50		 push	 eax
  01563	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01566	51		 push	 ecx
  01567	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN121@draw_havoc:

; 1032 : 			draw_lamp (havoc_lamps.threat_warning_close_range_11						, X_ORG +  40, Y_ORG +  20, 424, 201,   5,   6, 184);	// (28% alpha)

  0156c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01571	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  01574	83 e0 01	 and	 eax, 1
  01577	74 5f		 je	 SHORT $LN122@draw_havoc
  01579	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0157e	05 f4 01 00 00	 add	 eax, 500		; 000001f4H
  01583	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01588	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0158d	05 8f 01 00 00	 add	 eax, 399		; 0000018fH
  01592	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01597	c7 05 08 00 00
	00 a8 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 424 ; 000001a8H
  015a1	c7 05 0c 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 201 ; 000000c9H
  015ab	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  015b5	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  015bf	c6 05 18 00 00
	00 b8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 184 ; 000000b8H
  015c6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  015cb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  015ce	50		 push	 eax
  015cf	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  015d2	51		 push	 ecx
  015d3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN122@draw_havoc:

; 1033 : 			draw_lamp (havoc_lamps.threat_warning_close_range_12						, X_ORG +  43, Y_ORG +  26, 427, 207,   3,   7, 181);	// (29% alpha)

  015d8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  015dd	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  015e0	83 e0 01	 and	 eax, 1
  015e3	74 5f		 je	 SHORT $LN123@draw_havoc
  015e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  015ea	05 f7 01 00 00	 add	 eax, 503		; 000001f7H
  015ef	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  015f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  015f9	05 95 01 00 00	 add	 eax, 405		; 00000195H
  015fe	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01603	c7 05 08 00 00
	00 ab 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 427 ; 000001abH
  0160d	c7 05 0c 00 00
	00 cf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 207 ; 000000cfH
  01617	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  01621	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0162b	c6 05 18 00 00
	00 b5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 181 ; 000000b5H
  01632	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01637	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0163a	50		 push	 eax
  0163b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0163e	51		 push	 ecx
  0163f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN123@draw_havoc:

; 1034 : 			draw_lamp (havoc_lamps.threat_warning_close_range_13						, X_ORG +  42, Y_ORG +  33, 426, 214,   3,   5, 178);	// (30% alpha)

  01644	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01649	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0164c	83 e0 01	 and	 eax, 1
  0164f	74 5f		 je	 SHORT $LN124@draw_havoc
  01651	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01656	05 f6 01 00 00	 add	 eax, 502		; 000001f6H
  0165b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01660	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01665	05 9c 01 00 00	 add	 eax, 412		; 0000019cH
  0166a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0166f	c7 05 08 00 00
	00 aa 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 426 ; 000001aaH
  01679	c7 05 0c 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 214 ; 000000d6H
  01683	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  0168d	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01697	c6 05 18 00 00
	00 b2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 178 ; 000000b2H
  0169e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  016a3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  016a6	50		 push	 eax
  016a7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  016aa	51		 push	 ecx
  016ab	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN124@draw_havoc:

; 1035 : 			draw_lamp (havoc_lamps.threat_warning_close_range_14						, X_ORG +  38, Y_ORG +  38, 422, 219,   6,   5, 176);	// (31% alpha)

  016b0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  016b5	83 e0 01	 and	 eax, 1
  016b8	74 5f		 je	 SHORT $LN125@draw_havoc
  016ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  016bf	05 f2 01 00 00	 add	 eax, 498		; 000001f2H
  016c4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  016c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  016ce	05 a1 01 00 00	 add	 eax, 417		; 000001a1H
  016d3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  016d8	c7 05 08 00 00
	00 a6 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 422 ; 000001a6H
  016e2	c7 05 0c 00 00
	00 db 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 219 ; 000000dbH
  016ec	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  016f6	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01700	c6 05 18 00 00
	00 b0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 176 ; 000000b0H
  01707	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0170c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0170f	50		 push	 eax
  01710	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01713	51		 push	 ecx
  01714	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN125@draw_havoc:

; 1036 : 			draw_lamp (havoc_lamps.threat_warning_close_range_15						, X_ORG +  33, Y_ORG +  43, 417, 224,   6,   4, 173);	// (32% alpha)

  01719	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0171e	d1 e8		 shr	 eax, 1
  01720	83 e0 01	 and	 eax, 1
  01723	74 5f		 je	 SHORT $LN126@draw_havoc
  01725	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0172a	05 ed 01 00 00	 add	 eax, 493		; 000001edH
  0172f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01734	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01739	05 a6 01 00 00	 add	 eax, 422		; 000001a6H
  0173e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01743	c7 05 08 00 00
	00 a1 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 417 ; 000001a1H
  0174d	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  01757	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01761	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0176b	c6 05 18 00 00
	00 ad		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 173 ; 000000adH
  01772	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01777	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0177a	50		 push	 eax
  0177b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0177e	51		 push	 ecx
  0177f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN126@draw_havoc:

; 1037 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90_close_range		, X_ORG +   7, Y_ORG +  23, 391, 204,   4,   5, 171);	// (33% alpha)

  01784	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01789	c1 e8 02	 shr	 eax, 2
  0178c	83 e0 01	 and	 eax, 1
  0178f	74 5f		 je	 SHORT $LN127@draw_havoc
  01791	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01796	05 d3 01 00 00	 add	 eax, 467		; 000001d3H
  0179b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  017a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  017a5	05 92 01 00 00	 add	 eax, 402		; 00000192H
  017aa	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  017af	c7 05 08 00 00
	00 87 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 391 ; 00000187H
  017b9	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  017c3	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  017cd	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  017d7	c6 05 18 00 00
	00 ab		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 171 ; 000000abH
  017de	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  017e3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  017e6	50		 push	 eax
  017e7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  017ea	51		 push	 ecx
  017eb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN127@draw_havoc:

; 1038 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67_close_range		, X_ORG +  10, Y_ORG +  16, 394, 197,   4,   4, 168);	// (34% alpha)

  017f0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  017f5	c1 e8 03	 shr	 eax, 3
  017f8	83 e0 01	 and	 eax, 1
  017fb	74 5f		 je	 SHORT $LN128@draw_havoc
  017fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01802	05 d6 01 00 00	 add	 eax, 470		; 000001d6H
  01807	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0180c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01811	05 8b 01 00 00	 add	 eax, 395		; 0000018bH
  01816	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0181b	c7 05 08 00 00
	00 8a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 394 ; 0000018aH
  01825	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  0182f	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01839	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01843	c6 05 18 00 00
	00 a8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 168 ; 000000a8H
  0184a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0184f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01852	50		 push	 eax
  01853	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01856	51		 push	 ecx
  01857	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN128@draw_havoc:

; 1039 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45_close_range		, X_ORG +  14, Y_ORG +  11, 398, 192,   4,   4, 166);	// (35% alpha)

  0185c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01861	c1 e8 04	 shr	 eax, 4
  01864	83 e0 01	 and	 eax, 1
  01867	74 5f		 je	 SHORT $LN129@draw_havoc
  01869	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0186e	05 da 01 00 00	 add	 eax, 474		; 000001daH
  01873	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01878	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0187d	05 86 01 00 00	 add	 eax, 390		; 00000186H
  01882	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01887	c7 05 08 00 00
	00 8e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 398 ; 0000018eH
  01891	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  0189b	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  018a5	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  018af	c6 05 18 00 00
	00 a6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 166 ; 000000a6H
  018b6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  018bb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  018be	50		 push	 eax
  018bf	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  018c2	51		 push	 ecx
  018c3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN129@draw_havoc:

; 1040 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22_close_range		, X_ORG +  21, Y_ORG +   8, 405, 189,   4,   4, 163);	// (36% alpha)

  018c8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  018cd	c1 e8 05	 shr	 eax, 5
  018d0	83 e0 01	 and	 eax, 1
  018d3	74 5f		 je	 SHORT $LN130@draw_havoc
  018d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  018da	05 e1 01 00 00	 add	 eax, 481		; 000001e1H
  018df	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  018e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  018e9	05 83 01 00 00	 add	 eax, 387		; 00000183H
  018ee	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  018f3	c7 05 08 00 00
	00 95 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 405 ; 00000195H
  018fd	c7 05 0c 00 00
	00 bd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 189 ; 000000bdH
  01907	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01911	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0191b	c6 05 18 00 00
	00 a3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 163 ; 000000a3H
  01922	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01927	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0192a	50		 push	 eax
  0192b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0192e	51		 push	 ecx
  0192f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN130@draw_havoc:

; 1041 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22_close_range		, X_ORG +  28, Y_ORG +   8, 412, 189,   4,   4, 161);	// (37% alpha)

  01934	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01939	c1 e8 06	 shr	 eax, 6
  0193c	83 e0 01	 and	 eax, 1
  0193f	74 5f		 je	 SHORT $LN131@draw_havoc
  01941	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01946	05 e8 01 00 00	 add	 eax, 488		; 000001e8H
  0194b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01950	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01955	05 83 01 00 00	 add	 eax, 387		; 00000183H
  0195a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0195f	c7 05 08 00 00
	00 9c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 412 ; 0000019cH
  01969	c7 05 0c 00 00
	00 bd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 189 ; 000000bdH
  01973	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0197d	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01987	c6 05 18 00 00
	00 a1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 161 ; 000000a1H
  0198e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01993	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01996	50		 push	 eax
  01997	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0199a	51		 push	 ecx
  0199b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN131@draw_havoc:

; 1042 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45_close_range		, X_ORG +  35, Y_ORG +  11, 419, 192,   4,   4, 158);	// (38% alpha)

  019a0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  019a5	c1 e8 07	 shr	 eax, 7
  019a8	83 e0 01	 and	 eax, 1
  019ab	74 5f		 je	 SHORT $LN132@draw_havoc
  019ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  019b2	05 ef 01 00 00	 add	 eax, 495		; 000001efH
  019b7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  019bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  019c1	05 86 01 00 00	 add	 eax, 390		; 00000186H
  019c6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  019cb	c7 05 08 00 00
	00 a3 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 419 ; 000001a3H
  019d5	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  019df	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  019e9	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  019f3	c6 05 18 00 00
	00 9e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 158 ; 0000009eH
  019fa	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  019ff	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01a02	50		 push	 eax
  01a03	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01a06	51		 push	 ecx
  01a07	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN132@draw_havoc:

; 1043 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67_close_range		, X_ORG +  41, Y_ORG +  16, 425, 197,   4,   4, 156);	// (39% alpha)

  01a0c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01a11	c1 e8 08	 shr	 eax, 8
  01a14	83 e0 01	 and	 eax, 1
  01a17	74 5f		 je	 SHORT $LN133@draw_havoc
  01a19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01a1e	05 f5 01 00 00	 add	 eax, 501		; 000001f5H
  01a23	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01a28	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01a2d	05 8b 01 00 00	 add	 eax, 395		; 0000018bH
  01a32	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01a37	c7 05 08 00 00
	00 a9 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 425 ; 000001a9H
  01a41	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  01a4b	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01a55	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  01a5f	c6 05 18 00 00
	00 9c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 156 ; 0000009cH
  01a66	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01a6b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01a6e	50		 push	 eax
  01a6f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01a72	51		 push	 ecx
  01a73	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN133@draw_havoc:

; 1044 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90_close_range		, X_ORG +  45, Y_ORG +  23, 429, 204,   4,   5, 153);	// (40% alpha)

  01a78	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01a7d	c1 e8 09	 shr	 eax, 9
  01a80	83 e0 01	 and	 eax, 1
  01a83	74 5f		 je	 SHORT $LN134@draw_havoc
  01a85	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01a8a	05 f9 01 00 00	 add	 eax, 505		; 000001f9H
  01a8f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01a94	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01a99	05 92 01 00 00	 add	 eax, 402		; 00000192H
  01a9e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01aa3	c7 05 08 00 00
	00 ad 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 429 ; 000001adH
  01aad	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  01ab7	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  01ac1	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01acb	c6 05 18 00 00
	00 99		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 153 ; 00000099H
  01ad2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01ad7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01ada	50		 push	 eax
  01adb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01ade	51		 push	 ecx
  01adf	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN134@draw_havoc:

; 1045 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90						, X_ORG +   1, Y_ORG +  21, 385, 202,   7,   7, 150);	// (41% alpha)

  01ae4	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01ae9	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  01aec	83 e0 01	 and	 eax, 1
  01aef	74 5f		 je	 SHORT $LN135@draw_havoc
  01af1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01af6	05 cd 01 00 00	 add	 eax, 461		; 000001cdH
  01afb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01b00	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01b05	05 90 01 00 00	 add	 eax, 400		; 00000190H
  01b0a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01b0f	c7 05 08 00 00
	00 81 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 385 ; 00000181H
  01b19	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  01b23	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01b2d	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01b37	c6 05 18 00 00
	00 96		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 150 ; 00000096H
  01b3e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01b43	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01b46	50		 push	 eax
  01b47	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01b4a	51		 push	 ecx
  01b4b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN135@draw_havoc:

; 1046 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67						, X_ORG +   4, Y_ORG +  12, 388, 193,   7,   7, 148);	// (42% alpha)

  01b50	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01b55	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  01b58	83 e0 01	 and	 eax, 1
  01b5b	74 5f		 je	 SHORT $LN136@draw_havoc
  01b5d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01b62	05 d0 01 00 00	 add	 eax, 464		; 000001d0H
  01b67	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01b6c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01b71	05 87 01 00 00	 add	 eax, 391		; 00000187H
  01b76	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01b7b	c7 05 08 00 00
	00 84 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 388 ; 00000184H
  01b85	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  01b8f	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01b99	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01ba3	c6 05 18 00 00
	00 94		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 148 ; 00000094H
  01baa	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01baf	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01bb2	50		 push	 eax
  01bb3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01bb6	51		 push	 ecx
  01bb7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN136@draw_havoc:

; 1047 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, X_ORG +  10, Y_ORG +   5, 394, 186,   6,   7, 145);	// (43% alpha)

  01bbc	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01bc1	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  01bc4	83 e0 01	 and	 eax, 1
  01bc7	74 5f		 je	 SHORT $LN137@draw_havoc
  01bc9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01bce	05 d6 01 00 00	 add	 eax, 470		; 000001d6H
  01bd3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01bd8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01bdd	05 80 01 00 00	 add	 eax, 384		; 00000180H
  01be2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01be7	c7 05 08 00 00
	00 8a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 394 ; 0000018aH
  01bf1	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  01bfb	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  01c05	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01c0f	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  01c16	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01c1b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01c1e	50		 push	 eax
  01c1f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01c22	51		 push	 ecx
  01c23	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN137@draw_havoc:

; 1048 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, X_ORG +  18, Y_ORG +   2, 402, 183,   7,   6, 143);	// (44% alpha)

  01c28	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01c2d	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  01c30	83 e0 01	 and	 eax, 1
  01c33	74 5f		 je	 SHORT $LN138@draw_havoc
  01c35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01c3a	05 de 01 00 00	 add	 eax, 478		; 000001deH
  01c3f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01c44	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01c49	05 7d 01 00 00	 add	 eax, 381		; 0000017dH
  01c4e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01c53	c7 05 08 00 00
	00 92 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 402 ; 00000192H
  01c5d	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  01c67	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01c71	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01c7b	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  01c82	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01c87	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01c8a	50		 push	 eax
  01c8b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01c8e	51		 push	 ecx
  01c8f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN138@draw_havoc:

; 1049 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22						, X_ORG +  27, Y_ORG +   2, 411, 183,   7,   6, 140);	// (45% alpha)

  01c94	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01c99	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  01c9c	83 e0 01	 and	 eax, 1
  01c9f	74 5f		 je	 SHORT $LN139@draw_havoc
  01ca1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01ca6	05 e7 01 00 00	 add	 eax, 487		; 000001e7H
  01cab	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01cb0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01cb5	05 7d 01 00 00	 add	 eax, 381		; 0000017dH
  01cba	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01cbf	c7 05 08 00 00
	00 9b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 411 ; 0000019bH
  01cc9	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  01cd3	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01cdd	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  01ce7	c6 05 18 00 00
	00 8c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 140 ; 0000008cH
  01cee	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01cf3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01cf6	50		 push	 eax
  01cf7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01cfa	51		 push	 ecx
  01cfb	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN139@draw_havoc:

; 1050 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45						, X_ORG +  36, Y_ORG +   5, 420, 186,   7,   7, 138);	// (46% alpha)

  01d00	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01d05	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  01d08	83 e0 01	 and	 eax, 1
  01d0b	74 5f		 je	 SHORT $LN140@draw_havoc
  01d0d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01d12	05 f0 01 00 00	 add	 eax, 496		; 000001f0H
  01d17	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01d1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01d21	05 80 01 00 00	 add	 eax, 384		; 00000180H
  01d26	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01d2b	c7 05 08 00 00
	00 a4 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 420 ; 000001a4H
  01d35	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  01d3f	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01d49	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01d53	c6 05 18 00 00
	00 8a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 138 ; 0000008aH
  01d5a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01d5f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01d62	50		 push	 eax
  01d63	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01d66	51		 push	 ecx
  01d67	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN140@draw_havoc:

; 1051 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67						, X_ORG +  43, Y_ORG +  12, 427, 193,   7,   7, 135);	// (47% alpha)

  01d6c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01d71	c1 e8 10	 shr	 eax, 16			; 00000010H
  01d74	83 e0 01	 and	 eax, 1
  01d77	74 5f		 je	 SHORT $LN141@draw_havoc
  01d79	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01d7e	05 f7 01 00 00	 add	 eax, 503		; 000001f7H
  01d83	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01d88	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01d8d	05 87 01 00 00	 add	 eax, 391		; 00000187H
  01d92	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01d97	c7 05 08 00 00
	00 ab 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 427 ; 000001abH
  01da1	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  01dab	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01db5	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01dbf	c6 05 18 00 00
	00 87		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 135 ; 00000087H
  01dc6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01dcb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01dce	50		 push	 eax
  01dcf	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01dd2	51		 push	 ecx
  01dd3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN141@draw_havoc:

; 1052 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90						, X_ORG +  48, Y_ORG +  21, 432, 202,   7,   7, 133);	// (48% alpha)

  01dd8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01ddd	c1 e8 11	 shr	 eax, 17			; 00000011H
  01de0	83 e0 01	 and	 eax, 1
  01de3	74 5f		 je	 SHORT $LN142@draw_havoc
  01de5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01dea	05 fc 01 00 00	 add	 eax, 508		; 000001fcH
  01def	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01df4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01df9	05 90 01 00 00	 add	 eax, 400		; 00000190H
  01dfe	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01e03	c7 05 08 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 432 ; 000001b0H
  01e0d	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  01e17	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  01e21	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  01e2b	c6 05 18 00 00
	00 85		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 133 ; 00000085H
  01e32	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01e37	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01e3a	50		 push	 eax
  01e3b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01e3e	51		 push	 ecx
  01e3f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN142@draw_havoc:

; 1053 : 			draw_lamp (havoc_lamps.threat_warning_missile_below						, X_ORG +  23, Y_ORG +  27, 407, 208,  11,   5, 130);	// (49% alpha)

  01e44	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01e49	c1 e8 12	 shr	 eax, 18			; 00000012H
  01e4c	83 e0 01	 and	 eax, 1
  01e4f	74 5f		 je	 SHORT $LN143@draw_havoc
  01e51	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01e56	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  01e5b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01e60	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01e65	05 96 01 00 00	 add	 eax, 406		; 00000196H
  01e6a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01e6f	c7 05 08 00 00
	00 97 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 407 ; 00000197H
  01e79	c7 05 0c 00 00
	00 d0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 208 ; 000000d0H
  01e83	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  01e8d	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01e97	c6 05 18 00 00
	00 82		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 130 ; 00000082H
  01e9e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01ea3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01ea6	50		 push	 eax
  01ea7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01eaa	51		 push	 ecx
  01eab	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN143@draw_havoc:

; 1054 : 			draw_lamp (havoc_lamps.threat_warning_missile_above						, X_ORG +  23, Y_ORG +  22, 407, 203,  10,   5, 127);	// (50% alpha)

  01eb0	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01eb5	c1 e8 13	 shr	 eax, 19			; 00000013H
  01eb8	83 e0 01	 and	 eax, 1
  01ebb	74 5f		 je	 SHORT $LN144@draw_havoc
  01ebd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01ec2	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  01ec7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01ecc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01ed1	05 91 01 00 00	 add	 eax, 401		; 00000191H
  01ed6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01edb	c7 05 08 00 00
	00 97 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 407 ; 00000197H
  01ee5	c7 05 0c 00 00
	00 cb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 203 ; 000000cbH
  01eef	c7 05 10 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 10 ; 0000000aH
  01ef9	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  01f03	c6 05 18 00 00
	00 7f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 127 ; 0000007fH
  01f0a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01f0f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01f12	50		 push	 eax
  01f13	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01f16	51		 push	 ecx
  01f17	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN144@draw_havoc:

; 1055 : 			draw_lamp (havoc_lamps.threat_warning_missile_lh_lock		 				, X_ORG +  17, Y_ORG +  17, 401, 198,  11,  24, 125);	// (51% alpha)

  01f1c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01f21	c1 e8 14	 shr	 eax, 20			; 00000014H
  01f24	83 e0 01	 and	 eax, 1
  01f27	74 5f		 je	 SHORT $LN145@draw_havoc
  01f29	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01f2e	05 dd 01 00 00	 add	 eax, 477		; 000001ddH
  01f33	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01f38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01f3d	05 8c 01 00 00	 add	 eax, 396		; 0000018cH
  01f42	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01f47	c7 05 08 00 00
	00 91 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 401 ; 00000191H
  01f51	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  01f5b	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  01f65	c7 05 14 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 24 ; 00000018H
  01f6f	c6 05 18 00 00
	00 7d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 125 ; 0000007dH
  01f76	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01f7b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01f7e	50		 push	 eax
  01f7f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01f82	51		 push	 ecx
  01f83	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN145@draw_havoc:

; 1056 : 			draw_lamp (havoc_lamps.threat_warning_missile_rh_lock						, X_ORG +  29, Y_ORG +  17, 413, 198,  11,  23, 122);	// (52% alpha)

  01f88	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01f8d	c1 e8 15	 shr	 eax, 21			; 00000015H
  01f90	83 e0 01	 and	 eax, 1
  01f93	74 5f		 je	 SHORT $LN146@draw_havoc
  01f95	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01f9a	05 e9 01 00 00	 add	 eax, 489		; 000001e9H
  01f9f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01fa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01fa9	05 8c 01 00 00	 add	 eax, 396		; 0000018cH
  01fae	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01fb3	c7 05 08 00 00
	00 9d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 413 ; 0000019dH
  01fbd	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  01fc7	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  01fd1	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  01fdb	c6 05 18 00 00
	00 7a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 122 ; 0000007aH
  01fe2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01fe7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01fea	50		 push	 eax
  01feb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01fee	51		 push	 ecx
  01fef	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN146@draw_havoc:

; 1057 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear_close_range		, X_ORG +  17, Y_ORG +  44, 401, 225,   4,   4, 120);	// (53% alpha)

  01ff4	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  01ff9	c1 e8 16	 shr	 eax, 22			; 00000016H
  01ffc	83 e0 01	 and	 eax, 1
  01fff	74 5f		 je	 SHORT $LN147@draw_havoc
  02001	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02006	05 dd 01 00 00	 add	 eax, 477		; 000001ddH
  0200b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02015	05 a7 01 00 00	 add	 eax, 423		; 000001a7H
  0201a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0201f	c7 05 08 00 00
	00 91 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 401 ; 00000191H
  02029	c7 05 0c 00 00
	00 e1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 225 ; 000000e1H
  02033	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0203d	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02047	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  0204e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02053	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02056	50		 push	 eax
  02057	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0205a	51		 push	 ecx
  0205b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN147@draw_havoc:

; 1058 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear_close_range		, X_ORG +  39, Y_ORG +  44, 423, 225,   4,   4, 117);	// (54% alpha)

  02060	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02065	c1 e8 17	 shr	 eax, 23			; 00000017H
  02068	83 e0 01	 and	 eax, 1
  0206b	74 5f		 je	 SHORT $LN148@draw_havoc
  0206d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02072	05 f3 01 00 00	 add	 eax, 499		; 000001f3H
  02077	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0207c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02081	05 a7 01 00 00	 add	 eax, 423		; 000001a7H
  02086	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0208b	c7 05 08 00 00
	00 a7 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 423 ; 000001a7H
  02095	c7 05 0c 00 00
	00 e1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 225 ; 000000e1H
  0209f	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  020a9	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  020b3	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  020ba	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  020bf	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  020c2	50		 push	 eax
  020c3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  020c6	51		 push	 ecx
  020c7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN148@draw_havoc:

; 1059 : 
; 1060 : 			#undef X_ORG
; 1061 : 			#undef Y_ORG
; 1062 : 
; 1063 : 			break;

  020cc	e9 df 39 00 00	 jmp	 $LN2@draw_havoc
$LN149@draw_havoc:

; 1064 : 		}
; 1065 : 		////////////////////////////////////////
; 1066 : 		case COCKPIT_PANEL_LEVEL_RIGHT30:
; 1067 : 		////////////////////////////////////////
; 1068 : 		{
; 1069 : 			#define X_ORG (162)
; 1070 : 			#define Y_ORG (377)
; 1071 : 
; 1072 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_1							, X_ORG +   6, Y_ORG +  55, 332, 236,   9,   7, 229);	// (10% alpha)

  020d1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  020d6	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  020d9	83 e0 01	 and	 eax, 1
  020dc	74 5f		 je	 SHORT $LN150@draw_havoc
  020de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  020e3	05 a8 00 00 00	 add	 eax, 168		; 000000a8H
  020e8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  020ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  020f2	05 b0 01 00 00	 add	 eax, 432		; 000001b0H
  020f7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  020fc	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  02106	c7 05 0c 00 00
	00 ec 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 236 ; 000000ecH
  02110	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  0211a	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02124	c6 05 18 00 00
	00 e5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 229 ; 000000e5H
  0212b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02130	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02133	50		 push	 eax
  02134	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02137	51		 push	 ecx
  02138	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN150@draw_havoc:

; 1073 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_2							, X_ORG +  15, Y_ORG +  54, 341, 235,   9,   6, 227);	// (11% alpha)

  0213d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02142	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  02145	83 e0 01	 and	 eax, 1
  02148	74 5f		 je	 SHORT $LN151@draw_havoc
  0214a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0214f	05 b1 00 00 00	 add	 eax, 177		; 000000b1H
  02154	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02159	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0215e	05 af 01 00 00	 add	 eax, 431		; 000001afH
  02163	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02168	c7 05 08 00 00
	00 55 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 341 ; 00000155H
  02172	c7 05 0c 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 235 ; 000000ebH
  0217c	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  02186	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02190	c6 05 18 00 00
	00 e3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 227 ; 000000e3H
  02197	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0219c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0219f	50		 push	 eax
  021a0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  021a3	51		 push	 ecx
  021a4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN151@draw_havoc:

; 1074 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_3							, X_ORG +  24, Y_ORG +  52, 350, 233,   7,   7, 224);	// (12% alpha)

  021a9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  021ae	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  021b1	83 e0 01	 and	 eax, 1
  021b4	74 5f		 je	 SHORT $LN152@draw_havoc
  021b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  021bb	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  021c0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  021c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  021ca	05 ad 01 00 00	 add	 eax, 429		; 000001adH
  021cf	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  021d4	c7 05 08 00 00
	00 5e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 350 ; 0000015eH
  021de	c7 05 0c 00 00
	00 e9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 233 ; 000000e9H
  021e8	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  021f2	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  021fc	c6 05 18 00 00
	00 e0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 224 ; 000000e0H
  02203	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02208	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0220b	50		 push	 eax
  0220c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0220f	51		 push	 ecx
  02210	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN152@draw_havoc:

; 1075 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_4							, X_ORG +  31, Y_ORG +  51, 357, 232,   8,   7, 222);	// (13% alpha)

  02215	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0221a	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  0221d	83 e0 01	 and	 eax, 1
  02220	74 5f		 je	 SHORT $LN153@draw_havoc
  02222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02227	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  0222c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02231	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02236	05 ac 01 00 00	 add	 eax, 428		; 000001acH
  0223b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02240	c7 05 08 00 00
	00 65 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 357 ; 00000165H
  0224a	c7 05 0c 00 00
	00 e8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 232 ; 000000e8H
  02254	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  0225e	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02268	c6 05 18 00 00
	00 de		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 222 ; 000000deH
  0226f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02274	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02277	50		 push	 eax
  02278	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0227b	51		 push	 ecx
  0227c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN153@draw_havoc:

; 1076 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_5							, X_ORG +  39, Y_ORG +  50, 365, 231,   7,   6, 219);	// (14% alpha)

  02281	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02286	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  02289	83 e0 01	 and	 eax, 1
  0228c	74 5f		 je	 SHORT $LN154@draw_havoc
  0228e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02293	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  02298	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0229d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  022a2	05 ab 01 00 00	 add	 eax, 427		; 000001abH
  022a7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  022ac	c7 05 08 00 00
	00 6d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 365 ; 0000016dH
  022b6	c7 05 0c 00 00
	00 e7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 231 ; 000000e7H
  022c0	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  022ca	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  022d4	c6 05 18 00 00
	00 db		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 219 ; 000000dbH
  022db	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  022e0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  022e3	50		 push	 eax
  022e4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  022e7	51		 push	 ecx
  022e8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN154@draw_havoc:

; 1077 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_6							, X_ORG +  46, Y_ORG +  48, 372, 229,   9,   7, 217);	// (15% alpha)

  022ed	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  022f2	c1 e8 10	 shr	 eax, 16			; 00000010H
  022f5	83 e0 01	 and	 eax, 1
  022f8	74 5f		 je	 SHORT $LN155@draw_havoc
  022fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  022ff	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  02304	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02309	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0230e	05 a9 01 00 00	 add	 eax, 425		; 000001a9H
  02313	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02318	c7 05 08 00 00
	00 74 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 372 ; 00000174H
  02322	c7 05 0c 00 00
	00 e5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 229 ; 000000e5H
  0232c	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  02336	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02340	c6 05 18 00 00
	00 d9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 217 ; 000000d9H
  02347	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0234c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0234f	50		 push	 eax
  02350	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02353	51		 push	 ecx
  02354	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN155@draw_havoc:

; 1078 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear						, X_ORG +  14, Y_ORG +  48, 340, 229,   7,   6, 214);	// (16% alpha)

  02359	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0235e	c1 e8 11	 shr	 eax, 17			; 00000011H
  02361	83 e0 01	 and	 eax, 1
  02364	74 5f		 je	 SHORT $LN156@draw_havoc
  02366	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0236b	05 b0 00 00 00	 add	 eax, 176		; 000000b0H
  02370	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02375	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0237a	05 a9 01 00 00	 add	 eax, 425		; 000001a9H
  0237f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02384	c7 05 08 00 00
	00 54 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 340 ; 00000154H
  0238e	c7 05 0c 00 00
	00 e5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 229 ; 000000e5H
  02398	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  023a2	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  023ac	c6 05 18 00 00
	00 d6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 214 ; 000000d6H
  023b3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  023b8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  023bb	50		 push	 eax
  023bc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  023bf	51		 push	 ecx
  023c0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN156@draw_havoc:

; 1079 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear						, X_ORG +  40, Y_ORG +  43, 366, 224,   6,   7, 212);	// (17% alpha)

  023c5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  023ca	c1 e8 12	 shr	 eax, 18			; 00000012H
  023cd	83 e0 01	 and	 eax, 1
  023d0	74 5f		 je	 SHORT $LN157@draw_havoc
  023d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  023d7	05 ca 00 00 00	 add	 eax, 202		; 000000caH
  023dc	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  023e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  023e6	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  023eb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  023f0	c7 05 08 00 00
	00 6e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 366 ; 0000016eH
  023fa	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  02404	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0240e	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02418	c6 05 18 00 00
	00 d4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 212 ; 000000d4H
  0241f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02424	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02427	50		 push	 eax
  02428	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0242b	51		 push	 ecx
  0242c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN157@draw_havoc:

; 1080 : 			draw_lamp (havoc_lamps.threat_warning_close_range_1						, X_ORG +  21, Y_ORG +  43, 347, 224,   6,   3, 209);	// (18% alpha)

  02431	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02436	c1 e8 13	 shr	 eax, 19			; 00000013H
  02439	83 e0 01	 and	 eax, 1
  0243c	74 5f		 je	 SHORT $LN158@draw_havoc
  0243e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02443	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  02448	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0244d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02452	05 a4 01 00 00	 add	 eax, 420		; 000001a4H
  02457	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0245c	c7 05 08 00 00
	00 5b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 347 ; 0000015bH
  02466	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  02470	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0247a	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  02484	c6 05 18 00 00
	00 d1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 209 ; 000000d1H
  0248b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02490	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02493	50		 push	 eax
  02494	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02497	51		 push	 ecx
  02498	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN158@draw_havoc:

; 1081 : 			draw_lamp (havoc_lamps.threat_warning_close_range_2						, X_ORG +  15, Y_ORG +  39, 341, 220,   7,   5, 207);	// (19% alpha)

  0249d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  024a2	c1 e8 14	 shr	 eax, 20			; 00000014H
  024a5	83 e0 01	 and	 eax, 1
  024a8	74 5f		 je	 SHORT $LN159@draw_havoc
  024aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  024af	05 b1 00 00 00	 add	 eax, 177		; 000000b1H
  024b4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  024b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  024be	05 a0 01 00 00	 add	 eax, 416		; 000001a0H
  024c3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  024c8	c7 05 08 00 00
	00 55 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 341 ; 00000155H
  024d2	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  024dc	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  024e6	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  024f0	c6 05 18 00 00
	00 cf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 207 ; 000000cfH
  024f7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  024fc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  024ff	50		 push	 eax
  02500	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02503	51		 push	 ecx
  02504	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN159@draw_havoc:

; 1082 : 			draw_lamp (havoc_lamps.threat_warning_close_range_3						, X_ORG +  11, Y_ORG +  33, 337, 214,   6,   6, 204);	// (20% alpha)

  02509	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0250e	c1 e8 15	 shr	 eax, 21			; 00000015H
  02511	83 e0 01	 and	 eax, 1
  02514	74 5f		 je	 SHORT $LN160@draw_havoc
  02516	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0251b	05 ad 00 00 00	 add	 eax, 173		; 000000adH
  02520	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02525	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0252a	05 9a 01 00 00	 add	 eax, 410		; 0000019aH
  0252f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02534	c7 05 08 00 00
	00 51 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 337 ; 00000151H
  0253e	c7 05 0c 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 214 ; 000000d6H
  02548	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02552	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0255c	c6 05 18 00 00
	00 cc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 204 ; 000000ccH
  02563	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02568	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0256b	50		 push	 eax
  0256c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0256f	51		 push	 ecx
  02570	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN160@draw_havoc:

; 1083 : 			draw_lamp (havoc_lamps.threat_warning_close_range_4						, X_ORG +  11, Y_ORG +  27, 337, 208,   3,   6, 201);	// (21% alpha)

  02575	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0257a	c1 e8 16	 shr	 eax, 22			; 00000016H
  0257d	83 e0 01	 and	 eax, 1
  02580	74 5f		 je	 SHORT $LN161@draw_havoc
  02582	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02587	05 ad 00 00 00	 add	 eax, 173		; 000000adH
  0258c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02591	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02596	05 94 01 00 00	 add	 eax, 404		; 00000194H
  0259b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  025a0	c7 05 08 00 00
	00 51 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 337 ; 00000151H
  025aa	c7 05 0c 00 00
	00 d0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 208 ; 000000d0H
  025b4	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  025be	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  025c8	c6 05 18 00 00
	00 c9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 201 ; 000000c9H
  025cf	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  025d4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  025d7	50		 push	 eax
  025d8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  025db	51		 push	 ecx
  025dc	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN161@draw_havoc:

; 1084 : 			draw_lamp (havoc_lamps.threat_warning_close_range_5						, X_ORG +  12, Y_ORG +  21, 338, 202,   4,   6, 199);	// (22% alpha)

  025e1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  025e6	c1 e8 17	 shr	 eax, 23			; 00000017H
  025e9	83 e0 01	 and	 eax, 1
  025ec	74 5f		 je	 SHORT $LN162@draw_havoc
  025ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  025f3	05 ae 00 00 00	 add	 eax, 174		; 000000aeH
  025f8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  025fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02602	05 8e 01 00 00	 add	 eax, 398		; 0000018eH
  02607	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0260c	c7 05 08 00 00
	00 52 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 338 ; 00000152H
  02616	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  02620	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0262a	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02634	c6 05 18 00 00
	00 c7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 199 ; 000000c7H
  0263b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02640	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02643	50		 push	 eax
  02644	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02647	51		 push	 ecx
  02648	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN162@draw_havoc:

; 1085 : 			draw_lamp (havoc_lamps.threat_warning_close_range_6						, X_ORG +  14, Y_ORG +  16, 340, 197,   5,   5, 196);	// (23% alpha)

  0264d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02652	c1 e8 18	 shr	 eax, 24			; 00000018H
  02655	83 e0 01	 and	 eax, 1
  02658	74 5f		 je	 SHORT $LN163@draw_havoc
  0265a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0265f	05 b0 00 00 00	 add	 eax, 176		; 000000b0H
  02664	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02669	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0266e	05 89 01 00 00	 add	 eax, 393		; 00000189H
  02673	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02678	c7 05 08 00 00
	00 54 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 340 ; 00000154H
  02682	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  0268c	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  02696	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  026a0	c6 05 18 00 00
	00 c4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 196 ; 000000c4H
  026a7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  026ac	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  026af	50		 push	 eax
  026b0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  026b3	51		 push	 ecx
  026b4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN163@draw_havoc:

; 1086 : 			draw_lamp (havoc_lamps.threat_warning_close_range_7						, X_ORG +  19, Y_ORG +  12, 345, 193,   6,   5, 194);	// (24% alpha)

  026b9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  026be	c1 e8 19	 shr	 eax, 25			; 00000019H
  026c1	83 e0 01	 and	 eax, 1
  026c4	74 5f		 je	 SHORT $LN164@draw_havoc
  026c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  026cb	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  026d0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  026d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  026da	05 85 01 00 00	 add	 eax, 389		; 00000185H
  026df	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  026e4	c7 05 08 00 00
	00 59 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 345 ; 00000159H
  026ee	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  026f8	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02702	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0270c	c6 05 18 00 00
	00 c2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 194 ; 000000c2H
  02713	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02718	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0271b	50		 push	 eax
  0271c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0271f	51		 push	 ecx
  02720	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN164@draw_havoc:

; 1087 : 			draw_lamp (havoc_lamps.threat_warning_close_range_8						, X_ORG +  25, Y_ORG +  11, 351, 192,   4,   3, 191);	// (25% alpha)

  02725	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0272a	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  0272d	83 e0 01	 and	 eax, 1
  02730	74 5f		 je	 SHORT $LN165@draw_havoc
  02732	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02737	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  0273c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02741	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02746	05 84 01 00 00	 add	 eax, 388		; 00000184H
  0274b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02750	c7 05 08 00 00
	00 5f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 351 ; 0000015fH
  0275a	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  02764	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0276e	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  02778	c6 05 18 00 00
	00 bf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 191 ; 000000bfH
  0277f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02784	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02787	50		 push	 eax
  02788	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0278b	51		 push	 ecx
  0278c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN165@draw_havoc:

; 1088 : 			draw_lamp (havoc_lamps.threat_warning_close_range_9						, X_ORG +  29, Y_ORG +  11, 355, 192,   7,   4, 189);	// (26% alpha)

  02791	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02796	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  02799	83 e0 01	 and	 eax, 1
  0279c	74 5f		 je	 SHORT $LN166@draw_havoc
  0279e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  027a3	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  027a8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  027ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  027b2	05 84 01 00 00	 add	 eax, 388		; 00000184H
  027b7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  027bc	c7 05 08 00 00
	00 63 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 355 ; 00000163H
  027c6	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  027d0	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  027da	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  027e4	c6 05 18 00 00
	00 bd		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 189 ; 000000bdH
  027eb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  027f0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  027f3	50		 push	 eax
  027f4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  027f7	51		 push	 ecx
  027f8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN166@draw_havoc:

; 1089 : 			draw_lamp (havoc_lamps.threat_warning_close_range_10						, X_ORG +  35, Y_ORG +  13, 361, 194,   6,   4, 186);	// (27% alpha)

  027fd	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02802	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  02805	83 e0 01	 and	 eax, 1
  02808	74 5f		 je	 SHORT $LN167@draw_havoc
  0280a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0280f	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  02814	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02819	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0281e	05 86 01 00 00	 add	 eax, 390		; 00000186H
  02823	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02828	c7 05 08 00 00
	00 69 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 361 ; 00000169H
  02832	c7 05 0c 00 00
	00 c2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 194 ; 000000c2H
  0283c	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02846	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02850	c6 05 18 00 00
	00 ba		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 186 ; 000000baH
  02857	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0285c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0285f	50		 push	 eax
  02860	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02863	51		 push	 ecx
  02864	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN167@draw_havoc:

; 1090 : 			draw_lamp (havoc_lamps.threat_warning_close_range_11						, X_ORG +  39, Y_ORG +  17, 365, 198,   5,   6, 184);	// (28% alpha)

  02869	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0286e	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  02871	83 e0 01	 and	 eax, 1
  02874	74 5f		 je	 SHORT $LN168@draw_havoc
  02876	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0287b	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  02880	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02885	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0288a	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  0288f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02894	c7 05 08 00 00
	00 6d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 365 ; 0000016dH
  0289e	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  028a8	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  028b2	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  028bc	c6 05 18 00 00
	00 b8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 184 ; 000000b8H
  028c3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  028c8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  028cb	50		 push	 eax
  028cc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  028cf	51		 push	 ecx
  028d0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN168@draw_havoc:

; 1091 : 			draw_lamp (havoc_lamps.threat_warning_close_range_12						, X_ORG +  42, Y_ORG +  23, 368, 204,   3,   6, 181);	// (29% alpha)

  028d5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  028da	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  028dd	83 e0 01	 and	 eax, 1
  028e0	74 5f		 je	 SHORT $LN169@draw_havoc
  028e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  028e7	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  028ec	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  028f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  028f6	05 90 01 00 00	 add	 eax, 400		; 00000190H
  028fb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02900	c7 05 08 00 00
	00 70 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 368 ; 00000170H
  0290a	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  02914	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  0291e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02928	c6 05 18 00 00
	00 b5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 181 ; 000000b5H
  0292f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02934	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02937	50		 push	 eax
  02938	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0293b	51		 push	 ecx
  0293c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN169@draw_havoc:

; 1092 : 			draw_lamp (havoc_lamps.threat_warning_close_range_13						, X_ORG +  42, Y_ORG +  29, 368, 210,   3,   6, 178);	// (30% alpha)

  02941	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  02946	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  02949	83 e0 01	 and	 eax, 1
  0294c	74 5f		 je	 SHORT $LN170@draw_havoc
  0294e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02953	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  02958	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0295d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02962	05 96 01 00 00	 add	 eax, 406		; 00000196H
  02967	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0296c	c7 05 08 00 00
	00 70 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 368 ; 00000170H
  02976	c7 05 0c 00 00
	00 d2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 210 ; 000000d2H
  02980	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  0298a	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02994	c6 05 18 00 00
	00 b2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 178 ; 000000b2H
  0299b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  029a0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  029a3	50		 push	 eax
  029a4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  029a7	51		 push	 ecx
  029a8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN170@draw_havoc:

; 1093 : 			draw_lamp (havoc_lamps.threat_warning_close_range_14						, X_ORG +  38, Y_ORG +  35, 364, 216,   6,   6, 176);	// (31% alpha)

  029ad	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  029b2	83 e0 01	 and	 eax, 1
  029b5	74 5f		 je	 SHORT $LN171@draw_havoc
  029b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  029bc	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  029c1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  029c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  029cb	05 9c 01 00 00	 add	 eax, 412		; 0000019cH
  029d0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  029d5	c7 05 08 00 00
	00 6c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 364 ; 0000016cH
  029df	c7 05 0c 00 00
	00 d8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 216 ; 000000d8H
  029e9	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  029f3	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  029fd	c6 05 18 00 00
	00 b0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 176 ; 000000b0H
  02a04	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02a09	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02a0c	50		 push	 eax
  02a0d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02a10	51		 push	 ecx
  02a11	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN171@draw_havoc:

; 1094 : 			draw_lamp (havoc_lamps.threat_warning_close_range_15						, X_ORG +  33, Y_ORG +  40, 359, 221,   6,   4, 173);	// (32% alpha)

  02a16	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02a1b	d1 e8		 shr	 eax, 1
  02a1d	83 e0 01	 and	 eax, 1
  02a20	74 5f		 je	 SHORT $LN172@draw_havoc
  02a22	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02a27	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  02a2c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02a31	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02a36	05 a1 01 00 00	 add	 eax, 417		; 000001a1H
  02a3b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02a40	c7 05 08 00 00
	00 67 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 359 ; 00000167H
  02a4a	c7 05 0c 00 00
	00 dd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 221 ; 000000ddH
  02a54	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02a5e	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02a68	c6 05 18 00 00
	00 ad		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 173 ; 000000adH
  02a6f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02a74	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02a77	50		 push	 eax
  02a78	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02a7b	51		 push	 ecx
  02a7c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN172@draw_havoc:

; 1095 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90_close_range		, X_ORG +   8, Y_ORG +  25, 334, 206,   4,   4, 171);	// (33% alpha)

  02a81	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02a86	c1 e8 02	 shr	 eax, 2
  02a89	83 e0 01	 and	 eax, 1
  02a8c	74 5f		 je	 SHORT $LN173@draw_havoc
  02a8e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02a93	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  02a98	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02a9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02aa2	05 92 01 00 00	 add	 eax, 402		; 00000192H
  02aa7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02aac	c7 05 08 00 00
	00 4e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 334 ; 0000014eH
  02ab6	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  02ac0	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02aca	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02ad4	c6 05 18 00 00
	00 ab		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 171 ; 000000abH
  02adb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02ae0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02ae3	50		 push	 eax
  02ae4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02ae7	51		 push	 ecx
  02ae8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN173@draw_havoc:

; 1096 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67_close_range		, X_ORG +  10, Y_ORG +  18, 336, 199,   4,   4, 168);	// (34% alpha)

  02aed	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02af2	c1 e8 03	 shr	 eax, 3
  02af5	83 e0 01	 and	 eax, 1
  02af8	74 5f		 je	 SHORT $LN174@draw_havoc
  02afa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02aff	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  02b04	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02b09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02b0e	05 8b 01 00 00	 add	 eax, 395		; 0000018bH
  02b13	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02b18	c7 05 08 00 00
	00 50 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 336 ; 00000150H
  02b22	c7 05 0c 00 00
	00 c7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 199 ; 000000c7H
  02b2c	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02b36	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02b40	c6 05 18 00 00
	00 a8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 168 ; 000000a8H
  02b47	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02b4c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02b4f	50		 push	 eax
  02b50	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02b53	51		 push	 ecx
  02b54	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN174@draw_havoc:

; 1097 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45_close_range		, X_ORG +  15, Y_ORG +  12, 341, 193,   4,   4, 166);	// (35% alpha)

  02b59	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02b5e	c1 e8 04	 shr	 eax, 4
  02b61	83 e0 01	 and	 eax, 1
  02b64	74 5f		 je	 SHORT $LN175@draw_havoc
  02b66	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02b6b	05 b1 00 00 00	 add	 eax, 177		; 000000b1H
  02b70	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02b75	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02b7a	05 85 01 00 00	 add	 eax, 389		; 00000185H
  02b7f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02b84	c7 05 08 00 00
	00 55 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 341 ; 00000155H
  02b8e	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  02b98	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02ba2	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02bac	c6 05 18 00 00
	00 a6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 166 ; 000000a6H
  02bb3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02bb8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02bbb	50		 push	 eax
  02bbc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02bbf	51		 push	 ecx
  02bc0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN175@draw_havoc:

; 1098 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22_close_range		, X_ORG +  21, Y_ORG +   8, 347, 189,   4,   4, 163);	// (36% alpha)

  02bc5	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02bca	c1 e8 05	 shr	 eax, 5
  02bcd	83 e0 01	 and	 eax, 1
  02bd0	74 5f		 je	 SHORT $LN176@draw_havoc
  02bd2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02bd7	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  02bdc	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02be1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02be6	05 81 01 00 00	 add	 eax, 385		; 00000181H
  02beb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02bf0	c7 05 08 00 00
	00 5b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 347 ; 0000015bH
  02bfa	c7 05 0c 00 00
	00 bd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 189 ; 000000bdH
  02c04	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02c0e	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02c18	c6 05 18 00 00
	00 a3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 163 ; 000000a3H
  02c1f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02c24	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02c27	50		 push	 eax
  02c28	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02c2b	51		 push	 ecx
  02c2c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN176@draw_havoc:

; 1099 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22_close_range		, X_ORG +  28, Y_ORG +   7, 354, 188,   4,   4, 161);	// (37% alpha)

  02c31	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02c36	c1 e8 06	 shr	 eax, 6
  02c39	83 e0 01	 and	 eax, 1
  02c3c	74 5f		 je	 SHORT $LN177@draw_havoc
  02c3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02c43	05 be 00 00 00	 add	 eax, 190		; 000000beH
  02c48	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02c4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02c52	05 80 01 00 00	 add	 eax, 384		; 00000180H
  02c57	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02c5c	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  02c66	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  02c70	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02c7a	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02c84	c6 05 18 00 00
	00 a1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 161 ; 000000a1H
  02c8b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02c90	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02c93	50		 push	 eax
  02c94	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02c97	51		 push	 ecx
  02c98	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN177@draw_havoc:

; 1100 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45_close_range		, X_ORG +  35, Y_ORG +   9, 361, 190,   4,   4, 158);	// (38% alpha)

  02c9d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02ca2	c1 e8 07	 shr	 eax, 7
  02ca5	83 e0 01	 and	 eax, 1
  02ca8	74 5f		 je	 SHORT $LN178@draw_havoc
  02caa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02caf	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  02cb4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02cb9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02cbe	05 82 01 00 00	 add	 eax, 386		; 00000182H
  02cc3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02cc8	c7 05 08 00 00
	00 69 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 361 ; 00000169H
  02cd2	c7 05 0c 00 00
	00 be 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 190 ; 000000beH
  02cdc	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02ce6	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02cf0	c6 05 18 00 00
	00 9e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 158 ; 0000009eH
  02cf7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02cfc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02cff	50		 push	 eax
  02d00	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02d03	51		 push	 ecx
  02d04	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN178@draw_havoc:

; 1101 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67_close_range		, X_ORG +  41, Y_ORG +  13, 367, 194,   3,   4, 156);	// (39% alpha)

  02d09	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02d0e	c1 e8 08	 shr	 eax, 8
  02d11	83 e0 01	 and	 eax, 1
  02d14	74 5f		 je	 SHORT $LN179@draw_havoc
  02d16	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02d1b	05 cb 00 00 00	 add	 eax, 203		; 000000cbH
  02d20	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02d25	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02d2a	05 86 01 00 00	 add	 eax, 390		; 00000186H
  02d2f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02d34	c7 05 08 00 00
	00 6f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 367 ; 0000016fH
  02d3e	c7 05 0c 00 00
	00 c2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 194 ; 000000c2H
  02d48	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  02d52	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02d5c	c6 05 18 00 00
	00 9c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 156 ; 0000009cH
  02d63	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02d68	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02d6b	50		 push	 eax
  02d6c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02d6f	51		 push	 ecx
  02d70	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN179@draw_havoc:

; 1102 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90_close_range		, X_ORG +  44, Y_ORG +  20, 370, 201,   4,   4, 153);	// (40% alpha)

  02d75	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02d7a	c1 e8 09	 shr	 eax, 9
  02d7d	83 e0 01	 and	 eax, 1
  02d80	74 5f		 je	 SHORT $LN180@draw_havoc
  02d82	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02d87	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  02d8c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02d91	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02d96	05 8d 01 00 00	 add	 eax, 397		; 0000018dH
  02d9b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02da0	c7 05 08 00 00
	00 72 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 370 ; 00000172H
  02daa	c7 05 0c 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 201 ; 000000c9H
  02db4	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  02dbe	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  02dc8	c6 05 18 00 00
	00 99		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 153 ; 00000099H
  02dcf	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02dd4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02dd7	50		 push	 eax
  02dd8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02ddb	51		 push	 ecx
  02ddc	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN180@draw_havoc:

; 1103 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90						, X_ORG +   2, Y_ORG +  23, 328, 204,   6,   7, 150);	// (41% alpha)

  02de1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02de6	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  02de9	83 e0 01	 and	 eax, 1
  02dec	74 5f		 je	 SHORT $LN181@draw_havoc
  02dee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02df3	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  02df8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02dfd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02e02	05 90 01 00 00	 add	 eax, 400		; 00000190H
  02e07	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02e0c	c7 05 08 00 00
	00 48 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 328 ; 00000148H
  02e16	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  02e20	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  02e2a	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02e34	c6 05 18 00 00
	00 96		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 150 ; 00000096H
  02e3b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02e40	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02e43	50		 push	 eax
  02e44	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02e47	51		 push	 ecx
  02e48	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN181@draw_havoc:

; 1104 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67						, X_ORG +   4, Y_ORG +  14, 330, 195,   7,   7, 148);	// (42% alpha)

  02e4d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02e52	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  02e55	83 e0 01	 and	 eax, 1
  02e58	74 5f		 je	 SHORT $LN182@draw_havoc
  02e5a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02e5f	05 a6 00 00 00	 add	 eax, 166		; 000000a6H
  02e64	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02e69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02e6e	05 87 01 00 00	 add	 eax, 391		; 00000187H
  02e73	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02e78	c7 05 08 00 00
	00 4a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 330 ; 0000014aH
  02e82	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  02e8c	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  02e96	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  02ea0	c6 05 18 00 00
	00 94		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 148 ; 00000094H
  02ea7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02eac	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02eaf	50		 push	 eax
  02eb0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02eb3	51		 push	 ecx
  02eb4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN182@draw_havoc:

; 1105 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, X_ORG +  10, Y_ORG +   7, 336, 188,   7,   6, 145);	// (43% alpha)

  02eb9	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02ebe	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  02ec1	83 e0 01	 and	 eax, 1
  02ec4	74 5f		 je	 SHORT $LN183@draw_havoc
  02ec6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02ecb	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  02ed0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02ed5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02eda	05 80 01 00 00	 add	 eax, 384		; 00000180H
  02edf	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02ee4	c7 05 08 00 00
	00 50 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 336 ; 00000150H
  02eee	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  02ef8	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  02f02	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02f0c	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  02f13	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02f18	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02f1b	50		 push	 eax
  02f1c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02f1f	51		 push	 ecx
  02f20	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN183@draw_havoc:

; 1106 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, X_ORG +  18, Y_ORG +   2, 344, 183,   7,   6, 143);	// (44% alpha)

  02f25	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02f2a	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  02f2d	83 e0 01	 and	 eax, 1
  02f30	74 5f		 je	 SHORT $LN184@draw_havoc
  02f32	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02f37	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  02f3c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02f41	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02f46	05 7b 01 00 00	 add	 eax, 379		; 0000017bH
  02f4b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02f50	c7 05 08 00 00
	00 58 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 344 ; 00000158H
  02f5a	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  02f64	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  02f6e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02f78	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  02f7f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02f84	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02f87	50		 push	 eax
  02f88	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02f8b	51		 push	 ecx
  02f8c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN184@draw_havoc:

; 1107 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22						, X_ORG +  27, Y_ORG +   1, 353, 182,   7,   6, 140);	// (45% alpha)

  02f91	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  02f96	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  02f99	83 e0 01	 and	 eax, 1
  02f9c	74 5f		 je	 SHORT $LN185@draw_havoc
  02f9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  02fa3	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  02fa8	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  02fad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  02fb2	05 7a 01 00 00	 add	 eax, 378		; 0000017aH
  02fb7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  02fbc	c7 05 08 00 00
	00 61 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 353 ; 00000161H
  02fc6	c7 05 0c 00 00
	00 b6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 182 ; 000000b6H
  02fd0	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  02fda	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  02fe4	c6 05 18 00 00
	00 8c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 140 ; 0000008cH
  02feb	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  02ff0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  02ff3	50		 push	 eax
  02ff4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  02ff7	51		 push	 ecx
  02ff8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN185@draw_havoc:

; 1108 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45						, X_ORG +  36, Y_ORG +   3, 362, 184,   6,   7, 138);	// (46% alpha)

  02ffd	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03002	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  03005	83 e0 01	 and	 eax, 1
  03008	74 5f		 je	 SHORT $LN186@draw_havoc
  0300a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0300f	05 c6 00 00 00	 add	 eax, 198		; 000000c6H
  03014	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0301e	05 7c 01 00 00	 add	 eax, 380		; 0000017cH
  03023	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03028	c7 05 08 00 00
	00 6a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 362 ; 0000016aH
  03032	c7 05 0c 00 00
	00 b8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 184 ; 000000b8H
  0303c	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  03046	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  03050	c6 05 18 00 00
	00 8a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 138 ; 0000008aH
  03057	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0305c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0305f	50		 push	 eax
  03060	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03063	51		 push	 ecx
  03064	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN186@draw_havoc:

; 1109 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67						, X_ORG +  43, Y_ORG +   9, 369, 190,   6,   6, 135);	// (47% alpha)

  03069	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0306e	c1 e8 10	 shr	 eax, 16			; 00000010H
  03071	83 e0 01	 and	 eax, 1
  03074	74 5f		 je	 SHORT $LN187@draw_havoc
  03076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0307b	05 cd 00 00 00	 add	 eax, 205		; 000000cdH
  03080	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03085	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0308a	05 82 01 00 00	 add	 eax, 386		; 00000182H
  0308f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03094	c7 05 08 00 00
	00 71 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 369 ; 00000171H
  0309e	c7 05 0c 00 00
	00 be 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 190 ; 000000beH
  030a8	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  030b2	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  030bc	c6 05 18 00 00
	00 87		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 135 ; 00000087H
  030c3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  030c8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  030cb	50		 push	 eax
  030cc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  030cf	51		 push	 ecx
  030d0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN187@draw_havoc:

; 1110 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90						, X_ORG +  47, Y_ORG +  17, 373, 198,   6,   6, 133);	// (48% alpha)

  030d5	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  030da	c1 e8 11	 shr	 eax, 17			; 00000011H
  030dd	83 e0 01	 and	 eax, 1
  030e0	74 5f		 je	 SHORT $LN188@draw_havoc
  030e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  030e7	05 d1 00 00 00	 add	 eax, 209		; 000000d1H
  030ec	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  030f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  030f6	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  030fb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03100	c7 05 08 00 00
	00 75 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 373 ; 00000175H
  0310a	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  03114	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0311e	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03128	c6 05 18 00 00
	00 85		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 133 ; 00000085H
  0312f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03134	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03137	50		 push	 eax
  03138	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0313b	51		 push	 ecx
  0313c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN188@draw_havoc:

; 1111 : 			draw_lamp (havoc_lamps.threat_warning_missile_below						, X_ORG +  23, Y_ORG +  25, 349, 206,  11,   7, 130);	// (49% alpha)

  03141	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03146	c1 e8 12	 shr	 eax, 18			; 00000012H
  03149	83 e0 01	 and	 eax, 1
  0314c	74 5f		 je	 SHORT $LN189@draw_havoc
  0314e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03153	05 b9 00 00 00	 add	 eax, 185		; 000000b9H
  03158	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0315d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03162	05 92 01 00 00	 add	 eax, 402		; 00000192H
  03167	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0316c	c7 05 08 00 00
	00 5d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 349 ; 0000015dH
  03176	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  03180	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  0318a	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  03194	c6 05 18 00 00
	00 82		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 130 ; 00000082H
  0319b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  031a0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  031a3	50		 push	 eax
  031a4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  031a7	51		 push	 ecx
  031a8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN189@draw_havoc:

; 1112 : 			draw_lamp (havoc_lamps.threat_warning_missile_above						, X_ORG +  23, Y_ORG +  21, 349, 202,  10,   6, 127);	// (50% alpha)

  031ad	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  031b2	c1 e8 13	 shr	 eax, 19			; 00000013H
  031b5	83 e0 01	 and	 eax, 1
  031b8	74 5f		 je	 SHORT $LN190@draw_havoc
  031ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  031bf	05 b9 00 00 00	 add	 eax, 185		; 000000b9H
  031c4	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  031c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  031ce	05 8e 01 00 00	 add	 eax, 398		; 0000018eH
  031d3	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  031d8	c7 05 08 00 00
	00 5d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 349 ; 0000015dH
  031e2	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  031ec	c7 05 10 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 10 ; 0000000aH
  031f6	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03200	c6 05 18 00 00
	00 7f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 127 ; 0000007fH
  03207	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0320c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0320f	50		 push	 eax
  03210	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03213	51		 push	 ecx
  03214	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN190@draw_havoc:

; 1113 : 			draw_lamp (havoc_lamps.threat_warning_missile_lh_lock		 				, X_ORG +  16, Y_ORG +  17, 342, 198,  12,  23, 125);	// (51% alpha)

  03219	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0321e	c1 e8 14	 shr	 eax, 20			; 00000014H
  03221	83 e0 01	 and	 eax, 1
  03224	74 5f		 je	 SHORT $LN191@draw_havoc
  03226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0322b	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  03230	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03235	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0323a	05 8a 01 00 00	 add	 eax, 394		; 0000018aH
  0323f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03244	c7 05 08 00 00
	00 56 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 342 ; 00000156H
  0324e	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  03258	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  03262	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  0326c	c6 05 18 00 00
	00 7d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 125 ; 0000007dH
  03273	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03278	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0327b	50		 push	 eax
  0327c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0327f	51		 push	 ecx
  03280	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN191@draw_havoc:

; 1114 : 			draw_lamp (havoc_lamps.threat_warning_missile_rh_lock						, X_ORG +  29, Y_ORG +  16, 355, 197,  11,  23, 122);	// (52% alpha)

  03285	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0328a	c1 e8 15	 shr	 eax, 21			; 00000015H
  0328d	83 e0 01	 and	 eax, 1
  03290	74 5f		 je	 SHORT $LN192@draw_havoc
  03292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03297	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  0329c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  032a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  032a6	05 89 01 00 00	 add	 eax, 393		; 00000189H
  032ab	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  032b0	c7 05 08 00 00
	00 63 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 355 ; 00000163H
  032ba	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  032c4	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  032ce	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  032d8	c6 05 18 00 00
	00 7a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 122 ; 0000007aH
  032df	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  032e4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  032e7	50		 push	 eax
  032e8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  032eb	51		 push	 ecx
  032ec	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN192@draw_havoc:

; 1115 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear_close_range		, X_ORG +  17, Y_ORG +  44, 343, 225,   5,   4, 120);	// (53% alpha)

  032f1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  032f6	c1 e8 16	 shr	 eax, 22			; 00000016H
  032f9	83 e0 01	 and	 eax, 1
  032fc	74 5f		 je	 SHORT $LN193@draw_havoc
  032fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03303	05 b3 00 00 00	 add	 eax, 179		; 000000b3H
  03308	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0330d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03312	05 a5 01 00 00	 add	 eax, 421		; 000001a5H
  03317	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0331c	c7 05 08 00 00
	00 57 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 343 ; 00000157H
  03326	c7 05 0c 00 00
	00 e1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 225 ; 000000e1H
  03330	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  0333a	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03344	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  0334b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03350	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03353	50		 push	 eax
  03354	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03357	51		 push	 ecx
  03358	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN193@draw_havoc:

; 1116 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear_close_range		, X_ORG +  38, Y_ORG +  41, 364, 222,   4,   4, 117);	// (54% alpha)

  0335d	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03362	c1 e8 17	 shr	 eax, 23			; 00000017H
  03365	83 e0 01	 and	 eax, 1
  03368	74 5f		 je	 SHORT $LN194@draw_havoc
  0336a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0336f	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  03374	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03379	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0337e	05 a2 01 00 00	 add	 eax, 418		; 000001a2H
  03383	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03388	c7 05 08 00 00
	00 6c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 364 ; 0000016cH
  03392	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  0339c	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  033a6	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  033b0	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  033b7	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  033bc	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  033bf	50		 push	 eax
  033c0	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  033c3	51		 push	 ecx
  033c4	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN194@draw_havoc:

; 1117 : 
; 1118 : 			#undef X_ORG
; 1119 : 			#undef Y_ORG
; 1120 : 
; 1121 : 			break;

  033c9	e9 e2 26 00 00	 jmp	 $LN2@draw_havoc
$LN195@draw_havoc:

; 1122 : 		}
; 1123 : 		////////////////////////////////////////
; 1124 : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 1125 : 		////////////////////////////////////////
; 1126 : 		{
; 1127 : 			#define X_ORG (453)
; 1128 : 			#define Y_ORG (182)
; 1129 : 
; 1130 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_1							, X_ORG +   5, Y_ORG +  49, 274, 230,   8,   6, 229);	// (10% alpha)

  033ce	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  033d3	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  033d6	83 e0 01	 and	 eax, 1
  033d9	74 5f		 je	 SHORT $LN196@draw_havoc
  033db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  033e0	05 ca 01 00 00	 add	 eax, 458		; 000001caH
  033e5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  033ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  033ef	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  033f4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  033f9	c7 05 08 00 00
	00 12 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 274 ; 00000112H
  03403	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  0340d	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  03417	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03421	c6 05 18 00 00
	00 e5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 229 ; 000000e5H
  03428	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0342d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03430	50		 push	 eax
  03431	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03434	51		 push	 ecx
  03435	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN196@draw_havoc:

; 1131 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_2							, X_ORG +  13, Y_ORG +  49, 282, 230,   8,   6, 227);	// (11% alpha)

  0343a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0343f	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  03442	83 e0 01	 and	 eax, 1
  03445	74 5f		 je	 SHORT $LN197@draw_havoc
  03447	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0344c	05 d2 01 00 00	 add	 eax, 466		; 000001d2H
  03451	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0345b	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  03460	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03465	c7 05 08 00 00
	00 1a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 282 ; 0000011aH
  0346f	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  03479	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  03483	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0348d	c6 05 18 00 00
	00 e3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 227 ; 000000e3H
  03494	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03499	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0349c	50		 push	 eax
  0349d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  034a0	51		 push	 ecx
  034a1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN197@draw_havoc:

; 1132 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_3							, X_ORG +  21, Y_ORG +  49, 290, 230,   8,   6, 224);	// (12% alpha)

  034a6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  034ab	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  034ae	83 e0 01	 and	 eax, 1
  034b1	74 5f		 je	 SHORT $LN198@draw_havoc
  034b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  034b8	05 da 01 00 00	 add	 eax, 474		; 000001daH
  034bd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  034c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  034c7	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  034cc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  034d1	c7 05 08 00 00
	00 22 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 290 ; 00000122H
  034db	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  034e5	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  034ef	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  034f9	c6 05 18 00 00
	00 e0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 224 ; 000000e0H
  03500	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03505	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03508	50		 push	 eax
  03509	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0350c	51		 push	 ecx
  0350d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN198@draw_havoc:

; 1133 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_4							, X_ORG +  29, Y_ORG +  49, 298, 230,   7,   6, 222);	// (13% alpha)

  03512	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03517	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  0351a	83 e0 01	 and	 eax, 1
  0351d	74 5f		 je	 SHORT $LN199@draw_havoc
  0351f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03524	05 e2 01 00 00	 add	 eax, 482		; 000001e2H
  03529	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0352e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03533	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  03538	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0353d	c7 05 08 00 00
	00 2a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 298 ; 0000012aH
  03547	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  03551	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  0355b	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03565	c6 05 18 00 00
	00 de		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 222 ; 000000deH
  0356c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03571	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03574	50		 push	 eax
  03575	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03578	51		 push	 ecx
  03579	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN199@draw_havoc:

; 1134 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_5							, X_ORG +  36, Y_ORG +  49, 305, 230,   8,   6, 219);	// (14% alpha)

  0357e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03583	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  03586	83 e0 01	 and	 eax, 1
  03589	74 5f		 je	 SHORT $LN200@draw_havoc
  0358b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03590	05 e9 01 00 00	 add	 eax, 489		; 000001e9H
  03595	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0359a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0359f	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  035a4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  035a9	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  035b3	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  035bd	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  035c7	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  035d1	c6 05 18 00 00
	00 db		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 219 ; 000000dbH
  035d8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  035dd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  035e0	50		 push	 eax
  035e1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  035e4	51		 push	 ecx
  035e5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN200@draw_havoc:

; 1135 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_6							, X_ORG +  44, Y_ORG +  49, 313, 230,   8,   6, 217);	// (15% alpha)

  035ea	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  035ef	c1 e8 10	 shr	 eax, 16			; 00000010H
  035f2	83 e0 01	 and	 eax, 1
  035f5	74 5f		 je	 SHORT $LN201@draw_havoc
  035f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  035fc	05 f1 01 00 00	 add	 eax, 497		; 000001f1H
  03601	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03606	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0360b	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  03610	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03615	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  0361f	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  03629	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  03633	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0363d	c6 05 18 00 00
	00 d9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 217 ; 000000d9H
  03644	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03649	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0364c	50		 push	 eax
  0364d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03650	51		 push	 ecx
  03651	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN201@draw_havoc:

; 1136 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear						, X_ORG +  12, Y_ORG +  43, 281, 224,   7,   6, 214);	// (16% alpha)

  03656	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0365b	c1 e8 11	 shr	 eax, 17			; 00000011H
  0365e	83 e0 01	 and	 eax, 1
  03661	74 5f		 je	 SHORT $LN202@draw_havoc
  03663	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03668	05 d1 01 00 00	 add	 eax, 465		; 000001d1H
  0366d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03672	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03677	05 e1 00 00 00	 add	 eax, 225		; 000000e1H
  0367c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03681	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  0368b	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  03695	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  0369f	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  036a9	c6 05 18 00 00
	00 d6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 214 ; 000000d6H
  036b0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  036b5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  036b8	50		 push	 eax
  036b9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  036bc	51		 push	 ecx
  036bd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN202@draw_havoc:

; 1137 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear						, X_ORG +  38, Y_ORG +  43, 307, 224,   6,   6, 212);	// (17% alpha)

  036c2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  036c7	c1 e8 12	 shr	 eax, 18			; 00000012H
  036ca	83 e0 01	 and	 eax, 1
  036cd	74 5f		 je	 SHORT $LN203@draw_havoc
  036cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  036d4	05 eb 01 00 00	 add	 eax, 491		; 000001ebH
  036d9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  036de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  036e3	05 e1 00 00 00	 add	 eax, 225		; 000000e1H
  036e8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  036ed	c7 05 08 00 00
	00 33 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 307 ; 00000133H
  036f7	c7 05 0c 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 224 ; 000000e0H
  03701	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0370b	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03715	c6 05 18 00 00
	00 d4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 212 ; 000000d4H
  0371c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03721	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03724	50		 push	 eax
  03725	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03728	51		 push	 ecx
  03729	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN203@draw_havoc:

; 1138 : 			draw_lamp (havoc_lamps.threat_warning_close_range_1						, X_ORG +  20, Y_ORG +  40, 289, 221,   5,   3, 209);	// (18% alpha)

  0372e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03733	c1 e8 13	 shr	 eax, 19			; 00000013H
  03736	83 e0 01	 and	 eax, 1
  03739	74 5f		 je	 SHORT $LN204@draw_havoc
  0373b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03740	05 d9 01 00 00	 add	 eax, 473		; 000001d9H
  03745	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0374a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0374f	05 de 00 00 00	 add	 eax, 222		; 000000deH
  03754	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03759	c7 05 08 00 00
	00 21 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 289 ; 00000121H
  03763	c7 05 0c 00 00
	00 dd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 221 ; 000000ddH
  0376d	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  03777	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  03781	c6 05 18 00 00
	00 d1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 209 ; 000000d1H
  03788	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0378d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03790	50		 push	 eax
  03791	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03794	51		 push	 ecx
  03795	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN204@draw_havoc:

; 1139 : 			draw_lamp (havoc_lamps.threat_warning_close_range_2						, X_ORG +  15, Y_ORG +  36, 284, 217,   5,   5, 207);	// (19% alpha)

  0379a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0379f	c1 e8 14	 shr	 eax, 20			; 00000014H
  037a2	83 e0 01	 and	 eax, 1
  037a5	74 5f		 je	 SHORT $LN205@draw_havoc
  037a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  037ac	05 d4 01 00 00	 add	 eax, 468		; 000001d4H
  037b1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  037b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  037bb	05 da 00 00 00	 add	 eax, 218		; 000000daH
  037c0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  037c5	c7 05 08 00 00
	00 1c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 284 ; 0000011cH
  037cf	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  037d9	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  037e3	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  037ed	c6 05 18 00 00
	00 cf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 207 ; 000000cfH
  037f4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  037f9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  037fc	50		 push	 eax
  037fd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03800	51		 push	 ecx
  03801	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN205@draw_havoc:

; 1140 : 			draw_lamp (havoc_lamps.threat_warning_close_range_3						, X_ORG +  12, Y_ORG +  30, 281, 211,   4,   6, 204);	// (20% alpha)

  03806	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0380b	c1 e8 15	 shr	 eax, 21			; 00000015H
  0380e	83 e0 01	 and	 eax, 1
  03811	74 5f		 je	 SHORT $LN206@draw_havoc
  03813	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03818	05 d1 01 00 00	 add	 eax, 465		; 000001d1H
  0381d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03822	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03827	05 d4 00 00 00	 add	 eax, 212		; 000000d4H
  0382c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03831	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  0383b	c7 05 0c 00 00
	00 d3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 211 ; 000000d3H
  03845	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0384f	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03859	c6 05 18 00 00
	00 cc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 204 ; 000000ccH
  03860	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03865	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03868	50		 push	 eax
  03869	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0386c	51		 push	 ecx
  0386d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN206@draw_havoc:

; 1141 : 			draw_lamp (havoc_lamps.threat_warning_close_range_4						, X_ORG +  12, Y_ORG +  24, 281, 205,   3,   6, 201);	// (21% alpha)

  03872	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03877	c1 e8 16	 shr	 eax, 22			; 00000016H
  0387a	83 e0 01	 and	 eax, 1
  0387d	74 5f		 je	 SHORT $LN207@draw_havoc
  0387f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03884	05 d1 01 00 00	 add	 eax, 465		; 000001d1H
  03889	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0388e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03893	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  03898	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0389d	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  038a7	c7 05 0c 00 00
	00 cd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 205 ; 000000cdH
  038b1	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  038bb	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  038c5	c6 05 18 00 00
	00 c9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 201 ; 000000c9H
  038cc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  038d1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  038d4	50		 push	 eax
  038d5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  038d8	51		 push	 ecx
  038d9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN207@draw_havoc:

; 1142 : 			draw_lamp (havoc_lamps.threat_warning_close_range_5						, X_ORG +  13, Y_ORG +  19, 282, 200,   3,   5, 199);	// (22% alpha)

  038de	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  038e3	c1 e8 17	 shr	 eax, 23			; 00000017H
  038e6	83 e0 01	 and	 eax, 1
  038e9	74 5f		 je	 SHORT $LN208@draw_havoc
  038eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  038f0	05 d2 01 00 00	 add	 eax, 466		; 000001d2H
  038f5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  038fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  038ff	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  03904	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03909	c7 05 08 00 00
	00 1a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 282 ; 0000011aH
  03913	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  0391d	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  03927	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  03931	c6 05 18 00 00
	00 c7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 199 ; 000000c7H
  03938	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0393d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03940	50		 push	 eax
  03941	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03944	51		 push	 ecx
  03945	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN208@draw_havoc:

; 1143 : 			draw_lamp (havoc_lamps.threat_warning_close_range_6						, X_ORG +  16, Y_ORG +  14, 285, 195,   4,   5, 196);	// (23% alpha)

  0394a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0394f	c1 e8 18	 shr	 eax, 24			; 00000018H
  03952	83 e0 01	 and	 eax, 1
  03955	74 5f		 je	 SHORT $LN209@draw_havoc
  03957	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0395c	05 d5 01 00 00	 add	 eax, 469		; 000001d5H
  03961	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03966	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0396b	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  03970	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03975	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  0397f	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  03989	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03993	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  0399d	c6 05 18 00 00
	00 c4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 196 ; 000000c4H
  039a4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  039a9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  039ac	50		 push	 eax
  039ad	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  039b0	51		 push	 ecx
  039b1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN209@draw_havoc:

; 1144 : 			draw_lamp (havoc_lamps.threat_warning_close_range_7						, X_ORG +  20, Y_ORG +  11, 289, 192,   6,   4, 194);	// (24% alpha)

  039b6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  039bb	c1 e8 19	 shr	 eax, 25			; 00000019H
  039be	83 e0 01	 and	 eax, 1
  039c1	74 5f		 je	 SHORT $LN210@draw_havoc
  039c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  039c8	05 d9 01 00 00	 add	 eax, 473		; 000001d9H
  039cd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  039d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  039d7	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  039dc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  039e1	c7 05 08 00 00
	00 21 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 289 ; 00000121H
  039eb	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  039f5	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  039ff	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03a09	c6 05 18 00 00
	00 c2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 194 ; 000000c2H
  03a10	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03a15	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03a18	50		 push	 eax
  03a19	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03a1c	51		 push	 ecx
  03a1d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN210@draw_havoc:

; 1145 : 			draw_lamp (havoc_lamps.threat_warning_close_range_8						, X_ORG +  26, Y_ORG +  11, 295, 192,   5,   2, 191);	// (25% alpha)

  03a22	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03a27	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  03a2a	83 e0 01	 and	 eax, 1
  03a2d	74 5f		 je	 SHORT $LN211@draw_havoc
  03a2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03a34	05 df 01 00 00	 add	 eax, 479		; 000001dfH
  03a39	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03a3e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03a43	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  03a48	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03a4d	c7 05 08 00 00
	00 27 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 295 ; 00000127H
  03a57	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  03a61	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  03a6b	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 2
  03a75	c6 05 18 00 00
	00 bf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 191 ; 000000bfH
  03a7c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03a81	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03a84	50		 push	 eax
  03a85	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03a88	51		 push	 ecx
  03a89	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN211@draw_havoc:

; 1146 : 			draw_lamp (havoc_lamps.threat_warning_close_range_9						, X_ORG +  31, Y_ORG +  11, 300, 192,   6,   4, 189);	// (26% alpha)

  03a8e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03a93	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  03a96	83 e0 01	 and	 eax, 1
  03a99	74 5f		 je	 SHORT $LN212@draw_havoc
  03a9b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03aa0	05 e4 01 00 00	 add	 eax, 484		; 000001e4H
  03aa5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03aaa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03aaf	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  03ab4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03ab9	c7 05 08 00 00
	00 2c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 300 ; 0000012cH
  03ac3	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  03acd	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  03ad7	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03ae1	c6 05 18 00 00
	00 bd		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 189 ; 000000bdH
  03ae8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03aed	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03af0	50		 push	 eax
  03af1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03af4	51		 push	 ecx
  03af5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN212@draw_havoc:

; 1147 : 			draw_lamp (havoc_lamps.threat_warning_close_range_10						, X_ORG +  37, Y_ORG +  14, 306, 195,   4,   5, 186);	// (27% alpha)

  03afa	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03aff	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  03b02	83 e0 01	 and	 eax, 1
  03b05	74 5f		 je	 SHORT $LN213@draw_havoc
  03b07	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03b0c	05 ea 01 00 00	 add	 eax, 490		; 000001eaH
  03b11	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03b16	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03b1b	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  03b20	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03b25	c7 05 08 00 00
	00 32 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 306 ; 00000132H
  03b2f	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  03b39	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03b43	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  03b4d	c6 05 18 00 00
	00 ba		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 186 ; 000000baH
  03b54	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03b59	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03b5c	50		 push	 eax
  03b5d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03b60	51		 push	 ecx
  03b61	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN213@draw_havoc:

; 1148 : 			draw_lamp (havoc_lamps.threat_warning_close_range_11						, X_ORG +  41, Y_ORG +  19, 310, 200,   3,   6, 184);	// (28% alpha)

  03b66	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03b6b	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  03b6e	83 e0 01	 and	 eax, 1
  03b71	74 5f		 je	 SHORT $LN214@draw_havoc
  03b73	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03b78	05 ee 01 00 00	 add	 eax, 494		; 000001eeH
  03b7d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03b82	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03b87	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  03b8c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03b91	c7 05 08 00 00
	00 36 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 310 ; 00000136H
  03b9b	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  03ba5	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  03baf	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03bb9	c6 05 18 00 00
	00 b8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 184 ; 000000b8H
  03bc0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03bc5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03bc8	50		 push	 eax
  03bc9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03bcc	51		 push	 ecx
  03bcd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN214@draw_havoc:

; 1149 : 			draw_lamp (havoc_lamps.threat_warning_close_range_12						, X_ORG +  42, Y_ORG +  25, 311, 206,   3,   5, 181);	// (29% alpha)

  03bd2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03bd7	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  03bda	83 e0 01	 and	 eax, 1
  03bdd	74 5f		 je	 SHORT $LN215@draw_havoc
  03bdf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03be4	05 ef 01 00 00	 add	 eax, 495		; 000001efH
  03be9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03bee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03bf3	05 cf 00 00 00	 add	 eax, 207		; 000000cfH
  03bf8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03bfd	c7 05 08 00 00
	00 37 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 311 ; 00000137H
  03c07	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  03c11	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  03c1b	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  03c25	c6 05 18 00 00
	00 b5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 181 ; 000000b5H
  03c2c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03c31	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03c34	50		 push	 eax
  03c35	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03c38	51		 push	 ecx
  03c39	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN215@draw_havoc:

; 1150 : 			draw_lamp (havoc_lamps.threat_warning_close_range_13						, X_ORG +  40, Y_ORG +  30, 309, 211,   5,   6, 178);	// (30% alpha)

  03c3e	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  03c43	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  03c46	83 e0 01	 and	 eax, 1
  03c49	74 5f		 je	 SHORT $LN216@draw_havoc
  03c4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03c50	05 ed 01 00 00	 add	 eax, 493		; 000001edH
  03c55	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03c5a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03c5f	05 d4 00 00 00	 add	 eax, 212		; 000000d4H
  03c64	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03c69	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  03c73	c7 05 0c 00 00
	00 d3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 211 ; 000000d3H
  03c7d	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  03c87	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  03c91	c6 05 18 00 00
	00 b2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 178 ; 000000b2H
  03c98	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03c9d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03ca0	50		 push	 eax
  03ca1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03ca4	51		 push	 ecx
  03ca5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN216@draw_havoc:

; 1151 : 			draw_lamp (havoc_lamps.threat_warning_close_range_14						, X_ORG +  37, Y_ORG +  36, 306, 217,   5,   4, 176);	// (31% alpha)

  03caa	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03caf	83 e0 01	 and	 eax, 1
  03cb2	74 5f		 je	 SHORT $LN217@draw_havoc
  03cb4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03cb9	05 ea 01 00 00	 add	 eax, 490		; 000001eaH
  03cbe	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03cc3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03cc8	05 da 00 00 00	 add	 eax, 218		; 000000daH
  03ccd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03cd2	c7 05 08 00 00
	00 32 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 306 ; 00000132H
  03cdc	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  03ce6	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  03cf0	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03cfa	c6 05 18 00 00
	00 b0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 176 ; 000000b0H
  03d01	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03d06	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03d09	50		 push	 eax
  03d0a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03d0d	51		 push	 ecx
  03d0e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN217@draw_havoc:

; 1152 : 			draw_lamp (havoc_lamps.threat_warning_close_range_15						, X_ORG +  31, Y_ORG +  39, 300, 220,   6,   4, 173);	// (32% alpha)

  03d13	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03d18	d1 e8		 shr	 eax, 1
  03d1a	83 e0 01	 and	 eax, 1
  03d1d	74 5f		 je	 SHORT $LN218@draw_havoc
  03d1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03d24	05 e4 01 00 00	 add	 eax, 484		; 000001e4H
  03d29	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03d2e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03d33	05 dd 00 00 00	 add	 eax, 221		; 000000ddH
  03d38	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03d3d	c7 05 08 00 00
	00 2c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 300 ; 0000012cH
  03d47	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  03d51	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  03d5b	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03d65	c6 05 18 00 00
	00 ad		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 173 ; 000000adH
  03d6c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03d71	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03d74	50		 push	 eax
  03d75	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03d78	51		 push	 ecx
  03d79	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN218@draw_havoc:

; 1153 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90_close_range		, X_ORG +   9, Y_ORG +  22, 278, 203,   4,   4, 171);	// (33% alpha)

  03d7e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03d83	c1 e8 02	 shr	 eax, 2
  03d86	83 e0 01	 and	 eax, 1
  03d89	74 5f		 je	 SHORT $LN219@draw_havoc
  03d8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03d90	05 ce 01 00 00	 add	 eax, 462		; 000001ceH
  03d95	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03d9a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03d9f	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  03da4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03da9	c7 05 08 00 00
	00 16 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 278 ; 00000116H
  03db3	c7 05 0c 00 00
	00 cb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 203 ; 000000cbH
  03dbd	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03dc7	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03dd1	c6 05 18 00 00
	00 ab		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 171 ; 000000abH
  03dd8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03ddd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03de0	50		 push	 eax
  03de1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03de4	51		 push	 ecx
  03de5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN219@draw_havoc:

; 1154 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67_close_range		, X_ORG +  12, Y_ORG +  15, 281, 196,   4,   4, 168);	// (34% alpha)

  03dea	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03def	c1 e8 03	 shr	 eax, 3
  03df2	83 e0 01	 and	 eax, 1
  03df5	74 5f		 je	 SHORT $LN220@draw_havoc
  03df7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03dfc	05 d1 01 00 00	 add	 eax, 465		; 000001d1H
  03e01	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03e06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03e0b	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  03e10	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03e15	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  03e1f	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  03e29	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03e33	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03e3d	c6 05 18 00 00
	00 a8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 168 ; 000000a8H
  03e44	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03e49	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03e4c	50		 push	 eax
  03e4d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03e50	51		 push	 ecx
  03e51	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN220@draw_havoc:

; 1155 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45_close_range		, X_ORG +  16, Y_ORG +  10, 285, 191,   4,   4, 166);	// (35% alpha)

  03e56	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03e5b	c1 e8 04	 shr	 eax, 4
  03e5e	83 e0 01	 and	 eax, 1
  03e61	74 5f		 je	 SHORT $LN221@draw_havoc
  03e63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03e68	05 d5 01 00 00	 add	 eax, 469		; 000001d5H
  03e6d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03e72	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03e77	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  03e7c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03e81	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  03e8b	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  03e95	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03e9f	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03ea9	c6 05 18 00 00
	00 a6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 166 ; 000000a6H
  03eb0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03eb5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03eb8	50		 push	 eax
  03eb9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03ebc	51		 push	 ecx
  03ebd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN221@draw_havoc:

; 1156 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22_close_range		, X_ORG +  23, Y_ORG +   7, 292, 188,   4,   4, 163);	// (36% alpha)

  03ec2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03ec7	c1 e8 05	 shr	 eax, 5
  03eca	83 e0 01	 and	 eax, 1
  03ecd	74 5f		 je	 SHORT $LN222@draw_havoc
  03ecf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03ed4	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  03ed9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03ede	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03ee3	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  03ee8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03eed	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  03ef7	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  03f01	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03f0b	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03f15	c6 05 18 00 00
	00 a3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 163 ; 000000a3H
  03f1c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03f21	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03f24	50		 push	 eax
  03f25	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03f28	51		 push	 ecx
  03f29	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN222@draw_havoc:

; 1157 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22_close_range		, X_ORG +  30, Y_ORG +   7, 299, 188,   4,   4, 161);	// (37% alpha)

  03f2e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03f33	c1 e8 06	 shr	 eax, 6
  03f36	83 e0 01	 and	 eax, 1
  03f39	74 5f		 je	 SHORT $LN223@draw_havoc
  03f3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03f40	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  03f45	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03f4a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03f4f	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  03f54	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03f59	c7 05 08 00 00
	00 2b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 299 ; 0000012bH
  03f63	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  03f6d	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03f77	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03f81	c6 05 18 00 00
	00 a1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 161 ; 000000a1H
  03f88	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03f8d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03f90	50		 push	 eax
  03f91	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  03f94	51		 push	 ecx
  03f95	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN223@draw_havoc:

; 1158 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45_close_range		, X_ORG +  36, Y_ORG +  10, 305, 191,   4,   4, 158);	// (38% alpha)

  03f9a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  03f9f	c1 e8 07	 shr	 eax, 7
  03fa2	83 e0 01	 and	 eax, 1
  03fa5	74 5f		 je	 SHORT $LN224@draw_havoc
  03fa7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  03fac	05 e9 01 00 00	 add	 eax, 489		; 000001e9H
  03fb1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  03fb6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  03fbb	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  03fc0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  03fc5	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  03fcf	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  03fd9	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  03fe3	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  03fed	c6 05 18 00 00
	00 9e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 158 ; 0000009eH
  03ff4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  03ff9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  03ffc	50		 push	 eax
  03ffd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04000	51		 push	 ecx
  04001	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN224@draw_havoc:

; 1159 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67_close_range		, X_ORG +  41, Y_ORG +  15, 310, 196,   4,   4, 156);	// (39% alpha)

  04006	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0400b	c1 e8 08	 shr	 eax, 8
  0400e	83 e0 01	 and	 eax, 1
  04011	74 5f		 je	 SHORT $LN225@draw_havoc
  04013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04018	05 ee 01 00 00	 add	 eax, 494		; 000001eeH
  0401d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04027	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  0402c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04031	c7 05 08 00 00
	00 36 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 310 ; 00000136H
  0403b	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  04045	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0404f	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  04059	c6 05 18 00 00
	00 9c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 156 ; 0000009cH
  04060	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04065	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04068	50		 push	 eax
  04069	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0406c	51		 push	 ecx
  0406d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN225@draw_havoc:

; 1160 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90_close_range		, X_ORG +  44, Y_ORG +  22, 313, 203,   4,   4, 153);	// (40% alpha)

  04072	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04077	c1 e8 09	 shr	 eax, 9
  0407a	83 e0 01	 and	 eax, 1
  0407d	74 5f		 je	 SHORT $LN226@draw_havoc
  0407f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04084	05 f1 01 00 00	 add	 eax, 497		; 000001f1H
  04089	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0408e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04093	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  04098	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0409d	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  040a7	c7 05 0c 00 00
	00 cb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 203 ; 000000cbH
  040b1	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  040bb	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  040c5	c6 05 18 00 00
	00 99		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 153 ; 00000099H
  040cc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  040d1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  040d4	50		 push	 eax
  040d5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  040d8	51		 push	 ecx
  040d9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN226@draw_havoc:

; 1161 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90						, X_ORG +   3, Y_ORG +  19, 272, 200,   6,   7, 150);	// (41% alpha)

  040de	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  040e3	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  040e6	83 e0 01	 and	 eax, 1
  040e9	74 5f		 je	 SHORT $LN227@draw_havoc
  040eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  040f0	05 c8 01 00 00	 add	 eax, 456		; 000001c8H
  040f5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  040fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  040ff	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  04104	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04109	c7 05 08 00 00
	00 10 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 272 ; 00000110H
  04113	c7 05 0c 00 00
	00 c8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 200 ; 000000c8H
  0411d	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04127	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  04131	c6 05 18 00 00
	00 96		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 150 ; 00000096H
  04138	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0413d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04140	50		 push	 eax
  04141	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04144	51		 push	 ecx
  04145	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN227@draw_havoc:

; 1162 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67						, X_ORG +   6, Y_ORG +  11, 275, 192,   7,   7, 148);	// (42% alpha)

  0414a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0414f	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  04152	83 e0 01	 and	 eax, 1
  04155	74 5f		 je	 SHORT $LN228@draw_havoc
  04157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0415c	05 cb 01 00 00	 add	 eax, 459		; 000001cbH
  04161	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04166	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0416b	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  04170	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04175	c7 05 08 00 00
	00 13 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 275 ; 00000113H
  0417f	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  04189	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  04193	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0419d	c6 05 18 00 00
	00 94		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 148 ; 00000094H
  041a4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  041a9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  041ac	50		 push	 eax
  041ad	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  041b0	51		 push	 ecx
  041b1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN228@draw_havoc:

; 1163 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, X_ORG +  12, Y_ORG +   5, 281, 186,   7,   6, 145);	// (43% alpha)

  041b6	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  041bb	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  041be	83 e0 01	 and	 eax, 1
  041c1	74 5f		 je	 SHORT $LN229@draw_havoc
  041c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  041c8	05 d1 01 00 00	 add	 eax, 465		; 000001d1H
  041cd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  041d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  041d7	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  041dc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  041e1	c7 05 08 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 281 ; 00000119H
  041eb	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  041f5	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  041ff	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04209	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  04210	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04215	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04218	50		 push	 eax
  04219	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0421c	51		 push	 ecx
  0421d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN229@draw_havoc:

; 1164 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, X_ORG +  21, Y_ORG +   2, 290, 183,   6,   6, 143);	// (44% alpha)

  04222	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04227	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  0422a	83 e0 01	 and	 eax, 1
  0422d	74 5f		 je	 SHORT $LN230@draw_havoc
  0422f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04234	05 da 01 00 00	 add	 eax, 474		; 000001daH
  04239	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0423e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04243	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  04248	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0424d	c7 05 08 00 00
	00 22 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 290 ; 00000122H
  04257	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  04261	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0426b	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04275	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  0427c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04281	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04284	50		 push	 eax
  04285	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04288	51		 push	 ecx
  04289	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN230@draw_havoc:

; 1165 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22						, X_ORG +  30, Y_ORG +   2, 299, 183,   6,   6, 140);	// (45% alpha)

  0428e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04293	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  04296	83 e0 01	 and	 eax, 1
  04299	74 5f		 je	 SHORT $LN231@draw_havoc
  0429b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  042a0	05 e3 01 00 00	 add	 eax, 483		; 000001e3H
  042a5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  042aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  042af	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  042b4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  042b9	c7 05 08 00 00
	00 2b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 299 ; 0000012bH
  042c3	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  042cd	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  042d7	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  042e1	c6 05 18 00 00
	00 8c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 140 ; 0000008cH
  042e8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  042ed	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  042f0	50		 push	 eax
  042f1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  042f4	51		 push	 ecx
  042f5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN231@draw_havoc:

; 1166 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45						, X_ORG +  38, Y_ORG +   5, 307, 186,   6,   6, 138);	// (46% alpha)

  042fa	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  042ff	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  04302	83 e0 01	 and	 eax, 1
  04305	74 5f		 je	 SHORT $LN232@draw_havoc
  04307	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0430c	05 eb 01 00 00	 add	 eax, 491		; 000001ebH
  04311	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04316	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0431b	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  04320	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04325	c7 05 08 00 00
	00 33 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 307 ; 00000133H
  0432f	c7 05 0c 00 00
	00 ba 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 186 ; 000000baH
  04339	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04343	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0434d	c6 05 18 00 00
	00 8a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 138 ; 0000008aH
  04354	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04359	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0435c	50		 push	 eax
  0435d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04360	51		 push	 ecx
  04361	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN232@draw_havoc:

; 1167 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67						, X_ORG +  44, Y_ORG +  11, 313, 192,   7,   7, 135);	// (47% alpha)

  04366	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0436b	c1 e8 10	 shr	 eax, 16			; 00000010H
  0436e	83 e0 01	 and	 eax, 1
  04371	74 5f		 je	 SHORT $LN233@draw_havoc
  04373	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04378	05 f1 01 00 00	 add	 eax, 497		; 000001f1H
  0437d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04387	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  0438c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04391	c7 05 08 00 00
	00 39 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 313 ; 00000139H
  0439b	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  043a5	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  043af	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  043b9	c6 05 18 00 00
	00 87		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 135 ; 00000087H
  043c0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  043c5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  043c8	50		 push	 eax
  043c9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  043cc	51		 push	 ecx
  043cd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN233@draw_havoc:

; 1168 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90						, X_ORG +  48, Y_ORG +  20, 317, 201,   6,   6, 133);	// (48% alpha)

  043d2	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  043d7	c1 e8 11	 shr	 eax, 17			; 00000011H
  043da	83 e0 01	 and	 eax, 1
  043dd	74 5f		 je	 SHORT $LN234@draw_havoc
  043df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  043e4	05 f5 01 00 00	 add	 eax, 501		; 000001f5H
  043e9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  043ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  043f3	05 ca 00 00 00	 add	 eax, 202		; 000000caH
  043f8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  043fd	c7 05 08 00 00
	00 3d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 317 ; 0000013dH
  04407	c7 05 0c 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 201 ; 000000c9H
  04411	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0441b	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04425	c6 05 18 00 00
	00 85		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 133 ; 00000085H
  0442c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04431	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04434	50		 push	 eax
  04435	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04438	51		 push	 ecx
  04439	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN234@draw_havoc:

; 1169 : 			draw_lamp (havoc_lamps.threat_warning_missile_below						, X_ORG +  23, Y_ORG +  25, 292, 206,  11,   5, 130);	// (49% alpha)

  0443e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04443	c1 e8 12	 shr	 eax, 18			; 00000012H
  04446	83 e0 01	 and	 eax, 1
  04449	74 5f		 je	 SHORT $LN235@draw_havoc
  0444b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04450	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  04455	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0445a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0445f	05 cf 00 00 00	 add	 eax, 207		; 000000cfH
  04464	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04469	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  04473	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  0447d	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  04487	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04491	c6 05 18 00 00
	00 82		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 130 ; 00000082H
  04498	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0449d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  044a0	50		 push	 eax
  044a1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  044a4	51		 push	 ecx
  044a5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN235@draw_havoc:

; 1170 : 			draw_lamp (havoc_lamps.threat_warning_missile_above						, X_ORG +  23, Y_ORG +  21, 292, 202,  11,   4, 127);	// (50% alpha)

  044aa	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  044af	c1 e8 13	 shr	 eax, 19			; 00000013H
  044b2	83 e0 01	 and	 eax, 1
  044b5	74 5f		 je	 SHORT $LN236@draw_havoc
  044b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  044bc	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  044c1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  044c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  044cb	05 cb 00 00 00	 add	 eax, 203		; 000000cbH
  044d0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  044d5	c7 05 08 00 00
	00 24 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 292 ; 00000124H
  044df	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  044e9	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  044f3	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  044fd	c6 05 18 00 00
	00 7f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 127 ; 0000007fH
  04504	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04509	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0450c	50		 push	 eax
  0450d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04510	51		 push	 ecx
  04511	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN236@draw_havoc:

; 1171 : 			draw_lamp (havoc_lamps.threat_warning_missile_lh_lock		 				, X_ORG +  17, Y_ORG +  16, 286, 197,  11,  23, 125);	// (51% alpha)

  04516	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0451b	c1 e8 14	 shr	 eax, 20			; 00000014H
  0451e	83 e0 01	 and	 eax, 1
  04521	74 5f		 je	 SHORT $LN237@draw_havoc
  04523	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04528	05 d6 01 00 00	 add	 eax, 470		; 000001d6H
  0452d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04537	05 c6 00 00 00	 add	 eax, 198		; 000000c6H
  0453c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04541	c7 05 08 00 00
	00 1e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 286 ; 0000011eH
  0454b	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  04555	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  0455f	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  04569	c6 05 18 00 00
	00 7d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 125 ; 0000007dH
  04570	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04575	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04578	50		 push	 eax
  04579	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0457c	51		 push	 ecx
  0457d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN237@draw_havoc:

; 1172 : 			draw_lamp (havoc_lamps.threat_warning_missile_rh_lock						, X_ORG +  29, Y_ORG +  16, 298, 197,  11,  23, 122);	// (52% alpha)

  04582	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04587	c1 e8 15	 shr	 eax, 21			; 00000015H
  0458a	83 e0 01	 and	 eax, 1
  0458d	74 5f		 je	 SHORT $LN238@draw_havoc
  0458f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04594	05 e2 01 00 00	 add	 eax, 482		; 000001e2H
  04599	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0459e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  045a3	05 c6 00 00 00	 add	 eax, 198		; 000000c6H
  045a8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  045ad	c7 05 08 00 00
	00 2a 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 298 ; 0000012aH
  045b7	c7 05 0c 00 00
	00 c5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 197 ; 000000c5H
  045c1	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  045cb	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  045d5	c6 05 18 00 00
	00 7a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 122 ; 0000007aH
  045dc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  045e1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  045e4	50		 push	 eax
  045e5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  045e8	51		 push	 ecx
  045e9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN238@draw_havoc:

; 1173 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear_close_range		, X_ORG +  16, Y_ORG +  41, 285, 222,   4,   4, 120);	// (53% alpha)

  045ee	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  045f3	c1 e8 16	 shr	 eax, 22			; 00000016H
  045f6	83 e0 01	 and	 eax, 1
  045f9	74 5f		 je	 SHORT $LN239@draw_havoc
  045fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04600	05 d5 01 00 00	 add	 eax, 469		; 000001d5H
  04605	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0460a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0460f	05 df 00 00 00	 add	 eax, 223		; 000000dfH
  04614	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04619	c7 05 08 00 00
	00 1d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 285 ; 0000011dH
  04623	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  0462d	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  04637	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  04641	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  04648	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0464d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04650	50		 push	 eax
  04651	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04654	51		 push	 ecx
  04655	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN239@draw_havoc:

; 1174 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear_close_range		, X_ORG +  36, Y_ORG +  41, 305, 222,   5,   4, 117);	// (54% alpha)

  0465a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0465f	c1 e8 17	 shr	 eax, 23			; 00000017H
  04662	83 e0 01	 and	 eax, 1
  04665	74 5f		 je	 SHORT $LN240@draw_havoc
  04667	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0466c	05 e9 01 00 00	 add	 eax, 489		; 000001e9H
  04671	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04676	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0467b	05 df 00 00 00	 add	 eax, 223		; 000000dfH
  04680	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04685	c7 05 08 00 00
	00 31 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 305 ; 00000131H
  0468f	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  04699	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  046a3	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  046ad	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  046b4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  046b9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  046bc	50		 push	 eax
  046bd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  046c0	51		 push	 ecx
  046c1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN240@draw_havoc:

; 1175 : 
; 1176 : 			#undef X_ORG
; 1177 : 			#undef Y_ORG
; 1178 : 
; 1179 : 			break;

  046c6	e9 e5 13 00 00	 jmp	 $LN2@draw_havoc
$LN241@draw_havoc:

; 1180 : 		}
; 1181 : 		////////////////////////////////////////
; 1182 : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 1183 : 		////////////////////////////////////////
; 1184 : 		{
; 1185 : 			#define X_ORG (168)
; 1186 : 			#define Y_ORG (179)
; 1187 : 
; 1188 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_1							, X_ORG +   9, Y_ORG +  52, 221, 233,   8,   6, 229);	// (10% alpha)

  046cb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  046d0	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  046d3	83 e0 01	 and	 eax, 1
  046d6	74 5f		 je	 SHORT $LN242@draw_havoc
  046d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  046dd	05 b1 00 00 00	 add	 eax, 177		; 000000b1H
  046e2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  046e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  046ec	05 e7 00 00 00	 add	 eax, 231		; 000000e7H
  046f1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  046f6	c7 05 08 00 00
	00 dd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 221 ; 000000ddH
  04700	c7 05 0c 00 00
	00 e9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 233 ; 000000e9H
  0470a	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  04714	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0471e	c6 05 18 00 00
	00 e5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 229 ; 000000e5H
  04725	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0472a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0472d	50		 push	 eax
  0472e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04731	51		 push	 ecx
  04732	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN242@draw_havoc:

; 1189 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_2							, X_ORG +  17, Y_ORG +  51, 229, 232,   8,   6, 227);	// (11% alpha)

  04737	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0473c	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  0473f	83 e0 01	 and	 eax, 1
  04742	74 5f		 je	 SHORT $LN243@draw_havoc
  04744	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04749	05 b9 00 00 00	 add	 eax, 185		; 000000b9H
  0474e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04753	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04758	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  0475d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04762	c7 05 08 00 00
	00 e5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 229 ; 000000e5H
  0476c	c7 05 0c 00 00
	00 e8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 232 ; 000000e8H
  04776	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  04780	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0478a	c6 05 18 00 00
	00 e3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 227 ; 000000e3H
  04791	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04796	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04799	50		 push	 eax
  0479a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0479d	51		 push	 ecx
  0479e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN243@draw_havoc:

; 1190 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_3							, X_ORG +  25, Y_ORG +  49, 237, 230,   7,   7, 224);	// (12% alpha)

  047a3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  047a8	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  047ab	83 e0 01	 and	 eax, 1
  047ae	74 5f		 je	 SHORT $LN244@draw_havoc
  047b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  047b5	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  047ba	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  047bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  047c4	05 e4 00 00 00	 add	 eax, 228		; 000000e4H
  047c9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  047ce	c7 05 08 00 00
	00 ed 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 237 ; 000000edH
  047d8	c7 05 0c 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 230 ; 000000e6H
  047e2	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  047ec	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  047f6	c6 05 18 00 00
	00 e0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 224 ; 000000e0H
  047fd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04802	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04805	50		 push	 eax
  04806	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04809	51		 push	 ecx
  0480a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN244@draw_havoc:

; 1191 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_4							, X_ORG +  32, Y_ORG +  48, 244, 229,   8,   6, 222);	// (13% alpha)

  0480f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04814	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  04817	83 e0 01	 and	 eax, 1
  0481a	74 5f		 je	 SHORT $LN245@draw_havoc
  0481c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04821	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  04826	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0482b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04830	05 e3 00 00 00	 add	 eax, 227		; 000000e3H
  04835	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0483a	c7 05 08 00 00
	00 f4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 244 ; 000000f4H
  04844	c7 05 0c 00 00
	00 e5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 229 ; 000000e5H
  0484e	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  04858	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04862	c6 05 18 00 00
	00 de		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 222 ; 000000deH
  04869	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0486e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04871	50		 push	 eax
  04872	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04875	51		 push	 ecx
  04876	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN245@draw_havoc:

; 1192 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_5							, X_ORG +  40, Y_ORG +  47, 252, 228,   6,   6, 219);	// (14% alpha)

  0487b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04880	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  04883	83 e0 01	 and	 eax, 1
  04886	74 5f		 je	 SHORT $LN246@draw_havoc
  04888	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0488d	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  04892	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04897	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0489c	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  048a1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  048a6	c7 05 08 00 00
	00 fc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 252 ; 000000fcH
  048b0	c7 05 0c 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 228 ; 000000e4H
  048ba	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  048c4	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  048ce	c6 05 18 00 00
	00 db		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 219 ; 000000dbH
  048d5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  048da	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  048dd	50		 push	 eax
  048de	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  048e1	51		 push	 ecx
  048e2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN246@draw_havoc:

; 1193 : 			draw_lamp (havoc_lamps.threat_warning_radar_type_6							, X_ORG +  46, Y_ORG +  46, 258, 227,   8,   6, 217);	// (15% alpha)

  048e7	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  048ec	c1 e8 10	 shr	 eax, 16			; 00000010H
  048ef	83 e0 01	 and	 eax, 1
  048f2	74 5f		 je	 SHORT $LN247@draw_havoc
  048f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  048f9	05 d6 00 00 00	 add	 eax, 214		; 000000d6H
  048fe	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04903	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04908	05 e1 00 00 00	 add	 eax, 225		; 000000e1H
  0490d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04912	c7 05 08 00 00
	00 02 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 258 ; 00000102H
  0491c	c7 05 0c 00 00
	00 e3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 227 ; 000000e3H
  04926	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  04930	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0493a	c6 05 18 00 00
	00 d9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 217 ; 000000d9H
  04941	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04946	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04949	50		 push	 eax
  0494a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0494d	51		 push	 ecx
  0494e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN247@draw_havoc:

; 1194 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear						, X_ORG +  16, Y_ORG +  45, 228, 226,   6,   6, 214);	// (16% alpha)

  04953	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04958	c1 e8 11	 shr	 eax, 17			; 00000011H
  0495b	83 e0 01	 and	 eax, 1
  0495e	74 5f		 je	 SHORT $LN248@draw_havoc
  04960	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04965	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0496a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0496f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04974	05 e0 00 00 00	 add	 eax, 224		; 000000e0H
  04979	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0497e	c7 05 08 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 228 ; 000000e4H
  04988	c7 05 0c 00 00
	00 e2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 226 ; 000000e2H
  04992	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0499c	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  049a6	c6 05 18 00 00
	00 d6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 214 ; 000000d6H
  049ad	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  049b2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  049b5	50		 push	 eax
  049b6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  049b9	51		 push	 ecx
  049ba	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN248@draw_havoc:

; 1195 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear						, X_ORG +  40, Y_ORG +  41, 252, 222,   6,   6, 212);	// (17% alpha)

  049bf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  049c4	c1 e8 12	 shr	 eax, 18			; 00000012H
  049c7	83 e0 01	 and	 eax, 1
  049ca	74 5f		 je	 SHORT $LN249@draw_havoc
  049cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  049d1	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  049d6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  049db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  049e0	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  049e5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  049ea	c7 05 08 00 00
	00 fc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 252 ; 000000fcH
  049f4	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  049fe	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04a08	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04a12	c6 05 18 00 00
	00 d4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 212 ; 000000d4H
  04a19	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04a1e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04a21	50		 push	 eax
  04a22	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04a25	51		 push	 ecx
  04a26	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN249@draw_havoc:

; 1196 : 			draw_lamp (havoc_lamps.threat_warning_close_range_1						, X_ORG +  22, Y_ORG +  41, 234, 222,   5,   2, 209);	// (18% alpha)

  04a2b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04a30	c1 e8 13	 shr	 eax, 19			; 00000013H
  04a33	83 e0 01	 and	 eax, 1
  04a36	74 5f		 je	 SHORT $LN250@draw_havoc
  04a38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04a3d	05 be 00 00 00	 add	 eax, 190		; 000000beH
  04a42	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04a47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04a4c	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  04a51	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04a56	c7 05 08 00 00
	00 ea 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 234 ; 000000eaH
  04a60	c7 05 0c 00 00
	00 de 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 222 ; 000000deH
  04a6a	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  04a74	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 2
  04a7e	c6 05 18 00 00
	00 d1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 209 ; 000000d1H
  04a85	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04a8a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04a8d	50		 push	 eax
  04a8e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04a91	51		 push	 ecx
  04a92	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN250@draw_havoc:

; 1197 : 			draw_lamp (havoc_lamps.threat_warning_close_range_2						, X_ORG +  16, Y_ORG +  37, 228, 218,   6,   5, 207);	// (19% alpha)

  04a97	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04a9c	c1 e8 14	 shr	 eax, 20			; 00000014H
  04a9f	83 e0 01	 and	 eax, 1
  04aa2	74 5f		 je	 SHORT $LN251@draw_havoc
  04aa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04aa9	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  04aae	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04ab3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04ab8	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  04abd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04ac2	c7 05 08 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 228 ; 000000e4H
  04acc	c7 05 0c 00 00
	00 da 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 218 ; 000000daH
  04ad6	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04ae0	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04aea	c6 05 18 00 00
	00 cf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 207 ; 000000cfH
  04af1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04af6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04af9	50		 push	 eax
  04afa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04afd	51		 push	 ecx
  04afe	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN251@draw_havoc:

; 1198 : 			draw_lamp (havoc_lamps.threat_warning_close_range_3						, X_ORG +  12, Y_ORG +  32, 224, 213,   5,   6, 204);	// (20% alpha)

  04b03	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04b08	c1 e8 15	 shr	 eax, 21			; 00000015H
  04b0b	83 e0 01	 and	 eax, 1
  04b0e	74 5f		 je	 SHORT $LN252@draw_havoc
  04b10	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04b15	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  04b1a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04b1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04b24	05 d3 00 00 00	 add	 eax, 211		; 000000d3H
  04b29	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04b2e	c7 05 08 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 224 ; 000000e0H
  04b38	c7 05 0c 00 00
	00 d5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 213 ; 000000d5H
  04b42	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  04b4c	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04b56	c6 05 18 00 00
	00 cc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 204 ; 000000ccH
  04b5d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04b62	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04b65	50		 push	 eax
  04b66	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04b69	51		 push	 ecx
  04b6a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN252@draw_havoc:

; 1199 : 			draw_lamp (havoc_lamps.threat_warning_close_range_4						, X_ORG +  12, Y_ORG +  27, 224, 208,   2,   5, 201);	// (21% alpha)

  04b6f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04b74	c1 e8 16	 shr	 eax, 22			; 00000016H
  04b77	83 e0 01	 and	 eax, 1
  04b7a	74 5f		 je	 SHORT $LN253@draw_havoc
  04b7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04b81	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  04b86	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04b8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04b90	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  04b95	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04b9a	c7 05 08 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 224 ; 000000e0H
  04ba4	c7 05 0c 00 00
	00 d0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 208 ; 000000d0H
  04bae	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 2
  04bb8	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04bc2	c6 05 18 00 00
	00 c9		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 201 ; 000000c9H
  04bc9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04bce	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04bd1	50		 push	 eax
  04bd2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04bd5	51		 push	 ecx
  04bd6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN253@draw_havoc:

; 1200 : 			draw_lamp (havoc_lamps.threat_warning_close_range_5						, X_ORG +  12, Y_ORG +  21, 224, 202,   2,   6, 199);	// (22% alpha)

  04bdb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04be0	c1 e8 17	 shr	 eax, 23			; 00000017H
  04be3	83 e0 01	 and	 eax, 1
  04be6	74 5f		 je	 SHORT $LN254@draw_havoc
  04be8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04bed	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  04bf2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04bf7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04bfc	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  04c01	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04c06	c7 05 08 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 224 ; 000000e0H
  04c10	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  04c1a	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 2
  04c24	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04c2e	c6 05 18 00 00
	00 c7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 199 ; 000000c7H
  04c35	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04c3a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04c3d	50		 push	 eax
  04c3e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04c41	51		 push	 ecx
  04c42	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN254@draw_havoc:

; 1201 : 			draw_lamp (havoc_lamps.threat_warning_close_range_6						, X_ORG +  13, Y_ORG +  15, 225, 196,   6,   6, 196);	// (23% alpha)

  04c47	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04c4c	c1 e8 18	 shr	 eax, 24			; 00000018H
  04c4f	83 e0 01	 and	 eax, 1
  04c52	74 5f		 je	 SHORT $LN255@draw_havoc
  04c54	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04c59	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  04c5e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04c63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04c68	05 c2 00 00 00	 add	 eax, 194		; 000000c2H
  04c6d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04c72	c7 05 08 00 00
	00 e1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 225 ; 000000e1H
  04c7c	c7 05 0c 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 196 ; 000000c4H
  04c86	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04c90	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  04c9a	c6 05 18 00 00
	00 c4		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 196 ; 000000c4H
  04ca1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04ca6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04ca9	50		 push	 eax
  04caa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04cad	51		 push	 ecx
  04cae	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN255@draw_havoc:

; 1202 : 			draw_lamp (havoc_lamps.threat_warning_close_range_7						, X_ORG +  18, Y_ORG +  12, 230, 193,   5,   4, 194);	// (24% alpha)

  04cb3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04cb8	c1 e8 19	 shr	 eax, 25			; 00000019H
  04cbb	83 e0 01	 and	 eax, 1
  04cbe	74 5f		 je	 SHORT $LN256@draw_havoc
  04cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04cc5	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  04cca	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04ccf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04cd4	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  04cd9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04cde	c7 05 08 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 230 ; 000000e6H
  04ce8	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  04cf2	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  04cfc	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  04d06	c6 05 18 00 00
	00 c2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 194 ; 000000c2H
  04d0d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04d12	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04d15	50		 push	 eax
  04d16	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04d19	51		 push	 ecx
  04d1a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN256@draw_havoc:

; 1203 : 			draw_lamp (havoc_lamps.threat_warning_close_range_8						, X_ORG +  23, Y_ORG +  11, 235, 192,   4,   3, 191);	// (25% alpha)

  04d1f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04d24	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  04d27	83 e0 01	 and	 eax, 1
  04d2a	74 5f		 je	 SHORT $LN257@draw_havoc
  04d2c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04d31	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  04d36	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04d3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04d40	05 be 00 00 00	 add	 eax, 190		; 000000beH
  04d45	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04d4a	c7 05 08 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 235 ; 000000ebH
  04d54	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  04d5e	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  04d68	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  04d72	c6 05 18 00 00
	00 bf		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 191 ; 000000bfH
  04d79	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04d7e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04d81	50		 push	 eax
  04d82	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04d85	51		 push	 ecx
  04d86	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN257@draw_havoc:

; 1204 : 			draw_lamp (havoc_lamps.threat_warning_close_range_9						, X_ORG +  27, Y_ORG +  12, 239, 193,   6,   3, 189);	// (26% alpha)

  04d8b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04d90	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  04d93	83 e0 01	 and	 eax, 1
  04d96	74 5f		 je	 SHORT $LN258@draw_havoc
  04d98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04d9d	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  04da2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04da7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04dac	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  04db1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04db6	c7 05 08 00 00
	00 ef 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 239 ; 000000efH
  04dc0	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  04dca	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  04dd4	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  04dde	c6 05 18 00 00
	00 bd		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 189 ; 000000bdH
  04de5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04dea	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04ded	50		 push	 eax
  04dee	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04df1	51		 push	 ecx
  04df2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN258@draw_havoc:

; 1205 : 			draw_lamp (havoc_lamps.threat_warning_close_range_10						, X_ORG +  33, Y_ORG +  13, 245, 194,   5,   5, 186);	// (27% alpha)

  04df7	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04dfc	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  04dff	83 e0 01	 and	 eax, 1
  04e02	74 5f		 je	 SHORT $LN259@draw_havoc
  04e04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04e09	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  04e0e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04e13	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04e18	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  04e1d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04e22	c7 05 08 00 00
	00 f5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 245 ; 000000f5H
  04e2c	c7 05 0c 00 00
	00 c2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 194 ; 000000c2H
  04e36	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  04e40	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04e4a	c6 05 18 00 00
	00 ba		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 186 ; 000000baH
  04e51	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04e56	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04e59	50		 push	 eax
  04e5a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04e5d	51		 push	 ecx
  04e5e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN259@draw_havoc:

; 1206 : 			draw_lamp (havoc_lamps.threat_warning_close_range_11						, X_ORG +  38, Y_ORG +  18, 250, 199,   4,   5, 184);	// (28% alpha)

  04e63	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04e68	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  04e6b	83 e0 01	 and	 eax, 1
  04e6e	74 5f		 je	 SHORT $LN260@draw_havoc
  04e70	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04e75	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  04e7a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04e7f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04e84	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  04e89	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04e8e	c7 05 08 00 00
	00 fa 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 250 ; 000000faH
  04e98	c7 05 0c 00 00
	00 c7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 199 ; 000000c7H
  04ea2	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  04eac	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04eb6	c6 05 18 00 00
	00 b8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 184 ; 000000b8H
  04ebd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04ec2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04ec5	50		 push	 eax
  04ec6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04ec9	51		 push	 ecx
  04eca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN260@draw_havoc:

; 1207 : 			draw_lamp (havoc_lamps.threat_warning_close_range_12						, X_ORG +  41, Y_ORG +  23, 253, 204,   2,   5, 181);	// (29% alpha)

  04ecf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04ed4	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  04ed7	83 e0 01	 and	 eax, 1
  04eda	74 5f		 je	 SHORT $LN261@draw_havoc
  04edc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04ee1	05 d1 00 00 00	 add	 eax, 209		; 000000d1H
  04ee6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04eeb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04ef0	05 ca 00 00 00	 add	 eax, 202		; 000000caH
  04ef5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04efa	c7 05 08 00 00
	00 fd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 253 ; 000000fdH
  04f04	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  04f0e	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 2
  04f18	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04f22	c6 05 18 00 00
	00 b5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 181 ; 000000b5H
  04f29	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04f2e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04f31	50		 push	 eax
  04f32	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04f35	51		 push	 ecx
  04f36	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN261@draw_havoc:

; 1208 : 			draw_lamp (havoc_lamps.threat_warning_close_range_13						, X_ORG +  41, Y_ORG +  29, 253, 210,   2,   5, 178);	// (30% alpha)

  04f3b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  04f40	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  04f43	83 e0 01	 and	 eax, 1
  04f46	74 5f		 je	 SHORT $LN262@draw_havoc
  04f48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04f4d	05 d1 00 00 00	 add	 eax, 209		; 000000d1H
  04f52	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04f57	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04f5c	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  04f61	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04f66	c7 05 08 00 00
	00 fd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 253 ; 000000fdH
  04f70	c7 05 0c 00 00
	00 d2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 210 ; 000000d2H
  04f7a	c7 05 10 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 2
  04f84	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04f8e	c6 05 18 00 00
	00 b2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 178 ; 000000b2H
  04f95	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  04f9a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  04f9d	50		 push	 eax
  04f9e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  04fa1	51		 push	 ecx
  04fa2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN262@draw_havoc:

; 1209 : 			draw_lamp (havoc_lamps.threat_warning_close_range_14						, X_ORG +  37, Y_ORG +  34, 249, 215,   5,   5, 176);	// (31% alpha)

  04fa7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  04fac	83 e0 01	 and	 eax, 1
  04faf	74 5f		 je	 SHORT $LN263@draw_havoc
  04fb1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  04fb6	05 cd 00 00 00	 add	 eax, 205		; 000000cdH
  04fbb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  04fc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  04fc5	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  04fca	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  04fcf	c7 05 08 00 00
	00 f9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 249 ; 000000f9H
  04fd9	c7 05 0c 00 00
	00 d7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 215 ; 000000d7H
  04fe3	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  04fed	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  04ff7	c6 05 18 00 00
	00 b0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 176 ; 000000b0H
  04ffe	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05003	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05006	50		 push	 eax
  05007	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0500a	51		 push	 ecx
  0500b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN263@draw_havoc:

; 1210 : 			draw_lamp (havoc_lamps.threat_warning_close_range_15						, X_ORG +  33, Y_ORG +  39, 245, 220,   5,   3, 173);	// (32% alpha)

  05010	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05015	d1 e8		 shr	 eax, 1
  05017	83 e0 01	 and	 eax, 1
  0501a	74 5f		 je	 SHORT $LN264@draw_havoc
  0501c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05021	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  05026	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0502b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05030	05 da 00 00 00	 add	 eax, 218		; 000000daH
  05035	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0503a	c7 05 08 00 00
	00 f5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 245 ; 000000f5H
  05044	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  0504e	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  05058	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  05062	c6 05 18 00 00
	00 ad		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 173 ; 000000adH
  05069	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0506e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05071	50		 push	 eax
  05072	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05075	51		 push	 ecx
  05076	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN264@draw_havoc:

; 1211 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90_close_range		, X_ORG +   8, Y_ORG +  25, 220, 206,   4,   4, 171);	// (33% alpha)

  0507b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05080	c1 e8 02	 shr	 eax, 2
  05083	83 e0 01	 and	 eax, 1
  05086	74 5f		 je	 SHORT $LN265@draw_havoc
  05088	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0508d	05 b0 00 00 00	 add	 eax, 176		; 000000b0H
  05092	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0509c	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  050a1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  050a6	c7 05 08 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 220 ; 000000dcH
  050b0	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  050ba	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  050c4	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  050ce	c6 05 18 00 00
	00 ab		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 171 ; 000000abH
  050d5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  050da	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  050dd	50		 push	 eax
  050de	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  050e1	51		 push	 ecx
  050e2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN265@draw_havoc:

; 1212 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67_close_range		, X_ORG +   9, Y_ORG +  18, 221, 199,   4,   4, 168);	// (34% alpha)

  050e7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  050ec	c1 e8 03	 shr	 eax, 3
  050ef	83 e0 01	 and	 eax, 1
  050f2	74 5f		 je	 SHORT $LN266@draw_havoc
  050f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  050f9	05 b1 00 00 00	 add	 eax, 177		; 000000b1H
  050fe	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05108	05 c5 00 00 00	 add	 eax, 197		; 000000c5H
  0510d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05112	c7 05 08 00 00
	00 dd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 221 ; 000000ddH
  0511c	c7 05 0c 00 00
	00 c7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 199 ; 000000c7H
  05126	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  05130	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0513a	c6 05 18 00 00
	00 a8		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 168 ; 000000a8H
  05141	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05146	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05149	50		 push	 eax
  0514a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0514d	51		 push	 ecx
  0514e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN266@draw_havoc:

; 1213 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45_close_range		, X_ORG +  13, Y_ORG +  12, 225, 193,   4,   4, 166);	// (35% alpha)

  05153	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05158	c1 e8 04	 shr	 eax, 4
  0515b	83 e0 01	 and	 eax, 1
  0515e	74 5f		 je	 SHORT $LN267@draw_havoc
  05160	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05165	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  0516a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0516f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05174	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  05179	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0517e	c7 05 08 00 00
	00 e1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 225 ; 000000e1H
  05188	c7 05 0c 00 00
	00 c1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 193 ; 000000c1H
  05192	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0519c	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  051a6	c6 05 18 00 00
	00 a6		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 166 ; 000000a6H
  051ad	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  051b2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  051b5	50		 push	 eax
  051b6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  051b9	51		 push	 ecx
  051ba	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN267@draw_havoc:

; 1214 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22_close_range		, X_ORG +  19, Y_ORG +   9, 231, 190,   4,   4, 163);	// (36% alpha)

  051bf	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  051c4	c1 e8 05	 shr	 eax, 5
  051c7	83 e0 01	 and	 eax, 1
  051ca	74 5f		 je	 SHORT $LN268@draw_havoc
  051cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  051d1	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  051d6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  051db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  051e0	05 bc 00 00 00	 add	 eax, 188		; 000000bcH
  051e5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  051ea	c7 05 08 00 00
	00 e7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 231 ; 000000e7H
  051f4	c7 05 0c 00 00
	00 be 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 190 ; 000000beH
  051fe	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  05208	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  05212	c6 05 18 00 00
	00 a3		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 163 ; 000000a3H
  05219	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0521e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05221	50		 push	 eax
  05222	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05225	51		 push	 ecx
  05226	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN268@draw_havoc:

; 1215 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22_close_range		, X_ORG +  26, Y_ORG +   8, 238, 189,   4,   4, 161);	// (37% alpha)

  0522b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05230	c1 e8 06	 shr	 eax, 6
  05233	83 e0 01	 and	 eax, 1
  05236	74 5f		 je	 SHORT $LN269@draw_havoc
  05238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0523d	05 c2 00 00 00	 add	 eax, 194		; 000000c2H
  05242	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05247	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0524c	05 bb 00 00 00	 add	 eax, 187		; 000000bbH
  05251	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05256	c7 05 08 00 00
	00 ee 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 238 ; 000000eeH
  05260	c7 05 0c 00 00
	00 bd 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 189 ; 000000bdH
  0526a	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  05274	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0527e	c6 05 18 00 00
	00 a1		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 161 ; 000000a1H
  05285	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0528a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0528d	50		 push	 eax
  0528e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05291	51		 push	 ecx
  05292	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN269@draw_havoc:

; 1216 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45_close_range		, X_ORG +  33, Y_ORG +  10, 245, 191,   3,   3, 158);	// (38% alpha)

  05297	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0529c	c1 e8 07	 shr	 eax, 7
  0529f	83 e0 01	 and	 eax, 1
  052a2	74 5f		 je	 SHORT $LN270@draw_havoc
  052a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  052a9	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  052ae	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  052b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  052b8	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  052bd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  052c2	c7 05 08 00 00
	00 f5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 245 ; 000000f5H
  052cc	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  052d6	c7 05 10 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 3
  052e0	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  052ea	c6 05 18 00 00
	00 9e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 158 ; 0000009eH
  052f1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  052f6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  052f9	50		 push	 eax
  052fa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  052fd	51		 push	 ecx
  052fe	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN270@draw_havoc:

; 1217 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67_close_range		, X_ORG +  38, Y_ORG +  14, 250, 195,   4,   4, 156);	// (39% alpha)

  05303	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05308	c1 e8 08	 shr	 eax, 8
  0530b	83 e0 01	 and	 eax, 1
  0530e	74 5f		 je	 SHORT $LN271@draw_havoc
  05310	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05315	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  0531a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0531f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05324	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  05329	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0532e	c7 05 08 00 00
	00 fa 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 250 ; 000000faH
  05338	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  05342	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  0534c	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  05356	c6 05 18 00 00
	00 9c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 156 ; 0000009cH
  0535d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05362	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05365	50		 push	 eax
  05366	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05369	51		 push	 ecx
  0536a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN271@draw_havoc:

; 1218 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90_close_range		, X_ORG +  42, Y_ORG +  20, 254, 201,   4,   4, 153);	// (40% alpha)

  0536f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05374	c1 e8 09	 shr	 eax, 9
  05377	83 e0 01	 and	 eax, 1
  0537a	74 5f		 je	 SHORT $LN272@draw_havoc
  0537c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05381	05 d2 00 00 00	 add	 eax, 210		; 000000d2H
  05386	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0538b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05390	05 c7 00 00 00	 add	 eax, 199		; 000000c7H
  05395	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0539a	c7 05 08 00 00
	00 fe 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 254 ; 000000feH
  053a4	c7 05 0c 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 201 ; 000000c9H
  053ae	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  053b8	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  053c2	c6 05 18 00 00
	00 99		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 153 ; 00000099H
  053c9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  053ce	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  053d1	50		 push	 eax
  053d2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  053d5	51		 push	 ecx
  053d6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN272@draw_havoc:

; 1219 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_90						, X_ORG +   2, Y_ORG +  23, 214, 204,   6,   7, 150);	// (41% alpha)

  053db	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  053e0	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  053e3	83 e0 01	 and	 eax, 1
  053e6	74 5f		 je	 SHORT $LN273@draw_havoc
  053e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  053ed	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  053f2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  053f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  053fc	05 ca 00 00 00	 add	 eax, 202		; 000000caH
  05401	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05406	c7 05 08 00 00
	00 d6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 214 ; 000000d6H
  05410	c7 05 0c 00 00
	00 cc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 204 ; 000000ccH
  0541a	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  05424	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0542e	c6 05 18 00 00
	00 96		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 150 ; 00000096H
  05435	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0543a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0543d	50		 push	 eax
  0543e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05441	51		 push	 ecx
  05442	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN273@draw_havoc:

; 1220 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_67						, X_ORG +   3, Y_ORG +  14, 215, 195,   7,   7, 148);	// (42% alpha)

  05447	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0544c	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  0544f	83 e0 01	 and	 eax, 1
  05452	74 5f		 je	 SHORT $LN274@draw_havoc
  05454	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05459	05 ab 00 00 00	 add	 eax, 171		; 000000abH
  0545e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05463	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05468	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  0546d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05472	c7 05 08 00 00
	00 d7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 215 ; 000000d7H
  0547c	c7 05 0c 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 195 ; 000000c3H
  05486	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  05490	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0549a	c6 05 18 00 00
	00 94		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 148 ; 00000094H
  054a1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  054a6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  054a9	50		 push	 eax
  054aa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  054ad	51		 push	 ecx
  054ae	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN274@draw_havoc:

; 1221 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, X_ORG +   8, Y_ORG +   7, 220, 188,   7,   7, 145);	// (43% alpha)

  054b3	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  054b8	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  054bb	83 e0 01	 and	 eax, 1
  054be	74 5f		 je	 SHORT $LN275@draw_havoc
  054c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  054c5	05 b0 00 00 00	 add	 eax, 176		; 000000b0H
  054ca	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  054cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  054d4	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  054d9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  054de	c7 05 08 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 220 ; 000000dcH
  054e8	c7 05 0c 00 00
	00 bc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 188 ; 000000bcH
  054f2	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  054fc	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  05506	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  0550d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05512	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05515	50		 push	 eax
  05516	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05519	51		 push	 ecx
  0551a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN275@draw_havoc:

; 1222 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, X_ORG +  16, Y_ORG +   3, 228, 184,   6,   6, 143);	// (44% alpha)

  0551f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05524	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  05527	83 e0 01	 and	 eax, 1
  0552a	74 5f		 je	 SHORT $LN276@draw_havoc
  0552c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05531	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  05536	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0553b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05540	05 b6 00 00 00	 add	 eax, 182		; 000000b6H
  05545	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0554a	c7 05 08 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 228 ; 000000e4H
  05554	c7 05 0c 00 00
	00 b8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 184 ; 000000b8H
  0555e	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  05568	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  05572	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  05579	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0557e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05581	50		 push	 eax
  05582	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05585	51		 push	 ecx
  05586	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN276@draw_havoc:

; 1223 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_22						, X_ORG +  25, Y_ORG +   2, 237, 183,   6,   6, 140);	// (45% alpha)

  0558b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05590	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  05593	83 e0 01	 and	 eax, 1
  05596	74 5f		 je	 SHORT $LN277@draw_havoc
  05598	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0559d	05 c1 00 00 00	 add	 eax, 193		; 000000c1H
  055a2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  055a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  055ac	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  055b1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  055b6	c7 05 08 00 00
	00 ed 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 237 ; 000000edH
  055c0	c7 05 0c 00 00
	00 b7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 183 ; 000000b7H
  055ca	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  055d4	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  055de	c6 05 18 00 00
	00 8c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 140 ; 0000008cH
  055e5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  055ea	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  055ed	50		 push	 eax
  055ee	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  055f1	51		 push	 ecx
  055f2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN277@draw_havoc:

; 1224 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_45						, X_ORG +  33, Y_ORG +   4, 245, 185,   7,   7, 138);	// (46% alpha)

  055f7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  055fc	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  055ff	83 e0 01	 and	 eax, 1
  05602	74 5f		 je	 SHORT $LN278@draw_havoc
  05604	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05609	05 c9 00 00 00	 add	 eax, 201		; 000000c9H
  0560e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05613	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05618	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  0561d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05622	c7 05 08 00 00
	00 f5 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 245 ; 000000f5H
  0562c	c7 05 0c 00 00
	00 b9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 185 ; 000000b9H
  05636	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  05640	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  0564a	c6 05 18 00 00
	00 8a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 138 ; 0000008aH
  05651	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05656	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05659	50		 push	 eax
  0565a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0565d	51		 push	 ecx
  0565e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN278@draw_havoc:

; 1225 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_67						, X_ORG +  40, Y_ORG +  10, 252, 191,   6,   6, 135);	// (47% alpha)

  05663	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05668	c1 e8 10	 shr	 eax, 16			; 00000010H
  0566b	83 e0 01	 and	 eax, 1
  0566e	74 5f		 je	 SHORT $LN279@draw_havoc
  05670	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05675	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  0567a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0567f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05684	05 bd 00 00 00	 add	 eax, 189		; 000000bdH
  05689	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0568e	c7 05 08 00 00
	00 fc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 252 ; 000000fcH
  05698	c7 05 0c 00 00
	00 bf 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 191 ; 000000bfH
  056a2	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  056ac	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  056b6	c6 05 18 00 00
	00 87		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 135 ; 00000087H
  056bd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  056c2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  056c5	50		 push	 eax
  056c6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  056c9	51		 push	 ecx
  056ca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN279@draw_havoc:

; 1226 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_90						, X_ORG +  45, Y_ORG +  17, 257, 198,   6,   6, 133);	// (48% alpha)

  056cf	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  056d4	c1 e8 11	 shr	 eax, 17			; 00000011H
  056d7	83 e0 01	 and	 eax, 1
  056da	74 5f		 je	 SHORT $LN280@draw_havoc
  056dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  056e1	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  056e6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  056eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  056f0	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  056f5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  056fa	c7 05 08 00 00
	00 01 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 257 ; 00000101H
  05704	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  0570e	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  05718	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  05722	c6 05 18 00 00
	00 85		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 133 ; 00000085H
  05729	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0572e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05731	50		 push	 eax
  05732	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05735	51		 push	 ecx
  05736	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN280@draw_havoc:

; 1227 : 			draw_lamp (havoc_lamps.threat_warning_missile_below						, X_ORG +  23, Y_ORG +  25, 235, 206,   9,   6, 130);	// (49% alpha)

  0573b	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05740	c1 e8 12	 shr	 eax, 18			; 00000012H
  05743	83 e0 01	 and	 eax, 1
  05746	74 5f		 je	 SHORT $LN281@draw_havoc
  05748	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0574d	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  05752	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05757	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0575c	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  05761	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05766	c7 05 08 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 235 ; 000000ebH
  05770	c7 05 0c 00 00
	00 ce 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 206 ; 000000ceH
  0577a	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  05784	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  0578e	c6 05 18 00 00
	00 82		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 130 ; 00000082H
  05795	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0579a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0579d	50		 push	 eax
  0579e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  057a1	51		 push	 ecx
  057a2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN281@draw_havoc:

; 1228 : 			draw_lamp (havoc_lamps.threat_warning_missile_above						, X_ORG +  23, Y_ORG +  21, 235, 202,   9,   6, 127);	// (50% alpha)

  057a7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  057ac	c1 e8 13	 shr	 eax, 19			; 00000013H
  057af	83 e0 01	 and	 eax, 1
  057b2	74 5f		 je	 SHORT $LN282@draw_havoc
  057b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  057b9	05 bf 00 00 00	 add	 eax, 191		; 000000bfH
  057be	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  057c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  057c8	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  057cd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  057d2	c7 05 08 00 00
	00 eb 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 235 ; 000000ebH
  057dc	c7 05 0c 00 00
	00 ca 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 202 ; 000000caH
  057e6	c7 05 10 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 9
  057f0	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  057fa	c6 05 18 00 00
	00 7f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 127 ; 0000007fH
  05801	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05806	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05809	50		 push	 eax
  0580a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0580d	51		 push	 ecx
  0580e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN282@draw_havoc:

; 1229 : 			draw_lamp (havoc_lamps.threat_warning_missile_lh_lock		 				, X_ORG +  16, Y_ORG +  17, 228, 198,  12,  22, 125);	// (51% alpha)

  05813	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05818	c1 e8 14	 shr	 eax, 20			; 00000014H
  0581b	83 e0 01	 and	 eax, 1
  0581e	74 5f		 je	 SHORT $LN283@draw_havoc
  05820	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05825	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0582a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0582f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05834	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  05839	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0583e	c7 05 08 00 00
	00 e4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 228 ; 000000e4H
  05848	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  05852	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  0585c	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  05866	c6 05 18 00 00
	00 7d		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 125 ; 0000007dH
  0586d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05872	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05875	50		 push	 eax
  05876	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05879	51		 push	 ecx
  0587a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN283@draw_havoc:

; 1230 : 			draw_lamp (havoc_lamps.threat_warning_missile_rh_lock						, X_ORG +  27, Y_ORG +  17, 239, 198,  12,  20, 122);	// (52% alpha)

  0587f	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05884	c1 e8 15	 shr	 eax, 21			; 00000015H
  05887	83 e0 01	 and	 eax, 1
  0588a	74 5f		 je	 SHORT $LN284@draw_havoc
  0588c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05891	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  05896	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0589b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  058a0	05 c4 00 00 00	 add	 eax, 196		; 000000c4H
  058a5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  058aa	c7 05 08 00 00
	00 ef 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 239 ; 000000efH
  058b4	c7 05 0c 00 00
	00 c6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 198 ; 000000c6H
  058be	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  058c8	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  058d2	c6 05 18 00 00
	00 7a		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 122 ; 0000007aH
  058d9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  058de	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  058e1	50		 push	 eax
  058e2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  058e5	51		 push	 ecx
  058e6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN284@draw_havoc:

; 1231 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_rear_close_range		, X_ORG +  18, Y_ORG +  42, 230, 223,   5,   4, 120);	// (53% alpha)

  058eb	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  058f0	c1 e8 16	 shr	 eax, 22			; 00000016H
  058f3	83 e0 01	 and	 eax, 1
  058f6	74 5f		 je	 SHORT $LN285@draw_havoc
  058f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  058fd	05 ba 00 00 00	 add	 eax, 186		; 000000baH
  05902	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05907	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0590c	05 dd 00 00 00	 add	 eax, 221		; 000000ddH
  05911	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05916	c7 05 08 00 00
	00 e6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 230 ; 000000e6H
  05920	c7 05 0c 00 00
	00 df 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 223 ; 000000dfH
  0592a	c7 05 10 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 5
  05934	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  0593e	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  05945	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0594a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0594d	50		 push	 eax
  0594e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05951	51		 push	 ecx
  05952	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN285@draw_havoc:

; 1232 : 			draw_lamp (havoc_lamps.threat_warning_bearing_rh_rear_close_range		, X_ORG +  38, Y_ORG +  39, 250, 220,   4,   4, 117);	// (54% alpha)

  05957	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  0595c	c1 e8 17	 shr	 eax, 23			; 00000017H
  0595f	83 e0 01	 and	 eax, 1
  05962	74 5f		 je	 SHORT $LN286@draw_havoc
  05964	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05969	05 ce 00 00 00	 add	 eax, 206		; 000000ceH
  0596e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05973	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05978	05 da 00 00 00	 add	 eax, 218		; 000000daH
  0597d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05982	c7 05 08 00 00
	00 fa 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 250 ; 000000faH
  0598c	c7 05 0c 00 00
	00 dc 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 220 ; 000000dcH
  05996	c7 05 10 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 4
  059a0	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  059aa	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  059b1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  059b6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  059b9	50		 push	 eax
  059ba	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  059bd	51		 push	 ecx
  059be	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN286@draw_havoc:

; 1233 : 
; 1234 : 			#undef X_ORG
; 1235 : 			#undef Y_ORG
; 1236 : 
; 1237 : 			break;

  059c3	e9 e8 00 00 00	 jmp	 $LN2@draw_havoc
$LN287@draw_havoc:

; 1238 : 		}
; 1239 : 		////////////////////////////////////////
; 1240 : 		case COCKPIT_PANEL_SPECIAL_HAVOC_HUD:
; 1241 : 		////////////////////////////////////////
; 1242 : 		{
; 1243 : 			#define X_ORG (605)
; 1244 : 			#define Y_ORG (465)
; 1245 : 
; 1246 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_45						, X_ORG +   3, Y_ORG +  10, 180, 234,  12,   5, 145);	// (43% alpha)

  059c8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  059cd	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  059d0	83 e0 01	 and	 eax, 1
  059d3	74 5f		 je	 SHORT $LN288@draw_havoc
  059d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  059da	05 60 02 00 00	 add	 eax, 608		; 00000260H
  059df	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  059e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  059e9	05 db 01 00 00	 add	 eax, 475		; 000001dbH
  059ee	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  059f3	c7 05 08 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 180 ; 000000b4H
  059fd	c7 05 0c 00 00
	00 ea 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 234 ; 000000eaH
  05a07	c7 05 10 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 12 ; 0000000cH
  05a11	c7 05 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 5
  05a1b	c6 05 18 00 00
	00 91		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 145 ; 00000091H
  05a22	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05a27	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05a2a	50		 push	 eax
  05a2b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05a2e	51		 push	 ecx
  05a2f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN288@draw_havoc:

; 1247 : 			draw_lamp (havoc_lamps.threat_warning_bearing_lh_22						, X_ORG +  18, Y_ORG +   3, 195, 227,  14,  12, 143);	// (44% alpha)

  05a34	a1 08 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+8
  05a39	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  05a3c	83 e0 01	 and	 eax, 1
  05a3f	74 5f		 je	 SHORT $LN289@draw_havoc
  05a41	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  05a46	05 6f 02 00 00	 add	 eax, 623		; 0000026fH
  05a4b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  05a50	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  05a55	05 d4 01 00 00	 add	 eax, 468		; 000001d4H
  05a5a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  05a5f	c7 05 08 00 00
	00 c3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 195 ; 000000c3H
  05a69	c7 05 0c 00 00
	00 e3 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 227 ; 000000e3H
  05a73	c7 05 10 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 14 ; 0000000eH
  05a7d	c7 05 14 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 12 ; 0000000cH
  05a87	c6 05 18 00 00
	00 8f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 143 ; 0000008fH
  05a8e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  05a93	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  05a96	50		 push	 eax
  05a97	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  05a9a	51		 push	 ecx
  05a9b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN289@draw_havoc:

; 1248 : 
; 1249 : 			#undef X_ORG
; 1250 : 			#undef Y_ORG
; 1251 : 
; 1252 : 			break;

  05aa0	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN290@draw_havoc:

; 1253 : 		}
; 1254 : 		////////////////////////////////////////
; 1255 : 		default:
; 1256 : 		////////////////////////////////////////
; 1257 : 		{
; 1258 : 			debug_fatal (lamp_error);

  05aa2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  05aa7	50		 push	 eax
  05aa8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  05aad	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 1259 : 
; 1260 : 			break;
; 1261 : 		}
; 1262 : 	}
; 1263 : }

  05ab0	5f		 pop	 edi
  05ab1	5e		 pop	 esi
  05ab2	5b		 pop	 ebx
  05ab3	8b e5		 mov	 esp, ebp
  05ab5	5d		 pop	 ebp
  05ab6	c2 04 00	 ret	 4
  05ab9	0f 1f 00	 npad	 3
$LN293@draw_havoc:
  05abc	00 00 00 00	 DD	 $LN103@draw_havoc
  05ac0	00 00 00 00	 DD	 $LN149@draw_havoc
  05ac4	00 00 00 00	 DD	 $LN195@draw_havoc
  05ac8	00 00 00 00	 DD	 $LN241@draw_havoc
  05acc	00 00 00 00	 DD	 $LN287@draw_havoc
  05ad0	00 00 00 00	 DD	 $LN290@draw_havoc
$LN292@draw_havoc:
  05ad4	00		 DB	 0
  05ad5	01		 DB	 1
  05ad6	05		 DB	 5
  05ad7	05		 DB	 5
  05ad8	05		 DB	 5
  05ad9	05		 DB	 5
  05ada	05		 DB	 5
  05adb	02		 DB	 2
  05adc	03		 DB	 3
  05add	05		 DB	 5
  05ade	05		 DB	 5
  05adf	05		 DB	 5
  05ae0	05		 DB	 5
  05ae1	05		 DB	 5
  05ae2	04		 DB	 4
?draw_havoc_threat_warning_display@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_havoc_threat_warning_display
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv198 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_havoc_status_panel_lamps, COMDAT

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 398  : 	unsigned char
; 399  : 		*sprite_data,
; 400  : 		*mask_data;
; 401  : 
; 402  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 403  : 
; 404  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 405  : 
; 406  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 25 05 00
	00		 je	 $LN42@draw_havoc

; 407  : 	{
; 408  : 		static float
; 409  : 			timer = 0.0;
; 410  : 
; 411  : 		havoc_lamps.status_1 = 0;

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00043	25 ff ff ff fd	 and	 eax, -33554433		; fdffffffH
  00048	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 412  : 		havoc_lamps.status_2 = 0;

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00052	25 ff ff ff fb	 and	 eax, -67108865		; fbffffffH
  00057	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 413  : 		havoc_lamps.status_3 = 0;

  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00061	25 ff ff ff f7	 and	 eax, -134217729		; f7ffffffH
  00066	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 414  : 		havoc_lamps.status_4 = 0;

  0006b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00070	25 ff ff ff ef	 and	 eax, -268435457		; efffffffH
  00075	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 415  : 		havoc_lamps.status_5 = 0;

  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0007f	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  00084	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 416  : 		havoc_lamps.status_6 = 0;

  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0008e	25 ff ff ff bf	 and	 eax, -1073741825	; bfffffffH
  00093	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 417  : 		havoc_lamps.status_7 = 0;

  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0009d	25 ff ff ff 7f	 and	 eax, 2147483647		; 7fffffffH
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 418  : 		havoc_lamps.status_8 = 0;

  000a7	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000ac	83 e0 fe	 and	 eax, -2			; fffffffeH
  000af	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 419  : 		havoc_lamps.status_9 = 0;

  000b4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000b9	83 e0 fd	 and	 eax, -3			; fffffffdH
  000bc	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 420  : 		havoc_lamps.status_10 = 0;

  000c1	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000c6	83 e0 fb	 and	 eax, -5			; fffffffbH
  000c9	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 421  : 		havoc_lamps.status_11 = 0;

  000ce	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000d3	83 e0 f7	 and	 eax, -9			; fffffff7H
  000d6	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 422  : 		havoc_lamps.status_12 = 0;

  000db	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000e0	83 e0 ef	 and	 eax, -17		; ffffffefH
  000e3	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 423  : 		havoc_lamps.status_13 = 0;

  000e8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000ed	83 e0 df	 and	 eax, -33		; ffffffdfH
  000f0	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 424  : 		havoc_lamps.status_14 = 0;

  000f5	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  000fa	83 e0 bf	 and	 eax, -65		; ffffffbfH
  000fd	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 425  : 		havoc_lamps.status_15 = 0;

  00102	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00107	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  0010c	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 426  : 		havoc_lamps.status_16 = 0;

  00111	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00116	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  0011b	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 427  : 		havoc_lamps.status_17 = 0;

  00120	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00125	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  0012a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 428  : 		havoc_lamps.status_18 = 0;

  0012f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00134	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  00139	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 429  : 
; 430  : 		timer += get_delta_time ();

  0013e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00146	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0014e	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 431  : 
; 432  : 		if (timer < (ONE_SECOND * 1.0))

  00156	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0015e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00166	66 0f 2f c8	 comisd	 xmm1, xmm0
  0016a	76 14		 jbe	 SHORT $LN5@draw_havoc

; 433  : 		{
; 434  : 			havoc_lamps.status_1 = 1;

  0016c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00171	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  00176	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0017b	e9 e3 03 00 00	 jmp	 $LN42@draw_havoc
$LN5@draw_havoc:

; 435  : 		}
; 436  : 		else if (timer < (ONE_SECOND * 2.0))

  00180	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00188	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00190	66 0f 2f c8	 comisd	 xmm1, xmm0
  00194	76 14		 jbe	 SHORT $LN7@draw_havoc

; 437  : 		{
; 438  : 			havoc_lamps.status_2 = 1;

  00196	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0019b	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  001a0	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001a5	e9 b9 03 00 00	 jmp	 $LN42@draw_havoc
$LN7@draw_havoc:

; 439  : 		}
; 440  : 		else if (timer < (ONE_SECOND * 3.0))

  001aa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001b2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  001ba	66 0f 2f c8	 comisd	 xmm1, xmm0
  001be	76 14		 jbe	 SHORT $LN9@draw_havoc

; 441  : 		{
; 442  : 			havoc_lamps.status_3 = 1;

  001c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001c5	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  001ca	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001cf	e9 8f 03 00 00	 jmp	 $LN42@draw_havoc
$LN9@draw_havoc:

; 443  : 		}
; 444  : 		else if (timer < (ONE_SECOND * 4.0))

  001d4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001dc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  001e4	66 0f 2f c8	 comisd	 xmm1, xmm0
  001e8	76 14		 jbe	 SHORT $LN11@draw_havoc

; 445  : 		{
; 446  : 			havoc_lamps.status_4 = 1;

  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001ef	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  001f4	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001f9	e9 65 03 00 00	 jmp	 $LN42@draw_havoc
$LN11@draw_havoc:

; 447  : 		}
; 448  : 		else if (timer < (ONE_SECOND * 5.0))

  001fe	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00206	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  0020e	66 0f 2f c8	 comisd	 xmm1, xmm0
  00212	76 14		 jbe	 SHORT $LN13@draw_havoc

; 449  : 		{
; 450  : 			havoc_lamps.status_5 = 1;

  00214	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00219	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  0021e	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00223	e9 3b 03 00 00	 jmp	 $LN42@draw_havoc
$LN13@draw_havoc:

; 451  : 		}
; 452  : 		else if (timer < (ONE_SECOND * 6.0))

  00228	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00230	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00238	66 0f 2f c8	 comisd	 xmm1, xmm0
  0023c	76 14		 jbe	 SHORT $LN15@draw_havoc

; 453  : 		{
; 454  : 			havoc_lamps.status_6 = 1;

  0023e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00243	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  00248	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0024d	e9 11 03 00 00	 jmp	 $LN42@draw_havoc
$LN15@draw_havoc:

; 455  : 		}
; 456  : 		else if (timer < (ONE_SECOND * 7.0))

  00252	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0025a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  00262	66 0f 2f c8	 comisd	 xmm1, xmm0
  00266	76 14		 jbe	 SHORT $LN17@draw_havoc

; 457  : 		{
; 458  : 			havoc_lamps.status_7 = 1;

  00268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0026d	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  00272	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00277	e9 e7 02 00 00	 jmp	 $LN42@draw_havoc
$LN17@draw_havoc:

; 459  : 		}
; 460  : 		else if (timer < (ONE_SECOND * 8.0))

  0027c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00284	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  0028c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00290	76 12		 jbe	 SHORT $LN19@draw_havoc

; 461  : 		{
; 462  : 			havoc_lamps.status_8 = 1;

  00292	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00297	83 c8 01	 or	 eax, 1
  0029a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0029f	e9 bf 02 00 00	 jmp	 $LN42@draw_havoc
$LN19@draw_havoc:

; 463  : 		}
; 464  : 		else if (timer < (ONE_SECOND * 9.0))

  002a4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  002ac	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  002b4	66 0f 2f c8	 comisd	 xmm1, xmm0
  002b8	76 12		 jbe	 SHORT $LN21@draw_havoc

; 465  : 		{
; 466  : 			havoc_lamps.status_9 = 1;

  002ba	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002bf	83 c8 02	 or	 eax, 2
  002c2	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  002c7	e9 97 02 00 00	 jmp	 $LN42@draw_havoc
$LN21@draw_havoc:

; 467  : 		}
; 468  : 		else if (timer < (ONE_SECOND * 10.0))

  002cc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  002d4	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  002dc	66 0f 2f c8	 comisd	 xmm1, xmm0
  002e0	76 12		 jbe	 SHORT $LN23@draw_havoc

; 469  : 		{
; 470  : 			havoc_lamps.status_10 = 1;

  002e2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  002e7	83 c8 04	 or	 eax, 4
  002ea	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  002ef	e9 6f 02 00 00	 jmp	 $LN42@draw_havoc
$LN23@draw_havoc:

; 471  : 		}
; 472  : 		else if (timer < (ONE_SECOND * 11.0))

  002f4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  002fc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  00304	66 0f 2f c8	 comisd	 xmm1, xmm0
  00308	76 12		 jbe	 SHORT $LN25@draw_havoc

; 473  : 		{
; 474  : 			havoc_lamps.status_11 = 1;

  0030a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0030f	83 c8 08	 or	 eax, 8
  00312	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00317	e9 47 02 00 00	 jmp	 $LN42@draw_havoc
$LN25@draw_havoc:

; 475  : 		}
; 476  : 		else if (timer < (ONE_SECOND * 12.0))

  0031c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00324	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  0032c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00330	76 12		 jbe	 SHORT $LN27@draw_havoc

; 477  : 		{
; 478  : 			havoc_lamps.status_12 = 1;

  00332	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00337	83 c8 10	 or	 eax, 16			; 00000010H
  0033a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0033f	e9 1f 02 00 00	 jmp	 $LN42@draw_havoc
$LN27@draw_havoc:

; 479  : 		}
; 480  : 		else if (timer < (ONE_SECOND * 13.0))

  00344	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0034c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  00354	66 0f 2f c8	 comisd	 xmm1, xmm0
  00358	76 12		 jbe	 SHORT $LN29@draw_havoc

; 481  : 		{
; 482  : 			havoc_lamps.status_13 = 1;

  0035a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0035f	83 c8 20	 or	 eax, 32			; 00000020H
  00362	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00367	e9 f7 01 00 00	 jmp	 $LN42@draw_havoc
$LN29@draw_havoc:

; 483  : 		}
; 484  : 		else if (timer < (ONE_SECOND * 14.0))

  0036c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00374	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  0037c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00380	76 12		 jbe	 SHORT $LN31@draw_havoc

; 485  : 		{
; 486  : 			havoc_lamps.status_14 = 1;

  00382	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00387	83 c8 40	 or	 eax, 64			; 00000040H
  0038a	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0038f	e9 cf 01 00 00	 jmp	 $LN42@draw_havoc
$LN31@draw_havoc:

; 487  : 		}
; 488  : 		else if (timer < (ONE_SECOND * 15.0))

  00394	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0039c	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  003a4	66 0f 2f c8	 comisd	 xmm1, xmm0
  003a8	76 14		 jbe	 SHORT $LN33@draw_havoc

; 489  : 		{
; 490  : 			havoc_lamps.status_15 = 1;

  003aa	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  003af	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  003b4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  003b9	e9 a5 01 00 00	 jmp	 $LN42@draw_havoc
$LN33@draw_havoc:

; 491  : 		}
; 492  : 		else if (timer < (ONE_SECOND * 16.0))

  003be	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  003c6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  003ce	66 0f 2f c8	 comisd	 xmm1, xmm0
  003d2	76 14		 jbe	 SHORT $LN35@draw_havoc

; 493  : 		{
; 494  : 			havoc_lamps.status_16 = 1;

  003d4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  003d9	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  003de	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  003e3	e9 7b 01 00 00	 jmp	 $LN42@draw_havoc
$LN35@draw_havoc:

; 495  : 		}
; 496  : 		else if (timer < (ONE_SECOND * 17.0))

  003e8	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  003f0	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4031000000000000
  003f8	66 0f 2f c8	 comisd	 xmm1, xmm0
  003fc	76 14		 jbe	 SHORT $LN37@draw_havoc

; 497  : 		{
; 498  : 			havoc_lamps.status_17 = 1;

  003fe	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00403	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  00408	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  0040d	e9 51 01 00 00	 jmp	 $LN42@draw_havoc
$LN37@draw_havoc:

; 499  : 		}
; 500  : 		else if (timer < (ONE_SECOND * 18.0))

  00412	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0041a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4032000000000000
  00422	66 0f 2f c8	 comisd	 xmm1, xmm0
  00426	76 14		 jbe	 SHORT $LN39@draw_havoc

; 501  : 		{
; 502  : 			havoc_lamps.status_18 = 1;

  00428	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0042d	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00432	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax
  00437	e9 27 01 00 00	 jmp	 $LN42@draw_havoc
$LN39@draw_havoc:

; 503  : 		}
; 504  : 		else if (timer < (ONE_SECOND * 19.0))

  0043c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00444	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4033000000000000
  0044c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00450	0f 86 02 01 00
	00		 jbe	 $LN41@draw_havoc

; 505  : 		{
; 506  : 			havoc_lamps.status_1 = 1;

  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0045b	0d 00 00 00 02	 or	 eax, 33554432		; 02000000H
  00460	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 507  : 			havoc_lamps.status_2 = 1;

  00465	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0046a	0d 00 00 00 04	 or	 eax, 67108864		; 04000000H
  0046f	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 508  : 			havoc_lamps.status_3 = 1;

  00474	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00479	0d 00 00 00 08	 or	 eax, 134217728		; 08000000H
  0047e	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 509  : 			havoc_lamps.status_4 = 1;

  00483	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00488	0d 00 00 00 10	 or	 eax, 268435456		; 10000000H
  0048d	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 510  : 			havoc_lamps.status_5 = 1;

  00492	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00497	0d 00 00 00 20	 or	 eax, 536870912		; 20000000H
  0049c	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 511  : 			havoc_lamps.status_6 = 1;

  004a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  004a6	0d 00 00 00 40	 or	 eax, 1073741824		; 40000000H
  004ab	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 512  : 			havoc_lamps.status_7 = 1;

  004b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  004b5	0d 00 00 00 80	 or	 eax, -2147483648	; 80000000H
  004ba	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 513  : 			havoc_lamps.status_8 = 1;

  004bf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  004c4	83 c8 01	 or	 eax, 1
  004c7	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 514  : 			havoc_lamps.status_9 = 1;

  004cc	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  004d1	83 c8 02	 or	 eax, 2
  004d4	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 515  : 			havoc_lamps.status_10 = 1;

  004d9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  004de	83 c8 04	 or	 eax, 4
  004e1	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 516  : 			havoc_lamps.status_11 = 1;

  004e6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  004eb	83 c8 08	 or	 eax, 8
  004ee	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 517  : 			havoc_lamps.status_12 = 1;

  004f3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  004f8	83 c8 10	 or	 eax, 16			; 00000010H
  004fb	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 518  : 			havoc_lamps.status_13 = 1;

  00500	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00505	83 c8 20	 or	 eax, 32			; 00000020H
  00508	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 519  : 			havoc_lamps.status_14 = 1;

  0050d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00512	83 c8 40	 or	 eax, 64			; 00000040H
  00515	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 520  : 			havoc_lamps.status_15 = 1;

  0051a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0051f	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00524	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 521  : 			havoc_lamps.status_16 = 1;

  00529	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0052e	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  00533	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 522  : 			havoc_lamps.status_17 = 1;

  00538	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0053d	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  00542	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 523  : 			havoc_lamps.status_18 = 1;

  00547	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0054c	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00551	a3 04 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4, eax

; 524  : 		}
; 525  : 		else

  00556	eb 0b		 jmp	 SHORT $LN42@draw_havoc
$LN41@draw_havoc:

; 526  : 		{
; 527  : 			timer = 0.0;

  00558	0f 57 c0	 xorps	 xmm0, xmm0
  0055b	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN42@draw_havoc:

; 528  : 		}
; 529  : 	}
; 530  : 
; 531  : 	switch (panel)

  00563	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  00566	89 45 b4	 mov	 DWORD PTR tv198[ebp], eax
  00569	8b 4d b4	 mov	 ecx, DWORD PTR tv198[ebp]
  0056c	83 e9 12	 sub	 ecx, 18			; 00000012H
  0056f	89 4d b4	 mov	 DWORD PTR tv198[ebp], ecx
  00572	83 7d b4 08	 cmp	 DWORD PTR tv198[ebp], 8
  00576	0f 87 4a 11 00
	00		 ja	 $LN88@draw_havoc
  0057c	8b 55 b4	 mov	 edx, DWORD PTR tv198[ebp]
  0057f	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN90@draw_havoc[edx*4]
$LN43@draw_havoc:

; 532  : 	{
; 533  : 		////////////////////////////////////////
; 534  : 		case COCKPIT_PANEL_LEVEL_RIGHT30:
; 535  : 		////////////////////////////////////////
; 536  : 		{
; 537  : 			#define X_ORG (260)
; 538  : 			#define Y_ORG (472)
; 539  : 
; 540  : 			draw_lamp (havoc_lamps.status_3	, X_ORG +   6, Y_ORG +   1, 399, 172,  24,   7, 115);	// (55% alpha)

  00586	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0058b	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  0058e	83 e0 01	 and	 eax, 1
  00591	74 5f		 je	 SHORT $LN44@draw_havoc
  00593	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00598	05 0a 01 00 00	 add	 eax, 266		; 0000010aH
  0059d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  005a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005a7	05 d9 01 00 00	 add	 eax, 473		; 000001d9H
  005ac	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  005b1	c7 05 08 00 00
	00 8f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 399 ; 0000018fH
  005bb	c7 05 0c 00 00
	00 ac 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 172 ; 000000acH
  005c5	c7 05 10 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 24 ; 00000018H
  005cf	c7 05 14 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 7
  005d9	c6 05 18 00 00
	00 73		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 115 ; 00000073H
  005e0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  005e5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  005e8	50		 push	 eax
  005e9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  005ec	51		 push	 ecx
  005ed	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN44@draw_havoc:

; 541  : 
; 542  : 			#undef X_ORG
; 543  : 			#undef Y_ORG
; 544  : 
; 545  : 			break;

  005f2	e9 dd 10 00 00	 jmp	 $LN2@draw_havoc
$LN45@draw_havoc:

; 546  : 		}
; 547  : 		////////////////////////////////////////
; 548  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 549  : 		////////////////////////////////////////
; 550  : 		{
; 551  : 			#define X_ORG (507)
; 552  : 			#define Y_ORG (289)
; 553  : 
; 554  : 			draw_lamp (havoc_lamps.status_1	, X_ORG +   2, Y_ORG +   1, 332,   2,  22,  11, 120);	// (53% alpha)

  005f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  005fc	c1 e8 19	 shr	 eax, 25			; 00000019H
  005ff	83 e0 01	 and	 eax, 1
  00602	74 5f		 je	 SHORT $LN46@draw_havoc
  00604	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00609	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  0060e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00613	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00618	05 22 01 00 00	 add	 eax, 290		; 00000122H
  0061d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00622	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  0062c	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00636	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00640	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0064a	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  00651	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00656	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00659	50		 push	 eax
  0065a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0065d	51		 push	 ecx
  0065e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN46@draw_havoc:

; 555  : 			draw_lamp (havoc_lamps.status_2	, X_ORG +  24, Y_ORG +   1, 354,   2,  22,  11, 117);	// (54% alpha)

  00663	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00668	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  0066b	83 e0 01	 and	 eax, 1
  0066e	74 5f		 je	 SHORT $LN47@draw_havoc
  00670	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00675	05 13 02 00 00	 add	 eax, 531		; 00000213H
  0067a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0067f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00684	05 22 01 00 00	 add	 eax, 290		; 00000122H
  00689	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0068e	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  00698	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  006a2	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  006ac	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  006b6	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  006bd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  006c2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  006c5	50		 push	 eax
  006c6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006c9	51		 push	 ecx
  006ca	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN47@draw_havoc:

; 556  : 			draw_lamp (havoc_lamps.status_3	, X_ORG +  46, Y_ORG +   1, 376,   2,  22,  11, 115);	// (55% alpha)

  006cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  006d4	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  006d7	83 e0 01	 and	 eax, 1
  006da	74 5f		 je	 SHORT $LN48@draw_havoc
  006dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  006e1	05 29 02 00 00	 add	 eax, 553		; 00000229H
  006e6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  006eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  006f0	05 22 01 00 00	 add	 eax, 290		; 00000122H
  006f5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  006fa	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00704	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  0070e	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00718	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00722	c6 05 18 00 00
	00 73		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 115 ; 00000073H
  00729	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0072e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00731	50		 push	 eax
  00732	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00735	51		 push	 ecx
  00736	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN48@draw_havoc:

; 557  : 			draw_lamp (havoc_lamps.status_4	, X_ORG +   2, Y_ORG +  12, 332,  13,  22,  11, 112);	// (56% alpha)

  0073b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00740	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  00743	83 e0 01	 and	 eax, 1
  00746	74 5f		 je	 SHORT $LN49@draw_havoc
  00748	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0074d	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  00752	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00757	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0075c	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  00761	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00766	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  00770	c7 05 0c 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 13 ; 0000000dH
  0077a	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00784	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0078e	c6 05 18 00 00
	00 70		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 112 ; 00000070H
  00795	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0079a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0079d	50		 push	 eax
  0079e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  007a1	51		 push	 ecx
  007a2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN49@draw_havoc:

; 558  : 			draw_lamp (havoc_lamps.status_5	, X_ORG +  24, Y_ORG +  12, 354,  13,  22,  11, 110);	// (57% alpha)

  007a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  007ac	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  007af	83 e0 01	 and	 eax, 1
  007b2	74 5f		 je	 SHORT $LN50@draw_havoc
  007b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  007b9	05 13 02 00 00	 add	 eax, 531		; 00000213H
  007be	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  007c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  007c8	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  007cd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  007d2	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  007dc	c7 05 0c 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 13 ; 0000000dH
  007e6	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  007f0	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  007fa	c6 05 18 00 00
	00 6e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 110 ; 0000006eH
  00801	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00806	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00809	50		 push	 eax
  0080a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0080d	51		 push	 ecx
  0080e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN50@draw_havoc:

; 559  : 			draw_lamp (havoc_lamps.status_6	, X_ORG +  46, Y_ORG +  12, 376,  13,  22,  11, 107);	// (58% alpha)

  00813	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00818	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  0081b	83 e0 01	 and	 eax, 1
  0081e	74 5f		 je	 SHORT $LN51@draw_havoc
  00820	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00825	05 29 02 00 00	 add	 eax, 553		; 00000229H
  0082a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0082f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00834	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  00839	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0083e	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00848	c7 05 0c 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 13 ; 0000000dH
  00852	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  0085c	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00866	c6 05 18 00 00
	00 6b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 107 ; 0000006bH
  0086d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00872	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00875	50		 push	 eax
  00876	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00879	51		 push	 ecx
  0087a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN51@draw_havoc:

; 560  : 			draw_lamp (havoc_lamps.status_7	, X_ORG +   2, Y_ORG +  23, 332,  24,  22,  11, 105);	// (59% alpha)

  0087f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00884	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00887	83 e0 01	 and	 eax, 1
  0088a	74 5f		 je	 SHORT $LN52@draw_havoc
  0088c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00891	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  00896	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0089b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  008a0	05 38 01 00 00	 add	 eax, 312		; 00000138H
  008a5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  008aa	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  008b4	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  008be	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  008c8	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  008d2	c6 05 18 00 00
	00 69		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 105 ; 00000069H
  008d9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  008de	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  008e1	50		 push	 eax
  008e2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  008e5	51		 push	 ecx
  008e6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN52@draw_havoc:

; 561  : 			draw_lamp (havoc_lamps.status_8	, X_ORG +  24, Y_ORG +  23, 354,  24,  22,  11, 102);	// (60% alpha)

  008eb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  008f0	83 e0 01	 and	 eax, 1
  008f3	74 5f		 je	 SHORT $LN53@draw_havoc
  008f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  008fa	05 13 02 00 00	 add	 eax, 531		; 00000213H
  008ff	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00904	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00909	05 38 01 00 00	 add	 eax, 312		; 00000138H
  0090e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00913	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  0091d	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  00927	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00931	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  0093b	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  00942	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00947	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0094a	50		 push	 eax
  0094b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0094e	51		 push	 ecx
  0094f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN53@draw_havoc:

; 562  : 			draw_lamp (havoc_lamps.status_9	, X_ORG +  46, Y_ORG +  23, 376,  24,  22,  11,  99);	// (61% alpha)

  00954	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00959	d1 e8		 shr	 eax, 1
  0095b	83 e0 01	 and	 eax, 1
  0095e	74 5f		 je	 SHORT $LN54@draw_havoc
  00960	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00965	05 29 02 00 00	 add	 eax, 553		; 00000229H
  0096a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0096f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00974	05 38 01 00 00	 add	 eax, 312		; 00000138H
  00979	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0097e	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00988	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  00992	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  0099c	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  009a6	c6 05 18 00 00
	00 63		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 99 ; 00000063H
  009ad	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  009b2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  009b5	50		 push	 eax
  009b6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  009b9	51		 push	 ecx
  009ba	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN54@draw_havoc:

; 563  : 			draw_lamp (havoc_lamps.status_10	, X_ORG +   2, Y_ORG +  34, 332,  35,  22,  11,  97);	// (62% alpha)

  009bf	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  009c4	c1 e8 02	 shr	 eax, 2
  009c7	83 e0 01	 and	 eax, 1
  009ca	74 5f		 je	 SHORT $LN55@draw_havoc
  009cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  009d1	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  009d6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  009db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  009e0	05 43 01 00 00	 add	 eax, 323		; 00000143H
  009e5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  009ea	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  009f4	c7 05 0c 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 35 ; 00000023H
  009fe	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00a08	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00a12	c6 05 18 00 00
	00 61		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 97 ; 00000061H
  00a19	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a1e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a21	50		 push	 eax
  00a22	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a25	51		 push	 ecx
  00a26	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN55@draw_havoc:

; 564  : 			draw_lamp (havoc_lamps.status_11	, X_ORG +  24, Y_ORG +  34, 354,  35,  22,  11,  94);	// (63% alpha)

  00a2b	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a30	c1 e8 03	 shr	 eax, 3
  00a33	83 e0 01	 and	 eax, 1
  00a36	74 5f		 je	 SHORT $LN56@draw_havoc
  00a38	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a3d	05 13 02 00 00	 add	 eax, 531		; 00000213H
  00a42	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00a47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00a4c	05 43 01 00 00	 add	 eax, 323		; 00000143H
  00a51	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a56	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  00a60	c7 05 0c 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 35 ; 00000023H
  00a6a	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00a74	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00a7e	c6 05 18 00 00
	00 5e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 94 ; 0000005eH
  00a85	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a8a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a8d	50		 push	 eax
  00a8e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a91	51		 push	 ecx
  00a92	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN56@draw_havoc:

; 565  : 			draw_lamp (havoc_lamps.status_12	, X_ORG +  46, Y_ORG +  34, 376,  35,  22,  11,  92);	// (64% alpha)

  00a97	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00a9c	c1 e8 04	 shr	 eax, 4
  00a9f	83 e0 01	 and	 eax, 1
  00aa2	74 5f		 je	 SHORT $LN57@draw_havoc
  00aa4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00aa9	05 29 02 00 00	 add	 eax, 553		; 00000229H
  00aae	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ab3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ab8	05 43 01 00 00	 add	 eax, 323		; 00000143H
  00abd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ac2	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00acc	c7 05 0c 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 35 ; 00000023H
  00ad6	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00ae0	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00aea	c6 05 18 00 00
	00 5c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 92 ; 0000005cH
  00af1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00af6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00af9	50		 push	 eax
  00afa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00afd	51		 push	 ecx
  00afe	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN57@draw_havoc:

; 566  : 			draw_lamp (havoc_lamps.status_13	, X_ORG +   2, Y_ORG +  45, 332,  46,  22,  11,  89);	// (65% alpha)

  00b03	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b08	c1 e8 05	 shr	 eax, 5
  00b0b	83 e0 01	 and	 eax, 1
  00b0e	74 5f		 je	 SHORT $LN58@draw_havoc
  00b10	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b15	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  00b1a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b24	05 4e 01 00 00	 add	 eax, 334		; 0000014eH
  00b29	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b2e	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  00b38	c7 05 0c 00 00
	00 2e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 46 ; 0000002eH
  00b42	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00b4c	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00b56	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  00b5d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b62	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b65	50		 push	 eax
  00b66	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b69	51		 push	 ecx
  00b6a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN58@draw_havoc:

; 567  : 			draw_lamp (havoc_lamps.status_14	, X_ORG +  24, Y_ORG +  45, 354,  46,  22,  11,  87);	// (66% alpha)

  00b6f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00b74	c1 e8 06	 shr	 eax, 6
  00b77	83 e0 01	 and	 eax, 1
  00b7a	74 5f		 je	 SHORT $LN59@draw_havoc
  00b7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b81	05 13 02 00 00	 add	 eax, 531		; 00000213H
  00b86	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b8b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b90	05 4e 01 00 00	 add	 eax, 334		; 0000014eH
  00b95	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b9a	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  00ba4	c7 05 0c 00 00
	00 2e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 46 ; 0000002eH
  00bae	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00bb8	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00bc2	c6 05 18 00 00
	00 57		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 87 ; 00000057H
  00bc9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00bce	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00bd1	50		 push	 eax
  00bd2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00bd5	51		 push	 ecx
  00bd6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN59@draw_havoc:

; 568  : 			draw_lamp (havoc_lamps.status_15	, X_ORG +  46, Y_ORG +  45, 376,  46,  22,  11,  84);	// (67% alpha)

  00bdb	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00be0	c1 e8 07	 shr	 eax, 7
  00be3	83 e0 01	 and	 eax, 1
  00be6	74 5f		 je	 SHORT $LN60@draw_havoc
  00be8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00bed	05 29 02 00 00	 add	 eax, 553		; 00000229H
  00bf2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00bf7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00bfc	05 4e 01 00 00	 add	 eax, 334		; 0000014eH
  00c01	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c06	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00c10	c7 05 0c 00 00
	00 2e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 46 ; 0000002eH
  00c1a	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00c24	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00c2e	c6 05 18 00 00
	00 54		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 84 ; 00000054H
  00c35	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00c3a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00c3d	50		 push	 eax
  00c3e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00c41	51		 push	 ecx
  00c42	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN60@draw_havoc:

; 569  : 			draw_lamp (havoc_lamps.status_16	, X_ORG +   2, Y_ORG +  56, 332,  57,  22,  11,  82);	// (68% alpha)

  00c47	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00c4c	c1 e8 08	 shr	 eax, 8
  00c4f	83 e0 01	 and	 eax, 1
  00c52	74 5f		 je	 SHORT $LN61@draw_havoc
  00c54	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00c59	05 fd 01 00 00	 add	 eax, 509		; 000001fdH
  00c5e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c68	05 59 01 00 00	 add	 eax, 345		; 00000159H
  00c6d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c72	c7 05 08 00 00
	00 4c 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 332 ; 0000014cH
  00c7c	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00c86	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00c90	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00c9a	c6 05 18 00 00
	00 52		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 82 ; 00000052H
  00ca1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ca6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ca9	50		 push	 eax
  00caa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00cad	51		 push	 ecx
  00cae	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN61@draw_havoc:

; 570  : 			draw_lamp (havoc_lamps.status_17	, X_ORG +  24, Y_ORG +  56, 354,  57,  22,  11,  79);	// (69% alpha)

  00cb3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00cb8	c1 e8 09	 shr	 eax, 9
  00cbb	83 e0 01	 and	 eax, 1
  00cbe	74 5f		 je	 SHORT $LN62@draw_havoc
  00cc0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00cc5	05 13 02 00 00	 add	 eax, 531		; 00000213H
  00cca	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ccf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00cd4	05 59 01 00 00	 add	 eax, 345		; 00000159H
  00cd9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00cde	c7 05 08 00 00
	00 62 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 354 ; 00000162H
  00ce8	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00cf2	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00cfc	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00d06	c6 05 18 00 00
	00 4f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 79 ; 0000004fH
  00d0d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d12	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d15	50		 push	 eax
  00d16	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d19	51		 push	 ecx
  00d1a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN62@draw_havoc:

; 571  : 			draw_lamp (havoc_lamps.status_18	, X_ORG +  46, Y_ORG +  56, 376,  57,  22,  11,  76);	// (70% alpha)

  00d1f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  00d24	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00d27	83 e0 01	 and	 eax, 1
  00d2a	74 5f		 je	 SHORT $LN63@draw_havoc
  00d2c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00d31	05 29 02 00 00	 add	 eax, 553		; 00000229H
  00d36	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00d3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00d40	05 59 01 00 00	 add	 eax, 345		; 00000159H
  00d45	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00d4a	c7 05 08 00 00
	00 78 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 376 ; 00000178H
  00d54	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00d5e	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00d68	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  00d72	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  00d79	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d7e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d81	50		 push	 eax
  00d82	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d85	51		 push	 ecx
  00d86	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN63@draw_havoc:

; 572  : 
; 573  : 			#undef X_ORG
; 574  : 			#undef Y_ORG
; 575  : 
; 576  : 			break;

  00d8b	e9 44 09 00 00	 jmp	 $LN2@draw_havoc
$LN64@draw_havoc:

; 577  : 		}
; 578  : 		////////////////////////////////////////
; 579  : 		case COCKPIT_PANEL_DOWN20_RIGHT30:
; 580  : 		////////////////////////////////////////
; 581  : 		{
; 582  : 			#define X_ORG (234)
; 583  : 			#define Y_ORG (266)
; 584  : 
; 585  : 			draw_lamp (havoc_lamps.status_1	, X_ORG +   1, Y_ORG +   9, 331,  79,  22,  14, 120);	// (53% alpha)

  00d90	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00d95	c1 e8 19	 shr	 eax, 25			; 00000019H
  00d98	83 e0 01	 and	 eax, 1
  00d9b	74 5f		 je	 SHORT $LN65@draw_havoc
  00d9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00da2	05 eb 00 00 00	 add	 eax, 235		; 000000ebH
  00da7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00dac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00db1	05 13 01 00 00	 add	 eax, 275		; 00000113H
  00db6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00dbb	c7 05 08 00 00
	00 4b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 331 ; 0000014bH
  00dc5	c7 05 0c 00 00
	00 4f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 79 ; 0000004fH
  00dcf	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  00dd9	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00de3	c6 05 18 00 00
	00 78		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 120 ; 00000078H
  00dea	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00def	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00df2	50		 push	 eax
  00df3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00df6	51		 push	 ecx
  00df7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN65@draw_havoc:

; 586  : 			draw_lamp (havoc_lamps.status_2	, X_ORG +  21, Y_ORG +   5, 351,  75,  20,  14, 117);	// (54% alpha)

  00dfc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00e01	c1 e8 1a	 shr	 eax, 26			; 0000001aH
  00e04	83 e0 01	 and	 eax, 1
  00e07	74 5f		 je	 SHORT $LN66@draw_havoc
  00e09	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e0e	05 ff 00 00 00	 add	 eax, 255		; 000000ffH
  00e13	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e18	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e1d	05 0f 01 00 00	 add	 eax, 271		; 0000010fH
  00e22	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e27	c7 05 08 00 00
	00 5f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 351 ; 0000015fH
  00e31	c7 05 0c 00 00
	00 4b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 75 ; 0000004bH
  00e3b	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  00e45	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00e4f	c6 05 18 00 00
	00 75		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 117 ; 00000075H
  00e56	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e5b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e5e	50		 push	 eax
  00e5f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e62	51		 push	 ecx
  00e63	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN66@draw_havoc:

; 587  : 			draw_lamp (havoc_lamps.status_3	, X_ORG +  40, Y_ORG +   0, 370,  70,  19,  15, 115);	// (55% alpha)

  00e68	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00e6d	c1 e8 1b	 shr	 eax, 27			; 0000001bH
  00e70	83 e0 01	 and	 eax, 1
  00e73	74 5f		 je	 SHORT $LN67@draw_havoc
  00e75	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e7a	05 12 01 00 00	 add	 eax, 274		; 00000112H
  00e7f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e84	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e89	05 0a 01 00 00	 add	 eax, 266		; 0000010aH
  00e8e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e93	c7 05 08 00 00
	00 72 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 370 ; 00000172H
  00e9d	c7 05 0c 00 00
	00 46 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 70 ; 00000046H
  00ea7	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  00eb1	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  00ebb	c6 05 18 00 00
	00 73		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 115 ; 00000073H
  00ec2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ec7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00eca	50		 push	 eax
  00ecb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00ece	51		 push	 ecx
  00ecf	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN67@draw_havoc:

; 588  : 			draw_lamp (havoc_lamps.status_4	, X_ORG +   3, Y_ORG +  19, 333,  89,  21,  15, 112);	// (56% alpha)

  00ed4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ed9	c1 e8 1c	 shr	 eax, 28			; 0000001cH
  00edc	83 e0 01	 and	 eax, 1
  00edf	74 5f		 je	 SHORT $LN68@draw_havoc
  00ee1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ee6	05 ed 00 00 00	 add	 eax, 237		; 000000edH
  00eeb	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ef0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ef5	05 1d 01 00 00	 add	 eax, 285		; 0000011dH
  00efa	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00eff	c7 05 08 00 00
	00 4d 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 333 ; 0000014dH
  00f09	c7 05 0c 00 00
	00 59 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 89 ; 00000059H
  00f13	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  00f1d	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  00f27	c6 05 18 00 00
	00 70		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 112 ; 00000070H
  00f2e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f33	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f36	50		 push	 eax
  00f37	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f3a	51		 push	 ecx
  00f3b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN68@draw_havoc:

; 589  : 			draw_lamp (havoc_lamps.status_5	, X_ORG +  23, Y_ORG +  15, 353,  85,  20,  14, 110);	// (57% alpha)

  00f40	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00f45	c1 e8 1d	 shr	 eax, 29			; 0000001dH
  00f48	83 e0 01	 and	 eax, 1
  00f4b	74 5f		 je	 SHORT $LN69@draw_havoc
  00f4d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f52	05 01 01 00 00	 add	 eax, 257		; 00000101H
  00f57	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00f5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f61	05 19 01 00 00	 add	 eax, 281		; 00000119H
  00f66	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f6b	c7 05 08 00 00
	00 61 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 353 ; 00000161H
  00f75	c7 05 0c 00 00
	00 55 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 85 ; 00000055H
  00f7f	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  00f89	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00f93	c6 05 18 00 00
	00 6e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 110 ; 0000006eH
  00f9a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f9f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00fa2	50		 push	 eax
  00fa3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00fa6	51		 push	 ecx
  00fa7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN69@draw_havoc:

; 590  : 			draw_lamp (havoc_lamps.status_6	, X_ORG +  42, Y_ORG +  11, 372,  81,  19,  14, 107);	// (58% alpha)

  00fac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00fb1	c1 e8 1e	 shr	 eax, 30			; 0000001eH
  00fb4	83 e0 01	 and	 eax, 1
  00fb7	74 5f		 je	 SHORT $LN70@draw_havoc
  00fb9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00fbe	05 14 01 00 00	 add	 eax, 276		; 00000114H
  00fc3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00fc8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fcd	05 15 01 00 00	 add	 eax, 277		; 00000115H
  00fd2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00fd7	c7 05 08 00 00
	00 74 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 372 ; 00000174H
  00fe1	c7 05 0c 00 00
	00 51 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 81 ; 00000051H
  00feb	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  00ff5	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  00fff	c6 05 18 00 00
	00 6b		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 107 ; 0000006bH
  01006	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0100b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0100e	50		 push	 eax
  0100f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01012	51		 push	 ecx
  01013	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN70@draw_havoc:

; 591  : 			draw_lamp (havoc_lamps.status_7	, X_ORG +   6, Y_ORG +  29, 336,  99,  20,  15, 105);	// (59% alpha)

  01018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0101d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  01020	83 e0 01	 and	 eax, 1
  01023	74 5f		 je	 SHORT $LN71@draw_havoc
  01025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0102a	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0102f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01039	05 27 01 00 00	 add	 eax, 295		; 00000127H
  0103e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01043	c7 05 08 00 00
	00 50 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 336 ; 00000150H
  0104d	c7 05 0c 00 00
	00 63 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 99 ; 00000063H
  01057	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  01061	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  0106b	c6 05 18 00 00
	00 69		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 105 ; 00000069H
  01072	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01077	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0107a	50		 push	 eax
  0107b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0107e	51		 push	 ecx
  0107f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN71@draw_havoc:

; 592  : 			draw_lamp (havoc_lamps.status_8	, X_ORG +  25, Y_ORG +  25, 355,  95,  20,  14, 102);	// (60% alpha)

  01084	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01089	83 e0 01	 and	 eax, 1
  0108c	74 5f		 je	 SHORT $LN72@draw_havoc
  0108e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01093	05 03 01 00 00	 add	 eax, 259		; 00000103H
  01098	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0109d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  010a2	05 23 01 00 00	 add	 eax, 291		; 00000123H
  010a7	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  010ac	c7 05 08 00 00
	00 63 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 355 ; 00000163H
  010b6	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  010c0	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  010ca	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  010d4	c6 05 18 00 00
	00 66		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 102 ; 00000066H
  010db	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010e0	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010e3	50		 push	 eax
  010e4	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010e7	51		 push	 ecx
  010e8	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN72@draw_havoc:

; 593  : 			draw_lamp (havoc_lamps.status_9	, X_ORG +  44, Y_ORG +  21, 374,  91,  19,  14,  99);	// (61% alpha)

  010ed	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  010f2	d1 e8		 shr	 eax, 1
  010f4	83 e0 01	 and	 eax, 1
  010f7	74 5f		 je	 SHORT $LN73@draw_havoc
  010f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  010fe	05 16 01 00 00	 add	 eax, 278		; 00000116H
  01103	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0110d	05 1f 01 00 00	 add	 eax, 287		; 0000011fH
  01112	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01117	c7 05 08 00 00
	00 76 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 374 ; 00000176H
  01121	c7 05 0c 00 00
	00 5b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 91 ; 0000005bH
  0112b	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  01135	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0113f	c6 05 18 00 00
	00 63		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 99 ; 00000063H
  01146	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0114b	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0114e	50		 push	 eax
  0114f	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01152	51		 push	 ecx
  01153	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN73@draw_havoc:

; 594  : 			draw_lamp (havoc_lamps.status_10	, X_ORG +   7, Y_ORG +  39, 337, 109,  21,  15,  97);	// (62% alpha)

  01158	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0115d	c1 e8 02	 shr	 eax, 2
  01160	83 e0 01	 and	 eax, 1
  01163	74 5f		 je	 SHORT $LN74@draw_havoc
  01165	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0116a	05 f1 00 00 00	 add	 eax, 241		; 000000f1H
  0116f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01174	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01179	05 31 01 00 00	 add	 eax, 305		; 00000131H
  0117e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01183	c7 05 08 00 00
	00 51 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 337 ; 00000151H
  0118d	c7 05 0c 00 00
	00 6d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 109 ; 0000006dH
  01197	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  011a1	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  011ab	c6 05 18 00 00
	00 61		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 97 ; 00000061H
  011b2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011b7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  011ba	50		 push	 eax
  011bb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  011be	51		 push	 ecx
  011bf	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN74@draw_havoc:

; 595  : 			draw_lamp (havoc_lamps.status_11	, X_ORG +  27, Y_ORG +  35, 357, 105,  19,  14,  94);	// (63% alpha)

  011c4	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  011c9	c1 e8 03	 shr	 eax, 3
  011cc	83 e0 01	 and	 eax, 1
  011cf	74 5f		 je	 SHORT $LN75@draw_havoc
  011d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011d6	05 05 01 00 00	 add	 eax, 261		; 00000105H
  011db	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  011e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  011e5	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  011ea	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  011ef	c7 05 08 00 00
	00 65 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 357 ; 00000165H
  011f9	c7 05 0c 00 00
	00 69 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 105 ; 00000069H
  01203	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  0120d	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  01217	c6 05 18 00 00
	00 5e		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 94 ; 0000005eH
  0121e	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01223	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01226	50		 push	 eax
  01227	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0122a	51		 push	 ecx
  0122b	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN75@draw_havoc:

; 596  : 			draw_lamp (havoc_lamps.status_12	, X_ORG +  45, Y_ORG +  31, 375, 101,  19,  14,  92);	// (64% alpha)

  01230	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01235	c1 e8 04	 shr	 eax, 4
  01238	83 e0 01	 and	 eax, 1
  0123b	74 5f		 je	 SHORT $LN76@draw_havoc
  0123d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01242	05 17 01 00 00	 add	 eax, 279		; 00000117H
  01247	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0124c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01251	05 29 01 00 00	 add	 eax, 297		; 00000129H
  01256	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0125b	c7 05 08 00 00
	00 77 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 375 ; 00000177H
  01265	c7 05 0c 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 101 ; 00000065H
  0126f	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  01279	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  01283	c6 05 18 00 00
	00 5c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 92 ; 0000005cH
  0128a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0128f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01292	50		 push	 eax
  01293	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01296	51		 push	 ecx
  01297	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN76@draw_havoc:

; 597  : 			draw_lamp (havoc_lamps.status_13	, X_ORG +   9, Y_ORG +  49, 339, 119,  21,  15,  89);	// (65% alpha)

  0129c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  012a1	c1 e8 05	 shr	 eax, 5
  012a4	83 e0 01	 and	 eax, 1
  012a7	74 5f		 je	 SHORT $LN77@draw_havoc
  012a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012ae	05 f3 00 00 00	 add	 eax, 243		; 000000f3H
  012b3	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  012b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  012bd	05 3b 01 00 00	 add	 eax, 315		; 0000013bH
  012c2	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  012c7	c7 05 08 00 00
	00 53 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 339 ; 00000153H
  012d1	c7 05 0c 00 00
	00 77 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 119 ; 00000077H
  012db	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  012e5	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  012ef	c6 05 18 00 00
	00 59		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 89 ; 00000059H
  012f6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012fb	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  012fe	50		 push	 eax
  012ff	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01302	51		 push	 ecx
  01303	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN77@draw_havoc:

; 598  : 			draw_lamp (havoc_lamps.status_14	, X_ORG +  29, Y_ORG +  45, 359, 115,  20,  15,  87);	// (66% alpha)

  01308	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0130d	c1 e8 06	 shr	 eax, 6
  01310	83 e0 01	 and	 eax, 1
  01313	74 5f		 je	 SHORT $LN78@draw_havoc
  01315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0131a	05 07 01 00 00	 add	 eax, 263		; 00000107H
  0131f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01329	05 37 01 00 00	 add	 eax, 311		; 00000137H
  0132e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01333	c7 05 08 00 00
	00 67 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 359 ; 00000167H
  0133d	c7 05 0c 00 00
	00 73 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 115 ; 00000073H
  01347	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  01351	c7 05 14 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 15 ; 0000000fH
  0135b	c6 05 18 00 00
	00 57		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 87 ; 00000057H
  01362	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01367	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0136a	50		 push	 eax
  0136b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0136e	51		 push	 ecx
  0136f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN78@draw_havoc:

; 599  : 			draw_lamp (havoc_lamps.status_15	, X_ORG +  47, Y_ORG +  40, 377, 110,  19,  14,  84);	// (67% alpha)

  01374	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01379	c1 e8 07	 shr	 eax, 7
  0137c	83 e0 01	 and	 eax, 1
  0137f	74 5f		 je	 SHORT $LN79@draw_havoc
  01381	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01386	05 19 01 00 00	 add	 eax, 281		; 00000119H
  0138b	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01390	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01395	05 32 01 00 00	 add	 eax, 306		; 00000132H
  0139a	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0139f	c7 05 08 00 00
	00 79 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 377 ; 00000179H
  013a9	c7 05 0c 00 00
	00 6e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 110 ; 0000006eH
  013b3	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  013bd	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  013c7	c6 05 18 00 00
	00 54		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 84 ; 00000054H
  013ce	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  013d3	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  013d6	50		 push	 eax
  013d7	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  013da	51		 push	 ecx
  013db	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN79@draw_havoc:

; 600  : 			draw_lamp (havoc_lamps.status_16	, X_ORG +  11, Y_ORG +  60, 341, 130,  20,  14,  82);	// (68% alpha)

  013e0	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  013e5	c1 e8 08	 shr	 eax, 8
  013e8	83 e0 01	 and	 eax, 1
  013eb	74 5f		 je	 SHORT $LN80@draw_havoc
  013ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  013f2	05 f5 00 00 00	 add	 eax, 245		; 000000f5H
  013f7	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  013fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01401	05 46 01 00 00	 add	 eax, 326		; 00000146H
  01406	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0140b	c7 05 08 00 00
	00 55 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 341 ; 00000155H
  01415	c7 05 0c 00 00
	00 82 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 130 ; 00000082H
  0141f	c7 05 10 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 20 ; 00000014H
  01429	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  01433	c6 05 18 00 00
	00 52		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 82 ; 00000052H
  0143a	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0143f	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01442	50		 push	 eax
  01443	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01446	51		 push	 ecx
  01447	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN80@draw_havoc:

; 601  : 			draw_lamp (havoc_lamps.status_17	, X_ORG +  31, Y_ORG +  55, 361, 125,  19,  14,  79);	// (69% alpha)

  0144c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01451	c1 e8 09	 shr	 eax, 9
  01454	83 e0 01	 and	 eax, 1
  01457	74 5f		 je	 SHORT $LN81@draw_havoc
  01459	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0145e	05 09 01 00 00	 add	 eax, 265		; 00000109H
  01463	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01468	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0146d	05 41 01 00 00	 add	 eax, 321		; 00000141H
  01472	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01477	c7 05 08 00 00
	00 69 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 361 ; 00000169H
  01481	c7 05 0c 00 00
	00 7d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 125 ; 0000007dH
  0148b	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  01495	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0149f	c6 05 18 00 00
	00 4f		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 79 ; 0000004fH
  014a6	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  014ab	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  014ae	50		 push	 eax
  014af	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  014b2	51		 push	 ecx
  014b3	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN81@draw_havoc:

; 602  : 			draw_lamp (havoc_lamps.status_18	, X_ORG +  49, Y_ORG +  50, 379, 120,  19,  14,  76);	// (70% alpha)

  014b8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  014bd	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  014c0	83 e0 01	 and	 eax, 1
  014c3	74 5f		 je	 SHORT $LN82@draw_havoc
  014c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  014ca	05 1b 01 00 00	 add	 eax, 283		; 0000011bH
  014cf	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  014d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  014d9	05 3c 01 00 00	 add	 eax, 316		; 0000013cH
  014de	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  014e3	c7 05 08 00 00
	00 7b 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 379 ; 0000017bH
  014ed	c7 05 0c 00 00
	00 78 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 120 ; 00000078H
  014f7	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  01501	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0150b	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  01512	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01517	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0151a	50		 push	 eax
  0151b	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0151e	51		 push	 ecx
  0151f	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN82@draw_havoc:

; 603  : 
; 604  : 			#undef X_ORG
; 605  : 			#undef Y_ORG
; 606  : 
; 607  : 			break;

  01524	e9 ab 01 00 00	 jmp	 $LN2@draw_havoc
$LN83@draw_havoc:

; 608  : 		}
; 609  : 		////////////////////////////////////////
; 610  : 		case COCKPIT_PANEL_DOWN20_RIGHT60:
; 611  : 		////////////////////////////////////////
; 612  : 		{
; 613  : 			#define X_ORG (0)
; 614  : 			#define Y_ORG (325)
; 615  : 
; 616  : 			draw_lamp (havoc_lamps.status_9	, X_ORG +   0, Y_ORG +   1, 309,  96,   6,  13,  99);	// (61% alpha)

  01529	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  0152e	d1 e8		 shr	 eax, 1
  01530	83 e0 01	 and	 eax, 1
  01533	74 5a		 je	 SHORT $LN84@draw_havoc
  01535	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0153a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0153f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01544	05 46 01 00 00	 add	 eax, 326		; 00000146H
  01549	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0154e	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  01558	c7 05 0c 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 96 ; 00000060H
  01562	c7 05 10 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 6
  0156c	c7 05 14 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 13 ; 0000000dH
  01576	c6 05 18 00 00
	00 63		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 99 ; 00000063H
  0157d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01582	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01585	50		 push	 eax
  01586	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01589	51		 push	 ecx
  0158a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN84@draw_havoc:

; 617  : 			draw_lamp (havoc_lamps.status_12	, X_ORG +   0, Y_ORG +  11, 309, 106,  11,  16,  92);	// (64% alpha)

  0158f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01594	c1 e8 04	 shr	 eax, 4
  01597	83 e0 01	 and	 eax, 1
  0159a	74 5a		 je	 SHORT $LN85@draw_havoc
  0159c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  015a1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  015a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  015ab	05 50 01 00 00	 add	 eax, 336		; 00000150H
  015b0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  015b5	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  015bf	c7 05 0c 00 00
	00 6a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 106 ; 0000006aH
  015c9	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  015d3	c7 05 14 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 16 ; 00000010H
  015dd	c6 05 18 00 00
	00 5c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 92 ; 0000005cH
  015e4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  015e9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  015ec	50		 push	 eax
  015ed	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  015f0	51		 push	 ecx
  015f1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN85@draw_havoc:

; 618  : 			draw_lamp (havoc_lamps.status_15	, X_ORG +   0, Y_ORG +  22, 309, 117,  15,  17,  84);	// (67% alpha)

  015f6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  015fb	c1 e8 07	 shr	 eax, 7
  015fe	83 e0 01	 and	 eax, 1
  01601	74 5a		 je	 SHORT $LN86@draw_havoc
  01603	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01608	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0160d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01612	05 5b 01 00 00	 add	 eax, 347		; 0000015bH
  01617	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0161c	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  01626	c7 05 0c 00 00
	00 75 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 117 ; 00000075H
  01630	c7 05 10 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 15 ; 0000000fH
  0163a	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  01644	c6 05 18 00 00
	00 54		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 84 ; 00000054H
  0164b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01650	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01653	50		 push	 eax
  01654	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01657	51		 push	 ecx
  01658	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN86@draw_havoc:

; 619  : 			draw_lamp (havoc_lamps.status_18	, X_ORG +   0, Y_ORG +  32, 309, 127,  19,  20,  76);	// (70% alpha)

  0165d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A+4
  01662	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  01665	83 e0 01	 and	 eax, 1
  01668	74 5a		 je	 SHORT $LN87@draw_havoc
  0166a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0166f	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01674	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01679	05 65 01 00 00	 add	 eax, 357		; 00000165H
  0167e	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01683	c7 05 08 00 00
	00 35 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 309 ; 00000135H
  0168d	c7 05 0c 00 00
	00 7f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 127 ; 0000007fH
  01697	c7 05 10 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 19 ; 00000013H
  016a1	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  016ab	c6 05 18 00 00
	00 4c		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 76 ; 0000004cH
  016b2	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  016b7	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  016ba	50		 push	 eax
  016bb	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  016be	51		 push	 ecx
  016bf	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN87@draw_havoc:

; 620  : 
; 621  : 			#undef X_ORG
; 622  : 			#undef Y_ORG
; 623  : 
; 624  : 			break;

  016c4	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN88@draw_havoc:

; 625  : 		}
; 626  : 		////////////////////////////////////////
; 627  : 		default:
; 628  : 		////////////////////////////////////////
; 629  : 		{
; 630  : 			debug_fatal (lamp_error);

  016c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  016cb	50		 push	 eax
  016cc	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  016d1	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 631  : 
; 632  : 			break;
; 633  : 		}
; 634  : 	}
; 635  : }

  016d4	5f		 pop	 edi
  016d5	5e		 pop	 esi
  016d6	5b		 pop	 ebx
  016d7	8b e5		 mov	 esp, ebp
  016d9	5d		 pop	 ebp
  016da	c2 04 00	 ret	 4
  016dd	0f 1f 00	 npad	 3
$LN90@draw_havoc:
  016e0	00 00 00 00	 DD	 $LN43@draw_havoc
  016e4	00 00 00 00	 DD	 $LN88@draw_havoc
  016e8	00 00 00 00	 DD	 $LN88@draw_havoc
  016ec	00 00 00 00	 DD	 $LN88@draw_havoc
  016f0	00 00 00 00	 DD	 $LN88@draw_havoc
  016f4	00 00 00 00	 DD	 $LN88@draw_havoc
  016f8	00 00 00 00	 DD	 $LN45@draw_havoc
  016fc	00 00 00 00	 DD	 $LN64@draw_havoc
  01700	00 00 00 00	 DD	 $LN83@draw_havoc
?draw_havoc_status_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_havoc_status_panel_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z
_TEXT	SEGMENT
tv170 = -76						; size = 4
_mask_data$ = -8					; size = 4
_sprite_data$ = -4					; size = 4
_panel$ = 8						; size = 4
?draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z PROC ; draw_havoc_weapons_management_panel_lamps, COMDAT

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 127  : 	unsigned char
; 128  : 		*sprite_data,
; 129  : 		*mask_data;
; 130  : 
; 131  : 	sprite_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  0000e	83 c0 2b	 add	 eax, 43			; 0000002bH
  00011	6b c8 28	 imul	 ecx, eax, 40
  00014	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0001a	89 55 fc	 mov	 DWORD PTR _sprite_data$[ebp], edx

; 132  : 
; 133  : 	mask_data = get_graphics_file_data (base_cockpit_graphics_file + GRAPHICS_COCKPITS_HAVOC_SPRITES_MASK);

  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?base_cockpit_graphics_file@@3W4GRAPHICS_FILE_SPECIFIERS@@A ; base_cockpit_graphics_file
  00022	83 c0 2c	 add	 eax, 44			; 0000002cH
  00025	6b c8 28	 imul	 ecx, eax, 40
  00028	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0002e	89 55 f8	 mov	 DWORD PTR _mask_data$[ebp], edx

; 134  : 
; 135  : 	if (test_cockpit_instruments)

  00031	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?test_cockpit_instruments@@3HA, 0 ; test_cockpit_instruments
  00038	0f 84 92 03 00
	00		 je	 $LN36@draw_havoc

; 136  : 	{
; 137  : 		static float
; 138  : 			timer = 0.0;
; 139  : 
; 140  : 		havoc_lamps.weapons_management_lh_outer_pylon_green = 0;

  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00043	83 e0 fd	 and	 eax, -3			; fffffffdH
  00046	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 141  : 		havoc_lamps.weapons_management_lh_inner_pylon_green = 0;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00050	83 e0 fb	 and	 eax, -5			; fffffffbH
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 142  : 		havoc_lamps.weapons_management_rh_inner_pylon_green = 0;

  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0005d	83 e0 f7	 and	 eax, -9			; fffffff7H
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 143  : 		havoc_lamps.weapons_management_rh_outer_pylon_green = 0;

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0006a	83 e0 ef	 and	 eax, -17		; ffffffefH
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 144  : 		havoc_lamps.weapons_management_armour_piercing_cannon_green = 0;

  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00077	83 e0 df	 and	 eax, -33		; ffffffdfH
  0007a	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 145  : 		havoc_lamps.weapons_management_high_explosive_cannon_green = 0;

  0007f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00084	83 e0 bf	 and	 eax, -65		; ffffffbfH
  00087	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 146  : 		havoc_lamps.weapons_management_lh_outer_pylon_red = 0;

  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00091	25 7f ff ff ff	 and	 eax, -129		; ffffff7fH
  00096	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 147  : 		havoc_lamps.weapons_management_lh_inner_pylon_red = 0;

  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000a0	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  000a5	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 148  : 		havoc_lamps.weapons_management_rh_inner_pylon_red = 0;

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000af	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  000b4	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 149  : 		havoc_lamps.weapons_management_rh_outer_pylon_red = 0;

  000b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000be	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  000c3	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 150  : 		havoc_lamps.weapons_management_armour_piercing_cannon_red = 0;

  000c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000cd	25 ff f7 ff ff	 and	 eax, -2049		; fffff7ffH
  000d2	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 151  : 		havoc_lamps.weapons_management_high_explosive_cannon_red = 0;

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000dc	25 ff ef ff ff	 and	 eax, -4097		; ffffefffH
  000e1	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 152  : 		havoc_lamps.weapons_management_chaff_green = 0;

  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000eb	25 ff df ff ff	 and	 eax, -8193		; ffffdfffH
  000f0	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 153  : 		havoc_lamps.weapons_management_flare_green = 0;

  000f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  000fa	25 ff bf ff ff	 and	 eax, -16385		; ffffbfffH
  000ff	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 154  : 		havoc_lamps.weapons_management_chaff_red = 0;

  00104	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00109	25 ff 7f ff ff	 and	 eax, -32769		; ffff7fffH
  0010e	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 155  : 		havoc_lamps.weapons_management_flare_red = 0;

  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00118	25 ff ff fe ff	 and	 eax, -65537		; fffeffffH
  0011d	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 156  : 
; 157  : 		timer += get_delta_time ();

  00122	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0012a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00132	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0

; 158  : 
; 159  : 		if (timer < (ONE_SECOND * 1.0))

  0013a	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00142	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0014a	66 0f 2f c8	 comisd	 xmm1, xmm0
  0014e	76 12		 jbe	 SHORT $LN5@draw_havoc

; 160  : 		{
; 161  : 			havoc_lamps.weapons_management_lh_outer_pylon_green = 1;

  00150	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00155	83 c8 02	 or	 eax, 2
  00158	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0015d	e9 6e 02 00 00	 jmp	 $LN36@draw_havoc
$LN5@draw_havoc:

; 162  : 		}
; 163  : 		else if (timer < (ONE_SECOND * 2.0))

  00162	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0016a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4000000000000000
  00172	66 0f 2f c8	 comisd	 xmm1, xmm0
  00176	76 14		 jbe	 SHORT $LN7@draw_havoc

; 164  : 		{
; 165  : 			havoc_lamps.weapons_management_lh_outer_pylon_red = 1;

  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0017d	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  00182	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00187	e9 44 02 00 00	 jmp	 $LN36@draw_havoc
$LN7@draw_havoc:

; 166  : 		}
; 167  : 		else if (timer < (ONE_SECOND * 3.0))

  0018c	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00194	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  0019c	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a0	76 12		 jbe	 SHORT $LN9@draw_havoc

; 168  : 		{
; 169  : 			havoc_lamps.weapons_management_lh_inner_pylon_green = 1;

  001a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001a7	83 c8 04	 or	 eax, 4
  001aa	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001af	e9 1c 02 00 00	 jmp	 $LN36@draw_havoc
$LN9@draw_havoc:

; 170  : 		}
; 171  : 		else if (timer < (ONE_SECOND * 4.0))

  001b4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001bc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4010000000000000
  001c4	66 0f 2f c8	 comisd	 xmm1, xmm0
  001c8	76 14		 jbe	 SHORT $LN11@draw_havoc

; 172  : 		{
; 173  : 			havoc_lamps.weapons_management_lh_inner_pylon_red = 1;

  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001cf	0d 00 01 00 00	 or	 eax, 256		; 00000100H
  001d4	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  001d9	e9 f2 01 00 00	 jmp	 $LN36@draw_havoc
$LN11@draw_havoc:

; 174  : 		}
; 175  : 		else if (timer < (ONE_SECOND * 5.0))

  001de	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  001e6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  001ee	66 0f 2f c8	 comisd	 xmm1, xmm0
  001f2	76 12		 jbe	 SHORT $LN13@draw_havoc

; 176  : 		{
; 177  : 			havoc_lamps.weapons_management_rh_inner_pylon_green = 1;

  001f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  001f9	83 c8 08	 or	 eax, 8
  001fc	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00201	e9 ca 01 00 00	 jmp	 $LN36@draw_havoc
$LN13@draw_havoc:

; 178  : 		}
; 179  : 		else if (timer < (ONE_SECOND * 6.0))

  00206	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0020e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4018000000000000
  00216	66 0f 2f c8	 comisd	 xmm1, xmm0
  0021a	76 14		 jbe	 SHORT $LN15@draw_havoc

; 180  : 		{
; 181  : 			havoc_lamps.weapons_management_rh_inner_pylon_red = 1;

  0021c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00221	0d 00 02 00 00	 or	 eax, 512		; 00000200H
  00226	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0022b	e9 a0 01 00 00	 jmp	 $LN36@draw_havoc
$LN15@draw_havoc:

; 182  : 		}
; 183  : 		else if (timer < (ONE_SECOND * 7.0))

  00230	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00238	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@401c000000000000
  00240	66 0f 2f c8	 comisd	 xmm1, xmm0
  00244	76 12		 jbe	 SHORT $LN17@draw_havoc

; 184  : 		{
; 185  : 			havoc_lamps.weapons_management_rh_outer_pylon_green = 1;

  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0024b	83 c8 10	 or	 eax, 16			; 00000010H
  0024e	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00253	e9 78 01 00 00	 jmp	 $LN36@draw_havoc
$LN17@draw_havoc:

; 186  : 		}
; 187  : 		else if (timer < (ONE_SECOND * 8.0))

  00258	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00260	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4020000000000000
  00268	66 0f 2f c8	 comisd	 xmm1, xmm0
  0026c	76 14		 jbe	 SHORT $LN19@draw_havoc

; 188  : 		{
; 189  : 			havoc_lamps.weapons_management_rh_outer_pylon_red = 1;

  0026e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00273	0d 00 04 00 00	 or	 eax, 1024		; 00000400H
  00278	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0027d	e9 4e 01 00 00	 jmp	 $LN36@draw_havoc
$LN19@draw_havoc:

; 190  : 		}
; 191  : 		else if (timer < (ONE_SECOND * 9.0))

  00282	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0028a	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4022000000000000
  00292	66 0f 2f c8	 comisd	 xmm1, xmm0
  00296	76 12		 jbe	 SHORT $LN21@draw_havoc

; 192  : 		{
; 193  : 			havoc_lamps.weapons_management_armour_piercing_cannon_green = 1;

  00298	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0029d	83 c8 20	 or	 eax, 32			; 00000020H
  002a0	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  002a5	e9 26 01 00 00	 jmp	 $LN36@draw_havoc
$LN21@draw_havoc:

; 194  : 		}
; 195  : 		else if (timer < (ONE_SECOND * 10.0))

  002aa	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  002b2	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4024000000000000
  002ba	66 0f 2f c8	 comisd	 xmm1, xmm0
  002be	76 14		 jbe	 SHORT $LN23@draw_havoc

; 196  : 		{
; 197  : 			havoc_lamps.weapons_management_armour_piercing_cannon_red = 1;

  002c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  002c5	0d 00 08 00 00	 or	 eax, 2048		; 00000800H
  002ca	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  002cf	e9 fc 00 00 00	 jmp	 $LN36@draw_havoc
$LN23@draw_havoc:

; 198  : 		}
; 199  : 		else if (timer < (ONE_SECOND * 11.0))

  002d4	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  002dc	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4026000000000000
  002e4	66 0f 2f c8	 comisd	 xmm1, xmm0
  002e8	76 12		 jbe	 SHORT $LN25@draw_havoc

; 200  : 		{
; 201  : 			havoc_lamps.weapons_management_high_explosive_cannon_green = 1;

  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  002ef	83 c8 40	 or	 eax, 64			; 00000040H
  002f2	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  002f7	e9 d4 00 00 00	 jmp	 $LN36@draw_havoc
$LN25@draw_havoc:

; 202  : 		}
; 203  : 		else if (timer < (ONE_SECOND * 12.0))

  002fc	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00304	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4028000000000000
  0030c	66 0f 2f c8	 comisd	 xmm1, xmm0
  00310	76 14		 jbe	 SHORT $LN27@draw_havoc

; 204  : 		{
; 205  : 			havoc_lamps.weapons_management_high_explosive_cannon_red = 1;

  00312	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00317	0d 00 10 00 00	 or	 eax, 4096		; 00001000H
  0031c	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00321	e9 aa 00 00 00	 jmp	 $LN36@draw_havoc
$LN27@draw_havoc:

; 206  : 		}
; 207  : 		else if (timer < (ONE_SECOND * 13.0))

  00326	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0032e	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402a000000000000
  00336	66 0f 2f c8	 comisd	 xmm1, xmm0
  0033a	76 14		 jbe	 SHORT $LN29@draw_havoc

; 208  : 		{
; 209  : 			havoc_lamps.weapons_management_chaff_green = 1;

  0033c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00341	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00346	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0034b	e9 80 00 00 00	 jmp	 $LN36@draw_havoc
$LN29@draw_havoc:

; 210  : 		}
; 211  : 		else if (timer < (ONE_SECOND * 14.0))

  00350	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  00358	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402c000000000000
  00360	66 0f 2f c8	 comisd	 xmm1, xmm0
  00364	76 11		 jbe	 SHORT $LN31@draw_havoc

; 212  : 		{
; 213  : 			havoc_lamps.weapons_management_chaff_red = 1;

  00366	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0036b	0d 00 80 00 00	 or	 eax, 32768		; 00008000H
  00370	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  00375	eb 59		 jmp	 SHORT $LN36@draw_havoc
$LN31@draw_havoc:

; 214  : 		}
; 215  : 		else if (timer < (ONE_SECOND * 15.0))

  00377	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  0037f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@402e000000000000
  00387	66 0f 2f c8	 comisd	 xmm1, xmm0
  0038b	76 11		 jbe	 SHORT $LN33@draw_havoc

; 216  : 		{
; 217  : 			havoc_lamps.weapons_management_flare_green = 1;

  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00392	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00397	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax
  0039c	eb 32		 jmp	 SHORT $LN36@draw_havoc
$LN33@draw_havoc:

; 218  : 		}
; 219  : 		else if (timer < (ONE_SECOND * 16.0))

  0039e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA
  003a6	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4030000000000000
  003ae	66 0f 2f c8	 comisd	 xmm1, xmm0
  003b2	76 11		 jbe	 SHORT $LN35@draw_havoc

; 220  : 		{
; 221  : 			havoc_lamps.weapons_management_flare_red = 1;

  003b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  003b9	0d 00 00 01 00	 or	 eax, 65536		; 00010000H
  003be	a3 00 00 00 00	 mov	 DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A, eax

; 222  : 		}
; 223  : 		else

  003c3	eb 0b		 jmp	 SHORT $LN36@draw_havoc
$LN35@draw_havoc:

; 224  : 		{
; 225  : 			timer = 0.0;

  003c5	0f 57 c0	 xorps	 xmm0, xmm0
  003c8	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?timer@?4??draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z@4MA, xmm0
$LN36@draw_havoc:

; 226  : 		}
; 227  : 	}
; 228  : 
; 229  : 	switch (panel)

  003d0	8b 45 08	 mov	 eax, DWORD PTR _panel$[ebp]
  003d3	89 45 b4	 mov	 DWORD PTR tv170[ebp], eax
  003d6	8b 4d b4	 mov	 ecx, DWORD PTR tv170[ebp]
  003d9	83 e9 10	 sub	 ecx, 16			; 00000010H
  003dc	89 4d b4	 mov	 DWORD PTR tv170[ebp], ecx
  003df	83 7d b4 08	 cmp	 DWORD PTR tv170[ebp], 8
  003e3	0f 87 98 17 00
	00		 ja	 $LN98@draw_havoc
  003e9	8b 55 b4	 mov	 edx, DWORD PTR tv170[ebp]
  003ec	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN100@draw_havoc[edx*4]
$LN37@draw_havoc:

; 230  : 	{
; 231  : 		////////////////////////////////////////
; 232  : 		case COCKPIT_PANEL_LEVEL_LEFT30:
; 233  : 		////////////////////////////////////////
; 234  : 		{
; 235  : 			#define X_ORG (248)
; 236  : 			#define Y_ORG (412)
; 237  : 
; 238  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_green				, X_ORG +   2, Y_ORG +  65,   3, 320,   7,   3, 250);	// (2% alpha)

  003f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  003f8	c1 e8 02	 shr	 eax, 2
  003fb	83 e0 01	 and	 eax, 1
  003fe	74 5f		 je	 SHORT $LN38@draw_havoc
  00400	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00405	05 fa 00 00 00	 add	 eax, 250		; 000000faH
  0040a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0040f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00414	05 dd 01 00 00	 add	 eax, 477		; 000001ddH
  00419	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0041e	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 3
  00428	c7 05 0c 00 00
	00 40 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 320 ; 00000140H
  00432	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  0043c	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  00446	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  0044d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00452	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00455	50		 push	 eax
  00456	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00459	51		 push	 ecx
  0045a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN38@draw_havoc:

; 239  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_green				, X_ORG +  17, Y_ORG +  48,  18, 303,  30,  20, 247);	// (3% alpha)

  0045f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00464	c1 e8 03	 shr	 eax, 3
  00467	83 e0 01	 and	 eax, 1
  0046a	74 5f		 je	 SHORT $LN39@draw_havoc
  0046c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00471	05 09 01 00 00	 add	 eax, 265		; 00000109H
  00476	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0047b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00480	05 cc 01 00 00	 add	 eax, 460		; 000001ccH
  00485	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0048a	c7 05 08 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 18 ; 00000012H
  00494	c7 05 0c 00 00
	00 2f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 303 ; 0000012fH
  0049e	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  004a8	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  004b2	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  004b9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  004be	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  004c1	50		 push	 eax
  004c2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  004c5	51		 push	 ecx
  004c6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN39@draw_havoc:

; 240  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_green				, X_ORG +  53, Y_ORG +  32,  54, 287,  31,  23, 245);	// (4% alpha)

  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  004d0	c1 e8 04	 shr	 eax, 4
  004d3	83 e0 01	 and	 eax, 1
  004d6	74 5f		 je	 SHORT $LN40@draw_havoc
  004d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  004dd	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  004e2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  004e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  004ec	05 bc 01 00 00	 add	 eax, 444		; 000001bcH
  004f1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  004f6	c7 05 08 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 54 ; 00000036H
  00500	c7 05 0c 00 00
	00 1f 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 287 ; 0000011fH
  0050a	c7 05 10 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 31 ; 0000001fH
  00514	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  0051e	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  00525	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0052a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0052d	50		 push	 eax
  0052e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00531	51		 push	 ecx
  00532	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN40@draw_havoc:

; 241  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_green	, X_ORG +  85, Y_ORG +  26,  86, 281,  23,  30, 242);	// (5% alpha)

  00537	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0053c	c1 e8 05	 shr	 eax, 5
  0053f	83 e0 01	 and	 eax, 1
  00542	74 5f		 je	 SHORT $LN41@draw_havoc
  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00549	05 4d 01 00 00	 add	 eax, 333		; 0000014dH
  0054e	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00553	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00558	05 b6 01 00 00	 add	 eax, 438		; 000001b6H
  0055d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00562	c7 05 08 00 00
	00 56 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 86 ; 00000056H
  0056c	c7 05 0c 00 00
	00 19 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 281 ; 00000119H
  00576	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  00580	c7 05 14 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 30 ; 0000001eH
  0058a	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  00591	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00596	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00599	50		 push	 eax
  0059a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0059d	51		 push	 ecx
  0059e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN41@draw_havoc:

; 242  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_green	, X_ORG +  91, Y_ORG +   1,  92, 256,  21,  29, 240);	// (6% alpha)

  005a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  005a8	c1 e8 06	 shr	 eax, 6
  005ab	83 e0 01	 and	 eax, 1
  005ae	74 5f		 je	 SHORT $LN42@draw_havoc
  005b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  005b5	05 53 01 00 00	 add	 eax, 339		; 00000153H
  005ba	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  005bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  005c4	05 9d 01 00 00	 add	 eax, 413		; 0000019dH
  005c9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  005ce	c7 05 08 00 00
	00 5c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 92 ; 0000005cH
  005d8	c7 05 0c 00 00
	00 00 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 256 ; 00000100H
  005e2	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  005ec	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  005f6	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  005fd	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00602	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00605	50		 push	 eax
  00606	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00609	51		 push	 ecx
  0060a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN42@draw_havoc:

; 243  : 
; 244  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_red				, X_ORG +   2, Y_ORG +  65,   3, 389,   7,   3, 250);	// (2% alpha)

  0060f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00614	c1 e8 08	 shr	 eax, 8
  00617	83 e0 01	 and	 eax, 1
  0061a	74 5f		 je	 SHORT $LN43@draw_havoc
  0061c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00621	05 fa 00 00 00	 add	 eax, 250		; 000000faH
  00626	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0062b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00630	05 dd 01 00 00	 add	 eax, 477		; 000001ddH
  00635	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0063a	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 3
  00644	c7 05 0c 00 00
	00 85 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 389 ; 00000185H
  0064e	c7 05 10 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 7
  00658	c7 05 14 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 3
  00662	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  00669	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0066e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00671	50		 push	 eax
  00672	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00675	51		 push	 ecx
  00676	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN43@draw_havoc:

; 245  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_red				, X_ORG +  17, Y_ORG +  48,  18, 372,  30,  20, 247);	// (3% alpha)

  0067b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00680	c1 e8 09	 shr	 eax, 9
  00683	83 e0 01	 and	 eax, 1
  00686	74 5f		 je	 SHORT $LN44@draw_havoc
  00688	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0068d	05 09 01 00 00	 add	 eax, 265		; 00000109H
  00692	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00697	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0069c	05 cc 01 00 00	 add	 eax, 460		; 000001ccH
  006a1	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  006a6	c7 05 08 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 18 ; 00000012H
  006b0	c7 05 0c 00 00
	00 74 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 372 ; 00000174H
  006ba	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  006c4	c7 05 14 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 20 ; 00000014H
  006ce	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  006d5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  006da	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  006dd	50		 push	 eax
  006de	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  006e1	51		 push	 ecx
  006e2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN44@draw_havoc:

; 246  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_red				, X_ORG +  53, Y_ORG +  32,  54, 356,  31,  23, 245);	// (4% alpha)

  006e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  006ec	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  006ef	83 e0 01	 and	 eax, 1
  006f2	74 5f		 je	 SHORT $LN45@draw_havoc
  006f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  006f9	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  006fe	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00703	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00708	05 bc 01 00 00	 add	 eax, 444		; 000001bcH
  0070d	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00712	c7 05 08 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 54 ; 00000036H
  0071c	c7 05 0c 00 00
	00 64 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 356 ; 00000164H
  00726	c7 05 10 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 31 ; 0000001fH
  00730	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  0073a	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  00741	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00746	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00749	50		 push	 eax
  0074a	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0074d	51		 push	 ecx
  0074e	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN45@draw_havoc:

; 247  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_red		, X_ORG +  85, Y_ORG +  26,  86, 350,  23,  30, 242);	// (5% alpha)

  00753	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00758	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  0075b	83 e0 01	 and	 eax, 1
  0075e	74 5f		 je	 SHORT $LN46@draw_havoc
  00760	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00765	05 4d 01 00 00	 add	 eax, 333		; 0000014dH
  0076a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00774	05 b6 01 00 00	 add	 eax, 438		; 000001b6H
  00779	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0077e	c7 05 08 00 00
	00 56 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 86 ; 00000056H
  00788	c7 05 0c 00 00
	00 5e 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 350 ; 0000015eH
  00792	c7 05 10 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 23 ; 00000017H
  0079c	c7 05 14 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 30 ; 0000001eH
  007a6	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  007ad	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  007b2	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  007b5	50		 push	 eax
  007b6	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  007b9	51		 push	 ecx
  007ba	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN46@draw_havoc:

; 248  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_red		, X_ORG +  91, Y_ORG +   1,  92, 325,  21,  29, 240);	// (6% alpha)

  007bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  007c4	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  007c7	83 e0 01	 and	 eax, 1
  007ca	74 5f		 je	 SHORT $LN47@draw_havoc
  007cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  007d1	05 53 01 00 00	 add	 eax, 339		; 00000153H
  007d6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  007db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  007e0	05 9d 01 00 00	 add	 eax, 413		; 0000019dH
  007e5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  007ea	c7 05 08 00 00
	00 5c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 92 ; 0000005cH
  007f4	c7 05 0c 00 00
	00 45 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 325 ; 00000145H
  007fe	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  00808	c7 05 14 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 29 ; 0000001dH
  00812	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  00819	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0081e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00821	50		 push	 eax
  00822	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00825	51		 push	 ecx
  00826	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN47@draw_havoc:

; 249  : 
; 250  : 			#undef X_ORG
; 251  : 			#undef Y_ORG
; 252  : 
; 253  : 			#define X_ORG (377)
; 254  : 			#define Y_ORG (470)
; 255  : 
; 256  : 			draw_lamp (havoc_lamps.weapons_management_chaff_green							, X_ORG +   2, Y_ORG +   2, 488,  68,  21,   8,  51);	// (80% alpha)

  0082b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00830	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00833	83 e0 01	 and	 eax, 1
  00836	74 5f		 je	 SHORT $LN48@draw_havoc
  00838	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0083d	05 7b 01 00 00	 add	 eax, 379		; 0000017bH
  00842	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00847	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0084c	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  00851	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00856	c7 05 08 00 00
	00 e8 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 488 ; 000001e8H
  00860	c7 05 0c 00 00
	00 44 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 68 ; 00000044H
  0086a	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  00874	c7 05 14 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 8
  0087e	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  00885	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0088a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0088d	50		 push	 eax
  0088e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00891	51		 push	 ecx
  00892	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN48@draw_havoc:

; 257  : 			draw_lamp (havoc_lamps.weapons_management_flare_green							, X_ORG +  22, Y_ORG +   6, 508,  72,  18,   4,  48);	// (81% alpha)

  00897	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0089c	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  0089f	83 e0 01	 and	 eax, 1
  008a2	74 5f		 je	 SHORT $LN49@draw_havoc
  008a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  008a9	05 8f 01 00 00	 add	 eax, 399		; 0000018fH
  008ae	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  008b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  008b8	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  008bd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  008c2	c7 05 08 00 00
	00 fc 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 508 ; 000001fcH
  008cc	c7 05 0c 00 00
	00 48 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 72 ; 00000048H
  008d6	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  008e0	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  008ea	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  008f1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  008f6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  008f9	50		 push	 eax
  008fa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  008fd	51		 push	 ecx
  008fe	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN49@draw_havoc:

; 258  : 
; 259  : 			draw_lamp (havoc_lamps.weapons_management_chaff_red							, X_ORG +   2, Y_ORG +   2, 488,  57,  21,   8,  51);	// (80% alpha)

  00903	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00908	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  0090b	83 e0 01	 and	 eax, 1
  0090e	74 5f		 je	 SHORT $LN50@draw_havoc
  00910	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00915	05 7b 01 00 00	 add	 eax, 379		; 0000017bH
  0091a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0091f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00924	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  00929	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0092e	c7 05 08 00 00
	00 e8 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 488 ; 000001e8H
  00938	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00942	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  0094c	c7 05 14 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 8
  00956	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  0095d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00962	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00965	50		 push	 eax
  00966	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00969	51		 push	 ecx
  0096a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN50@draw_havoc:

; 260  : 			draw_lamp (havoc_lamps.weapons_management_flare_red							, X_ORG +  22, Y_ORG +   6, 508,  61,  18,   4,  48);	// (81% alpha)

  0096f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00974	c1 e8 10	 shr	 eax, 16			; 00000010H
  00977	83 e0 01	 and	 eax, 1
  0097a	74 5f		 je	 SHORT $LN51@draw_havoc
  0097c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00981	05 8f 01 00 00	 add	 eax, 399		; 0000018fH
  00986	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0098b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00990	05 dc 01 00 00	 add	 eax, 476		; 000001dcH
  00995	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0099a	c7 05 08 00 00
	00 fc 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 508 ; 000001fcH
  009a4	c7 05 0c 00 00
	00 3d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 61 ; 0000003dH
  009ae	c7 05 10 00 00
	00 12 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 18 ; 00000012H
  009b8	c7 05 14 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 4
  009c2	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  009c9	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  009ce	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  009d1	50		 push	 eax
  009d2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  009d5	51		 push	 ecx
  009d6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN51@draw_havoc:

; 261  : 
; 262  : 			#undef X_ORG
; 263  : 			#undef Y_ORG
; 264  : 
; 265  : 			break;

  009db	e9 af 11 00 00	 jmp	 $LN2@draw_havoc
$LN52@draw_havoc:

; 266  : 		}
; 267  : 		////////////////////////////////////////
; 268  : 		case COCKPIT_PANEL_LEVEL_AHEAD:
; 269  : 		////////////////////////////////////////
; 270  : 		{
; 271  : 			#define X_ORG (0)
; 272  : 			#define Y_ORG (434)
; 273  : 
; 274  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_green				, X_ORG +   0, Y_ORG +  40, 160, 135,  11,   6, 245);	// (4% alpha)

  009e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  009e5	c1 e8 04	 shr	 eax, 4
  009e8	83 e0 01	 and	 eax, 1
  009eb	74 5a		 je	 SHORT $LN53@draw_havoc
  009ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  009f2	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  009f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  009fc	05 da 01 00 00	 add	 eax, 474		; 000001daH
  00a01	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a06	c7 05 08 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 160 ; 000000a0H
  00a10	c7 05 0c 00 00
	00 87 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 135 ; 00000087H
  00a1a	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  00a24	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00a2e	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  00a35	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00a3a	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00a3d	50		 push	 eax
  00a3e	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00a41	51		 push	 ecx
  00a42	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN53@draw_havoc:

; 275  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_green	, X_ORG +  18, Y_ORG +  29, 178, 124,  25,  17, 242);	// (5% alpha)

  00a47	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00a4c	c1 e8 05	 shr	 eax, 5
  00a4f	83 e0 01	 and	 eax, 1
  00a52	74 5d		 je	 SHORT $LN54@draw_havoc
  00a54	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00a59	83 c0 12	 add	 eax, 18			; 00000012H
  00a5c	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00a61	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00a66	05 cf 01 00 00	 add	 eax, 463		; 000001cfH
  00a6b	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00a70	c7 05 08 00 00
	00 b2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 178 ; 000000b2H
  00a7a	c7 05 0c 00 00
	00 7c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 124 ; 0000007cH
  00a84	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00a8e	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00a98	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  00a9f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00aa4	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00aa7	50		 push	 eax
  00aa8	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00aab	51		 push	 ecx
  00aac	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN54@draw_havoc:

; 276  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_green	, X_ORG +  24, Y_ORG +   0, 184,  95,  27,  32, 240);	// (6% alpha)

  00ab1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ab6	c1 e8 06	 shr	 eax, 6
  00ab9	83 e0 01	 and	 eax, 1
  00abc	74 5d		 je	 SHORT $LN55@draw_havoc
  00abe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ac3	83 c0 18	 add	 eax, 24			; 00000018H
  00ac6	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00acb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ad0	05 b2 01 00 00	 add	 eax, 434		; 000001b2H
  00ad5	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ada	c7 05 08 00 00
	00 b8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 184 ; 000000b8H
  00ae4	c7 05 0c 00 00
	00 5f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 95 ; 0000005fH
  00aee	c7 05 10 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 27 ; 0000001bH
  00af8	c7 05 14 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 32 ; 00000020H
  00b02	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  00b09	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b0e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b11	50		 push	 eax
  00b12	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b15	51		 push	 ecx
  00b16	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN55@draw_havoc:

; 277  : 
; 278  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_red				, X_ORG +   0, Y_ORG +  40, 160, 182,  11,   6, 245);	// (4% alpha)

  00b1b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00b20	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00b23	83 e0 01	 and	 eax, 1
  00b26	74 5a		 je	 SHORT $LN56@draw_havoc
  00b28	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b2d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b32	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00b37	05 da 01 00 00	 add	 eax, 474		; 000001daH
  00b3c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00b41	c7 05 08 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 160 ; 000000a0H
  00b4b	c7 05 0c 00 00
	00 b6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 182 ; 000000b6H
  00b55	c7 05 10 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 11 ; 0000000bH
  00b5f	c7 05 14 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 6
  00b69	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  00b70	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00b75	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00b78	50		 push	 eax
  00b79	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00b7c	51		 push	 ecx
  00b7d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN56@draw_havoc:

; 279  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_red		, X_ORG +  18, Y_ORG +  29, 178, 171,  25,  17, 242);	// (5% alpha)

  00b82	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00b87	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00b8a	83 e0 01	 and	 eax, 1
  00b8d	74 5d		 je	 SHORT $LN57@draw_havoc
  00b8f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00b94	83 c0 12	 add	 eax, 18			; 00000012H
  00b97	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00b9c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ba1	05 cf 01 00 00	 add	 eax, 463		; 000001cfH
  00ba6	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00bab	c7 05 08 00 00
	00 b2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 178 ; 000000b2H
  00bb5	c7 05 0c 00 00
	00 ab 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 171 ; 000000abH
  00bbf	c7 05 10 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 25 ; 00000019H
  00bc9	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00bd3	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  00bda	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00bdf	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00be2	50		 push	 eax
  00be3	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00be6	51		 push	 ecx
  00be7	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN57@draw_havoc:

; 280  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_red		, X_ORG +  24, Y_ORG +   0, 184, 142,  27,  32, 240);	// (6% alpha)

  00bec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00bf1	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  00bf4	83 e0 01	 and	 eax, 1
  00bf7	74 5d		 je	 SHORT $LN58@draw_havoc
  00bf9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00bfe	83 c0 18	 add	 eax, 24			; 00000018H
  00c01	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c06	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c0b	05 b2 01 00 00	 add	 eax, 434		; 000001b2H
  00c10	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c15	c7 05 08 00 00
	00 b8 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 184 ; 000000b8H
  00c1f	c7 05 0c 00 00
	00 8e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 142 ; 0000008eH
  00c29	c7 05 10 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 27 ; 0000001bH
  00c33	c7 05 14 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 32 ; 00000020H
  00c3d	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  00c44	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00c49	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00c4c	50		 push	 eax
  00c4d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00c50	51		 push	 ecx
  00c51	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN58@draw_havoc:

; 281  : 
; 282  : 			#undef X_ORG
; 283  : 			#undef Y_ORG
; 284  : 
; 285  : 			break;

  00c56	e9 34 0f 00 00	 jmp	 $LN2@draw_havoc
$LN59@draw_havoc:

; 286  : 		}
; 287  : 		////////////////////////////////////////
; 288  : 		case COCKPIT_PANEL_DOWN20_LEFT60:
; 289  : 		////////////////////////////////////////
; 290  : 		{
; 291  : 			#define X_ORG (471)
; 292  : 			#define Y_ORG (268)
; 293  : 
; 294  : 			draw_lamp (havoc_lamps.weapons_management_lh_outer_pylon_green				, X_ORG +   1, Y_ORG +  25, 161,  26,  30,  17, 252);	// (1% alpha)

  00c5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00c60	d1 e8		 shr	 eax, 1
  00c62	83 e0 01	 and	 eax, 1
  00c65	74 5f		 je	 SHORT $LN60@draw_havoc
  00c67	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00c6c	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  00c71	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00c76	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00c7b	05 25 01 00 00	 add	 eax, 293		; 00000125H
  00c80	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00c85	c7 05 08 00 00
	00 a1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 161 ; 000000a1H
  00c8f	c7 05 0c 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 26 ; 0000001aH
  00c99	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  00ca3	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00cad	c6 05 18 00 00
	00 fc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 252 ; 000000fcH
  00cb4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00cb9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00cbc	50		 push	 eax
  00cbd	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00cc0	51		 push	 ecx
  00cc1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN60@draw_havoc:

; 295  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_green				, X_ORG +  39, Y_ORG +  18, 199,  19,  30,  17, 250);	// (2% alpha)

  00cc6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ccb	c1 e8 02	 shr	 eax, 2
  00cce	83 e0 01	 and	 eax, 1
  00cd1	74 5f		 je	 SHORT $LN61@draw_havoc
  00cd3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00cd8	05 fe 01 00 00	 add	 eax, 510		; 000001feH
  00cdd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00ce2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00ce7	05 1e 01 00 00	 add	 eax, 286		; 0000011eH
  00cec	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00cf1	c7 05 08 00 00
	00 c7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 199 ; 000000c7H
  00cfb	c7 05 0c 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 19 ; 00000013H
  00d05	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  00d0f	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00d19	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  00d20	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d25	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d28	50		 push	 eax
  00d29	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d2c	51		 push	 ecx
  00d2d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN61@draw_havoc:

; 296  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_green				, X_ORG +  78, Y_ORG +   9, 238,  10,  32,  19, 247);	// (3% alpha)

  00d32	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00d37	c1 e8 03	 shr	 eax, 3
  00d3a	83 e0 01	 and	 eax, 1
  00d3d	74 5f		 je	 SHORT $LN62@draw_havoc
  00d3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00d44	05 25 02 00 00	 add	 eax, 549		; 00000225H
  00d49	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00d4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00d53	05 15 01 00 00	 add	 eax, 277		; 00000115H
  00d58	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00d5d	c7 05 08 00 00
	00 ee 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 238 ; 000000eeH
  00d67	c7 05 0c 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 10 ; 0000000aH
  00d71	c7 05 10 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 32 ; 00000020H
  00d7b	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  00d85	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  00d8c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00d91	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00d94	50		 push	 eax
  00d95	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00d98	51		 push	 ecx
  00d99	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN62@draw_havoc:

; 297  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_green				, X_ORG + 120, Y_ORG +   1, 280,   2,  35,  19, 245);	// (4% alpha)

  00d9e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00da3	c1 e8 04	 shr	 eax, 4
  00da6	83 e0 01	 and	 eax, 1
  00da9	74 5f		 je	 SHORT $LN63@draw_havoc
  00dab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00db0	05 4f 02 00 00	 add	 eax, 591		; 0000024fH
  00db5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00dba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00dbf	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  00dc4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00dc9	c7 05 08 00 00
	00 18 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 280 ; 00000118H
  00dd3	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00ddd	c7 05 10 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 35 ; 00000023H
  00de7	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  00df1	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  00df8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00dfd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e00	50		 push	 eax
  00e01	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e04	51		 push	 ecx
  00e05	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN63@draw_havoc:

; 298  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_green	, X_ORG + 161, Y_ORG +   1, 321,   2,   8,  28, 242);	// (5% alpha)

  00e0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00e0f	c1 e8 05	 shr	 eax, 5
  00e12	83 e0 01	 and	 eax, 1
  00e15	74 5f		 je	 SHORT $LN64@draw_havoc
  00e17	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e1c	05 78 02 00 00	 add	 eax, 632		; 00000278H
  00e21	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e26	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e2b	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  00e30	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00e35	c7 05 08 00 00
	00 41 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 321 ; 00000141H
  00e3f	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 2
  00e49	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  00e53	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  00e5d	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  00e64	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00e69	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00e6c	50		 push	 eax
  00e6d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00e70	51		 push	 ecx
  00e71	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN64@draw_havoc:

; 299  : 
; 300  : 			draw_lamp (havoc_lamps.weapons_management_lh_outer_pylon_red				, X_ORG +   1, Y_ORG +  25, 161,  73,  30,  17, 252);	// (1% alpha)

  00e76	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00e7b	c1 e8 07	 shr	 eax, 7
  00e7e	83 e0 01	 and	 eax, 1
  00e81	74 5f		 je	 SHORT $LN65@draw_havoc
  00e83	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00e88	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  00e8d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00e92	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00e97	05 25 01 00 00	 add	 eax, 293		; 00000125H
  00e9c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00ea1	c7 05 08 00 00
	00 a1 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 161 ; 000000a1H
  00eab	c7 05 0c 00 00
	00 49 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 73 ; 00000049H
  00eb5	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  00ebf	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00ec9	c6 05 18 00 00
	00 fc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 252 ; 000000fcH
  00ed0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00ed5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00ed8	50		 push	 eax
  00ed9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00edc	51		 push	 ecx
  00edd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN65@draw_havoc:

; 301  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_red				, X_ORG +  39, Y_ORG +  18, 199,  66,  30,  17, 250);	// (2% alpha)

  00ee2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00ee7	c1 e8 08	 shr	 eax, 8
  00eea	83 e0 01	 and	 eax, 1
  00eed	74 5f		 je	 SHORT $LN66@draw_havoc
  00eef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00ef4	05 fe 01 00 00	 add	 eax, 510		; 000001feH
  00ef9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00efe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f03	05 1e 01 00 00	 add	 eax, 286		; 0000011eH
  00f08	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f0d	c7 05 08 00 00
	00 c7 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 199 ; 000000c7H
  00f17	c7 05 0c 00 00
	00 42 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 66 ; 00000042H
  00f21	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  00f2b	c7 05 14 00 00
	00 11 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 17 ; 00000011H
  00f35	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  00f3c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00f41	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00f44	50		 push	 eax
  00f45	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00f48	51		 push	 ecx
  00f49	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN66@draw_havoc:

; 302  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_red				, X_ORG +  78, Y_ORG +   9, 238,  57,  32,  19, 247);	// (3% alpha)

  00f4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00f53	c1 e8 09	 shr	 eax, 9
  00f56	83 e0 01	 and	 eax, 1
  00f59	74 5f		 je	 SHORT $LN67@draw_havoc
  00f5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00f60	05 25 02 00 00	 add	 eax, 549		; 00000225H
  00f65	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00f6a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00f6f	05 15 01 00 00	 add	 eax, 277		; 00000115H
  00f74	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00f79	c7 05 08 00 00
	00 ee 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 238 ; 000000eeH
  00f83	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  00f8d	c7 05 10 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 32 ; 00000020H
  00f97	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  00fa1	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  00fa8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  00fad	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  00fb0	50		 push	 eax
  00fb1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  00fb4	51		 push	 ecx
  00fb5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN67@draw_havoc:

; 303  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_red				, X_ORG + 120, Y_ORG +   1, 280,  49,  35,  19, 245);	// (4% alpha)

  00fba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  00fbf	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00fc2	83 e0 01	 and	 eax, 1
  00fc5	74 5f		 je	 SHORT $LN68@draw_havoc
  00fc7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  00fcc	05 4f 02 00 00	 add	 eax, 591		; 0000024fH
  00fd1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  00fd6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  00fdb	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  00fe0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  00fe5	c7 05 08 00 00
	00 18 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 280 ; 00000118H
  00fef	c7 05 0c 00 00
	00 31 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 49 ; 00000031H
  00ff9	c7 05 10 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 35 ; 00000023H
  01003	c7 05 14 00 00
	00 13 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 19 ; 00000013H
  0100d	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  01014	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01019	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0101c	50		 push	 eax
  0101d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01020	51		 push	 ecx
  01021	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN68@draw_havoc:

; 304  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_red		, X_ORG + 161, Y_ORG +   1, 321,  49,   8,  28, 242);	// (5% alpha)

  01026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0102b	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  0102e	83 e0 01	 and	 eax, 1
  01031	74 5f		 je	 SHORT $LN69@draw_havoc
  01033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01038	05 78 02 00 00	 add	 eax, 632		; 00000278H
  0103d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01047	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  0104c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01051	c7 05 08 00 00
	00 41 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 321 ; 00000141H
  0105b	c7 05 0c 00 00
	00 31 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 49 ; 00000031H
  01065	c7 05 10 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 8
  0106f	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  01079	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  01080	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01085	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01088	50		 push	 eax
  01089	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0108c	51		 push	 ecx
  0108d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN69@draw_havoc:

; 305  : 
; 306  : 			#undef X_ORG
; 307  : 			#undef Y_ORG
; 308  : 
; 309  : 			break;

  01092	e9 f8 0a 00 00	 jmp	 $LN2@draw_havoc
$LN70@draw_havoc:

; 310  : 		}
; 311  : 		////////////////////////////////////////
; 312  : 		case COCKPIT_PANEL_DOWN20_LEFT30:
; 313  : 		////////////////////////////////////////
; 314  : 		{
; 315  : 			#define X_ORG (203)
; 316  : 			#define Y_ORG (213)
; 317  : 
; 318  : 			draw_lamp (havoc_lamps.weapons_management_lh_outer_pylon_green				, X_ORG +   0, Y_ORG +  70,   1,  71,  28,  23, 252);	// (1% alpha)

  01097	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0109c	d1 e8		 shr	 eax, 1
  0109e	83 e0 01	 and	 eax, 1
  010a1	74 5f		 je	 SHORT $LN71@draw_havoc
  010a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  010a8	05 cb 00 00 00	 add	 eax, 203		; 000000cbH
  010ad	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  010b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  010b7	05 1b 01 00 00	 add	 eax, 283		; 0000011bH
  010bc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  010c1	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 1
  010cb	c7 05 0c 00 00
	00 47 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 71 ; 00000047H
  010d5	c7 05 10 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 28 ; 0000001cH
  010df	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  010e9	c6 05 18 00 00
	00 fc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 252 ; 000000fcH
  010f0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  010f5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  010f8	50		 push	 eax
  010f9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  010fc	51		 push	 ecx
  010fd	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN71@draw_havoc:

; 319  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_green				, X_ORG +  32, Y_ORG +  56,  33,  57,  29,  22, 250);	// (2% alpha)

  01102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01107	c1 e8 02	 shr	 eax, 2
  0110a	83 e0 01	 and	 eax, 1
  0110d	74 5f		 je	 SHORT $LN72@draw_havoc
  0110f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01114	05 eb 00 00 00	 add	 eax, 235		; 000000ebH
  01119	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0111e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01123	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  01128	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0112d	c7 05 08 00 00
	00 21 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 33 ; 00000021H
  01137	c7 05 0c 00 00
	00 39 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 57 ; 00000039H
  01141	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  0114b	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  01155	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  0115c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01161	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01164	50		 push	 eax
  01165	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01168	51		 push	 ecx
  01169	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN72@draw_havoc:

; 320  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_green				, X_ORG +  65, Y_ORG +  41,  66,  42,  29,  23, 247);	// (3% alpha)

  0116e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01173	c1 e8 03	 shr	 eax, 3
  01176	83 e0 01	 and	 eax, 1
  01179	74 5f		 je	 SHORT $LN73@draw_havoc
  0117b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01180	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  01185	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0118a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0118f	05 fe 00 00 00	 add	 eax, 254		; 000000feH
  01194	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01199	c7 05 08 00 00
	00 42 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 66 ; 00000042H
  011a3	c7 05 0c 00 00
	00 2a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 42 ; 0000002aH
  011ad	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  011b7	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  011c1	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  011c8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  011cd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  011d0	50		 push	 eax
  011d1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  011d4	51		 push	 ecx
  011d5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN73@draw_havoc:

; 321  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_green				, X_ORG +  98, Y_ORG +  27,  99,  28,  30,  22, 245);	// (4% alpha)

  011da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  011df	c1 e8 04	 shr	 eax, 4
  011e2	83 e0 01	 and	 eax, 1
  011e5	74 5f		 je	 SHORT $LN74@draw_havoc
  011e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  011ec	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  011f1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  011f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  011fb	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  01200	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01205	c7 05 08 00 00
	00 63 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 99 ; 00000063H
  0120f	c7 05 0c 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 28 ; 0000001cH
  01219	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  01223	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  0122d	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  01234	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01239	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0123c	50		 push	 eax
  0123d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01240	51		 push	 ecx
  01241	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN74@draw_havoc:

; 322  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_green	, X_ORG + 129, Y_ORG +  23, 130,  24,  21,  26, 242);	// (5% alpha)

  01246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0124b	c1 e8 05	 shr	 eax, 5
  0124e	83 e0 01	 and	 eax, 1
  01251	74 5f		 je	 SHORT $LN75@draw_havoc
  01253	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01258	05 4c 01 00 00	 add	 eax, 332		; 0000014cH
  0125d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01262	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01267	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  0126c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01271	c7 05 08 00 00
	00 82 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 130 ; 00000082H
  0127b	c7 05 0c 00 00
	00 18 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 24 ; 00000018H
  01285	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  0128f	c7 05 14 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 26 ; 0000001aH
  01299	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  012a0	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  012a5	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  012a8	50		 push	 eax
  012a9	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  012ac	51		 push	 ecx
  012ad	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN75@draw_havoc:

; 323  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_green	, X_ORG + 134, Y_ORG +   0, 135,   1,  22,  26, 240);	// (6% alpha)

  012b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  012b7	c1 e8 06	 shr	 eax, 6
  012ba	83 e0 01	 and	 eax, 1
  012bd	74 5f		 je	 SHORT $LN76@draw_havoc
  012bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  012c4	05 51 01 00 00	 add	 eax, 337		; 00000151H
  012c9	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  012ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  012d3	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  012d8	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  012dd	c7 05 08 00 00
	00 87 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 135 ; 00000087H
  012e7	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 1
  012f1	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  012fb	c7 05 14 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 26 ; 0000001aH
  01305	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  0130c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01311	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01314	50		 push	 eax
  01315	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01318	51		 push	 ecx
  01319	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN76@draw_havoc:

; 324  : 
; 325  : 			draw_lamp (havoc_lamps.weapons_management_lh_outer_pylon_red				, X_ORG +   0, Y_ORG +  70,   1, 166,  28,  23, 252);	// (1% alpha)

  0131e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01323	c1 e8 07	 shr	 eax, 7
  01326	83 e0 01	 and	 eax, 1
  01329	74 5f		 je	 SHORT $LN77@draw_havoc
  0132b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01330	05 cb 00 00 00	 add	 eax, 203		; 000000cbH
  01335	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0133a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0133f	05 1b 01 00 00	 add	 eax, 283		; 0000011bH
  01344	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01349	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 1
  01353	c7 05 0c 00 00
	00 a6 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 166 ; 000000a6H
  0135d	c7 05 10 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 28 ; 0000001cH
  01367	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  01371	c6 05 18 00 00
	00 fc		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 252 ; 000000fcH
  01378	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0137d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01380	50		 push	 eax
  01381	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01384	51		 push	 ecx
  01385	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN77@draw_havoc:

; 326  : 			draw_lamp (havoc_lamps.weapons_management_lh_inner_pylon_red				, X_ORG +  32, Y_ORG +  56,  33, 152,  29,  22, 250);	// (2% alpha)

  0138a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0138f	c1 e8 08	 shr	 eax, 8
  01392	83 e0 01	 and	 eax, 1
  01395	74 5f		 je	 SHORT $LN78@draw_havoc
  01397	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0139c	05 eb 00 00 00	 add	 eax, 235		; 000000ebH
  013a1	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  013a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  013ab	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  013b0	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  013b5	c7 05 08 00 00
	00 21 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 33 ; 00000021H
  013bf	c7 05 0c 00 00
	00 98 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 152 ; 00000098H
  013c9	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  013d3	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  013dd	c6 05 18 00 00
	00 fa		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 250 ; 000000faH
  013e4	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  013e9	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  013ec	50		 push	 eax
  013ed	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  013f0	51		 push	 ecx
  013f1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN78@draw_havoc:

; 327  : 			draw_lamp (havoc_lamps.weapons_management_rh_inner_pylon_red				, X_ORG +  65, Y_ORG +  41,  66, 137,  29,  23, 247);	// (3% alpha)

  013f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  013fb	c1 e8 09	 shr	 eax, 9
  013fe	83 e0 01	 and	 eax, 1
  01401	74 5f		 je	 SHORT $LN79@draw_havoc
  01403	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01408	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  0140d	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01412	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01417	05 fe 00 00 00	 add	 eax, 254		; 000000feH
  0141c	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01421	c7 05 08 00 00
	00 42 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 66 ; 00000042H
  0142b	c7 05 0c 00 00
	00 89 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 137 ; 00000089H
  01435	c7 05 10 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 29 ; 0000001dH
  0143f	c7 05 14 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 23 ; 00000017H
  01449	c6 05 18 00 00
	00 f7		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 247 ; 000000f7H
  01450	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01455	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01458	50		 push	 eax
  01459	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0145c	51		 push	 ecx
  0145d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN79@draw_havoc:

; 328  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_red				, X_ORG +  98, Y_ORG +  27,  99, 123,  30,  22, 245);	// (4% alpha)

  01462	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01467	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  0146a	83 e0 01	 and	 eax, 1
  0146d	74 5f		 je	 SHORT $LN80@draw_havoc
  0146f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01474	05 2d 01 00 00	 add	 eax, 301		; 0000012dH
  01479	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0147e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01483	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  01488	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0148d	c7 05 08 00 00
	00 63 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 99 ; 00000063H
  01497	c7 05 0c 00 00
	00 7b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 123 ; 0000007bH
  014a1	c7 05 10 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 30 ; 0000001eH
  014ab	c7 05 14 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 22 ; 00000016H
  014b5	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  014bc	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  014c1	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  014c4	50		 push	 eax
  014c5	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  014c8	51		 push	 ecx
  014c9	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN80@draw_havoc:

; 329  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_red		, X_ORG + 129, Y_ORG +  23, 130, 119,  21,  26, 242);	// (5% alpha)

  014ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  014d3	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  014d6	83 e0 01	 and	 eax, 1
  014d9	74 5f		 je	 SHORT $LN81@draw_havoc
  014db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  014e0	05 4c 01 00 00	 add	 eax, 332		; 0000014cH
  014e5	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  014ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  014ef	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  014f4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  014f9	c7 05 08 00 00
	00 82 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 130 ; 00000082H
  01503	c7 05 0c 00 00
	00 77 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 119 ; 00000077H
  0150d	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  01517	c7 05 14 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 26 ; 0000001aH
  01521	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  01528	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0152d	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01530	50		 push	 eax
  01531	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01534	51		 push	 ecx
  01535	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN81@draw_havoc:

; 330  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_red		, X_ORG + 134, Y_ORG +   0, 135,  96,  22,  26, 240);	// (6% alpha)

  0153a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0153f	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  01542	83 e0 01	 and	 eax, 1
  01545	74 5f		 je	 SHORT $LN82@draw_havoc
  01547	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0154c	05 51 01 00 00	 add	 eax, 337		; 00000151H
  01551	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01556	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0155b	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  01560	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01565	c7 05 08 00 00
	00 87 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 135 ; 00000087H
  0156f	c7 05 0c 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 96 ; 00000060H
  01579	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  01583	c7 05 14 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 26 ; 0000001aH
  0158d	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  01594	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01599	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0159c	50		 push	 eax
  0159d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  015a0	51		 push	 ecx
  015a1	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN82@draw_havoc:

; 331  : 
; 332  : 			#undef X_ORG
; 333  : 			#undef Y_ORG
; 334  : 
; 335  : 			#define X_ORG (372)
; 336  : 			#define Y_ORG (264)
; 337  : 
; 338  : 			draw_lamp (havoc_lamps.weapons_management_chaff_green							, X_ORG +   1, Y_ORG +   1, 533,  76,  21,  14,  51);	// (80% alpha)

  015a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  015ab	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  015ae	83 e0 01	 and	 eax, 1
  015b1	74 5f		 je	 SHORT $LN83@draw_havoc
  015b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  015b8	05 75 01 00 00	 add	 eax, 373		; 00000175H
  015bd	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  015c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  015c7	05 09 01 00 00	 add	 eax, 265		; 00000109H
  015cc	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  015d1	c7 05 08 00 00
	00 15 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 533 ; 00000215H
  015db	c7 05 0c 00 00
	00 4c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 76 ; 0000004cH
  015e5	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  015ef	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  015f9	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  01600	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01605	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01608	50		 push	 eax
  01609	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  0160c	51		 push	 ecx
  0160d	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN83@draw_havoc:

; 339  : 			draw_lamp (havoc_lamps.weapons_management_flare_green							, X_ORG +  20, Y_ORG +   5, 552,  80,  21,  14,  48);	// (81% alpha)

  01612	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01617	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  0161a	83 e0 01	 and	 eax, 1
  0161d	74 5f		 je	 SHORT $LN84@draw_havoc
  0161f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01624	05 88 01 00 00	 add	 eax, 392		; 00000188H
  01629	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0162e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01633	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  01638	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0163d	c7 05 08 00 00
	00 28 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 552 ; 00000228H
  01647	c7 05 0c 00 00
	00 50 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 80 ; 00000050H
  01651	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  0165b	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  01665	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  0166c	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01671	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01674	50		 push	 eax
  01675	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01678	51		 push	 ecx
  01679	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN84@draw_havoc:

; 340  : 
; 341  : 			draw_lamp (havoc_lamps.weapons_management_chaff_red							, X_ORG +   1, Y_ORG +   1, 533,  54,  21,  14,  51);	// (80% alpha)

  0167e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01683	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  01686	83 e0 01	 and	 eax, 1
  01689	74 5f		 je	 SHORT $LN85@draw_havoc
  0168b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01690	05 75 01 00 00	 add	 eax, 373		; 00000175H
  01695	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0169a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0169f	05 09 01 00 00	 add	 eax, 265		; 00000109H
  016a4	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  016a9	c7 05 08 00 00
	00 15 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 533 ; 00000215H
  016b3	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  016bd	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  016c7	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  016d1	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  016d8	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  016dd	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  016e0	50		 push	 eax
  016e1	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  016e4	51		 push	 ecx
  016e5	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN85@draw_havoc:

; 342  : 			draw_lamp (havoc_lamps.weapons_management_flare_red							, X_ORG +  20, Y_ORG +   5, 552,  58,  21,  14,  48);	// (81% alpha)

  016ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  016ef	c1 e8 10	 shr	 eax, 16			; 00000010H
  016f2	83 e0 01	 and	 eax, 1
  016f5	74 5f		 je	 SHORT $LN86@draw_havoc
  016f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  016fc	05 88 01 00 00	 add	 eax, 392		; 00000188H
  01701	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01706	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0170b	05 0d 01 00 00	 add	 eax, 269		; 0000010dH
  01710	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01715	c7 05 08 00 00
	00 28 02 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 552 ; 00000228H
  0171f	c7 05 0c 00 00
	00 3a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 58 ; 0000003aH
  01729	c7 05 10 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 21 ; 00000015H
  01733	c7 05 14 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 14 ; 0000000eH
  0173d	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  01744	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01749	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0174c	50		 push	 eax
  0174d	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01750	51		 push	 ecx
  01751	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN86@draw_havoc:

; 343  : 
; 344  : 			#undef X_ORG
; 345  : 			#undef Y_ORG
; 346  : 
; 347  : 			break;

  01756	e9 34 04 00 00	 jmp	 $LN2@draw_havoc
$LN87@draw_havoc:

; 348  : 		}
; 349  : 		////////////////////////////////////////
; 350  : 		case COCKPIT_PANEL_DOWN20_AHEAD:
; 351  : 		////////////////////////////////////////
; 352  : 		{
; 353  : 			#define X_ORG (4)
; 354  : 			#define Y_ORG (232)
; 355  : 
; 356  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_green				, X_ORG +   0, Y_ORG +  35,   1, 226,  35,  27, 245);	// (4% alpha)

  0175b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01760	c1 e8 04	 shr	 eax, 4
  01763	83 e0 01	 and	 eax, 1
  01766	74 5d		 je	 SHORT $LN88@draw_havoc
  01768	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0176d	83 c0 04	 add	 eax, 4
  01770	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01775	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0177a	05 0b 01 00 00	 add	 eax, 267		; 0000010bH
  0177f	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01784	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 1
  0178e	c7 05 0c 00 00
	00 e2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 226 ; 000000e2H
  01798	c7 05 10 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 35 ; 00000023H
  017a2	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  017ac	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  017b3	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  017b8	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  017bb	50		 push	 eax
  017bc	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  017bf	51		 push	 ecx
  017c0	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN88@draw_havoc:

; 357  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_green	, X_ORG +  36, Y_ORG +  26,  37, 217,  28,  28, 242);	// (5% alpha)

  017c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  017ca	c1 e8 05	 shr	 eax, 5
  017cd	83 e0 01	 and	 eax, 1
  017d0	74 5d		 je	 SHORT $LN89@draw_havoc
  017d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  017d7	83 c0 28	 add	 eax, 40			; 00000028H
  017da	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  017df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  017e4	05 02 01 00 00	 add	 eax, 258		; 00000102H
  017e9	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  017ee	c7 05 08 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 37 ; 00000025H
  017f8	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  01802	c7 05 10 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 28 ; 0000001cH
  0180c	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  01816	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  0181d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01822	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01825	50		 push	 eax
  01826	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01829	51		 push	 ecx
  0182a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN89@draw_havoc:

; 358  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_green	, X_ORG +  39, Y_ORG +   1,  40, 192,  26,  27, 240);	// (6% alpha)

  0182f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01834	c1 e8 06	 shr	 eax, 6
  01837	83 e0 01	 and	 eax, 1
  0183a	74 5d		 je	 SHORT $LN90@draw_havoc
  0183c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01841	83 c0 2b	 add	 eax, 43			; 0000002bH
  01844	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01849	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0184e	05 e9 00 00 00	 add	 eax, 233		; 000000e9H
  01853	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01858	c7 05 08 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 40 ; 00000028H
  01862	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  0186c	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  01876	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  01880	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  01887	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  0188c	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  0188f	50		 push	 eax
  01890	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01893	51		 push	 ecx
  01894	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN90@draw_havoc:

; 359  : 
; 360  : 			draw_lamp (havoc_lamps.weapons_management_rh_outer_pylon_red				, X_ORG +   0, Y_ORG +  35,  67, 226,  35,  27, 245);	// (4% alpha)

  01899	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  0189e	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  018a1	83 e0 01	 and	 eax, 1
  018a4	74 5d		 je	 SHORT $LN91@draw_havoc
  018a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  018ab	83 c0 04	 add	 eax, 4
  018ae	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  018b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  018b8	05 0b 01 00 00	 add	 eax, 267		; 0000010bH
  018bd	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  018c2	c7 05 08 00 00
	00 43 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 67 ; 00000043H
  018cc	c7 05 0c 00 00
	00 e2 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 226 ; 000000e2H
  018d6	c7 05 10 00 00
	00 23 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 35 ; 00000023H
  018e0	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  018ea	c6 05 18 00 00
	00 f5		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 245 ; 000000f5H
  018f1	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  018f6	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  018f9	50		 push	 eax
  018fa	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  018fd	51		 push	 ecx
  018fe	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN91@draw_havoc:

; 361  : 			draw_lamp (havoc_lamps.weapons_management_armour_piercing_cannon_red		, X_ORG +  36, Y_ORG +  26, 103, 217,  28,  28, 242);	// (5% alpha)

  01903	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01908	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  0190b	83 e0 01	 and	 eax, 1
  0190e	74 5d		 je	 SHORT $LN92@draw_havoc
  01910	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01915	83 c0 28	 add	 eax, 40			; 00000028H
  01918	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  0191d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01922	05 02 01 00 00	 add	 eax, 258		; 00000102H
  01927	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  0192c	c7 05 08 00 00
	00 67 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 103 ; 00000067H
  01936	c7 05 0c 00 00
	00 d9 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 217 ; 000000d9H
  01940	c7 05 10 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 28 ; 0000001cH
  0194a	c7 05 14 00 00
	00 1c 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 28 ; 0000001cH
  01954	c6 05 18 00 00
	00 f2		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 242 ; 000000f2H
  0195b	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01960	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01963	50		 push	 eax
  01964	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01967	51		 push	 ecx
  01968	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN92@draw_havoc:

; 362  : 			draw_lamp (havoc_lamps.weapons_management_high_explosive_cannon_red		, X_ORG +  39, Y_ORG +   1, 106, 192,  26,  27, 240);	// (6% alpha)

  0196d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01972	c1 e8 0c	 shr	 eax, 12			; 0000000cH
  01975	83 e0 01	 and	 eax, 1
  01978	74 5d		 je	 SHORT $LN93@draw_havoc
  0197a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  0197f	83 c0 2b	 add	 eax, 43			; 0000002bH
  01982	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01987	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  0198c	05 e9 00 00 00	 add	 eax, 233		; 000000e9H
  01991	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01996	c7 05 08 00 00
	00 6a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 106 ; 0000006aH
  019a0	c7 05 0c 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 192 ; 000000c0H
  019aa	c7 05 10 00 00
	00 1a 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 26 ; 0000001aH
  019b4	c7 05 14 00 00
	00 1b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 27 ; 0000001bH
  019be	c6 05 18 00 00
	00 f0		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 240 ; 000000f0H
  019c5	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  019ca	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  019cd	50		 push	 eax
  019ce	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  019d1	51		 push	 ecx
  019d2	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN93@draw_havoc:

; 363  : 
; 364  : 			#undef X_ORG
; 365  : 			#undef Y_ORG
; 366  : 
; 367  : 			#define X_ORG (91)
; 368  : 			#define Y_ORG (280)
; 369  : 
; 370  : 			draw_lamp (havoc_lamps.weapons_management_chaff_green							, X_ORG +   4, Y_ORG +   2, 481,  79,  22,  11,  51);	// (80% alpha)

  019d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  019dc	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  019df	83 e0 01	 and	 eax, 1
  019e2	74 5d		 je	 SHORT $LN94@draw_havoc
  019e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  019e9	83 c0 5f	 add	 eax, 95			; 0000005fH
  019ec	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  019f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  019f6	05 1a 01 00 00	 add	 eax, 282		; 0000011aH
  019fb	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01a00	c7 05 08 00 00
	00 e1 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 481 ; 000001e1H
  01a0a	c7 05 0c 00 00
	00 4f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 79 ; 0000004fH
  01a14	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  01a1e	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  01a28	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  01a2f	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01a34	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01a37	50		 push	 eax
  01a38	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01a3b	51		 push	 ecx
  01a3c	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN94@draw_havoc:

; 371  : 			draw_lamp (havoc_lamps.weapons_management_flare_green							, X_ORG +  26, Y_ORG +   2, 503,  79,  22,  11,  48);	// (81% alpha)

  01a41	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01a46	c1 e8 0e	 shr	 eax, 14			; 0000000eH
  01a49	83 e0 01	 and	 eax, 1
  01a4c	74 5d		 je	 SHORT $LN95@draw_havoc
  01a4e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01a53	83 c0 75	 add	 eax, 117		; 00000075H
  01a56	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01a5b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01a60	05 1a 01 00 00	 add	 eax, 282		; 0000011aH
  01a65	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01a6a	c7 05 08 00 00
	00 f7 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 503 ; 000001f7H
  01a74	c7 05 0c 00 00
	00 4f 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 79 ; 0000004fH
  01a7e	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  01a88	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  01a92	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  01a99	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01a9e	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01aa1	50		 push	 eax
  01aa2	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01aa5	51		 push	 ecx
  01aa6	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN95@draw_havoc:

; 372  : 
; 373  : 			draw_lamp (havoc_lamps.weapons_management_chaff_red							, X_ORG +   4, Y_ORG +   2, 436,  54,  22,  11,  51);	// (80% alpha)

  01aab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01ab0	c1 e8 0f	 shr	 eax, 15			; 0000000fH
  01ab3	83 e0 01	 and	 eax, 1
  01ab6	74 5d		 je	 SHORT $LN96@draw_havoc
  01ab8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01abd	83 c0 5f	 add	 eax, 95			; 0000005fH
  01ac0	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01ac5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01aca	05 1a 01 00 00	 add	 eax, 282		; 0000011aH
  01acf	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01ad4	c7 05 08 00 00
	00 b4 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 436 ; 000001b4H
  01ade	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  01ae8	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  01af2	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  01afc	c6 05 18 00 00
	00 33		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 51 ; 00000033H
  01b03	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01b08	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01b0b	50		 push	 eax
  01b0c	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01b0f	51		 push	 ecx
  01b10	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN96@draw_havoc:

; 374  : 			draw_lamp (havoc_lamps.weapons_management_flare_red							, X_ORG +  26, Y_ORG +   2, 458,  54,  22,  11,  48);	// (81% alpha)

  01b15	a1 00 00 00 00	 mov	 eax, DWORD PTR ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A
  01b1a	c1 e8 10	 shr	 eax, 16			; 00000010H
  01b1d	83 e0 01	 and	 eax, 1
  01b20	74 5d		 je	 SHORT $LN97@draw_havoc
  01b22	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ix_640_480@@3HA ; ix_640_480
  01b27	83 c0 75	 add	 eax, 117		; 00000075H
  01b2a	a3 00 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A, eax
  01b2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iy_640_480@@3HA ; iy_640_480
  01b34	05 1a 01 00 00	 add	 eax, 282		; 0000011aH
  01b39	a3 04 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+4, eax
  01b3e	c7 05 08 00 00
	00 ca 01 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+8, 458 ; 000001caH
  01b48	c7 05 0c 00 00
	00 36 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+12, 54 ; 00000036H
  01b52	c7 05 10 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+16, 22 ; 00000016H
  01b5c	c7 05 14 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+20, 11 ; 0000000bH
  01b66	c6 05 18 00 00
	00 30		 mov	 BYTE PTR ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A+24, 48 ; 00000030H
  01b6d	68 00 00 00 00	 push	 OFFSET ?sprite_values@@3URGB_ALPHA_MASKED_SPRITE_DATA@@A
  01b72	8b 45 f8	 mov	 eax, DWORD PTR _mask_data$[ebp]
  01b75	50		 push	 eax
  01b76	8b 4d fc	 mov	 ecx, DWORD PTR _sprite_data$[ebp]
  01b79	51		 push	 ecx
  01b7a	e8 00 00 00 00	 call	 ?blit_rgb_alpha_masked_sprite@@YGXPBE0PBURGB_ALPHA_MASKED_SPRITE_DATA@@@Z ; blit_rgb_alpha_masked_sprite
$LN97@draw_havoc:

; 375  : 
; 376  : 			#undef X_ORG
; 377  : 			#undef Y_ORG
; 378  : 
; 379  : 			break;

  01b7f	eb 0e		 jmp	 SHORT $LN2@draw_havoc
$LN98@draw_havoc:

; 380  : 		}
; 381  : 		////////////////////////////////////////
; 382  : 		default:
; 383  : 		////////////////////////////////////////
; 384  : 		{
; 385  : 			debug_fatal (lamp_error);

  01b81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lamp_error@@3PBDB
  01b86	50		 push	 eax
  01b87	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  01b8c	83 c4 04	 add	 esp, 4
$LN2@draw_havoc:

; 386  : 
; 387  : 			break;
; 388  : 		}
; 389  : 	}
; 390  : }

  01b8f	5f		 pop	 edi
  01b90	5e		 pop	 esi
  01b91	5b		 pop	 ebx
  01b92	8b e5		 mov	 esp, ebp
  01b94	5d		 pop	 ebp
  01b95	c2 04 00	 ret	 4
$LN100@draw_havoc:
  01b98	00 00 00 00	 DD	 $LN37@draw_havoc
  01b9c	00 00 00 00	 DD	 $LN52@draw_havoc
  01ba0	00 00 00 00	 DD	 $LN98@draw_havoc
  01ba4	00 00 00 00	 DD	 $LN98@draw_havoc
  01ba8	00 00 00 00	 DD	 $LN98@draw_havoc
  01bac	00 00 00 00	 DD	 $LN98@draw_havoc
  01bb0	00 00 00 00	 DD	 $LN59@draw_havoc
  01bb4	00 00 00 00	 DD	 $LN70@draw_havoc
  01bb8	00 00 00 00	 DD	 $LN87@draw_havoc
?draw_havoc_weapons_management_panel_lamps@@YGXW4COCKPIT_PANELS@@@Z ENDP ; draw_havoc_weapons_management_panel_lamps
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\cockpits\havoc\ha_lamps.c
;	COMDAT ?initialise_havoc_lamps@@YGXXZ
_TEXT	SEGMENT
?initialise_havoc_lamps@@YGXXZ PROC			; initialise_havoc_lamps, COMDAT

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 118  : 	memset (&havoc_lamps, 0, sizeof (havoc_lamp_flags));

  00009	6a 10		 push	 16			; 00000010H
  0000b	6a 00		 push	 0
  0000d	68 00 00 00 00	 push	 OFFSET ?havoc_lamps@@3UHAVOC_LAMP_FLAGS@@A ; havoc_lamps
  00012	e8 00 00 00 00	 call	 _memset
  00017	83 c4 0c	 add	 esp, 12			; 0000000cH

; 119  : }

  0001a	5f		 pop	 edi
  0001b	5e		 pop	 esi
  0001c	5b		 pop	 ebx
  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?initialise_havoc_lamps@@YGXXZ ENDP			; initialise_havoc_lamps
_TEXT	ENDS
END
