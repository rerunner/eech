; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\group\gp_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_group_pack_functions@@YGXXZ		; overload_group_pack_functions
PUBLIC	?pack_local_group_data@@YGXW4PACK_MODES@@@Z	; pack_local_group_data
PUBLIC	?unpack_local_group_data@@YGXW4PACK_MODES@@@Z	; unpack_local_group_data
PUBLIC	?validate_local_group_data@@YGXXZ		; validate_local_group_data
PUBLIC	?pack_group_callsign_database@@YGXW4PACK_MODES@@@Z ; pack_group_callsign_database
PUBLIC	?unpack_group_callsign_database@@YGXW4PACK_MODES@@@Z ; unpack_group_callsign_database
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_05BINPNAAL@force@				; `string'
PUBLIC	?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA ; `validate_local_group_data'::`1'::__LINE__Var
PUBLIC	??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ ; `string'
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; pack_list_root
EXTRN	?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z:PROC ; unpack_list_root
EXTRN	?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; pack_list_link
EXTRN	?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z:PROC ; unpack_list_link
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?unpack_entity_safe_ptr@@YGPAUENTITY@@XZ:PROC	; unpack_entity_safe_ptr
EXTRN	?set_local_division_name@@YGHPAUENTITY@@PAD@Z:PROC ; set_local_division_name
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?add_group_type_to_force_info@@YGXPAUENTITY@@H@Z:PROC ; add_group_type_to_force_info
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?first_used_entity@@3PAUENTITY@@A:DWORD		; first_used_entity
EXTRN	?group_callsign_names@@3PAUGROUP_CALLSIGN_NAME_TYPE@@A:BYTE ; group_callsign_names
EXTRN	?group_database@@3PAUGROUP_DATA@@A:BYTE		; group_database
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
CONST	SEGMENT
??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@ DB 'ge'
	DB	't_local_entity_type (en) == ENTITY_TYPE_GROUP', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@ DB 'get_session_entity ('
	DB	')', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA DD 02e2H ; `validate_local_group_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05BINPNAAL@force@
CONST	SEGMENT
??_C@_05BINPNAAL@force@ DB 'force', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 014eH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\group\gp_pack'
	DB	'.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv480 = -104						; size = 4
tv301 = -104						; size = 4
tv472 = -100						; size = 4
tv453 = -100						; size = 4
tv444 = -100						; size = 4
tv434 = -100						; size = 4
tv424 = -100						; size = 4
tv415 = -100						; size = 4
tv405 = -100						; size = 4
tv395 = -100						; size = 4
tv386 = -100						; size = 4
tv293 = -100						; size = 4
tv266 = -100						; size = 4
tv257 = -100						; size = 4
tv248 = -100						; size = 4
tv238 = -100						; size = 4
tv228 = -100						; size = 4
tv219 = -100						; size = 4
tv209 = -100						; size = 4
tv199 = -100						; size = 4
tv189 = -100						; size = 4
tv180 = -100						; size = 4
tv70 = -100						; size = 4
_force$1 = -32						; size = 4
_list_type$2 = -28					; size = 4
_raw$3 = -24						; size = 4
_index$4 = -20						; size = 4
_force$5 = -16						; size = 4
_list_type$6 = -12					; size = 4
_raw$7 = -8						; size = 4
_index$8 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 335  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 336  : 
; 337  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 9c	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d 9c 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	74 0f		 je	 SHORT $LN6@unpack_loc
  00039	83 7d 9c 01	 cmp	 DWORD PTR tv70[ebp], 1
  0003d	0f 84 6a 04 00
	00		 je	 $LN13@unpack_loc
  00043	e9 01 08 00 00	 jmp	 $LN2@unpack_loc
$LN6@unpack_loc:

; 338  : 	{
; 339  : 		////////////////////////////////////////
; 340  : 		case PACK_MODE_SERVER_SESSION:
; 341  : 		////////////////////////////////////////
; 342  : 		{
; 343  : 			int
; 344  : 				index;
; 345  : 
; 346  : 			group
; 347  : 				*raw;
; 348  : 
; 349  : 			//
; 350  : 			// create entity
; 351  : 			//
; 352  : 
; 353  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$8[ebp], eax

; 354  : 
; 355  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$8[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 356  : 
; 357  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 358  : 
; 359  : 			raw = (group *) malloc_fast_mem (sizeof (group));

  00064	68 cc 00 00 00	 push	 204			; 000000ccH
  00069	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  0006e	89 45 f8	 mov	 DWORD PTR _raw$7[ebp], eax

; 360  : 
; 361  : 			set_local_entity_data (en, raw);

  00071	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00074	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00077	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 362  : 
; 363  : 			memset (raw, 0, sizeof (group));

  0007a	68 cc 00 00 00	 push	 204			; 000000ccH
  0007f	6a 00		 push	 0
  00081	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  00084	50		 push	 eax
  00085	e8 00 00 00 00	 call	 _memset
  0008a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 364  : 
; 365  : 			//
; 366  : 			// unpack data (in exactly the same order as the data was packed)
; 367  : 			//
; 368  : 
; 369  : 			raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0008d	6a 34		 push	 52			; 00000034H
  0008f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00098	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  0009b	89 01		 mov	 DWORD PTR [ecx], eax

; 370  : 
; 371  : 			unpack_list_root (en, LIST_TYPE_MEMBER, &raw->member_root);

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  000a0	83 c0 04	 add	 eax, 4
  000a3	50		 push	 eax
  000a4	6a 19		 push	 25			; 00000019H
  000a6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000a9	51		 push	 ecx
  000aa	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 372  : 
; 373  : 			/////////////////////////////////////////////////////////////////
; 374  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  000af	68 ef 00 00 00	 push	 239			; 000000efH
  000b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000bd	85 c0		 test	 eax, eax
  000bf	74 12		 je	 SHORT $LN7@unpack_loc

; 375  : 			{
; 376  : 
; 377  : 				unpack_list_root (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_root);

  000c1	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  000c4	83 c0 08	 add	 eax, 8
  000c7	50		 push	 eax
  000c8	6a 11		 push	 17			; 00000011H
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000cd	51		 push	 ecx
  000ce	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN7@unpack_loc:

; 378  : 			}
; 379  : 			/////////////////////////////////////////////////////////////////
; 380  : 
; 381  : 			/////////////////////////////////////////////////////////////////
; 382  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  000d3	68 ef 00 00 00	 push	 239			; 000000efH
  000d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000e1	85 c0		 test	 eax, eax
  000e3	74 12		 je	 SHORT $LN8@unpack_loc

; 383  : 			{
; 384  : 
; 385  : 				unpack_list_root (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_root);

  000e5	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  000e8	83 c0 0c	 add	 eax, 12			; 0000000cH
  000eb	50		 push	 eax
  000ec	6a 27		 push	 39			; 00000027H
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f1	51		 push	 ecx
  000f2	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN8@unpack_loc:

; 386  : 			}
; 387  : 			/////////////////////////////////////////////////////////////////
; 388  : 			
; 389  : 			/////////////////////////////////////////////////////////////////
; 390  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  000f7	68 ef 00 00 00	 push	 239			; 000000efH
  000fc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00105	85 c0		 test	 eax, eax
  00107	74 12		 je	 SHORT $LN9@unpack_loc

; 391  : 			{
; 392  : 
; 393  : 				unpack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  00109	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  0010c	83 c0 40	 add	 eax, 64			; 00000040H
  0010f	50		 push	 eax
  00110	6a 27		 push	 39			; 00000027H
  00112	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00115	51		 push	 ecx
  00116	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link
$LN9@unpack_loc:

; 394  : 			}
; 395  : 			/////////////////////////////////////////////////////////////////
; 396  : 
; 397  : 			raw->group_list_type = (list_types) unpack_int_value (en, INT_TYPE_GROUP_LIST_TYPE);

  0011b	6a 49		 push	 73			; 00000049H
  0011d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00126	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00129	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 398  : 
; 399  : //			unpack_list_link (en, raw->group_list_type, &raw->group_link);
; 400  : 			raw->group_link.parent = unpack_entity_safe_ptr ();

  0012c	e8 00 00 00 00	 call	 ?unpack_entity_safe_ptr@@YGPAUENTITY@@XZ ; unpack_entity_safe_ptr
  00131	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00134	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 401  : 
; 402  : 			unpack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  00137	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  0013a	83 c0 1c	 add	 eax, 28			; 0000001cH
  0013d	50		 push	 eax
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00143	51		 push	 ecx
  00144	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 403  : 
; 404  : 			// update_link
; 405  : 
; 406  : 			raw->sleep = unpack_float_value (en, FLOAT_TYPE_SLEEP);

  00149	6a 75		 push	 117			; 00000075H
  0014b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014e	50		 push	 eax
  0014f	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00154	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00157	d9 59 5c	 fstp	 DWORD PTR [ecx+92]

; 407  : 
; 408  : 			raw->last_seen_time = unpack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME);

  0015a	6a 3c		 push	 60			; 0000003cH
  0015c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015f	50		 push	 eax
  00160	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00165	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00168	d9 59 60	 fstp	 DWORD PTR [ecx+96]

; 409  : 
; 410  : 			raw->assist_timer = unpack_float_value (en, FLOAT_TYPE_ASSIST_TIMER);

  0016b	6a 0d		 push	 13			; 0000000dH
  0016d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00176	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00179	d9 59 64	 fstp	 DWORD PTR [ecx+100]

; 411  : 
; 412  : 			raw->last_seen_time = unpack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME);

  0017c	6a 3c		 push	 60			; 0000003cH
  0017e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00187	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  0018a	d9 59 60	 fstp	 DWORD PTR [ecx+96]

; 413  : 
; 414  : 			unpack_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, &raw->last_known_position);

  0018d	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  00190	83 c0 68	 add	 eax, 104		; 00000068H
  00193	50		 push	 eax
  00194	6a 17		 push	 23			; 00000017H
  00196	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00199	51		 push	 ecx
  0019a	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 415  : 
; 416  : 			// supplies
; 417  : 
; 418  : 			raw->alive = unpack_int_value (en, INT_TYPE_ALIVE);

  0019f	6a 07		 push	 7
  001a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001aa	89 45 9c	 mov	 DWORD PTR tv180[ebp], eax
  001ad	8b 4d 9c	 mov	 ecx, DWORD PTR tv180[ebp]
  001b0	83 e1 01	 and	 ecx, 1
  001b3	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  001b6	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001bc	83 e0 fe	 and	 eax, -2			; fffffffeH
  001bf	0b c1		 or	 eax, ecx
  001c1	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  001c4	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 419  : 
; 420  : 			raw->engage_enemy = unpack_int_value (en, INT_TYPE_ENGAGE_ENEMY);

  001ca	6a 33		 push	 51			; 00000033H
  001cc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001d5	89 45 9c	 mov	 DWORD PTR tv189[ebp], eax
  001d8	8b 4d 9c	 mov	 ecx, DWORD PTR tv189[ebp]
  001db	83 e1 01	 and	 ecx, 1
  001de	d1 e1		 shl	 ecx, 1
  001e0	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  001e3	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  001e9	83 e0 fd	 and	 eax, -3			; fffffffdH
  001ec	0b c1		 or	 eax, ecx
  001ee	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  001f1	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 421  : 
; 422  : 			raw->group_callsign = unpack_int_value (en, INT_TYPE_GROUP_CALLSIGN);

  001f7	6a 44		 push	 68			; 00000044H
  001f9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001fc	50		 push	 eax
  001fd	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00202	89 45 9c	 mov	 DWORD PTR tv199[ebp], eax
  00205	8b 4d 9c	 mov	 ecx, DWORD PTR tv199[ebp]
  00208	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  0020e	c1 e1 02	 shl	 ecx, 2
  00211	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  00214	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0021a	25 03 fc ff ff	 and	 eax, -1021		; fffffc03H
  0021f	0b c1		 or	 eax, ecx
  00221	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00224	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 423  : 
; 424  : 			raw->group_formation = unpack_int_value (en, INT_TYPE_GROUP_FORMATION);

  0022a	6a 47		 push	 71			; 00000047H
  0022c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0022f	50		 push	 eax
  00230	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00235	89 45 9c	 mov	 DWORD PTR tv209[ebp], eax
  00238	8b 4d 9c	 mov	 ecx, DWORD PTR tv209[ebp]
  0023b	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00241	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00244	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  00247	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0024d	25 ff 03 00 fc	 and	 eax, -67107841		; fc0003ffH
  00252	0b c1		 or	 eax, ecx
  00254	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00257	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 425  : 
; 426  : 			raw->kills = unpack_int_value (en, INT_TYPE_KILLS);

  0025d	6a 72		 push	 114			; 00000072H
  0025f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00262	50		 push	 eax
  00263	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00268	89 45 9c	 mov	 DWORD PTR tv219[ebp], eax
  0026b	8b 4d 9c	 mov	 ecx, DWORD PTR tv219[ebp]
  0026e	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00274	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  00277	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  0027d	25 00 f0 ff ff	 and	 eax, -4096		; fffff000H
  00282	0b c1		 or	 eax, ecx
  00284	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00287	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 427  : 
; 428  : 			raw->losses = unpack_int_value (en, INT_TYPE_LOSSES);

  0028d	6a 7f		 push	 127			; 0000007fH
  0028f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00292	50		 push	 eax
  00293	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00298	89 45 9c	 mov	 DWORD PTR tv228[ebp], eax
  0029b	8b 4d 9c	 mov	 ecx, DWORD PTR tv228[ebp]
  0029e	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  002a4	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  002a7	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  002aa	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  002b0	25 ff 0f c0 ff	 and	 eax, -4190209		; ffc00fffH
  002b5	0b c1		 or	 eax, ecx
  002b7	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  002ba	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 429  : 
; 430  : 			raw->member_count = unpack_int_value (en, INT_TYPE_MEMBER_COUNT);

  002c0	68 86 00 00 00	 push	 134			; 00000086H
  002c5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002c8	50		 push	 eax
  002c9	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  002ce	89 45 9c	 mov	 DWORD PTR tv238[ebp], eax
  002d1	8b 4d 9c	 mov	 ecx, DWORD PTR tv238[ebp]
  002d4	83 e1 3f	 and	 ecx, 63			; 0000003fH
  002d7	c1 e1 16	 shl	 ecx, 22			; 00000016H
  002da	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  002dd	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  002e3	25 ff ff 3f f0	 and	 eax, -264241153		; f03fffffH
  002e8	0b c1		 or	 eax, ecx
  002ea	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  002ed	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 431  : 
; 432  : 			raw->verbose_operational_state = unpack_int_value (en, INT_TYPE_VERBOSE_OPERATIONAL_STATE);

  002f3	68 f4 00 00 00	 push	 244			; 000000f4H
  002f8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002fb	50		 push	 eax
  002fc	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00301	89 45 9c	 mov	 DWORD PTR tv248[ebp], eax
  00304	8b 4d 9c	 mov	 ecx, DWORD PTR tv248[ebp]
  00307	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0030a	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  0030d	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00313	83 e0 c0	 and	 eax, -64		; ffffffc0H
  00316	0b c1		 or	 eax, ecx
  00318	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  0031b	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax

; 433  : 
; 434  : 			// unique_id
; 435  : 
; 436  : 			raw->route_node = unpack_int_value (en, INT_TYPE_ROUTE_NODE);

  00321	68 b4 00 00 00	 push	 180			; 000000b4H
  00326	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00329	50		 push	 eax
  0032a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0032f	89 45 9c	 mov	 DWORD PTR tv257[ebp], eax
  00332	8b 4d 9c	 mov	 ecx, DWORD PTR tv257[ebp]
  00335	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  0033b	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  0033e	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  00344	25 00 fc ff ff	 and	 eax, -1024		; fffffc00H
  00349	0b c1		 or	 eax, ecx
  0034b	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  0034e	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 437  : 
; 438  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  00354	68 bb 00 00 00	 push	 187			; 000000bbH
  00359	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00362	89 45 9c	 mov	 DWORD PTR tv266[ebp], eax
  00365	8b 4d 9c	 mov	 ecx, DWORD PTR tv266[ebp]
  00368	83 e1 03	 and	 ecx, 3
  0036b	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  0036e	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  00371	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  00377	25 ff f3 ff ff	 and	 eax, -3073		; fffff3ffH
  0037c	0b c1		 or	 eax, ecx
  0037e	8b 4d f8	 mov	 ecx, DWORD PTR _raw$7[ebp]
  00381	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 439  : 
; 440  : 			//
; 441  : 			// link into system
; 442  : 			//
; 443  : 
; 444  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  00387	68 ef 00 00 00	 push	 239			; 000000efH
  0038c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0038f	50		 push	 eax
  00390	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00395	85 c0		 test	 eax, eax
  00397	74 13		 je	 SHORT $LN10@unpack_loc

; 445  : 			{
; 446  : 				insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  00399	6a 00		 push	 0
  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  003a0	50		 push	 eax
  003a1	6a 29		 push	 41			; 00000029H
  003a3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003a6	51		 push	 ecx
  003a7	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN10@unpack_loc:

; 447  : 			}
; 448  : 
; 449  : 			insert_local_entity_into_parents_child_list (en, raw->group_list_type, raw->group_link.parent, NULL);

  003ac	6a 00		 push	 0
  003ae	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  003b1	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  003b4	51		 push	 ecx
  003b5	8b 55 f8	 mov	 edx, DWORD PTR _raw$7[ebp]
  003b8	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  003bb	50		 push	 eax
  003bc	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003bf	51		 push	 ecx
  003c0	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 450  : 
; 451  : 			{
; 452  : 				list_types
; 453  : 					list_type;
; 454  : 	
; 455  : 				entity
; 456  : 					*force;
; 457  : 	
; 458  : 				list_type = (list_types) get_local_entity_int_value (en, INT_TYPE_REGISTRY_LIST_TYPE);

  003c5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003c9	74 0a		 je	 SHORT $LN21@unpack_loc
  003cb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003ce	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d0	89 4d 9c	 mov	 DWORD PTR tv293[ebp], ecx
  003d3	eb 21		 jmp	 SHORT $LN22@unpack_loc
$LN21@unpack_loc:
  003d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  003db	83 c2 7c	 add	 edx, 124		; 0000007cH
  003de	52		 push	 edx
  003df	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003e9	50		 push	 eax
  003ea	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ef	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv293[ebp], 0
$LN22@unpack_loc:
  003f6	b9 01 00 00 00	 mov	 ecx, 1
  003fb	85 c9		 test	 ecx, ecx
  003fd	74 09		 je	 SHORT $LN23@unpack_loc
  003ff	c7 45 98 ae 00
	00 00		 mov	 DWORD PTR tv301[ebp], 174 ; 000000aeH
  00406	eb 21		 jmp	 SHORT $LN24@unpack_loc
$LN23@unpack_loc:
  00408	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0040e	83 c2 7c	 add	 edx, 124		; 0000007cH
  00411	52		 push	 edx
  00412	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00417	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00422	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv301[ebp], 0
$LN24@unpack_loc:
  00429	68 ae 00 00 00	 push	 174			; 000000aeH
  0042e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00431	51		 push	 ecx
  00432	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv293[ebp], 1116
  00439	8b 45 98	 mov	 eax, DWORD PTR tv301[ebp]
  0043c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00443	ff d1		 call	 ecx
  00445	89 45 f4	 mov	 DWORD PTR _list_type$6[ebp], eax

; 459  : 	
; 460  : 				if (list_type != LIST_TYPE_INVALID)

  00448	83 7d f4 00	 cmp	 DWORD PTR _list_type$6[ebp], 0
  0044c	74 5a		 je	 SHORT $LN11@unpack_loc

; 461  : 				{
; 462  : 					force = get_local_force_entity ((entity_sides) raw->side);

  0044e	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  00451	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00457	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0045a	83 e1 03	 and	 ecx, 3
  0045d	51		 push	 ecx
  0045e	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00463	89 45 f0	 mov	 DWORD PTR _force$5[ebp], eax

; 463  : 	
; 464  : 					ASSERT (force);

  00466	83 7d f0 00	 cmp	 DWORD PTR _force$5[ebp], 0
  0046a	75 1a		 jne	 SHORT $LN12@unpack_loc
  0046c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00471	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00476	50		 push	 eax
  00477	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0047c	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00481	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@unpack_loc:

; 465  : 	
; 466  : 					insert_local_entity_into_parents_child_list (en, list_type, force, NULL);

  00486	6a 00		 push	 0
  00488	8b 45 f0	 mov	 eax, DWORD PTR _force$5[ebp]
  0048b	50		 push	 eax
  0048c	8b 4d f4	 mov	 ecx, DWORD PTR _list_type$6[ebp]
  0048f	51		 push	 ecx
  00490	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00493	52		 push	 edx
  00494	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 467  : 
; 468  : 					add_group_type_to_force_info (force, raw->sub_type);

  00499	8b 45 f8	 mov	 eax, DWORD PTR _raw$7[ebp]
  0049c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049e	51		 push	 ecx
  0049f	8b 55 f0	 mov	 edx, DWORD PTR _force$5[ebp]
  004a2	52		 push	 edx
  004a3	e8 00 00 00 00	 call	 ?add_group_type_to_force_info@@YGXPAUENTITY@@H@Z ; add_group_type_to_force_info
$LN11@unpack_loc:

; 469  : 				}
; 470  : 			}
; 471  : 
; 472  : 			break;

  004a8	e9 9c 03 00 00	 jmp	 $LN2@unpack_loc
$LN13@unpack_loc:

; 473  : 		}
; 474  : 		////////////////////////////////////////
; 475  : 		case PACK_MODE_CLIENT_SESSION:
; 476  : 		////////////////////////////////////////
; 477  : 		{
; 478  : 
; 479  : 			int
; 480  : 				index;
; 481  : 
; 482  : 			group
; 483  : 				*raw;
; 484  : 
; 485  : 			//
; 486  : 			// create entity
; 487  : 			//
; 488  : 
; 489  : 			index = unpack_entity_safe_index ();

  004ad	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  004b2	89 45 ec	 mov	 DWORD PTR _index$4[ebp], eax

; 490  : 
; 491  : 			en = get_free_entity (index);

  004b5	8b 45 ec	 mov	 eax, DWORD PTR _index$4[ebp]
  004b8	50		 push	 eax
  004b9	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  004be	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 492  : 
; 493  : 			set_local_entity_type (en, type);

  004c1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004c4	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  004c7	89 08		 mov	 DWORD PTR [eax], ecx

; 494  : 
; 495  : 			raw = (group *) malloc_fast_mem (sizeof (group));

  004c9	68 cc 00 00 00	 push	 204			; 000000ccH
  004ce	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  004d3	89 45 e8	 mov	 DWORD PTR _raw$3[ebp], eax

; 496  : 
; 497  : 			set_local_entity_data (en, raw);

  004d6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d9	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  004dc	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 498  : 
; 499  : 			memset (raw, 0, sizeof (group));

  004df	68 cc 00 00 00	 push	 204			; 000000ccH
  004e4	6a 00		 push	 0
  004e6	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  004e9	50		 push	 eax
  004ea	e8 00 00 00 00	 call	 _memset
  004ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 500  : 
; 501  : 			//
; 502  : 			// unpack data (in exactly the same order as the data was packed)
; 503  : 			//
; 504  : 
; 505  : 			raw->sub_type = unpack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  004f2	6a 34		 push	 52			; 00000034H
  004f4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004f7	50		 push	 eax
  004f8	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  004fd	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00500	89 01		 mov	 DWORD PTR [ecx], eax

; 506  : 
; 507  : 			unpack_list_root (en, LIST_TYPE_MEMBER, &raw->member_root);

  00502	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00505	83 c0 04	 add	 eax, 4
  00508	50		 push	 eax
  00509	6a 19		 push	 25			; 00000019H
  0050b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0050e	51		 push	 ecx
  0050f	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root

; 508  : 
; 509  : 			/////////////////////////////////////////////////////////////////
; 510  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  00514	68 ef 00 00 00	 push	 239			; 000000efH
  00519	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0051c	50		 push	 eax
  0051d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00522	85 c0		 test	 eax, eax
  00524	74 12		 je	 SHORT $LN14@unpack_loc

; 511  : 			{
; 512  : 			
; 513  : 				unpack_list_root (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_root);

  00526	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  00529	83 c0 08	 add	 eax, 8
  0052c	50		 push	 eax
  0052d	6a 11		 push	 17			; 00000011H
  0052f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00532	51		 push	 ecx
  00533	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN14@unpack_loc:

; 514  : 			}
; 515  : 			/////////////////////////////////////////////////////////////////
; 516  : 
; 517  : 			/////////////////////////////////////////////////////////////////
; 518  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  00538	68 ef 00 00 00	 push	 239			; 000000efH
  0053d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00540	50		 push	 eax
  00541	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00546	85 c0		 test	 eax, eax
  00548	74 12		 je	 SHORT $LN15@unpack_loc

; 519  : 			{
; 520  : 			
; 521  : 				unpack_list_root (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_root);

  0054a	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0054d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00550	50		 push	 eax
  00551	6a 27		 push	 39			; 00000027H
  00553	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00556	51		 push	 ecx
  00557	e8 00 00 00 00	 call	 ?unpack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; unpack_list_root
$LN15@unpack_loc:

; 522  : 			}
; 523  : 			/////////////////////////////////////////////////////////////////
; 524  : 
; 525  : 			// task_dependent_link
; 526  : 
; 527  : 			raw->group_list_type = (list_types) unpack_int_value (en, INT_TYPE_GROUP_LIST_TYPE);

  0055c	6a 49		 push	 73			; 00000049H
  0055e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00561	50		 push	 eax
  00562	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00567	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0056a	89 41 58	 mov	 DWORD PTR [ecx+88], eax

; 528  : 
; 529  : //			unpack_list_link (en, raw->group_list_type, &raw->group_link);
; 530  : 			raw->group_link.parent = unpack_entity_safe_ptr ();

  0056d	e8 00 00 00 00	 call	 ?unpack_entity_safe_ptr@@YGPAUENTITY@@XZ ; unpack_entity_safe_ptr
  00572	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00575	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 531  : 
; 532  : 			unpack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  00578	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0057b	83 c0 1c	 add	 eax, 28			; 0000001cH
  0057e	50		 push	 eax
  0057f	6a 0b		 push	 11			; 0000000bH
  00581	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00584	51		 push	 ecx
  00585	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 533  : 
; 534  : 			unpack_list_link (en, LIST_TYPE_PILOT_LOCK, &raw->pilot_lock_link);

  0058a	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0058d	83 c0 28	 add	 eax, 40			; 00000028H
  00590	50		 push	 eax
  00591	6a 1d		 push	 29			; 0000001dH
  00593	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00596	51		 push	 ecx
  00597	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 535  : 
; 536  : 			// update_link 
; 537  : 
; 538  : 			// sleep
; 539  : 
; 540  : 			// assist timer
; 541  : 
; 542  : 			raw->last_seen_time = unpack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME);

  0059c	6a 3c		 push	 60			; 0000003cH
  0059e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005a1	50		 push	 eax
  005a2	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  005a7	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  005aa	d9 59 60	 fstp	 DWORD PTR [ecx+96]

; 543  : 
; 544  : 			unpack_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, &raw->last_known_position);

  005ad	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  005b0	83 c0 68	 add	 eax, 104		; 00000068H
  005b3	50		 push	 eax
  005b4	6a 17		 push	 23			; 00000017H
  005b6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005b9	51		 push	 ecx
  005ba	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 545  : 
; 546  : 			// supplies
; 547  : 
; 548  : 			raw->alive = unpack_int_value (en, INT_TYPE_ALIVE);

  005bf	6a 07		 push	 7
  005c1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005c4	50		 push	 eax
  005c5	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  005ca	89 45 9c	 mov	 DWORD PTR tv386[ebp], eax
  005cd	8b 4d 9c	 mov	 ecx, DWORD PTR tv386[ebp]
  005d0	83 e1 01	 and	 ecx, 1
  005d3	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  005d6	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  005dc	83 e0 fe	 and	 eax, -2			; fffffffeH
  005df	0b c1		 or	 eax, ecx
  005e1	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  005e4	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 549  : 
; 550  : 			// engage_enemy
; 551  : 
; 552  : 			raw->group_callsign = unpack_int_value (en, INT_TYPE_GROUP_CALLSIGN);

  005ea	6a 44		 push	 68			; 00000044H
  005ec	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005ef	50		 push	 eax
  005f0	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  005f5	89 45 9c	 mov	 DWORD PTR tv395[ebp], eax
  005f8	8b 4d 9c	 mov	 ecx, DWORD PTR tv395[ebp]
  005fb	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00601	c1 e1 02	 shl	 ecx, 2
  00604	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00607	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  0060d	25 03 fc ff ff	 and	 eax, -1021		; fffffc03H
  00612	0b c1		 or	 eax, ecx
  00614	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00617	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 553  : 
; 554  : 			raw->group_formation = unpack_int_value (en, INT_TYPE_GROUP_FORMATION);

  0061d	6a 47		 push	 71			; 00000047H
  0061f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00622	50		 push	 eax
  00623	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00628	89 45 9c	 mov	 DWORD PTR tv405[ebp], eax
  0062b	8b 4d 9c	 mov	 ecx, DWORD PTR tv405[ebp]
  0062e	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00634	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00637	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0063a	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00640	25 ff 03 00 fc	 and	 eax, -67107841		; fc0003ffH
  00645	0b c1		 or	 eax, ecx
  00647	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0064a	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax

; 555  : 
; 556  : 			raw->kills = unpack_int_value (en, INT_TYPE_KILLS);

  00650	6a 72		 push	 114			; 00000072H
  00652	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00655	50		 push	 eax
  00656	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0065b	89 45 9c	 mov	 DWORD PTR tv415[ebp], eax
  0065e	8b 4d 9c	 mov	 ecx, DWORD PTR tv415[ebp]
  00661	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  00667	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0066a	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  00670	25 00 f0 ff ff	 and	 eax, -4096		; fffff000H
  00675	0b c1		 or	 eax, ecx
  00677	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0067a	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 557  : 
; 558  : 			raw->losses = unpack_int_value (en, INT_TYPE_LOSSES);

  00680	6a 7f		 push	 127			; 0000007fH
  00682	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00685	50		 push	 eax
  00686	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0068b	89 45 9c	 mov	 DWORD PTR tv424[ebp], eax
  0068e	8b 4d 9c	 mov	 ecx, DWORD PTR tv424[ebp]
  00691	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  00697	c1 e1 0c	 shl	 ecx, 12			; 0000000cH
  0069a	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  0069d	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  006a3	25 ff 0f c0 ff	 and	 eax, -4190209		; ffc00fffH
  006a8	0b c1		 or	 eax, ecx
  006aa	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  006ad	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 559  : 
; 560  : 			raw->member_count = unpack_int_value (en, INT_TYPE_MEMBER_COUNT);

  006b3	68 86 00 00 00	 push	 134			; 00000086H
  006b8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  006c1	89 45 9c	 mov	 DWORD PTR tv434[ebp], eax
  006c4	8b 4d 9c	 mov	 ecx, DWORD PTR tv434[ebp]
  006c7	83 e1 3f	 and	 ecx, 63			; 0000003fH
  006ca	c1 e1 16	 shl	 ecx, 22			; 00000016H
  006cd	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  006d0	8b 82 88 00 00
	00		 mov	 eax, DWORD PTR [edx+136]
  006d6	25 ff ff 3f f0	 and	 eax, -264241153		; f03fffffH
  006db	0b c1		 or	 eax, ecx
  006dd	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  006e0	89 81 88 00 00
	00		 mov	 DWORD PTR [ecx+136], eax

; 561  : 
; 562  : 			raw->verbose_operational_state = unpack_int_value (en, INT_TYPE_VERBOSE_OPERATIONAL_STATE);

  006e6	68 f4 00 00 00	 push	 244			; 000000f4H
  006eb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  006f4	89 45 9c	 mov	 DWORD PTR tv444[ebp], eax
  006f7	8b 4d 9c	 mov	 ecx, DWORD PTR tv444[ebp]
  006fa	83 e1 3f	 and	 ecx, 63			; 0000003fH
  006fd	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00700	8b 82 94 00 00
	00		 mov	 eax, DWORD PTR [edx+148]
  00706	83 e0 c0	 and	 eax, -64		; ffffffc0H
  00709	0b c1		 or	 eax, ecx
  0070b	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  0070e	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax

; 563  : 
; 564  : 			// unique_id
; 565  : 
; 566  : 			// route_node
; 567  : 
; 568  : 			raw->side = unpack_int_value (en, INT_TYPE_SIDE);

  00714	68 bb 00 00 00	 push	 187			; 000000bbH
  00719	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0071c	50		 push	 eax
  0071d	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00722	89 45 9c	 mov	 DWORD PTR tv453[ebp], eax
  00725	8b 4d 9c	 mov	 ecx, DWORD PTR tv453[ebp]
  00728	83 e1 03	 and	 ecx, 3
  0072b	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  0072e	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00731	8b 82 8c 00 00
	00		 mov	 eax, DWORD PTR [edx+140]
  00737	25 ff f3 ff ff	 and	 eax, -3073		; fffff3ffH
  0073c	0b c1		 or	 eax, ecx
  0073e	8b 4d e8	 mov	 ecx, DWORD PTR _raw$3[ebp]
  00741	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax

; 569  : 
; 570  : 			//
; 571  : 			// link into system
; 572  : 			//
; 573  : 
; 574  : 			insert_local_entity_into_parents_child_list (en, raw->group_list_type, raw->group_link.parent, NULL);

  00747	6a 00		 push	 0
  00749	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0074c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0074f	51		 push	 ecx
  00750	8b 55 e8	 mov	 edx, DWORD PTR _raw$3[ebp]
  00753	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  00756	50		 push	 eax
  00757	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0075a	51		 push	 ecx
  0075b	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 575  : 
; 576  : 			{
; 577  : 				list_types
; 578  : 					list_type;
; 579  : 	
; 580  : 				entity
; 581  : 					*force;
; 582  : 	
; 583  : 				list_type = (list_types) get_local_entity_int_value (en, INT_TYPE_REGISTRY_LIST_TYPE);

  00760	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00764	74 0a		 je	 SHORT $LN25@unpack_loc
  00766	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00769	8b 08		 mov	 ecx, DWORD PTR [eax]
  0076b	89 4d 9c	 mov	 DWORD PTR tv472[ebp], ecx
  0076e	eb 24		 jmp	 SHORT $LN26@unpack_loc
$LN25@unpack_loc:
  00770	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00776	81 c2 f9 00 00
	00		 add	 edx, 249		; 000000f9H
  0077c	52		 push	 edx
  0077d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00782	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00787	50		 push	 eax
  00788	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0078d	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv472[ebp], 0
$LN26@unpack_loc:
  00794	b9 01 00 00 00	 mov	 ecx, 1
  00799	85 c9		 test	 ecx, ecx
  0079b	74 09		 je	 SHORT $LN27@unpack_loc
  0079d	c7 45 98 ae 00
	00 00		 mov	 DWORD PTR tv480[ebp], 174 ; 000000aeH
  007a4	eb 24		 jmp	 SHORT $LN28@unpack_loc
$LN27@unpack_loc:
  007a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  007ac	81 c2 f9 00 00
	00		 add	 edx, 249		; 000000f9H
  007b2	52		 push	 edx
  007b3	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  007b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007bd	50		 push	 eax
  007be	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007c3	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv480[ebp], 0
$LN28@unpack_loc:
  007ca	68 ae 00 00 00	 push	 174			; 000000aeH
  007cf	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  007d2	51		 push	 ecx
  007d3	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv472[ebp], 1116
  007da	8b 45 98	 mov	 eax, DWORD PTR tv480[ebp]
  007dd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  007e4	ff d1		 call	 ecx
  007e6	89 45 e4	 mov	 DWORD PTR _list_type$2[ebp], eax

; 584  : 	
; 585  : 				if (list_type != LIST_TYPE_INVALID)

  007e9	83 7d e4 00	 cmp	 DWORD PTR _list_type$2[ebp], 0
  007ed	74 5a		 je	 SHORT $LN16@unpack_loc

; 586  : 				{
; 587  : 					force = get_local_force_entity ((entity_sides) raw->side);

  007ef	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  007f2	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  007f8	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  007fb	83 e1 03	 and	 ecx, 3
  007fe	51		 push	 ecx
  007ff	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00804	89 45 e0	 mov	 DWORD PTR _force$1[ebp], eax

; 588  : 	
; 589  : 					ASSERT (force);

  00807	83 7d e0 00	 cmp	 DWORD PTR _force$1[ebp], 0
  0080b	75 1a		 jne	 SHORT $LN17@unpack_loc
  0080d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  00812	05 ff 00 00 00	 add	 eax, 255		; 000000ffH
  00817	50		 push	 eax
  00818	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0081d	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  00822	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN17@unpack_loc:

; 590  : 	
; 591  : 					insert_local_entity_into_parents_child_list (en, list_type, force, NULL);

  00827	6a 00		 push	 0
  00829	8b 45 e0	 mov	 eax, DWORD PTR _force$1[ebp]
  0082c	50		 push	 eax
  0082d	8b 4d e4	 mov	 ecx, DWORD PTR _list_type$2[ebp]
  00830	51		 push	 ecx
  00831	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00834	52		 push	 edx
  00835	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 592  : 
; 593  : 					add_group_type_to_force_info (force, raw->sub_type);

  0083a	8b 45 e8	 mov	 eax, DWORD PTR _raw$3[ebp]
  0083d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0083f	51		 push	 ecx
  00840	8b 55 e0	 mov	 edx, DWORD PTR _force$1[ebp]
  00843	52		 push	 edx
  00844	e8 00 00 00 00	 call	 ?add_group_type_to_force_info@@YGXPAUENTITY@@H@Z ; add_group_type_to_force_info
$LN16@unpack_loc:
$LN2@unpack_loc:

; 594  : 				}
; 595  : 			}
; 596  : 
; 597  : 			break;
; 598  : 		}
; 599  : 		////////////////////////////////////////
; 600  : 		case PACK_MODE_BROWSE_SESSION:
; 601  : 		////////////////////////////////////////
; 602  : 		{
; 603  : 			break;
; 604  : 		}
; 605  : 		////////////////////////////////////////
; 606  : 		case PACK_MODE_UPDATE_ENTITY:
; 607  : 		////////////////////////////////////////
; 608  : 		{
; 609  : 			//
; 610  : 			// always use access functions to set the data
; 611  : 			//
; 612  : 
; 613  : 			break;
; 614  : 		}
; 615  : 	}
; 616  : }

  00849	5f		 pop	 edi
  0084a	5e		 pop	 esi
  0084b	5b		 pop	 ebx
  0084c	8b e5		 mov	 esp, ebp
  0084e	5d		 pop	 ebp
  0084f	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv277 = -76						; size = 4
tv85 = -76						; size = 4
tv70 = -76						; size = 4
_raw$1 = -8						; size = 4
_raw$2 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	74 0f		 je	 SHORT $LN6@pack_local
  00039	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  0003d	0f 84 36 03 00
	00		 je	 $LN16@pack_local
  00043	e9 87 05 00 00	 jmp	 $LN2@pack_local
$LN6@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		////////////////////////////////////////
; 88   : 		{
; 89   : 			group
; 90   : 				*raw;
; 91   : 
; 92   : 			raw = (group *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$2[ebp], ecx

; 93   : 
; 94   : 			if (group_database [raw->sub_type].local_only_group)

  00051	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00054	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  00057	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  0005d	c1 ea 02	 shr	 edx, 2
  00060	83 e2 01	 and	 edx, 1
  00063	74 05		 je	 SHORT $LN7@pack_local

; 95   : 			{
; 96   : 				return;

  00065	e9 65 05 00 00	 jmp	 $LN1@pack_local
$LN7@pack_local:

; 97   : 			}
; 98   : 
; 99   : 			pack_entity_type (get_local_entity_type (en));

  0006a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0006e	74 0a		 je	 SHORT $LN25@pack_local
  00070	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00073	8b 08		 mov	 ecx, DWORD PTR [eax]
  00075	89 4d b4	 mov	 DWORD PTR tv85[ebp], ecx
  00078	eb 21		 jmp	 SHORT $LN26@pack_local
$LN25@pack_local:
  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00080	83 c2 13	 add	 edx, 19			; 00000013H
  00083	52		 push	 edx
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00089	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00094	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN26@pack_local:
  0009b	8b 4d b4	 mov	 ecx, DWORD PTR tv85[ebp]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 100  : 
; 101  : 			pack_entity_safe_ptr (en);

  000a4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a7	50		 push	 eax
  000a8	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 102  : 
; 103  : 			//
; 104  : 			// pack data (in exactly the same order as the data is unpacked)
; 105  : 			//
; 106  : 
; 107  : 			pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	51		 push	 ecx
  000b3	6a 34		 push	 52			; 00000034H
  000b5	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000b8	52		 push	 edx
  000b9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 108  : 
; 109  : 			pack_list_root (en, LIST_TYPE_MEMBER, &raw->member_root);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000c1	83 c0 04	 add	 eax, 4
  000c4	50		 push	 eax
  000c5	6a 19		 push	 25			; 00000019H
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ca	51		 push	 ecx
  000cb	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 110  : 
; 111  : 			/////////////////////////////////////////////////////////////////
; 112  : 			if (raw->guide_stack_root.first_child)

  000d0	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000d3	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000d7	74 24		 je	 SHORT $LN8@pack_local

; 113  : 			{
; 114  : 
; 115  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  000d9	6a 01		 push	 1
  000db	68 ef 00 00 00	 push	 239			; 000000efH
  000e0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 116  : 
; 117  : 				pack_list_root (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_root);

  000e9	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000ec	83 c0 08	 add	 eax, 8
  000ef	50		 push	 eax
  000f0	6a 11		 push	 17			; 00000011H
  000f2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f5	51		 push	 ecx
  000f6	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 118  : 			}
; 119  : 			else

  000fb	eb 10		 jmp	 SHORT $LN9@pack_local
$LN8@pack_local:

; 120  : 			{
; 121  : 
; 122  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  000fd	6a 00		 push	 0
  000ff	68 ef 00 00 00	 push	 239			; 000000efH
  00104	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN9@pack_local:

; 123  : 			}
; 124  : 			/////////////////////////////////////////////////////////////////
; 125  : 
; 126  : 			/////////////////////////////////////////////////////////////////
; 127  : 			if (raw->task_dependent_root.first_child)

  0010d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00110	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00114	74 24		 je	 SHORT $LN10@pack_local

; 128  : 			{
; 129  : 
; 130  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  00116	6a 01		 push	 1
  00118	68 ef 00 00 00	 push	 239			; 000000efH
  0011d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 131  : 
; 132  : 				pack_list_root (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_root);

  00126	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00129	83 c0 0c	 add	 eax, 12			; 0000000cH
  0012c	50		 push	 eax
  0012d	6a 27		 push	 39			; 00000027H
  0012f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 133  : 			}
; 134  : 			else

  00138	eb 10		 jmp	 SHORT $LN11@pack_local
$LN10@pack_local:

; 135  : 			{
; 136  : 
; 137  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  0013a	6a 00		 push	 0
  0013c	68 ef 00 00 00	 push	 239			; 000000efH
  00141	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN11@pack_local:

; 138  : 			}
; 139  : 			/////////////////////////////////////////////////////////////////
; 140  : 
; 141  : 			/////////////////////////////////////////////////////////////////
; 142  : 			if (raw->task_dependent_link.parent)

  0014a	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0014d	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00151	74 24		 je	 SHORT $LN12@pack_local

; 143  : 			{
; 144  : 
; 145  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  00153	6a 01		 push	 1
  00155	68 ef 00 00 00	 push	 239			; 000000efH
  0015a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015d	50		 push	 eax
  0015e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 146  : 
; 147  : 				pack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  00163	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00166	83 c0 40	 add	 eax, 64			; 00000040H
  00169	50		 push	 eax
  0016a	6a 27		 push	 39			; 00000027H
  0016c	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0016f	51		 push	 ecx
  00170	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 148  : 			}
; 149  : 			else

  00175	eb 10		 jmp	 SHORT $LN13@pack_local
$LN12@pack_local:

; 150  : 			{
; 151  : 
; 152  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  00177	6a 00		 push	 0
  00179	68 ef 00 00 00	 push	 239			; 000000efH
  0017e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN13@pack_local:

; 153  : 			}
; 154  : 			/////////////////////////////////////////////////////////////////
; 155  : 
; 156  : 			pack_int_value (en, INT_TYPE_GROUP_LIST_TYPE, raw->group_list_type);

  00187	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0018a	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0018d	51		 push	 ecx
  0018e	6a 49		 push	 73			; 00000049H
  00190	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00193	52		 push	 edx
  00194	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 157  : 
; 158  : 			pack_entity_safe_ptr (raw->group_link.parent);

  00199	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0019c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0019f	51		 push	 ecx
  001a0	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 159  : //			pack_list_link (en, raw->group_list_type, &raw->group_link);
; 160  : 
; 161  : 			pack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  001a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001a8	83 c0 1c	 add	 eax, 28			; 0000001cH
  001ab	50		 push	 eax
  001ac	6a 0b		 push	 11			; 0000000bH
  001ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001b1	51		 push	 ecx
  001b2	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 162  : 
; 163  : 			// update_link
; 164  : 
; 165  : 			pack_float_value (en, FLOAT_TYPE_SLEEP, raw->sleep);

  001b7	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001ba	51		 push	 ecx
  001bb	f3 0f 10 40 5c	 movss	 xmm0, DWORD PTR [eax+92]
  001c0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c5	6a 75		 push	 117			; 00000075H
  001c7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ca	51		 push	 ecx
  001cb	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 166  : 
; 167  : 			pack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME, raw->last_seen_time);

  001d0	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001d3	51		 push	 ecx
  001d4	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  001d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001de	6a 3c		 push	 60			; 0000003cH
  001e0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e3	51		 push	 ecx
  001e4	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 168  : 
; 169  : 			pack_float_value (en, FLOAT_TYPE_ASSIST_TIMER, raw->assist_timer);

  001e9	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001ec	51		 push	 ecx
  001ed	f3 0f 10 40 64	 movss	 xmm0, DWORD PTR [eax+100]
  001f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f7	6a 0d		 push	 13			; 0000000dH
  001f9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001fc	51		 push	 ecx
  001fd	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 170  : 
; 171  : 			pack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME, raw->last_seen_time);

  00202	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00205	51		 push	 ecx
  00206	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  0020b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00210	6a 3c		 push	 60			; 0000003cH
  00212	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00215	51		 push	 ecx
  00216	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 172  : 
; 173  : 			pack_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, &raw->last_known_position);

  0021b	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0021e	83 c0 68	 add	 eax, 104		; 00000068H
  00221	50		 push	 eax
  00222	6a 17		 push	 23			; 00000017H
  00224	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00227	51		 push	 ecx
  00228	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 174  : 
; 175  : 			// supplies
; 176  : 			
; 177  : 			pack_int_value (en, INT_TYPE_ALIVE, raw->alive);

  0022d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00230	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00236	83 e1 01	 and	 ecx, 1
  00239	51		 push	 ecx
  0023a	6a 07		 push	 7
  0023c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0023f	52		 push	 edx
  00240	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 178  : 
; 179  : 			pack_int_value (en, INT_TYPE_ENGAGE_ENEMY, raw->engage_enemy);

  00245	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00248	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0024e	d1 e9		 shr	 ecx, 1
  00250	83 e1 01	 and	 ecx, 1
  00253	51		 push	 ecx
  00254	6a 33		 push	 51			; 00000033H
  00256	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00259	52		 push	 edx
  0025a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 180  : 
; 181  : 			pack_int_value (en, INT_TYPE_GROUP_CALLSIGN, raw->group_callsign);

  0025f	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00262	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00268	c1 e9 02	 shr	 ecx, 2
  0026b	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00271	51		 push	 ecx
  00272	6a 44		 push	 68			; 00000044H
  00274	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00277	52		 push	 edx
  00278	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 182  : 			
; 183  : 			pack_int_value (en, INT_TYPE_GROUP_FORMATION, raw->group_formation);

  0027d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00280	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00286	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00289	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  0028f	51		 push	 ecx
  00290	6a 47		 push	 71			; 00000047H
  00292	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00295	52		 push	 edx
  00296	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 184  : 			
; 185  : 			pack_int_value (en, INT_TYPE_KILLS, raw->kills);

  0029b	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0029e	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  002a4	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  002aa	51		 push	 ecx
  002ab	6a 72		 push	 114			; 00000072H
  002ad	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002b0	52		 push	 edx
  002b1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 186  : 
; 187  : 			pack_int_value (en, INT_TYPE_LOSSES, raw->losses);

  002b6	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  002b9	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  002bf	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  002c2	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  002c8	51		 push	 ecx
  002c9	6a 7f		 push	 127			; 0000007fH
  002cb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002ce	52		 push	 edx
  002cf	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 188  : 
; 189  : 			pack_int_value (en, INT_TYPE_MEMBER_COUNT, raw->member_count);

  002d4	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  002d7	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  002dd	c1 e9 16	 shr	 ecx, 22			; 00000016H
  002e0	83 e1 3f	 and	 ecx, 63			; 0000003fH
  002e3	51		 push	 ecx
  002e4	68 86 00 00 00	 push	 134			; 00000086H
  002e9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002ec	52		 push	 edx
  002ed	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 190  : 
; 191  : 			pack_int_value (en, INT_TYPE_VERBOSE_OPERATIONAL_STATE, raw->verbose_operational_state);

  002f2	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  002f5	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  002fb	83 e1 3f	 and	 ecx, 63			; 0000003fH
  002fe	51		 push	 ecx
  002ff	68 f4 00 00 00	 push	 244			; 000000f4H
  00304	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00307	52		 push	 edx
  00308	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 192  : 
; 193  : 			// unique_id
; 194  : 			
; 195  : 			pack_int_value (en, INT_TYPE_ROUTE_NODE, raw->route_node);

  0030d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00310	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00316	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  0031c	51		 push	 ecx
  0031d	68 b4 00 00 00	 push	 180			; 000000b4H
  00322	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00325	52		 push	 edx
  00326	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 196  : 			
; 197  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  0032b	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0032e	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00334	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00337	83 e1 03	 and	 ecx, 3
  0033a	51		 push	 ecx
  0033b	68 bb 00 00 00	 push	 187			; 000000bbH
  00340	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00343	52		 push	 edx
  00344	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 198  : 
; 199  : 			// pack whether the group should be on the update list
; 200  : 			if (raw->update_link.parent)

  00349	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0034c	83 78 4c 00	 cmp	 DWORD PTR [eax+76], 0
  00350	74 12		 je	 SHORT $LN14@pack_local

; 201  : 			{
; 202  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  00352	6a 01		 push	 1
  00354	68 ef 00 00 00	 push	 239			; 000000efH
  00359	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0035c	50		 push	 eax
  0035d	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 203  : 			}
; 204  : 			else

  00362	eb 10		 jmp	 SHORT $LN15@pack_local
$LN14@pack_local:

; 205  : 			{
; 206  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  00364	6a 00		 push	 0
  00366	68 ef 00 00 00	 push	 239			; 000000efH
  0036b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0036e	50		 push	 eax
  0036f	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN15@pack_local:

; 207  : 			}
; 208  : 
; 209  : 			break;

  00374	e9 56 02 00 00	 jmp	 $LN2@pack_local
$LN16@pack_local:

; 210  : 		}
; 211  : 		////////////////////////////////////////
; 212  : 		case PACK_MODE_CLIENT_SESSION:
; 213  : 		////////////////////////////////////////
; 214  : 		{
; 215  : 			group
; 216  : 				*raw;
; 217  : 
; 218  : 			raw = (group *) get_local_entity_data (en);

  00379	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0037c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0037f	89 4d f8	 mov	 DWORD PTR _raw$1[ebp], ecx

; 219  : 
; 220  : 			if (group_database [raw->sub_type].local_only_group)

  00382	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00385	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  00388	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  0038e	c1 ea 02	 shr	 edx, 2
  00391	83 e2 01	 and	 edx, 1
  00394	74 05		 je	 SHORT $LN17@pack_local

; 221  : 			{
; 222  : 				return;

  00396	e9 34 02 00 00	 jmp	 $LN1@pack_local
$LN17@pack_local:

; 223  : 			}
; 224  : 
; 225  : 			pack_entity_type (get_local_entity_type (en));

  0039b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0039f	74 0a		 je	 SHORT $LN27@pack_local
  003a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a6	89 4d b4	 mov	 DWORD PTR tv277[ebp], ecx
  003a9	eb 24		 jmp	 SHORT $LN28@pack_local
$LN27@pack_local:
  003ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  003b1	81 c2 91 00 00
	00		 add	 edx, 145		; 00000091H
  003b7	52		 push	 edx
  003b8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003c2	50		 push	 eax
  003c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c8	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv277[ebp], 0
$LN28@pack_local:
  003cf	8b 4d b4	 mov	 ecx, DWORD PTR tv277[ebp]
  003d2	51		 push	 ecx
  003d3	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 226  : 
; 227  : 			pack_entity_safe_ptr (en);

  003d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 228  : 
; 229  : 			//
; 230  : 			// pack data (in exactly the same order as the data is unpacked)
; 231  : 			//
; 232  : 
; 233  : 			pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->sub_type);

  003e1	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  003e4	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e6	51		 push	 ecx
  003e7	6a 34		 push	 52			; 00000034H
  003e9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  003ec	52		 push	 edx
  003ed	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 234  : 
; 235  : 			pack_list_root (en, LIST_TYPE_MEMBER, &raw->member_root);

  003f2	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  003f5	83 c0 04	 add	 eax, 4
  003f8	50		 push	 eax
  003f9	6a 19		 push	 25			; 00000019H
  003fb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003fe	51		 push	 ecx
  003ff	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 236  : 
; 237  : 			/////////////////////////////////////////////////////////////////
; 238  : 			if (raw->guide_stack_root.first_child)

  00404	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00407	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0040b	74 24		 je	 SHORT $LN18@pack_local

; 239  : 			{
; 240  : 
; 241  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  0040d	6a 01		 push	 1
  0040f	68 ef 00 00 00	 push	 239			; 000000efH
  00414	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00417	50		 push	 eax
  00418	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 242  : 
; 243  : 				pack_list_root (en, LIST_TYPE_GUIDE_STACK, &raw->guide_stack_root);

  0041d	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00420	83 c0 08	 add	 eax, 8
  00423	50		 push	 eax
  00424	6a 11		 push	 17			; 00000011H
  00426	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00429	51		 push	 ecx
  0042a	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 244  : 			}
; 245  : 			else

  0042f	eb 10		 jmp	 SHORT $LN19@pack_local
$LN18@pack_local:

; 246  : 			{
; 247  : 
; 248  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  00431	6a 00		 push	 0
  00433	68 ef 00 00 00	 push	 239			; 000000efH
  00438	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0043b	50		 push	 eax
  0043c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN19@pack_local:

; 249  : 			}
; 250  : 			/////////////////////////////////////////////////////////////////
; 251  : 
; 252  : 			/////////////////////////////////////////////////////////////////
; 253  : 			if (raw->task_dependent_root.first_child)

  00441	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00444	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00448	74 24		 je	 SHORT $LN20@pack_local

; 254  : 			{
; 255  : 
; 256  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  0044a	6a 01		 push	 1
  0044c	68 ef 00 00 00	 push	 239			; 000000efH
  00451	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00454	50		 push	 eax
  00455	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 257  : 
; 258  : 				pack_list_root (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_root);

  0045a	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0045d	83 c0 0c	 add	 eax, 12			; 0000000cH
  00460	50		 push	 eax
  00461	6a 27		 push	 39			; 00000027H
  00463	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00466	51		 push	 ecx
  00467	e8 00 00 00 00	 call	 ?pack_list_root@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_ROOT@@@Z ; pack_list_root

; 259  : 			}
; 260  : 			else

  0046c	eb 10		 jmp	 SHORT $LN21@pack_local
$LN20@pack_local:

; 261  : 			{
; 262  : 
; 263  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  0046e	6a 00		 push	 0
  00470	68 ef 00 00 00	 push	 239			; 000000efH
  00475	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00478	50		 push	 eax
  00479	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN21@pack_local:

; 264  : 			}
; 265  : 			/////////////////////////////////////////////////////////////////
; 266  : 
; 267  : 			// task_dependent_link
; 268  : 
; 269  : 			pack_int_value (en, INT_TYPE_GROUP_LIST_TYPE, raw->group_list_type);

  0047e	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00481	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  00484	51		 push	 ecx
  00485	6a 49		 push	 73			; 00000049H
  00487	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0048a	52		 push	 edx
  0048b	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 270  : 
; 271  : //			pack_list_link (en, raw->group_list_type, &raw->group_link);
; 272  : 			pack_entity_safe_ptr (raw->group_link.parent);

  00490	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00493	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00496	51		 push	 ecx
  00497	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 273  : 
; 274  : 			pack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  0049c	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0049f	83 c0 1c	 add	 eax, 28			; 0000001cH
  004a2	50		 push	 eax
  004a3	6a 0b		 push	 11			; 0000000bH
  004a5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004a8	51		 push	 ecx
  004a9	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 275  : 
; 276  : 			pack_list_link (en, LIST_TYPE_PILOT_LOCK, &raw->pilot_lock_link);

  004ae	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  004b1	83 c0 28	 add	 eax, 40			; 00000028H
  004b4	50		 push	 eax
  004b5	6a 1d		 push	 29			; 0000001dH
  004b7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004ba	51		 push	 ecx
  004bb	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 277  : 
; 278  : 			// update_link
; 279  : 
; 280  : 			// sleep
; 281  : 
; 282  : 			// assist timer
; 283  : 
; 284  : 			pack_float_value (en, FLOAT_TYPE_LAST_SEEN_TIME, raw->last_seen_time);

  004c0	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  004c3	51		 push	 ecx
  004c4	f3 0f 10 40 60	 movss	 xmm0, DWORD PTR [eax+96]
  004c9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004ce	6a 3c		 push	 60			; 0000003cH
  004d0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004d3	51		 push	 ecx
  004d4	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 285  : 
; 286  : 			pack_vec3d (en, VEC3D_TYPE_LAST_KNOWN_POSITION, &raw->last_known_position);

  004d9	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  004dc	83 c0 68	 add	 eax, 104		; 00000068H
  004df	50		 push	 eax
  004e0	6a 17		 push	 23			; 00000017H
  004e2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  004e5	51		 push	 ecx
  004e6	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 287  : 
; 288  : 			// supplies
; 289  : 			
; 290  : 			pack_int_value (en, INT_TYPE_ALIVE, raw->alive);

  004eb	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  004ee	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  004f4	83 e1 01	 and	 ecx, 1
  004f7	51		 push	 ecx
  004f8	6a 07		 push	 7
  004fa	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004fd	52		 push	 edx
  004fe	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 291  : 
; 292  : 			// engage_enemy
; 293  : 
; 294  : 			pack_int_value (en, INT_TYPE_GROUP_CALLSIGN, raw->group_callsign);

  00503	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00506	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0050c	c1 e9 02	 shr	 ecx, 2
  0050f	81 e1 ff 00 00
	00		 and	 ecx, 255		; 000000ffH
  00515	51		 push	 ecx
  00516	6a 44		 push	 68			; 00000044H
  00518	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0051b	52		 push	 edx
  0051c	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 295  : 
; 296  : 			pack_int_value (en, INT_TYPE_GROUP_FORMATION, raw->group_formation);

  00521	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00524	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0052a	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0052d	81 e1 ff ff 00
	00		 and	 ecx, 65535		; 0000ffffH
  00533	51		 push	 ecx
  00534	6a 47		 push	 71			; 00000047H
  00536	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00539	52		 push	 edx
  0053a	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 297  : 			
; 298  : 			pack_int_value (en, INT_TYPE_KILLS, raw->kills);

  0053f	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00542	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00548	81 e1 ff 0f 00
	00		 and	 ecx, 4095		; 00000fffH
  0054e	51		 push	 ecx
  0054f	6a 72		 push	 114			; 00000072H
  00551	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00554	52		 push	 edx
  00555	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 299  : 
; 300  : 			pack_int_value (en, INT_TYPE_LOSSES, raw->losses);

  0055a	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0055d	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00563	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  00566	81 e1 ff 03 00
	00		 and	 ecx, 1023		; 000003ffH
  0056c	51		 push	 ecx
  0056d	6a 7f		 push	 127			; 0000007fH
  0056f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00572	52		 push	 edx
  00573	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 301  : 
; 302  : 			pack_int_value (en, INT_TYPE_MEMBER_COUNT, raw->member_count);

  00578	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0057b	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00581	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00584	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00587	51		 push	 ecx
  00588	68 86 00 00 00	 push	 134			; 00000086H
  0058d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00590	52		 push	 edx
  00591	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 303  : 
; 304  : 			pack_int_value (en, INT_TYPE_VERBOSE_OPERATIONAL_STATE, raw->verbose_operational_state);

  00596	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00599	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [eax+148]
  0059f	83 e1 3f	 and	 ecx, 63			; 0000003fH
  005a2	51		 push	 ecx
  005a3	68 f4 00 00 00	 push	 244			; 000000f4H
  005a8	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005ab	52		 push	 edx
  005ac	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 305  : 
; 306  : 			// unique_id
; 307  : 
; 308  : 			// route_node
; 309  : 
; 310  : 			pack_int_value (en, INT_TYPE_SIDE, raw->side);

  005b1	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  005b4	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  005ba	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  005bd	83 e1 03	 and	 ecx, 3
  005c0	51		 push	 ecx
  005c1	68 bb 00 00 00	 push	 187			; 000000bbH
  005c6	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  005c9	52		 push	 edx
  005ca	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:
$LN1@pack_local:

; 311  : 
; 312  : 			break;
; 313  : 		}
; 314  : 		////////////////////////////////////////
; 315  : 		case PACK_MODE_BROWSE_SESSION:
; 316  : 		////////////////////////////////////////
; 317  : 		{
; 318  : 			break;
; 319  : 		}
; 320  : 		////////////////////////////////////////
; 321  : 		case PACK_MODE_UPDATE_ENTITY:
; 322  : 		////////////////////////////////////////
; 323  : 		{
; 324  : 			break;
; 325  : 		}
; 326  : 	}
; 327  : }

  005cf	5f		 pop	 edi
  005d0	5e		 pop	 esi
  005d1	5b		 pop	 ebx
  005d2	8b e5		 mov	 esp, ebp
  005d4	5d		 pop	 ebp
  005d5	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?unpack_group_callsign_database@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
_loop2$ = -8						; size = 4
_loop$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_group_callsign_database@@YGXW4PACK_MODES@@@Z PROC ; unpack_group_callsign_database, COMDAT

; 844  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 845  : 
; 846  : 	int
; 847  : 		loop,
; 848  : 		loop2;
; 849  : 
; 850  : 	if (mode == PACK_MODE_SERVER_SESSION)

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	75 4d		 jne	 SHORT $LN1@unpack_gro

; 851  : 	{
; 852  : 	
; 853  : 		for (loop = 0; loop < NUM_GROUP_CALLSIGNS; loop ++)

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00016	eb 09		 jmp	 SHORT $LN4@unpack_gro
$LN2@unpack_gro:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@unpack_gro:
  00021	83 7d fc 5a	 cmp	 DWORD PTR _loop$[ebp], 90 ; 0000005aH
  00025	7d 35		 jge	 SHORT $LN1@unpack_gro

; 854  : 		{
; 855  : 	
; 856  : 			for (loop2 = 0; loop2 < NUM_ENTITY_SIDES; loop2 ++)

  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop2$[ebp], 0
  0002e	eb 09		 jmp	 SHORT $LN7@unpack_gro
$LN5@unpack_gro:
  00030	8b 45 f8	 mov	 eax, DWORD PTR _loop2$[ebp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 45 f8	 mov	 DWORD PTR _loop2$[ebp], eax
$LN7@unpack_gro:
  00039	83 7d f8 03	 cmp	 DWORD PTR _loop2$[ebp], 3
  0003d	7d 1b		 jge	 SHORT $LN6@unpack_gro

; 857  : 			{
; 858  : 	
; 859  : 				group_callsign_names [loop].side [loop2] = unpack_int_value (NULL, INT_TYPE_VALUE);

  0003f	68 f2 00 00 00	 push	 242			; 000000f2H
  00044	6a 00		 push	 0
  00046	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0004b	8b 4d f8	 mov	 ecx, DWORD PTR _loop2$[ebp]
  0004e	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00051	88 84 d1 04 00
	00 00		 mov	 BYTE PTR ?group_callsign_names@@3PAUGROUP_CALLSIGN_NAME_TYPE@@A[ecx+edx*8+4], al

; 860  : 			}

  00058	eb d6		 jmp	 SHORT $LN5@unpack_gro
$LN6@unpack_gro:

; 861  : 		}

  0005a	eb bc		 jmp	 SHORT $LN2@unpack_gro
$LN1@unpack_gro:

; 862  : 	}
; 863  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?unpack_group_callsign_database@@YGXW4PACK_MODES@@@Z ENDP ; unpack_group_callsign_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?pack_group_callsign_database@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
_loop2$ = -8						; size = 4
_loop$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_group_callsign_database@@YGXW4PACK_MODES@@@Z PROC	; pack_group_callsign_database, COMDAT

; 818  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 819  : 
; 820  : 	int
; 821  : 		loop,
; 822  : 		loop2;
; 823  : 
; 824  : 	if (mode == PACK_MODE_SERVER_SESSION)

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	75 4f		 jne	 SHORT $LN1@pack_group

; 825  : 	{
; 826  : 	
; 827  : 		for (loop = 0; loop < NUM_GROUP_CALLSIGNS; loop ++)

  0000f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00016	eb 09		 jmp	 SHORT $LN4@pack_group
$LN2@pack_group:
  00018	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  0001b	83 c0 01	 add	 eax, 1
  0001e	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@pack_group:
  00021	83 7d fc 5a	 cmp	 DWORD PTR _loop$[ebp], 90 ; 0000005aH
  00025	7d 37		 jge	 SHORT $LN1@pack_group

; 828  : 		{
; 829  : 	
; 830  : 			for (loop2 = 0; loop2 < NUM_ENTITY_SIDES; loop2 ++)

  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop2$[ebp], 0
  0002e	eb 09		 jmp	 SHORT $LN7@pack_group
$LN5@pack_group:
  00030	8b 45 f8	 mov	 eax, DWORD PTR _loop2$[ebp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 45 f8	 mov	 DWORD PTR _loop2$[ebp], eax
$LN7@pack_group:
  00039	83 7d f8 03	 cmp	 DWORD PTR _loop2$[ebp], 3
  0003d	7d 1d		 jge	 SHORT $LN6@pack_group

; 831  : 			{
; 832  : 	
; 833  : 				pack_int_value (NULL, INT_TYPE_VALUE, group_callsign_names [loop].side [loop2]);

  0003f	8b 45 f8	 mov	 eax, DWORD PTR _loop2$[ebp]
  00042	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  00045	0f b6 94 c8 04
	00 00 00	 movzx	 edx, BYTE PTR ?group_callsign_names@@3PAUGROUP_CALLSIGN_NAME_TYPE@@A[eax+ecx*8+4]
  0004d	52		 push	 edx
  0004e	68 f2 00 00 00	 push	 242			; 000000f2H
  00053	6a 00		 push	 0
  00055	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 834  : 			}

  0005a	eb d4		 jmp	 SHORT $LN5@pack_group
$LN6@pack_group:

; 835  : 		}

  0005c	eb ba		 jmp	 SHORT $LN2@pack_group
$LN1@pack_group:

; 836  : 	}
; 837  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?pack_group_callsign_database@@YGXW4PACK_MODES@@@Z ENDP	; pack_group_callsign_database
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?validate_local_group_data@@YGXXZ
_TEXT	SEGMENT
tv312 = -84						; size = 4
tv292 = -84						; size = 4
tv255 = -84						; size = 4
tv235 = -84						; size = 4
tv198 = -84						; size = 4
tv178 = -84						; size = 4
tv141 = -84						; size = 4
tv83 = -84						; size = 4
tv304 = -80						; size = 4
tv284 = -80						; size = 4
tv268 = -80						; size = 4
tv247 = -80						; size = 4
tv227 = -80						; size = 4
tv211 = -80						; size = 4
tv190 = -80						; size = 4
tv170 = -80						; size = 4
tv154 = -80						; size = 4
tv133 = -80						; size = 4
tv75 = -80						; size = 4
_raw$ = -12						; size = 4
_en$ = -8						; size = 4
_force$ = -4						; size = 4
?validate_local_group_data@@YGXXZ PROC			; validate_local_group_data, COMDAT

; 738  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 739  : 	entity
; 740  : 		*force,
; 741  : 		*en;
; 742  : 
; 743  : 	group
; 744  : 		*raw;
; 745  : 
; 746  : 	//
; 747  : 	// re-calculate group division names (Cannot be done until all groups + divisions are unpacked)
; 748  : 	//
; 749  : 
; 750  : 	ASSERT (get_session_entity ());

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00010	75 18		 jne	 SHORT $LN10@validate_l
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EFCJJKAA@get_session_entity?5?$CI?$CJ@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@validate_l:

; 751  : 
; 752  : 	force = get_local_entity_first_child (get_session_entity (), LIST_TYPE_FORCE);

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00031	74 0c		 je	 SHORT $LN16@validate_l
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00038	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003a	89 4d b0	 mov	 DWORD PTR tv75[ebp], ecx
  0003d	eb 21		 jmp	 SHORT $LN17@validate_l
$LN16@validate_l:
  0003f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00045	83 c2 0e	 add	 edx, 14			; 0000000eH
  00048	52		 push	 edx
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00059	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN17@validate_l:
  00060	b9 01 00 00 00	 mov	 ecx, 1
  00065	85 c9		 test	 ecx, ecx
  00067	74 09		 je	 SHORT $LN18@validate_l
  00069	c7 45 ac 0e 00
	00 00		 mov	 DWORD PTR tv83[ebp], 14	; 0000000eH
  00070	eb 21		 jmp	 SHORT $LN19@validate_l
$LN18@validate_l:
  00072	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00078	83 c2 0e	 add	 edx, 14			; 0000000eH
  0007b	52		 push	 edx
  0007c	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0008c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN19@validate_l:
  00093	6a 0e		 push	 14			; 0000000eH
  00095	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0009b	51		 push	 ecx
  0009c	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  000a3	8b 45 ac	 mov	 eax, DWORD PTR tv83[ebp]
  000a6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000ad	ff d1		 call	 ecx
  000af	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 753  : 
; 754  : 	ASSERT (force);

  000b2	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000b6	75 18		 jne	 SHORT $LN2@validate_l
  000b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  000bd	83 c0 10	 add	 eax, 16			; 00000010H
  000c0	50		 push	 eax
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_05BINPNAAL@force@
  000cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@validate_l:

; 755  : 
; 756  : 	while (force)

  000d0	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000d4	0f 84 f0 04 00
	00		 je	 $LN1@validate_l

; 757  : 	{
; 758  : 		//
; 759  : 		// GROUND REGISTRY
; 760  : 		//
; 761  : 		
; 762  : 		en = get_local_entity_first_child (force, LIST_TYPE_GROUND_REGISTRY);

  000da	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  000de	74 0a		 je	 SHORT $LN20@validate_l
  000e0	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  000e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e5	89 4d b0	 mov	 DWORD PTR tv133[ebp], ecx
  000e8	eb 21		 jmp	 SHORT $LN21@validate_l
$LN20@validate_l:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  000f0	83 c2 18	 add	 edx, 24			; 00000018H
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN21@validate_l:
  0010b	b9 01 00 00 00	 mov	 ecx, 1
  00110	85 c9		 test	 ecx, ecx
  00112	74 09		 je	 SHORT $LN22@validate_l
  00114	c7 45 ac 0f 00
	00 00		 mov	 DWORD PTR tv141[ebp], 15 ; 0000000fH
  0011b	eb 21		 jmp	 SHORT $LN23@validate_l
$LN22@validate_l:
  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00123	83 c2 18	 add	 edx, 24			; 00000018H
  00126	52		 push	 edx
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00137	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN23@validate_l:
  0013e	6a 0f		 push	 15			; 0000000fH
  00140	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00143	51		 push	 ecx
  00144	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  0014b	8b 45 ac	 mov	 eax, DWORD PTR tv141[ebp]
  0014e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00155	ff d1		 call	 ecx
  00157	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax
$LN4@validate_l:

; 763  : 
; 764  : 		while (en)

  0015a	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0015e	0f 84 ef 00 00
	00		 je	 $LN5@validate_l

; 765  : 		{
; 766  : 			ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  00164	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00168	74 0a		 je	 SHORT $LN24@validate_l
  0016a	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0016d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016f	89 4d b0	 mov	 DWORD PTR tv154[ebp], ecx
  00172	eb 21		 jmp	 SHORT $LN25@validate_l
$LN24@validate_l:
  00174	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0017a	83 c2 1c	 add	 edx, 28			; 0000001cH
  0017d	52		 push	 edx
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00183	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018e	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv154[ebp], 0
$LN25@validate_l:
  00195	83 7d b0 0c	 cmp	 DWORD PTR tv154[ebp], 12 ; 0000000cH
  00199	74 18		 je	 SHORT $LN12@validate_l
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  001a0	83 c0 1c	 add	 eax, 28			; 0000001cH
  001a3	50		 push	 eax
  001a4	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a9	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  001ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@validate_l:

; 767  : 
; 768  : 			raw = (group *) get_local_entity_data (en);

  001b3	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001b6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001b9	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 769  : 
; 770  : 			set_local_division_name (en, raw->division_name);

  001bc	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  001bf	05 98 00 00 00	 add	 eax, 152		; 00000098H
  001c4	50		 push	 eax
  001c5	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  001c8	51		 push	 ecx
  001c9	e8 00 00 00 00	 call	 ?set_local_division_name@@YGHPAUENTITY@@PAD@Z ; set_local_division_name

; 771  : 
; 772  : 			en = get_local_entity_child_succ (en, LIST_TYPE_GROUND_REGISTRY);

  001ce	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  001d2	74 0a		 je	 SHORT $LN26@validate_l
  001d4	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  001d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d9	89 4d b0	 mov	 DWORD PTR tv170[ebp], ecx
  001dc	eb 21		 jmp	 SHORT $LN27@validate_l
$LN26@validate_l:
  001de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  001e4	83 c2 22	 add	 edx, 34			; 00000022H
  001e7	52		 push	 edx
  001e8	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f2	50		 push	 eax
  001f3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f8	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN27@validate_l:
  001ff	b9 01 00 00 00	 mov	 ecx, 1
  00204	85 c9		 test	 ecx, ecx
  00206	74 09		 je	 SHORT $LN28@validate_l
  00208	c7 45 ac 0f 00
	00 00		 mov	 DWORD PTR tv178[ebp], 15 ; 0000000fH
  0020f	eb 21		 jmp	 SHORT $LN29@validate_l
$LN28@validate_l:
  00211	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00217	83 c2 22	 add	 edx, 34			; 00000022H
  0021a	52		 push	 edx
  0021b	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00220	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN29@validate_l:
  00232	6a 0f		 push	 15			; 0000000fH
  00234	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00237	51		 push	 ecx
  00238	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv170[ebp], 180
  0023f	8b 45 ac	 mov	 eax, DWORD PTR tv178[ebp]
  00242	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00249	ff d1		 call	 ecx
  0024b	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 773  : 		}

  0024e	e9 07 ff ff ff	 jmp	 $LN4@validate_l
$LN5@validate_l:

; 774  : 		
; 775  : 		//
; 776  : 		// AIR REGISTRY
; 777  : 		//
; 778  : 		
; 779  : 		en = get_local_entity_first_child (force, LIST_TYPE_AIR_REGISTRY);

  00253	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00257	74 0a		 je	 SHORT $LN30@validate_l
  00259	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  0025c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025e	89 4d b0	 mov	 DWORD PTR tv190[ebp], ecx
  00261	eb 21		 jmp	 SHORT $LN31@validate_l
$LN30@validate_l:
  00263	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00269	83 c2 29	 add	 edx, 41			; 00000029H
  0026c	52		 push	 edx
  0026d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00272	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00277	50		 push	 eax
  00278	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027d	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv190[ebp], 0
$LN31@validate_l:
  00284	b9 01 00 00 00	 mov	 ecx, 1
  00289	85 c9		 test	 ecx, ecx
  0028b	74 09		 je	 SHORT $LN32@validate_l
  0028d	c7 45 ac 02 00
	00 00		 mov	 DWORD PTR tv198[ebp], 2
  00294	eb 21		 jmp	 SHORT $LN33@validate_l
$LN32@validate_l:
  00296	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0029c	83 c2 29	 add	 edx, 41			; 00000029H
  0029f	52		 push	 edx
  002a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002aa	50		 push	 eax
  002ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b0	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv198[ebp], 0
$LN33@validate_l:
  002b7	6a 02		 push	 2
  002b9	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  002bc	51		 push	 ecx
  002bd	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv190[ebp], 180
  002c4	8b 45 ac	 mov	 eax, DWORD PTR tv198[ebp]
  002c7	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002ce	ff d1		 call	 ecx
  002d0	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax
$LN6@validate_l:

; 780  : 
; 781  : 		while (en)

  002d3	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  002d7	0f 84 ef 00 00
	00		 je	 $LN7@validate_l

; 782  : 		{
; 783  : 			ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  002dd	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  002e1	74 0a		 je	 SHORT $LN34@validate_l
  002e3	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  002e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e8	89 4d b0	 mov	 DWORD PTR tv211[ebp], ecx
  002eb	eb 21		 jmp	 SHORT $LN35@validate_l
$LN34@validate_l:
  002ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  002f3	83 c2 2d	 add	 edx, 45			; 0000002dH
  002f6	52		 push	 edx
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00307	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv211[ebp], 0
$LN35@validate_l:
  0030e	83 7d b0 0c	 cmp	 DWORD PTR tv211[ebp], 12 ; 0000000cH
  00312	74 18		 je	 SHORT $LN13@validate_l
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00319	83 c0 2d	 add	 eax, 45			; 0000002dH
  0031c	50		 push	 eax
  0031d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00322	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  00327	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN13@validate_l:

; 784  : 
; 785  : 			raw = (group *) get_local_entity_data (en);

  0032c	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0032f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00332	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 786  : 
; 787  : 			set_local_division_name (en, raw->division_name);

  00335	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  00338	05 98 00 00 00	 add	 eax, 152		; 00000098H
  0033d	50		 push	 eax
  0033e	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00341	51		 push	 ecx
  00342	e8 00 00 00 00	 call	 ?set_local_division_name@@YGHPAUENTITY@@PAD@Z ; set_local_division_name

; 788  : 
; 789  : 			en = get_local_entity_child_succ (en, LIST_TYPE_AIR_REGISTRY);

  00347	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0034b	74 0a		 je	 SHORT $LN36@validate_l
  0034d	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00350	8b 08		 mov	 ecx, DWORD PTR [eax]
  00352	89 4d b0	 mov	 DWORD PTR tv227[ebp], ecx
  00355	eb 21		 jmp	 SHORT $LN37@validate_l
$LN36@validate_l:
  00357	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0035d	83 c2 33	 add	 edx, 51			; 00000033H
  00360	52		 push	 edx
  00361	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00366	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0036b	50		 push	 eax
  0036c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00371	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN37@validate_l:
  00378	b9 01 00 00 00	 mov	 ecx, 1
  0037d	85 c9		 test	 ecx, ecx
  0037f	74 09		 je	 SHORT $LN38@validate_l
  00381	c7 45 ac 02 00
	00 00		 mov	 DWORD PTR tv235[ebp], 2
  00388	eb 21		 jmp	 SHORT $LN39@validate_l
$LN38@validate_l:
  0038a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00390	83 c2 33	 add	 edx, 51			; 00000033H
  00393	52		 push	 edx
  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00399	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0039e	50		 push	 eax
  0039f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a4	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN39@validate_l:
  003ab	6a 02		 push	 2
  003ad	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  003b0	51		 push	 ecx
  003b1	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv227[ebp], 180
  003b8	8b 45 ac	 mov	 eax, DWORD PTR tv235[ebp]
  003bb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  003c2	ff d1		 call	 ecx
  003c4	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 790  : 		}

  003c7	e9 07 ff ff ff	 jmp	 $LN6@validate_l
$LN7@validate_l:

; 791  : 		
; 792  : 		//
; 793  : 		// SEA REGISTRY
; 794  : 		//
; 795  : 		
; 796  : 		en = get_local_entity_first_child (force, LIST_TYPE_SEA_REGISTRY);

  003cc	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  003d0	74 0a		 je	 SHORT $LN40@validate_l
  003d2	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  003d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  003d7	89 4d b0	 mov	 DWORD PTR tv247[ebp], ecx
  003da	eb 21		 jmp	 SHORT $LN41@validate_l
$LN40@validate_l:
  003dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  003e2	83 c2 3a	 add	 edx, 58			; 0000003aH
  003e5	52		 push	 edx
  003e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003f0	50		 push	 eax
  003f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv247[ebp], 0
$LN41@validate_l:
  003fd	b9 01 00 00 00	 mov	 ecx, 1
  00402	85 c9		 test	 ecx, ecx
  00404	74 09		 je	 SHORT $LN42@validate_l
  00406	c7 45 ac 20 00
	00 00		 mov	 DWORD PTR tv255[ebp], 32 ; 00000020H
  0040d	eb 21		 jmp	 SHORT $LN43@validate_l
$LN42@validate_l:
  0040f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00415	83 c2 3a	 add	 edx, 58			; 0000003aH
  00418	52		 push	 edx
  00419	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00429	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv255[ebp], 0
$LN43@validate_l:
  00430	6a 20		 push	 32			; 00000020H
  00432	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  00435	51		 push	 ecx
  00436	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv247[ebp], 180
  0043d	8b 45 ac	 mov	 eax, DWORD PTR tv255[ebp]
  00440	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00447	ff d1		 call	 ecx
  00449	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax
$LN8@validate_l:

; 797  : 
; 798  : 		while (en)

  0044c	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00450	0f 84 ef 00 00
	00		 je	 $LN9@validate_l

; 799  : 		{
; 800  : 			ASSERT (get_local_entity_type (en) == ENTITY_TYPE_GROUP);

  00456	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  0045a	74 0a		 je	 SHORT $LN44@validate_l
  0045c	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  0045f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00461	89 4d b0	 mov	 DWORD PTR tv268[ebp], ecx
  00464	eb 21		 jmp	 SHORT $LN45@validate_l
$LN44@validate_l:
  00466	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0046c	83 c2 3e	 add	 edx, 62			; 0000003eH
  0046f	52		 push	 edx
  00470	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00475	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0047a	50		 push	 eax
  0047b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00480	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv268[ebp], 0
$LN45@validate_l:
  00487	83 7d b0 0c	 cmp	 DWORD PTR tv268[ebp], 12 ; 0000000cH
  0048b	74 18		 je	 SHORT $LN14@validate_l
  0048d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00492	83 c0 3e	 add	 eax, 62			; 0000003eH
  00495	50		 push	 eax
  00496	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  0049b	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@LNAMKNMB@get_local_entity_type?5?$CIen?$CJ?5?$DN?$DN?5E@
  004a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@validate_l:

; 801  : 
; 802  : 			raw = (group *) get_local_entity_data (en);

  004a5	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  004a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  004ab	89 4d f4	 mov	 DWORD PTR _raw$[ebp], ecx

; 803  : 
; 804  : 			set_local_division_name (en, raw->division_name);

  004ae	8b 45 f4	 mov	 eax, DWORD PTR _raw$[ebp]
  004b1	05 98 00 00 00	 add	 eax, 152		; 00000098H
  004b6	50		 push	 eax
  004b7	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  004ba	51		 push	 ecx
  004bb	e8 00 00 00 00	 call	 ?set_local_division_name@@YGHPAUENTITY@@PAD@Z ; set_local_division_name

; 805  : 
; 806  : 			en = get_local_entity_child_succ (en, LIST_TYPE_SEA_REGISTRY);

  004c0	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  004c4	74 0a		 je	 SHORT $LN46@validate_l
  004c6	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  004c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  004cb	89 4d b0	 mov	 DWORD PTR tv284[ebp], ecx
  004ce	eb 21		 jmp	 SHORT $LN47@validate_l
$LN46@validate_l:
  004d0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  004d6	83 c2 44	 add	 edx, 68			; 00000044H
  004d9	52		 push	 edx
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  004df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004ea	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv284[ebp], 0
$LN47@validate_l:
  004f1	b9 01 00 00 00	 mov	 ecx, 1
  004f6	85 c9		 test	 ecx, ecx
  004f8	74 09		 je	 SHORT $LN48@validate_l
  004fa	c7 45 ac 20 00
	00 00		 mov	 DWORD PTR tv292[ebp], 32 ; 00000020H
  00501	eb 21		 jmp	 SHORT $LN49@validate_l
$LN48@validate_l:
  00503	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  00509	83 c2 44	 add	 edx, 68			; 00000044H
  0050c	52		 push	 edx
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv292[ebp], 0
$LN49@validate_l:
  00524	6a 20		 push	 32			; 00000020H
  00526	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00529	51		 push	 ecx
  0052a	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv284[ebp], 180
  00531	8b 45 ac	 mov	 eax, DWORD PTR tv292[ebp]
  00534	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0053b	ff d1		 call	 ecx
  0053d	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax

; 807  : 		}

  00540	e9 07 ff ff ff	 jmp	 $LN8@validate_l
$LN9@validate_l:

; 808  : 		
; 809  : 		force = get_local_entity_child_succ (force, LIST_TYPE_FORCE);

  00545	83 7d fc 00	 cmp	 DWORD PTR _force$[ebp], 0
  00549	74 0a		 je	 SHORT $LN50@validate_l
  0054b	8b 45 fc	 mov	 eax, DWORD PTR _force$[ebp]
  0054e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00550	89 4d b0	 mov	 DWORD PTR tv304[ebp], ecx
  00553	eb 21		 jmp	 SHORT $LN51@validate_l
$LN50@validate_l:
  00555	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0055b	83 c2 47	 add	 edx, 71			; 00000047H
  0055e	52		 push	 edx
  0055f	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00564	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00569	50		 push	 eax
  0056a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0056f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv304[ebp], 0
$LN51@validate_l:
  00576	b9 01 00 00 00	 mov	 ecx, 1
  0057b	85 c9		 test	 ecx, ecx
  0057d	74 09		 je	 SHORT $LN52@validate_l
  0057f	c7 45 ac 0e 00
	00 00		 mov	 DWORD PTR tv312[ebp], 14 ; 0000000eH
  00586	eb 21		 jmp	 SHORT $LN53@validate_l
$LN52@validate_l:
  00588	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??validate_local_group_data@@YGXXZ@4JA
  0058e	83 c2 47	 add	 edx, 71			; 00000047H
  00591	52		 push	 edx
  00592	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00597	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0059c	50		 push	 eax
  0059d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005a2	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv312[ebp], 0
$LN53@validate_l:
  005a9	6a 0e		 push	 14			; 0000000eH
  005ab	8b 4d fc	 mov	 ecx, DWORD PTR _force$[ebp]
  005ae	51		 push	 ecx
  005af	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv304[ebp], 180
  005b6	8b 45 ac	 mov	 eax, DWORD PTR tv312[ebp]
  005b9	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  005c0	ff d1		 call	 ecx
  005c2	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 810  : 	}

  005c5	e9 06 fb ff ff	 jmp	 $LN2@validate_l
$LN1@validate_l:

; 811  : }

  005ca	5f		 pop	 edi
  005cb	5e		 pop	 esi
  005cc	5b		 pop	 ebx
  005cd	8b e5		 mov	 esp, ebp
  005cf	5d		 pop	 ebp
  005d0	c3		 ret	 0
?validate_local_group_data@@YGXXZ ENDP			; validate_local_group_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?unpack_local_group_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv72 = -76						; size = 4
_en$ = -8						; size = 4
_raw$ = -4						; size = 4
_mode$ = 8						; size = 4
?unpack_local_group_data@@YGXW4PACK_MODES@@@Z PROC	; unpack_local_group_data, COMDAT

; 688  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 689  : 
; 690  : 	group
; 691  : 		*raw;
; 692  : 
; 693  : 	entity
; 694  : 		*en;
; 695  : 
; 696  : 	if ((mode != PACK_MODE_SERVER_SESSION) && (mode != PACK_MODE_CLIENT_SESSION))

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	74 0b		 je	 SHORT $LN4@unpack_loc
  0000f	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00013	74 05		 je	 SHORT $LN4@unpack_loc

; 697  : 	{
; 698  : 
; 699  : 		return;

  00015	e9 a6 00 00 00	 jmp	 $LN1@unpack_loc
$LN4@unpack_loc:

; 700  : 	}
; 701  : 
; 702  : 	en = get_local_entity_list ();

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  0001f	89 45 f8	 mov	 DWORD PTR _en$[ebp], eax
$LN2@unpack_loc:

; 703  : 
; 704  : 	while (en)

  00022	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00026	0f 84 94 00 00
	00		 je	 $LN1@unpack_loc

; 705  : 	{
; 706  : 		if (get_local_entity_type (en) == ENTITY_TYPE_GROUP)

  0002c	83 7d f8 00	 cmp	 DWORD PTR _en$[ebp], 0
  00030	74 0a		 je	 SHORT $LN9@unpack_loc
  00032	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b4	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 1d		 jmp	 SHORT $LN10@unpack_loc
$LN9@unpack_loc:
  0003c	68 c2 02 00 00	 push	 706			; 000002c2H
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00052	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN10@unpack_loc:
  00059	83 7d b4 0c	 cmp	 DWORD PTR tv72[ebp], 12	; 0000000cH
  0005d	75 53		 jne	 SHORT $LN5@unpack_loc

; 707  : 		{
; 708  : 			raw = (group *) get_local_entity_data (en);

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 709  : 
; 710  : 			if (group_database [raw->sub_type].local_only_group)

  00068	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  0006e	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  00074	c1 ea 02	 shr	 edx, 2
  00077	83 e2 01	 and	 edx, 1
  0007a	74 36		 je	 SHORT $LN5@unpack_loc

; 711  : 			{
; 712  : 				//
; 713  : 				// DIVISION LINK
; 714  : 				//
; 715  : 
; 716  : 				unpack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0007f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00082	50		 push	 eax
  00083	6a 0b		 push	 11			; 0000000bH
  00085	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link

; 717  : 
; 718  : 				//
; 719  : 				// TASK DEPENDENT LINK
; 720  : 				//
; 721  : 
; 722  : 				if (unpack_int_value (en, INT_TYPE_VALID))

  0008e	68 ef 00 00 00	 push	 239			; 000000efH
  00093	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0009c	85 c0		 test	 eax, eax
  0009e	74 12		 je	 SHORT $LN5@unpack_loc

; 723  : 				{
; 724  : 					unpack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a3	83 c0 40	 add	 eax, 64			; 00000040H
  000a6	50		 push	 eax
  000a7	6a 27		 push	 39			; 00000027H
  000a9	8b 4d f8	 mov	 ecx, DWORD PTR _en$[ebp]
  000ac	51		 push	 ecx
  000ad	e8 00 00 00 00	 call	 ?unpack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; unpack_list_link
$LN5@unpack_loc:

; 725  : 				}
; 726  : 			}
; 727  : 		}
; 728  : 		
; 729  : 		en = get_local_entity_succ (en);

  000b2	8b 45 f8	 mov	 eax, DWORD PTR _en$[ebp]
  000b5	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000b8	89 4d f8	 mov	 DWORD PTR _en$[ebp], ecx

; 730  : 	}

  000bb	e9 62 ff ff ff	 jmp	 $LN2@unpack_loc
$LN1@unpack_loc:

; 731  : }

  000c0	5f		 pop	 edi
  000c1	5e		 pop	 esi
  000c2	5b		 pop	 ebx
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c2 04 00	 ret	 4
?unpack_local_group_data@@YGXW4PACK_MODES@@@Z ENDP	; unpack_local_group_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?pack_local_group_data@@YGXW4PACK_MODES@@@Z
_TEXT	SEGMENT
tv72 = -76						; size = 4
_raw$ = -8						; size = 4
_en$ = -4						; size = 4
_mode$ = 8						; size = 4
?pack_local_group_data@@YGXW4PACK_MODES@@@Z PROC	; pack_local_group_data, COMDAT

; 634  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 635  : 	entity
; 636  : 		*en;
; 637  : 
; 638  : 	group
; 639  : 		*raw;
; 640  : 
; 641  : 	if ((mode != PACK_MODE_SERVER_SESSION) && (mode != PACK_MODE_CLIENT_SESSION))

  00009	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	74 0b		 je	 SHORT $LN4@pack_local
  0000f	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00013	74 05		 je	 SHORT $LN4@pack_local

; 642  : 	{
; 643  : 		return;

  00015	e9 bf 00 00 00	 jmp	 $LN1@pack_local
$LN4@pack_local:

; 644  : 	}
; 645  : 
; 646  : 	en = get_local_entity_list ();

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_entity@@3PAUENTITY@@A ; first_used_entity
  0001f	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax
$LN2@pack_local:

; 647  : 
; 648  : 	while (en)

  00022	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00026	0f 84 ad 00 00
	00		 je	 $LN1@pack_local

; 649  : 	{
; 650  : 		if (get_local_entity_type (en) == ENTITY_TYPE_GROUP)

  0002c	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00030	74 0a		 je	 SHORT $LN10@pack_local
  00032	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00035	8b 08		 mov	 ecx, DWORD PTR [eax]
  00037	89 4d b4	 mov	 DWORD PTR tv72[ebp], ecx
  0003a	eb 1d		 jmp	 SHORT $LN11@pack_local
$LN10@pack_local:
  0003c	68 8a 02 00 00	 push	 650			; 0000028aH
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0EL@NJHLMAKB@c?3?2users?2nhv90?2projects?2eech?2ap@
  00046	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00052	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN11@pack_local:
  00059	83 7d b4 0c	 cmp	 DWORD PTR tv72[ebp], 12	; 0000000cH
  0005d	75 6c		 jne	 SHORT $LN5@pack_local

; 651  : 		{
; 652  : 			raw = (group *) get_local_entity_data (en);

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00062	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00065	89 4d f8	 mov	 DWORD PTR _raw$[ebp], ecx

; 653  : 
; 654  : 			if (group_database [raw->sub_type].local_only_group)

  00068	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	6b 08 64	 imul	 ecx, DWORD PTR [eax], 100
  0006e	8b 91 48 00 00
	00		 mov	 edx, DWORD PTR ?group_database@@3PAUGROUP_DATA@@A[ecx+72]
  00074	c1 ea 02	 shr	 edx, 2
  00077	83 e2 01	 and	 edx, 1
  0007a	74 4f		 je	 SHORT $LN5@pack_local

; 655  : 			{
; 656  : 				//
; 657  : 				// DIVISION LINK
; 658  : 				//
; 659  : 
; 660  : 				pack_list_link (en, LIST_TYPE_DIVISION, &raw->division_link);

  0007c	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  0007f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00082	50		 push	 eax
  00083	6a 0b		 push	 11			; 0000000bH
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 661  : 
; 662  : 				//
; 663  : 				// TASK DEPENDENT LINK
; 664  : 				//
; 665  : 
; 666  : 				if (raw->task_dependent_link.parent)

  0008e	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  00091	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00095	74 24		 je	 SHORT $LN7@pack_local

; 667  : 				{
; 668  : 					pack_int_value (en, INT_TYPE_VALID, TRUE);

  00097	6a 01		 push	 1
  00099	68 ef 00 00 00	 push	 239			; 000000efH
  0009e	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 669  : 
; 670  : 					pack_list_link (en, LIST_TYPE_TASK_DEPENDENT, &raw->task_dependent_link);

  000a7	8b 45 f8	 mov	 eax, DWORD PTR _raw$[ebp]
  000aa	83 c0 40	 add	 eax, 64			; 00000040H
  000ad	50		 push	 eax
  000ae	6a 27		 push	 39			; 00000027H
  000b0	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  000b3	51		 push	 ecx
  000b4	e8 00 00 00 00	 call	 ?pack_list_link@@YGXPAUENTITY@@W4LIST_TYPES@@PAULIST_LINK@@@Z ; pack_list_link

; 671  : 				}
; 672  : 				else

  000b9	eb 10		 jmp	 SHORT $LN5@pack_local
$LN7@pack_local:

; 673  : 				{
; 674  : 					pack_int_value (en, INT_TYPE_VALID, FALSE);

  000bb	6a 00		 push	 0
  000bd	68 ef 00 00 00	 push	 239			; 000000efH
  000c2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN5@pack_local:

; 675  : 				}
; 676  : 			}
; 677  : 		}
; 678  : 
; 679  : 		en = get_local_entity_succ (en);

  000cb	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000ce	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000d1	89 4d fc	 mov	 DWORD PTR _en$[ebp], ecx

; 680  : 	}

  000d4	e9 49 ff ff ff	 jmp	 $LN2@pack_local
$LN1@pack_local:

; 681  : }

  000d9	5f		 pop	 edi
  000da	5e		 pop	 esi
  000db	5b		 pop	 ebx
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c2 04 00	 ret	 4
?pack_local_group_data@@YGXW4PACK_MODES@@@Z ENDP	; pack_local_group_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\group\gp_pack.c
;	COMDAT ?overload_group_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_group_pack_functions@@YGXXZ PROC		; overload_group_pack_functions, COMDAT

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  : 	fn_pack_local_entity_data[ENTITY_TYPE_GROUP]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0c	 imul	 ecx, eax, 12
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 625  : 
; 626  : 	fn_unpack_local_entity_data[ENTITY_TYPE_GROUP]	= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 0c	 imul	 ecx, eax, 12
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 627  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_group_pack_functions@@YGXXZ ENDP		; overload_group_pack_functions
_TEXT	ENDS
END
