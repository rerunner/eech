; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\system\en_main\en_world.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?world_map@@3UWORLD_MAP_DATA@@A			; world_map
_BSS	SEGMENT
?world_map@@3UWORLD_MAP_DATA@@A DB 048H DUP (?)		; world_map
_BSS	ENDS
PUBLIC	?set_entity_world_map_size@@YGXHHH@Z		; set_entity_world_map_size
PUBLIC	?bound_position_to_map_area@@YGHPAUVEC3D@@@Z	; bound_position_to_map_area
PUBLIC	?bound_position_to_adjusted_map_area@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_area
PUBLIC	?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z	; bound_position_to_map_volume
PUBLIC	?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ; bound_position_to_adjusted_map_volume
PUBLIC	?bound_double_position_to_adjusted_map_volume@@YGHPAUDOUBLE_VEC3D@@@Z ; bound_double_position_to_adjusted_map_volume
PUBLIC	?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA ; `set_entity_world_map_size'::`1'::__LINE__Var
PUBLIC	??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BG@MBDPBBHL@num_map_x_sectors?5?$DO?50@	; `string'
PUBLIC	??_C@_0BG@CAFBNFNG@num_map_z_sectors?5?$DO?50@	; `string'
PUBLIC	??_C@_0CI@FNEEGNBE@int_bit_count?5?$CIsector_side_leng@ ; `string'
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40b3880000000000
PUBLIC	__real@477fff00
PUBLIC	__real@c5fa0000
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?int_bit_count@@YGHI@Z:PROC			; int_bit_count
EXTRN	__fltused:DWORD
;	COMDAT __real@c5fa0000
CONST	SEGMENT
__real@c5fa0000 DD 0c5fa0000r			; -8000
CONST	ENDS
;	COMDAT __real@477fff00
CONST	SEGMENT
__real@477fff00 DD 0477fff00r			; 65535
CONST	ENDS
;	COMDAT __real@40b3880000000000
CONST	SEGMENT
__real@40b3880000000000 DQ 040b3880000000000r	; 5000
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT ??_C@_0CI@FNEEGNBE@int_bit_count?5?$CIsector_side_leng@
CONST	SEGMENT
??_C@_0CI@FNEEGNBE@int_bit_count?5?$CIsector_side_leng@ DB 'int_bit_count'
	DB	' (sector_side_length) == 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CAFBNFNG@num_map_z_sectors?5?$DO?50@
CONST	SEGMENT
??_C@_0BG@CAFBNFNG@num_map_z_sectors?5?$DO?50@ DB 'num_map_z_sectors > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MBDPBBHL@num_map_x_sectors?5?$DO?50@
CONST	SEGMENT
??_C@_0BG@MBDPBBHL@num_map_x_sectors?5?$DO?50@ DB 'num_map_x_sectors > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nhv'
	DB	'90\projects\eech\aphavoc\source\entity\system\en_main\en_worl'
	DB	'd.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA DD 057H ; `set_entity_world_map_size'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?bound_double_position_to_adjusted_map_volume@@YGHPAUDOUBLE_VEC3D@@@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_position$ = 8						; size = 4
?bound_double_position_to_adjusted_map_volume@@YGHPAUDOUBLE_VEC3D@@@Z PROC ; bound_double_position_to_adjusted_map_volume, COMDAT

; 313  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 314  : 	int
; 315  : 		result;
; 316  : 
; 317  : 	result = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 318  : 
; 319  : 	if (position->x < MIN_MAP_X + MAP_PERIMETER_SIZE)

  00010	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00018	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  00020	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00023	66 0f 2f 00	 comisd	 xmm0, QWORD PTR [eax]
  00027	76 20		 jbe	 SHORT $LN2@bound_doub

; 320  : 	{
; 321  : 		position->x = MIN_MAP_X + MAP_PERIMETER_SIZE;

  00029	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00031	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  00039	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0003c	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0

; 322  : 
; 323  : 		result = TRUE;

  00040	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00047	eb 3b		 jmp	 SHORT $LN4@bound_doub
$LN2@bound_doub:

; 324  : 	}
; 325  : 	else if (position->x > MAX_MAP_X - MAP_PERIMETER_SIZE)

  00049	f3 0f 5a 05 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00051	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00059	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0005c	f2 0f 10 08	 movsd	 xmm1, QWORD PTR [eax]
  00060	66 0f 2f c8	 comisd	 xmm1, xmm0
  00064	76 1e		 jbe	 SHORT $LN4@bound_doub

; 326  : 	{
; 327  : 		position->x = MAX_MAP_X - MAP_PERIMETER_SIZE;

  00066	f3 0f 5a 05 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  0006e	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00076	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00079	f2 0f 11 00	 movsd	 QWORD PTR [eax], xmm0

; 328  : 
; 329  : 		result = TRUE;

  0007d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN4@bound_doub:

; 330  : 	}
; 331  : 
; 332  : 	if (position->y < MIN_MAP_Y)

  00084	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0008c	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0008f	66 0f 2f 40 08	 comisd	 xmm0, QWORD PTR [eax+8]
  00094	76 19		 jbe	 SHORT $LN5@bound_doub

; 333  : 	{
; 334  : 		position->y = MIN_MAP_Y;

  00096	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0009e	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000a1	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 335  : 
; 336  : 		result = TRUE;

  000a6	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  000ad	eb 2d		 jmp	 SHORT $LN7@bound_doub
$LN5@bound_doub:

; 337  : 	}
; 338  : 	else if (position->y > MAX_MAP_Y)

  000af	f3 0f 5a 05 40
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  000b7	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000ba	f2 0f 10 48 08	 movsd	 xmm1, QWORD PTR [eax+8]
  000bf	66 0f 2f c8	 comisd	 xmm1, xmm0
  000c3	76 17		 jbe	 SHORT $LN7@bound_doub

; 339  : 	{
; 340  : 		position->y = MAX_MAP_Y;

  000c5	f3 0f 5a 05 40
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  000cd	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000d0	f2 0f 11 40 08	 movsd	 QWORD PTR [eax+8], xmm0

; 341  : 
; 342  : 		result = TRUE;

  000d5	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@bound_doub:

; 343  : 	}
; 344  : 
; 345  : 	if (position->z < MIN_MAP_Z + MAP_PERIMETER_SIZE)

  000dc	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000e4	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  000ec	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000ef	66 0f 2f 40 10	 comisd	 xmm0, QWORD PTR [eax+16]
  000f4	76 21		 jbe	 SHORT $LN8@bound_doub

; 346  : 	{
; 347  : 		position->z = MIN_MAP_Z + MAP_PERIMETER_SIZE;

  000f6	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000fe	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  00106	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00109	f2 0f 11 40 10	 movsd	 QWORD PTR [eax+16], xmm0

; 348  : 
; 349  : 		result = TRUE;

  0010e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00115	eb 3d		 jmp	 SHORT $LN10@bound_doub
$LN8@bound_doub:

; 350  : 	}
; 351  : 	else if (position->z > MAX_MAP_Z - MAP_PERIMETER_SIZE)

  00117	f3 0f 5a 05 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0011f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00127	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0012a	f2 0f 10 48 10	 movsd	 xmm1, QWORD PTR [eax+16]
  0012f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00133	76 1f		 jbe	 SHORT $LN10@bound_doub

; 352  : 	{
; 353  : 		position->z = MAX_MAP_Z - MAP_PERIMETER_SIZE;

  00135	f3 0f 5a 05 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0013d	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00145	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00148	f2 0f 11 40 10	 movsd	 QWORD PTR [eax+16], xmm0

; 354  : 
; 355  : 		result = TRUE;

  0014d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN10@bound_doub:

; 356  : 	}
; 357  : 
; 358  : 	return (result);

  00154	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 359  : }

  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	5b		 pop	 ebx
  0015a	8b e5		 mov	 esp, ebp
  0015c	5d		 pop	 ebp
  0015d	c2 04 00	 ret	 4
?bound_double_position_to_adjusted_map_volume@@YGHPAUDOUBLE_VEC3D@@@Z ENDP ; bound_double_position_to_adjusted_map_volume
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_position$ = 8						; size = 4
?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z PROC ; bound_position_to_adjusted_map_volume, COMDAT

; 260  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 261  : 	int
; 262  : 		result;
; 263  : 
; 264  : 	result = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 265  : 
; 266  : 	if (position->x < MIN_MAP_X + MAP_PERIMETER_SIZE)

  00010	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00013	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00017	f3 0f 5a 0d 24
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0001f	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40b3880000000000
  00027	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002b	76 24		 jbe	 SHORT $LN2@bound_posi

; 267  : 	{
; 268  : 		position->x = MIN_MAP_X + MAP_PERIMETER_SIZE;

  0002d	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00035	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  0003d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00041	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00044	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 269  : 
; 270  : 		result = TRUE;

  00048	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  0004f	eb 3f		 jmp	 SHORT $LN4@bound_posi
$LN2@bound_posi:

; 271  : 	}
; 272  : 	else if (position->x > MAX_MAP_X - MAP_PERIMETER_SIZE)

  00051	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00054	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00058	f3 0f 5a 0d 3c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00060	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@40b3880000000000
  00068	66 0f 2f c1	 comisd	 xmm0, xmm1
  0006c	76 22		 jbe	 SHORT $LN4@bound_posi

; 273  : 	{
; 274  : 		position->x = MAX_MAP_X - MAP_PERIMETER_SIZE;

  0006e	f3 0f 5a 05 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00076	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  0007e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00082	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00085	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 275  : 
; 276  : 		result = TRUE;

  00089	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN4@bound_posi:

; 277  : 	}
; 278  : 
; 279  : 	if (position->y < MIN_MAP_Y)

  00090	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00093	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0009b	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  0009f	76 19		 jbe	 SHORT $LN5@bound_posi

; 280  : 	{
; 281  : 		position->y = MIN_MAP_Y;

  000a1	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000a4	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  000ac	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 282  : 
; 283  : 		result = TRUE;

  000b1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  000b8	eb 28		 jmp	 SHORT $LN7@bound_posi
$LN5@bound_posi:

; 284  : 	}
; 285  : 	else if (position->y > MAX_MAP_Y)

  000ba	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000bd	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  000c2	0f 2f 05 40 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  000c9	76 17		 jbe	 SHORT $LN7@bound_posi

; 286  : 	{
; 287  : 		position->y = MAX_MAP_Y;

  000cb	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000ce	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  000d6	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 288  : 
; 289  : 		result = TRUE;

  000db	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@bound_posi:

; 290  : 	}
; 291  : 
; 292  : 	if (position->z < MIN_MAP_Z + MAP_PERIMETER_SIZE)

  000e2	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000e5	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000ea	f3 0f 5a 0d 2c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000f2	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40b3880000000000
  000fa	66 0f 2f c8	 comisd	 xmm1, xmm0
  000fe	76 25		 jbe	 SHORT $LN8@bound_posi

; 293  : 	{
; 294  : 		position->z = MIN_MAP_Z + MAP_PERIMETER_SIZE;

  00100	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00108	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  00110	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00114	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00117	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 295  : 
; 296  : 		result = TRUE;

  0011c	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00123	eb 41		 jmp	 SHORT $LN10@bound_posi
$LN8@bound_posi:

; 297  : 	}
; 298  : 	else if (position->z > MAX_MAP_Z - MAP_PERIMETER_SIZE)

  00125	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00128	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  0012d	f3 0f 5a 0d 44
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00135	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@40b3880000000000
  0013d	66 0f 2f c1	 comisd	 xmm0, xmm1
  00141	76 23		 jbe	 SHORT $LN10@bound_posi

; 299  : 	{
; 300  : 		position->z = MAX_MAP_Z - MAP_PERIMETER_SIZE;

  00143	f3 0f 5a 05 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  0014b	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00153	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00157	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0015a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 301  : 
; 302  : 		result = TRUE;

  0015f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN10@bound_posi:

; 303  : 	}
; 304  : 
; 305  : 	return (result);

  00166	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 306  : }

  00169	5f		 pop	 edi
  0016a	5e		 pop	 esi
  0016b	5b		 pop	 ebx
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c2 04 00	 ret	 4
?bound_position_to_adjusted_map_volume@@YGHPAUVEC3D@@@Z ENDP ; bound_position_to_adjusted_map_volume
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_position$ = 8						; size = 4
?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z PROC	; bound_position_to_map_volume, COMDAT

; 207  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 208  : 	int
; 209  : 		result;
; 210  : 
; 211  : 	result = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 212  : 
; 213  : 	if (position->x < MIN_MAP_X)

  00010	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00013	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0001b	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0001e	76 18		 jbe	 SHORT $LN2@bound_posi

; 214  : 	{
; 215  : 		position->x = MIN_MAP_X;

  00020	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00023	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0002b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 216  : 
; 217  : 		result = TRUE;

  0002f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00036	eb 26		 jmp	 SHORT $LN4@bound_posi
$LN2@bound_posi:

; 218  : 	}
; 219  : 	else if (position->x > MAX_MAP_X)

  00038	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0003b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0003f	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00046	76 16		 jbe	 SHORT $LN4@bound_posi

; 220  : 	{
; 221  : 		position->x = MAX_MAP_X;

  00048	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0004b	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00053	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 222  : 
; 223  : 		result = TRUE;

  00057	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN4@bound_posi:

; 224  : 	}
; 225  : 
; 226  : 	if (position->y < MIN_MAP_Y)

  0005e	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00061	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  00069	0f 2f 40 04	 comiss	 xmm0, DWORD PTR [eax+4]
  0006d	76 19		 jbe	 SHORT $LN5@bound_posi

; 227  : 	{
; 228  : 		position->y = MIN_MAP_Y;

  0006f	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00072	f3 0f 10 05 28
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0007a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 229  : 
; 230  : 		result = TRUE;

  0007f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00086	eb 28		 jmp	 SHORT $LN7@bound_posi
$LN5@bound_posi:

; 231  : 	}
; 232  : 	else if (position->y > MAX_MAP_Y)

  00088	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0008b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00090	0f 2f 05 40 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  00097	76 17		 jbe	 SHORT $LN7@bound_posi

; 233  : 	{
; 234  : 		position->y = MAX_MAP_Y;

  00099	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0009c	f3 0f 10 05 40
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  000a4	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 235  : 
; 236  : 		result = TRUE;

  000a9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@bound_posi:

; 237  : 	}
; 238  : 
; 239  : 	if (position->z < MIN_MAP_Z)

  000b0	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000b3	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000bb	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  000bf	76 19		 jbe	 SHORT $LN8@bound_posi

; 240  : 	{
; 241  : 		position->z = MIN_MAP_Z;

  000c1	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000c4	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000cc	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 242  : 
; 243  : 		result = TRUE;

  000d1	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  000d8	eb 28		 jmp	 SHORT $LN10@bound_posi
$LN8@bound_posi:

; 244  : 	}
; 245  : 	else if (position->z > MAX_MAP_Z)

  000da	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000dd	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  000e2	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000e9	76 17		 jbe	 SHORT $LN10@bound_posi

; 246  : 	{
; 247  : 		position->z = MAX_MAP_Z;

  000eb	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000ee	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000f6	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 248  : 
; 249  : 		result = TRUE;

  000fb	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN10@bound_posi:

; 250  : 	}
; 251  : 
; 252  : 	return (result);

  00102	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 253  : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 04 00	 ret	 4
?bound_position_to_map_volume@@YGHPAUVEC3D@@@Z ENDP	; bound_position_to_map_volume
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?bound_position_to_adjusted_map_area@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_position$ = 8						; size = 4
?bound_position_to_adjusted_map_area@@YGHPAUVEC3D@@@Z PROC ; bound_position_to_adjusted_map_area, COMDAT

; 167  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 168  : 	int
; 169  : 		result;
; 170  : 
; 171  : 	result = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 172  : 
; 173  : 	if (position->x < MIN_MAP_X + MAP_PERIMETER_SIZE)

  00010	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00013	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00017	f3 0f 5a 0d 24
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0001f	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40b3880000000000
  00027	66 0f 2f c8	 comisd	 xmm1, xmm0
  0002b	76 24		 jbe	 SHORT $LN2@bound_posi

; 174  : 	{
; 175  : 		position->x = MIN_MAP_X + MAP_PERIMETER_SIZE;

  0002d	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00035	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  0003d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00041	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00044	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 176  : 
; 177  : 		result = TRUE;

  00048	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  0004f	eb 3f		 jmp	 SHORT $LN4@bound_posi
$LN2@bound_posi:

; 178  : 	}
; 179  : 	else if (position->x > MAX_MAP_X - MAP_PERIMETER_SIZE)

  00051	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00054	f3 0f 5a 00	 cvtss2sd xmm0, DWORD PTR [eax]
  00058	f3 0f 5a 0d 3c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00060	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@40b3880000000000
  00068	66 0f 2f c1	 comisd	 xmm0, xmm1
  0006c	76 22		 jbe	 SHORT $LN4@bound_posi

; 180  : 	{
; 181  : 		position->x = MAX_MAP_X - MAP_PERIMETER_SIZE;

  0006e	f3 0f 5a 05 3c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00076	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  0007e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00082	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00085	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 182  : 
; 183  : 		result = TRUE;

  00089	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN4@bound_posi:

; 184  : 	}
; 185  : 
; 186  : 	if (position->z < MIN_MAP_Z + MAP_PERIMETER_SIZE)

  00090	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00093	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  00098	f3 0f 5a 0d 2c
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000a0	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@40b3880000000000
  000a8	66 0f 2f c8	 comisd	 xmm1, xmm0
  000ac	76 25		 jbe	 SHORT $LN5@bound_posi

; 187  : 	{
; 188  : 		position->z = MIN_MAP_Z + MAP_PERIMETER_SIZE;

  000ae	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  000b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@40b3880000000000
  000be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c2	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000c5	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 189  : 
; 190  : 		result = TRUE;

  000ca	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  000d1	eb 41		 jmp	 SHORT $LN7@bound_posi
$LN5@bound_posi:

; 191  : 	}
; 192  : 	else if (position->z > MAX_MAP_Z - MAP_PERIMETER_SIZE)

  000d3	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  000d6	f3 0f 5a 40 08	 cvtss2sd xmm0, DWORD PTR [eax+8]
  000db	f3 0f 5a 0d 44
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000e3	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@40b3880000000000
  000eb	66 0f 2f c1	 comisd	 xmm0, xmm1
  000ef	76 23		 jbe	 SHORT $LN7@bound_posi

; 193  : 	{
; 194  : 		position->z = MAX_MAP_Z - MAP_PERIMETER_SIZE;

  000f1	f3 0f 5a 05 44
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40b3880000000000
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00108	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 195  : 
; 196  : 		result = TRUE;

  0010d	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@bound_posi:

; 197  : 	}
; 198  : 
; 199  : 	return (result);

  00114	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 200  : }

  00117	5f		 pop	 edi
  00118	5e		 pop	 esi
  00119	5b		 pop	 ebx
  0011a	8b e5		 mov	 esp, ebp
  0011c	5d		 pop	 ebp
  0011d	c2 04 00	 ret	 4
?bound_position_to_adjusted_map_area@@YGHPAUVEC3D@@@Z ENDP ; bound_position_to_adjusted_map_area
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?bound_position_to_map_area@@YGHPAUVEC3D@@@Z
_TEXT	SEGMENT
_result$ = -4						; size = 4
_position$ = 8						; size = 4
?bound_position_to_map_area@@YGHPAUVEC3D@@@Z PROC	; bound_position_to_map_area, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 128  : 	int
; 129  : 		result;
; 130  : 
; 131  : 	result = FALSE;

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 132  : 
; 133  : 	if (position->x < MIN_MAP_X)

  00010	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00013	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0001b	0f 2f 00	 comiss	 xmm0, DWORD PTR [eax]
  0001e	76 18		 jbe	 SHORT $LN2@bound_posi

; 134  : 	{
; 135  : 		position->x = MIN_MAP_X;

  00020	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00023	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  0002b	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 136  : 
; 137  : 		result = TRUE;

  0002f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00036	eb 26		 jmp	 SHORT $LN4@bound_posi
$LN2@bound_posi:

; 138  : 	}
; 139  : 	else if (position->x > MAX_MAP_X)

  00038	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0003b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0003f	0f 2f 05 3c 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00046	76 16		 jbe	 SHORT $LN4@bound_posi

; 140  : 	{
; 141  : 		position->x = MAX_MAP_X;

  00048	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0004b	f3 0f 10 05 3c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00053	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 142  : 
; 143  : 		result = TRUE;

  00057	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN4@bound_posi:

; 144  : 	}
; 145  : 
; 146  : 	if (position->z < MIN_MAP_Z)

  0005e	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00061	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  00069	0f 2f 40 08	 comiss	 xmm0, DWORD PTR [eax+8]
  0006d	76 19		 jbe	 SHORT $LN5@bound_posi

; 147  : 	{
; 148  : 		position->z = MIN_MAP_Z;

  0006f	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  00072	f3 0f 10 05 2c
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  0007a	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 149  : 
; 150  : 		result = TRUE;

  0007f	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
  00086	eb 28		 jmp	 SHORT $LN7@bound_posi
$LN5@bound_posi:

; 151  : 	}
; 152  : 	else if (position->z > MAX_MAP_Z)

  00088	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0008b	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00090	0f 2f 05 44 00
	00 00		 comiss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  00097	76 17		 jbe	 SHORT $LN7@bound_posi

; 153  : 	{
; 154  : 		position->z = MAX_MAP_Z;

  00099	8b 45 08	 mov	 eax, DWORD PTR _position$[ebp]
  0009c	f3 0f 10 05 44
	00 00 00	 movss	 xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  000a4	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 155  : 
; 156  : 		result = TRUE;

  000a9	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _result$[ebp], 1
$LN7@bound_posi:

; 157  : 	}
; 158  : 
; 159  : 	return (result);

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _result$[ebp]

; 160  : }

  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c2 04 00	 ret	 4
?bound_position_to_map_area@@YGHPAUVEC3D@@@Z ENDP	; bound_position_to_map_area
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_main\en_world.c
;	COMDAT ?set_entity_world_map_size@@YGXHHH@Z
_TEXT	SEGMENT
_num_map_x_sectors$ = 8					; size = 4
_num_map_z_sectors$ = 12				; size = 4
_sector_side_length$ = 16				; size = 4
?set_entity_world_map_size@@YGXHHH@Z PROC		; set_entity_world_map_size, COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 88   : 	ASSERT (num_map_x_sectors > 0);

  00009	83 7d 08 00	 cmp	 DWORD PTR _num_map_x_sectors$[ebp], 0
  0000d	7f 18		 jg	 SHORT $LN2@set_entity
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MBDPBBHL@num_map_x_sectors?5?$DO?50@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_entity:

; 89   : 
; 90   : 	ASSERT (num_map_z_sectors > 0);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _num_map_z_sectors$[ebp], 0
  0002b	7f 18		 jg	 SHORT $LN3@set_entity
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA
  00032	83 c0 03	 add	 eax, 3
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CAFBNFNG@num_map_z_sectors?5?$DO?50@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_entity:

; 91   : 
; 92   : 	ASSERT (int_bit_count (sector_side_length) == 1);

  00045	8b 45 10	 mov	 eax, DWORD PTR _sector_side_length$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?int_bit_count@@YGHI@Z	; int_bit_count
  0004e	83 f8 01	 cmp	 eax, 1
  00051	74 18		 je	 SHORT $LN4@set_entity
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_entity_world_map_size@@YGXHHH@Z@4JA
  00058	83 c0 05	 add	 eax, 5
  0005b	50		 push	 eax
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0EN@GHLMHBF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@FNEEGNBE@int_bit_count?5?$CIsector_side_leng@
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_entity:

; 93   : 
; 94   : 	world_map.sector_side_length			= sector_side_length;

  0006b	8b 45 10	 mov	 eax, DWORD PTR _sector_side_length$[ebp]
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A, eax

; 95   : 
; 96   : 	world_map.sector_side_length_mask	= sector_side_length - 1;

  00073	8b 45 10	 mov	 eax, DWORD PTR _sector_side_length$[ebp]
  00076	83 e8 01	 sub	 eax, 1
  00079	a3 04 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+4, eax

; 97   : 
; 98   : 	world_map.num_map_x_sectors			= num_map_x_sectors;

  0007e	8b 45 08	 mov	 eax, DWORD PTR _num_map_x_sectors$[ebp]
  00081	a3 08 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+8, eax

; 99   : 	world_map.num_map_z_sectors			= num_map_z_sectors;

  00086	8b 45 0c	 mov	 eax, DWORD PTR _num_map_z_sectors$[ebp]
  00089	a3 0c 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+12, eax

; 100  : 
; 101  : 	world_map.num_map_sectors				= num_map_x_sectors * num_map_z_sectors;

  0008e	8b 45 08	 mov	 eax, DWORD PTR _num_map_x_sectors$[ebp]
  00091	0f af 45 0c	 imul	 eax, DWORD PTR _num_map_z_sectors$[ebp]
  00095	a3 10 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+16, eax

; 102  : 
; 103  : 	world_map.min_map_x_sector	 			= 0;

  0009a	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+20, 0

; 104  : 	world_map.min_map_z_sector	  	 		= 0;

  000a4	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+24, 0

; 105  : 
; 106  : 	world_map.max_map_x_sector		  		= num_map_x_sectors - 1;

  000ae	8b 45 08	 mov	 eax, DWORD PTR _num_map_x_sectors$[ebp]
  000b1	83 e8 01	 sub	 eax, 1
  000b4	a3 1c 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+28, eax

; 107  : 	world_map.max_map_z_sector				= num_map_z_sectors - 1;

  000b9	8b 45 0c	 mov	 eax, DWORD PTR _num_map_z_sectors$[ebp]
  000bc	83 e8 01	 sub	 eax, 1
  000bf	a3 20 00 00 00	 mov	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+32, eax

; 108  : 
; 109  : 	world_map.min_map_x	 					= 0.0;

  000c4	0f 57 c0	 xorps	 xmm0, xmm0
  000c7	f3 0f 11 05 24
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36, xmm0

; 110  : 	world_map.min_map_y						= -8000.0;

  000cf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c5fa0000
  000d7	f3 0f 11 05 28
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40, xmm0

; 111  : 	world_map.min_map_z						= 0.0;

  000df	0f 57 c0	 xorps	 xmm0, xmm0
  000e2	f3 0f 11 05 2c
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44, xmm0

; 112  : 
; 113  : 	world_map.max_map_x						= (float) (num_map_x_sectors * sector_side_length) - 1.0;	// ***** DO NOT CHANGE 1.0 *****

  000ea	8b 45 08	 mov	 eax, DWORD PTR _num_map_x_sectors$[ebp]
  000ed	0f af 45 10	 imul	 eax, DWORD PTR _sector_side_length$[ebp]
  000f1	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f5	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00101	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00105	f3 0f 11 05 3c
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60, xmm0

; 114  : 	world_map.max_map_y						= 65535.0;				 										

  0010d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@477fff00
  00115	f3 0f 11 05 40
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64, xmm0

; 115  : 	world_map.max_map_z		  				= (float) (num_map_z_sectors * sector_side_length) - 1.0;	// ***** DO NOT CHANGE 1.0 *****

  0011d	8b 45 0c	 mov	 eax, DWORD PTR _num_map_z_sectors$[ebp]
  00120	0f af 45 10	 imul	 eax, DWORD PTR _sector_side_length$[ebp]
  00124	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00128	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0012c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00134	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00138	f3 0f 11 05 44
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68, xmm0

; 116  : 
; 117  : 	world_map.mid_map_x 						= world_map.min_map_x + ((world_map.max_map_x - world_map.min_map_x) * 0.5);

  00140	f3 0f 5a 05 24
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00148	f3 0f 10 0d 3c
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+60
  00150	f3 0f 5c 0d 24
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+36
  00158	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  0015c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00164	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00168	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0016c	f3 0f 11 05 30
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+48, xmm0

; 118  : 	world_map.mid_map_y						= world_map.min_map_y + ((world_map.max_map_y - world_map.min_map_y) * 0.5);

  00174	f3 0f 5a 05 28
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0017c	f3 0f 10 0d 40
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+64
  00184	f3 0f 5c 0d 28
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+40
  0018c	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00190	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  00198	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0019c	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a0	f3 0f 11 05 34
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+52, xmm0

; 119  : 	world_map.mid_map_z						= world_map.min_map_z + ((world_map.max_map_z - world_map.min_map_z) * 0.5);

  001a8	f3 0f 5a 05 2c
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001b0	f3 0f 10 0d 44
	00 00 00	 movss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+68
  001b8	f3 0f 5c 0d 2c
	00 00 00	 subss	 xmm1, DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+44
  001c0	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  001c4	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe0000000000000
  001cc	f2 0f 58 c1	 addsd	 xmm0, xmm1
  001d0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001d4	f3 0f 11 05 38
	00 00 00	 movss	 DWORD PTR ?world_map@@3UWORLD_MAP_DATA@@A+56, xmm0

; 120  : }

  001dc	5f		 pop	 edi
  001dd	5e		 pop	 esi
  001de	5b		 pop	 ebx
  001df	8b e5		 mov	 esp, ebp
  001e1	5d		 pop	 ebp
  001e2	c2 0c 00	 ret	 12			; 0000000cH
?set_entity_world_map_size@@YGXHHH@Z ENDP		; set_entity_world_map_size
_TEXT	ENDS
END
