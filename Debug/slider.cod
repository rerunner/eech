; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\slider\slider.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?locate_next_slider@@YGPAUUI_OBJECT@@PAU1@@Z	; locate_next_slider
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\slider.c
;	COMDAT ?locate_next_slider@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_parent$ = -8						; size = 4
_current_object$ = -4					; size = 4
_obj$ = 8						; size = 4
?locate_next_slider@@YGPAUUI_OBJECT@@PAU1@@Z PROC	; locate_next_slider, COMDAT

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 90   : 
; 91   : 	ui_object
; 92   : 		*current_object,
; 93   : 		*parent;
; 94   : 
; 95   : 	// search through all next objects, starting with the first.
; 96   : 	// if not parent then start from current position.
; 97   : 
; 98   : 	current_object = obj;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	89 45 fc	 mov	 DWORD PTR _current_object$[ebp], eax

; 99   : 
; 100  : 	parent = get_ui_object_parent (obj);

  0000f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00012	50		 push	 eax
  00013	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0001f	ff d0		 call	 eax
  00021	89 45 f8	 mov	 DWORD PTR _parent$[ebp], eax

; 101  : 
; 102  : 	if (parent)

  00024	83 7d f8 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00028	74 15		 je	 SHORT $LN2@locate_nex

; 103  : 	{
; 104  : 		
; 105  : 		current_object = get_ui_object_child (parent);

  0002a	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _parent$[ebp]
  00031	8b 11		 mov	 edx, DWORD PTR [ecx]
  00033	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0003a	ff d0		 call	 eax
  0003c	89 45 fc	 mov	 DWORD PTR _current_object$[ebp], eax
$LN2@locate_nex:

; 106  : 	}
; 107  : 
; 108  : 	while (current_object)

  0003f	83 7d fc 00	 cmp	 DWORD PTR _current_object$[ebp], 0
  00043	74 3c		 je	 SHORT $LN3@locate_nex

; 109  : 	{
; 110  : 
; 111  : 		if
; 112  : 			(
; 113  : 				(current_object->type == UI_TYPE_VSLIDER) ||
; 114  : 				(current_object->type == UI_TYPE_HSLIDER) ||
; 115  : 				(current_object->type == UI_TYPE_HVSLIDER) ||

  00045	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  00048	83 38 08	 cmp	 DWORD PTR [eax], 8
  0004b	74 18		 je	 SHORT $LN6@locate_nex
  0004d	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  00050	83 38 09	 cmp	 DWORD PTR [eax], 9
  00053	74 10		 je	 SHORT $LN6@locate_nex
  00055	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  00058	83 38 0a	 cmp	 DWORD PTR [eax], 10	; 0000000aH
  0005b	74 08		 je	 SHORT $LN6@locate_nex
  0005d	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  00060	83 38 0b	 cmp	 DWORD PTR [eax], 11	; 0000000bH
  00063	75 05		 jne	 SHORT $LN5@locate_nex
$LN6@locate_nex:

; 116  : 				(current_object->type == UI_TYPE_MSLIDER)
; 117  : 			)
; 118  : 		{
; 119  : 
; 120  : 			return current_object;

  00065	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  00068	eb 19		 jmp	 SHORT $LN1@locate_nex
$LN5@locate_nex:

; 121  : 		}
; 122  : 
; 123  : 		current_object = get_ui_object_next (current_object);

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _current_object$[ebp]
  0006d	50		 push	 eax
  0006e	8b 4d fc	 mov	 ecx, DWORD PTR _current_object$[ebp]
  00071	8b 11		 mov	 edx, DWORD PTR [ecx]
  00073	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0007a	ff d0		 call	 eax
  0007c	89 45 fc	 mov	 DWORD PTR _current_object$[ebp], eax

; 124  : 	}

  0007f	eb be		 jmp	 SHORT $LN2@locate_nex
$LN3@locate_nex:

; 125  : 
; 126  : 	return NULL;

  00081	33 c0		 xor	 eax, eax
$LN1@locate_nex:

; 127  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 04 00	 ret	 4
?locate_next_slider@@YGPAUUI_OBJECT@@PAU1@@Z ENDP	; locate_next_slider
_TEXT	ENDS
END
