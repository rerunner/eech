; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\task\ts_list.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_task_list_functions@@YGXXZ		; overload_task_list_functions
PUBLIC	?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_first_child'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_first_child'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_parent'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@		; `string'
PUBLIC	?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_parent'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_child_succ'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_child_succ'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA ; `set_local_child_pred'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@	; `string'
PUBLIC	?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA ; `get_local_child_pred'::`1'::__LINE__Var
PUBLIC	??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?list_type_database@@3PAULIST_TYPE_DATA@@A:BYTE	; list_type_database
EXTRN	?debug_fatal_invalid_list_type_message@@3PBDB:DWORD ; debug_fatal_invalid_list_type_message
EXTRN	?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_first_child
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_parent
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_child_succ
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA:BYTE ; fn_set_local_entity_child_pred
EXTRN	?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_pred
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
;	COMDAT ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_pred.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0109H ; `get_local_child_pred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
CONST	SEGMENT
??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@ DB 'en != child_pred', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_pred.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 0f7H ; `set_local_child_pred'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_succ.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0e0H ; `get_local_child_succ'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
CONST	SEGMENT
??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@ DB 'en != child_succ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_succ.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 0ceH ; `set_local_child_succ'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_prnt.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 0b7H ; `get_local_parent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
CONST	SEGMENT
??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@ DB 'en != parent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_prnt.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 0a5H ; `set_local_parent'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\get_frst.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA DD 08eH ; `get_local_first_child'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
CONST	SEGMENT
??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@ DB 'en != first_child', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\system\en_funcs\en_li'
	DB	'st\set_frst.h', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA DD 07cH ; `set_local_first_child'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_pred.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
tv65 = -76						; size = 4
_child_pred$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_child_pred, COMDAT

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 266  : 	task
; 267  : 		*raw;
; 268  : 
; 269  : 	entity
; 270  : 		*child_pred;
; 271  : 
; 272  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_pred.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	8b 4d b4	 mov	 ecx, DWORD PTR tv65[ebp]
  0001b	83 e9 03	 sub	 ecx, 3
  0001e	89 4d b4	 mov	 DWORD PTR tv65[ebp], ecx
  00021	83 7d b4 26	 cmp	 DWORD PTR tv65[ebp], 38	; 00000026H
  00025	77 73		 ja	 SHORT $LN11@get_local_
  00027	8b 55 b4	 mov	 edx, DWORD PTR tv65[ebp]
  0002a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@get_local_[edx]
  00031	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@get_local_[eax*4]
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		child_pred = raw->aircrew_link.child_pred;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		child_pred = raw->task_link.child_pred;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003b	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0003e	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 89   : 
; 90   : 		break;

  00041	e9 d3 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		child_pred = raw->campaign_objective_link.child_pred;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		child_pred = raw->cargo_link.child_pred;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		child_pred = raw->city_building_link.child_pred;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		child_pred = raw->task_link.child_pred;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0004c	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 141  : 
; 142  : 		break;

  0004f	e9 c5 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		child_pred = raw->current_waypoint_link.child_pred;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 	
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		child_pred = raw->designated_target_link.child_pred;
; 169  : 
; 170  : 		break;
; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		child_pred = raw->division_link.child_pred;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 	
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		child_pred = raw->division_headquarters_link.child_pred;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		child_pred = raw->follower_link.child_pred;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		child_pred = raw->force_link.child_pred;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		child_pred = raw->group_link.child_pred;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		child_pred = raw->guide_link.child_pred;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		child_pred = raw->guide_stack_link.child_pred;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		child_pred = raw->gunship_target_link.child_pred;
; 275  : 
; 276  : 		break;
; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		child_pred = raw->hierarchy_link.child_pred;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		child_pred = raw->keysite_force_link.child_pred;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		child_pred = raw->launched_weapon_link.child_pred;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		child_pred = raw->landing_site_link.child_pred;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		child_pred = raw->member_link.child_pred;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		child_pred = raw->movement_dependent_link.child_pred;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		child_pred = raw->padlock_link.child_pred;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		child_pred = raw->pilot_link.child_pred;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		child_pred = raw->pilot_lock_link.child_pred;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0005a	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 392  : 
; 393  : 		break;

  0005d	e9 b7 00 00 00	 jmp	 $LN2@get_local_
$LN7@get_local_:

; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		child_pred = raw->player_task_link.child_pred;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		child_pred = raw->regen_link.child_pred;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		child_pred = raw->registry_link.child_pred;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		child_pred = raw->sector_link.child_pred;
; 446  : 
; 447  : 		break;
; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		child_pred = raw->sector_task_link.child_pred;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00065	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  00068	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 459  : 
; 460  : 		break;

  0006b	e9 a9 00 00 00	 jmp	 $LN2@get_local_
$LN8@get_local_:

; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		child_pred = raw->segment_link.child_pred;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		child_pred = raw->special_effect_link.child_pred;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		child_pred = raw->takeoff_queue_link.child_pred;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		child_pred = raw->target_link.child_pred;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		child_pred = raw->task_dependent_link.child_pred;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00073	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00076	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 524  : 
; 525  : 		break;

  00079	e9 9b 00 00 00	 jmp	 $LN2@get_local_
$LN9@get_local_:

; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		child_pred = raw->task_link.child_pred;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00081	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00084	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 537  : 
; 538  : 		break;

  00087	e9 8d 00 00 00	 jmp	 $LN2@get_local_
$LN10@get_local_:

; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		child_pred = raw->update_link.child_pred;

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [eax+136]
  00095	89 4d f8	 mov	 DWORD PTR _child_pred$[ebp], ecx

; 550  : 
; 551  : 		break;

  00098	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN11@get_local_:

; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		child_pred = raw->view_link.child_pred;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		child_pred = raw->view_weapon_link.child_pred;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		child_pred = raw->waypoint_link.child_pred;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  0009a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009e	74 0a		 je	 SHORT $LN14@get_local_
  000a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	89 4d b4	 mov	 DWORD PTR tv128[ebp], ecx
  000a8	eb 24		 jmp	 SHORT $LN15@get_local_
$LN14@get_local_:
  000aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000b0	81 c2 4e 01 00
	00		 add	 edx, 334		; 0000014eH
  000b6	52		 push	 edx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN15@get_local_:
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000d4	81 c1 4e 01 00
	00		 add	 ecx, 334		; 0000014eH
  000da	51		 push	 ecx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e0	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000e3	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000ea	50		 push	 eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ee	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000f4	c1 f9 04	 sar	 ecx, 4
  000f7	51		 push	 ecx
  000f8	6b 55 b4 0c	 imul	 edx, DWORD PTR tv128[ebp], 12
  000fc	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00102	50		 push	 eax
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0010f	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		child_pred = NULL;

  00112	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _child_pred$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != child_pred);

  00119	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011c	3b 45 f8	 cmp	 eax, DWORD PTR _child_pred$[ebp]
  0011f	75 1a		 jne	 SHORT $LN12@get_local_
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_child_pred@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00126	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  0012b	50		 push	 eax
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@ILOBLGDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 276  : 	return (child_pred);

  0013b	8b 45 f8	 mov	 eax, DWORD PTR _child_pred$[ebp]

; 277  : }

  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 08 00	 ret	 8
  00147	90		 npad	 1
$LN17@get_local_:
  00148	00 00 00 00	 DD	 $LN4@get_local_
  0014c	00 00 00 00	 DD	 $LN5@get_local_
  00150	00 00 00 00	 DD	 $LN6@get_local_
  00154	00 00 00 00	 DD	 $LN7@get_local_
  00158	00 00 00 00	 DD	 $LN8@get_local_
  0015c	00 00 00 00	 DD	 $LN9@get_local_
  00160	00 00 00 00	 DD	 $LN10@get_local_
  00164	00 00 00 00	 DD	 $LN11@get_local_
$LN16@get_local_:
  00168	00		 DB	 0
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	01		 DB	 1
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	07		 DB	 7
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	02		 DB	 2
  00183	07		 DB	 7
  00184	07		 DB	 7
  00185	07		 DB	 7
  00186	07		 DB	 7
  00187	03		 DB	 3
  00188	07		 DB	 7
  00189	07		 DB	 7
  0018a	07		 DB	 7
  0018b	07		 DB	 7
  0018c	04		 DB	 4
  0018d	05		 DB	 5
  0018e	06		 DB	 6
?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_child_pred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_pred.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv133 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_child_pred$ = 16					; size = 4
?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_child_pred, COMDAT

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 248  : 	task
; 249  : 		*raw;
; 250  : 
; 251  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_pred.h

; 71   : ASSERT (en != child_pred);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _child_pred$[ebp]
  00018	75 1a		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	2d b0 00 00 00	 sub	 eax, 176		; 000000b0H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KBJIPEKH@en?5?$CB?$DN?5child_pred@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00034	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00037	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  0003a	8b 4d b8	 mov	 ecx, DWORD PTR tv70[ebp]
  0003d	83 e9 03	 sub	 ecx, 3
  00040	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00043	83 7d b8 26	 cmp	 DWORD PTR tv70[ebp], 38	; 00000026H
  00047	77 73		 ja	 SHORT $LN12@set_local_
  00049	8b 55 b8	 mov	 edx, DWORD PTR tv70[ebp]
  0004c	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@set_local_[edx]
  00053	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@set_local_[eax*4]
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.child_pred = child_pred;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.child_pred = child_pred;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  00060	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 95   : 
; 96   : 		break;

  00063	e9 cc 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.child_pred = child_pred;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.child_pred = child_pred;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.child_pred = child_pred;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.child_pred = child_pred;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  0006e	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 147  : 
; 148  : 		break;

  00071	e9 be 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.child_pred = child_pred;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 	// Jabbewock 031107 Designated targets
; 169  : 	
; 170  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 171  : 
; 172  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 173  : 	{
; 174  : 		raw->designated_target_link.child_pred = child_pred;
; 175  : 
; 176  : 		break;
; 177  : 	}
; 178  : 
; 179  : 	#endif
; 180  : 
; 181  : 	// Jabbewock 031107 ends
; 182  : 	
; 183  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 184  : 
; 185  : 	case LIST_TYPE_DIVISION:
; 186  : 	{
; 187  : 		raw->division_link.child_pred = child_pred;
; 188  : 
; 189  : 		break;
; 190  : 	}
; 191  : 
; 192  : 	#endif
; 193  : 	
; 194  : 	////////////////////////////////////////
; 195  : 
; 196  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 197  : 
; 198  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 199  : 	{
; 200  : 		raw->division_headquarters_link.child_pred = child_pred;
; 201  : 
; 202  : 		break;
; 203  : 	}
; 204  : 
; 205  : 	#endif
; 206  : 
; 207  : 	////////////////////////////////////////
; 208  : 
; 209  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 210  : 
; 211  : 	case LIST_TYPE_FOLLOWER:
; 212  : 	{
; 213  : 		raw->follower_link.child_pred = child_pred;
; 214  : 
; 215  : 		break;
; 216  : 	}
; 217  : 
; 218  : 	#endif
; 219  : 
; 220  : 	////////////////////////////////////////
; 221  : 
; 222  : 	#ifdef LIST_TYPE_FORCE_LINK
; 223  : 
; 224  : 	case LIST_TYPE_FORCE:
; 225  : 	{
; 226  : 		raw->force_link.child_pred = child_pred;
; 227  : 
; 228  : 		break;
; 229  : 	}
; 230  : 
; 231  : 	#endif
; 232  : 
; 233  : 	////////////////////////////////////////
; 234  : 
; 235  : 	#ifdef LIST_TYPE_GROUP_LINK
; 236  : 
; 237  : 	case LIST_TYPE_BUILDING_GROUP:
; 238  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 239  : 	case LIST_TYPE_KEYSITE_GROUP:
; 240  : 	{
; 241  : 		raw->group_link.child_pred = child_pred;
; 242  : 
; 243  : 		break;
; 244  : 	}
; 245  : 
; 246  : 	#endif
; 247  : 
; 248  : 	////////////////////////////////////////
; 249  : 
; 250  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 251  : 
; 252  : 	case LIST_TYPE_GUIDE:
; 253  : 	{
; 254  : 		raw->guide_link.child_pred = child_pred;
; 255  : 
; 256  : 		break;
; 257  : 	}
; 258  : 
; 259  : 	#endif
; 260  : 
; 261  : 	////////////////////////////////////////
; 262  : 
; 263  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 264  : 
; 265  : 	case LIST_TYPE_GUIDE_STACK:
; 266  : 	{
; 267  : 		raw->guide_stack_link.child_pred = child_pred;
; 268  : 
; 269  : 		break;
; 270  : 	}
; 271  : 
; 272  : 	#endif
; 273  : 
; 274  : 	////////////////////////////////////////
; 275  : 
; 276  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 277  : 
; 278  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 279  : 	{
; 280  : 		raw->gunship_target_link.child_pred = child_pred;
; 281  : 
; 282  : 		break;
; 283  : 	}
; 284  : 
; 285  : 	#endif
; 286  : 
; 287  : 	////////////////////////////////////////
; 288  : 
; 289  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 290  : 
; 291  : 	case LIST_TYPE_HIERARCHY:
; 292  : 	{
; 293  : 		raw->hierarchy_link.child_pred = child_pred;
; 294  : 
; 295  : 		break;
; 296  : 	}
; 297  : 
; 298  : 	#endif
; 299  : 
; 300  : 	////////////////////////////////////////
; 301  : 
; 302  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 303  : 
; 304  : 	case LIST_TYPE_KEYSITE_FORCE:
; 305  : 	{
; 306  : 		raw->keysite_force_link.child_pred = child_pred;
; 307  : 
; 308  : 		break;
; 309  : 	}
; 310  : 
; 311  : 	#endif
; 312  : 
; 313  : 	////////////////////////////////////////
; 314  : 
; 315  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 316  : 
; 317  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 318  : 	{
; 319  : 		raw->launched_weapon_link.child_pred = child_pred;
; 320  : 
; 321  : 		break;
; 322  : 	}
; 323  : 
; 324  : 	#endif
; 325  : 
; 326  : 	////////////////////////////////////////
; 327  : 
; 328  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 329  : 
; 330  : 	case LIST_TYPE_LANDING_SITE:
; 331  : 	{
; 332  : 		raw->landing_site_link.child_pred = child_pred;
; 333  : 
; 334  : 		break;
; 335  : 	}
; 336  : 
; 337  : 	#endif
; 338  : 
; 339  : 	////////////////////////////////////////
; 340  : 
; 341  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 342  : 
; 343  : 	case LIST_TYPE_MEMBER:
; 344  : 	{
; 345  : 		raw->member_link.child_pred = child_pred;
; 346  : 
; 347  : 		break;
; 348  : 	}
; 349  : 
; 350  : 	#endif
; 351  : 
; 352  : 	////////////////////////////////////////
; 353  : 
; 354  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 355  : 
; 356  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 357  : 	{
; 358  : 		raw->movement_dependent_link.child_pred = child_pred;
; 359  : 
; 360  : 		break;
; 361  : 	}
; 362  : 
; 363  : 	#endif
; 364  : 
; 365  : 	////////////////////////////////////////
; 366  : 
; 367  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 368  : 
; 369  : 	case LIST_TYPE_PADLOCK:
; 370  : 	{
; 371  : 		raw->padlock_link.child_pred = child_pred;
; 372  : 
; 373  : 		break;
; 374  : 	}
; 375  : 
; 376  : 	#endif
; 377  : 
; 378  : 	////////////////////////////////////////
; 379  : 
; 380  : 	#ifdef LIST_TYPE_PILOT_LINK
; 381  : 
; 382  : 	case LIST_TYPE_PILOT:
; 383  : 	{
; 384  : 		raw->pilot_link.child_pred = child_pred;
; 385  : 
; 386  : 		break;
; 387  : 	}
; 388  : 
; 389  : 	#endif
; 390  : 
; 391  : 	////////////////////////////////////////
; 392  : 
; 393  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 394  : 
; 395  : 	case LIST_TYPE_PILOT_LOCK:
; 396  : 	{
; 397  : 		raw->pilot_lock_link.child_pred = child_pred;

  00076	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00079	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  0007c	89 48 58	 mov	 DWORD PTR [eax+88], ecx

; 398  : 
; 399  : 		break;

  0007f	e9 b0 00 00 00	 jmp	 $LN1@set_local_
$LN8@set_local_:

; 400  : 	}
; 401  : 
; 402  : 	#endif
; 403  : 
; 404  : 	////////////////////////////////////////
; 405  : 
; 406  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 407  : 
; 408  : 	case LIST_TYPE_PLAYER_TASK:
; 409  : 	{
; 410  : 		raw->player_task_link.child_pred = child_pred;
; 411  : 
; 412  : 		break;
; 413  : 	}
; 414  : 
; 415  : 	#endif
; 416  : 
; 417  : 	////////////////////////////////////////
; 418  : 
; 419  : 	#ifdef LIST_TYPE_REGEN_LINK
; 420  : 
; 421  : 	case LIST_TYPE_REGEN:
; 422  : 	{
; 423  : 		raw->regen_link.child_pred = child_pred;
; 424  : 
; 425  : 		break;
; 426  : 	}
; 427  : 
; 428  : 	#endif
; 429  : 
; 430  : 	////////////////////////////////////////
; 431  : 
; 432  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 433  : 
; 434  : 	case LIST_TYPE_AIR_REGISTRY:
; 435  : 	case LIST_TYPE_GROUND_REGISTRY:
; 436  : 	case LIST_TYPE_SEA_REGISTRY:
; 437  : 	{
; 438  : 		raw->registry_link.child_pred = child_pred;
; 439  : 
; 440  : 		break;
; 441  : 	}
; 442  : 
; 443  : 	#endif
; 444  : 
; 445  : 	////////////////////////////////////////
; 446  : 
; 447  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 448  : 
; 449  : 	case LIST_TYPE_SECTOR:
; 450  : 	{
; 451  : 		raw->sector_link.child_pred = child_pred;
; 452  : 
; 453  : 		break;
; 454  : 	}
; 455  : 
; 456  : 	#endif
; 457  : 
; 458  : 	////////////////////////////////////////
; 459  : 
; 460  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 461  : 
; 462  : 	case LIST_TYPE_SECTOR_TASK:
; 463  : 	{
; 464  : 		raw->sector_task_link.child_pred = child_pred;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00087	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  0008a	89 48 64	 mov	 DWORD PTR [eax+100], ecx

; 465  : 
; 466  : 		break;

  0008d	e9 a2 00 00 00	 jmp	 $LN1@set_local_
$LN9@set_local_:

; 467  : 	}
; 468  : 
; 469  : 	#endif
; 470  : 
; 471  : 	////////////////////////////////////////
; 472  : 
; 473  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 474  : 
; 475  : 	case LIST_TYPE_SEGMENT:
; 476  : 	{
; 477  : 		raw->segment_link.child_pred = child_pred;
; 478  : 
; 479  : 		break;
; 480  : 	}
; 481  : 
; 482  : 	#endif
; 483  : 
; 484  : 	////////////////////////////////////////
; 485  : 
; 486  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 487  : 
; 488  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 489  : 	{
; 490  : 		raw->special_effect_link.child_pred = child_pred;
; 491  : 
; 492  : 		break;
; 493  : 	}
; 494  : 
; 495  : 	#endif
; 496  : 
; 497  : 	////////////////////////////////////////
; 498  : 
; 499  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 500  : 
; 501  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 502  : 	{
; 503  : 		raw->takeoff_queue_link.child_pred = child_pred;
; 504  : 
; 505  : 		break;
; 506  : 	}
; 507  : 
; 508  : 	#endif
; 509  : 
; 510  : 	////////////////////////////////////////
; 511  : 
; 512  : 	#ifdef LIST_TYPE_TARGET_LINK
; 513  : 
; 514  : 	case LIST_TYPE_TARGET:
; 515  : 	{
; 516  : 		raw->target_link.child_pred = child_pred;
; 517  : 
; 518  : 		break;
; 519  : 	}
; 520  : 
; 521  : 	#endif
; 522  : 
; 523  : 	////////////////////////////////////////
; 524  : 
; 525  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 526  : 
; 527  : 	case LIST_TYPE_TASK_DEPENDENT:
; 528  : 	{
; 529  : 		raw->task_dependent_link.child_pred = child_pred;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00095	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  00098	89 48 70	 mov	 DWORD PTR [eax+112], ecx

; 530  : 
; 531  : 		break;

  0009b	e9 94 00 00 00	 jmp	 $LN1@set_local_
$LN10@set_local_:

; 532  : 	}
; 533  : 
; 534  : 	#endif
; 535  : 
; 536  : 	////////////////////////////////////////
; 537  : 
; 538  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 539  : 
; 540  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 541  : 	{
; 542  : 		raw->task_link.child_pred = child_pred;

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a3	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  000a6	89 48 7c	 mov	 DWORD PTR [eax+124], ecx

; 543  : 
; 544  : 		break;

  000a9	e9 86 00 00 00	 jmp	 $LN1@set_local_
$LN11@set_local_:

; 545  : 	}
; 546  : 
; 547  : 	#endif
; 548  : 
; 549  : 	////////////////////////////////////////
; 550  : 
; 551  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 552  : 
; 553  : 	case LIST_TYPE_UPDATE:
; 554  : 	{
; 555  : 		raw->update_link.child_pred = child_pred;

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	8b 4d 10	 mov	 ecx, DWORD PTR _child_pred$[ebp]
  000b4	89 88 88 00 00
	00		 mov	 DWORD PTR [eax+136], ecx

; 556  : 
; 557  : 		break;

  000ba	eb 78		 jmp	 SHORT $LN1@set_local_
$LN12@set_local_:

; 558  : 	}
; 559  : 
; 560  : 	#endif
; 561  : 
; 562  : 	////////////////////////////////////////
; 563  : 
; 564  : 	#ifdef LIST_TYPE_VIEW_LINK
; 565  : 
; 566  : 	case LIST_TYPE_VIEW:
; 567  : 	{
; 568  : 		raw->view_link.child_pred = child_pred;
; 569  : 
; 570  : 		break;
; 571  : 	}
; 572  : 
; 573  : 	#endif
; 574  : 
; 575  : 	////////////////////////////////////////
; 576  : 
; 577  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 578  : 
; 579  : 	case LIST_TYPE_VIEW_WEAPON:
; 580  : 	{
; 581  : 		raw->view_weapon_link.child_pred = child_pred;
; 582  : 
; 583  : 		break;
; 584  : 	}
; 585  : 
; 586  : 	#endif
; 587  : 
; 588  : 	////////////////////////////////////////
; 589  : 
; 590  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 591  : 
; 592  : 	case LIST_TYPE_WAYPOINT:
; 593  : 	{
; 594  : 		raw->waypoint_link.child_pred = child_pred;
; 595  : 
; 596  : 		break;
; 597  : 	}
; 598  : 
; 599  : 	#endif
; 600  : 
; 601  : 	////////////////////////////////////////
; 602  : 
; 603  : 	default:
; 604  : 	{
; 605  : 		debug_fatal_invalid_list_type (en, type);

  000bc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c0	74 0a		 je	 SHORT $LN14@set_local_
  000c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d b8	 mov	 DWORD PTR tv133[ebp], ecx
  000ca	eb 24		 jmp	 SHORT $LN15@set_local_
$LN14@set_local_:
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000d2	81 c2 66 01 00
	00		 add	 edx, 358		; 00000166H
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN15@set_local_:
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000f6	81 c1 66 01 00
	00		 add	 ecx, 358		; 00000166H
  000fc	51		 push	 ecx
  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@JFMOABHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00102	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00105	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  0010c	50		 push	 eax
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00110	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00116	c1 f9 04	 sar	 ecx, 4
  00119	51		 push	 ecx
  0011a	6b 55 b8 0c	 imul	 edx, DWORD PTR tv133[ebp], 12
  0011e	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00124	50		 push	 eax
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  0012b	51		 push	 ecx
  0012c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00131	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 254  : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
  0013d	0f 1f 00	 npad	 3
$LN17@set_local_:
  00140	00 00 00 00	 DD	 $LN5@set_local_
  00144	00 00 00 00	 DD	 $LN6@set_local_
  00148	00 00 00 00	 DD	 $LN7@set_local_
  0014c	00 00 00 00	 DD	 $LN8@set_local_
  00150	00 00 00 00	 DD	 $LN9@set_local_
  00154	00 00 00 00	 DD	 $LN10@set_local_
  00158	00 00 00 00	 DD	 $LN11@set_local_
  0015c	00 00 00 00	 DD	 $LN12@set_local_
$LN16@set_local_:
  00160	00		 DB	 0
  00161	07		 DB	 7
  00162	07		 DB	 7
  00163	07		 DB	 7
  00164	07		 DB	 7
  00165	01		 DB	 1
  00166	07		 DB	 7
  00167	07		 DB	 7
  00168	07		 DB	 7
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	07		 DB	 7
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	02		 DB	 2
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	03		 DB	 3
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	07		 DB	 7
  00183	07		 DB	 7
  00184	04		 DB	 4
  00185	05		 DB	 5
  00186	06		 DB	 6
?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_child_pred
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_succ.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
tv65 = -76						; size = 4
_child_succ$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_child_succ, COMDAT

; 224  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 225  : 	task
; 226  : 		*raw;
; 227  : 
; 228  : 	entity
; 229  : 		*child_succ;
; 230  : 
; 231  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_succ.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	8b 4d b4	 mov	 ecx, DWORD PTR tv65[ebp]
  0001b	83 e9 03	 sub	 ecx, 3
  0001e	89 4d b4	 mov	 DWORD PTR tv65[ebp], ecx
  00021	83 7d b4 26	 cmp	 DWORD PTR tv65[ebp], 38	; 00000026H
  00025	77 73		 ja	 SHORT $LN11@get_local_
  00027	8b 55 b4	 mov	 edx, DWORD PTR tv65[ebp]
  0002a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@get_local_[edx]
  00031	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@get_local_[eax*4]
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		child_succ = raw->aircrew_link.child_succ;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		child_succ = raw->task_link.child_succ;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003b	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0003e	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 89   : 
; 90   : 		break;

  00041	e9 d3 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		child_succ = raw->campaign_objective_link.child_succ;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		child_succ = raw->cargo_link.child_succ;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		child_succ = raw->city_building_link.child_succ;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		child_succ = raw->task_link.child_succ;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0004c	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 141  : 
; 142  : 		break;

  0004f	e9 c5 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		child_succ = raw->current_waypoint_link.child_succ;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 		
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		child_succ = raw->designated_target_link.child_succ;
; 169  : 
; 170  : 		break;
; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 	
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		child_succ = raw->division_link.child_succ;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		child_succ = raw->division_headquarters_link.child_succ;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		child_succ = raw->follower_link.child_succ;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		child_succ = raw->force_link.child_succ;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		child_succ = raw->group_link.child_succ;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		child_succ = raw->guide_link.child_succ;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		child_succ = raw->guide_stack_link.child_succ;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		child_succ = raw->gunship_target_link.child_succ;
; 275  : 
; 276  : 		break;
; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		child_succ = raw->hierarchy_link.child_succ;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 	
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		child_succ = raw->keysite_force_link.child_succ;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		child_succ = raw->launched_weapon_link.child_succ;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		child_succ = raw->landing_site_link.child_succ;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		child_succ = raw->member_link.child_succ;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		child_succ = raw->movement_dependent_link.child_succ;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		child_succ = raw->padlock_link.child_succ;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		child_succ = raw->pilot_link.child_succ;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		child_succ = raw->pilot_lock_link.child_succ;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0005a	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 392  : 
; 393  : 		break;

  0005d	e9 b7 00 00 00	 jmp	 $LN2@get_local_
$LN7@get_local_:

; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		child_succ = raw->player_task_link.child_succ;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		child_succ = raw->regen_link.child_succ;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		child_succ = raw->registry_link.child_succ;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		child_succ = raw->sector_link.child_succ;
; 446  : 
; 447  : 		break;
; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		child_succ = raw->sector_task_link.child_succ;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00065	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00068	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 459  : 
; 460  : 		break;

  0006b	e9 a9 00 00 00	 jmp	 $LN2@get_local_
$LN8@get_local_:

; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		child_succ = raw->segment_link.child_succ;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		child_succ = raw->special_effect_link.child_succ;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		child_succ = raw->takeoff_queue_link.child_succ;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		child_succ = raw->target_link.child_succ;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		child_succ = raw->task_dependent_link.child_succ;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00073	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  00076	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 524  : 
; 525  : 		break;

  00079	e9 9b 00 00 00	 jmp	 $LN2@get_local_
$LN9@get_local_:

; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		child_succ = raw->task_link.child_succ;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00081	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  00084	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 537  : 
; 538  : 		break;

  00087	e9 8d 00 00 00	 jmp	 $LN2@get_local_
$LN10@get_local_:

; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		child_succ = raw->update_link.child_succ;

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00095	89 4d f8	 mov	 DWORD PTR _child_succ$[ebp], ecx

; 550  : 
; 551  : 		break;

  00098	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN11@get_local_:

; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		child_succ = raw->view_link.child_succ;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		child_succ = raw->view_weapon_link.child_succ;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		child_succ = raw->waypoint_link.child_succ;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  0009a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009e	74 0a		 je	 SHORT $LN14@get_local_
  000a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	89 4d b4	 mov	 DWORD PTR tv128[ebp], ecx
  000a8	eb 24		 jmp	 SHORT $LN15@get_local_
$LN14@get_local_:
  000aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000b0	81 c2 77 01 00
	00		 add	 edx, 375		; 00000177H
  000b6	52		 push	 edx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN15@get_local_:
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000d4	81 c1 77 01 00
	00		 add	 ecx, 375		; 00000177H
  000da	51		 push	 ecx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e0	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000e3	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000ea	50		 push	 eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ee	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000f4	c1 f9 04	 sar	 ecx, 4
  000f7	51		 push	 ecx
  000f8	6b 55 b4 0c	 imul	 edx, DWORD PTR tv128[ebp], 12
  000fc	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00102	50		 push	 eax
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0010f	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		child_succ = NULL;

  00112	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _child_succ$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != child_succ);

  00119	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011c	3b 45 f8	 cmp	 eax, DWORD PTR _child_succ$[ebp]
  0011f	75 1a		 jne	 SHORT $LN12@get_local_
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_child_succ@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00126	05 85 01 00 00	 add	 eax, 389		; 00000185H
  0012b	50		 push	 eax
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LFJLFBAF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 235  : 	return (child_succ);

  0013b	8b 45 f8	 mov	 eax, DWORD PTR _child_succ$[ebp]

; 236  : }

  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 08 00	 ret	 8
  00147	90		 npad	 1
$LN17@get_local_:
  00148	00 00 00 00	 DD	 $LN4@get_local_
  0014c	00 00 00 00	 DD	 $LN5@get_local_
  00150	00 00 00 00	 DD	 $LN6@get_local_
  00154	00 00 00 00	 DD	 $LN7@get_local_
  00158	00 00 00 00	 DD	 $LN8@get_local_
  0015c	00 00 00 00	 DD	 $LN9@get_local_
  00160	00 00 00 00	 DD	 $LN10@get_local_
  00164	00 00 00 00	 DD	 $LN11@get_local_
$LN16@get_local_:
  00168	00		 DB	 0
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	01		 DB	 1
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	07		 DB	 7
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	02		 DB	 2
  00183	07		 DB	 7
  00184	07		 DB	 7
  00185	07		 DB	 7
  00186	07		 DB	 7
  00187	03		 DB	 3
  00188	07		 DB	 7
  00189	07		 DB	 7
  0018a	07		 DB	 7
  0018b	07		 DB	 7
  0018c	04		 DB	 4
  0018d	05		 DB	 5
  0018e	06		 DB	 6
?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_child_succ
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_succ.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv133 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_child_succ$ = 16					; size = 4
?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_child_succ, COMDAT

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 207  : 	task
; 208  : 		*raw;
; 209  : 
; 210  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_succ.h

; 71   : ASSERT (en != child_succ);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _child_succ$[ebp]
  00018	75 1a		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	2d 87 00 00 00	 sub	 eax, 135		; 00000087H
  00024	50		 push	 eax
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DACDFMLL@en?5?$CB?$DN?5child_succ@
  0002f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00034	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00037	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  0003a	8b 4d b8	 mov	 ecx, DWORD PTR tv70[ebp]
  0003d	83 e9 03	 sub	 ecx, 3
  00040	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00043	83 7d b8 26	 cmp	 DWORD PTR tv70[ebp], 38	; 00000026H
  00047	77 73		 ja	 SHORT $LN12@set_local_
  00049	8b 55 b8	 mov	 edx, DWORD PTR tv70[ebp]
  0004c	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@set_local_[edx]
  00053	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@set_local_[eax*4]
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.child_succ = child_succ;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.child_succ = child_succ;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  00060	89 48 78	 mov	 DWORD PTR [eax+120], ecx

; 95   : 
; 96   : 		break;

  00063	e9 cc 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.child_succ = child_succ;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.child_succ = child_succ;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.child_succ = child_succ;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.child_succ = child_succ;

  00068	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0006b	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  0006e	89 48 78	 mov	 DWORD PTR [eax+120], ecx

; 147  : 
; 148  : 		break;

  00071	e9 be 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.child_succ = child_succ;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 
; 169  : 	// Jabbewock 031107 Designated targets
; 170  : 		
; 171  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 172  : 
; 173  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 174  : 	{
; 175  : 		raw->designated_target_link.child_succ = child_succ;
; 176  : 
; 177  : 		break;
; 178  : 	}
; 179  : 
; 180  : 	#endif
; 181  : 
; 182  : 	// Jabbewock 031107 ends
; 183  : 
; 184  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 185  : 
; 186  : 	case LIST_TYPE_DIVISION:
; 187  : 	{
; 188  : 		raw->division_link.child_succ = child_succ;
; 189  : 
; 190  : 		break;
; 191  : 	}
; 192  : 
; 193  : 	#endif
; 194  : 
; 195  : 	////////////////////////////////////////
; 196  : 
; 197  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 198  : 
; 199  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 200  : 	{
; 201  : 		raw->division_headquarters_link.child_succ = child_succ;
; 202  : 
; 203  : 		break;
; 204  : 	}
; 205  : 
; 206  : 	#endif
; 207  : 
; 208  : 	////////////////////////////////////////
; 209  : 
; 210  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 211  : 
; 212  : 	case LIST_TYPE_FOLLOWER:
; 213  : 	{
; 214  : 		raw->follower_link.child_succ = child_succ;
; 215  : 
; 216  : 		break;
; 217  : 	}
; 218  : 
; 219  : 	#endif
; 220  : 
; 221  : 	////////////////////////////////////////
; 222  : 
; 223  : 	#ifdef LIST_TYPE_FORCE_LINK
; 224  : 
; 225  : 	case LIST_TYPE_FORCE:
; 226  : 	{
; 227  : 		raw->force_link.child_succ = child_succ;
; 228  : 
; 229  : 		break;
; 230  : 	}
; 231  : 
; 232  : 	#endif
; 233  : 
; 234  : 	////////////////////////////////////////
; 235  : 
; 236  : 	#ifdef LIST_TYPE_GROUP_LINK
; 237  : 
; 238  : 	case LIST_TYPE_BUILDING_GROUP:
; 239  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 240  : 	case LIST_TYPE_KEYSITE_GROUP:
; 241  : 	{
; 242  : 		raw->group_link.child_succ = child_succ;
; 243  : 
; 244  : 		break;
; 245  : 	}
; 246  : 
; 247  : 	#endif
; 248  : 
; 249  : 	////////////////////////////////////////
; 250  : 
; 251  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 252  : 
; 253  : 	case LIST_TYPE_GUIDE:
; 254  : 	{
; 255  : 		raw->guide_link.child_succ = child_succ;
; 256  : 
; 257  : 		break;
; 258  : 	}
; 259  : 
; 260  : 	#endif
; 261  : 
; 262  : 	////////////////////////////////////////
; 263  : 
; 264  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 265  : 
; 266  : 	case LIST_TYPE_GUIDE_STACK:
; 267  : 	{
; 268  : 		raw->guide_stack_link.child_succ = child_succ;
; 269  : 
; 270  : 		break;
; 271  : 	}
; 272  : 
; 273  : 	#endif
; 274  : 
; 275  : 	////////////////////////////////////////
; 276  : 
; 277  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 278  : 
; 279  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 280  : 	{
; 281  : 		raw->gunship_target_link.child_succ = child_succ;
; 282  : 
; 283  : 		break;
; 284  : 	}
; 285  : 
; 286  : 	#endif
; 287  : 
; 288  : 	////////////////////////////////////////
; 289  : 
; 290  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 291  : 
; 292  : 	case LIST_TYPE_HIERARCHY:
; 293  : 	{
; 294  : 		raw->hierarchy_link.child_succ = child_succ;
; 295  : 
; 296  : 		break;
; 297  : 	}
; 298  : 
; 299  : 	#endif
; 300  : 
; 301  : 	////////////////////////////////////////
; 302  : 
; 303  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 304  : 
; 305  : 	case LIST_TYPE_KEYSITE_FORCE:
; 306  : 	{
; 307  : 		raw->keysite_force_link.child_succ = child_succ;
; 308  : 
; 309  : 		break;
; 310  : 	}
; 311  : 
; 312  : 	#endif
; 313  : 
; 314  : 	////////////////////////////////////////
; 315  : 
; 316  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 317  : 
; 318  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 319  : 	{
; 320  : 		raw->launched_weapon_link.child_succ = child_succ;
; 321  : 
; 322  : 		break;
; 323  : 	}
; 324  : 
; 325  : 	#endif
; 326  : 
; 327  : 	////////////////////////////////////////
; 328  : 
; 329  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 330  : 
; 331  : 	case LIST_TYPE_LANDING_SITE:
; 332  : 	{
; 333  : 		raw->landing_site_link.child_succ = child_succ;
; 334  : 
; 335  : 		break;
; 336  : 	}
; 337  : 
; 338  : 	#endif
; 339  : 
; 340  : 	////////////////////////////////////////
; 341  : 
; 342  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 343  : 
; 344  : 	case LIST_TYPE_MEMBER:
; 345  : 	{
; 346  : 		raw->member_link.child_succ = child_succ;
; 347  : 
; 348  : 		break;
; 349  : 	}
; 350  : 
; 351  : 	#endif
; 352  : 
; 353  : 	////////////////////////////////////////
; 354  : 
; 355  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 356  : 
; 357  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 358  : 	{
; 359  : 		raw->movement_dependent_link.child_succ = child_succ;
; 360  : 
; 361  : 		break;
; 362  : 	}
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	////////////////////////////////////////
; 367  : 
; 368  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 369  : 
; 370  : 	case LIST_TYPE_PADLOCK:
; 371  : 	{
; 372  : 		raw->padlock_link.child_succ = child_succ;
; 373  : 
; 374  : 		break;
; 375  : 	}
; 376  : 
; 377  : 	#endif
; 378  : 
; 379  : 	////////////////////////////////////////
; 380  : 
; 381  : 	#ifdef LIST_TYPE_PILOT_LINK
; 382  : 
; 383  : 	case LIST_TYPE_PILOT:
; 384  : 	{
; 385  : 		raw->pilot_link.child_succ = child_succ;
; 386  : 
; 387  : 		break;
; 388  : 	}
; 389  : 
; 390  : 	#endif
; 391  : 
; 392  : 	////////////////////////////////////////
; 393  : 
; 394  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 395  : 
; 396  : 	case LIST_TYPE_PILOT_LOCK:
; 397  : 	{
; 398  : 		raw->pilot_lock_link.child_succ = child_succ;

  00076	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00079	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  0007c	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 399  : 
; 400  : 		break;

  0007f	e9 b0 00 00 00	 jmp	 $LN1@set_local_
$LN8@set_local_:

; 401  : 	}
; 402  : 
; 403  : 	#endif
; 404  : 
; 405  : 	////////////////////////////////////////
; 406  : 
; 407  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 408  : 
; 409  : 	case LIST_TYPE_PLAYER_TASK:
; 410  : 	{
; 411  : 		raw->player_task_link.child_succ = child_succ;
; 412  : 
; 413  : 		break;
; 414  : 	}
; 415  : 
; 416  : 	#endif
; 417  : 
; 418  : 	////////////////////////////////////////
; 419  : 
; 420  : 	#ifdef LIST_TYPE_REGEN_LINK
; 421  : 
; 422  : 	case LIST_TYPE_REGEN:
; 423  : 	{
; 424  : 		raw->regen_link.child_succ = child_succ;
; 425  : 
; 426  : 		break;
; 427  : 	}
; 428  : 
; 429  : 	#endif
; 430  : 
; 431  : 	////////////////////////////////////////
; 432  : 
; 433  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 434  : 
; 435  : 	case LIST_TYPE_AIR_REGISTRY:
; 436  : 	case LIST_TYPE_GROUND_REGISTRY:
; 437  : 	case LIST_TYPE_SEA_REGISTRY:
; 438  : 	{
; 439  : 		raw->registry_link.child_succ = child_succ;
; 440  : 
; 441  : 		break;
; 442  : 	}
; 443  : 
; 444  : 	#endif
; 445  : 
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 449  : 
; 450  : 	case LIST_TYPE_SECTOR:
; 451  : 	{
; 452  : 		raw->sector_link.child_succ = child_succ;
; 453  : 
; 454  : 		break;
; 455  : 	}
; 456  : 
; 457  : 	#endif
; 458  : 
; 459  : 	////////////////////////////////////////
; 460  : 
; 461  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 462  : 
; 463  : 	case LIST_TYPE_SECTOR_TASK:
; 464  : 	{
; 465  : 		raw->sector_task_link.child_succ = child_succ;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00087	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  0008a	89 48 60	 mov	 DWORD PTR [eax+96], ecx

; 466  : 
; 467  : 		break;

  0008d	e9 a2 00 00 00	 jmp	 $LN1@set_local_
$LN9@set_local_:

; 468  : 	}
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 
; 474  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 475  : 
; 476  : 	case LIST_TYPE_SEGMENT:
; 477  : 	{
; 478  : 		raw->segment_link.child_succ = child_succ;
; 479  : 
; 480  : 		break;
; 481  : 	}
; 482  : 
; 483  : 	#endif
; 484  : 
; 485  : 	////////////////////////////////////////
; 486  : 
; 487  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 488  : 
; 489  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 490  : 	{
; 491  : 		raw->special_effect_link.child_succ = child_succ;
; 492  : 
; 493  : 		break;
; 494  : 	}
; 495  : 
; 496  : 	#endif
; 497  : 
; 498  : 	////////////////////////////////////////
; 499  : 
; 500  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 501  : 
; 502  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 503  : 	{
; 504  : 		raw->takeoff_queue_link.child_succ = child_succ;
; 505  : 
; 506  : 		break;
; 507  : 	}
; 508  : 
; 509  : 	#endif
; 510  : 
; 511  : 	////////////////////////////////////////
; 512  : 
; 513  : 	#ifdef LIST_TYPE_TARGET_LINK
; 514  : 
; 515  : 	case LIST_TYPE_TARGET:
; 516  : 	{
; 517  : 		raw->target_link.child_succ = child_succ;
; 518  : 
; 519  : 		break;
; 520  : 	}
; 521  : 
; 522  : 	#endif
; 523  : 
; 524  : 	////////////////////////////////////////
; 525  : 
; 526  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 527  : 
; 528  : 	case LIST_TYPE_TASK_DEPENDENT:
; 529  : 	{
; 530  : 		raw->task_dependent_link.child_succ = child_succ;

  00092	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00095	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  00098	89 48 6c	 mov	 DWORD PTR [eax+108], ecx

; 531  : 
; 532  : 		break;

  0009b	e9 94 00 00 00	 jmp	 $LN1@set_local_
$LN10@set_local_:

; 533  : 	}
; 534  : 
; 535  : 	#endif
; 536  : 
; 537  : 	////////////////////////////////////////
; 538  : 
; 539  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 540  : 
; 541  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 542  : 	{
; 543  : 		raw->task_link.child_succ = child_succ;

  000a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a3	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  000a6	89 48 78	 mov	 DWORD PTR [eax+120], ecx

; 544  : 
; 545  : 		break;

  000a9	e9 86 00 00 00	 jmp	 $LN1@set_local_
$LN11@set_local_:

; 546  : 	}
; 547  : 
; 548  : 	#endif
; 549  : 
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 553  : 
; 554  : 	case LIST_TYPE_UPDATE:
; 555  : 	{
; 556  : 		raw->update_link.child_succ = child_succ;

  000ae	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000b1	8b 4d 10	 mov	 ecx, DWORD PTR _child_succ$[ebp]
  000b4	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx

; 557  : 
; 558  : 		break;

  000ba	eb 78		 jmp	 SHORT $LN1@set_local_
$LN12@set_local_:

; 559  : 	}
; 560  : 
; 561  : 	#endif
; 562  : 
; 563  : 	////////////////////////////////////////
; 564  : 
; 565  : 	#ifdef LIST_TYPE_VIEW_LINK
; 566  : 
; 567  : 	case LIST_TYPE_VIEW:
; 568  : 	{
; 569  : 		raw->view_link.child_succ = child_succ;
; 570  : 
; 571  : 		break;
; 572  : 	}
; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 
; 578  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 579  : 
; 580  : 	case LIST_TYPE_VIEW_WEAPON:
; 581  : 	{
; 582  : 		raw->view_weapon_link.child_succ = child_succ;
; 583  : 
; 584  : 		break;
; 585  : 	}
; 586  : 
; 587  : 	#endif
; 588  : 
; 589  : 	////////////////////////////////////////
; 590  : 
; 591  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 592  : 
; 593  : 	case LIST_TYPE_WAYPOINT:
; 594  : 	{
; 595  : 		raw->waypoint_link.child_succ = child_succ;
; 596  : 
; 597  : 		break;
; 598  : 	}
; 599  : 
; 600  : 	#endif
; 601  : 
; 602  : 	////////////////////////////////////////
; 603  : 
; 604  : 	default:
; 605  : 	{
; 606  : 		debug_fatal_invalid_list_type (en, type);

  000bc	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000c0	74 0a		 je	 SHORT $LN14@set_local_
  000c2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c7	89 4d b8	 mov	 DWORD PTR tv133[ebp], ecx
  000ca	eb 24		 jmp	 SHORT $LN15@set_local_
$LN14@set_local_:
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000d2	81 c2 90 01 00
	00		 add	 edx, 400		; 00000190H
  000d8	52		 push	 edx
  000d9	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN15@set_local_:
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000f6	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  000fc	51		 push	 ecx
  000fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KLLEOGEM@c?3?2users?2nhv90?2projects?2eech?2ap@
  00102	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00105	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  0010c	50		 push	 eax
  0010d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00110	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00116	c1 f9 04	 sar	 ecx, 4
  00119	51		 push	 ecx
  0011a	6b 55 b8 0c	 imul	 edx, DWORD PTR tv133[ebp], 12
  0011e	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00124	50		 push	 eax
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  0012b	51		 push	 ecx
  0012c	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00131	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 213  : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 0c 00	 ret	 12			; 0000000cH
  0013d	0f 1f 00	 npad	 3
$LN17@set_local_:
  00140	00 00 00 00	 DD	 $LN5@set_local_
  00144	00 00 00 00	 DD	 $LN6@set_local_
  00148	00 00 00 00	 DD	 $LN7@set_local_
  0014c	00 00 00 00	 DD	 $LN8@set_local_
  00150	00 00 00 00	 DD	 $LN9@set_local_
  00154	00 00 00 00	 DD	 $LN10@set_local_
  00158	00 00 00 00	 DD	 $LN11@set_local_
  0015c	00 00 00 00	 DD	 $LN12@set_local_
$LN16@set_local_:
  00160	00		 DB	 0
  00161	07		 DB	 7
  00162	07		 DB	 7
  00163	07		 DB	 7
  00164	07		 DB	 7
  00165	01		 DB	 1
  00166	07		 DB	 7
  00167	07		 DB	 7
  00168	07		 DB	 7
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	07		 DB	 7
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	02		 DB	 2
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	03		 DB	 3
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	07		 DB	 7
  00183	07		 DB	 7
  00184	04		 DB	 4
  00185	05		 DB	 5
  00186	06		 DB	 6
?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_child_succ
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_prnt.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv128 = -76						; size = 4
tv65 = -76						; size = 4
_parent$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_parent, COMDAT

; 183  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 184  : 	task
; 185  : 		*raw;
; 186  : 
; 187  : 	entity
; 188  : 		*parent;
; 189  : 
; 190  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_prnt.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	8b 4d b4	 mov	 ecx, DWORD PTR tv65[ebp]
  0001b	83 e9 03	 sub	 ecx, 3
  0001e	89 4d b4	 mov	 DWORD PTR tv65[ebp], ecx
  00021	83 7d b4 26	 cmp	 DWORD PTR tv65[ebp], 38	; 00000026H
  00025	77 73		 ja	 SHORT $LN11@get_local_
  00027	8b 55 b4	 mov	 edx, DWORD PTR tv65[ebp]
  0002a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@get_local_[edx]
  00031	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@get_local_[eax*4]
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		parent = raw->aircrew_link.parent;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 85   : 
; 86   : 	case LIST_TYPE_ASSIGNED_TASK:
; 87   : 	{
; 88   : 		parent = raw->task_link.parent;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003b	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0003e	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 89   : 
; 90   : 		break;

  00041	e9 d3 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 98   : 
; 99   : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 100  : 	{
; 101  : 		parent = raw->campaign_objective_link.parent;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_CARGO_LINK
; 111  : 
; 112  : 	case LIST_TYPE_CARGO:
; 113  : 	{
; 114  : 		parent = raw->cargo_link.parent;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 124  : 
; 125  : 	case LIST_TYPE_CITY_BUILDING:
; 126  : 	{
; 127  : 		parent = raw->city_building_link.parent;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 137  : 
; 138  : 	case LIST_TYPE_COMPLETED_TASK:
; 139  : 	{
; 140  : 		parent = raw->task_link.parent;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0004c	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 141  : 
; 142  : 		break;

  0004f	e9 c5 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 150  : 
; 151  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 152  : 	{
; 153  : 		parent = raw->current_waypoint_link.parent;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	// Jabbewock 031107 Designated targets
; 163  : 	
; 164  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 165  : 
; 166  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 167  : 	{
; 168  : 		parent = raw->designated_target_link.parent;
; 169  : 
; 170  : 		break;
; 171  : 	}
; 172  : 
; 173  : 	#endif
; 174  : 
; 175  : 	// Jabbewock 031107 ends
; 176  : 
; 177  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 178  : 
; 179  : 	case LIST_TYPE_DIVISION:
; 180  : 	{
; 181  : 		parent = raw->division_link.parent;
; 182  : 
; 183  : 		break;
; 184  : 	}
; 185  : 
; 186  : 	#endif
; 187  : 	
; 188  : 	////////////////////////////////////////
; 189  : 
; 190  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 191  : 
; 192  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 193  : 	{
; 194  : 		parent = raw->division_headquarters_link.parent;
; 195  : 
; 196  : 		break;
; 197  : 	}
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	////////////////////////////////////////
; 202  : 
; 203  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 204  : 
; 205  : 	case LIST_TYPE_FOLLOWER:
; 206  : 	{
; 207  : 		parent = raw->follower_link.parent;
; 208  : 
; 209  : 		break;
; 210  : 	}
; 211  : 
; 212  : 	#endif
; 213  : 
; 214  : 	////////////////////////////////////////
; 215  : 
; 216  : 	#ifdef LIST_TYPE_FORCE_LINK
; 217  : 
; 218  : 	case LIST_TYPE_FORCE:
; 219  : 	{
; 220  : 		parent = raw->force_link.parent;
; 221  : 
; 222  : 		break;
; 223  : 	}
; 224  : 
; 225  : 	#endif
; 226  : 
; 227  : 	////////////////////////////////////////
; 228  : 
; 229  : 	#ifdef LIST_TYPE_GROUP_LINK
; 230  : 
; 231  : 	case LIST_TYPE_BUILDING_GROUP:
; 232  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 233  : 	case LIST_TYPE_KEYSITE_GROUP:
; 234  : 	{
; 235  : 		parent = raw->group_link.parent;
; 236  : 
; 237  : 		break;
; 238  : 	}
; 239  : 
; 240  : 	#endif
; 241  : 
; 242  : 	////////////////////////////////////////
; 243  : 
; 244  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 245  : 
; 246  : 	case LIST_TYPE_GUIDE:
; 247  : 	{
; 248  : 		parent = raw->guide_link.parent;
; 249  : 
; 250  : 		break;
; 251  : 	}
; 252  : 
; 253  : 	#endif
; 254  : 
; 255  : 	////////////////////////////////////////
; 256  : 
; 257  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 258  : 
; 259  : 	case LIST_TYPE_GUIDE_STACK:
; 260  : 	{
; 261  : 		parent = raw->guide_stack_link.parent;
; 262  : 
; 263  : 		break;
; 264  : 	}
; 265  : 
; 266  : 	#endif
; 267  : 
; 268  : 	////////////////////////////////////////
; 269  : 
; 270  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 271  : 
; 272  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 273  : 	{
; 274  : 		parent = raw->gunship_target_link.parent;
; 275  : 
; 276  : 		break;
; 277  : 	}
; 278  : 
; 279  : 	#endif
; 280  : 
; 281  : 	////////////////////////////////////////
; 282  : 
; 283  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 284  : 
; 285  : 	case LIST_TYPE_HIERARCHY:
; 286  : 	{
; 287  : 		parent = raw->hierarchy_link.parent;
; 288  : 
; 289  : 		break;
; 290  : 	}
; 291  : 
; 292  : 	#endif
; 293  : 
; 294  : 	////////////////////////////////////////
; 295  : 
; 296  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 297  : 
; 298  : 	case LIST_TYPE_KEYSITE_FORCE:
; 299  : 	{
; 300  : 		parent = raw->keysite_force_link.parent;
; 301  : 
; 302  : 		break;
; 303  : 	}
; 304  : 
; 305  : 	#endif
; 306  : 
; 307  : 	////////////////////////////////////////
; 308  : 
; 309  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 310  : 
; 311  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 312  : 	{
; 313  : 		parent = raw->launched_weapon_link.parent;
; 314  : 
; 315  : 		break;
; 316  : 	}
; 317  : 
; 318  : 	#endif
; 319  : 
; 320  : 	////////////////////////////////////////
; 321  : 
; 322  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 323  : 
; 324  : 	case LIST_TYPE_LANDING_SITE:
; 325  : 	{
; 326  : 		parent = raw->landing_site_link.parent;
; 327  : 
; 328  : 		break;
; 329  : 	}
; 330  : 
; 331  : 	#endif
; 332  : 
; 333  : 	////////////////////////////////////////
; 334  : 
; 335  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 336  : 
; 337  : 	case LIST_TYPE_MEMBER:
; 338  : 	{
; 339  : 		parent = raw->member_link.parent;
; 340  : 
; 341  : 		break;
; 342  : 	}
; 343  : 
; 344  : 	#endif
; 345  : 
; 346  : 	////////////////////////////////////////
; 347  : 
; 348  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 349  : 
; 350  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 351  : 	{
; 352  : 		parent = raw->movement_dependent_link.parent;
; 353  : 
; 354  : 		break;
; 355  : 	}
; 356  : 
; 357  : 	#endif
; 358  : 
; 359  : 	////////////////////////////////////////
; 360  : 
; 361  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 362  : 
; 363  : 	case LIST_TYPE_PADLOCK:
; 364  : 	{
; 365  : 		parent = raw->padlock_link.parent;
; 366  : 
; 367  : 		break;
; 368  : 	}
; 369  : 
; 370  : 	#endif
; 371  : 
; 372  : 	////////////////////////////////////////
; 373  : 
; 374  : 	#ifdef LIST_TYPE_PILOT_LINK
; 375  : 
; 376  : 	case LIST_TYPE_PILOT:
; 377  : 	{
; 378  : 		parent = raw->pilot_link.parent;
; 379  : 
; 380  : 		break;
; 381  : 	}
; 382  : 
; 383  : 	#endif
; 384  : 
; 385  : 	////////////////////////////////////////
; 386  : 
; 387  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 388  : 
; 389  : 	case LIST_TYPE_PILOT_LOCK:
; 390  : 	{
; 391  : 		parent = raw->pilot_lock_link.parent;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  0005a	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 392  : 
; 393  : 		break;

  0005d	e9 b7 00 00 00	 jmp	 $LN2@get_local_
$LN7@get_local_:

; 394  : 	}
; 395  : 
; 396  : 	#endif
; 397  : 
; 398  : 	////////////////////////////////////////
; 399  : 
; 400  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 401  : 
; 402  : 	case LIST_TYPE_PLAYER_TASK:
; 403  : 	{
; 404  : 		parent = raw->player_task_link.parent;
; 405  : 
; 406  : 		break;
; 407  : 	}
; 408  : 
; 409  : 	#endif
; 410  : 
; 411  : 	////////////////////////////////////////
; 412  : 
; 413  : 	#ifdef LIST_TYPE_REGEN_LINK
; 414  : 
; 415  : 	case LIST_TYPE_REGEN:
; 416  : 	{
; 417  : 		parent = raw->regen_link.parent;
; 418  : 
; 419  : 		break;
; 420  : 	}
; 421  : 
; 422  : 	#endif
; 423  : 
; 424  : 	////////////////////////////////////////
; 425  : 
; 426  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 427  : 
; 428  : 	case LIST_TYPE_AIR_REGISTRY:
; 429  : 	case LIST_TYPE_GROUND_REGISTRY:
; 430  : 	case LIST_TYPE_SEA_REGISTRY:
; 431  : 	{
; 432  : 		parent = raw->registry_link.parent;
; 433  : 
; 434  : 		break;
; 435  : 	}
; 436  : 
; 437  : 	#endif
; 438  : 
; 439  : 	////////////////////////////////////////
; 440  : 
; 441  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 442  : 
; 443  : 	case LIST_TYPE_SECTOR:
; 444  : 	{
; 445  : 		parent = raw->sector_link.parent;
; 446  : 
; 447  : 		break;
; 448  : 	}
; 449  : 
; 450  : 	#endif
; 451  : 
; 452  : 	////////////////////////////////////////
; 453  : 
; 454  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 455  : 
; 456  : 	case LIST_TYPE_SECTOR_TASK:
; 457  : 	{
; 458  : 		parent = raw->sector_task_link.parent;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00065	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  00068	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 459  : 
; 460  : 		break;

  0006b	e9 a9 00 00 00	 jmp	 $LN2@get_local_
$LN8@get_local_:

; 461  : 	}
; 462  : 
; 463  : 	#endif
; 464  : 
; 465  : 	////////////////////////////////////////
; 466  : 
; 467  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 468  : 
; 469  : 	case LIST_TYPE_SEGMENT:
; 470  : 	{
; 471  : 		parent = raw->segment_link.parent;
; 472  : 
; 473  : 		break;
; 474  : 	}
; 475  : 
; 476  : 	#endif
; 477  : 
; 478  : 	////////////////////////////////////////
; 479  : 
; 480  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 481  : 
; 482  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 483  : 	{
; 484  : 		parent = raw->special_effect_link.parent;
; 485  : 
; 486  : 		break;
; 487  : 	}
; 488  : 
; 489  : 	#endif
; 490  : 
; 491  : 	////////////////////////////////////////
; 492  : 
; 493  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 494  : 
; 495  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 496  : 	{
; 497  : 		parent = raw->takeoff_queue_link.parent;
; 498  : 
; 499  : 		break;
; 500  : 	}
; 501  : 
; 502  : 	#endif
; 503  : 
; 504  : 	////////////////////////////////////////
; 505  : 
; 506  : 	#ifdef LIST_TYPE_TARGET_LINK
; 507  : 
; 508  : 	case LIST_TYPE_TARGET:
; 509  : 	{
; 510  : 		parent = raw->target_link.parent;
; 511  : 
; 512  : 		break;
; 513  : 	}
; 514  : 
; 515  : 	#endif
; 516  : 
; 517  : 	////////////////////////////////////////
; 518  : 
; 519  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 520  : 
; 521  : 	case LIST_TYPE_TASK_DEPENDENT:
; 522  : 	{
; 523  : 		parent = raw->task_dependent_link.parent;

  00070	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00073	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  00076	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 524  : 
; 525  : 		break;

  00079	e9 9b 00 00 00	 jmp	 $LN2@get_local_
$LN9@get_local_:

; 526  : 	}
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	////////////////////////////////////////
; 531  : 
; 532  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 533  : 
; 534  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 535  : 	{
; 536  : 		parent = raw->task_link.parent;

  0007e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00081	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  00084	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 537  : 
; 538  : 		break;

  00087	e9 8d 00 00 00	 jmp	 $LN2@get_local_
$LN10@get_local_:

; 539  : 	}
; 540  : 
; 541  : 	#endif
; 542  : 
; 543  : 	////////////////////////////////////////
; 544  : 
; 545  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 546  : 
; 547  : 	case LIST_TYPE_UPDATE:
; 548  : 	{
; 549  : 		parent = raw->update_link.parent;

  0008c	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0008f	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  00095	89 4d f8	 mov	 DWORD PTR _parent$[ebp], ecx

; 550  : 
; 551  : 		break;

  00098	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN11@get_local_:

; 552  : 	}
; 553  : 
; 554  : 	#endif
; 555  : 
; 556  : 	////////////////////////////////////////
; 557  : 
; 558  : 	#ifdef LIST_TYPE_VIEW_LINK
; 559  : 
; 560  : 	case LIST_TYPE_VIEW:
; 561  : 	{
; 562  : 		parent = raw->view_link.parent;
; 563  : 
; 564  : 		break;
; 565  : 	}
; 566  : 
; 567  : 	#endif
; 568  : 
; 569  : 	////////////////////////////////////////
; 570  : 
; 571  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 572  : 
; 573  : 	case LIST_TYPE_VIEW_WEAPON:
; 574  : 	{
; 575  : 		parent = raw->view_weapon_link.parent;
; 576  : 
; 577  : 		break;
; 578  : 	}
; 579  : 
; 580  : 	#endif
; 581  : 
; 582  : 	////////////////////////////////////////
; 583  : 
; 584  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 585  : 
; 586  : 	case LIST_TYPE_WAYPOINT:
; 587  : 	{
; 588  : 		parent = raw->waypoint_link.parent;
; 589  : 
; 590  : 		break;
; 591  : 	}
; 592  : 
; 593  : 	#endif
; 594  : 
; 595  : 	////////////////////////////////////////
; 596  : 
; 597  : 	default:
; 598  : 	{
; 599  : 		debug_fatal_invalid_list_type (en, type);

  0009a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009e	74 0a		 je	 SHORT $LN14@get_local_
  000a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a5	89 4d b4	 mov	 DWORD PTR tv128[ebp], ecx
  000a8	eb 24		 jmp	 SHORT $LN15@get_local_
$LN14@get_local_:
  000aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000b0	81 c2 a0 01 00
	00		 add	 edx, 416		; 000001a0H
  000b6	52		 push	 edx
  000b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN15@get_local_:
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000d4	81 c1 a0 01 00
	00		 add	 ecx, 416		; 000001a0H
  000da	51		 push	 ecx
  000db	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e0	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000e3	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000ea	50		 push	 eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ee	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000f4	c1 f9 04	 sar	 ecx, 4
  000f7	51		 push	 ecx
  000f8	6b 55 b4 0c	 imul	 edx, DWORD PTR tv128[ebp], 12
  000fc	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00102	50		 push	 eax
  00103	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0010f	83 c4 18	 add	 esp, 24			; 00000018H

; 600  : 
; 601  : 		parent = NULL;

  00112	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp], 0
$LN2@get_local_:

; 602  : 
; 603  : 		break;
; 604  : 	}
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : }
; 608  : 
; 609  : //
; 610  : // check list integrity
; 611  : //
; 612  : 
; 613  : ASSERT (en != parent);

  00119	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0011c	3b 45 f8	 cmp	 eax, DWORD PTR _parent$[ebp]
  0011f	75 1a		 jne	 SHORT $LN12@get_local_
  00121	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_parent@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00126	05 ae 01 00 00	 add	 eax, 430		; 000001aeH
  0012b	50		 push	 eax
  0012c	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@KMCINALH@c?3?2users?2nhv90?2projects?2eech?2ap@
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
  00136	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN12@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 194  : 	return (parent);

  0013b	8b 45 f8	 mov	 eax, DWORD PTR _parent$[ebp]

; 195  : }

  0013e	5f		 pop	 edi
  0013f	5e		 pop	 esi
  00140	5b		 pop	 ebx
  00141	8b e5		 mov	 esp, ebp
  00143	5d		 pop	 ebp
  00144	c2 08 00	 ret	 8
  00147	90		 npad	 1
$LN17@get_local_:
  00148	00 00 00 00	 DD	 $LN4@get_local_
  0014c	00 00 00 00	 DD	 $LN5@get_local_
  00150	00 00 00 00	 DD	 $LN6@get_local_
  00154	00 00 00 00	 DD	 $LN7@get_local_
  00158	00 00 00 00	 DD	 $LN8@get_local_
  0015c	00 00 00 00	 DD	 $LN9@get_local_
  00160	00 00 00 00	 DD	 $LN10@get_local_
  00164	00 00 00 00	 DD	 $LN11@get_local_
$LN16@get_local_:
  00168	00		 DB	 0
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	01		 DB	 1
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	07		 DB	 7
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	07		 DB	 7
  0017b	07		 DB	 7
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	07		 DB	 7
  00181	07		 DB	 7
  00182	02		 DB	 2
  00183	07		 DB	 7
  00184	07		 DB	 7
  00185	07		 DB	 7
  00186	07		 DB	 7
  00187	03		 DB	 3
  00188	07		 DB	 7
  00189	07		 DB	 7
  0018a	07		 DB	 7
  0018b	07		 DB	 7
  0018c	04		 DB	 4
  0018d	05		 DB	 5
  0018e	06		 DB	 6
?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_prnt.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv133 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_parent$ = 16						; size = 4
?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC	; set_local_parent, COMDAT

; 165  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 166  : 	task
; 167  : 		*raw;
; 168  : 
; 169  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_prnt.h

; 71   : ASSERT (en != parent);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _parent$[ebp]
  00018	75 18		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	83 e8 5e	 sub	 eax, 94			; 0000005eH
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ILAPCPFO@en?5?$CB?$DN?5parent@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00032	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00035	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00038	8b 4d b8	 mov	 ecx, DWORD PTR tv70[ebp]
  0003b	83 e9 03	 sub	 ecx, 3
  0003e	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00041	83 7d b8 26	 cmp	 DWORD PTR tv70[ebp], 38	; 00000026H
  00045	77 73		 ja	 SHORT $LN12@set_local_
  00047	8b 55 b8	 mov	 edx, DWORD PTR tv70[ebp]
  0004a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN16@set_local_[edx]
  00051	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN17@set_local_[eax*4]
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_LINK
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_link.parent = parent;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_LINK
; 91   : 
; 92   : 	case LIST_TYPE_ASSIGNED_TASK:
; 93   : 	{
; 94   : 		raw->task_link.parent = parent;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005b	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  0005e	89 48 74	 mov	 DWORD PTR [eax+116], ecx

; 95   : 
; 96   : 		break;

  00061	e9 cc 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 104  : 
; 105  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 106  : 	{
; 107  : 		raw->campaign_objective_link.parent = parent;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_CARGO_LINK
; 117  : 
; 118  : 	case LIST_TYPE_CARGO:
; 119  : 	{
; 120  : 		raw->cargo_link.parent = parent;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 130  : 
; 131  : 	case LIST_TYPE_CITY_BUILDING:
; 132  : 	{
; 133  : 		raw->city_building_link.parent = parent;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 143  : 
; 144  : 	case LIST_TYPE_COMPLETED_TASK:
; 145  : 	{
; 146  : 		raw->task_link.parent = parent;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00069	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  0006c	89 48 74	 mov	 DWORD PTR [eax+116], ecx

; 147  : 
; 148  : 		break;

  0006f	e9 be 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 156  : 
; 157  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 158  : 	{
; 159  : 		raw->current_waypoint_link.parent = parent;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 
; 169  : 	// Jabbewock 031107 Designated targets
; 170  : 	
; 171  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 172  : 
; 173  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 174  : 	{
; 175  : 		raw->designated_target_link.parent = parent;
; 176  : 
; 177  : 		break;
; 178  : 	}
; 179  : 
; 180  : 	#endif
; 181  : 	
; 182  : 	// Jabbewock 031107 ends
; 183  : 	
; 184  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 185  : 
; 186  : 	case LIST_TYPE_DIVISION:
; 187  : 	{
; 188  : 		raw->division_link.parent = parent;
; 189  : 
; 190  : 		break;
; 191  : 	}
; 192  : 
; 193  : 	#endif
; 194  : 
; 195  : 	////////////////////////////////////////
; 196  : 
; 197  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 198  : 
; 199  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 200  : 	{
; 201  : 		raw->division_headquarters_link.parent = parent;
; 202  : 
; 203  : 		break;
; 204  : 	}
; 205  : 
; 206  : 	#endif
; 207  : 
; 208  : 	////////////////////////////////////////
; 209  : 
; 210  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 211  : 
; 212  : 	case LIST_TYPE_FOLLOWER:
; 213  : 	{
; 214  : 		raw->follower_link.parent = parent;
; 215  : 
; 216  : 		break;
; 217  : 	}
; 218  : 
; 219  : 	#endif
; 220  : 
; 221  : 	////////////////////////////////////////
; 222  : 
; 223  : 	#ifdef LIST_TYPE_FORCE_LINK
; 224  : 
; 225  : 	case LIST_TYPE_FORCE:
; 226  : 	{
; 227  : 		raw->force_link.parent = parent;
; 228  : 
; 229  : 		break;
; 230  : 	}
; 231  : 
; 232  : 	#endif
; 233  : 
; 234  : 	////////////////////////////////////////
; 235  : 
; 236  : 	#ifdef LIST_TYPE_GROUP_LINK
; 237  : 
; 238  : 	case LIST_TYPE_BUILDING_GROUP:
; 239  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 240  : 	case LIST_TYPE_KEYSITE_GROUP:
; 241  : 	{
; 242  : 		raw->group_link.parent = parent;
; 243  : 
; 244  : 		break;
; 245  : 	}
; 246  : 
; 247  : 	#endif
; 248  : 
; 249  : 	////////////////////////////////////////
; 250  : 
; 251  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 252  : 
; 253  : 	case LIST_TYPE_GUIDE:
; 254  : 	{
; 255  : 		raw->guide_link.parent = parent;
; 256  : 
; 257  : 		break;
; 258  : 	}
; 259  : 
; 260  : 	#endif
; 261  : 
; 262  : 	////////////////////////////////////////
; 263  : 
; 264  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 265  : 
; 266  : 	case LIST_TYPE_GUIDE_STACK:
; 267  : 	{
; 268  : 		raw->guide_stack_link.parent = parent;
; 269  : 
; 270  : 		break;
; 271  : 	}
; 272  : 
; 273  : 	#endif
; 274  : 
; 275  : 	////////////////////////////////////////
; 276  : 
; 277  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 278  : 
; 279  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 280  : 	{
; 281  : 		raw->gunship_target_link.parent = parent;
; 282  : 
; 283  : 		break;
; 284  : 	}
; 285  : 
; 286  : 	#endif
; 287  : 
; 288  : 	////////////////////////////////////////
; 289  : 
; 290  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 291  : 
; 292  : 	case LIST_TYPE_HIERARCHY:
; 293  : 	{
; 294  : 		raw->hierarchy_link.parent = parent;
; 295  : 
; 296  : 		break;
; 297  : 	}
; 298  : 
; 299  : 	#endif
; 300  : 
; 301  : 	////////////////////////////////////////
; 302  : 
; 303  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 304  : 
; 305  : 	case LIST_TYPE_KEYSITE_FORCE:
; 306  : 	{
; 307  : 		raw->keysite_force_link.parent = parent;
; 308  : 
; 309  : 		break;
; 310  : 	}
; 311  : 
; 312  : 	#endif
; 313  : 
; 314  : 	////////////////////////////////////////
; 315  : 
; 316  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 317  : 
; 318  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 319  : 	{
; 320  : 		raw->launched_weapon_link.parent = parent;
; 321  : 
; 322  : 		break;
; 323  : 	}
; 324  : 
; 325  : 	#endif
; 326  : 
; 327  : 	////////////////////////////////////////
; 328  : 
; 329  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 330  : 
; 331  : 	case LIST_TYPE_LANDING_SITE:
; 332  : 	{
; 333  : 		raw->landing_site_link.parent = parent;
; 334  : 
; 335  : 		break;
; 336  : 	}
; 337  : 
; 338  : 	#endif
; 339  : 
; 340  : 	////////////////////////////////////////
; 341  : 
; 342  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 343  : 
; 344  : 	case LIST_TYPE_MEMBER:
; 345  : 	{
; 346  : 		raw->member_link.parent = parent;
; 347  : 
; 348  : 		break;
; 349  : 	}
; 350  : 
; 351  : 	#endif
; 352  : 
; 353  : 	////////////////////////////////////////
; 354  : 
; 355  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 356  : 
; 357  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 358  : 	{
; 359  : 		raw->movement_dependent_link.parent = parent;
; 360  : 
; 361  : 		break;
; 362  : 	}
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	////////////////////////////////////////
; 367  : 
; 368  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 369  : 
; 370  : 	case LIST_TYPE_PADLOCK:
; 371  : 	{
; 372  : 		raw->padlock_link.parent = parent;
; 373  : 
; 374  : 		break;
; 375  : 	}
; 376  : 
; 377  : 	#endif
; 378  : 
; 379  : 	////////////////////////////////////////
; 380  : 
; 381  : 	#ifdef LIST_TYPE_PILOT_LINK
; 382  : 
; 383  : 	case LIST_TYPE_PILOT:
; 384  : 	{
; 385  : 		raw->pilot_link.parent = parent;
; 386  : 
; 387  : 		break;
; 388  : 	}
; 389  : 
; 390  : 	#endif
; 391  : 
; 392  : 	////////////////////////////////////////
; 393  : 
; 394  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 395  : 
; 396  : 	case LIST_TYPE_PILOT_LOCK:
; 397  : 	{
; 398  : 		raw->pilot_lock_link.parent = parent;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00077	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  0007a	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 399  : 
; 400  : 		break;

  0007d	e9 b0 00 00 00	 jmp	 $LN1@set_local_
$LN8@set_local_:

; 401  : 	}
; 402  : 
; 403  : 	#endif
; 404  : 
; 405  : 	////////////////////////////////////////
; 406  : 
; 407  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 408  : 
; 409  : 	case LIST_TYPE_PLAYER_TASK:
; 410  : 	{
; 411  : 		raw->player_task_link.parent = parent;
; 412  : 
; 413  : 		break;
; 414  : 	}
; 415  : 
; 416  : 	#endif
; 417  : 
; 418  : 	////////////////////////////////////////
; 419  : 
; 420  : 	#ifdef LIST_TYPE_REGEN_LINK
; 421  : 
; 422  : 	case LIST_TYPE_REGEN:
; 423  : 	{
; 424  : 		raw->regen_link.parent = parent;
; 425  : 
; 426  : 		break;
; 427  : 	}
; 428  : 
; 429  : 	#endif
; 430  : 
; 431  : 	////////////////////////////////////////
; 432  : 
; 433  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 434  : 
; 435  : 	case LIST_TYPE_AIR_REGISTRY:
; 436  : 	case LIST_TYPE_GROUND_REGISTRY:
; 437  : 	case LIST_TYPE_SEA_REGISTRY:
; 438  : 	{
; 439  : 		raw->registry_link.parent = parent;
; 440  : 
; 441  : 		break;
; 442  : 	}
; 443  : 
; 444  : 	#endif
; 445  : 
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_SECTOR_LINK
; 449  : 
; 450  : 	case LIST_TYPE_SECTOR:
; 451  : 	{
; 452  : 		raw->sector_link.parent = parent;
; 453  : 
; 454  : 		break;
; 455  : 	}
; 456  : 
; 457  : 	#endif
; 458  : 
; 459  : 	////////////////////////////////////////
; 460  : 
; 461  : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 462  : 
; 463  : 	case LIST_TYPE_SECTOR_TASK:
; 464  : 	{
; 465  : 		raw->sector_task_link.parent = parent;

  00082	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00085	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  00088	89 48 5c	 mov	 DWORD PTR [eax+92], ecx

; 466  : 
; 467  : 		break;

  0008b	e9 a2 00 00 00	 jmp	 $LN1@set_local_
$LN9@set_local_:

; 468  : 	}
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 
; 474  : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 475  : 
; 476  : 	case LIST_TYPE_SEGMENT:
; 477  : 	{
; 478  : 		raw->segment_link.parent = parent;
; 479  : 
; 480  : 		break;
; 481  : 	}
; 482  : 
; 483  : 	#endif
; 484  : 
; 485  : 	////////////////////////////////////////
; 486  : 
; 487  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 488  : 
; 489  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 490  : 	{
; 491  : 		raw->special_effect_link.parent = parent;
; 492  : 
; 493  : 		break;
; 494  : 	}
; 495  : 
; 496  : 	#endif
; 497  : 
; 498  : 	////////////////////////////////////////
; 499  : 
; 500  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 501  : 
; 502  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 503  : 	{
; 504  : 		raw->takeoff_queue_link.parent = parent;
; 505  : 
; 506  : 		break;
; 507  : 	}
; 508  : 
; 509  : 	#endif
; 510  : 
; 511  : 	////////////////////////////////////////
; 512  : 
; 513  : 	#ifdef LIST_TYPE_TARGET_LINK
; 514  : 
; 515  : 	case LIST_TYPE_TARGET:
; 516  : 	{
; 517  : 		raw->target_link.parent = parent;
; 518  : 
; 519  : 		break;
; 520  : 	}
; 521  : 
; 522  : 	#endif
; 523  : 
; 524  : 	////////////////////////////////////////
; 525  : 
; 526  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 527  : 
; 528  : 	case LIST_TYPE_TASK_DEPENDENT:
; 529  : 	{
; 530  : 		raw->task_dependent_link.parent = parent;

  00090	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00093	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  00096	89 48 68	 mov	 DWORD PTR [eax+104], ecx

; 531  : 
; 532  : 		break;

  00099	e9 94 00 00 00	 jmp	 $LN1@set_local_
$LN10@set_local_:

; 533  : 	}
; 534  : 
; 535  : 	#endif
; 536  : 
; 537  : 	////////////////////////////////////////
; 538  : 
; 539  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 540  : 
; 541  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 542  : 	{
; 543  : 		raw->task_link.parent = parent;

  0009e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a1	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  000a4	89 48 74	 mov	 DWORD PTR [eax+116], ecx

; 544  : 
; 545  : 		break;

  000a7	e9 86 00 00 00	 jmp	 $LN1@set_local_
$LN11@set_local_:

; 546  : 	}
; 547  : 
; 548  : 	#endif
; 549  : 
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_UPDATE_LINK
; 553  : 
; 554  : 	case LIST_TYPE_UPDATE:
; 555  : 	{
; 556  : 		raw->update_link.parent = parent;

  000ac	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000af	8b 4d 10	 mov	 ecx, DWORD PTR _parent$[ebp]
  000b2	89 88 80 00 00
	00		 mov	 DWORD PTR [eax+128], ecx

; 557  : 
; 558  : 		break;

  000b8	eb 78		 jmp	 SHORT $LN1@set_local_
$LN12@set_local_:

; 559  : 	}
; 560  : 
; 561  : 	#endif
; 562  : 
; 563  : 	////////////////////////////////////////
; 564  : 
; 565  : 	#ifdef LIST_TYPE_VIEW_LINK
; 566  : 
; 567  : 	case LIST_TYPE_VIEW:
; 568  : 	{
; 569  : 		raw->view_link.parent = parent;
; 570  : 
; 571  : 		break;
; 572  : 	}
; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 
; 578  : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 579  : 
; 580  : 	case LIST_TYPE_VIEW_WEAPON:
; 581  : 	{
; 582  : 		raw->view_weapon_link.parent = parent;
; 583  : 
; 584  : 		break;
; 585  : 	}
; 586  : 
; 587  : 	#endif
; 588  : 
; 589  : 	////////////////////////////////////////
; 590  : 
; 591  : 	#ifdef LIST_TYPE_WAYPOINT_LINK
; 592  : 
; 593  : 	case LIST_TYPE_WAYPOINT:
; 594  : 	{
; 595  : 		raw->waypoint_link.parent = parent;
; 596  : 
; 597  : 		break;
; 598  : 	}
; 599  : 
; 600  : 	#endif
; 601  : 
; 602  : 	////////////////////////////////////////
; 603  : 
; 604  : 	default:
; 605  : 	{
; 606  : 		debug_fatal_invalid_list_type (en, type);

  000ba	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000be	74 0a		 je	 SHORT $LN14@set_local_
  000c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c5	89 4d b8	 mov	 DWORD PTR tv133[ebp], ecx
  000c8	eb 24		 jmp	 SHORT $LN15@set_local_
$LN14@set_local_:
  000ca	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000d0	81 c2 b9 01 00
	00		 add	 edx, 441		; 000001b9H
  000d6	52		 push	 edx
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  000dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e7	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN15@set_local_:
  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000f4	81 c1 b9 01 00
	00		 add	 ecx, 441		; 000001b9H
  000fa	51		 push	 ecx
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@LCAHGHPO@c?3?2users?2nhv90?2projects?2eech?2ap@
  00100	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  00103	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  0010a	50		 push	 eax
  0010b	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0010e	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00114	c1 f9 04	 sar	 ecx, 4
  00117	51		 push	 ecx
  00118	6b 55 b8 0c	 imul	 edx, DWORD PTR tv133[ebp], 12
  0011c	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00122	50		 push	 eax
  00123	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  00129	51		 push	 ecx
  0012a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0012f	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 172  : }

  00132	5f		 pop	 edi
  00133	5e		 pop	 esi
  00134	5b		 pop	 ebx
  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 0c 00	 ret	 12			; 0000000cH
  0013b	90		 npad	 1
$LN17@set_local_:
  0013c	00 00 00 00	 DD	 $LN5@set_local_
  00140	00 00 00 00	 DD	 $LN6@set_local_
  00144	00 00 00 00	 DD	 $LN7@set_local_
  00148	00 00 00 00	 DD	 $LN8@set_local_
  0014c	00 00 00 00	 DD	 $LN9@set_local_
  00150	00 00 00 00	 DD	 $LN10@set_local_
  00154	00 00 00 00	 DD	 $LN11@set_local_
  00158	00 00 00 00	 DD	 $LN12@set_local_
$LN16@set_local_:
  0015c	00		 DB	 0
  0015d	07		 DB	 7
  0015e	07		 DB	 7
  0015f	07		 DB	 7
  00160	07		 DB	 7
  00161	01		 DB	 1
  00162	07		 DB	 7
  00163	07		 DB	 7
  00164	07		 DB	 7
  00165	07		 DB	 7
  00166	07		 DB	 7
  00167	07		 DB	 7
  00168	07		 DB	 7
  00169	07		 DB	 7
  0016a	07		 DB	 7
  0016b	07		 DB	 7
  0016c	07		 DB	 7
  0016d	07		 DB	 7
  0016e	07		 DB	 7
  0016f	07		 DB	 7
  00170	07		 DB	 7
  00171	07		 DB	 7
  00172	07		 DB	 7
  00173	07		 DB	 7
  00174	07		 DB	 7
  00175	07		 DB	 7
  00176	02		 DB	 2
  00177	07		 DB	 7
  00178	07		 DB	 7
  00179	07		 DB	 7
  0017a	07		 DB	 7
  0017b	03		 DB	 3
  0017c	07		 DB	 7
  0017d	07		 DB	 7
  0017e	07		 DB	 7
  0017f	07		 DB	 7
  00180	04		 DB	 4
  00181	05		 DB	 5
  00182	06		 DB	 6
?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP	; set_local_parent
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_frst.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z
_TEXT	SEGMENT
tv90 = -76						; size = 4
tv65 = -76						; size = 4
_first_child$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z PROC ; get_local_first_child, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 	task
; 144  : 		*raw;
; 145  : 
; 146  : 	entity
; 147  : 		*first_child;
; 148  : 
; 149  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\get_frst.h

; 67   : switch (type)

  00012	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00015	89 45 b4	 mov	 DWORD PTR tv65[ebp], eax
  00018	8b 4d b4	 mov	 ecx, DWORD PTR tv65[ebp]
  0001b	83 e9 10	 sub	 ecx, 16			; 00000010H
  0001e	89 4d b4	 mov	 DWORD PTR tv65[ebp], ecx
  00021	83 7d b4 1c	 cmp	 DWORD PTR tv65[ebp], 28	; 0000001cH
  00025	77 46		 ja	 SHORT $LN8@get_local_
  00027	8b 55 b4	 mov	 edx, DWORD PTR tv65[ebp]
  0002a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN13@get_local_[edx]
  00031	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@get_local_[eax*4]
$LN4@get_local_:

; 68   : {
; 69   : 	////////////////////////////////////////
; 70   : 
; 71   : 	#ifdef LIST_TYPE_AIRCREW_ROOT
; 72   : 
; 73   : 	case LIST_TYPE_AIRCREW:
; 74   : 	{
; 75   : 		first_child = raw->aircrew_root.first_child;
; 76   : 
; 77   : 		break;
; 78   : 	}
; 79   : 
; 80   : 	#endif
; 81   : 
; 82   : 	////////////////////////////////////////
; 83   : 
; 84   : 	#ifdef LIST_TYPE_AIR_REGISTRY_ROOT
; 85   : 
; 86   : 	case LIST_TYPE_AIR_REGISTRY:
; 87   : 	{
; 88   : 		first_child = raw->air_registry_root.first_child;
; 89   : 
; 90   : 		break;
; 91   : 	}
; 92   : 
; 93   : 	#endif
; 94   : 
; 95   : 	////////////////////////////////////////
; 96   : 
; 97   : 	#ifdef LIST_TYPE_ASSIGNED_TASK_ROOT
; 98   : 
; 99   : 	case LIST_TYPE_ASSIGNED_TASK:
; 100  : 	{
; 101  : 		first_child = raw->assigned_task_root.first_child;
; 102  : 
; 103  : 		break;
; 104  : 	}
; 105  : 
; 106  : 	#endif
; 107  : 
; 108  : 	////////////////////////////////////////
; 109  : 
; 110  : 	#ifdef LIST_TYPE_BUILDING_GROUP_ROOT
; 111  : 
; 112  : 	case LIST_TYPE_BUILDING_GROUP:
; 113  : 	{
; 114  : 		first_child = raw->building_group_root.first_child;
; 115  : 
; 116  : 		break;
; 117  : 	}
; 118  : 
; 119  : 	#endif
; 120  : 
; 121  : 	////////////////////////////////////////
; 122  : 
; 123  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_ROOT
; 124  : 
; 125  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 126  : 	{
; 127  : 		first_child = raw->campaign_objective_root.first_child;
; 128  : 
; 129  : 		break;
; 130  : 	}
; 131  : 
; 132  : 	#endif
; 133  : 
; 134  : 	////////////////////////////////////////
; 135  : 
; 136  : 	#ifdef LIST_TYPE_CARGO_ROOT
; 137  : 
; 138  : 	case LIST_TYPE_CARGO:
; 139  : 	{
; 140  : 		first_child = raw->cargo_root.first_child;
; 141  : 
; 142  : 		break;
; 143  : 	}
; 144  : 
; 145  : 	#endif
; 146  : 
; 147  : 	////////////////////////////////////////
; 148  : 
; 149  : 	#ifdef LIST_TYPE_CITY_BUILDING_ROOT
; 150  : 
; 151  : 	case LIST_TYPE_CITY_BUILDING:
; 152  : 	{
; 153  : 		first_child = raw->city_building_root.first_child;
; 154  : 
; 155  : 		break;
; 156  : 	}
; 157  : 
; 158  : 	#endif
; 159  : 
; 160  : 	////////////////////////////////////////
; 161  : 
; 162  : 	#ifdef LIST_TYPE_COMPLETED_TASK_ROOT
; 163  : 
; 164  : 	case LIST_TYPE_COMPLETED_TASK:
; 165  : 	{
; 166  : 		first_child = raw->completed_task_root.first_child;
; 167  : 
; 168  : 		break;
; 169  : 	}
; 170  : 
; 171  : 	#endif
; 172  : 
; 173  : 	////////////////////////////////////////
; 174  : 
; 175  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_ROOT
; 176  : 
; 177  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 178  : 	{
; 179  : 		first_child = raw->current_waypoint_root.first_child;
; 180  : 
; 181  : 		break;
; 182  : 	}
; 183  : 
; 184  : 	#endif
; 185  : 
; 186  : // Jabbewock 031107 Designated targets
; 187  : 
; 188  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_ROOT
; 189  : 
; 190  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 191  : 	{
; 192  : 		first_child = raw->designated_target_root.first_child;
; 193  : 
; 194  : 		break;
; 195  : 	}
; 196  : 
; 197  : 	#endif
; 198  : // Jabbewock 031107 ends
; 199  : 
; 200  : 	////////////////////////////////////////
; 201  : 
; 202  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 203  : 
; 204  : 	case LIST_TYPE_DIVISION:
; 205  : 	{
; 206  : 		first_child = raw->division_root.first_child;
; 207  : 
; 208  : 		break;
; 209  : 	}
; 210  : 
; 211  : 	#endif
; 212  : 
; 213  : 	////////////////////////////////////////
; 214  : 
; 215  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 216  : 
; 217  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 218  : 	{
; 219  : 		first_child = raw->division_headquarters_root.first_child;
; 220  : 
; 221  : 		break;
; 222  : 	}
; 223  : 
; 224  : 	#endif
; 225  : 
; 226  : 	////////////////////////////////////////
; 227  : 
; 228  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 229  : 
; 230  : 	case LIST_TYPE_FOLLOWER:
; 231  : 	{
; 232  : 		first_child = raw->follower_root.first_child;
; 233  : 
; 234  : 		break;
; 235  : 	}
; 236  : 
; 237  : 	#endif
; 238  : 
; 239  : 	////////////////////////////////////////
; 240  : 
; 241  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 242  : 
; 243  : 	case LIST_TYPE_FORCE:
; 244  : 	{
; 245  : 		first_child = raw->force_root.first_child;
; 246  : 
; 247  : 		break;
; 248  : 	}
; 249  : 
; 250  : 	#endif
; 251  : 
; 252  : 	////////////////////////////////////////
; 253  : 
; 254  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 255  : 
; 256  : 	case LIST_TYPE_GROUND_REGISTRY:
; 257  : 	{
; 258  : 		first_child = raw->ground_registry_root.first_child;
; 259  : 
; 260  : 		break;
; 261  : 	}
; 262  : 
; 263  : 	#endif
; 264  : 
; 265  : 	////////////////////////////////////////
; 266  : 
; 267  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 268  : 
; 269  : 	case LIST_TYPE_GUIDE:
; 270  : 	{
; 271  : 		first_child = raw->guide_root.first_child;

  00038	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0003b	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0003e	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 272  : 
; 273  : 		break;

  00041	e9 a6 00 00 00	 jmp	 $LN2@get_local_
$LN5@get_local_:

; 274  : 	}
; 275  : 
; 276  : 	#endif
; 277  : 
; 278  : 	////////////////////////////////////////
; 279  : 
; 280  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 281  : 
; 282  : 	case LIST_TYPE_GUIDE_STACK:
; 283  : 	{
; 284  : 		first_child = raw->guide_stack_root.first_child;
; 285  : 
; 286  : 		break;
; 287  : 	}
; 288  : 
; 289  : 	#endif
; 290  : 
; 291  : 	////////////////////////////////////////
; 292  : 
; 293  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 294  : 
; 295  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 296  : 	{
; 297  : 		first_child = raw->gunship_target_root.first_child;
; 298  : 
; 299  : 		break;
; 300  : 	}
; 301  : 
; 302  : 	#endif
; 303  : 
; 304  : 	////////////////////////////////////////
; 305  : 
; 306  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 307  : 
; 308  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 309  : 	{
; 310  : 		first_child = raw->independent_group_root.first_child;
; 311  : 
; 312  : 		break;
; 313  : 	}
; 314  : 
; 315  : 	#endif
; 316  : 
; 317  : 	////////////////////////////////////////
; 318  : 
; 319  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 320  : 
; 321  : 	case LIST_TYPE_HIERARCHY:
; 322  : 	{
; 323  : 		first_child = raw->hierarchy_root.first_child;
; 324  : 
; 325  : 		break;
; 326  : 	}
; 327  : 
; 328  : 	#endif
; 329  : 
; 330  : 	////////////////////////////////////////
; 331  : 
; 332  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 333  : 
; 334  : 	case LIST_TYPE_KEYSITE_FORCE:
; 335  : 	{
; 336  : 		first_child = raw->keysite_force_root.first_child;
; 337  : 
; 338  : 		break;
; 339  : 	}
; 340  : 
; 341  : 	#endif
; 342  : 
; 343  : 	////////////////////////////////////////
; 344  : 
; 345  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 346  : 
; 347  : 	case LIST_TYPE_KEYSITE_GROUP:
; 348  : 	{
; 349  : 		first_child = raw->keysite_group_root.first_child;
; 350  : 
; 351  : 		break;
; 352  : 	}
; 353  : 
; 354  : 	#endif
; 355  : 
; 356  : 	////////////////////////////////////////
; 357  : 
; 358  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 359  : 
; 360  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 361  : 	{
; 362  : 		first_child = raw->launched_weapon_root.first_child;
; 363  : 
; 364  : 		break;
; 365  : 	}
; 366  : 
; 367  : 	#endif
; 368  : 
; 369  : 	////////////////////////////////////////
; 370  : 
; 371  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 372  : 
; 373  : 	case LIST_TYPE_LANDING_SITE:
; 374  : 	{
; 375  : 		first_child = raw->landing_site_root.first_child;
; 376  : 
; 377  : 		break;
; 378  : 	}
; 379  : 
; 380  : 	#endif
; 381  : 
; 382  : 	////////////////////////////////////////
; 383  : 
; 384  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 385  : 
; 386  : 	case LIST_TYPE_MEMBER:
; 387  : 	{
; 388  : 		first_child = raw->member_root.first_child;
; 389  : 
; 390  : 		break;
; 391  : 	}
; 392  : 
; 393  : 	#endif
; 394  : 
; 395  : 	////////////////////////////////////////
; 396  : 
; 397  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 398  : 
; 399  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 400  : 	{
; 401  : 		first_child = raw->movement_dependent_root.first_child;
; 402  : 
; 403  : 		break;
; 404  : 	}
; 405  : 
; 406  : 	#endif
; 407  : 
; 408  : 	////////////////////////////////////////
; 409  : 
; 410  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 411  : 
; 412  : 	case LIST_TYPE_PADLOCK:
; 413  : 	{
; 414  : 		first_child = raw->padlock_root.first_child;
; 415  : 
; 416  : 		break;
; 417  : 	}
; 418  : 
; 419  : 	#endif
; 420  : 
; 421  : 	////////////////////////////////////////
; 422  : 
; 423  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 424  : 
; 425  : 	case LIST_TYPE_PILOT:
; 426  : 	{
; 427  : 		first_child = raw->pilot_root.first_child;
; 428  : 
; 429  : 		break;
; 430  : 	}
; 431  : 
; 432  : 	#endif
; 433  : 
; 434  : 	////////////////////////////////////////
; 435  : 
; 436  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 437  : 
; 438  : 	case LIST_TYPE_PILOT_LOCK:
; 439  : 	{
; 440  : 		first_child = raw->pilot_lock_root.first_child;
; 441  : 
; 442  : 		break;
; 443  : 	}
; 444  : 
; 445  : 	#endif
; 446  : 
; 447  : 	////////////////////////////////////////
; 448  : 
; 449  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 450  : 
; 451  : 	case LIST_TYPE_PLAYER_TASK:
; 452  : 	{
; 453  : 		first_child = raw->player_task_root.first_child;

  00046	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00049	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  0004c	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 454  : 
; 455  : 		break;

  0004f	e9 98 00 00 00	 jmp	 $LN2@get_local_
$LN6@get_local_:

; 456  : 	}
; 457  : 
; 458  : 	#endif
; 459  : 
; 460  : 	////////////////////////////////////////
; 461  : 
; 462  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 463  : 
; 464  : 	case LIST_TYPE_REGEN:
; 465  : 	{
; 466  : 		first_child = raw->regen_root.first_child;
; 467  : 
; 468  : 		break;
; 469  : 	}
; 470  : 
; 471  : 	#endif
; 472  : 
; 473  : 	////////////////////////////////////////
; 474  : 
; 475  : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 476  : 
; 477  : 	case LIST_TYPE_SEA_REGISTRY:
; 478  : 	{
; 479  : 		first_child = raw->sea_registry_root.first_child;
; 480  : 
; 481  : 		break;
; 482  : 	}
; 483  : 
; 484  : 	#endif
; 485  : 
; 486  : 	////////////////////////////////////////
; 487  : 
; 488  : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 489  : 
; 490  : 	case LIST_TYPE_SECTOR:
; 491  : 	{
; 492  : 		first_child = raw->sector_root.first_child;
; 493  : 
; 494  : 		break;
; 495  : 	}
; 496  : 
; 497  : 	#endif
; 498  : 
; 499  : 	////////////////////////////////////////
; 500  : 
; 501  : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 502  : 
; 503  : 	case LIST_TYPE_SECTOR_TASK:
; 504  : 	{
; 505  : 		first_child = raw->sector_task_root.first_child;
; 506  : 
; 507  : 		break;
; 508  : 	}
; 509  : 
; 510  : 	#endif
; 511  : 
; 512  : 	////////////////////////////////////////
; 513  : 
; 514  : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 515  : 
; 516  : 	case LIST_TYPE_SEGMENT:
; 517  : 	{
; 518  : 		first_child = raw->segment_root.first_child;
; 519  : 
; 520  : 		break;
; 521  : 	}
; 522  : 
; 523  : 	#endif
; 524  : 
; 525  : 	////////////////////////////////////////
; 526  : 
; 527  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 528  : 
; 529  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 530  : 	{
; 531  : 		first_child = raw->special_effect_root.first_child;
; 532  : 
; 533  : 		break;
; 534  : 	}
; 535  : 
; 536  : 	#endif
; 537  : 
; 538  : 	////////////////////////////////////////
; 539  : 
; 540  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 541  : 
; 542  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 543  : 	{
; 544  : 		first_child = raw->takeoff_queue_root.first_child;
; 545  : 
; 546  : 		break;
; 547  : 	}
; 548  : 
; 549  : 	#endif
; 550  : 
; 551  : 	////////////////////////////////////////
; 552  : 
; 553  : 	#ifdef LIST_TYPE_TARGET_ROOT
; 554  : 
; 555  : 	case LIST_TYPE_TARGET:
; 556  : 	{
; 557  : 		first_child = raw->target_root.first_child;
; 558  : 
; 559  : 		break;
; 560  : 	}
; 561  : 
; 562  : 	#endif
; 563  : 
; 564  : 	////////////////////////////////////////
; 565  : 
; 566  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 567  : 
; 568  : 	case LIST_TYPE_TASK_DEPENDENT:
; 569  : 	{
; 570  : 		first_child = raw->task_dependent_root.first_child;

  00054	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00057	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0005a	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 571  : 
; 572  : 		break;

  0005d	e9 8a 00 00 00	 jmp	 $LN2@get_local_
$LN7@get_local_:

; 573  : 	}
; 574  : 
; 575  : 	#endif
; 576  : 
; 577  : 	////////////////////////////////////////
; 578  : 
; 579  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_ROOT
; 580  : 
; 581  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 582  : 	{
; 583  : 		first_child = raw->unassigned_task_root.first_child;
; 584  : 
; 585  : 		break;
; 586  : 	}
; 587  : 
; 588  : 	#endif
; 589  : 
; 590  : 	////////////////////////////////////////
; 591  : 
; 592  : 	#ifdef LIST_TYPE_UPDATE_ROOT
; 593  : 
; 594  : 	case LIST_TYPE_UPDATE:
; 595  : 	{
; 596  : 		first_child = raw->update_root.first_child;
; 597  : 
; 598  : 		break;
; 599  : 	}
; 600  : 
; 601  : 	#endif
; 602  : 
; 603  : 	////////////////////////////////////////
; 604  : 
; 605  : 	#ifdef LIST_TYPE_VIEW_ROOT
; 606  : 
; 607  : 	case LIST_TYPE_VIEW:
; 608  : 	{
; 609  : 		first_child = raw->view_root.first_child;
; 610  : 
; 611  : 		break;
; 612  : 	}
; 613  : 
; 614  : 	#endif
; 615  : 
; 616  : 	////////////////////////////////////////
; 617  : 
; 618  : 	#ifdef LIST_TYPE_VIEW_WEAPON_ROOT
; 619  : 
; 620  : 	case LIST_TYPE_VIEW_WEAPON:
; 621  : 	{
; 622  : 		first_child = raw->view_weapon_root.first_child;
; 623  : 
; 624  : 		break;
; 625  : 	}
; 626  : 
; 627  : 	#endif
; 628  : 
; 629  : 	////////////////////////////////////////
; 630  : 
; 631  : 	#ifdef LIST_TYPE_WAYPOINT_ROOT
; 632  : 
; 633  : 	case LIST_TYPE_WAYPOINT:
; 634  : 	{
; 635  : 		first_child = raw->waypoint_root.first_child;

  00062	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00065	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00068	89 4d f8	 mov	 DWORD PTR _first_child$[ebp], ecx

; 636  : 
; 637  : 		break;

  0006b	eb 7f		 jmp	 SHORT $LN2@get_local_
$LN8@get_local_:

; 638  : 	}
; 639  : 
; 640  : 	#endif
; 641  : 
; 642  : 	////////////////////////////////////////
; 643  : 
; 644  : 	default:
; 645  : 	{
; 646  : 		debug_fatal_invalid_list_type (en, type);

  0006d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00071	74 0a		 je	 SHORT $LN11@get_local_
  00073	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00076	8b 08		 mov	 ecx, DWORD PTR [eax]
  00078	89 4d b4	 mov	 DWORD PTR tv90[ebp], ecx
  0007b	eb 24		 jmp	 SHORT $LN12@get_local_
$LN11@get_local_:
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  00083	81 c2 f8 01 00
	00		 add	 edx, 504		; 000001f8H
  00089	52		 push	 edx
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009a	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN12@get_local_:
  000a1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000a7	81 c1 f8 01 00
	00		 add	 ecx, 504		; 000001f8H
  000ad	51		 push	 ecx
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  000b3	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000b6	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000bd	50		 push	 eax
  000be	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000c1	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000c7	c1 f9 04	 sar	 ecx, 4
  000ca	51		 push	 ecx
  000cb	6b 55 b4 0c	 imul	 edx, DWORD PTR tv90[ebp], 12
  000cf	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000d5	50		 push	 eax
  000d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000dc	51		 push	 ecx
  000dd	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e2	83 c4 18	 add	 esp, 24			; 00000018H

; 647  : 
; 648  : 		first_child = NULL;

  000e5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _first_child$[ebp], 0
$LN2@get_local_:

; 649  : 
; 650  : 		break;
; 651  : 	}
; 652  : 
; 653  : 	////////////////////////////////////////
; 654  : }
; 655  : 
; 656  : //
; 657  : // check list integrity
; 658  : //
; 659  : 
; 660  : ASSERT (en != first_child);

  000ec	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ef	3b 45 f8	 cmp	 eax, DWORD PTR _first_child$[ebp]
  000f2	75 1a		 jne	 SHORT $LN9@get_local_
  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_local_first_child@@YGPAUENTITY@@PAU2@W4LIST_TYPES@@@Z@4JA
  000f9	05 06 02 00 00	 add	 eax, 518		; 00000206H
  000fe	50		 push	 eax
  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@DAFGCKHA@c?3?2users?2nhv90?2projects?2eech?2ap@
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@get_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 153  : 	return (first_child);

  0010e	8b 45 f8	 mov	 eax, DWORD PTR _first_child$[ebp]

; 154  : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	5b		 pop	 ebx
  00114	8b e5		 mov	 esp, ebp
  00116	5d		 pop	 ebp
  00117	c2 08 00	 ret	 8
  0011a	66 90		 npad	 2
$LN14@get_local_:
  0011c	00 00 00 00	 DD	 $LN4@get_local_
  00120	00 00 00 00	 DD	 $LN5@get_local_
  00124	00 00 00 00	 DD	 $LN6@get_local_
  00128	00 00 00 00	 DD	 $LN7@get_local_
  0012c	00 00 00 00	 DD	 $LN8@get_local_
$LN13@get_local_:
  00130	00		 DB	 0
  00131	04		 DB	 4
  00132	04		 DB	 4
  00133	04		 DB	 4
  00134	04		 DB	 4
  00135	04		 DB	 4
  00136	04		 DB	 4
  00137	04		 DB	 4
  00138	04		 DB	 4
  00139	04		 DB	 4
  0013a	04		 DB	 4
  0013b	04		 DB	 4
  0013c	04		 DB	 4
  0013d	04		 DB	 4
  0013e	01		 DB	 1
  0013f	04		 DB	 4
  00140	04		 DB	 4
  00141	04		 DB	 4
  00142	04		 DB	 4
  00143	04		 DB	 4
  00144	04		 DB	 4
  00145	04		 DB	 4
  00146	04		 DB	 4
  00147	02		 DB	 2
  00148	04		 DB	 4
  00149	04		 DB	 4
  0014a	04		 DB	 4
  0014b	04		 DB	 4
  0014c	03		 DB	 3
?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ENDP ; get_local_first_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_frst.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z
_TEXT	SEGMENT
tv95 = -72						; size = 4
tv70 = -72						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_first_child$ = 16					; size = 4
?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z PROC ; set_local_first_child, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 	task
; 126  : 		*raw;
; 127  : 
; 128  : 	raw = (task *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\set_frst.h

; 71   : ASSERT (en != first_child);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	3b 45 10	 cmp	 eax, DWORD PTR _first_child$[ebp]
  00018	75 18		 jne	 SHORT $LN4@set_local_
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  0001f	83 e8 35	 sub	 eax, 53			; 00000035H
  00022	50		 push	 eax
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CLPEHPEO@en?5?$CB?$DN?5first_child@
  0002d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_local_:

; 72   : 
; 73   : switch (type)

  00032	8b 45 0c	 mov	 eax, DWORD PTR _type$[ebp]
  00035	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00038	8b 4d b8	 mov	 ecx, DWORD PTR tv70[ebp]
  0003b	83 e9 10	 sub	 ecx, 16			; 00000010H
  0003e	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00041	83 7d b8 1c	 cmp	 DWORD PTR tv70[ebp], 28	; 0000001cH
  00045	77 46		 ja	 SHORT $LN9@set_local_
  00047	8b 55 b8	 mov	 edx, DWORD PTR tv70[ebp]
  0004a	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN13@set_local_[edx]
  00051	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN14@set_local_[eax*4]
$LN5@set_local_:

; 74   : {
; 75   : 	////////////////////////////////////////
; 76   : 
; 77   : 	#ifdef LIST_TYPE_AIRCREW_ROOT
; 78   : 
; 79   : 	case LIST_TYPE_AIRCREW:
; 80   : 	{
; 81   : 		raw->aircrew_root.first_child = first_child;
; 82   : 
; 83   : 		break;
; 84   : 	}
; 85   : 
; 86   : 	#endif
; 87   : 
; 88   : 	////////////////////////////////////////
; 89   : 
; 90   : 	#ifdef LIST_TYPE_AIR_REGISTRY_ROOT
; 91   : 
; 92   : 	case LIST_TYPE_AIR_REGISTRY:
; 93   : 	{
; 94   : 		raw->air_registry_root.first_child = first_child;
; 95   : 
; 96   : 		break;
; 97   : 	}
; 98   : 
; 99   : 	#endif
; 100  : 
; 101  : 	////////////////////////////////////////
; 102  : 
; 103  : 	#ifdef LIST_TYPE_ASSIGNED_TASK_ROOT
; 104  : 
; 105  : 	case LIST_TYPE_ASSIGNED_TASK:
; 106  : 	{
; 107  : 		raw->assigned_task_root.first_child = first_child;
; 108  : 
; 109  : 		break;
; 110  : 	}
; 111  : 
; 112  : 	#endif
; 113  : 
; 114  : 	////////////////////////////////////////
; 115  : 
; 116  : 	#ifdef LIST_TYPE_BUILDING_GROUP_ROOT
; 117  : 
; 118  : 	case LIST_TYPE_BUILDING_GROUP:
; 119  : 	{
; 120  : 		raw->building_group_root.first_child = first_child;
; 121  : 
; 122  : 		break;
; 123  : 	}
; 124  : 
; 125  : 	#endif
; 126  : 
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_ROOT
; 130  : 
; 131  : 	case LIST_TYPE_CAMPAIGN_OBJECTIVE:
; 132  : 	{
; 133  : 		raw->campaign_objective_root.first_child = first_child;
; 134  : 
; 135  : 		break;
; 136  : 	}
; 137  : 
; 138  : 	#endif
; 139  : 
; 140  : 	////////////////////////////////////////
; 141  : 
; 142  : 	#ifdef LIST_TYPE_CARGO_ROOT
; 143  : 
; 144  : 	case LIST_TYPE_CARGO:
; 145  : 	{
; 146  : 		raw->cargo_root.first_child = first_child;
; 147  : 
; 148  : 		break;
; 149  : 	}
; 150  : 
; 151  : 	#endif
; 152  : 
; 153  : 	////////////////////////////////////////
; 154  : 
; 155  : 	#ifdef LIST_TYPE_CITY_BUILDING_ROOT
; 156  : 
; 157  : 	case LIST_TYPE_CITY_BUILDING:
; 158  : 	{
; 159  : 		raw->city_building_root.first_child = first_child;
; 160  : 
; 161  : 		break;
; 162  : 	}
; 163  : 
; 164  : 	#endif
; 165  : 
; 166  : 	////////////////////////////////////////
; 167  : 
; 168  : 	#ifdef LIST_TYPE_COMPLETED_TASK_ROOT
; 169  : 
; 170  : 	case LIST_TYPE_COMPLETED_TASK:
; 171  : 	{
; 172  : 		raw->completed_task_root.first_child = first_child;
; 173  : 
; 174  : 		break;
; 175  : 	}
; 176  : 
; 177  : 	#endif
; 178  : 
; 179  : 	////////////////////////////////////////
; 180  : 
; 181  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_ROOT
; 182  : 
; 183  : 	case LIST_TYPE_CURRENT_WAYPOINT:
; 184  : 	{
; 185  : 		raw->current_waypoint_root.first_child = first_child;
; 186  : 
; 187  : 		break;
; 188  : 	}
; 189  : 
; 190  : 	#endif
; 191  : 
; 192  : 	////////////////////////////////////////
; 193  : 
; 194  : 	// Jabbewock 031107 Designated targets
; 195  : 		
; 196  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_ROOT
; 197  : 
; 198  : 	case LIST_TYPE_DESIGNATED_TARGET:
; 199  : 	{
; 200  : 		raw->designated_target_root.first_child = first_child;
; 201  : 
; 202  : 		break;
; 203  : 	}
; 204  : 
; 205  : 	#endif
; 206  : 	
; 207  : 	// Jabbewock 031107 ends
; 208  : 
; 209  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 210  : 
; 211  : 	case LIST_TYPE_DIVISION:
; 212  : 	{
; 213  : 		raw->division_root.first_child = first_child;
; 214  : 
; 215  : 		break;
; 216  : 	}
; 217  : 
; 218  : 	#endif
; 219  : 
; 220  : 	////////////////////////////////////////
; 221  : 
; 222  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 223  : 
; 224  : 	case LIST_TYPE_DIVISION_HEADQUARTERS:
; 225  : 	{
; 226  : 		raw->division_headquarters_root.first_child = first_child;
; 227  : 
; 228  : 		break;
; 229  : 	}
; 230  : 
; 231  : 	#endif
; 232  : 
; 233  : 	////////////////////////////////////////
; 234  : 
; 235  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 236  : 
; 237  : 	case LIST_TYPE_FOLLOWER:
; 238  : 	{
; 239  : 		raw->follower_root.first_child = first_child;
; 240  : 
; 241  : 		break;
; 242  : 	}
; 243  : 
; 244  : 	#endif
; 245  : 
; 246  : 	////////////////////////////////////////
; 247  : 
; 248  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 249  : 
; 250  : 	case LIST_TYPE_FORCE:
; 251  : 	{
; 252  : 		raw->force_root.first_child = first_child;
; 253  : 
; 254  : 		break;
; 255  : 	}
; 256  : 
; 257  : 	#endif
; 258  : 
; 259  : 	////////////////////////////////////////
; 260  : 
; 261  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 262  : 
; 263  : 	case LIST_TYPE_GROUND_REGISTRY:
; 264  : 	{
; 265  : 		raw->ground_registry_root.first_child = first_child;
; 266  : 
; 267  : 		break;
; 268  : 	}
; 269  : 
; 270  : 	#endif
; 271  : 
; 272  : 	////////////////////////////////////////
; 273  : 
; 274  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 275  : 
; 276  : 	case LIST_TYPE_GUIDE:
; 277  : 	{
; 278  : 		raw->guide_root.first_child = first_child;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005b	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  0005e	89 48 40	 mov	 DWORD PTR [eax+64], ecx

; 279  : 
; 280  : 		break;

  00061	e9 9f 00 00 00	 jmp	 $LN1@set_local_
$LN6@set_local_:

; 281  : 	}
; 282  : 
; 283  : 	#endif
; 284  : 
; 285  : 	////////////////////////////////////////
; 286  : 
; 287  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 288  : 
; 289  : 	case LIST_TYPE_GUIDE_STACK:
; 290  : 	{
; 291  : 		raw->guide_stack_root.first_child = first_child;
; 292  : 
; 293  : 		break;
; 294  : 	}
; 295  : 
; 296  : 	#endif
; 297  : 
; 298  : 	////////////////////////////////////////
; 299  : 
; 300  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 301  : 
; 302  : 	case LIST_TYPE_GUNSHIP_TARGET:
; 303  : 	{
; 304  : 		raw->gunship_target_root.first_child = first_child;
; 305  : 
; 306  : 		break;
; 307  : 	}
; 308  : 
; 309  : 	#endif
; 310  : 	
; 311  : 	////////////////////////////////////////
; 312  : 
; 313  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 314  : 
; 315  : 	case LIST_TYPE_INDEPENDENT_GROUP:
; 316  : 	{
; 317  : 		raw->independent_group_root.first_child = first_child;
; 318  : 
; 319  : 		break;
; 320  : 	}
; 321  : 
; 322  : 	#endif
; 323  : 
; 324  : 	////////////////////////////////////////
; 325  : 
; 326  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 327  : 
; 328  : 	case LIST_TYPE_HIERARCHY:
; 329  : 	{
; 330  : 		raw->hierarchy_root.first_child = first_child;
; 331  : 
; 332  : 		break;
; 333  : 	}
; 334  : 
; 335  : 	#endif
; 336  : 
; 337  : 	////////////////////////////////////////
; 338  : 
; 339  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 340  : 
; 341  : 	case LIST_TYPE_KEYSITE_FORCE:
; 342  : 	{
; 343  : 		raw->keysite_force_root.first_child = first_child;
; 344  : 
; 345  : 		break;
; 346  : 	}
; 347  : 
; 348  : 	#endif
; 349  : 
; 350  : 	////////////////////////////////////////
; 351  : 
; 352  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 353  : 
; 354  : 	case LIST_TYPE_KEYSITE_GROUP:
; 355  : 	{
; 356  : 		raw->keysite_group_root.first_child = first_child;
; 357  : 
; 358  : 		break;
; 359  : 	}
; 360  : 
; 361  : 	#endif
; 362  : 
; 363  : 	////////////////////////////////////////
; 364  : 
; 365  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 366  : 
; 367  : 	case LIST_TYPE_LAUNCHED_WEAPON:
; 368  : 	{
; 369  : 		raw->launched_weapon_root.first_child = first_child;
; 370  : 
; 371  : 		break;
; 372  : 	}
; 373  : 
; 374  : 	#endif
; 375  : 
; 376  : 	////////////////////////////////////////
; 377  : 
; 378  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 379  : 
; 380  : 	case LIST_TYPE_LANDING_SITE:
; 381  : 	{
; 382  : 		raw->landing_site_root.first_child = first_child;
; 383  : 
; 384  : 		break;
; 385  : 	}
; 386  : 
; 387  : 	#endif
; 388  : 
; 389  : 	////////////////////////////////////////
; 390  : 
; 391  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 392  : 
; 393  : 	case LIST_TYPE_MEMBER:
; 394  : 	{
; 395  : 		raw->member_root.first_child = first_child;
; 396  : 
; 397  : 		break;
; 398  : 	}
; 399  : 
; 400  : 	#endif
; 401  : 
; 402  : 	////////////////////////////////////////
; 403  : 
; 404  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 405  : 
; 406  : 	case LIST_TYPE_MOVEMENT_DEPENDENT:
; 407  : 	{
; 408  : 		raw->movement_dependent_root.first_child = first_child;
; 409  : 
; 410  : 		break;
; 411  : 	}
; 412  : 
; 413  : 	#endif
; 414  : 
; 415  : 	////////////////////////////////////////
; 416  : 
; 417  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 418  : 
; 419  : 	case LIST_TYPE_PADLOCK:
; 420  : 	{
; 421  : 		raw->padlock_root.first_child = first_child;
; 422  : 
; 423  : 		break;
; 424  : 	}
; 425  : 
; 426  : 	#endif
; 427  : 
; 428  : 	////////////////////////////////////////
; 429  : 
; 430  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 431  : 
; 432  : 	case LIST_TYPE_PILOT:
; 433  : 	{
; 434  : 		raw->pilot_root.first_child = first_child;
; 435  : 
; 436  : 		break;
; 437  : 	}
; 438  : 
; 439  : 	#endif
; 440  : 
; 441  : 	////////////////////////////////////////
; 442  : 
; 443  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 444  : 
; 445  : 	case LIST_TYPE_PILOT_LOCK:
; 446  : 	{
; 447  : 		raw->pilot_lock_root.first_child = first_child;
; 448  : 
; 449  : 		break;
; 450  : 	}
; 451  : 
; 452  : 	#endif
; 453  : 
; 454  : 	////////////////////////////////////////
; 455  : 
; 456  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 457  : 
; 458  : 	case LIST_TYPE_PLAYER_TASK:
; 459  : 	{
; 460  : 		raw->player_task_root.first_child = first_child;

  00066	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00069	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  0006c	89 48 44	 mov	 DWORD PTR [eax+68], ecx

; 461  : 
; 462  : 		break;

  0006f	e9 91 00 00 00	 jmp	 $LN1@set_local_
$LN7@set_local_:

; 463  : 	}
; 464  : 
; 465  : 	#endif
; 466  : 
; 467  : 	////////////////////////////////////////
; 468  : 
; 469  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 470  : 
; 471  : 	case LIST_TYPE_REGEN:
; 472  : 	{
; 473  : 		raw->regen_root.first_child = first_child;
; 474  : 
; 475  : 		break;
; 476  : 	}
; 477  : 
; 478  : 	#endif
; 479  : 
; 480  : 	////////////////////////////////////////
; 481  : 
; 482  : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 483  : 
; 484  : 	case LIST_TYPE_SEA_REGISTRY:
; 485  : 	{
; 486  : 		raw->sea_registry_root.first_child = first_child;
; 487  : 
; 488  : 		break;
; 489  : 	}
; 490  : 
; 491  : 	#endif
; 492  : 
; 493  : 	////////////////////////////////////////
; 494  : 
; 495  : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 496  : 
; 497  : 	case LIST_TYPE_SECTOR:
; 498  : 	{
; 499  : 		raw->sector_root.first_child = first_child;
; 500  : 
; 501  : 		break;
; 502  : 	}
; 503  : 
; 504  : 	#endif
; 505  : 
; 506  : 	////////////////////////////////////////
; 507  : 
; 508  : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 509  : 
; 510  : 	case LIST_TYPE_SECTOR_TASK:
; 511  : 	{
; 512  : 		raw->sector_task_root.first_child = first_child;
; 513  : 
; 514  : 		break;
; 515  : 	}
; 516  : 
; 517  : 	#endif
; 518  : 
; 519  : 	////////////////////////////////////////
; 520  : 
; 521  : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 522  : 
; 523  : 	case LIST_TYPE_SEGMENT:
; 524  : 	{
; 525  : 		raw->segment_root.first_child = first_child;
; 526  : 
; 527  : 		break;
; 528  : 	}
; 529  : 
; 530  : 	#endif
; 531  : 
; 532  : 	////////////////////////////////////////
; 533  : 
; 534  : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 535  : 
; 536  : 	case LIST_TYPE_SPECIAL_EFFECT:
; 537  : 	{
; 538  : 		raw->special_effect_root.first_child = first_child;
; 539  : 
; 540  : 		break;
; 541  : 	}
; 542  : 
; 543  : 	#endif
; 544  : 
; 545  : 	////////////////////////////////////////
; 546  : 
; 547  : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 548  : 
; 549  : 	case LIST_TYPE_TAKEOFF_QUEUE:
; 550  : 	{
; 551  : 		raw->takeoff_queue_root.first_child = first_child;
; 552  : 
; 553  : 		break;
; 554  : 	}
; 555  : 
; 556  : 	#endif
; 557  : 
; 558  : 	////////////////////////////////////////
; 559  : 
; 560  : 	#ifdef LIST_TYPE_TARGET_ROOT
; 561  : 
; 562  : 	case LIST_TYPE_TARGET:
; 563  : 	{
; 564  : 		raw->target_root.first_child = first_child;
; 565  : 
; 566  : 		break;
; 567  : 	}
; 568  : 
; 569  : 	#endif
; 570  : 
; 571  : 	////////////////////////////////////////
; 572  : 
; 573  : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 574  : 
; 575  : 	case LIST_TYPE_TASK_DEPENDENT:
; 576  : 	{
; 577  : 		raw->task_dependent_root.first_child = first_child;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00077	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  0007a	89 48 48	 mov	 DWORD PTR [eax+72], ecx

; 578  : 
; 579  : 		break;

  0007d	e9 83 00 00 00	 jmp	 $LN1@set_local_
$LN8@set_local_:

; 580  : 	}
; 581  : 
; 582  : 	#endif
; 583  : 
; 584  : 	////////////////////////////////////////
; 585  : 
; 586  : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_ROOT
; 587  : 
; 588  : 	case LIST_TYPE_UNASSIGNED_TASK:
; 589  : 	{
; 590  : 		raw->unassigned_task_root.first_child = first_child;
; 591  : 
; 592  : 		break;
; 593  : 	}
; 594  : 
; 595  : 	#endif
; 596  : 
; 597  : 	////////////////////////////////////////
; 598  : 
; 599  : 	#ifdef LIST_TYPE_UPDATE_ROOT
; 600  : 
; 601  : 	case LIST_TYPE_UPDATE:
; 602  : 	{
; 603  : 		raw->update_root.first_child = first_child;
; 604  : 
; 605  : 		break;
; 606  : 	}
; 607  : 
; 608  : 	#endif
; 609  : 
; 610  : 	////////////////////////////////////////
; 611  : 
; 612  : 	#ifdef LIST_TYPE_VIEW_ROOT
; 613  : 
; 614  : 	case LIST_TYPE_VIEW:
; 615  : 	{
; 616  : 		raw->view_root.first_child = first_child;
; 617  : 
; 618  : 		break;
; 619  : 	}
; 620  : 
; 621  : 	#endif
; 622  : 
; 623  : 	////////////////////////////////////////
; 624  : 
; 625  : 	#ifdef LIST_TYPE_VIEW_WEAPON_ROOT
; 626  : 
; 627  : 	case LIST_TYPE_VIEW_WEAPON:
; 628  : 	{
; 629  : 		raw->view_weapon_root.first_child = first_child;
; 630  : 
; 631  : 		break;
; 632  : 	}
; 633  : 
; 634  : 	#endif
; 635  : 
; 636  : 	////////////////////////////////////////
; 637  : 
; 638  : 	#ifdef LIST_TYPE_WAYPOINT_ROOT
; 639  : 
; 640  : 	case LIST_TYPE_WAYPOINT:
; 641  : 	{
; 642  : 		raw->waypoint_root.first_child = first_child;

  00082	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00085	8b 4d 10	 mov	 ecx, DWORD PTR _first_child$[ebp]
  00088	89 48 4c	 mov	 DWORD PTR [eax+76], ecx

; 643  : 
; 644  : 		break;

  0008b	eb 78		 jmp	 SHORT $LN1@set_local_
$LN9@set_local_:

; 645  : 	}
; 646  : 
; 647  : 	#endif
; 648  : 
; 649  : 	////////////////////////////////////////
; 650  : 
; 651  : 	default:
; 652  : 	{
; 653  : 		debug_fatal_invalid_list_type (en, type);

  0008d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00091	74 0a		 je	 SHORT $LN11@set_local_
  00093	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	89 4d b8	 mov	 DWORD PTR tv95[ebp], ecx
  0009b	eb 24		 jmp	 SHORT $LN12@set_local_
$LN11@set_local_:
  0009d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000a3	81 c2 11 02 00
	00		 add	 edx, 529		; 00000211H
  000a9	52		 push	 edx
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ba	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN12@set_local_:
  000c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?__LINE__Var@?0??set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z@4JA
  000c7	81 c1 11 02 00
	00		 add	 ecx, 529		; 00000211H
  000cd	51		 push	 ecx
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@COHJJNDJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d3	8b 55 0c	 mov	 edx, DWORD PTR _type$[ebp]
  000d6	8b 04 d5 00 00
	00 00		 mov	 eax, DWORD PTR ?list_type_database@@3PAULIST_TYPE_DATA@@A[edx*8]
  000dd	50		 push	 eax
  000de	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000e1	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000e7	c1 f9 04	 sar	 ecx, 4
  000ea	51		 push	 ecx
  000eb	6b 55 b8 0c	 imul	 edx, DWORD PTR tv95[ebp], 12
  000ef	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  000f5	50		 push	 eax
  000f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?debug_fatal_invalid_list_type_message@@3PBDB ; debug_fatal_invalid_list_type_message
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00102	83 c4 18	 add	 esp, 24			; 00000018H
$LN1@set_local_:
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 131  : }

  00105	5f		 pop	 edi
  00106	5e		 pop	 esi
  00107	5b		 pop	 ebx
  00108	8b e5		 mov	 esp, ebp
  0010a	5d		 pop	 ebp
  0010b	c2 0c 00	 ret	 12			; 0000000cH
  0010e	66 90		 npad	 2
$LN14@set_local_:
  00110	00 00 00 00	 DD	 $LN5@set_local_
  00114	00 00 00 00	 DD	 $LN6@set_local_
  00118	00 00 00 00	 DD	 $LN7@set_local_
  0011c	00 00 00 00	 DD	 $LN8@set_local_
  00120	00 00 00 00	 DD	 $LN9@set_local_
$LN13@set_local_:
  00124	00		 DB	 0
  00125	04		 DB	 4
  00126	04		 DB	 4
  00127	04		 DB	 4
  00128	04		 DB	 4
  00129	04		 DB	 4
  0012a	04		 DB	 4
  0012b	04		 DB	 4
  0012c	04		 DB	 4
  0012d	04		 DB	 4
  0012e	04		 DB	 4
  0012f	04		 DB	 4
  00130	04		 DB	 4
  00131	04		 DB	 4
  00132	01		 DB	 1
  00133	04		 DB	 4
  00134	04		 DB	 4
  00135	04		 DB	 4
  00136	04		 DB	 4
  00137	04		 DB	 4
  00138	04		 DB	 4
  00139	04		 DB	 4
  0013a	04		 DB	 4
  0013b	02		 DB	 2
  0013c	04		 DB	 4
  0013d	04		 DB	 4
  0013e	04		 DB	 4
  0013f	04		 DB	 4
  00140	03		 DB	 3
?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ENDP ; set_local_first_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\fn_list.h
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c
;	COMDAT ?overload_task_list_functions@@YGXXZ
_TEXT	SEGMENT
?overload_task_list_functions@@YGXXZ PROC		; overload_task_list_functions, COMDAT

; 286  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\system\en_funcs\en_list\fn_list.h

; 128  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= set_local_parent;

  00009	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0000e	6b c8 22	 imul	 ecx, eax, 34
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 03	 imul	 eax, edx, 3
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 129  : 
; 130  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= get_local_parent;

  00024	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00029	6b c8 22	 imul	 ecx, eax, 34
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	6b c2 03	 imul	 eax, edx, 3
  00034	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 131  : 
; 132  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= set_local_child_succ;

  0003f	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00044	6b c8 22	 imul	 ecx, eax, 34
  00047	ba 04 00 00 00	 mov	 edx, 4
  0004c	6b c2 03	 imul	 eax, edx, 3
  0004f	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 133  : 
; 134  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= get_local_child_succ;

  0005a	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0005f	6b c8 22	 imul	 ecx, eax, 34
  00062	ba 04 00 00 00	 mov	 edx, 4
  00067	6b c2 03	 imul	 eax, edx, 3
  0006a	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 135  : 
; 136  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= set_local_child_pred;

  00075	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0007a	6b c8 22	 imul	 ecx, eax, 34
  0007d	ba 04 00 00 00	 mov	 edx, 4
  00082	6b c2 03	 imul	 eax, edx, 3
  00085	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 137  : 
; 138  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_ASSIGNED_TASK]	= get_local_child_pred;

  00090	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00095	6b c8 22	 imul	 ecx, eax, 34
  00098	ba 04 00 00 00	 mov	 edx, 4
  0009d	6b c2 03	 imul	 eax, edx, 3
  000a0	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 139  : 
; 140  : 	#endif
; 141  : 
; 142  : 	////////////////////////////////////////
; 143  : 	//
; 144  : 	// LIST_TYPE_BUILDING_GROUP
; 145  : 	//
; 146  : 	////////////////////////////////////////
; 147  : 
; 148  : 	#ifdef LIST_TYPE_BUILDING_GROUP_ROOT
; 149  : 
; 150  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= set_local_first_child;
; 151  : 
; 152  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= get_local_first_child;
; 153  : 
; 154  : 	#endif
; 155  : 
; 156  : 	#ifdef LIST_TYPE_GROUP_LINK
; 157  : 
; 158  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= set_local_parent;
; 159  : 
; 160  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= get_local_parent;
; 161  : 
; 162  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= set_local_child_succ;
; 163  : 
; 164  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= get_local_child_succ;
; 165  : 
; 166  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= set_local_child_pred;
; 167  : 
; 168  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_BUILDING_GROUP]	= get_local_child_pred;
; 169  : 
; 170  : 	#endif
; 171  : 
; 172  : 	////////////////////////////////////////
; 173  : 	//
; 174  : 	// LIST_TYPE_CAMPAIGN_OBJECTIVE
; 175  : 	//
; 176  : 	////////////////////////////////////////
; 177  : 
; 178  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_ROOT
; 179  : 
; 180  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= set_local_first_child;
; 181  : 
; 182  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= get_local_first_child;
; 183  : 
; 184  : 	#endif
; 185  : 
; 186  : 	#ifdef LIST_TYPE_CAMPAIGN_OBJECTIVE_LINK
; 187  : 
; 188  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= set_local_parent;
; 189  : 
; 190  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= get_local_parent;
; 191  : 
; 192  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= set_local_child_succ;
; 193  : 
; 194  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= get_local_child_succ;
; 195  : 
; 196  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= set_local_child_pred;
; 197  : 
; 198  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_CAMPAIGN_OBJECTIVE]	= get_local_child_pred;
; 199  : 
; 200  : 	#endif
; 201  : 
; 202  : 	////////////////////////////////////////
; 203  : 	//
; 204  : 	// LIST_TYPE_CARGO
; 205  : 	//
; 206  : 	////////////////////////////////////////
; 207  : 
; 208  : 	#ifdef LIST_TYPE_CARGO_ROOT
; 209  : 
; 210  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_CARGO]	= set_local_first_child;
; 211  : 
; 212  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_CARGO]	= get_local_first_child;
; 213  : 
; 214  : 	#endif
; 215  : 
; 216  : 	#ifdef LIST_TYPE_CARGO_LINK
; 217  : 
; 218  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_CARGO]	= set_local_parent;
; 219  : 
; 220  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_CARGO]	= get_local_parent;
; 221  : 
; 222  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_CARGO]	= set_local_child_succ;
; 223  : 
; 224  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_CARGO]	= get_local_child_succ;
; 225  : 
; 226  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_CARGO]	= set_local_child_pred;
; 227  : 
; 228  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_CARGO]	= get_local_child_pred;
; 229  : 
; 230  : 	#endif
; 231  : 
; 232  : 	////////////////////////////////////////
; 233  : 	//
; 234  : 	// LIST_TYPE_CITY_BUILDING
; 235  : 	//
; 236  : 	////////////////////////////////////////
; 237  : 
; 238  : 	#ifdef LIST_TYPE_CITY_BUILDING_ROOT
; 239  : 
; 240  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= set_local_first_child;
; 241  : 
; 242  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= get_local_first_child;
; 243  : 
; 244  : 	#endif
; 245  : 
; 246  : 	#ifdef LIST_TYPE_CITY_BUILDING_LINK
; 247  : 
; 248  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_CITY_BUILDING]	= set_local_parent;
; 249  : 
; 250  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_CITY_BUILDING]	= get_local_parent;
; 251  : 
; 252  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= set_local_child_succ;
; 253  : 
; 254  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= get_local_child_succ;
; 255  : 
; 256  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= set_local_child_pred;
; 257  : 
; 258  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_CITY_BUILDING]	= get_local_child_pred;
; 259  : 
; 260  : 	#endif
; 261  : 
; 262  : 	////////////////////////////////////////
; 263  : 	//
; 264  : 	// LIST_TYPE_COMPLETED_TASK
; 265  : 	//
; 266  : 	////////////////////////////////////////
; 267  : 
; 268  : 	#ifdef LIST_TYPE_COMPLETED_TASK_ROOT
; 269  : 
; 270  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= set_local_first_child;
; 271  : 
; 272  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= get_local_first_child;
; 273  : 
; 274  : 	#endif
; 275  : 
; 276  : 	#ifdef LIST_TYPE_COMPLETED_TASK_LINK
; 277  : 
; 278  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= set_local_parent;

  000ab	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  000b0	6b c8 22	 imul	 ecx, eax, 34
  000b3	ba 04 00 00 00	 mov	 edx, 4
  000b8	c1 e2 03	 shl	 edx, 3
  000bb	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+edx], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 279  : 
; 280  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= get_local_parent;

  000c6	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  000cb	6b c8 22	 imul	 ecx, eax, 34
  000ce	ba 04 00 00 00	 mov	 edx, 4
  000d3	c1 e2 03	 shl	 edx, 3
  000d6	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+edx], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 281  : 
; 282  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= set_local_child_succ;

  000e1	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  000e6	6b c8 22	 imul	 ecx, eax, 34
  000e9	ba 04 00 00 00	 mov	 edx, 4
  000ee	c1 e2 03	 shl	 edx, 3
  000f1	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+edx], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 283  : 
; 284  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= get_local_child_succ;

  000fc	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00101	6b c8 22	 imul	 ecx, eax, 34
  00104	ba 04 00 00 00	 mov	 edx, 4
  00109	c1 e2 03	 shl	 edx, 3
  0010c	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+edx], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 285  : 
; 286  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= set_local_child_pred;

  00117	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0011c	6b c8 22	 imul	 ecx, eax, 34
  0011f	ba 04 00 00 00	 mov	 edx, 4
  00124	c1 e2 03	 shl	 edx, 3
  00127	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+edx], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 287  : 
; 288  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_COMPLETED_TASK]	= get_local_child_pred;

  00132	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00137	6b c8 22	 imul	 ecx, eax, 34
  0013a	ba 04 00 00 00	 mov	 edx, 4
  0013f	c1 e2 03	 shl	 edx, 3
  00142	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+edx], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 289  : 
; 290  : 	#endif
; 291  : 
; 292  : 	////////////////////////////////////////
; 293  : 	//
; 294  : 	// LIST_TYPE_CURRENT_WAYPOINT
; 295  : 	//
; 296  : 	////////////////////////////////////////
; 297  : 
; 298  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_ROOT
; 299  : 
; 300  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= set_local_first_child;
; 301  : 
; 302  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= get_local_first_child;
; 303  : 
; 304  : 	#endif
; 305  : 
; 306  : 	#ifdef LIST_TYPE_CURRENT_WAYPOINT_LINK
; 307  : 
; 308  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= set_local_parent;
; 309  : 
; 310  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= get_local_parent;
; 311  : 
; 312  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= set_local_child_succ;
; 313  : 
; 314  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= get_local_child_succ;
; 315  : 
; 316  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= set_local_child_pred;
; 317  : 
; 318  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_CURRENT_WAYPOINT]	= get_local_child_pred;
; 319  : 
; 320  : 	#endif
; 321  : 	////////////////////////////////////////
; 322  : 	//
; 323  : 	// LIST_TYPE_DESIGNATED_TARGET Jabberwock 031107
; 324  : 	//
; 325  : 	////////////////////////////////////////
; 326  : 
; 327  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_ROOT
; 328  : 
; 329  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_first_child;
; 330  : 
; 331  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_first_child;
; 332  : 
; 333  : 	#endif
; 334  : 
; 335  : 	#ifdef LIST_TYPE_DESIGNATED_TARGET_LINK
; 336  : 
; 337  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_parent;
; 338  : 
; 339  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_parent;
; 340  : 
; 341  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_child_succ;
; 342  : 
; 343  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_child_succ;
; 344  : 
; 345  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= set_local_child_pred;
; 346  : 
; 347  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DESIGNATED_TARGET]	= get_local_child_pred;
; 348  : 
; 349  : 	#endif
; 350  : 	// Jabberwock 031007 ends
; 351  : 	
; 352  : 	////////////////////////////////////////
; 353  : 	//
; 354  : 	// LIST_TYPE_DIVISION
; 355  : 	//
; 356  : 	////////////////////////////////////////
; 357  : 
; 358  : 	#ifdef LIST_TYPE_DIVISION_ROOT
; 359  : 
; 360  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_first_child;
; 361  : 
; 362  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_first_child;
; 363  : 
; 364  : 	#endif
; 365  : 
; 366  : 	#ifdef LIST_TYPE_DIVISION_LINK
; 367  : 
; 368  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION]	= set_local_parent;
; 369  : 
; 370  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION]	= get_local_parent;
; 371  : 
; 372  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_child_succ;
; 373  : 
; 374  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_child_succ;
; 375  : 
; 376  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION]	= set_local_child_pred;
; 377  : 
; 378  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION]	= get_local_child_pred;
; 379  : 
; 380  : 	#endif
; 381  : 
; 382  : 	////////////////////////////////////////
; 383  : 	//
; 384  : 	// LIST_TYPE_DIVISION_HEADQUARTERS
; 385  : 	//
; 386  : 	////////////////////////////////////////
; 387  : 
; 388  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_ROOT
; 389  : 
; 390  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_first_child;
; 391  : 
; 392  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_first_child;
; 393  : 
; 394  : 	#endif
; 395  : 
; 396  : 	#ifdef LIST_TYPE_DIVISION_HEADQUARTERS_LINK
; 397  : 
; 398  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_parent;
; 399  : 
; 400  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_parent;
; 401  : 
; 402  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_child_succ;
; 403  : 
; 404  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_child_succ;
; 405  : 
; 406  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= set_local_child_pred;
; 407  : 
; 408  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_DIVISION_HEADQUARTERS]	= get_local_child_pred;
; 409  : 
; 410  : 	#endif
; 411  : 
; 412  : 	////////////////////////////////////////
; 413  : 	//
; 414  : 	// LIST_TYPE_FOLLOWER
; 415  : 	//
; 416  : 	////////////////////////////////////////
; 417  : 
; 418  : 	#ifdef LIST_TYPE_FOLLOWER_ROOT
; 419  : 
; 420  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_first_child;
; 421  : 
; 422  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_first_child;
; 423  : 
; 424  : 	#endif
; 425  : 
; 426  : 	#ifdef LIST_TYPE_FOLLOWER_LINK
; 427  : 
; 428  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_parent;
; 429  : 
; 430  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_parent;
; 431  : 
; 432  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_child_succ;
; 433  : 
; 434  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_child_succ;
; 435  : 
; 436  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_FOLLOWER]	= set_local_child_pred;
; 437  : 
; 438  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_FOLLOWER]	= get_local_child_pred;
; 439  : 
; 440  : 	#endif
; 441  : 
; 442  : 	////////////////////////////////////////
; 443  : 	//
; 444  : 	// LIST_TYPE_FORCE
; 445  : 	//
; 446  : 	////////////////////////////////////////
; 447  : 
; 448  : 	#ifdef LIST_TYPE_FORCE_ROOT
; 449  : 
; 450  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_FORCE]	= set_local_first_child;
; 451  : 
; 452  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_FORCE]	= get_local_first_child;
; 453  : 
; 454  : 	#endif
; 455  : 
; 456  : 	#ifdef LIST_TYPE_FORCE_LINK
; 457  : 
; 458  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_FORCE]	= set_local_parent;
; 459  : 
; 460  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_FORCE]	= get_local_parent;
; 461  : 
; 462  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_FORCE]	= set_local_child_succ;
; 463  : 
; 464  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_FORCE]	= get_local_child_succ;
; 465  : 
; 466  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_FORCE]	= set_local_child_pred;
; 467  : 
; 468  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_FORCE]	= get_local_child_pred;
; 469  : 
; 470  : 	#endif
; 471  : 
; 472  : 	////////////////////////////////////////
; 473  : 	//
; 474  : 	// LIST_TYPE_GROUND_REGISTRY
; 475  : 	//
; 476  : 	////////////////////////////////////////
; 477  : 
; 478  : 	#ifdef LIST_TYPE_GROUND_REGISTRY_ROOT
; 479  : 
; 480  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_first_child;
; 481  : 
; 482  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_first_child;
; 483  : 
; 484  : 	#endif
; 485  : 
; 486  : 	////////////////////////////////////////
; 487  : 	//
; 488  : 	// LIST_TYPE_GUIDE
; 489  : 	//
; 490  : 	////////////////////////////////////////
; 491  : 
; 492  : 	#ifdef LIST_TYPE_GUIDE_ROOT
; 493  : 
; 494  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_first_child;

  0014d	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00152	6b c8 22	 imul	 ecx, eax, 34
  00155	ba 04 00 00 00	 mov	 edx, 4
  0015a	c1 e2 04	 shl	 edx, 4
  0015d	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+edx], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 495  : 
; 496  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_first_child;

  00168	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0016d	6b c8 22	 imul	 ecx, eax, 34
  00170	ba 04 00 00 00	 mov	 edx, 4
  00175	c1 e2 04	 shl	 edx, 4
  00178	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+edx], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child

; 497  : 
; 498  : 	#endif
; 499  : 
; 500  : 	#ifdef LIST_TYPE_GUIDE_LINK
; 501  : 
; 502  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE]	= set_local_parent;
; 503  : 
; 504  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE]	= get_local_parent;
; 505  : 
; 506  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_child_succ;
; 507  : 
; 508  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_child_succ;
; 509  : 
; 510  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE]	= set_local_child_pred;
; 511  : 
; 512  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE]	= get_local_child_pred;
; 513  : 
; 514  : 	#endif
; 515  : 
; 516  : 	////////////////////////////////////////
; 517  : 	//
; 518  : 	// LIST_TYPE_GUIDE_STACK
; 519  : 	//
; 520  : 	////////////////////////////////////////
; 521  : 
; 522  : 	#ifdef LIST_TYPE_GUIDE_STACK_ROOT
; 523  : 
; 524  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_first_child;
; 525  : 
; 526  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_first_child;
; 527  : 
; 528  : 	#endif
; 529  : 
; 530  : 	#ifdef LIST_TYPE_GUIDE_STACK_LINK
; 531  : 
; 532  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_parent;
; 533  : 
; 534  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_parent;
; 535  : 
; 536  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_child_succ;
; 537  : 
; 538  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_child_succ;
; 539  : 
; 540  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= set_local_child_pred;
; 541  : 
; 542  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUIDE_STACK]	= get_local_child_pred;
; 543  : 
; 544  : 	#endif
; 545  : 
; 546  : 	////////////////////////////////////////
; 547  : 	//
; 548  : 	// LIST_TYPE_GUNSHIP_TARGET
; 549  : 	//
; 550  : 	////////////////////////////////////////
; 551  : 
; 552  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_ROOT
; 553  : 
; 554  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_first_child;
; 555  : 
; 556  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_first_child;
; 557  : 
; 558  : 	#endif
; 559  : 
; 560  : 	#ifdef LIST_TYPE_GUNSHIP_TARGET_LINK
; 561  : 
; 562  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_parent;
; 563  : 
; 564  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_parent;
; 565  : 
; 566  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_child_succ;
; 567  : 
; 568  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_child_succ;
; 569  : 
; 570  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= set_local_child_pred;
; 571  : 
; 572  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GUNSHIP_TARGET]	= get_local_child_pred;
; 573  : 
; 574  : 	#endif
; 575  : 
; 576  : 	////////////////////////////////////////
; 577  : 	//
; 578  : 	// LIST_TYPE_HIERARCHY
; 579  : 	//
; 580  : 	////////////////////////////////////////
; 581  : 
; 582  : 	#ifdef LIST_TYPE_HIERARCHY_ROOT
; 583  : 
; 584  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_first_child;
; 585  : 
; 586  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_first_child;
; 587  : 
; 588  : 	#endif
; 589  : 
; 590  : 	#ifdef LIST_TYPE_HIERARCHY_LINK
; 591  : 
; 592  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_parent;
; 593  : 
; 594  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_parent;
; 595  : 
; 596  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_child_succ;
; 597  : 
; 598  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_child_succ;
; 599  : 
; 600  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_HIERARCHY]	= set_local_child_pred;
; 601  : 
; 602  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_HIERARCHY]	= get_local_child_pred;
; 603  : 
; 604  : 	#endif
; 605  : 
; 606  : 	////////////////////////////////////////
; 607  : 	//
; 608  : 	// LIST_TYPE_INDEPENDENT_GROUP
; 609  : 	//
; 610  : 	////////////////////////////////////////
; 611  : 
; 612  : 	#ifdef LIST_TYPE_INDEPENDENT_GROUP_ROOT
; 613  : 
; 614  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_first_child;
; 615  : 
; 616  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_first_child;
; 617  : 
; 618  : 	#endif
; 619  : 
; 620  : 	#ifdef LIST_TYPE_GROUP_LINK
; 621  : 
; 622  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_parent;
; 623  : 
; 624  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_parent;
; 625  : 
; 626  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_child_succ;
; 627  : 
; 628  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_child_succ;
; 629  : 
; 630  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= set_local_child_pred;
; 631  : 
; 632  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_INDEPENDENT_GROUP]	= get_local_child_pred;
; 633  : 
; 634  : 	#endif
; 635  : 
; 636  : 	////////////////////////////////////////
; 637  : 	//
; 638  : 	// LIST_TYPE_KEYSITE_FORCE
; 639  : 	//
; 640  : 	////////////////////////////////////////
; 641  : 
; 642  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_ROOT
; 643  : 
; 644  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_first_child;
; 645  : 
; 646  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_first_child;
; 647  : 
; 648  : 	#endif
; 649  : 
; 650  : 	#ifdef LIST_TYPE_KEYSITE_FORCE_LINK
; 651  : 
; 652  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_parent;
; 653  : 
; 654  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_parent;
; 655  : 
; 656  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_child_succ;
; 657  : 
; 658  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_child_succ;
; 659  : 
; 660  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= set_local_child_pred;
; 661  : 
; 662  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_FORCE]	= get_local_child_pred;
; 663  : 
; 664  : 	#endif
; 665  : 
; 666  : 	////////////////////////////////////////
; 667  : 	//
; 668  : 	// LIST_TYPE_KEYSITE_GROUP
; 669  : 	//
; 670  : 	////////////////////////////////////////
; 671  : 
; 672  : 	#ifdef LIST_TYPE_KEYSITE_GROUP_ROOT
; 673  : 
; 674  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_first_child;
; 675  : 
; 676  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_first_child;
; 677  : 
; 678  : 	#endif
; 679  : 
; 680  : 	#ifdef LIST_TYPE_GROUP_LINK
; 681  : 
; 682  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_parent;
; 683  : 
; 684  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_parent;
; 685  : 
; 686  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_child_succ;
; 687  : 
; 688  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_child_succ;
; 689  : 
; 690  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= set_local_child_pred;
; 691  : 
; 692  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_KEYSITE_GROUP]	= get_local_child_pred;
; 693  : 
; 694  : 	#endif
; 695  : 
; 696  : 	////////////////////////////////////////
; 697  : 	//
; 698  : 	// LIST_TYPE_LAUNCHED_WEAPON
; 699  : 	//
; 700  : 	////////////////////////////////////////
; 701  : 
; 702  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_ROOT
; 703  : 
; 704  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_first_child;
; 705  : 
; 706  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_first_child;
; 707  : 
; 708  : 	#endif
; 709  : 
; 710  : 	#ifdef LIST_TYPE_LAUNCHED_WEAPON_LINK
; 711  : 
; 712  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_parent;
; 713  : 
; 714  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_parent;
; 715  : 
; 716  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_child_succ;
; 717  : 
; 718  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_child_succ;
; 719  : 
; 720  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= set_local_child_pred;
; 721  : 
; 722  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_LAUNCHED_WEAPON]	= get_local_child_pred;
; 723  : 
; 724  : 	#endif
; 725  : 
; 726  : 	////////////////////////////////////////
; 727  : 	//
; 728  : 	// LIST_TYPE_LANDING_SITE
; 729  : 	//
; 730  : 	////////////////////////////////////////
; 731  : 
; 732  : 	#ifdef LIST_TYPE_LANDING_SITE_ROOT
; 733  : 
; 734  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_first_child;
; 735  : 
; 736  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_first_child;
; 737  : 
; 738  : 	#endif
; 739  : 
; 740  : 	#ifdef LIST_TYPE_LANDING_SITE_LINK
; 741  : 
; 742  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_parent;
; 743  : 
; 744  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_parent;
; 745  : 
; 746  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_child_succ;
; 747  : 
; 748  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_child_succ;
; 749  : 
; 750  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_LANDING_SITE]	= set_local_child_pred;
; 751  : 
; 752  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_LANDING_SITE]	= get_local_child_pred;
; 753  : 
; 754  : 	#endif
; 755  : 
; 756  : 	////////////////////////////////////////
; 757  : 	//
; 758  : 	// LIST_TYPE_MEMBER
; 759  : 	//
; 760  : 	////////////////////////////////////////
; 761  : 
; 762  : 	#ifdef LIST_TYPE_MEMBER_ROOT
; 763  : 
; 764  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_first_child;
; 765  : 
; 766  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_first_child;
; 767  : 
; 768  : 	#endif
; 769  : 
; 770  : 	#ifdef LIST_TYPE_MEMBER_LINK
; 771  : 
; 772  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_MEMBER]	= set_local_parent;
; 773  : 
; 774  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_MEMBER]	= get_local_parent;
; 775  : 
; 776  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_child_succ;
; 777  : 
; 778  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_child_succ;
; 779  : 
; 780  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_MEMBER]	= set_local_child_pred;
; 781  : 
; 782  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_MEMBER]	= get_local_child_pred;
; 783  : 
; 784  : 	#endif
; 785  : 
; 786  : 	////////////////////////////////////////
; 787  : 	//
; 788  : 	// LIST_TYPE_MOVEMENT_DEPENDENT
; 789  : 	//
; 790  : 	////////////////////////////////////////
; 791  : 
; 792  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_ROOT
; 793  : 
; 794  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_first_child;
; 795  : 
; 796  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_first_child;
; 797  : 
; 798  : 	#endif
; 799  : 
; 800  : 	#ifdef LIST_TYPE_MOVEMENT_DEPENDENT_LINK
; 801  : 
; 802  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_parent;
; 803  : 
; 804  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_parent;
; 805  : 
; 806  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_child_succ;
; 807  : 
; 808  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_child_succ;
; 809  : 
; 810  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= set_local_child_pred;
; 811  : 
; 812  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_MOVEMENT_DEPENDENT]	= get_local_child_pred;
; 813  : 
; 814  : 	#endif
; 815  : 
; 816  : 	////////////////////////////////////////
; 817  : 	//
; 818  : 	// LIST_TYPE_PADLOCK
; 819  : 	//
; 820  : 	////////////////////////////////////////
; 821  : 
; 822  : 	#ifdef LIST_TYPE_PADLOCK_ROOT
; 823  : 
; 824  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_first_child;
; 825  : 
; 826  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_first_child;
; 827  : 
; 828  : 	#endif
; 829  : 
; 830  : 	#ifdef LIST_TYPE_PADLOCK_LINK
; 831  : 
; 832  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_parent;
; 833  : 
; 834  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_parent;
; 835  : 
; 836  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_child_succ;
; 837  : 
; 838  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_child_succ;
; 839  : 
; 840  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PADLOCK]	= set_local_child_pred;
; 841  : 
; 842  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PADLOCK]	= get_local_child_pred;
; 843  : 
; 844  : 	#endif
; 845  : 
; 846  : 	////////////////////////////////////////
; 847  : 	//
; 848  : 	// LIST_TYPE_PILOT
; 849  : 	//
; 850  : 	////////////////////////////////////////
; 851  : 
; 852  : 	#ifdef LIST_TYPE_PILOT_ROOT
; 853  : 
; 854  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT]	= set_local_first_child;
; 855  : 
; 856  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT]	= get_local_first_child;
; 857  : 
; 858  : 	#endif
; 859  : 
; 860  : 	#ifdef LIST_TYPE_PILOT_LINK
; 861  : 
; 862  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT]	= set_local_parent;
; 863  : 
; 864  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT]	= get_local_parent;
; 865  : 
; 866  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT]	= set_local_child_succ;
; 867  : 
; 868  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT]	= get_local_child_succ;
; 869  : 
; 870  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT]	= set_local_child_pred;
; 871  : 
; 872  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT]	= get_local_child_pred;
; 873  : 
; 874  : 	#endif
; 875  : 
; 876  : 	////////////////////////////////////////
; 877  : 	//
; 878  : 	// LIST_TYPE_PILOT_LOCK
; 879  : 	//
; 880  : 	////////////////////////////////////////
; 881  : 
; 882  : 	#ifdef LIST_TYPE_PILOT_LOCK_ROOT
; 883  : 
; 884  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_first_child;
; 885  : 
; 886  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_first_child;
; 887  : 
; 888  : 	#endif
; 889  : 
; 890  : 	#ifdef LIST_TYPE_PILOT_LOCK_LINK
; 891  : 
; 892  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_parent;

  00183	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00188	6b c8 22	 imul	 ecx, eax, 34
  0018b	ba 04 00 00 00	 mov	 edx, 4
  00190	6b c2 1d	 imul	 eax, edx, 29
  00193	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 893  : 
; 894  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_parent;

  0019e	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  001a3	6b c8 22	 imul	 ecx, eax, 34
  001a6	ba 04 00 00 00	 mov	 edx, 4
  001ab	6b c2 1d	 imul	 eax, edx, 29
  001ae	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 895  : 
; 896  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_child_succ;

  001b9	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  001be	6b c8 22	 imul	 ecx, eax, 34
  001c1	ba 04 00 00 00	 mov	 edx, 4
  001c6	6b c2 1d	 imul	 eax, edx, 29
  001c9	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 897  : 
; 898  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_child_succ;

  001d4	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  001d9	6b c8 22	 imul	 ecx, eax, 34
  001dc	ba 04 00 00 00	 mov	 edx, 4
  001e1	6b c2 1d	 imul	 eax, edx, 29
  001e4	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 899  : 
; 900  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= set_local_child_pred;

  001ef	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  001f4	6b c8 22	 imul	 ecx, eax, 34
  001f7	ba 04 00 00 00	 mov	 edx, 4
  001fc	6b c2 1d	 imul	 eax, edx, 29
  001ff	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 901  : 
; 902  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PILOT_LOCK]	= get_local_child_pred;

  0020a	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0020f	6b c8 22	 imul	 ecx, eax, 34
  00212	ba 04 00 00 00	 mov	 edx, 4
  00217	6b c2 1d	 imul	 eax, edx, 29
  0021a	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 903  : 
; 904  : 	#endif
; 905  : 
; 906  : 	////////////////////////////////////////
; 907  : 	//
; 908  : 	// LIST_TYPE_PLAYER_TASK
; 909  : 	//
; 910  : 	////////////////////////////////////////
; 911  : 
; 912  : 	#ifdef LIST_TYPE_PLAYER_TASK_ROOT
; 913  : 
; 914  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_first_child;

  00225	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0022a	6b c8 22	 imul	 ecx, eax, 34
  0022d	ba 04 00 00 00	 mov	 edx, 4
  00232	6b c2 1e	 imul	 eax, edx, 30
  00235	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 915  : 
; 916  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_first_child;

  00240	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00245	6b c8 22	 imul	 ecx, eax, 34
  00248	ba 04 00 00 00	 mov	 edx, 4
  0024d	6b c2 1e	 imul	 eax, edx, 30
  00250	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child

; 917  : 
; 918  : 	#endif
; 919  : 
; 920  : 	#ifdef LIST_TYPE_PLAYER_TASK_LINK
; 921  : 
; 922  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_parent;
; 923  : 
; 924  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_parent;
; 925  : 
; 926  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_child_succ;
; 927  : 
; 928  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_child_succ;
; 929  : 
; 930  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= set_local_child_pred;
; 931  : 
; 932  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_PLAYER_TASK]	= get_local_child_pred;
; 933  : 
; 934  : 	#endif
; 935  : 
; 936  : 	////////////////////////////////////////
; 937  : 	//
; 938  : 	// LIST_TYPE_REGEN
; 939  : 	//
; 940  : 	////////////////////////////////////////
; 941  : 
; 942  : 	#ifdef LIST_TYPE_REGEN_ROOT
; 943  : 
; 944  : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_REGEN]	= set_local_first_child;
; 945  : 
; 946  : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_REGEN]	= get_local_first_child;
; 947  : 
; 948  : 	#endif
; 949  : 
; 950  : 	#ifdef LIST_TYPE_REGEN_LINK
; 951  : 
; 952  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_REGEN]	= set_local_parent;
; 953  : 
; 954  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_REGEN]	= get_local_parent;
; 955  : 
; 956  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_REGEN]	= set_local_child_succ;
; 957  : 
; 958  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_REGEN]	= get_local_child_succ;
; 959  : 
; 960  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_REGEN]	= set_local_child_pred;
; 961  : 
; 962  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_REGEN]	= get_local_child_pred;
; 963  : 
; 964  : 	#endif
; 965  : 
; 966  : 	////////////////////////////////////////
; 967  : 	//
; 968  : 	// LIST_TYPE_REGISTRY (AIR, FREE, GROUND and SEA)
; 969  : 	//
; 970  : 	////////////////////////////////////////
; 971  : 
; 972  : 	#ifdef LIST_TYPE_REGISTRY_LINK
; 973  : 
; 974  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_parent;
; 975  : 
; 976  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_parent;
; 977  : 
; 978  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_child_succ;
; 979  : 
; 980  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_child_succ;
; 981  : 
; 982  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= set_local_child_pred;
; 983  : 
; 984  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_AIR_REGISTRY]	= get_local_child_pred;
; 985  : 
; 986  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_parent;
; 987  : 
; 988  : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_parent;
; 989  : 
; 990  : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_child_succ;
; 991  : 
; 992  : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_child_succ;
; 993  : 
; 994  : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= set_local_child_pred;
; 995  : 
; 996  : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_GROUND_REGISTRY]	= get_local_child_pred;
; 997  : 
; 998  : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_parent;
; 999  : 
; 1000 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_parent;
; 1001 : 
; 1002 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_child_succ;
; 1003 : 
; 1004 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_child_succ;
; 1005 : 
; 1006 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_child_pred;
; 1007 : 
; 1008 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_child_pred;
; 1009 : 
; 1010 : 	#endif
; 1011 : 
; 1012 : 	////////////////////////////////////////
; 1013 : 	//
; 1014 : 	// LIST_TYPE_SEA_REGISTRY
; 1015 : 	//
; 1016 : 	////////////////////////////////////////
; 1017 : 
; 1018 : 	#ifdef LIST_TYPE_SEA_REGISTRY_ROOT
; 1019 : 
; 1020 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= set_local_first_child;
; 1021 : 
; 1022 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SEA_REGISTRY]	= get_local_first_child;
; 1023 : 
; 1024 : 	#endif
; 1025 : 
; 1026 : 	////////////////////////////////////////
; 1027 : 	//
; 1028 : 	// LIST_TYPE_SECTOR
; 1029 : 	//
; 1030 : 	////////////////////////////////////////
; 1031 : 
; 1032 : 	#ifdef LIST_TYPE_SECTOR_ROOT
; 1033 : 
; 1034 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_first_child;
; 1035 : 
; 1036 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_first_child;
; 1037 : 
; 1038 : 	#endif
; 1039 : 
; 1040 : 	#ifdef LIST_TYPE_SECTOR_LINK
; 1041 : 
; 1042 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR]	= set_local_parent;
; 1043 : 
; 1044 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR]	= get_local_parent;
; 1045 : 
; 1046 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_child_succ;
; 1047 : 
; 1048 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_child_succ;
; 1049 : 
; 1050 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR]	= set_local_child_pred;
; 1051 : 
; 1052 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR]	= get_local_child_pred;
; 1053 : 
; 1054 : 	#endif
; 1055 : 
; 1056 : 	////////////////////////////////////////
; 1057 : 	//
; 1058 : 	// LIST_TYPE_SECTOR_TASK
; 1059 : 	//
; 1060 : 	////////////////////////////////////////
; 1061 : 
; 1062 : 	#ifdef LIST_TYPE_SECTOR_TASK_ROOT
; 1063 : 
; 1064 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_first_child;
; 1065 : 
; 1066 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_first_child;
; 1067 : 
; 1068 : 	#endif
; 1069 : 
; 1070 : 	#ifdef LIST_TYPE_SECTOR_TASK_LINK
; 1071 : 
; 1072 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_parent;

  0025b	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00260	6b c8 22	 imul	 ecx, eax, 34
  00263	ba 04 00 00 00	 mov	 edx, 4
  00268	6b c2 22	 imul	 eax, edx, 34
  0026b	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 1073 : 
; 1074 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_parent;

  00276	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0027b	6b c8 22	 imul	 ecx, eax, 34
  0027e	ba 04 00 00 00	 mov	 edx, 4
  00283	6b c2 22	 imul	 eax, edx, 34
  00286	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 1075 : 
; 1076 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_child_succ;

  00291	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00296	6b c8 22	 imul	 ecx, eax, 34
  00299	ba 04 00 00 00	 mov	 edx, 4
  0029e	6b c2 22	 imul	 eax, edx, 34
  002a1	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 1077 : 
; 1078 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_child_succ;

  002ac	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  002b1	6b c8 22	 imul	 ecx, eax, 34
  002b4	ba 04 00 00 00	 mov	 edx, 4
  002b9	6b c2 22	 imul	 eax, edx, 34
  002bc	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 1079 : 
; 1080 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= set_local_child_pred;

  002c7	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  002cc	6b c8 22	 imul	 ecx, eax, 34
  002cf	ba 04 00 00 00	 mov	 edx, 4
  002d4	6b c2 22	 imul	 eax, edx, 34
  002d7	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 1081 : 
; 1082 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SECTOR_TASK]	= get_local_child_pred;

  002e2	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  002e7	6b c8 22	 imul	 ecx, eax, 34
  002ea	ba 04 00 00 00	 mov	 edx, 4
  002ef	6b c2 22	 imul	 eax, edx, 34
  002f2	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 1083 : 
; 1084 : 	#endif
; 1085 : 
; 1086 : 	////////////////////////////////////////
; 1087 : 	//
; 1088 : 	// LIST_TYPE_SEGMENT
; 1089 : 	//
; 1090 : 	////////////////////////////////////////
; 1091 : 
; 1092 : 	#ifdef LIST_TYPE_SEGMENT_ROOT
; 1093 : 
; 1094 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_first_child;
; 1095 : 
; 1096 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_first_child;
; 1097 : 
; 1098 : 	#endif
; 1099 : 
; 1100 : 	#ifdef LIST_TYPE_SEGMENT_LINK
; 1101 : 
; 1102 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_parent;
; 1103 : 
; 1104 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_parent;
; 1105 : 
; 1106 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_child_succ;
; 1107 : 
; 1108 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_child_succ;
; 1109 : 
; 1110 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEGMENT]	= set_local_child_pred;
; 1111 : 
; 1112 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SEGMENT]	= get_local_child_pred;
; 1113 : 
; 1114 : 	#endif
; 1115 : 
; 1116 : 	////////////////////////////////////////
; 1117 : 	//
; 1118 : 	// LIST_TYPE_SPECIAL_EFFECT
; 1119 : 	//
; 1120 : 	////////////////////////////////////////
; 1121 : 
; 1122 : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_ROOT
; 1123 : 
; 1124 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_first_child;
; 1125 : 
; 1126 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_first_child;
; 1127 : 
; 1128 : 	#endif
; 1129 : 
; 1130 : 	#ifdef LIST_TYPE_SPECIAL_EFFECT_LINK
; 1131 : 
; 1132 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_parent;
; 1133 : 
; 1134 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_parent;
; 1135 : 
; 1136 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_child_succ;
; 1137 : 
; 1138 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_child_succ;
; 1139 : 
; 1140 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= set_local_child_pred;
; 1141 : 
; 1142 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_SPECIAL_EFFECT]	= get_local_child_pred;
; 1143 : 
; 1144 : 	#endif
; 1145 : 
; 1146 : 	////////////////////////////////////////
; 1147 : 	//
; 1148 : 	// LIST_TYPE_TAKEOFF_QUEUE
; 1149 : 	//
; 1150 : 	////////////////////////////////////////
; 1151 : 
; 1152 : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_ROOT
; 1153 : 
; 1154 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_first_child;
; 1155 : 
; 1156 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_first_child;
; 1157 : 
; 1158 : 	#endif
; 1159 : 
; 1160 : 	#ifdef LIST_TYPE_TAKEOFF_QUEUE_LINK
; 1161 : 
; 1162 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_parent;
; 1163 : 
; 1164 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_parent;
; 1165 : 
; 1166 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_child_succ;
; 1167 : 
; 1168 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_child_succ;
; 1169 : 
; 1170 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= set_local_child_pred;
; 1171 : 
; 1172 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_TAKEOFF_QUEUE]	= get_local_child_pred;
; 1173 : 
; 1174 : 	#endif
; 1175 : 
; 1176 : 	////////////////////////////////////////
; 1177 : 	//
; 1178 : 	// LIST_TYPE_TARGET
; 1179 : 	//
; 1180 : 	////////////////////////////////////////
; 1181 : 
; 1182 : 	#ifdef LIST_TYPE_TARGET_ROOT
; 1183 : 
; 1184 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TARGET]	= set_local_first_child;
; 1185 : 
; 1186 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TARGET]	= get_local_first_child;
; 1187 : 
; 1188 : 	#endif
; 1189 : 
; 1190 : 	#ifdef LIST_TYPE_TARGET_LINK
; 1191 : 
; 1192 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_TARGET]	= set_local_parent;
; 1193 : 
; 1194 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_TARGET]	= get_local_parent;
; 1195 : 
; 1196 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_TARGET]	= set_local_child_succ;
; 1197 : 
; 1198 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_TARGET]	= get_local_child_succ;
; 1199 : 
; 1200 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_TARGET]	= set_local_child_pred;
; 1201 : 
; 1202 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_TARGET]	= get_local_child_pred;
; 1203 : 
; 1204 : 	#endif
; 1205 : 
; 1206 : 	////////////////////////////////////////
; 1207 : 	//
; 1208 : 	// LIST_TYPE_TASK_DEPENDENT
; 1209 : 	//
; 1210 : 	////////////////////////////////////////
; 1211 : 
; 1212 : 	#ifdef LIST_TYPE_TASK_DEPENDENT_ROOT
; 1213 : 
; 1214 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= set_local_first_child;

  002fd	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00302	6b c8 22	 imul	 ecx, eax, 34
  00305	ba 04 00 00 00	 mov	 edx, 4
  0030a	6b c2 27	 imul	 eax, edx, 39
  0030d	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 1215 : 
; 1216 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= get_local_first_child;

  00318	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0031d	6b c8 22	 imul	 ecx, eax, 34
  00320	ba 04 00 00 00	 mov	 edx, 4
  00325	6b c2 27	 imul	 eax, edx, 39
  00328	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child

; 1217 : 
; 1218 : 	#endif
; 1219 : 
; 1220 : 	#ifdef LIST_TYPE_TASK_DEPENDENT_LINK
; 1221 : 
; 1222 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= set_local_parent;

  00333	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00338	6b c8 22	 imul	 ecx, eax, 34
  0033b	ba 04 00 00 00	 mov	 edx, 4
  00340	6b c2 27	 imul	 eax, edx, 39
  00343	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 1223 : 
; 1224 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= get_local_parent;

  0034e	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00353	6b c8 22	 imul	 ecx, eax, 34
  00356	ba 04 00 00 00	 mov	 edx, 4
  0035b	6b c2 27	 imul	 eax, edx, 39
  0035e	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 1225 : 
; 1226 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= set_local_child_succ;

  00369	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0036e	6b c8 22	 imul	 ecx, eax, 34
  00371	ba 04 00 00 00	 mov	 edx, 4
  00376	6b c2 27	 imul	 eax, edx, 39
  00379	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 1227 : 
; 1228 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= get_local_child_succ;

  00384	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00389	6b c8 22	 imul	 ecx, eax, 34
  0038c	ba 04 00 00 00	 mov	 edx, 4
  00391	6b c2 27	 imul	 eax, edx, 39
  00394	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 1229 : 
; 1230 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= set_local_child_pred;

  0039f	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  003a4	6b c8 22	 imul	 ecx, eax, 34
  003a7	ba 04 00 00 00	 mov	 edx, 4
  003ac	6b c2 27	 imul	 eax, edx, 39
  003af	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 1231 : 
; 1232 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_TASK_DEPENDENT]	= get_local_child_pred;

  003ba	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  003bf	6b c8 22	 imul	 ecx, eax, 34
  003c2	ba 04 00 00 00	 mov	 edx, 4
  003c7	6b c2 27	 imul	 eax, edx, 39
  003ca	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 1233 : 
; 1234 : 	#endif
; 1235 : 
; 1236 : 	////////////////////////////////////////
; 1237 : 	//
; 1238 : 	// LIST_TYPE_UNASSIGNED_TASK
; 1239 : 	//
; 1240 : 	////////////////////////////////////////
; 1241 : 
; 1242 : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_ROOT
; 1243 : 
; 1244 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= set_local_first_child;
; 1245 : 
; 1246 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= get_local_first_child;
; 1247 : 
; 1248 : 	#endif
; 1249 : 
; 1250 : 	#ifdef LIST_TYPE_UNASSIGNED_TASK_LINK
; 1251 : 
; 1252 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= set_local_parent;

  003d5	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  003da	6b c8 22	 imul	 ecx, eax, 34
  003dd	ba 04 00 00 00	 mov	 edx, 4
  003e2	6b c2 28	 imul	 eax, edx, 40
  003e5	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 1253 : 
; 1254 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= get_local_parent;

  003f0	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  003f5	6b c8 22	 imul	 ecx, eax, 34
  003f8	ba 04 00 00 00	 mov	 edx, 4
  003fd	6b c2 28	 imul	 eax, edx, 40
  00400	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 1255 : 
; 1256 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= set_local_child_succ;

  0040b	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00410	6b c8 22	 imul	 ecx, eax, 34
  00413	ba 04 00 00 00	 mov	 edx, 4
  00418	6b c2 28	 imul	 eax, edx, 40
  0041b	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 1257 : 
; 1258 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= get_local_child_succ;

  00426	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0042b	6b c8 22	 imul	 ecx, eax, 34
  0042e	ba 04 00 00 00	 mov	 edx, 4
  00433	6b c2 28	 imul	 eax, edx, 40
  00436	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 1259 : 
; 1260 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= set_local_child_pred;

  00441	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00446	6b c8 22	 imul	 ecx, eax, 34
  00449	ba 04 00 00 00	 mov	 edx, 4
  0044e	6b c2 28	 imul	 eax, edx, 40
  00451	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 1261 : 
; 1262 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_UNASSIGNED_TASK]	= get_local_child_pred;

  0045c	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00461	6b c8 22	 imul	 ecx, eax, 34
  00464	ba 04 00 00 00	 mov	 edx, 4
  00469	6b c2 28	 imul	 eax, edx, 40
  0046c	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 1263 : 
; 1264 : 	#endif
; 1265 : 
; 1266 : 	////////////////////////////////////////
; 1267 : 	//
; 1268 : 	// LIST_TYPE_UPDATE
; 1269 : 	//
; 1270 : 	////////////////////////////////////////
; 1271 : 
; 1272 : 	#ifdef LIST_TYPE_UPDATE_ROOT
; 1273 : 
; 1274 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_UPDATE]	= set_local_first_child;
; 1275 : 
; 1276 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_UPDATE]	= get_local_first_child;
; 1277 : 
; 1278 : 	#endif
; 1279 : 
; 1280 : 	#ifdef LIST_TYPE_UPDATE_LINK
; 1281 : 
; 1282 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_UPDATE]	= set_local_parent;

  00477	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0047c	6b c8 22	 imul	 ecx, eax, 34
  0047f	ba 04 00 00 00	 mov	 edx, 4
  00484	6b c2 29	 imul	 eax, edx, 41
  00487	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_parent@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_parent

; 1283 : 
; 1284 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_UPDATE]	= get_local_parent;

  00492	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00497	6b c8 22	 imul	 ecx, eax, 34
  0049a	ba 04 00 00 00	 mov	 edx, 4
  0049f	6b c2 29	 imul	 eax, edx, 41
  004a2	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_parent@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_parent

; 1285 : 
; 1286 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_UPDATE]	= set_local_child_succ;

  004ad	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  004b2	6b c8 22	 imul	 ecx, eax, 34
  004b5	ba 04 00 00 00	 mov	 edx, 4
  004ba	6b c2 29	 imul	 eax, edx, 41
  004bd	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_succ@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_succ@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_succ

; 1287 : 
; 1288 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_UPDATE]	= get_local_child_succ;

  004c8	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  004cd	6b c8 22	 imul	 ecx, eax, 34
  004d0	ba 04 00 00 00	 mov	 edx, 4
  004d5	6b c2 29	 imul	 eax, edx, 41
  004d8	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_succ@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_succ

; 1289 : 
; 1290 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_UPDATE]	= set_local_child_pred;

  004e3	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  004e8	6b c8 22	 imul	 ecx, eax, 34
  004eb	ba 04 00 00 00	 mov	 edx, 4
  004f0	6b c2 29	 imul	 eax, edx, 41
  004f3	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_child_pred@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_child_pred@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_child_pred

; 1291 : 
; 1292 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_UPDATE]	= get_local_child_pred;

  004fe	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00503	6b c8 22	 imul	 ecx, eax, 34
  00506	ba 04 00 00 00	 mov	 edx, 4
  0050b	6b c2 29	 imul	 eax, edx, 41
  0050e	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_child_pred@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_child_pred@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_child_pred

; 1293 : 
; 1294 : 	#endif
; 1295 : 
; 1296 : 	////////////////////////////////////////
; 1297 : 	//
; 1298 : 	// LIST_TYPE_VIEW
; 1299 : 	//
; 1300 : 	////////////////////////////////////////
; 1301 : 
; 1302 : 	#ifdef LIST_TYPE_VIEW_ROOT
; 1303 : 
; 1304 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_VIEW]	= set_local_first_child;
; 1305 : 
; 1306 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_VIEW]	= get_local_first_child;
; 1307 : 
; 1308 : 	#endif
; 1309 : 
; 1310 : 	#ifdef LIST_TYPE_VIEW_LINK
; 1311 : 
; 1312 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_VIEW]	= set_local_parent;
; 1313 : 
; 1314 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_VIEW]	= get_local_parent;
; 1315 : 
; 1316 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_VIEW]	= set_local_child_succ;
; 1317 : 
; 1318 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_VIEW]	= get_local_child_succ;
; 1319 : 
; 1320 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_VIEW]	= set_local_child_pred;
; 1321 : 
; 1322 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_VIEW]	= get_local_child_pred;
; 1323 : 
; 1324 : 	#endif
; 1325 : 
; 1326 : 
; 1327 : 	////////////////////////////////////////
; 1328 : 	//
; 1329 : 	// LIST_TYPE_VIEW_WEAPON
; 1330 : 	//
; 1331 : 	////////////////////////////////////////
; 1332 : 
; 1333 : 	#ifdef LIST_TYPE_VIEW_WEAPON_ROOT
; 1334 : 
; 1335 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= set_local_first_child;
; 1336 : 
; 1337 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= get_local_first_child;
; 1338 : 
; 1339 : 	#endif
; 1340 : 
; 1341 : 	#ifdef LIST_TYPE_VIEW_WEAPON_LINK
; 1342 : 
; 1343 : 	fn_set_local_entity_parent			[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= set_local_parent;
; 1344 : 
; 1345 : 	fn_get_local_entity_parent			[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= get_local_parent;
; 1346 : 
; 1347 : 	fn_set_local_entity_child_succ	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= set_local_child_succ;
; 1348 : 
; 1349 : 	fn_get_local_entity_child_succ	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= get_local_child_succ;
; 1350 : 
; 1351 : 	fn_set_local_entity_child_pred	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= set_local_child_pred;
; 1352 : 
; 1353 : 	fn_get_local_entity_child_pred	[(TYPE)][LIST_TYPE_VIEW_WEAPON]	= get_local_child_pred;
; 1354 : 
; 1355 : 	#endif
; 1356 : 
; 1357 : 	////////////////////////////////////////
; 1358 : 	//
; 1359 : 	// LIST_TYPE_WAYPOINT
; 1360 : 	//
; 1361 : 	////////////////////////////////////////
; 1362 : 
; 1363 : 	#ifdef LIST_TYPE_WAYPOINT_ROOT
; 1364 : 
; 1365 : 	fn_set_local_entity_first_child	[(TYPE)][LIST_TYPE_WAYPOINT]	= set_local_first_child;

  00519	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  0051e	6b c8 22	 imul	 ecx, eax, 34
  00521	ba 04 00 00 00	 mov	 edx, 4
  00526	6b c2 2c	 imul	 eax, edx, 44
  00529	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_local_entity_first_child@@3PAY0CN@P6GXPAUENTITY@@W4LIST_TYPES@@0@ZA[ecx+eax], OFFSET ?set_local_first_child@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_local_first_child

; 1366 : 
; 1367 : 	fn_get_local_entity_first_child	[(TYPE)][LIST_TYPE_WAYPOINT]	= get_local_first_child;

  00534	b8 b4 00 00 00	 mov	 eax, 180		; 000000b4H
  00539	6b c8 22	 imul	 ecx, eax, 34
  0053c	ba 04 00 00 00	 mov	 edx, 4
  00541	6b c2 2c	 imul	 eax, edx, 44
  00544	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[ecx+eax], OFFSET ?get_local_first_child@@YGPAUENTITY@@PAU1@W4LIST_TYPES@@@Z ; get_local_first_child
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\task\ts_list.c

; 290  : }

  0054f	5f		 pop	 edi
  00550	5e		 pop	 esi
  00551	5b		 pop	 ebx
  00552	8b e5		 mov	 esp, ebp
  00554	5d		 pop	 ebp
  00555	c3		 ret	 0
?overload_task_list_functions@@YGXXZ ENDP		; overload_task_list_functions
_TEXT	ENDS
END
