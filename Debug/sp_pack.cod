; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\sprite\sp_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_sprite_pack_functions@@YGXXZ		; overload_sprite_pack_functions
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; pack_vec3d
EXTRN	?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z:PROC ; unpack_vec3d
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; pack_effect_data
EXTRN	?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; unpack_effect_data
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 09cH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\sprite'
	DB	'\sp_pack.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\sprite\sp_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv174 = -76						; size = 4
tv70 = -76						; size = 4
_raw$1 = -8						; size = 4
_index$2 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 156  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 157  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@unpack_loc:

; 158  : 
; 159  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 79 01 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@unpack_loc
  00043	e9 6e 01 00 00	 jmp	 $LN2@unpack_loc
$LN6@unpack_loc:

; 160  : 	{
; 161  : 		////////////////////////////////////////
; 162  : 		case PACK_MODE_SERVER_SESSION:
; 163  : 		case PACK_MODE_CLIENT_SESSION:
; 164  : 		////////////////////////////////////////
; 165  : 		{
; 166  : 			int
; 167  : 				index;
; 168  : 
; 169  : 			sprite
; 170  : 				*raw;
; 171  : 
; 172  : 			//
; 173  : 			// create entity
; 174  : 			//
; 175  : 
; 176  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 fc	 mov	 DWORD PTR _index$2[ebp], eax

; 177  : 
; 178  : 			en = get_free_entity (index);

  00050	8b 45 fc	 mov	 eax, DWORD PTR _index$2[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 179  : 
; 180  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 181  : 
; 182  : 			raw = (sprite *) malloc_heap_mem (sizeof (sprite));

  00064	6a 64		 push	 100			; 00000064H
  00066	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0006b	89 45 f8	 mov	 DWORD PTR _raw$1[ebp], eax

; 183  : 
; 184  : 			set_local_entity_data (en, raw);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 185  : 
; 186  : 			memset (raw, 0, sizeof (sprite));

  00077	6a 64		 push	 100			; 00000064H
  00079	6a 00		 push	 0
  0007b	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 187  : 
; 188  : 			//
; 189  : 			// unpack effect data (in exactly the same order as the data was packed)
; 190  : 			//
; 191  : 
; 192  : 			unpack_effect_data( en, &raw->eff, mode );

  00087	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0008e	51		 push	 ecx
  0008f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 ?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; unpack_effect_data

; 193  : 
; 194  : 			//
; 195  : 			// unpack sprite data
; 196  : 			//
; 197  : 
; 198  : 			raw->animation_frequency = unpack_float_value (en, FLOAT_TYPE_ANIMATION_FREQUENCY);

  00098	6a 0b		 push	 11			; 0000000bH
  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000a3	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000a6	d9 59 28	 fstp	 DWORD PTR [ecx+40]

; 199  : 
; 200  : 			raw->rotation_rate = unpack_float_value (en, FLOAT_TYPE_MAX_TURN_RATE);

  000a9	6a 4d		 push	 77			; 0000004dH
  000ab	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ae	50		 push	 eax
  000af	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000b4	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000b7	d9 59 2c	 fstp	 DWORD PTR [ecx+44]

; 201  : 
; 202  : 			raw->effect_lifetime = unpack_float_value (en, FLOAT_TYPE_EFFECT_LIFETIME);

  000ba	6a 20		 push	 32			; 00000020H
  000bc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000c5	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000c8	d9 59 30	 fstp	 DWORD PTR [ecx+48]

; 203  : 
; 204  : 			raw->sprite_lifetime = unpack_float_value (en, FLOAT_TYPE_SPRITE_LIFETIME);

  000cb	6a 7b		 push	 123			; 0000007bH
  000cd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d0	50		 push	 eax
  000d1	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000d6	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000d9	d9 59 34	 fstp	 DWORD PTR [ecx+52]

; 205  : 
; 206  : 			raw->start_scale = unpack_float_value (en, FLOAT_TYPE_START_SCALE);

  000dc	6a 7c		 push	 124			; 0000007cH
  000de	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000e7	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000ea	d9 59 38	 fstp	 DWORD PTR [ecx+56]

; 207  : 
; 208  : 			raw->end_scale = unpack_float_value (en, FLOAT_TYPE_END_SCALE);

  000ed	6a 24		 push	 36			; 00000024H
  000ef	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  000f8	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000fb	d9 59 3c	 fstp	 DWORD PTR [ecx+60]

; 209  : 
; 210  : 			raw->animated_texture = (texture_animation_indices) unpack_int_value (en, INT_TYPE_ANIMATED_TEXTURE);

  000fe	6a 08		 push	 8
  00100	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00109	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0010c	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 211  : 
; 212  : 			unpack_vec3d (en, VEC3D_TYPE_RELATIVE_POSITION, &raw->relative_position);

  0010f	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  00112	83 c0 44	 add	 eax, 68			; 00000044H
  00115	50		 push	 eax
  00116	6a 09		 push	 9
  00118	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011b	51		 push	 ecx
  0011c	e8 00 00 00 00	 call	 ?unpack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; unpack_vec3d

; 213  : 
; 214  : 			raw->colour_red = unpack_int_value (en, INT_TYPE_COLOUR_RED);

  00121	6a 20		 push	 32			; 00000020H
  00123	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00126	50		 push	 eax
  00127	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0012c	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0012f	88 41 50	 mov	 BYTE PTR [ecx+80], al

; 215  : 			raw->colour_green = unpack_int_value (en, INT_TYPE_COLOUR_GREEN);

  00132	6a 1f		 push	 31			; 0000001fH
  00134	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0013d	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00140	88 41 51	 mov	 BYTE PTR [ecx+81], al

; 216  : 			raw->colour_blue = unpack_int_value (en, INT_TYPE_COLOUR_BLUE);

  00143	6a 1e		 push	 30			; 0000001eH
  00145	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0014e	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00151	88 41 52	 mov	 BYTE PTR [ecx+82], al

; 217  : 			raw->colour_alpha = unpack_int_value (en, INT_TYPE_COLOUR_ALPHA);

  00154	6a 1d		 push	 29			; 0000001dH
  00156	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00159	50		 push	 eax
  0015a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0015f	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00162	88 41 53	 mov	 BYTE PTR [ecx+83], al

; 218  : 
; 219  : 			raw->additive = unpack_int_value (en, INT_TYPE_ADDITIVE);

  00165	6a 00		 push	 0
  00167	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016a	50		 push	 eax
  0016b	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00170	89 45 b4	 mov	 DWORD PTR tv174[ebp], eax
  00173	8a 4d b4	 mov	 cl, BYTE PTR tv174[ebp]
  00176	80 e1 01	 and	 cl, 1
  00179	8b 55 f8	 mov	 edx, DWORD PTR _raw$1[ebp]
  0017c	8a 42 54	 mov	 al, BYTE PTR [edx+84]
  0017f	24 fe		 and	 al, 254			; 000000feH
  00181	0a c1		 or	 al, cl
  00183	8b 4d f8	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00186	88 41 54	 mov	 BYTE PTR [ecx+84], al

; 220  : 
; 221  : 			// sector_link
; 222  : 
; 223  : 			////////////////////////////////////////
; 224  : 			//
; 225  : 			// BUILD COMPONENTS
; 226  : 			//
; 227  : 			////////////////////////////////////////
; 228  : 	
; 229  : 			////////////////////////////////////////
; 230  : 			//
; 231  : 			// LINK INTO SYSTEM
; 232  : 			//
; 233  : 			////////////////////////////////////////
; 234  : 
; 235  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  00189	6a 00		 push	 0
  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00190	50		 push	 eax
  00191	6a 29		 push	 41			; 00000029H
  00193	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00196	51		 push	 ecx
  00197	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list

; 236  : 
; 237  : 			insert_local_entity_into_parents_child_list (en, LIST_TYPE_SECTOR, get_local_sector_entity (&raw->eff.position), NULL);

  0019c	6a 00		 push	 0
  0019e	8b 45 f8	 mov	 eax, DWORD PTR _raw$1[ebp]
  001a1	83 c0 04	 add	 eax, 4
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  001aa	50		 push	 eax
  001ab	6a 21		 push	 33			; 00000021H
  001ad	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001b0	51		 push	 ecx
  001b1	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN2@unpack_loc:

; 238  : 
; 239  : 			break;
; 240  : 		}
; 241  : 		////////////////////////////////////////
; 242  : 		case PACK_MODE_BROWSE_SESSION:
; 243  : 		////////////////////////////////////////
; 244  : 		{
; 245  : 			break;
; 246  : 		}
; 247  : 		////////////////////////////////////////
; 248  : 		case PACK_MODE_UPDATE_ENTITY:
; 249  : 		////////////////////////////////////////
; 250  : 		{
; 251  : 			//
; 252  : 			// always use access functions to set the data
; 253  : 			//
; 254  : 
; 255  : 			break;
; 256  : 		}
; 257  : 	}
; 258  : }

  001b6	5f		 pop	 edi
  001b7	5e		 pop	 esi
  001b8	5b		 pop	 ebx
  001b9	8b e5		 mov	 esp, ebp
  001bb	5d		 pop	 ebp
  001bc	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\sprite\sp_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_raw$1 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN5@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN4@pack_local
$LN5@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b8	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b8 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 86 01 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b8 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN6@pack_local
  00043	e9 7b 01 00 00	 jmp	 $LN2@pack_local
$LN6@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			sprite
; 91   : 				*raw;
; 92   : 
; 93   : 			raw = (sprite *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$1[ebp], ecx

; 94   : 
; 95   : 			pack_entity_type (get_local_entity_type (en));

  00051	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00055	74 0a		 je	 SHORT $LN10@pack_local
  00057	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005c	89 4d b8	 mov	 DWORD PTR tv78[ebp], ecx
  0005f	eb 21		 jmp	 SHORT $LN11@pack_local
$LN10@pack_local:
  00061	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00067	83 c2 0f	 add	 edx, 15			; 0000000fH
  0006a	52		 push	 edx
  0006b	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBPOMICP@c?3?2users?2nhv90?2projects?2eech?2ap@
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00075	50		 push	 eax
  00076	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007b	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@pack_local:
  00082	8b 4d b8	 mov	 ecx, DWORD PTR tv78[ebp]
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 96   : 
; 97   : 			pack_entity_safe_ptr (en);

  0008b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 98   : 
; 99   : 			//
; 100  : 			// pack effect data
; 101  : 			//
; 102  : 
; 103  : 			pack_effect_data (en, &raw->eff, mode);

  00094	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00097	50		 push	 eax
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0009b	51		 push	 ecx
  0009c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0009f	52		 push	 edx
  000a0	e8 00 00 00 00	 call	 ?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; pack_effect_data

; 104  : 
; 105  : 			//
; 106  : 			// pack sprite data
; 107  : 			//
; 108  : 
; 109  : 			pack_float_value (en, FLOAT_TYPE_ANIMATION_FREQUENCY, raw->animation_frequency);

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000a8	51		 push	 ecx
  000a9	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  000ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b3	6a 0b		 push	 11			; 0000000bH
  000b5	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b8	51		 push	 ecx
  000b9	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 110  : 
; 111  : 			pack_float_value (en, FLOAT_TYPE_MAX_TURN_RATE, raw->rotation_rate);

  000be	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000c1	51		 push	 ecx
  000c2	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	6a 4d		 push	 77			; 0000004dH
  000ce	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000d1	51		 push	 ecx
  000d2	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 112  : 
; 113  : 			pack_float_value (en, FLOAT_TYPE_EFFECT_LIFETIME, raw->effect_lifetime);

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000da	51		 push	 ecx
  000db	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	6a 20		 push	 32			; 00000020H
  000e7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000ea	51		 push	 ecx
  000eb	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 114  : 
; 115  : 			pack_float_value (en, FLOAT_TYPE_SPRITE_LIFETIME, raw->sprite_lifetime);

  000f0	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  000f3	51		 push	 ecx
  000f4	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  000f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fe	6a 7b		 push	 123			; 0000007bH
  00100	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00103	51		 push	 ecx
  00104	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 116  : 
; 117  : 			pack_float_value (en, FLOAT_TYPE_START_SCALE, raw->start_scale);

  00109	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0010c	51		 push	 ecx
  0010d	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  00112	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00117	6a 7c		 push	 124			; 0000007cH
  00119	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0011c	51		 push	 ecx
  0011d	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 118  : 
; 119  : 			pack_float_value (en, FLOAT_TYPE_END_SCALE, raw->end_scale);

  00122	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00125	51		 push	 ecx
  00126	f3 0f 10 40 3c	 movss	 xmm0, DWORD PTR [eax+60]
  0012b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00130	6a 24		 push	 36			; 00000024H
  00132	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00135	51		 push	 ecx
  00136	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 120  : 
; 121  : 			pack_int_value (en, INT_TYPE_ANIMATED_TEXTURE, raw->animated_texture);

  0013b	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0013e	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00141	51		 push	 ecx
  00142	6a 08		 push	 8
  00144	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00147	52		 push	 edx
  00148	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 122  : 
; 123  : 			pack_vec3d (en, VEC3D_TYPE_RELATIVE_POSITION, &raw->relative_position);

  0014d	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00150	83 c0 44	 add	 eax, 68			; 00000044H
  00153	50		 push	 eax
  00154	6a 09		 push	 9
  00156	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?pack_vec3d@@YGXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@Z ; pack_vec3d

; 124  : 
; 125  : 			pack_int_value (en, INT_TYPE_COLOUR_RED, raw->colour_red);

  0015f	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00162	0f b6 48 50	 movzx	 ecx, BYTE PTR [eax+80]
  00166	51		 push	 ecx
  00167	6a 20		 push	 32			; 00000020H
  00169	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0016c	52		 push	 edx
  0016d	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 126  : 			pack_int_value (en, INT_TYPE_COLOUR_GREEN, raw->colour_green);

  00172	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00175	0f b6 48 51	 movzx	 ecx, BYTE PTR [eax+81]
  00179	51		 push	 ecx
  0017a	6a 1f		 push	 31			; 0000001fH
  0017c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0017f	52		 push	 edx
  00180	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 127  : 			pack_int_value (en, INT_TYPE_COLOUR_BLUE, raw->colour_blue);

  00185	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  00188	0f b6 48 52	 movzx	 ecx, BYTE PTR [eax+82]
  0018c	51		 push	 ecx
  0018d	6a 1e		 push	 30			; 0000001eH
  0018f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00192	52		 push	 edx
  00193	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 128  : 			pack_int_value (en, INT_TYPE_COLOUR_ALPHA, raw->colour_alpha);

  00198	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  0019b	0f b6 48 53	 movzx	 ecx, BYTE PTR [eax+83]
  0019f	51		 push	 ecx
  001a0	6a 1d		 push	 29			; 0000001dH
  001a2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001a5	52		 push	 edx
  001a6	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 129  : 
; 130  : 			pack_int_value (en, INT_TYPE_ADDITIVE, raw->additive);

  001ab	8b 45 fc	 mov	 eax, DWORD PTR _raw$1[ebp]
  001ae	8a 48 54	 mov	 cl, BYTE PTR [eax+84]
  001b1	80 e1 01	 and	 cl, 1
  001b4	0f b6 d1	 movzx	 edx, cl
  001b7	52		 push	 edx
  001b8	6a 00		 push	 0
  001ba	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001bd	50		 push	 eax
  001be	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN2@pack_local:

; 131  : 
; 132  : 			// sector_link linked later
; 133  : 
; 134  : 			break;
; 135  : 		}
; 136  : 		////////////////////////////////////////
; 137  : 		case PACK_MODE_BROWSE_SESSION:
; 138  : 		////////////////////////////////////////
; 139  : 		{
; 140  : 			break;
; 141  : 		}
; 142  : 		////////////////////////////////////////
; 143  : 		case PACK_MODE_UPDATE_ENTITY:
; 144  : 		////////////////////////////////////////
; 145  : 		{
; 146  : 			break;
; 147  : 		}
; 148  : 	}
; 149  : }

  001c3	5f		 pop	 edi
  001c4	5e		 pop	 esi
  001c5	5b		 pop	 ebx
  001c6	8b e5		 mov	 esp, ebp
  001c8	5d		 pop	 ebp
  001c9	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\sprite\sp_pack.c
;	COMDAT ?overload_sprite_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_sprite_pack_functions@@YGXXZ PROC		; overload_sprite_pack_functions, COMDAT

; 265  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 266  : 	fn_pack_local_entity_data[ENTITY_TYPE_SPRITE]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 21	 imul	 ecx, eax, 33
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[ecx], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 267  : 
; 268  : 	fn_unpack_local_entity_data[ENTITY_TYPE_SPRITE]		= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	6b c8 21	 imul	 ecx, eax, 33
  00023	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[ecx], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 269  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_sprite_pack_functions@@YGXXZ ENDP		; overload_sprite_pack_functions
_TEXT	ENDS
END
