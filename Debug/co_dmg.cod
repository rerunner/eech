; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A ; dynamics_damage_database
PUBLIC	??_C@_04OHJIHAFH@None@				; `string'
PUBLIC	??_C@_0L@KKMKCFKL@Main?5rotor@			; `string'
PUBLIC	??_C@_0L@DNFENIJI@Tail?5rotor@			; `string'
PUBLIC	??_C@_0M@MEIPBKFH@Left?5engine@			; `string'
PUBLIC	??_C@_0N@BPMPDNBK@Right?5engine@		; `string'
PUBLIC	??_C@_0BB@OIGHPGFJ@Left?5engine?5fire@		; `string'
PUBLIC	??_C@_0BC@GHLHGMDC@Right?5engine?5fire@		; `string'
PUBLIC	??_C@_0BI@OGNLNHPK@Low?5Hydraulics?5pressure@	; `string'
PUBLIC	??_C@_0L@IMPFCMBD@Stabiliser@			; `string'
PUBLIC	??_C@_09HJHCGFIK@Fuel?5leak@			; `string'
PUBLIC	??_C@_0BB@HHLFLKJB@Low?5oil?5pressure@		; `string'
PUBLIC	??_C@_0BC@MNGJEHOG@High?5oil?5pressure@		; `string'
PUBLIC	??_C@_08HDADPOFC@Avionics@			; `string'
PUBLIC	??_C@_0BC@PHGBOEPB@Fire?5Extinguisher@		; `string'
PUBLIC	??_C@_0O@IHIKHKBP@Undercarriage@		; `string'
PUBLIC	??_C@_03FGGDJIBK@APU@				; `string'
PUBLIC	??_C@_0BB@LFGIPGHE@Main?5rotor?5blade@		; `string'
PUBLIC	??_C@_0BE@GELEHDFF@Secondary?5hydralics@	; `string'
;	COMDAT ??_C@_0BE@GELEHDFF@Secondary?5hydralics@
CONST	SEGMENT
??_C@_0BE@GELEHDFF@Secondary?5hydralics@ DB 'Secondary hydralics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LFGIPGHE@Main?5rotor?5blade@
CONST	SEGMENT
??_C@_0BB@LFGIPGHE@Main?5rotor?5blade@ DB 'Main rotor blade', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FGGDJIBK@APU@
CONST	SEGMENT
??_C@_03FGGDJIBK@APU@ DB 'APU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IHIKHKBP@Undercarriage@
CONST	SEGMENT
??_C@_0O@IHIKHKBP@Undercarriage@ DB 'Undercarriage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PHGBOEPB@Fire?5Extinguisher@
CONST	SEGMENT
??_C@_0BC@PHGBOEPB@Fire?5Extinguisher@ DB 'Fire Extinguisher', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HDADPOFC@Avionics@
CONST	SEGMENT
??_C@_08HDADPOFC@Avionics@ DB 'Avionics', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MNGJEHOG@High?5oil?5pressure@
CONST	SEGMENT
??_C@_0BC@MNGJEHOG@High?5oil?5pressure@ DB 'High oil pressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HHLFLKJB@Low?5oil?5pressure@
CONST	SEGMENT
??_C@_0BB@HHLFLKJB@Low?5oil?5pressure@ DB 'Low oil pressure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJHCGFIK@Fuel?5leak@
CONST	SEGMENT
??_C@_09HJHCGFIK@Fuel?5leak@ DB 'Fuel leak', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMPFCMBD@Stabiliser@
CONST	SEGMENT
??_C@_0L@IMPFCMBD@Stabiliser@ DB 'Stabiliser', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OGNLNHPK@Low?5Hydraulics?5pressure@
CONST	SEGMENT
??_C@_0BI@OGNLNHPK@Low?5Hydraulics?5pressure@ DB 'Low Hydraulics pressure'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GHLHGMDC@Right?5engine?5fire@
CONST	SEGMENT
??_C@_0BC@GHLHGMDC@Right?5engine?5fire@ DB 'Right engine fire', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OIGHPGFJ@Left?5engine?5fire@
CONST	SEGMENT
??_C@_0BB@OIGHPGFJ@Left?5engine?5fire@ DB 'Left engine fire', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPMPDNBK@Right?5engine@
CONST	SEGMENT
??_C@_0N@BPMPDNBK@Right?5engine@ DB 'Right engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MEIPBKFH@Left?5engine@
CONST	SEGMENT
??_C@_0M@MEIPBKFH@Left?5engine@ DB 'Left engine', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DNFENIJI@Tail?5rotor@
CONST	SEGMENT
??_C@_0L@DNFENIJI@Tail?5rotor@ DB 'Tail rotor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KKMKCFKL@Main?5rotor@
CONST	SEGMENT
??_C@_0L@KKMKCFKL@Main?5rotor@ DB 'Main rotor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04OHJIHAFH@None@
CONST	SEGMENT
??_C@_04OHJIHAFH@None@ DB 'None', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A DD FLAT:??_C@_04OHJIHAFH@None@ ; dynamics_damage_database
	DD	01H
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0L@KKMKCFKL@Main?5rotor@
	DD	02H
	DD	03e4ccccdr			; 0.2
	DD	03f4ccccdr			; 0.8
	DD	042700000r			; 60
	DD	01H
	DD	00H
	DD	FLAT:??_C@_0L@DNFENIJI@Tail?5rotor@
	DD	04H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	042480000r			; 50
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0M@MEIPBKFH@Left?5engine@
	DD	08H
	DD	03ecccccdr			; 0.4
	DD	03dcccccdr			; 0.1
	DD	041f00000r			; 30
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0N@BPMPDNBK@Right?5engine@
	DD	010H
	DD	03ecccccdr			; 0.4
	DD	03dcccccdr			; 0.1
	DD	041f00000r			; 30
	DD	01H
	DD	01H
	DD	FLAT:??_C@_0BB@OIGHPGFJ@Left?5engine?5fire@
	DD	020H
	DD	03f19999ar			; 0.6
	DD	03e99999ar			; 0.3
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BC@GHLHGMDC@Right?5engine?5fire@
	DD	040H
	DD	03f19999ar			; 0.6
	DD	03e99999ar			; 0.3
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BI@OGNLNHPK@Low?5Hydraulics?5pressure@
	DD	080H
	DD	03f333333r			; 0.7
	DD	03e99999ar			; 0.3
	DD	041a00000r			; 20
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0L@IMPFCMBD@Stabiliser@
	DD	0100H
	DD	03f400000r			; 0.75
	DD	03e99999ar			; 0.3
	DD	041a00000r			; 20
	DD	00H
	DD	01H
	DD	FLAT:??_C@_09HJHCGFIK@Fuel?5leak@
	DD	0200H
	DD	03f19999ar			; 0.6
	DD	03dcccccdr			; 0.1
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BB@HHLFLKJB@Low?5oil?5pressure@
	DD	0400H
	DD	03f4ccccdr			; 0.8
	DD	03dcccccdr			; 0.1
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BC@MNGJEHOG@High?5oil?5pressure@
	DD	0800H
	DD	03f666666r			; 0.9
	DD	03dcccccdr			; 0.1
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_08HDADPOFC@Avionics@
	DD	01000H
	DD	03f333333r			; 0.7
	DD	03dcccccdr			; 0.1
	DD	041a00000r			; 20
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BC@PHGBOEPB@Fire?5Extinguisher@
	DD	02000H
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040a00000r			; 5
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0O@IHIKHKBP@Undercarriage@
	DD	04000H
	DD	03f19999ar			; 0.6
	DD	03dcccccdr			; 0.1
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_03FGGDJIBK@APU@
	DD	08000H
	DD	000000000r			; 0
	DD	03dcccccdr			; 0.1
	DD	041200000r			; 10
	DD	00H
	DD	01H
	DD	FLAT:??_C@_0BB@LFGIPGHE@Main?5rotor?5blade@
	DD	010000H
	DD	03dcccccdr			; 0.1
	DD	03e4ccccdr			; 0.2
	DD	041200000r			; 10
	DD	00H
	DD	00H
	DD	FLAT:??_C@_0BE@GELEHDFF@Secondary?5hydralics@
	DD	020000H
	DD	03d4ccccdr			; 0.05
	DD	03d4ccccdr			; 0.05
	DD	041200000r			; 10
	DD	00H
	DD	01H
_DATA	ENDS
PUBLIC	?dynamics_damage_model@@YGXIH@Z			; dynamics_damage_model
PUBLIC	?get_current_dynamics_fatal_damage@@YGHXZ	; get_current_dynamics_fatal_damage
PUBLIC	?update_dynamics_at_keysite@@YGXXZ		; update_dynamics_at_keysite
PUBLIC	?update_dynamics_damage@@YGXXZ			; update_dynamics_damage
PUBLIC	?dynamics_restore_damage_values@@YGXXZ		; dynamics_restore_damage_values
PUBLIC	?get_dynamics_damage_currently_repairing_type@@YGHXZ ; get_dynamics_damage_currently_repairing_type
PUBLIC	?repair_damage_model@@YGXI@Z			; repair_damage_model
PUBLIC	?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z ; damage_entity_to_flight_model
PUBLIC	?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z ; damage_helicopter_via_damage_level
PUBLIC	?set_current_dynamics_options@@YGXW4DYNAMICS_OPTIONS_TYPES@@H@Z ; set_current_dynamics_options
PUBLIC	?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ; get_current_dynamics_options
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA ; `dynamics_damage_model'::`1'::__LINE__Var
PUBLIC	??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0BM@GOBALMLG@DYNAMICS?3?5main?5rotor?5damage@ ; `string'
PUBLIC	??_C@_0BM@BADGEJNC@DYNAMICS?3?5tail?5rotor?5damage@ ; `string'
PUBLIC	??_C@_0BN@LNMFKBOO@DYNAMICS?3?5left?5engine?5damage@ ; `string'
PUBLIC	??_C@_0DG@MLEDAHML@DYNAMICS?3?5rotor?5disengage?5due?5t@ ; `string'
PUBLIC	??_C@_0BO@MBANGMJO@DYNAMICS?3?5right?5engine?5damage@ ; `string'
PUBLIC	??_C@_0CC@IICAAKFB@DYNAMICS?3?5left?5engine?5fire?5dama@ ; `string'
PUBLIC	??_C@_0CD@OJODCNEH@DYNAMICS?3?5right?5engine?5fire?5dam@ ; `string'
PUBLIC	??_C@_0CA@IEGHJHJE@DYNAMICS?3?5LOW?5HYDRAULICS?5damage@ ; `string'
PUBLIC	??_C@_0CG@OKIGLONE@DYNAMICS?3?5SECONDARY?5HYDRAULICS?5@ ; `string'
PUBLIC	??_C@_0BM@DNKJBKFE@DYNAMICS?3?5STABILISER?5damage@ ; `string'
PUBLIC	??_C@_0BL@CCHLJAL@DYNAMICS?3?5FUEL_LEAK?5damage@ ; `string'
PUBLIC	??_C@_0CC@HIMDJJLA@DYNAMICS?3?5LOW_OIL_PRESSURE?5dama@ ; `string'
PUBLIC	??_C@_0CD@BOKENMLA@DYNAMICS?3?5HIGH_OIL_PRESSURE?5dam@ ; `string'
PUBLIC	??_C@_0BK@LBBONMCH@DYNAMICS?3?5AVIONICS?5damage@ ; `string'
PUBLIC	??_C@_0CD@BKNKNBOD@DYNAMICS?3?5FIRE_EXTINGUISHER?5dam@ ; `string'
PUBLIC	??_C@_0BP@BKLNGAPL@DYNAMICS?3?5UNDERCARRIAGE?5damage@ ; `string'
PUBLIC	??_C@_0BF@IENHMLGL@DYNAMICS?3?5APU?5damage@	; `string'
PUBLIC	??_C@_0CD@HNBJLMGE@DYNAMICS?3?5MAIN?5ROTOR?5BLADE?5dama@ ; `string'
PUBLIC	??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@ ; `string'
PUBLIC	??_C@_0BJ@BAHMCMBF@DYNAMICS?3?5unknown?5option@	; `string'
PUBLIC	?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA ; `update_dynamics_at_keysite'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@LOOOGMEN@DYNAMICS?3?5can?8t?5refuel?5till?5lea@ ; `string'
PUBLIC	?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA ; `repair_damage_model'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA ; `damage_entity_to_flight_model'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA ; `damage_helicopter_via_damage_level'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f10000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fa999999999999a
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3fe999999999999a
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@3fee3d70a3d70a3d
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@4032e66666666666
PUBLIC	__real@bfb999999999999a
PUBLIC	__real@c2c80000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_connection_list_head@@YGPAUCONNECTION_LIST_TYPE@@XZ:PROC ; get_connection_list_head
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z:PROC ; restore_helicopter_entity
EXTRN	?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z:PROC ; restore_helicopter_main_rotors
EXTRN	?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z:PROC ; restore_helicopter_tail_rotors
EXTRN	?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z:PROC ; play_client_server_cpg_message
EXTRN	?play_client_server_warning_message@@YGHPAUENTITY@@H@Z:PROC ; play_client_server_warning_message
EXTRN	?notify_avionics_of_dynamics_fault@@YGXI@Z:PROC	; notify_avionics_of_dynamics_fault
EXTRN	?fully_repair_local_entity_avionics@@YGXPAUENTITY@@@Z:PROC ; fully_repair_local_entity_avionics
EXTRN	?partially_repair_local_entity_avionics@@YGXPAUENTITY@@@Z:PROC ; partially_repair_local_entity_avionics
EXTRN	?damage_primary_hydralics_only@@YGXXZ:PROC	; damage_primary_hydralics_only
EXTRN	?damage_hydraulics@@YGXH@Z:PROC			; damage_hydraulics
EXTRN	?set_current_flight_dynamics_auto_pilot@@YGXH@Z:PROC ; set_current_flight_dynamics_auto_pilot
EXTRN	?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ:PROC ; get_keysite_currently_landed_at
EXTRN	?ah64a_restore_damage_values@@YGXXZ:PROC	; ah64a_restore_damage_values
EXTRN	?apache_restore_damage_values@@YGXXZ:PROC	; apache_restore_damage_values
EXTRN	?blackhawk_restore_damage_values@@YGXXZ:PROC	; blackhawk_restore_damage_values
EXTRN	?comanche_restore_damage_values@@YGXXZ:PROC	; comanche_restore_damage_values
EXTRN	?havoc_restore_damage_values@@YGXXZ:PROC	; havoc_restore_damage_values
EXTRN	?hokum_restore_damage_values@@YGXXZ:PROC	; hokum_restore_damage_values
EXTRN	?hind_restore_damage_values@@YGXXZ:PROC		; hind_restore_damage_values
EXTRN	?ka50_restore_damage_values@@YGXXZ:PROC		; ka50_restore_damage_values
EXTRN	?viper_restore_damage_values@@YGXXZ:PROC	; viper_restore_damage_values
EXTRN	?kiowa_restore_damage_values@@YGXXZ:PROC	; kiowa_restore_damage_values
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?fire_extinguisher_used@@3HA:DWORD		; fire_extinguisher_used
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	__fltused:DWORD
;	COMDAT __real@c2c80000
CONST	SEGMENT
__real@c2c80000 DD 0c2c80000r			; -100
CONST	ENDS
;	COMDAT __real@bfb999999999999a
CONST	SEGMENT
__real@bfb999999999999a DQ 0bfb999999999999ar	; -0.1
CONST	ENDS
;	COMDAT __real@4032e66666666666
CONST	SEGMENT
__real@4032e66666666666 DQ 04032e66666666666r	; 18.9
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fee3d70a3d70a3d
CONST	SEGMENT
__real@3fee3d70a3d70a3d DQ 03fee3d70a3d70a3dr	; 0.945
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3fe999999999999a
CONST	SEGMENT
__real@3fe999999999999a DQ 03fe999999999999ar	; 0.8
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fa999999999999a
CONST	SEGMENT
__real@3fa999999999999a DQ 03fa999999999999ar	; 0.05
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f10000000000000
CONST	SEGMENT
__real@3f10000000000000 DQ 03f10000000000000r	; 6.10352e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@
CONST	SEGMENT
??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@ DB 'get_local_en'
	DB	'tity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA DD 0859H ; `damage_helicopter_via_damage_level'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA DD 0745H ; `damage_entity_to_flight_model'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA DD 05d2H ; `repair_damage_model'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CK@LOOOGMEN@DYNAMICS?3?5can?8t?5refuel?5till?5lea@
CONST	SEGMENT
??_C@_0CK@LOOOGMEN@DYNAMICS?3?5can?8t?5refuel?5till?5lea@ DB 'DYNAMICS: c'
	DB	'an''t refuel till leak is fixed', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA DD 043aH ; `update_dynamics_at_keysite'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BJ@BAHMCMBF@DYNAMICS?3?5unknown?5option@
CONST	SEGMENT
??_C@_0BJ@BAHMCMBF@DYNAMICS?3?5unknown?5option@ DB 'DYNAMICS: unknown opt'
	DB	'ion', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@
CONST	SEGMENT
??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@ DB 'DYNAMICS: unkn'
	DB	'own damage %d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HNBJLMGE@DYNAMICS?3?5MAIN?5ROTOR?5BLADE?5dama@
CONST	SEGMENT
??_C@_0CD@HNBJLMGE@DYNAMICS?3?5MAIN?5ROTOR?5BLADE?5dama@ DB 'DYNAMICS: MA'
	DB	'IN ROTOR BLADE damaged', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IENHMLGL@DYNAMICS?3?5APU?5damage@
CONST	SEGMENT
??_C@_0BF@IENHMLGL@DYNAMICS?3?5APU?5damage@ DB 'DYNAMICS: APU damage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@BKLNGAPL@DYNAMICS?3?5UNDERCARRIAGE?5damage@
CONST	SEGMENT
??_C@_0BP@BKLNGAPL@DYNAMICS?3?5UNDERCARRIAGE?5damage@ DB 'DYNAMICS: UNDER'
	DB	'CARRIAGE damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BKNKNBOD@DYNAMICS?3?5FIRE_EXTINGUISHER?5dam@
CONST	SEGMENT
??_C@_0CD@BKNKNBOD@DYNAMICS?3?5FIRE_EXTINGUISHER?5dam@ DB 'DYNAMICS: FIRE'
	DB	'_EXTINGUISHER damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@LBBONMCH@DYNAMICS?3?5AVIONICS?5damage@
CONST	SEGMENT
??_C@_0BK@LBBONMCH@DYNAMICS?3?5AVIONICS?5damage@ DB 'DYNAMICS: AVIONICS d'
	DB	'amage', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BOKENMLA@DYNAMICS?3?5HIGH_OIL_PRESSURE?5dam@
CONST	SEGMENT
??_C@_0CD@BOKENMLA@DYNAMICS?3?5HIGH_OIL_PRESSURE?5dam@ DB 'DYNAMICS: HIGH'
	DB	'_OIL_PRESSURE damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HIMDJJLA@DYNAMICS?3?5LOW_OIL_PRESSURE?5dama@
CONST	SEGMENT
??_C@_0CC@HIMDJJLA@DYNAMICS?3?5LOW_OIL_PRESSURE?5dama@ DB 'DYNAMICS: LOW_'
	DB	'OIL_PRESSURE damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@CCHLJAL@DYNAMICS?3?5FUEL_LEAK?5damage@
CONST	SEGMENT
??_C@_0BL@CCHLJAL@DYNAMICS?3?5FUEL_LEAK?5damage@ DB 'DYNAMICS: FUEL_LEAK '
	DB	'damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@DNKJBKFE@DYNAMICS?3?5STABILISER?5damage@
CONST	SEGMENT
??_C@_0BM@DNKJBKFE@DYNAMICS?3?5STABILISER?5damage@ DB 'DYNAMICS: STABILIS'
	DB	'ER damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@OKIGLONE@DYNAMICS?3?5SECONDARY?5HYDRAULICS?5@
CONST	SEGMENT
??_C@_0CG@OKIGLONE@DYNAMICS?3?5SECONDARY?5HYDRAULICS?5@ DB 'DYNAMICS: SEC'
	DB	'ONDARY HYDRAULICS damage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IEGHJHJE@DYNAMICS?3?5LOW?5HYDRAULICS?5damage@
CONST	SEGMENT
??_C@_0CA@IEGHJHJE@DYNAMICS?3?5LOW?5HYDRAULICS?5damage@ DB 'DYNAMICS: LOW'
	DB	' HYDRAULICS damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OJODCNEH@DYNAMICS?3?5right?5engine?5fire?5dam@
CONST	SEGMENT
??_C@_0CD@OJODCNEH@DYNAMICS?3?5right?5engine?5fire?5dam@ DB 'DYNAMICS: ri'
	DB	'ght engine fire damage', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IICAAKFB@DYNAMICS?3?5left?5engine?5fire?5dama@
CONST	SEGMENT
??_C@_0CC@IICAAKFB@DYNAMICS?3?5left?5engine?5fire?5dama@ DB 'DYNAMICS: le'
	DB	'ft engine fire damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@MBANGMJO@DYNAMICS?3?5right?5engine?5damage@
CONST	SEGMENT
??_C@_0BO@MBANGMJO@DYNAMICS?3?5right?5engine?5damage@ DB 'DYNAMICS: right'
	DB	' engine damage', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MLEDAHML@DYNAMICS?3?5rotor?5disengage?5due?5t@
CONST	SEGMENT
??_C@_0DG@MLEDAHML@DYNAMICS?3?5rotor?5disengage?5due?5t@ DB 'DYNAMICS: ro'
	DB	'tor disengage due to both engines failure', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@LNMFKBOO@DYNAMICS?3?5left?5engine?5damage@
CONST	SEGMENT
??_C@_0BN@LNMFKBOO@DYNAMICS?3?5left?5engine?5damage@ DB 'DYNAMICS: left e'
	DB	'ngine damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BADGEJNC@DYNAMICS?3?5tail?5rotor?5damage@
CONST	SEGMENT
??_C@_0BM@BADGEJNC@DYNAMICS?3?5tail?5rotor?5damage@ DB 'DYNAMICS: tail ro'
	DB	'tor damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GOBALMLG@DYNAMICS?3?5main?5rotor?5damage@
CONST	SEGMENT
??_C@_0BM@GOBALMLG@DYNAMICS?3?5main?5rotor?5damage@ DB 'DYNAMICS: main ro'
	DB	'tor damage', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\gunships\dynamics\common\co_'
	DB	'dmg.c', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA DD 0103H ; `dynamics_damage_model'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z
_TEXT	SEGMENT
tv65 = -72						; size = 4
_flag$ = -4						; size = 4
_option$ = 8						; size = 4
?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z PROC ; get_current_dynamics_options, COMDAT

; 909  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 910  : 
; 911  : 	int
; 912  : 		flag;
; 913  : 
; 914  : 	if (!current_flight_dynamics)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00010	75 07		 jne	 SHORT $LN4@get_curren

; 915  : 	{
; 916  : 
; 917  : 		return FALSE;

  00012	33 c0		 xor	 eax, eax
  00014	e9 59 01 00 00	 jmp	 $LN1@get_curren
$LN4@get_curren:

; 918  : 	}
; 919  : 
; 920  : 	switch (option)

  00019	8b 45 08	 mov	 eax, DWORD PTR _option$[ebp]
  0001c	89 45 b8	 mov	 DWORD PTR tv65[ebp], eax
  0001f	83 7d b8 0c	 cmp	 DWORD PTR tv65[ebp], 12	; 0000000cH
  00023	0f 87 39 01 00
	00		 ja	 $LN18@get_curren
  00029	8b 4d b8	 mov	 ecx, DWORD PTR tv65[ebp]
  0002c	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@get_curren[ecx*4]
$LN5@get_curren:

; 921  : 	{
; 922  : 
; 923  : 		case 	DYNAMICS_OPTIONS_CROSS_COUPLING:
; 924  : 		{
; 925  : 
; 926  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_cross_coupling);

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00038	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  0003e	83 e1 01	 and	 ecx, 1
  00041	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 927  : 
; 928  : 			break;

  00044	e9 26 01 00 00	 jmp	 $LN2@get_curren
$LN6@get_curren:

; 929  : 		}
; 930  : 		case 	DYNAMICS_OPTIONS_DAMAGE:
; 931  : 		{
; 932  : 
; 933  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_damage);

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0004e	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  00054	d1 e9		 shr	 ecx, 1
  00056	83 e1 01	 and	 ecx, 1
  00059	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 934  : 
; 935  : 			break;

  0005c	e9 0e 01 00 00	 jmp	 $LN2@get_curren
$LN7@get_curren:

; 936  : 		}
; 937  : 		case 	DYNAMICS_OPTIONS_DRAW_FLIGHT_PATH:
; 938  : 		{
; 939  : 
; 940  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_draw_flight_path);

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00066	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  0006c	c1 e9 02	 shr	 ecx, 2
  0006f	83 e1 01	 and	 ecx, 1
  00072	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 941  : 
; 942  : 			break;

  00075	e9 f5 00 00 00	 jmp	 $LN2@get_curren
$LN8@get_curren:

; 943  : 		}
; 944  : 		case 	DYNAMICS_OPTIONS_GROUND_COLLISIONS:
; 945  : 		{
; 946  : 
; 947  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_ground_collisions);

  0007a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0007f	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  00085	c1 e9 03	 shr	 ecx, 3
  00088	83 e1 01	 and	 ecx, 1
  0008b	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 948  : 
; 949  : 			break;

  0008e	e9 dc 00 00 00	 jmp	 $LN2@get_curren
$LN9@get_curren:

; 950  : 		}
; 951  : 		case 	DYNAMICS_OPTIONS_GROUND_EFFECT:
; 952  : 		{
; 953  : 
; 954  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_ground_effect);

  00093	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00098	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  0009e	c1 e9 04	 shr	 ecx, 4
  000a1	83 e1 01	 and	 ecx, 1
  000a4	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 955  : 
; 956  : 			break;

  000a7	e9 c3 00 00 00	 jmp	 $LN2@get_curren
$LN10@get_curren:

; 957  : 		}
; 958  : 		case 	DYNAMICS_OPTIONS_KEYBOARD_ASSISTANCE:
; 959  : 		{
; 960  : 
; 961  : 			flag = current_flight_dynamics->dynamics_options.dynamics_options_keyboard_assistance;

  000ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000b1	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  000b7	c1 e9 05	 shr	 ecx, 5
  000ba	83 e1 01	 and	 ecx, 1
  000bd	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 962  : 
; 963  : 			break;

  000c0	e9 aa 00 00 00	 jmp	 $LN2@get_curren
$LN11@get_curren:

; 964  : 		}
; 965  : 		case 	DYNAMICS_OPTIONS_OBJECT_COLLISIONS:
; 966  : 		{
; 967  : 
; 968  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_object_collisions);

  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ca	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  000d0	c1 e9 06	 shr	 ecx, 6
  000d3	83 e1 01	 and	 ecx, 1
  000d6	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 969  : 
; 970  : 			break;

  000d9	e9 91 00 00 00	 jmp	 $LN2@get_curren
$LN12@get_curren:

; 971  : 		}
; 972  : 		case 	DYNAMICS_OPTIONS_OVER_TORQUE:
; 973  : 		{
; 974  : 
; 975  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_over_torque);

  000de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000e3	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  000e9	c1 e9 07	 shr	 ecx, 7
  000ec	83 e1 01	 and	 ecx, 1
  000ef	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 976  : 
; 977  : 			break;

  000f2	eb 7b		 jmp	 SHORT $LN2@get_curren
$LN13@get_curren:

; 978  : 		}
; 979  : 		case 	DYNAMICS_OPTIONS_RETREATING_BLADE_STALL:
; 980  : 		{
; 981  : 
; 982  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_retreating_blade_stall);

  000f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f9	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  000ff	c1 e9 08	 shr	 ecx, 8
  00102	83 e1 01	 and	 ecx, 1
  00105	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 983  : 
; 984  : 			break;

  00108	eb 65		 jmp	 SHORT $LN2@get_curren
$LN14@get_curren:

; 985  : 		}
; 986  : 		case 	DYNAMICS_OPTIONS_REVERSE_THROTTLE_INPUT:
; 987  : 		{
; 988  : 
; 989  : 			flag = current_flight_dynamics->dynamics_options.dynamics_options_reverse_throttle_input;

  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0010f	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  00115	c1 e9 09	 shr	 ecx, 9
  00118	83 e1 01	 and	 ecx, 1
  0011b	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 990  : 
; 991  : 			break;

  0011e	eb 4f		 jmp	 SHORT $LN2@get_curren
$LN15@get_curren:

; 992  : 		}
; 993  : 		case DYNAMICS_OPTIONS_TRANSITIONAL_LIFT:
; 994  : 		{
; 995  : 
; 996  : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_transitional_lift);

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00125	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  0012b	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0012e	83 e1 01	 and	 ecx, 1
  00131	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 997  : 
; 998  : 			break;

  00134	eb 39		 jmp	 SHORT $LN2@get_curren
$LN16@get_curren:

; 999  : 		}
; 1000 : 		case 	DYNAMICS_OPTIONS_VORTEX_RING:
; 1001 : 		{
; 1002 : 
; 1003 : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_vortex_ring);

  00136	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013b	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  00141	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00144	83 e1 01	 and	 ecx, 1
  00147	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 1004 : 
; 1005 : 			break;

  0014a	eb 23		 jmp	 SHORT $LN2@get_curren
$LN17@get_curren:

; 1006 : 		}
; 1007 : 		case DYNAMICS_OPTIONS_WIND:
; 1008 : 		{
; 1009 : 
; 1010 : 			flag = (current_flight_dynamics->dynamics_options.dynamics_options_wind);

  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00151	8b 88 14 25 00
	00		 mov	 ecx, DWORD PTR [eax+9492]
  00157	c1 e9 0c	 shr	 ecx, 12			; 0000000cH
  0015a	83 e1 01	 and	 ecx, 1
  0015d	89 4d fc	 mov	 DWORD PTR _flag$[ebp], ecx

; 1011 : 
; 1012 : 			break;

  00160	eb 0d		 jmp	 SHORT $LN2@get_curren
$LN18@get_curren:

; 1013 : 		}
; 1014 : 		default:
; 1015 : 		{
; 1016 : 
; 1017 : 			debug_fatal ("DYNAMICS: unknown option");

  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BAHMCMBF@DYNAMICS?3?5unknown?5option@
  00167	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0016c	83 c4 04	 add	 esp, 4
$LN2@get_curren:

; 1018 : 		}
; 1019 : 
; 1020 : 	}
; 1021 : 
; 1022 : 	return flag;

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _flag$[ebp]
$LN1@get_curren:

; 1023 : }

  00172	5f		 pop	 edi
  00173	5e		 pop	 esi
  00174	5b		 pop	 ebx
  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c2 04 00	 ret	 4
  0017b	90		 npad	 1
$LN20@get_curren:
  0017c	00 00 00 00	 DD	 $LN5@get_curren
  00180	00 00 00 00	 DD	 $LN6@get_curren
  00184	00 00 00 00	 DD	 $LN7@get_curren
  00188	00 00 00 00	 DD	 $LN8@get_curren
  0018c	00 00 00 00	 DD	 $LN9@get_curren
  00190	00 00 00 00	 DD	 $LN10@get_curren
  00194	00 00 00 00	 DD	 $LN11@get_curren
  00198	00 00 00 00	 DD	 $LN12@get_curren
  0019c	00 00 00 00	 DD	 $LN13@get_curren
  001a0	00 00 00 00	 DD	 $LN14@get_curren
  001a4	00 00 00 00	 DD	 $LN15@get_curren
  001a8	00 00 00 00	 DD	 $LN16@get_curren
  001ac	00 00 00 00	 DD	 $LN17@get_curren
?get_current_dynamics_options@@YGHW4DYNAMICS_OPTIONS_TYPES@@@Z ENDP ; get_current_dynamics_options
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?set_current_dynamics_options@@YGXW4DYNAMICS_OPTIONS_TYPES@@H@Z
_TEXT	SEGMENT
tv65 = -68						; size = 4
_option$ = 8						; size = 4
_flag$ = 12						; size = 4
?set_current_dynamics_options@@YGXW4DYNAMICS_OPTIONS_TYPES@@H@Z PROC ; set_current_dynamics_options, COMDAT

; 794  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 795  : 
; 796  : 	if (!current_flight_dynamics)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00010	75 05		 jne	 SHORT $LN4@set_curren

; 797  : 	{
; 798  : 
; 799  : 		return;

  00012	e9 4e 02 00 00	 jmp	 $LN1@set_curren
$LN4@set_curren:

; 800  : 	}
; 801  : 
; 802  : 	switch (option)

  00017	8b 45 08	 mov	 eax, DWORD PTR _option$[ebp]
  0001a	89 45 bc	 mov	 DWORD PTR tv65[ebp], eax
  0001d	83 7d bc 0c	 cmp	 DWORD PTR tv65[ebp], 12	; 0000000cH
  00021	0f 87 31 02 00
	00		 ja	 $LN18@set_curren
  00027	8b 4d bc	 mov	 ecx, DWORD PTR tv65[ebp]
  0002a	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN20@set_curren[ecx*4]
$LN5@set_curren:

; 803  : 	{
; 804  : 
; 805  : 		case 	DYNAMICS_OPTIONS_CROSS_COUPLING:
; 806  : 		{
; 807  : 
; 808  : 			current_flight_dynamics->dynamics_options.dynamics_options_cross_coupling = flag;

  00031	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00034	83 e0 01	 and	 eax, 1
  00037	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003d	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00043	83 e2 fe	 and	 edx, -2			; fffffffeH
  00046	0b d0		 or	 edx, eax
  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0004d	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 809  : 
; 810  : 			break;

  00053	e9 0d 02 00 00	 jmp	 $LN1@set_curren
$LN6@set_curren:

; 811  : 		}
; 812  : 		case 	DYNAMICS_OPTIONS_DAMAGE:
; 813  : 		{
; 814  : 
; 815  : 			current_flight_dynamics->dynamics_options.dynamics_options_damage = flag;

  00058	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  0005b	83 e0 01	 and	 eax, 1
  0005e	d1 e0		 shl	 eax, 1
  00060	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00066	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  0006c	83 e2 fd	 and	 edx, -3			; fffffffdH
  0006f	0b d0		 or	 edx, eax
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00076	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 816  : 
; 817  : 			break;

  0007c	e9 e4 01 00 00	 jmp	 $LN1@set_curren
$LN7@set_curren:

; 818  : 		}
; 819  : 		case 	DYNAMICS_OPTIONS_DRAW_FLIGHT_PATH:
; 820  : 		{
; 821  : 
; 822  : 			current_flight_dynamics->dynamics_options.dynamics_options_draw_flight_path = flag;

  00081	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00084	83 e0 01	 and	 eax, 1
  00087	c1 e0 02	 shl	 eax, 2
  0008a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00090	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00096	83 e2 fb	 and	 edx, -5			; fffffffbH
  00099	0b d0		 or	 edx, eax
  0009b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a0	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 823  : 
; 824  : 			break;

  000a6	e9 ba 01 00 00	 jmp	 $LN1@set_curren
$LN8@set_curren:

; 825  : 		}
; 826  : 		case 	DYNAMICS_OPTIONS_GROUND_COLLISIONS:
; 827  : 		{
; 828  : 
; 829  : 			current_flight_dynamics->dynamics_options.dynamics_options_ground_collisions = flag;

  000ab	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  000ae	83 e0 01	 and	 eax, 1
  000b1	c1 e0 03	 shl	 eax, 3
  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ba	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  000c0	83 e2 f7	 and	 edx, -9			; fffffff7H
  000c3	0b d0		 or	 edx, eax
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ca	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 830  : 
; 831  : 			break;

  000d0	e9 90 01 00 00	 jmp	 $LN1@set_curren
$LN9@set_curren:

; 832  : 		}
; 833  : 		case 	DYNAMICS_OPTIONS_GROUND_EFFECT:
; 834  : 		{
; 835  : 
; 836  : 			current_flight_dynamics->dynamics_options.dynamics_options_ground_effect = flag;

  000d5	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  000d8	83 e0 01	 and	 eax, 1
  000db	c1 e0 04	 shl	 eax, 4
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000e4	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  000ea	83 e2 ef	 and	 edx, -17		; ffffffefH
  000ed	0b d0		 or	 edx, eax
  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f4	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 837  : 
; 838  : 			break;

  000fa	e9 66 01 00 00	 jmp	 $LN1@set_curren
$LN10@set_curren:

; 839  : 		}
; 840  : 		case 	DYNAMICS_OPTIONS_KEYBOARD_ASSISTANCE:
; 841  : 		{
; 842  : 
; 843  : 			current_flight_dynamics->dynamics_options.dynamics_options_keyboard_assistance = flag;

  000ff	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00102	83 e0 01	 and	 eax, 1
  00105	c1 e0 05	 shl	 eax, 5
  00108	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0010e	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00114	83 e2 df	 and	 edx, -33		; ffffffdfH
  00117	0b d0		 or	 edx, eax
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0011e	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 844  : 
; 845  : 			break;

  00124	e9 3c 01 00 00	 jmp	 $LN1@set_curren
$LN11@set_curren:

; 846  : 		}
; 847  : 		case 	DYNAMICS_OPTIONS_OBJECT_COLLISIONS:
; 848  : 		{
; 849  : 
; 850  : 			current_flight_dynamics->dynamics_options.dynamics_options_object_collisions = flag;

  00129	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  0012c	83 e0 01	 and	 eax, 1
  0012f	c1 e0 06	 shl	 eax, 6
  00132	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00138	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  0013e	83 e2 bf	 and	 edx, -65		; ffffffbfH
  00141	0b d0		 or	 edx, eax
  00143	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00148	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 851  : 
; 852  : 			break;

  0014e	e9 12 01 00 00	 jmp	 $LN1@set_curren
$LN12@set_curren:

; 853  : 		}
; 854  : 		case 	DYNAMICS_OPTIONS_OVER_TORQUE:
; 855  : 		{
; 856  : 
; 857  : 			current_flight_dynamics->dynamics_options.dynamics_options_over_torque = flag;

  00153	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00156	83 e0 01	 and	 eax, 1
  00159	c1 e0 07	 shl	 eax, 7
  0015c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00162	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00168	81 e2 7f ff ff
	ff		 and	 edx, -129		; ffffff7fH
  0016e	0b d0		 or	 edx, eax
  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00175	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 858  : 
; 859  : 			break;

  0017b	e9 e5 00 00 00	 jmp	 $LN1@set_curren
$LN13@set_curren:

; 860  : 		}
; 861  : 		case 	DYNAMICS_OPTIONS_RETREATING_BLADE_STALL:
; 862  : 		{
; 863  : 
; 864  : 			current_flight_dynamics->dynamics_options.dynamics_options_retreating_blade_stall = flag;

  00180	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00183	83 e0 01	 and	 eax, 1
  00186	c1 e0 08	 shl	 eax, 8
  00189	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0018f	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00195	81 e2 ff fe ff
	ff		 and	 edx, -257		; fffffeffH
  0019b	0b d0		 or	 edx, eax
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001a2	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 865  : 
; 866  : 			break;

  001a8	e9 b8 00 00 00	 jmp	 $LN1@set_curren
$LN14@set_curren:

; 867  : 		}
; 868  : 		case 	DYNAMICS_OPTIONS_REVERSE_THROTTLE_INPUT:
; 869  : 		{
; 870  : 
; 871  : 			current_flight_dynamics->dynamics_options.dynamics_options_reverse_throttle_input = flag;

  001ad	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  001b0	83 e0 01	 and	 eax, 1
  001b3	c1 e0 09	 shl	 eax, 9
  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001bc	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  001c2	81 e2 ff fd ff
	ff		 and	 edx, -513		; fffffdffH
  001c8	0b d0		 or	 edx, eax
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001cf	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 872  : 
; 873  : 			break;

  001d5	e9 8b 00 00 00	 jmp	 $LN1@set_curren
$LN15@set_curren:

; 874  : 		}
; 875  : 		case DYNAMICS_OPTIONS_TRANSITIONAL_LIFT:
; 876  : 		{
; 877  : 
; 878  : 			current_flight_dynamics->dynamics_options.dynamics_options_transitional_lift = flag;

  001da	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  001dd	83 e0 01	 and	 eax, 1
  001e0	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  001e3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e9	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  001ef	81 e2 ff fb ff
	ff		 and	 edx, -1025		; fffffbffH
  001f5	0b d0		 or	 edx, eax
  001f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001fc	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 879  : 
; 880  : 			break;

  00202	eb 61		 jmp	 SHORT $LN1@set_curren
$LN16@set_curren:

; 881  : 		}
; 882  : 		case 	DYNAMICS_OPTIONS_VORTEX_RING:
; 883  : 		{
; 884  : 
; 885  : 			current_flight_dynamics->dynamics_options.dynamics_options_vortex_ring = flag;

  00204	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00207	83 e0 01	 and	 eax, 1
  0020a	c1 e0 0b	 shl	 eax, 11			; 0000000bH
  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00213	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00219	81 e2 ff f7 ff
	ff		 and	 edx, -2049		; fffff7ffH
  0021f	0b d0		 or	 edx, eax
  00221	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00226	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 886  : 
; 887  : 			break;

  0022c	eb 37		 jmp	 SHORT $LN1@set_curren
$LN17@set_curren:

; 888  : 		}
; 889  : 		case DYNAMICS_OPTIONS_WIND:
; 890  : 		{
; 891  : 
; 892  : 			current_flight_dynamics->dynamics_options.dynamics_options_wind = flag;

  0022e	8b 45 0c	 mov	 eax, DWORD PTR _flag$[ebp]
  00231	83 e0 01	 and	 eax, 1
  00234	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  00237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0023d	8b 91 14 25 00
	00		 mov	 edx, DWORD PTR [ecx+9492]
  00243	81 e2 ff ef ff
	ff		 and	 edx, -4097		; ffffefffH
  00249	0b d0		 or	 edx, eax
  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00250	89 90 14 25 00
	00		 mov	 DWORD PTR [eax+9492], edx

; 893  : 
; 894  : 			break;

  00256	eb 0d		 jmp	 SHORT $LN1@set_curren
$LN18@set_curren:

; 895  : 		}
; 896  : 		default:
; 897  : 		{
; 898  : 
; 899  : 			debug_fatal ("DYNAMICS: unknown option");

  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BAHMCMBF@DYNAMICS?3?5unknown?5option@
  0025d	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00262	83 c4 04	 add	 esp, 4
$LN1@set_curren:

; 900  : 		}
; 901  : 	}
; 902  : }

  00265	5f		 pop	 edi
  00266	5e		 pop	 esi
  00267	5b		 pop	 ebx
  00268	8b e5		 mov	 esp, ebp
  0026a	5d		 pop	 ebp
  0026b	c2 08 00	 ret	 8
  0026e	66 90		 npad	 2
$LN20@set_curren:
  00270	00 00 00 00	 DD	 $LN5@set_curren
  00274	00 00 00 00	 DD	 $LN6@set_curren
  00278	00 00 00 00	 DD	 $LN7@set_curren
  0027c	00 00 00 00	 DD	 $LN8@set_curren
  00280	00 00 00 00	 DD	 $LN9@set_curren
  00284	00 00 00 00	 DD	 $LN10@set_curren
  00288	00 00 00 00	 DD	 $LN11@set_curren
  0028c	00 00 00 00	 DD	 $LN12@set_curren
  00290	00 00 00 00	 DD	 $LN13@set_curren
  00294	00 00 00 00	 DD	 $LN14@set_curren
  00298	00 00 00 00	 DD	 $LN15@set_curren
  0029c	00 00 00 00	 DD	 $LN16@set_curren
  002a0	00 00 00 00	 DD	 $LN17@set_curren
?set_current_dynamics_options@@YGXW4DYNAMICS_OPTIONS_TYPES@@H@Z ENDP ; set_current_dynamics_options
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv223 = -92						; size = 4
tv156 = -88						; size = 4
tv148 = -84						; size = 4
tv135 = -80						; size = 4
tv78 = -80						; size = 4
tv95 = -76						; size = 4
tv70 = -76						; size = 4
_en_damage_factor$ = -8					; size = 4
_damage$ = -4						; size = 4
_en$ = 8						; size = 4
_aggressor$ = 12					; size = 4
?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z PROC ; damage_helicopter_via_damage_level, COMDAT

; 2137 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2138 : 
; 2139 : 	int
; 2140 : 		damage;
; 2141 : 
; 2142 : 	float
; 2143 : 		en_damage_factor;
; 2144 : 
; 2145 : 	ASSERT (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN10@damage_hel
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN11@damage_hel
$LN10@damage_hel:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  0001f	83 c2 08	 add	 edx, 8
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN11@damage_hel:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN12@damage_hel
  00043	c7 45 b0 9c 00
	00 00		 mov	 DWORD PTR tv78[ebp], 156 ; 0000009cH
  0004a	eb 21		 jmp	 SHORT $LN13@damage_hel
$LN12@damage_hel:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  00052	83 c2 08	 add	 edx, 8
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN13@damage_hel:
  0006d	68 9c 00 00 00	 push	 156			; 0000009cH
  00072	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00075	51		 push	 ecx
  00076	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 1116
  0007d	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  00080	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00087	ff d1		 call	 ecx
  00089	85 c0		 test	 eax, eax
  0008b	75 18		 jne	 SHORT $LN5@damage_hel
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  00092	83 c0 08	 add	 eax, 8
  00095	50		 push	 eax
  00096	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@damage_hel:

; 2146 : 
; 2147 : 	en_damage_factor = (float) get_local_entity_int_value (en, INT_TYPE_DAMAGE_LEVEL) / get_local_entity_int_value (en, INT_TYPE_INITIAL_DAMAGE_LEVEL);

  000a5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a9	74 0a		 je	 SHORT $LN14@damage_hel
  000ab	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ae	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b0	89 4d b4	 mov	 DWORD PTR tv95[ebp], ecx
  000b3	eb 21		 jmp	 SHORT $LN15@damage_hel
$LN14@damage_hel:
  000b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  000bb	83 c2 0a	 add	 edx, 10			; 0000000aH
  000be	52		 push	 edx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cf	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN15@damage_hel:
  000d6	b9 01 00 00 00	 mov	 ecx, 1
  000db	85 c9		 test	 ecx, ecx
  000dd	74 09		 je	 SHORT $LN16@damage_hel
  000df	c7 45 b0 25 00
	00 00		 mov	 DWORD PTR tv135[ebp], 37 ; 00000025H
  000e6	eb 21		 jmp	 SHORT $LN17@damage_hel
$LN16@damage_hel:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  000ee	83 c2 0a	 add	 edx, 10			; 0000000aH
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN17@damage_hel:
  00109	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0010d	74 0a		 je	 SHORT $LN18@damage_hel
  0010f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00112	8b 11		 mov	 edx, DWORD PTR [ecx]
  00114	89 55 ac	 mov	 DWORD PTR tv148[ebp], edx
  00117	eb 21		 jmp	 SHORT $LN19@damage_hel
$LN18@damage_hel:
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  0011e	83 c0 0a	 add	 eax, 10			; 0000000aH
  00121	50		 push	 eax
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00127	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012d	51		 push	 ecx
  0012e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00133	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN19@damage_hel:
  0013a	ba 01 00 00 00	 mov	 edx, 1
  0013f	85 d2		 test	 edx, edx
  00141	74 09		 je	 SHORT $LN20@damage_hel
  00143	c7 45 a8 69 00
	00 00		 mov	 DWORD PTR tv156[ebp], 105 ; 00000069H
  0014a	eb 21		 jmp	 SHORT $LN21@damage_hel
$LN20@damage_hel:
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z@4JA
  00151	83 c0 0a	 add	 eax, 10			; 0000000aH
  00154	50		 push	 eax
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00160	51		 push	 ecx
  00161	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00166	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN21@damage_hel:
  0016d	6a 25		 push	 37			; 00000025H
  0016f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00172	52		 push	 edx
  00173	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv95[ebp], 1116
  0017a	8b 4d b0	 mov	 ecx, DWORD PTR tv135[ebp]
  0017d	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00184	ff d2		 call	 edx
  00186	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0018a	6a 69		 push	 105			; 00000069H
  0018c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018f	50		 push	 eax
  00190	69 4d ac 5c 04
	00 00		 imul	 ecx, DWORD PTR tv148[ebp], 1116
  00197	8b 55 a8	 mov	 edx, DWORD PTR tv156[ebp]
  0019a	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  001a1	f3 0f 11 45 a4	 movss	 DWORD PTR tv223[ebp], xmm0
  001a6	ff d0		 call	 eax
  001a8	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  001ac	f3 0f 10 4d a4	 movss	 xmm1, DWORD PTR tv223[ebp]
  001b1	f3 0f 5e c8	 divss	 xmm1, xmm0
  001b5	f3 0f 11 4d f8	 movss	 DWORD PTR _en_damage_factor$[ebp], xmm1

; 2148 : 
; 2149 : 	for (damage = 0; damage < sizeof (dynamics_damage_database) / sizeof (dynamics_damage_type); damage ++)

  001ba	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _damage$[ebp], 0
  001c1	eb 09		 jmp	 SHORT $LN4@damage_hel
$LN2@damage_hel:
  001c3	8b 45 fc	 mov	 eax, DWORD PTR _damage$[ebp]
  001c6	83 c0 01	 add	 eax, 1
  001c9	89 45 fc	 mov	 DWORD PTR _damage$[ebp], eax
$LN4@damage_hel:
  001cc	83 7d fc 12	 cmp	 DWORD PTR _damage$[ebp], 18 ; 00000012H
  001d0	73 4d		 jae	 SHORT $LN3@damage_hel

; 2150 : 	{
; 2151 : 
; 2152 : 		if (dynamics_damage_database [damage].kickin_value >= en_damage_factor)

  001d2	6b 45 fc 1c	 imul	 eax, DWORD PTR _damage$[ebp], 28
  001d6	f3 0f 10 80 08
	00 00 00	 movss	 xmm0, DWORD PTR ?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A[eax+8]
  001de	0f 2f 45 f8	 comiss	 xmm0, DWORD PTR _en_damage_factor$[ebp]
  001e2	72 39		 jb	 SHORT $LN8@damage_hel

; 2153 : 		{
; 2154 : 
; 2155 : 			if (get_gunship_entity () == en)

  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001e9	3b 45 08	 cmp	 eax, DWORD PTR _en$[ebp]
  001ec	75 14		 jne	 SHORT $LN7@damage_hel

; 2156 : 			{
; 2157 : 
; 2158 : 				dynamics_damage_model (1 << damage, TRUE);

  001ee	6a 01		 push	 1
  001f0	b8 01 00 00 00	 mov	 eax, 1
  001f5	8b 4d fc	 mov	 ecx, DWORD PTR _damage$[ebp]
  001f8	d3 e0		 shl	 eax, cl
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model

; 2159 : 			}
; 2160 : 			else

  00200	eb 1b		 jmp	 SHORT $LN8@damage_hel
$LN7@damage_hel:

; 2161 : 			{
; 2162 : 
; 2163 : 				transmit_entity_comms_message (ENTITY_COMMS_DAMAGE_PLAYER, en, 1 << damage, TRUE);

  00202	6a 01		 push	 1
  00204	b8 01 00 00 00	 mov	 eax, 1
  00209	8b 4d fc	 mov	 ecx, DWORD PTR _damage$[ebp]
  0020c	d3 e0		 shl	 eax, cl
  0020e	50		 push	 eax
  0020f	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00212	51		 push	 ecx
  00213	6a 0f		 push	 15			; 0000000fH
  00215	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  0021a	83 c4 10	 add	 esp, 16			; 00000010H
$LN8@damage_hel:

; 2164 : 			}
; 2165 : /*
; 2166 : 			if (aggressor)
; 2167 : 			{
; 2168 : 
; 2169 : 				if (dynamics_damage_database [damage].store_aggressor_in_debrief)
; 2170 : 				{
; 2171 : 	
; 2172 : 					debug_log ("CO_DMG: storing in debrief that %s %s caused damage to user",
; 2173 : 									entity_type_names [get_local_entity_type (aggressor)],
; 2174 : 									get_local_entity_string (aggressor, STRING_TYPE_FULL_NAME));
; 2175 : 	
; 2176 : //					set_debrief_aggressor_entity (aggressor);
; 2177 : 				}
; 2178 : 			}
; 2179 : */
; 2180 : 		}
; 2181 : 	}

  0021d	eb a4		 jmp	 SHORT $LN2@damage_hel
$LN3@damage_hel:

; 2182 : }

  0021f	5f		 pop	 edi
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c2 08 00	 ret	 8
?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z ENDP ; damage_helicopter_via_damage_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv179 = -88						; size = 8
tv221 = -80						; size = 4
tv199 = -80						; size = 4
tv180 = -80						; size = 8
tv213 = -76						; size = 4
tv191 = -76						; size = 4
tv69 = -76						; size = 4
_this_damage$ = -8					; size = 4
_damage_level$ = -4					; size = 4
_en$ = 8						; size = 4
?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z PROC	; damage_entity_to_flight_model, COMDAT

; 1861 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1862 : 
; 1863 : 	float
; 1864 : 		damage_level;
; 1865 : 
; 1866 : 	unsigned int
; 1867 : 		this_damage;
; 1868 : 
; 1869 : 	if (!current_flight_dynamics)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00010	75 05		 jne	 SHORT $LN6@damage_ent

; 1870 : 	{
; 1871 : 
; 1872 : 		return;

  00012	e9 98 04 00 00	 jmp	 $LN1@damage_ent
$LN6@damage_ent:

; 1873 : 	}
; 1874 : 
; 1875 : 	this_damage = DYNAMICS_DAMAGE_NONE;

  00017	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1

; 1876 : 
; 1877 : 	damage_level = 0.0;

  0001e	0f 57 c0	 xorps	 xmm0, xmm0
  00021	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0
$LN2@damage_ent:

; 1878 : 
; 1879 : 	while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  00026	81 7d f8 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  0002d	0f 83 ec 02 00
	00		 jae	 $LN3@damage_ent

; 1880 : 	{
; 1881 : 
; 1882 : 		if (current_flight_dynamics->dynamics_damage & this_damage)

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00038	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0003e	23 4d f8	 and	 ecx, DWORD PTR _this_damage$[ebp]
  00041	0f 84 cb 02 00
	00		 je	 $LN4@damage_ent

; 1883 : 		{
; 1884 : 
; 1885 : 			switch (this_damage)

  00047	8b 45 f8	 mov	 eax, DWORD PTR _this_damage$[ebp]
  0004a	89 45 b4	 mov	 DWORD PTR tv69[ebp], eax
  0004d	81 7d b4 00 02
	00 00		 cmp	 DWORD PTR tv69[ebp], 512 ; 00000200H
  00054	77 61		 ja	 SHORT $LN28@damage_ent
  00056	81 7d b4 00 02
	00 00		 cmp	 DWORD PTR tv69[ebp], 512 ; 00000200H
  0005d	0f 84 d5 01 00
	00		 je	 $LN18@damage_ent
  00063	83 7d b4 10	 cmp	 DWORD PTR tv69[ebp], 16	; 00000010H
  00067	77 27		 ja	 SHORT $LN29@damage_ent
  00069	83 7d b4 10	 cmp	 DWORD PTR tv69[ebp], 16	; 00000010H
  0006d	0f 84 23 01 00
	00		 je	 $LN12@damage_ent
  00073	8b 4d b4	 mov	 ecx, DWORD PTR tv69[ebp]
  00076	83 e9 01	 sub	 ecx, 1
  00079	89 4d b4	 mov	 DWORD PTR tv69[ebp], ecx
  0007c	83 7d b4 07	 cmp	 DWORD PTR tv69[ebp], 7
  00080	0f 87 7b 02 00
	00		 ja	 $LN26@damage_ent
  00086	8b 55 b4	 mov	 edx, DWORD PTR tv69[ebp]
  00089	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN45@damage_ent[edx*4]
$LN29@damage_ent:
  00090	8b 45 b4	 mov	 eax, DWORD PTR tv69[ebp]
  00093	83 e8 20	 sub	 eax, 32			; 00000020H
  00096	89 45 b4	 mov	 DWORD PTR tv69[ebp], eax
  00099	81 7d b4 e0 00
	00 00		 cmp	 DWORD PTR tv69[ebp], 224 ; 000000e0H
  000a0	0f 87 5b 02 00
	00		 ja	 $LN26@damage_ent
  000a6	8b 4d b4	 mov	 ecx, DWORD PTR tv69[ebp]
  000a9	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN44@damage_ent[ecx]
  000b0	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN46@damage_ent[edx*4]
$LN28@damage_ent:
  000b7	81 7d b4 00 40
	00 00		 cmp	 DWORD PTR tv69[ebp], 16384 ; 00004000H
  000be	77 54		 ja	 SHORT $LN30@damage_ent
  000c0	81 7d b4 00 40
	00 00		 cmp	 DWORD PTR tv69[ebp], 16384 ; 00004000H
  000c7	0f 84 ec 01 00
	00		 je	 $LN23@damage_ent
  000cd	81 7d b4 00 10
	00 00		 cmp	 DWORD PTR tv69[ebp], 4096 ; 00001000H
  000d4	77 2c		 ja	 SHORT $LN31@damage_ent
  000d6	81 7d b4 00 10
	00 00		 cmp	 DWORD PTR tv69[ebp], 4096 ; 00001000H
  000dd	0f 84 a6 01 00
	00		 je	 $LN21@damage_ent
  000e3	81 7d b4 00 04
	00 00		 cmp	 DWORD PTR tv69[ebp], 1024 ; 00000400H
  000ea	0f 84 63 01 00
	00		 je	 $LN19@damage_ent
  000f0	81 7d b4 00 08
	00 00		 cmp	 DWORD PTR tv69[ebp], 2048 ; 00000800H
  000f7	0f 84 71 01 00
	00		 je	 $LN20@damage_ent
  000fd	e9 ff 01 00 00	 jmp	 $LN26@damage_ent
$LN31@damage_ent:
  00102	81 7d b4 00 20
	00 00		 cmp	 DWORD PTR tv69[ebp], 8192 ; 00002000H
  00109	0f 84 92 01 00
	00		 je	 $LN22@damage_ent
  0010f	e9 ed 01 00 00	 jmp	 $LN26@damage_ent
$LN30@damage_ent:
  00114	81 7d b4 00 80
	00 00		 cmp	 DWORD PTR tv69[ebp], 32768 ; 00008000H
  0011b	0f 84 b0 01 00
	00		 je	 $LN24@damage_ent
  00121	81 7d b4 00 00
	01 00		 cmp	 DWORD PTR tv69[ebp], 65536 ; 00010000H
  00128	0f 84 bb 01 00
	00		 je	 $LN25@damage_ent
  0012e	81 7d b4 00 00
	02 00		 cmp	 DWORD PTR tv69[ebp], 131072 ; 00020000H
  00135	0f 84 c7 00 00
	00		 je	 $LN16@damage_ent
  0013b	e9 c1 01 00 00	 jmp	 $LN26@damage_ent
$LN8@damage_ent:

; 1886 : 			{
; 1887 : 
; 1888 : 				case DYNAMICS_DAMAGE_NONE:
; 1889 : 				{
; 1890 : 
; 1891 : 					break;

  00140	e9 cd 01 00 00	 jmp	 $LN4@damage_ent
$LN9@damage_ent:

; 1892 : 				}
; 1893 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR:
; 1894 : 				{
; 1895 : 
; 1896 : 					damage_level += 0.6;

  00145	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0014a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe3333333333333
  00152	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00156	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1897 : 
; 1898 : 					#if DYNAMICS_DEBUG
; 1899 : 
; 1900 : 					debug_log ("DYNAMICS: main rotor damaged");
; 1901 : 
; 1902 : 					#endif
; 1903 : 
; 1904 : 					break;

  0015b	e9 b2 01 00 00	 jmp	 $LN4@damage_ent
$LN10@damage_ent:

; 1905 : 				}
; 1906 : 				case DYNAMICS_DAMAGE_TAIL_ROTOR:
; 1907 : 				{
; 1908 : 
; 1909 : 					damage_level += 0.8;

  00160	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00165	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe999999999999a
  0016d	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00171	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1910 : 
; 1911 : 					#if DYNAMICS_DEBUG
; 1912 : 
; 1913 : 					debug_log ("DYNAMICS: tail rotor damaged");
; 1914 : 
; 1915 : 					#endif
; 1916 : 
; 1917 : 					break;

  00176	e9 97 01 00 00	 jmp	 $LN4@damage_ent
$LN11@damage_ent:

; 1918 : 				}
; 1919 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE:
; 1920 : 				{
; 1921 : 
; 1922 : 					damage_level += 0.4;

  0017b	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00180	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd999999999999a
  00188	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0018c	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1923 : 
; 1924 : 					#if DYNAMICS_DEBUG
; 1925 : 
; 1926 : 					debug_log ("DYNAMICS: left engine damaged");
; 1927 : 
; 1928 : 					#endif
; 1929 : 
; 1930 : 					break;

  00191	e9 7c 01 00 00	 jmp	 $LN4@damage_ent
$LN12@damage_ent:

; 1931 : 				}
; 1932 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE:
; 1933 : 				{
; 1934 : 
; 1935 : 					damage_level += 0.4;

  00196	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0019b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fd999999999999a
  001a3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a7	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1936 : 
; 1937 : 					#if DYNAMICS_DEBUG
; 1938 : 
; 1939 : 					debug_log ("DYNAMICS: right engine damaged");
; 1940 : 
; 1941 : 					#endif
; 1942 : 
; 1943 : 					break;

  001ac	e9 61 01 00 00	 jmp	 $LN4@damage_ent
$LN13@damage_ent:

; 1944 : 				}
; 1945 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE:
; 1946 : 				{
; 1947 : 
; 1948 : 					damage_level += 0.2;

  001b1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  001b6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001c2	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1949 : 
; 1950 : 					#if DYNAMICS_DEBUG
; 1951 : 
; 1952 : 					debug_log ("DYNAMICS: left engine fire damaged");
; 1953 : 
; 1954 : 					#endif
; 1955 : 
; 1956 : 					break;

  001c7	e9 46 01 00 00	 jmp	 $LN4@damage_ent
$LN14@damage_ent:

; 1957 : 				}
; 1958 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE:
; 1959 : 				{
; 1960 : 
; 1961 : 					damage_level += 0.2;

  001cc	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  001d1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001dd	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1962 : 
; 1963 : 					#if DYNAMICS_DEBUG
; 1964 : 
; 1965 : 					debug_log ("DYNAMICS: right engine fire damaged");
; 1966 : 
; 1967 : 					#endif
; 1968 : 
; 1969 : 					break;

  001e2	e9 2b 01 00 00	 jmp	 $LN4@damage_ent
$LN15@damage_ent:

; 1970 : 				}
; 1971 : 				case DYNAMICS_DAMAGE_LOW_HYDRAULICS:
; 1972 : 				{
; 1973 : 
; 1974 : 					damage_level += 0.2;

  001e7	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  001ec	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  001f4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001f8	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1975 : 
; 1976 : 					#if DYNAMICS_DEBUG
; 1977 : 
; 1978 : 					debug_log ("DYNAMICS: LOW HYDRAULICS damaged");
; 1979 : 
; 1980 : 					#endif
; 1981 : 
; 1982 : 					break;

  001fd	e9 10 01 00 00	 jmp	 $LN4@damage_ent
$LN16@damage_ent:

; 1983 : 				}
; 1984 : 				case DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS:
; 1985 : 				{
; 1986 : 
; 1987 : 					damage_level += 0.05;

  00202	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00207	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa999999999999a
  0020f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00213	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 1988 : 
; 1989 : 					#if DYNAMICS_DEBUG
; 1990 : 
; 1991 : 					debug_log ("DYNAMICS: SECONDARY HYDRAULICS damaged");
; 1992 : 
; 1993 : 					#endif
; 1994 : 
; 1995 : 					break;

  00218	e9 f5 00 00 00	 jmp	 $LN4@damage_ent
$LN17@damage_ent:

; 1996 : 				}
; 1997 : 				case DYNAMICS_DAMAGE_STABILISER:
; 1998 : 				{
; 1999 : 
; 2000 : 					damage_level += 0.2;

  0021d	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00222	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  0022a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0022e	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2001 : 
; 2002 : 					#if DYNAMICS_DEBUG
; 2003 : 
; 2004 : 					debug_log ("DYNAMICS: STABILISER damaged");
; 2005 : 
; 2006 : 					#endif
; 2007 : 
; 2008 : 					break;

  00233	e9 da 00 00 00	 jmp	 $LN4@damage_ent
$LN18@damage_ent:

; 2009 : 				}
; 2010 : 				case DYNAMICS_DAMAGE_FUEL_LEAK:
; 2011 : 				{
; 2012 : 
; 2013 : 					damage_level += 0.1;

  00238	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0023d	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00245	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00249	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2014 : 
; 2015 : 					#if DYNAMICS_DEBUG
; 2016 : 
; 2017 : 					debug_log ("DYNAMICS: FUEL_LEAK damaged");
; 2018 : 
; 2019 : 					#endif
; 2020 : 
; 2021 : 					break;

  0024e	e9 bf 00 00 00	 jmp	 $LN4@damage_ent
$LN19@damage_ent:

; 2022 : 				}
; 2023 : 				case DYNAMICS_DAMAGE_LOW_OIL_PRESSURE:
; 2024 : 				{
; 2025 : 
; 2026 : 					damage_level += 0.1;

  00253	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00258	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00260	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00264	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2027 : 
; 2028 : 					#if DYNAMICS_DEBUG
; 2029 : 
; 2030 : 					debug_log ("DYNAMICS: LOW_OIL_PRESSURE damaged");
; 2031 : 
; 2032 : 					#endif
; 2033 : 
; 2034 : 					break;

  00269	e9 a4 00 00 00	 jmp	 $LN4@damage_ent
$LN20@damage_ent:

; 2035 : 				}
; 2036 : 				case DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE:
; 2037 : 				{
; 2038 : 
; 2039 : 					damage_level += 0.1;

  0026e	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00273	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  0027b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0027f	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2040 : 
; 2041 : 					#if DYNAMICS_DEBUG
; 2042 : 
; 2043 : 					debug_log ("DYNAMICS: HIGH_OIL_PRESSURE damaged");
; 2044 : 
; 2045 : 					#endif
; 2046 : 
; 2047 : 					break;

  00284	e9 89 00 00 00	 jmp	 $LN4@damage_ent
$LN21@damage_ent:

; 2048 : 				}
; 2049 : 				case DYNAMICS_DAMAGE_AVIONICS:
; 2050 : 				{
; 2051 : 
; 2052 : 					damage_level += 0.1;

  00289	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0028e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00296	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0029a	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2053 : 
; 2054 : 					#if DYNAMICS_DEBUG
; 2055 : 
; 2056 : 					debug_log ("DYNAMICS: AVIONICS damaged");
; 2057 : 
; 2058 : 					#endif
; 2059 : 
; 2060 : 					break;

  0029f	eb 71		 jmp	 SHORT $LN4@damage_ent
$LN22@damage_ent:

; 2061 : 				}
; 2062 : 				case DYNAMICS_DAMAGE_FIRE_EXTINGUISHER:
; 2063 : 				{
; 2064 : 
; 2065 : 					damage_level += 0.0;

  002a1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  002a6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@0000000000000000
  002ae	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002b2	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2066 : 
; 2067 : 					#if DYNAMICS_DEBUG
; 2068 : 
; 2069 : 					debug_log ("DYNAMICS: FIRE_EXTINGUISHER damaged");
; 2070 : 
; 2071 : 					#endif
; 2072 : 
; 2073 : 					break;

  002b7	eb 59		 jmp	 SHORT $LN4@damage_ent
$LN23@damage_ent:

; 2074 : 				}
; 2075 : 				case DYNAMICS_DAMAGE_UNDERCARRIAGE:
; 2076 : 				{
; 2077 : 
; 2078 : 					damage_level += 0.1;

  002b9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  002be	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002c6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002ca	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2079 : 
; 2080 : 					#if DYNAMICS_DEBUG
; 2081 : 
; 2082 : 					debug_log ("DYNAMICS: UNDERCARRIAGE damaged");
; 2083 : 
; 2084 : 					#endif
; 2085 : 
; 2086 : 					break;

  002cf	eb 41		 jmp	 SHORT $LN4@damage_ent
$LN24@damage_ent:

; 2087 : 				}
; 2088 : 				case DYNAMICS_DAMAGE_APU:
; 2089 : 				{
; 2090 : 					damage_level += 0.1;

  002d1	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  002d6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fb999999999999a
  002de	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002e2	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2091 : 
; 2092 : 					#if DYNAMICS_DEBUG
; 2093 : 
; 2094 : 					debug_log ("DYNAMICS: APU damaged");
; 2095 : 
; 2096 : 					#endif
; 2097 : 					
; 2098 : 					break;

  002e7	eb 29		 jmp	 SHORT $LN4@damage_ent
$LN25@damage_ent:

; 2099 : 				}
; 2100 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE:
; 2101 : 				{
; 2102 : 					damage_level += 0.2;

  002e9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  002ee	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  002f6	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  002fa	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2103 : 
; 2104 : 					#if DYNAMICS_DEBUG
; 2105 : 
; 2106 : 					debug_log ("DYNAMICS: MAIN ROTOR BLADE damaged");
; 2107 : 
; 2108 : 					#endif
; 2109 : 
; 2110 : 					break;	

  002ff	eb 11		 jmp	 SHORT $LN4@damage_ent
$LN26@damage_ent:

; 2111 : 				}
; 2112 : 				default:
; 2113 : 				{
; 2114 : 
; 2115 : 					debug_fatal ("DYNAMICS: unknown damage %d", this_damage);

  00301	8b 45 f8	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00304	50		 push	 eax
  00305	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@
  0030a	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0030f	83 c4 08	 add	 esp, 8
$LN4@damage_ent:

; 2116 : 				}
; 2117 : 			}
; 2118 : 		}
; 2119 : 
; 2120 : 		this_damage = this_damage << 1;

  00312	8b 45 f8	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00315	d1 e0		 shl	 eax, 1
  00317	89 45 f8	 mov	 DWORD PTR _this_damage$[ebp], eax

; 2121 : 	}

  0031a	e9 07 fd ff ff	 jmp	 $LN2@damage_ent
$LN3@damage_ent:

; 2122 : 
; 2123 : 	damage_level = bound (damage_level, 0.0, 0.9);

  0031f	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00324	0f 57 c9	 xorps	 xmm1, xmm1
  00327	66 0f 2f c8	 comisd	 xmm1, xmm0
  0032b	76 0a		 jbe	 SHORT $LN34@damage_ent
  0032d	0f 57 c0	 xorps	 xmm0, xmm0
  00330	f2 0f 11 45 b0	 movsd	 QWORD PTR tv180[ebp], xmm0
  00335	eb 32		 jmp	 SHORT $LN35@damage_ent
$LN34@damage_ent:
  00337	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0033c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3feccccccccccccd
  00344	76 0f		 jbe	 SHORT $LN32@damage_ent
  00346	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3feccccccccccccd
  0034e	f2 0f 11 45 a8	 movsd	 QWORD PTR tv179[ebp], xmm0
  00353	eb 0a		 jmp	 SHORT $LN33@damage_ent
$LN32@damage_ent:
  00355	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  0035a	f2 0f 11 45 a8	 movsd	 QWORD PTR tv179[ebp], xmm0
$LN33@damage_ent:
  0035f	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv179[ebp]
  00364	f2 0f 11 45 b0	 movsd	 QWORD PTR tv180[ebp], xmm0
$LN35@damage_ent:
  00369	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv180[ebp]
  0036e	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2124 : 
; 2125 : 	damage_level = 1.0 - damage_level;

  00373	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _damage_level$[ebp]
  00378	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00380	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00384	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00388	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2126 : 
; 2127 : 	damage_level *= get_local_entity_int_value (en, INT_TYPE_INITIAL_DAMAGE_LEVEL);

  0038d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00391	74 0a		 je	 SHORT $LN36@damage_ent
  00393	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00396	8b 08		 mov	 ecx, DWORD PTR [eax]
  00398	89 4d b4	 mov	 DWORD PTR tv191[ebp], ecx
  0039b	eb 24		 jmp	 SHORT $LN37@damage_ent
$LN36@damage_ent:
  0039d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA
  003a3	81 c2 0a 01 00
	00		 add	 edx, 266		; 0000010aH
  003a9	52		 push	 edx
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  003af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003b4	50		 push	 eax
  003b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003ba	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv191[ebp], 0
$LN37@damage_ent:
  003c1	b9 01 00 00 00	 mov	 ecx, 1
  003c6	85 c9		 test	 ecx, ecx
  003c8	74 09		 je	 SHORT $LN38@damage_ent
  003ca	c7 45 b0 69 00
	00 00		 mov	 DWORD PTR tv199[ebp], 105 ; 00000069H
  003d1	eb 24		 jmp	 SHORT $LN39@damage_ent
$LN38@damage_ent:
  003d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA
  003d9	81 c2 0a 01 00
	00		 add	 edx, 266		; 0000010aH
  003df	52		 push	 edx
  003e0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003ea	50		 push	 eax
  003eb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f0	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv199[ebp], 0
$LN39@damage_ent:
  003f7	6a 69		 push	 105			; 00000069H
  003f9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  003fc	51		 push	 ecx
  003fd	69 55 b4 5c 04
	00 00		 imul	 edx, DWORD PTR tv191[ebp], 1116
  00404	8b 45 b0	 mov	 eax, DWORD PTR tv199[ebp]
  00407	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0040e	ff d1		 call	 ecx
  00410	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00414	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _damage_level$[ebp]
  00419	f3 0f 11 45 fc	 movss	 DWORD PTR _damage_level$[ebp], xmm0

; 2128 : 
; 2129 : 	set_client_server_entity_int_value (en, INT_TYPE_DAMAGE_LEVEL, damage_level);

  0041e	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00422	74 0a		 je	 SHORT $LN40@damage_ent
  00424	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00427	8b 08		 mov	 ecx, DWORD PTR [eax]
  00429	89 4d b4	 mov	 DWORD PTR tv213[ebp], ecx
  0042c	eb 24		 jmp	 SHORT $LN41@damage_ent
$LN40@damage_ent:
  0042e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA
  00434	81 c2 0c 01 00
	00		 add	 edx, 268		; 0000010cH
  0043a	52		 push	 edx
  0043b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00440	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00445	50		 push	 eax
  00446	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0044b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN41@damage_ent:
  00452	b9 01 00 00 00	 mov	 ecx, 1
  00457	85 c9		 test	 ecx, ecx
  00459	74 09		 je	 SHORT $LN42@damage_ent
  0045b	c7 45 b0 25 00
	00 00		 mov	 DWORD PTR tv221[ebp], 37 ; 00000025H
  00462	eb 24		 jmp	 SHORT $LN43@damage_ent
$LN42@damage_ent:
  00464	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??damage_entity_to_flight_model@@YGXPAUENTITY@@@Z@4JA
  0046a	81 c2 0c 01 00
	00		 add	 edx, 268		; 0000010cH
  00470	52		 push	 edx
  00471	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00476	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0047b	50		 push	 eax
  0047c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00481	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv221[ebp], 0
$LN43@damage_ent:
  00488	f3 0f 2c 4d fc	 cvttss2si ecx, DWORD PTR _damage_level$[ebp]
  0048d	51		 push	 ecx
  0048e	6a 25		 push	 37			; 00000025H
  00490	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00493	52		 push	 edx
  00494	69 45 b4 b8 08
	00 00		 imul	 eax, DWORD PTR tv213[ebp], 2232
  0049b	8b 4d b0	 mov	 ecx, DWORD PTR tv221[ebp]
  0049e	8d 94 c8 00 00
	00 00		 lea	 edx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*8]
  004a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  004aa	8b 0c 82	 mov	 ecx, DWORD PTR [edx+eax*4]
  004ad	ff d1		 call	 ecx
$LN1@damage_ent:

; 2130 : }

  004af	5f		 pop	 edi
  004b0	5e		 pop	 esi
  004b1	5b		 pop	 ebx
  004b2	8b e5		 mov	 esp, ebp
  004b4	5d		 pop	 ebp
  004b5	c2 04 00	 ret	 4
$LN45@damage_ent:
  004b8	00 00 00 00	 DD	 $LN8@damage_ent
  004bc	00 00 00 00	 DD	 $LN9@damage_ent
  004c0	00 00 00 00	 DD	 $LN26@damage_ent
  004c4	00 00 00 00	 DD	 $LN10@damage_ent
  004c8	00 00 00 00	 DD	 $LN26@damage_ent
  004cc	00 00 00 00	 DD	 $LN26@damage_ent
  004d0	00 00 00 00	 DD	 $LN26@damage_ent
  004d4	00 00 00 00	 DD	 $LN11@damage_ent
$LN46@damage_ent:
  004d8	00 00 00 00	 DD	 $LN13@damage_ent
  004dc	00 00 00 00	 DD	 $LN14@damage_ent
  004e0	00 00 00 00	 DD	 $LN15@damage_ent
  004e4	00 00 00 00	 DD	 $LN17@damage_ent
  004e8	00 00 00 00	 DD	 $LN26@damage_ent
$LN44@damage_ent:
  004ec	00		 DB	 0
  004ed	04		 DB	 4
  004ee	04		 DB	 4
  004ef	04		 DB	 4
  004f0	04		 DB	 4
  004f1	04		 DB	 4
  004f2	04		 DB	 4
  004f3	04		 DB	 4
  004f4	04		 DB	 4
  004f5	04		 DB	 4
  004f6	04		 DB	 4
  004f7	04		 DB	 4
  004f8	04		 DB	 4
  004f9	04		 DB	 4
  004fa	04		 DB	 4
  004fb	04		 DB	 4
  004fc	04		 DB	 4
  004fd	04		 DB	 4
  004fe	04		 DB	 4
  004ff	04		 DB	 4
  00500	04		 DB	 4
  00501	04		 DB	 4
  00502	04		 DB	 4
  00503	04		 DB	 4
  00504	04		 DB	 4
  00505	04		 DB	 4
  00506	04		 DB	 4
  00507	04		 DB	 4
  00508	04		 DB	 4
  00509	04		 DB	 4
  0050a	04		 DB	 4
  0050b	04		 DB	 4
  0050c	01		 DB	 1
  0050d	04		 DB	 4
  0050e	04		 DB	 4
  0050f	04		 DB	 4
  00510	04		 DB	 4
  00511	04		 DB	 4
  00512	04		 DB	 4
  00513	04		 DB	 4
  00514	04		 DB	 4
  00515	04		 DB	 4
  00516	04		 DB	 4
  00517	04		 DB	 4
  00518	04		 DB	 4
  00519	04		 DB	 4
  0051a	04		 DB	 4
  0051b	04		 DB	 4
  0051c	04		 DB	 4
  0051d	04		 DB	 4
  0051e	04		 DB	 4
  0051f	04		 DB	 4
  00520	04		 DB	 4
  00521	04		 DB	 4
  00522	04		 DB	 4
  00523	04		 DB	 4
  00524	04		 DB	 4
  00525	04		 DB	 4
  00526	04		 DB	 4
  00527	04		 DB	 4
  00528	04		 DB	 4
  00529	04		 DB	 4
  0052a	04		 DB	 4
  0052b	04		 DB	 4
  0052c	04		 DB	 4
  0052d	04		 DB	 4
  0052e	04		 DB	 4
  0052f	04		 DB	 4
  00530	04		 DB	 4
  00531	04		 DB	 4
  00532	04		 DB	 4
  00533	04		 DB	 4
  00534	04		 DB	 4
  00535	04		 DB	 4
  00536	04		 DB	 4
  00537	04		 DB	 4
  00538	04		 DB	 4
  00539	04		 DB	 4
  0053a	04		 DB	 4
  0053b	04		 DB	 4
  0053c	04		 DB	 4
  0053d	04		 DB	 4
  0053e	04		 DB	 4
  0053f	04		 DB	 4
  00540	04		 DB	 4
  00541	04		 DB	 4
  00542	04		 DB	 4
  00543	04		 DB	 4
  00544	04		 DB	 4
  00545	04		 DB	 4
  00546	04		 DB	 4
  00547	04		 DB	 4
  00548	04		 DB	 4
  00549	04		 DB	 4
  0054a	04		 DB	 4
  0054b	04		 DB	 4
  0054c	02		 DB	 2
  0054d	04		 DB	 4
  0054e	04		 DB	 4
  0054f	04		 DB	 4
  00550	04		 DB	 4
  00551	04		 DB	 4
  00552	04		 DB	 4
  00553	04		 DB	 4
  00554	04		 DB	 4
  00555	04		 DB	 4
  00556	04		 DB	 4
  00557	04		 DB	 4
  00558	04		 DB	 4
  00559	04		 DB	 4
  0055a	04		 DB	 4
  0055b	04		 DB	 4
  0055c	04		 DB	 4
  0055d	04		 DB	 4
  0055e	04		 DB	 4
  0055f	04		 DB	 4
  00560	04		 DB	 4
  00561	04		 DB	 4
  00562	04		 DB	 4
  00563	04		 DB	 4
  00564	04		 DB	 4
  00565	04		 DB	 4
  00566	04		 DB	 4
  00567	04		 DB	 4
  00568	04		 DB	 4
  00569	04		 DB	 4
  0056a	04		 DB	 4
  0056b	04		 DB	 4
  0056c	04		 DB	 4
  0056d	04		 DB	 4
  0056e	04		 DB	 4
  0056f	04		 DB	 4
  00570	04		 DB	 4
  00571	04		 DB	 4
  00572	04		 DB	 4
  00573	04		 DB	 4
  00574	04		 DB	 4
  00575	04		 DB	 4
  00576	04		 DB	 4
  00577	04		 DB	 4
  00578	04		 DB	 4
  00579	04		 DB	 4
  0057a	04		 DB	 4
  0057b	04		 DB	 4
  0057c	04		 DB	 4
  0057d	04		 DB	 4
  0057e	04		 DB	 4
  0057f	04		 DB	 4
  00580	04		 DB	 4
  00581	04		 DB	 4
  00582	04		 DB	 4
  00583	04		 DB	 4
  00584	04		 DB	 4
  00585	04		 DB	 4
  00586	04		 DB	 4
  00587	04		 DB	 4
  00588	04		 DB	 4
  00589	04		 DB	 4
  0058a	04		 DB	 4
  0058b	04		 DB	 4
  0058c	04		 DB	 4
  0058d	04		 DB	 4
  0058e	04		 DB	 4
  0058f	04		 DB	 4
  00590	04		 DB	 4
  00591	04		 DB	 4
  00592	04		 DB	 4
  00593	04		 DB	 4
  00594	04		 DB	 4
  00595	04		 DB	 4
  00596	04		 DB	 4
  00597	04		 DB	 4
  00598	04		 DB	 4
  00599	04		 DB	 4
  0059a	04		 DB	 4
  0059b	04		 DB	 4
  0059c	04		 DB	 4
  0059d	04		 DB	 4
  0059e	04		 DB	 4
  0059f	04		 DB	 4
  005a0	04		 DB	 4
  005a1	04		 DB	 4
  005a2	04		 DB	 4
  005a3	04		 DB	 4
  005a4	04		 DB	 4
  005a5	04		 DB	 4
  005a6	04		 DB	 4
  005a7	04		 DB	 4
  005a8	04		 DB	 4
  005a9	04		 DB	 4
  005aa	04		 DB	 4
  005ab	04		 DB	 4
  005ac	04		 DB	 4
  005ad	04		 DB	 4
  005ae	04		 DB	 4
  005af	04		 DB	 4
  005b0	04		 DB	 4
  005b1	04		 DB	 4
  005b2	04		 DB	 4
  005b3	04		 DB	 4
  005b4	04		 DB	 4
  005b5	04		 DB	 4
  005b6	04		 DB	 4
  005b7	04		 DB	 4
  005b8	04		 DB	 4
  005b9	04		 DB	 4
  005ba	04		 DB	 4
  005bb	04		 DB	 4
  005bc	04		 DB	 4
  005bd	04		 DB	 4
  005be	04		 DB	 4
  005bf	04		 DB	 4
  005c0	04		 DB	 4
  005c1	04		 DB	 4
  005c2	04		 DB	 4
  005c3	04		 DB	 4
  005c4	04		 DB	 4
  005c5	04		 DB	 4
  005c6	04		 DB	 4
  005c7	04		 DB	 4
  005c8	04		 DB	 4
  005c9	04		 DB	 4
  005ca	04		 DB	 4
  005cb	04		 DB	 4
  005cc	03		 DB	 3
?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z ENDP	; damage_entity_to_flight_model
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?repair_damage_model@@YGXI@Z
_TEXT	SEGMENT
tv151 = -84						; size = 4
tv237 = -80						; size = 4
tv143 = -80						; size = 4
tv230 = -76						; size = 4
tv174 = -76						; size = 4
tv130 = -76						; size = 4
tv223 = -72						; size = 4
tv206 = -72						; size = 4
tv166 = -72						; size = 4
tv90 = -72						; size = 4
tv74 = -72						; size = 4
_this_damage$ = -4					; size = 4
_damage$ = 8						; size = 4
?repair_damage_model@@YGXI@Z PROC			; repair_damage_model, COMDAT

; 1490 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1491 : 
; 1492 : 	unsigned int
; 1493 : 		this_damage;
; 1494 : 
; 1495 : 	if (!get_gunship_entity ())

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00010	75 05		 jne	 SHORT $LN10@repair_dam

; 1496 : 	{
; 1497 : 
; 1498 : 		return;

  00012	e9 ab 05 00 00	 jmp	 $LN1@repair_dam
$LN10@repair_dam:

; 1499 : 	}
; 1500 : 
; 1501 : 	this_damage = DYNAMICS_DAMAGE_NONE;

  00017	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1
$LN2@repair_dam:

; 1502 : 
; 1503 : 	while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  0001e	81 7d fc 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  00025	0f 83 97 05 00
	00		 jae	 $LN1@repair_dam

; 1504 : 	{
; 1505 : 
; 1506 : 		if ((damage & this_damage) && ((current_flight_dynamics->dynamics_damage & this_damage)))

  0002b	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  0002e	23 45 fc	 and	 eax, DWORD PTR _this_damage$[ebp]
  00031	0f 84 7e 05 00
	00		 je	 $LN11@repair_dam
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003c	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00042	23 4d fc	 and	 ecx, DWORD PTR _this_damage$[ebp]
  00045	0f 84 6a 05 00
	00		 je	 $LN11@repair_dam

; 1507 : 		{
; 1508 : 
; 1509 : 			current_flight_dynamics->dynamics_damage -= this_damage;

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00050	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00056	2b 4d fc	 sub	 ecx, DWORD PTR _this_damage$[ebp]
  00059	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0005f	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 1510 : 
; 1511 : 			switch (this_damage)

  00065	8b 45 fc	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00068	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
  0006b	81 7d b8 00 02
	00 00		 cmp	 DWORD PTR tv74[ebp], 512 ; 00000200H
  00072	77 61		 ja	 SHORT $LN62@repair_dam
  00074	81 7d b8 00 02
	00 00		 cmp	 DWORD PTR tv74[ebp], 512 ; 00000200H
  0007b	0f 84 0c 04 00
	00		 je	 $LN32@repair_dam
  00081	83 7d b8 10	 cmp	 DWORD PTR tv74[ebp], 16	; 00000010H
  00085	77 27		 ja	 SHORT $LN63@repair_dam
  00087	83 7d b8 10	 cmp	 DWORD PTR tv74[ebp], 16	; 00000010H
  0008b	0f 84 2e 03 00
	00		 je	 $LN16@repair_dam
  00091	8b 4d b8	 mov	 ecx, DWORD PTR tv74[ebp]
  00094	83 e9 01	 sub	 ecx, 1
  00097	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  0009a	83 7d b8 07	 cmp	 DWORD PTR tv74[ebp], 7
  0009e	0f 87 00 05 00
	00		 ja	 $LN44@repair_dam
  000a4	8b 55 b8	 mov	 edx, DWORD PTR tv74[ebp]
  000a7	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN68@repair_dam[edx*4]
$LN63@repair_dam:
  000ae	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]
  000b1	83 e8 20	 sub	 eax, 32			; 00000020H
  000b4	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
  000b7	81 7d b8 e0 00
	00 00		 cmp	 DWORD PTR tv74[ebp], 224 ; 000000e0H
  000be	0f 87 e0 04 00
	00		 ja	 $LN44@repair_dam
  000c4	8b 4d b8	 mov	 ecx, DWORD PTR tv74[ebp]
  000c7	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN66@repair_dam[ecx]
  000ce	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN69@repair_dam[edx*4]
$LN62@repair_dam:
  000d5	81 7d b8 00 40
	00 00		 cmp	 DWORD PTR tv74[ebp], 16384 ; 00004000H
  000dc	77 54		 ja	 SHORT $LN64@repair_dam
  000de	81 7d b8 00 40
	00 00		 cmp	 DWORD PTR tv74[ebp], 16384 ; 00004000H
  000e5	0f 84 95 04 00
	00		 je	 $LN41@repair_dam
  000eb	81 7d b8 00 10
	00 00		 cmp	 DWORD PTR tv74[ebp], 4096 ; 00001000H
  000f2	77 2c		 ja	 SHORT $LN65@repair_dam
  000f4	81 7d b8 00 10
	00 00		 cmp	 DWORD PTR tv74[ebp], 4096 ; 00001000H
  000fb	0f 84 b9 03 00
	00		 je	 $LN35@repair_dam
  00101	81 7d b8 00 04
	00 00		 cmp	 DWORD PTR tv74[ebp], 1024 ; 00000400H
  00108	0f 84 84 03 00
	00		 je	 $LN33@repair_dam
  0010e	81 7d b8 00 08
	00 00		 cmp	 DWORD PTR tv74[ebp], 2048 ; 00000800H
  00115	0f 84 8b 03 00
	00		 je	 $LN34@repair_dam
  0011b	e9 84 04 00 00	 jmp	 $LN44@repair_dam
$LN65@repair_dam:
  00120	81 7d b8 00 20
	00 00		 cmp	 DWORD PTR tv74[ebp], 8192 ; 00002000H
  00127	0f 84 47 04 00
	00		 je	 $LN40@repair_dam
  0012d	e9 72 04 00 00	 jmp	 $LN44@repair_dam
$LN64@repair_dam:
  00132	81 7d b8 00 80
	00 00		 cmp	 DWORD PTR tv74[ebp], 32768 ; 00008000H
  00139	0f 84 52 04 00
	00		 je	 $LN42@repair_dam
  0013f	81 7d b8 00 00
	01 00		 cmp	 DWORD PTR tv74[ebp], 65536 ; 00010000H
  00146	0f 84 56 04 00
	00		 je	 $LN43@repair_dam
  0014c	81 7d b8 00 00
	02 00		 cmp	 DWORD PTR tv74[ebp], 131072 ; 00020000H
  00153	0f 84 bd 02 00
	00		 je	 $LN20@repair_dam
  00159	e9 46 04 00 00	 jmp	 $LN44@repair_dam
$LN12@repair_dam:

; 1512 : 			{
; 1513 : 
; 1514 : 				case DYNAMICS_DAMAGE_NONE:
; 1515 : 				{
; 1516 : 
; 1517 : 					break;

  0015e	e9 52 04 00 00	 jmp	 $LN11@repair_dam
$LN13@repair_dam:

; 1518 : 				}
; 1519 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR:
; 1520 : 				{
; 1521 : 
; 1522 : 					#if DYNAMICS_DEBUG
; 1523 : 
; 1524 : 					debug_log ("DYNAMICS: main rotor repaired");
; 1525 : 
; 1526 : 					#endif
; 1527 : 
; 1528 : 					current_flight_dynamics->main_blade_pitch.damaged = FALSE;

  00163	33 c0		 xor	 eax, eax
  00165	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0016b	66 89 81 9c 1e
	00 00		 mov	 WORD PTR [ecx+7836], ax

; 1529 : 
; 1530 : 					current_flight_dynamics->main_rotor_roll_angle.damaged = FALSE;

  00172	33 c0		 xor	 eax, eax
  00174	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0017a	66 89 81 f4 1d
	00 00		 mov	 WORD PTR [ecx+7668], ax

; 1531 : 
; 1532 : 					current_flight_dynamics->main_rotor_pitch_angle.damaged = FALSE;

  00181	33 c0		 xor	 eax, eax
  00183	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00189	66 89 81 0c 1e
	00 00		 mov	 WORD PTR [ecx+7692], ax

; 1533 : 
; 1534 : 					current_flight_dynamics->main_rotor_rpm.damaged = FALSE;

  00190	33 c0		 xor	 eax, eax
  00192	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00198	66 89 81 24 1e
	00 00		 mov	 WORD PTR [ecx+7716], ax

; 1535 : 
; 1536 : 					restore_helicopter_main_rotors (get_gunship_entity ());

  0019f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_main_rotors

; 1537 : 	
; 1538 : 					transmit_entity_comms_message (ENTITY_COMMS_RESTORE_ENTITY, get_gunship_entity (), get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION), get_local_entity_int_value (get_gunship_entity (), INT_TYPE_OPERATIONAL_STATE));

  001aa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  001b1	74 0c		 je	 SHORT $LN46@repair_dam
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001b8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ba	89 4d b8	 mov	 DWORD PTR tv90[ebp], ecx
  001bd	eb 21		 jmp	 SHORT $LN47@repair_dam
$LN46@repair_dam:
  001bf	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  001c5	83 c2 30	 add	 edx, 48			; 00000030H
  001c8	52		 push	 edx
  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001d3	50		 push	 eax
  001d4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d9	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN47@repair_dam:
  001e0	b9 01 00 00 00	 mov	 ecx, 1
  001e5	85 c9		 test	 ecx, ecx
  001e7	74 09		 je	 SHORT $LN48@repair_dam
  001e9	c7 45 b4 97 00
	00 00		 mov	 DWORD PTR tv130[ebp], 151 ; 00000097H
  001f0	eb 21		 jmp	 SHORT $LN49@repair_dam
$LN48@repair_dam:
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  001f8	83 c2 30	 add	 edx, 48			; 00000030H
  001fb	52		 push	 edx
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN49@repair_dam:
  00213	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0021a	74 0d		 je	 SHORT $LN50@repair_dam
  0021c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00222	8b 11		 mov	 edx, DWORD PTR [ecx]
  00224	89 55 b0	 mov	 DWORD PTR tv143[ebp], edx
  00227	eb 21		 jmp	 SHORT $LN51@repair_dam
$LN50@repair_dam:
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  0022e	83 c0 30	 add	 eax, 48			; 00000030H
  00231	50		 push	 eax
  00232	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0023d	51		 push	 ecx
  0023e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00243	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN51@repair_dam:
  0024a	ba 01 00 00 00	 mov	 edx, 1
  0024f	85 d2		 test	 edx, edx
  00251	74 09		 je	 SHORT $LN52@repair_dam
  00253	c7 45 ac 08 00
	00 00		 mov	 DWORD PTR tv151[ebp], 8
  0025a	eb 21		 jmp	 SHORT $LN53@repair_dam
$LN52@repair_dam:
  0025c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  00261	83 c0 30	 add	 eax, 48			; 00000030H
  00264	50		 push	 eax
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00270	51		 push	 ecx
  00271	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00276	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv151[ebp], 0
$LN53@repair_dam:
  0027d	68 97 00 00 00	 push	 151			; 00000097H
  00282	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00288	52		 push	 edx
  00289	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv90[ebp], 1116
  00290	8b 4d b4	 mov	 ecx, DWORD PTR tv130[ebp]
  00293	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0029a	ff d2		 call	 edx
  0029c	50		 push	 eax
  0029d	6a 08		 push	 8
  0029f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002a4	50		 push	 eax
  002a5	6b 4d b0 60	 imul	 ecx, DWORD PTR tv143[ebp], 96
  002a9	8b 55 ac	 mov	 edx, DWORD PTR tv151[ebp]
  002ac	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[ecx+edx*4]
  002b3	ff d0		 call	 eax
  002b5	50		 push	 eax
  002b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002bc	51		 push	 ecx
  002bd	6a 2c		 push	 44			; 0000002cH
  002bf	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  002c4	83 c4 10	 add	 esp, 16			; 00000010H

; 1539 : 
; 1540 : 					set_client_server_entity_int_value (get_gunship_entity (), INT_TYPE_MAIN_ROTOR_DAMAGED, FALSE);

  002c7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  002ce	74 0c		 je	 SHORT $LN54@repair_dam
  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d7	89 4d b8	 mov	 DWORD PTR tv166[ebp], ecx
  002da	eb 21		 jmp	 SHORT $LN55@repair_dam
$LN54@repair_dam:
  002dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  002e2	83 c2 32	 add	 edx, 50			; 00000032H
  002e5	52		 push	 edx
  002e6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  002eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN55@repair_dam:
  002fd	b9 01 00 00 00	 mov	 ecx, 1
  00302	85 c9		 test	 ecx, ecx
  00304	74 09		 je	 SHORT $LN56@repair_dam
  00306	c7 45 b4 81 00
	00 00		 mov	 DWORD PTR tv174[ebp], 129 ; 00000081H
  0030d	eb 21		 jmp	 SHORT $LN57@repair_dam
$LN56@repair_dam:
  0030f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??repair_damage_model@@YGXI@Z@4JA
  00315	83 c2 32	 add	 edx, 50			; 00000032H
  00318	52		 push	 edx
  00319	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00323	50		 push	 eax
  00324	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00329	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN57@repair_dam:
  00330	6a 00		 push	 0
  00332	68 81 00 00 00	 push	 129			; 00000081H
  00337	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0033d	51		 push	 ecx
  0033e	69 55 b8 b8 08
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 2232
  00345	8b 45 b4	 mov	 eax, DWORD PTR tv174[ebp]
  00348	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  0034f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00355	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00358	ff d0		 call	 eax

; 1541 : 
; 1542 : 					break;

  0035a	e9 56 02 00 00	 jmp	 $LN11@repair_dam
$LN14@repair_dam:

; 1543 : 				}
; 1544 : 				case DYNAMICS_DAMAGE_TAIL_ROTOR:
; 1545 : 				{
; 1546 : 
; 1547 : 					#if DYNAMICS_DEBUG
; 1548 : 
; 1549 : 					debug_log ("DYNAMICS: tail rotor repaired");
; 1550 : 
; 1551 : 					#endif
; 1552 : 
; 1553 : 					current_flight_dynamics->tail_blade_pitch.damaged = FALSE;

  0035f	33 c0		 xor	 eax, eax
  00361	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00367	66 89 81 a4 1f
	00 00		 mov	 WORD PTR [ecx+8100], ax

; 1554 : 
; 1555 : 					current_flight_dynamics->tail_rotor_rpm.damaged = FALSE;

  0036e	33 c0		 xor	 eax, eax
  00370	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00376	66 89 81 5c 1f
	00 00		 mov	 WORD PTR [ecx+8028], ax

; 1556 : 
; 1557 : 					current_flight_dynamics->cross_coupling_effect.damaged = FALSE;

  0037d	33 c0		 xor	 eax, eax
  0037f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00385	66 89 81 d4 1f
	00 00		 mov	 WORD PTR [ecx+8148], ax

; 1558 : 
; 1559 : 					restore_helicopter_tail_rotors (get_gunship_entity ());

  0038c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 ?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_tail_rotors

; 1560 : 
; 1561 : 					break;

  00397	e9 19 02 00 00	 jmp	 $LN11@repair_dam
$LN15@repair_dam:

; 1562 : 				}
; 1563 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE:
; 1564 : 				{
; 1565 : 
; 1566 : 					current_flight_dynamics->left_engine_torque.damaged = FALSE;

  0039c	33 c0		 xor	 eax, eax
  0039e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003a4	66 89 81 bc 1c
	00 00		 mov	 WORD PTR [ecx+7356], ax

; 1567 : 
; 1568 : 					current_flight_dynamics->left_engine_rpm.damaged = FALSE;

  003ab	33 c0		 xor	 eax, eax
  003ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003b3	66 89 81 8c 1c
	00 00		 mov	 WORD PTR [ecx+7308], ax

; 1569 : 
; 1570 : 					#if DYNAMICS_DEBUG
; 1571 : 
; 1572 : 					debug_log ("DYNAMICS: left engine repaired");
; 1573 : 
; 1574 : 					#endif
; 1575 : 
; 1576 : 					break;

  003ba	e9 f6 01 00 00	 jmp	 $LN11@repair_dam
$LN16@repair_dam:

; 1577 : 				}
; 1578 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE:
; 1579 : 				{
; 1580 : 
; 1581 : 					current_flight_dynamics->right_engine_torque.damaged = FALSE;

  003bf	33 c0		 xor	 eax, eax
  003c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003c7	66 89 81 1c 1d
	00 00		 mov	 WORD PTR [ecx+7452], ax

; 1582 : 
; 1583 : 					current_flight_dynamics->right_engine_rpm.damaged = FALSE;

  003ce	33 c0		 xor	 eax, eax
  003d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003d6	66 89 81 ec 1c
	00 00		 mov	 WORD PTR [ecx+7404], ax

; 1584 : 
; 1585 : 					#if DYNAMICS_DEBUG
; 1586 : 
; 1587 : 					debug_log ("DYNAMICS: right engine repaired");
; 1588 : 
; 1589 : 					#endif
; 1590 : 
; 1591 : 					break;

  003dd	e9 d3 01 00 00	 jmp	 $LN11@repair_dam
$LN17@repair_dam:

; 1592 : 				}
; 1593 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE:
; 1594 : 				{
; 1595 : 
; 1596 : 					#if DYNAMICS_DEBUG
; 1597 : 
; 1598 : 					debug_log ("DYNAMICS: left engine fire repaired");
; 1599 : 
; 1600 : 					#endif
; 1601 : 
; 1602 : 					break;

  003e2	e9 ce 01 00 00	 jmp	 $LN11@repair_dam
$LN18@repair_dam:

; 1603 : 				}
; 1604 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE:
; 1605 : 				{
; 1606 : 
; 1607 : 					#if DYNAMICS_DEBUG
; 1608 : 
; 1609 : 					debug_log ("DYNAMICS: right engine fire repaired");
; 1610 : 
; 1611 : 					#endif
; 1612 : 
; 1613 : 					break;

  003e7	e9 c9 01 00 00	 jmp	 $LN11@repair_dam
$LN19@repair_dam:

; 1614 : 				}
; 1615 : 				case DYNAMICS_DAMAGE_LOW_HYDRAULICS:
; 1616 : 				{
; 1617 : 
; 1618 : 					#if DYNAMICS_DEBUG
; 1619 : 
; 1620 : 					debug_log ("DYNAMICS: LOW HYDRAULICS repaired");
; 1621 : 
; 1622 : 					#endif
; 1623 : 
; 1624 : 					current_flight_dynamics->input_data.cyclic_x.damaged = FALSE;

  003ec	33 c0		 xor	 eax, eax
  003ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003f4	66 89 81 08 01
	00 00		 mov	 WORD PTR [ecx+264], ax

; 1625 : 
; 1626 : 					current_flight_dynamics->input_data.cyclic_y.damaged = FALSE;

  003fb	33 c0		 xor	 eax, eax
  003fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00403	66 89 81 20 01
	00 00		 mov	 WORD PTR [ecx+288], ax

; 1627 : 
; 1628 : 					damage_hydraulics(FALSE);

  0040a	6a 00		 push	 0
  0040c	e8 00 00 00 00	 call	 ?damage_hydraulics@@YGXH@Z ; damage_hydraulics

; 1629 : 
; 1630 : 					break;

  00411	e9 9f 01 00 00	 jmp	 $LN11@repair_dam
$LN20@repair_dam:

; 1631 : 				}
; 1632 : 				case DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS:
; 1633 : 					#if DYNAMICS_DEBUG
; 1634 : 					debug_log ("DYNAMICS: SECONDARY HYDRAULICS repaired");
; 1635 : 					#endif
; 1636 : 
; 1637 : 					damage_hydraulics(FALSE);

  00416	6a 00		 push	 0
  00418	e8 00 00 00 00	 call	 ?damage_hydraulics@@YGXH@Z ; damage_hydraulics

; 1638 : 
; 1639 : 					break;

  0041d	e9 93 01 00 00	 jmp	 $LN11@repair_dam
$LN21@repair_dam:

; 1640 : 				case DYNAMICS_DAMAGE_STABILISER:
; 1641 : 				{
; 1642 : 
; 1643 : 					switch (current_flight_dynamics->sub_type)

  00422	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00427	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0042a	89 4d b8	 mov	 DWORD PTR tv206[ebp], ecx
  0042d	83 7d b8 1f	 cmp	 DWORD PTR tv206[ebp], 31 ; 0000001fH
  00431	77 55		 ja	 SHORT $LN6@repair_dam
  00433	8b 55 b8	 mov	 edx, DWORD PTR tv206[ebp]
  00436	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN67@repair_dam[edx]
  0043d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN70@repair_dam[eax*4]
$LN22@repair_dam:

; 1644 : 					{
; 1645 : 
; 1646 : 						case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 1647 : 						{
; 1648 : 
; 1649 : 							apache_restore_damage_values ();

  00444	e8 00 00 00 00	 call	 ?apache_restore_damage_values@@YGXXZ ; apache_restore_damage_values

; 1650 : 
; 1651 : 							break;

  00449	eb 3d		 jmp	 SHORT $LN6@repair_dam
$LN23@repair_dam:

; 1652 : 						}
; 1653 : 						case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 1654 : 						{
; 1655 : 
; 1656 : 							havoc_restore_damage_values ();

  0044b	e8 00 00 00 00	 call	 ?havoc_restore_damage_values@@YGXXZ ; havoc_restore_damage_values

; 1657 : 
; 1658 : 							break;

  00450	eb 36		 jmp	 SHORT $LN6@repair_dam
$LN24@repair_dam:

; 1659 : 						}
; 1660 : 						case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 1661 : 						{
; 1662 : 
; 1663 : 							comanche_restore_damage_values ();

  00452	e8 00 00 00 00	 call	 ?comanche_restore_damage_values@@YGXXZ ; comanche_restore_damage_values

; 1664 : 
; 1665 : 							break;

  00457	eb 2f		 jmp	 SHORT $LN6@repair_dam
$LN25@repair_dam:

; 1666 : 						}
; 1667 : 						case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 1668 : 						{
; 1669 : 
; 1670 : 							hokum_restore_damage_values ();

  00459	e8 00 00 00 00	 call	 ?hokum_restore_damage_values@@YGXXZ ; hokum_restore_damage_values

; 1671 : 
; 1672 : 							break;

  0045e	eb 28		 jmp	 SHORT $LN6@repair_dam
$LN26@repair_dam:

; 1673 : 						}
; 1674 : 					////Moje 030527 Start
; 1675 : 
; 1676 : 						case ENTITY_SUB_TYPE_AIRCRAFT_UH60_BLACK_HAWK:
; 1677 : 						{
; 1678 : 
; 1679 : 							blackhawk_restore_damage_values ();

  00460	e8 00 00 00 00	 call	 ?blackhawk_restore_damage_values@@YGXXZ ; blackhawk_restore_damage_values

; 1680 : 
; 1681 : 							break;

  00465	eb 21		 jmp	 SHORT $LN6@repair_dam
$LN27@repair_dam:

; 1682 : 						}
; 1683 : 					////Moje 030527 End
; 1684 : 					////moje 030612 start
; 1685 : 						case ENTITY_SUB_TYPE_AIRCRAFT_MI24D_HIND:
; 1686 : 						{
; 1687 : 
; 1688 : 							hind_restore_damage_values ();

  00467	e8 00 00 00 00	 call	 ?hind_restore_damage_values@@YGXXZ ; hind_restore_damage_values

; 1689 : 
; 1690 : 							break;

  0046c	eb 1a		 jmp	 SHORT $LN6@repair_dam
$LN28@repair_dam:

; 1691 : 						}
; 1692 : 					////Moje 030612 end
; 1693 : 					////Moje 030816 Start
; 1694 : 
; 1695 : 						case ENTITY_SUB_TYPE_AIRCRAFT_AH64A_APACHE:
; 1696 : 						{
; 1697 : 
; 1698 : 							ah64a_restore_damage_values ();

  0046e	e8 00 00 00 00	 call	 ?ah64a_restore_damage_values@@YGXXZ ; ah64a_restore_damage_values

; 1699 : 
; 1700 : 							break;

  00473	eb 13		 jmp	 SHORT $LN6@repair_dam
$LN29@repair_dam:

; 1701 : 						}
; 1702 : 						case ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM:
; 1703 : 						{
; 1704 : 							ka50_restore_damage_values ();

  00475	e8 00 00 00 00	 call	 ?ka50_restore_damage_values@@YGXXZ ; ka50_restore_damage_values

; 1705 : 
; 1706 : 							break;

  0047a	eb 0c		 jmp	 SHORT $LN6@repair_dam
$LN30@repair_dam:

; 1707 : 						}
; 1708 : 						case ENTITY_SUB_TYPE_AIRCRAFT_AH1Z_VIPER:
; 1709 : 						{
; 1710 : 							viper_restore_damage_values ();

  0047c	e8 00 00 00 00	 call	 ?viper_restore_damage_values@@YGXXZ ; viper_restore_damage_values

; 1711 : 
; 1712 : 							break;

  00481	eb 05		 jmp	 SHORT $LN6@repair_dam
$LN31@repair_dam:

; 1713 : 						}
; 1714 : 						case ENTITY_SUB_TYPE_AIRCRAFT_OH58D_KIOWA_WARRIOR:
; 1715 : 						{
; 1716 : 							kiowa_restore_damage_values ();

  00483	e8 00 00 00 00	 call	 ?kiowa_restore_damage_values@@YGXXZ ; kiowa_restore_damage_values
$LN6@repair_dam:

; 1717 : 
; 1718 : 							break;
; 1719 : 						}
; 1720 : 					////Moje 030816 end
; 1721 : 					}
; 1722 : 
; 1723 : 					#if DYNAMICS_DEBUG
; 1724 : 
; 1725 : 					debug_log ("DYNAMICS: STABILISER repaired");
; 1726 : 
; 1727 : 					#endif
; 1728 : 
; 1729 : 					break;

  00488	e9 28 01 00 00	 jmp	 $LN11@repair_dam
$LN32@repair_dam:

; 1730 : 				}
; 1731 : 				case DYNAMICS_DAMAGE_FUEL_LEAK:
; 1732 : 				{
; 1733 : 
; 1734 : 					#if DYNAMICS_DEBUG
; 1735 : 
; 1736 : 					debug_log ("DYNAMICS: FUEL_LEAK repaired");
; 1737 : 
; 1738 : 					#endif
; 1739 : 
; 1740 : 					break;

  0048d	e9 23 01 00 00	 jmp	 $LN11@repair_dam
$LN33@repair_dam:

; 1741 : 				}
; 1742 : 				case DYNAMICS_DAMAGE_LOW_OIL_PRESSURE:
; 1743 : 				{
; 1744 : 
; 1745 : 					current_flight_dynamics->input_data.cyclic_y.damaged = FALSE;

  00492	33 c0		 xor	 eax, eax
  00494	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0049a	66 89 81 20 01
	00 00		 mov	 WORD PTR [ecx+288], ax

; 1746 : 
; 1747 : 					#if DYNAMICS_DEBUG
; 1748 : 
; 1749 : 					debug_log ("DYNAMICS: LOW_OIL_PRESSURE repaired");
; 1750 : 
; 1751 : 					#endif
; 1752 : 
; 1753 : 					break;

  004a1	e9 0f 01 00 00	 jmp	 $LN11@repair_dam
$LN34@repair_dam:

; 1754 : 				}
; 1755 : 				case DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE:
; 1756 : 				{
; 1757 : 
; 1758 : 					current_flight_dynamics->input_data.collective.damaged = FALSE;

  004a6	33 c0		 xor	 eax, eax
  004a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004ae	66 89 81 b8 1b
	00 00		 mov	 WORD PTR [ecx+7096], ax

; 1759 : 
; 1760 : 					#if DYNAMICS_DEBUG
; 1761 : 
; 1762 : 					debug_log ("DYNAMICS: HIGH_OIL_PRESSURE repaired");
; 1763 : 
; 1764 : 					#endif
; 1765 : 
; 1766 : 					break;

  004b5	e9 fb 00 00 00	 jmp	 $LN11@repair_dam
$LN35@repair_dam:

; 1767 : 				}
; 1768 : 				case DYNAMICS_DAMAGE_AVIONICS:
; 1769 : 				{
; 1770 : 
; 1771 : 					#if DYNAMICS_DEBUG
; 1772 : 
; 1773 : 					debug_log ("DYNAMICS: AVIONICS repaired");
; 1774 : 
; 1775 : 					#endif
; 1776 : 
; 1777 : 					if (get_keysite_currently_landed_at ())

  004ba	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  004bf	85 c0		 test	 eax, eax
  004c1	0f 84 a0 00 00
	00		 je	 $LN36@repair_dam

; 1778 : 					{
; 1779 : 	
; 1780 : 						// sort out what avionics to repair.
; 1781 : 						switch (get_local_entity_int_value (get_keysite_currently_landed_at (), INT_TYPE_ENTITY_SUB_TYPE))

  004c7	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  004cc	85 c0		 test	 eax, eax
  004ce	74 0c		 je	 SHORT $LN58@repair_dam
  004d0	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  004d5	8b 00		 mov	 eax, DWORD PTR [eax]
  004d7	89 45 b8	 mov	 DWORD PTR tv223[ebp], eax
  004da	eb 1d		 jmp	 SHORT $LN59@repair_dam
$LN58@repair_dam:
  004dc	68 f5 06 00 00	 push	 1781			; 000006f5H
  004e1	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ec	51		 push	 ecx
  004ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f2	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv223[ebp], 0
$LN59@repair_dam:
  004f9	ba 01 00 00 00	 mov	 edx, 1
  004fe	85 d2		 test	 edx, edx
  00500	74 09		 je	 SHORT $LN60@repair_dam
  00502	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv230[ebp], 52 ; 00000034H
  00509	eb 1c		 jmp	 SHORT $LN61@repair_dam
$LN60@repair_dam:
  0050b	68 f5 06 00 00	 push	 1781			; 000006f5H
  00510	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00515	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0051a	50		 push	 eax
  0051b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00520	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv230[ebp], 0
$LN61@repair_dam:
  00527	6a 34		 push	 52			; 00000034H
  00529	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  0052e	50		 push	 eax
  0052f	69 4d b8 5c 04
	00 00		 imul	 ecx, DWORD PTR tv223[ebp], 1116
  00536	8b 55 b4	 mov	 edx, DWORD PTR tv230[ebp]
  00539	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00540	ff d0		 call	 eax
  00542	89 45 b0	 mov	 DWORD PTR tv237[ebp], eax
  00545	83 7d b0 03	 cmp	 DWORD PTR tv237[ebp], 3
  00549	74 02		 je	 SHORT $LN38@repair_dam
  0054b	eb 0d		 jmp	 SHORT $LN39@repair_dam
$LN38@repair_dam:

; 1782 : 						{
; 1783 : 	
; 1784 : 							case ENTITY_SUB_TYPE_KEYSITE_FARP:
; 1785 : 							{
; 1786 : 	
; 1787 : 								partially_repair_local_entity_avionics (get_gunship_entity ());

  0054d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00552	50		 push	 eax
  00553	e8 00 00 00 00	 call	 ?partially_repair_local_entity_avionics@@YGXPAUENTITY@@@Z ; partially_repair_local_entity_avionics

; 1788 : 	
; 1789 : 								break;

  00558	eb 0b		 jmp	 SHORT $LN8@repair_dam
$LN39@repair_dam:

; 1790 : 							}
; 1791 : 							default:
; 1792 : 							{
; 1793 : 	
; 1794 : 								fully_repair_local_entity_avionics (get_gunship_entity ());

  0055a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0055f	50		 push	 eax
  00560	e8 00 00 00 00	 call	 ?fully_repair_local_entity_avionics@@YGXPAUENTITY@@@Z ; fully_repair_local_entity_avionics
$LN8@repair_dam:

; 1795 : 	
; 1796 : 								break;
; 1797 : 							}
; 1798 : 						}
; 1799 : 					}
; 1800 : 					else

  00565	eb 0b		 jmp	 SHORT $LN37@repair_dam
$LN36@repair_dam:

; 1801 : 					{
; 1802 : 	
; 1803 : 						fully_repair_local_entity_avionics (get_gunship_entity ());

  00567	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0056c	50		 push	 eax
  0056d	e8 00 00 00 00	 call	 ?fully_repair_local_entity_avionics@@YGXPAUENTITY@@@Z ; fully_repair_local_entity_avionics
$LN37@repair_dam:

; 1804 : 					}
; 1805 : 
; 1806 : 					break;

  00572	eb 41		 jmp	 SHORT $LN11@repair_dam
$LN40@repair_dam:

; 1807 : 				}
; 1808 : 				case DYNAMICS_DAMAGE_FIRE_EXTINGUISHER:
; 1809 : 				{
; 1810 : 
; 1811 : 					#if DEBUG_MODULE
; 1812 : 
; 1813 : 					debug_log ("DYNAMICS: FIRE EXTINGUISHER repaired");
; 1814 : 
; 1815 : 					#endif
; 1816 : 
; 1817 : 					fire_extinguisher_used = FALSE;

  00574	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fire_extinguisher_used@@3HA, 0 ; fire_extinguisher_used

; 1818 : 
; 1819 : 					break;

  0057e	eb 35		 jmp	 SHORT $LN11@repair_dam
$LN41@repair_dam:

; 1820 : 				}
; 1821 : 				case DYNAMICS_DAMAGE_UNDERCARRIAGE:
; 1822 : 				{
; 1823 : 
; 1824 : 					#if DEBUG_MODULE
; 1825 : 
; 1826 : 					debug_log ("DYNAMICS: UNDERCARRIAGE repaired");
; 1827 : 
; 1828 : 					#endif
; 1829 : 
; 1830 : 					current_flight_dynamics->undercarriage_state.damaged = FALSE;

  00580	33 c0		 xor	 eax, eax
  00582	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00588	66 89 81 74 1c
	00 00		 mov	 WORD PTR [ecx+7284], ax

; 1831 : 
; 1832 : 					break;

  0058f	eb 24		 jmp	 SHORT $LN11@repair_dam
$LN42@repair_dam:

; 1833 : 				}
; 1834 : 				case DYNAMICS_DAMAGE_APU:
; 1835 : 				{
; 1836 : 					current_flight_dynamics->apu_rpm.damaged = FALSE;

  00591	33 c0		 xor	 eax, eax
  00593	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00599	66 89 81 4c 1d
	00 00		 mov	 WORD PTR [ecx+7500], ax

; 1837 : 					
; 1838 : 					break;

  005a0	eb 13		 jmp	 SHORT $LN11@repair_dam
$LN43@repair_dam:

; 1839 : 				}
; 1840 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE:
; 1841 : 				{
; 1842 : 					break;	

  005a2	eb 11		 jmp	 SHORT $LN11@repair_dam
$LN44@repair_dam:

; 1843 : 				}
; 1844 : 				default:
; 1845 : 				{
; 1846 : 
; 1847 : 					debug_fatal ("DYNAMICS: unknown damage %d", this_damage);

  005a4	8b 45 fc	 mov	 eax, DWORD PTR _this_damage$[ebp]
  005a7	50		 push	 eax
  005a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@
  005ad	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  005b2	83 c4 08	 add	 esp, 8
$LN11@repair_dam:

; 1848 : 				}
; 1849 : 			}
; 1850 : 		}
; 1851 : 
; 1852 : 		this_damage = this_damage << 1;

  005b5	8b 45 fc	 mov	 eax, DWORD PTR _this_damage$[ebp]
  005b8	d1 e0		 shl	 eax, 1
  005ba	89 45 fc	 mov	 DWORD PTR _this_damage$[ebp], eax

; 1853 : 	}

  005bd	e9 5c fa ff ff	 jmp	 $LN2@repair_dam
$LN1@repair_dam:

; 1854 : }

  005c2	5f		 pop	 edi
  005c3	5e		 pop	 esi
  005c4	5b		 pop	 ebx
  005c5	8b e5		 mov	 esp, ebp
  005c7	5d		 pop	 ebp
  005c8	c2 04 00	 ret	 4
  005cb	90		 npad	 1
$LN68@repair_dam:
  005cc	00 00 00 00	 DD	 $LN12@repair_dam
  005d0	00 00 00 00	 DD	 $LN13@repair_dam
  005d4	00 00 00 00	 DD	 $LN44@repair_dam
  005d8	00 00 00 00	 DD	 $LN14@repair_dam
  005dc	00 00 00 00	 DD	 $LN44@repair_dam
  005e0	00 00 00 00	 DD	 $LN44@repair_dam
  005e4	00 00 00 00	 DD	 $LN44@repair_dam
  005e8	00 00 00 00	 DD	 $LN15@repair_dam
$LN69@repair_dam:
  005ec	00 00 00 00	 DD	 $LN17@repair_dam
  005f0	00 00 00 00	 DD	 $LN18@repair_dam
  005f4	00 00 00 00	 DD	 $LN19@repair_dam
  005f8	00 00 00 00	 DD	 $LN21@repair_dam
  005fc	00 00 00 00	 DD	 $LN44@repair_dam
$LN66@repair_dam:
  00600	00		 DB	 0
  00601	04		 DB	 4
  00602	04		 DB	 4
  00603	04		 DB	 4
  00604	04		 DB	 4
  00605	04		 DB	 4
  00606	04		 DB	 4
  00607	04		 DB	 4
  00608	04		 DB	 4
  00609	04		 DB	 4
  0060a	04		 DB	 4
  0060b	04		 DB	 4
  0060c	04		 DB	 4
  0060d	04		 DB	 4
  0060e	04		 DB	 4
  0060f	04		 DB	 4
  00610	04		 DB	 4
  00611	04		 DB	 4
  00612	04		 DB	 4
  00613	04		 DB	 4
  00614	04		 DB	 4
  00615	04		 DB	 4
  00616	04		 DB	 4
  00617	04		 DB	 4
  00618	04		 DB	 4
  00619	04		 DB	 4
  0061a	04		 DB	 4
  0061b	04		 DB	 4
  0061c	04		 DB	 4
  0061d	04		 DB	 4
  0061e	04		 DB	 4
  0061f	04		 DB	 4
  00620	01		 DB	 1
  00621	04		 DB	 4
  00622	04		 DB	 4
  00623	04		 DB	 4
  00624	04		 DB	 4
  00625	04		 DB	 4
  00626	04		 DB	 4
  00627	04		 DB	 4
  00628	04		 DB	 4
  00629	04		 DB	 4
  0062a	04		 DB	 4
  0062b	04		 DB	 4
  0062c	04		 DB	 4
  0062d	04		 DB	 4
  0062e	04		 DB	 4
  0062f	04		 DB	 4
  00630	04		 DB	 4
  00631	04		 DB	 4
  00632	04		 DB	 4
  00633	04		 DB	 4
  00634	04		 DB	 4
  00635	04		 DB	 4
  00636	04		 DB	 4
  00637	04		 DB	 4
  00638	04		 DB	 4
  00639	04		 DB	 4
  0063a	04		 DB	 4
  0063b	04		 DB	 4
  0063c	04		 DB	 4
  0063d	04		 DB	 4
  0063e	04		 DB	 4
  0063f	04		 DB	 4
  00640	04		 DB	 4
  00641	04		 DB	 4
  00642	04		 DB	 4
  00643	04		 DB	 4
  00644	04		 DB	 4
  00645	04		 DB	 4
  00646	04		 DB	 4
  00647	04		 DB	 4
  00648	04		 DB	 4
  00649	04		 DB	 4
  0064a	04		 DB	 4
  0064b	04		 DB	 4
  0064c	04		 DB	 4
  0064d	04		 DB	 4
  0064e	04		 DB	 4
  0064f	04		 DB	 4
  00650	04		 DB	 4
  00651	04		 DB	 4
  00652	04		 DB	 4
  00653	04		 DB	 4
  00654	04		 DB	 4
  00655	04		 DB	 4
  00656	04		 DB	 4
  00657	04		 DB	 4
  00658	04		 DB	 4
  00659	04		 DB	 4
  0065a	04		 DB	 4
  0065b	04		 DB	 4
  0065c	04		 DB	 4
  0065d	04		 DB	 4
  0065e	04		 DB	 4
  0065f	04		 DB	 4
  00660	02		 DB	 2
  00661	04		 DB	 4
  00662	04		 DB	 4
  00663	04		 DB	 4
  00664	04		 DB	 4
  00665	04		 DB	 4
  00666	04		 DB	 4
  00667	04		 DB	 4
  00668	04		 DB	 4
  00669	04		 DB	 4
  0066a	04		 DB	 4
  0066b	04		 DB	 4
  0066c	04		 DB	 4
  0066d	04		 DB	 4
  0066e	04		 DB	 4
  0066f	04		 DB	 4
  00670	04		 DB	 4
  00671	04		 DB	 4
  00672	04		 DB	 4
  00673	04		 DB	 4
  00674	04		 DB	 4
  00675	04		 DB	 4
  00676	04		 DB	 4
  00677	04		 DB	 4
  00678	04		 DB	 4
  00679	04		 DB	 4
  0067a	04		 DB	 4
  0067b	04		 DB	 4
  0067c	04		 DB	 4
  0067d	04		 DB	 4
  0067e	04		 DB	 4
  0067f	04		 DB	 4
  00680	04		 DB	 4
  00681	04		 DB	 4
  00682	04		 DB	 4
  00683	04		 DB	 4
  00684	04		 DB	 4
  00685	04		 DB	 4
  00686	04		 DB	 4
  00687	04		 DB	 4
  00688	04		 DB	 4
  00689	04		 DB	 4
  0068a	04		 DB	 4
  0068b	04		 DB	 4
  0068c	04		 DB	 4
  0068d	04		 DB	 4
  0068e	04		 DB	 4
  0068f	04		 DB	 4
  00690	04		 DB	 4
  00691	04		 DB	 4
  00692	04		 DB	 4
  00693	04		 DB	 4
  00694	04		 DB	 4
  00695	04		 DB	 4
  00696	04		 DB	 4
  00697	04		 DB	 4
  00698	04		 DB	 4
  00699	04		 DB	 4
  0069a	04		 DB	 4
  0069b	04		 DB	 4
  0069c	04		 DB	 4
  0069d	04		 DB	 4
  0069e	04		 DB	 4
  0069f	04		 DB	 4
  006a0	04		 DB	 4
  006a1	04		 DB	 4
  006a2	04		 DB	 4
  006a3	04		 DB	 4
  006a4	04		 DB	 4
  006a5	04		 DB	 4
  006a6	04		 DB	 4
  006a7	04		 DB	 4
  006a8	04		 DB	 4
  006a9	04		 DB	 4
  006aa	04		 DB	 4
  006ab	04		 DB	 4
  006ac	04		 DB	 4
  006ad	04		 DB	 4
  006ae	04		 DB	 4
  006af	04		 DB	 4
  006b0	04		 DB	 4
  006b1	04		 DB	 4
  006b2	04		 DB	 4
  006b3	04		 DB	 4
  006b4	04		 DB	 4
  006b5	04		 DB	 4
  006b6	04		 DB	 4
  006b7	04		 DB	 4
  006b8	04		 DB	 4
  006b9	04		 DB	 4
  006ba	04		 DB	 4
  006bb	04		 DB	 4
  006bc	04		 DB	 4
  006bd	04		 DB	 4
  006be	04		 DB	 4
  006bf	04		 DB	 4
  006c0	04		 DB	 4
  006c1	04		 DB	 4
  006c2	04		 DB	 4
  006c3	04		 DB	 4
  006c4	04		 DB	 4
  006c5	04		 DB	 4
  006c6	04		 DB	 4
  006c7	04		 DB	 4
  006c8	04		 DB	 4
  006c9	04		 DB	 4
  006ca	04		 DB	 4
  006cb	04		 DB	 4
  006cc	04		 DB	 4
  006cd	04		 DB	 4
  006ce	04		 DB	 4
  006cf	04		 DB	 4
  006d0	04		 DB	 4
  006d1	04		 DB	 4
  006d2	04		 DB	 4
  006d3	04		 DB	 4
  006d4	04		 DB	 4
  006d5	04		 DB	 4
  006d6	04		 DB	 4
  006d7	04		 DB	 4
  006d8	04		 DB	 4
  006d9	04		 DB	 4
  006da	04		 DB	 4
  006db	04		 DB	 4
  006dc	04		 DB	 4
  006dd	04		 DB	 4
  006de	04		 DB	 4
  006df	04		 DB	 4
  006e0	03		 DB	 3
  006e1	0f 1f 00	 npad	 3
$LN70@repair_dam:
  006e4	00 00 00 00	 DD	 $LN22@repair_dam
  006e8	00 00 00 00	 DD	 $LN23@repair_dam
  006ec	00 00 00 00	 DD	 $LN24@repair_dam
  006f0	00 00 00 00	 DD	 $LN25@repair_dam
  006f4	00 00 00 00	 DD	 $LN26@repair_dam
  006f8	00 00 00 00	 DD	 $LN27@repair_dam
  006fc	00 00 00 00	 DD	 $LN28@repair_dam
  00700	00 00 00 00	 DD	 $LN29@repair_dam
  00704	00 00 00 00	 DD	 $LN31@repair_dam
  00708	00 00 00 00	 DD	 $LN30@repair_dam
  0070c	00 00 00 00	 DD	 $LN6@repair_dam
$LN67@repair_dam:
  00710	00		 DB	 0
  00711	01		 DB	 1
  00712	02		 DB	 2
  00713	03		 DB	 3
  00714	04		 DB	 4
  00715	05		 DB	 5
  00716	0a		 DB	 10			; 0000000aH
  00717	0a		 DB	 10			; 0000000aH
  00718	0a		 DB	 10			; 0000000aH
  00719	0a		 DB	 10			; 0000000aH
  0071a	0a		 DB	 10			; 0000000aH
  0071b	0a		 DB	 10			; 0000000aH
  0071c	0a		 DB	 10			; 0000000aH
  0071d	0a		 DB	 10			; 0000000aH
  0071e	0a		 DB	 10			; 0000000aH
  0071f	0a		 DB	 10			; 0000000aH
  00720	0a		 DB	 10			; 0000000aH
  00721	0a		 DB	 10			; 0000000aH
  00722	0a		 DB	 10			; 0000000aH
  00723	0a		 DB	 10			; 0000000aH
  00724	06		 DB	 6
  00725	07		 DB	 7
  00726	08		 DB	 8
  00727	0a		 DB	 10			; 0000000aH
  00728	0a		 DB	 10			; 0000000aH
  00729	0a		 DB	 10			; 0000000aH
  0072a	0a		 DB	 10			; 0000000aH
  0072b	0a		 DB	 10			; 0000000aH
  0072c	0a		 DB	 10			; 0000000aH
  0072d	0a		 DB	 10			; 0000000aH
  0072e	0a		 DB	 10			; 0000000aH
  0072f	09		 DB	 9
?repair_damage_model@@YGXI@Z ENDP			; repair_damage_model
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?get_dynamics_damage_currently_repairing_type@@YGHXZ
_TEXT	SEGMENT
_type$ = -8						; size = 4
_val$ = -4						; size = 4
?get_dynamics_damage_currently_repairing_type@@YGHXZ PROC ; get_dynamics_damage_currently_repairing_type, COMDAT

; 1466 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1467 : 	int
; 1468 : 		val,
; 1469 : 		type;
; 1470 : 
; 1471 : 	type = 0;

  00009	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _type$[ebp], 0

; 1472 : 
; 1473 : 	val = current_flight_dynamics->repairing_damage >> 1;

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00015	8b 88 20 25 00
	00		 mov	 ecx, DWORD PTR [eax+9504]
  0001b	d1 e9		 shr	 ecx, 1
  0001d	89 4d fc	 mov	 DWORD PTR _val$[ebp], ecx
$LN2@get_dynami:

; 1474 : 
; 1475 : 	while (val)

  00020	83 7d fc 00	 cmp	 DWORD PTR _val$[ebp], 0
  00024	74 13		 je	 SHORT $LN3@get_dynami

; 1476 : 	{
; 1477 : 		type ++;

  00026	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]
  00029	83 c0 01	 add	 eax, 1
  0002c	89 45 f8	 mov	 DWORD PTR _type$[ebp], eax

; 1478 : 
; 1479 : 		val = val >> 1;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR _val$[ebp]
  00032	d1 f8		 sar	 eax, 1
  00034	89 45 fc	 mov	 DWORD PTR _val$[ebp], eax

; 1480 : 	}

  00037	eb e7		 jmp	 SHORT $LN2@get_dynami
$LN3@get_dynami:

; 1481 : 
; 1482 : 	return type;

  00039	8b 45 f8	 mov	 eax, DWORD PTR _type$[ebp]

; 1483 : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	8b e5		 mov	 esp, ebp
  00041	5d		 pop	 ebp
  00042	c3		 ret	 0
?get_dynamics_damage_currently_repairing_type@@YGHXZ ENDP ; get_dynamics_damage_currently_repairing_type
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?dynamics_restore_damage_values@@YGXXZ
_TEXT	SEGMENT
tv64 = -68						; size = 4
?dynamics_restore_damage_values@@YGXXZ PROC		; dynamics_restore_damage_values, COMDAT

; 1379 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1380 : 	switch (get_global_gunship_type ())

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  00011	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00014	83 e9 01	 sub	 ecx, 1
  00017	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  0001a	83 7d bc 08	 cmp	 DWORD PTR tv64[ebp], 8
  0001e	77 0a		 ja	 SHORT $LN4@dynamics_r
  00020	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00023	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN15@dynamics_r[edx*4]
$LN4@dynamics_r:

; 1381 : 	{
; 1382 : 		// JB 030313 Fly any aircraft
; 1383 : 		default:
; 1384 : 		case GUNSHIP_TYPE_APACHE:
; 1385 : 		{
; 1386 : 
; 1387 : 			apache_restore_damage_values ();

  0002a	e8 00 00 00 00	 call	 ?apache_restore_damage_values@@YGXXZ ; apache_restore_damage_values

; 1388 : 
; 1389 : 			break;

  0002f	eb 3d		 jmp	 SHORT $LN1@dynamics_r
$LN5@dynamics_r:

; 1390 : 		}
; 1391 : 
; 1392 : 		case GUNSHIP_TYPE_COMANCHE:
; 1393 : 		{
; 1394 : 
; 1395 : 			comanche_restore_damage_values ();

  00031	e8 00 00 00 00	 call	 ?comanche_restore_damage_values@@YGXXZ ; comanche_restore_damage_values

; 1396 : 
; 1397 : 			break;

  00036	eb 36		 jmp	 SHORT $LN1@dynamics_r
$LN6@dynamics_r:

; 1398 : 		}
; 1399 : 
; 1400 : 		case GUNSHIP_TYPE_HAVOC:
; 1401 : 		{
; 1402 : 
; 1403 : 			havoc_restore_damage_values ();

  00038	e8 00 00 00 00	 call	 ?havoc_restore_damage_values@@YGXXZ ; havoc_restore_damage_values

; 1404 : 
; 1405 : 			break;

  0003d	eb 2f		 jmp	 SHORT $LN1@dynamics_r
$LN7@dynamics_r:

; 1406 : 		}
; 1407 : 		case GUNSHIP_TYPE_HOKUM:
; 1408 : 		{
; 1409 : 
; 1410 : 			hokum_restore_damage_values ();

  0003f	e8 00 00 00 00	 call	 ?hokum_restore_damage_values@@YGXXZ ; hokum_restore_damage_values

; 1411 : 
; 1412 : 			break;

  00044	eb 28		 jmp	 SHORT $LN1@dynamics_r
$LN8@dynamics_r:

; 1413 : 		}
; 1414 : 		////Moje 030518 Start
; 1415 : 		case GUNSHIP_TYPE_BLACKHAWK:
; 1416 : 		{
; 1417 : 
; 1418 : 			blackhawk_restore_damage_values ();

  00046	e8 00 00 00 00	 call	 ?blackhawk_restore_damage_values@@YGXXZ ; blackhawk_restore_damage_values

; 1419 : 
; 1420 : 			break;

  0004b	eb 21		 jmp	 SHORT $LN1@dynamics_r
$LN9@dynamics_r:

; 1421 : 		}
; 1422 : 		////Moje 030518 End
; 1423 : 		////Moje 030612 start
; 1424 : 		case GUNSHIP_TYPE_HIND:
; 1425 : 		{
; 1426 : 
; 1427 : 			hind_restore_damage_values ();

  0004d	e8 00 00 00 00	 call	 ?hind_restore_damage_values@@YGXXZ ; hind_restore_damage_values

; 1428 : 
; 1429 : 			break;

  00052	eb 1a		 jmp	 SHORT $LN1@dynamics_r
$LN10@dynamics_r:

; 1430 : 		}
; 1431 : 		////Moje 030612 end
; 1432 : 		////Moje 030816 Start
; 1433 : 		case GUNSHIP_TYPE_AH64A:
; 1434 : 		{
; 1435 : 
; 1436 : 			ah64a_restore_damage_values ();

  00054	e8 00 00 00 00	 call	 ?ah64a_restore_damage_values@@YGXXZ ; ah64a_restore_damage_values

; 1437 : 
; 1438 : 			break;

  00059	eb 13		 jmp	 SHORT $LN1@dynamics_r
$LN11@dynamics_r:

; 1439 : 		}
; 1440 : 		case GUNSHIP_TYPE_KA50:
; 1441 : 		{
; 1442 : 			ka50_restore_damage_values ();

  0005b	e8 00 00 00 00	 call	 ?ka50_restore_damage_values@@YGXXZ ; ka50_restore_damage_values

; 1443 : 			break;

  00060	eb 0c		 jmp	 SHORT $LN1@dynamics_r
$LN12@dynamics_r:

; 1444 : 		}
; 1445 : 		////Moje 030816 end
; 1446 : 		case GUNSHIP_TYPE_VIPER:
; 1447 : 		{
; 1448 : 			viper_restore_damage_values ();

  00062	e8 00 00 00 00	 call	 ?viper_restore_damage_values@@YGXXZ ; viper_restore_damage_values

; 1449 : 
; 1450 : 			break;

  00067	eb 05		 jmp	 SHORT $LN1@dynamics_r
$LN13@dynamics_r:

; 1451 : 		}
; 1452 : 		case GUNSHIP_TYPE_KIOWA:
; 1453 : 		{
; 1454 : 			kiowa_restore_damage_values ();

  00069	e8 00 00 00 00	 call	 ?kiowa_restore_damage_values@@YGXXZ ; kiowa_restore_damage_values
$LN1@dynamics_r:

; 1455 : 
; 1456 : 			break;
; 1457 : 		}
; 1458 : 	}
; 1459 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
  00075	0f 1f 00	 npad	 3
$LN15@dynamics_r:
  00078	00 00 00 00	 DD	 $LN6@dynamics_r
  0007c	00 00 00 00	 DD	 $LN5@dynamics_r
  00080	00 00 00 00	 DD	 $LN7@dynamics_r
  00084	00 00 00 00	 DD	 $LN8@dynamics_r
  00088	00 00 00 00	 DD	 $LN9@dynamics_r
  0008c	00 00 00 00	 DD	 $LN10@dynamics_r
  00090	00 00 00 00	 DD	 $LN11@dynamics_r
  00094	00 00 00 00	 DD	 $LN12@dynamics_r
  00098	00 00 00 00	 DD	 $LN13@dynamics_r
?dynamics_restore_damage_values@@YGXXZ ENDP		; dynamics_restore_damage_values
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?update_dynamics_damage@@YGXXZ
_TEXT	SEGMENT
tv181 = -88						; size = 8
tv182 = -80						; size = 8
tv152 = -80						; size = 4
tv145 = -76						; size = 4
tv69 = -76						; size = 4
$T1 = -72						; size = 4
_damage$ = -4						; size = 4
?update_dynamics_damage@@YGXXZ PROC			; update_dynamics_damage, COMDAT

; 1253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1254 : 
; 1255 : 	int
; 1256 : 		damage;
; 1257 : 
; 1258 : 	for (damage = 1; damage < NUM_DYNAMICS_DAMAGE_TYPES; damage = damage << 1)

  00009	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _damage$[ebp], 1
  00010	eb 08		 jmp	 SHORT $LN4@update_dyn
$LN2@update_dyn:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _damage$[ebp]
  00015	d1 e0		 shl	 eax, 1
  00017	89 45 fc	 mov	 DWORD PTR _damage$[ebp], eax
$LN4@update_dyn:
  0001a	81 7d fc 00 00
	04 00		 cmp	 DWORD PTR _damage$[ebp], 262144 ; 00040000H
  00021	0f 8d db 02 00
	00		 jge	 $LN3@update_dyn

; 1259 : 	{
; 1260 : 
; 1261 : 		if (current_flight_dynamics->dynamics_damage & damage)

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0002c	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00032	23 4d fc	 and	 ecx, DWORD PTR _damage$[ebp]
  00035	0f 84 c2 02 00
	00		 je	 $LN5@update_dyn

; 1262 : 		{
; 1263 : 
; 1264 : 			switch (damage)

  0003b	8b 45 fc	 mov	 eax, DWORD PTR _damage$[ebp]
  0003e	89 45 b4	 mov	 DWORD PTR tv69[ebp], eax
  00041	81 7d b4 00 01
	00 00		 cmp	 DWORD PTR tv69[ebp], 256 ; 00000100H
  00048	7f 22		 jg	 SHORT $LN27@update_dyn
  0004a	81 7d b4 00 01
	00 00		 cmp	 DWORD PTR tv69[ebp], 256 ; 00000100H
  00051	0f 84 06 01 00
	00		 je	 $LN15@update_dyn
  00057	83 7d b4 20	 cmp	 DWORD PTR tv69[ebp], 32	; 00000020H
  0005b	74 26		 je	 SHORT $LN9@update_dyn
  0005d	83 7d b4 40	 cmp	 DWORD PTR tv69[ebp], 64	; 00000040H
  00061	0f 84 89 00 00
	00		 je	 $LN12@update_dyn
  00067	e9 91 02 00 00	 jmp	 $LN5@update_dyn
$LN27@update_dyn:
  0006c	81 7d b4 00 02
	00 00		 cmp	 DWORD PTR tv69[ebp], 512 ; 00000200H
  00073	0f 84 25 02 00
	00		 je	 $LN17@update_dyn
  00079	e9 7f 02 00 00	 jmp	 $LN5@update_dyn

; 1265 : 			{
; 1266 : 
; 1267 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR:
; 1268 : 				case DYNAMICS_DAMAGE_TAIL_ROTOR:
; 1269 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE:
; 1270 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE:
; 1271 : 				case DYNAMICS_DAMAGE_LOW_HYDRAULICS:
; 1272 : 				case DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS:
; 1273 : 				case DYNAMICS_DAMAGE_LOW_OIL_PRESSURE:
; 1274 : 				case DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE:
; 1275 : 				case DYNAMICS_DAMAGE_AVIONICS:
; 1276 : 				case DYNAMICS_DAMAGE_FIRE_EXTINGUISHER:
; 1277 : 				case DYNAMICS_DAMAGE_UNDERCARRIAGE:
; 1278 : 				case DYNAMICS_DAMAGE_APU:
; 1279 : 				case DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE:
; 1280 : 				{
; 1281 : 
; 1282 : 					break;

  0007e	e9 7a 02 00 00	 jmp	 $LN5@update_dyn
$LN9@update_dyn:

; 1283 : 				}
; 1284 : 				case DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE:
; 1285 : 				{
; 1286 : 
; 1287 : 					if (current_flight_dynamics->dynamics_damage & ~DYNAMICS_DAMAGE_LEFT_ENGINE)

  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00088	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0008e	83 e1 f7	 and	 ecx, -9			; fffffff7H
  00091	74 58		 je	 SHORT $LN11@update_dyn

; 1288 : 					{
; 1289 : 
; 1290 : 						current_flight_dynamics->left_engine_temp.value += 10.0 * get_delta_time ();

  00093	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0009b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4024000000000000
  000a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000a8	f3 0f 5a 88 c4
	1c 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7364]
  000b0	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000b4	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  000b8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000be	f3 0f 11 81 c4
	1c 00 00	 movss	 DWORD PTR [ecx+7364], xmm0

; 1291 : 
; 1292 : 						if (current_flight_dynamics->left_engine_temp.value > current_flight_dynamics->left_engine_temp.max)

  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000d1	f3 0f 10 80 c4
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7364]
  000d9	0f 2f 81 d0 1c
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7376]
  000e0	76 09		 jbe	 SHORT $LN11@update_dyn

; 1293 : 						{
; 1294 : 
; 1295 : 							dynamics_damage_model (DYNAMICS_DAMAGE_LEFT_ENGINE, FALSE);

  000e2	6a 00		 push	 0
  000e4	6a 08		 push	 8
  000e6	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model
$LN11@update_dyn:

; 1296 : 						}
; 1297 : 
; 1298 : 						#if DEBUG_MODULE
; 1299 : 
; 1300 : 						debug_log ("DYNAMICS: left engine fire temp %f", current_flight_dynamics->left_engine_temp.value);
; 1301 : 
; 1302 : 						#endif
; 1303 : 					}
; 1304 : 
; 1305 : 					break;

  000eb	e9 0d 02 00 00	 jmp	 $LN5@update_dyn
$LN12@update_dyn:

; 1306 : 				}
; 1307 : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE:
; 1308 : 				{
; 1309 : 
; 1310 : 					if (current_flight_dynamics->dynamics_damage & ~DYNAMICS_DAMAGE_RIGHT_ENGINE)

  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000f5	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  000fb	83 e1 ef	 and	 ecx, -17		; ffffffefH
  000fe	74 58		 je	 SHORT $LN14@update_dyn

; 1311 : 					{
; 1312 : 
; 1313 : 						current_flight_dynamics->right_engine_temp.value += 10.0 * get_delta_time ();

  00100	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00108	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4024000000000000
  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00115	f3 0f 5a 88 24
	1d 00 00	 cvtss2sd xmm1, DWORD PTR [eax+7460]
  0011d	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00121	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00125	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0012b	f3 0f 11 81 24
	1d 00 00	 movss	 DWORD PTR [ecx+7460], xmm0

; 1314 : 
; 1315 : 						if (current_flight_dynamics->right_engine_temp.value > current_flight_dynamics->right_engine_temp.max)

  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00138	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013e	f3 0f 10 80 24
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7460]
  00146	0f 2f 81 30 1d
	00 00		 comiss	 xmm0, DWORD PTR [ecx+7472]
  0014d	76 09		 jbe	 SHORT $LN14@update_dyn

; 1316 : 						{
; 1317 : 
; 1318 : 							dynamics_damage_model (DYNAMICS_DAMAGE_RIGHT_ENGINE, FALSE);

  0014f	6a 00		 push	 0
  00151	6a 10		 push	 16			; 00000010H
  00153	e8 00 00 00 00	 call	 ?dynamics_damage_model@@YGXIH@Z ; dynamics_damage_model
$LN14@update_dyn:

; 1319 : 						}
; 1320 : 
; 1321 : 						#if DEBUG_MODULE
; 1322 : 
; 1323 : 						debug_log ("DYNAMICS: right engine fire temp %f", current_flight_dynamics->right_engine_temp.value);
; 1324 : 
; 1325 : 						#endif
; 1326 : 					}
; 1327 : 
; 1328 : 					break;

  00158	e9 a0 01 00 00	 jmp	 $LN5@update_dyn
$LN15@update_dyn:

; 1329 : 				}
; 1330 : 				case DYNAMICS_DAMAGE_STABILISER:
; 1331 : 				{
; 1332 : 
; 1333 : 					//
; 1334 : 					// move cog about ramdomly
; 1335 : 					//
; 1336 : 
; 1337 : 					if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_AIRBORNE_AIRCRAFT))

  0015d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00164	74 0c		 je	 SHORT $LN19@update_dyn
  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	89 4d b4	 mov	 DWORD PTR tv145[ebp], ecx
  00170	eb 1d		 jmp	 SHORT $LN20@update_dyn
$LN19@update_dyn:
  00172	68 39 05 00 00	 push	 1337			; 00000539H
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00182	52		 push	 edx
  00183	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00188	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN20@update_dyn:
  0018f	b8 01 00 00 00	 mov	 eax, 1
  00194	85 c0		 test	 eax, eax
  00196	74 09		 je	 SHORT $LN21@update_dyn
  00198	c7 45 b0 04 00
	00 00		 mov	 DWORD PTR tv152[ebp], 4
  0019f	eb 1d		 jmp	 SHORT $LN22@update_dyn
$LN21@update_dyn:
  001a1	68 39 05 00 00	 push	 1337			; 00000539H
  001a6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b1	51		 push	 ecx
  001b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b7	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN22@update_dyn:
  001be	6a 04		 push	 4
  001c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  001c6	52		 push	 edx
  001c7	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv145[ebp], 1116
  001ce	8b 4d b0	 mov	 ecx, DWORD PTR tv152[ebp]
  001d1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001d8	ff d2		 call	 edx
  001da	85 c0		 test	 eax, eax
  001dc	0f 84 ba 00 00
	00		 je	 $LN16@update_dyn

; 1338 : 					{
; 1339 : 
; 1340 : 						current_flight_dynamics->centre_of_gravity.z -= current_flight_dynamics->pitch.value * get_model_delta_time ();

  001e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ed	f3 0f 10 80 5c
	21 00 00	 movss	 xmm0, DWORD PTR [eax+8540]
  001f5	f3 0f 59 81 90
	00 00 00	 mulss	 xmm0, DWORD PTR [ecx+144]
  001fd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00203	f3 0f 10 8a 2c
	1c 00 00	 movss	 xmm1, DWORD PTR [edx+7212]
  0020b	f3 0f 5c c8	 subss	 xmm1, xmm0
  0020f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00214	f3 0f 11 88 2c
	1c 00 00	 movss	 DWORD PTR [eax+7212], xmm1

; 1341 : 
; 1342 : 						current_flight_dynamics->centre_of_gravity.z = bound (current_flight_dynamics->centre_of_gravity.z, -0.1, 0.1);

  0021c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00221	f3 0f 5a 80 2c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [eax+7212]
  00229	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@bfb999999999999a
  00231	66 0f 2f c8	 comisd	 xmm1, xmm0
  00235	76 0f		 jbe	 SHORT $LN25@update_dyn
  00237	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@bfb999999999999a
  0023f	f2 0f 11 45 b0	 movsd	 QWORD PTR tv182[ebp], xmm0
  00244	eb 44		 jmp	 SHORT $LN26@update_dyn
$LN25@update_dyn:
  00246	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0024c	f3 0f 5a 81 2c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [ecx+7212]
  00254	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fb999999999999a
  0025c	76 0f		 jbe	 SHORT $LN23@update_dyn
  0025e	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fb999999999999a
  00266	f2 0f 11 45 a8	 movsd	 QWORD PTR tv181[ebp], xmm0
  0026b	eb 13		 jmp	 SHORT $LN24@update_dyn
$LN23@update_dyn:
  0026d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00273	f3 0f 5a 82 2c
	1c 00 00	 cvtss2sd xmm0, DWORD PTR [edx+7212]
  0027b	f2 0f 11 45 a8	 movsd	 QWORD PTR tv181[ebp], xmm0
$LN24@update_dyn:
  00280	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv181[ebp]
  00285	f2 0f 11 45 b0	 movsd	 QWORD PTR tv182[ebp], xmm0
$LN26@update_dyn:
  0028a	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv182[ebp]
  0028f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00294	f3 0f 11 80 2c
	1c 00 00	 movss	 DWORD PTR [eax+7212], xmm0
$LN16@update_dyn:

; 1343 : 
; 1344 : 						#if DEBUG_MODULE
; 1345 : 
; 1346 : 						debug_log ("DYNAMICS: stabaliser damaged : cog %f, %f", current_flight_dynamics->centre_of_gravity.x, current_flight_dynamics->centre_of_gravity.z);
; 1347 : 
; 1348 : 						#endif
; 1349 : 					}
; 1350 : 
; 1351 : 					break;

  0029c	eb 5f		 jmp	 SHORT $LN5@update_dyn
$LN17@update_dyn:

; 1352 : 				}
; 1353 : 
; 1354 : 				case DYNAMICS_DAMAGE_FUEL_LEAK:
; 1355 : 				{
; 1356 : 
; 1357 : 					current_flight_dynamics->fuel_weight.value -= FUEL_LEAK_RATE * get_delta_time ();

  0029e	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  002a6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fee3d70a3d70a3d
  002ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002b3	f3 0f 5a 88 a4
	24 00 00	 cvtss2sd xmm1, DWORD PTR [eax+9380]
  002bb	f2 0f 5c c8	 subsd	 xmm1, xmm0
  002bf	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  002c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c9	f3 0f 11 81 a4
	24 00 00	 movss	 DWORD PTR [ecx+9380], xmm0

; 1358 : 
; 1359 : 					current_flight_dynamics->fuel_weight.value = max (current_flight_dynamics->fuel_weight.value, 0.0f);

  002d1	0f 57 c0	 xorps	 xmm0, xmm0
  002d4	f3 0f 11 45 b8	 movss	 DWORD PTR $T1[ebp], xmm0
  002d9	8d 45 b8	 lea	 eax, DWORD PTR $T1[ebp]
  002dc	50		 push	 eax
  002dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e3	81 c1 a4 24 00
	00		 add	 ecx, 9380		; 000024a4H
  002e9	51		 push	 ecx
  002ea	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  002ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f5	8b 00		 mov	 eax, DWORD PTR [eax]
  002f7	89 82 a4 24 00
	00		 mov	 DWORD PTR [edx+9380], eax
$LN5@update_dyn:

; 1360 : 
; 1361 : 					#if DEBUG_MODULE
; 1362 : 
; 1363 : 					debug_log ("DYNAMICS: fuel leak, currently %f", current_flight_dynamics->fuel_weight.value);
; 1364 : 
; 1365 : 					#endif
; 1366 : 
; 1367 : 					break;
; 1368 : 				}
; 1369 : 			}
; 1370 : 		}
; 1371 : 	}

  002fd	e9 10 fd ff ff	 jmp	 $LN2@update_dyn
$LN3@update_dyn:

; 1372 : }

  00302	5f		 pop	 edi
  00303	5e		 pop	 esi
  00304	5b		 pop	 ebx
  00305	8b e5		 mov	 esp, ebp
  00307	5d		 pop	 ebp
  00308	c3		 ret	 0
?update_dynamics_damage@@YGXXZ ENDP			; update_dynamics_damage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?update_dynamics_at_keysite@@YGXXZ
_TEXT	SEGMENT
tv345 = -104						; size = 8
tv314 = -104						; size = 4
tv251 = -104						; size = 4
tv306 = -100						; size = 4
tv243 = -100						; size = 4
tv293 = -96						; size = 4
tv270 = -96						; size = 4
tv228 = -96						; size = 4
tv168 = -96						; size = 4
tv90 = -96						; size = 4
tv285 = -92						; size = 4
tv262 = -92						; size = 4
tv220 = -92						; size = 4
tv169 = -92						; size = 4
tv83 = -92						; size = 4
$T1 = -88						; size = 4
_max_fuel$2 = -20					; size = 4
_keysite$3 = -16					; size = 4
_this_damage$ = -12					; size = 4
_damage_count$ = -8					; size = 4
_model_damage$ = -4					; size = 4
?update_dynamics_at_keysite@@YGXXZ PROC			; update_dynamics_at_keysite, COMDAT

; 1082 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1083 : 
; 1084 : 	unsigned int
; 1085 : 		model_damage,
; 1086 : 		damage_count,
; 1087 : 		this_damage;
; 1088 : 
; 1089 : 	if ((!get_keysite_currently_landed_at ()) || (!get_gunship_entity ()))

  00009	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  0000e	85 c0		 test	 eax, eax
  00010	74 09		 je	 SHORT $LN5@update_dyn
  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00019	75 05		 jne	 SHORT $LN4@update_dyn
$LN5@update_dyn:

; 1090 : 	{
; 1091 : 
; 1092 : 		return;

  0001b	e9 35 06 00 00	 jmp	 $LN1@update_dyn
$LN4@update_dyn:

; 1093 : 	}
; 1094 : 
; 1095 : 	//
; 1096 : 	// Refuel, only set if inside keysite
; 1097 : 	//
; 1098 : 
; 1099 : 	#if !DEMO_VERSION
; 1100 : 
; 1101 : 	if (current_flight_dynamics->refuelling)

  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00025	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  0002b	c1 e9 02	 shr	 ecx, 2
  0002e	83 e1 01	 and	 ecx, 1
  00031	0f 84 de 01 00
	00		 je	 $LN8@update_dyn

; 1102 : 	{
; 1103 : 		entity
; 1104 : 			*keysite;
; 1105 : 
; 1106 : 		float
; 1107 : 			max_fuel;
; 1108 : 
; 1109 : 		if (!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_FUEL_LEAK))

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0003c	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00042	81 e1 00 02 00
	00		 and	 ecx, 512		; 00000200H
  00048	0f 85 ba 01 00
	00		 jne	 $LN7@update_dyn

; 1110 : 		{
; 1111 : 
; 1112 : 			//#if DYNAMICS_DEBUG
; 1113 : 
; 1114 : //			debug_log ("DYNAMICS: refuelling, fuel = %f (max = %f)", current_flight_dynamics->fuel_weight.value, current_flight_dynamics->fuel_weight.max);
; 1115 : 
; 1116 : 			//#endif
; 1117 : 
; 1118 : 			max_fuel = current_flight_dynamics->fuel_weight.max;

  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00053	f3 0f 10 80 b0
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9392]
  0005b	f3 0f 11 45 ec	 movss	 DWORD PTR _max_fuel$2[ebp], xmm0

; 1119 : 
; 1120 : 			keysite = get_keysite_currently_landed_at ();

  00060	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  00065	89 45 f0	 mov	 DWORD PTR _keysite$3[ebp], eax

; 1121 : 
; 1122 : 			if (keysite)

  00068	83 7d f0 00	 cmp	 DWORD PTR _keysite$3[ebp], 0
  0006c	0f 84 a1 00 00
	00		 je	 $LN11@update_dyn

; 1123 : 			{
; 1124 : 
; 1125 : 				if (get_local_entity_float_value (keysite, FLOAT_TYPE_FUEL_SUPPLY_LEVEL) <= 0.0)

  00072	83 7d f0 00	 cmp	 DWORD PTR _keysite$3[ebp], 0
  00076	74 0a		 je	 SHORT $LN21@update_dyn
  00078	8b 45 f0	 mov	 eax, DWORD PTR _keysite$3[ebp]
  0007b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007d	89 4d a4	 mov	 DWORD PTR tv83[ebp], ecx
  00080	eb 1d		 jmp	 SHORT $LN22@update_dyn
$LN21@update_dyn:
  00082	68 65 04 00 00	 push	 1125			; 00000465H
  00087	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN22@update_dyn:
  0009f	b8 01 00 00 00	 mov	 eax, 1
  000a4	85 c0		 test	 eax, eax
  000a6	74 09		 je	 SHORT $LN23@update_dyn
  000a8	c7 45 a0 30 00
	00 00		 mov	 DWORD PTR tv90[ebp], 48	; 00000030H
  000af	eb 1d		 jmp	 SHORT $LN24@update_dyn
$LN23@update_dyn:
  000b1	68 65 04 00 00	 push	 1125			; 00000465H
  000b6	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  000c1	51		 push	 ecx
  000c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c7	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN24@update_dyn:
  000ce	6a 30		 push	 48			; 00000030H
  000d0	8b 55 f0	 mov	 edx, DWORD PTR _keysite$3[ebp]
  000d3	52		 push	 edx
  000d4	69 45 a4 bc 02
	00 00		 imul	 eax, DWORD PTR tv83[ebp], 700
  000db	8b 4d a0	 mov	 ecx, DWORD PTR tv90[ebp]
  000de	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  000e5	ff d2		 call	 edx
  000e7	dd 5d 98	 fstp	 QWORD PTR tv345[ebp]
  000ea	0f 57 c0	 xorps	 xmm0, xmm0
  000ed	66 0f 2f 45 98	 comisd	 xmm0, QWORD PTR tv345[ebp]
  000f2	72 1f		 jb	 SHORT $LN11@update_dyn

; 1126 : 				{
; 1127 : 
; 1128 : 					if (!get_connection_list_head ())

  000f4	e8 00 00 00 00	 call	 ?get_connection_list_head@@YGPAUCONNECTION_LIST_TYPE@@XZ ; get_connection_list_head
  000f9	85 c0		 test	 eax, eax
  000fb	75 16		 jne	 SHORT $LN11@update_dyn

; 1129 : 					{
; 1130 : 
; 1131 : 						max_fuel *= 0.25;

  000fd	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _max_fuel$2[ebp]
  00102	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd0000000000000
  0010a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0010e	f3 0f 11 45 ec	 movss	 DWORD PTR _max_fuel$2[ebp], xmm0
$LN11@update_dyn:

; 1132 : 					}
; 1133 : 				}
; 1134 : 			}
; 1135 : 
; 1136 : 			if (current_flight_dynamics->fuel_weight.value >= max_fuel)

  00113	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00118	f3 0f 10 80 a4
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9380]
  00120	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _max_fuel$2[ebp]
  00124	72 1c		 jb	 SHORT $LN12@update_dyn

; 1137 : 			{
; 1138 : 
; 1139 : 				current_flight_dynamics->refuelling = FALSE;

  00126	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0012b	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00131	83 e1 fb	 and	 ecx, -5			; fffffffbH
  00134	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0013a	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 1140 : 			}
; 1141 : 			else

  00140	eb 33		 jmp	 SHORT $LN13@update_dyn
$LN12@update_dyn:

; 1142 : 			{
; 1143 : 
; 1144 : 				current_flight_dynamics->fuel_weight.value += REFUELLING_RATE * get_delta_time ();

  00142	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  0014a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4032e66666666666
  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00157	f3 0f 5a 88 a4
	24 00 00	 cvtss2sd xmm1, DWORD PTR [eax+9380]
  0015f	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00163	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00167	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0016d	f3 0f 11 81 a4
	24 00 00	 movss	 DWORD PTR [ecx+9380], xmm0
$LN13@update_dyn:

; 1145 : 			}
; 1146 : 
; 1147 : 			current_flight_dynamics->fuel_weight.value = bound (current_flight_dynamics->fuel_weight.value,

  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0017a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00180	f3 0f 10 80 ac
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9388]
  00188	0f 2f 81 a4 24
	00 00		 comiss	 xmm0, DWORD PTR [ecx+9380]
  0018f	76 15		 jbe	 SHORT $LN27@update_dyn
  00191	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00197	f3 0f 10 82 ac
	24 00 00	 movss	 xmm0, DWORD PTR [edx+9388]
  0019f	f3 0f 11 45 a4	 movss	 DWORD PTR tv169[ebp], xmm0
  001a4	eb 4d		 jmp	 SHORT $LN28@update_dyn
$LN27@update_dyn:
  001a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001b1	f3 0f 10 80 a4
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9380]
  001b9	0f 2f 81 b0 24
	00 00		 comiss	 xmm0, DWORD PTR [ecx+9392]
  001c0	76 15		 jbe	 SHORT $LN25@update_dyn
  001c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001c8	f3 0f 10 82 b0
	24 00 00	 movss	 xmm0, DWORD PTR [edx+9392]
  001d0	f3 0f 11 45 a0	 movss	 DWORD PTR tv168[ebp], xmm0
  001d5	eb 12		 jmp	 SHORT $LN26@update_dyn
$LN25@update_dyn:
  001d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001dc	f3 0f 10 80 a4
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9380]
  001e4	f3 0f 11 45 a0	 movss	 DWORD PTR tv168[ebp], xmm0
$LN26@update_dyn:
  001e9	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv168[ebp]
  001ee	f3 0f 11 45 a4	 movss	 DWORD PTR tv169[ebp], xmm0
$LN28@update_dyn:
  001f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  001f9	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv169[ebp]
  001fe	f3 0f 11 81 a4
	24 00 00	 movss	 DWORD PTR [ecx+9380], xmm0

; 1148 : 																				current_flight_dynamics->fuel_weight.min,
; 1149 : 																				current_flight_dynamics->fuel_weight.max);
; 1150 : 		}
; 1151 : 		else

  00206	eb 0d		 jmp	 SHORT $LN8@update_dyn
$LN7@update_dyn:

; 1152 : 		{
; 1153 : 
; 1154 : 			debug_log ("DYNAMICS: can't refuel till leak is fixed");

  00208	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@LOOOGMEN@DYNAMICS?3?5can?8t?5refuel?5till?5lea@
  0020d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00212	83 c4 04	 add	 esp, 4
$LN8@update_dyn:

; 1155 : 		}
; 1156 : 	}
; 1157 : 
; 1158 : 	#endif
; 1159 : 
; 1160 : 	//
; 1161 : 	// Repair, only set if inside keysite
; 1162 : 	//
; 1163 : 
; 1164 : 	if (current_flight_dynamics->repairing)

  00215	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0021a	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00220	c1 e9 03	 shr	 ecx, 3
  00223	83 e1 01	 and	 ecx, 1
  00226	0f 84 29 04 00
	00		 je	 $LN19@update_dyn

; 1165 : 	{
; 1166 : 
; 1167 : 		if (current_flight_dynamics->dynamics_damage != DYNAMICS_DAMAGE_NONE)

  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00231	83 b8 24 25 00
	00 01		 cmp	 DWORD PTR [eax+9508], 1
  00238	0f 84 17 04 00
	00		 je	 $LN19@update_dyn

; 1168 : 		{
; 1169 : 
; 1170 : 			current_flight_dynamics->damage_repair_time -= get_delta_time ();

  0023e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00243	f3 0f 10 80 18
	25 00 00	 movss	 xmm0, DWORD PTR [eax+9496]
  0024b	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00253	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00259	f3 0f 11 81 18
	25 00 00	 movss	 DWORD PTR [ecx+9496], xmm0

; 1171 : 
; 1172 : 			current_flight_dynamics->damage_repair_time = max (current_flight_dynamics->damage_repair_time, 0.0f);

  00261	0f 57 c0	 xorps	 xmm0, xmm0
  00264	f3 0f 11 45 a8	 movss	 DWORD PTR $T1[ebp], xmm0
  00269	8d 45 a8	 lea	 eax, DWORD PTR $T1[ebp]
  0026c	50		 push	 eax
  0026d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00273	81 c1 18 25 00
	00		 add	 ecx, 9496		; 00002518H
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0027f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00285	8b 00		 mov	 eax, DWORD PTR [eax]
  00287	89 82 18 25 00
	00		 mov	 DWORD PTR [edx+9496], eax

; 1173 : 
; 1174 : 			#if DEBUG_MODULE
; 1175 : 
; 1176 : 			debug_log ("DYNAMICS: repairing %s, repair time %f seconds", dynamics_damage_database [damage_count].name, current_flight_dynamics->damage_repair_time);
; 1177 : 
; 1178 : 			#endif
; 1179 : 
; 1180 : 			//
; 1181 : 			// set repair timer to time to repair each part in turn
; 1182 : 			//
; 1183 : 
; 1184 : 			if (current_flight_dynamics->damage_repair_time <= 0.0)

  0028d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00292	f3 0f 5a 80 18
	25 00 00	 cvtss2sd xmm0, DWORD PTR [eax+9496]
  0029a	0f 57 c9	 xorps	 xmm1, xmm1
  0029d	66 0f 2f c8	 comisd	 xmm1, xmm0
  002a1	0f 82 ae 03 00
	00		 jb	 $LN19@update_dyn

; 1185 : 			{
; 1186 : 
; 1187 : 				// clear repaired damage
; 1188 : 				if ((current_flight_dynamics->repairing_damage != DYNAMICS_DAMAGE_NONE) &&

  002a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ac	83 b8 20 25 00
	00 01		 cmp	 DWORD PTR [eax+9504], 1
  002b3	74 2a		 je	 SHORT $LN17@update_dyn
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002c0	8b 90 24 25 00
	00		 mov	 edx, DWORD PTR [eax+9508]
  002c6	23 91 20 25 00
	00		 and	 edx, DWORD PTR [ecx+9504]
  002cc	74 11		 je	 SHORT $LN17@update_dyn

; 1189 : 					(current_flight_dynamics->dynamics_damage & current_flight_dynamics->repairing_damage))
; 1190 : 				{
; 1191 : 
; 1192 : 					repair_damage_model (current_flight_dynamics->repairing_damage);

  002ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002d3	8b 88 20 25 00
	00		 mov	 ecx, DWORD PTR [eax+9504]
  002d9	51		 push	 ecx
  002da	e8 00 00 00 00	 call	 ?repair_damage_model@@YGXI@Z ; repair_damage_model
$LN17@update_dyn:

; 1193 : 				}
; 1194 : 
; 1195 : 				current_flight_dynamics->repairing_damage = DYNAMICS_DAMAGE_NONE;

  002df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002e4	c7 80 20 25 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+9504], 1

; 1196 : 
; 1197 : 				// start repairing next
; 1198 : 				this_damage = DYNAMICS_DAMAGE_NONE;

  002ee	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1

; 1199 : 
; 1200 : 				damage_count = 0;

  002f5	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _damage_count$[ebp], 0

; 1201 : 
; 1202 : 				model_damage = current_flight_dynamics->dynamics_damage;

  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00301	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00307	89 4d fc	 mov	 DWORD PTR _model_damage$[ebp], ecx
$LN2@update_dyn:

; 1203 : 
; 1204 : 				while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  0030a	81 7d f4 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  00311	73 4e		 jae	 SHORT $LN3@update_dyn

; 1205 : 				{
; 1206 : 
; 1207 : 					if ((model_damage & this_damage) && (dynamics_damage_database [damage_count].repairable))

  00313	8b 45 fc	 mov	 eax, DWORD PTR _model_damage$[ebp]
  00316	23 45 f4	 and	 eax, DWORD PTR _this_damage$[ebp]
  00319	74 33		 je	 SHORT $LN18@update_dyn
  0031b	6b 45 f8 1c	 imul	 eax, DWORD PTR _damage_count$[ebp], 28
  0031f	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A[eax+24], 0
  00326	74 26		 je	 SHORT $LN18@update_dyn

; 1208 : 					{
; 1209 : 
; 1210 : 						current_flight_dynamics->damage_repair_time = dynamics_damage_database [damage_count].repair_time;

  00328	6b 45 f8 1c	 imul	 eax, DWORD PTR _damage_count$[ebp], 28
  0032c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00332	8b 90 10 00 00
	00		 mov	 edx, DWORD PTR ?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A[eax+16]
  00338	89 91 18 25 00
	00		 mov	 DWORD PTR [ecx+9496], edx

; 1211 : 
; 1212 : 						current_flight_dynamics->repairing_damage = this_damage;

  0033e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00343	8b 4d f4	 mov	 ecx, DWORD PTR _this_damage$[ebp]
  00346	89 88 20 25 00
	00		 mov	 DWORD PTR [eax+9504], ecx

; 1213 : 
; 1214 : 						#if DEBUG_MODULE
; 1215 : 
; 1216 : 						debug_log ("DYNAMICS: repairing %s, repair time %f seconds", dynamics_damage_database [damage_count].name, current_flight_dynamics->damage_repair_time);
; 1217 : 
; 1218 : 						#endif
; 1219 : 
; 1220 : 						break;

  0034c	eb 13		 jmp	 SHORT $LN3@update_dyn
$LN18@update_dyn:

; 1221 : 					}
; 1222 : 
; 1223 : 					damage_count ++;

  0034e	8b 45 f8	 mov	 eax, DWORD PTR _damage_count$[ebp]
  00351	83 c0 01	 add	 eax, 1
  00354	89 45 f8	 mov	 DWORD PTR _damage_count$[ebp], eax

; 1224 : 
; 1225 : 					this_damage = this_damage << 1;

  00357	8b 45 f4	 mov	 eax, DWORD PTR _this_damage$[ebp]
  0035a	d1 e0		 shl	 eax, 1
  0035c	89 45 f4	 mov	 DWORD PTR _this_damage$[ebp], eax

; 1226 : 				}

  0035f	eb a9		 jmp	 SHORT $LN2@update_dyn
$LN3@update_dyn:

; 1227 : 
; 1228 : 				if (current_flight_dynamics->repairing_damage == DYNAMICS_DAMAGE_NONE)

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00366	83 b8 20 25 00
	00 01		 cmp	 DWORD PTR [eax+9504], 1
  0036d	0f 85 e2 02 00
	00		 jne	 $LN19@update_dyn

; 1229 : 				{
; 1230 : 
; 1231 : 					#if DEBUG_MODULE
; 1232 : 
; 1233 : 					debug_log ("DYNAMICS: model fully repaired");
; 1234 : 
; 1235 : 					#endif
; 1236 : 
; 1237 : 					restore_helicopter_entity (get_gunship_entity (), NULL, (operational_state_types) get_local_entity_int_value (get_gunship_entity (), INT_TYPE_OPERATIONAL_STATE));

  00373	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0037a	74 0c		 je	 SHORT $LN29@update_dyn
  0037c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00381	8b 08		 mov	 ecx, DWORD PTR [eax]
  00383	89 4d a4	 mov	 DWORD PTR tv220[ebp], ecx
  00386	eb 24		 jmp	 SHORT $LN30@update_dyn
$LN29@update_dyn:
  00388	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  0038e	81 c2 9b 00 00
	00		 add	 edx, 155		; 0000009bH
  00394	52		 push	 edx
  00395	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0039f	50		 push	 eax
  003a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN30@update_dyn:
  003ac	b9 01 00 00 00	 mov	 ecx, 1
  003b1	85 c9		 test	 ecx, ecx
  003b3	74 09		 je	 SHORT $LN31@update_dyn
  003b5	c7 45 a0 97 00
	00 00		 mov	 DWORD PTR tv228[ebp], 151 ; 00000097H
  003bc	eb 24		 jmp	 SHORT $LN32@update_dyn
$LN31@update_dyn:
  003be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  003c4	81 c2 9b 00 00
	00		 add	 edx, 155		; 0000009bH
  003ca	52		 push	 edx
  003cb	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003db	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv228[ebp], 0
$LN32@update_dyn:
  003e2	68 97 00 00 00	 push	 151			; 00000097H
  003e7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003ed	51		 push	 ecx
  003ee	69 55 a4 5c 04
	00 00		 imul	 edx, DWORD PTR tv220[ebp], 1116
  003f5	8b 45 a0	 mov	 eax, DWORD PTR tv228[ebp]
  003f8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003ff	ff d1		 call	 ecx
  00401	50		 push	 eax
  00402	6a 00		 push	 0
  00404	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0040a	52		 push	 edx
  0040b	e8 00 00 00 00	 call	 ?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z ; restore_helicopter_entity

; 1238 : 
; 1239 : 					set_client_server_entity_int_value (get_gunship_entity (), INT_TYPE_DAMAGE_LEVEL, get_local_entity_int_value (get_gunship_entity (), INT_TYPE_INITIAL_DAMAGE_LEVEL));

  00410	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00417	74 0c		 je	 SHORT $LN37@update_dyn
  00419	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0041e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00420	89 4d a4	 mov	 DWORD PTR tv262[ebp], ecx
  00423	eb 24		 jmp	 SHORT $LN38@update_dyn
$LN37@update_dyn:
  00425	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  0042b	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00431	52		 push	 edx
  00432	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00437	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0043c	50		 push	 eax
  0043d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00442	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv262[ebp], 0
$LN38@update_dyn:
  00449	b9 01 00 00 00	 mov	 ecx, 1
  0044e	85 c9		 test	 ecx, ecx
  00450	74 09		 je	 SHORT $LN39@update_dyn
  00452	c7 45 a0 69 00
	00 00		 mov	 DWORD PTR tv270[ebp], 105 ; 00000069H
  00459	eb 24		 jmp	 SHORT $LN40@update_dyn
$LN39@update_dyn:
  0045b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  00461	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00467	52		 push	 edx
  00468	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0046d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00472	50		 push	 eax
  00473	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00478	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv270[ebp], 0
$LN40@update_dyn:
  0047f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00486	74 0d		 je	 SHORT $LN33@update_dyn
  00488	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0048e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00490	89 55 9c	 mov	 DWORD PTR tv243[ebp], edx
  00493	eb 23		 jmp	 SHORT $LN34@update_dyn
$LN33@update_dyn:
  00495	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  0049a	05 9d 00 00 00	 add	 eax, 157		; 0000009dH
  0049f	50		 push	 eax
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  004a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ab	51		 push	 ecx
  004ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004b1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv243[ebp], 0
$LN34@update_dyn:
  004b8	ba 01 00 00 00	 mov	 edx, 1
  004bd	85 d2		 test	 edx, edx
  004bf	74 09		 je	 SHORT $LN35@update_dyn
  004c1	c7 45 98 25 00
	00 00		 mov	 DWORD PTR tv251[ebp], 37 ; 00000025H
  004c8	eb 23		 jmp	 SHORT $LN36@update_dyn
$LN35@update_dyn:
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  004cf	05 9d 00 00 00	 add	 eax, 157		; 0000009dH
  004d4	50		 push	 eax
  004d5	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  004da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004e0	51		 push	 ecx
  004e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004e6	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN36@update_dyn:
  004ed	6a 69		 push	 105			; 00000069H
  004ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004f5	52		 push	 edx
  004f6	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv262[ebp], 1116
  004fd	8b 4d a0	 mov	 ecx, DWORD PTR tv270[ebp]
  00500	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00507	ff d2		 call	 edx
  00509	50		 push	 eax
  0050a	6a 25		 push	 37			; 00000025H
  0050c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00511	50		 push	 eax
  00512	69 4d 9c b8 08
	00 00		 imul	 ecx, DWORD PTR tv243[ebp], 2232
  00519	8b 55 98	 mov	 edx, DWORD PTR tv251[ebp]
  0051c	8d 84 d1 00 00
	00 00		 lea	 eax, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[ecx+edx*8]
  00523	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00529	8b 14 88	 mov	 edx, DWORD PTR [eax+ecx*4]
  0052c	ff d2		 call	 edx

; 1240 : 
; 1241 : 					transmit_entity_comms_message (ENTITY_COMMS_RESTORE_ENTITY, get_gunship_entity (), get_local_entity_vec3d_ptr (get_gunship_entity (), VEC3D_TYPE_POSITION), get_local_entity_int_value (get_gunship_entity (), INT_TYPE_OPERATIONAL_STATE));

  0052e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00535	74 0c		 je	 SHORT $LN41@update_dyn
  00537	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0053c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0053e	89 4d a4	 mov	 DWORD PTR tv285[ebp], ecx
  00541	eb 24		 jmp	 SHORT $LN42@update_dyn
$LN41@update_dyn:
  00543	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  00549	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  0054f	52		 push	 edx
  00550	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00555	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0055a	50		 push	 eax
  0055b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00560	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv285[ebp], 0
$LN42@update_dyn:
  00567	b9 01 00 00 00	 mov	 ecx, 1
  0056c	85 c9		 test	 ecx, ecx
  0056e	74 09		 je	 SHORT $LN43@update_dyn
  00570	c7 45 a0 97 00
	00 00		 mov	 DWORD PTR tv293[ebp], 151 ; 00000097H
  00577	eb 24		 jmp	 SHORT $LN44@update_dyn
$LN43@update_dyn:
  00579	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  0057f	81 c2 9f 00 00
	00		 add	 edx, 159		; 0000009fH
  00585	52		 push	 edx
  00586	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00590	50		 push	 eax
  00591	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00596	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR tv293[ebp], 0
$LN44@update_dyn:
  0059d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  005a4	74 0d		 je	 SHORT $LN45@update_dyn
  005a6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  005ac	8b 11		 mov	 edx, DWORD PTR [ecx]
  005ae	89 55 9c	 mov	 DWORD PTR tv306[ebp], edx
  005b1	eb 23		 jmp	 SHORT $LN46@update_dyn
$LN45@update_dyn:
  005b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  005b8	05 9f 00 00 00	 add	 eax, 159		; 0000009fH
  005bd	50		 push	 eax
  005be	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c9	51		 push	 ecx
  005ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005cf	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv306[ebp], 0
$LN46@update_dyn:
  005d6	ba 01 00 00 00	 mov	 edx, 1
  005db	85 d2		 test	 edx, edx
  005dd	74 09		 je	 SHORT $LN47@update_dyn
  005df	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv314[ebp], 8
  005e6	eb 23		 jmp	 SHORT $LN48@update_dyn
$LN47@update_dyn:
  005e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_dynamics_at_keysite@@YGXXZ@4JA
  005ed	05 9f 00 00 00	 add	 eax, 159		; 0000009fH
  005f2	50		 push	 eax
  005f3	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  005f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  005fe	51		 push	 ecx
  005ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00604	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv314[ebp], 0
$LN48@update_dyn:
  0060b	68 97 00 00 00	 push	 151			; 00000097H
  00610	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00616	52		 push	 edx
  00617	69 45 a4 5c 04
	00 00		 imul	 eax, DWORD PTR tv285[ebp], 1116
  0061e	8b 4d a0	 mov	 ecx, DWORD PTR tv293[ebp]
  00621	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00628	ff d2		 call	 edx
  0062a	50		 push	 eax
  0062b	6a 08		 push	 8
  0062d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00632	50		 push	 eax
  00633	6b 4d 9c 60	 imul	 ecx, DWORD PTR tv306[ebp], 96
  00637	8b 55 98	 mov	 edx, DWORD PTR tv314[ebp]
  0063a	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[ecx+edx*4]
  00641	ff d0		 call	 eax
  00643	50		 push	 eax
  00644	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0064a	51		 push	 ecx
  0064b	6a 2c		 push	 44			; 0000002cH
  0064d	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00652	83 c4 10	 add	 esp, 16			; 00000010H
$LN19@update_dyn:
$LN1@update_dyn:

; 1242 : 				}
; 1243 : 			}
; 1244 : 		}
; 1245 : 	}
; 1246 : }

  00655	5f		 pop	 edi
  00656	5e		 pop	 esi
  00657	5b		 pop	 ebx
  00658	8b e5		 mov	 esp, ebp
  0065a	5d		 pop	 ebp
  0065b	c3		 ret	 0
?update_dynamics_at_keysite@@YGXXZ ENDP			; update_dynamics_at_keysite
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?get_current_dynamics_fatal_damage@@YGHXZ
_TEXT	SEGMENT
tv76 = -84						; size = 4
_damage$ = -16						; size = 4
_this_damage$ = -12					; size = 4
_damage_count$ = -8					; size = 4
_fatal_damage_counter$ = -4				; size = 4
?get_current_dynamics_fatal_damage@@YGHXZ PROC		; get_current_dynamics_fatal_damage, COMDAT

; 1030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1031 : 
; 1032 : 	float
; 1033 : 		fatal_damage_counter;
; 1034 : 
; 1035 : 	int
; 1036 : 		damage_count,
; 1037 : 		this_damage,
; 1038 : 		damage;
; 1039 : 
; 1040 : 	fatal_damage_counter = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _fatal_damage_counter$[ebp], xmm0

; 1041 : 
; 1042 : 	damage = current_flight_dynamics->dynamics_damage;

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00016	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0001c	89 4d f0	 mov	 DWORD PTR _damage$[ebp], ecx

; 1043 : 
; 1044 : 	this_damage = DYNAMICS_DAMAGE_NONE;

  0001f	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1

; 1045 : 
; 1046 : 	damage_count = 0;

  00026	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _damage_count$[ebp], 0
$LN2@get_curren:

; 1047 : 
; 1048 : 	#if DEBUG_MODULE
; 1049 : 
; 1050 : 	debug_log ("CO_DMG: Assessing damage severity");
; 1051 : 
; 1052 : 	#endif
; 1053 : 
; 1054 : 	while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  0002d	81 7d f4 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  00034	7d 31		 jge	 SHORT $LN3@get_curren

; 1055 : 	{
; 1056 : 
; 1057 : 		if (damage & this_damage)

  00036	8b 45 f0	 mov	 eax, DWORD PTR _damage$[ebp]
  00039	23 45 f4	 and	 eax, DWORD PTR _this_damage$[ebp]
  0003c	74 16		 je	 SHORT $LN4@get_curren

; 1058 : 		{
; 1059 : 
; 1060 : 			fatal_damage_counter += dynamics_damage_database [damage_count].damage_severity;

  0003e	6b 45 f8 1c	 imul	 eax, DWORD PTR _damage_count$[ebp], 28
  00042	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fatal_damage_counter$[ebp]
  00047	f3 0f 58 80 0c
	00 00 00	 addss	 xmm0, DWORD PTR ?dynamics_damage_database@@3PAUDYNAMICS_DAMAGE_TYPE@@A[eax+12]
  0004f	f3 0f 11 45 fc	 movss	 DWORD PTR _fatal_damage_counter$[ebp], xmm0
$LN4@get_curren:

; 1061 : 
; 1062 : 			#if DEBUG_MODULE
; 1063 : 
; 1064 : 			debug_log ("CO_DMG:    %s damaged %f total %f", dynamics_damage_database [damage_count].name, dynamics_damage_database [damage_count].damage_severity, fatal_damage_counter);
; 1065 : 
; 1066 : 			#endif
; 1067 : 		}
; 1068 : 
; 1069 : 		damage_count ++;

  00054	8b 45 f8	 mov	 eax, DWORD PTR _damage_count$[ebp]
  00057	83 c0 01	 add	 eax, 1
  0005a	89 45 f8	 mov	 DWORD PTR _damage_count$[ebp], eax

; 1070 : 
; 1071 : 		this_damage = this_damage << 1;

  0005d	8b 45 f4	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00060	d1 e0		 shl	 eax, 1
  00062	89 45 f4	 mov	 DWORD PTR _this_damage$[ebp], eax

; 1072 : 	}

  00065	eb c6		 jmp	 SHORT $LN2@get_curren
$LN3@get_curren:

; 1073 : 
; 1074 : 	return (fatal_damage_counter >= 1.0) ? TRUE : FALSE;

  00067	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _fatal_damage_counter$[ebp]
  0006c	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00074	72 09		 jb	 SHORT $LN6@get_curren
  00076	c7 45 ac 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  0007d	eb 07		 jmp	 SHORT $LN7@get_curren
$LN6@get_curren:
  0007f	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN7@get_curren:
  00086	8b 45 ac	 mov	 eax, DWORD PTR tv76[ebp]

; 1075 : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?get_current_dynamics_fatal_damage@@YGHXZ ENDP		; get_current_dynamics_fatal_damage
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\gunships\dynamics\common\co_dmg.c
;	COMDAT ?dynamics_damage_model@@YGXIH@Z
_TEXT	SEGMENT
tv267 = -160						; size = 4
tv234 = -160						; size = 4
tv206 = -160						; size = 4
tv77 = -160						; size = 4
tv259 = -156						; size = 4
tv226 = -156						; size = 4
tv198 = -156						; size = 4
tv141 = -156						; size = 4
tv70 = -156						; size = 4
_type$1 = -88						; size = 4
_en$2 = -84						; size = 4
_this_damage$ = -80					; size = 4
_count$ = -76						; size = 4
_damage_array$ = -72					; size = 72
_damage$ = 8						; size = 4
_random$ = 12						; size = 4
?dynamics_damage_model@@YGXIH@Z PROC			; dynamics_damage_model, COMDAT

; 259  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 260  : 
; 261  : 	dynamics_damage_types
; 262  : 		damage_array [NUM_DYNAMIC_DAMAGES];
; 263  : 
; 264  : 	int
; 265  : 		count;
; 266  : 
; 267  : 	dynamics_damage_types
; 268  : 		this_damage;
; 269  : 
; 270  : 	if (!get_session_entity ())

  0000c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00013	75 05		 jne	 SHORT $LN8@dynamics_d

; 271  : 	{
; 272  : 
; 273  : 		return;

  00015	e9 9f 0f 00 00	 jmp	 $LN1@dynamics_d
$LN8@dynamics_d:

; 274  : 	}
; 275  : 
; 276  : 	if (get_local_entity_int_value (get_gunship_entity (), INT_TYPE_INVULNERABLE_FROM_COLLISIONS))

  0001a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00021	74 0f		 je	 SHORT $LN54@dynamics_d
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  00030	eb 20		 jmp	 SHORT $LN55@dynamics_d
$LN54@dynamics_d:
  00032	68 14 01 00 00	 push	 276			; 00000114H
  00037	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00042	52		 push	 edx
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00048	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN55@dynamics_d:
  00052	b8 01 00 00 00	 mov	 eax, 1
  00057	85 c0		 test	 eax, eax
  00059	74 0c		 je	 SHORT $LN56@dynamics_d
  0005b	c7 85 60 ff ff
	ff 6b 00 00 00	 mov	 DWORD PTR tv77[ebp], 107 ; 0000006bH
  00065	eb 20		 jmp	 SHORT $LN57@dynamics_d
$LN56@dynamics_d:
  00067	68 14 01 00 00	 push	 276			; 00000114H
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00071	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0007d	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv77[ebp], 0
$LN57@dynamics_d:
  00087	6a 6b		 push	 107			; 0000006bH
  00089	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0008f	52		 push	 edx
  00090	69 85 64 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv70[ebp], 1116
  0009a	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv77[ebp]
  000a0	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000a7	ff d2		 call	 edx
  000a9	85 c0		 test	 eax, eax
  000ab	74 0b		 je	 SHORT $LN9@dynamics_d

; 277  : 	{
; 278  : 
; 279  : 		// if invulnerable only allow damage/use of fire extinguisher
; 280  : 
; 281  : 		damage = damage & DYNAMICS_DAMAGE_FIRE_EXTINGUISHER;

  000ad	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  000b0	25 00 20 00 00	 and	 eax, 8192		; 00002000H
  000b5	89 45 08	 mov	 DWORD PTR _damage$[ebp], eax
$LN9@dynamics_d:

; 282  : 	}
; 283  : 
; 284  : 	if (random)

  000b8	83 7d 0c 00	 cmp	 DWORD PTR _random$[ebp], 0
  000bc	74 78		 je	 SHORT $LN10@dynamics_d

; 285  : 	{
; 286  : 
; 287  : 		damage_array [0] = DYNAMICS_DAMAGE_NONE;

  000be	b8 04 00 00 00	 mov	 eax, 4
  000c3	6b c8 00	 imul	 ecx, eax, 0
  000c6	c7 44 0d b8 01
	00 00 00	 mov	 DWORD PTR _damage_array$[ebp+ecx], 1

; 288  : 
; 289  : 		this_damage = DYNAMICS_DAMAGE_NONE;

  000ce	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1

; 290  : 
; 291  : 		count = 1;

  000d5	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _count$[ebp], 1
$LN2@dynamics_d:

; 292  : 
; 293  : 		while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  000dc	81 7d b0 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  000e3	7d 25		 jge	 SHORT $LN3@dynamics_d

; 294  : 		{
; 295  : 
; 296  : 			if (damage & this_damage)

  000e5	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  000e8	23 45 b0	 and	 eax, DWORD PTR _this_damage$[ebp]
  000eb	74 13		 je	 SHORT $LN11@dynamics_d

; 297  : 			{
; 298  : 
; 299  : 				damage_array [count] = this_damage;

  000ed	8b 45 b4	 mov	 eax, DWORD PTR _count$[ebp]
  000f0	8b 4d b0	 mov	 ecx, DWORD PTR _this_damage$[ebp]
  000f3	89 4c 85 b8	 mov	 DWORD PTR _damage_array$[ebp+eax*4], ecx

; 300  : 
; 301  : 				count ++;

  000f7	8b 45 b4	 mov	 eax, DWORD PTR _count$[ebp]
  000fa	83 c0 01	 add	 eax, 1
  000fd	89 45 b4	 mov	 DWORD PTR _count$[ebp], eax
$LN11@dynamics_d:

; 302  : 			}
; 303  : 
; 304  : 			this_damage = (dynamics_damage_types) (this_damage << 1);

  00100	8b 45 b0	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00103	d1 e0		 shl	 eax, 1
  00105	89 45 b0	 mov	 DWORD PTR _this_damage$[ebp], eax

; 305  : 		}

  00108	eb d2		 jmp	 SHORT $LN2@dynamics_d
$LN3@dynamics_d:

; 306  : 
; 307  : 		damage = damage_array [rand16 () % count];

  0010a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00114	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00119	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00123	c1 f8 10	 sar	 eax, 16			; 00000010H
  00126	25 ff 7f 00 00	 and	 eax, 32767		; 00007fffH
  0012b	99		 cdq
  0012c	f7 7d b4	 idiv	 DWORD PTR _count$[ebp]
  0012f	8b 4c 95 b8	 mov	 ecx, DWORD PTR _damage_array$[ebp+edx*4]
  00133	89 4d 08	 mov	 DWORD PTR _damage$[ebp], ecx
$LN10@dynamics_d:

; 308  : 
; 309  : 		#if DYNAMICS_DEBUG
; 310  : 
; 311  : 		debug_log ("DYNAMICS: randomly selecting damage %d", damage);
; 312  : 
; 313  : 		#endif
; 314  : 	}
; 315  : 
; 316  : 	notify_avionics_of_dynamics_fault (damage);

  00136	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?notify_avionics_of_dynamics_fault@@YGXI@Z ; notify_avionics_of_dynamics_fault

; 317  : 
; 318  : 	this_damage = DYNAMICS_DAMAGE_NONE;

  0013f	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR _this_damage$[ebp], 1
$LN4@dynamics_d:

; 319  : 
; 320  : 	while (this_damage < NUM_DYNAMICS_DAMAGE_TYPES)

  00146	81 7d b0 00 00
	04 00		 cmp	 DWORD PTR _this_damage$[ebp], 262144 ; 00040000H
  0014d	0f 8d 66 0e 00
	00		 jge	 $LN5@dynamics_d

; 321  : 	{
; 322  : 
; 323  : 		if ((damage & this_damage) && (!(current_flight_dynamics->dynamics_damage & this_damage)))

  00153	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  00156	23 45 b0	 and	 eax, DWORD PTR _this_damage$[ebp]
  00159	0f 84 4d 0e 00
	00		 je	 $LN6@dynamics_d
  0015f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00164	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0016a	23 4d b0	 and	 ecx, DWORD PTR _this_damage$[ebp]
  0016d	0f 85 39 0e 00
	00		 jne	 $LN6@dynamics_d

; 324  : 		{
; 325  : 
; 326  : 			switch (this_damage)

  00173	8b 45 b0	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00176	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv141[ebp], eax
  0017c	81 bd 64 ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv141[ebp], 512 ; 00000200H
  00186	0f 8f 82 00 00
	00		 jg	 $LN70@dynamics_d
  0018c	81 bd 64 ff ff
	ff 00 02 00 00	 cmp	 DWORD PTR tv141[ebp], 512 ; 00000200H
  00196	0f 84 80 0a 00
	00		 je	 $LN38@dynamics_d
  0019c	83 bd 64 ff ff
	ff 10		 cmp	 DWORD PTR tv141[ebp], 16 ; 00000010H
  001a3	7f 36		 jg	 SHORT $LN71@dynamics_d
  001a5	83 bd 64 ff ff
	ff 10		 cmp	 DWORD PTR tv141[ebp], 16 ; 00000010H
  001ac	0f 84 06 06 00
	00		 je	 $LN21@dynamics_d
  001b2	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv141[ebp]
  001b8	83 e9 01	 sub	 ecx, 1
  001bb	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv141[ebp], ecx
  001c1	83 bd 64 ff ff
	ff 07		 cmp	 DWORD PTR tv141[ebp], 7
  001c8	0f 87 cd 0d 00
	00		 ja	 $LN52@dynamics_d
  001ce	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR tv141[ebp]
  001d4	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN75@dynamics_d[edx*4]
$LN71@dynamics_d:
  001db	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv141[ebp]
  001e1	83 e8 20	 sub	 eax, 32			; 00000020H
  001e4	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv141[ebp], eax
  001ea	81 bd 64 ff ff
	ff e0 00 00 00	 cmp	 DWORD PTR tv141[ebp], 224 ; 000000e0H
  001f4	0f 87 a1 0d 00
	00		 ja	 $LN52@dynamics_d
  001fa	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv141[ebp]
  00200	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN74@dynamics_d[ecx]
  00207	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN76@dynamics_d[edx*4]
$LN70@dynamics_d:
  0020e	81 bd 64 ff ff
	ff 00 40 00 00	 cmp	 DWORD PTR tv141[ebp], 16384 ; 00004000H
  00218	7f 66		 jg	 SHORT $LN72@dynamics_d
  0021a	81 bd 64 ff ff
	ff 00 40 00 00	 cmp	 DWORD PTR tv141[ebp], 16384 ; 00004000H
  00224	0f 84 62 0c 00
	00		 je	 $LN47@dynamics_d
  0022a	81 bd 64 ff ff
	ff 00 10 00 00	 cmp	 DWORD PTR tv141[ebp], 4096 ; 00001000H
  00234	7f 35		 jg	 SHORT $LN73@dynamics_d
  00236	81 bd 64 ff ff
	ff 00 10 00 00	 cmp	 DWORD PTR tv141[ebp], 4096 ; 00001000H
  00240	0f 84 e8 0b 00
	00		 je	 $LN45@dynamics_d
  00246	81 bd 64 ff ff
	ff 00 04 00 00	 cmp	 DWORD PTR tv141[ebp], 1024 ; 00000400H
  00250	0f 84 02 0a 00
	00		 je	 $LN39@dynamics_d
  00256	81 bd 64 ff ff
	ff 00 08 00 00	 cmp	 DWORD PTR tv141[ebp], 2048 ; 00000800H
  00260	0f 84 dd 0a 00
	00		 je	 $LN42@dynamics_d
  00266	e9 30 0d 00 00	 jmp	 $LN52@dynamics_d
$LN73@dynamics_d:
  0026b	81 bd 64 ff ff
	ff 00 20 00 00	 cmp	 DWORD PTR tv141[ebp], 8192 ; 00002000H
  00275	0f 84 e2 0b 00
	00		 je	 $LN46@dynamics_d
  0027b	e9 1b 0d 00 00	 jmp	 $LN52@dynamics_d
$LN72@dynamics_d:
  00280	81 bd 64 ff ff
	ff 00 80 00 00	 cmp	 DWORD PTR tv141[ebp], 32768 ; 00008000H
  0028a	0f 84 4a 0c 00
	00		 je	 $LN48@dynamics_d
  00290	81 bd 64 ff ff
	ff 00 00 01 00	 cmp	 DWORD PTR tv141[ebp], 65536 ; 00010000H
  0029a	0f 84 9d 0c 00
	00		 je	 $LN49@dynamics_d
  002a0	81 bd 64 ff ff
	ff 00 00 02 00	 cmp	 DWORD PTR tv141[ebp], 131072 ; 00020000H
  002aa	0f 84 a0 07 00
	00		 je	 $LN31@dynamics_d
  002b0	e9 e6 0c 00 00	 jmp	 $LN52@dynamics_d
$LN13@dynamics_d:

; 327  : 			{
; 328  : 
; 329  : 				case DYNAMICS_DAMAGE_NONE:
; 330  : 				{
; 331  : 
; 332  : 					#if DYNAMICS_DEBUG
; 333  : 
; 334  : 					debug_log ("DYNAMICS: no damage");
; 335  : 
; 336  : 					#endif
; 337  : 
; 338  : 					current_flight_dynamics->dynamics_damage = DYNAMICS_DAMAGE_NONE;

  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ba	c7 80 24 25 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+9508], 1

; 339  : 
; 340  : 					current_flight_dynamics->main_blade_pitch.damaged = FALSE;

  002c4	33 c0		 xor	 eax, eax
  002c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002cc	66 89 81 9c 1e
	00 00		 mov	 WORD PTR [ecx+7836], ax

; 341  : 					current_flight_dynamics->main_rotor_roll_angle.damaged = FALSE;

  002d3	33 c0		 xor	 eax, eax
  002d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002db	66 89 81 f4 1d
	00 00		 mov	 WORD PTR [ecx+7668], ax

; 342  : 
; 343  : 					current_flight_dynamics->main_rotor_pitch_angle.damaged = FALSE;

  002e2	33 c0		 xor	 eax, eax
  002e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ea	66 89 81 0c 1e
	00 00		 mov	 WORD PTR [ecx+7692], ax

; 344  : 					current_flight_dynamics->main_rotor_rpm.damaged = FALSE;

  002f1	33 c0		 xor	 eax, eax
  002f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002f9	66 89 81 24 1e
	00 00		 mov	 WORD PTR [ecx+7716], ax

; 345  : 
; 346  : 					current_flight_dynamics->tail_blade_pitch.damaged = FALSE;

  00300	33 c0		 xor	 eax, eax
  00302	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00308	66 89 81 a4 1f
	00 00		 mov	 WORD PTR [ecx+8100], ax

; 347  : 					current_flight_dynamics->tail_rotor_rpm.damaged = FALSE;

  0030f	33 c0		 xor	 eax, eax
  00311	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00317	66 89 81 5c 1f
	00 00		 mov	 WORD PTR [ecx+8028], ax

; 348  : 
; 349  : 					current_flight_dynamics->left_engine_torque.damaged = FALSE;

  0031e	33 c0		 xor	 eax, eax
  00320	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00326	66 89 81 bc 1c
	00 00		 mov	 WORD PTR [ecx+7356], ax

; 350  : 					current_flight_dynamics->left_engine_rpm.damaged = FALSE;

  0032d	33 c0		 xor	 eax, eax
  0032f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00335	66 89 81 8c 1c
	00 00		 mov	 WORD PTR [ecx+7308], ax

; 351  : 
; 352  : 					current_flight_dynamics->right_engine_torque.damaged = FALSE;

  0033c	33 c0		 xor	 eax, eax
  0033e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00344	66 89 81 1c 1d
	00 00		 mov	 WORD PTR [ecx+7452], ax

; 353  : 					current_flight_dynamics->right_engine_rpm.damaged = FALSE;

  0034b	33 c0		 xor	 eax, eax
  0034d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00353	66 89 81 ec 1c
	00 00		 mov	 WORD PTR [ecx+7404], ax

; 354  : 
; 355  : 					current_flight_dynamics->cross_coupling_effect.damaged = FALSE;

  0035a	33 c0		 xor	 eax, eax
  0035c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00362	66 89 81 d4 1f
	00 00		 mov	 WORD PTR [ecx+8148], ax

; 356  : 
; 357  : 					current_flight_dynamics->input_data.cyclic_x.damaged = FALSE;

  00369	33 c0		 xor	 eax, eax
  0036b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00371	66 89 81 08 01
	00 00		 mov	 WORD PTR [ecx+264], ax

; 358  : 					current_flight_dynamics->input_data.cyclic_y.damaged = FALSE;

  00378	33 c0		 xor	 eax, eax
  0037a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00380	66 89 81 20 01
	00 00		 mov	 WORD PTR [ecx+288], ax

; 359  : 
; 360  : 					current_flight_dynamics->input_data.cyclic_x_trim.damaged = FALSE;

  00387	33 c0		 xor	 eax, eax
  00389	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0038f	66 89 81 38 01
	00 00		 mov	 WORD PTR [ecx+312], ax

; 361  : 					current_flight_dynamics->input_data.cyclic_y_trim.damaged = FALSE;

  00396	33 c0		 xor	 eax, eax
  00398	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0039e	66 89 81 50 01
	00 00		 mov	 WORD PTR [ecx+336], ax

; 362  : 
; 363  : 					current_flight_dynamics->input_data.pedal_trim.damaged = FALSE;

  003a5	33 c0		 xor	 eax, eax
  003a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003ad	66 89 81 04 1c
	00 00		 mov	 WORD PTR [ecx+7172], ax

; 364  : 
; 365  : 					break;

  003b4	e9 f3 0b 00 00	 jmp	 $LN6@dynamics_d
$LN14@dynamics_d:

; 366  : 				}
; 367  : 				case DYNAMICS_DAMAGE_MAIN_ROTOR:
; 368  : 				{
; 369  : 
; 370  : 					//#if DYNAMICS_DEBUG
; 371  : 
; 372  : 					debug_log ("DYNAMICS: main rotor damage");

  003b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GOBALMLG@DYNAMICS?3?5main?5rotor?5damage@
  003be	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  003c3	83 c4 04	 add	 esp, 4

; 373  : 
; 374  : 					//#endif
; 375  : 
; 376  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_MAIN_ROTOR;

  003c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003cb	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  003d1	83 c9 02	 or	 ecx, 2
  003d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003da	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 377  : 
; 378  : 					current_flight_dynamics->main_blade_pitch.damaged = TRUE;

  003e0	b8 01 00 00 00	 mov	 eax, 1
  003e5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003eb	66 89 81 9c 1e
	00 00		 mov	 WORD PTR [ecx+7836], ax

; 379  : 
; 380  : 					current_flight_dynamics->main_rotor_roll_angle.damaged = TRUE;

  003f2	b8 01 00 00 00	 mov	 eax, 1
  003f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  003fd	66 89 81 f4 1d
	00 00		 mov	 WORD PTR [ecx+7668], ax

; 381  : 
; 382  : 					current_flight_dynamics->main_rotor_pitch_angle.damaged = TRUE;

  00404	b8 01 00 00 00	 mov	 eax, 1
  00409	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0040f	66 89 81 0c 1e
	00 00		 mov	 WORD PTR [ecx+7692], ax

; 383  : 
; 384  : 					current_flight_dynamics->main_rotor_rpm.damaged = TRUE;

  00416	b8 01 00 00 00	 mov	 eax, 1
  0041b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00421	66 89 81 24 1e
	00 00		 mov	 WORD PTR [ecx+7716], ax

; 385  : 
; 386  : 					set_client_server_entity_int_value (get_gunship_entity (), INT_TYPE_MAIN_ROTOR_DAMAGED, TRUE);

  00428	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0042f	74 0f		 je	 SHORT $LN58@dynamics_d
  00431	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00436	8b 08		 mov	 ecx, DWORD PTR [eax]
  00438	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv198[ebp], ecx
  0043e	eb 24		 jmp	 SHORT $LN59@dynamics_d
$LN58@dynamics_d:
  00440	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  00446	83 c2 7f	 add	 edx, 127		; 0000007fH
  00449	52		 push	 edx
  0044a	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00454	50		 push	 eax
  00455	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0045a	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv198[ebp], 0
$LN59@dynamics_d:
  00464	b9 01 00 00 00	 mov	 ecx, 1
  00469	85 c9		 test	 ecx, ecx
  0046b	74 0c		 je	 SHORT $LN60@dynamics_d
  0046d	c7 85 60 ff ff
	ff 81 00 00 00	 mov	 DWORD PTR tv206[ebp], 129 ; 00000081H
  00477	eb 24		 jmp	 SHORT $LN61@dynamics_d
$LN60@dynamics_d:
  00479	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  0047f	83 c2 7f	 add	 edx, 127		; 0000007fH
  00482	52		 push	 edx
  00483	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00488	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0048d	50		 push	 eax
  0048e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00493	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN61@dynamics_d:
  0049d	6a 01		 push	 1
  0049f	68 81 00 00 00	 push	 129			; 00000081H
  004a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004aa	51		 push	 ecx
  004ab	69 95 64 ff ff
	ff b8 08 00 00	 imul	 edx, DWORD PTR tv198[ebp], 2232
  004b5	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv206[ebp]
  004bb	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  004c2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  004c8	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  004cb	ff d0		 call	 eax

; 387  : 
; 388  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_MAIN_ROTOR_DAMAGED);

  004cd	6a 1b		 push	 27			; 0000001bH
  004cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004d4	50		 push	 eax
  004d5	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 389  : 
; 390  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  004da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004df	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  004e5	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  004eb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  004f1	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 391  : 
; 392  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  004f7	6a 00		 push	 0
  004f9	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 393  : 
; 394  : 					break;

  004fe	e9 a9 0a 00 00	 jmp	 $LN6@dynamics_d
$LN15@dynamics_d:

; 395  : 				}
; 396  : 				case DYNAMICS_DAMAGE_TAIL_ROTOR:
; 397  : 				{
; 398  : 
; 399  : 				// start no tail rotor damage on coaxial helis by GCsDriver 08-12-2007
; 400  : 				{
; 401  : 					entity *en;
; 402  : 					int type;
; 403  : 
; 404  : 					en = get_gunship_entity ();

  00503	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00508	89 45 ac	 mov	 DWORD PTR _en$2[ebp], eax

; 405  : 					type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  0050b	83 7d ac 00	 cmp	 DWORD PTR _en$2[ebp], 0
  0050f	74 0d		 je	 SHORT $LN62@dynamics_d
  00511	8b 45 ac	 mov	 eax, DWORD PTR _en$2[ebp]
  00514	8b 08		 mov	 ecx, DWORD PTR [eax]
  00516	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv226[ebp], ecx
  0051c	eb 27		 jmp	 SHORT $LN63@dynamics_d
$LN62@dynamics_d:
  0051e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  00524	81 c2 92 00 00
	00		 add	 edx, 146		; 00000092H
  0052a	52		 push	 edx
  0052b	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00530	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00535	50		 push	 eax
  00536	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053b	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv226[ebp], 0
$LN63@dynamics_d:
  00545	b9 01 00 00 00	 mov	 ecx, 1
  0054a	85 c9		 test	 ecx, ecx
  0054c	74 0c		 je	 SHORT $LN64@dynamics_d
  0054e	c7 85 60 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv234[ebp], 52 ; 00000034H
  00558	eb 27		 jmp	 SHORT $LN65@dynamics_d
$LN64@dynamics_d:
  0055a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  00560	81 c2 92 00 00
	00		 add	 edx, 146		; 00000092H
  00566	52		 push	 edx
  00567	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0056c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00571	50		 push	 eax
  00572	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00577	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN65@dynamics_d:
  00581	6a 34		 push	 52			; 00000034H
  00583	8b 4d ac	 mov	 ecx, DWORD PTR _en$2[ebp]
  00586	51		 push	 ecx
  00587	69 95 64 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv226[ebp], 1116
  00591	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv234[ebp]
  00597	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0059e	ff d1		 call	 ecx
  005a0	89 45 a8	 mov	 DWORD PTR _type$1[ebp], eax

; 406  : 
; 407  : 					if (    (type != ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B)
; 408  : 						||(type != ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM)
; 409  : 						||(type != ENTITY_SUB_TYPE_AIRCRAFT_KA29_HELIX_B) )

  005a3	83 7d a8 03	 cmp	 DWORD PTR _type$1[ebp], 3
  005a7	75 0c		 jne	 SHORT $LN17@dynamics_d
  005a9	83 7d a8 15	 cmp	 DWORD PTR _type$1[ebp], 21 ; 00000015H
  005ad	75 06		 jne	 SHORT $LN17@dynamics_d
  005af	83 7d a8 07	 cmp	 DWORD PTR _type$1[ebp], 7
  005b3	74 05		 je	 SHORT $LN16@dynamics_d
$LN17@dynamics_d:

; 410  : 					{
; 411  : 						break;

  005b5	e9 f2 09 00 00	 jmp	 $LN6@dynamics_d
$LN16@dynamics_d:

; 412  : 					}
; 413  : 				// end no tail rotor damage on coaxial helis by GCsDriver 08-12-2007
; 414  : 
; 415  : 					//#if DYNAMICS_DEBUG
; 416  : 
; 417  : 					debug_log ("DYNAMICS: tail rotor damage");

  005ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BADGEJNC@DYNAMICS?3?5tail?5rotor?5damage@
  005bf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  005c4	83 c4 04	 add	 esp, 4

; 418  : 
; 419  : 					//#endif
; 420  : 
; 421  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_TAIL_ROTOR;

  005c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005cc	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  005d2	83 c9 04	 or	 ecx, 4
  005d5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005db	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 422  : 
; 423  : 					current_flight_dynamics->tail_blade_pitch.damaged = TRUE;

  005e1	b8 01 00 00 00	 mov	 eax, 1
  005e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005ec	66 89 81 a4 1f
	00 00		 mov	 WORD PTR [ecx+8100], ax

; 424  : 
; 425  : 					current_flight_dynamics->tail_rotor_rpm.damaged = TRUE;

  005f3	b8 01 00 00 00	 mov	 eax, 1
  005f8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  005fe	66 89 81 5c 1f
	00 00		 mov	 WORD PTR [ecx+8028], ax

; 426  : 
; 427  : 					current_flight_dynamics->cross_coupling_effect.damaged = TRUE;

  00605	b8 01 00 00 00	 mov	 eax, 1
  0060a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00610	66 89 81 d4 1f
	00 00		 mov	 WORD PTR [ecx+8148], ax

; 428  : 
; 429  : 					set_client_server_entity_int_value (get_gunship_entity (), INT_TYPE_TAIL_ROTOR_DAMAGED, TRUE);

  00617	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0061e	74 0f		 je	 SHORT $LN66@dynamics_d
  00620	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00625	8b 08		 mov	 ecx, DWORD PTR [eax]
  00627	89 8d 64 ff ff
	ff		 mov	 DWORD PTR tv259[ebp], ecx
  0062d	eb 27		 jmp	 SHORT $LN67@dynamics_d
$LN66@dynamics_d:
  0062f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  00635	81 c2 aa 00 00
	00		 add	 edx, 170		; 000000aaH
  0063b	52		 push	 edx
  0063c	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00641	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00646	50		 push	 eax
  00647	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0064c	c7 85 64 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv259[ebp], 0
$LN67@dynamics_d:
  00656	b9 01 00 00 00	 mov	 ecx, 1
  0065b	85 c9		 test	 ecx, ecx
  0065d	74 0c		 je	 SHORT $LN68@dynamics_d
  0065f	c7 85 60 ff ff
	ff d2 00 00 00	 mov	 DWORD PTR tv267[ebp], 210 ; 000000d2H
  00669	eb 27		 jmp	 SHORT $LN69@dynamics_d
$LN68@dynamics_d:
  0066b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??dynamics_damage_model@@YGXIH@Z@4JA
  00671	81 c2 aa 00 00
	00		 add	 edx, 170		; 000000aaH
  00677	52		 push	 edx
  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@MDCCBNCK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0067d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00682	50		 push	 eax
  00683	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00688	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv267[ebp], 0
$LN69@dynamics_d:
  00692	6a 01		 push	 1
  00694	68 d2 00 00 00	 push	 210			; 000000d2H
  00699	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0069f	51		 push	 ecx
  006a0	69 95 64 ff ff
	ff b8 08 00 00	 imul	 edx, DWORD PTR tv259[ebp], 2232
  006aa	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv267[ebp]
  006b0	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  006b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  006bd	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  006c0	ff d0		 call	 eax

; 430  : 
; 431  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_TAIL_ROTOR_DAMAGED);

  006c2	6a 1c		 push	 28			; 0000001cH
  006c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  006c9	50		 push	 eax
  006ca	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 432  : 
; 433  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  006cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006d4	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  006da	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  006e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  006e6	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 434  : 
; 435  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  006ec	6a 00		 push	 0
  006ee	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 436  : 
; 437  : 					break;

  006f3	e9 b4 08 00 00	 jmp	 $LN6@dynamics_d
$LN18@dynamics_d:

; 438  : 				} // GCsDriver 08-12-2007
; 439  : 				}
; 440  : 				case DYNAMICS_DAMAGE_LEFT_ENGINE:
; 441  : 				{
; 442  : 
; 443  : 					//#if DYNAMICS_DEBUG
; 444  : 
; 445  : 					debug_log ("DYNAMICS: left engine damage");

  006f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@LNMFKBOO@DYNAMICS?3?5left?5engine?5damage@
  006fd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00702	83 c4 04	 add	 esp, 4

; 446  : 
; 447  : 					//#endif
; 448  : 
; 449  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_LEFT_ENGINE;

  00705	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0070a	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00710	83 c9 08	 or	 ecx, 8
  00713	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00719	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 450  : 
; 451  : 					current_flight_dynamics->left_engine_torque.damaged = TRUE;

  0071f	b8 01 00 00 00	 mov	 eax, 1
  00724	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0072a	66 89 81 bc 1c
	00 00		 mov	 WORD PTR [ecx+7356], ax

; 452  : 
; 453  : 					current_flight_dynamics->left_engine_rpm.damaged = TRUE;

  00731	b8 01 00 00 00	 mov	 eax, 1
  00736	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0073c	66 89 81 8c 1c
	00 00		 mov	 WORD PTR [ecx+7308], ax

; 454  : 
; 455  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_RIGHT_ENGINE_FAILURE);  // speech has engine 1 and 2 switched

  00743	6a 1e		 push	 30			; 0000001eH
  00745	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0074a	50		 push	 eax
  0074b	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 456  : 
; 457  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00750	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00755	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  0075b	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00761	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00767	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 458  : 
; 459  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  0076d	6a 00		 push	 0
  0076f	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 460  : 					
; 461  : 					// if both engines damaged, disengage rotor
; 462  : 					if (damage & DYNAMICS_DAMAGE_RIGHT_ENGINE
; 463  : 						|| current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_RIGHT_ENGINE)

  00774	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  00777	83 e0 10	 and	 eax, 16			; 00000010H
  0077a	75 10		 jne	 SHORT $LN20@dynamics_d
  0077c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00781	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00787	83 e1 10	 and	 ecx, 16			; 00000010H
  0078a	74 27		 je	 SHORT $LN19@dynamics_d
$LN20@dynamics_d:

; 464  : 					{
; 465  : 						current_flight_dynamics->rotor_brake = TRUE;

  0078c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00791	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00797	83 c9 20	 or	 ecx, 32			; 00000020H
  0079a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007a0	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 466  : 						debug_log ("DYNAMICS: rotor disengage due to both engines failure");

  007a6	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@MLEDAHML@DYNAMICS?3?5rotor?5disengage?5due?5t@
  007ab	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  007b0	83 c4 04	 add	 esp, 4
$LN19@dynamics_d:

; 467  : 					}
; 468  : 					break;

  007b3	e9 f4 07 00 00	 jmp	 $LN6@dynamics_d
$LN21@dynamics_d:

; 469  : 				}
; 470  : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE:
; 471  : 				{
; 472  : 
; 473  : 					//#if DYNAMICS_DEBUG
; 474  : 
; 475  : 					debug_log ("DYNAMICS: right engine damage");

  007b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@MBANGMJO@DYNAMICS?3?5right?5engine?5damage@
  007bd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  007c2	83 c4 04	 add	 esp, 4

; 476  : 
; 477  : 					//#endif
; 478  : 
; 479  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_RIGHT_ENGINE;

  007c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007ca	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  007d0	83 c9 10	 or	 ecx, 16			; 00000010H
  007d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007d9	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 480  : 
; 481  : 					current_flight_dynamics->right_engine_torque.damaged = TRUE;

  007df	b8 01 00 00 00	 mov	 eax, 1
  007e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007ea	66 89 81 1c 1d
	00 00		 mov	 WORD PTR [ecx+7452], ax

; 482  : 
; 483  : 					current_flight_dynamics->right_engine_rpm.damaged = TRUE;

  007f1	b8 01 00 00 00	 mov	 eax, 1
  007f6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  007fc	66 89 81 ec 1c
	00 00		 mov	 WORD PTR [ecx+7404], ax

; 484  : 
; 485  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_LEFT_ENGINE_FAILURE);  // speech has engine 1 and 2 switched

  00803	6a 1d		 push	 29			; 0000001dH
  00805	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0080a	50		 push	 eax
  0080b	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 486  : 
; 487  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00810	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00815	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  0081b	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00821	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00827	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 488  : 
; 489  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  0082d	6a 00		 push	 0
  0082f	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 490  : 
; 491  : 					// if both engines damaged, disengage rotor
; 492  : 					if (damage & DYNAMICS_DAMAGE_LEFT_ENGINE
; 493  : 						|| current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_LEFT_ENGINE)

  00834	8b 45 08	 mov	 eax, DWORD PTR _damage$[ebp]
  00837	83 e0 08	 and	 eax, 8
  0083a	75 10		 jne	 SHORT $LN23@dynamics_d
  0083c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00841	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00847	83 e1 08	 and	 ecx, 8
  0084a	74 27		 je	 SHORT $LN22@dynamics_d
$LN23@dynamics_d:

; 494  : 					{
; 495  : 						current_flight_dynamics->rotor_brake = TRUE;

  0084c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00851	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00857	83 c9 20	 or	 ecx, 32			; 00000020H
  0085a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00860	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 496  : 						debug_log ("DYNAMICS: rotor disengage due to both engines failure");

  00866	68 00 00 00 00	 push	 OFFSET ??_C@_0DG@MLEDAHML@DYNAMICS?3?5rotor?5disengage?5due?5t@
  0086b	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00870	83 c4 04	 add	 esp, 4
$LN22@dynamics_d:

; 497  : 					}
; 498  : 					
; 499  : 					break;

  00873	e9 34 07 00 00	 jmp	 $LN6@dynamics_d
$LN24@dynamics_d:

; 500  : 				}
; 501  : 				case DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE:
; 502  : 				{
; 503  : 
; 504  : 					//#if DYNAMICS_DEBUG
; 505  : 
; 506  : 					debug_log ("DYNAMICS: left engine fire damage");

  00878	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@IICAAKFB@DYNAMICS?3?5left?5engine?5fire?5dama@
  0087d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00882	83 c4 04	 add	 esp, 4

; 507  : 
; 508  : 					//#endif
; 509  : 
; 510  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_LEFT_ENGINE_FIRE;

  00885	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0088a	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00890	83 c9 20	 or	 ecx, 32			; 00000020H
  00893	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00899	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 511  : 
; 512  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_RIGHT_ENGINE_FIRE);  // speech has engine 1 and 2 switched

  0089f	6a 20		 push	 32			; 00000020H
  008a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  008a6	50		 push	 eax
  008a7	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 513  : 
; 514  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  008ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008b1	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  008b7	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  008bd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008c3	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 515  : 
; 516  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  008c9	6a 00		 push	 0
  008cb	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 517  : 
; 518  : 					break;

  008d0	e9 d7 06 00 00	 jmp	 $LN6@dynamics_d
$LN25@dynamics_d:

; 519  : 				}
; 520  : 				case DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE:
; 521  : 				{
; 522  : 
; 523  : 					//#if DYNAMICS_DEBUG
; 524  : 
; 525  : 					debug_log ("DYNAMICS: right engine fire damage");

  008d5	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OJODCNEH@DYNAMICS?3?5right?5engine?5fire?5dam@
  008da	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  008df	83 c4 04	 add	 esp, 4

; 526  : 
; 527  : 					//#endif
; 528  : 
; 529  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_RIGHT_ENGINE_FIRE;

  008e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008e7	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  008ed	83 c9 40	 or	 ecx, 64			; 00000040H
  008f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  008f6	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 530  : 
; 531  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_LEFT_ENGINE_FIRE);  // speech has engine 1 and 2 switched

  008fc	6a 1f		 push	 31			; 0000001fH
  008fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00903	50		 push	 eax
  00904	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 532  : 
; 533  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00909	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  0090e	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00914	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  0091a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00920	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 534  : 
; 535  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  00926	6a 00		 push	 0
  00928	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 536  : 
; 537  : 					break;

  0092d	e9 7a 06 00 00	 jmp	 $LN6@dynamics_d
$LN26@dynamics_d:

; 538  : 				}
; 539  : 				case DYNAMICS_DAMAGE_LOW_HYDRAULICS:
; 540  : 				{
; 541  : 
; 542  : 					//#if DYNAMICS_DEBUG
; 543  : 
; 544  : 					debug_log ("DYNAMICS: LOW HYDRAULICS damage");

  00932	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@IEGHJHJE@DYNAMICS?3?5LOW?5HYDRAULICS?5damage@
  00937	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0093c	83 c4 04	 add	 esp, 4

; 545  : 
; 546  : 					//#endif
; 547  : 
; 548  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_LOW_HYDRAULICS;

  0093f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00944	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0094a	81 c9 80 00 00
	00		 or	 ecx, 128		; 00000080H
  00950	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00956	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 549  : 
; 550  : 					current_flight_dynamics->input_data.cyclic_x.damaged = TRUE;

  0095c	b8 01 00 00 00	 mov	 eax, 1
  00961	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00967	66 89 81 08 01
	00 00		 mov	 WORD PTR [ecx+264], ax

; 551  : 
; 552  : 					current_flight_dynamics->input_data.cyclic_y.damaged = TRUE;

  0096e	b8 01 00 00 00	 mov	 eax, 1
  00973	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00979	66 89 81 20 01
	00 00		 mov	 WORD PTR [ecx+288], ax

; 553  : 
; 554  : 					// only damage if secondary is also damaged
; 555  : 					if (current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS)

  00980	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00985	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  0098b	81 e1 00 00 02
	00		 and	 ecx, 131072		; 00020000H
  00991	74 09		 je	 SHORT $LN27@dynamics_d

; 556  : 						damage_hydraulics(TRUE);

  00993	6a 01		 push	 1
  00995	e8 00 00 00 00	 call	 ?damage_hydraulics@@YGXH@Z ; damage_hydraulics

; 557  : 					else  // otherwise we'll lose some pressure, but it will still be flyable

  0099a	eb 05		 jmp	 SHORT $LN28@dynamics_d
$LN27@dynamics_d:

; 558  : 						damage_primary_hydralics_only();

  0099c	e8 00 00 00 00	 call	 ?damage_primary_hydralics_only@@YGXXZ ; damage_primary_hydralics_only
$LN28@dynamics_d:

; 559  : 
; 560  : 					if (sfrand1 () < 0.0)

  009a1	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  009ab	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  009b0	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  009b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  009bb	c1 f9 10	 sar	 ecx, 16			; 00000010H
  009be	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  009c4	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  009ca	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  009ce	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  009d6	0f 57 c9	 xorps	 xmm1, xmm1
  009d9	66 0f 2f c8	 comisd	 xmm1, xmm0
  009dd	76 0f		 jbe	 SHORT $LN29@dynamics_d

; 561  : 					{
; 562  : 
; 563  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_HYDRAULIC_PRESSURE_FAILURE);

  009df	6a 21		 push	 33			; 00000021H
  009e1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  009e6	50		 push	 eax
  009e7	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 564  : 					}
; 565  : 					else

  009ec	eb 39		 jmp	 SHORT $LN30@dynamics_d
$LN29@dynamics_d:

; 566  : 					{
; 567  : 
; 568  : 						play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_CONTROL_SYSTEMS_DAMAGED);

  009ee	6a 1e		 push	 30			; 0000001eH
  009f0	51		 push	 ecx
  009f1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  009f9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  009fe	6a 04		 push	 4
  00a00	51		 push	 ecx
  00a01	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00a09	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0e	51		 push	 ecx
  00a0f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00a17	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00a21	50		 push	 eax
  00a22	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN30@dynamics_d:

; 569  : 					}
; 570  : 
; 571  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00a27	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a2c	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00a32	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00a38	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a3e	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 572  : 
; 573  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  00a44	6a 00		 push	 0
  00a46	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 574  : 
; 575  : 					break;

  00a4b	e9 5c 05 00 00	 jmp	 $LN6@dynamics_d
$LN31@dynamics_d:

; 576  : 				}
; 577  : 				case DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS:
; 578  : 				{
; 579  : 
; 580  : 					//#if DYNAMICS_DEBUG
; 581  : 
; 582  : 					debug_log ("DYNAMICS: SECONDARY HYDRAULICS damage");

  00a50	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@OKIGLONE@DYNAMICS?3?5SECONDARY?5HYDRAULICS?5@
  00a55	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00a5a	83 c4 04	 add	 esp, 4

; 583  : 
; 584  : 					//#endif
; 585  : 
; 586  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_SECONDARY_HYDRAULICS;

  00a5d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a62	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00a68	81 c9 00 00 02
	00		 or	 ecx, 131072		; 00020000H
  00a6e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a74	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 587  : 
; 588  : 					// only damage if primary is also damaged
; 589  : 					if (current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_LOW_HYDRAULICS)

  00a7a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a7f	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00a85	81 e1 80 00 00
	00		 and	 ecx, 128		; 00000080H
  00a8b	74 2b		 je	 SHORT $LN32@dynamics_d

; 590  : 					{
; 591  : 						damage_hydraulics(TRUE);

  00a8d	6a 01		 push	 1
  00a8f	e8 00 00 00 00	 call	 ?damage_hydraulics@@YGXH@Z ; damage_hydraulics

; 592  : 
; 593  : 						set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00a94	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00a99	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00a9f	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00aa5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00aab	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 594  : 						set_current_flight_dynamics_auto_pilot (FALSE);

  00ab1	6a 00		 push	 0
  00ab3	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot
$LN32@dynamics_d:

; 595  : 					}
; 596  : 
; 597  : 					if (sfrand1 () < 0.0)

  00ab8	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00ac2	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00ac7	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00acc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00ad2	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00ad5	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00adb	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00ae1	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00ae5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00aed	0f 57 c9	 xorps	 xmm1, xmm1
  00af0	66 0f 2f c8	 comisd	 xmm1, xmm0
  00af4	76 0f		 jbe	 SHORT $LN33@dynamics_d

; 598  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_HYDRAULIC_PRESSURE_FAILURE);

  00af6	6a 21		 push	 33			; 00000021H
  00af8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00afd	50		 push	 eax
  00afe	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 599  : 					else

  00b03	eb 39		 jmp	 SHORT $LN34@dynamics_d
$LN33@dynamics_d:

; 600  : 						play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_CONTROL_SYSTEMS_DAMAGED);

  00b05	6a 1e		 push	 30			; 0000001eH
  00b07	51		 push	 ecx
  00b08	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b10	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b15	6a 04		 push	 4
  00b17	51		 push	 ecx
  00b18	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00b20	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b25	51		 push	 ecx
  00b26	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00b2e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b33	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00b38	50		 push	 eax
  00b39	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN34@dynamics_d:

; 601  : 
; 602  : 					break;

  00b3e	e9 69 04 00 00	 jmp	 $LN6@dynamics_d
$LN35@dynamics_d:

; 603  : 				}
; 604  : 				case DYNAMICS_DAMAGE_STABILISER:
; 605  : 				{
; 606  : 
; 607  : 					//#if DYNAMICS_DEBUG
; 608  : 
; 609  : 					debug_log ("DYNAMICS: STABILISER damage");

  00b43	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@DNKJBKFE@DYNAMICS?3?5STABILISER?5damage@
  00b48	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00b4d	83 c4 04	 add	 esp, 4

; 610  : 
; 611  : 					//#endif
; 612  : 
; 613  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_STABILISER;

  00b50	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b55	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00b5b	81 c9 00 01 00
	00		 or	 ecx, 256		; 00000100H
  00b61	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b67	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 614  : 
; 615  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00b6d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b72	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00b78	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00b7e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00b84	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 616  : 
; 617  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  00b8a	6a 00		 push	 0
  00b8c	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 618  : 
; 619  : 					if (sfrand1 () < 0.0)

  00b91	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00b9b	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00ba0	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00ba5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00bab	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00bae	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00bb4	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00bba	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00bbe	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00bc6	0f 57 c9	 xorps	 xmm1, xmm1
  00bc9	66 0f 2f c8	 comisd	 xmm1, xmm0
  00bcd	76 0f		 jbe	 SHORT $LN36@dynamics_d

; 620  : 					{
; 621  : 
; 622  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_STABILISER_DAMAGED);

  00bcf	6a 22		 push	 34			; 00000022H
  00bd1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00bd6	50		 push	 eax
  00bd7	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 623  : 					}
; 624  : 					else

  00bdc	eb 39		 jmp	 SHORT $LN37@dynamics_d
$LN36@dynamics_d:

; 625  : 					{
; 626  : 
; 627  : 						play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_CONTROL_SYSTEMS_DAMAGED);

  00bde	6a 1e		 push	 30			; 0000001eH
  00be0	51		 push	 ecx
  00be1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00be9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bee	6a 04		 push	 4
  00bf0	51		 push	 ecx
  00bf1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00bf9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bfe	51		 push	 ecx
  00bff	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00c07	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00c11	50		 push	 eax
  00c12	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN37@dynamics_d:

; 628  : 					}
; 629  : 
; 630  : 					break;

  00c17	e9 90 03 00 00	 jmp	 $LN6@dynamics_d
$LN38@dynamics_d:

; 631  : 				}
; 632  : 				case DYNAMICS_DAMAGE_FUEL_LEAK:
; 633  : 				{
; 634  : 
; 635  : 					//#if DYNAMICS_DEBUG
; 636  : 
; 637  : 					debug_log ("DYNAMICS: FUEL_LEAK damage");

  00c1c	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@CCHLJAL@DYNAMICS?3?5FUEL_LEAK?5damage@
  00c21	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00c26	83 c4 04	 add	 esp, 4

; 638  : 
; 639  : 					//#endif
; 640  : 
; 641  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_FUEL_LEAK;

  00c29	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c2e	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00c34	81 c9 00 02 00
	00		 or	 ecx, 512		; 00000200H
  00c3a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c40	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 642  : 
; 643  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_FUEL_LEAK);

  00c46	6a 23		 push	 35			; 00000023H
  00c48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00c4d	50		 push	 eax
  00c4e	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 644  : 
; 645  : 					break;

  00c53	e9 54 03 00 00	 jmp	 $LN6@dynamics_d
$LN39@dynamics_d:

; 646  : 				}
; 647  : 				case DYNAMICS_DAMAGE_LOW_OIL_PRESSURE:
; 648  : 				{
; 649  : 
; 650  : 					//#if DYNAMICS_DEBUG
; 651  : 
; 652  : 					debug_log ("DYNAMICS: LOW_OIL_PRESSURE damage");

  00c58	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@HIMDJJLA@DYNAMICS?3?5LOW_OIL_PRESSURE?5dama@
  00c5d	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00c62	83 c4 04	 add	 esp, 4

; 653  : 
; 654  : 					//#endif
; 655  : 
; 656  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_LOW_OIL_PRESSURE;

  00c65	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c6a	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00c70	81 c9 00 04 00
	00		 or	 ecx, 1024		; 00000400H
  00c76	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c7c	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 657  : 
; 658  : 					current_flight_dynamics->input_data.cyclic_y.damaged = TRUE;

  00c82	b8 01 00 00 00	 mov	 eax, 1
  00c87	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00c8d	66 89 81 20 01
	00 00		 mov	 WORD PTR [ecx+288], ax

; 659  : 
; 660  : 					if (sfrand1 () < 0.0)

  00c94	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00c9e	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00ca3	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00ca8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00cae	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00cb1	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00cb7	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00cbd	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00cc1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00cc9	0f 57 c9	 xorps	 xmm1, xmm1
  00ccc	66 0f 2f c8	 comisd	 xmm1, xmm0
  00cd0	76 0f		 jbe	 SHORT $LN40@dynamics_d

; 661  : 					{
; 662  : 
; 663  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_LOW_ENGINE_OIL_PRESSURE);

  00cd2	6a 24		 push	 36			; 00000024H
  00cd4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00cd9	50		 push	 eax
  00cda	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 664  : 					}
; 665  : 					else

  00cdf	eb 39		 jmp	 SHORT $LN41@dynamics_d
$LN40@dynamics_d:

; 666  : 					{
; 667  : 
; 668  : 						play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_CONTROL_SYSTEMS_DAMAGED);

  00ce1	6a 1e		 push	 30			; 0000001eH
  00ce3	51		 push	 ecx
  00ce4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00cec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cf1	6a 04		 push	 4
  00cf3	51		 push	 ecx
  00cf4	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00cfc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d01	51		 push	 ecx
  00d02	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00d0a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d0f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00d14	50		 push	 eax
  00d15	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN41@dynamics_d:

; 669  : 					}
; 670  : 
; 671  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00d1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d1f	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00d25	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00d2b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d31	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 672  : 
; 673  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  00d37	6a 00		 push	 0
  00d39	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 674  : 
; 675  : 					break;

  00d3e	e9 69 02 00 00	 jmp	 $LN6@dynamics_d
$LN42@dynamics_d:

; 676  : 				}
; 677  : 				case DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE:
; 678  : 				{
; 679  : 
; 680  : 					//#if DYNAMICS_DEBUG
; 681  : 
; 682  : 					debug_log ("DYNAMICS: HIGH_OIL_PRESSURE damage");

  00d43	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@BOKENMLA@DYNAMICS?3?5HIGH_OIL_PRESSURE?5dam@
  00d48	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00d4d	83 c4 04	 add	 esp, 4

; 683  : 
; 684  : 					//#endif
; 685  : 
; 686  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_HIGH_OIL_PRESSURE;

  00d50	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d55	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00d5b	81 c9 00 08 00
	00		 or	 ecx, 2048		; 00000800H
  00d61	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d67	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 687  : 
; 688  : 					current_flight_dynamics->input_data.collective.damaged = TRUE;

  00d6d	b8 01 00 00 00	 mov	 eax, 1
  00d72	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00d78	66 89 81 b8 1b
	00 00		 mov	 WORD PTR [ecx+7096], ax

; 689  : 
; 690  : 					if (sfrand1 () < 0.0)

  00d7f	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00d89	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00d8e	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  00d93	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00d99	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00d9c	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  00da2	81 e9 00 40 00
	00		 sub	 ecx, 16384		; 00004000H
  00da8	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00dac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f10000000000000
  00db4	0f 57 c9	 xorps	 xmm1, xmm1
  00db7	66 0f 2f c8	 comisd	 xmm1, xmm0
  00dbb	76 0f		 jbe	 SHORT $LN43@dynamics_d

; 691  : 					{
; 692  : 
; 693  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_HIGH_ENGINE_OIL_TEMPERATURE);

  00dbd	6a 25		 push	 37			; 00000025H
  00dbf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00dc4	50		 push	 eax
  00dc5	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 694  : 					}
; 695  : 					else

  00dca	eb 39		 jmp	 SHORT $LN44@dynamics_d
$LN43@dynamics_d:

; 696  : 					{
; 697  : 
; 698  : 						play_client_server_cpg_message (get_gunship_entity (), 0.5, 1.0, SPEECH_CATEGORY_CPG_SYSTEMS, 1.0, SPEECH_CPG_CONTROL_SYSTEMS_DAMAGED);

  00dcc	6a 1e		 push	 30			; 0000001eH
  00dce	51		 push	 ecx
  00dcf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00dd7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00ddc	6a 04		 push	 4
  00dde	51		 push	 ecx
  00ddf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00de7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dec	51		 push	 ecx
  00ded	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00df5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dfa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00dff	50		 push	 eax
  00e00	e8 00 00 00 00	 call	 ?play_client_server_cpg_message@@YGHPAUENTITY@@MMHMH@Z ; play_client_server_cpg_message
$LN44@dynamics_d:

; 699  : 					}
; 700  : 
; 701  : 					set_current_flight_dynamics_auto_hover (HOVER_HOLD_NONE);

  00e05	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e0a	8b 88 28 25 00
	00		 mov	 ecx, DWORD PTR [eax+9512]
  00e10	81 e1 7f fc ff
	ff		 and	 ecx, -897		; fffffc7fH
  00e16	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e1c	89 8a 28 25 00
	00		 mov	 DWORD PTR [edx+9512], ecx

; 702  : 
; 703  : 					set_current_flight_dynamics_auto_pilot (FALSE);

  00e22	6a 00		 push	 0
  00e24	e8 00 00 00 00	 call	 ?set_current_flight_dynamics_auto_pilot@@YGXH@Z ; set_current_flight_dynamics_auto_pilot

; 704  : 
; 705  : 					break;

  00e29	e9 7e 01 00 00	 jmp	 $LN6@dynamics_d
$LN45@dynamics_d:

; 706  : 				}
; 707  : 				case DYNAMICS_DAMAGE_AVIONICS:
; 708  : 				{
; 709  : 
; 710  : 					//#if DYNAMICS_DEBUG
; 711  : 
; 712  : 					debug_log ("DYNAMICS: AVIONICS damage");

  00e2e	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@LBBONMCH@DYNAMICS?3?5AVIONICS?5damage@
  00e33	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00e38	83 c4 04	 add	 esp, 4

; 713  : 
; 714  : 					//#endif
; 715  : 
; 716  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_AVIONICS;

  00e3b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e40	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00e46	81 c9 00 10 00
	00		 or	 ecx, 4096		; 00001000H
  00e4c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e52	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 717  : 
; 718  : 					break;

  00e58	e9 4f 01 00 00	 jmp	 $LN6@dynamics_d
$LN46@dynamics_d:

; 719  : 				}
; 720  : 				case DYNAMICS_DAMAGE_FIRE_EXTINGUISHER:
; 721  : 				{
; 722  : 
; 723  : 					//#if DYNAMICS_DEBUG
; 724  : 
; 725  : 					debug_log ("DYNAMICS: FIRE_EXTINGUISHER damage");

  00e5d	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@BKNKNBOD@DYNAMICS?3?5FIRE_EXTINGUISHER?5dam@
  00e62	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00e67	83 c4 04	 add	 esp, 4

; 726  : 
; 727  : 					//#endif
; 728  : 
; 729  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_FIRE_EXTINGUISHER;

  00e6a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e6f	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00e75	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  00e7b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e81	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 730  : 
; 731  : 					break;

  00e87	e9 20 01 00 00	 jmp	 $LN6@dynamics_d
$LN47@dynamics_d:

; 732  : 				}
; 733  : 				case DYNAMICS_DAMAGE_UNDERCARRIAGE:
; 734  : 				{
; 735  : 
; 736  : 					//#if DYNAMICS_DEBUG
; 737  : 
; 738  : 					debug_log ("DYNAMICS: UNDERCARRIAGE damage");

  00e8c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@BKLNGAPL@DYNAMICS?3?5UNDERCARRIAGE?5damage@
  00e91	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00e96	83 c4 04	 add	 esp, 4

; 739  : 
; 740  : 					//#endif
; 741  : 
; 742  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_UNDERCARRIAGE;

  00e99	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00e9e	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00ea4	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  00eaa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00eb0	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 743  : 
; 744  : 					current_flight_dynamics->undercarriage_state.damaged = TRUE;

  00eb6	b8 01 00 00 00	 mov	 eax, 1
  00ebb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00ec1	66 89 81 74 1c
	00 00		 mov	 WORD PTR [ecx+7284], ax

; 745  : 
; 746  : 					play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_GEAR_DAMAGED);

  00ec8	6a 26		 push	 38			; 00000026H
  00eca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00ecf	50		 push	 eax
  00ed0	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message

; 747  : 
; 748  : 					break;

  00ed5	e9 d2 00 00 00	 jmp	 $LN6@dynamics_d
$LN48@dynamics_d:

; 749  : 				}
; 750  : 				case DYNAMICS_DAMAGE_APU:
; 751  : 				{
; 752  : 					debug_log ("DYNAMICS: APU damage");

  00eda	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IENHMLGL@DYNAMICS?3?5APU?5damage@
  00edf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00ee4	83 c4 04	 add	 esp, 4

; 753  : 					
; 754  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_APU;

  00ee7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00eec	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00ef2	81 c9 00 80 00
	00		 or	 ecx, 32768		; 00008000H
  00ef8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00efe	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 755  : 
; 756  : 					current_flight_dynamics->apu_rpm.max = 0.0;

  00f04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f09	0f 57 c0	 xorps	 xmm0, xmm0
  00f0c	f3 0f 11 80 48
	1d 00 00	 movss	 DWORD PTR [eax+7496], xmm0

; 757  : 					current_flight_dynamics->apu_rpm.delta = -100.0;

  00f14	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f19	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c2c80000
  00f21	f3 0f 11 80 40
	1d 00 00	 movss	 DWORD PTR [eax+7488], xmm0

; 758  : 
; 759  : 					current_flight_dynamics->apu_rpm.damaged = TRUE;

  00f29	b8 01 00 00 00	 mov	 eax, 1
  00f2e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f34	66 89 81 4c 1d
	00 00		 mov	 WORD PTR [ecx+7500], ax

; 760  : 					
; 761  : 					break;

  00f3b	eb 6f		 jmp	 SHORT $LN6@dynamics_d
$LN49@dynamics_d:

; 762  : 				}
; 763  : 				case DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE:
; 764  : 				{
; 765  : 					if (current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR)

  00f3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f42	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00f48	83 e1 02	 and	 ecx, 2
  00f4b	74 02		 je	 SHORT $LN50@dynamics_d

; 766  : 						break;

  00f4d	eb 5d		 jmp	 SHORT $LN6@dynamics_d
$LN50@dynamics_d:

; 767  : 					
; 768  : 					debug_log ("DYNAMICS: MAIN ROTOR BLADE damaged");

  00f4f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HNBJLMGE@DYNAMICS?3?5MAIN?5ROTOR?5BLADE?5dama@
  00f54	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00f59	83 c4 04	 add	 esp, 4

; 769  : 
; 770  : 					if (!(current_flight_dynamics->dynamics_damage & DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE))

  00f5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f61	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00f67	81 e1 00 00 01
	00		 and	 ecx, 65536		; 00010000H
  00f6d	75 0d		 jne	 SHORT $LN51@dynamics_d

; 771  : 						play_client_server_warning_message (get_gunship_entity (), SPEECH_SYSTEM_MAIN_ROTOR_DAMAGED);

  00f6f	6a 1b		 push	 27			; 0000001bH
  00f71	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00f76	50		 push	 eax
  00f77	e8 00 00 00 00	 call	 ?play_client_server_warning_message@@YGHPAUENTITY@@H@Z ; play_client_server_warning_message
$LN51@dynamics_d:

; 772  : 
; 773  : 					current_flight_dynamics->dynamics_damage |= DYNAMICS_DAMAGE_MAIN_ROTOR_BLADE;

  00f7c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f81	8b 88 24 25 00
	00		 mov	 ecx, DWORD PTR [eax+9508]
  00f87	81 c9 00 00 01
	00		 or	 ecx, 65536		; 00010000H
  00f8d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00f93	89 8a 24 25 00
	00		 mov	 DWORD PTR [edx+9508], ecx

; 774  : 
; 775  : 					break;	

  00f99	eb 11		 jmp	 SHORT $LN6@dynamics_d
$LN52@dynamics_d:

; 776  : 				}
; 777  : 				default:
; 778  : 				{
; 779  : 
; 780  : 					debug_fatal ("DYNAMICS: unknown damage %d", this_damage);

  00f9b	8b 45 b0	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00f9e	50		 push	 eax
  00f9f	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@GNIJMIHK@DYNAMICS?3?5unknown?5damage?5?$CFd@
  00fa4	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00fa9	83 c4 08	 add	 esp, 8
$LN6@dynamics_d:

; 781  : 				}
; 782  : 			}
; 783  : 		}
; 784  : 
; 785  : 		this_damage = (dynamics_damage_types) (this_damage << 1);

  00fac	8b 45 b0	 mov	 eax, DWORD PTR _this_damage$[ebp]
  00faf	d1 e0		 shl	 eax, 1
  00fb1	89 45 b0	 mov	 DWORD PTR _this_damage$[ebp], eax

; 786  : 	}

  00fb4	e9 8d f1 ff ff	 jmp	 $LN4@dynamics_d
$LN5@dynamics_d:
$LN1@dynamics_d:

; 787  : }

  00fb9	5f		 pop	 edi
  00fba	5e		 pop	 esi
  00fbb	5b		 pop	 ebx
  00fbc	8b e5		 mov	 esp, ebp
  00fbe	5d		 pop	 ebp
  00fbf	c2 08 00	 ret	 8
  00fc2	66 90		 npad	 2
$LN75@dynamics_d:
  00fc4	00 00 00 00	 DD	 $LN13@dynamics_d
  00fc8	00 00 00 00	 DD	 $LN14@dynamics_d
  00fcc	00 00 00 00	 DD	 $LN52@dynamics_d
  00fd0	00 00 00 00	 DD	 $LN15@dynamics_d
  00fd4	00 00 00 00	 DD	 $LN52@dynamics_d
  00fd8	00 00 00 00	 DD	 $LN52@dynamics_d
  00fdc	00 00 00 00	 DD	 $LN52@dynamics_d
  00fe0	00 00 00 00	 DD	 $LN18@dynamics_d
$LN76@dynamics_d:
  00fe4	00 00 00 00	 DD	 $LN24@dynamics_d
  00fe8	00 00 00 00	 DD	 $LN25@dynamics_d
  00fec	00 00 00 00	 DD	 $LN26@dynamics_d
  00ff0	00 00 00 00	 DD	 $LN35@dynamics_d
  00ff4	00 00 00 00	 DD	 $LN52@dynamics_d
$LN74@dynamics_d:
  00ff8	00		 DB	 0
  00ff9	04		 DB	 4
  00ffa	04		 DB	 4
  00ffb	04		 DB	 4
  00ffc	04		 DB	 4
  00ffd	04		 DB	 4
  00ffe	04		 DB	 4
  00fff	04		 DB	 4
  01000	04		 DB	 4
  01001	04		 DB	 4
  01002	04		 DB	 4
  01003	04		 DB	 4
  01004	04		 DB	 4
  01005	04		 DB	 4
  01006	04		 DB	 4
  01007	04		 DB	 4
  01008	04		 DB	 4
  01009	04		 DB	 4
  0100a	04		 DB	 4
  0100b	04		 DB	 4
  0100c	04		 DB	 4
  0100d	04		 DB	 4
  0100e	04		 DB	 4
  0100f	04		 DB	 4
  01010	04		 DB	 4
  01011	04		 DB	 4
  01012	04		 DB	 4
  01013	04		 DB	 4
  01014	04		 DB	 4
  01015	04		 DB	 4
  01016	04		 DB	 4
  01017	04		 DB	 4
  01018	01		 DB	 1
  01019	04		 DB	 4
  0101a	04		 DB	 4
  0101b	04		 DB	 4
  0101c	04		 DB	 4
  0101d	04		 DB	 4
  0101e	04		 DB	 4
  0101f	04		 DB	 4
  01020	04		 DB	 4
  01021	04		 DB	 4
  01022	04		 DB	 4
  01023	04		 DB	 4
  01024	04		 DB	 4
  01025	04		 DB	 4
  01026	04		 DB	 4
  01027	04		 DB	 4
  01028	04		 DB	 4
  01029	04		 DB	 4
  0102a	04		 DB	 4
  0102b	04		 DB	 4
  0102c	04		 DB	 4
  0102d	04		 DB	 4
  0102e	04		 DB	 4
  0102f	04		 DB	 4
  01030	04		 DB	 4
  01031	04		 DB	 4
  01032	04		 DB	 4
  01033	04		 DB	 4
  01034	04		 DB	 4
  01035	04		 DB	 4
  01036	04		 DB	 4
  01037	04		 DB	 4
  01038	04		 DB	 4
  01039	04		 DB	 4
  0103a	04		 DB	 4
  0103b	04		 DB	 4
  0103c	04		 DB	 4
  0103d	04		 DB	 4
  0103e	04		 DB	 4
  0103f	04		 DB	 4
  01040	04		 DB	 4
  01041	04		 DB	 4
  01042	04		 DB	 4
  01043	04		 DB	 4
  01044	04		 DB	 4
  01045	04		 DB	 4
  01046	04		 DB	 4
  01047	04		 DB	 4
  01048	04		 DB	 4
  01049	04		 DB	 4
  0104a	04		 DB	 4
  0104b	04		 DB	 4
  0104c	04		 DB	 4
  0104d	04		 DB	 4
  0104e	04		 DB	 4
  0104f	04		 DB	 4
  01050	04		 DB	 4
  01051	04		 DB	 4
  01052	04		 DB	 4
  01053	04		 DB	 4
  01054	04		 DB	 4
  01055	04		 DB	 4
  01056	04		 DB	 4
  01057	04		 DB	 4
  01058	02		 DB	 2
  01059	04		 DB	 4
  0105a	04		 DB	 4
  0105b	04		 DB	 4
  0105c	04		 DB	 4
  0105d	04		 DB	 4
  0105e	04		 DB	 4
  0105f	04		 DB	 4
  01060	04		 DB	 4
  01061	04		 DB	 4
  01062	04		 DB	 4
  01063	04		 DB	 4
  01064	04		 DB	 4
  01065	04		 DB	 4
  01066	04		 DB	 4
  01067	04		 DB	 4
  01068	04		 DB	 4
  01069	04		 DB	 4
  0106a	04		 DB	 4
  0106b	04		 DB	 4
  0106c	04		 DB	 4
  0106d	04		 DB	 4
  0106e	04		 DB	 4
  0106f	04		 DB	 4
  01070	04		 DB	 4
  01071	04		 DB	 4
  01072	04		 DB	 4
  01073	04		 DB	 4
  01074	04		 DB	 4
  01075	04		 DB	 4
  01076	04		 DB	 4
  01077	04		 DB	 4
  01078	04		 DB	 4
  01079	04		 DB	 4
  0107a	04		 DB	 4
  0107b	04		 DB	 4
  0107c	04		 DB	 4
  0107d	04		 DB	 4
  0107e	04		 DB	 4
  0107f	04		 DB	 4
  01080	04		 DB	 4
  01081	04		 DB	 4
  01082	04		 DB	 4
  01083	04		 DB	 4
  01084	04		 DB	 4
  01085	04		 DB	 4
  01086	04		 DB	 4
  01087	04		 DB	 4
  01088	04		 DB	 4
  01089	04		 DB	 4
  0108a	04		 DB	 4
  0108b	04		 DB	 4
  0108c	04		 DB	 4
  0108d	04		 DB	 4
  0108e	04		 DB	 4
  0108f	04		 DB	 4
  01090	04		 DB	 4
  01091	04		 DB	 4
  01092	04		 DB	 4
  01093	04		 DB	 4
  01094	04		 DB	 4
  01095	04		 DB	 4
  01096	04		 DB	 4
  01097	04		 DB	 4
  01098	04		 DB	 4
  01099	04		 DB	 4
  0109a	04		 DB	 4
  0109b	04		 DB	 4
  0109c	04		 DB	 4
  0109d	04		 DB	 4
  0109e	04		 DB	 4
  0109f	04		 DB	 4
  010a0	04		 DB	 4
  010a1	04		 DB	 4
  010a2	04		 DB	 4
  010a3	04		 DB	 4
  010a4	04		 DB	 4
  010a5	04		 DB	 4
  010a6	04		 DB	 4
  010a7	04		 DB	 4
  010a8	04		 DB	 4
  010a9	04		 DB	 4
  010aa	04		 DB	 4
  010ab	04		 DB	 4
  010ac	04		 DB	 4
  010ad	04		 DB	 4
  010ae	04		 DB	 4
  010af	04		 DB	 4
  010b0	04		 DB	 4
  010b1	04		 DB	 4
  010b2	04		 DB	 4
  010b3	04		 DB	 4
  010b4	04		 DB	 4
  010b5	04		 DB	 4
  010b6	04		 DB	 4
  010b7	04		 DB	 4
  010b8	04		 DB	 4
  010b9	04		 DB	 4
  010ba	04		 DB	 4
  010bb	04		 DB	 4
  010bc	04		 DB	 4
  010bd	04		 DB	 4
  010be	04		 DB	 4
  010bf	04		 DB	 4
  010c0	04		 DB	 4
  010c1	04		 DB	 4
  010c2	04		 DB	 4
  010c3	04		 DB	 4
  010c4	04		 DB	 4
  010c5	04		 DB	 4
  010c6	04		 DB	 4
  010c7	04		 DB	 4
  010c8	04		 DB	 4
  010c9	04		 DB	 4
  010ca	04		 DB	 4
  010cb	04		 DB	 4
  010cc	04		 DB	 4
  010cd	04		 DB	 4
  010ce	04		 DB	 4
  010cf	04		 DB	 4
  010d0	04		 DB	 4
  010d1	04		 DB	 4
  010d2	04		 DB	 4
  010d3	04		 DB	 4
  010d4	04		 DB	 4
  010d5	04		 DB	 4
  010d6	04		 DB	 4
  010d7	04		 DB	 4
  010d8	03		 DB	 3
?dynamics_damage_model@@YGXIH@Z ENDP			; dynamics_damage_model
_TEXT	ENDS
END
