; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_acosf
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_sinf
PUBLIC	?acos@@YGMM@Z					; acos
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?overload_helicopter_message_responses@@YGXXZ	; overload_helicopter_message_responses
PUBLIC	??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_collision'::`1'::__LINE__Var
PUBLIC	??_C@_08DEKMJOIP@receiver@			; `string'
PUBLIC	??_C@_0CP@PJAOKJEC@damage_modifier?5?$DO?$DN?50?5?$CG?$CG?5damage_@ ; `string'
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	?__LINE__Var@?0??response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_articulate_loading_doors'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_set_entity_position'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA ; `response_to_check_mobile_reached_guide'::`1'::__LINE__Var
PUBLIC	??_C@_06CGHJMPBJ@sender@			; `string'
PUBLIC	??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ ; `string'
PUBLIC	??_C@_02HODPCBMO@wp@				; `string'
PUBLIC	??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@ ; `string'
PUBLIC	??_C@_0O@HEGILGAC@weapon_vector@		; `string'
PUBLIC	??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@	; `string'
PUBLIC	??_C@_0EA@DLHKFMEN@get_guide_criteria_valid?5?$CIsende@ ; `string'
PUBLIC	??_C@_06DFLPLEOP@leader@			; `string'
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40490fdb
PUBLIC	__real@4059000000000000
PUBLIC	__real@4072c00000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@41212a8800000000
PUBLIC	__real@c0490fdb
EXTRN	_acos:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z:PROC ; get_3d_unit_vector_dot_product
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ:PROC ; transmit_entity_comms_message
EXTRN	?object_contains_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HHPAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; object_contains_sub_object_type
EXTRN	?damage_client_server_entity@@YGHPAUENTITY@@0M@Z:PROC ; damage_client_server_entity
EXTRN	?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z:PROC ; initiate_aircraft_crew_ejection
EXTRN	?overload_aircraft_message_responses@@YGXW4ENTITY_TYPES@@@Z:PROC ; overload_aircraft_message_responses
EXTRN	?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z:PROC ; aircraft_critically_damaged
EXTRN	?play_aircraft_shot_at_speech@@YGXPAUENTITY@@0@Z:PROC ; play_aircraft_shot_at_speech
EXTRN	?play_aircraft_destroyed_speech@@YGXPAUENTITY@@0@Z:PROC ; play_aircraft_destroyed_speech
EXTRN	?credit_client_server_mobile_kill@@YGXPAUENTITY@@0@Z:PROC ; credit_client_server_mobile_kill
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_client_server_sound_effect_entity
EXTRN	?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z:PROC ; get_local_force_entity
EXTRN	?get_guide_required_heading@@YGHPAUENTITY@@0PAM@Z:PROC ; get_guide_required_heading
EXTRN	?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_valid
EXTRN	?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_value
EXTRN	?damage_client_server_entity_avionics@@YGXPAUENTITY@@W4GUNSHIP_DAMAGE_LEVELS@@@Z:PROC ; damage_client_server_entity_avionics
EXTRN	?activate_common_threat_warning_system@@YGXPAUENTITY@@@Z:PROC ; activate_common_threat_warning_system
EXTRN	?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z:PROC ; damage_helicopter_via_damage_level
EXTRN	?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z:PROC ; add_dynamic_explosion_force
EXTRN	?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z:PROC ; dynamics_kill_model
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA:BYTE ; message_responses
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_set_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA:BYTE ; fn_get_local_entity_vec3d
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?weapon_database@@3PAUWEAPON_DATA@@A:BYTE	; weapon_database
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?waypoint_database@@3PAUWAYPOINT_DATA@@A:BYTE	; waypoint_database
EXTRN	__fltused:DWORD
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@41212a8800000000
CONST	SEGMENT
__real@41212a8800000000 DQ 041212a8800000000r	; 562500
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@4072c00000000000
CONST	SEGMENT
__real@4072c00000000000 DQ 04072c00000000000r	; 300
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_06DFLPLEOP@leader@
CONST	SEGMENT
??_C@_06DFLPLEOP@leader@ DB 'leader', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@DLHKFMEN@get_guide_criteria_valid?5?$CIsende@
CONST	SEGMENT
??_C@_0EA@DLHKFMEN@get_guide_criteria_valid?5?$CIsende@ DB 'get_guide_cri'
	DB	'teria_valid (sender, GUIDE_CRITERIA_LAST_TO_REACH)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@
CONST	SEGMENT
??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@ DB 'weapon_to_target_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HEGILGAC@weapon_vector@
CONST	SEGMENT
??_C@_0O@HEGILGAC@weapon_vector@ DB 'weapon_vector', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@
CONST	SEGMENT
??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@ DB 'selected_'
	DB	'weapon != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HODPCBMO@wp@
CONST	SEGMENT
??_C@_02HODPCBMO@wp@ DB 'wp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
CONST	SEGMENT
??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@ DB 'get_local'
	DB	'_entity_type (sender) == ENTITY_TYPE_GUIDE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CGHJMPBJ@sender@
CONST	SEGMENT
??_C@_06CGHJMPBJ@sender@ DB 'sender', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0221H ; `response_to_check_mobile_reached_guide'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 01edH ; `response_to_set_entity_position'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 01beH ; `response_to_articulate_loading_doors'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PJAOKJEC@damage_modifier?5?$DO?$DN?50?5?$CG?$CG?5damage_@
CONST	SEGMENT
??_C@_0CP@PJAOKJEC@damage_modifier?5?$DO?$DN?50?5?$CG?$CG?5damage_@ DB 'd'
	DB	'amage_modifier >= 0 && damage_modifier <= 1.0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DEKMJOIP@receiver@
CONST	SEGMENT
??_C@_08DEKMJOIP@receiver@ DB 'receiver', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA DD 0aaH ; `response_to_collision'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\hc_msgs.c', 00H				; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv796 = -144						; size = 8
tv968 = -140						; size = 4
tv925 = -140						; size = 4
tv912 = -140						; size = 4
tv1096 = -136						; size = 4
tv1094 = -136						; size = 4
tv714 = -136						; size = 4
tv694 = -136						; size = 4
tv673 = -136						; size = 4
tv650 = -136						; size = 4
tv606 = -136						; size = 4
tv581 = -136						; size = 4
tv560 = -136						; size = 4
tv537 = -136						; size = 4
tv512 = -136						; size = 4
tv480 = -136						; size = 4
tv455 = -136						; size = 4
tv429 = -136						; size = 4
tv409 = -136						; size = 4
tv389 = -136						; size = 4
tv368 = -136						; size = 4
tv349 = -136						; size = 4
tv330 = -136						; size = 4
tv311 = -136						; size = 4
tv285 = -136						; size = 4
tv260 = -136						; size = 4
tv241 = -136						; size = 4
tv221 = -136						; size = 4
tv202 = -136						; size = 4
tv178 = -136						; size = 4
tv157 = -136						; size = 4
tv134 = -136						; size = 4
tv1039 = -132						; size = 4
tv963 = -132						; size = 4
tv920 = -132						; size = 4
tv834 = -132						; size = 4
tv706 = -132						; size = 4
tv686 = -132						; size = 4
tv666 = -132						; size = 4
tv642 = -132						; size = 4
tv598 = -132						; size = 4
tv573 = -132						; size = 4
tv553 = -132						; size = 4
tv529 = -132						; size = 4
tv505 = -132						; size = 4
tv472 = -132						; size = 4
tv448 = -132						; size = 4
tv421 = -132						; size = 4
tv401 = -132						; size = 4
tv381 = -132						; size = 4
tv361 = -132						; size = 4
tv342 = -132						; size = 4
tv323 = -132						; size = 4
tv304 = -132						; size = 4
tv277 = -132						; size = 4
tv253 = -132						; size = 4
tv234 = -132						; size = 4
tv214 = -132						; size = 4
tv195 = -132						; size = 4
tv170 = -132						; size = 4
tv150 = -132						; size = 4
tv94 = -132						; size = 4
tv77 = -132						; size = 4
_leader_pos$1 = -64					; size = 4
_pos$2 = -60						; size = 4
_leader$3 = -56						; size = 4
_launch_angle_error$4 = -52				; size = 4
_weapon_to_target_vector$5 = -48			; size = 4
_weapon_vector$6 = -44					; size = 4
_selected_weapon$7 = -40				; size = 4
_required_heading$8 = -36				; size = 4
_delta_heading$9 = -32					; size = 4
_heading$10 = -28					; size = 4
_waypoint_type$ = -24					; size = 4
_wp$ = -20						; size = 4
_guide_pos$ = -16					; size = 12
_range$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_check_mobile_reached_guide, COMDAT

; 545  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 00 00
	00		 sub	 esp, 144		; 00000090H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 546  : 	float
; 547  : 		range;
; 548  : 
; 549  : 	vec3d
; 550  : 		guide_pos;
; 551  : 
; 552  : 	entity
; 553  : 		*wp;
; 554  : 
; 555  : 	entity_sub_types
; 556  : 		waypoint_type;
; 557  : 
; 558  : 	if (receiver == get_external_view_entity ())

  0000c	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  00011	39 45 0c	 cmp	 DWORD PTR _receiver$[ebp], eax
  00014	75 07		 jne	 SHORT $LN2@response_t

; 559  : 	{
; 560  : 
; 561  : 		wp = NULL;

  00016	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _wp$[ebp], 0
$LN2@response_t:

; 562  : 	}
; 563  : 
; 564  : 	ASSERT (sender);

  0001d	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00021	75 18		 jne	 SHORT $LN3@response_t
  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00028	83 c0 13	 add	 eax, 19			; 00000013H
  0002b	50		 push	 eax
  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_06CGHJMPBJ@sender@
  00036	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@response_t:

; 565  : 
; 566  : 	ASSERT (get_local_entity_type (sender) == ENTITY_TYPE_GUIDE);

  0003b	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0003f	74 0d		 je	 SHORT $LN39@response_t
  00041	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00044	8b 08		 mov	 ecx, DWORD PTR [eax]
  00046	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv77[ebp], ecx
  0004c	eb 24		 jmp	 SHORT $LN40@response_t
$LN39@response_t:
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00054	83 c2 15	 add	 edx, 21			; 00000015H
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00068	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv77[ebp], 0
$LN40@response_t:
  00072	83 bd 7c ff ff
	ff 0d		 cmp	 DWORD PTR tv77[ebp], 13	; 0000000dH
  00079	74 18		 je	 SHORT $LN4@response_t
  0007b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00080	83 c0 15	 add	 eax, 21			; 00000015H
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00089	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@BIHOKKGH@get_local_entity_type?5?$CIsender?$CJ?5@
  0008e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@response_t:

; 567  : 
; 568  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00093	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0009a	74 18		 je	 SHORT $LN5@response_t
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000a1	83 c0 17	 add	 eax, 23			; 00000017H
  000a4	50		 push	 eax
  000a5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  000af	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@response_t:

; 569  : 
; 570  : 	wp = get_local_entity_parent (sender, LIST_TYPE_CURRENT_WAYPOINT);

  000b4	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000b8	74 0d		 je	 SHORT $LN41@response_t
  000ba	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv94[ebp], ecx
  000c5	eb 24		 jmp	 SHORT $LN42@response_t
$LN41@response_t:
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000cd	83 c2 19	 add	 edx, 25			; 00000019H
  000d0	52		 push	 edx
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e1	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
$LN42@response_t:
  000eb	b9 01 00 00 00	 mov	 ecx, 1
  000f0	85 c9		 test	 ecx, ecx
  000f2	74 0c		 je	 SHORT $LN43@response_t
  000f4	c7 85 78 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv134[ebp], 9
  000fe	eb 24		 jmp	 SHORT $LN44@response_t
$LN43@response_t:
  00100	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00106	83 c2 19	 add	 edx, 25			; 00000019H
  00109	52		 push	 edx
  0010a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00114	50		 push	 eax
  00115	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011a	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
$LN44@response_t:
  00124	6a 09		 push	 9
  00126	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00129	51		 push	 ecx
  0012a	69 95 7c ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv94[ebp], 180
  00134	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  0013a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00141	ff d1		 call	 ecx
  00143	89 45 ec	 mov	 DWORD PTR _wp$[ebp], eax

; 571  : 
; 572  : 	ASSERT (wp);

  00146	83 7d ec 00	 cmp	 DWORD PTR _wp$[ebp], 0
  0014a	75 18		 jne	 SHORT $LN6@response_t
  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00151	83 c0 1b	 add	 eax, 27			; 0000001bH
  00154	50		 push	 eax
  00155	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_02HODPCBMO@wp@
  0015f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@response_t:

; 573  : 
; 574  : 	//
; 575  : 	// Check if player should skip waypoint
; 576  : 	//
; 577  : 
; 578  : 	if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00164	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00168	74 0d		 je	 SHORT $LN45@response_t
  0016a	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0016d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016f	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv150[ebp], ecx
  00175	eb 20		 jmp	 SHORT $LN46@response_t
$LN45@response_t:
  00177	68 42 02 00 00	 push	 578			; 00000242H
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00181	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00187	52		 push	 edx
  00188	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018d	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN46@response_t:
  00197	b8 01 00 00 00	 mov	 eax, 1
  0019c	85 c0		 test	 eax, eax
  0019e	74 0c		 je	 SHORT $LN47@response_t
  001a0	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv157[ebp], 156 ; 0000009cH
  001aa	eb 20		 jmp	 SHORT $LN48@response_t
$LN47@response_t:
  001ac	68 42 02 00 00	 push	 578			; 00000242H
  001b1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001bc	51		 push	 ecx
  001bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv157[ebp], 0
$LN48@response_t:
  001cc	68 9c 00 00 00	 push	 156			; 0000009cH
  001d1	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  001d4	52		 push	 edx
  001d5	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv150[ebp], 1116
  001df	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv157[ebp]
  001e5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001ec	ff d2		 call	 edx
  001ee	85 c0		 test	 eax, eax
  001f0	0f 84 b3 00 00
	00		 je	 $LN7@response_t

; 579  : 	{
; 580  : 		waypoint_type = get_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE);

  001f6	83 7d ec 00	 cmp	 DWORD PTR _wp$[ebp], 0
  001fa	74 0d		 je	 SHORT $LN49@response_t
  001fc	8b 45 ec	 mov	 eax, DWORD PTR _wp$[ebp]
  001ff	8b 08		 mov	 ecx, DWORD PTR [eax]
  00201	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv170[ebp], ecx
  00207	eb 24		 jmp	 SHORT $LN50@response_t
$LN49@response_t:
  00209	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0020f	83 c2 23	 add	 edx, 35			; 00000023H
  00212	52		 push	 edx
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0021d	50		 push	 eax
  0021e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00223	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN50@response_t:
  0022d	b9 01 00 00 00	 mov	 ecx, 1
  00232	85 c9		 test	 ecx, ecx
  00234	74 0c		 je	 SHORT $LN51@response_t
  00236	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv178[ebp], 52 ; 00000034H
  00240	eb 24		 jmp	 SHORT $LN52@response_t
$LN51@response_t:
  00242	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00248	83 c2 23	 add	 edx, 35			; 00000023H
  0024b	52		 push	 edx
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN52@response_t:
  00266	6a 34		 push	 52			; 00000034H
  00268	8b 4d ec	 mov	 ecx, DWORD PTR _wp$[ebp]
  0026b	51		 push	 ecx
  0026c	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv170[ebp], 1116
  00276	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  0027c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00283	ff d1		 call	 ecx
  00285	89 45 e8	 mov	 DWORD PTR _waypoint_type$[ebp], eax

; 581  : 
; 582  : 		if (waypoint_database [waypoint_type].player_skip_waypoint)

  00288	6b 45 e8 64	 imul	 eax, DWORD PTR _waypoint_type$[ebp], 100
  0028c	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?waypoint_database@@3PAUWAYPOINT_DATA@@A[eax+4]
  00292	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00295	83 e1 01	 and	 ecx, 1
  00298	74 0a		 je	 SHORT $LN9@response_t

; 583  : 		{
; 584  : 			return TRUE;

  0029a	b8 01 00 00 00	 mov	 eax, 1
  0029f	e9 0d 10 00 00	 jmp	 $LN1@response_t
$LN9@response_t:

; 585  : 		}
; 586  : 	}
; 587  : 	else

  002a4	e9 92 00 00 00	 jmp	 $LN10@response_t
$LN7@response_t:

; 588  : 	{
; 589  : 	
; 590  : 		//
; 591  : 		// Check if landed
; 592  : 		//
; 593  : 	
; 594  : 		if (get_local_entity_int_value (receiver, INT_TYPE_LANDED))

  002a9	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  002ad	74 0d		 je	 SHORT $LN53@response_t
  002af	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  002b2	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b4	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv195[ebp], ecx
  002ba	eb 20		 jmp	 SHORT $LN54@response_t
$LN53@response_t:
  002bc	68 52 02 00 00	 push	 594			; 00000252H
  002c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002cc	52		 push	 edx
  002cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv195[ebp], 0
$LN54@response_t:
  002dc	b8 01 00 00 00	 mov	 eax, 1
  002e1	85 c0		 test	 eax, eax
  002e3	74 0c		 je	 SHORT $LN55@response_t
  002e5	c7 85 78 ff ff
	ff 73 00 00 00	 mov	 DWORD PTR tv202[ebp], 115 ; 00000073H
  002ef	eb 20		 jmp	 SHORT $LN56@response_t
$LN55@response_t:
  002f1	68 52 02 00 00	 push	 594			; 00000252H
  002f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00301	51		 push	 ecx
  00302	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00307	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv202[ebp], 0
$LN56@response_t:
  00311	6a 73		 push	 115			; 00000073H
  00313	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00316	52		 push	 edx
  00317	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv195[ebp], 1116
  00321	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv202[ebp]
  00327	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0032e	ff d2		 call	 edx
  00330	85 c0		 test	 eax, eax
  00332	74 07		 je	 SHORT $LN10@response_t

; 595  : 		{
; 596  : 			return FALSE;

  00334	33 c0		 xor	 eax, eax
  00336	e9 76 0f 00 00	 jmp	 $LN1@response_t
$LN10@response_t:

; 597  : 		}
; 598  : 	}
; 599  : 	
; 600  : 	//
; 601  : 	// Don't allow movement before rotors have spun up.
; 602  : 	//
; 603  : 
; 604  : 	if ((get_local_entity_float_value (receiver, FLOAT_TYPE_MAIN_ROTOR_SPIN_UP_TIMER) > 0.0) && (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI))

  0033b	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0033f	74 0d		 je	 SHORT $LN57@response_t
  00341	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00344	8b 08		 mov	 ecx, DWORD PTR [eax]
  00346	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv214[ebp], ecx
  0034c	eb 20		 jmp	 SHORT $LN58@response_t
$LN57@response_t:
  0034e	68 5c 02 00 00	 push	 604			; 0000025cH
  00353	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00358	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0035e	52		 push	 edx
  0035f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00364	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN58@response_t:
  0036e	b8 01 00 00 00	 mov	 eax, 1
  00373	85 c0		 test	 eax, eax
  00375	74 0c		 je	 SHORT $LN59@response_t
  00377	c7 85 78 ff ff
	ff 4a 00 00 00	 mov	 DWORD PTR tv221[ebp], 74 ; 0000004aH
  00381	eb 20		 jmp	 SHORT $LN60@response_t
$LN59@response_t:
  00383	68 5c 02 00 00	 push	 604			; 0000025cH
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00393	51		 push	 ecx
  00394	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00399	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv221[ebp], 0
$LN60@response_t:
  003a3	6a 4a		 push	 74			; 0000004aH
  003a5	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  003a8	52		 push	 edx
  003a9	69 85 7c ff ff
	ff bc 02 00 00	 imul	 eax, DWORD PTR tv214[ebp], 700
  003b3	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv221[ebp]
  003b9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[eax+ecx*4]
  003c0	ff d2		 call	 edx
  003c2	dd 9d 70 ff ff
	ff		 fstp	 QWORD PTR tv796[ebp]
  003c8	f2 0f 10 85 70
	ff ff ff	 movsd	 xmm0, QWORD PTR tv796[ebp]
  003d0	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  003d8	0f 86 95 00 00
	00		 jbe	 $LN11@response_t
  003de	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  003e2	74 0d		 je	 SHORT $LN61@response_t
  003e4	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003e7	8b 08		 mov	 ecx, DWORD PTR [eax]
  003e9	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv234[ebp], ecx
  003ef	eb 20		 jmp	 SHORT $LN62@response_t
$LN61@response_t:
  003f1	68 5c 02 00 00	 push	 604			; 0000025cH
  003f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00401	52		 push	 edx
  00402	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00407	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN62@response_t:
  00411	b8 01 00 00 00	 mov	 eax, 1
  00416	85 c0		 test	 eax, eax
  00418	74 0c		 je	 SHORT $LN63@response_t
  0041a	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv241[ebp], 156 ; 0000009cH
  00424	eb 20		 jmp	 SHORT $LN64@response_t
$LN63@response_t:
  00426	68 5c 02 00 00	 push	 604			; 0000025cH
  0042b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00430	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00436	51		 push	 ecx
  00437	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043c	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv241[ebp], 0
$LN64@response_t:
  00446	68 9c 00 00 00	 push	 156			; 0000009cH
  0044b	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  0044e	52		 push	 edx
  0044f	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv234[ebp], 1116
  00459	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv241[ebp]
  0045f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00466	ff d2		 call	 edx
  00468	85 c0		 test	 eax, eax
  0046a	75 07		 jne	 SHORT $LN11@response_t

; 605  : 	{
; 606  : 		return FALSE;

  0046c	33 c0		 xor	 eax, eax
  0046e	e9 3e 0e 00 00	 jmp	 $LN1@response_t
$LN11@response_t:

; 607  : 	}
; 608  : 
; 609  : 	if (get_local_entity_int_value (receiver, INT_TYPE_TASK_LEADER))

  00473	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00477	74 0d		 je	 SHORT $LN65@response_t
  00479	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0047c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0047e	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv253[ebp], ecx
  00484	eb 20		 jmp	 SHORT $LN66@response_t
$LN65@response_t:
  00486	68 61 02 00 00	 push	 609			; 00000261H
  0048b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00490	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00496	52		 push	 edx
  00497	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0049c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv253[ebp], 0
$LN66@response_t:
  004a6	b8 01 00 00 00	 mov	 eax, 1
  004ab	85 c0		 test	 eax, eax
  004ad	74 0c		 je	 SHORT $LN67@response_t
  004af	c7 85 78 ff ff
	ff dd 00 00 00	 mov	 DWORD PTR tv260[ebp], 221 ; 000000ddH
  004b9	eb 20		 jmp	 SHORT $LN68@response_t
$LN67@response_t:
  004bb	68 61 02 00 00	 push	 609			; 00000261H
  004c0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004cb	51		 push	 ecx
  004cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d1	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv260[ebp], 0
$LN68@response_t:
  004db	68 dd 00 00 00	 push	 221			; 000000ddH
  004e0	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  004e3	52		 push	 edx
  004e4	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv253[ebp], 1116
  004ee	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv260[ebp]
  004f4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004fb	ff d2		 call	 edx
  004fd	85 c0		 test	 eax, eax
  004ff	0f 84 ea 0a 00
	00		 je	 $LN12@response_t

; 610  : 	{
; 611  : 		//
; 612  : 		// check range to guide
; 613  : 		//
; 614  : 	
; 615  : 		if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_RADIUS))

  00505	6a 00		 push	 0
  00507	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0050a	50		 push	 eax
  0050b	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  00510	85 c0		 test	 eax, eax
  00512	0f 84 b8 00 00
	00		 je	 $LN15@response_t

; 616  : 		{
; 617  : 			range = get_local_entity_float_value (receiver, FLOAT_TYPE_DISTANCE);

  00518	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0051c	74 0d		 je	 SHORT $LN69@response_t
  0051e	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00521	8b 08		 mov	 ecx, DWORD PTR [eax]
  00523	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv277[ebp], ecx
  00529	eb 24		 jmp	 SHORT $LN70@response_t
$LN69@response_t:
  0052b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00531	83 c2 48	 add	 edx, 72			; 00000048H
  00534	52		 push	 edx
  00535	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0053f	50		 push	 eax
  00540	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00545	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv277[ebp], 0
$LN70@response_t:
  0054f	b9 01 00 00 00	 mov	 ecx, 1
  00554	85 c9		 test	 ecx, ecx
  00556	74 0c		 je	 SHORT $LN71@response_t
  00558	c7 85 78 ff ff
	ff 1f 00 00 00	 mov	 DWORD PTR tv285[ebp], 31 ; 0000001fH
  00562	eb 24		 jmp	 SHORT $LN72@response_t
$LN71@response_t:
  00564	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0056a	83 c2 48	 add	 edx, 72			; 00000048H
  0056d	52		 push	 edx
  0056e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00573	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00578	50		 push	 eax
  00579	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0057e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv285[ebp], 0
$LN72@response_t:
  00588	6a 1f		 push	 31			; 0000001fH
  0058a	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0058d	51		 push	 ecx
  0058e	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv277[ebp], 700
  00598	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv285[ebp]
  0059e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  005a5	ff d1		 call	 ecx
  005a7	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 618  : 	
; 619  : 			if (range > get_guide_criteria_value (sender, GUIDE_CRITERIA_RADIUS))

  005aa	6a 00		 push	 0
  005ac	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  005af	50		 push	 eax
  005b0	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  005b5	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv834[ebp]
  005bb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  005c0	0f 2f 85 7c ff
	ff ff		 comiss	 xmm0, DWORD PTR tv834[ebp]
  005c7	76 07		 jbe	 SHORT $LN15@response_t

; 620  : 			{
; 621  : 
; 622  : 				return FALSE;

  005c9	33 c0		 xor	 eax, eax
  005cb	e9 e1 0c 00 00	 jmp	 $LN1@response_t
$LN15@response_t:

; 623  : 			}
; 624  : 		}
; 625  : 	
; 626  : 		//
; 627  : 		// check altitude
; 628  : 		//
; 629  : 	
; 630  : 		if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_ALTITUDE))

  005d0	6a 02		 push	 2
  005d2	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  005d5	50		 push	 eax
  005d6	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  005db	85 c0		 test	 eax, eax
  005dd	0f 84 6f 04 00
	00		 je	 $LN20@response_t

; 631  : 		{
; 632  : 			if ((get_local_entity_int_value (receiver, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI) &&
; 633  : 				(get_local_entity_int_value (wp, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_WAYPOINT_LANDED) &&

  005e3	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  005e7	74 0d		 je	 SHORT $LN73@response_t
  005e9	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  005ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  005ee	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv304[ebp], ecx
  005f4	eb 20		 jmp	 SHORT $LN74@response_t
$LN73@response_t:
  005f6	68 78 02 00 00	 push	 632			; 00000278H
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00600	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00606	52		 push	 edx
  00607	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0060c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN74@response_t:
  00616	b8 01 00 00 00	 mov	 eax, 1
  0061b	85 c0		 test	 eax, eax
  0061d	74 0c		 je	 SHORT $LN75@response_t
  0061f	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv311[ebp], 156 ; 0000009cH
  00629	eb 20		 jmp	 SHORT $LN76@response_t
$LN75@response_t:
  0062b	68 78 02 00 00	 push	 632			; 00000278H
  00630	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00635	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0063b	51		 push	 ecx
  0063c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00641	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv311[ebp], 0
$LN76@response_t:
  0064b	68 9c 00 00 00	 push	 156			; 0000009cH
  00650	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00653	52		 push	 edx
  00654	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv304[ebp], 1116
  0065e	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv311[ebp]
  00664	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0066b	ff d2		 call	 edx
  0066d	85 c0		 test	 eax, eax
  0066f	0f 84 b6 01 00
	00		 je	 $LN17@response_t
  00675	83 7d ec 00	 cmp	 DWORD PTR _wp$[ebp], 0
  00679	74 0d		 je	 SHORT $LN77@response_t
  0067b	8b 45 ec	 mov	 eax, DWORD PTR _wp$[ebp]
  0067e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00680	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv323[ebp], ecx
  00686	eb 20		 jmp	 SHORT $LN78@response_t
$LN77@response_t:
  00688	68 79 02 00 00	 push	 633			; 00000279H
  0068d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00692	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00698	52		 push	 edx
  00699	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0069e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv323[ebp], 0
$LN78@response_t:
  006a8	b8 01 00 00 00	 mov	 eax, 1
  006ad	85 c0		 test	 eax, eax
  006af	74 0c		 je	 SHORT $LN79@response_t
  006b1	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv330[ebp], 52 ; 00000034H
  006bb	eb 20		 jmp	 SHORT $LN80@response_t
$LN79@response_t:
  006bd	68 79 02 00 00	 push	 633			; 00000279H
  006c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  006c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006cd	51		 push	 ecx
  006ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006d3	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv330[ebp], 0
$LN80@response_t:
  006dd	6a 34		 push	 52			; 00000034H
  006df	8b 55 ec	 mov	 edx, DWORD PTR _wp$[ebp]
  006e2	52		 push	 edx
  006e3	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv323[ebp], 1116
  006ed	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv330[ebp]
  006f3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  006fa	ff d2		 call	 edx
  006fc	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  006ff	0f 85 26 01 00
	00		 jne	 $LN17@response_t
  00705	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00709	74 0d		 je	 SHORT $LN81@response_t
  0070b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0070e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00710	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv342[ebp], ecx
  00716	eb 20		 jmp	 SHORT $LN82@response_t
$LN81@response_t:
  00718	68 7a 02 00 00	 push	 634			; 0000027aH
  0071d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00722	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00728	52		 push	 edx
  00729	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0072e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv342[ebp], 0
$LN82@response_t:
  00738	b8 01 00 00 00	 mov	 eax, 1
  0073d	85 c0		 test	 eax, eax
  0073f	74 0c		 je	 SHORT $LN83@response_t
  00741	c7 85 78 ff ff
	ff 0c 00 00 00	 mov	 DWORD PTR tv349[ebp], 12 ; 0000000cH
  0074b	eb 20		 jmp	 SHORT $LN84@response_t
$LN83@response_t:
  0074d	68 7a 02 00 00	 push	 634			; 0000027aH
  00752	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00757	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0075d	51		 push	 ecx
  0075e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00763	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv349[ebp], 0
$LN84@response_t:
  0076d	6a 0c		 push	 12			; 0000000cH
  0076f	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00772	52		 push	 edx
  00773	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv342[ebp], 1116
  0077d	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv349[ebp]
  00783	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0078a	ff d2		 call	 edx
  0078c	85 c0		 test	 eax, eax
  0078e	0f 85 97 00 00
	00		 jne	 $LN17@response_t

; 634  : 				(!get_local_entity_int_value (receiver, INT_TYPE_AUTO_PILOT)))
; 635  : 			{
; 636  : 				if (get_local_entity_int_value (receiver, INT_TYPE_AIRBORNE_AIRCRAFT))

  00794	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00798	74 0d		 je	 SHORT $LN85@response_t
  0079a	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0079d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0079f	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv361[ebp], ecx
  007a5	eb 20		 jmp	 SHORT $LN86@response_t
$LN85@response_t:
  007a7	68 7c 02 00 00	 push	 636			; 0000027cH
  007ac	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007b7	52		 push	 edx
  007b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007bd	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv361[ebp], 0
$LN86@response_t:
  007c7	b8 01 00 00 00	 mov	 eax, 1
  007cc	85 c0		 test	 eax, eax
  007ce	74 0c		 je	 SHORT $LN87@response_t
  007d0	c7 85 78 ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv368[ebp], 4
  007da	eb 20		 jmp	 SHORT $LN88@response_t
$LN87@response_t:
  007dc	68 7c 02 00 00	 push	 636			; 0000027cH
  007e1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007ec	51		 push	 ecx
  007ed	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007f2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv368[ebp], 0
$LN88@response_t:
  007fc	6a 04		 push	 4
  007fe	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00801	52		 push	 edx
  00802	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv361[ebp], 1116
  0080c	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv368[ebp]
  00812	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00819	ff d2		 call	 edx
  0081b	85 c0		 test	 eax, eax
  0081d	74 07		 je	 SHORT $LN19@response_t

; 637  : 				{
; 638  : 
; 639  : 					// if player, not autopilot, land wp and not airborne
; 640  : 
; 641  : 					return FALSE;

  0081f	33 c0		 xor	 eax, eax
  00821	e9 8b 0a 00 00	 jmp	 $LN1@response_t
$LN19@response_t:

; 642  : 				}
; 643  : 			}
; 644  : 			else

  00826	e9 27 02 00 00	 jmp	 $LN20@response_t
$LN17@response_t:

; 645  : 			{
; 646  : 	
; 647  : 				get_local_entity_vec3d (sender, VEC3D_TYPE_POSITION, &guide_pos);

  0082b	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0082f	74 0d		 je	 SHORT $LN89@response_t
  00831	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00834	8b 08		 mov	 ecx, DWORD PTR [eax]
  00836	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv381[ebp], ecx
  0083c	eb 24		 jmp	 SHORT $LN90@response_t
$LN89@response_t:
  0083e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00844	83 c2 66	 add	 edx, 102		; 00000066H
  00847	52		 push	 edx
  00848	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0084d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00852	50		 push	 eax
  00853	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00858	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv381[ebp], 0
$LN90@response_t:
  00862	b9 01 00 00 00	 mov	 ecx, 1
  00867	85 c9		 test	 ecx, ecx
  00869	74 0c		 je	 SHORT $LN91@response_t
  0086b	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv389[ebp], 8
  00875	eb 24		 jmp	 SHORT $LN92@response_t
$LN91@response_t:
  00877	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0087d	83 c2 66	 add	 edx, 102		; 00000066H
  00880	52		 push	 edx
  00881	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00886	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0088b	50		 push	 eax
  0088c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00891	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv389[ebp], 0
$LN92@response_t:
  0089b	8d 4d f0	 lea	 ecx, DWORD PTR _guide_pos$[ebp]
  0089e	51		 push	 ecx
  0089f	6a 08		 push	 8
  008a1	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  008a4	52		 push	 edx
  008a5	6b 85 7c ff ff
	ff 60		 imul	 eax, DWORD PTR tv381[ebp], 96
  008ac	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv389[ebp]
  008b2	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  008b9	ff d2		 call	 edx

; 648  : 					
; 649  : 				range = get_local_entity_float_value (receiver, FLOAT_TYPE_ALTITUDE);

  008bb	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  008bf	74 0d		 je	 SHORT $LN93@response_t
  008c1	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  008c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  008c6	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv401[ebp], ecx
  008cc	eb 24		 jmp	 SHORT $LN94@response_t
$LN93@response_t:
  008ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  008d4	83 c2 68	 add	 edx, 104		; 00000068H
  008d7	52		 push	 edx
  008d8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  008dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008e2	50		 push	 eax
  008e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008e8	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv401[ebp], 0
$LN94@response_t:
  008f2	b9 01 00 00 00	 mov	 ecx, 1
  008f7	85 c9		 test	 ecx, ecx
  008f9	74 0c		 je	 SHORT $LN95@response_t
  008fb	c7 85 78 ff ff
	ff 06 00 00 00	 mov	 DWORD PTR tv409[ebp], 6
  00905	eb 24		 jmp	 SHORT $LN96@response_t
$LN95@response_t:
  00907	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0090d	83 c2 68	 add	 edx, 104		; 00000068H
  00910	52		 push	 edx
  00911	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00916	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0091b	50		 push	 eax
  0091c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00921	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN96@response_t:
  0092b	6a 06		 push	 6
  0092d	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00930	51		 push	 ecx
  00931	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv401[ebp], 700
  0093b	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv409[ebp]
  00941	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00948	ff d1		 call	 ecx
  0094a	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 650  : 		
; 651  : 				range -= get_local_entity_float_value (receiver, FLOAT_TYPE_CENTRE_OF_GRAVITY_TO_GROUND_DISTANCE);

  0094d	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00951	74 0d		 je	 SHORT $LN97@response_t
  00953	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00956	8b 08		 mov	 ecx, DWORD PTR [eax]
  00958	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv421[ebp], ecx
  0095e	eb 24		 jmp	 SHORT $LN98@response_t
$LN97@response_t:
  00960	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00966	83 c2 6a	 add	 edx, 106		; 0000006aH
  00969	52		 push	 edx
  0096a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0096f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00974	50		 push	 eax
  00975	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0097a	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv421[ebp], 0
$LN98@response_t:
  00984	b9 01 00 00 00	 mov	 ecx, 1
  00989	85 c9		 test	 ecx, ecx
  0098b	74 0c		 je	 SHORT $LN99@response_t
  0098d	c7 85 78 ff ff
	ff 12 00 00 00	 mov	 DWORD PTR tv429[ebp], 18 ; 00000012H
  00997	eb 24		 jmp	 SHORT $LN100@response_t
$LN99@response_t:
  00999	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0099f	83 c2 6a	 add	 edx, 106		; 0000006aH
  009a2	52		 push	 edx
  009a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  009a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  009ad	50		 push	 eax
  009ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009b3	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv429[ebp], 0
$LN100@response_t:
  009bd	6a 12		 push	 18			; 00000012H
  009bf	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  009c2	51		 push	 ecx
  009c3	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv421[ebp], 700
  009cd	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv429[ebp]
  009d3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  009da	ff d1		 call	 ecx
  009dc	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv912[ebp]
  009e2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  009e7	f3 0f 5c 85 74
	ff ff ff	 subss	 xmm0, DWORD PTR tv912[ebp]
  009ef	f3 0f 11 45 fc	 movss	 DWORD PTR _range$[ebp], xmm0

; 652  : 		
; 653  : 				range -= guide_pos.y;

  009f4	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  009f9	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _guide_pos$[ebp+4]
  009fe	f3 0f 11 45 fc	 movss	 DWORD PTR _range$[ebp], xmm0

; 654  : 		
; 655  : 				if (fabs (range) > get_guide_criteria_value (sender, GUIDE_CRITERIA_ALTITUDE))

  00a03	51		 push	 ecx
  00a04	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _range$[ebp]
  00a09	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0e	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00a13	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv920[ebp]
  00a19	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv920[ebp]
  00a21	6a 02		 push	 2
  00a23	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00a26	50		 push	 eax
  00a27	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv1094[ebp], xmm0
  00a2f	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  00a34	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv925[ebp]
  00a3a	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv1094[ebp]
  00a42	0f 2f 85 74 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv925[ebp]
  00a49	76 07		 jbe	 SHORT $LN20@response_t

; 656  : 				{
; 657  : 	
; 658  : 					return FALSE;

  00a4b	33 c0		 xor	 eax, eax
  00a4d	e9 5f 08 00 00	 jmp	 $LN1@response_t
$LN20@response_t:

; 659  : 				}
; 660  : 			}
; 661  : 		}
; 662  : 	
; 663  : 		//
; 664  : 		// check heading
; 665  : 		//
; 666  : 	
; 667  : 		if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00a52	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00a56	74 0d		 je	 SHORT $LN101@response_t
  00a58	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00a5b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a5d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv448[ebp], ecx
  00a63	eb 20		 jmp	 SHORT $LN102@response_t
$LN101@response_t:
  00a65	68 9b 02 00 00	 push	 667			; 0000029bH
  00a6a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a6f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a75	52		 push	 edx
  00a76	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a7b	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv448[ebp], 0
$LN102@response_t:
  00a85	b8 01 00 00 00	 mov	 eax, 1
  00a8a	85 c0		 test	 eax, eax
  00a8c	74 0c		 je	 SHORT $LN103@response_t
  00a8e	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv455[ebp], 156 ; 0000009cH
  00a98	eb 20		 jmp	 SHORT $LN104@response_t
$LN103@response_t:
  00a9a	68 9b 02 00 00	 push	 667			; 0000029bH
  00a9f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00aa4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00aaa	51		 push	 ecx
  00aab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ab0	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv455[ebp], 0
$LN104@response_t:
  00aba	68 9c 00 00 00	 push	 156			; 0000009cH
  00abf	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00ac2	52		 push	 edx
  00ac3	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv448[ebp], 1116
  00acd	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv455[ebp]
  00ad3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00ada	ff d2		 call	 edx
  00adc	85 c0		 test	 eax, eax
  00ade	0f 85 5c 01 00
	00		 jne	 $LN26@response_t

; 668  : 		{
; 669  : 			if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_HEADING))

  00ae4	6a 01		 push	 1
  00ae6	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00ae9	50		 push	 eax
  00aea	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  00aef	85 c0		 test	 eax, eax
  00af1	0f 84 49 01 00
	00		 je	 $LN26@response_t

; 670  : 			{
; 671  : 				float
; 672  : 					heading,
; 673  : 					delta_heading,
; 674  : 					required_heading;
; 675  : 		
; 676  : 				heading = get_local_entity_float_value (receiver, FLOAT_TYPE_HEADING);

  00af7	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00afb	74 0d		 je	 SHORT $LN105@response_t
  00afd	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00b00	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b02	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv472[ebp], ecx
  00b08	eb 27		 jmp	 SHORT $LN106@response_t
$LN105@response_t:
  00b0a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00b10	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00b16	52		 push	 edx
  00b17	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b1c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b21	50		 push	 eax
  00b22	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b27	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv472[ebp], 0
$LN106@response_t:
  00b31	b9 01 00 00 00	 mov	 ecx, 1
  00b36	85 c9		 test	 ecx, ecx
  00b38	74 0c		 je	 SHORT $LN107@response_t
  00b3a	c7 85 78 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv480[ebp], 52 ; 00000034H
  00b44	eb 27		 jmp	 SHORT $LN108@response_t
$LN107@response_t:
  00b46	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00b4c	81 c2 83 00 00
	00		 add	 edx, 131		; 00000083H
  00b52	52		 push	 edx
  00b53	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b58	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b5d	50		 push	 eax
  00b5e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b63	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv480[ebp], 0
$LN108@response_t:
  00b6d	6a 34		 push	 52			; 00000034H
  00b6f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00b72	51		 push	 ecx
  00b73	69 95 7c ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv472[ebp], 700
  00b7d	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv480[ebp]
  00b83	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00b8a	ff d1		 call	 ecx
  00b8c	d9 5d e4	 fstp	 DWORD PTR _heading$10[ebp]

; 677  : 		
; 678  : 				get_guide_required_heading (sender, receiver, &required_heading);

  00b8f	8d 45 dc	 lea	 eax, DWORD PTR _required_heading$8[ebp]
  00b92	50		 push	 eax
  00b93	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00b96	51		 push	 ecx
  00b97	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  00b9a	52		 push	 edx
  00b9b	e8 00 00 00 00	 call	 ?get_guide_required_heading@@YGHPAUENTITY@@0PAM@Z ; get_guide_required_heading

; 679  : 		
; 680  : 				delta_heading = (required_heading - heading);

  00ba0	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _required_heading$8[ebp]
  00ba5	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _heading$10[ebp]
  00baa	f3 0f 11 45 e0	 movss	 DWORD PTR _delta_heading$9[ebp], xmm0

; 681  : 		
; 682  : 				if (delta_heading < -PI)

  00baf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c0490fdb
  00bb7	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _delta_heading$9[ebp]
  00bbb	76 14		 jbe	 SHORT $LN23@response_t

; 683  : 				{
; 684  : 					delta_heading += PI2;

  00bbd	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _delta_heading$9[ebp]
  00bc2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  00bca	f3 0f 11 45 e0	 movss	 DWORD PTR _delta_heading$9[ebp], xmm0
  00bcf	eb 20		 jmp	 SHORT $LN25@response_t
$LN23@response_t:

; 685  : 				}
; 686  : 				else if (delta_heading > PI)

  00bd1	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _delta_heading$9[ebp]
  00bd6	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@40490fdb
  00bdd	76 12		 jbe	 SHORT $LN25@response_t

; 687  : 				{
; 688  : 					delta_heading -= PI2;

  00bdf	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _delta_heading$9[ebp]
  00be4	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40c90fdb
  00bec	f3 0f 11 45 e0	 movss	 DWORD PTR _delta_heading$9[ebp], xmm0
$LN25@response_t:

; 689  : 				}
; 690  : 		
; 691  : 				if (fabs (delta_heading) > get_guide_criteria_value (sender, GUIDE_CRITERIA_HEADING))

  00bf1	51		 push	 ecx
  00bf2	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _delta_heading$9[ebp]
  00bf7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bfc	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00c01	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv963[ebp]
  00c07	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv963[ebp]
  00c0f	6a 01		 push	 1
  00c11	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00c14	50		 push	 eax
  00c15	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv1096[ebp], xmm0
  00c1d	e8 00 00 00 00	 call	 ?get_guide_criteria_value@@YGMPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_value
  00c22	d9 9d 74 ff ff
	ff		 fstp	 DWORD PTR tv968[ebp]
  00c28	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv1096[ebp]
  00c30	0f 2f 85 74 ff
	ff ff		 comiss	 xmm0, DWORD PTR tv968[ebp]
  00c37	76 07		 jbe	 SHORT $LN26@response_t

; 692  : 				{
; 693  : 					return FALSE;

  00c39	33 c0		 xor	 eax, eax
  00c3b	e9 71 06 00 00	 jmp	 $LN1@response_t
$LN26@response_t:

; 694  : 				}
; 695  : 			}
; 696  : 		}
; 697  : 		
; 698  : 		//
; 699  : 		// check weapon vector
; 700  : 		//
; 701  : 	
; 702  : 		if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00c40	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00c44	74 0d		 je	 SHORT $LN109@response_t
  00c46	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00c49	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c4b	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv505[ebp], ecx
  00c51	eb 20		 jmp	 SHORT $LN110@response_t
$LN109@response_t:
  00c53	68 be 02 00 00	 push	 702			; 000002beH
  00c58	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c5d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c63	52		 push	 edx
  00c64	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c69	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv505[ebp], 0
$LN110@response_t:
  00c73	b8 01 00 00 00	 mov	 eax, 1
  00c78	85 c0		 test	 eax, eax
  00c7a	74 0c		 je	 SHORT $LN111@response_t
  00c7c	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv512[ebp], 156 ; 0000009cH
  00c86	eb 20		 jmp	 SHORT $LN112@response_t
$LN111@response_t:
  00c88	68 be 02 00 00	 push	 702			; 000002beH
  00c8d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c92	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c98	51		 push	 ecx
  00c99	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c9e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv512[ebp], 0
$LN112@response_t:
  00ca8	68 9c 00 00 00	 push	 156			; 0000009cH
  00cad	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00cb0	52		 push	 edx
  00cb1	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv505[ebp], 1116
  00cbb	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv512[ebp]
  00cc1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00cc8	ff d2		 call	 edx
  00cca	85 c0		 test	 eax, eax
  00ccc	0f 85 18 03 00
	00		 jne	 $LN33@response_t

; 703  : 		{
; 704  : 			if (get_guide_criteria_valid (sender, GUIDE_CRITERIA_WEAPON_VECTOR))

  00cd2	6a 05		 push	 5
  00cd4	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00cd7	50		 push	 eax
  00cd8	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  00cdd	85 c0		 test	 eax, eax
  00cdf	0f 84 05 03 00
	00		 je	 $LN33@response_t

; 705  : 			{
; 706  : 				entity_sub_types
; 707  : 					selected_weapon;
; 708  : 		
; 709  : 				vec3d
; 710  : 					*weapon_vector,
; 711  : 					*weapon_to_target_vector;
; 712  : 		
; 713  : 				float
; 714  : 					launch_angle_error;
; 715  : 					
; 716  : 				selected_weapon = get_local_entity_int_value (receiver, INT_TYPE_SELECTED_WEAPON);

  00ce5	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00ce9	74 0d		 je	 SHORT $LN113@response_t
  00ceb	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00cee	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cf0	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv529[ebp], ecx
  00cf6	eb 27		 jmp	 SHORT $LN114@response_t
$LN113@response_t:
  00cf8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00cfe	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  00d04	52		 push	 edx
  00d05	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d0a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d0f	50		 push	 eax
  00d10	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d15	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv529[ebp], 0
$LN114@response_t:
  00d1f	b9 01 00 00 00	 mov	 ecx, 1
  00d24	85 c9		 test	 ecx, ecx
  00d26	74 0c		 je	 SHORT $LN115@response_t
  00d28	c7 85 78 ff ff
	ff b8 00 00 00	 mov	 DWORD PTR tv537[ebp], 184 ; 000000b8H
  00d32	eb 27		 jmp	 SHORT $LN116@response_t
$LN115@response_t:
  00d34	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00d3a	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  00d40	52		 push	 edx
  00d41	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d46	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00d4b	50		 push	 eax
  00d4c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d51	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv537[ebp], 0
$LN116@response_t:
  00d5b	68 b8 00 00 00	 push	 184			; 000000b8H
  00d60	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00d63	51		 push	 ecx
  00d64	69 95 7c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv529[ebp], 1116
  00d6e	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv537[ebp]
  00d74	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00d7b	ff d1		 call	 ecx
  00d7d	89 45 d8	 mov	 DWORD PTR _selected_weapon$7[ebp], eax

; 717  : 		
; 718  : 				ASSERT (selected_weapon != ENTITY_SUB_TYPE_WEAPON_NO_WEAPON);

  00d80	83 7d d8 00	 cmp	 DWORD PTR _selected_weapon$7[ebp], 0
  00d84	75 1a		 jne	 SHORT $LN29@response_t
  00d86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00d8b	05 ad 00 00 00	 add	 eax, 173		; 000000adH
  00d90	50		 push	 eax
  00d91	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d96	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@FBJGKGOB@selected_weapon?5?$CB?$DN?5ENTITY_SUB_T@
  00d9b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN29@response_t:

; 719  : 		
; 720  : 				if (get_local_entity_int_value (receiver, INT_TYPE_WEAPON_AND_TARGET_VECTORS_VALID))

  00da0	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00da4	74 0d		 je	 SHORT $LN117@response_t
  00da6	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00da9	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dab	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv553[ebp], ecx
  00db1	eb 20		 jmp	 SHORT $LN118@response_t
$LN117@response_t:
  00db3	68 d0 02 00 00	 push	 720			; 000002d0H
  00db8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dbd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00dc3	52		 push	 edx
  00dc4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dc9	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv553[ebp], 0
$LN118@response_t:
  00dd3	b8 01 00 00 00	 mov	 eax, 1
  00dd8	85 c0		 test	 eax, eax
  00dda	74 0c		 je	 SHORT $LN119@response_t
  00ddc	c7 85 78 ff ff
	ff 02 01 00 00	 mov	 DWORD PTR tv560[ebp], 258 ; 00000102H
  00de6	eb 20		 jmp	 SHORT $LN120@response_t
$LN119@response_t:
  00de8	68 d0 02 00 00	 push	 720			; 000002d0H
  00ded	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00df2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00df8	51		 push	 ecx
  00df9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dfe	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv560[ebp], 0
$LN120@response_t:
  00e08	68 02 01 00 00	 push	 258			; 00000102H
  00e0d	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00e10	52		 push	 edx
  00e11	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv553[ebp], 1116
  00e1b	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv560[ebp]
  00e21	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00e28	ff d2		 call	 edx
  00e2a	85 c0		 test	 eax, eax
  00e2c	0f 84 b8 01 00
	00		 je	 $LN33@response_t

; 721  : 				{
; 722  : 					weapon_vector = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_WEAPON_VECTOR);

  00e32	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00e36	74 0d		 je	 SHORT $LN121@response_t
  00e38	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00e3b	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e3d	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv573[ebp], ecx
  00e43	eb 27		 jmp	 SHORT $LN122@response_t
$LN121@response_t:
  00e45	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00e4b	81 c2 b1 00 00
	00		 add	 edx, 177		; 000000b1H
  00e51	52		 push	 edx
  00e52	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e57	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e5c	50		 push	 eax
  00e5d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e62	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv573[ebp], 0
$LN122@response_t:
  00e6c	b9 01 00 00 00	 mov	 ecx, 1
  00e71	85 c9		 test	 ecx, ecx
  00e73	74 0c		 je	 SHORT $LN123@response_t
  00e75	c7 85 78 ff ff
	ff 0e 00 00 00	 mov	 DWORD PTR tv581[ebp], 14 ; 0000000eH
  00e7f	eb 27		 jmp	 SHORT $LN124@response_t
$LN123@response_t:
  00e81	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00e87	81 c2 b1 00 00
	00		 add	 edx, 177		; 000000b1H
  00e8d	52		 push	 edx
  00e8e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e93	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00e98	50		 push	 eax
  00e99	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e9e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv581[ebp], 0
$LN124@response_t:
  00ea8	6a 0e		 push	 14			; 0000000eH
  00eaa	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00ead	51		 push	 ecx
  00eae	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv573[ebp], 96
  00eb5	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv581[ebp]
  00ebb	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00ec2	ff d1		 call	 ecx
  00ec4	89 45 d4	 mov	 DWORD PTR _weapon_vector$6[ebp], eax

; 723  : 			
; 724  : 					ASSERT (weapon_vector);

  00ec7	83 7d d4 00	 cmp	 DWORD PTR _weapon_vector$6[ebp], 0
  00ecb	75 1a		 jne	 SHORT $LN31@response_t
  00ecd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00ed2	05 b3 00 00 00	 add	 eax, 179		; 000000b3H
  00ed7	50		 push	 eax
  00ed8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00edd	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HEGILGAC@weapon_vector@
  00ee2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN31@response_t:

; 725  : 			
; 726  : 					weapon_to_target_vector = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_WEAPON_TO_TARGET_VECTOR);

  00ee7	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00eeb	74 0d		 je	 SHORT $LN125@response_t
  00eed	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00ef0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ef2	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv598[ebp], ecx
  00ef8	eb 27		 jmp	 SHORT $LN126@response_t
$LN125@response_t:
  00efa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00f00	81 c2 b5 00 00
	00		 add	 edx, 181		; 000000b5H
  00f06	52		 push	 edx
  00f07	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f11	50		 push	 eax
  00f12	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f17	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv598[ebp], 0
$LN126@response_t:
  00f21	b9 01 00 00 00	 mov	 ecx, 1
  00f26	85 c9		 test	 ecx, ecx
  00f28	74 0c		 je	 SHORT $LN127@response_t
  00f2a	c7 85 78 ff ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv606[ebp], 13 ; 0000000dH
  00f34	eb 27		 jmp	 SHORT $LN128@response_t
$LN127@response_t:
  00f36	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00f3c	81 c2 b5 00 00
	00		 add	 edx, 181		; 000000b5H
  00f42	52		 push	 edx
  00f43	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00f4d	50		 push	 eax
  00f4e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f53	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv606[ebp], 0
$LN128@response_t:
  00f5d	6a 0d		 push	 13			; 0000000dH
  00f5f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00f62	51		 push	 ecx
  00f63	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv598[ebp], 96
  00f6a	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv606[ebp]
  00f70	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00f77	ff d1		 call	 ecx
  00f79	89 45 d0	 mov	 DWORD PTR _weapon_to_target_vector$5[ebp], eax

; 727  : 			
; 728  : 					ASSERT (weapon_to_target_vector);

  00f7c	83 7d d0 00	 cmp	 DWORD PTR _weapon_to_target_vector$5[ebp], 0
  00f80	75 1a		 jne	 SHORT $LN32@response_t
  00f82	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00f87	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  00f8c	50		 push	 eax
  00f8d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f92	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KLDNOBIJ@weapon_to_target_vector@
  00f97	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN32@response_t:

; 729  : 			
; 730  : 					launch_angle_error = acos (get_3d_unit_vector_dot_product (weapon_vector, weapon_to_target_vector));

  00f9c	8b 45 d0	 mov	 eax, DWORD PTR _weapon_to_target_vector$5[ebp]
  00f9f	50		 push	 eax
  00fa0	8b 4d d4	 mov	 ecx, DWORD PTR _weapon_vector$6[ebp]
  00fa3	51		 push	 ecx
  00fa4	e8 00 00 00 00	 call	 ?get_3d_unit_vector_dot_product@@YGMPBUVEC3D@@0@Z ; get_3d_unit_vector_dot_product
  00fa9	51		 push	 ecx
  00faa	d9 1c 24	 fstp	 DWORD PTR [esp]
  00fad	e8 00 00 00 00	 call	 ?acos@@YGMM@Z		; acos
  00fb2	d9 5d cc	 fstp	 DWORD PTR _launch_angle_error$4[ebp]

; 731  : 		
; 732  : 					if (fabs (launch_angle_error) > weapon_database[selected_weapon].max_launch_angle_error)

  00fb5	51		 push	 ecx
  00fb6	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _launch_angle_error$4[ebp]
  00fbb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fc0	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00fc5	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv1039[ebp]
  00fcb	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv1039[ebp]
  00fd3	69 45 d8 e0 00
	00 00		 imul	 eax, DWORD PTR _selected_weapon$7[ebp], 224
  00fda	0f 2f 80 d0 00
	00 00		 comiss	 xmm0, DWORD PTR ?weapon_database@@3PAUWEAPON_DATA@@A[eax+208]
  00fe1	76 07		 jbe	 SHORT $LN33@response_t

; 733  : 					{
; 734  : 						return FALSE;

  00fe3	33 c0		 xor	 eax, eax
  00fe5	e9 c7 02 00 00	 jmp	 $LN1@response_t
$LN33@response_t:

; 735  : 					}
; 736  : 				}
; 737  : 			}
; 738  : 		}
; 739  : 	}
; 740  : 	else

  00fea	e9 bd 02 00 00	 jmp	 $LN37@response_t
$LN12@response_t:

; 741  : 	{
; 742  : 		entity
; 743  : 			*leader;
; 744  : 
; 745  : 		vec3d
; 746  : 			*pos,
; 747  : 			*leader_pos;
; 748  : 
; 749  : 		ASSERT (get_guide_criteria_valid (sender, GUIDE_CRITERIA_LAST_TO_REACH));

  00fef	6a 04		 push	 4
  00ff1	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00ff4	50		 push	 eax
  00ff5	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  00ffa	85 c0		 test	 eax, eax
  00ffc	75 1a		 jne	 SHORT $LN34@response_t
  00ffe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  01003	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  01008	50		 push	 eax
  01009	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0100e	68 00 00 00 00	 push	 OFFSET ??_C@_0EA@DLHKFMEN@get_guide_criteria_valid?5?$CIsende@
  01013	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN34@response_t:

; 750  : 
; 751  : 		//
; 752  : 		// None Task Leader Entities (only for last to reach)
; 753  : 		// Check distance to task leader
; 754  : 		//
; 755  : 
; 756  : 		leader = (entity *) get_local_entity_ptr_value (sender, PTR_TYPE_TASK_LEADER);

  01018	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0101c	74 0d		 je	 SHORT $LN129@response_t
  0101e	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  01021	8b 08		 mov	 ecx, DWORD PTR [eax]
  01023	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv642[ebp], ecx
  01029	eb 27		 jmp	 SHORT $LN130@response_t
$LN129@response_t:
  0102b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  01031	81 c2 d3 00 00
	00		 add	 edx, 211		; 000000d3H
  01037	52		 push	 edx
  01038	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0103d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01042	50		 push	 eax
  01043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01048	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv642[ebp], 0
$LN130@response_t:
  01052	b9 01 00 00 00	 mov	 ecx, 1
  01057	85 c9		 test	 ecx, ecx
  01059	74 0c		 je	 SHORT $LN131@response_t
  0105b	c7 85 78 ff ff
	ff 0f 00 00 00	 mov	 DWORD PTR tv650[ebp], 15 ; 0000000fH
  01065	eb 27		 jmp	 SHORT $LN132@response_t
$LN131@response_t:
  01067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0106d	81 c2 d3 00 00
	00		 add	 edx, 211		; 000000d3H
  01073	52		 push	 edx
  01074	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01079	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  0107e	50		 push	 eax
  0107f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01084	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv650[ebp], 0
$LN132@response_t:
  0108e	6a 0f		 push	 15			; 0000000fH
  01090	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  01093	51		 push	 ecx
  01094	6b 95 7c ff ff
	ff 50		 imul	 edx, DWORD PTR tv642[ebp], 80
  0109b	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv650[ebp]
  010a1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  010a8	ff d1		 call	 ecx
  010aa	89 45 c8	 mov	 DWORD PTR _leader$3[ebp], eax

; 757  : 
; 758  : 		ASSERT (leader);

  010ad	83 7d c8 00	 cmp	 DWORD PTR _leader$3[ebp], 0
  010b1	75 1a		 jne	 SHORT $LN35@response_t
  010b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  010b8	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  010bd	50		 push	 eax
  010be	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  010c3	68 00 00 00 00	 push	 OFFSET ??_C@_06DFLPLEOP@leader@
  010c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN35@response_t:

; 759  : 
; 760  : 		if (get_local_entity_int_value (leader, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  010cd	83 7d c8 00	 cmp	 DWORD PTR _leader$3[ebp], 0
  010d1	74 0d		 je	 SHORT $LN133@response_t
  010d3	8b 45 c8	 mov	 eax, DWORD PTR _leader$3[ebp]
  010d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  010d8	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv666[ebp], ecx
  010de	eb 20		 jmp	 SHORT $LN134@response_t
$LN133@response_t:
  010e0	68 f8 02 00 00	 push	 760			; 000002f8H
  010e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010f0	52		 push	 edx
  010f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010f6	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv666[ebp], 0
$LN134@response_t:
  01100	b8 01 00 00 00	 mov	 eax, 1
  01105	85 c0		 test	 eax, eax
  01107	74 0c		 je	 SHORT $LN135@response_t
  01109	c7 85 78 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv673[ebp], 156 ; 0000009cH
  01113	eb 20		 jmp	 SHORT $LN136@response_t
$LN135@response_t:
  01115	68 f8 02 00 00	 push	 760			; 000002f8H
  0111a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0111f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  01125	51		 push	 ecx
  01126	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0112b	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv673[ebp], 0
$LN136@response_t:
  01135	68 9c 00 00 00	 push	 156			; 0000009cH
  0113a	8b 55 c8	 mov	 edx, DWORD PTR _leader$3[ebp]
  0113d	52		 push	 edx
  0113e	69 85 7c ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv666[ebp], 1116
  01148	8b 8d 78 ff ff
	ff		 mov	 ecx, DWORD PTR tv673[ebp]
  0114e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  01155	ff d2		 call	 edx
  01157	85 c0		 test	 eax, eax
  01159	0f 85 4d 01 00
	00		 jne	 $LN37@response_t

; 761  : 		{
; 762  : 			pos = get_local_entity_vec3d_ptr (receiver, VEC3D_TYPE_POSITION);

  0115f	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  01163	74 0d		 je	 SHORT $LN137@response_t
  01165	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  01168	8b 08		 mov	 ecx, DWORD PTR [eax]
  0116a	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv686[ebp], ecx
  01170	eb 27		 jmp	 SHORT $LN138@response_t
$LN137@response_t:
  01172	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  01178	81 c2 d9 00 00
	00		 add	 edx, 217		; 000000d9H
  0117e	52		 push	 edx
  0117f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01189	50		 push	 eax
  0118a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0118f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv686[ebp], 0
$LN138@response_t:
  01199	b9 01 00 00 00	 mov	 ecx, 1
  0119e	85 c9		 test	 ecx, ecx
  011a0	74 0c		 je	 SHORT $LN139@response_t
  011a2	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv694[ebp], 8
  011ac	eb 27		 jmp	 SHORT $LN140@response_t
$LN139@response_t:
  011ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  011b4	81 c2 d9 00 00
	00		 add	 edx, 217		; 000000d9H
  011ba	52		 push	 edx
  011bb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  011c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  011c5	50		 push	 eax
  011c6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  011cb	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv694[ebp], 0
$LN140@response_t:
  011d5	6a 08		 push	 8
  011d7	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  011da	51		 push	 ecx
  011db	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv686[ebp], 96
  011e2	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv694[ebp]
  011e8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  011ef	ff d1		 call	 ecx
  011f1	89 45 c4	 mov	 DWORD PTR _pos$2[ebp], eax

; 763  : 			
; 764  : 			leader_pos = get_local_entity_vec3d_ptr (leader, VEC3D_TYPE_POSITION);

  011f4	83 7d c8 00	 cmp	 DWORD PTR _leader$3[ebp], 0
  011f8	74 0d		 je	 SHORT $LN141@response_t
  011fa	8b 45 c8	 mov	 eax, DWORD PTR _leader$3[ebp]
  011fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  011ff	89 8d 7c ff ff
	ff		 mov	 DWORD PTR tv706[ebp], ecx
  01205	eb 27		 jmp	 SHORT $LN142@response_t
$LN141@response_t:
  01207	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0120d	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  01213	52		 push	 edx
  01214	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0121e	50		 push	 eax
  0121f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01224	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv706[ebp], 0
$LN142@response_t:
  0122e	b9 01 00 00 00	 mov	 ecx, 1
  01233	85 c9		 test	 ecx, ecx
  01235	74 0c		 je	 SHORT $LN143@response_t
  01237	c7 85 78 ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv714[ebp], 8
  01241	eb 27		 jmp	 SHORT $LN144@response_t
$LN143@response_t:
  01243	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  01249	81 c2 db 00 00
	00		 add	 edx, 219		; 000000dbH
  0124f	52		 push	 edx
  01250	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  01255	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0125a	50		 push	 eax
  0125b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01260	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv714[ebp], 0
$LN144@response_t:
  0126a	6a 08		 push	 8
  0126c	8b 4d c8	 mov	 ecx, DWORD PTR _leader$3[ebp]
  0126f	51		 push	 ecx
  01270	6b 95 7c ff ff
	ff 60		 imul	 edx, DWORD PTR tv706[ebp], 96
  01277	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv714[ebp]
  0127d	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  01284	ff d1		 call	 ecx
  01286	89 45 c0	 mov	 DWORD PTR _leader_pos$1[ebp], eax

; 765  : 
; 766  : 			range = get_sqr_2d_range (pos, leader_pos);

  01289	8b 45 c0	 mov	 eax, DWORD PTR _leader_pos$1[ebp]
  0128c	50		 push	 eax
  0128d	8b 4d c4	 mov	 ecx, DWORD PTR _pos$2[ebp]
  01290	51		 push	 ecx
  01291	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  01296	d9 5d fc	 fstp	 DWORD PTR _range$[ebp]

; 767  : 
; 768  : 			if (range > HELICOPTER_LAST_TO_REACH_DISTANCE)

  01299	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _range$[ebp]
  0129e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@41212a8800000000
  012a6	76 04		 jbe	 SHORT $LN37@response_t

; 769  : 			{
; 770  : 				return FALSE;

  012a8	33 c0		 xor	 eax, eax
  012aa	eb 05		 jmp	 SHORT $LN1@response_t
$LN37@response_t:

; 771  : 			}
; 772  : 		}
; 773  : 	}
; 774  : 		
; 775  : 	return TRUE;

  012ac	b8 01 00 00 00	 mov	 eax, 1
$LN1@response_t:

; 776  : }

  012b1	5f		 pop	 edi
  012b2	5e		 pop	 esi
  012b3	5b		 pop	 ebx
  012b4	8b e5		 mov	 esp, ebp
  012b6	5d		 pop	 ebp
  012b7	c2 10 00	 ret	 16			; 00000010H
?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_check_mobile_reached_guide
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv320 = -124						; size = 4
tv304 = -124						; size = 4
tv362 = -120						; size = 4
tv360 = -120						; size = 4
tv243 = -120						; size = 4
tv223 = -120						; size = 4
tv203 = -120						; size = 4
tv141 = -120						; size = 4
tv85 = -120						; size = 4
tv314 = -116						; size = 4
tv298 = -116						; size = 4
tv235 = -116						; size = 4
tv215 = -116						; size = 4
tv195 = -116						; size = 4
tv133 = -116						; size = 4
tv77 = -116						; size = 4
_raw$ = -48						; size = 4
_heading$ = -44						; size = 4
_en_heading$ = -40					; size = 4
_velocity$ = -36					; size = 4
_parent_position$ = -32					; size = 4
_delta_position$ = -28					; size = 12
_new_position$ = -16					; size = 12
_position$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_set_entity_position, COMDAT

; 493  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 494  : 
; 495  : 	vec3d
; 496  : 		*position,
; 497  : 		new_position,
; 498  : 		delta_position,
; 499  : 		*parent_position;
; 500  : 
; 501  : 	float
; 502  : 		velocity,
; 503  : 		en_heading,
; 504  : 		heading;
; 505  : 
; 506  : 	helicopter
; 507  : 		*raw;
; 508  : 
; 509  : 	raw = (helicopter *) get_local_entity_data (receiver);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d d0	 mov	 DWORD PTR _raw$[ebp], ecx

; 510  : 
; 511  : 	position = va_arg (pargs, vec3d *);

  00012	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00015	83 c0 04	 add	 eax, 4
  00018	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0001b	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  0001e	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00021	89 55 fc	 mov	 DWORD PTR _position$[ebp], edx

; 512  : 
; 513  : 	heading = (float) va_arg (pargs, double);

  00024	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  00027	83 c0 08	 add	 eax, 8
  0002a	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  0002d	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00030	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  00035	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00039	f3 0f 11 45 d4	 movss	 DWORD PTR _heading$[ebp], xmm0

; 514  : 
; 515  : 	en_heading = get_local_entity_float_value (receiver, FLOAT_TYPE_HEADING);

  0003e	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00042	74 0a		 je	 SHORT $LN3@response_t
  00044	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00047	8b 08		 mov	 ecx, DWORD PTR [eax]
  00049	89 4d 8c	 mov	 DWORD PTR tv77[ebp], ecx
  0004c	eb 21		 jmp	 SHORT $LN4@response_t
$LN3@response_t:
  0004e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00054	83 c2 16	 add	 edx, 22			; 00000016H
  00057	52		 push	 edx
  00058	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00068	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@response_t:
  0006f	b9 01 00 00 00	 mov	 ecx, 1
  00074	85 c9		 test	 ecx, ecx
  00076	74 09		 je	 SHORT $LN5@response_t
  00078	c7 45 88 34 00
	00 00		 mov	 DWORD PTR tv85[ebp], 52	; 00000034H
  0007f	eb 21		 jmp	 SHORT $LN6@response_t
$LN5@response_t:
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00087	83 c2 16	 add	 edx, 22			; 00000016H
  0008a	52		 push	 edx
  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00090	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0009b	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN6@response_t:
  000a2	6a 34		 push	 52			; 00000034H
  000a4	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000a7	51		 push	 ecx
  000a8	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv77[ebp], 700
  000af	8b 45 88	 mov	 eax, DWORD PTR tv85[ebp]
  000b2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  000b9	ff d1		 call	 ecx
  000bb	d9 5d d8	 fstp	 DWORD PTR _en_heading$[ebp]

; 516  : 
; 517  : 	velocity = (float) va_arg (pargs, double);

  000be	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  000c1	83 c0 08	 add	 eax, 8
  000c4	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  000c7	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  000ca	f2 0f 10 41 f8	 movsd	 xmm0, QWORD PTR [ecx-8]
  000cf	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d3	f3 0f 11 45 dc	 movss	 DWORD PTR _velocity$[ebp], xmm0

; 518  : 
; 519  : 	parent_position = get_local_entity_vec3d_ptr (sender, VEC3D_TYPE_POSITION);

  000d8	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000dc	74 0a		 je	 SHORT $LN7@response_t
  000de	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	89 4d 8c	 mov	 DWORD PTR tv133[ebp], ecx
  000e6	eb 21		 jmp	 SHORT $LN8@response_t
$LN7@response_t:
  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000ee	83 c2 1a	 add	 edx, 26			; 0000001aH
  000f1	52		 push	 edx
  000f2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fc	50		 push	 eax
  000fd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00102	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN8@response_t:
  00109	b9 01 00 00 00	 mov	 ecx, 1
  0010e	85 c9		 test	 ecx, ecx
  00110	74 09		 je	 SHORT $LN9@response_t
  00112	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv141[ebp], 8
  00119	eb 21		 jmp	 SHORT $LN10@response_t
$LN9@response_t:
  0011b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00121	83 c2 1a	 add	 edx, 26			; 0000001aH
  00124	52		 push	 edx
  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN10@response_t:
  0013c	6a 08		 push	 8
  0013e	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00141	51		 push	 ecx
  00142	6b 55 8c 60	 imul	 edx, DWORD PTR tv133[ebp], 96
  00146	8b 45 88	 mov	 eax, DWORD PTR tv141[ebp]
  00149	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00150	ff d1		 call	 ecx
  00152	89 45 e0	 mov	 DWORD PTR _parent_position$[ebp], eax

; 520  : 
; 521  : 	delta_position.x = raw->ac.mob.position.x - parent_position->x;

  00155	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  00158	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  0015b	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00160	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00164	f3 0f 11 45 e4	 movss	 DWORD PTR _delta_position$[ebp], xmm0

; 522  : 	delta_position.y = raw->ac.mob.position.y - parent_position->y;

  00169	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  0016c	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  0016f	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00174	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00179	f3 0f 11 45 e8	 movss	 DWORD PTR _delta_position$[ebp+4], xmm0

; 523  : 	delta_position.z = raw->ac.mob.position.z - parent_position->z;

  0017e	8b 45 d0	 mov	 eax, DWORD PTR _raw$[ebp]
  00181	8b 4d e0	 mov	 ecx, DWORD PTR _parent_position$[ebp]
  00184	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  00189	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0018e	f3 0f 11 45 ec	 movss	 DWORD PTR _delta_position$[ebp+8], xmm0

; 524  : 
; 525  : 	new_position.x = position->x + ((cos (heading - en_heading) * delta_position.x) + (sin (heading - en_heading) * delta_position.z));

  00193	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00198	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _en_heading$[ebp]
  0019d	51		 push	 ecx
  0019e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a3	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  001a8	d9 5d 8c	 fstp	 DWORD PTR tv298[ebp]
  001ab	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv298[ebp]
  001b0	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_position$[ebp]
  001b5	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _heading$[ebp]
  001ba	f3 0f 5c 4d d8	 subss	 xmm1, DWORD PTR _en_heading$[ebp]
  001bf	51		 push	 ecx
  001c0	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  001c5	f3 0f 11 45 88	 movss	 DWORD PTR tv360[ebp], xmm0
  001ca	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  001cf	d9 5d 84	 fstp	 DWORD PTR tv304[ebp]
  001d2	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv304[ebp]
  001d7	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _delta_position$[ebp+8]
  001dc	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR tv360[ebp]
  001e1	f3 0f 58 c8	 addss	 xmm1, xmm0
  001e5	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  001e8	f3 0f 58 08	 addss	 xmm1, DWORD PTR [eax]
  001ec	f3 0f 11 4d f0	 movss	 DWORD PTR _new_position$[ebp], xmm1

; 526  : 	new_position.y = position->y + delta_position.y;

  001f1	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  001f4	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  001f9	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _delta_position$[ebp+4]
  001fe	f3 0f 11 45 f4	 movss	 DWORD PTR _new_position$[ebp+4], xmm0

; 527  : 	new_position.z = position->z + ((cos (heading - en_heading) * delta_position.z) - (sin (heading - en_heading) * delta_position.x));

  00203	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00208	f3 0f 5c 45 d8	 subss	 xmm0, DWORD PTR _en_heading$[ebp]
  0020d	51		 push	 ecx
  0020e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00213	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00218	d9 5d 8c	 fstp	 DWORD PTR tv314[ebp]
  0021b	f3 0f 10 45 8c	 movss	 xmm0, DWORD PTR tv314[ebp]
  00220	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _delta_position$[ebp+8]
  00225	f3 0f 10 4d d4	 movss	 xmm1, DWORD PTR _heading$[ebp]
  0022a	f3 0f 5c 4d d8	 subss	 xmm1, DWORD PTR _en_heading$[ebp]
  0022f	51		 push	 ecx
  00230	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00235	f3 0f 11 45 88	 movss	 DWORD PTR tv362[ebp], xmm0
  0023a	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  0023f	d9 5d 84	 fstp	 DWORD PTR tv320[ebp]
  00242	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv320[ebp]
  00247	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _delta_position$[ebp]
  0024c	f3 0f 10 4d 88	 movss	 xmm1, DWORD PTR tv362[ebp]
  00251	f3 0f 5c c8	 subss	 xmm1, xmm0
  00255	8b 45 fc	 mov	 eax, DWORD PTR _position$[ebp]
  00258	f3 0f 58 48 08	 addss	 xmm1, DWORD PTR [eax+8]
  0025d	f3 0f 11 4d f8	 movss	 DWORD PTR _new_position$[ebp+8], xmm1

; 528  : 
; 529  : 	set_local_entity_vec3d (receiver, VEC3D_TYPE_POSITION, &new_position);

  00262	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00266	74 0a		 je	 SHORT $LN11@response_t
  00268	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0026b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026d	89 4d 8c	 mov	 DWORD PTR tv195[ebp], ecx
  00270	eb 21		 jmp	 SHORT $LN12@response_t
$LN11@response_t:
  00272	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00278	83 c2 24	 add	 edx, 36			; 00000024H
  0027b	52		 push	 edx
  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00286	50		 push	 eax
  00287	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028c	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv195[ebp], 0
$LN12@response_t:
  00293	b9 01 00 00 00	 mov	 ecx, 1
  00298	85 c9		 test	 ecx, ecx
  0029a	74 09		 je	 SHORT $LN13@response_t
  0029c	c7 45 88 08 00
	00 00		 mov	 DWORD PTR tv203[ebp], 8
  002a3	eb 21		 jmp	 SHORT $LN14@response_t
$LN13@response_t:
  002a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002ab	83 c2 24	 add	 edx, 36			; 00000024H
  002ae	52		 push	 edx
  002af	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  002b9	50		 push	 eax
  002ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002bf	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv203[ebp], 0
$LN14@response_t:
  002c6	8d 4d f0	 lea	 ecx, DWORD PTR _new_position$[ebp]
  002c9	51		 push	 ecx
  002ca	6a 08		 push	 8
  002cc	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  002cf	52		 push	 edx
  002d0	6b 45 8c 60	 imul	 eax, DWORD PTR tv195[ebp], 96
  002d4	8b 4d 88	 mov	 ecx, DWORD PTR tv203[ebp]
  002d7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_vec3d@@3PAY0BI@P6GXPAUENTITY@@W4VEC3D_TYPES@@PAUVEC3D@@@ZA[eax+ecx*4]
  002de	ff d2		 call	 edx

; 530  : 
; 531  : 	set_local_entity_float_value (receiver, FLOAT_TYPE_HEADING, heading);

  002e0	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  002e4	74 0a		 je	 SHORT $LN15@response_t
  002e6	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  002e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002eb	89 4d 8c	 mov	 DWORD PTR tv215[ebp], ecx
  002ee	eb 21		 jmp	 SHORT $LN16@response_t
$LN15@response_t:
  002f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002f6	83 c2 26	 add	 edx, 38			; 00000026H
  002f9	52		 push	 edx
  002fa	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00304	50		 push	 eax
  00305	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0030a	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN16@response_t:
  00311	b9 01 00 00 00	 mov	 ecx, 1
  00316	85 c9		 test	 ecx, ecx
  00318	74 09		 je	 SHORT $LN17@response_t
  0031a	c7 45 88 34 00
	00 00		 mov	 DWORD PTR tv223[ebp], 52 ; 00000034H
  00321	eb 21		 jmp	 SHORT $LN18@response_t
$LN17@response_t:
  00323	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00329	83 c2 26	 add	 edx, 38			; 00000026H
  0032c	52		 push	 edx
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00332	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0033d	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv223[ebp], 0
$LN18@response_t:
  00344	51		 push	 ecx
  00345	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0034a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034f	6a 34		 push	 52			; 00000034H
  00351	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00354	51		 push	 ecx
  00355	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv215[ebp], 700
  0035c	8b 45 88	 mov	 eax, DWORD PTR tv223[ebp]
  0035f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00366	ff d1		 call	 ecx

; 532  : 
; 533  : 	set_local_entity_float_value (receiver, FLOAT_TYPE_VELOCITY, velocity);

  00368	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0036c	74 0a		 je	 SHORT $LN19@response_t
  0036e	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00371	8b 08		 mov	 ecx, DWORD PTR [eax]
  00373	89 4d 8c	 mov	 DWORD PTR tv235[ebp], ecx
  00376	eb 21		 jmp	 SHORT $LN20@response_t
$LN19@response_t:
  00378	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0037e	83 c2 28	 add	 edx, 40			; 00000028H
  00381	52		 push	 edx
  00382	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0038c	50		 push	 eax
  0038d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00392	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN20@response_t:
  00399	b9 01 00 00 00	 mov	 ecx, 1
  0039e	85 c9		 test	 ecx, ecx
  003a0	74 09		 je	 SHORT $LN21@response_t
  003a2	c7 45 88 93 00
	00 00		 mov	 DWORD PTR tv243[ebp], 147 ; 00000093H
  003a9	eb 21		 jmp	 SHORT $LN22@response_t
$LN21@response_t:
  003ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  003b1	83 c2 28	 add	 edx, 40			; 00000028H
  003b4	52		 push	 edx
  003b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c5	c7 45 88 00 00
	00 00		 mov	 DWORD PTR tv243[ebp], 0
$LN22@response_t:
  003cc	51		 push	 ecx
  003cd	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _velocity$[ebp]
  003d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d7	68 93 00 00 00	 push	 147			; 00000093H
  003dc	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  003df	51		 push	 ecx
  003e0	69 55 8c bc 02
	00 00		 imul	 edx, DWORD PTR tv235[ebp], 700
  003e7	8b 45 88	 mov	 eax, DWORD PTR tv243[ebp]
  003ea	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  003f1	ff d1		 call	 ecx

; 534  : 
; 535  : 	return (TRUE);

  003f3	b8 01 00 00 00	 mov	 eax, 1

; 536  : }

  003f8	5f		 pop	 edi
  003f9	5e		 pop	 esi
  003fa	5b		 pop	 ebx
  003fb	8b e5		 mov	 esp, ebp
  003fd	5d		 pop	 ebp
  003fe	c2 10 00	 ret	 16			; 00000010H
?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_set_entity_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv78 = -80						; size = 4
tv70 = -76						; size = 4
_sound_sample_index$ = -8				; size = 4
_inst3d$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_articulate_loading_doors, COMDAT

; 446  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 447  : 	object_3d_instance
; 448  : 		*inst3d;
; 449  : 
; 450  : 	sound_sample_indices
; 451  : 		sound_sample_index;
; 452  : 
; 453  : 	#if DEBUG_MODULE
; 454  : 
; 455  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 456  : 
; 457  : 	#endif
; 458  : 
; 459  : 	inst3d = (object_3d_instance *) get_local_entity_ptr_value (receiver, PTR_TYPE_INSTANCE_3D_OBJECT);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN5@response_t
  0000f	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b4	 mov	 DWORD PTR tv70[ebp], ecx
  00017	eb 21		 jmp	 SHORT $LN6@response_t
$LN5@response_t:
  00019	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  0001f	83 c2 0d	 add	 edx, 13			; 0000000dH
  00022	52		 push	 edx
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00033	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN6@response_t:
  0003a	b9 01 00 00 00	 mov	 ecx, 1
  0003f	85 c9		 test	 ecx, ecx
  00041	74 09		 je	 SHORT $LN7@response_t
  00043	c7 45 b0 02 00
	00 00		 mov	 DWORD PTR tv78[ebp], 2
  0004a	eb 21		 jmp	 SHORT $LN8@response_t
$LN7@response_t:
  0004c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00052	83 c2 0d	 add	 edx, 13			; 0000000dH
  00055	52		 push	 edx
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00066	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN8@response_t:
  0006d	6a 02		 push	 2
  0006f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00072	51		 push	 ecx
  00073	6b 55 b4 50	 imul	 edx, DWORD PTR tv70[ebp], 80
  00077	8b 45 b0	 mov	 eax, DWORD PTR tv78[ebp]
  0007a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  00081	ff d1		 call	 ecx
  00083	89 45 fc	 mov	 DWORD PTR _inst3d$[ebp], eax

; 460  : 
; 461  : 	if (inst3d)

  00086	83 7d fc 00	 cmp	 DWORD PTR _inst3d$[ebp], 0
  0008a	74 53		 je	 SHORT $LN3@response_t

; 462  : 	{
; 463  : 		if (object_contains_sub_object_type (inst3d, OBJECT_3D_SUB_OBJECT_LOADING_DOOR, 0, NULL))

  0008c	6a 00		 push	 0
  0008e	6a 00		 push	 0
  00090	6a 31		 push	 49			; 00000031H
  00092	8b 45 fc	 mov	 eax, DWORD PTR _inst3d$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?object_contains_sub_object_type@@YGHPAUOBJECT_3D_INSTANCE@@HHPAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; object_contains_sub_object_type
  0009b	85 c0		 test	 eax, eax
  0009d	74 40		 je	 SHORT $LN3@response_t

; 464  : 		{
; 465  : 			sound_sample_index = SOUND_SAMPLE_INDEX_HELICOPTER_DOORS;

  0009f	c7 45 f8 3f 00
	00 00		 mov	 DWORD PTR _sound_sample_index$[ebp], 63 ; 0000003fH

; 466  : 
; 467  : 			create_client_server_sound_effect_entity

  000a6	8d 45 f8	 lea	 eax, DWORD PTR _sound_sample_index$[ebp]
  000a9	50		 push	 eax
  000aa	6a 01		 push	 1
  000ac	6a 00		 push	 0
  000ae	6a 01		 push	 1
  000b0	51		 push	 ecx
  000b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	51		 push	 ecx
  000bf	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000cc	6a 00		 push	 0
  000ce	6a 00		 push	 0
  000d0	6a 00		 push	 0
  000d2	6a 1a		 push	 26			; 0000001aH
  000d4	6a 00		 push	 0
  000d6	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  000d9	51		 push	 ecx
  000da	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN3@response_t:

; 468  : 			(
; 469  : 				receiver,
; 470  : 				ENTITY_SIDE_NEUTRAL,
; 471  : 				ENTITY_SUB_TYPE_EFFECT_SOUND_MISC,
; 472  : 				SOUND_CHANNEL_SOUND_EFFECT,
; 473  : 				SOUND_LOCALITY_ALL,
; 474  : 				NULL,												// position
; 475  : 				1.0,												// amplification
; 476  : 				1.0,												// Werewolf pitch
; 477  : 				TRUE,												// valid sound effect
; 478  : 				FALSE,											// looping
; 479  : 				1,													// sample count
; 480  : 				&sound_sample_index							// sample index list
; 481  : 			);
; 482  : 		}
; 483  : 	}
; 484  : 
; 485  : 	return (TRUE);

  000df	b8 01 00 00 00	 mov	 eax, 1

; 486  : }

  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5b		 pop	 ebx
  000e7	8b e5		 mov	 esp, ebp
  000e9	5d		 pop	 ebp
  000ea	c2 10 00	 ret	 16			; 00000010H
?response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_articulate_loading_doors
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv436 = -108						; size = 4
tv203 = -108						; size = 4
tv453 = -104						; size = 4
tv430 = -104						; size = 4
tv396 = -104						; size = 4
tv375 = -104						; size = 4
tv317 = -104						; size = 4
tv296 = -104						; size = 4
tv270 = -104						; size = 4
tv251 = -104						; size = 4
tv225 = -104						; size = 4
tv196 = -104						; size = 4
tv174 = -104						; size = 4
tv152 = -104						; size = 4
tv133 = -104						; size = 4
tv445 = -100						; size = 4
tv423 = -100						; size = 4
tv389 = -100						; size = 4
tv368 = -100						; size = 4
tv345 = -100						; size = 4
tv333 = -100						; size = 4
tv310 = -100						; size = 4
tv289 = -100						; size = 4
tv263 = -100						; size = 4
tv244 = -100						; size = 4
tv217 = -100						; size = 4
tv188 = -100						; size = 4
tv166 = -100						; size = 4
tv145 = -100						; size = 4
tv93 = -100						; size = 4
tv85 = -100						; size = 4
_damage_modifier$ = -32					; size = 4
_new_damage_state$ = -28				; size = 4
_old_damage_state$ = -24				; size = 4
_total_damage_level$ = -20				; size = 4
_damage_caused$ = -16					; size = 4
_aggressor$ = -12					; size = 4
_enemy_force$ = -8					; size = 4
_force$ = -4						; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_collision, COMDAT

; 170  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 171  : 
; 172  : 	entity
; 173  : 		*force,
; 174  : 		*enemy_force,
; 175  : 		*aggressor;
; 176  : 
; 177  : 	int
; 178  : 		damage_caused,
; 179  : 		total_damage_level;
; 180  : 
; 181  : 	aircraft_damage_types
; 182  : 		old_damage_state,
; 183  : 		new_damage_state;
; 184  : 
; 185  : 	float
; 186  : 		damage_modifier;
; 187  : 
; 188  : 	ASSERT (receiver);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@response_t
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00014	83 c0 12	 add	 eax, 18			; 00000012H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_08DEKMJOIP@receiver@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@response_t:

; 189  : 
; 190  : 	damage_modifier = va_arg (pargs, double);

  00027	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0002a	83 c0 08	 add	 eax, 8
  0002d	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00030	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00033	f2 0f 5a 41 f8	 cvtsd2ss xmm0, QWORD PTR [ecx-8]
  00038	f3 0f 11 45 e0	 movss	 DWORD PTR _damage_modifier$[ebp], xmm0

; 191  : 	
; 192  : 	ASSERT(damage_modifier >= 0 && damage_modifier <= 1.0);

  0003d	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _damage_modifier$[ebp]
  00042	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00049	72 13		 jb	 SHORT $LN6@response_t
  0004b	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _damage_modifier$[ebp]
  00050	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00058	66 0f 2f c8	 comisd	 xmm1, xmm0
  0005c	73 18		 jae	 SHORT $LN5@response_t
$LN6@response_t:
  0005e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00063	83 c0 16	 add	 eax, 22			; 00000016H
  00066	50		 push	 eax
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0006c	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@PJAOKJEC@damage_modifier?5?$DO?$DN?50?5?$CG?$CG?5damage_@
  00071	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@response_t:

; 193  : 
; 194  : 	#if DEBUG_MODULE
; 195  : 
; 196  : 	// IMPORTANT: this muct come after we read va_arg, or it will clobber it!
; 197  : 	debug_log_entity_message (message, receiver, sender, pargs);
; 198  : 
; 199  : 	#endif
; 200  : 
; 201  : 	if (sender)

  00076	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  0007a	0f 84 c1 00 00
	00		 je	 $LN7@response_t

; 202  : 	{
; 203  : 		if (get_local_entity_type (sender) == ENTITY_TYPE_WEAPON)

  00080	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00084	74 0a		 je	 SHORT $LN37@response_t
  00086	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00089	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008b	89 4d 9c	 mov	 DWORD PTR tv85[ebp], ecx
  0008e	eb 1d		 jmp	 SHORT $LN38@response_t
$LN37@response_t:
  00090	68 cb 00 00 00	 push	 203			; 000000cbH
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a6	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN38@response_t:
  000ad	83 7d 9c 25	 cmp	 DWORD PTR tv85[ebp], 37	; 00000025H
  000b1	0f 85 82 00 00
	00		 jne	 $LN9@response_t

; 204  : 		{
; 205  : 			aggressor = get_local_entity_parent (sender, LIST_TYPE_LAUNCHED_WEAPON);

  000b7	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  000bb	74 0a		 je	 SHORT $LN39@response_t
  000bd	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	89 4d 9c	 mov	 DWORD PTR tv93[ebp], ecx
  000c5	eb 21		 jmp	 SHORT $LN40@response_t
$LN39@response_t:
  000c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  000cd	83 c2 23	 add	 edx, 35			; 00000023H
  000d0	52		 push	 edx
  000d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  000d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000db	50		 push	 eax
  000dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e1	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv93[ebp], 0
$LN40@response_t:
  000e8	b9 01 00 00 00	 mov	 ecx, 1
  000ed	85 c9		 test	 ecx, ecx
  000ef	74 09		 je	 SHORT $LN41@response_t
  000f1	c7 45 98 18 00
	00 00		 mov	 DWORD PTR tv133[ebp], 24 ; 00000018H
  000f8	eb 21		 jmp	 SHORT $LN42@response_t
$LN41@response_t:
  000fa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00100	83 c2 23	 add	 edx, 35			; 00000023H
  00103	52		 push	 edx
  00104	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00109	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00114	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN42@response_t:
  0011b	6a 18		 push	 24			; 00000018H
  0011d	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00120	51		 push	 ecx
  00121	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv93[ebp], 180
  00128	8b 45 98	 mov	 eax, DWORD PTR tv133[ebp]
  0012b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00132	ff d1		 call	 ecx
  00134	89 45 f4	 mov	 DWORD PTR _aggressor$[ebp], eax

; 206  : 		}
; 207  : 		else

  00137	eb 06		 jmp	 SHORT $LN10@response_t
$LN9@response_t:

; 208  : 		{
; 209  : 			aggressor = sender;

  00139	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0013c	89 45 f4	 mov	 DWORD PTR _aggressor$[ebp], eax
$LN10@response_t:

; 210  : 		}
; 211  : 	}
; 212  : 	else

  0013f	eb 07		 jmp	 SHORT $LN8@response_t
$LN7@response_t:

; 213  : 	{
; 214  : 		aggressor = NULL;

  00141	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _aggressor$[ebp], 0
$LN8@response_t:

; 215  : 	}
; 216  : 
; 217  : 	//
; 218  : 	// Fix to stop helicopters from killing themselves through firing missiles into the ground...
; 219  : 	//
; 220  : 
; 221  : 	if ((aggressor == receiver) && (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI))

  00148	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0014b	3b 45 0c	 cmp	 eax, DWORD PTR _receiver$[ebp]
  0014e	0f 85 86 00 00
	00		 jne	 $LN11@response_t
  00154	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00158	74 0a		 je	 SHORT $LN43@response_t
  0015a	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0015d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015f	89 4d 9c	 mov	 DWORD PTR tv145[ebp], ecx
  00162	eb 1d		 jmp	 SHORT $LN44@response_t
$LN43@response_t:
  00164	68 dd 00 00 00	 push	 221			; 000000ddH
  00169	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00174	52		 push	 edx
  00175	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0017a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN44@response_t:
  00181	b8 01 00 00 00	 mov	 eax, 1
  00186	85 c0		 test	 eax, eax
  00188	74 09		 je	 SHORT $LN45@response_t
  0018a	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv152[ebp], 156 ; 0000009cH
  00191	eb 1d		 jmp	 SHORT $LN46@response_t
$LN45@response_t:
  00193	68 dd 00 00 00	 push	 221			; 000000ddH
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a3	51		 push	 ecx
  001a4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a9	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN46@response_t:
  001b0	68 9c 00 00 00	 push	 156			; 0000009cH
  001b5	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  001b8	52		 push	 edx
  001b9	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv145[ebp], 1116
  001c0	8b 4d 98	 mov	 ecx, DWORD PTR tv152[ebp]
  001c3	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001ca	ff d2		 call	 edx
  001cc	85 c0		 test	 eax, eax
  001ce	75 0a		 jne	 SHORT $LN11@response_t

; 222  : 	{
; 223  : 		return TRUE;

  001d0	b8 01 00 00 00	 mov	 eax, 1
  001d5	e9 d9 07 00 00	 jmp	 $LN1@response_t
$LN11@response_t:

; 224  : 	}
; 225  : 
; 226  : 	//
; 227  : 	//
; 228  : 	//
; 229  : 
; 230  : 	force = get_local_force_entity ((entity_sides) get_local_entity_int_value (receiver, INT_TYPE_SIDE));

  001da	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  001de	74 0a		 je	 SHORT $LN47@response_t
  001e0	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  001e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e5	89 4d 9c	 mov	 DWORD PTR tv166[ebp], ecx
  001e8	eb 21		 jmp	 SHORT $LN48@response_t
$LN47@response_t:
  001ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  001f0	83 c2 3c	 add	 edx, 60			; 0000003cH
  001f3	52		 push	 edx
  001f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00204	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN48@response_t:
  0020b	b9 01 00 00 00	 mov	 ecx, 1
  00210	85 c9		 test	 ecx, ecx
  00212	74 09		 je	 SHORT $LN49@response_t
  00214	c7 45 98 bb 00
	00 00		 mov	 DWORD PTR tv174[ebp], 187 ; 000000bbH
  0021b	eb 21		 jmp	 SHORT $LN50@response_t
$LN49@response_t:
  0021d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00223	83 c2 3c	 add	 edx, 60			; 0000003cH
  00226	52		 push	 edx
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00231	50		 push	 eax
  00232	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00237	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN50@response_t:
  0023e	68 bb 00 00 00	 push	 187			; 000000bbH
  00243	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00246	51		 push	 ecx
  00247	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv166[ebp], 1116
  0024e	8b 45 98	 mov	 eax, DWORD PTR tv174[ebp]
  00251	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00258	ff d1		 call	 ecx
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00260	89 45 fc	 mov	 DWORD PTR _force$[ebp], eax

; 231  : 
; 232  : 	enemy_force = get_local_force_entity (get_enemy_side (get_local_entity_int_value (receiver, INT_TYPE_SIDE)));

  00263	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00267	74 0a		 je	 SHORT $LN51@response_t
  00269	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0026c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0026e	89 4d 9c	 mov	 DWORD PTR tv188[ebp], ecx
  00271	eb 21		 jmp	 SHORT $LN52@response_t
$LN51@response_t:
  00273	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00279	83 c2 3e	 add	 edx, 62			; 0000003eH
  0027c	52		 push	 edx
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0028d	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN52@response_t:
  00294	b9 01 00 00 00	 mov	 ecx, 1
  00299	85 c9		 test	 ecx, ecx
  0029b	74 09		 je	 SHORT $LN53@response_t
  0029d	c7 45 98 bb 00
	00 00		 mov	 DWORD PTR tv196[ebp], 187 ; 000000bbH
  002a4	eb 21		 jmp	 SHORT $LN54@response_t
$LN53@response_t:
  002a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  002ac	83 c2 3e	 add	 edx, 62			; 0000003eH
  002af	52		 push	 edx
  002b0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002ba	50		 push	 eax
  002bb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002c0	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN54@response_t:
  002c7	68 bb 00 00 00	 push	 187			; 000000bbH
  002cc	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  002cf	51		 push	 ecx
  002d0	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv188[ebp], 1116
  002d7	8b 45 98	 mov	 eax, DWORD PTR tv196[ebp]
  002da	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002e1	ff d1		 call	 ecx
  002e3	83 f8 01	 cmp	 eax, 1
  002e6	75 09		 jne	 SHORT $LN55@response_t
  002e8	c7 45 94 02 00
	00 00		 mov	 DWORD PTR tv203[ebp], 2
  002ef	eb 07		 jmp	 SHORT $LN56@response_t
$LN55@response_t:
  002f1	c7 45 94 01 00
	00 00		 mov	 DWORD PTR tv203[ebp], 1
$LN56@response_t:
  002f8	8b 55 94	 mov	 edx, DWORD PTR tv203[ebp]
  002fb	52		 push	 edx
  002fc	e8 00 00 00 00	 call	 ?get_local_force_entity@@YGPAUENTITY@@W4ENTITY_SIDES@@@Z ; get_local_force_entity
  00301	89 45 f8	 mov	 DWORD PTR _enemy_force$[ebp], eax

; 233  : 
; 234  : 	//
; 235  : 	// assess damage
; 236  : 	//
; 237  : 
; 238  : 	old_damage_state = aircraft_critically_damaged (receiver);

  00304	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  0030d	89 45 e8	 mov	 DWORD PTR _old_damage_state$[ebp], eax

; 239  : 
; 240  : 	damage_caused = damage_client_server_entity (receiver, sender, damage_modifier);

  00310	51		 push	 ecx
  00311	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _damage_modifier$[ebp]
  00316	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031b	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0031e	50		 push	 eax
  0031f	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00322	51		 push	 ecx
  00323	e8 00 00 00 00	 call	 ?damage_client_server_entity@@YGHPAUENTITY@@0M@Z ; damage_client_server_entity
  00328	89 45 f0	 mov	 DWORD PTR _damage_caused$[ebp], eax

; 241  : 
; 242  : 	total_damage_level = get_local_entity_int_value (receiver, INT_TYPE_DAMAGE_LEVEL);

  0032b	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0032f	74 0a		 je	 SHORT $LN57@response_t
  00331	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00334	8b 08		 mov	 ecx, DWORD PTR [eax]
  00336	89 4d 9c	 mov	 DWORD PTR tv217[ebp], ecx
  00339	eb 21		 jmp	 SHORT $LN58@response_t
$LN57@response_t:
  0033b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00341	83 c2 48	 add	 edx, 72			; 00000048H
  00344	52		 push	 edx
  00345	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0034f	50		 push	 eax
  00350	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00355	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv217[ebp], 0
$LN58@response_t:
  0035c	b9 01 00 00 00	 mov	 ecx, 1
  00361	85 c9		 test	 ecx, ecx
  00363	74 09		 je	 SHORT $LN59@response_t
  00365	c7 45 98 25 00
	00 00		 mov	 DWORD PTR tv225[ebp], 37 ; 00000025H
  0036c	eb 21		 jmp	 SHORT $LN60@response_t
$LN59@response_t:
  0036e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00374	83 c2 48	 add	 edx, 72			; 00000048H
  00377	52		 push	 edx
  00378	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00382	50		 push	 eax
  00383	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00388	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv225[ebp], 0
$LN60@response_t:
  0038f	6a 25		 push	 37			; 00000025H
  00391	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00394	51		 push	 ecx
  00395	69 55 9c 5c 04
	00 00		 imul	 edx, DWORD PTR tv217[ebp], 1116
  0039c	8b 45 98	 mov	 eax, DWORD PTR tv225[ebp]
  0039f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003a6	ff d1		 call	 ecx
  003a8	89 45 ec	 mov	 DWORD PTR _total_damage_level$[ebp], eax

; 243  : 
; 244  : 	new_damage_state = aircraft_critically_damaged (receiver);

  003ab	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003ae	50		 push	 eax
  003af	e8 00 00 00 00	 call	 ?aircraft_critically_damaged@@YG?AW4aircraft_damage_types@@PAUENTITY@@@Z ; aircraft_critically_damaged
  003b4	89 45 e4	 mov	 DWORD PTR _new_damage_state$[ebp], eax

; 245  : 
; 246  : 	if ((old_damage_state != AIRCRAFT_DAMAGE_CRITICAL) && (new_damage_state == AIRCRAFT_DAMAGE_CRITICAL))

  003b7	83 7d e8 02	 cmp	 DWORD PTR _old_damage_state$[ebp], 2
  003bb	0f 84 29 01 00
	00		 je	 $LN16@response_t
  003c1	83 7d e4 02	 cmp	 DWORD PTR _new_damage_state$[ebp], 2
  003c5	0f 85 1f 01 00
	00		 jne	 $LN16@response_t

; 247  : 	{
; 248  : 		if (aggressor)

  003cb	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  003cf	74 0d		 je	 SHORT $LN13@response_t

; 249  : 		{
; 250  : 			//
; 251  : 			// credit kill
; 252  : 			//
; 253  : 		
; 254  : 			credit_client_server_mobile_kill (receiver, aggressor);

  003d1	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  003d4	50		 push	 eax
  003d5	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  003d8	51		 push	 ecx
  003d9	e8 00 00 00 00	 call	 ?credit_client_server_mobile_kill@@YGXPAUENTITY@@0@Z ; credit_client_server_mobile_kill
$LN13@response_t:

; 255  : /*	
; 256  : 			//
; 257  : 			// multiplayer pilot kills
; 258  : 			//
; 259  : 	
; 260  : 			if (receiver != aggressor)
; 261  : 			{
; 262  : 				if (
; 263  : 						(get_local_entity_int_value (receiver, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI) &&
; 264  : 						(get_local_entity_int_value (aggressor, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)
; 265  : 					)
; 266  : 				{
; 267  : 					entity
; 268  : 						*pilot_en;
; 269  : 	
; 270  : 					int
; 271  : 						score;
; 272  : 	
; 273  : 					pilot_en = get_local_entity_first_child (aggressor, LIST_TYPE_AIRCREW);
; 274  : 	
; 275  : 					while (pilot_en)
; 276  : 					{
; 277  : 						score = get_local_entity_int_value (pilot_en, INT_TYPE_KILLS);	
; 278  : 	
; 279  : 						if ((get_global_session_special_gametype() == SPECIAL_GAME_TYPE_COOPERATIVE) &&
; 280  : 								(get_local_entity_int_value (receiver, INT_TYPE_SIDE) == get_local_entity_int_value (aggressor, INT_TYPE_SIDE)))
; 281  : 						{
; 282  : 							score -= 1;
; 283  : 						}
; 284  : 						else
; 285  : 						{
; 286  : 							score += 1;
; 287  : 	
; 288  : 							notify_local_entity (ENTITY_MESSAGE_FORCE_SPECIAL_KILL, enemy_force, receiver, score);
; 289  : 						}
; 290  : 	
; 291  : 						set_client_server_entity_int_value (pilot_en, INT_TYPE_KILLS, score);
; 292  : 	
; 293  : 						pilot_en = get_local_entity_child_succ (pilot_en, LIST_TYPE_AIRCREW);
; 294  : 					}
; 295  : 				}
; 296  : 			}
; 297  : */
; 298  : 		}
; 299  : 		
; 300  : 		if (total_damage_level > 0)

  003de	83 7d ec 00	 cmp	 DWORD PTR _total_damage_level$[ebp], 0
  003e2	0f 8e 02 01 00
	00		 jle	 $LN16@response_t

; 301  : 		{
; 302  : 			//
; 303  : 			// Eject Pilot(s)
; 304  : 			//
; 305  : 
; 306  : 			if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  003e8	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  003ec	74 0a		 je	 SHORT $LN61@response_t
  003ee	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  003f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f3	89 4d 9c	 mov	 DWORD PTR tv244[ebp], ecx
  003f6	eb 1d		 jmp	 SHORT $LN62@response_t
$LN61@response_t:
  003f8	68 32 01 00 00	 push	 306			; 00000132H
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00402	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00408	52		 push	 edx
  00409	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv244[ebp], 0
$LN62@response_t:
  00415	b8 01 00 00 00	 mov	 eax, 1
  0041a	85 c0		 test	 eax, eax
  0041c	74 09		 je	 SHORT $LN63@response_t
  0041e	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv251[ebp], 156 ; 0000009cH
  00425	eb 1d		 jmp	 SHORT $LN64@response_t
$LN63@response_t:
  00427	68 32 01 00 00	 push	 306			; 00000132H
  0042c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00431	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00437	51		 push	 ecx
  00438	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043d	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv251[ebp], 0
$LN64@response_t:
  00444	68 9c 00 00 00	 push	 156			; 0000009cH
  00449	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  0044c	52		 push	 edx
  0044d	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv244[ebp], 1116
  00454	8b 4d 98	 mov	 ecx, DWORD PTR tv251[ebp]
  00457	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0045e	ff d2		 call	 edx
  00460	85 c0		 test	 eax, eax
  00462	0f 85 82 00 00
	00		 jne	 $LN16@response_t

; 307  : 			{
; 308  : 				if (get_local_entity_int_value (receiver, INT_TYPE_AIRBORNE_AIRCRAFT))

  00468	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0046c	74 0a		 je	 SHORT $LN65@response_t
  0046e	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00471	8b 08		 mov	 ecx, DWORD PTR [eax]
  00473	89 4d 9c	 mov	 DWORD PTR tv263[ebp], ecx
  00476	eb 1d		 jmp	 SHORT $LN66@response_t
$LN65@response_t:
  00478	68 34 01 00 00	 push	 308			; 00000134H
  0047d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00482	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00488	52		 push	 edx
  00489	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0048e	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv263[ebp], 0
$LN66@response_t:
  00495	b8 01 00 00 00	 mov	 eax, 1
  0049a	85 c0		 test	 eax, eax
  0049c	74 09		 je	 SHORT $LN67@response_t
  0049e	c7 45 98 04 00
	00 00		 mov	 DWORD PTR tv270[ebp], 4
  004a5	eb 1d		 jmp	 SHORT $LN68@response_t
$LN67@response_t:
  004a7	68 34 01 00 00	 push	 308			; 00000134H
  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  004b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004b7	51		 push	 ecx
  004b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004bd	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv270[ebp], 0
$LN68@response_t:
  004c4	6a 04		 push	 4
  004c6	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  004c9	52		 push	 edx
  004ca	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv263[ebp], 1116
  004d1	8b 4d 98	 mov	 ecx, DWORD PTR tv270[ebp]
  004d4	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004db	ff d2		 call	 edx
  004dd	85 c0		 test	 eax, eax
  004df	74 09		 je	 SHORT $LN16@response_t

; 309  : 				{
; 310  : 					initiate_aircraft_crew_ejection (receiver);

  004e1	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?initiate_aircraft_crew_ejection@@YGXPAUENTITY@@@Z ; initiate_aircraft_crew_ejection
$LN16@response_t:

; 311  : 				}
; 312  : 			}
; 313  : 		}
; 314  : 	}
; 315  : 
; 316  : 	/////////////////////////////////////////////////////////////////
; 317  : 	//
; 318  : 	// Assess damage caused
; 319  : 	//
; 320  : 	/////////////////////////////////////////////////////////////////
; 321  : 
; 322  : 	if (total_damage_level <= 0)

  004ea	83 7d ec 00	 cmp	 DWORD PTR _total_damage_level$[ebp], 0
  004ee	0f 8f 1f 02 00
	00		 jg	 $LN17@response_t

; 323  : 	{
; 324  : 		ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  004f4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  004fb	74 1a		 je	 SHORT $LN19@response_t
  004fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00502	05 9a 00 00 00	 add	 eax, 154		; 0000009aH
  00507	50		 push	 eax
  00508	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0050d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00512	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN19@response_t:

; 325  : 
; 326  : 		//
; 327  : 		// if the player was shot down, record it in the log
; 328  : 		//
; 329  : 
; 330  : 		if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_LOCAL)

  00517	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0051b	74 0a		 je	 SHORT $LN69@response_t
  0051d	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00520	8b 08		 mov	 ecx, DWORD PTR [eax]
  00522	89 4d 9c	 mov	 DWORD PTR tv289[ebp], ecx
  00525	eb 1d		 jmp	 SHORT $LN70@response_t
$LN69@response_t:
  00527	68 4a 01 00 00	 push	 330			; 0000014aH
  0052c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00531	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00537	52		 push	 edx
  00538	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0053d	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv289[ebp], 0
$LN70@response_t:
  00544	b8 01 00 00 00	 mov	 eax, 1
  00549	85 c0		 test	 eax, eax
  0054b	74 09		 je	 SHORT $LN71@response_t
  0054d	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv296[ebp], 156 ; 0000009cH
  00554	eb 1d		 jmp	 SHORT $LN72@response_t
$LN71@response_t:
  00556	68 4a 01 00 00	 push	 330			; 0000014aH
  0055b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00560	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00566	51		 push	 ecx
  00567	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0056c	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv296[ebp], 0
$LN72@response_t:
  00573	68 9c 00 00 00	 push	 156			; 0000009cH
  00578	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  0057b	52		 push	 edx
  0057c	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv289[ebp], 1116
  00583	8b 4d 98	 mov	 ecx, DWORD PTR tv296[ebp]
  00586	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0058d	ff d2		 call	 edx
  0058f	83 f8 01	 cmp	 eax, 1
  00592	75 10		 jne	 SHORT $LN20@response_t

; 331  : 		{
; 332  : 			// deaths moved to landing assessment - player dies upon hitting the ground with enough force
; 333  : //			inc_player_log_kills (get_global_gunship_side (), get_current_player_log (), receiver);
; 334  : 
; 335  : 			dynamics_kill_model (DYNAMICS_DESTROY_SHOT_DOWN, aggressor);

  00594	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00597	50		 push	 eax
  00598	6a 00		 push	 0
  0059a	e8 00 00 00 00	 call	 ?dynamics_kill_model@@YGXW4DYNAMICS_DESTROY_TYPES@@PAUENTITY@@@Z ; dynamics_kill_model
  0059f	e9 2b 01 00 00	 jmp	 $LN23@response_t
$LN20@response_t:

; 336  : 		}
; 337  : 		else if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) == ENTITY_PLAYER_REMOTE)

  005a4	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  005a8	74 0a		 je	 SHORT $LN73@response_t
  005aa	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  005ad	8b 08		 mov	 ecx, DWORD PTR [eax]
  005af	89 4d 9c	 mov	 DWORD PTR tv310[ebp], ecx
  005b2	eb 1d		 jmp	 SHORT $LN74@response_t
$LN73@response_t:
  005b4	68 51 01 00 00	 push	 337			; 00000151H
  005b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  005be	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005c4	52		 push	 edx
  005c5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005ca	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv310[ebp], 0
$LN74@response_t:
  005d1	b8 01 00 00 00	 mov	 eax, 1
  005d6	85 c0		 test	 eax, eax
  005d8	74 09		 je	 SHORT $LN75@response_t
  005da	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv317[ebp], 156 ; 0000009cH
  005e1	eb 1d		 jmp	 SHORT $LN76@response_t
$LN75@response_t:
  005e3	68 51 01 00 00	 push	 337			; 00000151H
  005e8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  005ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  005f3	51		 push	 ecx
  005f4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005f9	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv317[ebp], 0
$LN76@response_t:
  00600	68 9c 00 00 00	 push	 156			; 0000009cH
  00605	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00608	52		 push	 edx
  00609	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv310[ebp], 1116
  00610	8b 4d 98	 mov	 ecx, DWORD PTR tv317[ebp]
  00613	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0061a	ff d2		 call	 edx
  0061c	83 f8 02	 cmp	 eax, 2
  0061f	75 61		 jne	 SHORT $LN22@response_t

; 338  : 		{
; 339  : 			transmit_entity_comms_message (ENTITY_COMMS_PLAYER_KILL, aggressor, receiver);

  00621	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00624	50		 push	 eax
  00625	8b 4d f4	 mov	 ecx, DWORD PTR _aggressor$[ebp]
  00628	51		 push	 ecx
  00629	6a 25		 push	 37			; 00000025H
  0062b	e8 00 00 00 00	 call	 ?transmit_entity_comms_message@@YAXW4ENTITY_COMMS_MESSAGES@@PAUENTITY@@ZZ ; transmit_entity_comms_message
  00630	83 c4 0c	 add	 esp, 12			; 0000000cH

; 340  : 
; 341  : 			kill_client_server_entity (receiver);

  00633	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00637	74 0a		 je	 SHORT $LN77@response_t
  00639	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0063c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0063e	89 4d 9c	 mov	 DWORD PTR tv333[ebp], ecx
  00641	eb 24		 jmp	 SHORT $LN78@response_t
$LN77@response_t:
  00643	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00649	81 c2 ab 00 00
	00		 add	 edx, 171		; 000000abH
  0064f	52		 push	 edx
  00650	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00655	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0065a	50		 push	 eax
  0065b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00660	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv333[ebp], 0
$LN78@response_t:
  00667	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0066a	51		 push	 ecx
  0066b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00671	c1 e2 02	 shl	 edx, 2
  00674	8b 45 9c	 mov	 eax, DWORD PTR tv333[ebp]
  00677	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0067e	ff d1		 call	 ecx

; 342  : 		}
; 343  : 		else

  00680	eb 4d		 jmp	 SHORT $LN23@response_t
$LN22@response_t:

; 344  : 		{
; 345  : 
; 346  : 			kill_client_server_entity (receiver);

  00682	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00686	74 0a		 je	 SHORT $LN79@response_t
  00688	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0068b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0068d	89 4d 9c	 mov	 DWORD PTR tv345[ebp], ecx
  00690	eb 24		 jmp	 SHORT $LN80@response_t
$LN79@response_t:
  00692	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00698	81 c2 b0 00 00
	00		 add	 edx, 176		; 000000b0H
  0069e	52		 push	 edx
  0069f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006a9	50		 push	 eax
  006aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006af	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv345[ebp], 0
$LN80@response_t:
  006b6	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  006b9	51		 push	 ecx
  006ba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  006c0	c1 e2 02	 shl	 edx, 2
  006c3	8b 45 9c	 mov	 eax, DWORD PTR tv345[ebp]
  006c6	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  006cd	ff d1		 call	 ecx
$LN23@response_t:

; 347  : 		}
; 348  : 
; 349  : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, force, receiver, aggressor); // should these be before kill ?

  006cf	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  006d2	50		 push	 eax
  006d3	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  006d6	51		 push	 ecx
  006d7	8b 55 fc	 mov	 edx, DWORD PTR _force$[ebp]
  006da	52		 push	 edx
  006db	6a 15		 push	 21			; 00000015H
  006dd	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  006e2	83 c4 10	 add	 esp, 16			; 00000010H

; 350  : 
; 351  : 		notify_local_entity (ENTITY_MESSAGE_FORCE_DESTROYED, enemy_force, receiver, aggressor);

  006e5	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  006e8	50		 push	 eax
  006e9	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  006ec	51		 push	 ecx
  006ed	8b 55 f8	 mov	 edx, DWORD PTR _enemy_force$[ebp]
  006f0	52		 push	 edx
  006f1	6a 15		 push	 21			; 00000015H
  006f3	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  006f8	83 c4 10	 add	 esp, 16			; 00000010H

; 352  : 
; 353  : 		//
; 354  : 		// Play appropriate sound effects / speech
; 355  : 		//
; 356  : 
; 357  : 		if (aggressor)

  006fb	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  006ff	74 0d		 je	 SHORT $LN24@response_t

; 358  : 		{
; 359  : 			play_aircraft_destroyed_speech (receiver, aggressor);

  00701	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  00704	50		 push	 eax
  00705	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  00708	51		 push	 ecx
  00709	e8 00 00 00 00	 call	 ?play_aircraft_destroyed_speech@@YGXPAUENTITY@@0@Z ; play_aircraft_destroyed_speech
$LN24@response_t:

; 360  : 		}
; 361  : 	}
; 362  : 	else

  0070e	e9 71 01 00 00	 jmp	 $LN32@response_t
$LN17@response_t:

; 363  : 	{
; 364  : 		if (damage_caused > 0)

  00713	83 7d f0 00	 cmp	 DWORD PTR _damage_caused$[ebp], 0
  00717	0f 8e 54 01 00
	00		 jle	 $LN31@response_t

; 365  : 		{
; 366  : 			if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  0071d	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  00721	74 0a		 je	 SHORT $LN81@response_t
  00723	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00726	8b 08		 mov	 ecx, DWORD PTR [eax]
  00728	89 4d 9c	 mov	 DWORD PTR tv368[ebp], ecx
  0072b	eb 1d		 jmp	 SHORT $LN82@response_t
$LN81@response_t:
  0072d	68 6e 01 00 00	 push	 366			; 0000016eH
  00732	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00737	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0073d	52		 push	 edx
  0073e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00743	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv368[ebp], 0
$LN82@response_t:
  0074a	b8 01 00 00 00	 mov	 eax, 1
  0074f	85 c0		 test	 eax, eax
  00751	74 09		 je	 SHORT $LN83@response_t
  00753	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv375[ebp], 156 ; 0000009cH
  0075a	eb 1d		 jmp	 SHORT $LN84@response_t
$LN83@response_t:
  0075c	68 6e 01 00 00	 push	 366			; 0000016eH
  00761	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00766	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0076c	51		 push	 ecx
  0076d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00772	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv375[ebp], 0
$LN84@response_t:
  00779	68 9c 00 00 00	 push	 156			; 0000009cH
  0077e	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  00781	52		 push	 edx
  00782	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv368[ebp], 1116
  00789	8b 4d 98	 mov	 ecx, DWORD PTR tv375[ebp]
  0078c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00793	ff d2		 call	 edx
  00795	85 c0		 test	 eax, eax
  00797	0f 84 d4 00 00
	00		 je	 $LN31@response_t

; 367  : 			{
; 368  : 				//
; 369  : 				// Damage users helicopter
; 370  : 				//
; 371  : 
; 372  : 				damage_helicopter_via_damage_level (receiver, aggressor);

  0079d	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  007a0	50		 push	 eax
  007a1	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  007a4	51		 push	 ecx
  007a5	e8 00 00 00 00	 call	 ?damage_helicopter_via_damage_level@@YGXPAUENTITY@@0@Z ; damage_helicopter_via_damage_level

; 373  : 
; 374  : 				//
; 375  : 				// damage avionics
; 376  : 				//
; 377  : 
; 378  : 				if (get_local_entity_int_value (receiver, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)	

  007aa	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  007ae	74 0a		 je	 SHORT $LN85@response_t
  007b0	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  007b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  007b5	89 4d 9c	 mov	 DWORD PTR tv389[ebp], ecx
  007b8	eb 1d		 jmp	 SHORT $LN86@response_t
$LN85@response_t:
  007ba	68 7a 01 00 00	 push	 378			; 0000017aH
  007bf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007ca	52		 push	 edx
  007cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007d0	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv389[ebp], 0
$LN86@response_t:
  007d7	b8 01 00 00 00	 mov	 eax, 1
  007dc	85 c0		 test	 eax, eax
  007de	74 09		 je	 SHORT $LN87@response_t
  007e0	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv396[ebp], 156 ; 0000009cH
  007e7	eb 1d		 jmp	 SHORT $LN88@response_t
$LN87@response_t:
  007e9	68 7a 01 00 00	 push	 378			; 0000017aH
  007ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  007f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007f9	51		 push	 ecx
  007fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007ff	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv396[ebp], 0
$LN88@response_t:
  00806	68 9c 00 00 00	 push	 156			; 0000009cH
  0080b	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  0080e	52		 push	 edx
  0080f	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv389[ebp], 1116
  00816	8b 4d 98	 mov	 ecx, DWORD PTR tv396[ebp]
  00819	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00820	ff d2		 call	 edx
  00822	85 c0		 test	 eax, eax
  00824	74 4b		 je	 SHORT $LN31@response_t

; 379  : 				{
; 380  : 					if (damage_caused < 100.0)

  00826	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR _damage_caused$[ebp]
  0082b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4059000000000000
  00833	66 0f 2f c8	 comisd	 xmm1, xmm0
  00837	76 0d		 jbe	 SHORT $LN28@response_t

; 381  : 					{
; 382  : 						damage_client_server_entity_avionics (receiver, GUNSHIP_DAMAGE_LEVEL_LIGHT);

  00839	6a 00		 push	 0
  0083b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0083e	50		 push	 eax
  0083f	e8 00 00 00 00	 call	 ?damage_client_server_entity_avionics@@YGXPAUENTITY@@W4GUNSHIP_DAMAGE_LEVELS@@@Z ; damage_client_server_entity_avionics
  00844	eb 2b		 jmp	 SHORT $LN31@response_t
$LN28@response_t:

; 383  : 					}
; 384  : 					else if (damage_caused < 300.0)

  00846	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR _damage_caused$[ebp]
  0084b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4072c00000000000
  00853	66 0f 2f c8	 comisd	 xmm1, xmm0
  00857	76 0d		 jbe	 SHORT $LN30@response_t

; 385  : 					{
; 386  : 						damage_client_server_entity_avionics (receiver, GUNSHIP_DAMAGE_LEVEL_MEDIUM);

  00859	6a 01		 push	 1
  0085b	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0085e	50		 push	 eax
  0085f	e8 00 00 00 00	 call	 ?damage_client_server_entity_avionics@@YGXPAUENTITY@@W4GUNSHIP_DAMAGE_LEVELS@@@Z ; damage_client_server_entity_avionics

; 387  : 					}
; 388  : 					else

  00864	eb 0b		 jmp	 SHORT $LN31@response_t
$LN30@response_t:

; 389  : 					{
; 390  : 						damage_client_server_entity_avionics (receiver, GUNSHIP_DAMAGE_LEVEL_HEAVY);

  00866	6a 02		 push	 2
  00868	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  0086b	50		 push	 eax
  0086c	e8 00 00 00 00	 call	 ?damage_client_server_entity_avionics@@YGXPAUENTITY@@W4GUNSHIP_DAMAGE_LEVELS@@@Z ; damage_client_server_entity_avionics
$LN31@response_t:

; 391  : 					}
; 392  : 				}
; 393  : 			}
; 394  : 		}
; 395  : 
; 396  : 		/////////////////////////////////////////////////////////////////
; 397  : 		//
; 398  : 		// SPECIAL_EFFECT_HOOK FOR GETTING_SHOT
; 399  : 		//
; 400  : 		/////////////////////////////////////////////////////////////////
; 401  : 
; 402  : 		if (aggressor)

  00871	83 7d f4 00	 cmp	 DWORD PTR _aggressor$[ebp], 0
  00875	74 0d		 je	 SHORT $LN32@response_t

; 403  : 		{
; 404  : 			play_aircraft_shot_at_speech (receiver, aggressor);

  00877	8b 45 f4	 mov	 eax, DWORD PTR _aggressor$[ebp]
  0087a	50		 push	 eax
  0087b	8b 4d 0c	 mov	 ecx, DWORD PTR _receiver$[ebp]
  0087e	51		 push	 ecx
  0087f	e8 00 00 00 00	 call	 ?play_aircraft_shot_at_speech@@YGXPAUENTITY@@0@Z ; play_aircraft_shot_at_speech
$LN32@response_t:

; 405  : 		}
; 406  : 
; 407  : 		/////////////////////////////////////////////////////////////////
; 408  : 		//
; 409  : 		//
; 410  : 		/////////////////////////////////////////////////////////////////
; 411  : 
; 412  : 		//notify hit. ?
; 413  : 	}
; 414  : 
; 415  : 	//
; 416  : 	// add force to players helicopters
; 417  : 	//
; 418  : 
; 419  : 	if (damage_caused > 0.0)

  00884	f2 0f 2a 45 f0	 cvtsi2sd xmm0, DWORD PTR _damage_caused$[ebp]
  00889	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00891	0f 86 17 01 00
	00		 jbe	 $LN2@response_t

; 420  : 	{
; 421  : 		switch (get_local_entity_int_value (receiver, INT_TYPE_PLAYER))

  00897	83 7d 0c 00	 cmp	 DWORD PTR _receiver$[ebp], 0
  0089b	74 0a		 je	 SHORT $LN89@response_t
  0089d	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  008a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  008a2	89 4d 9c	 mov	 DWORD PTR tv423[ebp], ecx
  008a5	eb 1d		 jmp	 SHORT $LN90@response_t
$LN89@response_t:
  008a7	68 a5 01 00 00	 push	 421			; 000001a5H
  008ac	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  008b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008b7	52		 push	 edx
  008b8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008bd	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv423[ebp], 0
$LN90@response_t:
  008c4	b8 01 00 00 00	 mov	 eax, 1
  008c9	85 c0		 test	 eax, eax
  008cb	74 09		 je	 SHORT $LN91@response_t
  008cd	c7 45 98 9c 00
	00 00		 mov	 DWORD PTR tv430[ebp], 156 ; 0000009cH
  008d4	eb 1d		 jmp	 SHORT $LN92@response_t
$LN91@response_t:
  008d6	68 a5 01 00 00	 push	 421			; 000001a5H
  008db	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  008e0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008e6	51		 push	 ecx
  008e7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008ec	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv430[ebp], 0
$LN92@response_t:
  008f3	68 9c 00 00 00	 push	 156			; 0000009cH
  008f8	8b 55 0c	 mov	 edx, DWORD PTR _receiver$[ebp]
  008fb	52		 push	 edx
  008fc	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv423[ebp], 1116
  00903	8b 4d 98	 mov	 ecx, DWORD PTR tv430[ebp]
  00906	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0090d	ff d2		 call	 edx
  0090f	89 45 94	 mov	 DWORD PTR tv436[ebp], eax
  00912	83 7d 94 01	 cmp	 DWORD PTR tv436[ebp], 1
  00916	74 05		 je	 SHORT $LN34@response_t
  00918	e9 91 00 00 00	 jmp	 $LN2@response_t
$LN34@response_t:

; 422  : 		{
; 423  : 			case ENTITY_PLAYER_LOCAL:
; 424  : 			{
; 425  : 				add_dynamic_explosion_force (get_local_entity_vec3d_ptr (sender, VEC3D_TYPE_POSITION), (float)damage_caused);

  0091d	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00921	74 0a		 je	 SHORT $LN93@response_t
  00923	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  00926	8b 08		 mov	 ecx, DWORD PTR [eax]
  00928	89 4d 9c	 mov	 DWORD PTR tv445[ebp], ecx
  0092b	eb 24		 jmp	 SHORT $LN94@response_t
$LN93@response_t:
  0092d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00933	81 c2 ff 00 00
	00		 add	 edx, 255		; 000000ffH
  00939	52		 push	 edx
  0093a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  0093f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00944	50		 push	 eax
  00945	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0094a	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv445[ebp], 0
$LN94@response_t:
  00951	b9 01 00 00 00	 mov	 ecx, 1
  00956	85 c9		 test	 ecx, ecx
  00958	74 09		 je	 SHORT $LN95@response_t
  0095a	c7 45 98 08 00
	00 00		 mov	 DWORD PTR tv453[ebp], 8
  00961	eb 24		 jmp	 SHORT $LN96@response_t
$LN95@response_t:
  00963	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z@4JA
  00969	81 c2 ff 00 00
	00		 add	 edx, 255		; 000000ffH
  0096f	52		 push	 edx
  00970	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00975	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0097a	50		 push	 eax
  0097b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00980	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv453[ebp], 0
$LN96@response_t:
  00987	f3 0f 2a 45 f0	 cvtsi2ss xmm0, DWORD PTR _damage_caused$[ebp]
  0098c	51		 push	 ecx
  0098d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00992	6a 08		 push	 8
  00994	8b 4d 10	 mov	 ecx, DWORD PTR _sender$[ebp]
  00997	51		 push	 ecx
  00998	6b 55 9c 60	 imul	 edx, DWORD PTR tv445[ebp], 96
  0099c	8b 45 98	 mov	 eax, DWORD PTR tv453[ebp]
  0099f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  009a6	ff d1		 call	 ecx
  009a8	50		 push	 eax
  009a9	e8 00 00 00 00	 call	 ?add_dynamic_explosion_force@@YGXPAUVEC3D@@M@Z ; add_dynamic_explosion_force
$LN2@response_t:

; 426  : 	
; 427  : 				break;
; 428  : 			}
; 429  : 			case ENTITY_PLAYER_REMOTE:
; 430  : 			{
; 431  : 				// send comms message
; 432  : 	
; 433  : 				break;
; 434  : 			}
; 435  : 		}
; 436  : 	}
; 437  : 
; 438  : 	return (TRUE);

  009ae	b8 01 00 00 00	 mov	 eax, 1
$LN1@response_t:

; 439  : }

  009b3	5f		 pop	 edi
  009b4	5e		 pop	 esi
  009b5	5b		 pop	 ebx
  009b6	8b e5		 mov	 esp, ebp
  009b8	5d		 pop	 ebp
  009b9	c2 10 00	 ret	 16			; 00000010H
?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_collision
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z
_TEXT	SEGMENT
tv81 = -76						; size = 4
tv74 = -72						; size = 4
tv66 = -72						; size = 4
_list_type$ = -4					; size = 4
_message$ = 8						; size = 4
_receiver$ = 12						; size = 4
_sender$ = 16						; size = 4
_pargs$ = 20						; size = 4
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z PROC ; response_to_link_child, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	list_types
; 82   : 		list_type;
; 83   : 
; 84   : 	list_type = va_arg (pargs, list_types);

  00009	8b 45 14	 mov	 eax, DWORD PTR _pargs$[ebp]
  0000c	83 c0 04	 add	 eax, 4
  0000f	89 45 14	 mov	 DWORD PTR _pargs$[ebp], eax
  00012	8b 4d 14	 mov	 ecx, DWORD PTR _pargs$[ebp]
  00015	8b 51 fc	 mov	 edx, DWORD PTR [ecx-4]
  00018	89 55 fc	 mov	 DWORD PTR _list_type$[ebp], edx

; 85   : 
; 86   : 	#if DEBUG_MODULE
; 87   : 
; 88   : 	debug_log_entity_message (message, receiver, sender, pargs);
; 89   : 
; 90   : 	#endif
; 91   : 
; 92   : 	switch (list_type)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _list_type$[ebp]
  0001e	89 45 b8	 mov	 DWORD PTR tv66[ebp], eax
  00021	83 7d b8 26	 cmp	 DWORD PTR tv66[ebp], 38	; 00000026H
  00025	74 05		 je	 SHORT $LN4@response_t
  00027	e9 94 00 00 00	 jmp	 $LN2@response_t
$LN4@response_t:

; 93   : 	{
; 94   : 		////////////////////////////////////////
; 95   : 		case LIST_TYPE_TARGET:
; 96   : 		////////////////////////////////////////
; 97   : 		{
; 98   : 			if (sender)

  0002c	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00030	0f 84 8a 00 00
	00		 je	 $LN2@response_t

; 99   : 			{
; 100  : 				if (receiver == get_gunship_entity ())

  00036	8b 45 0c	 mov	 eax, DWORD PTR _receiver$[ebp]
  00039	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0003f	75 7f		 jne	 SHORT $LN2@response_t

; 101  : 				{
; 102  : 					if (get_local_entity_int_value (sender, INT_TYPE_THREAT_TYPE) != THREAT_TYPE_INVALID)

  00041	83 7d 10 00	 cmp	 DWORD PTR _sender$[ebp], 0
  00045	74 0a		 je	 SHORT $LN9@response_t
  00047	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	89 4d b8	 mov	 DWORD PTR tv74[ebp], ecx
  0004f	eb 1a		 jmp	 SHORT $LN10@response_t
$LN9@response_t:
  00051	6a 66		 push	 102			; 00000066H
  00053	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0005e	52		 push	 edx
  0005f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00064	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN10@response_t:
  0006b	b8 01 00 00 00	 mov	 eax, 1
  00070	85 c0		 test	 eax, eax
  00072	74 09		 je	 SHORT $LN11@response_t
  00074	c7 45 b4 e9 00
	00 00		 mov	 DWORD PTR tv81[ebp], 233 ; 000000e9H
  0007b	eb 1a		 jmp	 SHORT $LN12@response_t
$LN11@response_t:
  0007d	6a 66		 push	 102			; 00000066H
  0007f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@OFOKGMOF@c?3?2users?2nhv90?2projects?2eech?2ap@
  00084	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0008a	51		 push	 ecx
  0008b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00090	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv81[ebp], 0
$LN12@response_t:
  00097	68 e9 00 00 00	 push	 233			; 000000e9H
  0009c	8b 55 10	 mov	 edx, DWORD PTR _sender$[ebp]
  0009f	52		 push	 edx
  000a0	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv74[ebp], 1116
  000a7	8b 4d b4	 mov	 ecx, DWORD PTR tv81[ebp]
  000aa	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000b1	ff d2		 call	 edx
  000b3	85 c0		 test	 eax, eax
  000b5	74 09		 je	 SHORT $LN2@response_t

; 103  : 					{
; 104  : 						activate_common_threat_warning_system (sender);

  000b7	8b 45 10	 mov	 eax, DWORD PTR _sender$[ebp]
  000ba	50		 push	 eax
  000bb	e8 00 00 00 00	 call	 ?activate_common_threat_warning_system@@YGXPAUENTITY@@@Z ; activate_common_threat_warning_system
$LN2@response_t:

; 105  : 					}
; 106  : 				}
; 107  : 			}
; 108  : 
; 109  : 			break;
; 110  : 		}
; 111  : 	}
; 112  : 
; 113  : 	return (TRUE);

  000c0	b8 01 00 00 00	 mov	 eax, 1

; 114  : }

  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi
  000c7	5b		 pop	 ebx
  000c8	8b e5		 mov	 esp, ebp
  000ca	5d		 pop	 ebp
  000cb	c2 10 00	 ret	 16			; 00000010H
?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ENDP ; response_to_link_child
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_msgs.c
;	COMDAT ?overload_helicopter_message_responses@@YGXXZ
_TEXT	SEGMENT
?overload_helicopter_message_responses@@YGXXZ PROC	; overload_helicopter_message_responses, COMDAT

; 783  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 784  : 	overload_aircraft_message_responses (ENTITY_TYPE_HELICOPTER);

  00009	6a 0e		 push	 14			; 0000000eH
  0000b	e8 00 00 00 00	 call	 ?overload_aircraft_message_responses@@YGXW4ENTITY_TYPES@@@Z ; overload_aircraft_message_responses

; 785  : 
; 786  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_LINK_CHILD]							= response_to_link_child;

  00010	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00015	6b c8 0e	 imul	 ecx, eax, 14
  00018	ba 04 00 00 00	 mov	 edx, 4
  0001d	6b c2 23	 imul	 eax, edx, 35
  00020	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_link_child@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_link_child

; 787  : 
; 788  : 	#if DEBUG_MODULE
; 789  : 
; 790  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_UNLINK_CHILD]						= response_to_unlink_child;
; 791  : 
; 792  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_LINK_PARENT]						= response_to_link_parent;
; 793  : 
; 794  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_UNLINK_PARENT]						= response_to_unlink_parent;
; 795  : 
; 796  : 	#endif
; 797  : 
; 798  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_COLLISION]							= response_to_collision;

  0002b	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00030	6b c8 0e	 imul	 ecx, eax, 14
  00033	ba 04 00 00 00	 mov	 edx, 4
  00038	6b c2 07	 imul	 eax, edx, 7
  0003b	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_collision@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_collision

; 799  : 
; 800  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_ARTICULATE_LOADING_DOORS]		= response_to_articulate_loading_doors;

  00046	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  0004b	6b c8 0e	 imul	 ecx, eax, 14
  0004e	ba 04 00 00 00	 mov	 edx, 4
  00053	c1 e2 00	 shl	 edx, 0
  00056	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+edx], OFFSET ?response_to_articulate_loading_doors@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_articulate_loading_doors

; 801  : 
; 802  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_SET_ENTITY_POSITION]				= response_to_set_entity_position;

  00061	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00066	6b c8 0e	 imul	 ecx, eax, 14
  00069	ba 04 00 00 00	 mov	 edx, 4
  0006e	6b c2 30	 imul	 eax, edx, 48
  00071	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+eax], OFFSET ?response_to_set_entity_position@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_set_entity_position

; 803  : 
; 804  : 	message_responses[ENTITY_TYPE_HELICOPTER][ENTITY_MESSAGE_CHECK_MOBILE_REACHED_GUIDE]	= response_to_check_mobile_reached_guide;

  0007c	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  00081	6b c8 0e	 imul	 ecx, eax, 14
  00084	ba 04 00 00 00	 mov	 edx, 4
  00089	c1 e2 02	 shl	 edx, 2
  0008c	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?message_responses@@3PAY0GB@P6GHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@ZA[ecx+edx], OFFSET ?response_to_check_mobile_reached_guide@@YGHW4ENTITY_MESSAGES@@PAUENTITY@@1PAD@Z ; response_to_check_mobile_reached_guide

; 805  : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	8b e5		 mov	 esp, ebp
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?overload_helicopter_message_responses@@YGXXZ ENDP	; overload_helicopter_message_responses
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?acos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?acos@@YGMM@Z PROC					; acos, COMDAT

; 26   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 27   : 	return (_CSTD acosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _acosf
  00019	83 c4 04	 add	 esp, 4

; 28   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?acos@@YGMM@Z ENDP					; acos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _acosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_acosf	PROC						; COMDAT

; 623  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 624  :             return (float)acos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _acos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 625  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_acosf	ENDP
_TEXT	ENDS
END
