; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?gunship_entity@@3PAUENTITY@@A			; gunship_entity
PUBLIC	?gunship_current_sector@@3PAUSECTOR@@A		; gunship_current_sector
_BSS	SEGMENT
?gunship_entity@@3PAUENTITY@@A DD 01H DUP (?)		; gunship_entity
?gunship_current_sector@@3PAUSECTOR@@A DD 01H DUP (?)	; gunship_current_sector
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	_cosf
PUBLIC	_fabsf
PUBLIC	_sinf
PUBLIC	?cos@@YGMM@Z					; cos
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?sin@@YGMM@Z					; sin
PUBLIC	?set_gunship_entity@@YGXPAUENTITY@@@Z		; set_gunship_entity
PUBLIC	?assign_entity_to_user@@YGXPAUENTITY@@@Z	; assign_entity_to_user
PUBLIC	?set_raw_gunship_entity@@YGXPAUENTITY@@@Z	; set_raw_gunship_entity
PUBLIC	?set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z ; set_gunship_entity_to_external_view_entity
PUBLIC	?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z ; restore_helicopter_entity
PUBLIC	?notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z ; notify_gunship_entity_mission_completed
PUBLIC	?notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z ; notify_gunship_entity_mission_terminated
PUBLIC	?create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ; create_helicopter_rotor_sound_effects
PUBLIC	?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ; kill_helicopter_rotor_sound_effects
PUBLIC	?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z ; update_local_helicopter_rotor_sounds
PUBLIC	?play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z ; play_helicopter_winding_rotor_sounds
PUBLIC	?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z ; get_local_entity_suitable_for_player
PUBLIC	?helicopter_assume_player_control@@YGXPAUENTITY@@@Z ; helicopter_assume_player_control
PUBLIC	?helicopter_release_player_control@@YGXPAUENTITY@@@Z ; helicopter_release_player_control
PUBLIC	?transmit_player_recon_data@@YGXPAUENTITY@@@Z	; transmit_player_recon_data
PUBLIC	?get_helicopter_allowed_to_rearm@@YGHPAUENTITY@@@Z ; get_helicopter_allowed_to_rearm
PUBLIC	?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z ; helicopter_within_keysite_area
PUBLIC	?player_mission_logged@@YGHXZ			; player_mission_logged
PUBLIC	??$min@M@std@@YGABMABM0@Z			; std::min<float>
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0BG@DKOCFJIP@Setting?5gunship?5to?5?$CFs@	; `string'
PUBLIC	?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA ; `assign_entity_to_user'::`1'::__LINE__Var
PUBLIC	??_C@_0BO@BNCJGPBI@Assigning?5gunship?5to?5user?3?5?$CFs@ ; `string'
PUBLIC	??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0EE@CFHCGCOL@get_pilot_entity?5?$CI?$CJ?5?$HM?$HM?5?$CIen?5?$DN?$DN?5N@ ; `string'
PUBLIC	??_C@_0DK@MHDMJOIO@get_in_flight_game_mode?5?$CI?$CJ?5?$DN?$DN?5I@ ; `string'
PUBLIC	??_C@_0CD@ENAPPBAI@lost?5gunship?5?9?5landed?5outside?5b@ ; `string'
PUBLIC	??_C@_0N@BFGKALPP@pilot?5killed@		; `string'
PUBLIC	??_C@_0CP@POCBAELM@Setting?5gunship_entity?5?$CItype?5?$DN?5@ ; `string'
PUBLIC	??_C@_0BP@MCJJJANF@Setting?5gunship_entity?5to?5NULL@ ; `string'
PUBLIC	??_C@_0BF@JNEDHLHL@ingame?5screen?5events@	; `string'
PUBLIC	??_C@_0N@NLMBCFFH@input?5events@		; `string'
PUBLIC	?__LINE__Var@?0??set_raw_gunship_entity@@YGXPAUENTITY@@@Z@4JA ; `set_raw_gunship_entity'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@DDEPGAMI@Setting?5raw?5gunship_entity?5?$CItyp@ ; `string'
PUBLIC	??_C@_0CD@CHLHIPMK@Setting?5raw?5gunship_entity?5to?5N@ ; `string'
PUBLIC	?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA ; `set_gunship_entity_to_external_view_entity'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z@4JA ; `restore_helicopter_entity'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA ; `notify_gunship_entity_mission_completed'::`1'::__LINE__Var
PUBLIC	??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@ ; `string'
PUBLIC	??_C@_04GGKLLKOO@task@				; `string'
PUBLIC	??_C@_0EP@FJPBJPH@get_local_entity_int_value?5?$CItas@ ; `string'
PUBLIC	??_C@_0EO@KIDCCOBE@get_local_entity_int_value?5?$CItas@ ; `string'
PUBLIC	??_C@_0L@BEIPCALH@Mission?5?$CFs@		; `string'
PUBLIC	?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA ; `notify_gunship_entity_mission_terminated'::`1'::__LINE__Var
PUBLIC	??_C@_0CP@FMIMJLKG@HELICOP?3?5Awarded?5?$CFd?5Points?5to?5p@ ; `string'
PUBLIC	??_C@_0CD@IMCJODJH@HELICOP?3?5unknown?5task?5completed@ ; `string'
PUBLIC	?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA ; `create_helicopter_rotor_sound_effects'::`1'::__LINE__Var
PUBLIC	??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ ; `string'
PUBLIC	?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA ; `create_specified_helicopter_rotor_sound_effects'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@MDMNBKPK@looping_effect?5?$CB?$DN?5SOUND_SAMPLE_@ ; `string'
PUBLIC	?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA ; `kill_helicopter_rotor_sound_effects'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA ; `update_local_helicopter_rotor_sounds'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA ; `kill_sound_effect'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA ; `play_helicopter_winding_rotor_sounds'::`1'::__LINE__Var
PUBLIC	??_C@_0CG@EPEAJBLJ@?$CIdirection?5?$DN?$DN?51?$CJ?5?$HM?$HM?5?$CIdirection?5@ ; `string'
PUBLIC	??_C@_0CD@BAJEDOHM@engine_num?5?$DO?$DN?50?5?$CG?$CG?5engine_num?5?$DM@ ; `string'
PUBLIC	??_C@_0CM@DCJFDAHO@sound_raw?9?$DOsound_effect_sequenc@ ; `string'
PUBLIC	?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA ; `helicopter_assume_player_control'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@ ; `string'
PUBLIC	??_C@_05MGJOOGAJ@group@				; `string'
PUBLIC	??_C@_0BP@FOJECDIJ@valid_members?5?$DN?$DN?5member_number@ ; `string'
PUBLIC	?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA ; `helicopter_release_player_control'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@KNOJECOF@get_local_entity_int_value?5?$CIen?0@ ; `string'
PUBLIC	?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA ; `transmit_player_recon_data'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@GMNHMODA@current_waypoint@		; `string'
PUBLIC	??_C@_0CB@PEAIIDAA@HELICOP?3?5Transmitting?5recon?5dat@ ; `string'
PUBLIC	?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA ; `helicopter_within_keysite_area'::`1'::__LINE__Var
PUBLIC	??_C@_04BBAEMEEI@ship@				; `string'
PUBLIC	??_C@_0DJ@DHMFCPLI@get_local_entity_type?5?$CIship?$CJ?5?$DN?$DN@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	__real@0000000000000000
PUBLIC	__real@3f000000
PUBLIC	__real@3f400000
PUBLIC	__real@3f800000
PUBLIC	__real@3f847ae147ae147b
PUBLIC	__real@3f947ae147ae147b
PUBLIC	__real@3fa66666
PUBLIC	__real@3fc999999999999a
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@3fd999999999999a
PUBLIC	__real@3fe3333333333333
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff3333333333333
PUBLIC	__real@3ff999999999999a
PUBLIC	__real@4000000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4044000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@41700000
PUBLIC	__real@41c80000
PUBLIC	__real@41f00000
PUBLIC	__real@42340000
PUBLIC	__real@43480000
PUBLIC	__real@43c80000
PUBLIC	__real@459c4000
PUBLIC	__real@c3480000
PUBLIC	__real@c3c80000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	_cos:PROC
EXTRN	_fabs:PROC
EXTRN	_sin:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_filtered_log@@YAXPBDZZ:PROC		; debug_filtered_log
EXTRN	?push_event@@YGXP6GXXZPBD@Z:PROC		; push_event
EXTRN	?pop_event@@YGXP6GXXZ@Z:PROC			; pop_event
EXTRN	?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z:PROC	; get_3d_vector_magnitude
EXTRN	?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z:PROC	; get_sqr_2d_range
EXTRN	?direct_play_get_player_id@@YGHXZ:PROC		; direct_play_get_player_id
EXTRN	?set_input_events@@YGXXZ:PROC			; set_input_events
EXTRN	?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z:PROC ; get_object_3d_bounding_box_without_lines
EXTRN	?get_sub_type_name@@YGPBDPAUENTITY@@@Z:PROC	; get_sub_type_name
EXTRN	?set_global_gunship_type@@YGXW4GUNSHIP_TYPES@@@Z:PROC ; set_global_gunship_type
EXTRN	?play_cd_music@@YGXW4CD_MUSIC_TYPES@@@Z:PROC	; play_cd_music
EXTRN	?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z:PROC ; set_comms_data_flow
EXTRN	?send_packet@@YGXKW4PACKET_TYPES@@PAEHW4SEND_TYPES@@@Z:PROC ; send_packet
EXTRN	?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ:PROC ; notify_local_entity
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?set_client_server_entity_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z:PROC ; set_client_server_entity_parent
EXTRN	?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z:PROC ; restore_helicopter_main_rotors
EXTRN	?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z:PROC ; restore_helicopter_tail_rotors
EXTRN	?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z:PROC ; update_player_helicopter_waypoint_distance
EXTRN	?set_external_view_entity@@YGXPAUENTITY@@@Z:PROC ; set_external_view_entity
EXTRN	?get_external_view_entity@@YGPAUENTITY@@XZ:PROC	; get_external_view_entity
EXTRN	?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z:PROC ; pause_local_entity_sound_type
EXTRN	?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z:PROC ; resume_local_entity_sound_type
EXTRN	?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z:PROC ; create_client_server_sound_effect_entity
EXTRN	?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z:PROC ; get_guide_criteria_valid
EXTRN	?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z:PROC ; get_closest_keysite
EXTRN	?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z:PROC ; get_local_sector_entity
EXTRN	?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z:PROC ; get_local_entity_primary_task
EXTRN	?get_local_entity_waypoint_database_action_radius_value@@YGMPAUENTITY@@0@Z:PROC ; get_local_entity_waypoint_database_action_radius_value
EXTRN	?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z:PROC ; set_status_message
EXTRN	?set_view_mode@@YGHW4VIEW_MODES@@@Z:PROC	; set_view_mode
EXTRN	?reinitialise_virtual_cockpit_view@@YGXXZ:PROC	; reinitialise_virtual_cockpit_view
EXTRN	?initialise_avionics@@YGXXZ:PROC		; initialise_avionics
EXTRN	?deinitialise_avionics@@YGXXZ:PROC		; deinitialise_avionics
EXTRN	?initialise_cockpits@@YGXXZ:PROC		; initialise_cockpits
EXTRN	?deinitialise_cockpits@@YGXXZ:PROC		; deinitialise_cockpits
EXTRN	?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z:PROC ; damage_entity_to_flight_model
EXTRN	?initialise_flight_dynamics@@YGXPAUENTITY@@@Z:PROC ; initialise_flight_dynamics
EXTRN	?deinitialise_flight_dynamics@@YGXXZ:PROC	; deinitialise_flight_dynamics
EXTRN	?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ:PROC ; get_keysite_currently_landed_at
EXTRN	?stop_messaging_system@@YGXPAUEVENT@@@Z:PROC	; stop_messaging_system
EXTRN	?get_time_acceleration@@YGHXZ:PROC		; get_time_acceleration
EXTRN	?set_min_time_acceleration@@YGXPAUEVENT@@@Z:PROC ; set_min_time_acceleration
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?award_aviator_wings@@YGHH@Z:PROC		; award_aviator_wings
EXTRN	?award_valour_medal@@YGHHH@Z:PROC		; award_valour_medal
EXTRN	?award_purple_heart_medal@@YGHH@Z:PROC		; award_purple_heart_medal
EXTRN	?award_air_medal_medal@@YGHHH@Z:PROC		; award_air_medal_medal
EXTRN	?award_player_rank@@YGHH@Z:PROC			; award_player_rank
EXTRN	?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ:PROC ; get_current_player_log
EXTRN	?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z:PROC ; inc_player_log_experience
EXTRN	?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z:PROC ; inc_player_log_missions_flown
EXTRN	?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z:PROC ; update_player_log_mission_success_rate
EXTRN	?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z:PROC ; inc_player_log_deaths
EXTRN	?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z:PROC ; inc_player_log_helicopters_lost
EXTRN	?backup_current_player_log@@YGXXZ:PROC		; backup_current_player_log
EXTRN	?player_assigned_new_task@@YGXPAUENTITY@@0@Z:PROC ; player_assigned_new_task
EXTRN	?player_quit_current_task@@YGXXZ:PROC		; player_quit_current_task
EXTRN	?ingame_screen_set_events@@YGXXZ:PROC		; ingame_screen_set_events
EXTRN	?autoselect_debriefing_page@@YGXPAUENTITY@@H@Z:PROC ; autoselect_debriefing_page
EXTRN	?notify_campaign_screen@@YGHW4CAMPAIGN_SCREEN_MESSAGES@@PAUENTITY@@@Z:PROC ; notify_campaign_screen
EXTRN	?set_currently_selected_member@@YGXH@Z:PROC	; set_currently_selected_member
EXTRN	?activate_accept_selections_button@@YGHXZ:PROC	; activate_accept_selections_button
EXTRN	?notify_clear_current_selections@@YGXPAUUI_OBJECT@@PAX@Z:PROC ; notify_clear_current_selections
EXTRN	?reassign_group_members_to_valid_tasks@@YGHPAUENTITY@@0IH@Z:PROC ; reassign_group_members_to_valid_tasks
EXTRN	?start_tacview_logging@@YGXPAUENTITY@@@Z:PROC	; start_tacview_logging
EXTRN	?close_tacview_log@@YGXXZ:PROC			; close_tacview_log
EXTRN	?event_stack_head@@3PAUEVENT_STACK@@A:DWORD	; event_stack_head
EXTRN	?command_line_no_mission_complete_music@@3HA:DWORD ; command_line_no_mission_complete_music
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?command_line_user_invulnerable_time@@3MA:DWORD	; command_line_user_invulnerable_time
EXTRN	?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A:DWORD ; in_flight_game_mode
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?entity_type_database@@3PAUENTITY_TYPE_DATA@@A:BYTE ; entity_type_database
EXTRN	?task_status_names@@3PAPBDA:BYTE		; task_status_names
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?application_sound_effects@@3PAUSOUND_EFFECT_INFORMATION@@A:BYTE ; application_sound_effects
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A:DWORD ; system_comms_data_flow
EXTRN	?system_server_id@@3KA:DWORD			; system_server_id
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_first_child
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_child_succ
EXTRN	?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity
EXTRN	?fn_kill_local_entity@@3PAP6GXPAUENTITY@@@ZA:BYTE ; fn_kill_local_entity
EXTRN	?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_kill_client_server_entity
EXTRN	?overload_invalid_float_type_message@@3PBDB:DWORD ; overload_invalid_float_type_message
EXTRN	?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_local_entity_float_value
EXTRN	?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA:BYTE ; fn_set_client_server_entity_float_value
EXTRN	?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA:BYTE ; fn_get_local_entity_float_value
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_local_entity_int_value
EXTRN	?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA:BYTE ; fn_set_client_server_entity_int_value
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?overload_invalid_ptr_type_message@@3PBDB:DWORD	; overload_invalid_ptr_type_message
EXTRN	?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA:BYTE ; fn_get_local_entity_ptr_value
EXTRN	?overload_invalid_string_type_message@@3PBDB:DWORD ; overload_invalid_string_type_message
EXTRN	?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA:BYTE ; fn_get_local_entity_string
EXTRN	?overload_invalid_vec3d_type_message@@3PBDB:DWORD ; overload_invalid_vec3d_type_message
EXTRN	?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA:BYTE ; fn_get_local_entity_vec3d_ptr
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?aircraft_database@@3PAUAIRCRAFT_DATA@@A:BYTE	; aircraft_database
EXTRN	?camera_entity@@3PAUENTITY@@A:DWORD		; camera_entity
EXTRN	?pilot_entity@@3PAUENTITY@@A:DWORD		; pilot_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A:DWORD ; current_flight_dynamics
EXTRN	?game_type@@3W4GAME_TYPES@@A:DWORD		; game_type
EXTRN	?valid_helicopter@@3HA:DWORD			; valid_helicopter
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?mission_logged@@3HA DD 01H DUP (?)			; mission_logged
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c3c80000
CONST	SEGMENT
__real@c3c80000 DD 0c3c80000r			; -400
CONST	ENDS
;	COMDAT __real@c3480000
CONST	SEGMENT
__real@c3480000 DD 0c3480000r			; -200
CONST	ENDS
;	COMDAT __real@459c4000
CONST	SEGMENT
__real@459c4000 DD 0459c4000r			; 5000
CONST	ENDS
;	COMDAT __real@43c80000
CONST	SEGMENT
__real@43c80000 DD 043c80000r			; 400
CONST	ENDS
;	COMDAT __real@43480000
CONST	SEGMENT
__real@43480000 DD 043480000r			; 200
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@41700000
CONST	SEGMENT
__real@41700000 DD 041700000r			; 15
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4044000000000000
CONST	SEGMENT
__real@4044000000000000 DQ 04044000000000000r	; 40
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff999999999999a
CONST	SEGMENT
__real@3ff999999999999a DQ 03ff999999999999ar	; 1.6
CONST	ENDS
;	COMDAT __real@3ff3333333333333
CONST	SEGMENT
__real@3ff3333333333333 DQ 03ff3333333333333r	; 1.2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe3333333333333
CONST	SEGMENT
__real@3fe3333333333333 DQ 03fe3333333333333r	; 0.6
CONST	ENDS
;	COMDAT __real@3fd999999999999a
CONST	SEGMENT
__real@3fd999999999999a DQ 03fd999999999999ar	; 0.4
CONST	ENDS
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
CONST	ENDS
;	COMDAT __real@3fa66666
CONST	SEGMENT
__real@3fa66666 DD 03fa66666r			; 1.3
CONST	ENDS
;	COMDAT __real@3f947ae147ae147b
CONST	SEGMENT
__real@3f947ae147ae147b DQ 03f947ae147ae147br	; 0.02
CONST	ENDS
;	COMDAT __real@3f847ae147ae147b
CONST	SEGMENT
__real@3f847ae147ae147b DQ 03f847ae147ae147br	; 0.01
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
CONST	SEGMENT
??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@DHMFCPLI@get_local_entity_type?5?$CIship?$CJ?5?$DN?$DN@
CONST	SEGMENT
??_C@_0DJ@DHMFCPLI@get_local_entity_type?5?$CIship?$CJ?5?$DN?$DN@ DB 'get'
	DB	'_local_entity_type (ship) == ENTITY_TYPE_SHIP_VEHICLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BBAEMEEI@ship@
CONST	SEGMENT
??_C@_04BBAEMEEI@ship@ DB 'ship', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA DD 0868H ; `helicopter_within_keysite_area'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@PEAIIDAA@HELICOP?3?5Transmitting?5recon?5dat@
CONST	SEGMENT
??_C@_0CB@PEAIIDAA@HELICOP?3?5Transmitting?5recon?5dat@ DB 'HELICOP: Tran'
	DB	'smitting recon data', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GMNHMODA@current_waypoint@
CONST	SEGMENT
??_C@_0BB@GMNHMODA@current_waypoint@ DB 'current_waypoint', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA DD 081eH ; `transmit_player_recon_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0EF@KNOJECOF@get_local_entity_int_value?5?$CIen?0@
CONST	SEGMENT
??_C@_0EF@KNOJECOF@get_local_entity_int_value?5?$CIen?0@ DB 'get_local_en'
	DB	'tity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA DD 07e3H ; `helicopter_release_player_control'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BP@FOJECDIJ@valid_members?5?$DN?$DN?5member_number@
CONST	SEGMENT
??_C@_0BP@FOJECDIJ@valid_members?5?$DN?$DN?5member_number@ DB 'valid_memb'
	DB	'ers == member_number', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05MGJOOGAJ@group@
CONST	SEGMENT
??_C@_05MGJOOGAJ@group@ DB 'group', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@
CONST	SEGMENT
??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@ DB 'get_local_en'
	DB	'tity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA DD 07abH ; `helicopter_assume_player_control'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CM@DCJFDAHO@sound_raw?9?$DOsound_effect_sequenc@
CONST	SEGMENT
??_C@_0CM@DCJFDAHO@sound_raw?9?$DOsound_effect_sequenc@ DB 'sound_raw->so'
	DB	'und_effect_sequence_count == 1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BAJEDOHM@engine_num?5?$DO?$DN?50?5?$CG?$CG?5engine_num?5?$DM@
CONST	SEGMENT
??_C@_0CD@BAJEDOHM@engine_num?5?$DO?$DN?50?5?$CG?$CG?5engine_num?5?$DM@ DB 'e'
	DB	'ngine_num >= 0 && engine_num <= 2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EPEAJBLJ@?$CIdirection?5?$DN?$DN?51?$CJ?5?$HM?$HM?5?$CIdirection?5@
CONST	SEGMENT
??_C@_0CG@EPEAJBLJ@?$CIdirection?5?$DN?$DN?51?$CJ?5?$HM?$HM?5?$CIdirection?5@ DB '('
	DB	'direction == 1) || (direction == -1)', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA DD 06aaH ; `play_helicopter_winding_rotor_sounds'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA DD 0681H ; `kill_sound_effect'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA DD 05c6H ; `update_local_helicopter_rotor_sounds'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA DD 059cH ; `kill_helicopter_rotor_sound_effects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CK@MDMNBKPK@looping_effect?5?$CB?$DN?5SOUND_SAMPLE_@
CONST	SEGMENT
??_C@_0CK@MDMNBKPK@looping_effect?5?$CB?$DN?5SOUND_SAMPLE_@ DB 'looping_e'
	DB	'ffect != SOUND_SAMPLE_INDEX_NONE', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA DD 04e1H ; `create_specified_helicopter_rotor_sound_effects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
CONST	SEGMENT
??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@ DB 'ge'
	DB	't_comms_model () == COMMS_MODEL_SERVER', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA DD 0352H ; `create_helicopter_rotor_sound_effects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@IMCJODJH@HELICOP?3?5unknown?5task?5completed@
CONST	SEGMENT
??_C@_0CD@IMCJODJH@HELICOP?3?5unknown?5task?5completed@ DB 'HELICOP: unkn'
	DB	'own task completed %d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@FMIMJLKG@HELICOP?3?5Awarded?5?$CFd?5Points?5to?5p@
CONST	SEGMENT
??_C@_0CP@FMIMJLKG@HELICOP?3?5Awarded?5?$CFd?5Points?5to?5p@ DB 'HELICOP:'
	DB	' Awarded %d Points to player for %s %d', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA DD 02acH ; `notify_gunship_entity_mission_terminated'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@BEIPCALH@Mission?5?$CFs@
CONST	SEGMENT
??_C@_0L@BEIPCALH@Mission?5?$CFs@ DB 'Mission %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@KIDCCOBE@get_local_entity_int_value?5?$CItas@
CONST	SEGMENT
??_C@_0EO@KIDCCOBE@get_local_entity_int_value?5?$CItas@ DB 'get_local_ent'
	DB	'ity_int_value (task, INT_TYPE_TASK_COMPLETED) != TASK_INCOMPL'
	DB	'ETE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@FJPBJPH@get_local_entity_int_value?5?$CItas@
CONST	SEGMENT
??_C@_0EP@FJPBJPH@get_local_entity_int_value?5?$CItas@ DB 'get_local_enti'
	DB	'ty_int_value (task, INT_TYPE_TASK_STATE) == TASK_STATE_COMPLE'
	DB	'TED', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04GGKLLKOO@task@
CONST	SEGMENT
??_C@_04GGKLLKOO@task@ DB 'task', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@ DB 'en == '
	DB	'get_gunship_entity ()', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA DD 0281H ; `notify_gunship_entity_mission_completed'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z@4JA DD 0274H ; `restore_helicopter_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA DD 0239H ; `set_gunship_entity_to_external_view_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CD@CHLHIPMK@Setting?5raw?5gunship_entity?5to?5N@
CONST	SEGMENT
??_C@_0CD@CHLHIPMK@Setting?5raw?5gunship_entity?5to?5N@ DB 'Setting raw g'
	DB	'unship_entity to NULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DDEPGAMI@Setting?5raw?5gunship_entity?5?$CItyp@
CONST	SEGMENT
??_C@_0DD@DDEPGAMI@Setting?5raw?5gunship_entity?5?$CItyp@ DB 'Setting raw'
	DB	' gunship_entity (type = %s, index = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_raw_gunship_entity@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_raw_gunship_entity@@YGXPAUENTITY@@@Z@4JA DD 0223H ; `set_raw_gunship_entity'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@NLMBCFFH@input?5events@
CONST	SEGMENT
??_C@_0N@NLMBCFFH@input?5events@ DB 'input events', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JNEDHLHL@ingame?5screen?5events@
CONST	SEGMENT
??_C@_0BF@JNEDHLHL@ingame?5screen?5events@ DB 'ingame screen events', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@MCJJJANF@Setting?5gunship_entity?5to?5NULL@
CONST	SEGMENT
??_C@_0BP@MCJJJANF@Setting?5gunship_entity?5to?5NULL@ DB 'Setting gunship'
	DB	'_entity to NULL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@POCBAELM@Setting?5gunship_entity?5?$CItype?5?$DN?5@
CONST	SEGMENT
??_C@_0CP@POCBAELM@Setting?5gunship_entity?5?$CItype?5?$DN?5@ DB 'Setting'
	DB	' gunship_entity (type = %s, index = %d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BFGKALPP@pilot?5killed@
CONST	SEGMENT
??_C@_0N@BFGKALPP@pilot?5killed@ DB 'pilot killed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@ENAPPBAI@lost?5gunship?5?9?5landed?5outside?5b@
CONST	SEGMENT
??_C@_0CD@ENAPPBAI@lost?5gunship?5?9?5landed?5outside?5b@ DB 'lost gunshi'
	DB	'p - landed outside base', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@MHDMJOIO@get_in_flight_game_mode?5?$CI?$CJ?5?$DN?$DN?5I@
CONST	SEGMENT
??_C@_0DK@MHDMJOIO@get_in_flight_game_mode?5?$CI?$CJ?5?$DN?$DN?5I@ DB 'ge'
	DB	't_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@CFHCGCOL@get_pilot_entity?5?$CI?$CJ?5?$HM?$HM?5?$CIen?5?$DN?$DN?5N@
CONST	SEGMENT
??_C@_0EE@CFHCGCOL@get_pilot_entity?5?$CI?$CJ?5?$HM?$HM?5?$CIen?5?$DN?$DN?5N@ DB 'g'
	DB	'et_pilot_entity () || (en == NULL && get_gunship_entity() == '
	DB	'NULL)', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\helicop.c', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BNCJGPBI@Assigning?5gunship?5to?5user?3?5?$CFs@
CONST	SEGMENT
??_C@_0BO@BNCJGPBI@Assigning?5gunship?5to?5user?3?5?$CFs@ DB 'Assigning g'
	DB	'unship to user: %s', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA DD 09dH ; `assign_entity_to_user'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BG@DKOCFJIP@Setting?5gunship?5to?5?$CFs@
CONST	SEGMENT
??_C@_0BG@DKOCFJIP@Setting?5gunship?5to?5?$CFs@ DB 'Setting gunship to %s'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$min@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@M@std@@YGABMABM0@Z PROC				; std::min<float>, COMDAT

; 5427 : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5428 : 	if (_Right < _Left)

  00009	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@min
$LN4@min:

; 5429 : 		{
; 5430 : 		_STL_ASSERT(!(_Left < _Right), "invalid comparator");

  00018	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@min
  00027	eb 4a		 jmp	 SHORT $LN6@min
$LN9@min:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 36 15 00 00	 push	 5430			; 00001536H
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@min
  0004f	cc		 int	 3
$LN12@min:
  00050	6a 00		 push	 0
  00052	68 36 15 00 00	 push	 5430			; 00001536H
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@BLAPCBGI@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAi?$AAn@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@min
$LN6@min:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@min

; 5431 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@min
$LN8@min:

; 5432 : 		}
; 5433 : 
; 5434 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@min:

; 5435 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$min@M@std@@YGABMABM0@Z ENDP				; std::min<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?kill_sound_effect@@YGMPAUENTITY@@H@Z
_TEXT	SEGMENT
tv168 = -84						; size = 4
tv131 = -84						; size = 4
tv78 = -84						; size = 4
tv160 = -80						; size = 4
tv150 = -80						; size = 4
tv92 = -80						; size = 4
tv70 = -80						; size = 4
_spec$ = -12						; size = 4
_sound_raw$ = -8					; size = 4
_start_position$ = -4					; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
?kill_sound_effect@@YGMPAUENTITY@@H@Z PROC		; kill_sound_effect, COMDAT

; 1665 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1666 : 	float start_position = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 fc	 movss	 DWORD PTR _start_position$[ebp], xmm0

; 1667 : 	sound_effect* sound_raw;
; 1668 : 	entity* spec = get_local_entity_first_child (en, LIST_TYPE_SPECIAL_EFFECT);

  00011	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	74 0a		 je	 SHORT $LN8@kill_sound
  00017	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	89 4d b0	 mov	 DWORD PTR tv70[ebp], ecx
  0001f	eb 21		 jmp	 SHORT $LN9@kill_sound
$LN8@kill_sound:
  00021	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
  00027	83 c2 03	 add	 edx, 3
  0002a	52		 push	 edx
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003b	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN9@kill_sound:
  00042	b9 01 00 00 00	 mov	 ecx, 1
  00047	85 c9		 test	 ecx, ecx
  00049	74 09		 je	 SHORT $LN10@kill_sound
  0004b	c7 45 ac 24 00
	00 00		 mov	 DWORD PTR tv78[ebp], 36	; 00000024H
  00052	eb 21		 jmp	 SHORT $LN11@kill_sound
$LN10@kill_sound:
  00054	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
  0005a	83 c2 03	 add	 edx, 3
  0005d	52		 push	 edx
  0005e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00063	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN11@kill_sound:
  00075	6a 24		 push	 36			; 00000024H
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0007a	51		 push	 ecx
  0007b	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv70[ebp], 180
  00082	8b 45 ac	 mov	 eax, DWORD PTR tv78[ebp]
  00085	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0008c	ff d1		 call	 ecx
  0008e	89 45 f4	 mov	 DWORD PTR _spec$[ebp], eax
$LN2@kill_sound:

; 1669 : 
; 1670 : 	while (spec)

  00091	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00095	0f 84 70 01 00
	00		 je	 $LN3@kill_sound

; 1671 : 	{
; 1672 : 		if (spec->type == ENTITY_TYPE_SOUND_EFFECT)

  0009b	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  0009e	83 38 20	 cmp	 DWORD PTR [eax], 32	; 00000020H
  000a1	0f 85 df 00 00
	00		 jne	 $LN6@kill_sound

; 1673 : 		{
; 1674 : 			if (get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == type)

  000a7	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  000ab	74 0a		 je	 SHORT $LN12@kill_sound
  000ad	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	89 4d b0	 mov	 DWORD PTR tv92[ebp], ecx
  000b5	eb 1d		 jmp	 SHORT $LN13@kill_sound
$LN12@kill_sound:
  000b7	68 8a 06 00 00	 push	 1674			; 0000068aH
  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c7	52		 push	 edx
  000c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cd	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv92[ebp], 0
$LN13@kill_sound:
  000d4	b8 01 00 00 00	 mov	 eax, 1
  000d9	85 c0		 test	 eax, eax
  000db	74 09		 je	 SHORT $LN14@kill_sound
  000dd	c7 45 ac 34 00
	00 00		 mov	 DWORD PTR tv131[ebp], 52 ; 00000034H
  000e4	eb 1d		 jmp	 SHORT $LN15@kill_sound
$LN14@kill_sound:
  000e6	68 8a 06 00 00	 push	 1674			; 0000068aH
  000eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f6	51		 push	 ecx
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv131[ebp], 0
$LN15@kill_sound:
  00103	6a 34		 push	 52			; 00000034H
  00105	8b 55 f4	 mov	 edx, DWORD PTR _spec$[ebp]
  00108	52		 push	 edx
  00109	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv92[ebp], 1116
  00110	8b 4d ac	 mov	 ecx, DWORD PTR tv131[ebp]
  00113	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0011a	ff d2		 call	 edx
  0011c	3b 45 0c	 cmp	 eax, DWORD PTR _type$[ebp]
  0011f	75 65		 jne	 SHORT $LN6@kill_sound

; 1675 : 			{
; 1676 : 				sound_raw = (sound_effect *) get_local_entity_data (spec);

  00121	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  00124	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00127	89 4d f8	 mov	 DWORD PTR _sound_raw$[ebp], ecx

; 1677 : 
; 1678 : 				if (sound_raw->valid_sound_effect)

  0012a	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  0012d	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00130	c1 e9 08	 shr	 ecx, 8
  00133	83 e1 01	 and	 ecx, 1
  00136	74 4e		 je	 SHORT $LN6@kill_sound

; 1679 : 				{
; 1680 : 					//
; 1681 : 					// <stop type> IS playing
; 1682 : 					//
; 1683 : 
; 1684 : 					start_position = sound_raw->effect_lifetime;

  00138	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  0013b	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00140	f3 0f 11 45 fc	 movss	 DWORD PTR _start_position$[ebp], xmm0

; 1685 : 
; 1686 : 					//
; 1687 : 					// stop it playing
; 1688 : 					//
; 1689 : 
; 1690 : 					kill_local_entity (spec);

  00145	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00149	74 0a		 je	 SHORT $LN16@kill_sound
  0014b	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  0014e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00150	89 4d b0	 mov	 DWORD PTR tv150[ebp], ecx
  00153	eb 21		 jmp	 SHORT $LN17@kill_sound
$LN16@kill_sound:
  00155	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
  0015b	83 c2 19	 add	 edx, 25			; 00000019H
  0015e	52		 push	 edx
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00169	50		 push	 eax
  0016a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0016f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN17@kill_sound:
  00176	8b 4d f4	 mov	 ecx, DWORD PTR _spec$[ebp]
  00179	51		 push	 ecx
  0017a	8b 55 b0	 mov	 edx, DWORD PTR tv150[ebp]
  0017d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_kill_local_entity@@3PAP6GXPAUENTITY@@@ZA[edx*4]
  00184	ff d0		 call	 eax
$LN6@kill_sound:

; 1691 : 				}
; 1692 : 			}
; 1693 : 		}
; 1694 : 
; 1695 : 		spec = get_local_entity_child_succ (spec, LIST_TYPE_SPECIAL_EFFECT);

  00186	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0018a	74 0a		 je	 SHORT $LN18@kill_sound
  0018c	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  0018f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00191	89 4d b0	 mov	 DWORD PTR tv160[ebp], ecx
  00194	eb 21		 jmp	 SHORT $LN19@kill_sound
$LN18@kill_sound:
  00196	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
  0019c	83 c2 1e	 add	 edx, 30			; 0000001eH
  0019f	52		 push	 edx
  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001b0	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv160[ebp], 0
$LN19@kill_sound:
  001b7	b9 01 00 00 00	 mov	 ecx, 1
  001bc	85 c9		 test	 ecx, ecx
  001be	74 09		 je	 SHORT $LN20@kill_sound
  001c0	c7 45 ac 24 00
	00 00		 mov	 DWORD PTR tv168[ebp], 36 ; 00000024H
  001c7	eb 21		 jmp	 SHORT $LN21@kill_sound
$LN20@kill_sound:
  001c9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_sound_effect@@YGMPAUENTITY@@H@Z@4JA
  001cf	83 c2 1e	 add	 edx, 30			; 0000001eH
  001d2	52		 push	 edx
  001d3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001dd	50		 push	 eax
  001de	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv168[ebp], 0
$LN21@kill_sound:
  001ea	6a 24		 push	 36			; 00000024H
  001ec	8b 4d f4	 mov	 ecx, DWORD PTR _spec$[ebp]
  001ef	51		 push	 ecx
  001f0	69 55 b0 b4 00
	00 00		 imul	 edx, DWORD PTR tv160[ebp], 180
  001f7	8b 45 ac	 mov	 eax, DWORD PTR tv168[ebp]
  001fa	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00201	ff d1		 call	 ecx
  00203	89 45 f4	 mov	 DWORD PTR _spec$[ebp], eax

; 1696 : 	}

  00206	e9 86 fe ff ff	 jmp	 $LN2@kill_sound
$LN3@kill_sound:

; 1697 : 
; 1698 : 	return start_position;

  0020b	d9 45 fc	 fld	 DWORD PTR _start_position$[ebp]

; 1699 : }

  0020e	5f		 pop	 edi
  0020f	5e		 pop	 esi
  00210	5b		 pop	 ebx
  00211	8b e5		 mov	 esp, ebp
  00213	5d		 pop	 ebp
  00214	c2 08 00	 ret	 8
?kill_sound_effect@@YGMPAUENTITY@@H@Z ENDP		; kill_sound_effect
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_locality$ = 12						; size = 4
_looping_effect$ = 16					; size = 4
_wind_up_effect$ = 20					; size = 4
_wind_down_effect$ = 24					; size = 4
_turbine_effect$ = 28					; size = 4
_rotorslap_effect$ = 32					; size = 4
?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z PROC ; create_specified_helicopter_rotor_sound_effects, COMDAT

; 1249 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1250 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@create_spe
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_spe:

; 1251 : 
; 1252 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN3@create_spe
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA
  00035	83 c0 03	 add	 eax, 3
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@create_spe:

; 1253 : 
; 1254 : 	//
; 1255 : 	// looping
; 1256 : 	//
; 1257 : 
; 1258 : 	ASSERT (looping_effect != SOUND_SAMPLE_INDEX_NONE);

  00048	83 7d 10 00	 cmp	 DWORD PTR _looping_effect$[ebp], 0
  0004c	75 18		 jne	 SHORT $LN4@create_spe
  0004e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z@4JA
  00053	83 c0 09	 add	 eax, 9
  00056	50		 push	 eax
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@MDMNBKPK@looping_effect?5?$CB?$DN?5SOUND_SAMPLE_@
  00061	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@create_spe:

; 1259 : 
; 1260 : 	create_client_server_sound_effect_entity

  00066	8d 45 10	 lea	 eax, DWORD PTR _looping_effect$[ebp]
  00069	50		 push	 eax
  0006a	6a 01		 push	 1
  0006c	6a 01		 push	 1
  0006e	6a 00		 push	 0
  00070	51		 push	 ecx
  00071	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00079	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007e	51		 push	 ecx
  0007f	0f 57 c0	 xorps	 xmm0, xmm0
  00082	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00087	6a 00		 push	 0
  00089	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  0008c	51		 push	 ecx
  0008d	6a 00		 push	 0
  0008f	6a 1f		 push	 31			; 0000001fH
  00091	6a 00		 push	 0
  00093	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00096	52		 push	 edx
  00097	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity

; 1261 : 	(
; 1262 : 		en,
; 1263 : 		ENTITY_SIDE_NEUTRAL,
; 1264 : 		ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING,
; 1265 : 		SOUND_CHANNEL_SOUND_EFFECT,
; 1266 : 		locality,
; 1267 : 		NULL,												// position
; 1268 : 		0.0,												// amplification
; 1269 : 		1.0,												// Werewolf pitch
; 1270 : 		FALSE,											// valid sound effect
; 1271 : 		TRUE,												// looping
; 1272 : 		1,													// sample count
; 1273 : 		&looping_effect								// sample index list
; 1274 : 	);
; 1275 : 
; 1276 : 	// Werewolf:
; 1277 : 	// Turbine noise
; 1278 : 	//
; 1279 : 
; 1280 : 	if (turbine_effect != SOUND_SAMPLE_INDEX_NONE)

  0009c	83 7d 1c 00	 cmp	 DWORD PTR _turbine_effect$[ebp], 0
  000a0	0f 84 a2 00 00
	00		 je	 $LN5@create_spe

; 1281 : 	{
; 1282 : 		create_client_server_sound_effect_entity

  000a6	8d 45 1c	 lea	 eax, DWORD PTR _turbine_effect$[ebp]
  000a9	50		 push	 eax
  000aa	6a 01		 push	 1
  000ac	6a 01		 push	 1
  000ae	6a 00		 push	 0
  000b0	51		 push	 ecx
  000b1	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000be	51		 push	 ecx
  000bf	0f 57 c0	 xorps	 xmm0, xmm0
  000c2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c7	6a 00		 push	 0
  000c9	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  000cc	51		 push	 ecx
  000cd	6a 00		 push	 0
  000cf	6a 21		 push	 33			; 00000021H
  000d1	6a 00		 push	 0
  000d3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000d6	52		 push	 edx
  000d7	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity

; 1283 : 		(
; 1284 : 			en,
; 1285 : 			ENTITY_SIDE_NEUTRAL,
; 1286 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE1,
; 1287 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1288 : 			locality,
; 1289 : 			NULL,												// position
; 1290 : 			0.0,												// amplification
; 1291 : 			1.0,												// Werewolf pitch
; 1292 : 			FALSE,											// valid sound effect
; 1293 : 			TRUE,												// looping
; 1294 : 			1,													// sample count
; 1295 : 			&turbine_effect								// sample index list
; 1296 : 		);
; 1297 : 
; 1298 : 		create_client_server_sound_effect_entity

  000dc	8d 45 1c	 lea	 eax, DWORD PTR _turbine_effect$[ebp]
  000df	50		 push	 eax
  000e0	6a 01		 push	 1
  000e2	6a 01		 push	 1
  000e4	6a 00		 push	 0
  000e6	51		 push	 ecx
  000e7	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f4	51		 push	 ecx
  000f5	0f 57 c0	 xorps	 xmm0, xmm0
  000f8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fd	6a 00		 push	 0
  000ff	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  00102	51		 push	 ecx
  00103	6a 00		 push	 0
  00105	6a 22		 push	 34			; 00000022H
  00107	6a 00		 push	 0
  00109	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0010c	52		 push	 edx
  0010d	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity

; 1299 : 		(
; 1300 : 			en,
; 1301 : 			ENTITY_SIDE_NEUTRAL,
; 1302 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2,
; 1303 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1304 : 			locality,
; 1305 : 			NULL,												// position
; 1306 : 			0.0,												// amplification
; 1307 : 			1.0,												// Werewolf pitch
; 1308 : 			FALSE,											// valid sound effect
; 1309 : 			TRUE,												// looping
; 1310 : 			1,													// sample count
; 1311 : 			&turbine_effect								// sample index list
; 1312 : 		);
; 1313 : 
; 1314 : 		create_client_server_sound_effect_entity

  00112	8d 45 1c	 lea	 eax, DWORD PTR _turbine_effect$[ebp]
  00115	50		 push	 eax
  00116	6a 01		 push	 1
  00118	6a 01		 push	 1
  0011a	6a 00		 push	 0
  0011c	51		 push	 ecx
  0011d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00125	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012a	51		 push	 ecx
  0012b	0f 57 c0	 xorps	 xmm0, xmm0
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	6a 00		 push	 0
  00135	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  00138	51		 push	 ecx
  00139	6a 00		 push	 0
  0013b	6a 20		 push	 32			; 00000020H
  0013d	6a 00		 push	 0
  0013f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00142	52		 push	 edx
  00143	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN5@create_spe:

; 1315 : 		(
; 1316 : 			en,
; 1317 : 			ENTITY_SIDE_NEUTRAL,
; 1318 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_APU_TURBINE,
; 1319 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1320 : 			locality,
; 1321 : 			NULL,												// position
; 1322 : 			0.0,												// amplification
; 1323 : 			1.0,												// Werewolf pitch
; 1324 : 			FALSE,											// valid sound effect
; 1325 : 			TRUE,												// looping
; 1326 : 			1,													// sample count
; 1327 : 			&turbine_effect								// sample index list
; 1328 : 		);
; 1329 : 	}
; 1330 : 
; 1331 : 	// Werewolf:
; 1332 : 	// Rotorslap
; 1333 : 	//
; 1334 : 
; 1335 : 	if (rotorslap_effect != SOUND_SAMPLE_INDEX_NONE)

  00148	83 7d 20 00	 cmp	 DWORD PTR _rotorslap_effect$[ebp], 0
  0014c	74 36		 je	 SHORT $LN6@create_spe

; 1336 : 	create_client_server_sound_effect_entity

  0014e	8d 45 20	 lea	 eax, DWORD PTR _rotorslap_effect$[ebp]
  00151	50		 push	 eax
  00152	6a 01		 push	 1
  00154	6a 01		 push	 1
  00156	6a 00		 push	 0
  00158	51		 push	 ecx
  00159	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00161	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00166	51		 push	 ecx
  00167	0f 57 c0	 xorps	 xmm0, xmm0
  0016a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016f	6a 00		 push	 0
  00171	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  00174	51		 push	 ecx
  00175	6a 00		 push	 0
  00177	6a 23		 push	 35			; 00000023H
  00179	6a 00		 push	 0
  0017b	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0017e	52		 push	 edx
  0017f	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN6@create_spe:

; 1337 : 	(
; 1338 : 		en,
; 1339 : 		ENTITY_SIDE_NEUTRAL,
; 1340 : 		ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_SLAP,
; 1341 : 		SOUND_CHANNEL_SOUND_EFFECT,
; 1342 : 		locality,
; 1343 : 		NULL,												// position
; 1344 : 		0.0,												// amplification
; 1345 : 		1.0,												// Werewolf pitch
; 1346 : 		FALSE,											// valid sound effect
; 1347 : 		TRUE,												// looping
; 1348 : 		1,													// sample count
; 1349 : 		&rotorslap_effect								// sample index list
; 1350 : 	);
; 1351 : 
; 1352 : 	//
; 1353 : 	// wind up
; 1354 : 	//
; 1355 : 
; 1356 : 	if (wind_up_effect != SOUND_SAMPLE_INDEX_NONE)

  00184	83 7d 14 00	 cmp	 DWORD PTR _wind_up_effect$[ebp], 0
  00188	74 6c		 je	 SHORT $LN7@create_spe

; 1357 : 	{
; 1358 : 		create_client_server_sound_effect_entity

  0018a	8d 45 14	 lea	 eax, DWORD PTR _wind_up_effect$[ebp]
  0018d	50		 push	 eax
  0018e	6a 01		 push	 1
  00190	6a 00		 push	 0
  00192	6a 00		 push	 0
  00194	51		 push	 ecx
  00195	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0019d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a2	51		 push	 ecx
  001a3	0f 57 c0	 xorps	 xmm0, xmm0
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	6a 00		 push	 0
  001ad	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  001b0	51		 push	 ecx
  001b1	6a 00		 push	 0
  001b3	6a 26		 push	 38			; 00000026H
  001b5	6a 00		 push	 0
  001b7	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001ba	52		 push	 edx
  001bb	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity

; 1359 : 		(
; 1360 : 			en,
; 1361 : 			ENTITY_SIDE_NEUTRAL,
; 1362 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP1,
; 1363 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1364 : 			locality,
; 1365 : 			NULL,												// position
; 1366 : 			0.0,												// amplification
; 1367 : 			1.0,												// Werewolf pitch
; 1368 : 			FALSE,											// valid sound effect
; 1369 : 			FALSE,											// looping
; 1370 : 			1,													// sample count
; 1371 : 			&wind_up_effect								// sample index list
; 1372 : 		);
; 1373 : 
; 1374 : 		create_client_server_sound_effect_entity

  001c0	8d 45 14	 lea	 eax, DWORD PTR _wind_up_effect$[ebp]
  001c3	50		 push	 eax
  001c4	6a 01		 push	 1
  001c6	6a 00		 push	 0
  001c8	6a 00		 push	 0
  001ca	51		 push	 ecx
  001cb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  001d3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d8	51		 push	 ecx
  001d9	0f 57 c0	 xorps	 xmm0, xmm0
  001dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e1	6a 00		 push	 0
  001e3	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  001e6	51		 push	 ecx
  001e7	6a 00		 push	 0
  001e9	6a 27		 push	 39			; 00000027H
  001eb	6a 00		 push	 0
  001ed	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001f0	52		 push	 edx
  001f1	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN7@create_spe:

; 1375 : 		(
; 1376 : 			en,
; 1377 : 			ENTITY_SIDE_NEUTRAL,
; 1378 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP2,
; 1379 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1380 : 			locality,
; 1381 : 			NULL,												// position
; 1382 : 			0.0,												// amplification
; 1383 : 			1.0,												// Werewolf pitch
; 1384 : 			FALSE,											// valid sound effect
; 1385 : 			FALSE,											// looping
; 1386 : 			1,													// sample count
; 1387 : 			&wind_up_effect								// sample index list
; 1388 : 		);
; 1389 : 	}
; 1390 : 
; 1391 : 	//
; 1392 : 	// wind down
; 1393 : 	//
; 1394 : 
; 1395 : 	if (wind_down_effect != SOUND_SAMPLE_INDEX_NONE)

  001f6	83 7d 18 00	 cmp	 DWORD PTR _wind_down_effect$[ebp], 0
  001fa	74 6c		 je	 SHORT $LN8@create_spe

; 1396 : 	{
; 1397 : 		create_client_server_sound_effect_entity

  001fc	8d 45 18	 lea	 eax, DWORD PTR _wind_down_effect$[ebp]
  001ff	50		 push	 eax
  00200	6a 01		 push	 1
  00202	6a 00		 push	 0
  00204	6a 00		 push	 0
  00206	51		 push	 ecx
  00207	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0020f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00214	51		 push	 ecx
  00215	0f 57 c0	 xorps	 xmm0, xmm0
  00218	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0021d	6a 00		 push	 0
  0021f	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  00222	51		 push	 ecx
  00223	6a 00		 push	 0
  00225	6a 24		 push	 36			; 00000024H
  00227	6a 00		 push	 0
  00229	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0022c	52		 push	 edx
  0022d	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity

; 1398 : 		(
; 1399 : 			en,
; 1400 : 			ENTITY_SIDE_NEUTRAL,
; 1401 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN1,
; 1402 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1403 : 			locality,
; 1404 : 			NULL,												// position
; 1405 : 			0.0,												// amplification
; 1406 : 			1.0,												// Werewolf pitch
; 1407 : 			FALSE,											// valid sound effect
; 1408 : 			FALSE,											// looping
; 1409 : 			1,													// sample count
; 1410 : 			&wind_down_effect								// sample index list
; 1411 : 		);
; 1412 : 
; 1413 : 		create_client_server_sound_effect_entity

  00232	8d 45 18	 lea	 eax, DWORD PTR _wind_down_effect$[ebp]
  00235	50		 push	 eax
  00236	6a 01		 push	 1
  00238	6a 00		 push	 0
  0023a	6a 00		 push	 0
  0023c	51		 push	 ecx
  0023d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00245	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0024a	51		 push	 ecx
  0024b	0f 57 c0	 xorps	 xmm0, xmm0
  0024e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00253	6a 00		 push	 0
  00255	8b 4d 0c	 mov	 ecx, DWORD PTR _locality$[ebp]
  00258	51		 push	 ecx
  00259	6a 00		 push	 0
  0025b	6a 25		 push	 37			; 00000025H
  0025d	6a 00		 push	 0
  0025f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00262	52		 push	 edx
  00263	e8 00 00 00 00	 call	 ?create_client_server_sound_effect_entity@@YGPAUENTITY@@PAU1@W4ENTITY_SIDES@@HW4SOUND_CHANNEL_TYPES@@W4SOUND_LOCALITY_TYPES@@PAUVEC3D@@MMHHHPAH@Z ; create_client_server_sound_effect_entity
$LN8@create_spe:

; 1414 : 		(
; 1415 : 			en,
; 1416 : 			ENTITY_SIDE_NEUTRAL,
; 1417 : 			ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN2,
; 1418 : 			SOUND_CHANNEL_SOUND_EFFECT,
; 1419 : 			locality,
; 1420 : 			NULL,												// position
; 1421 : 			0.0,												// amplification
; 1422 : 			1.0,												// Werewolf pitch
; 1423 : 			FALSE,											// valid sound effect
; 1424 : 			FALSE,											// looping
; 1425 : 			1,													// sample count
; 1426 : 			&wind_down_effect								// sample index list
; 1427 : 		);
; 1428 : 	}
; 1429 : }

  00268	5f		 pop	 edi
  00269	5e		 pop	 esi
  0026a	5b		 pop	 ebx
  0026b	8b e5		 mov	 esp, ebp
  0026d	5d		 pop	 ebp
  0026e	c2 1c 00	 ret	 28			; 0000001cH
?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ENDP ; create_specified_helicopter_rotor_sound_effects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?player_mission_logged@@YGHXZ
_TEXT	SEGMENT
?player_mission_logged@@YGHXZ PROC			; player_mission_logged, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 103  : 	return mission_logged;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mission_logged@@3HA

; 104  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?player_mission_logged@@YGHXZ ENDP			; player_mission_logged
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv597 = -184						; size = 4
tv583 = -184						; size = 4
tv162 = -184						; size = 4
tv743 = -180						; size = 4
tv741 = -180						; size = 4
tv417 = -180						; size = 4
tv387 = -180						; size = 4
tv350 = -180						; size = 4
tv320 = -180						; size = 4
tv281 = -180						; size = 4
tv234 = -180						; size = 4
tv214 = -180						; size = 4
tv177 = -180						; size = 4
tv156 = -180						; size = 4
tv135 = -180						; size = 4
tv78 = -180						; size = 4
tv590 = -176						; size = 4
tv576 = -176						; size = 4
tv409 = -176						; size = 4
tv379 = -176						; size = 4
tv342 = -176						; size = 4
tv312 = -176						; size = 4
tv273 = -176						; size = 4
tv226 = -176						; size = 4
tv206 = -176						; size = 4
tv194 = -176						; size = 4
tv169 = -176						; size = 4
tv149 = -176						; size = 4
tv95 = -176						; size = 4
tv70 = -176						; size = 4
$T1 = -172						; size = 4
$T2 = -168						; size = 4
$T3 = -164						; size = 4
$T4 = -160						; size = 4
$T5 = -156						; size = 4
$T6 = -152						; size = 4
$T7 = -148						; size = 4
$T8 = -144						; size = 4
$T9 = -140						; size = 4
$T10 = -136						; size = 4
$T11 = -132						; size = 4
$T12 = -128						; size = 4
_ship$13 = -60						; size = 4
_heading$14 = -56					; size = 4
_zmax$15 = -52						; size = 4
_zmin$16 = -48						; size = 4
_xmax$17 = -44						; size = 4
_xmin$18 = -40						; size = 4
_bounding_box$19 = -36					; size = 4
_keysite_pos$20 = -32					; size = 4
_position$21 = -28					; size = 12
_inst3d$22 = -16					; size = 4
_keysite$ = -12						; size = 4
_actual_range$ = -8					; size = 4
_hc_position$ = -4					; size = 4
_en$ = 8						; size = 4
?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z PROC	; helicopter_within_keysite_area, COMDAT

; 2152 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2153 : 
; 2154 : 	vec3d
; 2155 : 		*hc_position;
; 2156 : 
; 2157 : 	float
; 2158 : 		actual_range;
; 2159 : 
; 2160 : 	entity
; 2161 : 		*keysite;
; 2162 : 
; 2163 : 	hc_position = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	74 0d		 je	 SHORT $LN12@helicopter
  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	8b 08		 mov	 ecx, DWORD PTR [eax]
  00017	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv70[ebp], ecx
  0001d	eb 24		 jmp	 SHORT $LN13@helicopter
$LN12@helicopter:
  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00025	83 c2 0b	 add	 edx, 11			; 0000000bH
  00028	52		 push	 edx
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0002e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00039	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv70[ebp], 0
$LN13@helicopter:
  00043	b9 01 00 00 00	 mov	 ecx, 1
  00048	85 c9		 test	 ecx, ecx
  0004a	74 0c		 je	 SHORT $LN14@helicopter
  0004c	c7 85 4c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv78[ebp], 8
  00056	eb 24		 jmp	 SHORT $LN15@helicopter
$LN14@helicopter:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  0005e	83 c2 0b	 add	 edx, 11			; 0000000bH
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv78[ebp], 0
$LN15@helicopter:
  0007c	6a 08		 push	 8
  0007e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00081	51		 push	 ecx
  00082	6b 95 50 ff ff
	ff 60		 imul	 edx, DWORD PTR tv70[ebp], 96
  00089	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv78[ebp]
  0008f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00096	ff d1		 call	 ecx
  00098	89 45 fc	 mov	 DWORD PTR _hc_position$[ebp], eax

; 2164 : 
; 2165 : 	keysite = get_closest_keysite (NUM_ENTITY_SUB_TYPE_KEYSITES, (entity_sides) get_local_entity_int_value (en, INT_TYPE_SIDE), hc_position, 5 * KILOMETRE, &actual_range, NULL);

  0009b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0009f	74 0d		 je	 SHORT $LN16@helicopter
  000a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv95[ebp], ecx
  000ac	eb 24		 jmp	 SHORT $LN17@helicopter
$LN16@helicopter:
  000ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  000b4	83 c2 0d	 add	 edx, 13			; 0000000dH
  000b7	52		 push	 edx
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000c8	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv95[ebp], 0
$LN17@helicopter:
  000d2	b9 01 00 00 00	 mov	 ecx, 1
  000d7	85 c9		 test	 ecx, ecx
  000d9	74 0c		 je	 SHORT $LN18@helicopter
  000db	c7 85 4c ff ff
	ff bb 00 00 00	 mov	 DWORD PTR tv135[ebp], 187 ; 000000bbH
  000e5	eb 24		 jmp	 SHORT $LN19@helicopter
$LN18@helicopter:
  000e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  000ed	83 c2 0d	 add	 edx, 13			; 0000000dH
  000f0	52		 push	 edx
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00101	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv135[ebp], 0
$LN19@helicopter:
  0010b	6a 00		 push	 0
  0010d	8d 4d f8	 lea	 ecx, DWORD PTR _actual_range$[ebp]
  00110	51		 push	 ecx
  00111	51		 push	 ecx
  00112	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@459c4000
  0011a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011f	8b 55 fc	 mov	 edx, DWORD PTR _hc_position$[ebp]
  00122	52		 push	 edx
  00123	68 bb 00 00 00	 push	 187			; 000000bbH
  00128	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0012b	50		 push	 eax
  0012c	69 8d 50 ff ff
	ff 5c 04 00 00	 imul	 ecx, DWORD PTR tv95[ebp], 1116
  00136	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv135[ebp]
  0013c	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[ecx+edx*4]
  00143	ff d0		 call	 eax
  00145	50		 push	 eax
  00146	6a 09		 push	 9
  00148	e8 00 00 00 00	 call	 ?get_closest_keysite@@YGPAUENTITY@@HW4ENTITY_SIDES@@PAUVEC3D@@MPAMPAU1@@Z ; get_closest_keysite
  0014d	89 45 f4	 mov	 DWORD PTR _keysite$[ebp], eax

; 2166 : 
; 2167 : 	if (keysite)

  00150	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00154	0f 84 ba 09 00
	00		 je	 $LN10@helicopter

; 2168 : 	{
; 2169 : 
; 2170 : 		object_3d_instance
; 2171 : 			*inst3d;
; 2172 : 
; 2173 : 		vec3d
; 2174 : 			position,
; 2175 : 			*keysite_pos;
; 2176 : 
; 2177 : 		struct OBJECT_3D_BOUNDS
; 2178 : 			*bounding_box;
; 2179 : 
; 2180 : 		float
; 2181 : 			xmin,
; 2182 : 			xmax,
; 2183 : 			zmin,
; 2184 : 			zmax;
; 2185 : 
; 2186 : //		debug_log ("DYNAMICS: landed close to keysite %s (range %f)", get_local_entity_string (keysite, STRING_TYPE_KEYSITE_NAME), actual_range);
; 2187 : 
; 2188 : 		xmin = 0.0;

  0015a	0f 57 c0	 xorps	 xmm0, xmm0
  0015d	f3 0f 11 45 d8	 movss	 DWORD PTR _xmin$18[ebp], xmm0

; 2189 : 		xmax = 0.0;

  00162	0f 57 c0	 xorps	 xmm0, xmm0
  00165	f3 0f 11 45 d4	 movss	 DWORD PTR _xmax$17[ebp], xmm0

; 2190 : 		zmin = 0.0;

  0016a	0f 57 c0	 xorps	 xmm0, xmm0
  0016d	f3 0f 11 45 d0	 movss	 DWORD PTR _zmin$16[ebp], xmm0

; 2191 : 		zmax = 0.0;

  00172	0f 57 c0	 xorps	 xmm0, xmm0
  00175	f3 0f 11 45 cc	 movss	 DWORD PTR _zmax$15[ebp], xmm0

; 2192 : 
; 2193 : 		switch (get_local_entity_int_value (keysite, INT_TYPE_ENTITY_SUB_TYPE))

  0017a	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0017e	74 0d		 je	 SHORT $LN20@helicopter
  00180	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  00183	8b 08		 mov	 ecx, DWORD PTR [eax]
  00185	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv149[ebp], ecx
  0018b	eb 20		 jmp	 SHORT $LN21@helicopter
$LN20@helicopter:
  0018d	68 91 08 00 00	 push	 2193			; 00000891H
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019d	52		 push	 edx
  0019e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a3	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv149[ebp], 0
$LN21@helicopter:
  001ad	b8 01 00 00 00	 mov	 eax, 1
  001b2	85 c0		 test	 eax, eax
  001b4	74 0c		 je	 SHORT $LN22@helicopter
  001b6	c7 85 4c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv156[ebp], 52 ; 00000034H
  001c0	eb 20		 jmp	 SHORT $LN23@helicopter
$LN22@helicopter:
  001c2	68 91 08 00 00	 push	 2193			; 00000891H
  001c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d2	51		 push	 ecx
  001d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d8	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv156[ebp], 0
$LN23@helicopter:
  001e2	6a 34		 push	 52			; 00000034H
  001e4	8b 55 f4	 mov	 edx, DWORD PTR _keysite$[ebp]
  001e7	52		 push	 edx
  001e8	69 85 50 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv149[ebp], 1116
  001f2	8b 8d 4c ff ff
	ff		 mov	 ecx, DWORD PTR tv156[ebp]
  001f8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001ff	ff d2		 call	 edx
  00201	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv162[ebp], eax
  00207	83 bd 48 ff ff
	ff 01		 cmp	 DWORD PTR tv162[ebp], 1
  0020e	74 12		 je	 SHORT $LN5@helicopter
  00210	83 bd 48 ff ff
	ff 03		 cmp	 DWORD PTR tv162[ebp], 3
  00217	0f 84 97 04 00
	00		 je	 $LN8@helicopter
  0021d	e9 ab 06 00 00	 jmp	 $LN9@helicopter
$LN5@helicopter:

; 2194 : 		{
; 2195 : 
; 2196 : 			case ENTITY_SUB_TYPE_KEYSITE_ANCHORAGE:
; 2197 : 			{
; 2198 : 
; 2199 : 				float
; 2200 : 					heading = 0.0;

  00222	0f 57 c0	 xorps	 xmm0, xmm0
  00225	f3 0f 11 45 c8	 movss	 DWORD PTR _heading$14[ebp], xmm0

; 2201 : 
; 2202 : 				entity
; 2203 : 					*ship;
; 2204 : 
; 2205 : 				ship = get_local_entity_parent (keysite, LIST_TYPE_MOVEMENT_DEPENDENT);

  0022a	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0022e	74 0d		 je	 SHORT $LN24@helicopter
  00230	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  00233	8b 08		 mov	 ecx, DWORD PTR [eax]
  00235	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv169[ebp], ecx
  0023b	eb 24		 jmp	 SHORT $LN25@helicopter
$LN24@helicopter:
  0023d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00243	83 c2 35	 add	 edx, 53			; 00000035H
  00246	52		 push	 edx
  00247	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0024c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00257	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv169[ebp], 0
$LN25@helicopter:
  00261	b9 01 00 00 00	 mov	 ecx, 1
  00266	85 c9		 test	 ecx, ecx
  00268	74 0c		 je	 SHORT $LN26@helicopter
  0026a	c7 85 4c ff ff
	ff 1a 00 00 00	 mov	 DWORD PTR tv177[ebp], 26 ; 0000001aH
  00274	eb 24		 jmp	 SHORT $LN27@helicopter
$LN26@helicopter:
  00276	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  0027c	83 c2 35	 add	 edx, 53			; 00000035H
  0027f	52		 push	 edx
  00280	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00285	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00290	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv177[ebp], 0
$LN27@helicopter:
  0029a	6a 1a		 push	 26			; 0000001aH
  0029c	8b 4d f4	 mov	 ecx, DWORD PTR _keysite$[ebp]
  0029f	51		 push	 ecx
  002a0	69 95 50 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv169[ebp], 180
  002aa	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv177[ebp]
  002b0	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  002b7	ff d1		 call	 ecx
  002b9	89 45 c4	 mov	 DWORD PTR _ship$13[ebp], eax

; 2206 : 
; 2207 : 				ASSERT (ship);

  002bc	83 7d c4 00	 cmp	 DWORD PTR _ship$13[ebp], 0
  002c0	75 18		 jne	 SHORT $LN6@helicopter
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  002c7	83 c0 37	 add	 eax, 55			; 00000037H
  002ca	50		 push	 eax
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d0	68 00 00 00 00	 push	 OFFSET ??_C@_04BBAEMEEI@ship@
  002d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@helicopter:

; 2208 : 				ASSERT (get_local_entity_type (ship) == ENTITY_TYPE_SHIP_VEHICLE);

  002da	83 7d c4 00	 cmp	 DWORD PTR _ship$13[ebp], 0
  002de	74 0d		 je	 SHORT $LN28@helicopter
  002e0	8b 45 c4	 mov	 eax, DWORD PTR _ship$13[ebp]
  002e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e5	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv194[ebp], ecx
  002eb	eb 24		 jmp	 SHORT $LN29@helicopter
$LN28@helicopter:
  002ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  002f3	83 c2 38	 add	 edx, 56			; 00000038H
  002f6	52		 push	 edx
  002f7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00307	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv194[ebp], 0
$LN29@helicopter:
  00311	83 bd 50 ff ff
	ff 1c		 cmp	 DWORD PTR tv194[ebp], 28 ; 0000001cH
  00318	74 18		 je	 SHORT $LN7@helicopter
  0031a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  0031f	83 c0 38	 add	 eax, 56			; 00000038H
  00322	50		 push	 eax
  00323	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00328	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@DHMFCPLI@get_local_entity_type?5?$CIship?$CJ?5?$DN?$DN@
  0032d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@helicopter:

; 2209 : 
; 2210 : 				heading = get_local_entity_float_value (ship, FLOAT_TYPE_HEADING);

  00332	83 7d c4 00	 cmp	 DWORD PTR _ship$13[ebp], 0
  00336	74 0d		 je	 SHORT $LN30@helicopter
  00338	8b 45 c4	 mov	 eax, DWORD PTR _ship$13[ebp]
  0033b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033d	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv206[ebp], ecx
  00343	eb 24		 jmp	 SHORT $LN31@helicopter
$LN30@helicopter:
  00345	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  0034b	83 c2 3a	 add	 edx, 58			; 0000003aH
  0034e	52		 push	 edx
  0034f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00354	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00359	50		 push	 eax
  0035a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0035f	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv206[ebp], 0
$LN31@helicopter:
  00369	b9 01 00 00 00	 mov	 ecx, 1
  0036e	85 c9		 test	 ecx, ecx
  00370	74 0c		 je	 SHORT $LN32@helicopter
  00372	c7 85 4c ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv214[ebp], 52 ; 00000034H
  0037c	eb 24		 jmp	 SHORT $LN33@helicopter
$LN32@helicopter:
  0037e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00384	83 c2 3a	 add	 edx, 58			; 0000003aH
  00387	52		 push	 edx
  00388	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00398	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv214[ebp], 0
$LN33@helicopter:
  003a2	6a 34		 push	 52			; 00000034H
  003a4	8b 4d c4	 mov	 ecx, DWORD PTR _ship$13[ebp]
  003a7	51		 push	 ecx
  003a8	69 95 50 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv206[ebp], 700
  003b2	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv214[ebp]
  003b8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  003bf	ff d1		 call	 ecx
  003c1	d9 5d c8	 fstp	 DWORD PTR _heading$14[ebp]

; 2211 : 
; 2212 : 				//
; 2213 : 				// rotate model position into 'keysite space'
; 2214 : 				//
; 2215 : 
; 2216 : 				keysite_pos = get_local_entity_vec3d_ptr (ship, VEC3D_TYPE_POSITION);

  003c4	83 7d c4 00	 cmp	 DWORD PTR _ship$13[ebp], 0
  003c8	74 0d		 je	 SHORT $LN34@helicopter
  003ca	8b 45 c4	 mov	 eax, DWORD PTR _ship$13[ebp]
  003cd	8b 08		 mov	 ecx, DWORD PTR [eax]
  003cf	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv226[ebp], ecx
  003d5	eb 24		 jmp	 SHORT $LN35@helicopter
$LN34@helicopter:
  003d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  003dd	83 c2 40	 add	 edx, 64			; 00000040H
  003e0	52		 push	 edx
  003e1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f1	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv226[ebp], 0
$LN35@helicopter:
  003fb	b9 01 00 00 00	 mov	 ecx, 1
  00400	85 c9		 test	 ecx, ecx
  00402	74 0c		 je	 SHORT $LN36@helicopter
  00404	c7 85 4c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv234[ebp], 8
  0040e	eb 24		 jmp	 SHORT $LN37@helicopter
$LN36@helicopter:
  00410	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00416	83 c2 40	 add	 edx, 64			; 00000040H
  00419	52		 push	 edx
  0041a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0041f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00424	50		 push	 eax
  00425	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0042a	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv234[ebp], 0
$LN37@helicopter:
  00434	6a 08		 push	 8
  00436	8b 4d c4	 mov	 ecx, DWORD PTR _ship$13[ebp]
  00439	51		 push	 ecx
  0043a	6b 95 50 ff ff
	ff 60		 imul	 edx, DWORD PTR tv226[ebp], 96
  00441	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv234[ebp]
  00447	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0044e	ff d1		 call	 ecx
  00450	89 45 e0	 mov	 DWORD PTR _keysite_pos$20[ebp], eax

; 2217 : 
; 2218 : 				position.x = hc_position->x - keysite_pos->x;

  00453	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00456	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00459	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0045d	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00461	f3 0f 11 45 e4	 movss	 DWORD PTR _position$21[ebp], xmm0

; 2219 : 				position.y = hc_position->y - keysite_pos->y;

  00466	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00469	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  0046c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00471	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00476	f3 0f 11 45 e8	 movss	 DWORD PTR _position$21[ebp+4], xmm0

; 2220 : 				position.z = hc_position->z - keysite_pos->z;

  0047b	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  0047e	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00481	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00486	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0048b	f3 0f 11 45 ec	 movss	 DWORD PTR _position$21[ebp+8], xmm0

; 2221 : 
; 2222 : 				position.x = position.x * cos (-heading) + position.z * sin (-heading);

  00490	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _heading$14[ebp]
  00495	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0049c	51		 push	 ecx
  0049d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a2	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  004a7	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR tv576[ebp]
  004ad	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv576[ebp]
  004b5	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _position$21[ebp]
  004ba	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _heading$14[ebp]
  004bf	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  004c6	51		 push	 ecx
  004c7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  004cc	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv741[ebp], xmm0
  004d4	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  004d9	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv583[ebp]
  004df	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv583[ebp]
  004e7	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _position$21[ebp+8]
  004ec	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR tv741[ebp]
  004f4	f3 0f 58 c8	 addss	 xmm1, xmm0
  004f8	f3 0f 11 4d e4	 movss	 DWORD PTR _position$21[ebp], xmm1

; 2223 : 				position.z = position.z * cos (-heading) - position.x * sin (-heading);

  004fd	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _heading$14[ebp]
  00502	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  00509	51		 push	 ecx
  0050a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0050f	e8 00 00 00 00	 call	 ?cos@@YGMM@Z		; cos
  00514	d9 9d 50 ff ff
	ff		 fstp	 DWORD PTR tv590[ebp]
  0051a	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR tv590[ebp]
  00522	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _position$21[ebp+8]
  00527	f3 0f 10 4d c8	 movss	 xmm1, DWORD PTR _heading$14[ebp]
  0052c	0f 57 0d 00 00
	00 00		 xorps	 xmm1, DWORD PTR __xmm@80000000800000008000000080000000
  00533	51		 push	 ecx
  00534	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00539	f3 0f 11 85 4c
	ff ff ff	 movss	 DWORD PTR tv743[ebp], xmm0
  00541	e8 00 00 00 00	 call	 ?sin@@YGMM@Z		; sin
  00546	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR tv597[ebp]
  0054c	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR tv597[ebp]
  00554	f3 0f 59 45 e4	 mulss	 xmm0, DWORD PTR _position$21[ebp]
  00559	f3 0f 10 8d 4c
	ff ff ff	 movss	 xmm1, DWORD PTR tv743[ebp]
  00561	f3 0f 5c c8	 subss	 xmm1, xmm0
  00565	f3 0f 11 4d ec	 movss	 DWORD PTR _position$21[ebp+8], xmm1

; 2224 : 
; 2225 : 				inst3d = (object_3d_instance *) get_local_entity_ptr_value (ship, PTR_TYPE_INSTANCE_3D_OBJECT);

  0056a	83 7d c4 00	 cmp	 DWORD PTR _ship$13[ebp], 0
  0056e	74 0d		 je	 SHORT $LN38@helicopter
  00570	8b 45 c4	 mov	 eax, DWORD PTR _ship$13[ebp]
  00573	8b 08		 mov	 ecx, DWORD PTR [eax]
  00575	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv273[ebp], ecx
  0057b	eb 24		 jmp	 SHORT $LN39@helicopter
$LN38@helicopter:
  0057d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00583	83 c2 49	 add	 edx, 73			; 00000049H
  00586	52		 push	 edx
  00587	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0058c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00591	50		 push	 eax
  00592	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00597	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv273[ebp], 0
$LN39@helicopter:
  005a1	b9 01 00 00 00	 mov	 ecx, 1
  005a6	85 c9		 test	 ecx, ecx
  005a8	74 0c		 je	 SHORT $LN40@helicopter
  005aa	c7 85 4c ff ff
	ff 02 00 00 00	 mov	 DWORD PTR tv281[ebp], 2
  005b4	eb 24		 jmp	 SHORT $LN41@helicopter
$LN40@helicopter:
  005b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  005bc	83 c2 49	 add	 edx, 73			; 00000049H
  005bf	52		 push	 edx
  005c0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  005c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_ptr_type_message@@3PBDB ; overload_invalid_ptr_type_message
  005ca	50		 push	 eax
  005cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005d0	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv281[ebp], 0
$LN41@helicopter:
  005da	6a 02		 push	 2
  005dc	8b 4d c4	 mov	 ecx, DWORD PTR _ship$13[ebp]
  005df	51		 push	 ecx
  005e0	6b 95 50 ff ff
	ff 50		 imul	 edx, DWORD PTR tv273[ebp], 80
  005e7	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv281[ebp]
  005ed	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_ptr_value@@3PAY0BE@P6GPAXPAUENTITY@@W4PTR_TYPES@@@ZA[edx+eax*4]
  005f4	ff d1		 call	 ecx
  005f6	89 45 f0	 mov	 DWORD PTR _inst3d$22[ebp], eax

; 2226 : 
; 2227 : 				bounding_box = get_object_3d_bounding_box_without_lines (inst3d->object_number);

  005f9	8b 45 f0	 mov	 eax, DWORD PTR _inst3d$22[ebp]
  005fc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  005ff	51		 push	 ecx
  00600	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box_without_lines
  00605	89 45 dc	 mov	 DWORD PTR _bounding_box$19[ebp], eax

; 2228 : 
; 2229 : 				// make sure that the keysite is at least 200 m radius
; 2230 : 				xmin = min (bounding_box->xmin, -200.0f);

  00608	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3480000
  00610	f3 0f 11 45 80	 movss	 DWORD PTR $T12[ebp], xmm0
  00615	8d 45 80	 lea	 eax, DWORD PTR $T12[ebp]
  00618	50		 push	 eax
  00619	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  0061c	51		 push	 ecx
  0061d	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00622	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00626	f3 0f 11 45 d8	 movss	 DWORD PTR _xmin$18[ebp], xmm0

; 2231 : 				xmax = max (bounding_box->xmax, 200.0f);

  0062b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43480000
  00633	f3 0f 11 85 7c
	ff ff ff	 movss	 DWORD PTR $T11[ebp], xmm0
  0063b	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR $T11[ebp]
  00641	50		 push	 eax
  00642	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00645	83 c1 04	 add	 ecx, 4
  00648	51		 push	 ecx
  00649	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0064e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00652	f3 0f 11 45 d4	 movss	 DWORD PTR _xmax$17[ebp], xmm0

; 2232 : 				zmin = min (bounding_box->zmin, -200.0f);

  00657	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3480000
  0065f	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR $T10[ebp], xmm0
  00667	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR $T10[ebp]
  0066d	50		 push	 eax
  0066e	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00671	83 c1 10	 add	 ecx, 16			; 00000010H
  00674	51		 push	 ecx
  00675	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0067a	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0067e	f3 0f 11 45 d0	 movss	 DWORD PTR _zmin$16[ebp], xmm0

; 2233 : 				zmax = max (bounding_box->zmax, 200.0f);

  00683	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43480000
  0068b	f3 0f 11 85 74
	ff ff ff	 movss	 DWORD PTR $T9[ebp], xmm0
  00693	8d 85 74 ff ff
	ff		 lea	 eax, DWORD PTR $T9[ebp]
  00699	50		 push	 eax
  0069a	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  0069d	83 c1 14	 add	 ecx, 20			; 00000014H
  006a0	51		 push	 ecx
  006a1	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  006a6	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  006aa	f3 0f 11 45 cc	 movss	 DWORD PTR _zmax$15[ebp], xmm0

; 2234 : 
; 2235 : 				break;

  006af	e9 2d 04 00 00	 jmp	 $LN2@helicopter
$LN8@helicopter:

; 2236 : 			}
; 2237 : 			case ENTITY_SUB_TYPE_KEYSITE_FARP:
; 2238 : 			{
; 2239 : 
; 2240 : 				keysite_pos = get_local_entity_vec3d_ptr (keysite, VEC3D_TYPE_POSITION);

  006b4	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  006b8	74 0d		 je	 SHORT $LN42@helicopter
  006ba	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  006bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  006bf	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv312[ebp], ecx
  006c5	eb 24		 jmp	 SHORT $LN43@helicopter
$LN42@helicopter:
  006c7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  006cd	83 c2 58	 add	 edx, 88			; 00000058H
  006d0	52		 push	 edx
  006d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006db	50		 push	 eax
  006dc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e1	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv312[ebp], 0
$LN43@helicopter:
  006eb	b9 01 00 00 00	 mov	 ecx, 1
  006f0	85 c9		 test	 ecx, ecx
  006f2	74 0c		 je	 SHORT $LN44@helicopter
  006f4	c7 85 4c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv320[ebp], 8
  006fe	eb 24		 jmp	 SHORT $LN45@helicopter
$LN44@helicopter:
  00700	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00706	83 c2 58	 add	 edx, 88			; 00000058H
  00709	52		 push	 edx
  0070a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0070f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00714	50		 push	 eax
  00715	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0071a	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv320[ebp], 0
$LN45@helicopter:
  00724	6a 08		 push	 8
  00726	8b 4d f4	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00729	51		 push	 ecx
  0072a	6b 95 50 ff ff
	ff 60		 imul	 edx, DWORD PTR tv312[ebp], 96
  00731	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv320[ebp]
  00737	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0073e	ff d1		 call	 ecx
  00740	89 45 e0	 mov	 DWORD PTR _keysite_pos$20[ebp], eax

; 2241 : 
; 2242 : 				position.x = hc_position->x - keysite_pos->x;

  00743	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00746	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00749	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0074d	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  00751	f3 0f 11 45 e4	 movss	 DWORD PTR _position$21[ebp], xmm0

; 2243 : 				position.y = hc_position->y - keysite_pos->y;

  00756	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00759	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  0075c	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00761	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00766	f3 0f 11 45 e8	 movss	 DWORD PTR _position$21[ebp+4], xmm0

; 2244 : 				position.z = hc_position->z - keysite_pos->z;

  0076b	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  0076e	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00771	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00776	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0077b	f3 0f 11 45 ec	 movss	 DWORD PTR _position$21[ebp+8], xmm0

; 2245 : 
; 2246 : 				bounding_box = get_object_3d_bounding_box_without_lines (get_local_entity_int_value (keysite, INT_TYPE_OBJECT_INDEX));

  00780	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  00784	74 0d		 je	 SHORT $LN46@helicopter
  00786	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  00789	8b 08		 mov	 ecx, DWORD PTR [eax]
  0078b	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv342[ebp], ecx
  00791	eb 24		 jmp	 SHORT $LN47@helicopter
$LN46@helicopter:
  00793	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  00799	83 c2 5e	 add	 edx, 94			; 0000005eH
  0079c	52		 push	 edx
  0079d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  007a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007a7	50		 push	 eax
  007a8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007ad	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv342[ebp], 0
$LN47@helicopter:
  007b7	b9 01 00 00 00	 mov	 ecx, 1
  007bc	85 c9		 test	 ecx, ecx
  007be	74 0c		 je	 SHORT $LN48@helicopter
  007c0	c7 85 4c ff ff
	ff 94 00 00 00	 mov	 DWORD PTR tv350[ebp], 148 ; 00000094H
  007ca	eb 24		 jmp	 SHORT $LN49@helicopter
$LN48@helicopter:
  007cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  007d2	83 c2 5e	 add	 edx, 94			; 0000005eH
  007d5	52		 push	 edx
  007d6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  007db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  007e0	50		 push	 eax
  007e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  007e6	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv350[ebp], 0
$LN49@helicopter:
  007f0	68 94 00 00 00	 push	 148			; 00000094H
  007f5	8b 4d f4	 mov	 ecx, DWORD PTR _keysite$[ebp]
  007f8	51		 push	 ecx
  007f9	69 95 50 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv342[ebp], 1116
  00803	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv350[ebp]
  00809	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00810	ff d1		 call	 ecx
  00812	50		 push	 eax
  00813	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box_without_lines
  00818	89 45 dc	 mov	 DWORD PTR _bounding_box$19[ebp], eax

; 2247 : 
; 2248 : 				// make sure that the keysite is at least 400 m radius
; 2249 : 				xmin = min (bounding_box->xmin, -400.0f);

  0081b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3c80000
  00823	f3 0f 11 85 70
	ff ff ff	 movss	 DWORD PTR $T8[ebp], xmm0
  0082b	8d 85 70 ff ff
	ff		 lea	 eax, DWORD PTR $T8[ebp]
  00831	50		 push	 eax
  00832	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00835	51		 push	 ecx
  00836	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  0083b	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0083f	f3 0f 11 45 d8	 movss	 DWORD PTR _xmin$18[ebp], xmm0

; 2250 : 				xmax = max (bounding_box->xmax, 400.0f);

  00844	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c80000
  0084c	f3 0f 11 85 6c
	ff ff ff	 movss	 DWORD PTR $T7[ebp], xmm0
  00854	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR $T7[ebp]
  0085a	50		 push	 eax
  0085b	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  0085e	83 c1 04	 add	 ecx, 4
  00861	51		 push	 ecx
  00862	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00867	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0086b	f3 0f 11 45 d4	 movss	 DWORD PTR _xmax$17[ebp], xmm0

; 2251 : 				zmin = min (bounding_box->zmin, -400.0f);

  00870	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3c80000
  00878	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR $T6[ebp], xmm0
  00880	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR $T6[ebp]
  00886	50		 push	 eax
  00887	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  0088a	83 c1 10	 add	 ecx, 16			; 00000010H
  0088d	51		 push	 ecx
  0088e	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00893	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00897	f3 0f 11 45 d0	 movss	 DWORD PTR _zmin$16[ebp], xmm0

; 2252 : 				zmax = max (bounding_box->zmax, 400.0f);

  0089c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c80000
  008a4	f3 0f 11 85 64
	ff ff ff	 movss	 DWORD PTR $T5[ebp], xmm0
  008ac	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR $T5[ebp]
  008b2	50		 push	 eax
  008b3	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  008b6	83 c1 14	 add	 ecx, 20			; 00000014H
  008b9	51		 push	 ecx
  008ba	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  008bf	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  008c3	f3 0f 11 45 cc	 movss	 DWORD PTR _zmax$15[ebp], xmm0

; 2253 : 
; 2254 : 				break;

  008c8	e9 14 02 00 00	 jmp	 $LN2@helicopter
$LN9@helicopter:

; 2255 : 			}
; 2256 : 			default:
; 2257 : 			{
; 2258 : 
; 2259 : 				keysite_pos = get_local_entity_vec3d_ptr (keysite, VEC3D_TYPE_POSITION);

  008cd	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  008d1	74 0d		 je	 SHORT $LN50@helicopter
  008d3	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  008d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  008d8	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv379[ebp], ecx
  008de	eb 24		 jmp	 SHORT $LN51@helicopter
$LN50@helicopter:
  008e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  008e6	83 c2 6b	 add	 edx, 107		; 0000006bH
  008e9	52		 push	 edx
  008ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008f4	50		 push	 eax
  008f5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008fa	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv379[ebp], 0
$LN51@helicopter:
  00904	b9 01 00 00 00	 mov	 ecx, 1
  00909	85 c9		 test	 ecx, ecx
  0090b	74 0c		 je	 SHORT $LN52@helicopter
  0090d	c7 85 4c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv387[ebp], 8
  00917	eb 24		 jmp	 SHORT $LN53@helicopter
$LN52@helicopter:
  00919	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  0091f	83 c2 6b	 add	 edx, 107		; 0000006bH
  00922	52		 push	 edx
  00923	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00928	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  0092d	50		 push	 eax
  0092e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00933	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv387[ebp], 0
$LN53@helicopter:
  0093d	6a 08		 push	 8
  0093f	8b 4d f4	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00942	51		 push	 ecx
  00943	6b 95 50 ff ff
	ff 60		 imul	 edx, DWORD PTR tv379[ebp], 96
  0094a	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv387[ebp]
  00950	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  00957	ff d1		 call	 ecx
  00959	89 45 e0	 mov	 DWORD PTR _keysite_pos$20[ebp], eax

; 2260 : 
; 2261 : 				position.x = hc_position->x - keysite_pos->x;

  0095c	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  0095f	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00962	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00966	f3 0f 5c 01	 subss	 xmm0, DWORD PTR [ecx]
  0096a	f3 0f 11 45 e4	 movss	 DWORD PTR _position$21[ebp], xmm0

; 2262 : 				position.y = hc_position->y - keysite_pos->y;

  0096f	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00972	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  00975	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  0097a	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  0097f	f3 0f 11 45 e8	 movss	 DWORD PTR _position$21[ebp+4], xmm0

; 2263 : 				position.z = hc_position->z - keysite_pos->z;

  00984	8b 45 fc	 mov	 eax, DWORD PTR _hc_position$[ebp]
  00987	8b 4d e0	 mov	 ecx, DWORD PTR _keysite_pos$20[ebp]
  0098a	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  0098f	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  00994	f3 0f 11 45 ec	 movss	 DWORD PTR _position$21[ebp+8], xmm0

; 2264 : 
; 2265 : 				bounding_box = get_object_3d_bounding_box_without_lines (get_local_entity_int_value (keysite, INT_TYPE_OBJECT_INDEX));

  00999	83 7d f4 00	 cmp	 DWORD PTR _keysite$[ebp], 0
  0099d	74 0d		 je	 SHORT $LN54@helicopter
  0099f	8b 45 f4	 mov	 eax, DWORD PTR _keysite$[ebp]
  009a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  009a4	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv409[ebp], ecx
  009aa	eb 24		 jmp	 SHORT $LN55@helicopter
$LN54@helicopter:
  009ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  009b2	83 c2 71	 add	 edx, 113		; 00000071H
  009b5	52		 push	 edx
  009b6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  009bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009c0	50		 push	 eax
  009c1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009c6	c7 85 50 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv409[ebp], 0
$LN55@helicopter:
  009d0	b9 01 00 00 00	 mov	 ecx, 1
  009d5	85 c9		 test	 ecx, ecx
  009d7	74 0c		 je	 SHORT $LN56@helicopter
  009d9	c7 85 4c ff ff
	ff 94 00 00 00	 mov	 DWORD PTR tv417[ebp], 148 ; 00000094H
  009e3	eb 24		 jmp	 SHORT $LN57@helicopter
$LN56@helicopter:
  009e5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_within_keysite_area@@YGHPAUENTITY@@@Z@4JA
  009eb	83 c2 71	 add	 edx, 113		; 00000071H
  009ee	52		 push	 edx
  009ef	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  009f9	50		 push	 eax
  009fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009ff	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv417[ebp], 0
$LN57@helicopter:
  00a09	68 94 00 00 00	 push	 148			; 00000094H
  00a0e	8b 4d f4	 mov	 ecx, DWORD PTR _keysite$[ebp]
  00a11	51		 push	 ecx
  00a12	69 95 50 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv409[ebp], 1116
  00a1c	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv417[ebp]
  00a22	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00a29	ff d1		 call	 ecx
  00a2b	50		 push	 eax
  00a2c	e8 00 00 00 00	 call	 ?get_object_3d_bounding_box_without_lines@@YGPAUOBJECT_3D_BOUNDS@@H@Z ; get_object_3d_bounding_box_without_lines
  00a31	89 45 dc	 mov	 DWORD PTR _bounding_box$19[ebp], eax

; 2266 : 
; 2267 : 				// make sure that the airbase is at least 400 m radius
; 2268 : 				xmin = min (bounding_box->xmin, -400.0f);

  00a34	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3c80000
  00a3c	f3 0f 11 85 60
	ff ff ff	 movss	 DWORD PTR $T4[ebp], xmm0
  00a44	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR $T4[ebp]
  00a4a	50		 push	 eax
  00a4b	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00a4e	51		 push	 ecx
  00a4f	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00a54	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00a58	f3 0f 11 45 d8	 movss	 DWORD PTR _xmin$18[ebp], xmm0

; 2269 : 				xmax = max (bounding_box->xmax, 400.0f);

  00a5d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c80000
  00a65	f3 0f 11 85 5c
	ff ff ff	 movss	 DWORD PTR $T3[ebp], xmm0
  00a6d	8d 85 5c ff ff
	ff		 lea	 eax, DWORD PTR $T3[ebp]
  00a73	50		 push	 eax
  00a74	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00a77	83 c1 04	 add	 ecx, 4
  00a7a	51		 push	 ecx
  00a7b	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00a80	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00a84	f3 0f 11 45 d4	 movss	 DWORD PTR _xmax$17[ebp], xmm0

; 2270 : 				zmin = min (bounding_box->zmin, -400.0f);

  00a89	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3c80000
  00a91	f3 0f 11 85 58
	ff ff ff	 movss	 DWORD PTR $T2[ebp], xmm0
  00a99	8d 85 58 ff ff
	ff		 lea	 eax, DWORD PTR $T2[ebp]
  00a9f	50		 push	 eax
  00aa0	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00aa3	83 c1 10	 add	 ecx, 16			; 00000010H
  00aa6	51		 push	 ecx
  00aa7	e8 00 00 00 00	 call	 ??$min@M@std@@YGABMABM0@Z ; std::min<float>
  00aac	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00ab0	f3 0f 11 45 d0	 movss	 DWORD PTR _zmin$16[ebp], xmm0

; 2271 : 				zmax = max (bounding_box->zmax, 400.0f);

  00ab5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@43c80000
  00abd	f3 0f 11 85 54
	ff ff ff	 movss	 DWORD PTR $T1[ebp], xmm0
  00ac5	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR $T1[ebp]
  00acb	50		 push	 eax
  00acc	8b 4d dc	 mov	 ecx, DWORD PTR _bounding_box$19[ebp]
  00acf	83 c1 14	 add	 ecx, 20			; 00000014H
  00ad2	51		 push	 ecx
  00ad3	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00ad8	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00adc	f3 0f 11 45 cc	 movss	 DWORD PTR _zmax$15[ebp], xmm0
$LN2@helicopter:

; 2272 : 
; 2273 : 				break;
; 2274 : 			}
; 2275 : 		}
; 2276 : 
; 2277 : 		if (((position.x > xmin) && (position.x < xmax)) && ((position.z > zmin) && (position.z < zmax)))

  00ae1	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _position$21[ebp]
  00ae6	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _xmin$18[ebp]
  00aea	76 28		 jbe	 SHORT $LN10@helicopter
  00aec	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _xmax$17[ebp]
  00af1	0f 2f 45 e4	 comiss	 xmm0, DWORD PTR _position$21[ebp]
  00af5	76 1d		 jbe	 SHORT $LN10@helicopter
  00af7	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _position$21[ebp+8]
  00afc	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _zmin$16[ebp]
  00b00	76 12		 jbe	 SHORT $LN10@helicopter
  00b02	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _zmax$15[ebp]
  00b07	0f 2f 45 ec	 comiss	 xmm0, DWORD PTR _position$21[ebp+8]
  00b0b	76 07		 jbe	 SHORT $LN10@helicopter

; 2278 : 		{
; 2279 : 
; 2280 : 			return TRUE;

  00b0d	b8 01 00 00 00	 mov	 eax, 1
  00b12	eb 02		 jmp	 SHORT $LN1@helicopter
$LN10@helicopter:

; 2281 : 		}
; 2282 : 	}
; 2283 : 
; 2284 : 	return FALSE;

  00b14	33 c0		 xor	 eax, eax
$LN1@helicopter:

; 2285 : }

  00b16	5f		 pop	 edi
  00b17	5e		 pop	 esi
  00b18	5b		 pop	 ebx
  00b19	8b e5		 mov	 esp, ebp
  00b1b	5d		 pop	 ebp
  00b1c	c2 04 00	 ret	 4
?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z ENDP	; helicopter_within_keysite_area
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?get_helicopter_allowed_to_rearm@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv133 = -72						; size = 4
tv76 = -72						; size = 4
tv94 = -68						; size = 4
tv69 = -68						; size = 4
_en$ = 8						; size = 4
?get_helicopter_allowed_to_rearm@@YGHPAUENTITY@@@Z PROC	; get_helicopter_allowed_to_rearm, COMDAT

; 2123 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2124 : 
; 2125 : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN7@get_helico
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d bc	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1d		 jmp	 SHORT $LN8@get_helico
$LN7@get_helico:
  00019	68 4d 08 00 00	 push	 2125			; 0000084dH
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002f	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN8@get_helico:
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	85 c0		 test	 eax, eax
  0003d	74 09		 je	 SHORT $LN9@get_helico
  0003f	c7 45 b8 9c 00
	00 00		 mov	 DWORD PTR tv76[ebp], 156 ; 0000009cH
  00046	eb 1d		 jmp	 SHORT $LN10@get_helico
$LN9@get_helico:
  00048	68 4d 08 00 00	 push	 2125			; 0000084dH
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN10@get_helico:
  00065	68 9c 00 00 00	 push	 156			; 0000009cH
  0006a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0006d	52		 push	 edx
  0006e	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00075	8b 4d b8	 mov	 ecx, DWORD PTR tv76[ebp]
  00078	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0007f	ff d2		 call	 edx
  00081	85 c0		 test	 eax, eax
  00083	75 1c		 jne	 SHORT $LN2@get_helico

; 2126 : 	{
; 2127 : 
; 2128 : 		if (helicopter_within_keysite_area (en))

  00085	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z ; helicopter_within_keysite_area
  0008e	85 c0		 test	 eax, eax
  00090	74 0a		 je	 SHORT $LN4@get_helico

; 2129 : 		{
; 2130 : 
; 2131 : 			return TRUE;

  00092	b8 01 00 00 00	 mov	 eax, 1
  00097	e9 98 00 00 00	 jmp	 $LN1@get_helico
$LN4@get_helico:

; 2132 : 		}
; 2133 : 	}
; 2134 : 	else

  0009c	e9 91 00 00 00	 jmp	 $LN3@get_helico
$LN2@get_helico:

; 2135 : 	{
; 2136 : 
; 2137 : 		if ((helicopter_within_keysite_area (en)) && (!get_local_entity_int_value (en, INT_TYPE_AIRBORNE_AIRCRAFT)))

  000a1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 ?helicopter_within_keysite_area@@YGHPAUENTITY@@@Z ; helicopter_within_keysite_area
  000aa	85 c0		 test	 eax, eax
  000ac	0f 84 80 00 00
	00		 je	 $LN3@get_helico
  000b2	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000b6	74 0a		 je	 SHORT $LN11@get_helico
  000b8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000bb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bd	89 4d bc	 mov	 DWORD PTR tv94[ebp], ecx
  000c0	eb 1d		 jmp	 SHORT $LN12@get_helico
$LN11@get_helico:
  000c2	68 59 08 00 00	 push	 2137			; 00000859H
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000d2	52		 push	 edx
  000d3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d8	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv94[ebp], 0
$LN12@get_helico:
  000df	b8 01 00 00 00	 mov	 eax, 1
  000e4	85 c0		 test	 eax, eax
  000e6	74 09		 je	 SHORT $LN13@get_helico
  000e8	c7 45 b8 04 00
	00 00		 mov	 DWORD PTR tv133[ebp], 4
  000ef	eb 1d		 jmp	 SHORT $LN14@get_helico
$LN13@get_helico:
  000f1	68 59 08 00 00	 push	 2137			; 00000859H
  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00101	51		 push	 ecx
  00102	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00107	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN14@get_helico:
  0010e	6a 04		 push	 4
  00110	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00113	52		 push	 edx
  00114	69 45 bc 5c 04
	00 00		 imul	 eax, DWORD PTR tv94[ebp], 1116
  0011b	8b 4d b8	 mov	 ecx, DWORD PTR tv133[ebp]
  0011e	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00125	ff d2		 call	 edx
  00127	85 c0		 test	 eax, eax
  00129	75 07		 jne	 SHORT $LN3@get_helico

; 2138 : 		{
; 2139 : 
; 2140 : 			return TRUE;

  0012b	b8 01 00 00 00	 mov	 eax, 1
  00130	eb 02		 jmp	 SHORT $LN1@get_helico
$LN3@get_helico:

; 2141 : 		}
; 2142 : 	}
; 2143 : 
; 2144 : 	return FALSE;

  00132	33 c0		 xor	 eax, eax
$LN1@get_helico:

; 2145 : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c2 04 00	 ret	 4
?get_helicopter_allowed_to_rearm@@YGHPAUENTITY@@@Z ENDP	; get_helicopter_allowed_to_rearm
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?transmit_player_recon_data@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv185 = -92						; size = 4
tv165 = -92						; size = 4
tv140 = -92						; size = 4
tv83 = -92						; size = 4
tv260 = -88						; size = 4
tv177 = -88						; size = 4
tv157 = -88						; size = 4
tv132 = -88						; size = 4
tv75 = -88						; size = 4
_recon_radius$ = -20					; size = 4
_en_pos$ = -16						; size = 4
_wp_pos$ = -12						; size = 4
_current_waypoint$ = -8					; size = 4
_guide$ = -4						; size = 4
_en$ = 8						; size = 4
?transmit_player_recon_data@@YGXPAUENTITY@@@Z PROC	; transmit_player_recon_data, COMDAT

; 2078 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2079 : 	entity
; 2080 : 		*guide,
; 2081 : 		*current_waypoint;
; 2082 : 
; 2083 : 	vec3d
; 2084 : 		*wp_pos,
; 2085 : 		*en_pos;
; 2086 : 
; 2087 : 	float
; 2088 : 		recon_radius;
; 2089 : 
; 2090 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  00010	74 18		 je	 SHORT $LN2@transmit_p
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  00017	83 c0 0c	 add	 eax, 12			; 0000000cH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@transmit_p:

; 2091 : 
; 2092 : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  0002a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0002e	74 0a		 je	 SHORT $LN8@transmit_p
  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	8b 08		 mov	 ecx, DWORD PTR [eax]
  00035	89 4d a8	 mov	 DWORD PTR tv75[ebp], ecx
  00038	eb 21		 jmp	 SHORT $LN9@transmit_p
$LN8@transmit_p:
  0003a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  00040	83 c2 0e	 add	 edx, 14			; 0000000eH
  00043	52		 push	 edx
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00054	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv75[ebp], 0
$LN9@transmit_p:
  0005b	b9 01 00 00 00	 mov	 ecx, 1
  00060	85 c9		 test	 ecx, ecx
  00062	74 09		 je	 SHORT $LN10@transmit_p
  00064	c7 45 a4 0d 00
	00 00		 mov	 DWORD PTR tv83[ebp], 13	; 0000000dH
  0006b	eb 21		 jmp	 SHORT $LN11@transmit_p
$LN10@transmit_p:
  0006d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  00073	83 c2 0e	 add	 edx, 14			; 0000000eH
  00076	52		 push	 edx
  00077	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00087	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv83[ebp], 0
$LN11@transmit_p:
  0008e	6a 0d		 push	 13			; 0000000dH
  00090	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00093	51		 push	 ecx
  00094	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv75[ebp], 180
  0009b	8b 45 a4	 mov	 eax, DWORD PTR tv83[ebp]
  0009e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000a5	ff d1		 call	 ecx
  000a7	89 45 fc	 mov	 DWORD PTR _guide$[ebp], eax

; 2093 : 
; 2094 : 	if (guide)

  000aa	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000ae	0f 84 fa 01 00
	00		 je	 $LN6@transmit_p

; 2095 : 	{
; 2096 : 		if (get_guide_criteria_valid (guide, GUIDE_CRITERIA_TRANSMIT_DATA))

  000b4	6a 03		 push	 3
  000b6	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000b9	50		 push	 eax
  000ba	e8 00 00 00 00	 call	 ?get_guide_criteria_valid@@YGHPAUENTITY@@W4GUIDE_CRITERIA_TYPES@@@Z ; get_guide_criteria_valid
  000bf	85 c0		 test	 eax, eax
  000c1	0f 84 e7 01 00
	00		 je	 $LN6@transmit_p

; 2097 : 		{
; 2098 : 			current_waypoint = get_local_entity_parent (guide, LIST_TYPE_CURRENT_WAYPOINT);

  000c7	83 7d fc 00	 cmp	 DWORD PTR _guide$[ebp], 0
  000cb	74 0a		 je	 SHORT $LN12@transmit_p
  000cd	8b 45 fc	 mov	 eax, DWORD PTR _guide$[ebp]
  000d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d2	89 4d a8	 mov	 DWORD PTR tv132[ebp], ecx
  000d5	eb 21		 jmp	 SHORT $LN13@transmit_p
$LN12@transmit_p:
  000d7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  000dd	83 c2 14	 add	 edx, 20			; 00000014H
  000e0	52		 push	 edx
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000f1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv132[ebp], 0
$LN13@transmit_p:
  000f8	b9 01 00 00 00	 mov	 ecx, 1
  000fd	85 c9		 test	 ecx, ecx
  000ff	74 09		 je	 SHORT $LN14@transmit_p
  00101	c7 45 a4 09 00
	00 00		 mov	 DWORD PTR tv140[ebp], 9
  00108	eb 21		 jmp	 SHORT $LN15@transmit_p
$LN14@transmit_p:
  0010a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  00110	83 c2 14	 add	 edx, 20			; 00000014H
  00113	52		 push	 edx
  00114	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00124	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv140[ebp], 0
$LN15@transmit_p:
  0012b	6a 09		 push	 9
  0012d	8b 4d fc	 mov	 ecx, DWORD PTR _guide$[ebp]
  00130	51		 push	 ecx
  00131	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv132[ebp], 180
  00138	8b 45 a4	 mov	 eax, DWORD PTR tv140[ebp]
  0013b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00142	ff d1		 call	 ecx
  00144	89 45 f8	 mov	 DWORD PTR _current_waypoint$[ebp], eax

; 2099 : 
; 2100 : 			ASSERT (current_waypoint);

  00147	83 7d f8 00	 cmp	 DWORD PTR _current_waypoint$[ebp], 0
  0014b	75 18		 jne	 SHORT $LN5@transmit_p
  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  00152	83 c0 16	 add	 eax, 22			; 00000016H
  00155	50		 push	 eax
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0015b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GMNHMODA@current_waypoint@
  00160	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@transmit_p:

; 2101 : 
; 2102 : 			en_pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  00165	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00169	74 0a		 je	 SHORT $LN16@transmit_p
  0016b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00170	89 4d a8	 mov	 DWORD PTR tv157[ebp], ecx
  00173	eb 21		 jmp	 SHORT $LN17@transmit_p
$LN16@transmit_p:
  00175	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  0017b	83 c2 18	 add	 edx, 24			; 00000018H
  0017e	52		 push	 edx
  0017f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00184	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN17@transmit_p:
  00196	b9 01 00 00 00	 mov	 ecx, 1
  0019b	85 c9		 test	 ecx, ecx
  0019d	74 09		 je	 SHORT $LN18@transmit_p
  0019f	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv165[ebp], 8
  001a6	eb 21		 jmp	 SHORT $LN19@transmit_p
$LN18@transmit_p:
  001a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  001ae	83 c2 18	 add	 edx, 24			; 00000018H
  001b1	52		 push	 edx
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  001bc	50		 push	 eax
  001bd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c2	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv165[ebp], 0
$LN19@transmit_p:
  001c9	6a 08		 push	 8
  001cb	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ce	51		 push	 ecx
  001cf	6b 55 a8 60	 imul	 edx, DWORD PTR tv157[ebp], 96
  001d3	8b 45 a4	 mov	 eax, DWORD PTR tv165[ebp]
  001d6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  001dd	ff d1		 call	 ecx
  001df	89 45 f0	 mov	 DWORD PTR _en_pos$[ebp], eax

; 2103 : 
; 2104 : 			wp_pos = get_local_entity_vec3d_ptr (current_waypoint, VEC3D_TYPE_POSITION);

  001e2	83 7d f8 00	 cmp	 DWORD PTR _current_waypoint$[ebp], 0
  001e6	74 0a		 je	 SHORT $LN20@transmit_p
  001e8	8b 45 f8	 mov	 eax, DWORD PTR _current_waypoint$[ebp]
  001eb	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ed	89 4d a8	 mov	 DWORD PTR tv177[ebp], ecx
  001f0	eb 21		 jmp	 SHORT $LN21@transmit_p
$LN20@transmit_p:
  001f2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  001f8	83 c2 1a	 add	 edx, 26			; 0000001aH
  001fb	52		 push	 edx
  001fc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0020c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN21@transmit_p:
  00213	b9 01 00 00 00	 mov	 ecx, 1
  00218	85 c9		 test	 ecx, ecx
  0021a	74 09		 je	 SHORT $LN22@transmit_p
  0021c	c7 45 a4 08 00
	00 00		 mov	 DWORD PTR tv185[ebp], 8
  00223	eb 21		 jmp	 SHORT $LN23@transmit_p
$LN22@transmit_p:
  00225	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??transmit_player_recon_data@@YGXPAUENTITY@@@Z@4JA
  0022b	83 c2 1a	 add	 edx, 26			; 0000001aH
  0022e	52		 push	 edx
  0022f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0023f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN23@transmit_p:
  00246	6a 08		 push	 8
  00248	8b 4d f8	 mov	 ecx, DWORD PTR _current_waypoint$[ebp]
  0024b	51		 push	 ecx
  0024c	6b 55 a8 60	 imul	 edx, DWORD PTR tv177[ebp], 96
  00250	8b 45 a4	 mov	 eax, DWORD PTR tv185[ebp]
  00253	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  0025a	ff d1		 call	 ecx
  0025c	89 45 f4	 mov	 DWORD PTR _wp_pos$[ebp], eax

; 2105 : 
; 2106 : 			recon_radius = get_local_entity_waypoint_database_action_radius_value (current_waypoint, en);

  0025f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00262	50		 push	 eax
  00263	8b 4d f8	 mov	 ecx, DWORD PTR _current_waypoint$[ebp]
  00266	51		 push	 ecx
  00267	e8 00 00 00 00	 call	 ?get_local_entity_waypoint_database_action_radius_value@@YGMPAUENTITY@@0@Z ; get_local_entity_waypoint_database_action_radius_value
  0026c	d9 5d ec	 fstp	 DWORD PTR _recon_radius$[ebp]

; 2107 : 
; 2108 : 			if (get_sqr_2d_range (wp_pos, en_pos) < (recon_radius * recon_radius))

  0026f	8b 45 f0	 mov	 eax, DWORD PTR _en_pos$[ebp]
  00272	50		 push	 eax
  00273	8b 4d f4	 mov	 ecx, DWORD PTR _wp_pos$[ebp]
  00276	51		 push	 ecx
  00277	e8 00 00 00 00	 call	 ?get_sqr_2d_range@@YGMPBUVEC3D@@0@Z ; get_sqr_2d_range
  0027c	d9 5d a8	 fstp	 DWORD PTR tv260[ebp]
  0027f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _recon_radius$[ebp]
  00284	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _recon_radius$[ebp]
  00289	0f 2f 45 a8	 comiss	 xmm0, DWORD PTR tv260[ebp]
  0028d	76 1f		 jbe	 SHORT $LN6@transmit_p

; 2109 : 			{
; 2110 : 				debug_log ("HELICOP: Transmitting recon data");

  0028f	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PEAIIDAA@HELICOP?3?5Transmitting?5recon?5dat@
  00294	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00299	83 c4 04	 add	 esp, 4

; 2111 : 
; 2112 : 				notify_local_entity (ENTITY_MESSAGE_WAYPOINT_RECON_REACHED, en, current_waypoint);

  0029c	8b 45 f8	 mov	 eax, DWORD PTR _current_waypoint$[ebp]
  0029f	50		 push	 eax
  002a0	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002a3	51		 push	 ecx
  002a4	6a 51		 push	 81			; 00000051H
  002a6	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  002ab	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@transmit_p:

; 2113 : 			}
; 2114 : 		}
; 2115 : 	}
; 2116 : }

  002ae	5f		 pop	 edi
  002af	5e		 pop	 esi
  002b0	5b		 pop	 ebx
  002b1	8b e5		 mov	 esp, ebp
  002b3	5d		 pop	 ebp
  002b4	c2 04 00	 ret	 4
?transmit_player_recon_data@@YGXPAUENTITY@@@Z ENDP	; transmit_player_recon_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?helicopter_release_player_control@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv321 = -88						; size = 4
tv299 = -88						; size = 4
tv278 = -88						; size = 4
tv254 = -88						; size = 4
tv233 = -88						; size = 4
tv210 = -88						; size = 4
tv189 = -88						; size = 4
tv164 = -88						; size = 4
tv143 = -88						; size = 4
tv88 = -88						; size = 4
tv313 = -84						; size = 4
tv291 = -84						; size = 4
tv271 = -84						; size = 4
tv246 = -84						; size = 4
tv226 = -84						; size = 4
tv202 = -84						; size = 4
tv181 = -84						; size = 4
tv156 = -84						; size = 4
tv136 = -84						; size = 4
tv80 = -84						; size = 4
_member_number$ = -16					; size = 4
_task$ = -12						; size = 4
_guide$ = -8						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_release_player_control@@YGXPAUENTITY@@@Z PROC ; helicopter_release_player_control, COMDAT

; 2019 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2020 : 	entity
; 2021 : 		*group,
; 2022 : 		*guide,
; 2023 : 		*task;
; 2024 : 
; 2025 : 	unsigned int
; 2026 : 		member_number;
; 2027 : 
; 2028 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@helicopter
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 09	 add	 eax, 9
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 2029 : 
; 2030 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN3@helicopter
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00035	83 c0 0b	 add	 eax, 11			; 0000000bH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 2031 : 
; 2032 : 	ASSERT (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN13@helicopter
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d ac	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN14@helicopter
$LN13@helicopter:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  0005e	83 c2 0d	 add	 edx, 13			; 0000000dH
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN14@helicopter:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN15@helicopter
  00082	c7 45 a8 9c 00
	00 00		 mov	 DWORD PTR tv88[ebp], 156 ; 0000009cH
  00089	eb 21		 jmp	 SHORT $LN16@helicopter
$LN15@helicopter:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00091	83 c2 0d	 add	 edx, 13			; 0000000dH
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN16@helicopter:
  000ac	68 9c 00 00 00	 push	 156			; 0000009cH
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b4	51		 push	 ecx
  000b5	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000bc	8b 45 a8	 mov	 eax, DWORD PTR tv88[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	85 c0		 test	 eax, eax
  000ca	74 18		 je	 SHORT $LN4@helicopter
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  000d1	83 c0 0d	 add	 eax, 13			; 0000000dH
  000d4	50		 push	 eax
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@KNOJECOF@get_local_entity_int_value?5?$CIen?0@
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 2033 : 
; 2034 : 	//
; 2035 : 	// If the helicopter is doing a primary task - reassign the helicopter to a valid task (so it can pick up engage tasks again)
; 2036 : 	//
; 2037 : 
; 2038 : 	if (get_local_entity_int_value (en, INT_TYPE_ALIVE))

  000e4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000e8	74 0a		 je	 SHORT $LN17@helicopter
  000ea	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	89 4d ac	 mov	 DWORD PTR tv136[ebp], ecx
  000f2	eb 1d		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  000f4	68 f6 07 00 00	 push	 2038			; 000007f6H
  000f9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000fe	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00104	52		 push	 edx
  00105	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010a	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN18@helicopter:
  00111	b8 01 00 00 00	 mov	 eax, 1
  00116	85 c0		 test	 eax, eax
  00118	74 09		 je	 SHORT $LN19@helicopter
  0011a	c7 45 a8 07 00
	00 00		 mov	 DWORD PTR tv143[ebp], 7
  00121	eb 1d		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  00123	68 f6 07 00 00	 push	 2038			; 000007f6H
  00128	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00139	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN20@helicopter:
  00140	6a 07		 push	 7
  00142	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00145	52		 push	 edx
  00146	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv136[ebp], 1116
  0014d	8b 4d a8	 mov	 ecx, DWORD PTR tv143[ebp]
  00150	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00157	ff d2		 call	 edx
  00159	85 c0		 test	 eax, eax
  0015b	0f 84 90 04 00
	00		 je	 $LN11@helicopter

; 2039 : 	{
; 2040 : 		group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00161	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00165	74 0a		 je	 SHORT $LN21@helicopter
  00167	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016c	89 4d ac	 mov	 DWORD PTR tv156[ebp], ecx
  0016f	eb 21		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  00171	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00177	83 c2 15	 add	 edx, 21			; 00000015H
  0017a	52		 push	 edx
  0017b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00185	50		 push	 eax
  00186	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0018b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv156[ebp], 0
$LN22@helicopter:
  00192	b9 01 00 00 00	 mov	 ecx, 1
  00197	85 c9		 test	 ecx, ecx
  00199	74 09		 je	 SHORT $LN23@helicopter
  0019b	c7 45 a8 19 00
	00 00		 mov	 DWORD PTR tv164[ebp], 25 ; 00000019H
  001a2	eb 21		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  001a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  001aa	83 c2 15	 add	 edx, 21			; 00000015H
  001ad	52		 push	 edx
  001ae	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001be	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN24@helicopter:
  001c5	6a 19		 push	 25			; 00000019H
  001c7	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001ca	51		 push	 ecx
  001cb	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv156[ebp], 180
  001d2	8b 45 a8	 mov	 eax, DWORD PTR tv164[ebp]
  001d5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001dc	ff d1		 call	 ecx
  001de	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 2041 : 
; 2042 : 		ASSERT (group);

  001e1	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  001e5	75 18		 jne	 SHORT $LN6@helicopter
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  001ec	83 c0 17	 add	 eax, 23			; 00000017H
  001ef	50		 push	 eax
  001f0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f5	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  001fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@helicopter:

; 2043 : 
; 2044 : 		guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  001ff	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00203	74 0a		 je	 SHORT $LN25@helicopter
  00205	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00208	8b 08		 mov	 ecx, DWORD PTR [eax]
  0020a	89 4d ac	 mov	 DWORD PTR tv181[ebp], ecx
  0020d	eb 21		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  0020f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00215	83 c2 19	 add	 edx, 25			; 00000019H
  00218	52		 push	 edx
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00229	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN26@helicopter:
  00230	b9 01 00 00 00	 mov	 ecx, 1
  00235	85 c9		 test	 ecx, ecx
  00237	74 09		 je	 SHORT $LN27@helicopter
  00239	c7 45 a8 0d 00
	00 00		 mov	 DWORD PTR tv189[ebp], 13 ; 0000000dH
  00240	eb 21		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  00242	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00248	83 c2 19	 add	 edx, 25			; 00000019H
  0024b	52		 push	 edx
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00251	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN28@helicopter:
  00263	6a 0d		 push	 13			; 0000000dH
  00265	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00268	51		 push	 ecx
  00269	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv181[ebp], 180
  00270	8b 45 a8	 mov	 eax, DWORD PTR tv189[ebp]
  00273	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0027a	ff d1		 call	 ecx
  0027c	89 45 f8	 mov	 DWORD PTR _guide$[ebp], eax

; 2045 : 
; 2046 : 		if (guide)

  0027f	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00283	0f 84 ba 01 00
	00		 je	 $LN9@helicopter

; 2047 : 		{
; 2048 : 			task = get_local_entity_parent (guide, LIST_TYPE_GUIDE);

  00289	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  0028d	74 0a		 je	 SHORT $LN29@helicopter
  0028f	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00292	8b 08		 mov	 ecx, DWORD PTR [eax]
  00294	89 4d ac	 mov	 DWORD PTR tv202[ebp], ecx
  00297	eb 21		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  00299	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  0029f	83 c2 1d	 add	 edx, 29			; 0000001dH
  002a2	52		 push	 edx
  002a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002b3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN30@helicopter:
  002ba	b9 01 00 00 00	 mov	 ecx, 1
  002bf	85 c9		 test	 ecx, ecx
  002c1	74 09		 je	 SHORT $LN31@helicopter
  002c3	c7 45 a8 10 00
	00 00		 mov	 DWORD PTR tv210[ebp], 16 ; 00000010H
  002ca	eb 21		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  002cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  002d2	83 c2 1d	 add	 edx, 29			; 0000001dH
  002d5	52		 push	 edx
  002d6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  002e0	50		 push	 eax
  002e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002e6	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN32@helicopter:
  002ed	6a 10		 push	 16			; 00000010H
  002ef	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  002f2	51		 push	 ecx
  002f3	69 55 ac b4 00
	00 00		 imul	 edx, DWORD PTR tv202[ebp], 180
  002fa	8b 45 a8	 mov	 eax, DWORD PTR tv210[ebp]
  002fd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00304	ff d1		 call	 ecx
  00306	89 45 f4	 mov	 DWORD PTR _task$[ebp], eax

; 2049 : 
; 2050 : 			ASSERT (task);

  00309	83 7d f4 00	 cmp	 DWORD PTR _task$[ebp], 0
  0030d	75 18		 jne	 SHORT $LN8@helicopter
  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00314	83 c0 1f	 add	 eax, 31			; 0000001fH
  00317	50		 push	 eax
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031d	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  00322	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@helicopter:

; 2051 : 
; 2052 : 			if (get_local_entity_int_value (task, INT_TYPE_PRIMARY_TASK))

  00327	83 7d f4 00	 cmp	 DWORD PTR _task$[ebp], 0
  0032b	74 0a		 je	 SHORT $LN33@helicopter
  0032d	8b 45 f4	 mov	 eax, DWORD PTR _task$[ebp]
  00330	8b 08		 mov	 ecx, DWORD PTR [eax]
  00332	89 4d ac	 mov	 DWORD PTR tv226[ebp], ecx
  00335	eb 1d		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  00337	68 04 08 00 00	 push	 2052			; 00000804H
  0033c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00341	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00347	52		 push	 edx
  00348	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0034d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv226[ebp], 0
$LN34@helicopter:
  00354	b8 01 00 00 00	 mov	 eax, 1
  00359	85 c0		 test	 eax, eax
  0035b	74 09		 je	 SHORT $LN35@helicopter
  0035d	c7 45 a8 a3 00
	00 00		 mov	 DWORD PTR tv233[ebp], 163 ; 000000a3H
  00364	eb 1d		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  00366	68 04 08 00 00	 push	 2052			; 00000804H
  0036b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00370	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00376	51		 push	 ecx
  00377	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0037c	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv233[ebp], 0
$LN36@helicopter:
  00383	68 a3 00 00 00	 push	 163			; 000000a3H
  00388	8b 55 f4	 mov	 edx, DWORD PTR _task$[ebp]
  0038b	52		 push	 edx
  0038c	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv226[ebp], 1116
  00393	8b 4d a8	 mov	 ecx, DWORD PTR tv233[ebp]
  00396	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0039d	ff d2		 call	 edx
  0039f	85 c0		 test	 eax, eax
  003a1	0f 84 9c 00 00
	00		 je	 $LN9@helicopter

; 2053 : 			{
; 2054 : 				member_number = (1 << get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_NUMBER));

  003a7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  003ab	74 0a		 je	 SHORT $LN37@helicopter
  003ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  003b2	89 4d ac	 mov	 DWORD PTR tv246[ebp], ecx
  003b5	eb 21		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  003b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  003bd	83 c2 23	 add	 edx, 35			; 00000023H
  003c0	52		 push	 edx
  003c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d1	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv246[ebp], 0
$LN38@helicopter:
  003d8	b9 01 00 00 00	 mov	 ecx, 1
  003dd	85 c9		 test	 ecx, ecx
  003df	74 09		 je	 SHORT $LN39@helicopter
  003e1	c7 45 a8 4b 00
	00 00		 mov	 DWORD PTR tv254[ebp], 75 ; 0000004bH
  003e8	eb 21		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  003ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  003f0	83 c2 23	 add	 edx, 35			; 00000023H
  003f3	52		 push	 edx
  003f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003fe	50		 push	 eax
  003ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00404	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv254[ebp], 0
$LN40@helicopter:
  0040b	6a 4b		 push	 75			; 0000004bH
  0040d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00410	51		 push	 ecx
  00411	69 55 ac 5c 04
	00 00		 imul	 edx, DWORD PTR tv246[ebp], 1116
  00418	8b 45 a8	 mov	 eax, DWORD PTR tv254[ebp]
  0041b	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00422	ff d1		 call	 ecx
  00424	ba 01 00 00 00	 mov	 edx, 1
  00429	8b c8		 mov	 ecx, eax
  0042b	d3 e2		 shl	 edx, cl
  0042d	89 55 f0	 mov	 DWORD PTR _member_number$[ebp], edx

; 2055 : 
; 2056 : 				reassign_group_members_to_valid_tasks (group, task, member_number, TRUE);

  00430	6a 01		 push	 1
  00432	8b 45 f0	 mov	 eax, DWORD PTR _member_number$[ebp]
  00435	50		 push	 eax
  00436	8b 4d f4	 mov	 ecx, DWORD PTR _task$[ebp]
  00439	51		 push	 ecx
  0043a	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  0043d	52		 push	 edx
  0043e	e8 00 00 00 00	 call	 ?reassign_group_members_to_valid_tasks@@YGHPAUENTITY@@0IH@Z ; reassign_group_members_to_valid_tasks
$LN9@helicopter:

; 2057 : 			}
; 2058 : 		}
; 2059 : 
; 2060 : 		update_player_helicopter_waypoint_distance (en);

  00443	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00446	50		 push	 eax
  00447	e8 00 00 00 00	 call	 ?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ; update_player_helicopter_waypoint_distance

; 2061 : 
; 2062 : 		if (get_local_entity_int_value (en, INT_TYPE_LANDED))

  0044c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00450	74 0a		 je	 SHORT $LN41@helicopter
  00452	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00455	8b 08		 mov	 ecx, DWORD PTR [eax]
  00457	89 4d ac	 mov	 DWORD PTR tv271[ebp], ecx
  0045a	eb 1d		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  0045c	68 0e 08 00 00	 push	 2062			; 0000080eH
  00461	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00466	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0046c	52		 push	 edx
  0046d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00472	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv271[ebp], 0
$LN42@helicopter:
  00479	b8 01 00 00 00	 mov	 eax, 1
  0047e	85 c0		 test	 eax, eax
  00480	74 09		 je	 SHORT $LN43@helicopter
  00482	c7 45 a8 73 00
	00 00		 mov	 DWORD PTR tv278[ebp], 115 ; 00000073H
  00489	eb 1d		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  0048b	68 0e 08 00 00	 push	 2062			; 0000080eH
  00490	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00495	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0049b	51		 push	 ecx
  0049c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a1	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv278[ebp], 0
$LN44@helicopter:
  004a8	6a 73		 push	 115			; 00000073H
  004aa	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004ad	52		 push	 edx
  004ae	69 45 ac 5c 04
	00 00		 imul	 eax, DWORD PTR tv271[ebp], 1116
  004b5	8b 4d a8	 mov	 ecx, DWORD PTR tv278[ebp]
  004b8	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004bf	ff d2		 call	 edx
  004c1	85 c0		 test	 eax, eax
  004c3	0f 84 99 00 00
	00		 je	 $LN10@helicopter

; 2063 : 		{
; 2064 : 			set_client_server_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_SPIN_UP_TIMER, MAIN_ROTOR_SPIN_UP_TIMER);

  004c9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004cd	74 0a		 je	 SHORT $LN45@helicopter
  004cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  004d4	89 4d ac	 mov	 DWORD PTR tv291[ebp], ecx
  004d7	eb 21		 jmp	 SHORT $LN46@helicopter
$LN45@helicopter:
  004d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  004df	83 c2 2d	 add	 edx, 45			; 0000002dH
  004e2	52		 push	 edx
  004e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  004e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004ed	50		 push	 eax
  004ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004f3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv291[ebp], 0
$LN46@helicopter:
  004fa	b9 01 00 00 00	 mov	 ecx, 1
  004ff	85 c9		 test	 ecx, ecx
  00501	74 09		 je	 SHORT $LN47@helicopter
  00503	c7 45 a8 4a 00
	00 00		 mov	 DWORD PTR tv299[ebp], 74 ; 0000004aH
  0050a	eb 21		 jmp	 SHORT $LN48@helicopter
$LN47@helicopter:
  0050c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00512	83 c2 2d	 add	 edx, 45			; 0000002dH
  00515	52		 push	 edx
  00516	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0051b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00526	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv299[ebp], 0
$LN48@helicopter:
  0052d	51		 push	 ecx
  0052e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41c80000
  00536	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0053b	6a 4a		 push	 74			; 0000004aH
  0053d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00540	51		 push	 ecx
  00541	69 55 ac 78 05
	00 00		 imul	 edx, DWORD PTR tv291[ebp], 1400
  00548	8b 45 a8	 mov	 eax, DWORD PTR tv299[ebp]
  0054b	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  00552	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00558	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0055b	ff d0		 call	 eax

; 2065 : 		}
; 2066 : 		else

  0055d	e9 8f 00 00 00	 jmp	 $LN11@helicopter
$LN10@helicopter:

; 2067 : 		{
; 2068 : 			set_client_server_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_SPIN_UP_TIMER, 0.0);

  00562	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00566	74 0a		 je	 SHORT $LN49@helicopter
  00568	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0056b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0056d	89 4d ac	 mov	 DWORD PTR tv313[ebp], ecx
  00570	eb 21		 jmp	 SHORT $LN50@helicopter
$LN49@helicopter:
  00572	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  00578	83 c2 31	 add	 edx, 49			; 00000031H
  0057b	52		 push	 edx
  0057c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00581	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00586	50		 push	 eax
  00587	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0058c	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv313[ebp], 0
$LN50@helicopter:
  00593	b9 01 00 00 00	 mov	 ecx, 1
  00598	85 c9		 test	 ecx, ecx
  0059a	74 09		 je	 SHORT $LN51@helicopter
  0059c	c7 45 a8 4a 00
	00 00		 mov	 DWORD PTR tv321[ebp], 74 ; 0000004aH
  005a3	eb 21		 jmp	 SHORT $LN52@helicopter
$LN51@helicopter:
  005a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_release_player_control@@YGXPAUENTITY@@@Z@4JA
  005ab	83 c2 31	 add	 edx, 49			; 00000031H
  005ae	52		 push	 edx
  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  005b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  005b9	50		 push	 eax
  005ba	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005bf	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv321[ebp], 0
$LN52@helicopter:
  005c6	51		 push	 ecx
  005c7	0f 57 c0	 xorps	 xmm0, xmm0
  005ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cf	6a 4a		 push	 74			; 0000004aH
  005d1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  005d4	51		 push	 ecx
  005d5	69 55 ac 78 05
	00 00		 imul	 edx, DWORD PTR tv313[ebp], 1400
  005dc	8b 45 a8	 mov	 eax, DWORD PTR tv321[ebp]
  005df	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  005e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  005ec	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  005ef	ff d0		 call	 eax
$LN11@helicopter:

; 2069 : 		}
; 2070 : 	}
; 2071 : }

  005f1	5f		 pop	 edi
  005f2	5e		 pop	 esi
  005f3	5b		 pop	 ebx
  005f4	8b e5		 mov	 esp, ebp
  005f6	5d		 pop	 ebp
  005f7	c2 04 00	 ret	 4
?helicopter_release_player_control@@YGXPAUENTITY@@@Z ENDP ; helicopter_release_player_control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?helicopter_assume_player_control@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv297 = -92						; size = 4
tv256 = -92						; size = 4
tv235 = -92						; size = 4
tv214 = -92						; size = 4
tv191 = -92						; size = 4
tv170 = -92						; size = 4
tv145 = -92						; size = 4
tv88 = -92						; size = 4
tv289 = -88						; size = 4
tv273 = -88						; size = 4
tv248 = -88						; size = 4
tv227 = -88						; size = 4
tv207 = -88						; size = 4
tv183 = -88						; size = 4
tv162 = -88						; size = 4
tv137 = -88						; size = 4
tv80 = -88						; size = 4
_valid_members$ = -20					; size = 4
_member_number$ = -16					; size = 4
_task$ = -12						; size = 4
_guide$ = -8						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?helicopter_assume_player_control@@YGXPAUENTITY@@@Z PROC ; helicopter_assume_player_control, COMDAT

; 1963 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1964 : 	entity
; 1965 : 		*group,
; 1966 : 		*guide,
; 1967 : 		*task;
; 1968 : 
; 1969 : 	unsigned int
; 1970 : 		member_number,
; 1971 : 		valid_members;
; 1972 : 
; 1973 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@helicopter
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@helicopter:

; 1974 : 
; 1975 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN3@helicopter
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00035	83 c0 0c	 add	 eax, 12			; 0000000cH
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@helicopter:

; 1976 : 
; 1977 : 	ASSERT (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN11@helicopter
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d a8	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN12@helicopter
$LN11@helicopter:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  0005e	83 c2 0e	 add	 edx, 14			; 0000000eH
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN12@helicopter:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN13@helicopter
  00082	c7 45 a4 9c 00
	00 00		 mov	 DWORD PTR tv88[ebp], 156 ; 0000009cH
  00089	eb 21		 jmp	 SHORT $LN14@helicopter
$LN13@helicopter:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00091	83 c2 0e	 add	 edx, 14			; 0000000eH
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN14@helicopter:
  000ac	68 9c 00 00 00	 push	 156			; 0000009cH
  000b1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b4	51		 push	 ecx
  000b5	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000bc	8b 45 a4	 mov	 eax, DWORD PTR tv88[ebp]
  000bf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c6	ff d1		 call	 ecx
  000c8	85 c0		 test	 eax, eax
  000ca	75 18		 jne	 SHORT $LN4@helicopter
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  000d1	83 c0 0e	 add	 eax, 14			; 0000000eH
  000d4	50		 push	 eax
  000d5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@JOBJNECL@get_local_entity_int_value?5?$CIen?0@
  000df	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@helicopter:

; 1978 : 
; 1979 : 	//
; 1980 : 	// If the helicopter is doing an engage task - destroy the guide, and reassign the helicopter to a valid task
; 1981 : 	//
; 1982 : 
; 1983 : 	group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  000e4	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000e8	74 0a		 je	 SHORT $LN15@helicopter
  000ea	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ed	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ef	89 4d a8	 mov	 DWORD PTR tv137[ebp], ecx
  000f2	eb 21		 jmp	 SHORT $LN16@helicopter
$LN15@helicopter:
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  000fa	83 c2 14	 add	 edx, 20			; 00000014H
  000fd	52		 push	 edx
  000fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00103	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0010e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN16@helicopter:
  00115	b9 01 00 00 00	 mov	 ecx, 1
  0011a	85 c9		 test	 ecx, ecx
  0011c	74 09		 je	 SHORT $LN17@helicopter
  0011e	c7 45 a4 19 00
	00 00		 mov	 DWORD PTR tv145[ebp], 25 ; 00000019H
  00125	eb 21		 jmp	 SHORT $LN18@helicopter
$LN17@helicopter:
  00127	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  0012d	83 c2 14	 add	 edx, 20			; 00000014H
  00130	52		 push	 edx
  00131	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00136	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0013b	50		 push	 eax
  0013c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00141	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN18@helicopter:
  00148	6a 19		 push	 25			; 00000019H
  0014a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014d	51		 push	 ecx
  0014e	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 180
  00155	8b 45 a4	 mov	 eax, DWORD PTR tv145[ebp]
  00158	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0015f	ff d1		 call	 ecx
  00161	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 1984 : 
; 1985 : 	ASSERT (group);

  00164	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00168	75 18		 jne	 SHORT $LN5@helicopter
  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  0016f	83 c0 16	 add	 eax, 22			; 00000016H
  00172	50		 push	 eax
  00173	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00178	68 00 00 00 00	 push	 OFFSET ??_C@_05MGJOOGAJ@group@
  0017d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@helicopter:

; 1986 : 
; 1987 : 	guide = get_local_entity_parent (en, LIST_TYPE_FOLLOWER);

  00182	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00186	74 0a		 je	 SHORT $LN19@helicopter
  00188	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0018b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018d	89 4d a8	 mov	 DWORD PTR tv162[ebp], ecx
  00190	eb 21		 jmp	 SHORT $LN20@helicopter
$LN19@helicopter:
  00192	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00198	83 c2 18	 add	 edx, 24			; 00000018H
  0019b	52		 push	 edx
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ac	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv162[ebp], 0
$LN20@helicopter:
  001b3	b9 01 00 00 00	 mov	 ecx, 1
  001b8	85 c9		 test	 ecx, ecx
  001ba	74 09		 je	 SHORT $LN21@helicopter
  001bc	c7 45 a4 0d 00
	00 00		 mov	 DWORD PTR tv170[ebp], 13 ; 0000000dH
  001c3	eb 21		 jmp	 SHORT $LN22@helicopter
$LN21@helicopter:
  001c5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  001cb	83 c2 18	 add	 edx, 24			; 00000018H
  001ce	52		 push	 edx
  001cf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  001d9	50		 push	 eax
  001da	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001df	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv170[ebp], 0
$LN22@helicopter:
  001e6	6a 0d		 push	 13			; 0000000dH
  001e8	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001eb	51		 push	 ecx
  001ec	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv162[ebp], 180
  001f3	8b 45 a4	 mov	 eax, DWORD PTR tv170[ebp]
  001f6	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  001fd	ff d1		 call	 ecx
  001ff	89 45 f8	 mov	 DWORD PTR _guide$[ebp], eax

; 1988 : 
; 1989 : 	if (guide)

  00202	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00206	0f 84 a5 02 00
	00		 je	 $LN8@helicopter

; 1990 : 	{
; 1991 : 		task = get_local_entity_parent (guide, LIST_TYPE_GUIDE);

  0020c	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00210	74 0a		 je	 SHORT $LN23@helicopter
  00212	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  00215	8b 08		 mov	 ecx, DWORD PTR [eax]
  00217	89 4d a8	 mov	 DWORD PTR tv183[ebp], ecx
  0021a	eb 21		 jmp	 SHORT $LN24@helicopter
$LN23@helicopter:
  0021c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00222	83 c2 1c	 add	 edx, 28			; 0000001cH
  00225	52		 push	 edx
  00226	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00230	50		 push	 eax
  00231	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00236	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv183[ebp], 0
$LN24@helicopter:
  0023d	b9 01 00 00 00	 mov	 ecx, 1
  00242	85 c9		 test	 ecx, ecx
  00244	74 09		 je	 SHORT $LN25@helicopter
  00246	c7 45 a4 10 00
	00 00		 mov	 DWORD PTR tv191[ebp], 16 ; 00000010H
  0024d	eb 21		 jmp	 SHORT $LN26@helicopter
$LN25@helicopter:
  0024f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00255	83 c2 1c	 add	 edx, 28			; 0000001cH
  00258	52		 push	 edx
  00259	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00269	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv191[ebp], 0
$LN26@helicopter:
  00270	6a 10		 push	 16			; 00000010H
  00272	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  00275	51		 push	 ecx
  00276	69 55 a8 b4 00
	00 00		 imul	 edx, DWORD PTR tv183[ebp], 180
  0027d	8b 45 a4	 mov	 eax, DWORD PTR tv191[ebp]
  00280	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00287	ff d1		 call	 ecx
  00289	89 45 f4	 mov	 DWORD PTR _task$[ebp], eax

; 1992 : 
; 1993 : 		ASSERT (task);

  0028c	83 7d f4 00	 cmp	 DWORD PTR _task$[ebp], 0
  00290	75 18		 jne	 SHORT $LN7@helicopter
  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00297	83 c0 1e	 add	 eax, 30			; 0000001eH
  0029a	50		 push	 eax
  0029b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a0	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  002a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@helicopter:

; 1994 : 
; 1995 : 		if (get_local_entity_int_value (task, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_TASK_ENGAGE)

  002aa	83 7d f4 00	 cmp	 DWORD PTR _task$[ebp], 0
  002ae	74 0a		 je	 SHORT $LN27@helicopter
  002b0	8b 45 f4	 mov	 eax, DWORD PTR _task$[ebp]
  002b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  002b5	89 4d a8	 mov	 DWORD PTR tv207[ebp], ecx
  002b8	eb 1d		 jmp	 SHORT $LN28@helicopter
$LN27@helicopter:
  002ba	68 cb 07 00 00	 push	 1995			; 000007cbH
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002ca	52		 push	 edx
  002cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002d0	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv207[ebp], 0
$LN28@helicopter:
  002d7	b8 01 00 00 00	 mov	 eax, 1
  002dc	85 c0		 test	 eax, eax
  002de	74 09		 je	 SHORT $LN29@helicopter
  002e0	c7 45 a4 34 00
	00 00		 mov	 DWORD PTR tv214[ebp], 52 ; 00000034H
  002e7	eb 1d		 jmp	 SHORT $LN30@helicopter
$LN29@helicopter:
  002e9	68 cb 07 00 00	 push	 1995			; 000007cbH
  002ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002f9	51		 push	 ecx
  002fa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ff	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv214[ebp], 0
$LN30@helicopter:
  00306	6a 34		 push	 52			; 00000034H
  00308	8b 55 f4	 mov	 edx, DWORD PTR _task$[ebp]
  0030b	52		 push	 edx
  0030c	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv207[ebp], 1116
  00313	8b 4d a4	 mov	 ecx, DWORD PTR tv214[ebp]
  00316	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0031d	ff d2		 call	 edx
  0031f	83 f8 09	 cmp	 eax, 9
  00322	0f 85 89 01 00
	00		 jne	 $LN8@helicopter

; 1996 : 		{
; 1997 : 			member_number = (1 << get_local_entity_int_value (en, INT_TYPE_GROUP_MEMBER_NUMBER));

  00328	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0032c	74 0a		 je	 SHORT $LN31@helicopter
  0032e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00331	8b 08		 mov	 ecx, DWORD PTR [eax]
  00333	89 4d a8	 mov	 DWORD PTR tv227[ebp], ecx
  00336	eb 21		 jmp	 SHORT $LN32@helicopter
$LN31@helicopter:
  00338	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  0033e	83 c2 22	 add	 edx, 34			; 00000022H
  00341	52		 push	 edx
  00342	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00352	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN32@helicopter:
  00359	b9 01 00 00 00	 mov	 ecx, 1
  0035e	85 c9		 test	 ecx, ecx
  00360	74 09		 je	 SHORT $LN33@helicopter
  00362	c7 45 a4 4b 00
	00 00		 mov	 DWORD PTR tv235[ebp], 75 ; 0000004bH
  00369	eb 21		 jmp	 SHORT $LN34@helicopter
$LN33@helicopter:
  0036b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00371	83 c2 22	 add	 edx, 34			; 00000022H
  00374	52		 push	 edx
  00375	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0037a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00385	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN34@helicopter:
  0038c	6a 4b		 push	 75			; 0000004bH
  0038e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00391	51		 push	 ecx
  00392	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv227[ebp], 1116
  00399	8b 45 a4	 mov	 eax, DWORD PTR tv235[ebp]
  0039c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003a3	ff d1		 call	 ecx
  003a5	ba 01 00 00 00	 mov	 edx, 1
  003aa	8b c8		 mov	 ecx, eax
  003ac	d3 e2		 shl	 edx, cl
  003ae	89 55 f0	 mov	 DWORD PTR _member_number$[ebp], edx

; 1998 : 
; 1999 : 			valid_members = get_local_entity_int_value (guide, INT_TYPE_VALID_GUIDE_MEMBERS);

  003b1	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  003b5	74 0a		 je	 SHORT $LN35@helicopter
  003b7	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  003ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  003bc	89 4d a8	 mov	 DWORD PTR tv248[ebp], ecx
  003bf	eb 21		 jmp	 SHORT $LN36@helicopter
$LN35@helicopter:
  003c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  003c7	83 c2 24	 add	 edx, 36			; 00000024H
  003ca	52		 push	 edx
  003cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003db	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv248[ebp], 0
$LN36@helicopter:
  003e2	b9 01 00 00 00	 mov	 ecx, 1
  003e7	85 c9		 test	 ecx, ecx
  003e9	74 09		 je	 SHORT $LN37@helicopter
  003eb	c7 45 a4 f0 00
	00 00		 mov	 DWORD PTR tv256[ebp], 240 ; 000000f0H
  003f2	eb 21		 jmp	 SHORT $LN38@helicopter
$LN37@helicopter:
  003f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  003fa	83 c2 24	 add	 edx, 36			; 00000024H
  003fd	52		 push	 edx
  003fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00403	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00408	50		 push	 eax
  00409	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv256[ebp], 0
$LN38@helicopter:
  00415	68 f0 00 00 00	 push	 240			; 000000f0H
  0041a	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  0041d	51		 push	 ecx
  0041e	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv248[ebp], 1116
  00425	8b 45 a4	 mov	 eax, DWORD PTR tv256[ebp]
  00428	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0042f	ff d1		 call	 ecx
  00431	89 45 ec	 mov	 DWORD PTR _valid_members$[ebp], eax

; 2000 : 
; 2001 : 			ASSERT (valid_members == member_number);

  00434	8b 45 ec	 mov	 eax, DWORD PTR _valid_members$[ebp]
  00437	3b 45 f0	 cmp	 eax, DWORD PTR _member_number$[ebp]
  0043a	74 18		 je	 SHORT $LN9@helicopter
  0043c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  00441	83 c0 26	 add	 eax, 38			; 00000026H
  00444	50		 push	 eax
  00445	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0044a	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@FOJECDIJ@valid_members?5?$DN?$DN?5member_number@
  0044f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN9@helicopter:

; 2002 : 
; 2003 : 			destroy_client_server_entity (guide);

  00454	83 7d f8 00	 cmp	 DWORD PTR _guide$[ebp], 0
  00458	74 0a		 je	 SHORT $LN39@helicopter
  0045a	8b 45 f8	 mov	 eax, DWORD PTR _guide$[ebp]
  0045d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0045f	89 4d a8	 mov	 DWORD PTR tv273[ebp], ecx
  00462	eb 21		 jmp	 SHORT $LN40@helicopter
$LN39@helicopter:
  00464	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  0046a	83 c2 28	 add	 edx, 40			; 00000028H
  0046d	52		 push	 edx
  0046e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00473	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00478	50		 push	 eax
  00479	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0047e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv273[ebp], 0
$LN40@helicopter:
  00485	8b 4d f8	 mov	 ecx, DWORD PTR _guide$[ebp]
  00488	51		 push	 ecx
  00489	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0048f	c1 e2 02	 shl	 edx, 2
  00492	8b 45 a8	 mov	 eax, DWORD PTR tv273[ebp]
  00495	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0049c	ff d1		 call	 ecx

; 2004 : 
; 2005 : 			reassign_group_members_to_valid_tasks (group, task, member_number, FALSE);

  0049e	6a 00		 push	 0
  004a0	8b 45 f0	 mov	 eax, DWORD PTR _member_number$[ebp]
  004a3	50		 push	 eax
  004a4	8b 4d f4	 mov	 ecx, DWORD PTR _task$[ebp]
  004a7	51		 push	 ecx
  004a8	8b 55 fc	 mov	 edx, DWORD PTR _group$[ebp]
  004ab	52		 push	 edx
  004ac	e8 00 00 00 00	 call	 ?reassign_group_members_to_valid_tasks@@YGHPAUENTITY@@0IH@Z ; reassign_group_members_to_valid_tasks
$LN8@helicopter:

; 2006 : 		}
; 2007 : 	}
; 2008 : 
; 2009 : 	set_client_server_entity_float_value (en, FLOAT_TYPE_MAIN_ROTOR_SPIN_UP_TIMER, 0.0);

  004b1	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  004b5	74 0a		 je	 SHORT $LN41@helicopter
  004b7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  004bc	89 4d a8	 mov	 DWORD PTR tv289[ebp], ecx
  004bf	eb 21		 jmp	 SHORT $LN42@helicopter
$LN41@helicopter:
  004c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  004c7	83 c2 2e	 add	 edx, 46			; 0000002eH
  004ca	52		 push	 edx
  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  004d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004d5	50		 push	 eax
  004d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004db	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv289[ebp], 0
$LN42@helicopter:
  004e2	b9 01 00 00 00	 mov	 ecx, 1
  004e7	85 c9		 test	 ecx, ecx
  004e9	74 09		 je	 SHORT $LN43@helicopter
  004eb	c7 45 a4 4a 00
	00 00		 mov	 DWORD PTR tv297[ebp], 74 ; 0000004aH
  004f2	eb 21		 jmp	 SHORT $LN44@helicopter
$LN43@helicopter:
  004f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??helicopter_assume_player_control@@YGXPAUENTITY@@@Z@4JA
  004fa	83 c2 2e	 add	 edx, 46			; 0000002eH
  004fd	52		 push	 edx
  004fe	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00503	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00508	50		 push	 eax
  00509	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0050e	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv297[ebp], 0
$LN44@helicopter:
  00515	51		 push	 ecx
  00516	0f 57 c0	 xorps	 xmm0, xmm0
  00519	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051e	6a 4a		 push	 74			; 0000004aH
  00520	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00523	51		 push	 ecx
  00524	69 55 a8 78 05
	00 00		 imul	 edx, DWORD PTR tv289[ebp], 1400
  0052b	8b 45 a4	 mov	 eax, DWORD PTR tv297[ebp]
  0052e	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  00535	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  0053b	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  0053e	ff d0		 call	 eax

; 2010 : 
; 2011 : 	update_player_helicopter_waypoint_distance (en);

  00540	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00543	50		 push	 eax
  00544	e8 00 00 00 00	 call	 ?update_player_helicopter_waypoint_distance@@YGXPAUENTITY@@@Z ; update_player_helicopter_waypoint_distance

; 2012 : }

  00549	5f		 pop	 edi
  0054a	5e		 pop	 esi
  0054b	5b		 pop	 ebx
  0054c	8b e5		 mov	 esp, ebp
  0054e	5d		 pop	 ebp
  0054f	c2 04 00	 ret	 4
?helicopter_assume_player_control@@YGXPAUENTITY@@@Z ENDP ; helicopter_assume_player_control
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z
_TEXT	SEGMENT
tv135 = -84						; size = 4
tv180 = -80						; size = 4
tv128 = -80						; size = 4
tv256 = -76						; size = 4
tv234 = -76						; size = 4
tv215 = -76						; size = 4
tv196 = -76						; size = 4
tv174 = -76						; size = 4
tv155 = -76						; size = 4
tv85 = -76						; size = 4
tv249 = -72						; size = 4
tv227 = -72						; size = 4
tv208 = -72						; size = 4
tv189 = -72						; size = 4
tv167 = -72						; size = 4
tv148 = -72						; size = 4
tv78 = -72						; size = 4
tv70 = -72						; size = 4
_task$ = -4						; size = 4
_en$ = 8						; size = 4
_pilot$ = 12						; size = 4
?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z PROC ; get_local_entity_suitable_for_player, COMDAT

; 1816 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1817 : 	entity
; 1818 : 		*task;
; 1819 : 
; 1820 : 	if (!en)

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 07		 jne	 SHORT $LN4@get_local_

; 1821 : 	{
; 1822 : 		return FALSE;

  0000f	33 c0		 xor	 eax, eax
  00011	e9 58 04 00 00	 jmp	 $LN1@get_local_
$LN4@get_local_:

; 1823 : 	}
; 1824 : 
; 1825 : 	if (get_local_entity_type (en) != ENTITY_TYPE_HELICOPTER)

  00016	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001a	74 0a		 je	 SHORT $LN19@get_local_
  0001c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d b8	 mov	 DWORD PTR tv70[ebp], ecx
  00024	eb 1d		 jmp	 SHORT $LN5@get_local_
$LN19@get_local_:
  00026	68 21 07 00 00	 push	 1825			; 00000721H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00030	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv70[ebp], 0
$LN5@get_local_:

; 1826 : 	{
; 1827 : 		// JB 030313 Fly any aircraft
; 1828 : 		//return FALSE;
; 1829 : 	}
; 1830 : 
; 1831 : 	//
; 1832 : 	// don't allow user to set gunship to wrong side helicopter
; 1833 : 	// Jabberwock 040202 - unless we're in free flight
; 1834 : 
; 1835 : 	if (pilot)

  00043	83 7d 0c 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00047	0f 84 05 01 00
	00		 je	 $LN6@get_local_

; 1836 : 	{
; 1837 : 		if ((get_local_entity_int_value (pilot, INT_TYPE_SIDE) != get_local_entity_int_value (en, INT_TYPE_SIDE)) && (get_game_type () != GAME_TYPE_FREE_FLIGHT))

  0004d	83 7d 0c 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00051	74 0a		 je	 SHORT $LN21@get_local_
  00053	8b 45 0c	 mov	 eax, DWORD PTR _pilot$[ebp]
  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	89 4d b8	 mov	 DWORD PTR tv78[ebp], ecx
  0005b	eb 1d		 jmp	 SHORT $LN22@get_local_
$LN21@get_local_:
  0005d	68 2d 07 00 00	 push	 1837			; 0000072dH
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006d	52		 push	 edx
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00073	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv78[ebp], 0
$LN22@get_local_:
  0007a	b8 01 00 00 00	 mov	 eax, 1
  0007f	85 c0		 test	 eax, eax
  00081	74 09		 je	 SHORT $LN23@get_local_
  00083	c7 45 b4 bb 00
	00 00		 mov	 DWORD PTR tv85[ebp], 187 ; 000000bbH
  0008a	eb 1d		 jmp	 SHORT $LN24@get_local_
$LN23@get_local_:
  0008c	68 2d 07 00 00	 push	 1837			; 0000072dH
  00091	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00096	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a2	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv85[ebp], 0
$LN24@get_local_:
  000a9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ad	74 0a		 je	 SHORT $LN25@get_local_
  000af	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000b2	8b 02		 mov	 eax, DWORD PTR [edx]
  000b4	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000b7	eb 1d		 jmp	 SHORT $LN26@get_local_
$LN25@get_local_:
  000b9	68 2d 07 00 00	 push	 1837			; 0000072dH
  000be	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000c9	51		 push	 ecx
  000ca	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000cf	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN26@get_local_:
  000d6	ba 01 00 00 00	 mov	 edx, 1
  000db	85 d2		 test	 edx, edx
  000dd	74 09		 je	 SHORT $LN27@get_local_
  000df	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv135[ebp], 187 ; 000000bbH
  000e6	eb 1c		 jmp	 SHORT $LN28@get_local_
$LN27@get_local_:
  000e8	68 2d 07 00 00	 push	 1837			; 0000072dH
  000ed	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000f7	50		 push	 eax
  000f8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fd	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN28@get_local_:
  00104	68 bb 00 00 00	 push	 187			; 000000bbH
  00109	8b 4d 0c	 mov	 ecx, DWORD PTR _pilot$[ebp]
  0010c	51		 push	 ecx
  0010d	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv78[ebp], 1116
  00114	8b 45 b4	 mov	 eax, DWORD PTR tv85[ebp]
  00117	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0011e	ff d1		 call	 ecx
  00120	8b f0		 mov	 esi, eax
  00122	68 bb 00 00 00	 push	 187			; 000000bbH
  00127	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0012a	52		 push	 edx
  0012b	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv128[ebp], 1116
  00132	8b 4d ac	 mov	 ecx, DWORD PTR tv135[ebp]
  00135	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0013c	ff d2		 call	 edx
  0013e	3b f0		 cmp	 esi, eax
  00140	74 10		 je	 SHORT $LN6@get_local_
  00142	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 1 ; game_type
  00149	74 07		 je	 SHORT $LN6@get_local_

; 1838 : 		{
; 1839 : 			return FALSE;

  0014b	33 c0		 xor	 eax, eax
  0014d	e9 1c 03 00 00	 jmp	 $LN1@get_local_
$LN6@get_local_:

; 1840 : 		}
; 1841 : 	}
; 1842 : 
; 1843 : 	//
; 1844 : 	// check that the entity is the correct sub_type, i.e apache or havoc / comanche or hokum
; 1845 : 	//
; 1846 : 
; 1847 : 	if (!get_local_entity_int_value (en, INT_TYPE_PLAYER_CONTROLLABLE))

  00152	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00156	74 0a		 je	 SHORT $LN29@get_local_
  00158	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015d	89 4d b8	 mov	 DWORD PTR tv148[ebp], ecx
  00160	eb 1d		 jmp	 SHORT $LN30@get_local_
$LN29@get_local_:
  00162	68 37 07 00 00	 push	 1847			; 00000737H
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00178	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv148[ebp], 0
$LN30@get_local_:
  0017f	b8 01 00 00 00	 mov	 eax, 1
  00184	85 c0		 test	 eax, eax
  00186	74 09		 je	 SHORT $LN31@get_local_
  00188	c7 45 b4 9d 00
	00 00		 mov	 DWORD PTR tv155[ebp], 157 ; 0000009dH
  0018f	eb 1d		 jmp	 SHORT $LN32@get_local_
$LN31@get_local_:
  00191	68 37 07 00 00	 push	 1847			; 00000737H
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0019b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001a1	51		 push	 ecx
  001a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN32@get_local_:
  001ae	68 9d 00 00 00	 push	 157			; 0000009dH
  001b3	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001b6	52		 push	 edx
  001b7	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv148[ebp], 1116
  001be	8b 4d b4	 mov	 ecx, DWORD PTR tv155[ebp]
  001c1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001c8	ff d2		 call	 edx
  001ca	85 c0		 test	 eax, eax
  001cc	75 07		 jne	 SHORT $LN8@get_local_

; 1848 : 	{
; 1849 : 		return FALSE;

  001ce	33 c0		 xor	 eax, eax
  001d0	e9 99 02 00 00	 jmp	 $LN1@get_local_
$LN8@get_local_:

; 1850 : 	}
; 1851 : 
; 1852 : 	switch (get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE))

  001d5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001d9	74 0a		 je	 SHORT $LN33@get_local_
  001db	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001de	8b 08		 mov	 ecx, DWORD PTR [eax]
  001e0	89 4d b8	 mov	 DWORD PTR tv167[ebp], ecx
  001e3	eb 1d		 jmp	 SHORT $LN34@get_local_
$LN33@get_local_:
  001e5	68 3c 07 00 00	 push	 1852			; 0000073cH
  001ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001f5	52		 push	 edx
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN34@get_local_:
  00202	b8 01 00 00 00	 mov	 eax, 1
  00207	85 c0		 test	 eax, eax
  00209	74 09		 je	 SHORT $LN35@get_local_
  0020b	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv174[ebp], 52 ; 00000034H
  00212	eb 1d		 jmp	 SHORT $LN36@get_local_
$LN35@get_local_:
  00214	68 3c 07 00 00	 push	 1852			; 0000073cH
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00224	51		 push	 ecx
  00225	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022a	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv174[ebp], 0
$LN36@get_local_:
  00231	6a 34		 push	 52			; 00000034H
  00233	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00236	52		 push	 edx
  00237	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv167[ebp], 1116
  0023e	8b 4d b4	 mov	 ecx, DWORD PTR tv174[ebp]
  00241	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00248	ff d2		 call	 edx
  0024a	89 45 b0	 mov	 DWORD PTR tv180[ebp], eax

; 1853 : 	{
; 1854 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 1855 : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 1856 : 		{
; 1857 : 			if (!get_global_apache_havoc_installed())
; 1858 : 			{
; 1859 : 				// JB 030311 Disable EEAH check
; 1860 : 				//return FALSE;
; 1861 : 			}
; 1862 : 
; 1863 : 			break;
; 1864 : 		}
; 1865 : 		case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 1866 : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 1867 : 		////Moje 030606 Fly the Black-Hawk, 030612 Hind 030816 AH64A and KA50
; 1868 : 		case ENTITY_SUB_TYPE_AIRCRAFT_UH60_BLACK_HAWK:
; 1869 : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI24D_HIND:
; 1870 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64A_APACHE:
; 1871 : 		// new entities by GCsDriver  08-12-2007
; 1872 : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA29_HELIX_B:
; 1873 : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM:
; 1874 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1T_SEACOBRA:
; 1875 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1W_SUPERCOBRA:
; 1876 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1Z_VIPER:
; 1877 : 		case ENTITY_SUB_TYPE_AIRCRAFT_OH58D_KIOWA_WARRIOR:
; 1878 : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI17_HIP:
; 1879 : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI6_HOOK:
; 1880 : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH3_JOLLY_GREEN_GIANT:
; 1881 : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH53E_SUPER_STALLION:
; 1882 : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH46E_SEA_KNIGHT:
; 1883 : 		case ENTITY_SUB_TYPE_AIRCRAFT_CH47D_CHINOOK:
; 1884 : 		case ENTITY_SUB_TYPE_AIRCRAFT_MV22_OSPREY:
; 1885 : 		{
; 1886 : 			break;
; 1887 : 		}
; 1888 : 		default:
; 1889 : 		{
; 1890 : 			// JB 030311 Fly any aircraft
; 1891 : 			//debug_fatal ("HELICOP: Player Controllable Flag Set For Invalid Aircraft (%s)", get_local_entity_string (en, STRING_TYPE_FULL_NAME));
; 1892 : 		}
; 1893 : 	}
; 1894 : 
; 1895 : 	//
; 1896 : 	// check that new gunship entity is not already being flown by another human
; 1897 : 	//
; 1898 : 
; 1899 : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  0024d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00251	74 0a		 je	 SHORT $LN37@get_local_
  00253	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00256	8b 08		 mov	 ecx, DWORD PTR [eax]
  00258	89 4d b8	 mov	 DWORD PTR tv189[ebp], ecx
  0025b	eb 1d		 jmp	 SHORT $LN38@get_local_
$LN37@get_local_:
  0025d	68 6b 07 00 00	 push	 1899			; 0000076bH
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00267	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026d	52		 push	 edx
  0026e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00273	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv189[ebp], 0
$LN38@get_local_:
  0027a	b8 01 00 00 00	 mov	 eax, 1
  0027f	85 c0		 test	 eax, eax
  00281	74 09		 je	 SHORT $LN39@get_local_
  00283	c7 45 b4 9c 00
	00 00		 mov	 DWORD PTR tv196[ebp], 156 ; 0000009cH
  0028a	eb 1d		 jmp	 SHORT $LN40@get_local_
$LN39@get_local_:
  0028c	68 6b 07 00 00	 push	 1899			; 0000076bH
  00291	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00296	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0029c	51		 push	 ecx
  0029d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002a2	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv196[ebp], 0
$LN40@get_local_:
  002a9	68 9c 00 00 00	 push	 156			; 0000009cH
  002ae	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002b1	52		 push	 edx
  002b2	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv189[ebp], 1116
  002b9	8b 4d b4	 mov	 ecx, DWORD PTR tv196[ebp]
  002bc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002c3	ff d2		 call	 edx
  002c5	85 c0		 test	 eax, eax
  002c7	74 07		 je	 SHORT $LN13@get_local_

; 1900 : 	{
; 1901 : 		return FALSE;

  002c9	33 c0		 xor	 eax, eax
  002cb	e9 9e 01 00 00	 jmp	 $LN1@get_local_
$LN13@get_local_:

; 1902 : 	}
; 1903 : 
; 1904 : 	//
; 1905 : 	// check that new gunship entity is alive
; 1906 : 	//
; 1907 : 
; 1908 : 	if (get_local_entity_int_value (en, INT_TYPE_ALIVE) == FALSE)

  002d0	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002d4	74 0a		 je	 SHORT $LN41@get_local_
  002d6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  002db	89 4d b8	 mov	 DWORD PTR tv208[ebp], ecx
  002de	eb 1d		 jmp	 SHORT $LN42@get_local_
$LN41@get_local_:
  002e0	68 74 07 00 00	 push	 1908			; 00000774H
  002e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002f0	52		 push	 edx
  002f1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002f6	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv208[ebp], 0
$LN42@get_local_:
  002fd	b8 01 00 00 00	 mov	 eax, 1
  00302	85 c0		 test	 eax, eax
  00304	74 09		 je	 SHORT $LN43@get_local_
  00306	c7 45 b4 07 00
	00 00		 mov	 DWORD PTR tv215[ebp], 7
  0030d	eb 1d		 jmp	 SHORT $LN44@get_local_
$LN43@get_local_:
  0030f	68 74 07 00 00	 push	 1908			; 00000774H
  00314	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00319	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0031f	51		 push	 ecx
  00320	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00325	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv215[ebp], 0
$LN44@get_local_:
  0032c	6a 07		 push	 7
  0032e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00331	52		 push	 edx
  00332	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv208[ebp], 1116
  00339	8b 4d b4	 mov	 ecx, DWORD PTR tv215[ebp]
  0033c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00343	ff d2		 call	 edx
  00345	85 c0		 test	 eax, eax
  00347	75 07		 jne	 SHORT $LN14@get_local_

; 1909 : 	{
; 1910 : 		return FALSE;

  00349	33 c0		 xor	 eax, eax
  0034b	e9 1e 01 00 00	 jmp	 $LN1@get_local_
$LN14@get_local_:

; 1911 : 	}
; 1912 : 
; 1913 : 	//
; 1914 : 	// check that new gunship entity hasn't ejected
; 1915 : 	//
; 1916 : 
; 1917 : 	if (get_local_entity_int_value (en, INT_TYPE_EJECTED))

  00350	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00354	74 0a		 je	 SHORT $LN45@get_local_
  00356	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00359	8b 08		 mov	 ecx, DWORD PTR [eax]
  0035b	89 4d b8	 mov	 DWORD PTR tv227[ebp], ecx
  0035e	eb 1d		 jmp	 SHORT $LN46@get_local_
$LN45@get_local_:
  00360	68 7d 07 00 00	 push	 1917			; 0000077dH
  00365	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0036a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00370	52		 push	 edx
  00371	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00376	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv227[ebp], 0
$LN46@get_local_:
  0037d	b8 01 00 00 00	 mov	 eax, 1
  00382	85 c0		 test	 eax, eax
  00384	74 09		 je	 SHORT $LN47@get_local_
  00386	c7 45 b4 31 00
	00 00		 mov	 DWORD PTR tv234[ebp], 49 ; 00000031H
  0038d	eb 1d		 jmp	 SHORT $LN48@get_local_
$LN47@get_local_:
  0038f	68 7d 07 00 00	 push	 1917			; 0000077dH
  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00399	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0039f	51		 push	 ecx
  003a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv234[ebp], 0
$LN48@get_local_:
  003ac	6a 31		 push	 49			; 00000031H
  003ae	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  003b1	52		 push	 edx
  003b2	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv227[ebp], 1116
  003b9	8b 4d b4	 mov	 ecx, DWORD PTR tv234[ebp]
  003bc	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003c3	ff d2		 call	 edx
  003c5	85 c0		 test	 eax, eax
  003c7	74 07		 je	 SHORT $LN15@get_local_

; 1918 : 	{
; 1919 : 		return FALSE;

  003c9	33 c0		 xor	 eax, eax
  003cb	e9 9e 00 00 00	 jmp	 $LN1@get_local_
$LN15@get_local_:

; 1920 : 	}
; 1921 : 
; 1922 : 	//
; 1923 : 	// check that gunship isn't landing
; 1924 : 	//
; 1925 : 
; 1926 : 	// JB 030313 Enable control of aircraft while landing and taxiing.
; 1927 : 	/*
; 1928 : 	switch (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE))
; 1929 : 	{
; 1930 : 
; 1931 : 		case OPERATIONAL_STATE_LANDING:
; 1932 : 		case OPERATIONAL_STATE_LANDING_HOLDING:
; 1933 : 		case OPERATIONAL_STATE_TAXIING:
; 1934 : 		{
; 1935 : 
; 1936 : 			return FALSE;
; 1937 : 		}
; 1938 : 	}
; 1939 : 	*/
; 1940 : 
; 1941 : 	//
; 1942 : 	// If the entity is doing a task, only allow player to join it if task incomplete
; 1943 : 	//
; 1944 : 
; 1945 : 	task = get_local_entity_primary_task (en);

  003d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
  003d9	89 45 fc	 mov	 DWORD PTR _task$[ebp], eax

; 1946 : 
; 1947 : 	if (task)

  003dc	83 7d fc 00	 cmp	 DWORD PTR _task$[ebp], 0
  003e0	0f 84 83 00 00
	00		 je	 $LN16@get_local_

; 1948 : 	{
; 1949 : 		if (get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED) != TASK_INCOMPLETE)

  003e6	83 7d fc 00	 cmp	 DWORD PTR _task$[ebp], 0
  003ea	74 0a		 je	 SHORT $LN49@get_local_
  003ec	8b 45 fc	 mov	 eax, DWORD PTR _task$[ebp]
  003ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  003f1	89 4d b8	 mov	 DWORD PTR tv249[ebp], ecx
  003f4	eb 1d		 jmp	 SHORT $LN50@get_local_
$LN49@get_local_:
  003f6	68 9d 07 00 00	 push	 1949			; 0000079dH
  003fb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00400	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00406	52		 push	 edx
  00407	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0040c	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv249[ebp], 0
$LN50@get_local_:
  00413	b8 01 00 00 00	 mov	 eax, 1
  00418	85 c0		 test	 eax, eax
  0041a	74 09		 je	 SHORT $LN51@get_local_
  0041c	c7 45 b4 d9 00
	00 00		 mov	 DWORD PTR tv256[ebp], 217 ; 000000d9H
  00423	eb 1d		 jmp	 SHORT $LN52@get_local_
$LN51@get_local_:
  00425	68 9d 07 00 00	 push	 1949			; 0000079dH
  0042a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0042f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00435	51		 push	 ecx
  00436	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0043b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv256[ebp], 0
$LN52@get_local_:
  00442	68 d9 00 00 00	 push	 217			; 000000d9H
  00447	8b 55 fc	 mov	 edx, DWORD PTR _task$[ebp]
  0044a	52		 push	 edx
  0044b	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv249[ebp], 1116
  00452	8b 4d b4	 mov	 ecx, DWORD PTR tv256[ebp]
  00455	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0045c	ff d2		 call	 edx
  0045e	85 c0		 test	 eax, eax
  00460	74 07		 je	 SHORT $LN16@get_local_

; 1950 : 		{
; 1951 : 			return TRUE;	////Moje 030606 Changed FALSE to TRUE, makes choppers flyable after mission complete

  00462	b8 01 00 00 00	 mov	 eax, 1
  00467	eb 05		 jmp	 SHORT $LN1@get_local_
$LN16@get_local_:

; 1952 : 		}
; 1953 : 	}
; 1954 : 
; 1955 : 	return TRUE;

  00469	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_local_:

; 1956 : }

  0046e	5f		 pop	 edi
  0046f	5e		 pop	 esi
  00470	5b		 pop	 ebx
  00471	8b e5		 mov	 esp, ebp
  00473	5d		 pop	 ebp
  00474	c2 08 00	 ret	 8
?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z ENDP ; get_local_entity_suitable_for_player
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z
_TEXT	SEGMENT
tv201 = -108						; size = 4
tv245 = -104						; size = 4
tv220 = -104						; size = 4
tv203 = -104						; size = 8
tv157 = -104						; size = 4
tv136 = -104						; size = 4
tv237 = -100						; size = 4
tv213 = -100						; size = 4
tv150 = -100						; size = 4
tv128 = -100						; size = 4
_size$1 = -32						; size = 4
_rate$2 = -28						; size = 4
_stop_type$ = -24					; size = 4
_start_type$ = -20					; size = 4
_start_position$ = -16					; size = 4
_spec$ = -12						; size = 4
_sound_raw$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_direction$ = 12					; size = 4
_engine_num$ = 16					; size = 4
?play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z PROC ; play_helicopter_winding_rotor_sounds, COMDAT

; 1706 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 6c	 sub	 esp, 108		; 0000006cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1707 : 	helicopter
; 1708 : 		*raw;
; 1709 : 
; 1710 : 	sound_effect
; 1711 : 		*sound_raw;
; 1712 : 
; 1713 : 	entity
; 1714 : 		*spec;
; 1715 : 
; 1716 : 	float
; 1717 : 		start_position;
; 1718 : 
; 1719 : 	entity_sub_types
; 1720 : 		start_type,
; 1721 : 		stop_type;
; 1722 : 
; 1723 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@play_helic
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  00014	83 c0 11	 add	 eax, 17			; 00000011H
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@play_helic:

; 1724 : 	ASSERT ((direction == 1) || (direction == -1));

  00027	83 7d 0c 01	 cmp	 DWORD PTR _direction$[ebp], 1
  0002b	74 1e		 je	 SHORT $LN5@play_helic
  0002d	83 7d 0c ff	 cmp	 DWORD PTR _direction$[ebp], -1
  00031	74 18		 je	 SHORT $LN5@play_helic
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  00038	83 c0 12	 add	 eax, 18			; 00000012H
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EPEAJBLJ@?$CIdirection?5?$DN?$DN?51?$CJ?5?$HM?$HM?5?$CIdirection?5@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@play_helic:

; 1725 : 	ASSERT (engine_num >= 0 && engine_num <= 2);

  0004b	83 7d 10 00	 cmp	 DWORD PTR _engine_num$[ebp], 0
  0004f	7c 06		 jl	 SHORT $LN7@play_helic
  00051	83 7d 10 02	 cmp	 DWORD PTR _engine_num$[ebp], 2
  00055	7e 18		 jle	 SHORT $LN6@play_helic
$LN7@play_helic:
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  0005c	83 c0 13	 add	 eax, 19			; 00000013H
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00065	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@BAJEDOHM@engine_num?5?$DO?$DN?50?5?$CG?$CG?5engine_num?5?$DM@
  0006a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@play_helic:

; 1726 : 
; 1727 : 	raw = (helicopter *) get_local_entity_data (en);

  0006f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00072	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00075	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1728 : 
; 1729 : 	if (direction == 1)

  00078	83 7d 0c 01	 cmp	 DWORD PTR _direction$[ebp], 1
  0007c	75 2e		 jne	 SHORT $LN8@play_helic

; 1730 : 	{
; 1731 : 		if (engine_num == 1)

  0007e	83 7d 10 01	 cmp	 DWORD PTR _engine_num$[ebp], 1
  00082	75 09		 jne	 SHORT $LN10@play_helic

; 1732 : 			start_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP1;

  00084	c7 45 ec 26 00
	00 00		 mov	 DWORD PTR _start_type$[ebp], 38 ; 00000026H

; 1733 : 		else

  0008b	eb 07		 jmp	 SHORT $LN11@play_helic
$LN10@play_helic:

; 1734 : 			start_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP2;

  0008d	c7 45 ec 27 00
	00 00		 mov	 DWORD PTR _start_type$[ebp], 39 ; 00000027H
$LN11@play_helic:

; 1735 : 
; 1736 : 		if (engine_num == 1)

  00094	83 7d 10 01	 cmp	 DWORD PTR _engine_num$[ebp], 1
  00098	75 09		 jne	 SHORT $LN12@play_helic

; 1737 : 			stop_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN1;

  0009a	c7 45 e8 24 00
	00 00		 mov	 DWORD PTR _stop_type$[ebp], 36 ; 00000024H

; 1738 : 		else

  000a1	eb 07		 jmp	 SHORT $LN13@play_helic
$LN12@play_helic:

; 1739 : 			stop_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN2;

  000a3	c7 45 e8 25 00
	00 00		 mov	 DWORD PTR _stop_type$[ebp], 37 ; 00000025H
$LN13@play_helic:

; 1740 : 	}
; 1741 : 	else

  000aa	eb 2c		 jmp	 SHORT $LN17@play_helic
$LN8@play_helic:

; 1742 : 	{
; 1743 : 		if (engine_num == 1)

  000ac	83 7d 10 01	 cmp	 DWORD PTR _engine_num$[ebp], 1
  000b0	75 09		 jne	 SHORT $LN14@play_helic

; 1744 : 			start_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN1;

  000b2	c7 45 ec 24 00
	00 00		 mov	 DWORD PTR _start_type$[ebp], 36 ; 00000024H

; 1745 : 		else

  000b9	eb 07		 jmp	 SHORT $LN15@play_helic
$LN14@play_helic:

; 1746 : 			start_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN2;

  000bb	c7 45 ec 25 00
	00 00		 mov	 DWORD PTR _start_type$[ebp], 37 ; 00000025H
$LN15@play_helic:

; 1747 : 
; 1748 : 		if (engine_num == 1)

  000c2	83 7d 10 01	 cmp	 DWORD PTR _engine_num$[ebp], 1
  000c6	75 09		 jne	 SHORT $LN16@play_helic

; 1749 : 			stop_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP1;

  000c8	c7 45 e8 26 00
	00 00		 mov	 DWORD PTR _stop_type$[ebp], 38 ; 00000026H

; 1750 : 		else

  000cf	eb 07		 jmp	 SHORT $LN17@play_helic
$LN16@play_helic:

; 1751 : 			stop_type = ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP2;

  000d1	c7 45 e8 27 00
	00 00		 mov	 DWORD PTR _stop_type$[ebp], 39 ; 00000027H
$LN17@play_helic:

; 1752 : 	}
; 1753 : 
; 1754 : 	//
; 1755 : 	// see if <stop type> is playing
; 1756 : 	//
; 1757 : 
; 1758 : 	start_position = kill_sound_effect(en, stop_type);

  000d8	8b 45 e8	 mov	 eax, DWORD PTR _stop_type$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000df	51		 push	 ecx
  000e0	e8 00 00 00 00	 call	 ?kill_sound_effect@@YGMPAUENTITY@@H@Z ; kill_sound_effect
  000e5	d9 5d f0	 fstp	 DWORD PTR _start_position$[ebp]

; 1759 : 
; 1760 : 	//
; 1761 : 	// set <start type> playing
; 1762 : 	//
; 1763 : 
; 1764 : 	spec = get_local_entity_first_child (en, LIST_TYPE_SPECIAL_EFFECT);

  000e8	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000ec	74 0a		 je	 SHORT $LN24@play_helic
  000ee	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f3	89 4d 9c	 mov	 DWORD PTR tv128[ebp], ecx
  000f6	eb 21		 jmp	 SHORT $LN25@play_helic
$LN24@play_helic:
  000f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  000fe	83 c2 3a	 add	 edx, 58			; 0000003aH
  00101	52		 push	 edx
  00102	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00107	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010c	50		 push	 eax
  0010d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00112	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN25@play_helic:
  00119	b9 01 00 00 00	 mov	 ecx, 1
  0011e	85 c9		 test	 ecx, ecx
  00120	74 09		 je	 SHORT $LN26@play_helic
  00122	c7 45 98 24 00
	00 00		 mov	 DWORD PTR tv136[ebp], 36 ; 00000024H
  00129	eb 21		 jmp	 SHORT $LN27@play_helic
$LN26@play_helic:
  0012b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  00131	83 c2 3a	 add	 edx, 58			; 0000003aH
  00134	52		 push	 edx
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0013f	50		 push	 eax
  00140	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00145	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv136[ebp], 0
$LN27@play_helic:
  0014c	6a 24		 push	 36			; 00000024H
  0014e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00151	51		 push	 ecx
  00152	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 180
  00159	8b 45 98	 mov	 eax, DWORD PTR tv136[ebp]
  0015c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00163	ff d1		 call	 ecx
  00165	89 45 f4	 mov	 DWORD PTR _spec$[ebp], eax
$LN2@play_helic:

; 1765 : 
; 1766 : 	while (spec)

  00168	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0016c	0f 84 ad 02 00
	00		 je	 $LN3@play_helic

; 1767 : 	{
; 1768 : 		if (spec->type == ENTITY_TYPE_SOUND_EFFECT)

  00172	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  00175	83 38 20	 cmp	 DWORD PTR [eax], 32	; 00000020H
  00178	0f 85 1c 02 00
	00		 jne	 $LN22@play_helic

; 1769 : 		{
; 1770 : 			if (get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == start_type)

  0017e	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00182	74 0a		 je	 SHORT $LN28@play_helic
  00184	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  00187	8b 08		 mov	 ecx, DWORD PTR [eax]
  00189	89 4d 9c	 mov	 DWORD PTR tv150[ebp], ecx
  0018c	eb 1d		 jmp	 SHORT $LN29@play_helic
$LN28@play_helic:
  0018e	68 ea 06 00 00	 push	 1770			; 000006eaH
  00193	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00198	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019e	52		 push	 edx
  0019f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a4	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv150[ebp], 0
$LN29@play_helic:
  001ab	b8 01 00 00 00	 mov	 eax, 1
  001b0	85 c0		 test	 eax, eax
  001b2	74 09		 je	 SHORT $LN30@play_helic
  001b4	c7 45 98 34 00
	00 00		 mov	 DWORD PTR tv157[ebp], 52 ; 00000034H
  001bb	eb 1d		 jmp	 SHORT $LN31@play_helic
$LN30@play_helic:
  001bd	68 ea 06 00 00	 push	 1770			; 000006eaH
  001c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001cd	51		 push	 ecx
  001ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d3	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN31@play_helic:
  001da	6a 34		 push	 52			; 00000034H
  001dc	8b 55 f4	 mov	 edx, DWORD PTR _spec$[ebp]
  001df	52		 push	 edx
  001e0	69 45 9c 5c 04
	00 00		 imul	 eax, DWORD PTR tv150[ebp], 1116
  001e7	8b 4d 98	 mov	 ecx, DWORD PTR tv157[ebp]
  001ea	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001f1	ff d2		 call	 edx
  001f3	3b 45 ec	 cmp	 eax, DWORD PTR _start_type$[ebp]
  001f6	0f 85 9e 01 00
	00		 jne	 $LN22@play_helic

; 1771 : 			{
; 1772 : 				sound_raw = (sound_effect *) get_local_entity_data (spec);

  001fc	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  001ff	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00202	89 4d f8	 mov	 DWORD PTR _sound_raw$[ebp], ecx

; 1773 : 
; 1774 : 				if (!sound_raw->valid_sound_effect)

  00205	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  00208	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0020b	c1 e9 08	 shr	 ecx, 8
  0020e	83 e1 01	 and	 ecx, 1
  00211	0f 85 83 01 00
	00		 jne	 $LN22@play_helic

; 1775 : 				{
; 1776 : 					sound_raw->valid_sound_effect = TRUE;

  00217	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  0021a	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0021d	81 c9 00 01 00
	00		 or	 ecx, 256		; 00000100H
  00223	8b 55 f8	 mov	 edx, DWORD PTR _sound_raw$[ebp]
  00226	89 4a 40	 mov	 DWORD PTR [edx+64], ecx

; 1777 : 
; 1778 : 					//
; 1779 : 					// set correct effect lifetime
; 1780 : 					//
; 1781 : 
; 1782 : 					{
; 1783 : 						float
; 1784 : 							rate,
; 1785 : 							size;
; 1786 : 
; 1787 : 						ASSERT (sound_raw->sound_effect_sequence_count == 1);

  00229	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  0022c	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0022f	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00232	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00235	83 f9 01	 cmp	 ecx, 1
  00238	74 18		 je	 SHORT $LN21@play_helic
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  0023f	83 c0 51	 add	 eax, 81			; 00000051H
  00242	50		 push	 eax
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00248	68 00 00 00 00	 push	 OFFSET ??_C@_0CM@DCJFDAHO@sound_raw?9?$DOsound_effect_sequenc@
  0024d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN21@play_helic:

; 1788 : 
; 1789 : 						rate = (float)(application_sound_effects [sound_raw->effect_index [0]].rate);

  00252	b8 04 00 00 00	 mov	 eax, 4
  00257	6b c8 00	 imul	 ecx, eax, 0
  0025a	8b 55 f8	 mov	 edx, DWORD PTR _sound_raw$[ebp]
  0025d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00260	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00263	c1 e1 05	 shl	 ecx, 5
  00266	f3 0f 2a 81 08
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?application_sound_effects@@3PAUSOUND_EFFECT_INFORMATION@@A[ecx+8]
  0026e	f3 0f 11 45 e4	 movss	 DWORD PTR _rate$2[ebp], xmm0

; 1790 : 						size = (float)(application_sound_effects [sound_raw->effect_index [0]].size);

  00273	b8 04 00 00 00	 mov	 eax, 4
  00278	6b c8 00	 imul	 ecx, eax, 0
  0027b	8b 55 f8	 mov	 edx, DWORD PTR _sound_raw$[ebp]
  0027e	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00281	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  00284	c1 e1 05	 shl	 ecx, 5
  00287	f3 0f 2a 81 0c
	00 00 00	 cvtsi2ss xmm0, DWORD PTR ?application_sound_effects@@3PAUSOUND_EFFECT_INFORMATION@@A[ecx+12]
  0028f	f3 0f 11 45 e0	 movss	 DWORD PTR _size$1[ebp], xmm0

; 1791 : 
; 1792 : 						sound_raw->effect_lifetime = (size / rate);

  00294	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _size$1[ebp]
  00299	f3 0f 5e 45 e4	 divss	 xmm0, DWORD PTR _rate$2[ebp]
  0029e	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  002a1	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 1793 : 
; 1794 : 						start_position = bound (start_position, 0.0, sound_raw->effect_lifetime);

  002a6	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _start_position$[ebp]
  002ab	0f 57 c9	 xorps	 xmm1, xmm1
  002ae	66 0f 2f c8	 comisd	 xmm1, xmm0
  002b2	76 0a		 jbe	 SHORT $LN34@play_helic
  002b4	0f 57 c0	 xorps	 xmm0, xmm0
  002b7	f2 0f 11 45 98	 movsd	 QWORD PTR tv203[ebp], xmm0
  002bc	eb 31		 jmp	 SHORT $LN35@play_helic
$LN34@play_helic:
  002be	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  002c1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _start_position$[ebp]
  002c6	0f 2f 40 34	 comiss	 xmm0, DWORD PTR [eax+52]
  002ca	76 0f		 jbe	 SHORT $LN32@play_helic
  002cc	8b 4d f8	 mov	 ecx, DWORD PTR _sound_raw$[ebp]
  002cf	f3 0f 10 41 34	 movss	 xmm0, DWORD PTR [ecx+52]
  002d4	f3 0f 11 45 94	 movss	 DWORD PTR tv201[ebp], xmm0
  002d9	eb 0a		 jmp	 SHORT $LN33@play_helic
$LN32@play_helic:
  002db	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _start_position$[ebp]
  002e0	f3 0f 11 45 94	 movss	 DWORD PTR tv201[ebp], xmm0
$LN33@play_helic:
  002e5	f3 0f 5a 45 94	 cvtss2sd xmm0, DWORD PTR tv201[ebp]
  002ea	f2 0f 11 45 98	 movsd	 QWORD PTR tv203[ebp], xmm0
$LN35@play_helic:
  002ef	f2 0f 5a 45 98	 cvtsd2ss xmm0, QWORD PTR tv203[ebp]
  002f4	f3 0f 11 45 f0	 movss	 DWORD PTR _start_position$[ebp], xmm0

; 1795 : 
; 1796 : 						sound_raw->effect_lifetime -= start_position;

  002f9	8b 45 f8	 mov	 eax, DWORD PTR _sound_raw$[ebp]
  002fc	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00301	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _start_position$[ebp]
  00306	8b 4d f8	 mov	 ecx, DWORD PTR _sound_raw$[ebp]
  00309	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 1797 : 					}
; 1798 : 
; 1799 : 					if (!get_local_entity_parent (spec, LIST_TYPE_UPDATE))

  0030e	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00312	74 0a		 je	 SHORT $LN36@play_helic
  00314	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  00317	8b 08		 mov	 ecx, DWORD PTR [eax]
  00319	89 4d 9c	 mov	 DWORD PTR tv213[ebp], ecx
  0031c	eb 1d		 jmp	 SHORT $LN37@play_helic
$LN36@play_helic:
  0031e	68 07 07 00 00	 push	 1799			; 00000707H
  00323	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00328	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0032e	52		 push	 edx
  0032f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00334	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN37@play_helic:
  0033b	b8 01 00 00 00	 mov	 eax, 1
  00340	85 c0		 test	 eax, eax
  00342	74 09		 je	 SHORT $LN38@play_helic
  00344	c7 45 98 29 00
	00 00		 mov	 DWORD PTR tv220[ebp], 41 ; 00000029H
  0034b	eb 1d		 jmp	 SHORT $LN39@play_helic
$LN38@play_helic:
  0034d	68 07 07 00 00	 push	 1799			; 00000707H
  00352	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00357	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0035d	51		 push	 ecx
  0035e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00363	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv220[ebp], 0
$LN39@play_helic:
  0036a	6a 29		 push	 41			; 00000029H
  0036c	8b 55 f4	 mov	 edx, DWORD PTR _spec$[ebp]
  0036f	52		 push	 edx
  00370	69 45 9c b4 00
	00 00		 imul	 eax, DWORD PTR tv213[ebp], 180
  00377	8b 4d 98	 mov	 ecx, DWORD PTR tv220[ebp]
  0037a	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  00381	ff d2		 call	 edx
  00383	85 c0		 test	 eax, eax
  00385	75 13		 jne	 SHORT $LN22@play_helic

; 1800 : 					{
; 1801 : 						insert_local_entity_into_parents_child_list (spec, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  00387	6a 00		 push	 0
  00389	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  0038e	50		 push	 eax
  0038f	6a 29		 push	 41			; 00000029H
  00391	8b 4d f4	 mov	 ecx, DWORD PTR _spec$[ebp]
  00394	51		 push	 ecx
  00395	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN22@play_helic:

; 1802 : 					}
; 1803 : 				}
; 1804 : 			}
; 1805 : 		}
; 1806 : 
; 1807 : 		spec = get_local_entity_child_succ (spec, LIST_TYPE_SPECIAL_EFFECT);

  0039a	83 7d f4 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0039e	74 0a		 je	 SHORT $LN40@play_helic
  003a0	8b 45 f4	 mov	 eax, DWORD PTR _spec$[ebp]
  003a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a5	89 4d 9c	 mov	 DWORD PTR tv237[ebp], ecx
  003a8	eb 21		 jmp	 SHORT $LN41@play_helic
$LN40@play_helic:
  003aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  003b0	83 c2 65	 add	 edx, 101		; 00000065H
  003b3	52		 push	 edx
  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003be	50		 push	 eax
  003bf	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003c4	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR tv237[ebp], 0
$LN41@play_helic:
  003cb	b9 01 00 00 00	 mov	 ecx, 1
  003d0	85 c9		 test	 ecx, ecx
  003d2	74 09		 je	 SHORT $LN42@play_helic
  003d4	c7 45 98 24 00
	00 00		 mov	 DWORD PTR tv245[ebp], 36 ; 00000024H
  003db	eb 21		 jmp	 SHORT $LN43@play_helic
$LN42@play_helic:
  003dd	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z@4JA
  003e3	83 c2 65	 add	 edx, 101		; 00000065H
  003e6	52		 push	 edx
  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  003f1	50		 push	 eax
  003f2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003f7	c7 45 98 00 00
	00 00		 mov	 DWORD PTR tv245[ebp], 0
$LN43@play_helic:
  003fe	6a 24		 push	 36			; 00000024H
  00400	8b 4d f4	 mov	 ecx, DWORD PTR _spec$[ebp]
  00403	51		 push	 ecx
  00404	69 55 9c b4 00
	00 00		 imul	 edx, DWORD PTR tv237[ebp], 180
  0040b	8b 45 98	 mov	 eax, DWORD PTR tv245[ebp]
  0040e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00415	ff d1		 call	 ecx
  00417	89 45 f4	 mov	 DWORD PTR _spec$[ebp], eax

; 1808 : 	}

  0041a	e9 49 fd ff ff	 jmp	 $LN2@play_helic
$LN3@play_helic:

; 1809 : }

  0041f	5f		 pop	 edi
  00420	5e		 pop	 esi
  00421	5b		 pop	 ebx
  00422	8b e5		 mov	 esp, ebp
  00424	5d		 pop	 ebp
  00425	c2 0c 00	 ret	 12			; 0000000cH
?play_helicopter_winding_rotor_sounds@@YGXPAUENTITY@@HH@Z ENDP ; play_helicopter_winding_rotor_sounds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv276 = -148						; size = 8
tv264 = -148						; size = 8
tv238 = -148						; size = 8
tv223 = -148						; size = 8
tv203 = -148						; size = 8
tv188 = -148						; size = 8
tv145 = -148						; size = 8
tv337 = -144						; size = 4
tv179 = -142						; size = 2
tv689 = -140						; size = 8
tv660 = -140						; size = 8
tv577 = -140						; size = 4
tv555 = -140						; size = 4
tv535 = -140						; size = 4
tv515 = -140						; size = 4
tv495 = -140						; size = 4
tv475 = -140						; size = 4
tv455 = -140						; size = 4
tv435 = -140						; size = 4
tv415 = -140						; size = 4
tv395 = -140						; size = 4
tv375 = -140						; size = 4
tv352 = -140						; size = 4
tv331 = -140						; size = 4
tv310 = -140						; size = 4
tv277 = -140						; size = 8
tv265 = -140						; size = 8
tv239 = -140						; size = 8
tv224 = -140						; size = 8
tv204 = -140						; size = 8
tv189 = -140						; size = 8
tv160 = -140						; size = 4
tv146 = -140						; size = 8
tv93 = -140						; size = 4
tv569 = -136						; size = 4
tv547 = -136						; size = 4
tv527 = -136						; size = 4
tv507 = -136						; size = 4
tv487 = -136						; size = 4
tv467 = -136						; size = 4
tv447 = -136						; size = 4
tv427 = -136						; size = 4
tv407 = -136						; size = 4
tv387 = -136						; size = 4
tv367 = -136						; size = 4
tv344 = -136						; size = 4
tv324 = -136						; size = 4
tv302 = -136						; size = 4
tv153 = -136						; size = 4
tv86 = -136						; size = 4
_play_both_sounds$1 = -68				; size = 2
_apu_rpm$2 = -64					; size = 4
_rrpm$3 = -60						; size = 4
_lrpm$4 = -56						; size = 4
_spec$ = -52						; size = 4
_acc_force$ = -48					; size = 4
_winding_amp$ = -44					; size = 4
_apu_pitch$ = -40					; size = 4
_right_turbine_pitch$ = -36				; size = 4
_left_turbine_pitch$ = -32				; size = 4
_apu_amp$ = -28						; size = 4
_right_turbine_amp$ = -24				; size = 4
_left_turbine_amp$ = -20				; size = 4
_slap_amp$ = -16					; size = 4
_looping_pitch$ = -12					; size = 4
_looping_amp$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z PROC ; update_local_helicopter_rotor_sounds, COMDAT

; 1478 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 00 00
	00		 sub	 esp, 148		; 00000094H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1479 : 	helicopter
; 1480 : 		*raw;
; 1481 : 
; 1482 : 	float
; 1483 : 		looping_amp,
; 1484 : 		looping_pitch, //Werewolf pitch
; 1485 : 		slap_amp,
; 1486 : 		left_turbine_amp, right_turbine_amp, apu_amp,
; 1487 : 		left_turbine_pitch = 1.0, right_turbine_pitch = 1.0, apu_pitch = 1.0,

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00014	f3 0f 11 45 e0	 movss	 DWORD PTR _left_turbine_pitch$[ebp], xmm0
  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00021	f3 0f 11 45 dc	 movss	 DWORD PTR _right_turbine_pitch$[ebp], xmm0
  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0002e	f3 0f 11 45 d8	 movss	 DWORD PTR _apu_pitch$[ebp], xmm0

; 1488 : 		winding_amp,
; 1489 : //		main_rotor_pitch,
; 1490 : //		main_rotor_roll,
; 1491 : 		acc_force;
; 1492 : 
; 1493 : 	entity
; 1494 : 		*spec;
; 1495 : 
; 1496 : 	ASSERT (en);

  00033	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00037	75 18		 jne	 SHORT $LN6@update_loc
  00039	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  0003e	83 c0 12	 add	 eax, 18			; 00000012H
  00041	50		 push	 eax
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  0004c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@update_loc:

; 1497 : 
; 1498 : 	raw = (helicopter *) get_local_entity_data (en);

  00051	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00054	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00057	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 1499 : 
; 1500 : 	if (raw->main_rotor_rpm >= HELICOPTER_ROTOR_SOUNDS_LOOPING_MAX_RPM_VALUE)

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0005d	f3 0f 10 80 8c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+396]
  00065	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@42340000
  0006c	72 0f		 jb	 SHORT $LN7@update_loc

; 1501 : 	{
; 1502 : 		looping_amp = 1.0;

  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00076	f3 0f 11 45 f8	 movss	 DWORD PTR _looping_amp$[ebp], xmm0
  0007b	eb 3e		 jmp	 SHORT $LN10@update_loc
$LN7@update_loc:

; 1503 : 	}
; 1504 : 	else if (raw->main_rotor_rpm <= HELICOPTER_ROTOR_SOUNDS_LOOPING_MIN_RPM_VALUE)

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00080	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41f00000
  00088	0f 2f 80 8c 01
	00 00		 comiss	 xmm0, DWORD PTR [eax+396]
  0008f	72 0a		 jb	 SHORT $LN9@update_loc

; 1505 : 	{
; 1506 : 		looping_amp = 0.0;

  00091	0f 57 c0	 xorps	 xmm0, xmm0
  00094	f3 0f 11 45 f8	 movss	 DWORD PTR _looping_amp$[ebp], xmm0

; 1507 : 	}
; 1508 : 	else

  00099	eb 20		 jmp	 SHORT $LN10@update_loc
$LN9@update_loc:

; 1509 : 	{
; 1510 : 		looping_amp = (raw->main_rotor_rpm - HELICOPTER_ROTOR_SOUNDS_LOOPING_MIN_RPM_VALUE) /

  0009b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0009e	f3 0f 10 80 8c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+396]
  000a6	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@41f00000
  000ae	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@41700000
  000b6	f3 0f 11 45 f8	 movss	 DWORD PTR _looping_amp$[ebp], xmm0
$LN10@update_loc:

; 1511 : 							(HELICOPTER_ROTOR_SOUNDS_LOOPING_MAX_RPM_VALUE - HELICOPTER_ROTOR_SOUNDS_LOOPING_MIN_RPM_VALUE);
; 1512 : 	}
; 1513 : 
; 1514 : 	//Werewolf pitch
; 1515 : 	looping_pitch = raw->main_rotor_rpm / 100.0;

  000bb	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000be	f3 0f 5a 80 8c
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+396]
  000c6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  000ce	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000d2	f3 0f 11 45 f4	 movss	 DWORD PTR _looping_pitch$[ebp], xmm0

; 1516 : 
; 1517 : 	//For AI choppers we need to invert and tweak the RPM value changes, because AI choppers base their rotor RPM on the produced lift
; 1518 : 	//(For the AI, more lift => more RPM, which is the exact opposite of what it should be)
; 1519 : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_AI)

  000d7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000db	74 0d		 je	 SHORT $LN34@update_loc
  000dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e2	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv86[ebp], ecx
  000e8	eb 20		 jmp	 SHORT $LN35@update_loc
$LN34@update_loc:
  000ea	68 ef 05 00 00	 push	 1519			; 000005efH
  000ef	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fa	52		 push	 edx
  000fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00100	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
$LN35@update_loc:
  0010a	b8 01 00 00 00	 mov	 eax, 1
  0010f	85 c0		 test	 eax, eax
  00111	74 0c		 je	 SHORT $LN36@update_loc
  00113	c7 85 74 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv93[ebp], 156 ; 0000009cH
  0011d	eb 20		 jmp	 SHORT $LN37@update_loc
$LN36@update_loc:
  0011f	68 ef 05 00 00	 push	 1519			; 000005efH
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00129	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0012f	51		 push	 ecx
  00130	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00135	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN37@update_loc:
  0013f	68 9c 00 00 00	 push	 156			; 0000009cH
  00144	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00147	52		 push	 edx
  00148	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv86[ebp], 1116
  00152	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv93[ebp]
  00158	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0015f	ff d2		 call	 edx
  00161	85 c0		 test	 eax, eax
  00163	75 0d		 jne	 SHORT $LN11@update_loc

; 1520 : 	{
; 1521 : 		looping_pitch = 1.0; //Disabled since it simply doesn't sound right. Someday, someone should figure out a nice way of doing it.

  00165	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0016d	f3 0f 11 45 f4	 movss	 DWORD PTR _looping_pitch$[ebp], xmm0
$LN11@update_loc:

; 1522 : 
; 1523 : //		looping_pitch = (1.0 - looping_pitch); //this would go from 0.1 to 0.3, so we need further tweaks
; 1524 : //		looping_pitch = looping_pitch / 12.0; //make the pitch changes less drastic
; 1525 : //		looping_pitch = 0.95 + looping_pitch;
; 1526 : 	}
; 1527 : 
; 1528 : 	//Slapping sound depends on how harsh the direction changes are: Do a tight turn and the rotor blades will slap
; 1529 : 	if (get_current_flight_dynamics ())

  00172	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  00179	0f 84 a6 00 00
	00		 je	 $LN12@update_loc

; 1530 : 	{
; 1531 : 		acc_force = (get_3d_vector_magnitude (&current_flight_dynamics->model_acceleration_vector) / 15.0); //force vector can get as high as 30.0, but 15.0 should suffice for the maximum slap sound

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00184	05 48 1c 00 00	 add	 eax, 7240		; 00001c48H
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 ?get_3d_vector_magnitude@@YGMPBUVEC3D@@@Z ; get_3d_vector_magnitude
  0018f	dd 9d 74 ff ff
	ff		 fstp	 QWORD PTR tv660[ebp]
  00195	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv660[ebp]
  0019d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@402e000000000000
  001a5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001a9	f3 0f 11 45 d0	 movss	 DWORD PTR _acc_force$[ebp], xmm0

; 1532 : 		slap_amp = (acc_force) * looping_amp;

  001ae	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _acc_force$[ebp]
  001b3	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _looping_amp$[ebp]
  001b8	f3 0f 11 45 f0	 movss	 DWORD PTR _slap_amp$[ebp], xmm0

; 1533 : 		slap_amp = bound (slap_amp, 0.0, 1.0);

  001bd	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _slap_amp$[ebp]
  001c2	0f 57 c9	 xorps	 xmm1, xmm1
  001c5	66 0f 2f c8	 comisd	 xmm1, xmm0
  001c9	76 0d		 jbe	 SHORT $LN40@update_loc
  001cb	0f 57 c0	 xorps	 xmm0, xmm0
  001ce	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv146[ebp], xmm0
  001d6	eb 3e		 jmp	 SHORT $LN41@update_loc
$LN40@update_loc:
  001d8	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _slap_amp$[ebp]
  001dd	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  001e5	76 12		 jbe	 SHORT $LN38@update_loc
  001e7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff0000000000000
  001ef	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv145[ebp], xmm0
  001f7	eb 0d		 jmp	 SHORT $LN39@update_loc
$LN38@update_loc:
  001f9	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _slap_amp$[ebp]
  001fe	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv145[ebp], xmm0
$LN39@update_loc:
  00206	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv145[ebp]
  0020e	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv146[ebp], xmm0
$LN41@update_loc:
  00216	f2 0f 5a 85 74
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv146[ebp]
  0021e	f3 0f 11 45 f0	 movss	 DWORD PTR _slap_amp$[ebp], xmm0

; 1534 : 	}
; 1535 : 	else

  00223	eb 10		 jmp	 SHORT $LN13@update_loc
$LN12@update_loc:

; 1536 : 	{
; 1537 : 		acc_force = 0.0;

  00225	0f 57 c0	 xorps	 xmm0, xmm0
  00228	f3 0f 11 45 d0	 movss	 DWORD PTR _acc_force$[ebp], xmm0

; 1538 : 		slap_amp = 0.0;

  0022d	0f 57 c0	 xorps	 xmm0, xmm0
  00230	f3 0f 11 45 f0	 movss	 DWORD PTR _slap_amp$[ebp], xmm0
$LN13@update_loc:

; 1539 : 	}
; 1540 : 
; 1541 : 
; 1542 : 
; 1543 : 	// arneh - get the engine rpm statistics so we can control the turbine sounds accordingly
; 1544 : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) == ENTITY_PLAYER_LOCAL
; 1545 : 		&& get_current_flight_dynamics ())

  00235	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00239	74 0d		 je	 SHORT $LN42@update_loc
  0023b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0023e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00240	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv153[ebp], ecx
  00246	eb 20		 jmp	 SHORT $LN43@update_loc
$LN42@update_loc:
  00248	68 08 06 00 00	 push	 1544			; 00000608H
  0024d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00252	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00258	52		 push	 edx
  00259	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv153[ebp], 0
$LN43@update_loc:
  00268	b8 01 00 00 00	 mov	 eax, 1
  0026d	85 c0		 test	 eax, eax
  0026f	74 0c		 je	 SHORT $LN44@update_loc
  00271	c7 85 74 ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv160[ebp], 156 ; 0000009cH
  0027b	eb 20		 jmp	 SHORT $LN45@update_loc
$LN44@update_loc:
  0027d	68 08 06 00 00	 push	 1544			; 00000608H
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00287	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0028d	51		 push	 ecx
  0028e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00293	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv160[ebp], 0
$LN45@update_loc:
  0029d	68 9c 00 00 00	 push	 156			; 0000009cH
  002a2	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002a5	52		 push	 edx
  002a6	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv153[ebp], 1116
  002b0	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv160[ebp]
  002b6	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002bd	ff d2		 call	 edx
  002bf	83 f8 01	 cmp	 eax, 1
  002c2	0f 85 ba 04 00
	00		 jne	 $LN14@update_loc
  002c8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  002cf	0f 84 ad 04 00
	00		 je	 $LN14@update_loc

; 1546 : 	{
; 1547 : 		float lrpm = current_flight_dynamics->left_engine_n1_rpm.value;

  002d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002da	f3 0f 10 80 94
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7316]
  002e2	f3 0f 11 45 c8	 movss	 DWORD PTR _lrpm$4[ebp], xmm0

; 1548 : 		float rrpm = current_flight_dynamics->right_engine_n1_rpm.value;

  002e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002ec	f3 0f 10 80 f4
	1c 00 00	 movss	 xmm0, DWORD PTR [eax+7412]
  002f4	f3 0f 11 45 c4	 movss	 DWORD PTR _rrpm$3[ebp], xmm0

; 1549 : 		float apu_rpm = current_flight_dynamics->apu_rpm.value;

  002f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  002fe	f3 0f 10 80 3c
	1d 00 00	 movss	 xmm0, DWORD PTR [eax+7484]
  00306	f3 0f 11 45 c0	 movss	 DWORD PTR _apu_rpm$2[ebp], xmm0

; 1550 : 		short play_both_sounds = fabs(lrpm - rrpm) > 1.0;    // only play one sound if both engines have same RPM

  0030b	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _lrpm$4[ebp]
  00310	f3 0f 5c 45 c4	 subss	 xmm0, DWORD PTR _rrpm$3[ebp]
  00315	51		 push	 ecx
  00316	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031b	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  00320	dd 9d 74 ff ff
	ff		 fstp	 QWORD PTR tv689[ebp]
  00326	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv689[ebp]
  0032e	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00336	76 0e		 jbe	 SHORT $LN46@update_loc
  00338	b8 01 00 00 00	 mov	 eax, 1
  0033d	66 89 85 72 ff
	ff ff		 mov	 WORD PTR tv179[ebp], ax
  00344	eb 09		 jmp	 SHORT $LN47@update_loc
$LN46@update_loc:
  00346	33 c9		 xor	 ecx, ecx
  00348	66 89 8d 72 ff
	ff ff		 mov	 WORD PTR tv179[ebp], cx
$LN47@update_loc:
  0034f	66 8b 95 72 ff
	ff ff		 mov	 dx, WORD PTR tv179[ebp]
  00356	66 89 55 bc	 mov	 WORD PTR _play_both_sounds$1[ebp], dx

; 1551 : 
; 1552 : 		// sound for left turbine:
; 1553 : 		left_turbine_pitch = lrpm / 100.0;

  0035a	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _lrpm$4[ebp]
  0035f	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  00367	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0036b	f3 0f 11 45 e0	 movss	 DWORD PTR _left_turbine_pitch$[ebp], xmm0

; 1554 : 		left_turbine_pitch = bound (left_turbine_pitch, 0.0, 1.6)+0.6;

  00370	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _left_turbine_pitch$[ebp]
  00375	0f 57 c9	 xorps	 xmm1, xmm1
  00378	66 0f 2f c8	 comisd	 xmm1, xmm0
  0037c	76 0d		 jbe	 SHORT $LN50@update_loc
  0037e	0f 57 c0	 xorps	 xmm0, xmm0
  00381	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv189[ebp], xmm0
  00389	eb 3e		 jmp	 SHORT $LN51@update_loc
$LN50@update_loc:
  0038b	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _left_turbine_pitch$[ebp]
  00390	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff999999999999a
  00398	76 12		 jbe	 SHORT $LN48@update_loc
  0039a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff999999999999a
  003a2	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv188[ebp], xmm0
  003aa	eb 0d		 jmp	 SHORT $LN49@update_loc
$LN48@update_loc:
  003ac	f3 0f 5a 45 e0	 cvtss2sd xmm0, DWORD PTR _left_turbine_pitch$[ebp]
  003b1	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv188[ebp], xmm0
$LN49@update_loc:
  003b9	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv188[ebp]
  003c1	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv189[ebp], xmm0
$LN51@update_loc:
  003c9	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv189[ebp]
  003d1	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe3333333333333
  003d9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  003dd	f3 0f 11 45 e0	 movss	 DWORD PTR _left_turbine_pitch$[ebp], xmm0

; 1555 : 		left_turbine_amp = 0.2 + bound((lrpm - 20.0) * 0.01, 0.0, 0.4);

  003e2	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _lrpm$4[ebp]
  003e7	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  003ef	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  003f7	0f 57 c9	 xorps	 xmm1, xmm1
  003fa	66 0f 2f c8	 comisd	 xmm1, xmm0
  003fe	76 0d		 jbe	 SHORT $LN54@update_loc
  00400	0f 57 c0	 xorps	 xmm0, xmm0
  00403	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv204[ebp], xmm0
  0040b	eb 5e		 jmp	 SHORT $LN55@update_loc
$LN54@update_loc:
  0040d	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _lrpm$4[ebp]
  00412	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  0041a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00422	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd999999999999a
  0042a	76 12		 jbe	 SHORT $LN52@update_loc
  0042c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd999999999999a
  00434	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
  0043c	eb 1d		 jmp	 SHORT $LN53@update_loc
$LN52@update_loc:
  0043e	f3 0f 5a 45 c8	 cvtss2sd xmm0, DWORD PTR _lrpm$4[ebp]
  00443	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4034000000000000
  0044b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00453	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv203[ebp], xmm0
$LN53@update_loc:
  0045b	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv203[ebp]
  00463	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv204[ebp], xmm0
$LN55@update_loc:
  0046b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc999999999999a
  00473	f2 0f 58 85 74
	ff ff ff	 addsd	 xmm0, QWORD PTR tv204[ebp]
  0047b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0047f	f3 0f 11 45 ec	 movss	 DWORD PTR _left_turbine_amp$[ebp], xmm0

; 1556 : 
; 1557 : 		if (lrpm > 1)

  00484	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _lrpm$4[ebp]
  00489	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  00490	76 0d		 jbe	 SHORT $LN16@update_loc

; 1558 : 			resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE1);

  00492	6a 21		 push	 33			; 00000021H
  00494	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00497	50		 push	 eax
  00498	e8 00 00 00 00	 call	 ?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z ; resume_local_entity_sound_type

; 1559 : 		else

  0049d	eb 14		 jmp	 SHORT $LN17@update_loc
$LN16@update_loc:

; 1560 : 			pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE1, 0.0);

  0049f	51		 push	 ecx
  004a0	0f 57 c0	 xorps	 xmm0, xmm0
  004a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a8	6a 21		 push	 33			; 00000021H
  004aa	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004ad	50		 push	 eax
  004ae	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type
$LN17@update_loc:

; 1561 : 
; 1562 : 		if (play_both_sounds)

  004b3	0f bf 45 bc	 movsx	 eax, WORD PTR _play_both_sounds$1[ebp]
  004b7	85 c0		 test	 eax, eax
  004b9	0f 84 5b 01 00
	00		 je	 $LN18@update_loc

; 1563 : 		{
; 1564 : 			// sound for right turbine:
; 1565 : 			right_turbine_pitch = rrpm / 100.0;

  004bf	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _rrpm$3[ebp]
  004c4	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4059000000000000
  004cc	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  004d0	f3 0f 11 45 dc	 movss	 DWORD PTR _right_turbine_pitch$[ebp], xmm0

; 1566 : 			right_turbine_pitch = bound (right_turbine_pitch, 0.0, 1.6)+0.6;

  004d5	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _right_turbine_pitch$[ebp]
  004da	0f 57 c9	 xorps	 xmm1, xmm1
  004dd	66 0f 2f c8	 comisd	 xmm1, xmm0
  004e1	76 0d		 jbe	 SHORT $LN58@update_loc
  004e3	0f 57 c0	 xorps	 xmm0, xmm0
  004e6	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv224[ebp], xmm0
  004ee	eb 3e		 jmp	 SHORT $LN59@update_loc
$LN58@update_loc:
  004f0	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _right_turbine_pitch$[ebp]
  004f5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff999999999999a
  004fd	76 12		 jbe	 SHORT $LN56@update_loc
  004ff	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3ff999999999999a
  00507	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv223[ebp], xmm0
  0050f	eb 0d		 jmp	 SHORT $LN57@update_loc
$LN56@update_loc:
  00511	f3 0f 5a 45 dc	 cvtss2sd xmm0, DWORD PTR _right_turbine_pitch$[ebp]
  00516	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv223[ebp], xmm0
$LN57@update_loc:
  0051e	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv223[ebp]
  00526	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv224[ebp], xmm0
$LN59@update_loc:
  0052e	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv224[ebp]
  00536	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe3333333333333
  0053e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00542	f3 0f 11 45 dc	 movss	 DWORD PTR _right_turbine_pitch$[ebp], xmm0

; 1567 : 			right_turbine_amp = 0.2 + bound((rrpm - 40.0) * 0.02, 0.0, 0.4);

  00547	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _rrpm$3[ebp]
  0054c	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4044000000000000
  00554	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  0055c	0f 57 c9	 xorps	 xmm1, xmm1
  0055f	66 0f 2f c8	 comisd	 xmm1, xmm0
  00563	76 0d		 jbe	 SHORT $LN62@update_loc
  00565	0f 57 c0	 xorps	 xmm0, xmm0
  00568	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv239[ebp], xmm0
  00570	eb 5e		 jmp	 SHORT $LN63@update_loc
$LN62@update_loc:
  00572	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _rrpm$3[ebp]
  00577	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4044000000000000
  0057f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00587	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd999999999999a
  0058f	76 12		 jbe	 SHORT $LN60@update_loc
  00591	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd999999999999a
  00599	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv238[ebp], xmm0
  005a1	eb 1d		 jmp	 SHORT $LN61@update_loc
$LN60@update_loc:
  005a3	f3 0f 5a 45 c4	 cvtss2sd xmm0, DWORD PTR _rrpm$3[ebp]
  005a8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@4044000000000000
  005b0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  005b8	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv238[ebp], xmm0
$LN61@update_loc:
  005c0	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv238[ebp]
  005c8	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv239[ebp], xmm0
$LN63@update_loc:
  005d0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc999999999999a
  005d8	f2 0f 58 85 74
	ff ff ff	 addsd	 xmm0, QWORD PTR tv239[ebp]
  005e0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005e4	f3 0f 11 45 e8	 movss	 DWORD PTR _right_turbine_amp$[ebp], xmm0

; 1568 : 
; 1569 : 			if (rrpm > 1)

  005e9	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _rrpm$3[ebp]
  005ee	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f800000
  005f5	76 0d		 jbe	 SHORT $LN20@update_loc

; 1570 : 				resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2);

  005f7	6a 22		 push	 34			; 00000022H
  005f9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  005fc	50		 push	 eax
  005fd	e8 00 00 00 00	 call	 ?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z ; resume_local_entity_sound_type

; 1571 : 			else

  00602	eb 14		 jmp	 SHORT $LN21@update_loc
$LN20@update_loc:

; 1572 : 				pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2, 0.0);

  00604	51		 push	 ecx
  00605	0f 57 c0	 xorps	 xmm0, xmm0
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	6a 22		 push	 34			; 00000022H
  0060f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00612	50		 push	 eax
  00613	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type
$LN21@update_loc:

; 1573 : 		}
; 1574 : 		else

  00618	eb 2a		 jmp	 SHORT $LN19@update_loc
$LN18@update_loc:

; 1575 : 		{
; 1576 : 			pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2, 0.0);

  0061a	51		 push	 ecx
  0061b	0f 57 c0	 xorps	 xmm0, xmm0
  0061e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00623	6a 22		 push	 34			; 00000022H
  00625	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00628	50		 push	 eax
  00629	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type

; 1577 : 			left_turbine_amp *= 1.2;  // if only one sound is used for both engines, compensate by making it louder

  0062e	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _left_turbine_amp$[ebp]
  00633	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff3333333333333
  0063b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0063f	f3 0f 11 45 ec	 movss	 DWORD PTR _left_turbine_amp$[ebp], xmm0
$LN19@update_loc:

; 1578 : 		}
; 1579 : 
; 1580 : 		// sound for APU:
; 1581 : 		if (apu_rpm > 0.0)

  00644	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  00649	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00651	0f 86 15 01 00
	00		 jbe	 $LN22@update_loc

; 1582 : 		{
; 1583 : 			apu_pitch = bound(apu_rpm * 0.02, 0.0, 2.0) + 0.2;

  00657	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  0065c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00664	0f 57 c9	 xorps	 xmm1, xmm1
  00667	66 0f 2f c8	 comisd	 xmm1, xmm0
  0066b	76 0d		 jbe	 SHORT $LN66@update_loc
  0066d	0f 57 c0	 xorps	 xmm0, xmm0
  00670	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv265[ebp], xmm0
  00678	eb 4e		 jmp	 SHORT $LN67@update_loc
$LN66@update_loc:
  0067a	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  0067f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  00687	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@4000000000000000
  0068f	76 12		 jbe	 SHORT $LN64@update_loc
  00691	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4000000000000000
  00699	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv264[ebp], xmm0
  006a1	eb 15		 jmp	 SHORT $LN65@update_loc
$LN64@update_loc:
  006a3	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  006a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f947ae147ae147b
  006b0	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv264[ebp], xmm0
$LN65@update_loc:
  006b8	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv264[ebp]
  006c0	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv265[ebp], xmm0
$LN67@update_loc:
  006c8	f2 0f 10 85 74
	ff ff ff	 movsd	 xmm0, QWORD PTR tv265[ebp]
  006d0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fc999999999999a
  006d8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  006dc	f3 0f 11 45 d8	 movss	 DWORD PTR _apu_pitch$[ebp], xmm0

; 1584 : 			apu_amp = bound(apu_rpm * 0.01, 0.0, 0.25);

  006e1	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  006e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  006ee	0f 57 c9	 xorps	 xmm1, xmm1
  006f1	66 0f 2f c8	 comisd	 xmm1, xmm0
  006f5	76 0d		 jbe	 SHORT $LN70@update_loc
  006f7	0f 57 c0	 xorps	 xmm0, xmm0
  006fa	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv277[ebp], xmm0
  00702	eb 4e		 jmp	 SHORT $LN71@update_loc
$LN70@update_loc:
  00704	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  00709	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  00711	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fd0000000000000
  00719	76 12		 jbe	 SHORT $LN68@update_loc
  0071b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fd0000000000000
  00723	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv276[ebp], xmm0
  0072b	eb 15		 jmp	 SHORT $LN69@update_loc
$LN68@update_loc:
  0072d	f3 0f 5a 45 c0	 cvtss2sd xmm0, DWORD PTR _apu_rpm$2[ebp]
  00732	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f847ae147ae147b
  0073a	f2 0f 11 85 6c
	ff ff ff	 movsd	 QWORD PTR tv276[ebp], xmm0
$LN69@update_loc:
  00742	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv276[ebp]
  0074a	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv277[ebp], xmm0
$LN71@update_loc:
  00752	f2 0f 5a 85 74
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv277[ebp]
  0075a	f3 0f 11 45 e4	 movss	 DWORD PTR _apu_amp$[ebp], xmm0

; 1585 : 			resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_APU_TURBINE);

  0075f	6a 20		 push	 32			; 00000020H
  00761	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00764	50		 push	 eax
  00765	e8 00 00 00 00	 call	 ?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z ; resume_local_entity_sound_type

; 1586 : 		}
; 1587 : 		else

  0076a	eb 14		 jmp	 SHORT $LN23@update_loc
$LN22@update_loc:

; 1588 : 			pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_APU_TURBINE, 0.0);

  0076c	51		 push	 ecx
  0076d	0f 57 c0	 xorps	 xmm0, xmm0
  00770	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00775	6a 20		 push	 32			; 00000020H
  00777	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0077a	50		 push	 eax
  0077b	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type
$LN23@update_loc:

; 1589 : 	}
; 1590 : 	else

  00780	eb 43		 jmp	 SHORT $LN15@update_loc
$LN14@update_loc:

; 1591 : 	{
; 1592 : 		left_turbine_pitch = right_turbine_pitch = 1.3;

  00782	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fa66666
  0078a	f3 0f 11 45 dc	 movss	 DWORD PTR _right_turbine_pitch$[ebp], xmm0
  0078f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _right_turbine_pitch$[ebp]
  00794	f3 0f 11 45 e0	 movss	 DWORD PTR _left_turbine_pitch$[ebp], xmm0

; 1593 : 		left_turbine_amp = right_turbine_amp = 1.0;

  00799	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007a1	f3 0f 11 45 e8	 movss	 DWORD PTR _right_turbine_amp$[ebp], xmm0
  007a6	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _right_turbine_amp$[ebp]
  007ab	f3 0f 11 45 ec	 movss	 DWORD PTR _left_turbine_amp$[ebp], xmm0

; 1594 : 		apu_pitch = 1.0;

  007b0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  007b8	f3 0f 11 45 d8	 movss	 DWORD PTR _apu_pitch$[ebp], xmm0

; 1595 : 		apu_amp = 0.0;

  007bd	0f 57 c0	 xorps	 xmm0, xmm0
  007c0	f3 0f 11 45 e4	 movss	 DWORD PTR _apu_amp$[ebp], xmm0
$LN15@update_loc:

; 1596 : 	}
; 1597 : 
; 1598 : //	resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE);
; 1599 : //	winding_amp = 1.0 - (looping_amp * looping_amp);
; 1600 : 	winding_amp = 0.75;

  007c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  007cd	f3 0f 11 45 d4	 movss	 DWORD PTR _winding_amp$[ebp], xmm0

; 1601 : 
; 1602 : 	if (looping_amp == 0.0)

  007d2	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _looping_amp$[ebp]
  007d7	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  007df	9f		 lahf
  007e0	f6 c4 44	 test	 ah, 68			; 00000044H
  007e3	7a 2a		 jp	 SHORT $LN24@update_loc

; 1603 : 	{
; 1604 : 		pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING, 0.0);

  007e5	51		 push	 ecx
  007e6	0f 57 c0	 xorps	 xmm0, xmm0
  007e9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ee	6a 1f		 push	 31			; 0000001fH
  007f0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007f3	50		 push	 eax
  007f4	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type

; 1605 : 		pause_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_SLAP, 0.0);

  007f9	51		 push	 ecx
  007fa	0f 57 c0	 xorps	 xmm0, xmm0
  007fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00802	6a 23		 push	 35			; 00000023H
  00804	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00807	50		 push	 eax
  00808	e8 00 00 00 00	 call	 ?pause_local_entity_sound_type@@YGHPAUENTITY@@HM@Z ; pause_local_entity_sound_type

; 1606 : 	}
; 1607 : 	else

  0080d	eb 16		 jmp	 SHORT $LN25@update_loc
$LN24@update_loc:

; 1608 : 	{
; 1609 : 		resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING);

  0080f	6a 1f		 push	 31			; 0000001fH
  00811	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00814	50		 push	 eax
  00815	e8 00 00 00 00	 call	 ?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z ; resume_local_entity_sound_type

; 1610 : 		resume_local_entity_sound_type (en, ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_SLAP);

  0081a	6a 23		 push	 35			; 00000023H
  0081c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0081f	50		 push	 eax
  00820	e8 00 00 00 00	 call	 ?resume_local_entity_sound_type@@YGHPAUENTITY@@H@Z ; resume_local_entity_sound_type
$LN25@update_loc:

; 1611 : 	}
; 1612 : 
; 1613 : 	//
; 1614 : 	// set sound effect amplification
; 1615 : 	//
; 1616 : 
; 1617 : 	spec = get_local_entity_first_child (en, LIST_TYPE_SPECIAL_EFFECT);

  00825	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00829	74 0d		 je	 SHORT $LN72@update_loc
  0082b	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0082e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00830	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv302[ebp], ecx
  00836	eb 27		 jmp	 SHORT $LN73@update_loc
$LN72@update_loc:
  00838	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  0083e	81 c2 8b 00 00
	00		 add	 edx, 139		; 0000008bH
  00844	52		 push	 edx
  00845	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0084a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0084f	50		 push	 eax
  00850	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00855	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv302[ebp], 0
$LN73@update_loc:
  0085f	b9 01 00 00 00	 mov	 ecx, 1
  00864	85 c9		 test	 ecx, ecx
  00866	74 0c		 je	 SHORT $LN74@update_loc
  00868	c7 85 74 ff ff
	ff 24 00 00 00	 mov	 DWORD PTR tv310[ebp], 36 ; 00000024H
  00872	eb 27		 jmp	 SHORT $LN75@update_loc
$LN74@update_loc:
  00874	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  0087a	81 c2 8b 00 00
	00		 add	 edx, 139		; 0000008bH
  00880	52		 push	 edx
  00881	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00886	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0088b	50		 push	 eax
  0088c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00891	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv310[ebp], 0
$LN75@update_loc:
  0089b	6a 24		 push	 36			; 00000024H
  0089d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  008a0	51		 push	 ecx
  008a1	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv302[ebp], 180
  008ab	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv310[ebp]
  008b1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  008b8	ff d1		 call	 ecx
  008ba	89 45 cc	 mov	 DWORD PTR _spec$[ebp], eax
$LN2@update_loc:

; 1618 : 
; 1619 : 	while (spec)

  008bd	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  008c1	0f 84 5d 08 00
	00		 je	 $LN3@update_loc

; 1620 : 	{
; 1621 : 		if (spec->type == ENTITY_TYPE_SOUND_EFFECT)

  008c7	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  008ca	83 38 20	 cmp	 DWORD PTR [eax], 32	; 00000020H
  008cd	0f 85 b4 07 00
	00		 jne	 $LN4@update_loc

; 1622 : 		{
; 1623 : 			switch (get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE))

  008d3	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  008d7	74 0d		 je	 SHORT $LN76@update_loc
  008d9	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  008dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  008de	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv324[ebp], ecx
  008e4	eb 20		 jmp	 SHORT $LN77@update_loc
$LN76@update_loc:
  008e6	68 57 06 00 00	 push	 1623			; 00000657H
  008eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  008f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008f6	52		 push	 edx
  008f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008fc	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv324[ebp], 0
$LN77@update_loc:
  00906	b8 01 00 00 00	 mov	 eax, 1
  0090b	85 c0		 test	 eax, eax
  0090d	74 0c		 je	 SHORT $LN78@update_loc
  0090f	c7 85 74 ff ff
	ff 34 00 00 00	 mov	 DWORD PTR tv331[ebp], 52 ; 00000034H
  00919	eb 20		 jmp	 SHORT $LN79@update_loc
$LN78@update_loc:
  0091b	68 57 06 00 00	 push	 1623			; 00000657H
  00920	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00925	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0092b	51		 push	 ecx
  0092c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00931	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv331[ebp], 0
$LN79@update_loc:
  0093b	6a 34		 push	 52			; 00000034H
  0093d	8b 55 cc	 mov	 edx, DWORD PTR _spec$[ebp]
  00940	52		 push	 edx
  00941	69 85 78 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv324[ebp], 1116
  0094b	8b 8d 74 ff ff
	ff		 mov	 ecx, DWORD PTR tv331[ebp]
  00951	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00958	ff d2		 call	 edx
  0095a	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv337[ebp], eax
  00960	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv337[ebp]
  00966	83 e8 1f	 sub	 eax, 31			; 0000001fH
  00969	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv337[ebp], eax
  0096f	83 bd 70 ff ff
	ff 08		 cmp	 DWORD PTR tv337[ebp], 8
  00976	0f 87 0b 07 00
	00		 ja	 $LN4@update_loc
  0097c	8b 8d 70 ff ff
	ff		 mov	 ecx, DWORD PTR tv337[ebp]
  00982	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN128@update_loc[ecx*4]
$LN27@update_loc:

; 1624 : 			{
; 1625 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING:
; 1626 : //			if (get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING)
; 1627 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, (looping_amp-slap_amp)); //Werewolf: regular rotor sound cuts out when slapping sets in

  00989	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0098d	74 0d		 je	 SHORT $LN80@update_loc
  0098f	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00992	8b 08		 mov	 ecx, DWORD PTR [eax]
  00994	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv344[ebp], ecx
  0099a	eb 27		 jmp	 SHORT $LN81@update_loc
$LN80@update_loc:
  0099c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  009a2	81 c2 95 00 00
	00		 add	 edx, 149		; 00000095H
  009a8	52		 push	 edx
  009a9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009b3	50		 push	 eax
  009b4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009b9	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv344[ebp], 0
$LN81@update_loc:
  009c3	b9 01 00 00 00	 mov	 ecx, 1
  009c8	85 c9		 test	 ecx, ecx
  009ca	74 0c		 je	 SHORT $LN82@update_loc
  009cc	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv352[ebp], 9
  009d6	eb 27		 jmp	 SHORT $LN83@update_loc
$LN82@update_loc:
  009d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  009de	81 c2 95 00 00
	00		 add	 edx, 149		; 00000095H
  009e4	52		 push	 edx
  009e5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  009ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  009ef	50		 push	 eax
  009f0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009f5	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv352[ebp], 0
$LN83@update_loc:
  009ff	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _looping_amp$[ebp]
  00a04	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _slap_amp$[ebp]
  00a09	51		 push	 ecx
  00a0a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a0f	6a 09		 push	 9
  00a11	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00a14	51		 push	 ecx
  00a15	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv344[ebp], 700
  00a1f	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv352[ebp]
  00a25	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00a2c	ff d1		 call	 ecx

; 1628 : 				set_local_entity_float_value (spec, FLOAT_TYPE_SOUNDPITCH, looping_pitch);

  00a2e	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00a32	74 0d		 je	 SHORT $LN84@update_loc
  00a34	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00a37	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a39	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv367[ebp], ecx
  00a3f	eb 27		 jmp	 SHORT $LN85@update_loc
$LN84@update_loc:
  00a41	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00a47	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00a4d	52		 push	 edx
  00a4e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a58	50		 push	 eax
  00a59	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a5e	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv367[ebp], 0
$LN85@update_loc:
  00a68	b9 01 00 00 00	 mov	 ecx, 1
  00a6d	85 c9		 test	 ecx, ecx
  00a6f	74 0c		 je	 SHORT $LN86@update_loc
  00a71	c7 85 74 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv375[ebp], 10 ; 0000000aH
  00a7b	eb 27		 jmp	 SHORT $LN87@update_loc
$LN86@update_loc:
  00a7d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00a83	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00a89	52		 push	 edx
  00a8a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a8f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00a94	50		 push	 eax
  00a95	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a9a	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv375[ebp], 0
$LN87@update_loc:
  00aa4	51		 push	 ecx
  00aa5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _looping_pitch$[ebp]
  00aaa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00aaf	6a 0a		 push	 10			; 0000000aH
  00ab1	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00ab4	51		 push	 ecx
  00ab5	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv367[ebp], 700
  00abf	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv375[ebp]
  00ac5	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00acc	ff d1		 call	 ecx

; 1629 : 				break;

  00ace	e9 b4 05 00 00	 jmp	 $LN4@update_loc
$LN28@update_loc:

; 1630 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE1:
; 1631 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, left_turbine_amp); //Werewolf: turbine sound

  00ad3	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00ad7	74 0d		 je	 SHORT $LN88@update_loc
  00ad9	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00adc	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ade	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv387[ebp], ecx
  00ae4	eb 27		 jmp	 SHORT $LN89@update_loc
$LN88@update_loc:
  00ae6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00aec	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00af2	52		 push	 edx
  00af3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00af8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00afd	50		 push	 eax
  00afe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b03	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv387[ebp], 0
$LN89@update_loc:
  00b0d	b9 01 00 00 00	 mov	 ecx, 1
  00b12	85 c9		 test	 ecx, ecx
  00b14	74 0c		 je	 SHORT $LN90@update_loc
  00b16	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv395[ebp], 9
  00b20	eb 27		 jmp	 SHORT $LN91@update_loc
$LN90@update_loc:
  00b22	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00b28	81 c2 99 00 00
	00		 add	 edx, 153		; 00000099H
  00b2e	52		 push	 edx
  00b2f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b34	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00b39	50		 push	 eax
  00b3a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b3f	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv395[ebp], 0
$LN91@update_loc:
  00b49	51		 push	 ecx
  00b4a	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _left_turbine_amp$[ebp]
  00b4f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00b54	6a 09		 push	 9
  00b56	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00b59	51		 push	 ecx
  00b5a	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv387[ebp], 700
  00b64	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv395[ebp]
  00b6a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00b71	ff d1		 call	 ecx

; 1632 : 				set_local_entity_float_value (spec, FLOAT_TYPE_SOUNDPITCH, left_turbine_pitch);

  00b73	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00b77	74 0d		 je	 SHORT $LN92@update_loc
  00b79	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00b7c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b7e	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv407[ebp], ecx
  00b84	eb 27		 jmp	 SHORT $LN93@update_loc
$LN92@update_loc:
  00b86	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00b8c	81 c2 9a 00 00
	00		 add	 edx, 154		; 0000009aH
  00b92	52		 push	 edx
  00b93	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b9d	50		 push	 eax
  00b9e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ba3	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv407[ebp], 0
$LN93@update_loc:
  00bad	b9 01 00 00 00	 mov	 ecx, 1
  00bb2	85 c9		 test	 ecx, ecx
  00bb4	74 0c		 je	 SHORT $LN94@update_loc
  00bb6	c7 85 74 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv415[ebp], 10 ; 0000000aH
  00bc0	eb 27		 jmp	 SHORT $LN95@update_loc
$LN94@update_loc:
  00bc2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00bc8	81 c2 9a 00 00
	00		 add	 edx, 154		; 0000009aH
  00bce	52		 push	 edx
  00bcf	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bd4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00bd9	50		 push	 eax
  00bda	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bdf	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv415[ebp], 0
$LN95@update_loc:
  00be9	51		 push	 ecx
  00bea	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _left_turbine_pitch$[ebp]
  00bef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00bf4	6a 0a		 push	 10			; 0000000aH
  00bf6	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00bf9	51		 push	 ecx
  00bfa	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv407[ebp], 700
  00c04	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv415[ebp]
  00c0a	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00c11	ff d1		 call	 ecx

; 1633 : 				break;

  00c13	e9 6f 04 00 00	 jmp	 $LN4@update_loc
$LN29@update_loc:

; 1634 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2:
; 1635 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, right_turbine_amp);

  00c18	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00c1c	74 0d		 je	 SHORT $LN96@update_loc
  00c1e	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00c21	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c23	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv427[ebp], ecx
  00c29	eb 27		 jmp	 SHORT $LN97@update_loc
$LN96@update_loc:
  00c2b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00c31	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00c37	52		 push	 edx
  00c38	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c3d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c42	50		 push	 eax
  00c43	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c48	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv427[ebp], 0
$LN97@update_loc:
  00c52	b9 01 00 00 00	 mov	 ecx, 1
  00c57	85 c9		 test	 ecx, ecx
  00c59	74 0c		 je	 SHORT $LN98@update_loc
  00c5b	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv435[ebp], 9
  00c65	eb 27		 jmp	 SHORT $LN99@update_loc
$LN98@update_loc:
  00c67	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00c6d	81 c2 9d 00 00
	00		 add	 edx, 157		; 0000009dH
  00c73	52		 push	 edx
  00c74	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c79	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00c7e	50		 push	 eax
  00c7f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c84	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv435[ebp], 0
$LN99@update_loc:
  00c8e	51		 push	 ecx
  00c8f	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _right_turbine_amp$[ebp]
  00c94	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c99	6a 09		 push	 9
  00c9b	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00c9e	51		 push	 ecx
  00c9f	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv427[ebp], 700
  00ca9	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv435[ebp]
  00caf	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00cb6	ff d1		 call	 ecx

; 1636 : 				set_local_entity_float_value (spec, FLOAT_TYPE_SOUNDPITCH, right_turbine_pitch);

  00cb8	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00cbc	74 0d		 je	 SHORT $LN100@update_loc
  00cbe	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00cc1	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cc3	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv447[ebp], ecx
  00cc9	eb 27		 jmp	 SHORT $LN101@update_loc
$LN100@update_loc:
  00ccb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00cd1	81 c2 9e 00 00
	00		 add	 edx, 158		; 0000009eH
  00cd7	52		 push	 edx
  00cd8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cdd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ce2	50		 push	 eax
  00ce3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ce8	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv447[ebp], 0
$LN101@update_loc:
  00cf2	b9 01 00 00 00	 mov	 ecx, 1
  00cf7	85 c9		 test	 ecx, ecx
  00cf9	74 0c		 je	 SHORT $LN102@update_loc
  00cfb	c7 85 74 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv455[ebp], 10 ; 0000000aH
  00d05	eb 27		 jmp	 SHORT $LN103@update_loc
$LN102@update_loc:
  00d07	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00d0d	81 c2 9e 00 00
	00		 add	 edx, 158		; 0000009eH
  00d13	52		 push	 edx
  00d14	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00d1e	50		 push	 eax
  00d1f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d24	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv455[ebp], 0
$LN103@update_loc:
  00d2e	51		 push	 ecx
  00d2f	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _right_turbine_pitch$[ebp]
  00d34	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00d39	6a 0a		 push	 10			; 0000000aH
  00d3b	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00d3e	51		 push	 ecx
  00d3f	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv447[ebp], 700
  00d49	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv455[ebp]
  00d4f	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00d56	ff d1		 call	 ecx

; 1637 : 				break;

  00d58	e9 2a 03 00 00	 jmp	 $LN4@update_loc
$LN30@update_loc:

; 1638 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_APU_TURBINE:
; 1639 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, apu_amp);

  00d5d	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00d61	74 0d		 je	 SHORT $LN104@update_loc
  00d63	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00d66	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d68	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv467[ebp], ecx
  00d6e	eb 27		 jmp	 SHORT $LN105@update_loc
$LN104@update_loc:
  00d70	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00d76	81 c2 a1 00 00
	00		 add	 edx, 161		; 000000a1H
  00d7c	52		 push	 edx
  00d7d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d82	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d87	50		 push	 eax
  00d88	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d8d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv467[ebp], 0
$LN105@update_loc:
  00d97	b9 01 00 00 00	 mov	 ecx, 1
  00d9c	85 c9		 test	 ecx, ecx
  00d9e	74 0c		 je	 SHORT $LN106@update_loc
  00da0	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv475[ebp], 9
  00daa	eb 27		 jmp	 SHORT $LN107@update_loc
$LN106@update_loc:
  00dac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00db2	81 c2 a1 00 00
	00		 add	 edx, 161		; 000000a1H
  00db8	52		 push	 edx
  00db9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00dbe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00dc3	50		 push	 eax
  00dc4	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dc9	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv475[ebp], 0
$LN107@update_loc:
  00dd3	51		 push	 ecx
  00dd4	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _apu_amp$[ebp]
  00dd9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dde	6a 09		 push	 9
  00de0	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00de3	51		 push	 ecx
  00de4	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv467[ebp], 700
  00dee	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv475[ebp]
  00df4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00dfb	ff d1		 call	 ecx

; 1640 : 				set_local_entity_float_value (spec, FLOAT_TYPE_SOUNDPITCH, apu_pitch);

  00dfd	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00e01	74 0d		 je	 SHORT $LN108@update_loc
  00e03	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00e06	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e08	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv487[ebp], ecx
  00e0e	eb 27		 jmp	 SHORT $LN109@update_loc
$LN108@update_loc:
  00e10	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00e16	81 c2 a2 00 00
	00		 add	 edx, 162		; 000000a2H
  00e1c	52		 push	 edx
  00e1d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e22	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e27	50		 push	 eax
  00e28	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e2d	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv487[ebp], 0
$LN109@update_loc:
  00e37	b9 01 00 00 00	 mov	 ecx, 1
  00e3c	85 c9		 test	 ecx, ecx
  00e3e	74 0c		 je	 SHORT $LN110@update_loc
  00e40	c7 85 74 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv495[ebp], 10 ; 0000000aH
  00e4a	eb 27		 jmp	 SHORT $LN111@update_loc
$LN110@update_loc:
  00e4c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00e52	81 c2 a2 00 00
	00		 add	 edx, 162		; 000000a2H
  00e58	52		 push	 edx
  00e59	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e5e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00e63	50		 push	 eax
  00e64	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e69	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv495[ebp], 0
$LN111@update_loc:
  00e73	51		 push	 ecx
  00e74	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _apu_pitch$[ebp]
  00e79	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e7e	6a 0a		 push	 10			; 0000000aH
  00e80	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00e83	51		 push	 ecx
  00e84	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv487[ebp], 700
  00e8e	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv495[ebp]
  00e94	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00e9b	ff d1		 call	 ecx

; 1641 : 				break;

  00e9d	e9 e5 01 00 00	 jmp	 $LN4@update_loc
$LN31@update_loc:

; 1642 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP1:
; 1643 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP2:
; 1644 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN1:
; 1645 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN2:
; 1646 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, winding_amp);

  00ea2	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00ea6	74 0d		 je	 SHORT $LN112@update_loc
  00ea8	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00eab	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ead	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv507[ebp], ecx
  00eb3	eb 27		 jmp	 SHORT $LN113@update_loc
$LN112@update_loc:
  00eb5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00ebb	81 c2 a8 00 00
	00		 add	 edx, 168		; 000000a8H
  00ec1	52		 push	 edx
  00ec2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ec7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ecc	50		 push	 eax
  00ecd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ed2	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv507[ebp], 0
$LN113@update_loc:
  00edc	b9 01 00 00 00	 mov	 ecx, 1
  00ee1	85 c9		 test	 ecx, ecx
  00ee3	74 0c		 je	 SHORT $LN114@update_loc
  00ee5	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv515[ebp], 9
  00eef	eb 27		 jmp	 SHORT $LN115@update_loc
$LN114@update_loc:
  00ef1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00ef7	81 c2 a8 00 00
	00		 add	 edx, 168		; 000000a8H
  00efd	52		 push	 edx
  00efe	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f03	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00f08	50		 push	 eax
  00f09	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f0e	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv515[ebp], 0
$LN115@update_loc:
  00f18	51		 push	 ecx
  00f19	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _winding_amp$[ebp]
  00f1e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00f23	6a 09		 push	 9
  00f25	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00f28	51		 push	 ecx
  00f29	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv507[ebp], 700
  00f33	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv515[ebp]
  00f39	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00f40	ff d1		 call	 ecx

; 1647 : 				break;

  00f42	e9 40 01 00 00	 jmp	 $LN4@update_loc
$LN32@update_loc:

; 1648 : 			//Werewolf TODO: Implement pitch and volume curves for turbine and slap sounds
; 1649 : 			case ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_SLAP:
; 1650 : 				set_local_entity_float_value (spec, FLOAT_TYPE_AMPLIFICATION, (slap_amp)); //Werewolf: slapping sound

  00f47	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00f4b	74 0d		 je	 SHORT $LN116@update_loc
  00f4d	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00f50	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f52	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv527[ebp], ecx
  00f58	eb 27		 jmp	 SHORT $LN117@update_loc
$LN116@update_loc:
  00f5a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00f60	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  00f66	52		 push	 edx
  00f67	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f6c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f71	50		 push	 eax
  00f72	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f77	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv527[ebp], 0
$LN117@update_loc:
  00f81	b9 01 00 00 00	 mov	 ecx, 1
  00f86	85 c9		 test	 ecx, ecx
  00f88	74 0c		 je	 SHORT $LN118@update_loc
  00f8a	c7 85 74 ff ff
	ff 09 00 00 00	 mov	 DWORD PTR tv535[ebp], 9
  00f94	eb 27		 jmp	 SHORT $LN119@update_loc
$LN118@update_loc:
  00f96	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  00f9c	81 c2 ac 00 00
	00		 add	 edx, 172		; 000000acH
  00fa2	52		 push	 edx
  00fa3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fa8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00fad	50		 push	 eax
  00fae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fb3	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv535[ebp], 0
$LN119@update_loc:
  00fbd	51		 push	 ecx
  00fbe	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _slap_amp$[ebp]
  00fc3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00fc8	6a 09		 push	 9
  00fca	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  00fcd	51		 push	 ecx
  00fce	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv527[ebp], 700
  00fd8	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv535[ebp]
  00fde	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  00fe5	ff d1		 call	 ecx

; 1651 : 				set_local_entity_float_value (spec, FLOAT_TYPE_SOUNDPITCH, looping_pitch);

  00fe7	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00feb	74 0d		 je	 SHORT $LN120@update_loc
  00fed	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  00ff0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ff2	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv547[ebp], ecx
  00ff8	eb 27		 jmp	 SHORT $LN121@update_loc
$LN120@update_loc:
  00ffa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  01000	81 c2 ad 00 00
	00		 add	 edx, 173		; 000000adH
  01006	52		 push	 edx
  01007	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0100c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  01011	50		 push	 eax
  01012	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01017	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv547[ebp], 0
$LN121@update_loc:
  01021	b9 01 00 00 00	 mov	 ecx, 1
  01026	85 c9		 test	 ecx, ecx
  01028	74 0c		 je	 SHORT $LN122@update_loc
  0102a	c7 85 74 ff ff
	ff 0a 00 00 00	 mov	 DWORD PTR tv555[ebp], 10 ; 0000000aH
  01034	eb 27		 jmp	 SHORT $LN123@update_loc
$LN122@update_loc:
  01036	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  0103c	81 c2 ad 00 00
	00		 add	 edx, 173		; 000000adH
  01042	52		 push	 edx
  01043	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  01048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  0104d	50		 push	 eax
  0104e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01053	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv555[ebp], 0
$LN123@update_loc:
  0105d	51		 push	 ecx
  0105e	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _looping_pitch$[ebp]
  01063	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  01068	6a 0a		 push	 10			; 0000000aH
  0106a	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  0106d	51		 push	 ecx
  0106e	69 95 78 ff ff
	ff bc 02 00 00	 imul	 edx, DWORD PTR tv547[ebp], 700
  01078	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv555[ebp]
  0107e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  01085	ff d1		 call	 ecx
$LN4@update_loc:

; 1652 : 				break;
; 1653 : 			}
; 1654 : 		}
; 1655 : 
; 1656 : 		spec = get_local_entity_child_succ (spec, LIST_TYPE_SPECIAL_EFFECT);

  01087	83 7d cc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0108b	74 0d		 je	 SHORT $LN124@update_loc
  0108d	8b 45 cc	 mov	 eax, DWORD PTR _spec$[ebp]
  01090	8b 08		 mov	 ecx, DWORD PTR [eax]
  01092	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv569[ebp], ecx
  01098	eb 27		 jmp	 SHORT $LN125@update_loc
$LN124@update_loc:
  0109a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  010a0	81 c2 b2 00 00
	00		 add	 edx, 178		; 000000b2H
  010a6	52		 push	 edx
  010a7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  010ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010b1	50		 push	 eax
  010b2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010b7	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv569[ebp], 0
$LN125@update_loc:
  010c1	b9 01 00 00 00	 mov	 ecx, 1
  010c6	85 c9		 test	 ecx, ecx
  010c8	74 0c		 je	 SHORT $LN126@update_loc
  010ca	c7 85 74 ff ff
	ff 24 00 00 00	 mov	 DWORD PTR tv577[ebp], 36 ; 00000024H
  010d4	eb 27		 jmp	 SHORT $LN127@update_loc
$LN126@update_loc:
  010d6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z@4JA
  010dc	81 c2 b2 00 00
	00		 add	 edx, 178		; 000000b2H
  010e2	52		 push	 edx
  010e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  010e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  010ed	50		 push	 eax
  010ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010f3	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv577[ebp], 0
$LN127@update_loc:
  010fd	6a 24		 push	 36			; 00000024H
  010ff	8b 4d cc	 mov	 ecx, DWORD PTR _spec$[ebp]
  01102	51		 push	 ecx
  01103	69 95 78 ff ff
	ff b4 00 00 00	 imul	 edx, DWORD PTR tv569[ebp], 180
  0110d	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv577[ebp]
  01113	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0111a	ff d1		 call	 ecx
  0111c	89 45 cc	 mov	 DWORD PTR _spec$[ebp], eax

; 1657 : 	}

  0111f	e9 99 f7 ff ff	 jmp	 $LN2@update_loc
$LN3@update_loc:

; 1658 : }

  01124	5f		 pop	 edi
  01125	5e		 pop	 esi
  01126	5b		 pop	 ebx
  01127	8b e5		 mov	 esp, ebp
  01129	5d		 pop	 ebp
  0112a	c2 04 00	 ret	 4
  0112d	0f 1f 00	 npad	 3
$LN128@update_loc:
  01130	00 00 00 00	 DD	 $LN27@update_loc
  01134	00 00 00 00	 DD	 $LN30@update_loc
  01138	00 00 00 00	 DD	 $LN28@update_loc
  0113c	00 00 00 00	 DD	 $LN29@update_loc
  01140	00 00 00 00	 DD	 $LN32@update_loc
  01144	00 00 00 00	 DD	 $LN31@update_loc
  01148	00 00 00 00	 DD	 $LN31@update_loc
  0114c	00 00 00 00	 DD	 $LN31@update_loc
  01150	00 00 00 00	 DD	 $LN31@update_loc
?update_local_helicopter_rotor_sounds@@YGXPAUENTITY@@@Z ENDP ; update_local_helicopter_rotor_sounds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv299 = -80						; size = 4
tv280 = -80						; size = 4
tv261 = -80						; size = 4
tv242 = -80						; size = 4
tv223 = -80						; size = 4
tv204 = -80						; size = 4
tv185 = -80						; size = 4
tv166 = -80						; size = 4
tv141 = -80						; size = 4
tv88 = -80						; size = 4
tv312 = -76						; size = 4
tv292 = -76						; size = 4
tv273 = -76						; size = 4
tv254 = -76						; size = 4
tv235 = -76						; size = 4
tv216 = -76						; size = 4
tv197 = -76						; size = 4
tv178 = -76						; size = 4
tv159 = -76						; size = 4
tv152 = -76						; size = 4
tv133 = -76						; size = 4
tv80 = -76						; size = 4
_next$ = -8						; size = 4
_spec$ = -4						; size = 4
_en$ = 8						; size = 4
?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z PROC ; kill_helicopter_rotor_sound_effects, COMDAT

; 1436 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1437 : 	entity
; 1438 : 		*spec,
; 1439 : 		*next;
; 1440 : 
; 1441 : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@kill_helic
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@kill_helic:

; 1442 : 
; 1443 : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN5@kill_helic
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00035	83 c0 07	 add	 eax, 7
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@kill_helic:

; 1444 : 
; 1445 : 	spec = get_local_entity_first_child (en, LIST_TYPE_SPECIAL_EFFECT);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN10@kill_helic
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d b4	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN11@kill_helic
$LN10@kill_helic:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  0005e	83 c2 09	 add	 edx, 9
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN11@kill_helic:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN12@kill_helic
  00082	c7 45 b0 24 00
	00 00		 mov	 DWORD PTR tv88[ebp], 36	; 00000024H
  00089	eb 21		 jmp	 SHORT $LN13@kill_helic
$LN12@kill_helic:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00091	83 c2 09	 add	 edx, 9
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN13@kill_helic:
  000ac	6a 24		 push	 36			; 00000024H
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b1	51		 push	 ecx
  000b2	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 180
  000b9	8b 45 b0	 mov	 eax, DWORD PTR tv88[ebp]
  000bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  000c3	ff d1		 call	 ecx
  000c5	89 45 fc	 mov	 DWORD PTR _spec$[ebp], eax
$LN2@kill_helic:

; 1446 : 
; 1447 : 	while (spec)

  000c8	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  000cc	0f 84 f4 04 00
	00		 je	 $LN1@kill_helic

; 1448 : 	{
; 1449 : 		next = get_local_entity_child_succ (spec, LIST_TYPE_SPECIAL_EFFECT);

  000d2	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  000d6	74 0a		 je	 SHORT $LN14@kill_helic
  000d8	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	89 4d b4	 mov	 DWORD PTR tv133[ebp], ecx
  000e0	eb 21		 jmp	 SHORT $LN15@kill_helic
$LN14@kill_helic:
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  000e8	83 c2 0d	 add	 edx, 13			; 0000000dH
  000eb	52		 push	 edx
  000ec	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000fc	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv133[ebp], 0
$LN15@kill_helic:
  00103	b9 01 00 00 00	 mov	 ecx, 1
  00108	85 c9		 test	 ecx, ecx
  0010a	74 09		 je	 SHORT $LN16@kill_helic
  0010c	c7 45 b0 24 00
	00 00		 mov	 DWORD PTR tv141[ebp], 36 ; 00000024H
  00113	eb 21		 jmp	 SHORT $LN17@kill_helic
$LN16@kill_helic:
  00115	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  0011b	83 c2 0d	 add	 edx, 13			; 0000000dH
  0011e	52		 push	 edx
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00129	50		 push	 eax
  0012a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0012f	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN17@kill_helic:
  00136	6a 24		 push	 36			; 00000024H
  00138	8b 4d fc	 mov	 ecx, DWORD PTR _spec$[ebp]
  0013b	51		 push	 ecx
  0013c	69 55 b4 b4 00
	00 00		 imul	 edx, DWORD PTR tv133[ebp], 180
  00143	8b 45 b0	 mov	 eax, DWORD PTR tv141[ebp]
  00146	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  0014d	ff d1		 call	 ecx
  0014f	89 45 f8	 mov	 DWORD PTR _next$[ebp], eax

; 1450 : 
; 1451 : 		if (get_local_entity_type (spec) == ENTITY_TYPE_SOUND_EFFECT)

  00152	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00156	74 0a		 je	 SHORT $LN18@kill_helic
  00158	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  0015b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0015d	89 4d b4	 mov	 DWORD PTR tv152[ebp], ecx
  00160	eb 1d		 jmp	 SHORT $LN19@kill_helic
$LN18@kill_helic:
  00162	68 ab 05 00 00	 push	 1451			; 000005abH
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00172	52		 push	 edx
  00173	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00178	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv152[ebp], 0
$LN19@kill_helic:
  0017f	83 7d b4 20	 cmp	 DWORD PTR tv152[ebp], 32 ; 00000020H
  00183	0f 85 32 04 00
	00		 jne	 $LN6@kill_helic

; 1452 : 		{
; 1453 : 			if ((get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_LOOPING) ||
; 1454 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE1) ||
; 1455 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_TURBINE2) ||
; 1456 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_SLAP) ||
; 1457 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP1) ||
; 1458 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_UP2) ||
; 1459 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN1) ||

  00189	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0018d	74 0a		 je	 SHORT $LN20@kill_helic
  0018f	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  00192	8b 08		 mov	 ecx, DWORD PTR [eax]
  00194	89 4d b4	 mov	 DWORD PTR tv159[ebp], ecx
  00197	eb 1d		 jmp	 SHORT $LN21@kill_helic
$LN20@kill_helic:
  00199	68 ad 05 00 00	 push	 1453			; 000005adH
  0019e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001a9	52		 push	 edx
  001aa	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001af	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN21@kill_helic:
  001b6	b8 01 00 00 00	 mov	 eax, 1
  001bb	85 c0		 test	 eax, eax
  001bd	74 09		 je	 SHORT $LN22@kill_helic
  001bf	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv166[ebp], 52 ; 00000034H
  001c6	eb 1d		 jmp	 SHORT $LN23@kill_helic
$LN22@kill_helic:
  001c8	68 ad 05 00 00	 push	 1453			; 000005adH
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001d8	51		 push	 ecx
  001d9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001de	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN23@kill_helic:
  001e5	6a 34		 push	 52			; 00000034H
  001e7	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  001ea	52		 push	 edx
  001eb	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv159[ebp], 1116
  001f2	8b 4d b0	 mov	 ecx, DWORD PTR tv166[ebp]
  001f5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  001fc	ff d2		 call	 edx
  001fe	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00201	0f 84 6a 03 00
	00		 je	 $LN8@kill_helic
  00207	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  0020b	74 0a		 je	 SHORT $LN24@kill_helic
  0020d	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  00210	8b 08		 mov	 ecx, DWORD PTR [eax]
  00212	89 4d b4	 mov	 DWORD PTR tv178[ebp], ecx
  00215	eb 1d		 jmp	 SHORT $LN25@kill_helic
$LN24@kill_helic:
  00217	68 ae 05 00 00	 push	 1454			; 000005aeH
  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00221	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00227	52		 push	 edx
  00228	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0022d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv178[ebp], 0
$LN25@kill_helic:
  00234	b8 01 00 00 00	 mov	 eax, 1
  00239	85 c0		 test	 eax, eax
  0023b	74 09		 je	 SHORT $LN26@kill_helic
  0023d	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv185[ebp], 52 ; 00000034H
  00244	eb 1d		 jmp	 SHORT $LN27@kill_helic
$LN26@kill_helic:
  00246	68 ae 05 00 00	 push	 1454			; 000005aeH
  0024b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00250	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00256	51		 push	 ecx
  00257	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0025c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN27@kill_helic:
  00263	6a 34		 push	 52			; 00000034H
  00265	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  00268	52		 push	 edx
  00269	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv178[ebp], 1116
  00270	8b 4d b0	 mov	 ecx, DWORD PTR tv185[ebp]
  00273	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0027a	ff d2		 call	 edx
  0027c	83 f8 21	 cmp	 eax, 33			; 00000021H
  0027f	0f 84 ec 02 00
	00		 je	 $LN8@kill_helic
  00285	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00289	74 0a		 je	 SHORT $LN28@kill_helic
  0028b	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  0028e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00290	89 4d b4	 mov	 DWORD PTR tv197[ebp], ecx
  00293	eb 1d		 jmp	 SHORT $LN29@kill_helic
$LN28@kill_helic:
  00295	68 af 05 00 00	 push	 1455			; 000005afH
  0029a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a5	52		 push	 edx
  002a6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ab	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv197[ebp], 0
$LN29@kill_helic:
  002b2	b8 01 00 00 00	 mov	 eax, 1
  002b7	85 c0		 test	 eax, eax
  002b9	74 09		 je	 SHORT $LN30@kill_helic
  002bb	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv204[ebp], 52 ; 00000034H
  002c2	eb 1d		 jmp	 SHORT $LN31@kill_helic
$LN30@kill_helic:
  002c4	68 af 05 00 00	 push	 1455			; 000005afH
  002c9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002d4	51		 push	 ecx
  002d5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002da	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv204[ebp], 0
$LN31@kill_helic:
  002e1	6a 34		 push	 52			; 00000034H
  002e3	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  002e6	52		 push	 edx
  002e7	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv197[ebp], 1116
  002ee	8b 4d b0	 mov	 ecx, DWORD PTR tv204[ebp]
  002f1	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002f8	ff d2		 call	 edx
  002fa	83 f8 22	 cmp	 eax, 34			; 00000022H
  002fd	0f 84 6e 02 00
	00		 je	 $LN8@kill_helic
  00303	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00307	74 0a		 je	 SHORT $LN32@kill_helic
  00309	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  0030c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0030e	89 4d b4	 mov	 DWORD PTR tv216[ebp], ecx
  00311	eb 1d		 jmp	 SHORT $LN33@kill_helic
$LN32@kill_helic:
  00313	68 b0 05 00 00	 push	 1456			; 000005b0H
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0031d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00323	52		 push	 edx
  00324	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00329	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN33@kill_helic:
  00330	b8 01 00 00 00	 mov	 eax, 1
  00335	85 c0		 test	 eax, eax
  00337	74 09		 je	 SHORT $LN34@kill_helic
  00339	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv223[ebp], 52 ; 00000034H
  00340	eb 1d		 jmp	 SHORT $LN35@kill_helic
$LN34@kill_helic:
  00342	68 b0 05 00 00	 push	 1456			; 000005b0H
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0034c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00352	51		 push	 ecx
  00353	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00358	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv223[ebp], 0
$LN35@kill_helic:
  0035f	6a 34		 push	 52			; 00000034H
  00361	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  00364	52		 push	 edx
  00365	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv216[ebp], 1116
  0036c	8b 4d b0	 mov	 ecx, DWORD PTR tv223[ebp]
  0036f	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00376	ff d2		 call	 edx
  00378	83 f8 23	 cmp	 eax, 35			; 00000023H
  0037b	0f 84 f0 01 00
	00		 je	 $LN8@kill_helic
  00381	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00385	74 0a		 je	 SHORT $LN36@kill_helic
  00387	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  0038a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038c	89 4d b4	 mov	 DWORD PTR tv235[ebp], ecx
  0038f	eb 1d		 jmp	 SHORT $LN37@kill_helic
$LN36@kill_helic:
  00391	68 b1 05 00 00	 push	 1457			; 000005b1H
  00396	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0039b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  003a1	52		 push	 edx
  003a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003a7	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv235[ebp], 0
$LN37@kill_helic:
  003ae	b8 01 00 00 00	 mov	 eax, 1
  003b3	85 c0		 test	 eax, eax
  003b5	74 09		 je	 SHORT $LN38@kill_helic
  003b7	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv242[ebp], 52 ; 00000034H
  003be	eb 1d		 jmp	 SHORT $LN39@kill_helic
$LN38@kill_helic:
  003c0	68 b1 05 00 00	 push	 1457			; 000005b1H
  003c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003d0	51		 push	 ecx
  003d1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d6	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv242[ebp], 0
$LN39@kill_helic:
  003dd	6a 34		 push	 52			; 00000034H
  003df	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  003e2	52		 push	 edx
  003e3	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv235[ebp], 1116
  003ea	8b 4d b0	 mov	 ecx, DWORD PTR tv242[ebp]
  003ed	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  003f4	ff d2		 call	 edx
  003f6	83 f8 26	 cmp	 eax, 38			; 00000026H
  003f9	0f 84 72 01 00
	00		 je	 $LN8@kill_helic
  003ff	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00403	74 0a		 je	 SHORT $LN40@kill_helic
  00405	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  00408	8b 08		 mov	 ecx, DWORD PTR [eax]
  0040a	89 4d b4	 mov	 DWORD PTR tv254[ebp], ecx
  0040d	eb 1d		 jmp	 SHORT $LN41@kill_helic
$LN40@kill_helic:
  0040f	68 b2 05 00 00	 push	 1458			; 000005b2H
  00414	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00419	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0041f	52		 push	 edx
  00420	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00425	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv254[ebp], 0
$LN41@kill_helic:
  0042c	b8 01 00 00 00	 mov	 eax, 1
  00431	85 c0		 test	 eax, eax
  00433	74 09		 je	 SHORT $LN42@kill_helic
  00435	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv261[ebp], 52 ; 00000034H
  0043c	eb 1d		 jmp	 SHORT $LN43@kill_helic
$LN42@kill_helic:
  0043e	68 b2 05 00 00	 push	 1458			; 000005b2H
  00443	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00448	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0044e	51		 push	 ecx
  0044f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00454	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv261[ebp], 0
$LN43@kill_helic:
  0045b	6a 34		 push	 52			; 00000034H
  0045d	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  00460	52		 push	 edx
  00461	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv254[ebp], 1116
  00468	8b 4d b0	 mov	 ecx, DWORD PTR tv261[ebp]
  0046b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00472	ff d2		 call	 edx
  00474	83 f8 27	 cmp	 eax, 39			; 00000027H
  00477	0f 84 f4 00 00
	00		 je	 $LN8@kill_helic
  0047d	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00481	74 0a		 je	 SHORT $LN44@kill_helic
  00483	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  00486	8b 08		 mov	 ecx, DWORD PTR [eax]
  00488	89 4d b4	 mov	 DWORD PTR tv273[ebp], ecx
  0048b	eb 1d		 jmp	 SHORT $LN45@kill_helic
$LN44@kill_helic:
  0048d	68 b3 05 00 00	 push	 1459			; 000005b3H
  00492	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00497	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0049d	52		 push	 edx
  0049e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004a3	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv273[ebp], 0
$LN45@kill_helic:
  004aa	b8 01 00 00 00	 mov	 eax, 1
  004af	85 c0		 test	 eax, eax
  004b1	74 09		 je	 SHORT $LN46@kill_helic
  004b3	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv280[ebp], 52 ; 00000034H
  004ba	eb 1d		 jmp	 SHORT $LN47@kill_helic
$LN46@kill_helic:
  004bc	68 b3 05 00 00	 push	 1459			; 000005b3H
  004c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  004c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004cc	51		 push	 ecx
  004cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004d2	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv280[ebp], 0
$LN47@kill_helic:
  004d9	6a 34		 push	 52			; 00000034H
  004db	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  004de	52		 push	 edx
  004df	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv273[ebp], 1116
  004e6	8b 4d b0	 mov	 ecx, DWORD PTR tv280[ebp]
  004e9	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004f0	ff d2		 call	 edx
  004f2	83 f8 24	 cmp	 eax, 36			; 00000024H
  004f5	74 7a		 je	 SHORT $LN8@kill_helic
  004f7	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  004fb	74 0a		 je	 SHORT $LN48@kill_helic
  004fd	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  00500	8b 08		 mov	 ecx, DWORD PTR [eax]
  00502	89 4d b4	 mov	 DWORD PTR tv292[ebp], ecx
  00505	eb 1d		 jmp	 SHORT $LN49@kill_helic
$LN48@kill_helic:
  00507	68 b4 05 00 00	 push	 1460			; 000005b4H
  0050c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00511	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00517	52		 push	 edx
  00518	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0051d	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv292[ebp], 0
$LN49@kill_helic:
  00524	b8 01 00 00 00	 mov	 eax, 1
  00529	85 c0		 test	 eax, eax
  0052b	74 09		 je	 SHORT $LN50@kill_helic
  0052d	c7 45 b0 34 00
	00 00		 mov	 DWORD PTR tv299[ebp], 52 ; 00000034H
  00534	eb 1d		 jmp	 SHORT $LN51@kill_helic
$LN50@kill_helic:
  00536	68 b4 05 00 00	 push	 1460			; 000005b4H
  0053b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00540	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00546	51		 push	 ecx
  00547	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0054c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv299[ebp], 0
$LN51@kill_helic:
  00553	6a 34		 push	 52			; 00000034H
  00555	8b 55 fc	 mov	 edx, DWORD PTR _spec$[ebp]
  00558	52		 push	 edx
  00559	69 45 b4 5c 04
	00 00		 imul	 eax, DWORD PTR tv292[ebp], 1116
  00560	8b 4d b0	 mov	 ecx, DWORD PTR tv299[ebp]
  00563	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0056a	ff d2		 call	 edx
  0056c	83 f8 25	 cmp	 eax, 37			; 00000025H
  0056f	75 4a		 jne	 SHORT $LN6@kill_helic
$LN8@kill_helic:

; 1460 : 					(get_local_entity_int_value (spec, INT_TYPE_ENTITY_SUB_TYPE) == ENTITY_SUB_TYPE_EFFECT_SOUND_ROTOR_WIND_DOWN2))
; 1461 : 			{
; 1462 : 				kill_client_server_entity (spec);

  00571	83 7d fc 00	 cmp	 DWORD PTR _spec$[ebp], 0
  00575	74 0a		 je	 SHORT $LN52@kill_helic
  00577	8b 45 fc	 mov	 eax, DWORD PTR _spec$[ebp]
  0057a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0057c	89 4d b4	 mov	 DWORD PTR tv312[ebp], ecx
  0057f	eb 21		 jmp	 SHORT $LN53@kill_helic
$LN52@kill_helic:
  00581	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00587	83 c2 1a	 add	 edx, 26			; 0000001aH
  0058a	52		 push	 edx
  0058b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00590	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00595	50		 push	 eax
  00596	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0059b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv312[ebp], 0
$LN53@kill_helic:
  005a2	8b 4d fc	 mov	 ecx, DWORD PTR _spec$[ebp]
  005a5	51		 push	 ecx
  005a6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  005ac	c1 e2 02	 shl	 edx, 2
  005af	8b 45 b4	 mov	 eax, DWORD PTR tv312[ebp]
  005b2	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_kill_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  005b9	ff d1		 call	 ecx
$LN6@kill_helic:

; 1463 : 			}
; 1464 : 		}
; 1465 : 
; 1466 : 		spec = next;

  005bb	8b 45 f8	 mov	 eax, DWORD PTR _next$[ebp]
  005be	89 45 fc	 mov	 DWORD PTR _spec$[ebp], eax

; 1467 : 	}

  005c1	e9 02 fb ff ff	 jmp	 $LN2@kill_helic
$LN1@kill_helic:

; 1468 : }

  005c6	5f		 pop	 edi
  005c7	5e		 pop	 esi
  005c8	5b		 pop	 ebx
  005c9	8b e5		 mov	 esp, ebp
  005cb	5d		 pop	 ebp
  005cc	c2 04 00	 ret	 4
?kill_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ENDP ; kill_helicopter_rotor_sound_effects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv88 = -76						; size = 4
tv94 = -72						; size = 4
tv80 = -72						; size = 4
_sub_type$ = -4						; size = 4
_en$ = 8						; size = 4
?create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z PROC ; create_helicopter_rotor_sound_effects, COMDAT

; 850  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 851  : 
; 852  : 	entity_sub_types
; 853  : 		sub_type;
; 854  : 
; 855  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@create_hel
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@create_hel:

; 856  : 
; 857  : 	ASSERT (get_comms_model () == COMMS_MODEL_SERVER);

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	74 18		 je	 SHORT $LN5@create_hel
  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00035	83 c0 07	 add	 eax, 7
  00038	50		 push	 eax
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DMBLBJBK@get_comms_model?5?$CI?$CJ?5?$DN?$DN?5COMMS_MOD@
  00043	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@create_hel:

; 858  : 
; 859  : 	sub_type = get_local_entity_int_value (en, INT_TYPE_ENTITY_SUB_TYPE);

  00048	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004c	74 0a		 je	 SHORT $LN22@create_hel
  0004e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00051	8b 08		 mov	 ecx, DWORD PTR [eax]
  00053	89 4d b8	 mov	 DWORD PTR tv80[ebp], ecx
  00056	eb 21		 jmp	 SHORT $LN23@create_hel
$LN22@create_hel:
  00058	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  0005e	83 c2 09	 add	 edx, 9
  00061	52		 push	 edx
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00072	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN23@create_hel:
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	85 c9		 test	 ecx, ecx
  00080	74 09		 je	 SHORT $LN24@create_hel
  00082	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv88[ebp], 52	; 00000034H
  00089	eb 21		 jmp	 SHORT $LN25@create_hel
$LN24@create_hel:
  0008b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z@4JA
  00091	83 c2 09	 add	 edx, 9
  00094	52		 push	 edx
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0009f	50		 push	 eax
  000a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a5	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN25@create_hel:
  000ac	6a 34		 push	 52			; 00000034H
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b1	51		 push	 ecx
  000b2	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000b9	8b 45 b4	 mov	 eax, DWORD PTR tv88[ebp]
  000bc	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c3	ff d1		 call	 ecx
  000c5	89 45 fc	 mov	 DWORD PTR _sub_type$[ebp], eax

; 860  : 
; 861  : 	switch (sub_type)

  000c8	8b 45 fc	 mov	 eax, DWORD PTR _sub_type$[ebp]
  000cb	89 45 b8	 mov	 DWORD PTR tv94[ebp], eax
  000ce	83 7d b8 1f	 cmp	 DWORD PTR tv94[ebp], 31	; 0000001fH
  000d2	0f 87 0b 04 00
	00		 ja	 $LN20@create_hel
  000d8	8b 4d b8	 mov	 ecx, DWORD PTR tv94[ebp]
  000db	0f b6 91 00 00
	00 00		 movzx	 edx, BYTE PTR $LN26@create_hel[ecx]
  000e2	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN27@create_hel[edx*4]
$LN6@create_hel:

; 862  : 	{
; 863  : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64D_APACHE_LONGBOW:
; 864  : 		{
; 865  : 			create_specified_helicopter_rotor_sound_effects

  000e9	68 99 07 00 00	 push	 1945			; 00000799H
  000ee	68 9a 07 00 00	 push	 1946			; 0000079aH
  000f3	6a 03		 push	 3
  000f5	6a 02		 push	 2
  000f7	6a 01		 push	 1
  000f9	6a 02		 push	 2
  000fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 866  : 			(
; 867  : 				en,
; 868  : 				SOUND_LOCALITY_EXTERIOR,
; 869  : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR,
; 870  : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_WIND_UP,
; 871  : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_WIND_DOWN,
; 872  : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_TURBINE,
; 873  : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_SLAP
; 874  : 			);
; 875  : 
; 876  : 			create_specified_helicopter_rotor_sound_effects

  00104	68 9b 07 00 00	 push	 1947			; 0000079bH
  00109	68 9c 07 00 00	 push	 1948			; 0000079cH
  0010e	6a 06		 push	 6
  00110	6a 05		 push	 5
  00112	6a 04		 push	 4
  00114	6a 01		 push	 1
  00116	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 877  : 			(
; 878  : 				en,
; 879  : 				SOUND_LOCALITY_INTERIOR,
; 880  : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR,
; 881  : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_WIND_UP,
; 882  : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_WIND_DOWN,
; 883  : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_TURBINE,
; 884  : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_SLAP
; 885  : 			);
; 886  : 
; 887  : 			break;

  0011f	e9 e0 03 00 00	 jmp	 $LN1@create_hel
$LN7@create_hel:

; 888  : 		}
; 889  : 		//Werewolf: Additional sounds
; 890  : 		case ENTITY_SUB_TYPE_AIRCRAFT_RAH66_COMANCHE:
; 891  : 		{
; 892  : 			create_specified_helicopter_rotor_sound_effects

  00124	68 a4 07 00 00	 push	 1956			; 000007a4H
  00129	68 a5 07 00 00	 push	 1957			; 000007a5H
  0012e	68 a3 07 00 00	 push	 1955			; 000007a3H
  00133	68 a2 07 00 00	 push	 1954			; 000007a2H
  00138	68 a1 07 00 00	 push	 1953			; 000007a1H
  0013d	6a 02		 push	 2
  0013f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 893  : 			(
; 894  : 				en,
; 895  : 				SOUND_LOCALITY_EXTERIOR,
; 896  : 				SOUND_SAMPLE_INDEX_EXTERIOR_COMANCHE_ROTOR,
; 897  : 				SOUND_SAMPLE_INDEX_EXTERIOR_COMANCHE_ROTOR_WIND_UP,
; 898  : 				SOUND_SAMPLE_INDEX_EXTERIOR_COMANCHE_ROTOR_WIND_DOWN,
; 899  : 				SOUND_SAMPLE_INDEX_EXTERIOR_COMANCHE_ROTOR_TURBINE,
; 900  : 				SOUND_SAMPLE_INDEX_EXTERIOR_COMANCHE_ROTOR_SLAP
; 901  : 			);
; 902  : 
; 903  : 			create_specified_helicopter_rotor_sound_effects

  00148	68 a9 07 00 00	 push	 1961			; 000007a9H
  0014d	68 aa 07 00 00	 push	 1962			; 000007aaH
  00152	68 a8 07 00 00	 push	 1960			; 000007a8H
  00157	68 a7 07 00 00	 push	 1959			; 000007a7H
  0015c	68 a6 07 00 00	 push	 1958			; 000007a6H
  00161	6a 01		 push	 1
  00163	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 904  : 			(
; 905  : 				en,
; 906  : 				SOUND_LOCALITY_INTERIOR,
; 907  : 				SOUND_SAMPLE_INDEX_INTERIOR_COMANCHE_ROTOR,
; 908  : 				SOUND_SAMPLE_INDEX_INTERIOR_COMANCHE_ROTOR_WIND_UP,
; 909  : 				SOUND_SAMPLE_INDEX_INTERIOR_COMANCHE_ROTOR_WIND_DOWN,
; 910  : 				SOUND_SAMPLE_INDEX_INTERIOR_COMANCHE_ROTOR_TURBINE,
; 911  : 				SOUND_SAMPLE_INDEX_INTERIOR_COMANCHE_ROTOR_SLAP
; 912  : 			);
; 913  : 
; 914  : 			break;

  0016c	e9 93 03 00 00	 jmp	 $LN1@create_hel
$LN8@create_hel:

; 915  : 		}
; 916  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI28N_HAVOC_B:
; 917  : 		{
; 918  : 			create_specified_helicopter_rotor_sound_effects

  00171	68 9d 07 00 00	 push	 1949			; 0000079dH
  00176	68 9e 07 00 00	 push	 1950			; 0000079eH
  0017b	6a 0b		 push	 11			; 0000000bH
  0017d	6a 0a		 push	 10			; 0000000aH
  0017f	6a 09		 push	 9
  00181	6a 02		 push	 2
  00183	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 919  : 			(
; 920  : 				en,
; 921  : 				SOUND_LOCALITY_EXTERIOR,
; 922  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HAVOC_ROTOR,
; 923  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HAVOC_ROTOR_WIND_UP,
; 924  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HAVOC_ROTOR_WIND_DOWN,
; 925  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HAVOC_ROTOR_TURBINE,
; 926  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HAVOC_ROTOR_SLAP
; 927  : 			);
; 928  : 
; 929  : 			create_specified_helicopter_rotor_sound_effects

  0018c	68 9f 07 00 00	 push	 1951			; 0000079fH
  00191	68 a0 07 00 00	 push	 1952			; 000007a0H
  00196	6a 0e		 push	 14			; 0000000eH
  00198	6a 0d		 push	 13			; 0000000dH
  0019a	6a 0c		 push	 12			; 0000000cH
  0019c	6a 01		 push	 1
  0019e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 930  : 			(
; 931  : 				en,
; 932  : 				SOUND_LOCALITY_INTERIOR,
; 933  : 				SOUND_SAMPLE_INDEX_INTERIOR_HAVOC_ROTOR,
; 934  : 				SOUND_SAMPLE_INDEX_INTERIOR_HAVOC_ROTOR_WIND_UP,
; 935  : 				SOUND_SAMPLE_INDEX_INTERIOR_HAVOC_ROTOR_WIND_DOWN,
; 936  : 				SOUND_SAMPLE_INDEX_INTERIOR_HAVOC_ROTOR_TURBINE,
; 937  : 				SOUND_SAMPLE_INDEX_INTERIOR_HAVOC_ROTOR_SLAP
; 938  : 			);
; 939  : 
; 940  : 			break;

  001a7	e9 58 03 00 00	 jmp	 $LN1@create_hel
$LN9@create_hel:

; 941  : 		}
; 942  : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA52_HOKUM_B:
; 943  : 		{
; 944  : 			create_specified_helicopter_rotor_sound_effects

  001ac	68 b0 07 00 00	 push	 1968			; 000007b0H
  001b1	68 b1 07 00 00	 push	 1969			; 000007b1H
  001b6	68 af 07 00 00	 push	 1967			; 000007afH
  001bb	68 ae 07 00 00	 push	 1966			; 000007aeH
  001c0	68 ad 07 00 00	 push	 1965			; 000007adH
  001c5	6a 02		 push	 2
  001c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 945  : 			(
; 946  : 				en,
; 947  : 				SOUND_LOCALITY_EXTERIOR,
; 948  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR,
; 949  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_WIND_UP,
; 950  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_WIND_DOWN,
; 951  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_TURBINE,
; 952  : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_SLAP
; 953  : 			);
; 954  : 
; 955  : 			create_specified_helicopter_rotor_sound_effects

  001d0	68 b5 07 00 00	 push	 1973			; 000007b5H
  001d5	68 b6 07 00 00	 push	 1974			; 000007b6H
  001da	68 b4 07 00 00	 push	 1972			; 000007b4H
  001df	68 b3 07 00 00	 push	 1971			; 000007b3H
  001e4	68 b2 07 00 00	 push	 1970			; 000007b2H
  001e9	6a 01		 push	 1
  001eb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001ee	50		 push	 eax
  001ef	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 956  : 			(
; 957  : 				en,
; 958  : 				SOUND_LOCALITY_INTERIOR,
; 959  : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR,
; 960  : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_WIND_UP,
; 961  : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_WIND_DOWN,
; 962  : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_TURBINE,
; 963  : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_SLAP
; 964  : 			);
; 965  : 
; 966  : 			break;

  001f4	e9 0b 03 00 00	 jmp	 $LN1@create_hel
$LN10@create_hel:

; 967  : 		}
; 968  : 		case ENTITY_SUB_TYPE_AIRCRAFT_UH60_BLACK_HAWK:
; 969  : 		{
; 970  : 			create_specified_helicopter_rotor_sound_effects

  001f9	68 bc 07 00 00	 push	 1980			; 000007bcH
  001fe	68 bd 07 00 00	 push	 1981			; 000007bdH
  00203	68 bb 07 00 00	 push	 1979			; 000007bbH
  00208	68 ba 07 00 00	 push	 1978			; 000007baH
  0020d	68 b9 07 00 00	 push	 1977			; 000007b9H
  00212	6a 02		 push	 2
  00214	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00217	50		 push	 eax
  00218	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 971  : 			(
; 972  : 				en,
; 973  : 				SOUND_LOCALITY_EXTERIOR,
; 974  : 				SOUND_SAMPLE_INDEX_EXTERIOR_BLACKHAWK_ROTOR,
; 975  : 				SOUND_SAMPLE_INDEX_EXTERIOR_BLACKHAWK_ROTOR_WIND_UP,
; 976  : 				SOUND_SAMPLE_INDEX_EXTERIOR_BLACKHAWK_ROTOR_WIND_DOWN,
; 977  : 				SOUND_SAMPLE_INDEX_EXTERIOR_BLACKHAWK_ROTOR_TURBINE,
; 978  : 				SOUND_SAMPLE_INDEX_EXTERIOR_BLACKHAWK_ROTOR_SLAP
; 979  : 			);
; 980  : 
; 981  : 			create_specified_helicopter_rotor_sound_effects

  0021d	68 c1 07 00 00	 push	 1985			; 000007c1H
  00222	68 c2 07 00 00	 push	 1986			; 000007c2H
  00227	68 c0 07 00 00	 push	 1984			; 000007c0H
  0022c	68 bf 07 00 00	 push	 1983			; 000007bfH
  00231	68 be 07 00 00	 push	 1982			; 000007beH
  00236	6a 01		 push	 1
  00238	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0023b	50		 push	 eax
  0023c	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 982  : 			(
; 983  : 				en,
; 984  : 				SOUND_LOCALITY_INTERIOR,
; 985  : 				SOUND_SAMPLE_INDEX_INTERIOR_BLACKHAWK_ROTOR,
; 986  : 				SOUND_SAMPLE_INDEX_INTERIOR_BLACKHAWK_ROTOR_WIND_UP,
; 987  : 				SOUND_SAMPLE_INDEX_INTERIOR_BLACKHAWK_ROTOR_WIND_DOWN,
; 988  : 				SOUND_SAMPLE_INDEX_INTERIOR_BLACKHAWK_ROTOR_TURBINE,
; 989  : 				SOUND_SAMPLE_INDEX_INTERIOR_BLACKHAWK_ROTOR_SLAP
; 990  : 			);
; 991  : 
; 992  : 			break;

  00241	e9 be 02 00 00	 jmp	 $LN1@create_hel
$LN11@create_hel:

; 993  : 		}
; 994  : 		case ENTITY_SUB_TYPE_AIRCRAFT_MI24D_HIND:
; 995  : 		{
; 996  : 			create_specified_helicopter_rotor_sound_effects

  00246	68 c8 07 00 00	 push	 1992			; 000007c8H
  0024b	68 c9 07 00 00	 push	 1993			; 000007c9H
  00250	68 c7 07 00 00	 push	 1991			; 000007c7H
  00255	68 c6 07 00 00	 push	 1990			; 000007c6H
  0025a	68 c5 07 00 00	 push	 1989			; 000007c5H
  0025f	6a 02		 push	 2
  00261	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00264	50		 push	 eax
  00265	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 997  : 			(
; 998  : 				en,
; 999  : 				SOUND_LOCALITY_EXTERIOR,
; 1000 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HIND_ROTOR,
; 1001 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HIND_ROTOR_WIND_UP,
; 1002 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HIND_ROTOR_WIND_DOWN,
; 1003 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HIND_ROTOR_TURBINE,
; 1004 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HIND_ROTOR_SLAP
; 1005 : 			);
; 1006 : 
; 1007 : 			create_specified_helicopter_rotor_sound_effects

  0026a	68 cd 07 00 00	 push	 1997			; 000007cdH
  0026f	68 ce 07 00 00	 push	 1998			; 000007ceH
  00274	68 cc 07 00 00	 push	 1996			; 000007ccH
  00279	68 cb 07 00 00	 push	 1995			; 000007cbH
  0027e	68 ca 07 00 00	 push	 1994			; 000007caH
  00283	6a 01		 push	 1
  00285	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00288	50		 push	 eax
  00289	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1008 : 			(
; 1009 : 				en,
; 1010 : 				SOUND_LOCALITY_INTERIOR,
; 1011 : 				SOUND_SAMPLE_INDEX_INTERIOR_HIND_ROTOR,
; 1012 : 				SOUND_SAMPLE_INDEX_INTERIOR_HIND_ROTOR_WIND_UP,
; 1013 : 				SOUND_SAMPLE_INDEX_INTERIOR_HIND_ROTOR_WIND_DOWN,
; 1014 : 				SOUND_SAMPLE_INDEX_INTERIOR_HIND_ROTOR_TURBINE,
; 1015 : 				SOUND_SAMPLE_INDEX_INTERIOR_HIND_ROTOR_SLAP
; 1016 : 			);
; 1017 : 
; 1018 : 			break;

  0028e	e9 71 02 00 00	 jmp	 $LN1@create_hel
$LN12@create_hel:

; 1019 : 		}
; 1020 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH64A_APACHE:
; 1021 : 		{
; 1022 : 			create_specified_helicopter_rotor_sound_effects

  00293	68 99 07 00 00	 push	 1945			; 00000799H
  00298	68 9a 07 00 00	 push	 1946			; 0000079aH
  0029d	6a 03		 push	 3
  0029f	6a 02		 push	 2
  002a1	6a 01		 push	 1
  002a3	6a 02		 push	 2
  002a5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002a8	50		 push	 eax
  002a9	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1023 : 			(
; 1024 : 				en,
; 1025 : 				SOUND_LOCALITY_EXTERIOR,
; 1026 : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR,
; 1027 : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_WIND_UP,
; 1028 : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_WIND_DOWN,
; 1029 : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_TURBINE,
; 1030 : 				SOUND_SAMPLE_INDEX_EXTERIOR_APACHE_ROTOR_SLAP
; 1031 : 			);
; 1032 : 
; 1033 : 			create_specified_helicopter_rotor_sound_effects

  002ae	68 9b 07 00 00	 push	 1947			; 0000079bH
  002b3	68 9c 07 00 00	 push	 1948			; 0000079cH
  002b8	6a 06		 push	 6
  002ba	6a 05		 push	 5
  002bc	6a 04		 push	 4
  002be	6a 01		 push	 1
  002c0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1034 : 			(
; 1035 : 				en,
; 1036 : 				SOUND_LOCALITY_INTERIOR,
; 1037 : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR,
; 1038 : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_WIND_UP,
; 1039 : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_WIND_DOWN,
; 1040 : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_TURBINE,
; 1041 : 				SOUND_SAMPLE_INDEX_INTERIOR_APACHE_ROTOR_SLAP
; 1042 : 			);
; 1043 : 
; 1044 : 			break;

  002c9	e9 36 02 00 00	 jmp	 $LN1@create_hel
$LN13@create_hel:

; 1045 : 		}
; 1046 : 		case ENTITY_SUB_TYPE_AIRCRAFT_KA50_HOKUM:
; 1047 : 		{
; 1048 : 			create_specified_helicopter_rotor_sound_effects

  002ce	68 b0 07 00 00	 push	 1968			; 000007b0H
  002d3	68 b1 07 00 00	 push	 1969			; 000007b1H
  002d8	68 af 07 00 00	 push	 1967			; 000007afH
  002dd	68 0f 08 00 00	 push	 2063			; 0000080fH
  002e2	68 0e 08 00 00	 push	 2062			; 0000080eH
  002e7	6a 02		 push	 2
  002e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002ec	50		 push	 eax
  002ed	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1049 : 			(
; 1050 : 				en,
; 1051 : 				SOUND_LOCALITY_EXTERIOR,
; 1052 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA50_ROTOR,
; 1053 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA50_ROTOR_WIND_UP,
; 1054 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_WIND_DOWN,
; 1055 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_TURBINE,
; 1056 : 				SOUND_SAMPLE_INDEX_EXTERIOR_HOKUM_ROTOR_SLAP
; 1057 : 			);
; 1058 : 
; 1059 : 			create_specified_helicopter_rotor_sound_effects

  002f2	68 b5 07 00 00	 push	 1973			; 000007b5H
  002f7	68 b6 07 00 00	 push	 1974			; 000007b6H
  002fc	68 b4 07 00 00	 push	 1972			; 000007b4H
  00301	68 b3 07 00 00	 push	 1971			; 000007b3H
  00306	68 b2 07 00 00	 push	 1970			; 000007b2H
  0030b	6a 01		 push	 1
  0030d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00310	50		 push	 eax
  00311	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1060 : 			(
; 1061 : 				en,
; 1062 : 				SOUND_LOCALITY_INTERIOR,
; 1063 : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR,
; 1064 : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_WIND_UP,
; 1065 : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_WIND_DOWN,
; 1066 : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_TURBINE,
; 1067 : 				SOUND_SAMPLE_INDEX_INTERIOR_HOKUM_ROTOR_SLAP
; 1068 : 			);
; 1069 : 			break;

  00316	e9 e9 01 00 00	 jmp	 $LN1@create_hel
$LN14@create_hel:

; 1070 : 		}
; 1071 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1T_SEACOBRA:
; 1072 :  		case ENTITY_SUB_TYPE_AIRCRAFT_AH1W_SUPERCOBRA:
; 1073 : 		{
; 1074 : 			create_specified_helicopter_rotor_sound_effects

  0031b	68 ef 07 00 00	 push	 2031			; 000007efH
  00320	68 f0 07 00 00	 push	 2032			; 000007f0H
  00325	68 ee 07 00 00	 push	 2030			; 000007eeH
  0032a	68 ed 07 00 00	 push	 2029			; 000007edH
  0032f	68 ec 07 00 00	 push	 2028			; 000007ecH
  00334	6a 02		 push	 2
  00336	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00339	50		 push	 eax
  0033a	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1075 : 			(
; 1076 : 				en,
; 1077 : 				SOUND_LOCALITY_EXTERIOR,
; 1078 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1T_SEACOBRA_ROTOR,
; 1079 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1T_SEACOBRA_ROTOR_WIND_UP,
; 1080 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1T_SEACOBRA_ROTOR_WIND_DOWN,
; 1081 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1T_SEACOBRA_ROTOR_TURBINE,
; 1082 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1T_SEACOBRA_ROTOR_SLAP
; 1083 : 			);
; 1084 : 
; 1085 : 			create_specified_helicopter_rotor_sound_effects

  0033f	68 f4 07 00 00	 push	 2036			; 000007f4H
  00344	68 f5 07 00 00	 push	 2037			; 000007f5H
  00349	68 f3 07 00 00	 push	 2035			; 000007f3H
  0034e	68 f2 07 00 00	 push	 2034			; 000007f2H
  00353	68 f1 07 00 00	 push	 2033			; 000007f1H
  00358	6a 01		 push	 1
  0035a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1086 : 			(
; 1087 : 				en,
; 1088 : 				SOUND_LOCALITY_INTERIOR,
; 1089 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1T_SEACOBRA_ROTOR,
; 1090 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1T_SEACOBRA_ROTOR_WIND_UP,
; 1091 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1T_SEACOBRA_ROTOR_WIND_DOWN,
; 1092 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1T_SEACOBRA_ROTOR_TURBINE,
; 1093 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1T_SEACOBRA_ROTOR_SLAP
; 1094 : 			);
; 1095 : 		   break;

  00363	e9 9c 01 00 00	 jmp	 $LN1@create_hel
$LN15@create_hel:

; 1096 : 		}
; 1097 : 		case ENTITY_SUB_TYPE_AIRCRAFT_AH1Z_VIPER:
; 1098 : 		{
; 1099 : 			create_specified_helicopter_rotor_sound_effects

  00368	68 fb 07 00 00	 push	 2043			; 000007fbH
  0036d	68 fc 07 00 00	 push	 2044			; 000007fcH
  00372	68 fa 07 00 00	 push	 2042			; 000007faH
  00377	68 f9 07 00 00	 push	 2041			; 000007f9H
  0037c	68 f8 07 00 00	 push	 2040			; 000007f8H
  00381	6a 02		 push	 2
  00383	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00386	50		 push	 eax
  00387	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1100 : 			(
; 1101 : 				en,
; 1102 : 				SOUND_LOCALITY_EXTERIOR,
; 1103 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1Z_VIPER_ROTOR,
; 1104 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1Z_VIPER_ROTOR_WIND_UP,
; 1105 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1Z_VIPER_ROTOR_WIND_DOWN,
; 1106 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1Z_VIPER_ROTOR_TURBINE,
; 1107 : 				SOUND_SAMPLE_INDEX_EXTERIOR_AH1Z_VIPER_ROTOR_SLAP
; 1108 : 			);
; 1109 : 
; 1110 : 			create_specified_helicopter_rotor_sound_effects

  0038c	68 00 08 00 00	 push	 2048			; 00000800H
  00391	68 01 08 00 00	 push	 2049			; 00000801H
  00396	68 ff 07 00 00	 push	 2047			; 000007ffH
  0039b	68 fe 07 00 00	 push	 2046			; 000007feH
  003a0	68 fd 07 00 00	 push	 2045			; 000007fdH
  003a5	6a 01		 push	 1
  003a7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1111 : 			(
; 1112 : 				en,
; 1113 : 				SOUND_LOCALITY_INTERIOR,
; 1114 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1Z_VIPER_ROTOR,
; 1115 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1Z_VIPER_ROTOR_WIND_UP,
; 1116 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1Z_VIPER_ROTOR_WIND_DOWN,
; 1117 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1Z_VIPER_ROTOR_TURBINE,
; 1118 : 				SOUND_SAMPLE_INDEX_INTERIOR_AH1Z_VIPER_ROTOR_SLAP
; 1119 : 			);
; 1120 : 			break;

  003b0	e9 4f 01 00 00	 jmp	 $LN1@create_hel
$LN16@create_hel:

; 1121 : 		}
; 1122 : 		case ENTITY_SUB_TYPE_AIRCRAFT_OH58D_KIOWA_WARRIOR:
; 1123 : 		{
; 1124 : 			create_specified_helicopter_rotor_sound_effects

  003b5	68 05 08 00 00	 push	 2053			; 00000805H
  003ba	68 06 08 00 00	 push	 2054			; 00000806H
  003bf	68 04 08 00 00	 push	 2052			; 00000804H
  003c4	68 03 08 00 00	 push	 2051			; 00000803H
  003c9	68 02 08 00 00	 push	 2050			; 00000802H
  003ce	6a 02		 push	 2
  003d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1125 : 			(
; 1126 : 				en,
; 1127 : 				SOUND_LOCALITY_EXTERIOR,
; 1128 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KIOWA_ROTOR,
; 1129 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KIOWA_ROTOR_WIND_UP,
; 1130 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KIOWA_ROTOR_WIND_DOWN,
; 1131 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KIOWA_ROTOR_TURBINE,
; 1132 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KIOWA_ROTOR_SLAP
; 1133 : 			);
; 1134 : 
; 1135 : 			create_specified_helicopter_rotor_sound_effects

  003d9	68 0a 08 00 00	 push	 2058			; 0000080aH
  003de	68 0b 08 00 00	 push	 2059			; 0000080bH
  003e3	68 09 08 00 00	 push	 2057			; 00000809H
  003e8	68 08 08 00 00	 push	 2056			; 00000808H
  003ed	68 07 08 00 00	 push	 2055			; 00000807H
  003f2	6a 01		 push	 1
  003f4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1136 : 			(
; 1137 : 				en,
; 1138 : 				SOUND_LOCALITY_INTERIOR,
; 1139 : 				SOUND_SAMPLE_INDEX_INTERIOR_KIOWA_ROTOR,
; 1140 : 				SOUND_SAMPLE_INDEX_INTERIOR_KIOWA_ROTOR_WIND_UP,
; 1141 : 				SOUND_SAMPLE_INDEX_INTERIOR_KIOWA_ROTOR_WIND_DOWN,
; 1142 : 				SOUND_SAMPLE_INDEX_INTERIOR_KIOWA_ROTOR_TURBINE,
; 1143 : 				SOUND_SAMPLE_INDEX_INTERIOR_KIOWA_ROTOR_SLAP
; 1144 :           );
; 1145 : 	     break;

  003fd	e9 02 01 00 00	 jmp	 $LN1@create_hel
$LN17@create_hel:

; 1146 : 		}
; 1147 : 	    case  ENTITY_SUB_TYPE_AIRCRAFT_KA29_HELIX_B:
; 1148 : 		{
; 1149 : 			create_specified_helicopter_rotor_sound_effects

  00402	68 1d 08 00 00	 push	 2077			; 0000081dH
  00407	68 1e 08 00 00	 push	 2078			; 0000081eH
  0040c	68 1c 08 00 00	 push	 2076			; 0000081cH
  00411	68 1b 08 00 00	 push	 2075			; 0000081bH
  00416	68 1a 08 00 00	 push	 2074			; 0000081aH
  0041b	6a 02		 push	 2
  0041d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1150 : 			(
; 1151 : 				en,
; 1152 : 				SOUND_LOCALITY_EXTERIOR,
; 1153 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA29_ROTOR,
; 1154 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA29_ROTOR_WIND_UP,
; 1155 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA29_ROTOR_WIND_DOWN,
; 1156 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA29_ROTOR_TURBINE,
; 1157 : 				SOUND_SAMPLE_INDEX_EXTERIOR_KA29_ROTOR_SLAP
; 1158 : 			);
; 1159 : 
; 1160 : 			create_specified_helicopter_rotor_sound_effects

  00426	68 22 08 00 00	 push	 2082			; 00000822H
  0042b	68 23 08 00 00	 push	 2083			; 00000823H
  00430	68 21 08 00 00	 push	 2081			; 00000821H
  00435	68 20 08 00 00	 push	 2080			; 00000820H
  0043a	68 1f 08 00 00	 push	 2079			; 0000081fH
  0043f	6a 01		 push	 1
  00441	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00444	50		 push	 eax
  00445	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1161 : 			(
; 1162 : 				en,
; 1163 : 				SOUND_LOCALITY_INTERIOR,
; 1164 : 				SOUND_SAMPLE_INDEX_INTERIOR_KA29_ROTOR,
; 1165 : 				SOUND_SAMPLE_INDEX_INTERIOR_KA29_ROTOR_WIND_UP,
; 1166 : 				SOUND_SAMPLE_INDEX_INTERIOR_KA29_ROTOR_WIND_DOWN,
; 1167 : 				SOUND_SAMPLE_INDEX_INTERIOR_KA29_ROTOR_TURBINE,
; 1168 : 				SOUND_SAMPLE_INDEX_INTERIOR_KA29_ROTOR_SLAP
; 1169 : 			);
; 1170 : 			break;

  0044a	e9 b5 00 00 00	 jmp	 $LN1@create_hel
$LN18@create_hel:

; 1171 : 		}
; 1172 :         case  ENTITY_SUB_TYPE_AIRCRAFT_CH46E_SEA_KNIGHT:
; 1173 :         case  ENTITY_SUB_TYPE_AIRCRAFT_CH47D_CHINOOK:
; 1174 : 		{
; 1175 : 			create_specified_helicopter_rotor_sound_effects

  0044f	68 29 08 00 00	 push	 2089			; 00000829H
  00454	68 2a 08 00 00	 push	 2090			; 0000082aH
  00459	68 28 08 00 00	 push	 2088			; 00000828H
  0045e	68 27 08 00 00	 push	 2087			; 00000827H
  00463	68 26 08 00 00	 push	 2086			; 00000826H
  00468	6a 02		 push	 2
  0046a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0046d	50		 push	 eax
  0046e	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1176 : 			(
; 1177 : 				en,
; 1178 : 				SOUND_LOCALITY_EXTERIOR,
; 1179 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH46E_ROTOR,
; 1180 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH46E_ROTOR_WIND_UP,
; 1181 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH46E_ROTOR_WIND_DOWN,
; 1182 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH46E_ROTOR_TURBINE,
; 1183 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH46E_ROTOR_SLAP
; 1184 : 			);
; 1185 : 
; 1186 : 			create_specified_helicopter_rotor_sound_effects

  00473	68 2e 08 00 00	 push	 2094			; 0000082eH
  00478	68 2f 08 00 00	 push	 2095			; 0000082fH
  0047d	68 2d 08 00 00	 push	 2093			; 0000082dH
  00482	68 2c 08 00 00	 push	 2092			; 0000082cH
  00487	68 2b 08 00 00	 push	 2091			; 0000082bH
  0048c	6a 01		 push	 1
  0048e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1187 : 			(
; 1188 : 				en,
; 1189 : 				SOUND_LOCALITY_INTERIOR,
; 1190 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH46E_ROTOR,
; 1191 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH46E_ROTOR_WIND_UP,
; 1192 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH46E_ROTOR_WIND_DOWN,
; 1193 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH46E_ROTOR_TURBINE,
; 1194 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH46E_ROTOR_SLAP
; 1195 : 			);
; 1196 : 			break;

  00497	eb 6b		 jmp	 SHORT $LN1@create_hel
$LN19@create_hel:

; 1197 : 		}
; 1198 :        case  ENTITY_SUB_TYPE_AIRCRAFT_CH3_JOLLY_GREEN_GIANT:
; 1199 : 		{
; 1200 : 			create_specified_helicopter_rotor_sound_effects

  00499	68 35 08 00 00	 push	 2101			; 00000835H
  0049e	68 36 08 00 00	 push	 2102			; 00000836H
  004a3	68 34 08 00 00	 push	 2100			; 00000834H
  004a8	68 33 08 00 00	 push	 2099			; 00000833H
  004ad	68 32 08 00 00	 push	 2098			; 00000832H
  004b2	6a 02		 push	 2
  004b4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004b7	50		 push	 eax
  004b8	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1201 : 			(
; 1202 : 				en,
; 1203 : 				SOUND_LOCALITY_EXTERIOR,
; 1204 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH3_ROTOR,
; 1205 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH3_ROTOR_WIND_UP,
; 1206 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH3_ROTOR_WIND_DOWN,
; 1207 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH3_ROTOR_TURBINE,
; 1208 : 				SOUND_SAMPLE_INDEX_EXTERIOR_CH3_ROTOR_SLAP
; 1209 : 			);
; 1210 : 
; 1211 : 			create_specified_helicopter_rotor_sound_effects

  004bd	68 3a 08 00 00	 push	 2106			; 0000083aH
  004c2	68 3b 08 00 00	 push	 2107			; 0000083bH
  004c7	68 39 08 00 00	 push	 2105			; 00000839H
  004cc	68 38 08 00 00	 push	 2104			; 00000838H
  004d1	68 37 08 00 00	 push	 2103			; 00000837H
  004d6	6a 01		 push	 1
  004d8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  004db	50		 push	 eax
  004dc	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects

; 1212 : 			(
; 1213 : 				en,
; 1214 : 				SOUND_LOCALITY_INTERIOR,
; 1215 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH3_ROTOR,
; 1216 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH3_ROTOR_WIND_UP,
; 1217 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH3_ROTOR_WIND_DOWN,
; 1218 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH3_ROTOR_TURBINE,
; 1219 : 				SOUND_SAMPLE_INDEX_INTERIOR_CH3_ROTOR_SLAP
; 1220 : 			);
; 1221 : 			break;

  004e1	eb 21		 jmp	 SHORT $LN1@create_hel
$LN20@create_hel:

; 1222 : 		}
; 1223 : 		//Werewolf: End additional sounds
; 1224 : 
; 1225 : 
; 1226 : 		default:
; 1227 : 		{
; 1228 : 			create_specified_helicopter_rotor_sound_effects

  004e3	6a 00		 push	 0
  004e5	6a 00		 push	 0
  004e7	6a 00		 push	 0
  004e9	6a 00		 push	 0
  004eb	69 45 fc f4 00
	00 00		 imul	 eax, DWORD PTR _sub_type$[ebp], 244
  004f2	8b 88 e8 00 00
	00		 mov	 ecx, DWORD PTR ?aircraft_database@@3PAUAIRCRAFT_DATA@@A[eax+232]
  004f8	51		 push	 ecx
  004f9	6a 00		 push	 0
  004fb	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  004fe	52		 push	 edx
  004ff	e8 00 00 00 00	 call	 ?create_specified_helicopter_rotor_sound_effects@@YGXPAUENTITY@@W4SOUND_LOCALITY_TYPES@@HHHHH@Z ; create_specified_helicopter_rotor_sound_effects
$LN1@create_hel:

; 1229 : 			(
; 1230 : 				en,
; 1231 : 				SOUND_LOCALITY_ALL,
; 1232 : 				aircraft_database [sub_type].continuous_sound_effect_index,
; 1233 : 				SOUND_SAMPLE_INDEX_NONE,
; 1234 : 				SOUND_SAMPLE_INDEX_NONE,
; 1235 : 				SOUND_SAMPLE_INDEX_NONE,
; 1236 : 				SOUND_SAMPLE_INDEX_NONE
; 1237 : 			);
; 1238 : 
; 1239 : 			break;
; 1240 : 		}
; 1241 : 	}
; 1242 : }

  00504	5f		 pop	 edi
  00505	5e		 pop	 esi
  00506	5b		 pop	 ebx
  00507	8b e5		 mov	 esp, ebp
  00509	5d		 pop	 ebp
  0050a	c2 04 00	 ret	 4
  0050d	0f 1f 00	 npad	 3
$LN27@create_hel:
  00510	00 00 00 00	 DD	 $LN6@create_hel
  00514	00 00 00 00	 DD	 $LN8@create_hel
  00518	00 00 00 00	 DD	 $LN7@create_hel
  0051c	00 00 00 00	 DD	 $LN9@create_hel
  00520	00 00 00 00	 DD	 $LN10@create_hel
  00524	00 00 00 00	 DD	 $LN11@create_hel
  00528	00 00 00 00	 DD	 $LN18@create_hel
  0052c	00 00 00 00	 DD	 $LN17@create_hel
  00530	00 00 00 00	 DD	 $LN19@create_hel
  00534	00 00 00 00	 DD	 $LN12@create_hel
  00538	00 00 00 00	 DD	 $LN13@create_hel
  0053c	00 00 00 00	 DD	 $LN16@create_hel
  00540	00 00 00 00	 DD	 $LN14@create_hel
  00544	00 00 00 00	 DD	 $LN15@create_hel
  00548	00 00 00 00	 DD	 $LN20@create_hel
$LN26@create_hel:
  0054c	00		 DB	 0
  0054d	01		 DB	 1
  0054e	02		 DB	 2
  0054f	03		 DB	 3
  00550	04		 DB	 4
  00551	05		 DB	 5
  00552	06		 DB	 6
  00553	07		 DB	 7
  00554	08		 DB	 8
  00555	0e		 DB	 14			; 0000000eH
  00556	06		 DB	 6
  00557	0e		 DB	 14			; 0000000eH
  00558	0e		 DB	 14			; 0000000eH
  00559	0e		 DB	 14			; 0000000eH
  0055a	0e		 DB	 14			; 0000000eH
  0055b	0e		 DB	 14			; 0000000eH
  0055c	0e		 DB	 14			; 0000000eH
  0055d	0e		 DB	 14			; 0000000eH
  0055e	0e		 DB	 14			; 0000000eH
  0055f	0e		 DB	 14			; 0000000eH
  00560	09		 DB	 9
  00561	0a		 DB	 10			; 0000000aH
  00562	0b		 DB	 11			; 0000000bH
  00563	0e		 DB	 14			; 0000000eH
  00564	0c		 DB	 12			; 0000000cH
  00565	0c		 DB	 12			; 0000000cH
  00566	0e		 DB	 14			; 0000000eH
  00567	0e		 DB	 14			; 0000000eH
  00568	0e		 DB	 14			; 0000000eH
  00569	0e		 DB	 14			; 0000000eH
  0056a	0e		 DB	 14			; 0000000eH
  0056b	0d		 DB	 13			; 0000000dH
?create_helicopter_rotor_sound_effects@@YGXPAUENTITY@@@Z ENDP ; create_helicopter_rotor_sound_effects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv200 = -96						; size = 4
tv330 = -92						; size = 4
tv310 = -92						; size = 4
tv285 = -92						; size = 4
tv218 = -92						; size = 4
tv194 = -92						; size = 4
tv171 = -92						; size = 4
tv145 = -92						; size = 4
tv88 = -92						; size = 4
tv322 = -88						; size = 4
tv302 = -88						; size = 4
tv277 = -88						; size = 4
tv210 = -88						; size = 4
tv187 = -88						; size = 4
tv163 = -88						; size = 4
tv137 = -88						; size = 4
tv80 = -88						; size = 4
_log$ = -20						; size = 4
_points$ = -16						; size = 4
_medal$ = -12						; size = 4
_rank$ = -8						; size = 4
_side$ = -4						; size = 4
_en$ = 8						; size = 4
_task$ = 12						; size = 4
?notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z PROC ; notify_gunship_entity_mission_terminated, COMDAT

; 684  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 685  : 	int
; 686  : 		side,
; 687  : 		rank,
; 688  : 		medal,
; 689  : 		points;
; 690  : 
; 691  : 	player_log_type
; 692  : 		*log;
; 693  : 
; 694  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@notify_gun
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@notify_gun:

; 695  : 
; 696  : 	ASSERT (en == get_gunship_entity ());

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00030	74 18		 je	 SHORT $LN5@notify_gun
  00032	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00037	83 c0 0c	 add	 eax, 12			; 0000000cH
  0003a	50		 push	 eax
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@
  00045	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@notify_gun:

; 697  : 
; 698  : 	side = get_local_entity_int_value (en, INT_TYPE_SIDE);

  0004a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0004e	74 0a		 je	 SHORT $LN14@notify_gun
  00050	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00053	8b 08		 mov	 ecx, DWORD PTR [eax]
  00055	89 4d a8	 mov	 DWORD PTR tv80[ebp], ecx
  00058	eb 21		 jmp	 SHORT $LN15@notify_gun
$LN14@notify_gun:
  0005a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00060	83 c2 0e	 add	 edx, 14			; 0000000eH
  00063	52		 push	 edx
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00069	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00074	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv80[ebp], 0
$LN15@notify_gun:
  0007b	b9 01 00 00 00	 mov	 ecx, 1
  00080	85 c9		 test	 ecx, ecx
  00082	74 09		 je	 SHORT $LN16@notify_gun
  00084	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv88[ebp], 187 ; 000000bbH
  0008b	eb 21		 jmp	 SHORT $LN17@notify_gun
$LN16@notify_gun:
  0008d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00093	83 c2 0e	 add	 edx, 14			; 0000000eH
  00096	52		 push	 edx
  00097	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0009c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000a1	50		 push	 eax
  000a2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000a7	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN17@notify_gun:
  000ae	68 bb 00 00 00	 push	 187			; 000000bbH
  000b3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000b6	51		 push	 ecx
  000b7	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv80[ebp], 1116
  000be	8b 45 a4	 mov	 eax, DWORD PTR tv88[ebp]
  000c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000c8	ff d1		 call	 ecx
  000ca	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 699  : 
; 700  : 	ASSERT (task);

  000cd	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  000d1	75 18		 jne	 SHORT $LN6@notify_gun
  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  000d8	83 c0 10	 add	 eax, 16			; 00000010H
  000db	50		 push	 eax
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  000e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@notify_gun:

; 701  : 
; 702  : 	ASSERT (get_local_entity_int_value (task, INT_TYPE_TASK_STATE) == TASK_STATE_COMPLETED);

  000eb	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  000ef	74 0a		 je	 SHORT $LN18@notify_gun
  000f1	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  000f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f6	89 4d a8	 mov	 DWORD PTR tv137[ebp], ecx
  000f9	eb 21		 jmp	 SHORT $LN19@notify_gun
$LN18@notify_gun:
  000fb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00101	83 c2 12	 add	 edx, 18			; 00000012H
  00104	52		 push	 edx
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0010f	50		 push	 eax
  00110	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00115	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv137[ebp], 0
$LN19@notify_gun:
  0011c	b9 01 00 00 00	 mov	 ecx, 1
  00121	85 c9		 test	 ecx, ecx
  00123	74 09		 je	 SHORT $LN20@notify_gun
  00125	c7 45 a4 e3 00
	00 00		 mov	 DWORD PTR tv145[ebp], 227 ; 000000e3H
  0012c	eb 21		 jmp	 SHORT $LN21@notify_gun
$LN20@notify_gun:
  0012e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00134	83 c2 12	 add	 edx, 18			; 00000012H
  00137	52		 push	 edx
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00148	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv145[ebp], 0
$LN21@notify_gun:
  0014f	68 e3 00 00 00	 push	 227			; 000000e3H
  00154	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  00157	51		 push	 ecx
  00158	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv137[ebp], 1116
  0015f	8b 45 a4	 mov	 eax, DWORD PTR tv145[ebp]
  00162	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00169	ff d1		 call	 ecx
  0016b	83 f8 02	 cmp	 eax, 2
  0016e	74 18		 je	 SHORT $LN7@notify_gun
  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00175	83 c0 12	 add	 eax, 18			; 00000012H
  00178	50		 push	 eax
  00179	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017e	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@FJPBJPH@get_local_entity_int_value?5?$CItas@
  00183	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@notify_gun:

; 703  : 
; 704  : 	log = get_current_player_log ();

  00188	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  0018d	89 45 ec	 mov	 DWORD PTR _log$[ebp], eax

; 705  : 
; 706  : 	medal = MEDAL_TYPE_NONE;

  00190	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _medal$[ebp], 0

; 707  : 
; 708  : 	rank = PILOT_RANK_NONE;

  00197	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _rank$[ebp], 0

; 709  : 
; 710  : 
; 711  : 	points = get_local_entity_int_value (task, INT_TYPE_TASK_SCORE);

  0019e	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  001a2	74 0a		 je	 SHORT $LN22@notify_gun
  001a4	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  001a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a9	89 4d a8	 mov	 DWORD PTR tv163[ebp], ecx
  001ac	eb 21		 jmp	 SHORT $LN23@notify_gun
$LN22@notify_gun:
  001ae	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  001b4	83 c2 1b	 add	 edx, 27			; 0000001bH
  001b7	52		 push	 edx
  001b8	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001c8	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN23@notify_gun:
  001cf	b9 01 00 00 00	 mov	 ecx, 1
  001d4	85 c9		 test	 ecx, ecx
  001d6	74 09		 je	 SHORT $LN24@notify_gun
  001d8	c7 45 a4 e2 00
	00 00		 mov	 DWORD PTR tv171[ebp], 226 ; 000000e2H
  001df	eb 21		 jmp	 SHORT $LN25@notify_gun
$LN24@notify_gun:
  001e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  001e7	83 c2 1b	 add	 edx, 27			; 0000001bH
  001ea	52		 push	 edx
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001fb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv171[ebp], 0
$LN25@notify_gun:
  00202	68 e2 00 00 00	 push	 226			; 000000e2H
  00207	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  0020a	51		 push	 ecx
  0020b	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv163[ebp], 1116
  00212	8b 45 a4	 mov	 eax, DWORD PTR tv171[ebp]
  00215	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0021c	ff d1		 call	 ecx
  0021e	89 45 f0	 mov	 DWORD PTR _points$[ebp], eax

; 712  : 
; 713  : 	// increment player experience points
; 714  : 
; 715  : 	inc_player_log_experience (side, log, points);

  00221	8b 45 f0	 mov	 eax, DWORD PTR _points$[ebp]
  00224	50		 push	 eax
  00225	8b 4d ec	 mov	 ecx, DWORD PTR _log$[ebp]
  00228	51		 push	 ecx
  00229	8b 55 fc	 mov	 edx, DWORD PTR _side$[ebp]
  0022c	52		 push	 edx
  0022d	e8 00 00 00 00	 call	 ?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; inc_player_log_experience

; 716  : 
; 717  : 	// increment number of missions flown
; 718  : 
; 719  : 	inc_player_log_missions_flown (side, log);

  00232	8b 45 ec	 mov	 eax, DWORD PTR _log$[ebp]
  00235	50		 push	 eax
  00236	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  00239	51		 push	 ecx
  0023a	e8 00 00 00 00	 call	 ?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_missions_flown

; 720  : 
; 721  : 	switch (get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED))

  0023f	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  00243	74 0a		 je	 SHORT $LN26@notify_gun
  00245	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  00248	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024a	89 4d a8	 mov	 DWORD PTR tv187[ebp], ecx
  0024d	eb 1d		 jmp	 SHORT $LN27@notify_gun
$LN26@notify_gun:
  0024f	68 d1 02 00 00	 push	 721			; 000002d1H
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00259	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0025f	52		 push	 edx
  00260	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00265	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv187[ebp], 0
$LN27@notify_gun:
  0026c	b8 01 00 00 00	 mov	 eax, 1
  00271	85 c0		 test	 eax, eax
  00273	74 09		 je	 SHORT $LN28@notify_gun
  00275	c7 45 a4 d9 00
	00 00		 mov	 DWORD PTR tv194[ebp], 217 ; 000000d9H
  0027c	eb 1d		 jmp	 SHORT $LN29@notify_gun
$LN28@notify_gun:
  0027e	68 d1 02 00 00	 push	 721			; 000002d1H
  00283	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00288	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0028e	51		 push	 ecx
  0028f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00294	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN29@notify_gun:
  0029b	68 d9 00 00 00	 push	 217			; 000000d9H
  002a0	8b 55 0c	 mov	 edx, DWORD PTR _task$[ebp]
  002a3	52		 push	 edx
  002a4	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv187[ebp], 1116
  002ab	8b 4d a4	 mov	 ecx, DWORD PTR tv194[ebp]
  002ae	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002b5	ff d2		 call	 edx
  002b7	89 45 a0	 mov	 DWORD PTR tv200[ebp], eax
  002ba	83 7d a0 01	 cmp	 DWORD PTR tv200[ebp], 1
  002be	0f 84 96 01 00
	00		 je	 $LN11@notify_gun
  002c4	83 7d a0 02	 cmp	 DWORD PTR tv200[ebp], 2
  002c8	0f 84 3c 01 00
	00		 je	 $LN10@notify_gun
  002ce	83 7d a0 03	 cmp	 DWORD PTR tv200[ebp], 3
  002d2	74 05		 je	 SHORT $LN8@notify_gun
  002d4	e9 bf 01 00 00	 jmp	 $LN12@notify_gun
$LN8@notify_gun:

; 722  : 	{
; 723  : 
; 724  : 		case TASK_COMPLETED_SUCCESS:
; 725  : 		{
; 726  : 
; 727  : 			//
; 728  : 			// SUCCESSFUL MISSION
; 729  : 			//
; 730  : 
; 731  : 			debug_filtered_log ("HELICOP: Awarded %d Points to player for %s %d", points, get_local_entity_string (task, STRING_TYPE_FULL_NAME), get_local_entity_index (task));

  002d9	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  002dd	74 0a		 je	 SHORT $LN30@notify_gun
  002df	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  002e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e4	89 4d a8	 mov	 DWORD PTR tv210[ebp], ecx
  002e7	eb 21		 jmp	 SHORT $LN31@notify_gun
$LN30@notify_gun:
  002e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  002ef	83 c2 2f	 add	 edx, 47			; 0000002fH
  002f2	52		 push	 edx
  002f3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002fd	50		 push	 eax
  002fe	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00303	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv210[ebp], 0
$LN31@notify_gun:
  0030a	b9 01 00 00 00	 mov	 ecx, 1
  0030f	85 c9		 test	 ecx, ecx
  00311	74 09		 je	 SHORT $LN32@notify_gun
  00313	c7 45 a4 03 00
	00 00		 mov	 DWORD PTR tv218[ebp], 3
  0031a	eb 21		 jmp	 SHORT $LN33@notify_gun
$LN32@notify_gun:
  0031c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00322	83 c2 2f	 add	 edx, 47			; 0000002fH
  00325	52		 push	 edx
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0032b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_string_type_message@@3PBDB ; overload_invalid_string_type_message
  00330	50		 push	 eax
  00331	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00336	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv218[ebp], 0
$LN33@notify_gun:
  0033d	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  00340	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00346	c1 f9 04	 sar	 ecx, 4
  00349	51		 push	 ecx
  0034a	6a 03		 push	 3
  0034c	8b 55 0c	 mov	 edx, DWORD PTR _task$[ebp]
  0034f	52		 push	 edx
  00350	6b 45 a8 34	 imul	 eax, DWORD PTR tv210[ebp], 52
  00354	8b 4d a4	 mov	 ecx, DWORD PTR tv218[ebp]
  00357	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_string@@3PAY0N@P6GPBDPAUENTITY@@W4STRING_TYPES@@@ZA[eax+ecx*4]
  0035e	ff d2		 call	 edx
  00360	50		 push	 eax
  00361	8b 45 f0	 mov	 eax, DWORD PTR _points$[ebp]
  00364	50		 push	 eax
  00365	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FMIMJLKG@HELICOP?3?5Awarded?5?$CFd?5Points?5to?5p@
  0036a	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  0036f	83 c4 10	 add	 esp, 16			; 00000010H

; 732  : 
; 733  : 			if (points > 0)

  00372	83 7d f0 00	 cmp	 DWORD PTR _points$[ebp], 0
  00376	7e 28		 jle	 SHORT $LN9@notify_gun

; 734  : 			{
; 735  : 
; 736  : 				//
; 737  : 				// AWARD VALOUR MEDALS
; 738  : 				//
; 739  : 
; 740  : 				medal |= 1 << award_valour_medal (side, points);

  00378	8b 45 f0	 mov	 eax, DWORD PTR _points$[ebp]
  0037b	50		 push	 eax
  0037c	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  0037f	51		 push	 ecx
  00380	e8 00 00 00 00	 call	 ?award_valour_medal@@YGHHH@Z ; award_valour_medal
  00385	ba 01 00 00 00	 mov	 edx, 1
  0038a	8b c8		 mov	 ecx, eax
  0038c	d3 e2		 shl	 edx, cl
  0038e	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  00391	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 741  : 
; 742  : 				//
; 743  : 				// AWARD PROMOTION
; 744  : 				//
; 745  : 
; 746  : 				rank = award_player_rank (side);

  00394	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00397	50		 push	 eax
  00398	e8 00 00 00 00	 call	 ?award_player_rank@@YGHH@Z ; award_player_rank
  0039d	89 45 f8	 mov	 DWORD PTR _rank$[ebp], eax
$LN9@notify_gun:

; 747  : 			}
; 748  : 
; 749  : 			//
; 750  : 			// AWARD AIR MEDAL (no. of successful missions in a row)
; 751  : 			//
; 752  : 
; 753  : 			medal |= 1 << award_air_medal_medal (side, TRUE);

  003a0	6a 01		 push	 1
  003a2	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  003a5	50		 push	 eax
  003a6	e8 00 00 00 00	 call	 ?award_air_medal_medal@@YGHHH@Z ; award_air_medal_medal
  003ab	ba 01 00 00 00	 mov	 edx, 1
  003b0	8b c8		 mov	 ecx, eax
  003b2	d3 e2		 shl	 edx, cl
  003b4	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  003b7	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 754  : 
; 755  : 			//
; 756  : 			// AWARD FLIGHT TIME MEDALS
; 757  : 			//
; 758  : 
; 759  : 			medal |= 1 << award_aviator_wings (side);

  003ba	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  003bd	50		 push	 eax
  003be	e8 00 00 00 00	 call	 ?award_aviator_wings@@YGHH@Z ; award_aviator_wings
  003c3	ba 01 00 00 00	 mov	 edx, 1
  003c8	8b c8		 mov	 ecx, eax
  003ca	d3 e2		 shl	 edx, cl
  003cc	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  003cf	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 760  : 
; 761  : 			//
; 762  : 			// AWARD PURPLE HEART
; 763  : 			//
; 764  : 
; 765  : 			medal |= 1 << award_purple_heart_medal (side);

  003d2	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ?award_purple_heart_medal@@YGHH@Z ; award_purple_heart_medal
  003db	ba 01 00 00 00	 mov	 edx, 1
  003e0	8b c8		 mov	 ecx, eax
  003e2	d3 e2		 shl	 edx, cl
  003e4	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  003e7	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 766  : 
; 767  : 			//
; 768  : 			// Update Success Rate
; 769  : 			//
; 770  : 
; 771  : 			update_player_log_mission_success_rate (side, log, 1.0);

  003ea	51		 push	 ecx
  003eb	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  003f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f8	8b 45 ec	 mov	 eax, DWORD PTR _log$[ebp]
  003fb	50		 push	 eax
  003fc	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  003ff	51		 push	 ecx
  00400	e8 00 00 00 00	 call	 ?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; update_player_log_mission_success_rate

; 772  : 
; 773  : 			break;

  00405	e9 22 01 00 00	 jmp	 $LN2@notify_gun
$LN10@notify_gun:

; 774  : 		}
; 775  : 
; 776  : 		case TASK_COMPLETED_PARTIAL:
; 777  : 		{
; 778  : 
; 779  : 			//
; 780  : 			// AWARD FLIGHT TIME MEDALS
; 781  : 			//
; 782  : 
; 783  : 			medal |= 1 << award_aviator_wings (side);

  0040a	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  0040d	50		 push	 eax
  0040e	e8 00 00 00 00	 call	 ?award_aviator_wings@@YGHH@Z ; award_aviator_wings
  00413	ba 01 00 00 00	 mov	 edx, 1
  00418	8b c8		 mov	 ecx, eax
  0041a	d3 e2		 shl	 edx, cl
  0041c	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  0041f	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 784  : 
; 785  : 			//
; 786  : 			// AWARD PURPLE HEART
; 787  : 			//
; 788  : 
; 789  : 			medal |= 1 << award_purple_heart_medal (side);

  00422	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00425	50		 push	 eax
  00426	e8 00 00 00 00	 call	 ?award_purple_heart_medal@@YGHH@Z ; award_purple_heart_medal
  0042b	ba 01 00 00 00	 mov	 edx, 1
  00430	8b c8		 mov	 ecx, eax
  00432	d3 e2		 shl	 edx, cl
  00434	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  00437	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 790  : 
; 791  : 			//
; 792  : 			// Update Success Rate
; 793  : 			//
; 794  : 
; 795  : 			update_player_log_mission_success_rate (side, log, 0.5);

  0043a	51		 push	 ecx
  0043b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f000000
  00443	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00448	8b 45 ec	 mov	 eax, DWORD PTR _log$[ebp]
  0044b	50		 push	 eax
  0044c	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  0044f	51		 push	 ecx
  00450	e8 00 00 00 00	 call	 ?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; update_player_log_mission_success_rate

; 796  : 
; 797  : 			break;

  00455	e9 d2 00 00 00	 jmp	 $LN2@notify_gun
$LN11@notify_gun:

; 798  : 		}
; 799  : 
; 800  : 		case TASK_COMPLETED_FAILURE:
; 801  : 		{
; 802  : 
; 803  : 			//
; 804  : 			// AWARD FLIGHT TIME MEDALS
; 805  : 			//
; 806  : 
; 807  : 			medal |= 1 << award_aviator_wings (side);

  0045a	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  0045d	50		 push	 eax
  0045e	e8 00 00 00 00	 call	 ?award_aviator_wings@@YGHH@Z ; award_aviator_wings
  00463	ba 01 00 00 00	 mov	 edx, 1
  00468	8b c8		 mov	 ecx, eax
  0046a	d3 e2		 shl	 edx, cl
  0046c	0b 55 f4	 or	 edx, DWORD PTR _medal$[ebp]
  0046f	89 55 f4	 mov	 DWORD PTR _medal$[ebp], edx

; 808  : 
; 809  : 			// reset air_medal counter
; 810  : 			award_air_medal_medal (side, FALSE);

  00472	6a 00		 push	 0
  00474	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00477	50		 push	 eax
  00478	e8 00 00 00 00	 call	 ?award_air_medal_medal@@YGHHH@Z ; award_air_medal_medal

; 811  : 
; 812  : 			//
; 813  : 			// Update Success Rate
; 814  : 			//
; 815  : 
; 816  : 			update_player_log_mission_success_rate (side, log, 0.0);

  0047d	51		 push	 ecx
  0047e	0f 57 c0	 xorps	 xmm0, xmm0
  00481	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00486	8b 45 ec	 mov	 eax, DWORD PTR _log$[ebp]
  00489	50		 push	 eax
  0048a	8b 4d fc	 mov	 ecx, DWORD PTR _side$[ebp]
  0048d	51		 push	 ecx
  0048e	e8 00 00 00 00	 call	 ?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; update_player_log_mission_success_rate

; 817  : 
; 818  : 			break;

  00493	e9 94 00 00 00	 jmp	 $LN2@notify_gun
$LN12@notify_gun:

; 819  : 		}
; 820  : 
; 821  : 		default:
; 822  : 		{
; 823  : 
; 824  : 			debug_fatal ("HELICOP: unknown task completed %d", get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED));

  00498	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  0049c	74 0a		 je	 SHORT $LN34@notify_gun
  0049e	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  004a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a3	89 4d a8	 mov	 DWORD PTR tv277[ebp], ecx
  004a6	eb 24		 jmp	 SHORT $LN35@notify_gun
$LN34@notify_gun:
  004a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  004ae	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  004b4	52		 push	 edx
  004b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  004ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  004bf	50		 push	 eax
  004c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004c5	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv277[ebp], 0
$LN35@notify_gun:
  004cc	b9 01 00 00 00	 mov	 ecx, 1
  004d1	85 c9		 test	 ecx, ecx
  004d3	74 09		 je	 SHORT $LN36@notify_gun
  004d5	c7 45 a4 d9 00
	00 00		 mov	 DWORD PTR tv285[ebp], 217 ; 000000d9H
  004dc	eb 24		 jmp	 SHORT $LN37@notify_gun
$LN36@notify_gun:
  004de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  004e4	81 c2 8c 00 00
	00		 add	 edx, 140		; 0000008cH
  004ea	52		 push	 edx
  004eb	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  004f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  004f5	50		 push	 eax
  004f6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  004fb	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv285[ebp], 0
$LN37@notify_gun:
  00502	68 d9 00 00 00	 push	 217			; 000000d9H
  00507	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  0050a	51		 push	 ecx
  0050b	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv277[ebp], 1116
  00512	8b 45 a4	 mov	 eax, DWORD PTR tv285[ebp]
  00515	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  0051c	ff d1		 call	 ecx
  0051e	50		 push	 eax
  0051f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@IMCJODJH@HELICOP?3?5unknown?5task?5completed@
  00524	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00529	83 c4 08	 add	 esp, 8
$LN2@notify_gun:

; 825  : 		}
; 826  : 	}
; 827  : 
; 828  : 	//
; 829  : 	// store medals awarding in task
; 830  : 	//
; 831  : 
; 832  : 	set_local_entity_int_value (task, INT_TYPE_AWARDED_MEDALS, medal);

  0052c	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  00530	74 0a		 je	 SHORT $LN38@notify_gun
  00532	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  00535	8b 08		 mov	 ecx, DWORD PTR [eax]
  00537	89 4d a8	 mov	 DWORD PTR tv302[ebp], ecx
  0053a	eb 24		 jmp	 SHORT $LN39@notify_gun
$LN38@notify_gun:
  0053c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00542	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  00548	52		 push	 edx
  00549	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0054e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00553	50		 push	 eax
  00554	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00559	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv302[ebp], 0
$LN39@notify_gun:
  00560	b9 01 00 00 00	 mov	 ecx, 1
  00565	85 c9		 test	 ecx, ecx
  00567	74 09		 je	 SHORT $LN40@notify_gun
  00569	c7 45 a4 0d 00
	00 00		 mov	 DWORD PTR tv310[ebp], 13 ; 0000000dH
  00570	eb 24		 jmp	 SHORT $LN41@notify_gun
$LN40@notify_gun:
  00572	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  00578	81 c2 94 00 00
	00		 add	 edx, 148		; 00000094H
  0057e	52		 push	 edx
  0057f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00584	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00589	50		 push	 eax
  0058a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0058f	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv310[ebp], 0
$LN41@notify_gun:
  00596	8b 4d f4	 mov	 ecx, DWORD PTR _medal$[ebp]
  00599	51		 push	 ecx
  0059a	6a 0d		 push	 13			; 0000000dH
  0059c	8b 55 0c	 mov	 edx, DWORD PTR _task$[ebp]
  0059f	52		 push	 edx
  005a0	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv302[ebp], 1116
  005a7	8b 4d a4	 mov	 ecx, DWORD PTR tv310[ebp]
  005aa	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  005b1	ff d2		 call	 edx

; 833  : 
; 834  : 	set_local_entity_int_value (task, INT_TYPE_AWARDED_PROMOTION, rank);

  005b3	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  005b7	74 0a		 je	 SHORT $LN42@notify_gun
  005b9	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  005bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  005be	89 4d a8	 mov	 DWORD PTR tv322[ebp], ecx
  005c1	eb 24		 jmp	 SHORT $LN43@notify_gun
$LN42@notify_gun:
  005c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  005c9	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  005cf	52		 push	 edx
  005d0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  005d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  005da	50		 push	 eax
  005db	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  005e0	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv322[ebp], 0
$LN43@notify_gun:
  005e7	b9 01 00 00 00	 mov	 ecx, 1
  005ec	85 c9		 test	 ecx, ecx
  005ee	74 09		 je	 SHORT $LN44@notify_gun
  005f0	c7 45 a4 0e 00
	00 00		 mov	 DWORD PTR tv330[ebp], 14 ; 0000000eH
  005f7	eb 24		 jmp	 SHORT $LN45@notify_gun
$LN44@notify_gun:
  005f9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z@4JA
  005ff	81 c2 96 00 00
	00		 add	 edx, 150		; 00000096H
  00605	52		 push	 edx
  00606	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0060b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00610	50		 push	 eax
  00611	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00616	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv330[ebp], 0
$LN45@notify_gun:
  0061d	8b 4d f8	 mov	 ecx, DWORD PTR _rank$[ebp]
  00620	51		 push	 ecx
  00621	6a 0e		 push	 14			; 0000000eH
  00623	8b 55 0c	 mov	 edx, DWORD PTR _task$[ebp]
  00626	52		 push	 edx
  00627	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv322[ebp], 1116
  0062e	8b 4d a4	 mov	 ecx, DWORD PTR tv330[ebp]
  00631	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[eax+ecx*4]
  00638	ff d2		 call	 edx

; 835  : 
; 836  : 	//
; 837  : 	// CAMPAIGN :- Set-up debriefing page
; 838  : 	//
; 839  : 
; 840  : 	autoselect_debriefing_page (task, TRUE);

  0063a	6a 01		 push	 1
  0063c	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  0063f	50		 push	 eax
  00640	e8 00 00 00 00	 call	 ?autoselect_debriefing_page@@YGXPAUENTITY@@H@Z ; autoselect_debriefing_page

; 841  : 
; 842  : 	mission_logged = TRUE;

  00645	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?mission_logged@@3HA, 1

; 843  : }

  0064f	5f		 pop	 edi
  00650	5e		 pop	 esi
  00651	5b		 pop	 ebx
  00652	8b e5		 mov	 esp, ebp
  00654	5d		 pop	 ebp
  00655	c2 08 00	 ret	 8
?notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z ENDP ; notify_gunship_entity_mission_terminated
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z
_TEXT	SEGMENT
tv178 = -200						; size = 4
tv150 = -200						; size = 4
tv93 = -200						; size = 4
tv170 = -196						; size = 4
tv142 = -196						; size = 4
tv85 = -196						; size = 4
_s$ = -128						; size = 128
_en$ = 8						; size = 4
_task$ = 12						; size = 4
?notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z PROC ; notify_gunship_entity_mission_completed, COMDAT

; 641  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c8 00 00
	00		 sub	 esp, 200		; 000000c8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 642  : 	char
; 643  : 		s [128];
; 644  : 
; 645  : 	ASSERT (en);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@notify_gun
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00017	83 c0 04	 add	 eax, 4
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@notify_gun:

; 646  : 
; 647  : 	ASSERT (en == get_gunship_entity ());

  0002a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00033	74 18		 je	 SHORT $LN3@notify_gun
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  0003a	83 c0 06	 add	 eax, 6
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PIBAHDMH@en?5?$DN?$DN?5get_gunship_entity?5?$CI?$CJ@
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@notify_gun:

; 648  : 
; 649  : 	ASSERT (task);

  0004d	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  00051	75 18		 jne	 SHORT $LN4@notify_gun
  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00058	83 c0 08	 add	 eax, 8
  0005b	50		 push	 eax
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_04GGKLLKOO@task@
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@notify_gun:

; 650  : 
; 651  : 	ASSERT (get_local_entity_int_value (task, INT_TYPE_TASK_STATE) == TASK_STATE_COMPLETED);

  0006b	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  0006f	74 0d		 je	 SHORT $LN9@notify_gun
  00071	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  00074	8b 08		 mov	 ecx, DWORD PTR [eax]
  00076	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv85[ebp], ecx
  0007c	eb 24		 jmp	 SHORT $LN10@notify_gun
$LN9@notify_gun:
  0007e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00084	83 c2 0a	 add	 edx, 10			; 0000000aH
  00087	52		 push	 edx
  00088	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0008d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00098	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv85[ebp], 0
$LN10@notify_gun:
  000a2	b9 01 00 00 00	 mov	 ecx, 1
  000a7	85 c9		 test	 ecx, ecx
  000a9	74 0c		 je	 SHORT $LN11@notify_gun
  000ab	c7 85 38 ff ff
	ff e3 00 00 00	 mov	 DWORD PTR tv93[ebp], 227 ; 000000e3H
  000b5	eb 24		 jmp	 SHORT $LN12@notify_gun
$LN11@notify_gun:
  000b7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  000bd	83 c2 0a	 add	 edx, 10			; 0000000aH
  000c0	52		 push	 edx
  000c1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d1	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv93[ebp], 0
$LN12@notify_gun:
  000db	68 e3 00 00 00	 push	 227			; 000000e3H
  000e0	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  000e3	51		 push	 ecx
  000e4	69 95 3c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv85[ebp], 1116
  000ee	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv93[ebp]
  000f4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  000fb	ff d1		 call	 ecx
  000fd	83 f8 02	 cmp	 eax, 2
  00100	74 18		 je	 SHORT $LN5@notify_gun
  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00107	83 c0 0a	 add	 eax, 10			; 0000000aH
  0010a	50		 push	 eax
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00110	68 00 00 00 00	 push	 OFFSET ??_C@_0EP@FJPBJPH@get_local_entity_int_value?5?$CItas@
  00115	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@notify_gun:

; 652  : 
; 653  : 	ASSERT (get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED) != TASK_INCOMPLETE);

  0011a	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  0011e	74 0d		 je	 SHORT $LN13@notify_gun
  00120	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  00123	8b 08		 mov	 ecx, DWORD PTR [eax]
  00125	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv142[ebp], ecx
  0012b	eb 24		 jmp	 SHORT $LN14@notify_gun
$LN13@notify_gun:
  0012d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00133	83 c2 0c	 add	 edx, 12			; 0000000cH
  00136	52		 push	 edx
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00147	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
$LN14@notify_gun:
  00151	b9 01 00 00 00	 mov	 ecx, 1
  00156	85 c9		 test	 ecx, ecx
  00158	74 0c		 je	 SHORT $LN15@notify_gun
  0015a	c7 85 38 ff ff
	ff d9 00 00 00	 mov	 DWORD PTR tv150[ebp], 217 ; 000000d9H
  00164	eb 24		 jmp	 SHORT $LN16@notify_gun
$LN15@notify_gun:
  00166	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  0016c	83 c2 0c	 add	 edx, 12			; 0000000cH
  0016f	52		 push	 edx
  00170	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0017a	50		 push	 eax
  0017b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00180	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
$LN16@notify_gun:
  0018a	68 d9 00 00 00	 push	 217			; 000000d9H
  0018f	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  00192	51		 push	 ecx
  00193	69 95 3c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv142[ebp], 1116
  0019d	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  001a3	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001aa	ff d1		 call	 ecx
  001ac	85 c0		 test	 eax, eax
  001ae	75 18		 jne	 SHORT $LN6@notify_gun
  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  001b5	83 c0 0c	 add	 eax, 12			; 0000000cH
  001b8	50		 push	 eax
  001b9	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001be	68 00 00 00 00	 push	 OFFSET ??_C@_0EO@KIDCCOBE@get_local_entity_int_value?5?$CItas@
  001c3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@notify_gun:

; 654  : 
; 655  : 	//
; 656  : 	// CAMPAIGN :- Set-up debriefing page
; 657  : 	//
; 658  : 
; 659  : 	autoselect_debriefing_page (task, FALSE);

  001c8	6a 00		 push	 0
  001ca	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?autoselect_debriefing_page@@YGXPAUENTITY@@H@Z ; autoselect_debriefing_page

; 660  : 
; 661  : 	//
; 662  : 	// Show Mission Complete Message
; 663  : 	//
; 664  : 
; 665  : 	sprintf (s, "Mission %s", task_status_names [get_local_entity_int_value (task, INT_TYPE_TASK_COMPLETED)]);

  001d3	83 7d 0c 00	 cmp	 DWORD PTR _task$[ebp], 0
  001d7	74 0d		 je	 SHORT $LN17@notify_gun
  001d9	8b 45 0c	 mov	 eax, DWORD PTR _task$[ebp]
  001dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  001de	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv170[ebp], ecx
  001e4	eb 24		 jmp	 SHORT $LN18@notify_gun
$LN17@notify_gun:
  001e6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  001ec	83 c2 18	 add	 edx, 24			; 00000018H
  001ef	52		 push	 edx
  001f0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00200	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv170[ebp], 0
$LN18@notify_gun:
  0020a	b9 01 00 00 00	 mov	 ecx, 1
  0020f	85 c9		 test	 ecx, ecx
  00211	74 0c		 je	 SHORT $LN19@notify_gun
  00213	c7 85 38 ff ff
	ff d9 00 00 00	 mov	 DWORD PTR tv178[ebp], 217 ; 000000d9H
  0021d	eb 24		 jmp	 SHORT $LN20@notify_gun
$LN19@notify_gun:
  0021f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z@4JA
  00225	83 c2 18	 add	 edx, 24			; 00000018H
  00228	52		 push	 edx
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0022e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00239	c7 85 38 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv178[ebp], 0
$LN20@notify_gun:
  00243	68 d9 00 00 00	 push	 217			; 000000d9H
  00248	8b 4d 0c	 mov	 ecx, DWORD PTR _task$[ebp]
  0024b	51		 push	 ecx
  0024c	69 95 3c ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv170[ebp], 1116
  00256	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv178[ebp]
  0025c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00263	ff d1		 call	 ecx
  00265	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?task_status_names@@3PAPBDA[eax*4]
  0026c	52		 push	 edx
  0026d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BEIPCALH@Mission?5?$CFs@
  00272	8d 45 80	 lea	 eax, DWORD PTR _s$[ebp]
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 _sprintf
  0027b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 666  : 
; 667  : 	set_status_message (get_trans (s), STATUS_MESSAGE_TYPE_ALERT);

  0027e	6a 01		 push	 1
  00280	8d 45 80	 lea	 eax, DWORD PTR _s$[ebp]
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?set_status_message@@YGXPBDW4STATUS_MESSAGE_TYPES@@@Z ; set_status_message

; 668  : 
; 669  : 	//
; 670  : 	// Play Mission Complete CD track
; 671  : 	//
; 672  : 
; 673  : 	if (!command_line_no_mission_complete_music)

  0028f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_no_mission_complete_music@@3HA, 0 ; command_line_no_mission_complete_music
  00296	75 07		 jne	 SHORT $LN1@notify_gun

; 674  : 	{
; 675  : 		play_cd_music (CD_MUSIC_TYPE_MISSION_COMPLETE);

  00298	6a 02		 push	 2
  0029a	e8 00 00 00 00	 call	 ?play_cd_music@@YGXW4CD_MUSIC_TYPES@@@Z ; play_cd_music
$LN1@notify_gun:

; 676  : 	}
; 677  : }

  0029f	5f		 pop	 edi
  002a0	5e		 pop	 esi
  002a1	5b		 pop	 ebx
  002a2	8b e5		 mov	 esp, ebp
  002a4	5d		 pop	 ebp
  002a5	c2 08 00	 ret	 8
?notify_gunship_entity_mission_completed@@YGXPAUENTITY@@0@Z ENDP ; notify_gunship_entity_mission_completed
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z
_TEXT	SEGMENT
_en$ = 8						; size = 4
_pos$ = 12						; size = 4
_operational_state$ = 16				; size = 4
?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z PROC ; restore_helicopter_entity, COMDAT

; 628  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 629  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@restore_he
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@restore_he:

; 630  : 
; 631  : 	restore_helicopter_main_rotors (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 ?restore_helicopter_main_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_main_rotors

; 632  : 
; 633  : 	restore_helicopter_tail_rotors (en);

  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?restore_helicopter_tail_rotors@@YGHPAUENTITY@@@Z ; restore_helicopter_tail_rotors

; 634  : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c2 0c 00	 ret	 12			; 0000000cH
?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z ENDP ; restore_helicopter_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv185 = -92						; size = 4
tv164 = -92						; size = 4
tv177 = -88						; size = 4
tv157 = -88						; size = 4
tv202 = -84						; size = 4
tv146 = -84						; size = 4
tv76 = -84						; size = 4
tv194 = -80						; size = 4
tv139 = -80						; size = 4
tv128 = -80						; size = 4
tv69 = -80						; size = 4
_task$ = -12						; size = 4
_pilot$ = -8						; size = 4
_en$ = -4						; size = 4
_ev$ = 8						; size = 4
?set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z PROC ; set_gunship_entity_to_external_view_entity, COMDAT

; 569  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 570  : 	#if !DEMO_VERSION
; 571  : 
; 572  : 	entity
; 573  : 		*en,
; 574  : 		*pilot,
; 575  : 		*task;
; 576  : 
; 577  : 	pilot = get_pilot_entity ();

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0000e	89 45 f8	 mov	 DWORD PTR _pilot$[ebp], eax

; 578  : 
; 579  : 	if (!get_local_entity_int_value (get_session_entity (), INT_TYPE_SESSION_COMPLETE))

  00011	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00018	74 0c		 je	 SHORT $LN10@set_gunshi
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	89 4d b0	 mov	 DWORD PTR tv69[ebp], ecx
  00024	eb 1d		 jmp	 SHORT $LN11@set_gunshi
$LN10@set_gunshi:
  00026	68 43 02 00 00	 push	 579			; 00000243H
  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00030	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0003c	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN11@set_gunshi:
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	85 c0		 test	 eax, eax
  0004a	74 09		 je	 SHORT $LN12@set_gunshi
  0004c	c7 45 ac ba 00
	00 00		 mov	 DWORD PTR tv76[ebp], 186 ; 000000baH
  00053	eb 1d		 jmp	 SHORT $LN13@set_gunshi
$LN12@set_gunshi:
  00055	68 43 02 00 00	 push	 579			; 00000243H
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0006b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN13@set_gunshi:
  00072	68 ba 00 00 00	 push	 186			; 000000baH
  00077	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0007d	52		 push	 edx
  0007e	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00085	8b 4d ac	 mov	 ecx, DWORD PTR tv76[ebp]
  00088	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0008f	ff d2		 call	 edx
  00091	85 c0		 test	 eax, eax
  00093	0f 85 84 02 00
	00		 jne	 $LN1@set_gunshi

; 580  : 	{
; 581  : 		en = get_external_view_entity ();

  00099	e8 00 00 00 00	 call	 ?get_external_view_entity@@YGPAUENTITY@@XZ ; get_external_view_entity
  0009e	89 45 fc	 mov	 DWORD PTR _en$[ebp], eax

; 582  : 
; 583  : 		if (en)

  000a1	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000a5	0f 84 72 02 00
	00		 je	 $LN1@set_gunshi

; 584  : 		{
; 585  : 			if (get_local_entity_suitable_for_player (en, get_pilot_entity ()))

  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  000b0	50		 push	 eax
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 ?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z ; get_local_entity_suitable_for_player
  000ba	85 c0		 test	 eax, eax
  000bc	0f 84 5b 02 00
	00		 je	 $LN1@set_gunshi

; 586  : 			{
; 587  : 				task = get_local_entity_primary_task (en);

  000c2	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
  000cb	89 45 f4	 mov	 DWORD PTR _task$[ebp], eax

; 588  : 
; 589  : 				if (task)

  000ce	83 7d f4 00	 cmp	 DWORD PTR _task$[ebp], 0
  000d2	74 3d		 je	 SHORT $LN5@set_gunshi

; 590  : 				{
; 591  : 					//
; 592  : 					// Update Campaign Screen to reflect new gunship/mission
; 593  : 					//
; 594  : 
; 595  : 					set_gunship_entity (NULL);

  000d4	6a 00		 push	 0
  000d6	e8 00 00 00 00	 call	 ?set_gunship_entity@@YGXPAUENTITY@@@Z ; set_gunship_entity

; 596  : 
; 597  : 					set_currently_selected_member (get_local_entity_safe_index (en));

  000db	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  000df	74 11		 je	 SHORT $LN14@set_gunshi
  000e1	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  000e4	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  000ea	c1 f8 04	 sar	 eax, 4
  000ed	89 45 b0	 mov	 DWORD PTR tv128[ebp], eax
  000f0	eb 07		 jmp	 SHORT $LN15@set_gunshi
$LN14@set_gunshi:
  000f2	c7 45 b0 ff ff
	ff ff		 mov	 DWORD PTR tv128[ebp], -1
$LN15@set_gunshi:
  000f9	8b 4d b0	 mov	 ecx, DWORD PTR tv128[ebp]
  000fc	51		 push	 ecx
  000fd	e8 00 00 00 00	 call	 ?set_currently_selected_member@@YGXH@Z ; set_currently_selected_member

; 598  : 
; 599  : 					player_assigned_new_task (en, task);

  00102	8b 45 f4	 mov	 eax, DWORD PTR _task$[ebp]
  00105	50		 push	 eax
  00106	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00109	51		 push	 ecx
  0010a	e8 00 00 00 00	 call	 ?player_assigned_new_task@@YGXPAUENTITY@@0@Z ; player_assigned_new_task

; 600  : 				}
; 601  : 				// Jabberwock 040201 - No tasks needed for Free flight
; 602  : 				else

  0010f	eb 12		 jmp	 SHORT $LN6@set_gunshi
$LN5@set_gunshi:

; 603  : 				{
; 604  : 					if (get_game_type () == GAME_TYPE_FREE_FLIGHT)

  00111	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 1 ; game_type
  00118	75 09		 jne	 SHORT $LN6@set_gunshi

; 605  : 					{
; 606  : 						set_gunship_entity (en);

  0011a	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  0011d	50		 push	 eax
  0011e	e8 00 00 00 00	 call	 ?set_gunship_entity@@YGXPAUENTITY@@@Z ; set_gunship_entity
$LN6@set_gunshi:

; 607  : 					}
; 608  : 				}
; 609  : 
; 610  : 				if (get_local_entity_int_value (pilot, INT_TYPE_SIDE) != get_local_entity_int_value (en, INT_TYPE_SIDE))

  00123	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00127	74 0a		 je	 SHORT $LN16@set_gunshi
  00129	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  0012c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012e	89 4d b0	 mov	 DWORD PTR tv139[ebp], ecx
  00131	eb 1d		 jmp	 SHORT $LN17@set_gunshi
$LN16@set_gunshi:
  00133	68 62 02 00 00	 push	 610			; 00000262H
  00138	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0013d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00143	52		 push	 edx
  00144	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00149	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN17@set_gunshi:
  00150	b8 01 00 00 00	 mov	 eax, 1
  00155	85 c0		 test	 eax, eax
  00157	74 09		 je	 SHORT $LN18@set_gunshi
  00159	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv146[ebp], 187 ; 000000bbH
  00160	eb 1d		 jmp	 SHORT $LN19@set_gunshi
$LN18@set_gunshi:
  00162	68 62 02 00 00	 push	 610			; 00000262H
  00167	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0016c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00172	51		 push	 ecx
  00173	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00178	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN19@set_gunshi:
  0017f	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00183	74 0a		 je	 SHORT $LN20@set_gunshi
  00185	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00188	8b 02		 mov	 eax, DWORD PTR [edx]
  0018a	89 45 a8	 mov	 DWORD PTR tv157[ebp], eax
  0018d	eb 1d		 jmp	 SHORT $LN21@set_gunshi
$LN20@set_gunshi:
  0018f	68 62 02 00 00	 push	 610			; 00000262H
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00199	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019f	51		 push	 ecx
  001a0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a5	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
$LN21@set_gunshi:
  001ac	ba 01 00 00 00	 mov	 edx, 1
  001b1	85 d2		 test	 edx, edx
  001b3	74 09		 je	 SHORT $LN22@set_gunshi
  001b5	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv164[ebp], 187 ; 000000bbH
  001bc	eb 1c		 jmp	 SHORT $LN23@set_gunshi
$LN22@set_gunshi:
  001be	68 62 02 00 00	 push	 610			; 00000262H
  001c3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d3	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv164[ebp], 0
$LN23@set_gunshi:
  001da	68 bb 00 00 00	 push	 187			; 000000bbH
  001df	8b 4d f8	 mov	 ecx, DWORD PTR _pilot$[ebp]
  001e2	51		 push	 ecx
  001e3	69 55 b0 5c 04
	00 00		 imul	 edx, DWORD PTR tv139[ebp], 1116
  001ea	8b 45 ac	 mov	 eax, DWORD PTR tv146[ebp]
  001ed	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f4	ff d1		 call	 ecx
  001f6	8b f0		 mov	 esi, eax
  001f8	68 bb 00 00 00	 push	 187			; 000000bbH
  001fd	8b 55 fc	 mov	 edx, DWORD PTR _en$[ebp]
  00200	52		 push	 edx
  00201	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv157[ebp], 1116
  00208	8b 4d a4	 mov	 ecx, DWORD PTR tv164[ebp]
  0020b	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00212	ff d2		 call	 edx
  00214	3b f0		 cmp	 esi, eax
  00216	0f 84 01 01 00
	00		 je	 $LN1@set_gunshi

; 611  : 				{
; 612  : 					set_local_entity_int_value (en, INT_TYPE_SIDE, get_local_entity_int_value (pilot, INT_TYPE_SIDE));

  0021c	83 7d f8 00	 cmp	 DWORD PTR _pilot$[ebp], 0
  00220	74 0a		 je	 SHORT $LN28@set_gunshi
  00222	8b 45 f8	 mov	 eax, DWORD PTR _pilot$[ebp]
  00225	8b 08		 mov	 ecx, DWORD PTR [eax]
  00227	89 4d b0	 mov	 DWORD PTR tv194[ebp], ecx
  0022a	eb 21		 jmp	 SHORT $LN29@set_gunshi
$LN28@set_gunshi:
  0022c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA
  00232	83 c2 2b	 add	 edx, 43			; 0000002bH
  00235	52		 push	 edx
  00236	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0023b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00240	50		 push	 eax
  00241	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00246	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv194[ebp], 0
$LN29@set_gunshi:
  0024d	b9 01 00 00 00	 mov	 ecx, 1
  00252	85 c9		 test	 ecx, ecx
  00254	74 09		 je	 SHORT $LN30@set_gunshi
  00256	c7 45 ac bb 00
	00 00		 mov	 DWORD PTR tv202[ebp], 187 ; 000000bbH
  0025d	eb 21		 jmp	 SHORT $LN31@set_gunshi
$LN30@set_gunshi:
  0025f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA
  00265	83 c2 2b	 add	 edx, 43			; 0000002bH
  00268	52		 push	 edx
  00269	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0026e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00279	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR tv202[ebp], 0
$LN31@set_gunshi:
  00280	83 7d fc 00	 cmp	 DWORD PTR _en$[ebp], 0
  00284	74 0a		 je	 SHORT $LN24@set_gunshi
  00286	8b 4d fc	 mov	 ecx, DWORD PTR _en$[ebp]
  00289	8b 11		 mov	 edx, DWORD PTR [ecx]
  0028b	89 55 a8	 mov	 DWORD PTR tv177[ebp], edx
  0028e	eb 21		 jmp	 SHORT $LN25@set_gunshi
$LN24@set_gunshi:
  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA
  00295	83 c0 2b	 add	 eax, 43			; 0000002bH
  00298	50		 push	 eax
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0029e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002a4	51		 push	 ecx
  002a5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002aa	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv177[ebp], 0
$LN25@set_gunshi:
  002b1	ba 01 00 00 00	 mov	 edx, 1
  002b6	85 d2		 test	 edx, edx
  002b8	74 09		 je	 SHORT $LN26@set_gunshi
  002ba	c7 45 a4 bb 00
	00 00		 mov	 DWORD PTR tv185[ebp], 187 ; 000000bbH
  002c1	eb 21		 jmp	 SHORT $LN27@set_gunshi
$LN26@set_gunshi:
  002c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z@4JA
  002c8	83 c0 2b	 add	 eax, 43			; 0000002bH
  002cb	50		 push	 eax
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002d7	51		 push	 ecx
  002d8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002dd	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv185[ebp], 0
$LN27@set_gunshi:
  002e4	68 bb 00 00 00	 push	 187			; 000000bbH
  002e9	8b 55 f8	 mov	 edx, DWORD PTR _pilot$[ebp]
  002ec	52		 push	 edx
  002ed	69 45 b0 5c 04
	00 00		 imul	 eax, DWORD PTR tv194[ebp], 1116
  002f4	8b 4d ac	 mov	 ecx, DWORD PTR tv202[ebp]
  002f7	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  002fe	ff d2		 call	 edx
  00300	50		 push	 eax
  00301	68 bb 00 00 00	 push	 187			; 000000bbH
  00306	8b 45 fc	 mov	 eax, DWORD PTR _en$[ebp]
  00309	50		 push	 eax
  0030a	69 4d a8 5c 04
	00 00		 imul	 ecx, DWORD PTR tv177[ebp], 1116
  00311	8b 55 a4	 mov	 edx, DWORD PTR tv185[ebp]
  00314	8b 84 91 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[ecx+edx*4]
  0031b	ff d0		 call	 eax
$LN1@set_gunshi:

; 613  : 				}
; 614  : 
; 615  : 				// Jabberwock 040201 ends
; 616  : 			}
; 617  : 		}
; 618  : 	}
; 619  : 
; 620  : 	#endif
; 621  : }

  0031d	5f		 pop	 edi
  0031e	5e		 pop	 esi
  0031f	5b		 pop	 ebx
  00320	8b e5		 mov	 esp, ebp
  00322	5d		 pop	 ebp
  00323	c2 04 00	 ret	 4
?set_gunship_entity_to_external_view_entity@@YGXPAUEVENT@@@Z ENDP ; set_gunship_entity_to_external_view_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?set_raw_gunship_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv74 = -68						; size = 4
_en$ = 8						; size = 4
?set_raw_gunship_entity@@YGXPAUENTITY@@@Z PROC		; set_raw_gunship_entity, COMDAT

; 547  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 548  : 	//
; 549  : 	// set gunship entity
; 550  : 	//
; 551  : 
; 552  : 	gunship_entity = en;

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, eax ; gunship_entity

; 553  : 
; 554  : 	if (en)

  00011	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00015	74 58		 je	 SHORT $LN2@set_raw_gu

; 555  : 	{
; 556  : 		debug_log ("Setting raw gunship_entity (type = %s, index = %d)", get_local_entity_type_name (en), get_local_entity_index (en));

  00017	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0001b	74 0a		 je	 SHORT $LN5@set_raw_gu
  0001d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00020	8b 08		 mov	 ecx, DWORD PTR [eax]
  00022	89 4d bc	 mov	 DWORD PTR tv74[ebp], ecx
  00025	eb 21		 jmp	 SHORT $LN6@set_raw_gu
$LN5@set_raw_gu:
  00027	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??set_raw_gunship_entity@@YGXPAUENTITY@@@Z@4JA
  0002d	83 c2 09	 add	 edx, 9
  00030	52		 push	 edx
  00031	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00041	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR tv74[ebp], 0
$LN6@set_raw_gu:
  00048	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0004b	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00051	c1 f9 04	 sar	 ecx, 4
  00054	51		 push	 ecx
  00055	6b 55 bc 0c	 imul	 edx, DWORD PTR tv74[ebp], 12
  00059	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  0005f	50		 push	 eax
  00060	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@DDEPGAMI@Setting?5raw?5gunship_entity?5?$CItyp@
  00065	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 557  : 	}
; 558  : 	else

  0006d	eb 0d		 jmp	 SHORT $LN1@set_raw_gu
$LN2@set_raw_gu:

; 559  : 	{
; 560  : 		debug_log ("Setting raw gunship_entity to NULL");

  0006f	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@CHLHIPMK@Setting?5raw?5gunship_entity?5to?5N@
  00074	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00079	83 c4 04	 add	 esp, 4
$LN1@set_raw_gu:

; 561  : 	}
; 562  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?set_raw_gunship_entity@@YGXPAUENTITY@@@Z ENDP		; set_raw_gunship_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?assign_entity_to_user@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv330 = -136						; size = 4
tv731 = -132						; size = 4
tv708 = -132						; size = 4
tv688 = -132						; size = 4
tv666 = -132						; size = 4
tv645 = -132						; size = 4
tv614 = -132						; size = 4
tv592 = -132						; size = 4
tv571 = -132						; size = 4
tv534 = -132						; size = 4
tv513 = -132						; size = 4
tv491 = -132						; size = 4
tv469 = -132						; size = 4
tv448 = -132						; size = 4
tv425 = -132						; size = 4
tv369 = -132						; size = 4
tv346 = -132						; size = 4
tv324 = -132						; size = 4
tv304 = -132						; size = 4
tv271 = -132						; size = 4
tv248 = -132						; size = 4
tv224 = -132						; size = 4
tv189 = -132						; size = 4
tv166 = -132						; size = 4
tv136 = -132						; size = 4
tv723 = -128						; size = 4
tv700 = -128						; size = 4
tv680 = -128						; size = 4
tv658 = -128						; size = 4
tv637 = -128						; size = 4
tv606 = -128						; size = 4
tv584 = -128						; size = 4
tv563 = -128						; size = 4
tv551 = -128						; size = 4
tv526 = -128						; size = 4
tv505 = -128						; size = 4
tv483 = -128						; size = 4
tv461 = -128						; size = 4
tv440 = -128						; size = 4
tv417 = -128						; size = 4
tv361 = -128						; size = 4
tv338 = -128						; size = 4
tv317 = -128						; size = 4
tv296 = -128						; size = 4
tv264 = -128						; size = 4
tv241 = -128						; size = 4
tv216 = -128						; size = 4
tv181 = -128						; size = 4
tv158 = -128						; size = 4
tv128 = -128						; size = 4
_sec$1 = -60						; size = 4
_pos$2 = -56						; size = 4
_member$3 = -52						; size = 4
_log$4 = -48						; size = 4
_side$5 = -44						; size = 4
_alive$6 = -40						; size = 4
_store_data_flow$ = -36					; size = 4
_ingame_events_flag$ = -32				; size = 4
_input_events_flag$ = -28				; size = 4
_fuel$ = -24						; size = 4
_old_group$ = -20					; size = 4
_primary_task$ = -16					; size = 4
_previous$ = -12					; size = 4
_member$ = -8						; size = 4
_group$ = -4						; size = 4
_en$ = 8						; size = 4
?assign_entity_to_user@@YGXPAUENTITY@@@Z PROC		; assign_entity_to_user, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 158  :    entity
; 159  : 		*group,
; 160  : 		*member,
; 161  : 		*previous,
; 162  : 		*primary_task,
; 163  : 		*old_group;
; 164  : 
; 165  : 	float
; 166  : 		fuel;
; 167  : 
; 168  : 	int
; 169  : 		input_events_flag,
; 170  : 		ingame_events_flag;
; 171  : 
; 172  : 	comms_data_flow_types
; 173  : 		store_data_flow;
; 174  : 
; 175  : 	debug_log("Assigning gunship to user: %s", get_sub_type_name(en));

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?get_sub_type_name@@YGPBDPAUENTITY@@@Z ; get_sub_type_name
  00015	50		 push	 eax
  00016	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@BNCJGPBI@Assigning?5gunship?5to?5user?3?5?$CFs@
  0001b	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00020	83 c4 08	 add	 esp, 8

; 176  : 
; 177  : 	ASSERT (get_pilot_entity () || (en == NULL && get_gunship_entity() == NULL));

  00023	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  0002a	75 27		 jne	 SHORT $LN8@assign_ent
  0002c	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00030	75 09		 jne	 SHORT $LN9@assign_ent
  00032	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00039	74 18		 je	 SHORT $LN8@assign_ent
$LN9@assign_ent:
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00040	83 c0 14	 add	 eax, 20			; 00000014H
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@CFHCGCOL@get_pilot_entity?5?$CI?$CJ?5?$HM?$HM?5?$CIen?5?$DN?$DN?5N@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN8@assign_ent:

; 178  : 
; 179  : 	old_group = NULL;

  00053	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _old_group$[ebp], 0

; 180  : 
; 181  : 	//
; 182  : 	// Maintain Input Events
; 183  : 	//
; 184  : 
; 185  : 	if (get_event_stack_head_function () == set_input_events)

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?event_stack_head@@3PAUEVENT_STACK@@A ; event_stack_head
  0005f	81 78 08 00 00
	00 00		 cmp	 DWORD PTR [eax+8], OFFSET ?set_input_events@@YGXXZ ; set_input_events
  00066	75 13		 jne	 SHORT $LN10@assign_ent

; 186  : 	{
; 187  : 		pop_event (set_input_events);

  00068	68 00 00 00 00	 push	 OFFSET ?set_input_events@@YGXXZ ; set_input_events
  0006d	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 188  : 
; 189  : 		input_events_flag = TRUE;

  00072	c7 45 e4 01 00
	00 00		 mov	 DWORD PTR _input_events_flag$[ebp], 1

; 190  : 	}
; 191  : 	else

  00079	eb 07		 jmp	 SHORT $LN11@assign_ent
$LN10@assign_ent:

; 192  : 	{
; 193  : 		input_events_flag = FALSE;

  0007b	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _input_events_flag$[ebp], 0
$LN11@assign_ent:

; 194  : 	}
; 195  : 
; 196  : 	//
; 197  : 	// Maintain Planner Events
; 198  : 	//
; 199  : 
; 200  : 	if (get_event_stack_head_function () == ingame_screen_set_events)

  00082	a1 00 00 00 00	 mov	 eax, DWORD PTR ?event_stack_head@@3PAUEVENT_STACK@@A ; event_stack_head
  00087	81 78 08 00 00
	00 00		 cmp	 DWORD PTR [eax+8], OFFSET ?ingame_screen_set_events@@YGXXZ ; ingame_screen_set_events
  0008e	75 34		 jne	 SHORT $LN12@assign_ent

; 201  : 	{
; 202  : 		ASSERT (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_PLANNER);

  00090	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 1 ; in_flight_game_mode
  00097	74 18		 je	 SHORT $LN14@assign_ent
  00099	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  0009e	83 c0 2d	 add	 eax, 45			; 0000002dH
  000a1	50		 push	 eax
  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a7	68 00 00 00 00	 push	 OFFSET ??_C@_0DK@MHDMJOIO@get_in_flight_game_mode?5?$CI?$CJ?5?$DN?$DN?5I@
  000ac	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN14@assign_ent:

; 203  : 
; 204  : 		pop_event (ingame_screen_set_events);

  000b1	68 00 00 00 00	 push	 OFFSET ?ingame_screen_set_events@@YGXXZ ; ingame_screen_set_events
  000b6	e8 00 00 00 00	 call	 ?pop_event@@YGXP6GXXZ@Z	; pop_event

; 205  : 
; 206  : 		ingame_events_flag = TRUE;

  000bb	c7 45 e0 01 00
	00 00		 mov	 DWORD PTR _ingame_events_flag$[ebp], 1

; 207  : 	}
; 208  : 	else

  000c2	eb 07		 jmp	 SHORT $LN13@assign_ent
$LN12@assign_ent:

; 209  : 	{
; 210  : 		ingame_events_flag = FALSE;

  000c4	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _ingame_events_flag$[ebp], 0
$LN13@assign_ent:

; 211  : 	}
; 212  : 
; 213  : 	previous = gunship_entity;

  000cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000d0	89 45 f4	 mov	 DWORD PTR _previous$[ebp], eax

; 214  : 
; 215  : 	if (previous)

  000d3	83 7d f4 00	 cmp	 DWORD PTR _previous$[ebp], 0
  000d7	0f 84 b9 00 00
	00		 je	 $LN16@assign_ent

; 216  : 	{
; 217  : 
; 218  : 		if (get_current_flight_dynamics ())

  000dd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  000e4	0f 84 ac 00 00
	00		 je	 $LN16@assign_ent

; 219  : 		{
; 220  : 
; 221  : 			fuel = get_current_flight_dynamics_fuel_weight ();

  000ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  000ef	f3 0f 10 80 a4
	24 00 00	 movss	 xmm0, DWORD PTR [eax+9380]
  000f7	f3 0f 11 45 e8	 movss	 DWORD PTR _fuel$[ebp], xmm0

; 222  : 
; 223  : 			set_client_server_entity_float_value (previous, FLOAT_TYPE_FUEL_SUPPLY_LEVEL, fuel);

  000fc	83 7d f4 00	 cmp	 DWORD PTR _previous$[ebp], 0
  00100	74 0a		 je	 SHORT $LN47@assign_ent
  00102	8b 45 f4	 mov	 eax, DWORD PTR _previous$[ebp]
  00105	8b 08		 mov	 ecx, DWORD PTR [eax]
  00107	89 4d 80	 mov	 DWORD PTR tv128[ebp], ecx
  0010a	eb 21		 jmp	 SHORT $LN48@assign_ent
$LN47@assign_ent:
  0010c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00112	83 c2 42	 add	 edx, 66			; 00000042H
  00115	52		 push	 edx
  00116	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0011b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00126	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv128[ebp], 0
$LN48@assign_ent:
  0012d	b9 01 00 00 00	 mov	 ecx, 1
  00132	85 c9		 test	 ecx, ecx
  00134	74 0c		 je	 SHORT $LN49@assign_ent
  00136	c7 85 7c ff ff
	ff 30 00 00 00	 mov	 DWORD PTR tv136[ebp], 48 ; 00000030H
  00140	eb 24		 jmp	 SHORT $LN50@assign_ent
$LN49@assign_ent:
  00142	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00148	83 c2 42	 add	 edx, 66			; 00000042H
  0014b	52		 push	 edx
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00156	50		 push	 eax
  00157	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0015c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv136[ebp], 0
$LN50@assign_ent:
  00166	51		 push	 ecx
  00167	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fuel$[ebp]
  0016c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00171	6a 30		 push	 48			; 00000030H
  00173	8b 4d f4	 mov	 ecx, DWORD PTR _previous$[ebp]
  00176	51		 push	 ecx
  00177	69 55 80 78 05
	00 00		 imul	 edx, DWORD PTR tv128[ebp], 1400
  0017e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv136[ebp]
  00184	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_float_value@@3PAY1KP@1P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*8]
  0018b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00191	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00194	ff d0		 call	 eax
$LN16@assign_ent:

; 224  : 		}
; 225  : 	}
; 226  : 
; 227  : 	if (en)

  00196	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0019a	74 23		 je	 SHORT $LN18@assign_ent

; 228  : 	{
; 229  : 		if (!get_local_entity_suitable_for_player (en, get_pilot_entity ()))

  0019c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  001a1	50		 push	 eax
  001a2	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001a5	51		 push	 ecx
  001a6	e8 00 00 00 00	 call	 ?get_local_entity_suitable_for_player@@YGHPAUENTITY@@0@Z ; get_local_entity_suitable_for_player
  001ab	85 c0		 test	 eax, eax
  001ad	75 10		 jne	 SHORT $LN18@assign_ent

; 230  : 		{
; 231  : 			en = NULL;

  001af	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _en$[ebp], 0

; 232  : 
; 233  : 			notify_clear_current_selections (NULL, NULL);

  001b6	6a 00		 push	 0
  001b8	6a 00		 push	 0
  001ba	e8 00 00 00 00	 call	 ?notify_clear_current_selections@@YGXPAUUI_OBJECT@@PAX@Z ; notify_clear_current_selections
$LN18@assign_ent:

; 234  : 		}
; 235  : 	}
; 236  : 
; 237  : 	if (en)

  001bf	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001c3	0f 84 32 01 00
	00		 je	 $LN19@assign_ent

; 238  : 	{
; 239  : 		// set invulnerable timer and display message
; 240  : 
; 241  : 		set_local_entity_float_value (en, FLOAT_TYPE_INVULNERABLE_TIMER, command_line_user_invulnerable_time);

  001c9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  001cd	74 0a		 je	 SHORT $LN51@assign_ent
  001cf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001d4	89 4d 80	 mov	 DWORD PTR tv158[ebp], ecx
  001d7	eb 21		 jmp	 SHORT $LN52@assign_ent
$LN51@assign_ent:
  001d9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  001df	83 c2 54	 add	 edx, 84			; 00000054H
  001e2	52		 push	 edx
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  001e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001f3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN52@assign_ent:
  001fa	b9 01 00 00 00	 mov	 ecx, 1
  001ff	85 c9		 test	 ecx, ecx
  00201	74 0c		 je	 SHORT $LN53@assign_ent
  00203	c7 85 7c ff ff
	ff 37 00 00 00	 mov	 DWORD PTR tv166[ebp], 55 ; 00000037H
  0020d	eb 24		 jmp	 SHORT $LN54@assign_ent
$LN53@assign_ent:
  0020f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00215	83 c2 54	 add	 edx, 84			; 00000054H
  00218	52		 push	 edx
  00219	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00223	50		 push	 eax
  00224	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00229	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
$LN54@assign_ent:
  00233	51		 push	 ecx
  00234	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?command_line_user_invulnerable_time@@3MA
  0023c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00241	6a 37		 push	 55			; 00000037H
  00243	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00246	51		 push	 ecx
  00247	69 55 80 bc 02
	00 00		 imul	 edx, DWORD PTR tv158[ebp], 700
  0024e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv166[ebp]
  00254	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_float_value@@3PAY0KP@P6GXPAUENTITY@@W4FLOAT_TYPES@@M@ZA[edx+eax*4]
  0025b	ff d1		 call	 ecx

; 242  : 
; 243  : 		//set_status_message ("Invulnerable", STATUS_MESSAGE_TYPE_ALERT);
; 244  : 
; 245  : 		if (get_time_acceleration () != TIME_ACCELERATION_PAUSE)

  0025d	e8 00 00 00 00	 call	 ?get_time_acceleration@@YGHXZ ; get_time_acceleration
  00262	85 c0		 test	 eax, eax
  00264	74 07		 je	 SHORT $LN21@assign_ent

; 246  : 		{
; 247  : 			set_min_time_acceleration (NULL);

  00266	6a 00		 push	 0
  00268	e8 00 00 00 00	 call	 ?set_min_time_acceleration@@YGXPAUEVENT@@@Z ; set_min_time_acceleration
$LN21@assign_ent:

; 248  : 		}
; 249  : 
; 250  : 		set_global_gunship_type ((gunship_types) get_local_entity_int_value (en, INT_TYPE_GUNSHIP_TYPE));

  0026d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00271	74 0a		 je	 SHORT $LN55@assign_ent
  00273	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00276	8b 08		 mov	 ecx, DWORD PTR [eax]
  00278	89 4d 80	 mov	 DWORD PTR tv181[ebp], ecx
  0027b	eb 21		 jmp	 SHORT $LN56@assign_ent
$LN55@assign_ent:
  0027d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00283	83 c2 5d	 add	 edx, 93			; 0000005dH
  00286	52		 push	 edx
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00297	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN56@assign_ent:
  0029e	b9 01 00 00 00	 mov	 ecx, 1
  002a3	85 c9		 test	 ecx, ecx
  002a5	74 0c		 je	 SHORT $LN57@assign_ent
  002a7	c7 85 7c ff ff
	ff 51 00 00 00	 mov	 DWORD PTR tv189[ebp], 81 ; 00000051H
  002b1	eb 24		 jmp	 SHORT $LN58@assign_ent
$LN57@assign_ent:
  002b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  002b9	83 c2 5d	 add	 edx, 93			; 0000005dH
  002bc	52		 push	 edx
  002bd	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  002c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002cd	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv189[ebp], 0
$LN58@assign_ent:
  002d7	6a 51		 push	 81			; 00000051H
  002d9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002dc	51		 push	 ecx
  002dd	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv181[ebp], 1116
  002e4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv189[ebp]
  002ea	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002f1	ff d1		 call	 ecx
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 ?set_global_gunship_type@@YGXW4GUNSHIP_TYPES@@@Z ; set_global_gunship_type

; 251  : 	}
; 252  : 	else

  002f9	eb 49		 jmp	 SHORT $LN24@assign_ent
$LN19@assign_ent:

; 253  : 	{
; 254  : 
; 255  : 		set_global_gunship_type (NUM_GUNSHIP_TYPES);

  002fb	6a 0a		 push	 10			; 0000000aH
  002fd	e8 00 00 00 00	 call	 ?set_global_gunship_type@@YGXW4GUNSHIP_TYPES@@@Z ; set_global_gunship_type

; 256  : 
; 257  : 		if (get_camera_entity())

  00302	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?camera_entity@@3PAUENTITY@@A, 0 ; camera_entity
  00309	74 39		 je	 SHORT $LN24@assign_ent

; 258  : 		{
; 259  : 			if (previous)

  0030b	83 7d f4 00	 cmp	 DWORD PTR _previous$[ebp], 0
  0030f	74 1f		 je	 SHORT $LN23@assign_ent

; 260  : 			{
; 261  : 				set_external_view_entity (previous);

  00311	8b 45 f4	 mov	 eax, DWORD PTR _previous$[ebp]
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 ?set_external_view_entity@@YGXPAUENTITY@@@Z ; set_external_view_entity

; 262  : 
; 263  : 				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_END_OF_MISSION);

  0031a	6a 03		 push	 3
  0031c	6a 00		 push	 0
  0031e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00323	50		 push	 eax
  00324	6a 2f		 push	 47			; 0000002fH
  00326	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  0032b	83 c4 10	 add	 esp, 16			; 00000010H

; 264  : 			}
; 265  : 			else

  0032e	eb 14		 jmp	 SHORT $LN24@assign_ent
$LN23@assign_ent:

; 266  : 			{
; 267  : 				notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_CINEMATIC);

  00330	6a 09		 push	 9
  00332	6a 00		 push	 0
  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00339	50		 push	 eax
  0033a	6a 2f		 push	 47			; 0000002fH
  0033c	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00341	83 c4 10	 add	 esp, 16			; 00000010H
$LN24@assign_ent:

; 268  : 			}
; 269  : 		}
; 270  : 	}
; 271  : 
; 272  : 	//
; 273  : 	// big problems as this function can be called by the client in RX mode,
; 274  : 	// but it needs to do a lot of setting things c/s (i.e. it really needs to be in TX mode)
; 275  : 	//
; 276  : 
; 277  : 	store_data_flow = get_comms_data_flow ();

  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?system_comms_data_flow@@3W4COMMS_DATA_FLOW_TYPES@@A ; system_comms_data_flow
  00349	89 45 dc	 mov	 DWORD PTR _store_data_flow$[ebp], eax

; 278  : 
; 279  : 	set_comms_data_flow (COMMS_DATA_FLOW_TX);

  0034c	6a 00		 push	 0
  0034e	e8 00 00 00 00	 call	 ?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z ; set_comms_data_flow

; 280  : 
; 281  : 	//
; 282  : 	// release old gunship entity
; 283  : 	//
; 284  : 
; 285  : 	primary_task = NULL;

  00353	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _primary_task$[ebp], 0

; 286  : 
; 287  : 	if (gunship_entity)

  0035a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00361	0f 84 08 05 00
	00		 je	 $LN25@assign_ent

; 288  : 	{
; 289  : 		int
; 290  : 			alive = get_local_entity_int_value(gunship_entity, INT_TYPE_ALIVE),

  00367	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0036e	74 0c		 je	 SHORT $LN59@assign_ent
  00370	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00375	8b 08		 mov	 ecx, DWORD PTR [eax]
  00377	89 4d 80	 mov	 DWORD PTR tv216[ebp], ecx
  0037a	eb 24		 jmp	 SHORT $LN60@assign_ent
$LN59@assign_ent:
  0037c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00382	81 c2 85 00 00
	00		 add	 edx, 133		; 00000085H
  00388	52		 push	 edx
  00389	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0038e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00393	50		 push	 eax
  00394	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00399	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv216[ebp], 0
$LN60@assign_ent:
  003a0	b9 01 00 00 00	 mov	 ecx, 1
  003a5	85 c9		 test	 ecx, ecx
  003a7	74 0c		 je	 SHORT $LN61@assign_ent
  003a9	c7 85 7c ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv224[ebp], 7
  003b3	eb 27		 jmp	 SHORT $LN62@assign_ent
$LN61@assign_ent:
  003b5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  003bb	81 c2 85 00 00
	00		 add	 edx, 133		; 00000085H
  003c1	52		 push	 edx
  003c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  003c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  003cc	50		 push	 eax
  003cd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  003d2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv224[ebp], 0
$LN62@assign_ent:
  003dc	6a 07		 push	 7
  003de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  003e4	51		 push	 ecx
  003e5	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv216[ebp], 1116
  003ec	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv224[ebp]
  003f2	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  003f9	ff d1		 call	 ecx
  003fb	89 45 d8	 mov	 DWORD PTR _alive$6[ebp], eax

; 291  : 			side = get_global_gunship_side();

  003fe	a1 08 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  00403	89 45 d4	 mov	 DWORD PTR _side$5[ebp], eax

; 292  : 
; 293  : 		player_log_type
; 294  : 			*log = get_current_player_log();

  00406	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  0040b	89 45 d0	 mov	 DWORD PTR _log$4[ebp], eax

; 295  : 
; 296  : 		//
; 297  : 		// Award Points for mission
; 298  : 		//
; 299  : 
; 300  : 
; 301  : 		if (tacview_is_logging() && command_line_tacview_logging < 3)

  0040e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  00415	74 0e		 je	 SHORT $LN26@assign_ent
  00417	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  0041e	7d 05		 jge	 SHORT $LN26@assign_ent

; 302  : 			close_tacview_log();

  00420	e8 00 00 00 00	 call	 ?close_tacview_log@@YGXXZ ; close_tacview_log
$LN26@assign_ent:

; 303  : 
; 304  : 		primary_task = get_local_entity_primary_task (gunship_entity);

  00425	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 ?get_local_entity_primary_task@@YGPAUENTITY@@PAU1@@Z ; get_local_entity_primary_task
  00430	89 45 f0	 mov	 DWORD PTR _primary_task$[ebp], eax

; 305  : 
; 306  : 		if (primary_task
; 307  : 			&& get_local_entity_int_value (primary_task, INT_TYPE_TASK_STATE) == TASK_STATE_COMPLETED)

  00433	83 7d f0 00	 cmp	 DWORD PTR _primary_task$[ebp], 0
  00437	0f 84 96 00 00
	00		 je	 $LN27@assign_ent
  0043d	83 7d f0 00	 cmp	 DWORD PTR _primary_task$[ebp], 0
  00441	74 0a		 je	 SHORT $LN63@assign_ent
  00443	8b 45 f0	 mov	 eax, DWORD PTR _primary_task$[ebp]
  00446	8b 08		 mov	 ecx, DWORD PTR [eax]
  00448	89 4d 80	 mov	 DWORD PTR tv241[ebp], ecx
  0044b	eb 1d		 jmp	 SHORT $LN64@assign_ent
$LN63@assign_ent:
  0044d	68 33 01 00 00	 push	 307			; 00000133H
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00457	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0045d	52		 push	 edx
  0045e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00463	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv241[ebp], 0
$LN64@assign_ent:
  0046a	b8 01 00 00 00	 mov	 eax, 1
  0046f	85 c0		 test	 eax, eax
  00471	74 0c		 je	 SHORT $LN65@assign_ent
  00473	c7 85 7c ff ff
	ff e3 00 00 00	 mov	 DWORD PTR tv248[ebp], 227 ; 000000e3H
  0047d	eb 20		 jmp	 SHORT $LN66@assign_ent
$LN65@assign_ent:
  0047f	68 33 01 00 00	 push	 307			; 00000133H
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00489	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0048f	51		 push	 ecx
  00490	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00495	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv248[ebp], 0
$LN66@assign_ent:
  0049f	68 e3 00 00 00	 push	 227			; 000000e3H
  004a4	8b 55 f0	 mov	 edx, DWORD PTR _primary_task$[ebp]
  004a7	52		 push	 edx
  004a8	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv241[ebp], 1116
  004af	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv248[ebp]
  004b5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  004bc	ff d2		 call	 edx
  004be	83 f8 02	 cmp	 eax, 2
  004c1	75 10		 jne	 SHORT $LN27@assign_ent

; 308  : 		{
; 309  : 			notify_gunship_entity_mission_terminated (gunship_entity, primary_task);

  004c3	8b 45 f0	 mov	 eax, DWORD PTR _primary_task$[ebp]
  004c6	50		 push	 eax
  004c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004cd	51		 push	 ecx
  004ce	e8 00 00 00 00	 call	 ?notify_gunship_entity_mission_terminated@@YGXPAUENTITY@@0@Z ; notify_gunship_entity_mission_terminated
$LN27@assign_ent:

; 310  : 		}
; 311  : 
; 312  : 		if (get_game_type() != GAME_TYPE_FREE_FLIGHT)

  004d3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?game_type@@3W4GAME_TYPES@@A, 1 ; game_type
  004da	0f 84 e0 00 00
	00		 je	 $LN30@assign_ent

; 313  : 		{
; 314  : 			if (alive)

  004e0	83 7d d8 00	 cmp	 DWORD PTR _alive$6[ebp], 0
  004e4	0f 84 af 00 00
	00		 je	 $LN29@assign_ent

; 315  : 			{
; 316  : 				// if landed somewhere other than a keysite (base), then it's a lost helicopter
; 317  : 				if (!get_local_entity_int_value(gunship_entity, INT_TYPE_AIRBORNE_AIRCRAFT)
; 318  : 					&& !get_keysite_currently_landed_at())

  004ea	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  004f1	74 0c		 je	 SHORT $LN67@assign_ent
  004f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  004f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  004fa	89 4d 80	 mov	 DWORD PTR tv264[ebp], ecx
  004fd	eb 1d		 jmp	 SHORT $LN68@assign_ent
$LN67@assign_ent:
  004ff	68 3d 01 00 00	 push	 317			; 0000013dH
  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00509	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0050f	52		 push	 edx
  00510	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00515	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv264[ebp], 0
$LN68@assign_ent:
  0051c	b8 01 00 00 00	 mov	 eax, 1
  00521	85 c0		 test	 eax, eax
  00523	74 0c		 je	 SHORT $LN69@assign_ent
  00525	c7 85 7c ff ff
	ff 04 00 00 00	 mov	 DWORD PTR tv271[ebp], 4
  0052f	eb 20		 jmp	 SHORT $LN70@assign_ent
$LN69@assign_ent:
  00531	68 3d 01 00 00	 push	 317			; 0000013dH
  00536	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0053b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00541	51		 push	 ecx
  00542	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00547	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv271[ebp], 0
$LN70@assign_ent:
  00551	6a 04		 push	 4
  00553	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00559	52		 push	 edx
  0055a	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv264[ebp], 1116
  00561	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv271[ebp]
  00567	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0056e	ff d2		 call	 edx
  00570	85 c0		 test	 eax, eax
  00572	75 23		 jne	 SHORT $LN31@assign_ent
  00574	e8 00 00 00 00	 call	 ?get_keysite_currently_landed_at@@YGPAUENTITY@@XZ ; get_keysite_currently_landed_at
  00579	85 c0		 test	 eax, eax
  0057b	75 1a		 jne	 SHORT $LN31@assign_ent

; 319  : 				{
; 320  : 					debug_log("lost gunship - landed outside base");

  0057d	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@ENAPPBAI@lost?5gunship?5?9?5landed?5outside?5b@
  00582	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00587	83 c4 04	 add	 esp, 4

; 321  : 					inc_player_log_helicopters_lost(side, log);

  0058a	8b 45 d0	 mov	 eax, DWORD PTR _log$4[ebp]
  0058d	50		 push	 eax
  0058e	8b 4d d4	 mov	 ecx, DWORD PTR _side$5[ebp]
  00591	51		 push	 ecx
  00592	e8 00 00 00 00	 call	 ?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_helicopters_lost
$LN31@assign_ent:

; 322  : 				}
; 323  : 			}
; 324  : 			else

  00597	eb 27		 jmp	 SHORT $LN30@assign_ent
$LN29@assign_ent:

; 325  : 			{
; 326  : 				debug_log("pilot killed");

  00599	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BFGKALPP@pilot?5killed@
  0059e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  005a3	83 c4 04	 add	 esp, 4

; 327  : 				inc_player_log_deaths(side, log);

  005a6	8b 45 d0	 mov	 eax, DWORD PTR _log$4[ebp]
  005a9	50		 push	 eax
  005aa	8b 4d d4	 mov	 ecx, DWORD PTR _side$5[ebp]
  005ad	51		 push	 ecx
  005ae	e8 00 00 00 00	 call	 ?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_deaths

; 328  : 				inc_player_log_helicopters_lost(side, log);

  005b3	8b 45 d0	 mov	 eax, DWORD PTR _log$4[ebp]
  005b6	50		 push	 eax
  005b7	8b 4d d4	 mov	 ecx, DWORD PTR _side$5[ebp]
  005ba	51		 push	 ecx
  005bb	e8 00 00 00 00	 call	 ?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_helicopters_lost
$LN30@assign_ent:

; 329  : 			}
; 330  : 		}
; 331  : 
; 332  : 		//
; 333  : 		// Deinitialise
; 334  : 		//
; 335  : 
; 336  : 		deinitialise_cockpits ();

  005c0	e8 00 00 00 00	 call	 ?deinitialise_cockpits@@YGXXZ ; deinitialise_cockpits

; 337  : 
; 338  : 		deinitialise_avionics ();

  005c5	e8 00 00 00 00	 call	 ?deinitialise_avionics@@YGXXZ ; deinitialise_avionics

; 339  : 
; 340  : 		//
; 341  : 		// Deinitialise flight dynamics
; 342  : 		//
; 343  : 
; 344  : 		if (get_current_flight_dynamics ())

  005ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A, 0 ; current_flight_dynamics
  005d1	74 10		 je	 SHORT $LN32@assign_ent

; 345  : 		{
; 346  : 			//
; 347  : 			// damage helicopter according to flight model
; 348  : 			//
; 349  : 
; 350  : 			damage_entity_to_flight_model (gunship_entity);

  005d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  005d8	50		 push	 eax
  005d9	e8 00 00 00 00	 call	 ?damage_entity_to_flight_model@@YGXPAUENTITY@@@Z ; damage_entity_to_flight_model

; 351  : 
; 352  : 			deinitialise_flight_dynamics ();

  005de	e8 00 00 00 00	 call	 ?deinitialise_flight_dynamics@@YGXXZ ; deinitialise_flight_dynamics
$LN32@assign_ent:

; 353  : 		}
; 354  : 
; 355  : 		set_client_server_entity_int_value (gunship_entity, INT_TYPE_PLAYER, ENTITY_PLAYER_AI);

  005e3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  005ea	74 0c		 je	 SHORT $LN71@assign_ent
  005ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  005f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  005f3	89 4d 80	 mov	 DWORD PTR tv296[ebp], ecx
  005f6	eb 24		 jmp	 SHORT $LN72@assign_ent
$LN71@assign_ent:
  005f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  005fe	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  00604	52		 push	 edx
  00605	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0060a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0060f	50		 push	 eax
  00610	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00615	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv296[ebp], 0
$LN72@assign_ent:
  0061c	b9 01 00 00 00	 mov	 ecx, 1
  00621	85 c9		 test	 ecx, ecx
  00623	74 0c		 je	 SHORT $LN73@assign_ent
  00625	c7 85 7c ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv304[ebp], 156 ; 0000009cH
  0062f	eb 27		 jmp	 SHORT $LN74@assign_ent
$LN73@assign_ent:
  00631	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00637	81 c2 c6 00 00
	00		 add	 edx, 198		; 000000c6H
  0063d	52		 push	 edx
  0063e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00643	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00648	50		 push	 eax
  00649	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0064e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv304[ebp], 0
$LN74@assign_ent:
  00658	6a 00		 push	 0
  0065a	68 9c 00 00 00	 push	 156			; 0000009cH
  0065f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00665	51		 push	 ecx
  00666	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv296[ebp], 2232
  0066d	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv304[ebp]
  00673	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  0067a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00680	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00683	ff d0		 call	 eax

; 356  : 
; 357  : 		// check if this is necessary...
; 358  : 		switch (get_local_entity_int_value (gunship_entity, INT_TYPE_OPERATIONAL_STATE))

  00685	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  0068c	74 0c		 je	 SHORT $LN75@assign_ent
  0068e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00693	8b 08		 mov	 ecx, DWORD PTR [eax]
  00695	89 4d 80	 mov	 DWORD PTR tv317[ebp], ecx
  00698	eb 1d		 jmp	 SHORT $LN76@assign_ent
$LN75@assign_ent:
  0069a	68 66 01 00 00	 push	 358			; 00000166H
  0069f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  006a4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  006aa	52		 push	 edx
  006ab	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006b0	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv317[ebp], 0
$LN76@assign_ent:
  006b7	b8 01 00 00 00	 mov	 eax, 1
  006bc	85 c0		 test	 eax, eax
  006be	74 0c		 je	 SHORT $LN77@assign_ent
  006c0	c7 85 7c ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv324[ebp], 151 ; 00000097H
  006ca	eb 20		 jmp	 SHORT $LN78@assign_ent
$LN77@assign_ent:
  006cc	68 66 01 00 00	 push	 358			; 00000166H
  006d1	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  006d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  006dc	51		 push	 ecx
  006dd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  006e2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv324[ebp], 0
$LN78@assign_ent:
  006ec	68 97 00 00 00	 push	 151			; 00000097H
  006f1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  006f7	52		 push	 edx
  006f8	69 45 80 5c 04
	00 00		 imul	 eax, DWORD PTR tv317[ebp], 1116
  006ff	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv324[ebp]
  00705	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0070c	ff d2		 call	 edx
  0070e	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv330[ebp], eax
  00714	83 bd 78 ff ff
	ff 04		 cmp	 DWORD PTR tv330[ebp], 4
  0071b	74 05		 je	 SHORT $LN33@assign_ent
  0071d	e9 ac 00 00 00	 jmp	 $LN2@assign_ent
$LN33@assign_ent:

; 359  : 		{
; 360  : 			case OPERATIONAL_STATE_LANDED:
; 361  : 			{
; 362  : 				if (primary_task)

  00722	83 7d f0 00	 cmp	 DWORD PTR _primary_task$[ebp], 0
  00726	0f 84 a2 00 00
	00		 je	 $LN34@assign_ent

; 363  : 				{
; 364  : 					set_client_server_entity_int_value (gunship_entity, INT_TYPE_OPERATIONAL_STATE, OPERATIONAL_STATE_NAVIGATING);

  0072c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  00733	74 0c		 je	 SHORT $LN79@assign_ent
  00735	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0073a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0073c	89 4d 80	 mov	 DWORD PTR tv338[ebp], ecx
  0073f	eb 24		 jmp	 SHORT $LN80@assign_ent
$LN79@assign_ent:
  00741	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00747	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  0074d	52		 push	 edx
  0074e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00753	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00758	50		 push	 eax
  00759	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0075e	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv338[ebp], 0
$LN80@assign_ent:
  00765	b9 01 00 00 00	 mov	 ecx, 1
  0076a	85 c9		 test	 ecx, ecx
  0076c	74 0c		 je	 SHORT $LN81@assign_ent
  0076e	c7 85 7c ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv346[ebp], 151 ; 00000097H
  00778	eb 27		 jmp	 SHORT $LN82@assign_ent
$LN81@assign_ent:
  0077a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00780	81 c2 cf 00 00
	00		 add	 edx, 207		; 000000cfH
  00786	52		 push	 edx
  00787	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0078c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00791	50		 push	 eax
  00792	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00797	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv346[ebp], 0
$LN82@assign_ent:
  007a1	6a 07		 push	 7
  007a3	68 97 00 00 00	 push	 151			; 00000097H
  007a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  007ae	51		 push	 ecx
  007af	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv338[ebp], 2232
  007b6	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv346[ebp]
  007bc	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  007c3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  007c9	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  007cc	ff d0		 call	 eax
$LN34@assign_ent:
$LN2@assign_ent:

; 365  : 				}
; 366  : 
; 367  : 				break;
; 368  : 			}
; 369  : 		}
; 370  : 
; 371  : 		old_group = get_local_entity_parent (gunship_entity, LIST_TYPE_MEMBER);

  007ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, 0 ; gunship_entity
  007d5	74 0c		 je	 SHORT $LN83@assign_ent
  007d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  007dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  007de	89 4d 80	 mov	 DWORD PTR tv361[ebp], ecx
  007e1	eb 24		 jmp	 SHORT $LN84@assign_ent
$LN83@assign_ent:
  007e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  007e9	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  007ef	52		 push	 edx
  007f0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  007f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  007fa	50		 push	 eax
  007fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00800	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv361[ebp], 0
$LN84@assign_ent:
  00807	b9 01 00 00 00	 mov	 ecx, 1
  0080c	85 c9		 test	 ecx, ecx
  0080e	74 0c		 je	 SHORT $LN85@assign_ent
  00810	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv369[ebp], 25 ; 00000019H
  0081a	eb 27		 jmp	 SHORT $LN86@assign_ent
$LN85@assign_ent:
  0081c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00822	81 c2 d6 00 00
	00		 add	 edx, 214		; 000000d6H
  00828	52		 push	 edx
  00829	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0082e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00833	50		 push	 eax
  00834	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00839	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv369[ebp], 0
$LN86@assign_ent:
  00843	6a 19		 push	 25			; 00000019H
  00845	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0084b	51		 push	 ecx
  0084c	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv361[ebp], 180
  00853	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv369[ebp]
  00859	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00860	ff d1		 call	 ecx
  00862	89 45 ec	 mov	 DWORD PTR _old_group$[ebp], eax

; 372  : 
; 373  : 		gunship_current_sector = NULL;

  00865	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A, 0 ; gunship_current_sector
$LN25@assign_ent:

; 374  : 	}
; 375  : 
; 376  : 	//
; 377  : 	// set new gunship entity
; 378  : 	//
; 379  : 
; 380  : 	gunship_entity = en;

  0086f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00872	a3 00 00 00 00	 mov	 DWORD PTR ?gunship_entity@@3PAUENTITY@@A, eax ; gunship_entity

; 381  : 
; 382  : 	//
; 383  : 	// assign pilot
; 384  : 	//
; 385  : 
; 386  : 	if (en)

  00877	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0087b	0f 84 a8 00 00
	00		 je	 $LN35@assign_ent

; 387  : 	{
; 388  : 		set_client_server_entity_parent (get_pilot_entity (), LIST_TYPE_AIRCREW, en);

  00881	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00884	50		 push	 eax
  00885	6a 01		 push	 1
  00887	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  0088d	51		 push	 ecx
  0088e	e8 00 00 00 00	 call	 ?set_client_server_entity_parent@@YGXPAUENTITY@@W4LIST_TYPES@@0@Z ; set_client_server_entity_parent

; 389  : 		set_local_entity_int_value (get_pilot_entity (), INT_TYPE_CREW_ROLE, CREW_ROLE_PILOT);

  00893	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pilot_entity@@3PAUENTITY@@A, 0 ; pilot_entity
  0089a	74 0c		 je	 SHORT $LN87@assign_ent
  0089c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  008a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  008a3	89 4d 80	 mov	 DWORD PTR tv417[ebp], ecx
  008a6	eb 24		 jmp	 SHORT $LN88@assign_ent
$LN87@assign_ent:
  008a8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  008ae	81 c2 e8 00 00
	00		 add	 edx, 232		; 000000e8H
  008b4	52		 push	 edx
  008b5	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  008ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  008bf	50		 push	 eax
  008c0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008c5	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv417[ebp], 0
$LN88@assign_ent:
  008cc	b9 01 00 00 00	 mov	 ecx, 1
  008d1	85 c9		 test	 ecx, ecx
  008d3	74 0c		 je	 SHORT $LN89@assign_ent
  008d5	c7 85 7c ff ff
	ff 23 00 00 00	 mov	 DWORD PTR tv425[ebp], 35 ; 00000023H
  008df	eb 27		 jmp	 SHORT $LN90@assign_ent
$LN89@assign_ent:
  008e1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  008e7	81 c2 e8 00 00
	00		 add	 edx, 232		; 000000e8H
  008ed	52		 push	 edx
  008ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  008f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  008f8	50		 push	 eax
  008f9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  008fe	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv425[ebp], 0
$LN90@assign_ent:
  00908	6a 00		 push	 0
  0090a	6a 23		 push	 35			; 00000023H
  0090c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pilot_entity@@3PAUENTITY@@A ; pilot_entity
  00912	51		 push	 ecx
  00913	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv417[ebp], 1116
  0091a	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv425[ebp]
  00920	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_local_entity_int_value@@3PAY0BBH@P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*4]
  00927	ff d1		 call	 ecx
$LN35@assign_ent:

; 390  : 	}
; 391  : 
; 392  : 	//
; 393  : 	// Tidy up old group (must be done after gunship_entity and aircrew link set)
; 394  : 	//
; 395  : 
; 396  : 	if (old_group)

  00929	83 7d ec 00	 cmp	 DWORD PTR _old_group$[ebp], 0
  0092d	0f 84 6c 02 00
	00		 je	 $LN5@assign_ent

; 397  : 	{
; 398  : 		notify_campaign_screen (CAMPAIGN_SCREEN_GROUP_REMOVE_MEMBER, old_group);

  00933	8b 45 ec	 mov	 eax, DWORD PTR _old_group$[ebp]
  00936	50		 push	 eax
  00937	6a 08		 push	 8
  00939	e8 00 00 00 00	 call	 ?notify_campaign_screen@@YGHW4CAMPAIGN_SCREEN_MESSAGES@@PAUENTITY@@@Z ; notify_campaign_screen

; 399  : 
; 400  : 		//
; 401  : 		// set all helicopters in old group to "weapons free", and clear "hold position" flag
; 402  : 		//
; 403  : 
; 404  : 		member = get_local_entity_first_child (old_group, LIST_TYPE_MEMBER);

  0093e	83 7d ec 00	 cmp	 DWORD PTR _old_group$[ebp], 0
  00942	74 0a		 je	 SHORT $LN91@assign_ent
  00944	8b 45 ec	 mov	 eax, DWORD PTR _old_group$[ebp]
  00947	8b 08		 mov	 ecx, DWORD PTR [eax]
  00949	89 4d 80	 mov	 DWORD PTR tv440[ebp], ecx
  0094c	eb 24		 jmp	 SHORT $LN92@assign_ent
$LN91@assign_ent:
  0094e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00954	81 c2 f7 00 00
	00		 add	 edx, 247		; 000000f7H
  0095a	52		 push	 edx
  0095b	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00960	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00965	50		 push	 eax
  00966	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0096b	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv440[ebp], 0
$LN92@assign_ent:
  00972	b9 01 00 00 00	 mov	 ecx, 1
  00977	85 c9		 test	 ecx, ecx
  00979	74 0c		 je	 SHORT $LN93@assign_ent
  0097b	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv448[ebp], 25 ; 00000019H
  00985	eb 27		 jmp	 SHORT $LN94@assign_ent
$LN93@assign_ent:
  00987	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  0098d	81 c2 f7 00 00
	00		 add	 edx, 247		; 000000f7H
  00993	52		 push	 edx
  00994	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00999	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  0099e	50		 push	 eax
  0099f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  009a4	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv448[ebp], 0
$LN94@assign_ent:
  009ae	6a 19		 push	 25			; 00000019H
  009b0	8b 4d ec	 mov	 ecx, DWORD PTR _old_group$[ebp]
  009b3	51		 push	 ecx
  009b4	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv440[ebp], 180
  009bb	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv448[ebp]
  009c1	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  009c8	ff d1		 call	 ecx
  009ca	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax
$LN4@assign_ent:

; 405  : 
; 406  : 		while (member)

  009cd	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  009d1	0f 84 c8 01 00
	00		 je	 $LN5@assign_ent

; 407  : 		{
; 408  : 			set_client_server_entity_int_value (member, INT_TYPE_WEAPONS_HOLD, FALSE);

  009d7	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  009db	74 0a		 je	 SHORT $LN95@assign_ent
  009dd	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  009e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  009e2	89 4d 80	 mov	 DWORD PTR tv461[ebp], ecx
  009e5	eb 24		 jmp	 SHORT $LN96@assign_ent
$LN95@assign_ent:
  009e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  009ed	81 c2 fb 00 00
	00		 add	 edx, 251		; 000000fbH
  009f3	52		 push	 edx
  009f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  009f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  009fe	50		 push	 eax
  009ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a04	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv461[ebp], 0
$LN96@assign_ent:
  00a0b	b9 01 00 00 00	 mov	 ecx, 1
  00a10	85 c9		 test	 ecx, ecx
  00a12	74 0c		 je	 SHORT $LN97@assign_ent
  00a14	c7 85 7c ff ff
	ff 11 01 00 00	 mov	 DWORD PTR tv469[ebp], 273 ; 00000111H
  00a1e	eb 27		 jmp	 SHORT $LN98@assign_ent
$LN97@assign_ent:
  00a20	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00a26	81 c2 fb 00 00
	00		 add	 edx, 251		; 000000fbH
  00a2c	52		 push	 edx
  00a2d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a32	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00a37	50		 push	 eax
  00a38	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a3d	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv469[ebp], 0
$LN98@assign_ent:
  00a47	6a 00		 push	 0
  00a49	68 11 01 00 00	 push	 273			; 00000111H
  00a4e	8b 4d f8	 mov	 ecx, DWORD PTR _member$[ebp]
  00a51	51		 push	 ecx
  00a52	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv461[ebp], 2232
  00a59	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv469[ebp]
  00a5f	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00a66	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00a6c	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00a6f	ff d0		 call	 eax

; 409  : 
; 410  : 			set_client_server_entity_int_value (member, INT_TYPE_POSITION_HOLD, FALSE);

  00a71	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00a75	74 0a		 je	 SHORT $LN99@assign_ent
  00a77	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  00a7a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00a7c	89 4d 80	 mov	 DWORD PTR tv483[ebp], ecx
  00a7f	eb 24		 jmp	 SHORT $LN100@assign_ent
$LN99@assign_ent:
  00a81	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00a87	81 c2 fd 00 00
	00		 add	 edx, 253		; 000000fdH
  00a8d	52		 push	 edx
  00a8e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00a93	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00a98	50		 push	 eax
  00a99	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00a9e	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv483[ebp], 0
$LN100@assign_ent:
  00aa5	b9 01 00 00 00	 mov	 ecx, 1
  00aaa	85 c9		 test	 ecx, ecx
  00aac	74 0c		 je	 SHORT $LN101@assign_ent
  00aae	c7 85 7c ff ff
	ff a0 00 00 00	 mov	 DWORD PTR tv491[ebp], 160 ; 000000a0H
  00ab8	eb 27		 jmp	 SHORT $LN102@assign_ent
$LN101@assign_ent:
  00aba	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00ac0	81 c2 fd 00 00
	00		 add	 edx, 253		; 000000fdH
  00ac6	52		 push	 edx
  00ac7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00acc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00ad1	50		 push	 eax
  00ad2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00ad7	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv491[ebp], 0
$LN102@assign_ent:
  00ae1	6a 00		 push	 0
  00ae3	68 a0 00 00 00	 push	 160			; 000000a0H
  00ae8	8b 4d f8	 mov	 ecx, DWORD PTR _member$[ebp]
  00aeb	51		 push	 ecx
  00aec	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv483[ebp], 2232
  00af3	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv491[ebp]
  00af9	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00b00	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00b06	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00b09	ff d0		 call	 eax

; 411  : 
; 412  : 			member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  00b0b	83 7d f8 00	 cmp	 DWORD PTR _member$[ebp], 0
  00b0f	74 0a		 je	 SHORT $LN103@assign_ent
  00b11	8b 45 f8	 mov	 eax, DWORD PTR _member$[ebp]
  00b14	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b16	89 4d 80	 mov	 DWORD PTR tv505[ebp], ecx
  00b19	eb 24		 jmp	 SHORT $LN104@assign_ent
$LN103@assign_ent:
  00b1b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00b21	81 c2 ff 00 00
	00		 add	 edx, 255		; 000000ffH
  00b27	52		 push	 edx
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b2d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00b32	50		 push	 eax
  00b33	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b38	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv505[ebp], 0
$LN104@assign_ent:
  00b3f	b9 01 00 00 00	 mov	 ecx, 1
  00b44	85 c9		 test	 ecx, ecx
  00b46	74 0c		 je	 SHORT $LN105@assign_ent
  00b48	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv513[ebp], 25 ; 00000019H
  00b52	eb 27		 jmp	 SHORT $LN106@assign_ent
$LN105@assign_ent:
  00b54	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00b5a	81 c2 ff 00 00
	00		 add	 edx, 255		; 000000ffH
  00b60	52		 push	 edx
  00b61	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00b66	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00b6b	50		 push	 eax
  00b6c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00b71	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv513[ebp], 0
$LN106@assign_ent:
  00b7b	6a 19		 push	 25			; 00000019H
  00b7d	8b 4d f8	 mov	 ecx, DWORD PTR _member$[ebp]
  00b80	51		 push	 ecx
  00b81	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv505[ebp], 180
  00b88	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv513[ebp]
  00b8e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00b95	ff d1		 call	 ecx
  00b97	89 45 f8	 mov	 DWORD PTR _member$[ebp], eax

; 413  : 		}

  00b9a	e9 2e fe ff ff	 jmp	 $LN4@assign_ent
$LN5@assign_ent:

; 414  : 	}
; 415  : 
; 416  : 	//
; 417  : 	//
; 418  : 	//
; 419  : 
; 420  : 	if (en)

  00b9f	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00ba3	0f 84 62 06 00
	00		 je	 $LN37@assign_ent

; 421  : 	{
; 422  : 		set_client_server_entity_int_value (en, INT_TYPE_PLAYER, ENTITY_PLAYER_REMOTE);

  00ba9	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00bad	74 0a		 je	 SHORT $LN107@assign_ent
  00baf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00bb2	8b 08		 mov	 ecx, DWORD PTR [eax]
  00bb4	89 4d 80	 mov	 DWORD PTR tv526[ebp], ecx
  00bb7	eb 24		 jmp	 SHORT $LN108@assign_ent
$LN107@assign_ent:
  00bb9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00bbf	81 c2 09 01 00
	00		 add	 edx, 265		; 00000109H
  00bc5	52		 push	 edx
  00bc6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00bcb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00bd0	50		 push	 eax
  00bd1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00bd6	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv526[ebp], 0
$LN108@assign_ent:
  00bdd	b9 01 00 00 00	 mov	 ecx, 1
  00be2	85 c9		 test	 ecx, ecx
  00be4	74 0c		 je	 SHORT $LN109@assign_ent
  00be6	c7 85 7c ff ff
	ff 9c 00 00 00	 mov	 DWORD PTR tv534[ebp], 156 ; 0000009cH
  00bf0	eb 27		 jmp	 SHORT $LN110@assign_ent
$LN109@assign_ent:
  00bf2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00bf8	81 c2 09 01 00
	00		 add	 edx, 265		; 00000109H
  00bfe	52		 push	 edx
  00bff	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c04	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00c09	50		 push	 eax
  00c0a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c0f	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv534[ebp], 0
$LN110@assign_ent:
  00c19	6a 02		 push	 2
  00c1b	68 9c 00 00 00	 push	 156			; 0000009cH
  00c20	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00c23	51		 push	 ecx
  00c24	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv526[ebp], 2232
  00c2b	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv534[ebp]
  00c31	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00c38	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00c3e	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00c41	ff d0		 call	 eax

; 423  : 
; 424  : 		debug_log ("Setting gunship_entity (type = %s, index = %d)", get_local_entity_type_name (en), get_local_entity_index (en));

  00c43	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00c47	74 0a		 je	 SHORT $LN111@assign_ent
  00c49	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00c4c	8b 08		 mov	 ecx, DWORD PTR [eax]
  00c4e	89 4d 80	 mov	 DWORD PTR tv551[ebp], ecx
  00c51	eb 24		 jmp	 SHORT $LN112@assign_ent
$LN111@assign_ent:
  00c53	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00c59	81 c2 0b 01 00
	00		 add	 edx, 267		; 0000010bH
  00c5f	52		 push	 edx
  00c60	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00c65	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00c6a	50		 push	 eax
  00c6b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00c70	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv551[ebp], 0
$LN112@assign_ent:
  00c77	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00c7a	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00c80	c1 f9 04	 sar	 ecx, 4
  00c83	51		 push	 ecx
  00c84	6b 55 80 0c	 imul	 edx, DWORD PTR tv551[ebp], 12
  00c88	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?entity_type_database@@3PAUENTITY_TYPE_DATA@@A[edx]
  00c8e	50		 push	 eax
  00c8f	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@POCBAELM@Setting?5gunship_entity?5?$CItype?5?$DN?5@
  00c94	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00c99	83 c4 0c	 add	 esp, 12			; 0000000cH

; 425  : 
; 426  : 		set_valid_helicopter (TRUE);

  00c9c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?valid_helicopter@@3HA, 1 ; valid_helicopter

; 427  : 
; 428  : 		group = get_local_entity_parent (en, LIST_TYPE_MEMBER);

  00ca6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00caa	74 0a		 je	 SHORT $LN113@assign_ent
  00cac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00caf	8b 08		 mov	 ecx, DWORD PTR [eax]
  00cb1	89 4d 80	 mov	 DWORD PTR tv563[ebp], ecx
  00cb4	eb 24		 jmp	 SHORT $LN114@assign_ent
$LN113@assign_ent:
  00cb6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00cbc	81 c2 0f 01 00
	00		 add	 edx, 271		; 0000010fH
  00cc2	52		 push	 edx
  00cc3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00cc8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00ccd	50		 push	 eax
  00cce	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00cd3	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv563[ebp], 0
$LN114@assign_ent:
  00cda	b9 01 00 00 00	 mov	 ecx, 1
  00cdf	85 c9		 test	 ecx, ecx
  00ce1	74 0c		 je	 SHORT $LN115@assign_ent
  00ce3	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv571[ebp], 25 ; 00000019H
  00ced	eb 27		 jmp	 SHORT $LN116@assign_ent
$LN115@assign_ent:
  00cef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00cf5	81 c2 0f 01 00
	00		 add	 edx, 271		; 0000010fH
  00cfb	52		 push	 edx
  00cfc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d01	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00d06	50		 push	 eax
  00d07	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d0c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv571[ebp], 0
$LN116@assign_ent:
  00d16	6a 19		 push	 25			; 00000019H
  00d18	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00d1b	51		 push	 ecx
  00d1c	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv563[ebp], 180
  00d23	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv571[ebp]
  00d29	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00d30	ff d1		 call	 ecx
  00d32	89 45 fc	 mov	 DWORD PTR _group$[ebp], eax

; 429  : 
; 430  : 		// backup pilot log
; 431  : 
; 432  : 		backup_current_player_log();

  00d35	e8 00 00 00 00	 call	 ?backup_current_player_log@@YGXXZ ; backup_current_player_log

; 433  : 		mission_logged = FALSE;

  00d3a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?mission_logged@@3HA, 0

; 434  : 
; 435  : 		//
; 436  : 		// Initialise avionics, cockpits and flight model
; 437  : 		//
; 438  : 
; 439  : 		initialise_flight_dynamics (en);

  00d44	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d47	50		 push	 eax
  00d48	e8 00 00 00 00	 call	 ?initialise_flight_dynamics@@YGXPAUENTITY@@@Z ; initialise_flight_dynamics

; 440  : 
; 441  : 		initialise_avionics ();

  00d4d	e8 00 00 00 00	 call	 ?initialise_avionics@@YGXXZ ; initialise_avionics

; 442  : 
; 443  : 		initialise_cockpits ();

  00d52	e8 00 00 00 00	 call	 ?initialise_cockpits@@YGXXZ ; initialise_cockpits

; 444  : 
; 445  : 		fuel = get_local_entity_float_value (en, FLOAT_TYPE_FUEL_SUPPLY_LEVEL);

  00d57	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00d5b	74 0a		 je	 SHORT $LN117@assign_ent
  00d5d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00d60	8b 08		 mov	 ecx, DWORD PTR [eax]
  00d62	89 4d 80	 mov	 DWORD PTR tv584[ebp], ecx
  00d65	eb 24		 jmp	 SHORT $LN118@assign_ent
$LN117@assign_ent:
  00d67	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00d6d	81 c2 20 01 00
	00		 add	 edx, 288		; 00000120H
  00d73	52		 push	 edx
  00d74	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00d79	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00d7e	50		 push	 eax
  00d7f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00d84	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv584[ebp], 0
$LN118@assign_ent:
  00d8b	b9 01 00 00 00	 mov	 ecx, 1
  00d90	85 c9		 test	 ecx, ecx
  00d92	74 0c		 je	 SHORT $LN119@assign_ent
  00d94	c7 85 7c ff ff
	ff 30 00 00 00	 mov	 DWORD PTR tv592[ebp], 48 ; 00000030H
  00d9e	eb 27		 jmp	 SHORT $LN120@assign_ent
$LN119@assign_ent:
  00da0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00da6	81 c2 20 01 00
	00		 add	 edx, 288		; 00000120H
  00dac	52		 push	 edx
  00dad	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00db2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_float_type_message@@3PBDB ; overload_invalid_float_type_message
  00db7	50		 push	 eax
  00db8	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00dbd	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv592[ebp], 0
$LN120@assign_ent:
  00dc7	6a 30		 push	 48			; 00000030H
  00dc9	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00dcc	51		 push	 ecx
  00dcd	69 55 80 bc 02
	00 00		 imul	 edx, DWORD PTR tv584[ebp], 700
  00dd4	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv592[ebp]
  00dda	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_float_value@@3PAY0KP@P6GMPAUENTITY@@W4FLOAT_TYPES@@@ZA[edx+eax*4]
  00de1	ff d1		 call	 ecx
  00de3	d9 5d e8	 fstp	 DWORD PTR _fuel$[ebp]

; 446  : 
; 447  : 		set_current_flight_dynamics_fuel_weight (fuel);

  00de6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_flight_dynamics@@3PAUDYNAMICS_TYPE@@A ; current_flight_dynamics
  00deb	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _fuel$[ebp]
  00df0	f3 0f 11 80 a4
	24 00 00	 movss	 DWORD PTR [eax+9380], xmm0

; 448  : 
; 449  : 		restore_helicopter_entity (en, NULL, (operational_state_types) get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE));

  00df8	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00dfc	74 0a		 je	 SHORT $LN121@assign_ent
  00dfe	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00e01	8b 08		 mov	 ecx, DWORD PTR [eax]
  00e03	89 4d 80	 mov	 DWORD PTR tv606[ebp], ecx
  00e06	eb 24		 jmp	 SHORT $LN122@assign_ent
$LN121@assign_ent:
  00e08	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00e0e	81 c2 24 01 00
	00		 add	 edx, 292		; 00000124H
  00e14	52		 push	 edx
  00e15	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e1a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00e1f	50		 push	 eax
  00e20	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e25	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv606[ebp], 0
$LN122@assign_ent:
  00e2c	b9 01 00 00 00	 mov	 ecx, 1
  00e31	85 c9		 test	 ecx, ecx
  00e33	74 0c		 je	 SHORT $LN123@assign_ent
  00e35	c7 85 7c ff ff
	ff 97 00 00 00	 mov	 DWORD PTR tv614[ebp], 151 ; 00000097H
  00e3f	eb 27		 jmp	 SHORT $LN124@assign_ent
$LN123@assign_ent:
  00e41	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00e47	81 c2 24 01 00
	00		 add	 edx, 292		; 00000124H
  00e4d	52		 push	 edx
  00e4e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00e53	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00e58	50		 push	 eax
  00e59	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00e5e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv614[ebp], 0
$LN124@assign_ent:
  00e68	68 97 00 00 00	 push	 151			; 00000097H
  00e6d	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00e70	51		 push	 ecx
  00e71	69 55 80 5c 04
	00 00		 imul	 edx, DWORD PTR tv606[ebp], 1116
  00e78	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv614[ebp]
  00e7e	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00e85	ff d1		 call	 ecx
  00e87	50		 push	 eax
  00e88	6a 00		 push	 0
  00e8a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00e8d	52		 push	 edx
  00e8e	e8 00 00 00 00	 call	 ?restore_helicopter_entity@@YGXPAUENTITY@@PAUVEC3D@@W4OPERATIONAL_STATE_TYPES@@@Z ; restore_helicopter_entity

; 450  : 
; 451  : 		//
; 452  : 		// set view mode
; 453  : 		//
; 454  : 
; 455  : 		set_external_view_entity (en);

  00e93	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00e96	50		 push	 eax
  00e97	e8 00 00 00 00	 call	 ?set_external_view_entity@@YGXPAUENTITY@@@Z ; set_external_view_entity

; 456  : 
; 457  : 		notify_local_entity (ENTITY_MESSAGE_SET_CAMERA_ACTION, get_camera_entity (), NULL, CAMERA_ACTION_CHASE);

  00e9c	6a 00		 push	 0
  00e9e	6a 00		 push	 0
  00ea0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?camera_entity@@3PAUENTITY@@A ; camera_entity
  00ea5	50		 push	 eax
  00ea6	6a 2f		 push	 47			; 0000002fH
  00ea8	e8 00 00 00 00	 call	 ?notify_local_entity@@YAHW4ENTITY_MESSAGES@@PAUENTITY@@1ZZ ; notify_local_entity
  00ead	83 c4 10	 add	 esp, 16			; 00000010H

; 458  : 
; 459  : 		reinitialise_virtual_cockpit_view ();

  00eb0	e8 00 00 00 00	 call	 ?reinitialise_virtual_cockpit_view@@YGXXZ ; reinitialise_virtual_cockpit_view

; 460  : 
; 461  : 		set_view_mode (VIEW_MODE_COCKPIT_PANEL_LEVEL_AHEAD);

  00eb5	6a 11		 push	 17			; 00000011H
  00eb7	e8 00 00 00 00	 call	 ?set_view_mode@@YGHW4VIEW_MODES@@@Z ; set_view_mode

; 462  : 
; 463  : 		//
; 464  : 		// set all helicopters in new group to "weapons hold"
; 465  : 		//
; 466  : 
; 467  : 		if (!get_global_simple_avionics ())

  00ebc	83 3d 6c 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+876, 0
  00ec3	0f 85 d1 01 00
	00		 jne	 $LN7@assign_ent

; 468  : 		{
; 469  : 			if (group)

  00ec9	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00ecd	0f 84 c7 01 00
	00		 je	 $LN7@assign_ent

; 470  : 			{
; 471  : 				entity
; 472  : 					*member;
; 473  : 
; 474  : 				member = get_local_entity_first_child (group, LIST_TYPE_MEMBER);

  00ed3	83 7d fc 00	 cmp	 DWORD PTR _group$[ebp], 0
  00ed7	74 0a		 je	 SHORT $LN125@assign_ent
  00ed9	8b 45 fc	 mov	 eax, DWORD PTR _group$[ebp]
  00edc	8b 08		 mov	 ecx, DWORD PTR [eax]
  00ede	89 4d 80	 mov	 DWORD PTR tv637[ebp], ecx
  00ee1	eb 24		 jmp	 SHORT $LN126@assign_ent
$LN125@assign_ent:
  00ee3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00ee9	81 c2 3d 01 00
	00		 add	 edx, 317		; 0000013dH
  00eef	52		 push	 edx
  00ef0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00ef5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00efa	50		 push	 eax
  00efb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f00	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv637[ebp], 0
$LN126@assign_ent:
  00f07	b9 01 00 00 00	 mov	 ecx, 1
  00f0c	85 c9		 test	 ecx, ecx
  00f0e	74 0c		 je	 SHORT $LN127@assign_ent
  00f10	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv645[ebp], 25 ; 00000019H
  00f1a	eb 27		 jmp	 SHORT $LN128@assign_ent
$LN127@assign_ent:
  00f1c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00f22	81 c2 3d 01 00
	00		 add	 edx, 317		; 0000013dH
  00f28	52		 push	 edx
  00f29	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f2e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00f33	50		 push	 eax
  00f34	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f39	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv645[ebp], 0
$LN128@assign_ent:
  00f43	6a 19		 push	 25			; 00000019H
  00f45	8b 4d fc	 mov	 ecx, DWORD PTR _group$[ebp]
  00f48	51		 push	 ecx
  00f49	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv637[ebp], 180
  00f50	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv645[ebp]
  00f56	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_first_child@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  00f5d	ff d1		 call	 ecx
  00f5f	89 45 cc	 mov	 DWORD PTR _member$3[ebp], eax
$LN6@assign_ent:

; 475  : 
; 476  : 				while (member)

  00f62	83 7d cc 00	 cmp	 DWORD PTR _member$3[ebp], 0
  00f66	0f 84 2e 01 00
	00		 je	 $LN7@assign_ent

; 477  : 				{
; 478  : 					set_client_server_entity_int_value (member, INT_TYPE_WEAPONS_HOLD, TRUE);

  00f6c	83 7d cc 00	 cmp	 DWORD PTR _member$3[ebp], 0
  00f70	74 0a		 je	 SHORT $LN129@assign_ent
  00f72	8b 45 cc	 mov	 eax, DWORD PTR _member$3[ebp]
  00f75	8b 08		 mov	 ecx, DWORD PTR [eax]
  00f77	89 4d 80	 mov	 DWORD PTR tv658[ebp], ecx
  00f7a	eb 24		 jmp	 SHORT $LN130@assign_ent
$LN129@assign_ent:
  00f7c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00f82	81 c2 41 01 00
	00		 add	 edx, 321		; 00000141H
  00f88	52		 push	 edx
  00f89	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00f8e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00f93	50		 push	 eax
  00f94	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00f99	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv658[ebp], 0
$LN130@assign_ent:
  00fa0	b9 01 00 00 00	 mov	 ecx, 1
  00fa5	85 c9		 test	 ecx, ecx
  00fa7	74 0c		 je	 SHORT $LN131@assign_ent
  00fa9	c7 85 7c ff ff
	ff 11 01 00 00	 mov	 DWORD PTR tv666[ebp], 273 ; 00000111H
  00fb3	eb 27		 jmp	 SHORT $LN132@assign_ent
$LN131@assign_ent:
  00fb5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  00fbb	81 c2 41 01 00
	00		 add	 edx, 321		; 00000141H
  00fc1	52		 push	 edx
  00fc2	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00fc7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00fcc	50		 push	 eax
  00fcd	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00fd2	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv666[ebp], 0
$LN132@assign_ent:
  00fdc	6a 01		 push	 1
  00fde	68 11 01 00 00	 push	 273			; 00000111H
  00fe3	8b 4d cc	 mov	 ecx, DWORD PTR _member$3[ebp]
  00fe6	51		 push	 ecx
  00fe7	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv658[ebp], 2232
  00fee	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv666[ebp]
  00ff4	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  00ffb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  01001	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  01004	ff d0		 call	 eax

; 479  : 
; 480  : 					member = get_local_entity_child_succ (member, LIST_TYPE_MEMBER);

  01006	83 7d cc 00	 cmp	 DWORD PTR _member$3[ebp], 0
  0100a	74 0a		 je	 SHORT $LN133@assign_ent
  0100c	8b 45 cc	 mov	 eax, DWORD PTR _member$3[ebp]
  0100f	8b 08		 mov	 ecx, DWORD PTR [eax]
  01011	89 4d 80	 mov	 DWORD PTR tv680[ebp], ecx
  01014	eb 24		 jmp	 SHORT $LN134@assign_ent
$LN133@assign_ent:
  01016	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  0101c	81 c2 43 01 00
	00		 add	 edx, 323		; 00000143H
  01022	52		 push	 edx
  01023	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  01028	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0102d	50		 push	 eax
  0102e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01033	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv680[ebp], 0
$LN134@assign_ent:
  0103a	b9 01 00 00 00	 mov	 ecx, 1
  0103f	85 c9		 test	 ecx, ecx
  01041	74 0c		 je	 SHORT $LN135@assign_ent
  01043	c7 85 7c ff ff
	ff 19 00 00 00	 mov	 DWORD PTR tv688[ebp], 25 ; 00000019H
  0104d	eb 27		 jmp	 SHORT $LN136@assign_ent
$LN135@assign_ent:
  0104f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  01055	81 c2 43 01 00
	00		 add	 edx, 323		; 00000143H
  0105b	52		 push	 edx
  0105c	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  01061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  01066	50		 push	 eax
  01067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0106c	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv688[ebp], 0
$LN136@assign_ent:
  01076	6a 19		 push	 25			; 00000019H
  01078	8b 4d cc	 mov	 ecx, DWORD PTR _member$3[ebp]
  0107b	51		 push	 ecx
  0107c	69 55 80 b4 00
	00 00		 imul	 edx, DWORD PTR tv680[ebp], 180
  01083	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv688[ebp]
  01089	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_child_succ@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[edx+eax*4]
  01090	ff d1		 call	 ecx
  01092	89 45 cc	 mov	 DWORD PTR _member$3[ebp], eax

; 481  : 				}

  01095	e9 c8 fe ff ff	 jmp	 $LN6@assign_ent
$LN7@assign_ent:

; 482  : 			}
; 483  : 		}
; 484  : 
; 485  : 		//
; 486  : 		// setup gunship
; 487  : 		//
; 488  : 
; 489  : 		set_client_server_entity_int_value (en, INT_TYPE_UNIQUE_ID, direct_play_get_player_id ());

  0109a	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0109e	74 0a		 je	 SHORT $LN137@assign_ent
  010a0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  010a3	8b 08		 mov	 ecx, DWORD PTR [eax]
  010a5	89 4d 80	 mov	 DWORD PTR tv700[ebp], ecx
  010a8	eb 24		 jmp	 SHORT $LN138@assign_ent
$LN137@assign_ent:
  010aa	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  010b0	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  010b6	52		 push	 edx
  010b7	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  010bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  010c1	50		 push	 eax
  010c2	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  010c7	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv700[ebp], 0
$LN138@assign_ent:
  010ce	b9 01 00 00 00	 mov	 ecx, 1
  010d3	85 c9		 test	 ecx, ecx
  010d5	74 0c		 je	 SHORT $LN139@assign_ent
  010d7	c7 85 7c ff ff
	ff ed 00 00 00	 mov	 DWORD PTR tv708[ebp], 237 ; 000000edH
  010e1	eb 27		 jmp	 SHORT $LN140@assign_ent
$LN139@assign_ent:
  010e3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  010e9	81 c2 4c 01 00
	00		 add	 edx, 332		; 0000014cH
  010ef	52		 push	 edx
  010f0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  010f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  010fa	50		 push	 eax
  010fb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01100	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv708[ebp], 0
$LN140@assign_ent:
  0110a	e8 00 00 00 00	 call	 ?direct_play_get_player_id@@YGHXZ ; direct_play_get_player_id
  0110f	50		 push	 eax
  01110	68 ed 00 00 00	 push	 237			; 000000edH
  01115	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  01118	51		 push	 ecx
  01119	69 55 80 b8 08
	00 00		 imul	 edx, DWORD PTR tv700[ebp], 2232
  01120	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv708[ebp]
  01126	8d 8c c2 00 00
	00 00		 lea	 ecx, DWORD PTR ?fn_set_client_server_entity_int_value@@3PAY1BBH@1P6GXPAUENTITY@@W4INT_TYPES@@H@ZA[edx+eax*8]
  0112d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  01133	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  01136	ff d0		 call	 eax

; 490  : 
; 491  : 		// set gunship sector
; 492  : 		{
; 493  : 			vec3d* pos = get_local_entity_vec3d_ptr (en, VEC3D_TYPE_POSITION);

  01138	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0113c	74 0a		 je	 SHORT $LN141@assign_ent
  0113e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  01141	8b 08		 mov	 ecx, DWORD PTR [eax]
  01143	89 4d 80	 mov	 DWORD PTR tv723[ebp], ecx
  01146	eb 24		 jmp	 SHORT $LN142@assign_ent
$LN141@assign_ent:
  01148	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  0114e	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  01154	52		 push	 edx
  01155	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0115a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0115f	50		 push	 eax
  01160	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  01165	c7 45 80 00 00
	00 00		 mov	 DWORD PTR tv723[ebp], 0
$LN142@assign_ent:
  0116c	b9 01 00 00 00	 mov	 ecx, 1
  01171	85 c9		 test	 ecx, ecx
  01173	74 0c		 je	 SHORT $LN143@assign_ent
  01175	c7 85 7c ff ff
	ff 08 00 00 00	 mov	 DWORD PTR tv731[ebp], 8
  0117f	eb 27		 jmp	 SHORT $LN144@assign_ent
$LN143@assign_ent:
  01181	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??assign_entity_to_user@@YGXPAUENTITY@@@Z@4JA
  01187	81 c2 50 01 00
	00		 add	 edx, 336		; 00000150H
  0118d	52		 push	 edx
  0118e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@EIOOIDFG@c?3?2users?2nhv90?2projects?2eech?2ap@
  01193	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_vec3d_type_message@@3PBDB ; overload_invalid_vec3d_type_message
  01198	50		 push	 eax
  01199	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0119e	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv731[ebp], 0
$LN144@assign_ent:
  011a8	6a 08		 push	 8
  011aa	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  011ad	51		 push	 ecx
  011ae	6b 55 80 60	 imul	 edx, DWORD PTR tv723[ebp], 96
  011b2	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv731[ebp]
  011b8	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_vec3d_ptr@@3PAY0BI@P6GPAUVEC3D@@PAUENTITY@@W4VEC3D_TYPES@@@ZA[edx+eax*4]
  011bf	ff d1		 call	 ecx
  011c1	89 45 c8	 mov	 DWORD PTR _pos$2[ebp], eax

; 494  : 			entity* sec = NULL;

  011c4	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _sec$1[ebp], 0

; 495  : 
; 496  : 			if (pos)

  011cb	83 7d c8 00	 cmp	 DWORD PTR _pos$2[ebp], 0
  011cf	74 18		 je	 SHORT $LN41@assign_ent

; 497  : 			{
; 498  : 				sec = get_local_sector_entity(pos);

  011d1	8b 45 c8	 mov	 eax, DWORD PTR _pos$2[ebp]
  011d4	50		 push	 eax
  011d5	e8 00 00 00 00	 call	 ?get_local_sector_entity@@YGPAUENTITY@@PAUVEC3D@@@Z ; get_local_sector_entity
  011da	89 45 c4	 mov	 DWORD PTR _sec$1[ebp], eax

; 499  : 				gunship_current_sector = (sector *) get_local_entity_data(sec);

  011dd	8b 45 c4	 mov	 eax, DWORD PTR _sec$1[ebp]
  011e0	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  011e3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?gunship_current_sector@@3PAUSECTOR@@A, ecx ; gunship_current_sector
$LN41@assign_ent:

; 500  : 			}
; 501  : 		}
; 502  : 
; 503  : 		if (command_line_tacview_logging && command_line_tacview_logging < 3)

  011e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 0 ; command_line_tacview_logging
  011f0	74 12		 je	 SHORT $LN42@assign_ent
  011f2	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  011f9	7d 09		 jge	 SHORT $LN42@assign_ent

; 504  : 			start_tacview_logging(en);

  011fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  011fe	50		 push	 eax
  011ff	e8 00 00 00 00	 call	 ?start_tacview_logging@@YGXPAUENTITY@@@Z ; start_tacview_logging
$LN42@assign_ent:

; 505  : 
; 506  : 		//
; 507  : 		// Notify campaign screen
; 508  : 		//
; 509  : 
; 510  : 		activate_accept_selections_button ();

  01204	e8 00 00 00 00	 call	 ?activate_accept_selections_button@@YGHXZ ; activate_accept_selections_button

; 511  : 
; 512  : 	}
; 513  : 	else

  01209	eb 22		 jmp	 SHORT $LN43@assign_ent
$LN37@assign_ent:

; 514  : 	{
; 515  : 		set_valid_helicopter (FALSE);

  0120b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?valid_helicopter@@3HA, 0 ; valid_helicopter

; 516  : 
; 517  : 		debug_log ("Setting gunship_entity to NULL");

  01215	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@MCJJJANF@Setting?5gunship_entity?5to?5NULL@
  0121a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0121f	83 c4 04	 add	 esp, 4

; 518  : 
; 519  : 		if (previous)

  01222	83 7d f4 00	 cmp	 DWORD PTR _previous$[ebp], 0
  01226	74 05		 je	 SHORT $LN43@assign_ent

; 520  : 		{
; 521  : 			player_quit_current_task ();

  01228	e8 00 00 00 00	 call	 ?player_quit_current_task@@YGXXZ ; player_quit_current_task
$LN43@assign_ent:

; 522  : 		}
; 523  : 	}
; 524  : 
; 525  : 	//
; 526  : 	//
; 527  : 	//
; 528  : 
; 529  : 	if (ingame_events_flag)

  0122d	83 7d e0 00	 cmp	 DWORD PTR _ingame_events_flag$[ebp], 0
  01231	74 0f		 je	 SHORT $LN44@assign_ent

; 530  : 	{
; 531  : 		push_event (ingame_screen_set_events, "ingame screen events");

  01233	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JNEDHLHL@ingame?5screen?5events@
  01238	68 00 00 00 00	 push	 OFFSET ?ingame_screen_set_events@@YGXXZ ; ingame_screen_set_events
  0123d	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event
$LN44@assign_ent:

; 532  : 	}
; 533  : 
; 534  : 	if (input_events_flag)

  01242	83 7d e4 00	 cmp	 DWORD PTR _input_events_flag$[ebp], 0
  01246	74 0f		 je	 SHORT $LN45@assign_ent

; 535  : 	{
; 536  : 		push_event (set_input_events, "input events");

  01248	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NLMBCFFH@input?5events@
  0124d	68 00 00 00 00	 push	 OFFSET ?set_input_events@@YGXXZ ; set_input_events
  01252	e8 00 00 00 00	 call	 ?push_event@@YGXP6GXXZPBD@Z ; push_event
$LN45@assign_ent:

; 537  : 	}
; 538  : 
; 539  : 	set_comms_data_flow (store_data_flow);

  01257	8b 45 dc	 mov	 eax, DWORD PTR _store_data_flow$[ebp]
  0125a	50		 push	 eax
  0125b	e8 00 00 00 00	 call	 ?set_comms_data_flow@@YGXW4COMMS_DATA_FLOW_TYPES@@@Z ; set_comms_data_flow

; 540  : }

  01260	5f		 pop	 edi
  01261	5e		 pop	 esi
  01262	5b		 pop	 ebx
  01263	8b e5		 mov	 esp, ebp
  01265	5d		 pop	 ebp
  01266	c2 04 00	 ret	 4
?assign_entity_to_user@@YGXPAUENTITY@@@Z ENDP		; assign_entity_to_user
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\helicop.c
;	COMDAT ?set_gunship_entity@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv76 = -76						; size = 4
_pilot_data$1 = -8					; size = 8
_en$ = 8						; size = 4
?set_gunship_entity@@YGXPAUENTITY@@@Z PROC		; set_gunship_entity, COMDAT

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 112  : 	stop_messaging_system (NULL);

  00009	6a 00		 push	 0
  0000b	e8 00 00 00 00	 call	 ?stop_messaging_system@@YGXPAUEVENT@@@Z ; stop_messaging_system

; 113  : 
; 114  : 	debug_log("Setting gunship to %s", get_sub_type_name(en));

  00010	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ?get_sub_type_name@@YGPBDPAUENTITY@@@Z ; get_sub_type_name
  00019	50		 push	 eax
  0001a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DKOCFJIP@Setting?5gunship?5to?5?$CFs@
  0001f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00024	83 c4 08	 add	 esp, 8

; 115  : 
; 116  : 	if (get_comms_model () == COMMS_MODEL_SERVER)

  00027	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A, 0 ; system_comms_model
  0002e	75 0b		 jne	 SHORT $LN2@set_gunshi

; 117  : 	{
; 118  : 		assign_entity_to_user (en);

  00030	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?assign_entity_to_user@@YGXPAUENTITY@@@Z ; assign_entity_to_user

; 119  : 	}
; 120  : 	else

  00039	eb 53		 jmp	 SHORT $LN1@set_gunshi
$LN2@set_gunshi:

; 121  : 	{
; 122  : 		if (en == NULL)

  0003b	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0003f	75 0b		 jne	 SHORT $LN4@set_gunshi

; 123  : 		{
; 124  : 			//
; 125  : 			// client doesn't need confirmation from server if setting g/s to NULL
; 126  : 			//
; 127  : 
; 128  : 			assign_entity_to_user (en);

  00041	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?assign_entity_to_user@@YGXPAUENTITY@@@Z ; assign_entity_to_user

; 129  : 		}
; 130  : 		else

  0004a	eb 42		 jmp	 SHORT $LN1@set_gunshi
$LN4@set_gunshi:

; 131  : 		{
; 132  : 			client_gunship_request_data
; 133  : 				pilot_data;
; 134  : 
; 135  : 			//
; 136  : 			// pack required gunship data
; 137  : 			//
; 138  : 
; 139  : 			pilot_data.gunship_type = global_options.gunship_type;

  0004c	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  00051	89 45 f8	 mov	 DWORD PTR _pilot_data$1[ebp], eax

; 140  : 
; 141  : 			pilot_data.gunship_index = get_local_entity_safe_index (en);

  00054	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00058	74 11		 je	 SHORT $LN7@set_gunshi
  0005a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005d	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00063	c1 f8 04	 sar	 eax, 4
  00066	89 45 b4	 mov	 DWORD PTR tv76[ebp], eax
  00069	eb 07		 jmp	 SHORT $LN8@set_gunshi
$LN7@set_gunshi:
  0006b	c7 45 b4 ff ff
	ff ff		 mov	 DWORD PTR tv76[ebp], -1
$LN8@set_gunshi:
  00072	8b 4d b4	 mov	 ecx, DWORD PTR tv76[ebp]
  00075	89 4d fc	 mov	 DWORD PTR _pilot_data$1[ebp+4], ecx

; 142  : 
; 143  : 			//
; 144  : 			// Send request
; 145  : 			//
; 146  : 
; 147  : 			send_packet (get_server_id (), PACKET_TYPE_CLIENT_GUNSHIP_REQUEST, (unsigned char *) &pilot_data, sizeof (client_gunship_request_data), SEND_TYPE_PERSONAL);

  00078	6a 00		 push	 0
  0007a	6a 08		 push	 8
  0007c	8d 45 f8	 lea	 eax, DWORD PTR _pilot_data$1[ebp]
  0007f	50		 push	 eax
  00080	6a 05		 push	 5
  00082	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?system_server_id@@3KA ; system_server_id
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?send_packet@@YGXKW4PACKET_TYPES@@PAEHW4SEND_TYPES@@@Z ; send_packet
$LN1@set_gunshi:

; 148  : 		}
; 149  : 	}
; 150  : }

  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	5b		 pop	 ebx
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c2 04 00	 ret	 4
?set_gunship_entity@@YGXPAUENTITY@@@Z ENDP		; set_gunship_entity
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?sin@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?sin@@YGMM@Z PROC					; sin, COMDAT

; 284  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 285  : 	return (_CSTD sinf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _sinf
  00019	83 c4 04	 add	 esp, 4

; 286  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?sin@@YGMM@Z ENDP					; sin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?cos@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?cos@@YGMM@Z PROC					; cos, COMDAT

; 77   : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 78   : 	return (_CSTD cosf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _cosf
  00019	83 c4 04	 add	 esp, 4

; 79   : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?cos@@YGMM@Z ENDP					; cos
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _sinf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT

; 749  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 750  :             return (float)sin(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _sin
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 751  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_sinf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _cosf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT

; 648  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 649  :             return (float)cos(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _cos
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 650  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_cosf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
