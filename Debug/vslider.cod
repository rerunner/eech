; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\slider\vslider.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?slider_area@@3PAUUI_OBJECT@@A			; slider_area
_BSS	SEGMENT
?slider_area@@3PAUUI_OBJECT@@A DD 01H DUP (?)		; slider_area
_BSS	ENDS
PUBLIC	?ui_object_vslider_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_vslider_function
PUBLIC	?vslider_move_function@@YGXPAUEVENT@@@Z		; vslider_move_function
PUBLIC	?ui_object_vslider_decrease_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_vslider_decrease_function
PUBLIC	?ui_object_vslider_increase_function@@YGXPAUUI_OBJECT@@PAX@Z ; ui_object_vslider_increase_function
PUBLIC	?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z		; scroll_slider
PUBLIC	?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z	; recalculate_slider_size
PUBLIC	?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z	; recalculate_slider_origin
PUBLIC	?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z	; get_ui_object_vslider
PUBLIC	?set_ui_object_vslider_position@@YGXPAUUI_OBJECT@@M@Z ; set_ui_object_vslider_position
PUBLIC	?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z ; set_ui_object_vslider_virtual_position
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0CA@MEJNDCPE@VSLIDER?3?5can?8t?5find?5slider?5area@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	__real@3f800000
PUBLIC	__real@3f8e000000000000
PUBLIC	__real@3f98000000000000
PUBLIC	__real@3f9e000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_mouse_y@@YGHXZ:PROC			; get_mouse_y
EXTRN	?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z:PROC	; set_event
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?get_screen_height@@YGHPAUSCREEN@@@Z:PROC	; get_screen_height
EXTRN	?get_next_list_position@@YGMPAUUI_OBJECT@@@Z:PROC ; get_next_list_position
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?captured_object@@3PAPAUUI_OBJECT@@A:DWORD	; captured_object
EXTRN	?highlighted_object@@3PAUUI_OBJECT@@A:DWORD	; highlighted_object
EXTRN	?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y_size
EXTRN	?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_y_size
EXTRN	?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_origin
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_association
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_get_ui_object_slider_inc@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_slider_inc
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3f9e000000000000
CONST	SEGMENT
__real@3f9e000000000000 DQ 03f9e000000000000r	; 0.0292969
CONST	ENDS
;	COMDAT __real@3f98000000000000
CONST	SEGMENT
__real@3f98000000000000 DQ 03f98000000000000r	; 0.0234375
CONST	ENDS
;	COMDAT __real@3f8e000000000000
CONST	SEGMENT
__real@3f8e000000000000 DQ 03f8e000000000000r	; 0.0146484
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MEJNDCPE@VSLIDER?3?5can?8t?5find?5slider?5area@
CONST	SEGMENT
??_C@_0CA@MEJNDCPE@VSLIDER?3?5can?8t?5find?5slider?5area@ DB 'VSLIDER: ca'
	DB	'n''t find slider area', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
tv139 = -128						; size = 8
tv191 = -120						; size = 8
tv206 = -112						; size = 8
tv181 = -104						; size = 8
tv204 = -96						; size = 8
tv202 = -88						; size = 8
tv169 = -80						; size = 4
tv140 = -80						; size = 8
tv200 = -76						; size = 4
_slider$ = -8						; size = 4
_py_size$ = -4						; size = 4
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z PROC ; set_ui_object_vslider_virtual_position, COMDAT

; 575  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 576  : 
; 577  : 	float
; 578  : 		py_size;
; 579  : 
; 580  : 	ui_object
; 581  : 		*slider;
; 582  : 
; 583  : 	slider = get_ui_object_association (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 f8	 mov	 DWORD PTR _slider$[ebp], eax

; 584  : 
; 585  : 	py_size = get_screen_height (video_screen) / get_ui_object_y_size (obj);

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  0002c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00037	8b 02		 mov	 eax, DWORD PTR [edx]
  00039	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  00040	f3 0f 11 45 b4	 movss	 DWORD PTR tv200[ebp], xmm0
  00045	ff d1		 call	 ecx
  00047	d9 5d b0	 fstp	 DWORD PTR tv169[ebp]
  0004a	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv200[ebp]
  0004f	f3 0f 5e 45 b0	 divss	 xmm0, DWORD PTR tv169[ebp]
  00054	f3 0f 11 45 fc	 movss	 DWORD PTR _py_size$[ebp], xmm0

; 586  : 
; 587  : 	pos = bound (pos, UI_SLIDER_VIRTUAL_HEIGHT * py_size, (1.0 - (UI_SLIDER_VIRTUAL_HEIGHT * py_size)) - get_ui_object_virtual_y_size (slider));

  00059	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  0005e	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _py_size$[ebp]
  00063	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3f8e000000000000
  0006b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0006f	76 17		 jbe	 SHORT $LN5@set_ui_obj
  00071	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _py_size$[ebp]
  00076	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0007e	f2 0f 11 45 b0	 movsd	 QWORD PTR tv140[ebp], xmm0
  00083	e9 aa 00 00 00	 jmp	 $LN6@set_ui_obj
$LN5@set_ui_obj:
  00088	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  0008d	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _py_size$[ebp]
  00092	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3f8e000000000000
  0009a	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3ff0000000000000
  000a2	f2 0f 5c d1	 subsd	 xmm2, xmm1
  000a6	8b 45 f8	 mov	 eax, DWORD PTR _slider$[ebp]
  000a9	50		 push	 eax
  000aa	8b 4d f8	 mov	 ecx, DWORD PTR _slider$[ebp]
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000b6	f2 0f 11 45 a8	 movsd	 QWORD PTR tv202[ebp], xmm0
  000bb	f2 0f 11 55 a0	 movsd	 QWORD PTR tv204[ebp], xmm2
  000c0	ff d0		 call	 eax
  000c2	dd 5d 98	 fstp	 QWORD PTR tv181[ebp]
  000c5	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv204[ebp]
  000ca	f2 0f 5c 45 98	 subsd	 xmm0, QWORD PTR tv181[ebp]
  000cf	f2 0f 10 4d a8	 movsd	 xmm1, QWORD PTR tv202[ebp]
  000d4	66 0f 2f c8	 comisd	 xmm1, xmm0
  000d8	76 44		 jbe	 SHORT $LN3@set_ui_obj
  000da	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _py_size$[ebp]
  000df	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000e7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  000ef	f2 0f 5c c8	 subsd	 xmm1, xmm0
  000f3	8b 4d f8	 mov	 ecx, DWORD PTR _slider$[ebp]
  000f6	51		 push	 ecx
  000f7	8b 55 f8	 mov	 edx, DWORD PTR _slider$[ebp]
  000fa	8b 02		 mov	 eax, DWORD PTR [edx]
  000fc	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  00103	f2 0f 11 4d 90	 movsd	 QWORD PTR tv206[ebp], xmm1
  00108	ff d1		 call	 ecx
  0010a	dd 5d 88	 fstp	 QWORD PTR tv191[ebp]
  0010d	f2 0f 10 45 90	 movsd	 xmm0, QWORD PTR tv206[ebp]
  00112	f2 0f 5c 45 88	 subsd	 xmm0, QWORD PTR tv191[ebp]
  00117	f2 0f 11 45 80	 movsd	 QWORD PTR tv139[ebp], xmm0
  0011c	eb 0a		 jmp	 SHORT $LN4@set_ui_obj
$LN3@set_ui_obj:
  0011e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00123	f2 0f 11 45 80	 movsd	 QWORD PTR tv139[ebp], xmm0
$LN4@set_ui_obj:
  00128	f2 0f 10 45 80	 movsd	 xmm0, QWORD PTR tv139[ebp]
  0012d	f2 0f 11 45 b0	 movsd	 QWORD PTR tv140[ebp], xmm0
$LN6@set_ui_obj:
  00132	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv140[ebp]
  00137	f3 0f 11 45 0c	 movss	 DWORD PTR _pos$[ebp], xmm0

; 588  : 
; 589  : 	set_ui_object_virtual_y (slider, pos);

  0013c	51		 push	 ecx
  0013d	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _pos$[ebp]
  00142	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00147	8b 45 f8	 mov	 eax, DWORD PTR _slider$[ebp]
  0014a	50		 push	 eax
  0014b	8b 4d f8	 mov	 ecx, DWORD PTR _slider$[ebp]
  0014e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00150	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00157	ff d0		 call	 eax

; 590  : 
; 591  : 	recalculate_slider_origin (obj);

  00159	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin

; 592  : }

  00162	5f		 pop	 edi
  00163	5e		 pop	 esi
  00164	5b		 pop	 ebx
  00165	8b e5		 mov	 esp, ebp
  00167	5d		 pop	 ebp
  00168	c2 08 00	 ret	 8
?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_ui_object_vslider_virtual_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?set_ui_object_vslider_position@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
tv133 = -132						; size = 8
tv175 = -124						; size = 8
tv188 = -116						; size = 8
tv167 = -108						; size = 8
tv186 = -100						; size = 8
tv184 = -92						; size = 8
tv134 = -84						; size = 8
_slider$ = -12						; size = 4
_max$ = -8						; size = 4
_min$ = -4						; size = 4
_obj$ = 8						; size = 4
_pos$ = 12						; size = 4
?set_ui_object_vslider_position@@YGXPAUUI_OBJECT@@M@Z PROC ; set_ui_object_vslider_position, COMDAT

; 549  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 550  : 
; 551  : 	float
; 552  : 		min,
; 553  : 		max;
; 554  : 
; 555  : 	ui_object
; 556  : 		*slider;
; 557  : 
; 558  : 	slider = get_ui_object_association (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 f4	 mov	 DWORD PTR _slider$[ebp], eax

; 559  : 
; 560  : 	min = 0.0;

  00021	0f 57 c0	 xorps	 xmm0, xmm0
  00024	f3 0f 11 45 fc	 movss	 DWORD PTR _min$[ebp], xmm0

; 561  : 	max = get_ui_object_y_size (obj);

  00029	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00039	ff d0		 call	 eax
  0003b	d9 5d f8	 fstp	 DWORD PTR _max$[ebp]

; 562  : 	
; 563  : 	pos = bound (pos, min + UI_SLIDER_VIRTUAL_HEIGHT, max - UI_SLIDER_VIRTUAL_HEIGHT - get_ui_object_y_size (slider));

  0003e	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00043	f3 0f 5a 4d fc	 cvtss2sd xmm1, DWORD PTR _min$[ebp]
  00048	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3f8e000000000000
  00050	66 0f 2f c8	 comisd	 xmm1, xmm0
  00054	76 17		 jbe	 SHORT $LN5@set_ui_obj
  00056	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _min$[ebp]
  0005b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00063	f2 0f 11 45 ac	 movsd	 QWORD PTR tv134[ebp], xmm0
  00068	e9 9b 00 00 00	 jmp	 $LN6@set_ui_obj
$LN5@set_ui_obj:
  0006d	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00072	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _max$[ebp]
  00077	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@3f8e000000000000
  0007f	8b 45 f4	 mov	 eax, DWORD PTR _slider$[ebp]
  00082	50		 push	 eax
  00083	8b 4d f4	 mov	 ecx, DWORD PTR _slider$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008f	f2 0f 11 45 a4	 movsd	 QWORD PTR tv184[ebp], xmm0
  00094	f2 0f 11 4d 9c	 movsd	 QWORD PTR tv186[ebp], xmm1
  00099	ff d0		 call	 eax
  0009b	dd 5d 94	 fstp	 QWORD PTR tv167[ebp]
  0009e	f2 0f 10 45 9c	 movsd	 xmm0, QWORD PTR tv186[ebp]
  000a3	f2 0f 5c 45 94	 subsd	 xmm0, QWORD PTR tv167[ebp]
  000a8	f2 0f 10 4d a4	 movsd	 xmm1, QWORD PTR tv184[ebp]
  000ad	66 0f 2f c8	 comisd	 xmm1, xmm0
  000b1	76 3b		 jbe	 SHORT $LN3@set_ui_obj
  000b3	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _max$[ebp]
  000b8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000c0	8b 4d f4	 mov	 ecx, DWORD PTR _slider$[ebp]
  000c3	51		 push	 ecx
  000c4	8b 55 f4	 mov	 edx, DWORD PTR _slider$[ebp]
  000c7	8b 02		 mov	 eax, DWORD PTR [edx]
  000c9	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000d0	f2 0f 11 45 8c	 movsd	 QWORD PTR tv188[ebp], xmm0
  000d5	ff d1		 call	 ecx
  000d7	dd 5d 84	 fstp	 QWORD PTR tv175[ebp]
  000da	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv188[ebp]
  000df	f2 0f 5c 45 84	 subsd	 xmm0, QWORD PTR tv175[ebp]
  000e4	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv133[ebp], xmm0
  000ec	eb 0d		 jmp	 SHORT $LN4@set_ui_obj
$LN3@set_ui_obj:
  000ee	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  000f3	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv133[ebp], xmm0
$LN4@set_ui_obj:
  000fb	f2 0f 10 85 7c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv133[ebp]
  00103	f2 0f 11 45 ac	 movsd	 QWORD PTR tv134[ebp], xmm0
$LN6@set_ui_obj:
  00108	f2 0f 5a 45 ac	 cvtsd2ss xmm0, QWORD PTR tv134[ebp]
  0010d	f3 0f 11 45 0c	 movss	 DWORD PTR _pos$[ebp], xmm0

; 564  : 
; 565  : 	set_ui_object_y (slider, pos);

  00112	51		 push	 ecx
  00113	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _pos$[ebp]
  00118	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011d	8b 45 f4	 mov	 eax, DWORD PTR _slider$[ebp]
  00120	50		 push	 eax
  00121	8b 4d f4	 mov	 ecx, DWORD PTR _slider$[ebp]
  00124	8b 11		 mov	 edx, DWORD PTR [ecx]
  00126	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0012d	ff d0		 call	 eax

; 566  : 
; 567  : 	recalculate_slider_origin (obj);

  0012f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00132	50		 push	 eax
  00133	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin

; 568  : }

  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
  0013b	8b e5		 mov	 esp, ebp
  0013d	5d		 pop	 ebp
  0013e	c2 08 00	 ret	 8
?set_ui_object_vslider_position@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_ui_object_vslider_position
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z
_TEXT	SEGMENT
_this_obj$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z PROC	; get_ui_object_vslider, COMDAT

; 522  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 523  : 
; 524  : 	ui_object
; 525  : 		*this_obj;
; 526  : 
; 527  : 	this_obj = get_ui_object_child (obj);

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _this_obj$[ebp], eax
$LN2@get_ui_obj:

; 528  : 	
; 529  :   	while (this_obj)

  0001e	83 7d fc 00	 cmp	 DWORD PTR _this_obj$[ebp], 0
  00022	74 24		 je	 SHORT $LN3@get_ui_obj

; 530  : 	{
; 531  : 
; 532  : 		if (get_ui_object_type (this_obj) == UI_TYPE_VSLIDER)

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this_obj$[ebp]
  00027	83 38 08	 cmp	 DWORD PTR [eax], 8
  0002a	75 05		 jne	 SHORT $LN4@get_ui_obj

; 533  : 		{
; 534  : 
; 535  : 			return this_obj;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _this_obj$[ebp]
  0002f	eb 19		 jmp	 SHORT $LN1@get_ui_obj
$LN4@get_ui_obj:

; 536  : 		}
; 537  : 
; 538  : 		this_obj = get_ui_object_next (this_obj);

  00031	8b 45 fc	 mov	 eax, DWORD PTR _this_obj$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _this_obj$[ebp]
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00041	ff d0		 call	 eax
  00043	89 45 fc	 mov	 DWORD PTR _this_obj$[ebp], eax

; 539  : 	}

  00046	eb d6		 jmp	 SHORT $LN2@get_ui_obj
$LN3@get_ui_obj:

; 540  : 
; 541  : 	return NULL;

  00048	33 c0		 xor	 eax, eax
$LN1@get_ui_obj:

; 542  : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z ENDP	; get_ui_object_vslider
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv371 = -124						; size = 8
tv267 = -116						; size = 8
tv338 = -112						; size = 4
tv327 = -112						; size = 4
tv314 = -112						; size = 4
tv306 = -112						; size = 4
$T1 = -108						; size = 4
_total_slider_y_size$ = -40				; size = 4
_slider_y_size$ = -36					; size = 4
_y_origin$ = -32					; size = 4
_slider_y$ = -28					; size = 4
_overhang$ = -24					; size = 4
_object_y_size$ = -20					; size = 4
_object_y$ = -16					; size = 4
_object_to_slide$ = -12					; size = 4
_slider_area$ = -8					; size = 4
_parent$ = -4						; size = 4
_slider_object$ = 8					; size = 4
?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z PROC	; recalculate_slider_origin, COMDAT

; 406  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 7c	 sub	 esp, 124		; 0000007cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 407  : 
; 408  : 	ui_object
; 409  : 		*parent,
; 410  : 		*slider_area,
; 411  : 		*object_to_slide;
; 412  : 
; 413  : 	float
; 414  : 		object_y,
; 415  : 		object_y_size,
; 416  : 		overhang,
; 417  : 		slider_y,
; 418  : 		y_origin,
; 419  : 		slider_y_size,
; 420  : 		total_slider_y_size;
; 421  : 
; 422  : 	total_slider_y_size = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 d8	 movss	 DWORD PTR _total_slider_y_size$[ebp], xmm0

; 423  : 	
; 424  : 	// get the slider area
; 425  : 
; 426  : 	slider_area = get_ui_object_association (slider_object);

  00011	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00014	50		 push	 eax
  00015	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 f8	 mov	 DWORD PTR _slider_area$[ebp], eax

; 427  : 
; 428  : 	if (!slider_area)

  00026	83 7d f8 00	 cmp	 DWORD PTR _slider_area$[ebp], 0
  0002a	75 12		 jne	 SHORT $LN6@recalculat

; 429  : 	{
; 430  : 
; 431  : 		debug_log ("VSLIDER: can't find slider area");

  0002c	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MEJNDCPE@VSLIDER?3?5can?8t?5find?5slider?5area@
  00031	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00036	83 c4 04	 add	 esp, 4

; 432  : 
; 433  : 		return;

  00039	e9 b1 02 00 00	 jmp	 $LN1@recalculat
$LN6@recalculat:

; 434  : 	}
; 435  : 
; 436  : 	// get the slider size
; 437  : 
; 438  : 	slider_y = get_ui_object_y (slider_object);

  0003e	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00041	50		 push	 eax
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00045	8b 11		 mov	 edx, DWORD PTR [ecx]
  00047	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0004e	ff d0		 call	 eax
  00050	d9 5d e4	 fstp	 DWORD PTR _slider_y$[ebp]

; 439  : 
; 440  : 	slider_y_size = get_ui_object_y_size (slider_object) - (2 * UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen));

  00053	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00056	50		 push	 eax
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0005a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00063	ff d0		 call	 eax
  00065	dd 5d 8c	 fstp	 QWORD PTR tv267[ebp]
  00068	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv267[ebp]
  0006d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00073	51		 push	 ecx
  00074	f2 0f 11 45 84	 movsd	 QWORD PTR tv371[ebp], xmm0
  00079	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  0007e	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00082	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f9e000000000000
  0008a	f2 0f 10 4d 84	 movsd	 xmm1, QWORD PTR tv371[ebp]
  0008f	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00093	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00097	f3 0f 11 45 dc	 movss	 DWORD PTR _slider_y_size$[ebp], xmm0

; 441  : 
; 442  : 	// get total "objects to slide" size
; 443  : 
; 444  : 	parent = get_ui_object_parent (slider_object);

  0009c	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0009f	50		 push	 eax
  000a0	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  000a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000ac	ff d0		 call	 eax
  000ae	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 445  : 
; 446  : 	object_to_slide = get_ui_object_child (parent);

  000b1	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  000b4	50		 push	 eax
  000b5	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  000b8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ba	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000c1	ff d0		 call	 eax
  000c3	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax
$LN2@recalculat:

; 447  : 
; 448  : 	while (object_to_slide)

  000c6	83 7d f4 00	 cmp	 DWORD PTR _object_to_slide$[ebp], 0
  000ca	0f 84 89 00 00
	00		 je	 $LN3@recalculat

; 449  : 	{
; 450  : 
; 451  : 		if (get_ui_object_type (object_to_slide) != UI_TYPE_VSLIDER)

  000d0	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000d3	83 38 08	 cmp	 DWORD PTR [eax], 8
  000d6	74 67		 je	 SHORT $LN9@recalculat

; 452  : 		{
; 453  : 	
; 454  : 			object_y = get_ui_object_y (object_to_slide);

  000d8	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000e8	ff d0		 call	 eax
  000ea	d9 5d f0	 fstp	 DWORD PTR _object_y$[ebp]

; 455  : 			object_y_size = get_ui_object_y_size (object_to_slide);

  000ed	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  000f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000fd	ff d0		 call	 eax
  000ff	d9 5d ec	 fstp	 DWORD PTR _object_y_size$[ebp]

; 456  : 
; 457  : 			if (get_ui_object_type (object_to_slide) == UI_TYPE_LIST_BOX)

  00102	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  00105	83 38 0d	 cmp	 DWORD PTR [eax], 13	; 0000000dH
  00108	75 0c		 jne	 SHORT $LN8@recalculat

; 458  : 			{
; 459  : 
; 460  : 				object_y_size = get_next_list_position (object_to_slide);

  0010a	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 ?get_next_list_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_position
  00113	d9 5d ec	 fstp	 DWORD PTR _object_y_size$[ebp]
$LN8@recalculat:

; 461  : 			}
; 462  : 	
; 463  : 			if (total_slider_y_size < (object_y - slider_y + object_y_size))

  00116	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _object_y$[ebp]
  0011b	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _slider_y$[ebp]
  00120	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _object_y_size$[ebp]
  00125	0f 2f 45 d8	 comiss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  00129	76 14		 jbe	 SHORT $LN9@recalculat

; 464  : 			{
; 465  : 	
; 466  : 				total_slider_y_size = (object_y - slider_y + object_y_size);

  0012b	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _object_y$[ebp]
  00130	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _slider_y$[ebp]
  00135	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _object_y_size$[ebp]
  0013a	f3 0f 11 45 d8	 movss	 DWORD PTR _total_slider_y_size$[ebp], xmm0
$LN9@recalculat:

; 467  : 			}
; 468  : 		}
; 469  : 
; 470  : 		object_to_slide = get_ui_object_next (object_to_slide);

  0013f	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  00142	50		 push	 eax
  00143	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  00146	8b 11		 mov	 edx, DWORD PTR [ecx]
  00148	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0014f	ff d0		 call	 eax
  00151	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax

; 471  : 	}

  00154	e9 6d ff ff ff	 jmp	 $LN2@recalculat
$LN3@recalculat:

; 472  : 
; 473  : 	if (total_slider_y_size > get_ui_object_y_size (slider_object))

  00159	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0015c	50		 push	 eax
  0015d	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00160	8b 11		 mov	 edx, DWORD PTR [ecx]
  00162	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00169	ff d0		 call	 eax
  0016b	d9 5d 90	 fstp	 DWORD PTR tv306[ebp]
  0016e	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  00173	0f 2f 45 90	 comiss	 xmm0, DWORD PTR tv306[ebp]
  00177	0f 86 0c 01 00
	00		 jbe	 $LN10@recalculat

; 474  : 	{
; 475  : 
; 476  : 		// find amount the object overhang by
; 477  : 
; 478  : 		overhang = total_slider_y_size - get_ui_object_y_size (slider_object);

  0017d	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00180	50		 push	 eax
  00181	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00184	8b 11		 mov	 edx, DWORD PTR [ecx]
  00186	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0018d	ff d0		 call	 eax
  0018f	d9 5d 90	 fstp	 DWORD PTR tv314[ebp]
  00192	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  00197	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR tv314[ebp]
  0019c	f3 0f 11 45 e8	 movss	 DWORD PTR _overhang$[ebp], xmm0

; 479  : 
; 480  : 		// object_to_slide origin based on slider_area position
; 481  : 
; 482  : 		y_origin = get_ui_object_y (slider_area);

  001a1	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  001a4	50		 push	 eax
  001a5	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  001a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001aa	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001b1	ff d0		 call	 eax
  001b3	d9 5d e0	 fstp	 DWORD PTR _y_origin$[ebp]

; 483  : 		y_origin -= get_ui_object_y (slider_object);

  001b6	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  001b9	50		 push	 eax
  001ba	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  001bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001c6	ff d0		 call	 eax
  001c8	d9 5d 90	 fstp	 DWORD PTR tv327[ebp]
  001cb	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  001d0	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR tv327[ebp]
  001d5	f3 0f 11 45 e0	 movss	 DWORD PTR _y_origin$[ebp], xmm0

; 484  : 		y_origin -= UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen);

  001da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  001e5	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001e9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  001f1	f3 0f 5a 4d e0	 cvtss2sd xmm1, DWORD PTR _y_origin$[ebp]
  001f6	f2 0f 5c c8	 subsd	 xmm1, xmm0
  001fa	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  001fe	f3 0f 11 45 e0	 movss	 DWORD PTR _y_origin$[ebp], xmm0

; 485  : 		y_origin /= (slider_y_size - get_ui_object_y_size (slider_area));

  00203	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  00206	50		 push	 eax
  00207	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  0020a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00213	ff d0		 call	 eax
  00215	d9 5d 90	 fstp	 DWORD PTR tv338[ebp]
  00218	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _slider_y_size$[ebp]
  0021d	f3 0f 5c 45 90	 subss	 xmm0, DWORD PTR tv338[ebp]
  00222	f3 0f 10 4d e0	 movss	 xmm1, DWORD PTR _y_origin$[ebp]
  00227	f3 0f 5e c8	 divss	 xmm1, xmm0
  0022b	f3 0f 11 4d e0	 movss	 DWORD PTR _y_origin$[ebp], xmm1

; 486  : 		y_origin *= overhang;

  00230	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  00235	f3 0f 59 45 e8	 mulss	 xmm0, DWORD PTR _overhang$[ebp]
  0023a	f3 0f 11 45 e0	 movss	 DWORD PTR _y_origin$[ebp], xmm0

; 487  : 
; 488  : 		y_origin = max (y_origin, 0.0f);

  0023f	0f 57 c0	 xorps	 xmm0, xmm0
  00242	f3 0f 11 45 94	 movss	 DWORD PTR $T1[ebp], xmm0
  00247	8d 45 94	 lea	 eax, DWORD PTR $T1[ebp]
  0024a	50		 push	 eax
  0024b	8d 4d e0	 lea	 ecx, DWORD PTR _y_origin$[ebp]
  0024e	51		 push	 ecx
  0024f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00254	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00258	f3 0f 11 45 e0	 movss	 DWORD PTR _y_origin$[ebp], xmm0

; 489  : 
; 490  : 		// set 'object_to_slide' origins
; 491  : 
; 492  : 		parent = get_ui_object_parent (slider_object);

  0025d	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00260	50		 push	 eax
  00261	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00264	8b 11		 mov	 edx, DWORD PTR [ecx]
  00266	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0026d	ff d0		 call	 eax
  0026f	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 493  : 
; 494  : 		object_to_slide = get_ui_object_child (parent);

  00272	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  00275	50		 push	 eax
  00276	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  00279	8b 11		 mov	 edx, DWORD PTR [ecx]
  0027b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00282	ff d0		 call	 eax
  00284	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax

; 495  : 	}
; 496  : 	else

  00287	eb 08		 jmp	 SHORT $LN11@recalculat
$LN10@recalculat:

; 497  : 	{
; 498  : 
; 499  : 		y_origin = 0.0;

  00289	0f 57 c0	 xorps	 xmm0, xmm0
  0028c	f3 0f 11 45 e0	 movss	 DWORD PTR _y_origin$[ebp], xmm0
$LN11@recalculat:

; 500  : 	}
; 501  : 
; 502  : 	object_to_slide = get_ui_object_child (parent);

  00291	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  00294	50		 push	 eax
  00295	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  00298	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002a1	ff d0		 call	 eax
  002a3	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax
$LN4@recalculat:

; 503  : 
; 504  : 	while (object_to_slide)

  002a6	83 7d f4 00	 cmp	 DWORD PTR _object_to_slide$[ebp], 0
  002aa	74 43		 je	 SHORT $LN5@recalculat

; 505  : 	{
; 506  : 
; 507  : 		if (get_ui_object_type (object_to_slide) != UI_TYPE_VSLIDER)

  002ac	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  002af	83 38 08	 cmp	 DWORD PTR [eax], 8
  002b2	74 24		 je	 SHORT $LN12@recalculat

; 508  : 		{
; 509  : 
; 510  : 			set_ui_object_y_origin (object_to_slide, -y_origin);

  002b4	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y_origin$[ebp]
  002b9	0f 57 05 00 00
	00 00		 xorps	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  002c0	51		 push	 ecx
  002c1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c6	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  002c9	50		 push	 eax
  002ca	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  002cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  002cf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y_origin@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  002d6	ff d0		 call	 eax
$LN12@recalculat:

; 511  : 		}
; 512  : 
; 513  : 		object_to_slide = get_ui_object_next (object_to_slide);

  002d8	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  002db	50		 push	 eax
  002dc	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  002df	8b 11		 mov	 edx, DWORD PTR [ecx]
  002e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002e8	ff d0		 call	 eax
  002ea	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax

; 514  : 	}

  002ed	eb b7		 jmp	 SHORT $LN4@recalculat
$LN5@recalculat:
$LN1@recalculat:

; 515  : }

  002ef	5f		 pop	 edi
  002f0	5e		 pop	 esi
  002f1	5b		 pop	 ebx
  002f2	8b e5		 mov	 esp, ebp
  002f4	5d		 pop	 ebp
  002f5	c2 04 00	 ret	 4
?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ENDP	; recalculate_slider_origin
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv552 = -216						; size = 4
tv606 = -212						; size = 4
tv545 = -208						; size = 4
tv284 = -204						; size = 8
tv604 = -196						; size = 8
tv535 = -188						; size = 8
tv602 = -180						; size = 8
tv524 = -172						; size = 8
tv600 = -164						; size = 8
tv516 = -156						; size = 4
tv598 = -152						; size = 4
tv509 = -148						; size = 4
tv285 = -144						; size = 8
tv596 = -136						; size = 8
tv197 = -136						; size = 4
tv590 = -132						; size = 8
tv584 = -132						; size = 8
tv199 = -132						; size = 8
tv496 = -128						; size = 4
tv608 = -124						; size = 8
tv594 = -124						; size = 4
tv592 = -124						; size = 8
tv392 = -124						; size = 8
tv560 = -120						; size = 4
tv489 = -120						; size = 4
tv476 = -120						; size = 4
tv459 = -120						; size = 4
tv451 = -120						; size = 4
tv440 = -120						; size = 4
tv407 = -120						; size = 4
_new_slider_y$1 = -52					; size = 4
_total_slider_y_size$ = -48				; size = 4
_new_slider_virtual_size$ = -44				; size = 4
_new_slider_size$ = -40					; size = 4
_virtual_slider_y_size$ = -36				; size = 4
_slider_y_size$ = -32					; size = 4
_slider_y$ = -28					; size = 4
_object_y_size$ = -24					; size = 4
_object_y$ = -20					; size = 4
_overhang$ = -16					; size = 4
_object_to_slide$ = -12					; size = 4
_slider_area$ = -8					; size = 4
_parent$ = -4						; size = 4
_slider_object$ = 8					; size = 4
?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z PROC	; recalculate_slider_size, COMDAT

; 287  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 288  : 
; 289  : 	ui_object
; 290  : 		*parent,
; 291  : 		*slider_area,
; 292  : 		*object_to_slide;
; 293  : 
; 294  : 	float
; 295  : 		overhang,
; 296  : 		object_y,
; 297  : 		object_y_size,
; 298  : 		slider_y,
; 299  : 		slider_y_size,
; 300  : 		virtual_slider_y_size,
; 301  : 		new_slider_size,
; 302  : 		new_slider_virtual_size,
; 303  : 		total_slider_y_size;
; 304  : 
; 305  : 	total_slider_y_size = 0.0;

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 d0	 movss	 DWORD PTR _total_slider_y_size$[ebp], xmm0

; 306  : 	
; 307  : 	// get the slider area
; 308  : 
; 309  : 	slider_area = get_ui_object_association (slider_object);

  00014	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00017	50		 push	 eax
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00024	ff d0		 call	 eax
  00026	89 45 f8	 mov	 DWORD PTR _slider_area$[ebp], eax

; 310  : 
; 311  : 	// get the slider size
; 312  : 
; 313  : 	slider_y = get_ui_object_y (slider_object);

  00029	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0002c	50		 push	 eax
  0002d	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00030	8b 11		 mov	 edx, DWORD PTR [ecx]
  00032	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00039	ff d0		 call	 eax
  0003b	d9 5d e4	 fstp	 DWORD PTR _slider_y$[ebp]

; 314  : 
; 315  : 	slider_y_size = get_ui_object_y_size (slider_object) - (2.0 * (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen)));

  0003e	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00041	50		 push	 eax
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00045	8b 11		 mov	 edx, DWORD PTR [ecx]
  00047	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0004e	ff d0		 call	 eax
  00050	dd 5d 84	 fstp	 QWORD PTR tv392[ebp]
  00053	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv392[ebp]
  00058	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0005e	51		 push	 ecx
  0005f	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv590[ebp], xmm0
  00067	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  0006c	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00070	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00078	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4000000000000000
  00080	f2 0f 10 8d 7c
	ff ff ff	 movsd	 xmm1, QWORD PTR tv590[ebp]
  00088	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0008c	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00090	f3 0f 11 45 e0	 movss	 DWORD PTR _slider_y_size$[ebp], xmm0

; 316  : 
; 317  : 	// get total "objects to slide" size
; 318  : 
; 319  : 	parent = get_ui_object_parent (slider_object);

  00095	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00098	50		 push	 eax
  00099	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0009c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000a5	ff d0		 call	 eax
  000a7	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 320  : 
; 321  : 	virtual_slider_y_size = slider_y_size / get_ui_object_y_size (parent);

  000aa	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  000ad	50		 push	 eax
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  000b1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ba	ff d0		 call	 eax
  000bc	d9 5d 88	 fstp	 DWORD PTR tv407[ebp]
  000bf	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _slider_y_size$[ebp]
  000c4	f3 0f 5e 45 88	 divss	 xmm0, DWORD PTR tv407[ebp]
  000c9	f3 0f 11 45 dc	 movss	 DWORD PTR _virtual_slider_y_size$[ebp], xmm0

; 322  : 
; 323  : 	object_to_slide = get_ui_object_child (parent);

  000ce	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  000d1	50		 push	 eax
  000d2	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  000d5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  000de	ff d0		 call	 eax
  000e0	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax
$LN2@recalculat:

; 324  : 
; 325  : 	while (object_to_slide)

  000e3	83 7d f4 00	 cmp	 DWORD PTR _object_to_slide$[ebp], 0
  000e7	0f 84 89 00 00
	00		 je	 $LN3@recalculat

; 326  : 	{
; 327  : 
; 328  : 		if (get_ui_object_type (object_to_slide) != UI_TYPE_VSLIDER)

  000ed	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000f0	83 38 08	 cmp	 DWORD PTR [eax], 8
  000f3	74 67		 je	 SHORT $LN6@recalculat

; 329  : 		{
; 330  : 
; 331  : 			object_y = get_ui_object_y (object_to_slide);

  000f5	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  000f8	50		 push	 eax
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  000fc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fe	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00105	ff d0		 call	 eax
  00107	d9 5d ec	 fstp	 DWORD PTR _object_y$[ebp]

; 332  : 			object_y_size = get_ui_object_y_size (object_to_slide);

  0010a	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  0010d	50		 push	 eax
  0010e	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  00111	8b 11		 mov	 edx, DWORD PTR [ecx]
  00113	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0011a	ff d0		 call	 eax
  0011c	d9 5d e8	 fstp	 DWORD PTR _object_y_size$[ebp]

; 333  : 
; 334  : 			if (get_ui_object_type (object_to_slide) == UI_TYPE_LIST_BOX)

  0011f	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  00122	83 38 0d	 cmp	 DWORD PTR [eax], 13	; 0000000dH
  00125	75 0c		 jne	 SHORT $LN5@recalculat

; 335  : 			{
; 336  : 
; 337  : 				object_y_size = get_next_list_position (object_to_slide);

  00127	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  0012a	50		 push	 eax
  0012b	e8 00 00 00 00	 call	 ?get_next_list_position@@YGMPAUUI_OBJECT@@@Z ; get_next_list_position
  00130	d9 5d e8	 fstp	 DWORD PTR _object_y_size$[ebp]
$LN5@recalculat:

; 338  : 			}
; 339  : 	
; 340  : 			if (total_slider_y_size < (object_y - slider_y + object_y_size))

  00133	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _object_y$[ebp]
  00138	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _slider_y$[ebp]
  0013d	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _object_y_size$[ebp]
  00142	0f 2f 45 d0	 comiss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  00146	76 14		 jbe	 SHORT $LN6@recalculat

; 341  : 			{
; 342  : 	
; 343  : 				total_slider_y_size = (object_y - slider_y + object_y_size);

  00148	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _object_y$[ebp]
  0014d	f3 0f 5c 45 e4	 subss	 xmm0, DWORD PTR _slider_y$[ebp]
  00152	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _object_y_size$[ebp]
  00157	f3 0f 11 45 d0	 movss	 DWORD PTR _total_slider_y_size$[ebp], xmm0
$LN6@recalculat:

; 344  : 			}
; 345  : 		}
; 346  : 
; 347  : 		object_to_slide = get_ui_object_next (object_to_slide);

  0015c	8b 45 f4	 mov	 eax, DWORD PTR _object_to_slide$[ebp]
  0015f	50		 push	 eax
  00160	8b 4d f4	 mov	 ecx, DWORD PTR _object_to_slide$[ebp]
  00163	8b 11		 mov	 edx, DWORD PTR [ecx]
  00165	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0016c	ff d0		 call	 eax
  0016e	89 45 f4	 mov	 DWORD PTR _object_to_slide$[ebp], eax

; 348  : 	}

  00171	e9 6d ff ff ff	 jmp	 $LN2@recalculat
$LN3@recalculat:

; 349  : 
; 350  : 	// switch slider on if needed
; 351  : 
; 352  : 	if (total_slider_y_size > get_ui_object_y_size (slider_object))

  00176	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00179	50		 push	 eax
  0017a	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0017d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00186	ff d0		 call	 eax
  00188	d9 5d 88	 fstp	 DWORD PTR tv440[ebp]
  0018b	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  00190	0f 2f 45 88	 comiss	 xmm0, DWORD PTR tv440[ebp]
  00194	0f 86 9a 03 00
	00		 jbe	 $LN7@recalculat

; 353  : 	{
; 354  : 
; 355  : 		set_ui_object_drawable (slider_object, TRUE);

  0019a	6a 01		 push	 1
  0019c	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0019f	50		 push	 eax
  001a0	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  001a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001ac	ff d0		 call	 eax

; 356  : 
; 357  : 		// find amount the object overhang by
; 358  : 
; 359  : 		overhang = total_slider_y_size - get_ui_object_y_size (slider_object);

  001ae	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  001b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001be	ff d0		 call	 eax
  001c0	d9 5d 88	 fstp	 DWORD PTR tv451[ebp]
  001c3	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  001c8	f3 0f 5c 45 88	 subss	 xmm0, DWORD PTR tv451[ebp]
  001cd	f3 0f 11 45 f0	 movss	 DWORD PTR _overhang$[ebp], xmm0

; 360  : 
; 361  : 		// new slider size
; 362  : 	
; 363  : 		new_slider_size = (slider_y_size * get_ui_object_y_size (slider_object)) / total_slider_y_size;

  001d2	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  001d5	50		 push	 eax
  001d6	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  001d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001db	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001e2	ff d0		 call	 eax
  001e4	d9 5d 88	 fstp	 DWORD PTR tv459[ebp]
  001e7	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv459[ebp]
  001ec	f3 0f 59 45 e0	 mulss	 xmm0, DWORD PTR _slider_y_size$[ebp]
  001f1	f3 0f 5e 45 d0	 divss	 xmm0, DWORD PTR _total_slider_y_size$[ebp]
  001f6	f3 0f 11 45 d8	 movss	 DWORD PTR _new_slider_size$[ebp], xmm0

; 364  : 
; 365  : 		new_slider_size = bound (new_slider_size, UI_SLIDER_VIRTUAL_WIDTH * get_screen_width (video_screen), slider_y_size);

  001fb	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _new_slider_size$[ebp]
  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00205	50		 push	 eax
  00206	f2 0f 11 45 84	 movsd	 QWORD PTR tv592[ebp], xmm0
  0020b	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00210	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00214	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f98000000000000
  0021c	f2 0f 10 4d 84	 movsd	 xmm1, QWORD PTR tv592[ebp]
  00221	66 0f 2f c1	 comisd	 xmm0, xmm1
  00225	76 22		 jbe	 SHORT $LN12@recalculat
  00227	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0022d	51		 push	 ecx
  0022e	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  00233	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00237	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f98000000000000
  0023f	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv199[ebp], xmm0
  00247	eb 37		 jmp	 SHORT $LN13@recalculat
$LN12@recalculat:
  00249	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _new_slider_size$[ebp]
  0024e	0f 2f 45 e0	 comiss	 xmm0, DWORD PTR _slider_y_size$[ebp]
  00252	76 0f		 jbe	 SHORT $LN10@recalculat
  00254	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _slider_y_size$[ebp]
  00259	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv197[ebp], xmm0
  00261	eb 0d		 jmp	 SHORT $LN11@recalculat
$LN10@recalculat:
  00263	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _new_slider_size$[ebp]
  00268	f3 0f 11 85 78
	ff ff ff	 movss	 DWORD PTR tv197[ebp], xmm0
$LN11@recalculat:
  00270	f3 0f 5a 85 78
	ff ff ff	 cvtss2sd xmm0, DWORD PTR tv197[ebp]
  00278	f2 0f 11 85 7c
	ff ff ff	 movsd	 QWORD PTR tv199[ebp], xmm0
$LN13@recalculat:
  00280	f2 0f 5a 85 7c
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv199[ebp]
  00288	f3 0f 11 45 d8	 movss	 DWORD PTR _new_slider_size$[ebp], xmm0

; 366  : 
; 367  : 		new_slider_virtual_size = new_slider_size / get_ui_object_y_size (slider_object);

  0028d	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00290	50		 push	 eax
  00291	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00294	8b 11		 mov	 edx, DWORD PTR [ecx]
  00296	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0029d	ff d0		 call	 eax
  0029f	d9 5d 88	 fstp	 DWORD PTR tv476[ebp]
  002a2	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _new_slider_size$[ebp]
  002a7	f3 0f 5e 45 88	 divss	 xmm0, DWORD PTR tv476[ebp]
  002ac	f3 0f 11 45 d4	 movss	 DWORD PTR _new_slider_virtual_size$[ebp], xmm0

; 368  : 	
; 369  : 		set_ui_object_virtual_y_size (slider_area, new_slider_virtual_size);

  002b1	51		 push	 ecx
  002b2	f3 0f 10 45 d4	 movss	 xmm0, DWORD PTR _new_slider_virtual_size$[ebp]
  002b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bc	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  002bf	50		 push	 eax
  002c0	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  002c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  002cc	ff d0		 call	 eax

; 370  : 
; 371  : 		{
; 372  : 
; 373  : 			float
; 374  : 				new_slider_y;
; 375  : 
; 376  : 			new_slider_y = bound (get_ui_object_y (slider_area) - get_ui_object_y (slider_object),

  002ce	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  002d1	50		 push	 eax
  002d2	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  002d5	8b 11		 mov	 edx, DWORD PTR [ecx]
  002d7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  002de	ff d0		 call	 eax
  002e0	d9 5d 88	 fstp	 DWORD PTR tv489[ebp]
  002e3	f3 0f 10 45 88	 movss	 xmm0, DWORD PTR tv489[ebp]
  002e8	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  002eb	51		 push	 ecx
  002ec	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  002ef	8b 02		 mov	 eax, DWORD PTR [edx]
  002f1	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  002f8	f3 0f 11 45 84	 movss	 DWORD PTR tv594[ebp], xmm0
  002fd	ff d1		 call	 ecx
  002ff	d9 5d 80	 fstp	 DWORD PTR tv496[ebp]
  00302	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR tv594[ebp]
  00307	f3 0f 5c 45 80	 subss	 xmm0, DWORD PTR tv496[ebp]
  0030c	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00310	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00316	52		 push	 edx
  00317	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv596[ebp], xmm0
  0031f	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00324	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00328	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00330	f2 0f 10 8d 78
	ff ff ff	 movsd	 xmm1, QWORD PTR tv596[ebp]
  00338	66 0f 2f c1	 comisd	 xmm0, xmm1
  0033c	76 24		 jbe	 SHORT $LN16@recalculat
  0033e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00349	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0034d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00355	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv285[ebp], xmm0
  0035d	e9 89 01 00 00	 jmp	 $LN17@recalculat
$LN16@recalculat:
  00362	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  00365	51		 push	 ecx
  00366	8b 55 f8	 mov	 edx, DWORD PTR _slider_area$[ebp]
  00369	8b 02		 mov	 eax, DWORD PTR [edx]
  0036b	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  00372	ff d1		 call	 ecx
  00374	d9 9d 6c ff ff
	ff		 fstp	 DWORD PTR tv509[ebp]
  0037a	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR tv509[ebp]
  00382	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  00385	52		 push	 edx
  00386	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00389	8b 08		 mov	 ecx, DWORD PTR [eax]
  0038b	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  00392	f3 0f 11 85 68
	ff ff ff	 movss	 DWORD PTR tv598[ebp], xmm0
  0039a	ff d2		 call	 edx
  0039c	d9 9d 64 ff ff
	ff		 fstp	 DWORD PTR tv516[ebp]
  003a2	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR tv598[ebp]
  003aa	f3 0f 5c 85 64
	ff ff ff	 subss	 xmm0, DWORD PTR tv516[ebp]
  003b2	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  003b6	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  003b9	50		 push	 eax
  003ba	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  003bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  003bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  003c6	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR tv600[ebp], xmm0
  003ce	ff d0		 call	 eax
  003d0	dd 9d 54 ff ff
	ff		 fstp	 QWORD PTR tv524[ebp]
  003d6	f2 0f 10 85 54
	ff ff ff	 movsd	 xmm0, QWORD PTR tv524[ebp]
  003de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  003e4	51		 push	 ecx
  003e5	f2 0f 11 85 4c
	ff ff ff	 movsd	 QWORD PTR tv602[ebp], xmm0
  003ed	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  003f2	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  003f6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  003fe	f2 0f 10 8d 4c
	ff ff ff	 movsd	 xmm1, QWORD PTR tv602[ebp]
  00406	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0040a	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _new_slider_size$[ebp]
  0040f	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00413	f2 0f 10 85 5c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv600[ebp]
  0041b	66 0f 2f c1	 comisd	 xmm0, xmm1
  0041f	76 5e		 jbe	 SHORT $LN14@recalculat
  00421	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  00424	52		 push	 edx
  00425	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00428	8b 08		 mov	 ecx, DWORD PTR [eax]
  0042a	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  00431	ff d2		 call	 edx
  00433	dd 9d 44 ff ff
	ff		 fstp	 QWORD PTR tv535[ebp]
  00439	f2 0f 10 85 44
	ff ff ff	 movsd	 xmm0, QWORD PTR tv535[ebp]
  00441	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00446	50		 push	 eax
  00447	f2 0f 11 85 3c
	ff ff ff	 movsd	 QWORD PTR tv604[ebp], xmm0
  0044f	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00454	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00458	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00460	f2 0f 10 8d 3c
	ff ff ff	 movsd	 xmm1, QWORD PTR tv604[ebp]
  00468	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0046c	f3 0f 5a 45 d8	 cvtss2sd xmm0, DWORD PTR _new_slider_size$[ebp]
  00471	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00475	f2 0f 11 8d 34
	ff ff ff	 movsd	 QWORD PTR tv284[ebp], xmm1
  0047d	eb 5c		 jmp	 SHORT $LN15@recalculat
$LN14@recalculat:
  0047f	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  00482	51		 push	 ecx
  00483	8b 55 f8	 mov	 edx, DWORD PTR _slider_area$[ebp]
  00486	8b 02		 mov	 eax, DWORD PTR [edx]
  00488	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0048f	ff d1		 call	 ecx
  00491	d9 9d 30 ff ff
	ff		 fstp	 DWORD PTR tv545[ebp]
  00497	f3 0f 10 85 30
	ff ff ff	 movss	 xmm0, DWORD PTR tv545[ebp]
  0049f	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  004a2	52		 push	 edx
  004a3	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  004a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  004a8	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  004af	f3 0f 11 85 2c
	ff ff ff	 movss	 DWORD PTR tv606[ebp], xmm0
  004b7	ff d2		 call	 edx
  004b9	d9 9d 28 ff ff
	ff		 fstp	 DWORD PTR tv552[ebp]
  004bf	f3 0f 10 85 2c
	ff ff ff	 movss	 xmm0, DWORD PTR tv606[ebp]
  004c7	f3 0f 5c 85 28
	ff ff ff	 subss	 xmm0, DWORD PTR tv552[ebp]
  004cf	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  004d3	f2 0f 11 85 34
	ff ff ff	 movsd	 QWORD PTR tv284[ebp], xmm0
$LN15@recalculat:
  004db	f2 0f 10 85 34
	ff ff ff	 movsd	 xmm0, QWORD PTR tv284[ebp]
  004e3	f2 0f 11 85 70
	ff ff ff	 movsd	 QWORD PTR tv285[ebp], xmm0
$LN17@recalculat:
  004eb	f2 0f 5a 85 70
	ff ff ff	 cvtsd2ss xmm0, QWORD PTR tv285[ebp]
  004f3	f3 0f 11 45 cc	 movss	 DWORD PTR _new_slider_y$1[ebp], xmm0

; 377  : 													UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen),
; 378  : 													(get_ui_object_y_size (slider_object) - (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen))) - new_slider_size);
; 379  : 		
; 380  : 			set_ui_object_virtual_y (slider_area, new_slider_y / get_ui_object_y_size (slider_object));

  004f8	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  004fb	50		 push	 eax
  004fc	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  004ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  00501	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00508	ff d0		 call	 eax
  0050a	d9 5d 88	 fstp	 DWORD PTR tv560[ebp]
  0050d	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _new_slider_y$1[ebp]
  00512	f3 0f 5e 45 88	 divss	 xmm0, DWORD PTR tv560[ebp]
  00517	51		 push	 ecx
  00518	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051d	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  00520	51		 push	 ecx
  00521	8b 55 f8	 mov	 edx, DWORD PTR _slider_area$[ebp]
  00524	8b 02		 mov	 eax, DWORD PTR [edx]
  00526	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4]
  0052d	ff d1		 call	 ecx

; 381  : 		}
; 382  : 
; 383  : 		//debug_log ("VSLIDER: resizing to %f (%f pixels)", new_slider_virtual_size, new_slider_virtual_size * get_ui_object_y_size (slider_object));
; 384  : 	}
; 385  : 	else

  0052f	e9 91 00 00 00	 jmp	 $LN8@recalculat
$LN7@recalculat:

; 386  : 	{
; 387  : 
; 388  : 		//make slider disapear of area too small to slide
; 389  : 		set_ui_object_drawable (slider_object, FALSE);

  00534	6a 00		 push	 0
  00536	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00539	50		 push	 eax
  0053a	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0053d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0053f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00546	ff d0		 call	 eax

; 390  : 
; 391  : 		// can't slide as object_to_size is too small
; 392  : 
; 393  : 		set_ui_object_virtual_y_size (slider_area, 1.0);

  00548	51		 push	 ecx
  00549	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00551	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00556	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  00559	50		 push	 eax
  0055a	8b 4d f8	 mov	 ecx, DWORD PTR _slider_area$[ebp]
  0055d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0055f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00566	ff d0		 call	 eax

; 394  : 
; 395  : 		set_ui_object_virtual_y (slider_area, UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen) / get_ui_object_y_size (slider_object));

  00568	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0056d	50		 push	 eax
  0056e	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00573	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00577	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0057f	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00582	51		 push	 ecx
  00583	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  00586	8b 02		 mov	 eax, DWORD PTR [edx]
  00588	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0058f	f2 0f 11 45 84	 movsd	 QWORD PTR tv608[ebp], xmm0
  00594	ff d1		 call	 ecx
  00596	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv584[ebp]
  0059c	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv608[ebp]
  005a1	f2 0f 5e 85 7c
	ff ff ff	 divsd	 xmm0, QWORD PTR tv584[ebp]
  005a9	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  005ad	51		 push	 ecx
  005ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b3	8b 55 f8	 mov	 edx, DWORD PTR _slider_area$[ebp]
  005b6	52		 push	 edx
  005b7	8b 45 f8	 mov	 eax, DWORD PTR _slider_area$[ebp]
  005ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  005bc	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[ecx*4]
  005c3	ff d2		 call	 edx
$LN8@recalculat:

; 396  : 
; 397  : 		//debug_log ("VSLIDER: resizing to %f (%f pixels)", 1.0, get_ui_object_y_size (slider_object));
; 398  : 	}
; 399  : }

  005c5	5f		 pop	 edi
  005c6	5e		 pop	 esi
  005c7	5b		 pop	 ebx
  005c8	8b e5		 mov	 esp, ebp
  005ca	5d		 pop	 ebp
  005cb	c2 04 00	 ret	 4
?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z ENDP	; recalculate_slider_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z
_TEXT	SEGMENT
tv168 = -128						; size = 8
tv253 = -120						; size = 8
tv274 = -112						; size = 8
tv245 = -104						; size = 8
tv272 = -96						; size = 8
tv222 = -92						; size = 4
tv270 = -88						; size = 8
tv266 = -88						; size = 4
tv207 = -88						; size = 8
tv236 = -84						; size = 4
tv215 = -84						; size = 4
tv268 = -80						; size = 4
tv264 = -80						; size = 8
tv262 = -80						; size = 8
tv169 = -80						; size = 8
tv229 = -76						; size = 4
_pos$ = -8						; size = 4
_parent$ = -4						; size = 4
_slider_object$ = 8					; size = 4
_min$ = 12						; size = 4
_max$ = 16						; size = 4
_inc$ = 20						; size = 4
?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z PROC		; scroll_slider, COMDAT

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 80 00 00
	00		 sub	 esp, 128		; 00000080H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 246  : 
; 247  : 	ui_object
; 248  : 		*parent;
; 249  : 
; 250  : 	float
; 251  : 		pos;
; 252  : 
; 253  : 	if (slider_object)

  0000c	83 7d 08 00	 cmp	 DWORD PTR _slider_object$[ebp], 0
  00010	0f 84 09 02 00
	00		 je	 $LN2@scroll_sli

; 254  : 	{
; 255  : 
; 256  : 		parent = get_ui_object_association (slider_object);

  00016	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00019	50		 push	 eax
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00026	ff d0		 call	 eax
  00028	89 45 fc	 mov	 DWORD PTR _parent$[ebp], eax

; 257  : 
; 258  : 		// make sure mouse is either on slider or next to (not above or below)
; 259  : 		if (highlighted_object != slider_object)

  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?highlighted_object@@3PAUUI_OBJECT@@A ; highlighted_object
  00030	3b 45 08	 cmp	 eax, DWORD PTR _slider_object$[ebp]
  00033	0f 84 a3 00 00
	00		 je	 $LN4@scroll_sli

; 260  : 		{
; 261  : 
; 262  : 			if ((get_mouse_y () < get_ui_object_y (parent) + UI_SLIDER_VIRTUAL_HEIGHT) ||

  00039	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  0003e	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00042	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  00045	50		 push	 eax
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00052	f2 0f 11 45 b0	 movsd	 QWORD PTR tv262[ebp], xmm0
  00057	ff d0		 call	 eax
  00059	dd 5d a8	 fstp	 QWORD PTR tv207[ebp]
  0005c	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv207[ebp]
  00061	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00069	f2 0f 10 4d b0	 movsd	 xmm1, QWORD PTR tv262[ebp]
  0006e	66 0f 2f c1	 comisd	 xmm0, xmm1
  00072	77 63		 ja	 SHORT $LN5@scroll_sli
  00074	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  00079	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  00080	50		 push	 eax
  00081	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  00084	8b 11		 mov	 edx, DWORD PTR [ecx]
  00086	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0008d	f2 0f 11 45 b0	 movsd	 QWORD PTR tv264[ebp], xmm0
  00092	ff d0		 call	 eax
  00094	d9 5d ac	 fstp	 DWORD PTR tv215[ebp]
  00097	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv215[ebp]
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  0009f	51		 push	 ecx
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _parent$[ebp]
  000a3	8b 02		 mov	 eax, DWORD PTR [edx]
  000a5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  000ac	f3 0f 11 45 a8	 movss	 DWORD PTR tv266[ebp], xmm0
  000b1	ff d1		 call	 ecx
  000b3	d9 5d a4	 fstp	 DWORD PTR tv222[ebp]
  000b6	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv266[ebp]
  000bb	f3 0f 58 45 a4	 addss	 xmm0, DWORD PTR tv222[ebp]
  000c0	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000c4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000cc	f2 0f 10 4d b0	 movsd	 xmm1, QWORD PTR tv264[ebp]
  000d1	66 0f 2f c8	 comisd	 xmm1, xmm0
  000d5	76 05		 jbe	 SHORT $LN4@scroll_sli
$LN5@scroll_sli:

; 263  : 				(get_mouse_y () > (get_ui_object_y (parent) + get_ui_object_y_size (parent) - UI_SLIDER_VIRTUAL_HEIGHT)))
; 264  : 			{
; 265  : 
; 266  : 				return;

  000d7	e9 43 01 00 00	 jmp	 $LN1@scroll_sli
$LN4@scroll_sli:

; 267  : 			}
; 268  : 		}
; 269  : 
; 270  : 		pos = get_ui_object_y (slider_object) - get_ui_object_y (parent);

  000dc	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  000df	50		 push	 eax
  000e0	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ec	ff d0		 call	 eax
  000ee	d9 5d b4	 fstp	 DWORD PTR tv229[ebp]
  000f1	f3 0f 10 45 b4	 movss	 xmm0, DWORD PTR tv229[ebp]
  000f6	8b 4d fc	 mov	 ecx, DWORD PTR _parent$[ebp]
  000f9	51		 push	 ecx
  000fa	8b 55 fc	 mov	 edx, DWORD PTR _parent$[ebp]
  000fd	8b 02		 mov	 eax, DWORD PTR [edx]
  000ff	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  00106	f3 0f 11 45 b0	 movss	 DWORD PTR tv268[ebp], xmm0
  0010b	ff d1		 call	 ecx
  0010d	d9 5d ac	 fstp	 DWORD PTR tv236[ebp]
  00110	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv268[ebp]
  00115	f3 0f 5c 45 ac	 subss	 xmm0, DWORD PTR tv236[ebp]
  0011a	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp], xmm0

; 271  : 	
; 272  : 		pos += inc;

  0011f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp]
  00124	f3 0f 58 45 14	 addss	 xmm0, DWORD PTR _inc$[ebp]
  00129	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp], xmm0

; 273  : 	
; 274  : 		pos = bound (pos, min + UI_SLIDER_VIRTUAL_HEIGHT, max - UI_SLIDER_VIRTUAL_HEIGHT - get_ui_object_y_size (slider_object));

  0012e	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00133	f3 0f 5a 4d 0c	 cvtss2sd xmm1, DWORD PTR _min$[ebp]
  00138	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3f8e000000000000
  00140	66 0f 2f c8	 comisd	 xmm1, xmm0
  00144	76 17		 jbe	 SHORT $LN9@scroll_sli
  00146	f3 0f 5a 45 0c	 cvtss2sd xmm0, DWORD PTR _min$[ebp]
  0014b	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00153	f2 0f 11 45 b0	 movsd	 QWORD PTR tv169[ebp], xmm0
  00158	e9 92 00 00 00	 jmp	 $LN10@scroll_sli
$LN9@scroll_sli:
  0015d	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00162	f3 0f 5a 4d 10	 cvtss2sd xmm1, DWORD PTR _max$[ebp]
  00167	f2 0f 5c 0d 00
	00 00 00	 subsd	 xmm1, QWORD PTR __real@3f8e000000000000
  0016f	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00172	50		 push	 eax
  00173	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00176	8b 11		 mov	 edx, DWORD PTR [ecx]
  00178	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0017f	f2 0f 11 45 a8	 movsd	 QWORD PTR tv270[ebp], xmm0
  00184	f2 0f 11 4d a0	 movsd	 QWORD PTR tv272[ebp], xmm1
  00189	ff d0		 call	 eax
  0018b	dd 5d 98	 fstp	 QWORD PTR tv245[ebp]
  0018e	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv272[ebp]
  00193	f2 0f 5c 45 98	 subsd	 xmm0, QWORD PTR tv245[ebp]
  00198	f2 0f 10 4d a8	 movsd	 xmm1, QWORD PTR tv270[ebp]
  0019d	66 0f 2f c8	 comisd	 xmm1, xmm0
  001a1	76 38		 jbe	 SHORT $LN7@scroll_sli
  001a3	f3 0f 5a 45 10	 cvtss2sd xmm0, DWORD PTR _max$[ebp]
  001a8	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3f8e000000000000
  001b0	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  001b3	51		 push	 ecx
  001b4	8b 55 08	 mov	 edx, DWORD PTR _slider_object$[ebp]
  001b7	8b 02		 mov	 eax, DWORD PTR [edx]
  001b9	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  001c0	f2 0f 11 45 90	 movsd	 QWORD PTR tv274[ebp], xmm0
  001c5	ff d1		 call	 ecx
  001c7	dd 5d 88	 fstp	 QWORD PTR tv253[ebp]
  001ca	f2 0f 10 45 90	 movsd	 xmm0, QWORD PTR tv274[ebp]
  001cf	f2 0f 5c 45 88	 subsd	 xmm0, QWORD PTR tv253[ebp]
  001d4	f2 0f 11 45 80	 movsd	 QWORD PTR tv168[ebp], xmm0
  001d9	eb 0a		 jmp	 SHORT $LN8@scroll_sli
$LN7@scroll_sli:
  001db	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  001e0	f2 0f 11 45 80	 movsd	 QWORD PTR tv168[ebp], xmm0
$LN8@scroll_sli:
  001e5	f2 0f 10 45 80	 movsd	 xmm0, QWORD PTR tv168[ebp]
  001ea	f2 0f 11 45 b0	 movsd	 QWORD PTR tv169[ebp], xmm0
$LN10@scroll_sli:
  001ef	f2 0f 5a 45 b0	 cvtsd2ss xmm0, QWORD PTR tv169[ebp]
  001f4	f3 0f 11 45 f8	 movss	 DWORD PTR _pos$[ebp], xmm0

; 275  : 
; 276  : 		set_ui_object_y (slider_object, pos);

  001f9	51		 push	 ecx
  001fa	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00204	8b 45 08	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00207	50		 push	 eax
  00208	8b 4d 08	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0020b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00214	ff d0		 call	 eax

; 277  : 
; 278  : 		recalculate_slider_origin (parent);

  00216	8b 45 fc	 mov	 eax, DWORD PTR _parent$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin
$LN2@scroll_sli:
$LN1@scroll_sli:

; 279  : 	}
; 280  : }

  0021f	5f		 pop	 edi
  00220	5e		 pop	 esi
  00221	5b		 pop	 ebx
  00222	8b e5		 mov	 esp, ebp
  00224	5d		 pop	 ebp
  00225	c2 10 00	 ret	 16			; 00000010H
?scroll_slider@@YGXPAUUI_OBJECT@@MMM@Z ENDP		; scroll_slider
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?ui_object_vslider_increase_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv167 = -164						; size = 8
tv252 = -156						; size = 8
tv273 = -148						; size = 8
tv271 = -140						; size = 8
tv241 = -132						; size = 8
tv269 = -124						; size = 8
tv267 = -116						; size = 8
tv265 = -108						; size = 8
tv168 = -100						; size = 8
tv223 = -96						; size = 4
tv263 = -92						; size = 8
tv261 = -92						; size = 4
tv216 = -88						; size = 4
_slider_object$ = -20					; size = 4
_slider$ = -16						; size = 4
_inc$ = -12						; size = 4
_max$ = -8						; size = 4
_pos$ = -4						; size = 4
_obj$ = 8						; size = 4
_ev$ = 12						; size = 4
?ui_object_vslider_increase_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; ui_object_vslider_increase_function, COMDAT

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 212  : 
; 213  : 	float
; 214  : 		pos,
; 215  : 		max,
; 216  : 		inc;
; 217  : 
; 218  : 	ui_object
; 219  : 		*slider,
; 220  : 		*slider_object;
; 221  : 
; 222  : 	slider = get_ui_object_association (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 f0	 mov	 DWORD PTR _slider$[ebp], eax

; 223  : 
; 224  : 	slider_object = get_ui_object_parent (obj);

  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00031	ff d0		 call	 eax
  00033	89 45 ec	 mov	 DWORD PTR _slider_object$[ebp], eax

; 225  : 
; 226  : 	max = get_ui_object_y_size (slider_object);

  00036	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00046	ff d0		 call	 eax
  00048	d9 5d f8	 fstp	 DWORD PTR _max$[ebp]

; 227  : 	inc = get_ui_object_slider_inc (slider_object);

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_slider_inc@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	d9 5d f4	 fstp	 DWORD PTR _inc$[ebp]

; 228  : 
; 229  : 	pos = get_ui_object_y (slider) - get_ui_object_y (slider_object);

  00060	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00063	50		 push	 eax
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00070	ff d0		 call	 eax
  00072	d9 5d a8	 fstp	 DWORD PTR tv216[ebp]
  00075	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv216[ebp]
  0007a	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 ec	 mov	 edx, DWORD PTR _slider_object$[ebp]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0008a	f3 0f 11 45 a4	 movss	 DWORD PTR tv261[ebp], xmm0
  0008f	ff d1		 call	 ecx
  00091	d9 5d a0	 fstp	 DWORD PTR tv223[ebp]
  00094	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv261[ebp]
  00099	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR tv223[ebp]
  0009e	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 230  : 	
; 231  : 	pos += inc;

  000a3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  000a8	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _inc$[ebp]
  000ad	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 232  : 	
; 233  : 	pos = bound (pos, UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen), (max - (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen))) - get_ui_object_y_size (slider));

  000b2	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000bc	50		 push	 eax
  000bd	f2 0f 11 45 a4	 movsd	 QWORD PTR tv263[ebp], xmm0
  000c2	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000c7	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000d3	f2 0f 10 4d a4	 movsd	 xmm1, QWORD PTR tv263[ebp]
  000d8	66 0f 2f c1	 comisd	 xmm0, xmm1
  000dc	76 22		 jbe	 SHORT $LN5@ui_object_
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000ea	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000f6	f2 0f 11 45 9c	 movsd	 QWORD PTR tv168[ebp], xmm0
  000fb	e9 ef 00 00 00	 jmp	 $LN6@ui_object_
$LN5@ui_object_:
  00100	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00105	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _max$[ebp]
  0010a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00110	52		 push	 edx
  00111	f2 0f 11 45 94	 movsd	 QWORD PTR tv265[ebp], xmm0
  00116	f2 0f 11 4d 8c	 movsd	 QWORD PTR tv267[ebp], xmm1
  0011b	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00120	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00124	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0012c	f2 0f 10 4d 8c	 movsd	 xmm1, QWORD PTR tv267[ebp]
  00131	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00135	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00138	50		 push	 eax
  00139	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  0013c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00145	f2 0f 11 4d 84	 movsd	 QWORD PTR tv269[ebp], xmm1
  0014a	ff d0		 call	 eax
  0014c	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv241[ebp]
  00152	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv269[ebp]
  00157	f2 0f 5c 85 7c
	ff ff ff	 subsd	 xmm0, QWORD PTR tv241[ebp]
  0015f	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv265[ebp]
  00164	66 0f 2f c8	 comisd	 xmm1, xmm0
  00168	76 6b		 jbe	 SHORT $LN3@ui_object_
  0016a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _max$[ebp]
  0016f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00175	51		 push	 ecx
  00176	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv271[ebp], xmm0
  0017e	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00183	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00187	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0018f	f2 0f 10 8d 74
	ff ff ff	 movsd	 xmm1, QWORD PTR tv271[ebp]
  00197	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0019b	8b 55 f0	 mov	 edx, DWORD PTR _slider$[ebp]
  0019e	52		 push	 edx
  0019f	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  001ab	f2 0f 11 8d 6c
	ff ff ff	 movsd	 QWORD PTR tv273[ebp], xmm1
  001b3	ff d2		 call	 edx
  001b5	dd 9d 64 ff ff
	ff		 fstp	 QWORD PTR tv252[ebp]
  001bb	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv273[ebp]
  001c3	f2 0f 5c 85 64
	ff ff ff	 subsd	 xmm0, QWORD PTR tv252[ebp]
  001cb	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR tv167[ebp], xmm0
  001d3	eb 0d		 jmp	 SHORT $LN4@ui_object_
$LN3@ui_object_:
  001d5	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  001da	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR tv167[ebp], xmm0
$LN4@ui_object_:
  001e2	f2 0f 10 85 5c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv167[ebp]
  001ea	f2 0f 11 45 9c	 movsd	 QWORD PTR tv168[ebp], xmm0
$LN6@ui_object_:
  001ef	f2 0f 5a 45 9c	 cvtsd2ss xmm0, QWORD PTR tv168[ebp]
  001f4	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 234  : 	
; 235  : 	set_ui_object_virtual_y (slider, pos / max);

  001f9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001fe	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _max$[ebp]
  00203	51		 push	 ecx
  00204	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00209	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  0020c	50		 push	 eax
  0020d	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00210	8b 11		 mov	 edx, DWORD PTR [ecx]
  00212	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00219	ff d0		 call	 eax

; 236  : 
; 237  : 	recalculate_slider_origin (slider_object);

  0021b	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin

; 238  : }

  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 08 00	 ret	 8
?ui_object_vslider_increase_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; ui_object_vslider_increase_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?ui_object_vslider_decrease_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv167 = -164						; size = 8
tv252 = -156						; size = 8
tv273 = -148						; size = 8
tv271 = -140						; size = 8
tv241 = -132						; size = 8
tv269 = -124						; size = 8
tv267 = -116						; size = 8
tv265 = -108						; size = 8
tv168 = -100						; size = 8
tv223 = -96						; size = 4
tv263 = -92						; size = 8
tv261 = -92						; size = 4
tv216 = -88						; size = 4
_slider_object$ = -20					; size = 4
_slider$ = -16						; size = 4
_inc$ = -12						; size = 4
_max$ = -8						; size = 4
_pos$ = -4						; size = 4
_obj$ = 8						; size = 4
_ev$ = 12						; size = 4
?ui_object_vslider_decrease_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; ui_object_vslider_decrease_function, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 178  : 
; 179  : 	float
; 180  : 		pos,
; 181  : 		max,
; 182  : 		inc;
; 183  : 
; 184  : 	ui_object
; 185  : 		*slider,
; 186  : 		*slider_object;
; 187  : 
; 188  : 	slider = get_ui_object_association (obj);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_association@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 f0	 mov	 DWORD PTR _slider$[ebp], eax

; 189  : 
; 190  : 	slider_object = get_ui_object_parent (obj);

  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00031	ff d0		 call	 eax
  00033	89 45 ec	 mov	 DWORD PTR _slider_object$[ebp], eax

; 191  : 
; 192  : 	max = get_ui_object_y_size (slider_object);

  00036	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0003d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00046	ff d0		 call	 eax
  00048	d9 5d f8	 fstp	 DWORD PTR _max$[ebp]

; 193  : 	inc = get_ui_object_slider_inc (slider_object);

  0004b	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_slider_inc@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	d9 5d f4	 fstp	 DWORD PTR _inc$[ebp]

; 194  : 
; 195  : 	pos = get_ui_object_y (slider) - get_ui_object_y (slider_object);

  00060	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00063	50		 push	 eax
  00064	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00070	ff d0		 call	 eax
  00072	d9 5d a8	 fstp	 DWORD PTR tv216[ebp]
  00075	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv216[ebp]
  0007a	8b 4d ec	 mov	 ecx, DWORD PTR _slider_object$[ebp]
  0007d	51		 push	 ecx
  0007e	8b 55 ec	 mov	 edx, DWORD PTR _slider_object$[ebp]
  00081	8b 02		 mov	 eax, DWORD PTR [edx]
  00083	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0008a	f3 0f 11 45 a4	 movss	 DWORD PTR tv261[ebp], xmm0
  0008f	ff d1		 call	 ecx
  00091	d9 5d a0	 fstp	 DWORD PTR tv223[ebp]
  00094	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv261[ebp]
  00099	f3 0f 5c 45 a0	 subss	 xmm0, DWORD PTR tv223[ebp]
  0009e	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 196  : 	
; 197  : 	pos -= inc;

  000a3	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  000a8	f3 0f 5c 45 f4	 subss	 xmm0, DWORD PTR _inc$[ebp]
  000ad	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 198  : 	
; 199  : 	pos = bound (pos, UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen), (max - (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen))) - get_ui_object_y_size (slider));

  000b2	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  000b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000bc	50		 push	 eax
  000bd	f2 0f 11 45 a4	 movsd	 QWORD PTR tv263[ebp], xmm0
  000c2	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000c7	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000d3	f2 0f 10 4d a4	 movsd	 xmm1, QWORD PTR tv263[ebp]
  000d8	66 0f 2f c1	 comisd	 xmm0, xmm1
  000dc	76 22		 jbe	 SHORT $LN5@ui_object_
  000de	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000e4	51		 push	 ecx
  000e5	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000ea	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000f6	f2 0f 11 45 9c	 movsd	 QWORD PTR tv168[ebp], xmm0
  000fb	e9 ef 00 00 00	 jmp	 $LN6@ui_object_
$LN5@ui_object_:
  00100	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  00105	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _max$[ebp]
  0010a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00110	52		 push	 edx
  00111	f2 0f 11 45 94	 movsd	 QWORD PTR tv265[ebp], xmm0
  00116	f2 0f 11 4d 8c	 movsd	 QWORD PTR tv267[ebp], xmm1
  0011b	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00120	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00124	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0012c	f2 0f 10 4d 8c	 movsd	 xmm1, QWORD PTR tv267[ebp]
  00131	f2 0f 5c c8	 subsd	 xmm1, xmm0
  00135	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00138	50		 push	 eax
  00139	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  0013c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00145	f2 0f 11 4d 84	 movsd	 QWORD PTR tv269[ebp], xmm1
  0014a	ff d0		 call	 eax
  0014c	dd 9d 7c ff ff
	ff		 fstp	 QWORD PTR tv241[ebp]
  00152	f2 0f 10 45 84	 movsd	 xmm0, QWORD PTR tv269[ebp]
  00157	f2 0f 5c 85 7c
	ff ff ff	 subsd	 xmm0, QWORD PTR tv241[ebp]
  0015f	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv265[ebp]
  00164	66 0f 2f c8	 comisd	 xmm1, xmm0
  00168	76 6b		 jbe	 SHORT $LN3@ui_object_
  0016a	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _max$[ebp]
  0016f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00175	51		 push	 ecx
  00176	f2 0f 11 85 74
	ff ff ff	 movsd	 QWORD PTR tv271[ebp], xmm0
  0017e	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00183	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00187	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0018f	f2 0f 10 8d 74
	ff ff ff	 movsd	 xmm1, QWORD PTR tv271[ebp]
  00197	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0019b	8b 55 f0	 mov	 edx, DWORD PTR _slider$[ebp]
  0019e	52		 push	 edx
  0019f	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  001a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a4	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  001ab	f2 0f 11 8d 6c
	ff ff ff	 movsd	 QWORD PTR tv273[ebp], xmm1
  001b3	ff d2		 call	 edx
  001b5	dd 9d 64 ff ff
	ff		 fstp	 QWORD PTR tv252[ebp]
  001bb	f2 0f 10 85 6c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv273[ebp]
  001c3	f2 0f 5c 85 64
	ff ff ff	 subsd	 xmm0, QWORD PTR tv252[ebp]
  001cb	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR tv167[ebp], xmm0
  001d3	eb 0d		 jmp	 SHORT $LN4@ui_object_
$LN3@ui_object_:
  001d5	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  001da	f2 0f 11 85 5c
	ff ff ff	 movsd	 QWORD PTR tv167[ebp], xmm0
$LN4@ui_object_:
  001e2	f2 0f 10 85 5c
	ff ff ff	 movsd	 xmm0, QWORD PTR tv167[ebp]
  001ea	f2 0f 11 45 9c	 movsd	 QWORD PTR tv168[ebp], xmm0
$LN6@ui_object_:
  001ef	f2 0f 5a 45 9c	 cvtsd2ss xmm0, QWORD PTR tv168[ebp]
  001f4	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 200  : 	
; 201  : 	set_ui_object_virtual_y (slider, pos / max);

  001f9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001fe	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _max$[ebp]
  00203	51		 push	 ecx
  00204	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00209	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  0020c	50		 push	 eax
  0020d	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00210	8b 11		 mov	 edx, DWORD PTR [ecx]
  00212	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00219	ff d0		 call	 eax

; 202  : 
; 203  : 	recalculate_slider_origin (slider_object);

  0021b	8b 45 ec	 mov	 eax, DWORD PTR _slider_object$[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin

; 204  : }

  00224	5f		 pop	 edi
  00225	5e		 pop	 esi
  00226	5b		 pop	 ebx
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c2 08 00	 ret	 8
?ui_object_vslider_decrease_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; ui_object_vslider_decrease_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?vslider_move_function@@YGXPAUEVENT@@@Z
_TEXT	SEGMENT
tv198 = -160						; size = 8
tv323 = -152						; size = 8
tv355 = -144						; size = 8
tv353 = -136						; size = 8
tv311 = -128						; size = 8
tv351 = -120						; size = 8
tv349 = -112						; size = 8
tv341 = -108						; size = 8
tv347 = -104						; size = 8
tv335 = -104						; size = 8
tv269 = -100						; size = 4
tv339 = -96						; size = 4
tv251 = -96						; size = 8
tv199 = -96						; size = 8
tv287 = -92						; size = 4
tv262 = -92						; size = 4
tv345 = -88						; size = 8
tv343 = -88						; size = 4
tv337 = -88						; size = 8
tv333 = -88						; size = 8
tv280 = -84						; size = 4
_slider$ = -16						; size = 4
_inc$ = -12						; size = 4
_max$ = -8						; size = 4
_pos$ = -4						; size = 4
_ev$ = 8						; size = 4
?vslider_move_function@@YGXPAUEVENT@@@Z PROC		; vslider_move_function, COMDAT

; 116  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a0 00 00
	00		 sub	 esp, 160		; 000000a0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 117  : 
; 118  : 	float
; 119  : 		pos,
; 120  : 		max,
; 121  : 		inc;
; 122  : 
; 123  : 	ui_object
; 124  : 		*slider;
; 125  : 
; 126  : 	if (*captured_object)

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00011	83 38 00	 cmp	 DWORD PTR [eax], 0
  00014	0f 84 43 03 00
	00		 je	 $LN4@vslider_mo

; 127  : 	{
; 128  : 
; 129  : 		if (*captured_object == slider_area)

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  0001f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00021	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?slider_area@@3PAUUI_OBJECT@@A ; slider_area
  00027	0f 85 26 03 00
	00		 jne	 $LN3@vslider_mo

; 130  : 		{
; 131  : 	
; 132  : 			slider = get_ui_object_parent (*captured_object);

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	51		 push	 ecx
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  0003b	8b 02		 mov	 eax, DWORD PTR [edx]
  0003d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[ecx*4]
  00046	ff d2		 call	 edx
  00048	89 45 f0	 mov	 DWORD PTR _slider$[ebp], eax

; 133  : 		
; 134  : 			if (slider)

  0004b	83 7d f0 00	 cmp	 DWORD PTR _slider$[ebp], 0
  0004f	0f 84 fc 02 00
	00		 je	 $LN5@vslider_mo

; 135  : 			{
; 136  : 	
; 137  : 				inc = ev->dy;

  00055	8b 45 08	 mov	 eax, DWORD PTR _ev$[ebp]
  00058	0f bf 48 0e	 movsx	 ecx, WORD PTR [eax+14]
  0005c	f3 0f 2a c1	 cvtsi2ss xmm0, ecx
  00060	f3 0f 11 45 f4	 movss	 DWORD PTR _inc$[ebp], xmm0

; 138  : 	
; 139  : 				// make sure mouse is either on slider or next to (not above or below)
; 140  : 				if (highlighted_object != *captured_object)

  00065	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?highlighted_object@@3PAUUI_OBJECT@@A ; highlighted_object
  00070	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00072	0f 84 e3 00 00
	00		 je	 $LN7@vslider_mo

; 141  : 				{
; 142  : 	
; 143  : 					if ((get_mouse_y () < get_ui_object_y (slider) + (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen))) ||

  00078	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  0007d	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00081	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00084	50		 push	 eax
  00085	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00088	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00091	f2 0f 11 45 a8	 movsd	 QWORD PTR tv333[ebp], xmm0
  00096	ff d0		 call	 eax
  00098	dd 5d a0	 fstp	 QWORD PTR tv251[ebp]
  0009b	f2 0f 10 45 a0	 movsd	 xmm0, QWORD PTR tv251[ebp]
  000a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000a6	51		 push	 ecx
  000a7	f2 0f 11 45 98	 movsd	 QWORD PTR tv335[ebp], xmm0
  000ac	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000b1	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000b5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  000bd	f2 0f 10 4d 98	 movsd	 xmm1, QWORD PTR tv335[ebp]
  000c2	f2 0f 58 c8	 addsd	 xmm1, xmm0
  000c6	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv333[ebp]
  000cb	66 0f 2f c8	 comisd	 xmm1, xmm0
  000cf	0f 87 81 00 00
	00		 ja	 $LN8@vslider_mo
  000d5	e8 00 00 00 00	 call	 ?get_mouse_y@@YGHXZ	; get_mouse_y
  000da	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  000de	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  000e1	50		 push	 eax
  000e2	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  000e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ee	f2 0f 11 45 a8	 movsd	 QWORD PTR tv337[ebp], xmm0
  000f3	ff d0		 call	 eax
  000f5	d9 5d a4	 fstp	 DWORD PTR tv262[ebp]
  000f8	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv262[ebp]
  000fd	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00100	51		 push	 ecx
  00101	8b 55 f0	 mov	 edx, DWORD PTR _slider$[ebp]
  00104	8b 02		 mov	 eax, DWORD PTR [edx]
  00106	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  0010d	f3 0f 11 45 a0	 movss	 DWORD PTR tv339[ebp], xmm0
  00112	ff d1		 call	 ecx
  00114	d9 5d 9c	 fstp	 DWORD PTR tv269[ebp]
  00117	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv339[ebp]
  0011c	f3 0f 58 45 9c	 addss	 xmm0, DWORD PTR tv269[ebp]
  00121	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  0012b	52		 push	 edx
  0012c	f2 0f 11 45 94	 movsd	 QWORD PTR tv341[ebp], xmm0
  00131	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00136	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0013a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00142	f2 0f 10 4d 94	 movsd	 xmm1, QWORD PTR tv341[ebp]
  00147	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0014b	f2 0f 10 45 a8	 movsd	 xmm0, QWORD PTR tv337[ebp]
  00150	66 0f 2f c1	 comisd	 xmm0, xmm1
  00154	76 05		 jbe	 SHORT $LN7@vslider_mo
$LN8@vslider_mo:

; 144  : 						(get_mouse_y () > (get_ui_object_y (slider) + get_ui_object_y_size (slider) - (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen)))))
; 145  : 					{
; 146  : 		
; 147  : 						return;

  00156	e9 02 02 00 00	 jmp	 $LN1@vslider_mo
$LN7@vslider_mo:

; 148  : 					}
; 149  : 				}
; 150  : 		
; 151  : 				pos = get_ui_object_y (*captured_object) - get_ui_object_y (slider);

  0015b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00160	8b 08		 mov	 ecx, DWORD PTR [eax]
  00162	51		 push	 ecx
  00163	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00169	8b 02		 mov	 eax, DWORD PTR [edx]
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  00174	ff d2		 call	 edx
  00176	d9 5d ac	 fstp	 DWORD PTR tv280[ebp]
  00179	f3 0f 10 45 ac	 movss	 xmm0, DWORD PTR tv280[ebp]
  0017e	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  00181	50		 push	 eax
  00182	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  00185	8b 11		 mov	 edx, DWORD PTR [ecx]
  00187	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0018e	f3 0f 11 45 a8	 movss	 DWORD PTR tv343[ebp], xmm0
  00193	ff d0		 call	 eax
  00195	d9 5d a4	 fstp	 DWORD PTR tv287[ebp]
  00198	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv343[ebp]
  0019d	f3 0f 5c 45 a4	 subss	 xmm0, DWORD PTR tv287[ebp]
  001a2	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 152  : 			
; 153  : 				pos += inc;

  001a7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  001ac	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _inc$[ebp]
  001b1	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 154  : 
; 155  : 				max = get_ui_object_y_size (slider);

  001b6	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  001b9	50		 push	 eax
  001ba	8b 4d f0	 mov	 ecx, DWORD PTR _slider$[ebp]
  001bd	8b 11		 mov	 edx, DWORD PTR [ecx]
  001bf	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001c6	ff d0		 call	 eax
  001c8	d9 5d f8	 fstp	 DWORD PTR _max$[ebp]

; 156  : 			
; 157  : 				pos = bound (pos, UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen), (max - (UI_SLIDER_VIRTUAL_HEIGHT * get_screen_height (video_screen))) - get_ui_object_y_size (*captured_object));

  001cb	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001d5	50		 push	 eax
  001d6	f2 0f 11 45 a8	 movsd	 QWORD PTR tv345[ebp], xmm0
  001db	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  001e0	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  001e4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  001ec	f2 0f 10 4d a8	 movsd	 xmm1, QWORD PTR tv345[ebp]
  001f1	66 0f 2f c1	 comisd	 xmm0, xmm1
  001f5	76 22		 jbe	 SHORT $LN12@vslider_mo
  001f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  001fd	51		 push	 ecx
  001fe	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00203	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  00207	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  0020f	f2 0f 11 45 a0	 movsd	 QWORD PTR tv199[ebp], xmm0
  00214	e9 fa 00 00 00	 jmp	 $LN13@vslider_mo
$LN12@vslider_mo:
  00219	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  0021e	f3 0f 5a 4d f8	 cvtss2sd xmm1, DWORD PTR _max$[ebp]
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00229	52		 push	 edx
  0022a	f2 0f 11 45 98	 movsd	 QWORD PTR tv347[ebp], xmm0
  0022f	f2 0f 11 4d 90	 movsd	 QWORD PTR tv349[ebp], xmm1
  00234	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  00239	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  0023d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  00245	f2 0f 10 4d 90	 movsd	 xmm1, QWORD PTR tv349[ebp]
  0024a	f2 0f 5c c8	 subsd	 xmm1, xmm0
  0024e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00253	8b 08		 mov	 ecx, DWORD PTR [eax]
  00255	51		 push	 ecx
  00256	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  0025c	8b 02		 mov	 eax, DWORD PTR [edx]
  0025e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00260	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  00267	f2 0f 11 4d 88	 movsd	 QWORD PTR tv351[ebp], xmm1
  0026c	ff d2		 call	 edx
  0026e	dd 5d 80	 fstp	 QWORD PTR tv311[ebp]
  00271	f2 0f 10 45 88	 movsd	 xmm0, QWORD PTR tv351[ebp]
  00276	f2 0f 5c 45 80	 subsd	 xmm0, QWORD PTR tv311[ebp]
  0027b	f2 0f 10 4d 98	 movsd	 xmm1, QWORD PTR tv347[ebp]
  00280	66 0f 2f c8	 comisd	 xmm1, xmm0
  00284	76 73		 jbe	 SHORT $LN10@vslider_mo
  00286	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _max$[ebp]
  0028b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  00290	50		 push	 eax
  00291	f2 0f 11 85 78
	ff ff ff	 movsd	 QWORD PTR tv353[ebp], xmm0
  00299	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  0029e	f2 0f 2a c0	 cvtsi2sd xmm0, eax
  002a2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f8e000000000000
  002aa	f2 0f 10 8d 78
	ff ff ff	 movsd	 xmm1, QWORD PTR tv353[ebp]
  002b2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  002b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  002bc	8b 11		 mov	 edx, DWORD PTR [ecx]
  002be	52		 push	 edx
  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  002c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002c6	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  002cf	f2 0f 11 8d 70
	ff ff ff	 movsd	 QWORD PTR tv355[ebp], xmm1
  002d7	ff d0		 call	 eax
  002d9	dd 9d 68 ff ff
	ff		 fstp	 QWORD PTR tv323[ebp]
  002df	f2 0f 10 85 70
	ff ff ff	 movsd	 xmm0, QWORD PTR tv355[ebp]
  002e7	f2 0f 5c 85 68
	ff ff ff	 subsd	 xmm0, QWORD PTR tv323[ebp]
  002ef	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
  002f7	eb 0d		 jmp	 SHORT $LN11@vslider_mo
$LN10@vslider_mo:
  002f9	f3 0f 5a 45 fc	 cvtss2sd xmm0, DWORD PTR _pos$[ebp]
  002fe	f2 0f 11 85 60
	ff ff ff	 movsd	 QWORD PTR tv198[ebp], xmm0
$LN11@vslider_mo:
  00306	f2 0f 10 85 60
	ff ff ff	 movsd	 xmm0, QWORD PTR tv198[ebp]
  0030e	f2 0f 11 45 a0	 movsd	 QWORD PTR tv199[ebp], xmm0
$LN13@vslider_mo:
  00313	f2 0f 5a 45 a0	 cvtsd2ss xmm0, QWORD PTR tv199[ebp]
  00318	f3 0f 11 45 fc	 movss	 DWORD PTR _pos$[ebp], xmm0

; 158  : 		
; 159  : 				set_ui_object_virtual_y (*captured_object, pos / max);

  0031d	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _pos$[ebp]
  00322	f3 0f 5e 45 f8	 divss	 xmm0, DWORD PTR _max$[ebp]
  00327	51		 push	 ecx
  00328	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0032d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  00332	8b 08		 mov	 ecx, DWORD PTR [eax]
  00334	51		 push	 ecx
  00335	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?captured_object@@3PAPAUUI_OBJECT@@A ; captured_object
  0033b	8b 02		 mov	 eax, DWORD PTR [edx]
  0033d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0033f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[ecx*4]
  00346	ff d2		 call	 edx

; 160  : 		
; 161  : 				recalculate_slider_origin (slider);

  00348	8b 45 f0	 mov	 eax, DWORD PTR _slider$[ebp]
  0034b	50		 push	 eax
  0034c	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin
$LN5@vslider_mo:

; 162  : 			}
; 163  : 		}
; 164  : 		else

  00351	eb 0a		 jmp	 SHORT $LN4@vslider_mo
$LN3@vslider_mo:

; 165  : 		{
; 166  : 
; 167  : 			slider_area = NULL;

  00353	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slider_area@@3PAUUI_OBJECT@@A, 0 ; slider_area
$LN4@vslider_mo:
$LN1@vslider_mo:

; 168  : 		}
; 169  : 	}
; 170  : }

  0035d	5f		 pop	 edi
  0035e	5e		 pop	 esi
  0035f	5b		 pop	 ebx
  00360	8b e5		 mov	 esp, ebp
  00362	5d		 pop	 ebp
  00363	c2 04 00	 ret	 4
?vslider_move_function@@YGXPAUEVENT@@@Z ENDP		; vslider_move_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vslider.c
;	COMDAT ?ui_object_vslider_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?ui_object_vslider_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; ui_object_vslider_function, COMDAT

; 87   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 88   : 
; 89   : 	obj;
; 90   : 
; 91   : 	if ((int) arg == BUTTON_STATE_DOWN)

  00009	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0000d	75 30		 jne	 SHORT $LN2@ui_object_

; 92   : 	{
; 93   : 
; 94   : 		slider_area = obj;

  0000f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00012	a3 00 00 00 00	 mov	 DWORD PTR ?slider_area@@3PAUUI_OBJECT@@A, eax ; slider_area

; 95   : 
; 96   : 		set_event (MOUSE_MOVE_UP, MODIFIER_MOUSE_LEFT_BUTTON, BUTTON_STATE_EITHER, vslider_move_function); 

  00017	68 00 00 00 00	 push	 OFFSET ?vslider_move_function@@YGXPAUEVENT@@@Z ; vslider_move_function
  0001c	6a 03		 push	 3
  0001e	6a 07		 push	 7
  00020	68 03 01 00 00	 push	 259			; 00000103H
  00025	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 97   : 
; 98   : 		set_event (MOUSE_MOVE_DOWN, MODIFIER_MOUSE_LEFT_BUTTON, BUTTON_STATE_EITHER, vslider_move_function);

  0002a	68 00 00 00 00	 push	 OFFSET ?vslider_move_function@@YGXPAUEVENT@@@Z ; vslider_move_function
  0002f	6a 03		 push	 3
  00031	6a 07		 push	 7
  00033	68 04 01 00 00	 push	 260			; 00000104H
  00038	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event
  0003d	eb 30		 jmp	 SHORT $LN1@ui_object_
$LN2@ui_object_:

; 99   : 	}
; 100  : 	else if ((int) arg == BUTTON_STATE_UP)

  0003f	83 7d 0c 01	 cmp	 DWORD PTR _arg$[ebp], 1
  00043	75 2a		 jne	 SHORT $LN1@ui_object_

; 101  : 	{
; 102  : 
; 103  : 		slider_area = NULL;

  00045	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slider_area@@3PAUUI_OBJECT@@A, 0 ; slider_area

; 104  : 
; 105  : 		set_event (MOUSE_MOVE_UP, MODIFIER_MOUSE_LEFT_BUTTON, BUTTON_STATE_EITHER, NULL);

  0004f	6a 00		 push	 0
  00051	6a 03		 push	 3
  00053	6a 07		 push	 7
  00055	68 03 01 00 00	 push	 259			; 00000103H
  0005a	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event

; 106  : 
; 107  : 		set_event (MOUSE_MOVE_DOWN, MODIFIER_MOUSE_LEFT_BUTTON, BUTTON_STATE_EITHER, NULL);

  0005f	6a 00		 push	 0
  00061	6a 03		 push	 3
  00063	6a 07		 push	 7
  00065	68 04 01 00 00	 push	 260			; 00000104H
  0006a	e8 00 00 00 00	 call	 ?set_event@@YGXHHHP6GXPAUEVENT@@@Z@Z ; set_event
$LN1@ui_object_:

; 108  : 	}
; 109  : }

  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5b		 pop	 ebx
  00072	8b e5		 mov	 esp, ebp
  00074	5d		 pop	 ebp
  00075	c2 08 00	 ret	 8
?ui_object_vslider_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; ui_object_vslider_function
_TEXT	ENDS
END
