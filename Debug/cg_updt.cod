; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\cargo\cg_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_cargo_update_functions@@YGXXZ		; overload_cargo_update_functions
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?basic_cargo_movement@@YGXPAUENTITY@@@Z:PROC	; basic_cargo_movement
EXTRN	?basic_cargo_death_movement@@YGXPAUENTITY@@@Z:PROC ; basic_cargo_death_movement
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\cargo\cg_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 120  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 121  : 	cargo
; 122  : 		*raw;
; 123  : 
; 124  : 	int
; 125  : 		loop;
; 126  : 
; 127  : 	raw = (cargo *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 128  : 
; 129  : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 130  : 
; 131  : 	if (raw->mob.alive)

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00021	83 e1 01	 and	 ecx, 1
  00024	74 51		 je	 SHORT $LN8@update_cli

; 132  : 	{
; 133  : 
; 134  : 		////////////////////////////////////////
; 135  : 
; 136  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00026	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0002d	eb 09		 jmp	 SHORT $LN4@update_cli
$LN2@update_cli:
  0002f	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00032	83 c0 01	 add	 eax, 1
  00035	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_cli:
  00038	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  0003c	7d 37		 jge	 SHORT $LN3@update_cli

; 137  : 		{
; 138  : 			
; 139  : 			get_3d_terrain_point_data (raw->mob.position.x, raw->mob.position.z, &raw->terrain_info);

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00041	05 9c 00 00 00	 add	 eax, 156		; 0000009cH
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0004a	51		 push	 ecx
  0004b	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00050	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00055	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00058	51		 push	 ecx
  00059	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0005e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00063	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00068	dd d8		 fstp	 ST(0)

; 140  : 
; 141  : 			basic_cargo_movement (en);

  0006a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?basic_cargo_movement@@YGXPAUENTITY@@@Z ; basic_cargo_movement

; 142  : 		}

  00073	eb ba		 jmp	 SHORT $LN2@update_cli
$LN3@update_cli:

; 143  : 
; 144  : 		////////////////////////////////////////
; 145  : 	}
; 146  : 	else

  00075	eb 23		 jmp	 SHORT $LN6@update_cli
$LN8@update_cli:

; 147  : 	{
; 148  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00077	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0007e	eb 09		 jmp	 SHORT $LN7@update_cli
$LN5@update_cli:
  00080	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00083	83 c0 01	 add	 eax, 1
  00086	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_cli:
  00089	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  0008d	7d 0b		 jge	 SHORT $LN6@update_cli

; 149  : 		{
; 150  : 
; 151  : 			basic_cargo_death_movement (en);

  0008f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ?basic_cargo_death_movement@@YGXPAUENTITY@@@Z ; basic_cargo_death_movement

; 152  : 		}

  00098	eb e6		 jmp	 SHORT $LN5@update_cli
$LN6@update_cli:

; 153  : 	}
; 154  : }

  0009a	5f		 pop	 edi
  0009b	5e		 pop	 esi
  0009c	5b		 pop	 ebx
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\cargo\cg_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	cargo
; 82   : 		*raw;
; 83   : 
; 84   : 	int
; 85   : 		loop;
; 86   : 
; 87   : 	raw = (cargo *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 88   : 
; 89   : 	if (raw->mob.alive)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00018	83 e1 01	 and	 ecx, 1
  0001b	74 51		 je	 SHORT $LN8@update_ser

; 90   : 	{
; 91   : 
; 92   : 		////////////////////////////////////////
; 93   : 
; 94   : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0001d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00024	eb 09		 jmp	 SHORT $LN4@update_ser
$LN2@update_ser:
  00026	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00029	83 c0 01	 add	 eax, 1
  0002c	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_ser:
  0002f	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00033	7d 37		 jge	 SHORT $LN3@update_ser

; 95   : 		{
; 96   : 
; 97   : 			get_3d_terrain_point_data (raw->mob.position.x, raw->mob.position.z, &raw->terrain_info);

  00035	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00038	05 9c 00 00 00	 add	 eax, 156		; 0000009cH
  0003d	50		 push	 eax
  0003e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00041	51		 push	 ecx
  00042	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  00047	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004c	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0004f	51		 push	 ecx
  00050	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  00055	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005a	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  0005f	dd d8		 fstp	 ST(0)

; 98   : 
; 99   : 			basic_cargo_movement (en);

  00061	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?basic_cargo_movement@@YGXPAUENTITY@@@Z ; basic_cargo_movement

; 100  : 		}

  0006a	eb ba		 jmp	 SHORT $LN2@update_ser
$LN3@update_ser:

; 101  : 
; 102  : 		////////////////////////////////////////
; 103  : 	}
; 104  : 	else

  0006c	eb 23		 jmp	 SHORT $LN6@update_ser
$LN8@update_ser:

; 105  : 	{
; 106  : 
; 107  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00075	eb 09		 jmp	 SHORT $LN7@update_ser
$LN5@update_ser:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_ser:
  00080	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00084	7d 0b		 jge	 SHORT $LN6@update_ser

; 108  : 		{
; 109  : 
; 110  : 			basic_cargo_death_movement (en);

  00086	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?basic_cargo_death_movement@@YGXPAUENTITY@@@Z ; basic_cargo_death_movement

; 111  : 		}

  0008f	eb e6		 jmp	 SHORT $LN5@update_ser
$LN6@update_ser:

; 112  : 	}
; 113  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\cargo\cg_updt.c
;	COMDAT ?overload_cargo_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_cargo_update_functions@@YGXXZ PROC		; overload_cargo_update_functions, COMDAT

; 161  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 162  : 	fn_update_client_server_entity[ENTITY_TYPE_CARGO][COMMS_MODEL_SERVER]  	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	c1 e0 02	 shl	 eax, 2
  00011	b9 04 00 00 00	 mov	 ecx, 4
  00016	6b d1 00	 imul	 edx, ecx, 0
  00019	c7 84 10 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+edx], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 163  : 
; 164  : 	fn_update_client_server_entity[ENTITY_TYPE_CARGO][COMMS_MODEL_CLIENT]  	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	c1 e0 02	 shl	 eax, 2
  0002c	b9 04 00 00 00	 mov	 ecx, 4
  00031	c1 e1 00	 shl	 ecx, 0
  00034	c7 84 08 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[eax+ecx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 165  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_cargo_update_functions@@YGXXZ ENDP		; overload_cargo_update_functions
_TEXT	ENDS
END
