; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\player\play_sc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?select_player_screen@@3PAUUI_OBJECT@@A		; select_player_screen
PUBLIC	?log_page@@3PAPAUUI_OBJECT@@A			; log_page
PUBLIC	?player_log_current_side@@3W4ENTITY_SIDES@@A	; player_log_current_side
PUBLIC	?player_creating_player@@3HA			; player_creating_player
PUBLIC	?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A	; player_screen_graphic
_BSS	SEGMENT
?select_player_screen@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; select_player_screen
?log_page@@3PAPAUUI_OBJECT@@A DD 03H DUP (?)		; log_page
?player_log_current_side@@3W4ENTITY_SIDES@@A DD 01H DUP (?) ; player_log_current_side
?player_creating_player@@3HA DD 01H DUP (?)		; player_creating_player
?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A DD 01H DUP (?) ; player_screen_graphic
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?initialise_select_player_screen@@YGXXZ		; initialise_select_player_screen
PUBLIC	?load_player_list@@YGXXZ			; load_player_list
PUBLIC	?save_player_list@@YGXXZ			; save_player_list
PUBLIC	?display_player_log_page@@YGXW4PLAYER_LOG_PAGES@@@Z ; display_player_log_page
PUBLIC	?test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z ; test_player_scoring
PUBLIC	?resize_player_list_size@@YGXXZ			; resize_player_list_size
PUBLIC	?get_player_log_unique_id@@YGHXZ		; get_player_log_unique_id
PUBLIC	?destroy_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z	; destroy_player_log
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_09BCKKEJHI@UI_PILOTS@			; `string'
PUBLIC	??_C@_06FKDAMKFP@DELETE@			; `string'
PUBLIC	??_C@_06LIGLDPGD@RENAME@			; `string'
PUBLIC	??_C@_03BOJFLAKG@ADD@				; `string'
PUBLIC	??_C@_06LFIBPDEL@Medals@			; `string'
PUBLIC	??_C@_09HNDCBJKL@Red?5Force@			; `string'
PUBLIC	??_C@_0L@GNELJAHL@Blue?5Force@			; `string'
PUBLIC	??_C@_0L@BKGOBDLF@Flight?5Log@			; `string'
PUBLIC	??_C@_0N@CPOKEKEE@Flight?5Hours@		; `string'
PUBLIC	??_C@_0M@FAMFPMO@Weapons?5Log@			; `string'
PUBLIC	??_C@_05LMLILOOH@UI_OK@				; `string'
PUBLIC	??_C@_0BC@DKJDPFA@Undo?5Last?5Mission@		; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0BP@JFBMFKIL@graphics?2ui?2cohokum?2pilots?4psd@ ; `string'
PUBLIC	??_C@_0CE@GFFJNOMM@PLAY_SC?3?5Can?8t?5locate?5player?5lo@ ; `string'
PUBLIC	??_C@_0CB@PPKLJFPE@PLAY_SC?3?5Can?8t?5locate?5player?5lo@ ; `string'
PUBLIC	?__LINE__Var@?0??player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `player_name_input_function'::`1'::__LINE__Var
PUBLIC	??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_06BALNJMNP@player@			; `string'
PUBLIC	?__LINE__Var@?0??player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `player_rename_function'::`1'::__LINE__Var
PUBLIC	??_C@_09OHOKCDH@list_item@			; `string'
PUBLIC	??_C@_0P@HMHCKJLG@Unnamed?5Player@		; `string'
PUBLIC	??_C@_0N@FHPNGNNN@playersv?4bin@		; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0N@MDDECFKH@players2?4bin@		; `string'
PUBLIC	??_C@_0M@KFGHKOIC@players?4bin@			; `string'
PUBLIC	??_C@_0BP@JGBOKIEB@Unknown?5players?4bin?5version?5?$CFi@ ; `string'
PUBLIC	??_C@_0L@BBNNMEOA@Razorworks@			; `string'
PUBLIC	??_C@_02GMLFBBN@wb@				; `string'
PUBLIC	?__LINE__Var@?0??create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z@4JA ; `create_player_log'::`1'::__LINE__Var
PUBLIC	??_C@_04MEMAJGDJ@name@				; `string'
PUBLIC	?__LINE__Var@?0??rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z@4JA ; `rename_player_log'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@BBMKFDJL@PLAY_SC?3?5warning?3?5Player?5log?5wi@ ; `string'
PUBLIC	??_C@_0BC@CAKCNPDI@Date?5Commissioned@		; `string'
PUBLIC	??_C@_04PFAOODAA@?$CFs?3?5@			; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_03BEJFCEHO@?$CFd?1@			; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0CN@FEKBKMBK@PLAY_SC?3?5built?5player?5log?5list?5@ ; `string'
PUBLIC	?__LINE__Var@?0??test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `test_player_scoring'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@ ; `string'
PUBLIC	??_C@_0CO@GEPMHCPP@Campaign?5Medal?5Awarded?5?$CF2d?5scor@ ; `string'
PUBLIC	??_C@_0CO@INEIFKHF@Awarded?5Aviator?5Wings?5?5?$CF2d?5scor@ ; `string'
PUBLIC	??_C@_0CO@CCIPAKLG@Awarded?5Valour?5Medal?5?5?5?$CF2d?5scor@ ; `string'
PUBLIC	__real@3ced9168
PUBLIC	__real@3cf5c28f
PUBLIC	__real@3d1ba5e3
PUBLIC	__real@3d1fbe77
PUBLIC	__real@3d23d70a
PUBLIC	__real@3d2c0831
PUBLIC	__real@3d3c6a7f
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3d6d9168
PUBLIC	__real@3dcccccd
PUBLIC	__real@3dd91687
PUBLIC	__real@3de56042
PUBLIC	__real@3e010625
PUBLIC	__real@3e19999a
PUBLIC	__real@3e28f5c3
PUBLIC	__real@3e3020c5
PUBLIC	__real@3e3645a2
PUBLIC	__real@3e47ae14
PUBLIC	__real@3e49ba5e
PUBLIC	__real@3e6147ae
PUBLIC	__real@3e645a1d
PUBLIC	__real@3e73b646
PUBLIC	__real@3e7ced91
PUBLIC	__real@3e800000
PUBLIC	__real@3e9fbe77
PUBLIC	__real@3ea24dd3
PUBLIC	__real@3eec8b44
PUBLIC	__real@3eee978d
PUBLIC	__real@3f00002000400080
PUBLIC	__real@3f147ae1
PUBLIC	__real@3f158106
PUBLIC	__real@3f1eb852
PUBLIC	__real@3f20c49c
PUBLIC	__real@3f28f5c3
PUBLIC	__real@3f2d4fdf
PUBLIC	__real@3f389375
PUBLIC	__real@3f3d2f1b
PUBLIC	__real@3f400000
PUBLIC	__real@3f4ccccd
PUBLIC	__real@3f51eb85
PUBLIC	__real@3f570a3d
PUBLIC	__real@3f59999a
PUBLIC	__real@3f5c28f6
PUBLIC	__real@3f5cac08
PUBLIC	__real@3f610625
PUBLIC	__real@3f666666
PUBLIC	__real@3f722d0e
PUBLIC	__real@3f800000
PUBLIC	__real@3f999999a0000000
PUBLIC	__real@3fa374bc60000000
PUBLIC	__real@3fa3f7cee0000000
PUBLIC	__real@3fa810624dd2f1aa
PUBLIC	__real@3fa99999a0000000
PUBLIC	__real@3fad2f1aa0000000
PUBLIC	__real@3fc3333340000000
PUBLIC	__real@3fdee978e0000000
PUBLIC	__real@3fea872b00000000
PUBLIC	__real@3fed9999a0000000
PUBLIC	__real@4082c00000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@4092c00000000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fread:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__fwrite:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strcat:PROC
EXTRN	_strcmp:PROC
EXTRN	_strlen:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?debug_filtered_log@@YAXPBDZZ:PROC		; debug_filtered_log
EXTRN	?get_system_date@@YGXPAH00@Z:PROC		; get_system_date
EXTRN	?file_exist@@YGHPBD@Z:PROC			; file_exist
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?blit_front_buffer_to_render_buffer@@YGXXZ:PROC	; blit_front_buffer_to_render_buffer
EXTRN	?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z:PROC ; create_texture_graphic
EXTRN	?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z:PROC ; destroy_texture_graphic
EXTRN	?direct_play_set_player_name@@YGXPBD@Z:PROC	; direct_play_set_player_name
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z:PROC	; destroy_ui_object
EXTRN	?reset_time_values@@YGXPAUUI_OBJECT@@@Z:PROC	; reset_time_values
EXTRN	?push_ui_screen@@YGXPAUUI_OBJECT@@@Z:PROC	; push_ui_screen
EXTRN	?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z:PROC	; pop_ui_screen
EXTRN	?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z:PROC ; ui_object_destroy_list_items
EXTRN	?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z:PROC ; add_to_pop_up_list
EXTRN	?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z:PROC ; recalculate_slider_size
EXTRN	?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z:PROC ; recalculate_slider_origin
EXTRN	?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z:PROC ; get_ui_object_vslider
EXTRN	?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z:PROC ; set_ui_object_vslider_virtual_position
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?set_frontend_slider_graphics@@YGXPAUUI_OBJECT@@@Z:PROC ; set_frontend_slider_graphics
EXTRN	?notify_show_general_log_page@@YGXPAUUI_OBJECT@@@Z:PROC ; notify_show_general_log_page
EXTRN	?define_general_log_page_objects@@YGXXZ:PROC	; define_general_log_page_objects
EXTRN	?rebuild_general_log_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z:PROC ; rebuild_general_log_list
EXTRN	?notify_show_weapon_log_page@@YGXPAUUI_OBJECT@@@Z:PROC ; notify_show_weapon_log_page
EXTRN	?define_weapon_log_page_objects@@YGXXZ:PROC	; define_weapon_log_page_objects
EXTRN	?rebuild_weapon_log_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z:PROC ; rebuild_weapon_log_list
EXTRN	?define_medals_page_objects@@YGXXZ:PROC		; define_medals_page_objects
EXTRN	?award_campaign_medal@@YGXHH@Z:PROC		; award_campaign_medal
EXTRN	?award_aviator_wings@@YGHH@Z:PROC		; award_aviator_wings
EXTRN	?award_valour_medal@@YGHHH@Z:PROC		; award_valour_medal
EXTRN	?get_pilot_rank_name@@YGPBDH@Z:PROC		; get_pilot_rank_name
EXTRN	?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ:PROC ; get_player_log_list
EXTRN	?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z:PROC ; set_player_log_list
EXTRN	?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ:PROC ; get_current_player_log
EXTRN	?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z:PROC ; set_current_player_log
EXTRN	?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z:PROC ; get_player_log_next
EXTRN	?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_name
EXTRN	?get_player_rank_from_points@@YGHH@Z:PROC	; get_player_rank_from_points
EXTRN	?get_player_points_from_rank@@YGHH@Z:PROC	; get_player_points_from_rank
EXTRN	?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_rank
EXTRN	?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z:PROC ; set_player_log_rank
EXTRN	?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_experience
EXTRN	?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z:PROC ; inc_player_log_experience
EXTRN	?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z:PROC ; set_player_log_missions_flown
EXTRN	?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z:PROC ; get_player_log_flying_seconds
EXTRN	?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z:PROC ; inc_player_log_flying_seconds
EXTRN	?restore_log_from_backup@@YGHXZ:PROC		; restore_log_from_backup
EXTRN	?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z:PROC ; preprocess_translation_object_size
EXTRN	?set_ui_frontend_list_object_highlightable@@YGXPAUUI_OBJECT@@@Z:PROC ; set_ui_frontend_list_object_highlightable
EXTRN	?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z:PROC ; set_text_option_backdrop_object
EXTRN	?notify_show_flight_hours_page@@YGXPAUUI_OBJECT@@@Z:PROC ; notify_show_flight_hours_page
EXTRN	?define_flight_hours_page_objects@@YGXXZ:PROC	; define_flight_hours_page_objects
EXTRN	?rebuild_flight_hours_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z:PROC ; rebuild_flight_hours_list
EXTRN	?random_number_seed@@3HA:DWORD			; random_number_seed
EXTRN	?current_font@@3PAUUI_FONT_TYPE@@A:DWORD	; current_font
EXTRN	?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_end
EXTRN	?fn_get_ui_object_x_end@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_end
EXTRN	?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_x
EXTRN	?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_x
EXTRN	?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y
EXTRN	?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_y
EXTRN	?fn_get_ui_object_virtual_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_x_size
EXTRN	?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y_size
EXTRN	?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_y_size
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_drawable
EXTRN	?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_drawable
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_set_ui_object_item_number@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_item_number
EXTRN	?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_item_number
EXTRN	?fn_set_ui_object_item_number2@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_item_number2
EXTRN	?fn_get_ui_object_item_number2@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_item_number2
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA:BYTE ; fn_set_ui_object_text
EXTRN	?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_text
EXTRN	?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA:BYTE ; fn_set_ui_object_graphic
EXTRN	?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA:BYTE ; fn_set_ui_object_texture_graphic
EXTRN	?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_graphic_type
EXTRN	?ui_screen_title_text_colour@@3UREAL_COLOUR@@A:DWORD ; ui_screen_title_text_colour
EXTRN	?ui_option_title_text_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_title_text_colour
EXTRN	?ui_list_text_default_colour@@3UREAL_COLOUR@@A:DWORD ; ui_list_text_default_colour
EXTRN	?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A:DWORD ; ui_list_text_hilite_colour
EXTRN	?ui_option_text_default_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_text_default_colour
EXTRN	?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A:DWORD ; ui_option_text_hilite_colour
EXTRN	?command_line_player_start_rank@@3HA:DWORD	; command_line_player_start_rank
EXTRN	?graphics_files@@3PAUFILE_DATA@@A:BYTE		; graphics_files
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A:DWORD ; text_option_bdrop
EXTRN	?list_box_graphic@@3PAUTEXTURE_GRAPHIC@@A:DWORD	; list_box_graphic
EXTRN	?player_medals_screen@@3PAUUI_OBJECT@@A:DWORD	; player_medals_screen
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?player_list_bdrop@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; player_list_bdrop
?player_list_area@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; player_list_area
?player_list@@3PAUUI_OBJECT@@A DD 01H DUP (?)		; player_list
?player_name_entry_area@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_name_entry_area
?player_name_input@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; player_name_input
?player_general_log_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_general_log_selection_button
?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_flight_hours_selection_button
?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_weapon_log_selection_button
?player_medals_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_medals_selection_button
?player_blue_side_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_blue_side_selection_button
?player_red_side_selection_button@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_red_side_selection_button
?current_player_rank_text@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; current_player_rank_text
?player_commision_date_text@@3PAUUI_OBJECT@@A DD 01H DUP (?) ; player_commision_date_text
_BSS	ENDS
;	COMDAT __real@4092c00000000000
CONST	SEGMENT
__real@4092c00000000000 DQ 04092c00000000000r	; 1200
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@4082c00000000000
CONST	SEGMENT
__real@4082c00000000000 DQ 04082c00000000000r	; 600
CONST	ENDS
;	COMDAT __real@3fed9999a0000000
CONST	SEGMENT
__real@3fed9999a0000000 DQ 03fed9999a0000000r	; 0.925
CONST	ENDS
;	COMDAT __real@3fea872b00000000
CONST	SEGMENT
__real@3fea872b00000000 DQ 03fea872b00000000r	; 0.829
CONST	ENDS
;	COMDAT __real@3fdee978e0000000
CONST	SEGMENT
__real@3fdee978e0000000 DQ 03fdee978e0000000r	; 0.483
CONST	ENDS
;	COMDAT __real@3fc3333340000000
CONST	SEGMENT
__real@3fc3333340000000 DQ 03fc3333340000000r	; 0.15
CONST	ENDS
;	COMDAT __real@3fad2f1aa0000000
CONST	SEGMENT
__real@3fad2f1aa0000000 DQ 03fad2f1aa0000000r	; 0.057
CONST	ENDS
;	COMDAT __real@3fa99999a0000000
CONST	SEGMENT
__real@3fa99999a0000000 DQ 03fa99999a0000000r	; 0.05
CONST	ENDS
;	COMDAT __real@3fa810624dd2f1aa
CONST	SEGMENT
__real@3fa810624dd2f1aa DQ 03fa810624dd2f1aar	; 0.047
CONST	ENDS
;	COMDAT __real@3fa3f7cee0000000
CONST	SEGMENT
__real@3fa3f7cee0000000 DQ 03fa3f7cee0000000r	; 0.039
CONST	ENDS
;	COMDAT __real@3fa374bc60000000
CONST	SEGMENT
__real@3fa374bc60000000 DQ 03fa374bc60000000r	; 0.038
CONST	ENDS
;	COMDAT __real@3f999999a0000000
CONST	SEGMENT
__real@3f999999a0000000 DQ 03f999999a0000000r	; 0.025
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f722d0e
CONST	SEGMENT
__real@3f722d0e DD 03f722d0er			; 0.946
CONST	ENDS
;	COMDAT __real@3f666666
CONST	SEGMENT
__real@3f666666 DD 03f666666r			; 0.9
CONST	ENDS
;	COMDAT __real@3f610625
CONST	SEGMENT
__real@3f610625 DD 03f610625r			; 0.879
CONST	ENDS
;	COMDAT __real@3f5cac08
CONST	SEGMENT
__real@3f5cac08 DD 03f5cac08r			; 0.862
CONST	ENDS
;	COMDAT __real@3f5c28f6
CONST	SEGMENT
__real@3f5c28f6 DD 03f5c28f6r			; 0.86
CONST	ENDS
;	COMDAT __real@3f59999a
CONST	SEGMENT
__real@3f59999a DD 03f59999ar			; 0.85
CONST	ENDS
;	COMDAT __real@3f570a3d
CONST	SEGMENT
__real@3f570a3d DD 03f570a3dr			; 0.84
CONST	ENDS
;	COMDAT __real@3f51eb85
CONST	SEGMENT
__real@3f51eb85 DD 03f51eb85r			; 0.82
CONST	ENDS
;	COMDAT __real@3f4ccccd
CONST	SEGMENT
__real@3f4ccccd DD 03f4ccccdr			; 0.8
CONST	ENDS
;	COMDAT __real@3f400000
CONST	SEGMENT
__real@3f400000 DD 03f400000r			; 0.75
CONST	ENDS
;	COMDAT __real@3f3d2f1b
CONST	SEGMENT
__real@3f3d2f1b DD 03f3d2f1br			; 0.739
CONST	ENDS
;	COMDAT __real@3f389375
CONST	SEGMENT
__real@3f389375 DD 03f389375r			; 0.721
CONST	ENDS
;	COMDAT __real@3f2d4fdf
CONST	SEGMENT
__real@3f2d4fdf DD 03f2d4fdfr			; 0.677
CONST	ENDS
;	COMDAT __real@3f28f5c3
CONST	SEGMENT
__real@3f28f5c3 DD 03f28f5c3r			; 0.66
CONST	ENDS
;	COMDAT __real@3f20c49c
CONST	SEGMENT
__real@3f20c49c DD 03f20c49cr			; 0.628
CONST	ENDS
;	COMDAT __real@3f1eb852
CONST	SEGMENT
__real@3f1eb852 DD 03f1eb852r			; 0.62
CONST	ENDS
;	COMDAT __real@3f158106
CONST	SEGMENT
__real@3f158106 DD 03f158106r			; 0.584
CONST	ENDS
;	COMDAT __real@3f147ae1
CONST	SEGMENT
__real@3f147ae1 DD 03f147ae1r			; 0.58
CONST	ENDS
;	COMDAT __real@3f00002000400080
CONST	SEGMENT
__real@3f00002000400080 DQ 03f00002000400080r	; 3.05185e-05
CONST	ENDS
;	COMDAT __real@3eee978d
CONST	SEGMENT
__real@3eee978d DD 03eee978dr			; 0.466
CONST	ENDS
;	COMDAT __real@3eec8b44
CONST	SEGMENT
__real@3eec8b44 DD 03eec8b44r			; 0.462
CONST	ENDS
;	COMDAT __real@3ea24dd3
CONST	SEGMENT
__real@3ea24dd3 DD 03ea24dd3r			; 0.317
CONST	ENDS
;	COMDAT __real@3e9fbe77
CONST	SEGMENT
__real@3e9fbe77 DD 03e9fbe77r			; 0.312
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e7ced91
CONST	SEGMENT
__real@3e7ced91 DD 03e7ced91r			; 0.247
CONST	ENDS
;	COMDAT __real@3e73b646
CONST	SEGMENT
__real@3e73b646 DD 03e73b646r			; 0.238
CONST	ENDS
;	COMDAT __real@3e645a1d
CONST	SEGMENT
__real@3e645a1d DD 03e645a1dr			; 0.223
CONST	ENDS
;	COMDAT __real@3e6147ae
CONST	SEGMENT
__real@3e6147ae DD 03e6147aer			; 0.22
CONST	ENDS
;	COMDAT __real@3e49ba5e
CONST	SEGMENT
__real@3e49ba5e DD 03e49ba5er			; 0.197
CONST	ENDS
;	COMDAT __real@3e47ae14
CONST	SEGMENT
__real@3e47ae14 DD 03e47ae14r			; 0.195
CONST	ENDS
;	COMDAT __real@3e3645a2
CONST	SEGMENT
__real@3e3645a2 DD 03e3645a2r			; 0.178
CONST	ENDS
;	COMDAT __real@3e3020c5
CONST	SEGMENT
__real@3e3020c5 DD 03e3020c5r			; 0.172
CONST	ENDS
;	COMDAT __real@3e28f5c3
CONST	SEGMENT
__real@3e28f5c3 DD 03e28f5c3r			; 0.165
CONST	ENDS
;	COMDAT __real@3e19999a
CONST	SEGMENT
__real@3e19999a DD 03e19999ar			; 0.15
CONST	ENDS
;	COMDAT __real@3e010625
CONST	SEGMENT
__real@3e010625 DD 03e010625r			; 0.126
CONST	ENDS
;	COMDAT __real@3de56042
CONST	SEGMENT
__real@3de56042 DD 03de56042r			; 0.112
CONST	ENDS
;	COMDAT __real@3dd91687
CONST	SEGMENT
__real@3dd91687 DD 03dd91687r			; 0.106
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d6d9168
CONST	SEGMENT
__real@3d6d9168 DD 03d6d9168r			; 0.058
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d3c6a7f
CONST	SEGMENT
__real@3d3c6a7f DD 03d3c6a7fr			; 0.046
CONST	ENDS
;	COMDAT __real@3d2c0831
CONST	SEGMENT
__real@3d2c0831 DD 03d2c0831r			; 0.042
CONST	ENDS
;	COMDAT __real@3d23d70a
CONST	SEGMENT
__real@3d23d70a DD 03d23d70ar			; 0.04
CONST	ENDS
;	COMDAT __real@3d1fbe77
CONST	SEGMENT
__real@3d1fbe77 DD 03d1fbe77r			; 0.039
CONST	ENDS
;	COMDAT __real@3d1ba5e3
CONST	SEGMENT
__real@3d1ba5e3 DD 03d1ba5e3r			; 0.038
CONST	ENDS
;	COMDAT __real@3cf5c28f
CONST	SEGMENT
__real@3cf5c28f DD 03cf5c28fr			; 0.03
CONST	ENDS
;	COMDAT __real@3ced9168
CONST	SEGMENT
__real@3ced9168 DD 03ced9168r			; 0.029
CONST	ENDS
;	COMDAT ??_C@_0CO@CCIPAKLG@Awarded?5Valour?5Medal?5?5?5?$CF2d?5scor@
CONST	SEGMENT
??_C@_0CO@CCIPAKLG@Awarded?5Valour?5Medal?5?5?5?$CF2d?5scor@ DB 'Awarded '
	DB	'Valour Medal   %2d score:%8d time:%8f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@INEIFKHF@Awarded?5Aviator?5Wings?5?5?$CF2d?5scor@
CONST	SEGMENT
??_C@_0CO@INEIFKHF@Awarded?5Aviator?5Wings?5?5?$CF2d?5scor@ DB 'Awarded A'
	DB	'viator Wings  %2d score:%8d time:%8f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@GEPMHCPP@Campaign?5Medal?5Awarded?5?$CF2d?5scor@
CONST	SEGMENT
??_C@_0CO@GEPMHCPP@Campaign?5Medal?5Awarded?5?$CF2d?5scor@ DB 'Campaign M'
	DB	'edal Awarded %2d score:%8d time:%8f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
CONST	SEGMENT
??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@ DB '('
	DB	'side >= 0) && (side <= NUM_ENTITY_SIDES)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 08adH ; `test_player_scoring'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CN@FEKBKMBK@PLAY_SC?3?5built?5player?5log?5list?5@
CONST	SEGMENT
??_C@_0CN@FEKBKMBK@PLAY_SC?3?5built?5player?5log?5list?5@ DB 'PLAY_SC: bu'
	DB	'ilt player log list with %d items', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03BEJFCEHO@?$CFd?1@
CONST	SEGMENT
??_C@_03BEJFCEHO@?$CFd?1@ DB '%d/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04PFAOODAA@?$CFs?3?5@
CONST	SEGMENT
??_C@_04PFAOODAA@?$CFs?3?5@ DB '%s: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CAKCNPDI@Date?5Commissioned@
CONST	SEGMENT
??_C@_0BC@CAKCNPDI@Date?5Commissioned@ DB 'Date Commissioned', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@BBMKFDJL@PLAY_SC?3?5warning?3?5Player?5log?5wi@
CONST	SEGMENT
??_C@_0CK@BBMKFDJL@PLAY_SC?3?5warning?3?5Player?5log?5wi@ DB 'PLAY_SC: wa'
	DB	'rning: Player log without name', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z@4JA DD 07c6H ; `rename_player_log'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name@ DB 'name', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z@4JA DD 07a5H ; `create_player_log'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb@
CONST	SEGMENT
??_C@_02GMLFBBN@wb@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBNNMEOA@Razorworks@
CONST	SEGMENT
??_C@_0L@BBNNMEOA@Razorworks@ DB 'Razorworks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JGBOKIEB@Unknown?5players?4bin?5version?5?$CFi@
CONST	SEGMENT
??_C@_0BP@JGBOKIEB@Unknown?5players?4bin?5version?5?$CFi@ DB 'Unknown pla'
	DB	'yers.bin version %i', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KFGHKOIC@players?4bin@
CONST	SEGMENT
??_C@_0M@KFGHKOIC@players?4bin@ DB 'players.bin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDDECFKH@players2?4bin@
CONST	SEGMENT
??_C@_0N@MDDECFKH@players2?4bin@ DB 'players2.bin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FHPNGNNN@playersv?4bin@
CONST	SEGMENT
??_C@_0N@FHPNGNNN@playersv?4bin@ DB 'playersv.bin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HMHCKJLG@Unnamed?5Player@
CONST	SEGMENT
??_C@_0P@HMHCKJLG@Unnamed?5Player@ DB 'Unnamed Player', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OHOKCDH@list_item@
CONST	SEGMENT
??_C@_09OHOKCDH@list_item@ DB 'list_item', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 04e4H ; `player_rename_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06BALNJMNP@player@
CONST	SEGMENT
??_C@_06BALNJMNP@player@ DB 'player', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nhv'
	DB	'90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 0491H ; `player_name_input_function'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CB@PPKLJFPE@PLAY_SC?3?5Can?8t?5locate?5player?5lo@
CONST	SEGMENT
??_C@_0CB@PPKLJFPE@PLAY_SC?3?5Can?8t?5locate?5player?5lo@ DB 'PLAY_SC: Ca'
	DB	'n''t locate player log', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@GFFJNOMM@PLAY_SC?3?5Can?8t?5locate?5player?5lo@
CONST	SEGMENT
??_C@_0CE@GFFJNOMM@PLAY_SC?3?5Can?8t?5locate?5player?5lo@ DB 'PLAY_SC: Ca'
	DB	'n''t locate player log %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JFBMFKIL@graphics?2ui?2cohokum?2pilots?4psd@
CONST	SEGMENT
??_C@_0BP@JFBMFKIL@graphics?2ui?2cohokum?2pilots?4psd@ DB 'graphics\ui\co'
	DB	'hokum\pilots.psd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DKJDPFA@Undo?5Last?5Mission@
CONST	SEGMENT
??_C@_0BC@DKJDPFA@Undo?5Last?5Mission@ DB 'Undo Last Mission', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05LMLILOOH@UI_OK@
CONST	SEGMENT
??_C@_05LMLILOOH@UI_OK@ DB 'UI_OK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FAMFPMO@Weapons?5Log@
CONST	SEGMENT
??_C@_0M@FAMFPMO@Weapons?5Log@ DB 'Weapons Log', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CPOKEKEE@Flight?5Hours@
CONST	SEGMENT
??_C@_0N@CPOKEKEE@Flight?5Hours@ DB 'Flight Hours', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BKGOBDLF@Flight?5Log@
CONST	SEGMENT
??_C@_0L@BKGOBDLF@Flight?5Log@ DB 'Flight Log', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GNELJAHL@Blue?5Force@
CONST	SEGMENT
??_C@_0L@GNELJAHL@Blue?5Force@ DB 'Blue Force', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNDCBJKL@Red?5Force@
CONST	SEGMENT
??_C@_09HNDCBJKL@Red?5Force@ DB 'Red Force', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06LFIBPDEL@Medals@
CONST	SEGMENT
??_C@_06LFIBPDEL@Medals@ DB 'Medals', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BOJFLAKG@ADD@
CONST	SEGMENT
??_C@_03BOJFLAKG@ADD@ DB 'ADD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06LIGLDPGD@RENAME@
CONST	SEGMENT
??_C@_06LIGLDPGD@RENAME@ DB 'RENAME', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06FKDAMKFP@DELETE@
CONST	SEGMENT
??_C@_06FKDAMKFP@DELETE@ DB 'DELETE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BCKKEJHI@UI_PILOTS@
CONST	SEGMENT
??_C@_09BCKKEJHI@UI_PILOTS@ DB 'UI_PILOTS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?destroy_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_this_player_log$ = -8					; size = 4
_last_player_log$ = -4					; size = 4
_player_log$ = 8					; size = 4
?destroy_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z PROC	; destroy_player_log, COMDAT

; 2178 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2179 : 
; 2180 : 	player_log_type
; 2181 : 		*last_player_log,
; 2182 : 		*this_player_log;
; 2183 : 
; 2184 : 	this_player_log = get_player_log_list ();

  00009	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0000e	89 45 f8	 mov	 DWORD PTR _this_player_log$[ebp], eax

; 2185 : 
; 2186 : 	last_player_log = NULL;

  00011	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _last_player_log$[ebp], 0
$LN2@destroy_pl:

; 2187 : 
; 2188 : 	while ( this_player_log )

  00018	83 7d f8 00	 cmp	 DWORD PTR _this_player_log$[ebp], 0
  0001c	74 50		 je	 SHORT $LN1@destroy_pl

; 2189 : 	{
; 2190 : 
; 2191 : 		if ( player_log == this_player_log )

  0001e	8b 45 08	 mov	 eax, DWORD PTR _player_log$[ebp]
  00021	3b 45 f8	 cmp	 eax, DWORD PTR _this_player_log$[ebp]
  00024	75 34		 jne	 SHORT $LN4@destroy_pl

; 2192 : 		{
; 2193 : 
; 2194 : 			if (last_player_log)

  00026	83 7d fc 00	 cmp	 DWORD PTR _last_player_log$[ebp], 0
  0002a	74 14		 je	 SHORT $LN5@destroy_pl

; 2195 : 			{
; 2196 : 
; 2197 : 				last_player_log->next = this_player_log->next;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _last_player_log$[ebp]
  0002f	8b 4d f8	 mov	 ecx, DWORD PTR _this_player_log$[ebp]
  00032	8b 91 3c 0d 00
	00		 mov	 edx, DWORD PTR [ecx+3388]
  00038	89 90 3c 0d 00
	00		 mov	 DWORD PTR [eax+3388], edx

; 2198 : 			}
; 2199 : 			else

  0003e	eb 0f		 jmp	 SHORT $LN6@destroy_pl
$LN5@destroy_pl:

; 2200 : 			{
; 2201 : 
; 2202 : 				set_player_log_list (this_player_log->next);

  00040	8b 45 f8	 mov	 eax, DWORD PTR _this_player_log$[ebp]
  00043	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list
$LN6@destroy_pl:

; 2203 : 			}
; 2204 : 
; 2205 : 			free_mem (this_player_log);

  0004f	8b 45 f8	 mov	 eax, DWORD PTR _this_player_log$[ebp]
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 2206 : 
; 2207 : 			break;

  00058	eb 14		 jmp	 SHORT $LN1@destroy_pl
$LN4@destroy_pl:

; 2208 : 		}
; 2209 : 
; 2210 : 		last_player_log = this_player_log;

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _this_player_log$[ebp]
  0005d	89 45 fc	 mov	 DWORD PTR _last_player_log$[ebp], eax

; 2211 : 
; 2212 : 		this_player_log = get_player_log_next (this_player_log);

  00060	8b 45 f8	 mov	 eax, DWORD PTR _this_player_log$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ; get_player_log_next
  00069	89 45 f8	 mov	 DWORD PTR _this_player_log$[ebp], eax

; 2213 : 	}

  0006c	eb aa		 jmp	 SHORT $LN2@destroy_pl
$LN1@destroy_pl:

; 2214 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 04 00	 ret	 4
?destroy_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ENDP	; destroy_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?get_player_log_unique_id@@YGHXZ
_TEXT	SEGMENT
_player$ = -12						; size = 4
_unique$ = -8						; size = 4
_id$ = -4						; size = 4
?get_player_log_unique_id@@YGHXZ PROC			; get_player_log_unique_id, COMDAT

; 1846 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1847 : 
; 1848 : 	int
; 1849 : 		id,
; 1850 : 		unique;
; 1851 : 
; 1852 : 	player_log_type
; 1853 : 		*player;
; 1854 : 
; 1855 : 	id = 1;

  00009	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _id$[ebp], 1

; 1856 : 
; 1857 : 	unique = FALSE;

  00010	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _unique$[ebp], 0
$LN2@get_player:

; 1858 : 
; 1859 : 	while ( !unique )

  00017	83 7d f8 00	 cmp	 DWORD PTR _unique$[ebp], 0
  0001b	75 48		 jne	 SHORT $LN3@get_player

; 1860 : 	{
; 1861 : 
; 1862 : 		unique = TRUE;

  0001d	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _unique$[ebp], 1

; 1863 : 
; 1864 : 		player = get_player_log_list ();

  00024	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  00029	89 45 f4	 mov	 DWORD PTR _player$[ebp], eax
$LN4@get_player:

; 1865 : 
; 1866 : 		while ( player )

  0002c	83 7d f4 00	 cmp	 DWORD PTR _player$[ebp], 0
  00030	74 22		 je	 SHORT $LN5@get_player

; 1867 : 		{
; 1868 : 
; 1869 : 			if ( player->unique_id == id )

  00032	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00035	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00038	3b 4d fc	 cmp	 ecx, DWORD PTR _id$[ebp]
  0003b	75 09		 jne	 SHORT $LN6@get_player

; 1870 : 			{
; 1871 : 
; 1872 : 				unique = FALSE;

  0003d	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _unique$[ebp], 0

; 1873 : 
; 1874 : 				break;

  00044	eb 0e		 jmp	 SHORT $LN5@get_player
$LN6@get_player:

; 1875 : 			}
; 1876 : 
; 1877 : 			player = player->next;

  00046	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00049	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  0004f	89 4d f4	 mov	 DWORD PTR _player$[ebp], ecx

; 1878 : 		}

  00052	eb d8		 jmp	 SHORT $LN4@get_player
$LN5@get_player:

; 1879 : 
; 1880 : 		if ( !unique )

  00054	83 7d f8 00	 cmp	 DWORD PTR _unique$[ebp], 0
  00058	75 09		 jne	 SHORT $LN7@get_player

; 1881 : 		{
; 1882 : 
; 1883 : 			id++;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _id$[ebp]
  0005d	83 c0 01	 add	 eax, 1
  00060	89 45 fc	 mov	 DWORD PTR _id$[ebp], eax
$LN7@get_player:

; 1884 : 		}
; 1885 : 	}

  00063	eb b2		 jmp	 SHORT $LN2@get_player
$LN3@get_player:

; 1886 : 
; 1887 : 	return ( id );

  00065	8b 45 fc	 mov	 eax, DWORD PTR _id$[ebp]

; 1888 : }

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
?get_player_log_unique_id@@YGHXZ ENDP			; get_player_log_unique_id
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?resize_player_list_size@@YGXXZ
_TEXT	SEGMENT
_slider$ = -4						; size = 4
?resize_player_list_size@@YGXXZ PROC			; resize_player_list_size, COMDAT

; 2284 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2285 : 	ui_object
; 2286 : 		*slider;
; 2287 : 
; 2288 : 	//float
; 2289 : 		//y;
; 2290 : 
; 2291 : 	set_ui_object_virtual_y_size (player_list, 1.0);

  00009	51		 push	 ecx
  0000a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00012	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0001c	50		 push	 eax
  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  00023	8b 11		 mov	 edx, DWORD PTR [ecx]
  00025	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  0002c	ff d0		 call	 eax

; 2292 : 	set_ui_object_virtual_y_size (player_name_entry_area, 1.0);

  0002e	51		 push	 ecx
  0002f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00041	50		 push	 eax
  00042	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00048	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  00051	ff d0		 call	 eax

; 2293 : /*
; 2294 : 	// re-size the list objects when items are added
; 2295 : 
; 2296 : 	y = max (1.0, get_next_list_position (player_list) / get_ui_object_y_size (player_list_area));
; 2297 : 	y = 1.0;
; 2298 : 
; 2299 : 	set_ui_object_virtual_y_size (player_list, y);
; 2300 : 	set_ui_object_virtual_y_size (player_name_entry_area, y);
; 2301 : 
; 2302 : 	// resize the slider on the player list
; 2303 : 
; 2304 : 	*/
; 2305 : 
; 2306 : 	slider = get_ui_object_vslider (player_list_area);

  00053	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z ; get_ui_object_vslider
  0005e	89 45 fc	 mov	 DWORD PTR _slider$[ebp], eax

; 2307 : 	recalculate_slider_size (slider);

  00061	8b 45 fc	 mov	 eax, DWORD PTR _slider$[ebp]
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_size

; 2308 : 
; 2309 : 	recalculate_slider_origin (slider);

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _slider$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?recalculate_slider_origin@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_origin

; 2310 : }

  00073	5f		 pop	 edi
  00074	5e		 pop	 esi
  00075	5b		 pop	 ebx
  00076	8b e5		 mov	 esp, ebp
  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?resize_player_list_size@@YGXXZ ENDP			; resize_player_list_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
tv231 = -92						; size = 4
_result$ = -24						; size = 4
_score$ = -20						; size = 4
_campaign$ = -16					; size = 4
_campaign_threshold$ = -12				; size = 4
_i$ = -8						; size = 4
_seconds$ = -4						; size = 4
_log$ = 8						; size = 4
_side$ = 12						; size = 4
?test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z PROC	; test_player_scoring, COMDAT

; 2221 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2222 : 	float
; 2223 : 		seconds;
; 2224 : 
; 2225 : 	int
; 2226 : 		i,
; 2227 : 		campaign_threshold,
; 2228 : 		campaign,
; 2229 : 		score,
; 2230 : 		result;
; 2231 : 
; 2232 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _side$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN6@test_playe
  0000f	83 7d 0c 03	 cmp	 DWORD PTR _side$[ebp], 3
  00013	7e 18		 jle	 SHORT $LN5@test_playe
$LN6@test_playe:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z@4JA
  0001a	83 c0 0b	 add	 eax, 11			; 0000000bH
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@test_playe:

; 2233 : 
; 2234 : 	// approx. time required to complete a campaign
; 2235 : 	campaign_threshold = 32000;

  0002d	c7 45 f4 00 7d
	00 00		 mov	 DWORD PTR _campaign_threshold$[ebp], 32000 ; 00007d00H

; 2236 : 
; 2237 : 	campaign = 0;

  00034	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _campaign$[ebp], 0

; 2238 : 
; 2239 : 	for (i = 0; i < 5000; i++)

  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00042	eb 09		 jmp	 SHORT $LN4@test_playe
$LN2@test_playe:
  00044	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00047	83 c0 01	 add	 eax, 1
  0004a	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@test_playe:
  0004d	81 7d f8 88 13
	00 00		 cmp	 DWORD PTR _i$[ebp], 5000 ; 00001388H
  00054	0f 8d 0c 02 00
	00		 jge	 $LN3@test_playe

; 2240 : 	{
; 2241 : 		score = (int) (frand1() * 1000.0);

  0005a	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  00064	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  00069	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  0006e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  00074	c1 f9 10	 sar	 ecx, 16			; 00000010H
  00077	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  0007d	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  00081	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  00089	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@408f400000000000
  00091	f2 0f 2c d0	 cvttsd2si edx, xmm0
  00095	89 55 ec	 mov	 DWORD PTR _score$[ebp], edx

; 2242 : 
; 2243 : 		seconds = (600 + (frand1() * 1200.0));

  00098	69 05 00 00 00
	00 6d 4e c6 41	 imul	 eax, DWORD PTR ?random_number_seed@@3HA, 1103515245 ; random_number_seed
  000a2	05 39 30 00 00	 add	 eax, 12345		; 00003039H
  000a7	a3 00 00 00 00	 mov	 DWORD PTR ?random_number_seed@@3HA, eax ; random_number_seed
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?random_number_seed@@3HA ; random_number_seed
  000b2	c1 f9 10	 sar	 ecx, 16			; 00000010H
  000b5	81 e1 ff 7f 00
	00		 and	 ecx, 32767		; 00007fffH
  000bb	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  000bf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00002000400080
  000c7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4092c00000000000
  000cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4082c00000000000
  000d7	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000db	f3 0f 11 45 fc	 movss	 DWORD PTR _seconds$[ebp], xmm0

; 2244 : 
; 2245 : 		inc_player_log_flying_seconds (side, log, seconds);

  000e0	51		 push	 ecx
  000e1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _seconds$[ebp]
  000e6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000eb	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  000ee	50		 push	 eax
  000ef	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  000f2	51		 push	 ecx
  000f3	e8 00 00 00 00	 call	 ?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; inc_player_log_flying_seconds

; 2246 : 
; 2247 : 		inc_player_log_experience (side, log, score);

  000f8	8b 45 ec	 mov	 eax, DWORD PTR _score$[ebp]
  000fb	50		 push	 eax
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  000ff	51		 push	 ecx
  00100	8b 55 0c	 mov	 edx, DWORD PTR _side$[ebp]
  00103	52		 push	 edx
  00104	e8 00 00 00 00	 call	 ?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; inc_player_log_experience

; 2248 : 
; 2249 : 		if (get_player_log_rank (side, log) != get_player_rank_from_points (get_player_log_experience (side, log)) )

  00109	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  0010c	50		 push	 eax
  0010d	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00110	51		 push	 ecx
  00111	e8 00 00 00 00	 call	 ?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_rank
  00116	8b f0		 mov	 esi, eax
  00118	8b 55 08	 mov	 edx, DWORD PTR _log$[ebp]
  0011b	52		 push	 edx
  0011c	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0011f	50		 push	 eax
  00120	e8 00 00 00 00	 call	 ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?get_player_rank_from_points@@YGHH@Z ; get_player_rank_from_points
  0012b	3b f0		 cmp	 esi, eax
  0012d	74 21		 je	 SHORT $LN7@test_playe

; 2250 : 		{
; 2251 : 			set_player_log_rank (side, log, get_player_rank_from_points (get_player_log_experience (side, log)) );

  0012f	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  00132	50		 push	 eax
  00133	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00136	51		 push	 ecx
  00137	e8 00 00 00 00	 call	 ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 ?get_player_rank_from_points@@YGHH@Z ; get_player_rank_from_points
  00142	50		 push	 eax
  00143	8b 55 08	 mov	 edx, DWORD PTR _log$[ebp]
  00146	52		 push	 edx
  00147	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_rank
$LN7@test_playe:

; 2252 : 		}
; 2253 : 
; 2254 : 		set_player_log_missions_flown (side, log, i);

  00150	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00153	50		 push	 eax
  00154	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  00157	51		 push	 ecx
  00158	8b 55 0c	 mov	 edx, DWORD PTR _side$[ebp]
  0015b	52		 push	 edx
  0015c	e8 00 00 00 00	 call	 ?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_missions_flown

; 2255 : 
; 2256 : 		if (get_player_log_flying_seconds (side, log) > campaign_threshold)

  00161	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  00164	50		 push	 eax
  00165	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00168	51		 push	 ecx
  00169	e8 00 00 00 00	 call	 ?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_seconds
  0016e	d9 5d a4	 fstp	 DWORD PTR tv231[ebp]
  00171	f3 0f 10 45 a4	 movss	 xmm0, DWORD PTR tv231[ebp]
  00176	f3 0f 2a 4d f4	 cvtsi2ss xmm1, DWORD PTR _campaign_threshold$[ebp]
  0017b	0f 2f c1	 comiss	 xmm0, xmm1
  0017e	76 59		 jbe	 SHORT $LN8@test_playe

; 2257 : 		{
; 2258 : 			campaign_threshold += campaign_threshold;

  00180	8b 45 f4	 mov	 eax, DWORD PTR _campaign_threshold$[ebp]
  00183	03 45 f4	 add	 eax, DWORD PTR _campaign_threshold$[ebp]
  00186	89 45 f4	 mov	 DWORD PTR _campaign_threshold$[ebp], eax

; 2259 : 
; 2260 : 			award_campaign_medal (side, campaign);

  00189	8b 45 f0	 mov	 eax, DWORD PTR _campaign$[ebp]
  0018c	50		 push	 eax
  0018d	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00190	51		 push	 ecx
  00191	e8 00 00 00 00	 call	 ?award_campaign_medal@@YGXHH@Z ; award_campaign_medal

; 2261 : 
; 2262 : 			debug_filtered_log ("Campaign Medal Awarded %2d score:%8d time:%8f", result, get_player_log_experience (side, log), get_player_log_flying_seconds (side, log));

  00196	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  00199	50		 push	 eax
  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  0019d	51		 push	 ecx
  0019e	e8 00 00 00 00	 call	 ?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_seconds
  001a3	83 ec 08	 sub	 esp, 8
  001a6	dd 1c 24	 fstp	 QWORD PTR [esp]
  001a9	8b 55 08	 mov	 edx, DWORD PTR _log$[ebp]
  001ac	52		 push	 edx
  001ad	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
  001b6	50		 push	 eax
  001b7	8b 4d e8	 mov	 ecx, DWORD PTR _result$[ebp]
  001ba	51		 push	 ecx
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@GEPMHCPP@Campaign?5Medal?5Awarded?5?$CF2d?5scor@
  001c0	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  001c5	83 c4 14	 add	 esp, 20			; 00000014H

; 2263 : 
; 2264 : 			campaign = (campaign + 1) % 3;

  001c8	8b 45 f0	 mov	 eax, DWORD PTR _campaign$[ebp]
  001cb	83 c0 01	 add	 eax, 1
  001ce	99		 cdq
  001cf	b9 03 00 00 00	 mov	 ecx, 3
  001d4	f7 f9		 idiv	 ecx
  001d6	89 55 f0	 mov	 DWORD PTR _campaign$[ebp], edx
$LN8@test_playe:

; 2265 : 		}
; 2266 : 
; 2267 : 		if (result = award_aviator_wings (side))

  001d9	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ?award_aviator_wings@@YGHH@Z ; award_aviator_wings
  001e2	89 45 e8	 mov	 DWORD PTR _result$[ebp], eax
  001e5	83 7d e8 00	 cmp	 DWORD PTR _result$[ebp], 0
  001e9	74 32		 je	 SHORT $LN9@test_playe

; 2268 : 		{
; 2269 : 			debug_filtered_log ("Awarded Aviator Wings  %2d score:%8d time:%8f", result, get_player_log_experience (side, log), get_player_log_flying_seconds (side, log));

  001eb	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  001ee	50		 push	 eax
  001ef	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  001f2	51		 push	 ecx
  001f3	e8 00 00 00 00	 call	 ?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_seconds
  001f8	83 ec 08	 sub	 esp, 8
  001fb	dd 1c 24	 fstp	 QWORD PTR [esp]
  001fe	8b 55 08	 mov	 edx, DWORD PTR _log$[ebp]
  00201	52		 push	 edx
  00202	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00205	50		 push	 eax
  00206	e8 00 00 00 00	 call	 ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
  0020b	50		 push	 eax
  0020c	8b 4d e8	 mov	 ecx, DWORD PTR _result$[ebp]
  0020f	51		 push	 ecx
  00210	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@INEIFKHF@Awarded?5Aviator?5Wings?5?5?$CF2d?5scor@
  00215	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  0021a	83 c4 14	 add	 esp, 20			; 00000014H
$LN9@test_playe:

; 2270 : 		}
; 2271 : 
; 2272 : 		if (award_valour_medal (side, score) != -1)

  0021d	8b 45 ec	 mov	 eax, DWORD PTR _score$[ebp]
  00220	50		 push	 eax
  00221	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00224	51		 push	 ecx
  00225	e8 00 00 00 00	 call	 ?award_valour_medal@@YGHHH@Z ; award_valour_medal
  0022a	83 f8 ff	 cmp	 eax, -1
  0022d	74 32		 je	 SHORT $LN10@test_playe

; 2273 : 		{
; 2274 : 			debug_filtered_log ("Awarded Valour Medal   %2d score:%8d time:%8f", result, get_player_log_experience (side, log), get_player_log_flying_seconds (side, log));

  0022f	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  00232	50		 push	 eax
  00233	8b 4d 0c	 mov	 ecx, DWORD PTR _side$[ebp]
  00236	51		 push	 ecx
  00237	e8 00 00 00 00	 call	 ?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_seconds
  0023c	83 ec 08	 sub	 esp, 8
  0023f	dd 1c 24	 fstp	 QWORD PTR [esp]
  00242	8b 55 08	 mov	 edx, DWORD PTR _log$[ebp]
  00245	52		 push	 edx
  00246	8b 45 0c	 mov	 eax, DWORD PTR _side$[ebp]
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
  0024f	50		 push	 eax
  00250	8b 4d e8	 mov	 ecx, DWORD PTR _result$[ebp]
  00253	51		 push	 ecx
  00254	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@CCIPAKLG@Awarded?5Valour?5Medal?5?5?5?$CF2d?5scor@
  00259	e8 00 00 00 00	 call	 ?debug_filtered_log@@YAXPBDZZ ; debug_filtered_log
  0025e	83 c4 14	 add	 esp, 20			; 00000014H
$LN10@test_playe:

; 2275 : 		}
; 2276 : 	}

  00261	e9 de fd ff ff	 jmp	 $LN2@test_playe
$LN3@test_playe:

; 2277 : }

  00266	5f		 pop	 edi
  00267	5e		 pop	 esi
  00268	5b		 pop	 ebx
  00269	8b e5		 mov	 esp, ebp
  0026b	5d		 pop	 ebp
  0026c	c2 08 00	 ret	 8
?test_player_scoring@@YGXPAUPLAYER_LOG_TYPE@@H@Z ENDP	; test_player_scoring
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?rebuild_player_log_list@@YGXXZ
_TEXT	SEGMENT
_buf2$1 = -232						; size = 100
_y$2 = -132						; size = 4
_m$3 = -128						; size = 4
_d$4 = -124						; size = 4
_current_log$ = -120					; size = 4
_player_log$ = -116					; size = 4
_selected_item$ = -112					; size = 4
_list_item$ = -108					; size = 4
_count$ = -104						; size = 4
_buf$ = -100						; size = 100
?rebuild_player_log_list@@YGXXZ PROC			; rebuild_player_log_list, COMDAT

; 2033 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2034 : 	#if (!DEMO_VERSION)
; 2035 : 
; 2036 : 	char
; 2037 : 		buf[100];
; 2038 : 
; 2039 : 	int
; 2040 : 		count;
; 2041 : 
; 2042 : 	ui_object
; 2043 : 		*list_item,
; 2044 : 		*selected_item;
; 2045 : 
; 2046 : 	player_log_type
; 2047 : 		*player_log,
; 2048 : 		*current_log;
; 2049 : 
; 2050 : 	ui_object_destroy_list_items (player_list);

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z ; ui_object_destroy_list_items

; 2051 : 
; 2052 : 	player_log = get_player_log_list ();

  00017	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0001c	89 45 8c	 mov	 DWORD PTR _player_log$[ebp], eax

; 2053 : 
; 2054 : 	selected_item = NULL;

  0001f	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _selected_item$[ebp], 0

; 2055 : 
; 2056 : 	current_log = NULL;

  00026	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _current_log$[ebp], 0

; 2057 : 
; 2058 : 	count = 0;

  0002d	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN2@rebuild_pl:

; 2059 : 
; 2060 : 	while (player_log)

  00034	83 7d 8c 00	 cmp	 DWORD PTR _player_log$[ebp], 0
  00038	0f 84 b1 00 00
	00		 je	 $LN3@rebuild_pl

; 2061 : 	{
; 2062 : 
; 2063 : 		if (get_player_log_name (player_log))

  0003e	8b 45 8c	 mov	 eax, DWORD PTR _player_log$[ebp]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
  00047	85 c0		 test	 eax, eax
  00049	74 7d		 je	 SHORT $LN4@rebuild_pl

; 2064 : 		{
; 2065 : 
; 2066 : 			#if DEBUG_MODULE
; 2067 : 
; 2068 : 			//debug_log ( "Creating list for %s, %d", player_log->name, player_log->unique_id );
; 2069 : 
; 2070 : 			#endif
; 2071 : 
; 2072 : 			list_item = add_to_pop_up_list ( get_player_log_name ( player_log ), player_list, NULL, player_log->unique_id, UI_FONT_ARIAL_18, ui_list_text_default_colour);

  0004b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A ; ui_list_text_default_colour
  00050	50		 push	 eax
  00051	6a 05		 push	 5
  00053	8b 4d 8c	 mov	 ecx, DWORD PTR _player_log$[ebp]
  00056	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00059	52		 push	 edx
  0005a	6a 00		 push	 0
  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  00061	50		 push	 eax
  00062	8b 4d 8c	 mov	 ecx, DWORD PTR _player_log$[ebp]
  00065	51		 push	 ecx
  00066	e8 00 00 00 00	 call	 ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list
  00071	89 45 94	 mov	 DWORD PTR _list_item$[ebp], eax

; 2073 : 
; 2074 : 			set_ui_frontend_list_object_highlightable (list_item);

  00074	8b 45 94	 mov	 eax, DWORD PTR _list_item$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?set_ui_frontend_list_object_highlightable@@YGXPAUUI_OBJECT@@@Z ; set_ui_frontend_list_object_highlightable

; 2075 : 
; 2076 : 			if (list_item)

  0007d	83 7d 94 00	 cmp	 DWORD PTR _list_item$[ebp], 0
  00081	74 43		 je	 SHORT $LN6@rebuild_pl

; 2077 : 			{
; 2078 : 
; 2079 : 				set_ui_object_item_number2 ( list_item, player_log->unique_id );

  00083	8b 45 8c	 mov	 eax, DWORD PTR _player_log$[ebp]
  00086	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00089	51		 push	 ecx
  0008a	8b 55 94	 mov	 edx, DWORD PTR _list_item$[ebp]
  0008d	52		 push	 edx
  0008e	8b 45 94	 mov	 eax, DWORD PTR _list_item$[ebp]
  00091	8b 08		 mov	 ecx, DWORD PTR [eax]
  00093	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_item_number2@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  0009a	ff d2		 call	 edx

; 2080 : 
; 2081 : 				// set this log to unselected
; 2082 : 
; 2083 : 				set_ui_object_state (list_item, UI_OBJECT_STATE_OFF);

  0009c	6a 00		 push	 0
  0009e	8b 45 94	 mov	 eax, DWORD PTR _list_item$[ebp]
  000a1	50		 push	 eax
  000a2	8b 4d 94	 mov	 ecx, DWORD PTR _list_item$[ebp]
  000a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000ae	ff d0		 call	 eax

; 2084 : 
; 2085 : 				if (player_log == get_current_player_log ())

  000b0	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  000b5	39 45 8c	 cmp	 DWORD PTR _player_log$[ebp], eax
  000b8	75 0c		 jne	 SHORT $LN6@rebuild_pl

; 2086 : 				{
; 2087 : 					current_log = player_log;

  000ba	8b 45 8c	 mov	 eax, DWORD PTR _player_log$[ebp]
  000bd	89 45 88	 mov	 DWORD PTR _current_log$[ebp], eax

; 2088 : 
; 2089 : 					selected_item = list_item;

  000c0	8b 45 94	 mov	 eax, DWORD PTR _list_item$[ebp]
  000c3	89 45 90	 mov	 DWORD PTR _selected_item$[ebp], eax
$LN6@rebuild_pl:

; 2090 : 				}
; 2091 : 			}
; 2092 : 		}
; 2093 : 		else

  000c6	eb 0d		 jmp	 SHORT $LN5@rebuild_pl
$LN4@rebuild_pl:

; 2094 : 		{
; 2095 : 			debug_log ("PLAY_SC: warning: Player log without name");

  000c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@BBMKFDJL@PLAY_SC?3?5warning?3?5Player?5log?5wi@
  000cd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d2	83 c4 04	 add	 esp, 4
$LN5@rebuild_pl:

; 2096 : 		}
; 2097 : 
; 2098 : 		count ++;

  000d5	8b 45 98	 mov	 eax, DWORD PTR _count$[ebp]
  000d8	83 c0 01	 add	 eax, 1
  000db	89 45 98	 mov	 DWORD PTR _count$[ebp], eax

; 2099 : 
; 2100 : 		player_log = get_player_log_next (player_log);

  000de	8b 45 8c	 mov	 eax, DWORD PTR _player_log$[ebp]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ; get_player_log_next
  000e7	89 45 8c	 mov	 DWORD PTR _player_log$[ebp], eax

; 2101 : 	}

  000ea	e9 45 ff ff ff	 jmp	 $LN2@rebuild_pl
$LN3@rebuild_pl:

; 2102 : 
; 2103 : 	// if a log is selected, get info from it
; 2104 : 
; 2105 : 	if (current_log != NULL)

  000ef	83 7d 88 00	 cmp	 DWORD PTR _current_log$[ebp], 0
  000f3	0f 84 f4 01 00
	00		 je	 $LN8@rebuild_pl

; 2106 : 	{
; 2107 : 		int
; 2108 : 			d,
; 2109 : 			m,
; 2110 : 			y;
; 2111 : 
; 2112 : 	char
; 2113 : 		buf2[100];
; 2114 : 
; 2115 : 		rebuild_general_log_list (current_log, player_log_current_side);

  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A ; player_log_current_side
  000fe	50		 push	 eax
  000ff	8b 4d 88	 mov	 ecx, DWORD PTR _current_log$[ebp]
  00102	51		 push	 ecx
  00103	e8 00 00 00 00	 call	 ?rebuild_general_log_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z ; rebuild_general_log_list

; 2116 : 		rebuild_flight_hours_list (current_log, player_log_current_side);

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A ; player_log_current_side
  0010d	50		 push	 eax
  0010e	8b 4d 88	 mov	 ecx, DWORD PTR _current_log$[ebp]
  00111	51		 push	 ecx
  00112	e8 00 00 00 00	 call	 ?rebuild_flight_hours_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z ; rebuild_flight_hours_list

; 2117 : 		rebuild_weapon_log_list (current_log, player_log_current_side);

  00117	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A ; player_log_current_side
  0011c	50		 push	 eax
  0011d	8b 4d 88	 mov	 ecx, DWORD PTR _current_log$[ebp]
  00120	51		 push	 ecx
  00121	e8 00 00 00 00	 call	 ?rebuild_weapon_log_list@@YGXPAUPLAYER_LOG_TYPE@@H@Z ; rebuild_weapon_log_list

; 2118 : 
; 2119 : 		// set this log to selected
; 2120 : 
; 2121 : 		set_ui_object_state (selected_item, UI_OBJECT_STATE_ON);

  00126	6a 01		 push	 1
  00128	8b 45 90	 mov	 eax, DWORD PTR _selected_item$[ebp]
  0012b	50		 push	 eax
  0012c	8b 4d 90	 mov	 ecx, DWORD PTR _selected_item$[ebp]
  0012f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00131	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00138	ff d0		 call	 eax

; 2122 : 
; 2123 : 		// set text for commission date & rank
; 2124 : 
; 2125 : 		set_ui_object_text ( current_player_rank_text, get_pilot_rank_name ( current_log->side_log[player_log_current_side].rank ));

  0013a	69 05 00 00 00
	00 4c 03 00 00	 imul	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A, 844 ; player_log_current_side
  00144	8b 4d 88	 mov	 ecx, DWORD PTR _current_log$[ebp]
  00147	8b 54 01 0c	 mov	 edx, DWORD PTR [ecx+eax+12]
  0014b	52		 push	 edx
  0014c	e8 00 00 00 00	 call	 ?get_pilot_rank_name@@YGPBDH@Z ; get_pilot_rank_name
  00151	50		 push	 eax
  00152	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_rank_text@@3PAUUI_OBJECT@@A
  00157	50		 push	 eax
  00158	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_player_rank_text@@3PAUUI_OBJECT@@A
  0015e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00160	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[edx*4]
  00167	ff d0		 call	 eax

; 2126 : 
; 2127 : 		d = current_log->date_commissioned.day;

  00169	8b 45 88	 mov	 eax, DWORD PTR _current_log$[ebp]
  0016c	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00170	66 83 e1 1f	 and	 cx, 31			; 0000001fH
  00174	0f b7 d1	 movzx	 edx, cx
  00177	89 55 84	 mov	 DWORD PTR _d$4[ebp], edx

; 2128 : 		m = current_log->date_commissioned.month;

  0017a	8b 45 88	 mov	 eax, DWORD PTR _current_log$[ebp]
  0017d	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00181	66 c1 e9 05	 shr	 cx, 5
  00185	66 83 e1 0f	 and	 cx, 15			; 0000000fH
  00189	0f b7 d1	 movzx	 edx, cx
  0018c	89 55 80	 mov	 DWORD PTR _m$3[ebp], edx

; 2129 : 		y = current_log->date_commissioned.year;

  0018f	8b 45 88	 mov	 eax, DWORD PTR _current_log$[ebp]
  00192	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00196	66 c1 e9 09	 shr	 cx, 9
  0019a	66 83 e1 7f	 and	 cx, 127			; 0000007fH
  0019e	0f b7 d1	 movzx	 edx, cx
  001a1	89 95 7c ff ff
	ff		 mov	 DWORD PTR _y$2[ebp], edx

; 2130 : 
; 2131 : 		sprintf (buf, "%s: ", get_trans ("Date Commissioned"));

  001a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CAKCNPDI@Date?5Commissioned@
  001ac	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  001b1	50		 push	 eax
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_04PFAOODAA@?$CFs?3?5@
  001b7	8d 45 9c	 lea	 eax, DWORD PTR _buf$[ebp]
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 _sprintf
  001c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2132 : 
; 2133 : 		if (d < 10)

  001c3	83 7d 84 0a	 cmp	 DWORD PTR _d$4[ebp], 10	; 0000000aH
  001c7	7d 27		 jge	 SHORT $LN9@rebuild_pl

; 2134 : 		{
; 2135 : 			sprintf (buf2, "0");

  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  001ce	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  001d4	50		 push	 eax
  001d5	e8 00 00 00 00	 call	 _sprintf
  001da	83 c4 08	 add	 esp, 8

; 2136 : 
; 2137 : 			strcat (buf, buf2);

  001dd	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  001e3	50		 push	 eax
  001e4	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  001e7	51		 push	 ecx
  001e8	e8 00 00 00 00	 call	 _strcat
  001ed	83 c4 08	 add	 esp, 8
$LN9@rebuild_pl:

; 2138 : 		}
; 2139 : 		sprintf (buf2, "%d/", d);

  001f0	8b 45 84	 mov	 eax, DWORD PTR _d$4[ebp]
  001f3	50		 push	 eax
  001f4	68 00 00 00 00	 push	 OFFSET ??_C@_03BEJFCEHO@?$CFd?1@
  001f9	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _buf2$1[ebp]
  001ff	51		 push	 ecx
  00200	e8 00 00 00 00	 call	 _sprintf
  00205	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2140 : 
; 2141 : 		strcat (buf, buf2);

  00208	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  0020e	50		 push	 eax
  0020f	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  00212	51		 push	 ecx
  00213	e8 00 00 00 00	 call	 _strcat
  00218	83 c4 08	 add	 esp, 8

; 2142 : 
; 2143 : 		if (m < 10)

  0021b	83 7d 80 0a	 cmp	 DWORD PTR _m$3[ebp], 10	; 0000000aH
  0021f	7d 27		 jge	 SHORT $LN10@rebuild_pl

; 2144 : 		{
; 2145 : 			sprintf (buf2, "0");

  00221	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00226	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  0022c	50		 push	 eax
  0022d	e8 00 00 00 00	 call	 _sprintf
  00232	83 c4 08	 add	 esp, 8

; 2146 : 
; 2147 : 			strcat (buf, buf2);

  00235	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  0023b	50		 push	 eax
  0023c	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  0023f	51		 push	 ecx
  00240	e8 00 00 00 00	 call	 _strcat
  00245	83 c4 08	 add	 esp, 8
$LN10@rebuild_pl:

; 2148 : 		}
; 2149 : 		sprintf (buf2, "%d/", m);

  00248	8b 45 80	 mov	 eax, DWORD PTR _m$3[ebp]
  0024b	50		 push	 eax
  0024c	68 00 00 00 00	 push	 OFFSET ??_C@_03BEJFCEHO@?$CFd?1@
  00251	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _buf2$1[ebp]
  00257	51		 push	 ecx
  00258	e8 00 00 00 00	 call	 _sprintf
  0025d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2150 : 
; 2151 : 		strcat (buf, buf2);

  00260	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  00266	50		 push	 eax
  00267	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  0026a	51		 push	 ecx
  0026b	e8 00 00 00 00	 call	 _strcat
  00270	83 c4 08	 add	 esp, 8

; 2152 : 
; 2153 : 		if (y < 10)

  00273	83 bd 7c ff ff
	ff 0a		 cmp	 DWORD PTR _y$2[ebp], 10	; 0000000aH
  0027a	7d 27		 jge	 SHORT $LN11@rebuild_pl

; 2154 : 		{
; 2155 : 			sprintf (buf2, "0");

  0027c	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00281	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  00287	50		 push	 eax
  00288	e8 00 00 00 00	 call	 _sprintf
  0028d	83 c4 08	 add	 esp, 8

; 2156 : 
; 2157 : 			strcat (buf, buf2);

  00290	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  00296	50		 push	 eax
  00297	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  0029a	51		 push	 ecx
  0029b	e8 00 00 00 00	 call	 _strcat
  002a0	83 c4 08	 add	 esp, 8
$LN11@rebuild_pl:

; 2158 : 		}
; 2159 : 		sprintf (buf2, "%d", y);

  002a3	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _y$2[ebp]
  002a9	50		 push	 eax
  002aa	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002af	8d 8d 18 ff ff
	ff		 lea	 ecx, DWORD PTR _buf2$1[ebp]
  002b5	51		 push	 ecx
  002b6	e8 00 00 00 00	 call	 _sprintf
  002bb	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2160 : 
; 2161 : 		strcat (buf, buf2);

  002be	8d 85 18 ff ff
	ff		 lea	 eax, DWORD PTR _buf2$1[ebp]
  002c4	50		 push	 eax
  002c5	8d 4d 9c	 lea	 ecx, DWORD PTR _buf$[ebp]
  002c8	51		 push	 ecx
  002c9	e8 00 00 00 00	 call	 _strcat
  002ce	83 c4 08	 add	 esp, 8

; 2162 : 
; 2163 : 		set_ui_object_text (player_commision_date_text, buf);

  002d1	8d 45 9c	 lea	 eax, DWORD PTR _buf$[ebp]
  002d4	50		 push	 eax
  002d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_commision_date_text@@3PAUUI_OBJECT@@A
  002db	51		 push	 ecx
  002dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?player_commision_date_text@@3PAUUI_OBJECT@@A
  002e2	8b 02		 mov	 eax, DWORD PTR [edx]
  002e4	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  002eb	ff d1		 call	 ecx
$LN8@rebuild_pl:

; 2164 : 	}
; 2165 : 
; 2166 : 	debug_log ("PLAY_SC: built player log list with %d items", count);

  002ed	8b 45 98	 mov	 eax, DWORD PTR _count$[ebp]
  002f0	50		 push	 eax
  002f1	68 00 00 00 00	 push	 OFFSET ??_C@_0CN@FEKBKMBK@PLAY_SC?3?5built?5player?5log?5list?5@
  002f6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  002fb	83 c4 08	 add	 esp, 8

; 2167 : 
; 2168 : 	resize_player_list_size ();

  002fe	e8 00 00 00 00	 call	 ?resize_player_list_size@@YGXXZ ; resize_player_list_size

; 2169 : 
; 2170 : 	#endif
; 2171 : }

  00303	5f		 pop	 edi
  00304	5e		 pop	 esi
  00305	5b		 pop	 ebx
  00306	8b e5		 mov	 esp, ebp
  00308	5d		 pop	 ebp
  00309	c3		 ret	 0
?rebuild_player_log_list@@YGXXZ ENDP			; rebuild_player_log_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z
_TEXT	SEGMENT
_player$ = -4						; size = 4
_id$ = 8						; size = 4
_name$ = 12						; size = 4
?rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z PROC	; rename_player_log, COMDAT

; 1990 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1991 : 
; 1992 : 	player_log_type
; 1993 : 		*player;
; 1994 : 
; 1995 : 	ASSERT (name);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _name$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@rename_pla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04MEMAJGDJ@name@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@rename_pla:

; 1996 : 
; 1997 : 	player = get_player_log_list ();

  00027	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0002c	89 45 fc	 mov	 DWORD PTR _player$[ebp], eax
$LN2@rename_pla:

; 1998 : 
; 1999 : 	while ( ( player ) && ( player->unique_id != id ) )

  0002f	83 7d fc 00	 cmp	 DWORD PTR _player$[ebp], 0
  00033	74 19		 je	 SHORT $LN3@rename_pla
  00035	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  00038	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0003b	3b 4d 08	 cmp	 ecx, DWORD PTR _id$[ebp]
  0003e	74 0e		 je	 SHORT $LN3@rename_pla

; 2000 : 	{
; 2001 : 
; 2002 : 		player = player->next;

  00040	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  00043	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  00049	89 4d fc	 mov	 DWORD PTR _player$[ebp], ecx

; 2003 : 	}

  0004c	eb e1		 jmp	 SHORT $LN2@rename_pla
$LN3@rename_pla:

; 2004 : 
; 2005 : 	ASSERT ( player );

  0004e	83 7d fc 00	 cmp	 DWORD PTR _player$[ebp], 0
  00052	75 18		 jne	 SHORT $LN5@rename_pla
  00054	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z@4JA
  00059	83 c0 0f	 add	 eax, 15			; 0000000fH
  0005c	50		 push	 eax
  0005d	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_06BALNJMNP@player@
  00067	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@rename_pla:

; 2006 : 
; 2007 : 	if ( player->name )

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  0006f	83 38 00	 cmp	 DWORD PTR [eax], 0
  00072	74 14		 je	 SHORT $LN6@rename_pla

; 2008 : 	{
; 2009 : 
; 2010 : 		free_mem ( player->name );

  00074	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	51		 push	 ecx
  0007a	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 2011 : 
; 2012 : 		player->name = NULL;

  0007f	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  00082	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@rename_pla:

; 2013 : 	}
; 2014 : 
; 2015 : 	player->name = (char *) malloc_heap_mem (strlen (name) + 2);

  00088	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _strlen
  00091	83 c4 04	 add	 esp, 4
  00094	83 c0 02	 add	 eax, 2
  00097	50		 push	 eax
  00098	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0009d	8b 4d fc	 mov	 ecx, DWORD PTR _player$[ebp]
  000a0	89 01		 mov	 DWORD PTR [ecx], eax

; 2016 : 
; 2017 : 	sprintf (player->name, "%s", name);

  000a2	8b 45 0c	 mov	 eax, DWORD PTR _name$[ebp]
  000a5	50		 push	 eax
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000ab	8b 4d fc	 mov	 ecx, DWORD PTR _player$[ebp]
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	52		 push	 edx
  000b1	e8 00 00 00 00	 call	 _sprintf
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2018 : 
; 2019 : 	if ( strlen ( player->name ) > MAXIMUM_PLAYER_NAME-1 )

  000b9	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]
  000bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000be	51		 push	 ecx
  000bf	e8 00 00 00 00	 call	 _strlen
  000c4	83 c4 04	 add	 esp, 4
  000c7	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  000ca	76 11		 jbe	 SHORT $LN7@rename_pla

; 2020 : 	{
; 2021 : 
; 2022 : 		player->name[MAXIMUM_PLAYER_NAME-1] = '\0';

  000cc	b8 01 00 00 00	 mov	 eax, 1
  000d1	6b c8 0f	 imul	 ecx, eax, 15
  000d4	8b 55 fc	 mov	 edx, DWORD PTR _player$[ebp]
  000d7	8b 02		 mov	 eax, DWORD PTR [edx]
  000d9	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN7@rename_pla:

; 2023 : 	}
; 2024 : 
; 2025 : 	return player;

  000dd	8b 45 fc	 mov	 eax, DWORD PTR _player$[ebp]

; 2026 : }

  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c2 08 00	 ret	 8
?rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z ENDP	; rename_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z
_TEXT	SEGMENT
_new_player_log$ = -4					; size = 4
_name$ = 8						; size = 4
?create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z PROC	; create_player_log, COMDAT

; 1957 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1958 : 
; 1959 : 	player_log_type
; 1960 : 		*new_player_log;
; 1961 : 
; 1962 : 	ASSERT (name);

  00009	83 7d 08 00	 cmp	 DWORD PTR _name$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@create_pla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_04MEMAJGDJ@name@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_pla:

; 1963 : 
; 1964 : 	new_player_log = create_empty_player_log ();

  00027	e8 00 00 00 00	 call	 ?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; create_empty_player_log
  0002c	89 45 fc	 mov	 DWORD PTR _new_player_log$[ebp], eax

; 1965 : 
; 1966 : 	new_player_log->name = (char *) malloc_heap_mem (strlen (name) + 2);

  0002f	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _strlen
  00038	83 c4 04	 add	 esp, 4
  0003b	83 c0 02	 add	 eax, 2
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _new_player_log$[ebp]
  00047	89 01		 mov	 DWORD PTR [ecx], eax

; 1967 : 
; 1968 : 	sprintf (new_player_log->name, "%s", name);

  00049	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  0004c	50		 push	 eax
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _new_player_log$[ebp]
  00055	8b 11		 mov	 edx, DWORD PTR [ecx]
  00057	52		 push	 edx
  00058	e8 00 00 00 00	 call	 _sprintf
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1969 : 
; 1970 : 	if ( strlen ( name ) > MAXIMUM_PLAYER_NAME )

  00060	8b 45 08	 mov	 eax, DWORD PTR _name$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _strlen
  00069	83 c4 04	 add	 esp, 4
  0006c	83 f8 10	 cmp	 eax, 16			; 00000010H
  0006f	76 11		 jbe	 SHORT $LN3@create_pla

; 1971 : 	{
; 1972 : 
; 1973 : 		new_player_log->name[MAXIMUM_PLAYER_NAME-1] = '\0';

  00071	b8 01 00 00 00	 mov	 eax, 1
  00076	6b c8 0f	 imul	 ecx, eax, 15
  00079	8b 55 fc	 mov	 edx, DWORD PTR _new_player_log$[ebp]
  0007c	8b 02		 mov	 eax, DWORD PTR [edx]
  0007e	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0
$LN3@create_pla:

; 1974 : 	}
; 1975 : 
; 1976 : 	#if DEBUG_MODULE
; 1977 : 
; 1978 : 	//debug_log ("PLAY_SC: Creating player log %s", name);
; 1979 : 
; 1980 : 	#endif
; 1981 : 
; 1982 : 	return new_player_log;

  00082	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]

; 1983 : }

  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	5b		 pop	 ebx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
?create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z ENDP	; create_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ
_TEXT	SEGMENT
tv143 = -96						; size = 4
tv144 = -92						; size = 4
_y$ = -24						; size = 4
_m$ = -20						; size = 4
_d$ = -16						; size = 4
_side$ = -12						; size = 4
_list$ = -8						; size = 4
_new_player_log$ = -4					; size = 4
?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ PROC	; create_empty_player_log, COMDAT

; 1895 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1896 : 
; 1897 : 	player_log_type
; 1898 : 		*new_player_log,
; 1899 : 		*list;
; 1900 : 
; 1901 : 	int
; 1902 : 		side,
; 1903 : 		d,
; 1904 : 		m,
; 1905 : 		y;
; 1906 : 
; 1907 : 	new_player_log = (player_log_type *) malloc_heap_mem (sizeof (player_log_type));

  00009	68 40 0d 00 00	 push	 3392			; 00000d40H
  0000e	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00013	89 45 fc	 mov	 DWORD PTR _new_player_log$[ebp], eax

; 1908 : 
; 1909 : 	memset (new_player_log, 0, sizeof (player_log_type));

  00016	68 40 0d 00 00	 push	 3392			; 00000d40H
  0001b	6a 00		 push	 0
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _memset
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1910 : 
; 1911 : 	new_player_log->unique_id = get_player_log_unique_id ();

  00029	e8 00 00 00 00	 call	 ?get_player_log_unique_id@@YGHXZ ; get_player_log_unique_id
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _new_player_log$[ebp]
  00031	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 1912 : 
; 1913 : 	get_system_date (&d, &m, &y);

  00034	8d 45 e8	 lea	 eax, DWORD PTR _y$[ebp]
  00037	50		 push	 eax
  00038	8d 4d ec	 lea	 ecx, DWORD PTR _m$[ebp]
  0003b	51		 push	 ecx
  0003c	8d 55 f0	 lea	 edx, DWORD PTR _d$[ebp]
  0003f	52		 push	 edx
  00040	e8 00 00 00 00	 call	 ?get_system_date@@YGXPAH00@Z ; get_system_date

; 1914 : 
; 1915 : 	new_player_log->date_commissioned.day = d;

  00045	66 8b 45 f0	 mov	 ax, WORD PTR _d$[ebp]
  00049	66 83 e0 1f	 and	 ax, 31			; 0000001fH
  0004d	b9 e0 ff 00 00	 mov	 ecx, 65504		; 0000ffe0H
  00052	8b 55 fc	 mov	 edx, DWORD PTR _new_player_log$[ebp]
  00055	66 23 4a 08	 and	 cx, WORD PTR [edx+8]
  00059	66 0b c8	 or	 cx, ax
  0005c	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  0005f	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 1916 : 	new_player_log->date_commissioned.month = m;

  00063	66 8b 45 ec	 mov	 ax, WORD PTR _m$[ebp]
  00067	66 83 e0 0f	 and	 ax, 15			; 0000000fH
  0006b	66 c1 e0 05	 shl	 ax, 5
  0006f	b9 1f fe 00 00	 mov	 ecx, 65055		; 0000fe1fH
  00074	8b 55 fc	 mov	 edx, DWORD PTR _new_player_log$[ebp]
  00077	66 23 4a 08	 and	 cx, WORD PTR [edx+8]
  0007b	66 0b c8	 or	 cx, ax
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  00081	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 1917 : 	new_player_log->date_commissioned.year = y;

  00085	66 8b 45 e8	 mov	 ax, WORD PTR _y$[ebp]
  00089	66 83 e0 7f	 and	 ax, 127			; 0000007fH
  0008d	66 c1 e0 09	 shl	 ax, 9
  00091	b9 ff 01 00 00	 mov	 ecx, 511		; 000001ffH
  00096	8b 55 fc	 mov	 edx, DWORD PTR _new_player_log$[ebp]
  00099	66 23 4a 08	 and	 cx, WORD PTR [edx+8]
  0009d	66 0b c8	 or	 cx, ax
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  000a3	66 89 48 08	 mov	 WORD PTR [eax+8], cx

; 1918 : 
; 1919 : 	for (side = 0; side < NUM_ENTITY_SIDES; side++)

  000a7	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _side$[ebp], 0
  000ae	eb 09		 jmp	 SHORT $LN4@create_emp
$LN2@create_emp:
  000b0	8b 45 f4	 mov	 eax, DWORD PTR _side$[ebp]
  000b3	83 c0 01	 add	 eax, 1
  000b6	89 45 f4	 mov	 DWORD PTR _side$[ebp], eax
$LN4@create_emp:
  000b9	83 7d f4 03	 cmp	 DWORD PTR _side$[ebp], 3
  000bd	7d 7f		 jge	 SHORT $LN3@create_emp

; 1920 : 	{
; 1921 : 		memset (&new_player_log->side_log [side], 0, sizeof (player_side_log_type));

  000bf	68 4c 03 00 00	 push	 844			; 0000034cH
  000c4	6a 00		 push	 0
  000c6	69 45 f4 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  000cd	8b 4d fc	 mov	 ecx, DWORD PTR _new_player_log$[ebp]
  000d0	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000d4	52		 push	 edx
  000d5	e8 00 00 00 00	 call	 _memset
  000da	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1922 : 
; 1923 : 		new_player_log->side_log [side].rank = bound (command_line_player_start_rank, PILOT_RANK_LIEUTENANT, PILOT_RANK_COLONEL);

  000dd	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?command_line_player_start_rank@@3HA, 1 ; command_line_player_start_rank
  000e4	7d 09		 jge	 SHORT $LN12@create_emp
  000e6	c7 45 a4 01 00
	00 00		 mov	 DWORD PTR tv144[ebp], 1
  000ed	eb 20		 jmp	 SHORT $LN13@create_emp
$LN12@create_emp:
  000ef	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?command_line_player_start_rank@@3HA, 5 ; command_line_player_start_rank
  000f6	7e 09		 jle	 SHORT $LN10@create_emp
  000f8	c7 45 a0 05 00
	00 00		 mov	 DWORD PTR tv143[ebp], 5
  000ff	eb 08		 jmp	 SHORT $LN11@create_emp
$LN10@create_emp:
  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_player_start_rank@@3HA ; command_line_player_start_rank
  00106	89 45 a0	 mov	 DWORD PTR tv143[ebp], eax
$LN11@create_emp:
  00109	8b 4d a0	 mov	 ecx, DWORD PTR tv143[ebp]
  0010c	89 4d a4	 mov	 DWORD PTR tv144[ebp], ecx
$LN13@create_emp:
  0010f	69 55 f4 4c 03
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 844
  00116	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  00119	8b 4d a4	 mov	 ecx, DWORD PTR tv144[ebp]
  0011c	89 4c 10 0c	 mov	 DWORD PTR [eax+edx+12], ecx

; 1924 : 
; 1925 : 		new_player_log->side_log [side].experience = get_player_points_from_rank ( command_line_player_start_rank );

  00120	a1 00 00 00 00	 mov	 eax, DWORD PTR ?command_line_player_start_rank@@3HA ; command_line_player_start_rank
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ?get_player_points_from_rank@@YGHH@Z ; get_player_points_from_rank
  0012b	69 4d f4 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 844
  00132	8b 55 fc	 mov	 edx, DWORD PTR _new_player_log$[ebp]
  00135	89 44 0a 10	 mov	 DWORD PTR [edx+ecx+16], eax

; 1926 : 	}

  00139	e9 72 ff ff ff	 jmp	 $LN2@create_emp
$LN3@create_emp:

; 1927 : 
; 1928 : 	new_player_log->next = NULL;

  0013e	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  00141	c7 80 3c 0d 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+3388], 0

; 1929 : 
; 1930 : 	list = get_player_log_list ();

  0014b	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  00150	89 45 f8	 mov	 DWORD PTR _list$[ebp], eax

; 1931 : 
; 1932 : 	if ( list )

  00153	83 7d f8 00	 cmp	 DWORD PTR _list$[ebp], 0
  00157	74 28		 je	 SHORT $LN7@create_emp
$LN5@create_emp:

; 1933 : 	{
; 1934 : 
; 1935 : 		while ( list->next )

  00159	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  0015c	83 b8 3c 0d 00
	00 00		 cmp	 DWORD PTR [eax+3388], 0
  00163	74 0e		 je	 SHORT $LN6@create_emp

; 1936 : 		{
; 1937 : 
; 1938 : 			list = list->next;

  00165	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  00168	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  0016e	89 4d f8	 mov	 DWORD PTR _list$[ebp], ecx

; 1939 : 		}

  00171	eb e6		 jmp	 SHORT $LN5@create_emp
$LN6@create_emp:

; 1940 : 
; 1941 : 		list->next = new_player_log;

  00173	8b 45 f8	 mov	 eax, DWORD PTR _list$[ebp]
  00176	8b 4d fc	 mov	 ecx, DWORD PTR _new_player_log$[ebp]
  00179	89 88 3c 0d 00
	00		 mov	 DWORD PTR [eax+3388], ecx

; 1942 : 	}
; 1943 : 	else

  0017f	eb 09		 jmp	 SHORT $LN8@create_emp
$LN7@create_emp:

; 1944 : 	{
; 1945 : 
; 1946 : 		set_player_log_list (new_player_log);

  00181	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list
$LN8@create_emp:

; 1947 : 	}
; 1948 : 
; 1949 : 	return new_player_log;

  0018a	8b 45 fc	 mov	 eax, DWORD PTR _new_player_log$[ebp]

; 1950 : }

  0018d	5f		 pop	 edi
  0018e	5e		 pop	 esi
  0018f	5b		 pop	 ebx
  00190	8b e5		 mov	 esp, ebp
  00192	5d		 pop	 ebp
  00193	c3		 ret	 0
?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ENDP	; create_empty_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_select_side_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv69 = -72						; size = 4
_side$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_select_side_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; player_select_side_function, COMDAT

; 1394 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1395 : 
; 1396 : 	entity_sides
; 1397 : 		side;
; 1398 : 
; 1399 : 	side = (entity_sides) get_ui_object_item_number ( obj );

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 1400 : 
; 1401 : 	player_log_current_side  = side;

  0001e	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00021	a3 00 00 00 00	 mov	 DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A, eax ; player_log_current_side

; 1402 : 
; 1403 : 	switch (player_log_current_side )

  00026	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A ; player_log_current_side
  0002b	89 45 b8	 mov	 DWORD PTR tv69[ebp], eax
  0002e	83 7d b8 01	 cmp	 DWORD PTR tv69[ebp], 1
  00032	74 3c		 je	 SHORT $LN5@player_sel
  00034	83 7d b8 02	 cmp	 DWORD PTR tv69[ebp], 2
  00038	74 02		 je	 SHORT $LN4@player_sel
  0003a	eb 68		 jmp	 SHORT $LN6@player_sel
$LN4@player_sel:

; 1404 : 	{
; 1405 : 
; 1406 : 		case ENTITY_SIDE_RED_FORCE:
; 1407 : 		{
; 1408 : 
; 1409 : 			set_ui_object_state ( player_red_side_selection_button, UI_OBJECT_STATE_ON );

  0003c	6a 01		 push	 1
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00043	50		 push	 eax
  00044	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  0004a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00053	ff d0		 call	 eax

; 1410 : 
; 1411 : 			set_ui_object_state ( player_blue_side_selection_button, UI_OBJECT_STATE_OFF );

  00055	6a 00		 push	 0
  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  0005c	50		 push	 eax
  0005d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  00063	8b 11		 mov	 edx, DWORD PTR [ecx]
  00065	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0006c	ff d0		 call	 eax

; 1412 : 
; 1413 : 			break;

  0006e	eb 66		 jmp	 SHORT $LN2@player_sel
$LN5@player_sel:

; 1414 : 		}
; 1415 : 
; 1416 : 		case ENTITY_SIDE_BLUE_FORCE:
; 1417 : 		{
; 1418 : 
; 1419 : 			set_ui_object_state ( player_blue_side_selection_button, UI_OBJECT_STATE_ON );

  00070	6a 01		 push	 1
  00072	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  00077	50		 push	 eax
  00078	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  0007e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00080	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00087	ff d0		 call	 eax

; 1420 : 
; 1421 : 			set_ui_object_state ( player_red_side_selection_button, UI_OBJECT_STATE_OFF );

  00089	6a 00		 push	 0
  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00090	50		 push	 eax
  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00097	8b 11		 mov	 edx, DWORD PTR [ecx]
  00099	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000a0	ff d0		 call	 eax

; 1422 : 
; 1423 : 			break;

  000a2	eb 32		 jmp	 SHORT $LN2@player_sel
$LN6@player_sel:

; 1424 : 		}
; 1425 : 
; 1426 : 		default:
; 1427 : 		{
; 1428 : 			set_ui_object_state ( player_red_side_selection_button, UI_OBJECT_STATE_OFF );

  000a4	6a 00		 push	 0
  000a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  000ab	50		 push	 eax
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000bb	ff d0		 call	 eax

; 1429 : 
; 1430 : 			set_ui_object_state ( player_blue_side_selection_button, UI_OBJECT_STATE_OFF );

  000bd	6a 00		 push	 0
  000bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  000c4	50		 push	 eax
  000c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  000cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000d4	ff d0		 call	 eax
$LN2@player_sel:

; 1431 : 
; 1432 : 			break;
; 1433 : 		}
; 1434 : 
; 1435 : 	}
; 1436 : 
; 1437 : 	rebuild_player_log_list ();

  000d6	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 1438 : }

  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 08 00	 ret	 8
?player_select_side_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; player_select_side_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_delete_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_delete_log$ = -16					; size = 4
_next$ = -12						; size = 4
_prev$ = -8						; size = 4
_log$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_delete_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; player_delete_function, COMDAT

; 1308 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1309 : 
; 1310 : 	player_log_type
; 1311 : 		*log,
; 1312 : 		*prev,
; 1313 : 		*next,
; 1314 : 		*delete_log;
; 1315 : 
; 1316 : 	log = get_player_log_list ();

  00009	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0000e	89 45 fc	 mov	 DWORD PTR _log$[ebp], eax

; 1317 : 
; 1318 : 	if ( ( log ) && ( log->next ) )

  00011	83 7d fc 00	 cmp	 DWORD PTR _log$[ebp], 0
  00015	0f 84 cf 00 00
	00		 je	 $LN1@player_del
  0001b	8b 45 fc	 mov	 eax, DWORD PTR _log$[ebp]
  0001e	83 b8 3c 0d 00
	00 00		 cmp	 DWORD PTR [eax+3388], 0
  00025	0f 84 bf 00 00
	00		 je	 $LN1@player_del

; 1319 : 	{
; 1320 : 
; 1321 : 		delete_log = get_current_player_log ();

  0002b	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00030	89 45 f0	 mov	 DWORD PTR _delete_log$[ebp], eax

; 1322 : 
; 1323 : 		if ( delete_log )

  00033	83 7d f0 00	 cmp	 DWORD PTR _delete_log$[ebp], 0
  00037	0f 84 a8 00 00
	00		 je	 $LN5@player_del

; 1324 : 		{
; 1325 : 
; 1326 : 			next = delete_log->next;

  0003d	8b 45 f0	 mov	 eax, DWORD PTR _delete_log$[ebp]
  00040	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  00046	89 4d f4	 mov	 DWORD PTR _next$[ebp], ecx

; 1327 : 
; 1328 : 			prev = NULL;

  00049	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _prev$[ebp], 0

; 1329 : 
; 1330 : 			log = get_player_log_list ();

  00050	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  00055	89 45 fc	 mov	 DWORD PTR _log$[ebp], eax
$LN2@player_del:

; 1331 : 
; 1332 : 			// find log that is previous to delete_log if it exists
; 1333 : 			while ( log )

  00058	83 7d fc 00	 cmp	 DWORD PTR _log$[ebp], 0
  0005c	74 24		 je	 SHORT $LN3@player_del

; 1334 : 			{
; 1335 : 
; 1336 : 				if ( log->next == delete_log )

  0005e	8b 45 fc	 mov	 eax, DWORD PTR _log$[ebp]
  00061	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  00067	3b 4d f0	 cmp	 ecx, DWORD PTR _delete_log$[ebp]
  0006a	75 08		 jne	 SHORT $LN6@player_del

; 1337 : 				{
; 1338 : 
; 1339 : 					prev = log;

  0006c	8b 45 fc	 mov	 eax, DWORD PTR _log$[ebp]
  0006f	89 45 f8	 mov	 DWORD PTR _prev$[ebp], eax

; 1340 : 
; 1341 : 					break;

  00072	eb 0e		 jmp	 SHORT $LN3@player_del
$LN6@player_del:

; 1342 : 				}
; 1343 : 
; 1344 : 				log = log->next;

  00074	8b 45 fc	 mov	 eax, DWORD PTR _log$[ebp]
  00077	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  0007d	89 4d fc	 mov	 DWORD PTR _log$[ebp], ecx

; 1345 : 			}

  00080	eb d6		 jmp	 SHORT $LN2@player_del
$LN3@player_del:

; 1346 : 
; 1347 : 			// select previous log if it is valid
; 1348 : 			if ( prev )

  00082	83 7d f8 00	 cmp	 DWORD PTR _prev$[ebp], 0
  00086	74 1c		 je	 SHORT $LN7@player_del

; 1349 : 			{
; 1350 : 
; 1351 : 				set_current_player_log ( prev );

  00088	8b 45 f8	 mov	 eax, DWORD PTR _prev$[ebp]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1352 : 
; 1353 : 				prev->next = next;

  00091	8b 45 f8	 mov	 eax, DWORD PTR _prev$[ebp]
  00094	8b 4d f4	 mov	 ecx, DWORD PTR _next$[ebp]
  00097	89 88 3c 0d 00
	00		 mov	 DWORD PTR [eax+3388], ecx

; 1354 : 
; 1355 : 				rebuild_player_log_list ();

  0009d	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
  000a2	eb 3c		 jmp	 SHORT $LN8@player_del
$LN7@player_del:

; 1356 : 			}
; 1357 : 			// otherwise, if log has a next, select that
; 1358 : 			else if ( next )

  000a4	83 7d f4 00	 cmp	 DWORD PTR _next$[ebp], 0
  000a8	74 19		 je	 SHORT $LN9@player_del

; 1359 : 			{
; 1360 : 
; 1361 : 				set_current_player_log ( next );

  000aa	8b 45 f4	 mov	 eax, DWORD PTR _next$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1362 : 
; 1363 : 				set_player_log_list ( next );

  000b3	8b 45 f4	 mov	 eax, DWORD PTR _next$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list

; 1364 : 
; 1365 : 				rebuild_player_log_list ();

  000bc	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 1366 : 			}
; 1367 : 			// this case should never exist...
; 1368 : 			else

  000c1	eb 1d		 jmp	 SHORT $LN8@player_del
$LN9@player_del:

; 1369 : 			{
; 1370 : 
; 1371 : 				direct_play_set_player_name ( "Unnamed Player" );

  000c3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HMHCKJLG@Unnamed?5Player@
  000c8	e8 00 00 00 00	 call	 ?direct_play_set_player_name@@YGXPBD@Z ; direct_play_set_player_name

; 1372 : 
; 1373 : 				set_current_player_log ( NULL );

  000cd	6a 00		 push	 0
  000cf	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1374 : 
; 1375 : 				set_player_log_list ( NULL );

  000d4	6a 00		 push	 0
  000d6	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list

; 1376 : 
; 1377 : 				rebuild_player_log_list ();

  000db	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
$LN8@player_del:

; 1378 : 
; 1379 : //				set_ui_object_text ( current_player_rank_text, "" );
; 1380 : 			}
; 1381 : 
; 1382 : 			save_player_list ();

  000e0	e8 00 00 00 00	 call	 ?save_player_list@@YGXXZ ; save_player_list
$LN5@player_del:

; 1383 : 		}
; 1384 : 
; 1385 : 		resize_player_list_size ();

  000e5	e8 00 00 00 00	 call	 ?resize_player_list_size@@YGXXZ ; resize_player_list_size
$LN1@player_del:

; 1386 : 	}
; 1387 : }

  000ea	5f		 pop	 edi
  000eb	5e		 pop	 esi
  000ec	5b		 pop	 ebx
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c2 08 00	 ret	 8
?player_delete_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; player_delete_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_player$ = -16						; size = 4
_y_size$ = -12						; size = 4
_y$ = -8						; size = 4
_list_item$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; player_rename_function, COMDAT

; 1252 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1253 : 
; 1254 : 	ui_object
; 1255 : 		*list_item;
; 1256 : 
; 1257 : 	float
; 1258 : 		y,
; 1259 : 		y_size;
; 1260 : 
; 1261 : 	player_log_type
; 1262 : 		*player;
; 1263 : 
; 1264 : 	player = get_current_player_log ();

  00009	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  0000e	89 45 f0	 mov	 DWORD PTR _player$[ebp], eax

; 1265 : 
; 1266 : 	list_item = get_ui_object_child ( player_list );

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  00016	50		 push	 eax
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0001d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00026	ff d0		 call	 eax
  00028	89 45 fc	 mov	 DWORD PTR _list_item$[ebp], eax
$LN2@player_ren:

; 1267 : 
; 1268 : 	while ( ( list_item ) && ( get_ui_object_item_number2 ( list_item ) != player->unique_id ) )

  0002b	83 7d fc 00	 cmp	 DWORD PTR _list_item$[ebp], 0
  0002f	74 31		 je	 SHORT $LN3@player_ren
  00031	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  00034	50		 push	 eax
  00035	8b 4d fc	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00038	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number2@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00041	ff d0		 call	 eax
  00043	8b 4d f0	 mov	 ecx, DWORD PTR _player$[ebp]
  00046	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00049	74 17		 je	 SHORT $LN3@player_ren

; 1269 : 	{
; 1270 : 
; 1271 : 		list_item = get_ui_object_next ( list_item );

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  0004e	50		 push	 eax
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00052	8b 11		 mov	 edx, DWORD PTR [ecx]
  00054	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0005b	ff d0		 call	 eax
  0005d	89 45 fc	 mov	 DWORD PTR _list_item$[ebp], eax

; 1272 : 	}

  00060	eb c9		 jmp	 SHORT $LN2@player_ren
$LN3@player_ren:

; 1273 : 
; 1274 : 	ASSERT ( list_item );

  00062	83 7d fc 00	 cmp	 DWORD PTR _list_item$[ebp], 0
  00066	75 18		 jne	 SHORT $LN4@player_ren
  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0006d	83 c0 16	 add	 eax, 22			; 00000016H
  00070	50		 push	 eax
  00071	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_09OHOKCDH@list_item@
  0007b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@player_ren:

; 1275 : 
; 1276 : 	y = get_ui_object_virtual_y (list_item);

  00080	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  00083	50		 push	 eax
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00087	8b 11		 mov	 edx, DWORD PTR [ecx]
  00089	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00090	ff d0		 call	 eax
  00092	d9 5d f8	 fstp	 DWORD PTR _y$[ebp]

; 1277 : 
; 1278 : 	y_size = get_ui_object_virtual_y_size (player_list);

  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0009a	50		 push	 eax
  0009b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000aa	ff d0		 call	 eax
  000ac	d9 5d f4	 fstp	 DWORD PTR _y_size$[ebp]

; 1279 : 
; 1280 : 	set_ui_object_virtual_y (player_name_input, y);

  000af	51		 push	 ecx
  000b0	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y$[ebp]
  000b5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000bf	50		 push	 eax
  000c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000c6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  000cf	ff d0		 call	 eax

; 1281 : 
; 1282 : 	set_ui_object_drawable (list_item, FALSE);

  000d1	6a 00		 push	 0
  000d3	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  000d6	50		 push	 eax
  000d7	8b 4d fc	 mov	 ecx, DWORD PTR _list_item$[ebp]
  000da	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000e3	ff d0		 call	 eax

; 1283 : 
; 1284 : 	set_ui_object_item_number (player_name_input, (int) list_item);

  000e5	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  000e8	50		 push	 eax
  000e9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000ef	51		 push	 ecx
  000f0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000f6	8b 02		 mov	 eax, DWORD PTR [edx]
  000f8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_item_number@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  000ff	ff d1		 call	 ecx

; 1285 : 
; 1286 : 	set_ui_object_text ( player_name_input, get_ui_object_text ( list_item ) );

  00101	8b 45 fc	 mov	 eax, DWORD PTR _list_item$[ebp]
  00104	50		 push	 eax
  00105	8b 4d fc	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00108	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00111	ff d0		 call	 eax
  00113	50		 push	 eax
  00114	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  0011a	51		 push	 ecx
  0011b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  00121	8b 02		 mov	 eax, DWORD PTR [edx]
  00123	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[eax*4]
  0012a	ff d1		 call	 ecx

; 1287 : 
; 1288 : 	set_ui_object_drawable (player_name_entry_area, TRUE);

  0012c	6a 01		 push	 1
  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00133	50		 push	 eax
  00134	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  0013a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00143	ff d0		 call	 eax

; 1289 : 
; 1290 : 	set_ui_object_state (player_name_input, UI_OBJECT_STATE_ON);

  00145	6a 01		 push	 1
  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  0014c	50		 push	 eax
  0014d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  00153	8b 11		 mov	 edx, DWORD PTR [ecx]
  00155	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0015c	ff d0		 call	 eax

; 1291 : 
; 1292 : 	player_creating_player = FALSE;

  0015e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?player_creating_player@@3HA, 0 ; player_creating_player

; 1293 : 
; 1294 : 	save_player_list ();

  00168	e8 00 00 00 00	 call	 ?save_player_list@@YGXXZ ; save_player_list

; 1295 : 
; 1296 : 	#if DEBUG_MODULE
; 1297 : 
; 1298 : 	test_player_scoring (get_current_player_log ());
; 1299 : 
; 1300 : 	#endif
; 1301 : }

  0016d	5f		 pop	 edi
  0016e	5e		 pop	 esi
  0016f	5b		 pop	 ebx
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c2 08 00	 ret	 8
?player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; player_rename_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?notify_select_player_restore_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_select_player_restore_button@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_select_player_restore_button, COMDAT

; 1023 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1024 : 	obj; arg;  // just to silence the compiler
; 1025 : 
; 1026 : 	if (restore_log_from_backup())

  00009	e8 00 00 00 00	 call	 ?restore_log_from_backup@@YGHXZ ; restore_log_from_backup
  0000e	85 c0		 test	 eax, eax
  00010	74 05		 je	 SHORT $LN1@notify_sel

; 1027 : 		rebuild_player_log_list();

  00012	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
$LN1@notify_sel:

; 1028 : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?notify_select_player_restore_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_select_player_restore_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_id$1 = -16						; size = 4
_player$ = -12						; size = 4
_object$ = -8						; size = 4
_text$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z PROC ; player_name_input_function, COMDAT

; 1169 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1170 : 
; 1171 :   	const char
; 1172 : 		*text;
; 1173 : 
; 1174 : 	ui_object
; 1175 : 		*object;
; 1176 : 
; 1177 : 	player_log_type
; 1178 : 		*player;
; 1179 : 
; 1180 : 	text = get_ui_object_text ( obj );

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	89 45 fc	 mov	 DWORD PTR _text$[ebp], eax

; 1181 : 
; 1182 : 	object = ( ui_object * ) get_ui_object_item_number ( obj );

  0001e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00025	8b 11		 mov	 edx, DWORD PTR [ecx]
  00027	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0002e	ff d0		 call	 eax
  00030	89 45 f8	 mov	 DWORD PTR _object$[ebp], eax

; 1183 : 
; 1184 : 	if ( ( text ) && ( strlen ( text ) > 0 ) )

  00033	83 7d fc 00	 cmp	 DWORD PTR _text$[ebp], 0
  00037	0f 84 85 00 00
	00		 je	 $LN4@player_nam
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 _strlen
  00046	83 c4 04	 add	 esp, 4
  00049	85 c0		 test	 eax, eax
  0004b	76 75		 jbe	 SHORT $LN4@player_nam

; 1185 : 	{
; 1186 : 
; 1187 : 		//
; 1188 : 		// Create the players log ( depending on whether we are in rename or create mode )
; 1189 : 		//
; 1190 : 
; 1191 : 		if ( player_creating_player )

  0004d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?player_creating_player@@3HA, 0 ; player_creating_player
  00054	74 1c		 je	 SHORT $LN6@player_nam

; 1192 : 		{
; 1193 : 
; 1194 : 			player = create_player_log ( text );

  00056	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?create_player_log@@YGPAUPLAYER_LOG_TYPE@@PBD@Z ; create_player_log
  0005f	89 45 f4	 mov	 DWORD PTR _player$[ebp], eax

; 1195 : 
; 1196 : 			set_current_player_log ( player );

  00062	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1197 : 
; 1198 : 			rebuild_player_log_list ();

  0006b	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 1199 : 		}
; 1200 : 		else

  00070	eb 4b		 jmp	 SHORT $LN7@player_nam
$LN6@player_nam:

; 1201 : 		{
; 1202 : 
; 1203 : 			player = rename_player_log ( get_ui_object_item_number2 ( object ), text );

  00072	8b 45 fc	 mov	 eax, DWORD PTR _text$[ebp]
  00075	50		 push	 eax
  00076	8b 4d f8	 mov	 ecx, DWORD PTR _object$[ebp]
  00079	51		 push	 ecx
  0007a	8b 55 f8	 mov	 edx, DWORD PTR _object$[ebp]
  0007d	8b 02		 mov	 eax, DWORD PTR [edx]
  0007f	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_item_number2@@3PAP6GHPAUUI_OBJECT@@@ZA[eax*4]
  00086	ff d1		 call	 ecx
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?rename_player_log@@YGPAUPLAYER_LOG_TYPE@@HPBD@Z ; rename_player_log
  0008e	89 45 f4	 mov	 DWORD PTR _player$[ebp], eax

; 1204 : 
; 1205 : 			set_ui_object_text ( object, player->name );

  00091	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00094	8b 08		 mov	 ecx, DWORD PTR [eax]
  00096	51		 push	 ecx
  00097	8b 55 f8	 mov	 edx, DWORD PTR _object$[ebp]
  0009a	52		 push	 edx
  0009b	8b 45 f8	 mov	 eax, DWORD PTR _object$[ebp]
  0009e	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a0	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  000a7	ff d2		 call	 edx

; 1206 : 
; 1207 : 			set_ui_object_drawable ( object, TRUE);

  000a9	6a 01		 push	 1
  000ab	8b 45 f8	 mov	 eax, DWORD PTR _object$[ebp]
  000ae	50		 push	 eax
  000af	8b 4d f8	 mov	 ecx, DWORD PTR _object$[ebp]
  000b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000bb	ff d0		 call	 eax
$LN7@player_nam:

; 1208 : 		}
; 1209 : 	}
; 1210 : 	else

  000bd	e9 86 00 00 00	 jmp	 $LN5@player_nam
$LN4@player_nam:

; 1211 : 	{
; 1212 : 
; 1213 : 		//
; 1214 : 		// Destroy the list item - or set the players name back to what it was
; 1215 : 		//
; 1216 : 
; 1217 : 		if ( player_creating_player )

  000c2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?player_creating_player@@3HA, 0 ; player_creating_player
  000c9	74 0b		 je	 SHORT $LN8@player_nam

; 1218 : 		{
; 1219 : 
; 1220 : 			destroy_ui_object ( object );

  000cb	8b 45 f8	 mov	 eax, DWORD PTR _object$[ebp]
  000ce	50		 push	 eax
  000cf	e8 00 00 00 00	 call	 ?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z ; destroy_ui_object

; 1221 : 		}
; 1222 : 		else

  000d4	eb 72		 jmp	 SHORT $LN5@player_nam
$LN8@player_nam:

; 1223 : 		{
; 1224 : 
; 1225 : 			int
; 1226 : 				id;
; 1227 : 
; 1228 : 			id = get_ui_object_item_number2 ( object );

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _object$[ebp]
  000d9	50		 push	 eax
  000da	8b 4d f8	 mov	 ecx, DWORD PTR _object$[ebp]
  000dd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000df	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number2@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000e6	ff d0		 call	 eax
  000e8	89 45 f0	 mov	 DWORD PTR _id$1[ebp], eax

; 1229 : 
; 1230 : 			player = get_player_log_list ();

  000eb	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  000f0	89 45 f4	 mov	 DWORD PTR _player$[ebp], eax
$LN2@player_nam:

; 1231 : 
; 1232 : 			while ( ( player ) && ( player->unique_id != id ) )

  000f3	83 7d f4 00	 cmp	 DWORD PTR _player$[ebp], 0
  000f7	74 19		 je	 SHORT $LN3@player_nam
  000f9	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  000fc	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ff	3b 4d f0	 cmp	 ecx, DWORD PTR _id$1[ebp]
  00102	74 0e		 je	 SHORT $LN3@player_nam

; 1233 : 			{
; 1234 : 
; 1235 : 				player = player->next;

  00104	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00107	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  0010d	89 4d f4	 mov	 DWORD PTR _player$[ebp], ecx

; 1236 : 			}

  00110	eb e1		 jmp	 SHORT $LN2@player_nam
$LN3@player_nam:

; 1237 : 
; 1238 : 			ASSERT ( player );

  00112	83 7d f4 00	 cmp	 DWORD PTR _player$[ebp], 0
  00116	75 18		 jne	 SHORT $LN10@player_nam
  00118	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  0011d	83 c0 45	 add	 eax, 69			; 00000045H
  00120	50		 push	 eax
  00121	68 00 00 00 00	 push	 OFFSET ??_C@_0EF@BOPJOMJ@c?3?2users?2nhv90?2projects?2eech?2ap@
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_06BALNJMNP@player@
  0012b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@player_nam:

; 1239 : 
; 1240 : 			set_ui_object_text ( object, player->name );

  00130	8b 45 f4	 mov	 eax, DWORD PTR _player$[ebp]
  00133	8b 08		 mov	 ecx, DWORD PTR [eax]
  00135	51		 push	 ecx
  00136	8b 55 f8	 mov	 edx, DWORD PTR _object$[ebp]
  00139	52		 push	 edx
  0013a	8b 45 f8	 mov	 eax, DWORD PTR _object$[ebp]
  0013d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013f	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_text@@3PAP6GXPAUUI_OBJECT@@PBD@ZA[ecx*4]
  00146	ff d2		 call	 edx
$LN5@player_nam:

; 1241 : 		}
; 1242 : 	}
; 1243 : 
; 1244 : 	set_ui_object_drawable ( player_name_entry_area, FALSE );

  00148	6a 00		 push	 0
  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  0014f	50		 push	 eax
  00150	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00156	8b 11		 mov	 edx, DWORD PTR [ecx]
  00158	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0015f	ff d0		 call	 eax

; 1245 : }

  00161	5f		 pop	 edi
  00162	5e		 pop	 esi
  00163	5b		 pop	 ebx
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c2 08 00	 ret	 8
?player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; player_name_input_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_add_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_player$ = -24						; size = 4
_count$ = -20						; size = 4
_y$ = -16						; size = 4
_x$ = -12						; size = 4
_list_item$ = -8					; size = 4
_slider$ = -4						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_add_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; player_add_function, COMDAT

; 1094 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1095 : 
; 1096 : 	ui_object
; 1097 : 		*slider,
; 1098 : 		*list_item;
; 1099 : 
; 1100 : 	float
; 1101 : 		x,
; 1102 : 		y;
; 1103 : 
; 1104 : 	int
; 1105 : 		count;
; 1106 : 
; 1107 : 	player_log_type
; 1108 : 		*player;
; 1109 : 
; 1110 : 	player = get_player_log_list ();

  00009	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0000e	89 45 e8	 mov	 DWORD PTR _player$[ebp], eax

; 1111 : 
; 1112 : 	count = 0;

  00011	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _count$[ebp], 0
$LN2@player_add:

; 1113 : 
; 1114 : 	while ( player )

  00018	83 7d e8 00	 cmp	 DWORD PTR _player$[ebp], 0
  0001c	74 17		 je	 SHORT $LN3@player_add

; 1115 : 	{
; 1116 : 
; 1117 : 		player = player->next;

  0001e	8b 45 e8	 mov	 eax, DWORD PTR _player$[ebp]
  00021	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  00027	89 4d e8	 mov	 DWORD PTR _player$[ebp], ecx

; 1118 : 
; 1119 : 		count++;

  0002a	8b 45 ec	 mov	 eax, DWORD PTR _count$[ebp]
  0002d	83 c0 01	 add	 eax, 1
  00030	89 45 ec	 mov	 DWORD PTR _count$[ebp], eax

; 1120 : 	}

  00033	eb e3		 jmp	 SHORT $LN2@player_add
$LN3@player_add:

; 1121 : 
; 1122 : 	if ( count < MAXIMUM_NUMBER_OF_PLAYERS )

  00035	83 7d ec 20	 cmp	 DWORD PTR _count$[ebp], 32 ; 00000020H
  00039	0f 8d 28 01 00
	00		 jge	 $LN4@player_add

; 1123 : 	{
; 1124 : 
; 1125 : 		list_item = add_to_pop_up_list ( "", player_list, NULL, 0, UI_FONT_ARIAL_18, ui_list_text_default_colour );

  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A ; ui_list_text_default_colour
  00044	50		 push	 eax
  00045	6a 05		 push	 5
  00047	6a 00		 push	 0
  00049	6a 00		 push	 0
  0004b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  00051	51		 push	 ecx
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00057	e8 00 00 00 00	 call	 ?add_to_pop_up_list@@YGPAUUI_OBJECT@@PBDPAU1@1HHUREAL_COLOUR@@@Z ; add_to_pop_up_list
  0005c	89 45 f8	 mov	 DWORD PTR _list_item$[ebp], eax

; 1126 : 
; 1127 : 		set_ui_frontend_list_object_highlightable (list_item);

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _list_item$[ebp]
  00062	50		 push	 eax
  00063	e8 00 00 00 00	 call	 ?set_ui_frontend_list_object_highlightable@@YGXPAUUI_OBJECT@@@Z ; set_ui_frontend_list_object_highlightable

; 1128 : 
; 1129 : 		// re-size the list objects when items are added
; 1130 : 
; 1131 : 		//resize_player_list_size ();
; 1132 : 
; 1133 : 		// slide list to bottom
; 1134 : 
; 1135 : 		slider = get_ui_object_vslider (player_list_area);

  00068	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?get_ui_object_vslider@@YGPAUUI_OBJECT@@PAU1@@Z ; get_ui_object_vslider
  00073	89 45 fc	 mov	 DWORD PTR _slider$[ebp], eax

; 1136 : 		set_ui_object_vslider_virtual_position (slider, 1.0);

  00076	51		 push	 ecx
  00077	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0007f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00084	8b 45 fc	 mov	 eax, DWORD PTR _slider$[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ?set_ui_object_vslider_virtual_position@@YGXPAUUI_OBJECT@@M@Z ; set_ui_object_vslider_virtual_position

; 1137 : 
; 1138 : 		// move input object to correct position
; 1139 : 
; 1140 : 		x = get_ui_object_virtual_x (list_item);

  0008d	8b 45 f8	 mov	 eax, DWORD PTR _list_item$[ebp]
  00090	50		 push	 eax
  00091	8b 4d f8	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00094	8b 11		 mov	 edx, DWORD PTR [ecx]
  00096	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0009d	ff d0		 call	 eax
  0009f	d9 5d f4	 fstp	 DWORD PTR _x$[ebp]

; 1141 : 
; 1142 : 		y = get_ui_object_virtual_y (list_item);

  000a2	8b 45 f8	 mov	 eax, DWORD PTR _list_item$[ebp]
  000a5	50		 push	 eax
  000a6	8b 4d f8	 mov	 ecx, DWORD PTR _list_item$[ebp]
  000a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ab	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000b2	ff d0		 call	 eax
  000b4	d9 5d f0	 fstp	 DWORD PTR _y$[ebp]

; 1143 : 
; 1144 : 		set_ui_object_virtual_x (player_name_input, x);

  000b7	51		 push	 ecx
  000b8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x$[ebp]
  000bd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000c7	50		 push	 eax
  000c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000ce	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_x@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  000d7	ff d0		 call	 eax

; 1145 : 
; 1146 : 		set_ui_object_virtual_y (player_name_input, y);

  000d9	51		 push	 ecx
  000da	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y$[ebp]
  000df	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000e9	50		 push	 eax
  000ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  000f0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_virtual_y@@3PAP6GXPAUUI_OBJECT@@M@ZA[edx*4]
  000f9	ff d0		 call	 eax

; 1147 : 
; 1148 : 		// switch input on
; 1149 : 
; 1150 : 		set_ui_object_drawable (list_item, FALSE);

  000fb	6a 00		 push	 0
  000fd	8b 45 f8	 mov	 eax, DWORD PTR _list_item$[ebp]
  00100	50		 push	 eax
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _list_item$[ebp]
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0010d	ff d0		 call	 eax

; 1151 : 
; 1152 : 		set_ui_object_item_number (player_name_input, (int) list_item);

  0010f	8b 45 f8	 mov	 eax, DWORD PTR _list_item$[ebp]
  00112	50		 push	 eax
  00113	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  00119	51		 push	 ecx
  0011a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  00120	8b 02		 mov	 eax, DWORD PTR [edx]
  00122	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_item_number@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00129	ff d1		 call	 ecx

; 1153 : 
; 1154 : 		set_ui_object_drawable (player_name_entry_area, TRUE);

  0012b	6a 01		 push	 1
  0012d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00132	50		 push	 eax
  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  00139	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00142	ff d0		 call	 eax

; 1155 : 
; 1156 : 		set_ui_object_state (player_name_input, UI_OBJECT_STATE_ON);

  00144	6a 01		 push	 1
  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  0014b	50		 push	 eax
  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A
  00152	8b 11		 mov	 edx, DWORD PTR [ecx]
  00154	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0015b	ff d0		 call	 eax

; 1157 : 
; 1158 : 		player_creating_player = TRUE;

  0015d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?player_creating_player@@3HA, 1 ; player_creating_player
$LN4@player_add:

; 1159 : 	}
; 1160 : 
; 1161 : 	save_player_list ();

  00167	e8 00 00 00 00	 call	 ?save_player_list@@YGXXZ ; save_player_list

; 1162 : }

  0016c	5f		 pop	 edi
  0016d	5e		 pop	 esi
  0016e	5b		 pop	 ebx
  0016f	8b e5		 mov	 esp, ebp
  00171	5d		 pop	 ebp
  00172	c2 08 00	 ret	 8
?player_add_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; player_add_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?player_list_function@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_player_unique_id$ = -12				; size = 4
_player_log$ = -8					; size = 4
_player_name$ = -4					; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?player_list_function@@YGXPAUUI_OBJECT@@PAX@Z PROC	; player_list_function, COMDAT

; 1035 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1036 : 
; 1037 : 	const char
; 1038 : 		*player_name;
; 1039 : 
; 1040 : 	player_log_type
; 1041 : 		*player_log;
; 1042 : 
; 1043 : 	int
; 1044 : 		player_unique_id;
; 1045 : 
; 1046 : 	if ( get_ui_object_item_number ( obj ) < 0 )

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	7d 05		 jge	 SHORT $LN4@player_lis

; 1047 : 	{
; 1048 : 
; 1049 : 		return;

  0001f	e9 a5 00 00 00	 jmp	 $LN1@player_lis
$LN4@player_lis:

; 1050 : 	}
; 1051 : 
; 1052 : 	player_name = get_ui_object_text ( obj );

  00024	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00027	50		 push	 eax
  00028	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_text@@3PAP6GPBDPAUUI_OBJECT@@@ZA[edx*4]
  00034	ff d0		 call	 eax
  00036	89 45 fc	 mov	 DWORD PTR _player_name$[ebp], eax

; 1053 : 
; 1054 : 	player_unique_id = get_ui_object_item_number2 ( obj );

  00039	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003c	50		 push	 eax
  0003d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_item_number2@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00049	ff d0		 call	 eax
  0004b	89 45 f4	 mov	 DWORD PTR _player_unique_id$[ebp], eax

; 1055 : 
; 1056 : 	#if DEBUG_MODULE
; 1057 : 
; 1058 : 	debug_log ( "Locating log %s, %d", player_name, player_unique_id );
; 1059 : 
; 1060 : 	#endif
; 1061 : 
; 1062 : 	if ( ( player_name ) && ( player_unique_id ) )

  0004e	83 7d fc 00	 cmp	 DWORD PTR _player_name$[ebp], 0
  00052	74 68		 je	 SHORT $LN5@player_lis
  00054	83 7d f4 00	 cmp	 DWORD PTR _player_unique_id$[ebp], 0
  00058	74 62		 je	 SHORT $LN5@player_lis

; 1063 : 	{
; 1064 : 
; 1065 : 		player_log = get_player_log_list ();

  0005a	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  0005f	89 45 f8	 mov	 DWORD PTR _player_log$[ebp], eax
$LN2@player_lis:

; 1066 : 
; 1067 : 		while ( player_log )

  00062	83 7d f8 00	 cmp	 DWORD PTR _player_log$[ebp], 0
  00066	74 43		 je	 SHORT $LN3@player_lis

; 1068 : 		{
; 1069 : 
; 1070 : 			if ( ( strcmp ( player_name, get_player_log_name ( player_log ) ) == 0 ) && ( player_unique_id == player_log->unique_id ) )

  00068	8b 45 f8	 mov	 eax, DWORD PTR _player_log$[ebp]
  0006b	50		 push	 eax
  0006c	e8 00 00 00 00	 call	 ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
  00071	50		 push	 eax
  00072	8b 4d fc	 mov	 ecx, DWORD PTR _player_name$[ebp]
  00075	51		 push	 ecx
  00076	e8 00 00 00 00	 call	 _strcmp
  0007b	83 c4 08	 add	 esp, 8
  0007e	85 c0		 test	 eax, eax
  00080	75 1b		 jne	 SHORT $LN6@player_lis
  00082	8b 45 f8	 mov	 eax, DWORD PTR _player_log$[ebp]
  00085	8b 4d f4	 mov	 ecx, DWORD PTR _player_unique_id$[ebp]
  00088	3b 48 04	 cmp	 ecx, DWORD PTR [eax+4]
  0008b	75 10		 jne	 SHORT $LN6@player_lis

; 1071 : 			{
; 1072 : 
; 1073 : 				set_current_player_log ( player_log );

  0008d	8b 45 f8	 mov	 eax, DWORD PTR _player_log$[ebp]
  00090	50		 push	 eax
  00091	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1074 : 
; 1075 : 				rebuild_player_log_list ();

  00096	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 1076 : 
; 1077 : 				return;

  0009b	eb 2c		 jmp	 SHORT $LN1@player_lis
$LN6@player_lis:

; 1078 : 			}
; 1079 : 
; 1080 : 			player_log = get_player_log_next ( player_log );

  0009d	8b 45 f8	 mov	 eax, DWORD PTR _player_log$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ; get_player_log_next
  000a6	89 45 f8	 mov	 DWORD PTR _player_log$[ebp], eax

; 1081 : 		}

  000a9	eb b7		 jmp	 SHORT $LN2@player_lis
$LN3@player_lis:

; 1082 : 
; 1083 : 		debug_fatal ( "PLAY_SC: Can't locate player log %s", player_name );

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _player_name$[ebp]
  000ae	50		 push	 eax
  000af	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@GFFJNOMM@PLAY_SC?3?5Can?8t?5locate?5player?5lo@
  000b4	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000b9	83 c4 08	 add	 esp, 8
$LN5@player_lis:

; 1084 : 	}
; 1085 : 
; 1086 : 	debug_fatal ( "PLAY_SC: Can't locate player log" );

  000bc	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@PPKLJFPE@PLAY_SC?3?5Can?8t?5locate?5player?5lo@
  000c1	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000c6	83 c4 04	 add	 esp, 4
$LN1@player_lis:

; 1087 : }

  000c9	5f		 pop	 edi
  000ca	5e		 pop	 esi
  000cb	5b		 pop	 ebx
  000cc	8b e5		 mov	 esp, ebp
  000ce	5d		 pop	 ebp
  000cf	c2 08 00	 ret	 8
?player_list_function@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; player_list_function
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?notify_medals_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_medals_button@@YGXPAUUI_OBJECT@@PAX@Z PROC	; notify_medals_button, COMDAT

; 1009 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1010 : 
; 1011 : 	obj;
; 1012 : 	arg;
; 1013 : 
; 1014 : 	push_ui_screen (player_medals_screen);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_medals_screen@@3PAUUI_OBJECT@@A ; player_medals_screen
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ?push_ui_screen@@YGXPAUUI_OBJECT@@@Z ; push_ui_screen

; 1015 : }

  00014	5f		 pop	 edi
  00015	5e		 pop	 esi
  00016	5b		 pop	 ebx
  00017	8b e5		 mov	 esp, ebp
  00019	5d		 pop	 ebp
  0001a	c2 08 00	 ret	 8
?notify_medals_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; notify_medals_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_select_player_exit_button, COMDAT

; 974  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 975  : 
; 976  : 	obj;
; 977  : 	arg;
; 978  : 
; 979  : 	if ((int) arg == BUTTON_STATE_DOWN)

  00009	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0000d	75 29		 jne	 SHORT $LN2@notify_sel

; 980  : 	{
; 981  : 
; 982  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_SELECTED));

  0000f	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00014	69 c8 60 01 00
	00		 imul	 ecx, eax, 352
  0001a	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  00031	ff d0		 call	 eax
  00033	e9 89 00 00 00	 jmp	 $LN3@notify_sel
$LN2@notify_sel:

; 983  : 	}
; 984  : 	else if ((int) arg == BUTTON_STATE_UP)

  00038	83 7d 0c 01	 cmp	 DWORD PTR _arg$[ebp], 1
  0003c	75 46		 jne	 SHORT $LN4@notify_sel

; 985  : 	{
; 986  : 
; 987  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_UNSELECTED));

  0003e	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00043	69 c8 5f 01 00
	00		 imul	 ecx, eax, 351
  00049	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  0004f	52		 push	 edx
  00050	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00053	50		 push	 eax
  00054	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00057	8b 11		 mov	 edx, DWORD PTR [ecx]
  00059	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  00060	ff d0		 call	 eax

; 988  : 
; 989  : 		set_ui_object_redraw (select_player_screen, TRUE);

  00062	6a 01		 push	 1
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00069	50		 push	 eax
  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00070	8b 11		 mov	 edx, DWORD PTR [ecx]
  00072	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00079	ff d0		 call	 eax

; 990  : 
; 991  : 		pop_ui_screen (SCREEN_POP_ACTUAL);

  0007b	6a 00		 push	 0
  0007d	e8 00 00 00 00	 call	 ?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z ; pop_ui_screen

; 992  : 	}
; 993  : 	else

  00082	eb 3d		 jmp	 SHORT $LN3@notify_sel
$LN4@notify_sel:

; 994  : 	{
; 995  : 
; 996  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_UNSELECTED));

  00084	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00089	69 c8 5f 01 00
	00		 imul	 ecx, eax, 351
  0008f	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00095	52		 push	 edx
  00096	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00099	50		 push	 eax
  0009a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  000a6	ff d0		 call	 eax

; 997  : 
; 998  : 		set_ui_object_redraw (select_player_screen, TRUE);

  000a8	6a 01		 push	 1
  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  000af	50		 push	 eax
  000b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000bf	ff d0		 call	 eax
$LN3@notify_sel:

; 999  : 	}
; 1000 : 
; 1001 : 	set_ui_object_graphic_type (obj, UI_OBJECT_ALPHA_GRAPHIC);

  000c1	6a 03		 push	 3
  000c3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000c6	50		 push	 eax
  000c7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ca	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic_type@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000d3	ff d0		 call	 eax

; 1002 : }

  000d5	5f		 pop	 edi
  000d6	5e		 pop	 esi
  000d7	5b		 pop	 ebx
  000d8	8b e5		 mov	 esp, ebp
  000da	5d		 pop	 ebp
  000db	c2 08 00	 ret	 8
?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_select_player_exit_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?notify_select_player_screen@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_select_player_screen@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_select_player_screen, COMDAT

; 911  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 912  : 	if ( get_ui_object_drawable ( obj ) )

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_drawable@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 a7 00 00
	00		 je	 $LN4@notify_sel

; 913  : 	{
; 914  : 
; 915  : 		switch (player_log_current_side)

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A ; player_log_current_side
  00028	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax
  0002b	83 7d bc 01	 cmp	 DWORD PTR tv70[ebp], 1
  0002f	74 23		 je	 SHORT $LN7@notify_sel
  00031	83 7d bc 02	 cmp	 DWORD PTR tv70[ebp], 2
  00035	74 02		 je	 SHORT $LN6@notify_sel
  00037	eb 34		 jmp	 SHORT $LN2@notify_sel
$LN6@notify_sel:

; 916  : 		{
; 917  : 
; 918  : 			case ENTITY_SIDE_RED_FORCE:
; 919  : 			{
; 920  : 
; 921  : 				set_ui_object_state ( player_red_side_selection_button, UI_OBJECT_STATE_ON );

  00039	6a 01		 push	 1
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00040	50		 push	 eax
  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00047	8b 11		 mov	 edx, DWORD PTR [ecx]
  00049	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00050	ff d0		 call	 eax

; 922  : 
; 923  : 				break;

  00052	eb 19		 jmp	 SHORT $LN2@notify_sel
$LN7@notify_sel:

; 924  : 			}
; 925  : 
; 926  : 			case ENTITY_SIDE_BLUE_FORCE:
; 927  : 			{
; 928  : 
; 929  : 				set_ui_object_state ( player_blue_side_selection_button, UI_OBJECT_STATE_ON );

  00054	6a 01		 push	 1
  00056	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  0005b	50		 push	 eax
  0005c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0006b	ff d0		 call	 eax
$LN2@notify_sel:

; 930  : 
; 931  : 				break;
; 932  : 			}
; 933  : 
; 934  : 		}
; 935  : 
; 936  : 		if ( player_screen_graphic )

  0006d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; player_screen_graphic
  00074	74 15		 je	 SHORT $LN8@notify_sel

; 937  : 		{
; 938  : 
; 939  : 			destroy_texture_graphic ( player_screen_graphic );

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; player_screen_graphic
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z ; destroy_texture_graphic

; 940  : 
; 941  : 			player_screen_graphic = NULL;

  00081	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; player_screen_graphic
$LN8@notify_sel:

; 942  : 		}
; 943  : 
; 944  : 		player_screen_graphic = create_texture_graphic ( "graphics\\ui\\cohokum\\pilots.psd" );

  0008b	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@JFBMFKIL@graphics?2ui?2cohokum?2pilots?4psd@
  00090	e8 00 00 00 00	 call	 ?create_texture_graphic@@YGPAUTEXTURE_GRAPHIC@@PBD@Z ; create_texture_graphic
  00095	a3 00 00 00 00	 mov	 DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, eax ; player_screen_graphic

; 945  : 
; 946  : 		set_ui_object_texture_graphic ( select_player_screen, player_screen_graphic );

  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; player_screen_graphic
  0009f	50		 push	 eax
  000a0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  000a6	51		 push	 ecx
  000a7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  000ad	8b 02		 mov	 eax, DWORD PTR [edx]
  000af	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_texture_graphic@@3PAP6GXPAUUI_OBJECT@@PAUTEXTURE_GRAPHIC@@@ZA[eax*4]
  000b6	ff d1		 call	 ecx

; 947  : 
; 948  : 		blit_front_buffer_to_render_buffer ();

  000b8	e8 00 00 00 00	 call	 ?blit_front_buffer_to_render_buffer@@YGXXZ ; blit_front_buffer_to_render_buffer

; 949  : 
; 950  : 		reset_time_values ( select_player_screen );

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?reset_time_values@@YGXPAUUI_OBJECT@@@Z ; reset_time_values

; 951  : 
; 952  : 	}
; 953  : 	else

  000c8	eb 1e		 jmp	 SHORT $LN5@notify_sel
$LN4@notify_sel:

; 954  : 	{
; 955  : 
; 956  : 		if ( player_screen_graphic )

  000ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; player_screen_graphic
  000d1	74 15		 je	 SHORT $LN5@notify_sel

; 957  : 		{
; 958  : 
; 959  : 			destroy_texture_graphic ( player_screen_graphic );

  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A ; player_screen_graphic
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?destroy_texture_graphic@@YGXPAUTEXTURE_GRAPHIC@@@Z ; destroy_texture_graphic

; 960  : 
; 961  : 			player_screen_graphic = NULL;

  000de	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?player_screen_graphic@@3PAUTEXTURE_GRAPHIC@@A, 0 ; player_screen_graphic
$LN5@notify_sel:

; 962  : 		}
; 963  : 	}
; 964  : 
; 965  : 	rebuild_player_log_list ();

  000e8	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 966  : 
; 967  : }

  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5b		 pop	 ebx
  000f0	8b e5		 mov	 esp, ebp
  000f2	5d		 pop	 ebp
  000f3	c2 08 00	 ret	 8
?notify_select_player_screen@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_select_player_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?display_player_log_page@@YGXW4PLAYER_LOG_PAGES@@@Z
_TEXT	SEGMENT
tv72 = -72						; size = 4
_loop$ = -4						; size = 4
_page$ = 8						; size = 4
?display_player_log_page@@YGXW4PLAYER_LOG_PAGES@@@Z PROC ; display_player_log_page, COMDAT

; 864  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 865  : 	int
; 866  : 		loop;
; 867  : 
; 868  : 	for (loop = 0; loop < NUM_LOG_PAGES; loop ++)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@display_pl
$LN2@display_pl:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _loop$[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@display_pl:
  0001b	83 7d fc 03	 cmp	 DWORD PTR _loop$[ebp], 3
  0001f	7d 3e		 jge	 SHORT $LN3@display_pl

; 869  : 	{
; 870  : 		set_ui_object_drawable (log_page [loop], (page == loop));

  00021	8b 45 08	 mov	 eax, DWORD PTR _page$[ebp]
  00024	3b 45 fc	 cmp	 eax, DWORD PTR _loop$[ebp]
  00027	75 09		 jne	 SHORT $LN10@display_pl
  00029	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv72[ebp], 1
  00030	eb 07		 jmp	 SHORT $LN11@display_pl
$LN10@display_pl:
  00032	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv72[ebp], 0
$LN11@display_pl:
  00039	8b 4d b8	 mov	 ecx, DWORD PTR tv72[ebp]
  0003c	51		 push	 ecx
  0003d	8b 55 fc	 mov	 edx, DWORD PTR _loop$[ebp]
  00040	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx*4]
  00047	50		 push	 eax
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _loop$[ebp]
  0004b	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx*4]
  00052	8b 02		 mov	 eax, DWORD PTR [edx]
  00054	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_drawable@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  0005b	ff d1		 call	 ecx

; 871  : 	}

  0005d	eb b3		 jmp	 SHORT $LN2@display_pl
$LN3@display_pl:

; 872  : 
; 873  : 	if (page == LOG_PAGE_GENERAL)

  0005f	83 7d 08 00	 cmp	 DWORD PTR _page$[ebp], 0
  00063	0f 85 cc 00 00
	00		 jne	 $LN5@display_pl

; 874  : 	{
; 875  : 		set_ui_object_state (log_page [LOG_PAGE_GENERAL], UI_OBJECT_STATE_ON);

  00069	6a 01		 push	 1
  0006b	b8 04 00 00 00	 mov	 eax, 4
  00070	6b c8 00	 imul	 ecx, eax, 0
  00073	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  00079	52		 push	 edx
  0007a	b8 04 00 00 00	 mov	 eax, 4
  0007f	6b c8 00	 imul	 ecx, eax, 0
  00082	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  00088	8b 02		 mov	 eax, DWORD PTR [edx]
  0008a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00091	ff d1		 call	 ecx

; 876  : 		set_ui_object_state (log_page [LOG_PAGE_FLIGHT_HOURS], UI_OBJECT_STATE_OFF);

  00093	6a 00		 push	 0
  00095	b8 04 00 00 00	 mov	 eax, 4
  0009a	d1 e0		 shl	 eax, 1
  0009c	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  000a2	51		 push	 ecx
  000a3	ba 04 00 00 00	 mov	 edx, 4
  000a8	d1 e2		 shl	 edx, 1
  000aa	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  000b9	ff d2		 call	 edx

; 877  : 		set_ui_object_state (log_page [LOG_PAGE_WEAPON], UI_OBJECT_STATE_OFF);

  000bb	6a 00		 push	 0
  000bd	b8 04 00 00 00	 mov	 eax, 4
  000c2	c1 e0 00	 shl	 eax, 0
  000c5	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  000cb	51		 push	 ecx
  000cc	ba 04 00 00 00	 mov	 edx, 4
  000d1	c1 e2 00	 shl	 edx, 0
  000d4	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  000da	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dc	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  000e3	ff d2		 call	 edx

; 878  : 
; 879  : 		set_ui_object_state (player_general_log_selection_button, UI_OBJECT_STATE_ON);

  000e5	6a 01		 push	 1
  000e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  000ec	50		 push	 eax
  000ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000fc	ff d0		 call	 eax

; 880  : 		set_ui_object_state (player_flight_hours_selection_button, UI_OBJECT_STATE_OFF);

  000fe	6a 00		 push	 0
  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  00105	50		 push	 eax
  00106	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  0010c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00115	ff d0		 call	 eax

; 881  : 		set_ui_object_state (player_weapon_log_selection_button, UI_OBJECT_STATE_OFF);

  00117	6a 00		 push	 0
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  0011e	50		 push	 eax
  0011f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  00125	8b 11		 mov	 edx, DWORD PTR [ecx]
  00127	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0012e	ff d0		 call	 eax
  00130	e9 9d 01 00 00	 jmp	 $LN1@display_pl
$LN5@display_pl:

; 882  : 	}
; 883  : 	else if (page == LOG_PAGE_FLIGHT_HOURS)

  00135	83 7d 08 02	 cmp	 DWORD PTR _page$[ebp], 2
  00139	0f 85 cc 00 00
	00		 jne	 $LN7@display_pl

; 884  : 	{
; 885  : 		set_ui_object_state (log_page [LOG_PAGE_GENERAL], UI_OBJECT_STATE_OFF);

  0013f	6a 00		 push	 0
  00141	b8 04 00 00 00	 mov	 eax, 4
  00146	6b c8 00	 imul	 ecx, eax, 0
  00149	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  0014f	52		 push	 edx
  00150	b8 04 00 00 00	 mov	 eax, 4
  00155	6b c8 00	 imul	 ecx, eax, 0
  00158	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  0015e	8b 02		 mov	 eax, DWORD PTR [edx]
  00160	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00167	ff d1		 call	 ecx

; 886  : 		set_ui_object_state (log_page [LOG_PAGE_FLIGHT_HOURS], UI_OBJECT_STATE_ON);

  00169	6a 01		 push	 1
  0016b	b8 04 00 00 00	 mov	 eax, 4
  00170	d1 e0		 shl	 eax, 1
  00172	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  00178	51		 push	 ecx
  00179	ba 04 00 00 00	 mov	 edx, 4
  0017e	d1 e2		 shl	 edx, 1
  00180	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  00186	8b 08		 mov	 ecx, DWORD PTR [eax]
  00188	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  0018f	ff d2		 call	 edx

; 887  : 		set_ui_object_state (log_page [LOG_PAGE_WEAPON], UI_OBJECT_STATE_OFF);

  00191	6a 00		 push	 0
  00193	b8 04 00 00 00	 mov	 eax, 4
  00198	c1 e0 00	 shl	 eax, 0
  0019b	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  001a1	51		 push	 ecx
  001a2	ba 04 00 00 00	 mov	 edx, 4
  001a7	c1 e2 00	 shl	 edx, 0
  001aa	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  001b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b2	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  001b9	ff d2		 call	 edx

; 888  : 
; 889  : 		set_ui_object_state (player_weapon_log_selection_button, UI_OBJECT_STATE_OFF);

  001bb	6a 00		 push	 0
  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  001c2	50		 push	 eax
  001c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  001c9	8b 11		 mov	 edx, DWORD PTR [ecx]
  001cb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001d2	ff d0		 call	 eax

; 890  : 		set_ui_object_state (player_flight_hours_selection_button, UI_OBJECT_STATE_ON);

  001d4	6a 01		 push	 1
  001d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  001db	50		 push	 eax
  001dc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  001e2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001e4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  001eb	ff d0		 call	 eax

; 891  : 		set_ui_object_state (player_general_log_selection_button, UI_OBJECT_STATE_OFF);

  001ed	6a 00		 push	 0
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  001f4	50		 push	 eax
  001f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  001fb	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00204	ff d0		 call	 eax

; 892  : 	}
; 893  : 	else

  00206	e9 c7 00 00 00	 jmp	 $LN1@display_pl
$LN7@display_pl:

; 894  : 	{
; 895  : 		set_ui_object_state (log_page [LOG_PAGE_GENERAL], UI_OBJECT_STATE_OFF);

  0020b	6a 00		 push	 0
  0020d	b8 04 00 00 00	 mov	 eax, 4
  00212	6b c8 00	 imul	 ecx, eax, 0
  00215	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  0021b	52		 push	 edx
  0021c	b8 04 00 00 00	 mov	 eax, 4
  00221	6b c8 00	 imul	 ecx, eax, 0
  00224	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[ecx]
  0022a	8b 02		 mov	 eax, DWORD PTR [edx]
  0022c	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  00233	ff d1		 call	 ecx

; 896  : 		set_ui_object_state (log_page [LOG_PAGE_FLIGHT_HOURS], UI_OBJECT_STATE_OFF);

  00235	6a 00		 push	 0
  00237	b8 04 00 00 00	 mov	 eax, 4
  0023c	d1 e0		 shl	 eax, 1
  0023e	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  00244	51		 push	 ecx
  00245	ba 04 00 00 00	 mov	 edx, 4
  0024a	d1 e2		 shl	 edx, 1
  0024c	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  00252	8b 08		 mov	 ecx, DWORD PTR [eax]
  00254	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  0025b	ff d2		 call	 edx

; 897  : 		set_ui_object_state (log_page [LOG_PAGE_WEAPON], UI_OBJECT_STATE_ON);

  0025d	6a 01		 push	 1
  0025f	b8 04 00 00 00	 mov	 eax, 4
  00264	c1 e0 00	 shl	 eax, 0
  00267	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[eax]
  0026d	51		 push	 ecx
  0026e	ba 04 00 00 00	 mov	 edx, 4
  00273	c1 e2 00	 shl	 edx, 0
  00276	8b 82 00 00 00
	00		 mov	 eax, DWORD PTR ?log_page@@3PAPAUUI_OBJECT@@A[edx]
  0027c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0027e	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[ecx*4]
  00285	ff d2		 call	 edx

; 898  : 
; 899  : 		set_ui_object_state (player_weapon_log_selection_button, UI_OBJECT_STATE_ON);

  00287	6a 01		 push	 1
  00289	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  0028e	50		 push	 eax
  0028f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  00295	8b 11		 mov	 edx, DWORD PTR [ecx]
  00297	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0029e	ff d0		 call	 eax

; 900  : 		set_ui_object_state (player_flight_hours_selection_button, UI_OBJECT_STATE_OFF);

  002a0	6a 00		 push	 0
  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  002a7	50		 push	 eax
  002a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  002ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  002b0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  002b7	ff d0		 call	 eax

; 901  : 		set_ui_object_state (player_general_log_selection_button, UI_OBJECT_STATE_OFF);

  002b9	6a 00		 push	 0
  002bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  002c0	50		 push	 eax
  002c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  002c7	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  002d0	ff d0		 call	 eax
$LN1@display_pl:

; 902  : 	}
; 903  : 
; 904  : }

  002d2	5f		 pop	 edi
  002d3	5e		 pop	 esi
  002d4	5b		 pop	 ebx
  002d5	8b e5		 mov	 esp, ebp
  002d7	5d		 pop	 ebp
  002d8	c2 04 00	 ret	 4
?display_player_log_page@@YGXW4PLAYER_LOG_PAGES@@@Z ENDP ; display_player_log_page
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?save_player_list@@YGXXZ
_TEXT	SEGMENT
_current_player_index$1 = -28				; size = 4
_string_length$2 = -24					; size = 4
_num_entries$3 = -20					; size = 4
_side$4 = -16						; size = 4
_version$5 = -12					; size = 4
_current_player$6 = -8					; size = 4
_file_ptr$7 = -4					; size = 4
?save_player_list@@YGXXZ PROC				; save_player_list, COMDAT

; 1672 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1673 : 
; 1674 : 	#if 1
; 1675 : 	//
; 1676 : 	// save binary file
; 1677 : 	//
; 1678 : 	{
; 1679 : 		FILE
; 1680 : 			*file_ptr;
; 1681 : 
; 1682 : 		player_log_type
; 1683 : 			*current_player;
; 1684 : 
; 1685 : 		int
; 1686 : 			version,
; 1687 : 			side,
; 1688 : 			num_entries,
; 1689 : 			string_length,
; 1690 : 			current_player_index;
; 1691 : 
; 1692 : 		file_ptr = safe_fopen ("playersv.bin", "wb");

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLFBBN@wb@
  0000e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHPNGNNN@playersv?4bin@
  00013	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00018	89 45 fc	 mov	 DWORD PTR _file_ptr$7[ebp], eax

; 1693 : 
; 1694 : 		version = 4;

  0001b	c7 45 f4 04 00
	00 00		 mov	 DWORD PTR _version$5[ebp], 4

; 1695 : 
; 1696 : 		fwrite (&version, sizeof (int), 1, file_ptr);

  00022	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00025	50		 push	 eax
  00026	6a 01		 push	 1
  00028	6a 04		 push	 4
  0002a	8d 4d f4	 lea	 ecx, DWORD PTR _version$5[ebp]
  0002d	51		 push	 ecx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00034	83 c4 10	 add	 esp, 16			; 00000010H

; 1697 : 
; 1698 : 		num_entries = 0;

  00037	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _num_entries$3[ebp], 0

; 1699 : 
; 1700 : 		current_player = get_player_log_list ();

  0003e	e8 00 00 00 00	 call	 ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_player_log_list
  00043	89 45 f8	 mov	 DWORD PTR _current_player$6[ebp], eax

; 1701 : 
; 1702 : 		current_player_index = -1;

  00046	c7 45 e4 ff ff
	ff ff		 mov	 DWORD PTR _current_player_index$1[ebp], -1

; 1703 : 
; 1704 : 		fwrite (&num_entries, sizeof (int), 1, file_ptr);

  0004d	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00050	50		 push	 eax
  00051	6a 01		 push	 1
  00053	6a 04		 push	 4
  00055	8d 4d ec	 lea	 ecx, DWORD PTR _num_entries$3[ebp]
  00058	51		 push	 ecx
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0005f	83 c4 10	 add	 esp, 16			; 00000010H

; 1705 : 
; 1706 : 		fwrite (&current_player_index, sizeof (int), 1, file_ptr);

  00062	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00065	50		 push	 eax
  00066	6a 01		 push	 1
  00068	6a 04		 push	 4
  0006a	8d 4d e4	 lea	 ecx, DWORD PTR _current_player_index$1[ebp]
  0006d	51		 push	 ecx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00074	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@save_playe:

; 1707 : 
; 1708 : 		while (current_player)

  00077	83 7d f8 00	 cmp	 DWORD PTR _current_player$6[ebp], 0
  0007b	0f 84 ff 00 00
	00		 je	 $LN3@save_playe

; 1709 : 		{
; 1710 : 			//
; 1711 : 			// store currently selected player
; 1712 : 			//
; 1713 : 
; 1714 : 			if (current_player == get_current_player_log ())

  00081	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00086	39 45 f8	 cmp	 DWORD PTR _current_player$6[ebp], eax
  00089	75 06		 jne	 SHORT $LN7@save_playe

; 1715 : 			{
; 1716 : 				current_player_index = num_entries;

  0008b	8b 45 ec	 mov	 eax, DWORD PTR _num_entries$3[ebp]
  0008e	89 45 e4	 mov	 DWORD PTR _current_player_index$1[ebp], eax
$LN7@save_playe:

; 1717 : 			}
; 1718 : 
; 1719 : 			// name
; 1720 : 
; 1721 : 			if (current_player->name)

  00091	8b 45 f8	 mov	 eax, DWORD PTR _current_player$6[ebp]
  00094	83 38 00	 cmp	 DWORD PTR [eax], 0
  00097	74 44		 je	 SHORT $LN8@save_playe

; 1722 : 			{
; 1723 : 				string_length = strlen (current_player->name) + 1;			// add 1 to include null terminator

  00099	8b 45 f8	 mov	 eax, DWORD PTR _current_player$6[ebp]
  0009c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009e	51		 push	 ecx
  0009f	e8 00 00 00 00	 call	 _strlen
  000a4	83 c4 04	 add	 esp, 4
  000a7	83 c0 01	 add	 eax, 1
  000aa	89 45 e8	 mov	 DWORD PTR _string_length$2[ebp], eax

; 1724 : 
; 1725 : 				fwrite (&string_length, sizeof (int), 1, file_ptr);

  000ad	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  000b0	50		 push	 eax
  000b1	6a 01		 push	 1
  000b3	6a 04		 push	 4
  000b5	8d 4d e8	 lea	 ecx, DWORD PTR _string_length$2[ebp]
  000b8	51		 push	 ecx
  000b9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  000bf	83 c4 10	 add	 esp, 16			; 00000010H

; 1726 : 
; 1727 : 				fwrite (current_player->name, 1, string_length, file_ptr);

  000c2	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  000c5	50		 push	 eax
  000c6	8b 4d e8	 mov	 ecx, DWORD PTR _string_length$2[ebp]
  000c9	51		 push	 ecx
  000ca	6a 01		 push	 1
  000cc	8b 55 f8	 mov	 edx, DWORD PTR _current_player$6[ebp]
  000cf	8b 02		 mov	 eax, DWORD PTR [edx]
  000d1	50		 push	 eax
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  000d8	83 c4 10	 add	 esp, 16			; 00000010H

; 1728 : 			}
; 1729 : 			else

  000db	eb 1c		 jmp	 SHORT $LN9@save_playe
$LN8@save_playe:

; 1730 : 			{
; 1731 : 				string_length = 0;

  000dd	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _string_length$2[ebp], 0

; 1732 : 
; 1733 : 				fwrite (&string_length, sizeof (int), 1, file_ptr);

  000e4	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  000e7	50		 push	 eax
  000e8	6a 01		 push	 1
  000ea	6a 04		 push	 4
  000ec	8d 4d e8	 lea	 ecx, DWORD PTR _string_length$2[ebp]
  000ef	51		 push	 ecx
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  000f6	83 c4 10	 add	 esp, 16			; 00000010H
$LN9@save_playe:

; 1734 : 			}
; 1735 : 
; 1736 : 			fwrite ( &current_player->unique_id, sizeof ( int ), 1, file_ptr );

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  000fc	50		 push	 eax
  000fd	6a 01		 push	 1
  000ff	6a 04		 push	 4
  00101	8b 4d f8	 mov	 ecx, DWORD PTR _current_player$6[ebp]
  00104	83 c1 04	 add	 ecx, 4
  00107	51		 push	 ecx
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  0010e	83 c4 10	 add	 esp, 16			; 00000010H

; 1737 : 
; 1738 : 			// date commissioned
; 1739 : 
; 1740 : 			fwrite (&(current_player->date_commissioned), sizeof (player_commissioned_type), 1, file_ptr);

  00111	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00114	50		 push	 eax
  00115	6a 01		 push	 1
  00117	6a 02		 push	 2
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _current_player$6[ebp]
  0011c	83 c1 08	 add	 ecx, 8
  0011f	51		 push	 ecx
  00120	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00126	83 c4 10	 add	 esp, 16			; 00000010H

; 1741 : 
; 1742 : 			// write individual side logs
; 1743 : 
; 1744 : 			for (side = 0; side <= NUM_ENTITY_SIDES; side ++)

  00129	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _side$4[ebp], 0
  00130	eb 09		 jmp	 SHORT $LN6@save_playe
$LN4@save_playe:
  00132	8b 45 f0	 mov	 eax, DWORD PTR _side$4[ebp]
  00135	83 c0 01	 add	 eax, 1
  00138	89 45 f0	 mov	 DWORD PTR _side$4[ebp], eax
$LN6@save_playe:
  0013b	83 7d f0 03	 cmp	 DWORD PTR _side$4[ebp], 3
  0013f	7f 25		 jg	 SHORT $LN5@save_playe

; 1745 : 			{
; 1746 : 				fwrite (&(current_player->side_log [side]), sizeof (player_side_log_type), 1, file_ptr);

  00141	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00144	50		 push	 eax
  00145	6a 01		 push	 1
  00147	68 4c 03 00 00	 push	 844			; 0000034cH
  0014c	69 4d f0 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$4[ebp], 844
  00153	8b 55 f8	 mov	 edx, DWORD PTR _current_player$6[ebp]
  00156	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0015a	50		 push	 eax
  0015b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  00161	83 c4 10	 add	 esp, 16			; 00000010H

; 1747 : 			}

  00164	eb cc		 jmp	 SHORT $LN4@save_playe
$LN5@save_playe:

; 1748 : 
; 1749 : 			num_entries ++;

  00166	8b 45 ec	 mov	 eax, DWORD PTR _num_entries$3[ebp]
  00169	83 c0 01	 add	 eax, 1
  0016c	89 45 ec	 mov	 DWORD PTR _num_entries$3[ebp], eax

; 1750 : 
; 1751 : 			current_player = get_player_log_next (current_player);

  0016f	8b 45 f8	 mov	 eax, DWORD PTR _current_player$6[ebp]
  00172	50		 push	 eax
  00173	e8 00 00 00 00	 call	 ?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ; get_player_log_next
  00178	89 45 f8	 mov	 DWORD PTR _current_player$6[ebp], eax

; 1752 : 		}

  0017b	e9 f7 fe ff ff	 jmp	 $LN2@save_playe
$LN3@save_playe:

; 1753 : 
; 1754 : 		fseek (file_ptr, sizeof (int), SEEK_SET);

  00180	6a 00		 push	 0
  00182	6a 04		 push	 4
  00184	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00187	50		 push	 eax
  00188	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fseek
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1755 : 
; 1756 : 		fwrite (&num_entries, sizeof (int), 1, file_ptr);

  00191	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  00194	50		 push	 eax
  00195	6a 01		 push	 1
  00197	6a 04		 push	 4
  00199	8d 4d ec	 lea	 ecx, DWORD PTR _num_entries$3[ebp]
  0019c	51		 push	 ecx
  0019d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  001a3	83 c4 10	 add	 esp, 16			; 00000010H

; 1757 : 
; 1758 : 		fwrite (&current_player_index, sizeof (int), 1, file_ptr);

  001a6	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  001a9	50		 push	 eax
  001aa	6a 01		 push	 1
  001ac	6a 04		 push	 4
  001ae	8d 4d e4	 lea	 ecx, DWORD PTR _current_player_index$1[ebp]
  001b1	51		 push	 ecx
  001b2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fwrite
  001b8	83 c4 10	 add	 esp, 16			; 00000010H

; 1759 : 
; 1760 : 		fclose (file_ptr);

  001bb	8b 45 fc	 mov	 eax, DWORD PTR _file_ptr$7[ebp]
  001be	50		 push	 eax
  001bf	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  001c5	83 c4 04	 add	 esp, 4

; 1761 : 	}
; 1762 : 
; 1763 : 	#else
; 1764 : 
; 1765 : 	//
; 1766 : 	// save text file
; 1767 : 	//
; 1768 : 	{
; 1769 : 		FILE
; 1770 : 			*file_ptr;
; 1771 : 
; 1772 : 		player_log_type
; 1773 : 			*current_player;
; 1774 : 
; 1775 : 		file_ptr = safe_fopen ("players.log", "w");
; 1776 : 
; 1777 : 		//
; 1778 : 		// Start
; 1779 : 		//
; 1780 : 
; 1781 : 		set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1782 : 		set_file_tag (file_ptr, FILE_TAG_START);
; 1783 : 		set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1784 : 
; 1785 : 		//
; 1786 : 		// Players
; 1787 : 		//
; 1788 : 
; 1789 : 		//current_player = get_ui_object_child (player_list);
; 1790 : 
; 1791 : 		current_player = get_player_log_list ();
; 1792 : 
; 1793 : 		while (current_player)
; 1794 : 		{
; 1795 : 
; 1796 : 			//if (get_ui_object_text (current_player), file_ptr)
; 1797 : 			{
; 1798 : 
; 1799 : 				set_file_new_line (file_ptr, 1);
; 1800 : 
; 1801 : 				set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1802 : 				set_file_tag (file_ptr, FILE_TAG_PLAYER);
; 1803 : 
; 1804 : 				set_file_tag (file_ptr, FILE_TAG_NAME);
; 1805 : 				set_file_string (file_ptr, get_player_log_name (current_player));
; 1806 : 
; 1807 : 				set_file_tag (file_ptr, FILE_TAG_PILOT_EXPERIENCE);
; 1808 : 				set_file_int (file_ptr, get_player_log_experience (get_global_gunship_side (), current_player));
; 1809 : 
; 1810 : 				set_file_tag (file_ptr, FILE_TAG_PILOT_LEVEL);
; 1811 : 				set_file_int (file_ptr, get_player_log_level (get_global_gunship_side (), current_player));
; 1812 : 
; 1813 : 				//
; 1814 : 				//
; 1815 : 				//
; 1816 : 
; 1817 : 				if (strcmp (direct_play_get_player_name (direct_play_get_player_id ()), get_player_log_name (current_player)) == 0)
; 1818 : 				{
; 1819 : 
; 1820 : 					set_file_tag (file_ptr, FILE_TAG_CURRENT_PLAYER);
; 1821 : 				}
; 1822 : 
; 1823 : 				set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1824 : 			}
; 1825 : 
; 1826 : 			current_player = get_player_log_next (current_player);
; 1827 : 		}
; 1828 : 
; 1829 : 		set_file_new_line (file_ptr, 1);
; 1830 : 
; 1831 : 		set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1832 : 		set_file_tag (file_ptr, FILE_TAG_END);
; 1833 : 		set_file_comment (file_ptr, "/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
; 1834 : 
; 1835 : 		fclose (file_ptr);
; 1836 : 	}
; 1837 : 
; 1838 : 	#endif
; 1839 : }

  001c8	5f		 pop	 edi
  001c9	5e		 pop	 esi
  001ca	5b		 pop	 ebx
  001cb	8b e5		 mov	 esp, ebp
  001cd	5d		 pop	 ebp
  001ce	c3		 ret	 0
?save_player_list@@YGXXZ ENDP				; save_player_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?load_player_list@@YGXXZ
_TEXT	SEGMENT
tv158 = -1924						; size = 4
_side$1 = -1664						; size = 4
_size_4$2 = -1660					; size = 4
_size_3$3 = -1656					; size = 4
_size_2$4 = -1652					; size = 4
_size_1$5 = -1648					; size = 4
_v2_side$6 = -1644					; size = 844
_v1_log$7 = -800					; size = 756
_change$8 = -44						; size = 8
_string_length$9 = -36					; size = 4
_current_player_index$10 = -32				; size = 4
_num_entries$11 = -28					; size = 4
_loop$12 = -24						; size = 4
_side$13 = -20						; size = 4
_file_ptr$ = -16					; size = 4
_new_player$ = -12					; size = 4
_level$ = -8						; size = 4
_version$ = -4						; size = 4
?load_player_list@@YGXXZ PROC				; load_player_list, COMDAT

; 1445 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 07 00
	00		 sub	 esp, 1924		; 00000784H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1446 : 
; 1447 : 	int
; 1448 : 		version = 0,

  0000c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _version$[ebp], 0

; 1449 : 		level;
; 1450 : 
; 1451 : 	player_log_type
; 1452 : 		*new_player;
; 1453 : 
; 1454 : 	FILE
; 1455 : 		*file_ptr;
; 1456 : 
; 1457 : 	#if DEBUG_MODULE
; 1458 : 
; 1459 : 		//debug_log ("DEBUG - Initialising player list");
; 1460 : 
; 1461 : 	#endif
; 1462 : 
; 1463 : 	set_player_log_list ( NULL );

  00013	6a 00		 push	 0
  00015	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list

; 1464 : 
; 1465 : 	ui_object_destroy_list_items ( player_list );

  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ?ui_object_destroy_list_items@@YGXPAUUI_OBJECT@@@Z ; ui_object_destroy_list_items

; 1466 : 
; 1467 : 	if (file_exist ( "playersv.bin" ))

  00025	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHPNGNNN@playersv?4bin@
  0002a	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  0002f	85 c0		 test	 eax, eax
  00031	74 29		 je	 SHORT $LN19@load_playe

; 1468 : 	{
; 1469 : 		file_ptr = safe_fopen ( "playersv.bin", "rb" );

  00033	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FHPNGNNN@playersv?4bin@
  0003d	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00042	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 1470 : 		fread ( &version, sizeof (int), 1, file_ptr );

  00045	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00048	50		 push	 eax
  00049	6a 01		 push	 1
  0004b	6a 04		 push	 4
  0004d	8d 4d fc	 lea	 ecx, DWORD PTR _version$[ebp]
  00050	51		 push	 ecx
  00051	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00057	83 c4 10	 add	 esp, 16			; 00000010H
  0005a	eb 50		 jmp	 SHORT $LN20@load_playe
$LN19@load_playe:

; 1471 : 	}
; 1472 : 	else if (file_exist ( "players2.bin" ))

  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MDDECFKH@players2?4bin@
  00061	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  00066	85 c0		 test	 eax, eax
  00068	74 1b		 je	 SHORT $LN21@load_playe

; 1473 : 	{
; 1474 : 		version = 2;

  0006a	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR _version$[ebp], 2

; 1475 : 		file_ptr = safe_fopen ( "players2.bin", "rb" );

  00071	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MDDECFKH@players2?4bin@
  0007b	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  00080	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax
  00083	eb 27		 jmp	 SHORT $LN20@load_playe
$LN21@load_playe:

; 1476 : 	}
; 1477 : 	else if (file_exist ( "players.bin" ))

  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KFGHKOIC@players?4bin@
  0008a	e8 00 00 00 00	 call	 ?file_exist@@YGHPBD@Z	; file_exist
  0008f	85 c0		 test	 eax, eax
  00091	74 19		 je	 SHORT $LN20@load_playe

; 1478 : 	{
; 1479 : 		version = 1;

  00093	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _version$[ebp], 1

; 1480 : 		file_ptr = safe_fopen ( "players.bin", "rb" );

  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KFGHKOIC@players?4bin@
  000a4	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  000a9	89 45 f0	 mov	 DWORD PTR _file_ptr$[ebp], eax
$LN20@load_playe:

; 1481 : 	}
; 1482 : 
; 1483 : 	if (version)

  000ac	83 7d fc 00	 cmp	 DWORD PTR _version$[ebp], 0
  000b0	0f 84 22 04 00
	00		 je	 $LN24@load_playe

; 1484 : 	{
; 1485 : 		int
; 1486 : 			side,
; 1487 : 			loop,
; 1488 : 			num_entries,
; 1489 : 			current_player_index,
; 1490 : 			string_length;
; 1491 : 
; 1492 : 		fread ( &num_entries, sizeof ( int ), 1, file_ptr );

  000b6	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000b9	50		 push	 eax
  000ba	6a 01		 push	 1
  000bc	6a 04		 push	 4
  000be	8d 4d e4	 lea	 ecx, DWORD PTR _num_entries$11[ebp]
  000c1	51		 push	 ecx
  000c2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000c8	83 c4 10	 add	 esp, 16			; 00000010H

; 1493 : 
; 1494 : 		fread ( &current_player_index, sizeof ( int ), 1, file_ptr );

  000cb	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000ce	50		 push	 eax
  000cf	6a 01		 push	 1
  000d1	6a 04		 push	 4
  000d3	8d 4d e0	 lea	 ecx, DWORD PTR _current_player_index$10[ebp]
  000d6	51		 push	 ecx
  000d7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  000dd	83 c4 10	 add	 esp, 16			; 00000010H

; 1495 : 
; 1496 : 		for ( loop = 0; loop < num_entries; loop++ )

  000e0	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _loop$12[ebp], 0
  000e7	eb 09		 jmp	 SHORT $LN4@load_playe
$LN2@load_playe:
  000e9	8b 45 e8	 mov	 eax, DWORD PTR _loop$12[ebp]
  000ec	83 c0 01	 add	 eax, 1
  000ef	89 45 e8	 mov	 DWORD PTR _loop$12[ebp], eax
$LN4@load_playe:
  000f2	8b 45 e8	 mov	 eax, DWORD PTR _loop$12[ebp]
  000f5	3b 45 e4	 cmp	 eax, DWORD PTR _num_entries$11[ebp]
  000f8	0f 8d c8 03 00
	00		 jge	 $LN3@load_playe

; 1497 : 		{
; 1498 : 
; 1499 : 			new_player = create_empty_player_log ();

  000fe	e8 00 00 00 00	 call	 ?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; create_empty_player_log
  00103	89 45 f4	 mov	 DWORD PTR _new_player$[ebp], eax

; 1500 : 
; 1501 : 			//
; 1502 : 			// Name
; 1503 : 			//
; 1504 : 
; 1505 : 			fread ( &string_length, sizeof ( int ), 1, file_ptr );

  00106	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00109	50		 push	 eax
  0010a	6a 01		 push	 1
  0010c	6a 04		 push	 4
  0010e	8d 4d dc	 lea	 ecx, DWORD PTR _string_length$9[ebp]
  00111	51		 push	 ecx
  00112	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00118	83 c4 10	 add	 esp, 16			; 00000010H

; 1506 : 
; 1507 : 			if ( string_length > 0 )

  0011b	83 7d dc 00	 cmp	 DWORD PTR _string_length$9[ebp], 0
  0011f	7e 2a		 jle	 SHORT $LN26@load_playe

; 1508 : 			{
; 1509 : 
; 1510 : 				new_player->name = ( char * ) malloc_heap_mem ( sizeof ( char ) * (string_length  + 2));

  00121	8b 45 dc	 mov	 eax, DWORD PTR _string_length$9[ebp]
  00124	83 c0 02	 add	 eax, 2
  00127	50		 push	 eax
  00128	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0012d	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  00130	89 01		 mov	 DWORD PTR [ecx], eax

; 1511 : 
; 1512 : 				fread ( new_player->name, 1, string_length, file_ptr );

  00132	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00135	50		 push	 eax
  00136	8b 4d dc	 mov	 ecx, DWORD PTR _string_length$9[ebp]
  00139	51		 push	 ecx
  0013a	6a 01		 push	 1
  0013c	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  0013f	8b 02		 mov	 eax, DWORD PTR [edx]
  00141	50		 push	 eax
  00142	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00148	83 c4 10	 add	 esp, 16			; 00000010H
$LN26@load_playe:

; 1513 : 			}
; 1514 : 
; 1515 : 			//
; 1516 : 			// Unique ID
; 1517 : 			//
; 1518 : 
; 1519 : 			fread ( &new_player->unique_id, sizeof ( int ), 1, file_ptr );

  0014b	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0014e	50		 push	 eax
  0014f	6a 01		 push	 1
  00151	6a 04		 push	 4
  00153	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  00156	83 c1 04	 add	 ecx, 4
  00159	51		 push	 ecx
  0015a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00160	83 c4 10	 add	 esp, 16			; 00000010H

; 1520 : 
; 1521 : 			//
; 1522 : 			// Date commissioned
; 1523 : 			//
; 1524 : 
; 1525 : 			fread ( &new_player->date_commissioned, sizeof ( player_commissioned_type ), 1, file_ptr );

  00163	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00166	50		 push	 eax
  00167	6a 01		 push	 1
  00169	6a 02		 push	 2
  0016b	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  0016e	83 c1 08	 add	 ecx, 8
  00171	51		 push	 ecx
  00172	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00178	83 c4 10	 add	 esp, 16			; 00000010H

; 1526 : 
; 1527 : 			//
; 1528 : 			// read individual gunship logs
; 1529 : 			//
; 1530 : 
; 1531 : 			for (side = 0; side <= NUM_ENTITY_SIDES; side ++ )

  0017b	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _side$13[ebp], 0
  00182	eb 09		 jmp	 SHORT $LN7@load_playe
$LN5@load_playe:
  00184	8b 45 ec	 mov	 eax, DWORD PTR _side$13[ebp]
  00187	83 c0 01	 add	 eax, 1
  0018a	89 45 ec	 mov	 DWORD PTR _side$13[ebp], eax
$LN7@load_playe:
  0018d	83 7d ec 03	 cmp	 DWORD PTR _side$13[ebp], 3
  00191	0f 8f fa 02 00
	00		 jg	 $LN6@load_playe

; 1532 : 			{
; 1533 : 				struct
; 1534 : 				{
; 1535 : 					int
; 1536 : 						gunships,
; 1537 : 						weapons;
; 1538 : 				}
; 1539 : 					change = { 0, 0 };

  00197	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _change$8[ebp], 0
  0019e	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _change$8[ebp+4], 0

; 1540 : 
; 1541 : 				switch (version)

  001a5	8b 45 fc	 mov	 eax, DWORD PTR _version$[ebp]
  001a8	89 85 7c f8 ff
	ff		 mov	 DWORD PTR tv158[ebp], eax
  001ae	8b 8d 7c f8 ff
	ff		 mov	 ecx, DWORD PTR tv158[ebp]
  001b4	83 e9 01	 sub	 ecx, 1
  001b7	89 8d 7c f8 ff
	ff		 mov	 DWORD PTR tv158[ebp], ecx
  001bd	83 bd 7c f8 ff
	ff 03		 cmp	 DWORD PTR tv158[ebp], 3
  001c4	0f 87 4a 02 00
	00		 ja	 $LN31@load_playe
  001ca	8b 95 7c f8 ff
	ff		 mov	 edx, DWORD PTR tv158[ebp]
  001d0	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN37@load_playe[edx*4]
$LN27@load_playe:

; 1542 : 				{
; 1543 : 				case 1:
; 1544 : 					{
; 1545 : 						// size of original side log element was 756, it has changed now
; 1546 : 						version1_player_side_log_type v1_log;
; 1547 : 
; 1548 : 						fread ( &v1_log, sizeof(v1_log), 1, file_ptr );

  001d7	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  001da	50		 push	 eax
  001db	6a 01		 push	 1
  001dd	68 f4 02 00 00	 push	 756			; 000002f4H
  001e2	8d 8d e0 fc ff
	ff		 lea	 ecx, DWORD PTR _v1_log$7[ebp]
  001e8	51		 push	 ecx
  001e9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  001ef	83 c4 10	 add	 esp, 16			; 00000010H

; 1549 : 
; 1550 : 						// the first values are in the same positoin so we'll just copy them
; 1551 : 						memcpy(&new_player->side_log[side], &v1_log, sizeof(v1_log));

  001f2	68 f4 02 00 00	 push	 756			; 000002f4H
  001f7	8d 85 e0 fc ff
	ff		 lea	 eax, DWORD PTR _v1_log$7[ebp]
  001fd	50		 push	 eax
  001fe	69 4d ec 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$13[ebp], 844
  00205	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  00208	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 _memcpy
  00212	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1552 : 
; 1553 : 						// reset the kill values which didn't exist and now have been overwritten by later values
; 1554 : 						new_player->side_log[side].helicopters_lost = new_player->side_log[side].kills.deaths;

  00215	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  0021c	69 4d ec 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$13[ebp], 844
  00223	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  00226	8b 75 f4	 mov	 esi, DWORD PTR _new_player$[ebp]
  00229	8b 84 06 98 00
	00 00		 mov	 eax, DWORD PTR [esi+eax+152]
  00230	89 84 0a 50 03
	00 00		 mov	 DWORD PTR [edx+ecx+848], eax

; 1555 : 						new_player->side_log[side].kills.fixed_wing = 0;

  00237	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  0023e	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  00241	c7 84 01 a0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+160], 0

; 1556 : 						new_player->side_log[side].kills.helicopter = new_player->side_log[side].kills.air;  // assume all airkills are helicopters... most probably are

  0024c	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  00253	69 4d ec 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$13[ebp], 844
  0025a	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  0025d	8b 75 f4	 mov	 esi, DWORD PTR _new_player$[ebp]
  00260	8b 84 06 88 00
	00 00		 mov	 eax, DWORD PTR [esi+eax+136]
  00267	89 84 0a a4 00
	00 00		 mov	 DWORD PTR [edx+ecx+164], eax

; 1557 : 						new_player->side_log[side].kills.air_defence = 0;

  0026e	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  00275	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  00278	c7 84 01 a8 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+168], 0

; 1558 : 						new_player->side_log[side].kills.armour = 0;

  00283	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  0028a	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  0028d	c7 84 01 ac 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+172], 0

; 1559 : 						new_player->side_log[side].kills.artillery = 0;

  00298	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  0029f	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  002a2	c7 84 01 b0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+176], 0

; 1560 : 
; 1561 : 						// recopy weapons usage data
; 1562 : 						memcpy(&new_player->side_log[side].weapon_usage, &v1_log.weapon_usage, sizeof(v1_log.weapon_usage));

  002ad	68 60 02 00 00	 push	 608			; 00000260H
  002b2	8d 85 74 fd ff
	ff		 lea	 eax, DWORD PTR _v1_log$7[ebp+148]
  002b8	50		 push	 eax
  002b9	69 4d ec 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$13[ebp], 844
  002c0	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  002c3	8d 84 0a b4 00
	00 00		 lea	 eax, DWORD PTR [edx+ecx+180]
  002ca	50		 push	 eax
  002cb	e8 00 00 00 00	 call	 _memcpy
  002d0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1563 : 						break;

  002d3	e9 4d 01 00 00	 jmp	 $LN8@load_playe
$LN28@load_playe:

; 1564 : 					}
; 1565 : 
; 1566 : 				case 2:
; 1567 : 					change.gunships += 1;

  002d8	8b 45 d4	 mov	 eax, DWORD PTR _change$8[ebp]
  002db	83 c0 01	 add	 eax, 1
  002de	89 45 d4	 mov	 DWORD PTR _change$8[ebp], eax
$LN29@load_playe:

; 1568 : 
; 1569 : 				case 3:
; 1570 : 					change.gunships += 1;

  002e1	8b 45 d4	 mov	 eax, DWORD PTR _change$8[ebp]
  002e4	83 c0 01	 add	 eax, 1
  002e7	89 45 d4	 mov	 DWORD PTR _change$8[ebp], eax

; 1571 : 
; 1572 : 					{
; 1573 : 						player_side_log_type v2_side;
; 1574 : 						const size_t
; 1575 : 							size_1 = ( char * ) ( &v2_side.weapon_usage[NUM_ENTITY_SUB_TYPE_WEAPONS - change.weapons] ) - ( char * ) ( &v2_side ),

  002ea	b8 4c 00 00 00	 mov	 eax, 76			; 0000004cH
  002ef	2b 45 d8	 sub	 eax, DWORD PTR _change$8[ebp+4]
  002f2	8d 8c c5 3c fa
	ff ff		 lea	 ecx, DWORD PTR _v2_side$6[ebp+eax*8+168]
  002f9	8d 95 94 f9 ff
	ff		 lea	 edx, DWORD PTR _v2_side$6[ebp]
  002ff	2b ca		 sub	 ecx, edx
  00301	89 8d 90 f9 ff
	ff		 mov	 DWORD PTR _size_1$5[ebp], ecx

; 1576 : 							size_2 = ( NUM_GUNSHIP_TYPES - change.gunships ) * sizeof ( *v2_side.gunship_flying_seconds ),

  00307	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0030c	2b 45 d4	 sub	 eax, DWORD PTR _change$8[ebp]
  0030f	c1 e0 02	 shl	 eax, 2
  00312	89 85 8c f9 ff
	ff		 mov	 DWORD PTR _size_2$4[ebp], eax

; 1577 : 							size_3 = ( ( NUM_GUNSHIP_TYPES - change.gunships ) * sizeof ( *v2_side.gunship_missions ) + 3 ) & ~3,

  00318	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0031d	2b 45 d4	 sub	 eax, DWORD PTR _change$8[ebp]
  00320	8d 4c 00 03	 lea	 ecx, DWORD PTR [eax+eax+3]
  00324	83 e1 fc	 and	 ecx, -4			; fffffffcH
  00327	89 8d 88 f9 ff
	ff		 mov	 DWORD PTR _size_3$3[ebp], ecx

; 1578 : 							size_4 = sizeof ( v2_side ) - ( ( char * ) &v2_side.helicopters_lost - ( char * ) &v2_side );

  0032d	8d 85 d8 fc ff
	ff		 lea	 eax, DWORD PTR _v2_side$6[ebp+836]
  00333	8d 8d 94 f9 ff
	ff		 lea	 ecx, DWORD PTR _v2_side$6[ebp]
  00339	2b c1		 sub	 eax, ecx
  0033b	ba 4c 03 00 00	 mov	 edx, 844		; 0000034cH
  00340	2b d0		 sub	 edx, eax
  00342	89 95 84 f9 ff
	ff		 mov	 DWORD PTR _size_4$2[ebp], edx

; 1579 : 						memset ( &v2_side, 0, sizeof ( v2_side ) );

  00348	68 4c 03 00 00	 push	 844			; 0000034cH
  0034d	6a 00		 push	 0
  0034f	8d 85 94 f9 ff
	ff		 lea	 eax, DWORD PTR _v2_side$6[ebp]
  00355	50		 push	 eax
  00356	e8 00 00 00 00	 call	 _memset
  0035b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1580 : 						fread ( &v2_side, size_1, 1, file_ptr );

  0035e	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00361	50		 push	 eax
  00362	6a 01		 push	 1
  00364	8b 8d 90 f9 ff
	ff		 mov	 ecx, DWORD PTR _size_1$5[ebp]
  0036a	51		 push	 ecx
  0036b	8d 95 94 f9 ff
	ff		 lea	 edx, DWORD PTR _v2_side$6[ebp]
  00371	52		 push	 edx
  00372	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00378	83 c4 10	 add	 esp, 16			; 00000010H

; 1581 : 						fread ( v2_side.gunship_flying_seconds, size_2, 1, file_ptr );

  0037b	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0037e	50		 push	 eax
  0037f	6a 01		 push	 1
  00381	8b 8d 8c f9 ff
	ff		 mov	 ecx, DWORD PTR _size_2$4[ebp]
  00387	51		 push	 ecx
  00388	8d 95 9c fc ff
	ff		 lea	 edx, DWORD PTR _v2_side$6[ebp+776]
  0038e	52		 push	 edx
  0038f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  00395	83 c4 10	 add	 esp, 16			; 00000010H

; 1582 : 						fread ( v2_side.gunship_missions, size_3, 1, file_ptr );

  00398	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0039b	50		 push	 eax
  0039c	6a 01		 push	 1
  0039e	8b 8d 88 f9 ff
	ff		 mov	 ecx, DWORD PTR _size_3$3[ebp]
  003a4	51		 push	 ecx
  003a5	8d 95 c4 fc ff
	ff		 lea	 edx, DWORD PTR _v2_side$6[ebp+816]
  003ab	52		 push	 edx
  003ac	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  003b2	83 c4 10	 add	 esp, 16			; 00000010H

; 1583 : 						fread ( &v2_side.helicopters_lost, size_4, 1, file_ptr );

  003b5	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003b8	50		 push	 eax
  003b9	6a 01		 push	 1
  003bb	8b 8d 84 f9 ff
	ff		 mov	 ecx, DWORD PTR _size_4$2[ebp]
  003c1	51		 push	 ecx
  003c2	8d 95 d8 fc ff
	ff		 lea	 edx, DWORD PTR _v2_side$6[ebp+836]
  003c8	52		 push	 edx
  003c9	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  003cf	83 c4 10	 add	 esp, 16			; 00000010H

; 1584 : 						new_player->side_log[side] = v2_side;

  003d2	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  003d9	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  003dc	8d 7c 01 0c	 lea	 edi, DWORD PTR [ecx+eax+12]
  003e0	b9 d3 00 00 00	 mov	 ecx, 211		; 000000d3H
  003e5	8d b5 94 f9 ff
	ff		 lea	 esi, DWORD PTR _v2_side$6[ebp]
  003eb	f3 a5		 rep movsd

; 1585 : 						break;

  003ed	eb 36		 jmp	 SHORT $LN8@load_playe
$LN30@load_playe:

; 1586 : 					}
; 1587 : 
; 1588 : 				case 4:
; 1589 : 					{
; 1590 : 						fread ( &new_player->side_log[side], sizeof(player_side_log_type), 1, file_ptr );

  003ef	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  003f2	50		 push	 eax
  003f3	6a 01		 push	 1
  003f5	68 4c 03 00 00	 push	 844			; 0000034cH
  003fa	69 4d ec 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$13[ebp], 844
  00401	8b 55 f4	 mov	 edx, DWORD PTR _new_player$[ebp]
  00404	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  00408	50		 push	 eax
  00409	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fread
  0040f	83 c4 10	 add	 esp, 16			; 00000010H

; 1591 : 						break;

  00412	eb 11		 jmp	 SHORT $LN8@load_playe
$LN31@load_playe:

; 1592 : 					}
; 1593 : 
; 1594 : 				default:
; 1595 : 					{
; 1596 : 						debug_fatal ( "Unknown players.bin version %i", version );

  00414	8b 45 fc	 mov	 eax, DWORD PTR _version$[ebp]
  00417	50		 push	 eax
  00418	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@JGBOKIEB@Unknown?5players?4bin?5version?5?$CFi@
  0041d	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00422	83 c4 08	 add	 esp, 8
$LN8@load_playe:

; 1597 : 						break;
; 1598 : 					}
; 1599 : 				}
; 1600 : 
; 1601 : 				new_player->side_log[side].warzone_log = NULL;

  00425	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  0042c	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  0042f	c7 84 01 54 03
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax+852], 0

; 1602 : 
; 1603 : 				for ( level = 0; level < NUM_PLAYER_LEVELS; level ++ )

  0043a	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _level$[ebp], 0
  00441	eb 09		 jmp	 SHORT $LN12@load_playe
$LN10@load_playe:
  00443	8b 45 f8	 mov	 eax, DWORD PTR _level$[ebp]
  00446	83 c0 01	 add	 eax, 1
  00449	89 45 f8	 mov	 DWORD PTR _level$[ebp], eax
$LN12@load_playe:
  0044c	83 7d f8 0a	 cmp	 DWORD PTR _level$[ebp], 10 ; 0000000aH
  00450	7d 3a		 jge	 SHORT $LN11@load_playe

; 1604 : 				{
; 1605 : 					if ( new_player->side_log [side].level [level] < command_line_player_start_rank )

  00452	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  00459	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  0045c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00460	8b 45 f8	 mov	 eax, DWORD PTR _level$[ebp]
  00463	8b 4c 82 4c	 mov	 ecx, DWORD PTR [edx+eax*4+76]
  00467	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?command_line_player_start_rank@@3HA ; command_line_player_start_rank
  0046d	7d 1b		 jge	 SHORT $LN32@load_playe

; 1606 : 					{
; 1607 : 						new_player->side_log [side].level [level] = command_line_player_start_rank;

  0046f	69 45 ec 4c 03
	00 00		 imul	 eax, DWORD PTR _side$13[ebp], 844
  00476	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  00479	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0047d	8b 45 f8	 mov	 eax, DWORD PTR _level$[ebp]
  00480	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_player_start_rank@@3HA ; command_line_player_start_rank
  00486	89 4c 82 4c	 mov	 DWORD PTR [edx+eax*4+76], ecx
$LN32@load_playe:

; 1608 : 					}
; 1609 : 				}

  0048a	eb b7		 jmp	 SHORT $LN10@load_playe
$LN11@load_playe:

; 1610 : 			}

  0048c	e9 f3 fc ff ff	 jmp	 $LN5@load_playe
$LN6@load_playe:

; 1611 : 
; 1612 : 			// set player log list
; 1613 : 
; 1614 : 			if (loop == 0)

  00491	83 7d e8 00	 cmp	 DWORD PTR _loop$12[ebp], 0
  00495	75 0e		 jne	 SHORT $LN33@load_playe

; 1615 : 			{
; 1616 : 				set_player_log_list (new_player);

  00497	8b 45 f4	 mov	 eax, DWORD PTR _new_player$[ebp]
  0049a	50		 push	 eax
  0049b	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list

; 1617 : 
; 1618 : 				rebuild_player_log_list ();

  004a0	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
$LN33@load_playe:

; 1619 : 			}
; 1620 : 
; 1621 : 			//
; 1622 : 			// set current player
; 1623 : 			//
; 1624 : 
; 1625 : 			if ( ( loop == current_player_index ) || ( loop == 0 ) )

  004a5	8b 45 e8	 mov	 eax, DWORD PTR _loop$12[ebp]
  004a8	3b 45 e0	 cmp	 eax, DWORD PTR _current_player_index$10[ebp]
  004ab	74 06		 je	 SHORT $LN35@load_playe
  004ad	83 7d e8 00	 cmp	 DWORD PTR _loop$12[ebp], 0
  004b1	75 0e		 jne	 SHORT $LN34@load_playe
$LN35@load_playe:

; 1626 : 			{
; 1627 : 				set_current_player_log ( new_player );

  004b3	8b 45 f4	 mov	 eax, DWORD PTR _new_player$[ebp]
  004b6	50		 push	 eax
  004b7	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1628 : 
; 1629 : 				rebuild_player_log_list ();

  004bc	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
$LN34@load_playe:

; 1630 : 			}
; 1631 : 		}

  004c1	e9 23 fc ff ff	 jmp	 $LN2@load_playe
$LN3@load_playe:

; 1632 : 
; 1633 : 		fclose (file_ptr);

  004c6	8b 45 f0	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  004c9	50		 push	 eax
  004ca	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  004d0	83 c4 04	 add	 esp, 4

; 1634 : 	}
; 1635 : 	else

  004d3	e9 b0 00 00 00	 jmp	 $LN1@load_playe
$LN24@load_playe:

; 1636 : 	{
; 1637 : 
; 1638 : 		int
; 1639 : 			side;
; 1640 : 
; 1641 : 		new_player = create_empty_player_log ();

  004d8	e8 00 00 00 00	 call	 ?create_empty_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; create_empty_player_log
  004dd	89 45 f4	 mov	 DWORD PTR _new_player$[ebp], eax

; 1642 : 
; 1643 : 		// name
; 1644 : 
; 1645 : 		new_player->name = (char *) malloc_heap_mem (sizeof (char) * (strlen (DEFAULT_LOG_NAME) + 2));

  004e0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BBNNMEOA@Razorworks@
  004e5	e8 00 00 00 00	 call	 _strlen
  004ea	83 c4 04	 add	 esp, 4
  004ed	83 c0 02	 add	 eax, 2
  004f0	50		 push	 eax
  004f1	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  004f6	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  004f9	89 01		 mov	 DWORD PTR [ecx], eax

; 1646 : 
; 1647 : 		sprintf ( new_player->name, "%s", DEFAULT_LOG_NAME );

  004fb	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BBNNMEOA@Razorworks@
  00500	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00505	8b 45 f4	 mov	 eax, DWORD PTR _new_player$[ebp]
  00508	8b 08		 mov	 ecx, DWORD PTR [eax]
  0050a	51		 push	 ecx
  0050b	e8 00 00 00 00	 call	 _sprintf
  00510	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1648 : 
; 1649 : 		for (side = 0; side < NUM_ENTITY_SIDES; side++)

  00513	c7 85 80 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _side$1[ebp], 0
  0051d	eb 0f		 jmp	 SHORT $LN15@load_playe
$LN13@load_playe:
  0051f	8b 85 80 f9 ff
	ff		 mov	 eax, DWORD PTR _side$1[ebp]
  00525	83 c0 01	 add	 eax, 1
  00528	89 85 80 f9 ff
	ff		 mov	 DWORD PTR _side$1[ebp], eax
$LN15@load_playe:
  0052e	83 bd 80 f9 ff
	ff 03		 cmp	 DWORD PTR _side$1[ebp], 3
  00535	7d 3a		 jge	 SHORT $LN14@load_playe

; 1650 : 		{
; 1651 : 
; 1652 : 			for (level = 0; level < NUM_PLAYER_LEVELS; level ++)

  00537	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _level$[ebp], 0
  0053e	eb 09		 jmp	 SHORT $LN18@load_playe
$LN16@load_playe:
  00540	8b 45 f8	 mov	 eax, DWORD PTR _level$[ebp]
  00543	83 c0 01	 add	 eax, 1
  00546	89 45 f8	 mov	 DWORD PTR _level$[ebp], eax
$LN18@load_playe:
  00549	83 7d f8 0a	 cmp	 DWORD PTR _level$[ebp], 10 ; 0000000aH
  0054d	7d 20		 jge	 SHORT $LN17@load_playe

; 1653 : 			{
; 1654 : 
; 1655 : 				new_player->side_log [side].level [level] = command_line_player_start_rank;

  0054f	69 85 80 f9 ff
	ff 4c 03 00 00	 imul	 eax, DWORD PTR _side$1[ebp], 844
  00559	8b 4d f4	 mov	 ecx, DWORD PTR _new_player$[ebp]
  0055c	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00560	8b 45 f8	 mov	 eax, DWORD PTR _level$[ebp]
  00563	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?command_line_player_start_rank@@3HA ; command_line_player_start_rank
  00569	89 4c 82 4c	 mov	 DWORD PTR [edx+eax*4+76], ecx

; 1656 : 			}

  0056d	eb d1		 jmp	 SHORT $LN16@load_playe
$LN17@load_playe:

; 1657 : 		}

  0056f	eb ae		 jmp	 SHORT $LN13@load_playe
$LN14@load_playe:

; 1658 : 
; 1659 : 		set_player_log_list (new_player);

  00571	8b 45 f4	 mov	 eax, DWORD PTR _new_player$[ebp]
  00574	50		 push	 eax
  00575	e8 00 00 00 00	 call	 ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_player_log_list

; 1660 : 
; 1661 : 		set_current_player_log (new_player);

  0057a	8b 45 f4	 mov	 eax, DWORD PTR _new_player$[ebp]
  0057d	50		 push	 eax
  0057e	e8 00 00 00 00	 call	 ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log

; 1662 : 
; 1663 : 		rebuild_player_log_list ();

  00583	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list
$LN1@load_playe:

; 1664 : 	}
; 1665 : }

  00588	5f		 pop	 edi
  00589	5e		 pop	 esi
  0058a	5b		 pop	 ebx
  0058b	8b e5		 mov	 esp, ebp
  0058d	5d		 pop	 ebp
  0058e	c3		 ret	 0
  0058f	90		 npad	 1
$LN37@load_playe:
  00590	00 00 00 00	 DD	 $LN27@load_playe
  00594	00 00 00 00	 DD	 $LN28@load_playe
  00598	00 00 00 00	 DD	 $LN29@load_playe
  0059c	00 00 00 00	 DD	 $LN30@load_playe
?load_player_list@@YGXXZ ENDP				; load_player_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\play_sc.c
;	COMDAT ?initialise_select_player_screen@@YGXXZ
_TEXT	SEGMENT
tv1791 = -116						; size = 8
tv1779 = -116						; size = 8
tv1709 = -112						; size = 4
tv1687 = -112						; size = 4
_change_array$ = -44					; size = 12
_option_bdrop$ = -32					; size = 4
_temp_obj$ = -28					; size = 4
_gap_width$ = -24					; size = 4
_y2$ = -20						; size = 4
_x2$ = -16						; size = 4
_y1$ = -12						; size = 4
_x1$ = -8						; size = 4
_i$ = -4						; size = 4
?initialise_select_player_screen@@YGXXZ PROC		; initialise_select_player_screen, COMDAT

; 168  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 74	 sub	 esp, 116		; 00000074H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 169  : 	int
; 170  : 		i;
; 171  : 
; 172  : 	float
; 173  : 		x1,
; 174  : 		y1,
; 175  : 		x2,
; 176  : 		y2,
; 177  : 		gap_width;
; 178  : 
; 179  : 	ui_object
; 180  : 		*temp_obj,
; 181  : 		*option_bdrop,
; 182  : 		*change_array[3];
; 183  : 
; 184  : 	x1 = 0.0;

  00009	0f 57 c0	 xorps	 xmm0, xmm0
  0000c	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 185  : 	y1 = 0.0;

  00011	0f 57 c0	 xorps	 xmm0, xmm0
  00014	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 186  : 	x2 = 1.0;

  00019	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00021	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 187  : 	y2 = 1.0;

  00026	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  0002e	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 188  : 
; 189  : 	// initialise side switch for player info pages
; 190  : 	player_log_current_side = ENTITY_SIDE_BLUE_FORCE;

  00033	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?player_log_current_side@@3W4ENTITY_SIDES@@A, 1 ; player_log_current_side

; 191  : 
; 192  :    select_player_screen = create_ui_object

  0003d	6a 11		 push	 17			; 00000011H
  0003f	68 00 00 00 00	 push	 OFFSET ?notify_select_player_screen@@YGXPAUUI_OBJECT@@PAX@Z ; notify_select_player_screen
  00044	6a 16		 push	 22			; 00000016H
  00046	6a 03		 push	 3
  00048	6a 2f		 push	 47			; 0000002fH
  0004a	68 f4 01 00 00	 push	 500			; 000001f4H
  0004f	6a 4d		 push	 77			; 0000004dH
  00051	6a 00		 push	 0
  00053	6a 30		 push	 48			; 00000030H
  00055	68 ff 00 00 00	 push	 255			; 000000ffH
  0005a	68 ff 00 00 00	 push	 255			; 000000ffH
  0005f	68 ff 00 00 00	 push	 255			; 000000ffH
  00064	68 ff 00 00 00	 push	 255			; 000000ffH
  00069	6a 0a		 push	 10			; 0000000aH
  0006b	6a 00		 push	 0
  0006d	68 ff 00 00 00	 push	 255			; 000000ffH
  00072	68 ff 00 00 00	 push	 255			; 000000ffH
  00077	68 ff 00 00 00	 push	 255			; 000000ffH
  0007c	6a 0b		 push	 11			; 0000000bH
  0007e	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  00083	83 ec 08	 sub	 esp, 8
  00086	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0008b	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00090	83 ec 08	 sub	 esp, 8
  00093	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00098	6a 59		 push	 89			; 00000059H
  0009a	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0009f	83 ec 08	 sub	 esp, 8
  000a2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a7	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  000ac	83 ec 08	 sub	 esp, 8
  000af	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000b4	6a 58		 push	 88			; 00000058H
  000b6	6a 06		 push	 6
  000b8	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  000bd	83 c4 78	 add	 esp, 120		; 00000078H
  000c0	a3 00 00 00 00	 mov	 DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A, eax ; select_player_screen

; 193  : 									(
; 194  : 										UI_TYPE_SCREEN,
; 195  : 										UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 196  : 										UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 197  : 										UI_ATTR_COLOUR_START (255, 255, 255, 0),
; 198  : 										UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 199  : 										UI_ATTR_OFFSET_TIME (0),
; 200  : 										UI_ATTR_TIME_LENGTH (500),
; 201  : 										UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_EITHER),
; 202  : 										UI_ATTR_FUNCTION (notify_select_player_screen),
; 203  : 										UI_ATTR_END
; 204  : 									);
; 205  : 
; 206  :    create_ui_object

  000c5	6a 11		 push	 17			; 00000011H
  000c7	6a 01		 push	 1
  000c9	6a 07		 push	 7
  000cb	6a 00		 push	 0
  000cd	6a 1b		 push	 27			; 0000001bH
  000cf	68 f4 01 00 00	 push	 500			; 000001f4H
  000d4	6a 4d		 push	 77			; 0000004dH
  000d6	6a 00		 push	 0
  000d8	6a 30		 push	 48			; 00000030H
  000da	68 ff 00 00 00	 push	 255			; 000000ffH
  000df	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A
  000e6	50		 push	 eax
  000e7	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+1
  000ee	51		 push	 ecx
  000ef	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+2
  000f6	52		 push	 edx
  000f7	6a 14		 push	 20			; 00000014H
  000f9	6a 00		 push	 0
  000fb	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A
  00102	50		 push	 eax
  00103	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+1
  0010a	51		 push	 ecx
  0010b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_screen_title_text_colour@@3UREAL_COLOUR@@A+2
  00112	52		 push	 edx
  00113	6a 15		 push	 21			; 00000015H
  00115	6a 07		 push	 7
  00117	6a 4b		 push	 75			; 0000004bH
  00119	6a 0c		 push	 12			; 0000000cH
  0011b	6a 12		 push	 18			; 00000012H
  0011d	68 00 00 00 00	 push	 OFFSET ??_C@_09BCKKEJHI@UI_PILOTS@
  00122	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00127	50		 push	 eax
  00128	6a 4a		 push	 74			; 0000004aH
  0012a	83 ec 08	 sub	 esp, 8
  0012d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa3f7cee0000000
  00135	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0013a	83 ec 08	 sub	 esp, 8
  0013d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fed9999a0000000
  00145	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0014a	6a 59		 push	 89			; 00000059H
  0014c	83 ec 08	 sub	 esp, 8
  0014f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa3f7cee0000000
  00157	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0015c	83 ec 08	 sub	 esp, 8
  0015f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f999999a0000000
  00167	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0016c	6a 58		 push	 88			; 00000058H
  0016e	6a 00		 push	 0
  00170	6a 30		 push	 48			; 00000030H
  00172	6a 00		 push	 0
  00174	6a 4d		 push	 77			; 0000004dH
  00176	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  0017b	50		 push	 eax
  0017c	6a 32		 push	 50			; 00000032H
  0017e	6a 05		 push	 5
  00180	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00185	81 c4 a8 00 00
	00		 add	 esp, 168		; 000000a8H

; 207  :             (
; 208  :                UI_TYPE_TEXT,
; 209  :                UI_ATTR_PARENT (select_player_screen),
; 210  : 					UI_ATTR_TIME_LENGTH (0),
; 211  : 					UI_ATTR_OFFSET_TIME (0),
; 212  :                UI_ATTR_VIRTUAL_POSITION (TITLE_TEXT_POSITION_X, TITLE_TEXT_POSITION_Y),
; 213  : 					UI_ATTR_VIRTUAL_SIZE (TITLE_TEXT_WIDTH, TITLE_TEXT_HEIGHT),
; 214  : 					UI_ATTR_TEXT (get_trans ("UI_PILOTS")),
; 215  : 					UI_ATTR_FONT_TYPE (UI_FONT_IMPACT_22),
; 216  : 					UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_BOTTOM),
; 217  :                UI_ATTR_FONT_COLOUR_START (ui_screen_title_text_colour.r, ui_screen_title_text_colour.g, ui_screen_title_text_colour.b, 0),
; 218  :                UI_ATTR_FONT_COLOUR_END (ui_screen_title_text_colour.r, ui_screen_title_text_colour.g, ui_screen_title_text_colour.b, 255),
; 219  : 					UI_ATTR_OFFSET_TIME (0),
; 220  : 					UI_ATTR_TIME_LENGTH (500),
; 221  : 					UI_ATTR_HIGHLIGHTABLE (FALSE),
; 222  : 					UI_ATTR_CLEAR (TRUE),
; 223  :                UI_ATTR_END
; 224  :             );
; 225  : 
; 226  : 	// setup other pages
; 227  : 
; 228  : 	define_general_log_page_objects ();

  0018b	e8 00 00 00 00	 call	 ?define_general_log_page_objects@@YGXXZ ; define_general_log_page_objects

; 229  : 
; 230  : 	define_flight_hours_page_objects();

  00190	e8 00 00 00 00	 call	 ?define_flight_hours_page_objects@@YGXXZ ; define_flight_hours_page_objects

; 231  : 
; 232  : 	define_weapon_log_page_objects ();

  00195	e8 00 00 00 00	 call	 ?define_weapon_log_page_objects@@YGXXZ ; define_weapon_log_page_objects

; 233  : 
; 234  : 	y2 = 0.038;

  0019a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1ba5e3
  001a2	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 235  : 
; 236  : 	define_medals_page_objects ();

  001a7	e8 00 00 00 00	 call	 ?define_medals_page_objects@@YGXXZ ; define_medals_page_objects

; 237  : 
; 238  : 	////////////////////////////////////////////////
; 239  : 	//
; 240  : 	// player list
; 241  : 	//
; 242  : 	////////////////////////////////////////////////
; 243  : 
; 244  : 	x1 = 0.030;

  001ac	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  001b4	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 245  : 	y1 = 0.126;

  001b9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e010625
  001c1	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 246  : 	x2 = 0.466;

  001c6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eee978d
  001ce	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 247  : 	y2 = 0.677;

  001d3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f2d4fdf
  001db	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 248  : 
; 249  :    player_list_bdrop = create_ui_object

  001e0	6a 11		 push	 17			; 00000011H
  001e2	68 f4 01 00 00	 push	 500			; 000001f4H
  001e7	6a 4d		 push	 77			; 0000004dH
  001e9	6a 00		 push	 0
  001eb	6a 30		 push	 48			; 00000030H
  001ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?list_box_graphic@@3PAUTEXTURE_GRAPHIC@@A ; list_box_graphic
  001f2	50		 push	 eax
  001f3	6a 4c		 push	 76			; 0000004cH
  001f5	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  001fa	83 ec 08	 sub	 esp, 8
  001fd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00202	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00207	83 ec 08	 sub	 esp, 8
  0020a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0020f	6a 59		 push	 89			; 00000059H
  00211	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00216	83 ec 08	 sub	 esp, 8
  00219	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0021e	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00223	83 ec 08	 sub	 esp, 8
  00226	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0022b	6a 58		 push	 88			; 00000058H
  0022d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00233	51		 push	 ecx
  00234	6a 32		 push	 50			; 00000032H
  00236	6a 01		 push	 1
  00238	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0023d	83 c4 50	 add	 esp, 80			; 00000050H
  00240	a3 00 00 00 00	 mov	 DWORD PTR ?player_list_bdrop@@3PAUUI_OBJECT@@A, eax

; 250  : 						(
; 251  : 							UI_TYPE_AREA,
; 252  : 							UI_ATTR_PARENT (select_player_screen),
; 253  : 							UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 254  : 							UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 255  : 							UI_ATTR_TEXTURE_GRAPHIC (list_box_graphic),
; 256  : 							UI_ATTR_OFFSET_TIME (0),
; 257  : 							UI_ATTR_TIME_LENGTH (500),
; 258  : 							UI_ATTR_END
; 259  : 						);
; 260  : 
; 261  : 	x1 = 0.04;

  00245	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  0024d	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 262  : 	y1 = 0.1;

  00252	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dcccccd
  0025a	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 263  : 	x2 = 0.90;

  0025f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  00267	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 264  : 	y2 = 0.86;

  0026c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5c28f6
  00274	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 265  : 
; 266  :    player_list_area = create_ui_object

  00279	6a 11		 push	 17			; 00000011H
  0027b	6a 01		 push	 1
  0027d	6a 07		 push	 7
  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_font@@3PAUUI_FONT_TYPE@@A ; current_font
  00284	f3 0f 2a 40 10	 cvtsi2ss xmm0, DWORD PTR [eax+16]
  00289	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0028d	83 ec 08	 sub	 esp, 8
  00290	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00295	83 ec 08	 sub	 esp, 8
  00298	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@408f400000000000
  002a0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002a5	83 ec 08	 sub	 esp, 8
  002a8	0f 57 c0	 xorps	 xmm0, xmm0
  002ab	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002b0	6a 5a		 push	 90			; 0000005aH
  002b2	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  002b7	83 ec 08	 sub	 esp, 8
  002ba	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002bf	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  002c4	83 ec 08	 sub	 esp, 8
  002c7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002cc	6a 59		 push	 89			; 00000059H
  002ce	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  002d3	83 ec 08	 sub	 esp, 8
  002d6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002db	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  002e0	83 ec 08	 sub	 esp, 8
  002e3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002e8	6a 58		 push	 88			; 00000058H
  002ea	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list_bdrop@@3PAUUI_OBJECT@@A
  002f0	51		 push	 ecx
  002f1	6a 32		 push	 50			; 00000032H
  002f3	6a 01		 push	 1
  002f5	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  002fa	83 c4 5c	 add	 esp, 92			; 0000005cH
  002fd	a3 00 00 00 00	 mov	 DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A, eax

; 267  : 						(
; 268  : 							UI_TYPE_AREA,
; 269  : 							UI_ATTR_PARENT (player_list_bdrop),
; 270  : 							UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 271  : 							UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 272  : 							UI_ATTR_VSLIDER (0, 1000, ui_get_font_height ()),
; 273  : 							UI_ATTR_CLEAR (TRUE),
; 274  : 							UI_ATTR_END
; 275  : 						);
; 276  : 
; 277  : 	////////////////////////////////////////////////
; 278  : 	//	Slider Graphics
; 279  : 
; 280  : 	set_frontend_slider_graphics (player_list_area);

  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 ?set_frontend_slider_graphics@@YGXPAUUI_OBJECT@@@Z ; set_frontend_slider_graphics

; 281  : 
; 282  : 	x1 = 0.046;

  0030d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d3c6a7f
  00315	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 283  : 	//y1 = 0.092;
; 284  : 	y1 = 0.0;

  0031a	0f 57 c0	 xorps	 xmm0, xmm0
  0031d	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 285  : 	x2 = 0.862;

  00322	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f5cac08
  0032a	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 286  : 	y2 = 0.840;

  0032f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f570a3d
  00337	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 287  : 
; 288  :    player_list = create_ui_object

  0033c	6a 11		 push	 17			; 00000011H
  0033e	68 00 00 00 00	 push	 OFFSET ?player_list_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_list_function
  00343	6a 16		 push	 22			; 00000016H
  00345	6a 01		 push	 1
  00347	6a 07		 push	 7
  00349	6a 05		 push	 5
  0034b	6a 12		 push	 18			; 00000012H
  0034d	83 ec 08	 sub	 esp, 8
  00350	0f 57 c0	 xorps	 xmm0, xmm0
  00353	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00358	6a 27		 push	 39			; 00000027H
  0035a	6a 01		 push	 1
  0035c	6a 1b		 push	 27			; 0000001bH
  0035e	68 ff 00 00 00	 push	 255			; 000000ffH
  00363	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A
  0036a	50		 push	 eax
  0036b	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00372	51		 push	 ecx
  00373	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0037a	52		 push	 edx
  0037b	6a 22		 push	 34			; 00000022H
  0037d	6a 00		 push	 0
  0037f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A
  00386	50		 push	 eax
  00387	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0038e	51		 push	 ecx
  0038f	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_list_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00396	52		 push	 edx
  00397	6a 23		 push	 35			; 00000023H
  00399	68 ff 00 00 00	 push	 255			; 000000ffH
  0039e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A
  003a5	50		 push	 eax
  003a6	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A+1
  003ad	51		 push	 ecx
  003ae	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A+2
  003b5	52		 push	 edx
  003b6	6a 14		 push	 20			; 00000014H
  003b8	6a 00		 push	 0
  003ba	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A
  003c1	50		 push	 eax
  003c2	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A+1
  003c9	51		 push	 ecx
  003ca	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_list_text_default_colour@@3UREAL_COLOUR@@A+2
  003d1	52		 push	 edx
  003d2	6a 15		 push	 21			; 00000015H
  003d4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  003d9	83 ec 08	 sub	 esp, 8
  003dc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003e1	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  003e6	83 ec 08	 sub	 esp, 8
  003e9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003ee	6a 59		 push	 89			; 00000059H
  003f0	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  003f5	83 ec 08	 sub	 esp, 8
  003f8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003fd	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00402	83 ec 08	 sub	 esp, 8
  00405	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0040a	6a 58		 push	 88			; 00000058H
  0040c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A
  00411	50		 push	 eax
  00412	6a 32		 push	 50			; 00000032H
  00414	6a 0d		 push	 13			; 0000000dH
  00416	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0041b	81 c4 b4 00 00
	00		 add	 esp, 180		; 000000b4H
  00421	a3 00 00 00 00	 mov	 DWORD PTR ?player_list@@3PAUUI_OBJECT@@A, eax

; 289  : 						(
; 290  : 							UI_TYPE_LIST_BOX,
; 291  : 							UI_ATTR_PARENT (player_list_area),
; 292  : 							UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 293  : 							UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 294  : 		            	UI_ATTR_FONT_COLOUR_START (ui_list_text_default_colour.r, ui_list_text_default_colour.g, ui_list_text_default_colour.b, 0),
; 295  :    		         	UI_ATTR_FONT_COLOUR_END (ui_list_text_default_colour.r, ui_list_text_default_colour.g, ui_list_text_default_colour.b, 255),
; 296  :       		      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_list_text_hilite_colour.r, ui_list_text_hilite_colour.g, ui_list_text_hilite_colour.b, 0),
; 297  :          		   	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_list_text_hilite_colour.r, ui_list_text_hilite_colour.g, ui_list_text_hilite_colour.b, 255),
; 298  : 							UI_ATTR_HIGHLIGHTABLE (TRUE),
; 299  : 							UI_ATTR_LIST_BOX_Y_SPACE (0),
; 300  : 							UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_18),
; 301  : 							UI_ATTR_CLEAR (TRUE),
; 302  : 							UI_ATTR_FUNCTION (player_list_function),
; 303  : 							UI_ATTR_END
; 304  : 						);
; 305  : 
; 306  : 	////////////////////////////////////////////////
; 307  : 	// Delete Player Button
; 308  : 
; 309  : 	gap_width = 0.04;

  00426	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d23d70a
  0042e	f3 0f 11 45 e8	 movss	 DWORD PTR _gap_width$[ebp], xmm0

; 310  : 
; 311  : 	x1 = 0.721;

  00433	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f389375
  0043b	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 312  : 	y1 = 0.029;

  00440	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ced9168
  00448	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 313  : 	x2 = 0.178;

  0044d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e3645a2
  00455	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 314  : 	y2 = 0.038;

  0045a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1ba5e3
  00462	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 315  : 
; 316  : 	i = 0;

  00467	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 317  : 
; 318  :    change_array[i] = create_ui_object

  0046e	6a 11		 push	 17			; 00000011H
  00470	68 00 00 00 00	 push	 OFFSET ?player_delete_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_delete_function
  00475	6a 16		 push	 22			; 00000016H
  00477	6a 03		 push	 3
  00479	6a 12		 push	 18			; 00000012H
  0047b	6a 01		 push	 1
  0047d	6a 07		 push	 7
  0047f	68 00 00 00 00	 push	 OFFSET ??_C@_06FKDAMKFP@DELETE@
  00484	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00489	50		 push	 eax
  0048a	6a 4a		 push	 74			; 0000004aH
  0048c	6a 01		 push	 1
  0048e	6a 1b		 push	 27			; 0000001bH
  00490	68 ff 00 00 00	 push	 255			; 000000ffH
  00495	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0049c	50		 push	 eax
  0049d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  004a4	51		 push	 ecx
  004a5	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  004ac	52		 push	 edx
  004ad	6a 22		 push	 34			; 00000022H
  004af	6a 00		 push	 0
  004b1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  004b8	50		 push	 eax
  004b9	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  004c0	51		 push	 ecx
  004c1	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  004c8	52		 push	 edx
  004c9	6a 23		 push	 35			; 00000023H
  004cb	68 ff 00 00 00	 push	 255			; 000000ffH
  004d0	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  004d7	50		 push	 eax
  004d8	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  004df	51		 push	 ecx
  004e0	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  004e7	52		 push	 edx
  004e8	6a 14		 push	 20			; 00000014H
  004ea	6a 00		 push	 0
  004ec	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  004f3	50		 push	 eax
  004f4	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  004fb	51		 push	 ecx
  004fc	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00503	52		 push	 edx
  00504	6a 15		 push	 21			; 00000015H
  00506	6a 02		 push	 2
  00508	6a 4b		 push	 75			; 0000004bH
  0050a	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  0050f	83 ec 08	 sub	 esp, 8
  00512	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00517	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  0051c	83 ec 08	 sub	 esp, 8
  0051f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00524	6a 59		 push	 89			; 00000059H
  00526	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0052b	83 ec 08	 sub	 esp, 8
  0052e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00533	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00538	83 ec 08	 sub	 esp, 8
  0053b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00540	6a 58		 push	 88			; 00000058H
  00542	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_bdrop@@3PAUUI_OBJECT@@A
  00547	50		 push	 eax
  00548	6a 32		 push	 50			; 00000032H
  0054a	6a 02		 push	 2
  0054c	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00551	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  00557	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0055a	89 44 8d d4	 mov	 DWORD PTR _change_array$[ebp+ecx*4], eax

; 319  : 	(
; 320  : 		UI_TYPE_BUTTON,
; 321  : 		UI_ATTR_PARENT (player_list_bdrop),
; 322  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 323  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 324  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 325  :    	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 326  :     	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 327  :      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 328  :     	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 329  : 		UI_ATTR_HIGHLIGHTABLE (TRUE),
; 330  : 		UI_ATTR_TEXT (get_trans ("DELETE")),
; 331  : 		UI_ATTR_CLEAR ( TRUE ),
; 332  : 		UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_16),
; 333  : 		UI_ATTR_FUNCTION (player_delete_function),
; 334  : 		UI_ATTR_END
; 335  : 	);
; 336  : 
; 337  : 	preprocess_translation_object_size (change_array [i], NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  0055e	6a 02		 push	 2
  00560	6a 00		 push	 0
  00562	6a 00		 push	 0
  00564	6a 00		 push	 0
  00566	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00569	8b 4c 85 d4	 mov	 ecx, DWORD PTR _change_array$[ebp+eax*4]
  0056d	51		 push	 ecx
  0056e	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 338  : 
; 339  : 	///////////////////////////////////////////////
; 340  : 	// Rename Player Button
; 341  : 
; 342  : 	x2 = 0.197;

  00573	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e49ba5e
  0057b	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 343  : 	y2 = 0.038;

  00580	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1ba5e3
  00588	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 344  : 
; 345  : 	x1 = get_ui_object_virtual_x (change_array[0]) - gap_width - x2 ;

  0058d	b8 04 00 00 00	 mov	 eax, 4
  00592	6b c8 00	 imul	 ecx, eax, 0
  00595	8b 54 0d d4	 mov	 edx, DWORD PTR _change_array$[ebp+ecx]
  00599	52		 push	 edx
  0059a	b8 04 00 00 00	 mov	 eax, 4
  0059f	6b c8 00	 imul	 ecx, eax, 0
  005a2	8b 54 0d d4	 mov	 edx, DWORD PTR _change_array$[ebp+ecx]
  005a6	8b 02		 mov	 eax, DWORD PTR [edx]
  005a8	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4]
  005af	ff d1		 call	 ecx
  005b1	d9 5d 90	 fstp	 DWORD PTR tv1687[ebp]
  005b4	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv1687[ebp]
  005b9	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _gap_width$[ebp]
  005be	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _x2$[ebp]
  005c3	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 346  : 
; 347  : 	y1 = 0.029;

  005c8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ced9168
  005d0	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 348  : 
; 349  : 	i++;

  005d5	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  005d8	83 c0 01	 add	 eax, 1
  005db	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 350  : 
; 351  :    change_array[i] = create_ui_object

  005de	6a 11		 push	 17			; 00000011H
  005e0	6a 03		 push	 3
  005e2	6a 12		 push	 18			; 00000012H
  005e4	6a 01		 push	 1
  005e6	6a 07		 push	 7
  005e8	68 00 00 00 00	 push	 OFFSET ?player_rename_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_rename_function
  005ed	6a 16		 push	 22			; 00000016H
  005ef	68 00 00 00 00	 push	 OFFSET ??_C@_06LIGLDPGD@RENAME@
  005f4	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  005f9	50		 push	 eax
  005fa	6a 4a		 push	 74			; 0000004aH
  005fc	6a 01		 push	 1
  005fe	6a 1b		 push	 27			; 0000001bH
  00600	68 ff 00 00 00	 push	 255			; 000000ffH
  00605	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0060c	50		 push	 eax
  0060d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00614	51		 push	 ecx
  00615	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0061c	52		 push	 edx
  0061d	6a 22		 push	 34			; 00000022H
  0061f	6a 00		 push	 0
  00621	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00628	50		 push	 eax
  00629	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00630	51		 push	 ecx
  00631	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00638	52		 push	 edx
  00639	6a 23		 push	 35			; 00000023H
  0063b	68 ff 00 00 00	 push	 255			; 000000ffH
  00640	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00647	50		 push	 eax
  00648	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0064f	51		 push	 ecx
  00650	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00657	52		 push	 edx
  00658	6a 14		 push	 20			; 00000014H
  0065a	6a 00		 push	 0
  0065c	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00663	50		 push	 eax
  00664	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0066b	51		 push	 ecx
  0066c	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00673	52		 push	 edx
  00674	6a 15		 push	 21			; 00000015H
  00676	6a 02		 push	 2
  00678	6a 4b		 push	 75			; 0000004bH
  0067a	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  0067f	83 ec 08	 sub	 esp, 8
  00682	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00687	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  0068c	83 ec 08	 sub	 esp, 8
  0068f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00694	6a 59		 push	 89			; 00000059H
  00696	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0069b	83 ec 08	 sub	 esp, 8
  0069e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006a3	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  006a8	83 ec 08	 sub	 esp, 8
  006ab	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006b0	6a 58		 push	 88			; 00000058H
  006b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_bdrop@@3PAUUI_OBJECT@@A
  006b7	50		 push	 eax
  006b8	6a 32		 push	 50			; 00000032H
  006ba	6a 02		 push	 2
  006bc	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  006c1	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  006c7	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  006ca	89 44 8d d4	 mov	 DWORD PTR _change_array$[ebp+ecx*4], eax

; 352  : 	(
; 353  : 		UI_TYPE_BUTTON,
; 354  : 		UI_ATTR_PARENT (player_list_bdrop),
; 355  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 356  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 357  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 358  :      	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 359  :     	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 360  :      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 361  :     	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 362  : 		UI_ATTR_HIGHLIGHTABLE (TRUE),
; 363  : 		UI_ATTR_TEXT (get_trans ("RENAME")),
; 364  : 		UI_ATTR_FUNCTION ( player_rename_function ),
; 365  : 		UI_ATTR_CLEAR ( TRUE ),
; 366  : 		UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_16),
; 367  : 		UI_ATTR_END
; 368  : 	);
; 369  : 
; 370  : 	preprocess_translation_object_size (change_array [i], NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  006ce	6a 02		 push	 2
  006d0	6a 00		 push	 0
  006d2	6a 00		 push	 0
  006d4	6a 00		 push	 0
  006d6	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  006d9	8b 4c 85 d4	 mov	 ecx, DWORD PTR _change_array$[ebp+eax*4]
  006dd	51		 push	 ecx
  006de	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 371  : 
; 372  : 	////////////////////////////////////////////////
; 373  : 	// Add Player Button
; 374  : 
; 375  : 	x2 = 0.106;

  006e3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3dd91687
  006eb	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 376  : 	y2 = 0.038;

  006f0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1ba5e3
  006f8	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 377  : 
; 378  : 	x1 = get_ui_object_virtual_x (change_array[1]) - gap_width - x2 ;

  006fd	b8 04 00 00 00	 mov	 eax, 4
  00702	c1 e0 00	 shl	 eax, 0
  00705	8b 4c 05 d4	 mov	 ecx, DWORD PTR _change_array$[ebp+eax]
  00709	51		 push	 ecx
  0070a	ba 04 00 00 00	 mov	 edx, 4
  0070f	c1 e2 00	 shl	 edx, 0
  00712	8b 44 15 d4	 mov	 eax, DWORD PTR _change_array$[ebp+edx]
  00716	8b 08		 mov	 ecx, DWORD PTR [eax]
  00718	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA[ecx*4]
  0071f	ff d2		 call	 edx
  00721	d9 5d 90	 fstp	 DWORD PTR tv1709[ebp]
  00724	f3 0f 10 45 90	 movss	 xmm0, DWORD PTR tv1709[ebp]
  00729	f3 0f 5c 45 e8	 subss	 xmm0, DWORD PTR _gap_width$[ebp]
  0072e	f3 0f 5c 45 f0	 subss	 xmm0, DWORD PTR _x2$[ebp]
  00733	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 379  : 
; 380  : //	x1 = 0.379;
; 381  : 	y1 = 0.029;

  00738	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ced9168
  00740	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 382  : 
; 383  : 	i++;

  00745	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00748	83 c0 01	 add	 eax, 1
  0074b	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax

; 384  : 
; 385  :    change_array[i] = create_ui_object

  0074e	6a 11		 push	 17			; 00000011H
  00750	68 00 00 00 00	 push	 OFFSET ?player_add_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_add_function
  00755	6a 16		 push	 22			; 00000016H
  00757	6a 03		 push	 3
  00759	6a 12		 push	 18			; 00000012H
  0075b	6a 01		 push	 1
  0075d	6a 07		 push	 7
  0075f	68 00 00 00 00	 push	 OFFSET ??_C@_03BOJFLAKG@ADD@
  00764	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00769	50		 push	 eax
  0076a	6a 4a		 push	 74			; 0000004aH
  0076c	6a 01		 push	 1
  0076e	6a 1b		 push	 27			; 0000001bH
  00770	68 ff 00 00 00	 push	 255			; 000000ffH
  00775	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0077c	50		 push	 eax
  0077d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00784	51		 push	 ecx
  00785	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0078c	52		 push	 edx
  0078d	6a 22		 push	 34			; 00000022H
  0078f	6a 00		 push	 0
  00791	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00798	50		 push	 eax
  00799	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  007a0	51		 push	 ecx
  007a1	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  007a8	52		 push	 edx
  007a9	6a 23		 push	 35			; 00000023H
  007ab	68 ff 00 00 00	 push	 255			; 000000ffH
  007b0	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  007b7	50		 push	 eax
  007b8	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  007bf	51		 push	 ecx
  007c0	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  007c7	52		 push	 edx
  007c8	6a 14		 push	 20			; 00000014H
  007ca	6a 00		 push	 0
  007cc	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  007d3	50		 push	 eax
  007d4	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  007db	51		 push	 ecx
  007dc	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  007e3	52		 push	 edx
  007e4	6a 15		 push	 21			; 00000015H
  007e6	6a 02		 push	 2
  007e8	6a 4b		 push	 75			; 0000004bH
  007ea	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  007ef	83 ec 08	 sub	 esp, 8
  007f2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  007f7	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  007fc	83 ec 08	 sub	 esp, 8
  007ff	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00804	6a 59		 push	 89			; 00000059H
  00806	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0080b	83 ec 08	 sub	 esp, 8
  0080e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00813	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00818	83 ec 08	 sub	 esp, 8
  0081b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00820	6a 58		 push	 88			; 00000058H
  00822	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_bdrop@@3PAUUI_OBJECT@@A
  00827	50		 push	 eax
  00828	6a 32		 push	 50			; 00000032H
  0082a	6a 02		 push	 2
  0082c	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00831	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  00837	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0083a	89 44 8d d4	 mov	 DWORD PTR _change_array$[ebp+ecx*4], eax

; 386  : 	(
; 387  : 		UI_TYPE_BUTTON,
; 388  : 		UI_ATTR_PARENT (player_list_bdrop),
; 389  : 		UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 390  : 		UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 391  : 		UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 392  :      	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 393  :      	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 394  :      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 395  :      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 396  : 		UI_ATTR_HIGHLIGHTABLE (TRUE),
; 397  : 		UI_ATTR_TEXT (get_trans ("ADD")),
; 398  : 		UI_ATTR_CLEAR ( TRUE ),
; 399  : 		UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_16),
; 400  : 		UI_ATTR_FUNCTION (player_add_function),
; 401  : 		UI_ATTR_END
; 402  : 	);
; 403  : 
; 404  : 	preprocess_translation_object_size (change_array [i], NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  0083e	6a 02		 push	 2
  00840	6a 00		 push	 0
  00842	6a 00		 push	 0
  00844	6a 00		 push	 0
  00846	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00849	8b 4c 85 d4	 mov	 ecx, DWORD PTR _change_array$[ebp+eax*4]
  0084d	51		 push	 ecx
  0084e	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 405  : 
; 406  : 
; 407  : 	////////////////////////////////////////////////
; 408  : 	// Medals Selection Button
; 409  : 
; 410  : 	x1 = 0.82;

  00853	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f51eb85
  0085b	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 411  : 	y1 = 0.112;

  00860	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3de56042
  00868	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 412  : 	x2 = 0.165;

  0086d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e28f5c3
  00875	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 413  : 	y2 = 0.039;

  0087a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1fbe77
  00882	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 414  : 
; 415  : 	option_bdrop = create_ui_object

  00887	6a 11		 push	 17			; 00000011H
  00889	68 f4 01 00 00	 push	 500			; 000001f4H
  0088e	6a 4d		 push	 77			; 0000004dH
  00890	6a 00		 push	 0
  00892	6a 30		 push	 48			; 00000030H
  00894	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  00899	50		 push	 eax
  0089a	6a 4c		 push	 76			; 0000004cH
  0089c	68 ff 00 00 00	 push	 255			; 000000ffH
  008a1	68 ff 00 00 00	 push	 255			; 000000ffH
  008a6	68 ff 00 00 00	 push	 255			; 000000ffH
  008ab	68 ff 00 00 00	 push	 255			; 000000ffH
  008b0	6a 0a		 push	 10			; 0000000aH
  008b2	68 ff 00 00 00	 push	 255			; 000000ffH
  008b7	68 ff 00 00 00	 push	 255			; 000000ffH
  008bc	68 ff 00 00 00	 push	 255			; 000000ffH
  008c1	68 ff 00 00 00	 push	 255			; 000000ffH
  008c6	6a 0b		 push	 11			; 0000000bH
  008c8	83 ec 08	 sub	 esp, 8
  008cb	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  008d3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  008d8	83 ec 08	 sub	 esp, 8
  008db	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  008e3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  008e8	6a 59		 push	 89			; 00000059H
  008ea	83 ec 08	 sub	 esp, 8
  008ed	0f 57 c0	 xorps	 xmm0, xmm0
  008f0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  008f5	83 ec 08	 sub	 esp, 8
  008f8	0f 57 c0	 xorps	 xmm0, xmm0
  008fb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00900	6a 58		 push	 88			; 00000058H
  00902	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00908	51		 push	 ecx
  00909	6a 32		 push	 50			; 00000032H
  0090b	6a 01		 push	 1
  0090d	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00912	83 c4 78	 add	 esp, 120		; 00000078H
  00915	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 416  : 	(
; 417  : 		UI_TYPE_AREA,
; 418  : 		UI_ATTR_PARENT (select_player_screen),
; 419  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 420  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 421  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 422  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 423  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 424  : 		UI_ATTR_OFFSET_TIME (0),
; 425  : 		UI_ATTR_TIME_LENGTH (500),
; 426  : 		UI_ATTR_END
; 427  : 	);
; 428  : 
; 429  : 	player_medals_selection_button = create_ui_object

  00918	6a 11		 push	 17			; 00000011H
  0091a	6a 01		 push	 1
  0091c	6a 07		 push	 7
  0091e	6a 01		 push	 1
  00920	6a 1b		 push	 27			; 0000001bH
  00922	68 ff 00 00 00	 push	 255			; 000000ffH
  00927	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0092e	50		 push	 eax
  0092f	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00936	51		 push	 ecx
  00937	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0093e	52		 push	 edx
  0093f	6a 22		 push	 34			; 00000022H
  00941	6a 00		 push	 0
  00943	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0094a	50		 push	 eax
  0094b	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00952	51		 push	 ecx
  00953	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0095a	52		 push	 edx
  0095b	6a 23		 push	 35			; 00000023H
  0095d	68 ff 00 00 00	 push	 255			; 000000ffH
  00962	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00969	50		 push	 eax
  0096a	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00971	51		 push	 ecx
  00972	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00979	52		 push	 edx
  0097a	6a 14		 push	 20			; 00000014H
  0097c	6a 00		 push	 0
  0097e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00985	50		 push	 eax
  00986	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0098d	51		 push	 ecx
  0098e	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00995	52		 push	 edx
  00996	6a 15		 push	 21			; 00000015H
  00998	68 00 00 00 00	 push	 OFFSET ?notify_medals_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_medals_button
  0099d	6a 16		 push	 22			; 00000016H
  0099f	68 00 00 00 00	 push	 OFFSET ??_C@_06LFIBPDEL@Medals@
  009a4	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  009a9	50		 push	 eax
  009aa	6a 4a		 push	 74			; 0000004aH
  009ac	6a 09		 push	 9
  009ae	6a 12		 push	 18			; 00000012H
  009b0	6a 02		 push	 2
  009b2	6a 4b		 push	 75			; 0000004bH
  009b4	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  009b9	83 ec 08	 sub	 esp, 8
  009bc	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009c1	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  009c6	83 ec 08	 sub	 esp, 8
  009c9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009ce	6a 59		 push	 89			; 00000059H
  009d0	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  009d5	83 ec 08	 sub	 esp, 8
  009d8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009dd	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  009e2	83 ec 08	 sub	 esp, 8
  009e5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  009ea	6a 58		 push	 88			; 00000058H
  009ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  009f1	50		 push	 eax
  009f2	6a 32		 push	 50			; 00000032H
  009f4	6a 02		 push	 2
  009f6	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  009fb	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  00a01	a3 00 00 00 00	 mov	 DWORD PTR ?player_medals_selection_button@@3PAUUI_OBJECT@@A, eax

; 430  : 												(
; 431  : 													UI_TYPE_BUTTON,
; 432  : 													UI_ATTR_PARENT (select_player_screen),
; 433  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 434  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 435  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 436  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 437  : 													UI_ATTR_TEXT (get_trans ("Medals")),
; 438  : 													UI_ATTR_FUNCTION (notify_medals_button),
; 439  :   									          	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 440  :       								      	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 441  :       								      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 442  :             									UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 443  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 444  : 													UI_ATTR_CLEAR ( TRUE ),
; 445  : 													UI_ATTR_END
; 446  : 												);
; 447  : 
; 448  : 	preprocess_translation_object_size (player_medals_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  00a06	6a 02		 push	 2
  00a08	6a 00		 push	 0
  00a0a	6a 00		 push	 0
  00a0c	6a 00		 push	 0
  00a0e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_medals_selection_button@@3PAUUI_OBJECT@@A
  00a13	50		 push	 eax
  00a14	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 449  : 
; 450  : 	set_text_option_backdrop_object (option_bdrop, player_medals_selection_button);

  00a19	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_medals_selection_button@@3PAUUI_OBJECT@@A
  00a1e	50		 push	 eax
  00a1f	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  00a22	51		 push	 ecx
  00a23	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 451  : 
; 452  : 	////////////////////////////////////////////////
; 453  : 	// Red Selection Button
; 454  : 
; 455  : 	x1 = 0.628;

  00a28	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f20c49c
  00a30	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 456  : 	y1 = 0.172;

  00a35	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e3020c5
  00a3d	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 457  : 	x2 = 0.238;

  00a42	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e73b646
  00a4a	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 458  : 	y2 = 0.039;

  00a4f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1fbe77
  00a57	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 459  : 
; 460  : 	option_bdrop = create_ui_object

  00a5c	6a 11		 push	 17			; 00000011H
  00a5e	68 f4 01 00 00	 push	 500			; 000001f4H
  00a63	6a 4d		 push	 77			; 0000004dH
  00a65	6a 00		 push	 0
  00a67	6a 30		 push	 48			; 00000030H
  00a69	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  00a6e	50		 push	 eax
  00a6f	6a 4c		 push	 76			; 0000004cH
  00a71	68 ff 00 00 00	 push	 255			; 000000ffH
  00a76	68 ff 00 00 00	 push	 255			; 000000ffH
  00a7b	68 ff 00 00 00	 push	 255			; 000000ffH
  00a80	68 ff 00 00 00	 push	 255			; 000000ffH
  00a85	6a 0a		 push	 10			; 0000000aH
  00a87	68 ff 00 00 00	 push	 255			; 000000ffH
  00a8c	68 ff 00 00 00	 push	 255			; 000000ffH
  00a91	68 ff 00 00 00	 push	 255			; 000000ffH
  00a96	68 ff 00 00 00	 push	 255			; 000000ffH
  00a9b	6a 0b		 push	 11			; 0000000bH
  00a9d	83 ec 08	 sub	 esp, 8
  00aa0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  00aa8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00aad	83 ec 08	 sub	 esp, 8
  00ab0	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  00ab8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00abd	6a 59		 push	 89			; 00000059H
  00abf	83 ec 08	 sub	 esp, 8
  00ac2	0f 57 c0	 xorps	 xmm0, xmm0
  00ac5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00aca	83 ec 08	 sub	 esp, 8
  00acd	0f 57 c0	 xorps	 xmm0, xmm0
  00ad0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ad5	6a 58		 push	 88			; 00000058H
  00ad7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00add	51		 push	 ecx
  00ade	6a 32		 push	 50			; 00000032H
  00ae0	6a 01		 push	 1
  00ae2	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00ae7	83 c4 78	 add	 esp, 120		; 00000078H
  00aea	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 461  : 	(
; 462  : 		UI_TYPE_AREA,
; 463  : 		UI_ATTR_PARENT (select_player_screen),
; 464  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 465  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 466  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 467  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 468  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 469  : 		UI_ATTR_OFFSET_TIME (0),
; 470  : 		UI_ATTR_TIME_LENGTH (500),
; 471  : 		UI_ATTR_END
; 472  : 	);
; 473  : 
; 474  : 	player_red_side_selection_button = create_ui_object

  00aed	6a 11		 push	 17			; 00000011H
  00aef	6a 01		 push	 1
  00af1	6a 07		 push	 7
  00af3	6a 01		 push	 1
  00af5	6a 1b		 push	 27			; 0000001bH
  00af7	6a 01		 push	 1
  00af9	6a 10		 push	 16			; 00000010H
  00afb	68 ff 00 00 00	 push	 255			; 000000ffH
  00b00	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00b07	50		 push	 eax
  00b08	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00b0f	51		 push	 ecx
  00b10	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00b17	52		 push	 edx
  00b18	6a 22		 push	 34			; 00000022H
  00b1a	6a 00		 push	 0
  00b1c	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00b23	50		 push	 eax
  00b24	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00b2b	51		 push	 ecx
  00b2c	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00b33	52		 push	 edx
  00b34	6a 23		 push	 35			; 00000023H
  00b36	68 ff 00 00 00	 push	 255			; 000000ffH
  00b3b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00b42	50		 push	 eax
  00b43	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00b4a	51		 push	 ecx
  00b4b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00b52	52		 push	 edx
  00b53	6a 14		 push	 20			; 00000014H
  00b55	6a 00		 push	 0
  00b57	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00b5e	50		 push	 eax
  00b5f	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00b66	51		 push	 ecx
  00b67	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00b6e	52		 push	 edx
  00b6f	6a 15		 push	 21			; 00000015H
  00b71	6a 02		 push	 2
  00b73	6a 29		 push	 41			; 00000029H
  00b75	68 00 00 00 00	 push	 OFFSET ?player_select_side_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_select_side_function
  00b7a	6a 16		 push	 22			; 00000016H
  00b7c	68 00 00 00 00	 push	 OFFSET ??_C@_09HNDCBJKL@Red?5Force@
  00b81	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00b86	50		 push	 eax
  00b87	6a 4a		 push	 74			; 0000004aH
  00b89	6a 09		 push	 9
  00b8b	6a 12		 push	 18			; 00000012H
  00b8d	6a 02		 push	 2
  00b8f	6a 4b		 push	 75			; 0000004bH
  00b91	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  00b96	83 ec 08	 sub	 esp, 8
  00b99	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00b9e	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00ba3	83 ec 08	 sub	 esp, 8
  00ba6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00bab	6a 59		 push	 89			; 00000059H
  00bad	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00bb2	83 ec 08	 sub	 esp, 8
  00bb5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00bba	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00bbf	83 ec 08	 sub	 esp, 8
  00bc2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00bc7	6a 58		 push	 88			; 00000058H
  00bc9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00bce	50		 push	 eax
  00bcf	6a 32		 push	 50			; 00000032H
  00bd1	6a 02		 push	 2
  00bd3	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00bd8	81 c4 c8 00 00
	00		 add	 esp, 200		; 000000c8H
  00bde	a3 00 00 00 00	 mov	 DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A, eax

; 475  : 												(
; 476  : 													UI_TYPE_BUTTON,
; 477  : 													UI_ATTR_PARENT (select_player_screen),
; 478  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 479  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 480  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 481  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 482  : 													UI_ATTR_TEXT (get_trans ("Red Force")),
; 483  : 													UI_ATTR_FUNCTION (player_select_side_function),
; 484  : 													UI_ATTR_ITEM_NUMBER ( ENTITY_SIDE_RED_FORCE ),
; 485  :   									          	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 486  :       								      	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 487  :       								      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 488  :             									UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 489  : 													UI_ATTR_DRAWABLE (TRUE),
; 490  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 491  : 													UI_ATTR_CLEAR ( TRUE ),
; 492  : 													UI_ATTR_END
; 493  : 												);
; 494  : 
; 495  : 	preprocess_translation_object_size (player_red_side_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  00be3	6a 02		 push	 2
  00be5	6a 00		 push	 0
  00be7	6a 00		 push	 0
  00be9	6a 00		 push	 0
  00beb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00bf0	50		 push	 eax
  00bf1	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 496  : 
; 497  : 	set_text_option_backdrop_object (option_bdrop, player_red_side_selection_button);

  00bf6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00bfb	50		 push	 eax
  00bfc	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  00bff	51		 push	 ecx
  00c00	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 498  : 
; 499  : 	if (get_global_current_language () == LANGUAGE_GERMAN)

  00c05	83 3d 04 00 00
	00 02		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+4, 2
  00c0c	0f 85 87 00 00
	00		 jne	 $LN2@initialise

; 500  : 	{
; 501  : 		set_ui_object_x_end (option_bdrop, get_ui_object_x_end (option_bdrop) + 0.047);

  00c12	8b 45 e0	 mov	 eax, DWORD PTR _option_bdrop$[ebp]
  00c15	50		 push	 eax
  00c16	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  00c19	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c1b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_end@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00c22	ff d0		 call	 eax
  00c24	dd 5d 8c	 fstp	 QWORD PTR tv1779[ebp]
  00c27	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv1779[ebp]
  00c2c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa810624dd2f1aa
  00c34	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c38	51		 push	 ecx
  00c39	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c3e	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  00c41	51		 push	 ecx
  00c42	8b 55 e0	 mov	 edx, DWORD PTR _option_bdrop$[ebp]
  00c45	8b 02		 mov	 eax, DWORD PTR [edx]
  00c47	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4]
  00c4e	ff d1		 call	 ecx

; 502  : 
; 503  : 		set_ui_object_x_end (player_red_side_selection_button, get_ui_object_x_end (player_red_side_selection_button) + 0.047);

  00c50	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00c55	50		 push	 eax
  00c56	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00c5c	8b 11		 mov	 edx, DWORD PTR [ecx]
  00c5e	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_end@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00c65	ff d0		 call	 eax
  00c67	dd 5d 8c	 fstp	 QWORD PTR tv1791[ebp]
  00c6a	f2 0f 10 45 8c	 movsd	 xmm0, QWORD PTR tv1791[ebp]
  00c6f	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fa810624dd2f1aa
  00c77	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00c7b	51		 push	 ecx
  00c7c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00c81	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00c87	51		 push	 ecx
  00c88	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?player_red_side_selection_button@@3PAUUI_OBJECT@@A
  00c8e	8b 02		 mov	 eax, DWORD PTR [edx]
  00c90	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_x_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4]
  00c97	ff d1		 call	 ecx
$LN2@initialise:

; 504  : 	}
; 505  : 
; 506  : 	////////////////////////////////////////////////
; 507  : 	// Blue Side Selection Button
; 508  : 
; 509  : 	x1 = 0.739;

  00c99	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f3d2f1b
  00ca1	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 510  : 	y1 = 0.223;

  00ca6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e645a1d
  00cae	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 511  : 	x2 = 0.247;

  00cb3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e7ced91
  00cbb	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 512  : 	y2 = 0.039;

  00cc0	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d1fbe77
  00cc8	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 513  : 
; 514  : 	option_bdrop = create_ui_object

  00ccd	6a 11		 push	 17			; 00000011H
  00ccf	68 f4 01 00 00	 push	 500			; 000001f4H
  00cd4	6a 4d		 push	 77			; 0000004dH
  00cd6	6a 00		 push	 0
  00cd8	6a 30		 push	 48			; 00000030H
  00cda	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  00cdf	50		 push	 eax
  00ce0	6a 4c		 push	 76			; 0000004cH
  00ce2	68 ff 00 00 00	 push	 255			; 000000ffH
  00ce7	68 ff 00 00 00	 push	 255			; 000000ffH
  00cec	68 ff 00 00 00	 push	 255			; 000000ffH
  00cf1	68 ff 00 00 00	 push	 255			; 000000ffH
  00cf6	6a 0a		 push	 10			; 0000000aH
  00cf8	68 ff 00 00 00	 push	 255			; 000000ffH
  00cfd	68 ff 00 00 00	 push	 255			; 000000ffH
  00d02	68 ff 00 00 00	 push	 255			; 000000ffH
  00d07	68 ff 00 00 00	 push	 255			; 000000ffH
  00d0c	6a 0b		 push	 11			; 0000000bH
  00d0e	83 ec 08	 sub	 esp, 8
  00d11	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  00d19	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d1e	83 ec 08	 sub	 esp, 8
  00d21	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  00d29	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d2e	6a 59		 push	 89			; 00000059H
  00d30	83 ec 08	 sub	 esp, 8
  00d33	0f 57 c0	 xorps	 xmm0, xmm0
  00d36	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d3b	83 ec 08	 sub	 esp, 8
  00d3e	0f 57 c0	 xorps	 xmm0, xmm0
  00d41	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00d46	6a 58		 push	 88			; 00000058H
  00d48	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00d4e	51		 push	 ecx
  00d4f	6a 32		 push	 50			; 00000032H
  00d51	6a 01		 push	 1
  00d53	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00d58	83 c4 78	 add	 esp, 120		; 00000078H
  00d5b	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 515  : 	(
; 516  : 		UI_TYPE_AREA,
; 517  : 		UI_ATTR_PARENT (select_player_screen),
; 518  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 519  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 520  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 521  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 522  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 523  : 		UI_ATTR_OFFSET_TIME (0),
; 524  : 		UI_ATTR_TIME_LENGTH (500),
; 525  : 		UI_ATTR_END
; 526  : 	);
; 527  : 
; 528  : 	player_blue_side_selection_button = create_ui_object

  00d5e	6a 11		 push	 17			; 00000011H
  00d60	6a 01		 push	 1
  00d62	6a 07		 push	 7
  00d64	6a 01		 push	 1
  00d66	6a 1b		 push	 27			; 0000001bH
  00d68	6a 01		 push	 1
  00d6a	6a 10		 push	 16			; 00000010H
  00d6c	68 ff 00 00 00	 push	 255			; 000000ffH
  00d71	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00d78	50		 push	 eax
  00d79	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00d80	51		 push	 ecx
  00d81	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00d88	52		 push	 edx
  00d89	6a 22		 push	 34			; 00000022H
  00d8b	6a 00		 push	 0
  00d8d	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00d94	50		 push	 eax
  00d95	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00d9c	51		 push	 ecx
  00d9d	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00da4	52		 push	 edx
  00da5	6a 23		 push	 35			; 00000023H
  00da7	68 ff 00 00 00	 push	 255			; 000000ffH
  00dac	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00db3	50		 push	 eax
  00db4	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00dbb	51		 push	 ecx
  00dbc	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00dc3	52		 push	 edx
  00dc4	6a 14		 push	 20			; 00000014H
  00dc6	6a 00		 push	 0
  00dc8	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00dcf	50		 push	 eax
  00dd0	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00dd7	51		 push	 ecx
  00dd8	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00ddf	52		 push	 edx
  00de0	6a 15		 push	 21			; 00000015H
  00de2	6a 01		 push	 1
  00de4	6a 29		 push	 41			; 00000029H
  00de6	68 00 00 00 00	 push	 OFFSET ?player_select_side_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_select_side_function
  00deb	6a 16		 push	 22			; 00000016H
  00ded	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GNELJAHL@Blue?5Force@
  00df2	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00df7	50		 push	 eax
  00df8	6a 4a		 push	 74			; 0000004aH
  00dfa	6a 09		 push	 9
  00dfc	6a 12		 push	 18			; 00000012H
  00dfe	6a 02		 push	 2
  00e00	6a 4b		 push	 75			; 0000004bH
  00e02	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  00e07	83 ec 08	 sub	 esp, 8
  00e0a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e0f	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00e14	83 ec 08	 sub	 esp, 8
  00e17	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e1c	6a 59		 push	 89			; 00000059H
  00e1e	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00e23	83 ec 08	 sub	 esp, 8
  00e26	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e2b	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  00e30	83 ec 08	 sub	 esp, 8
  00e33	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00e38	6a 58		 push	 88			; 00000058H
  00e3a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00e3f	50		 push	 eax
  00e40	6a 32		 push	 50			; 00000032H
  00e42	6a 02		 push	 2
  00e44	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00e49	81 c4 c8 00 00
	00		 add	 esp, 200		; 000000c8H
  00e4f	a3 00 00 00 00	 mov	 DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A, eax

; 529  : 												(
; 530  : 													UI_TYPE_BUTTON,
; 531  : 													UI_ATTR_PARENT (select_player_screen),
; 532  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 533  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 534  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 535  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 536  : 													UI_ATTR_TEXT (get_trans ("Blue Force")),
; 537  : 													UI_ATTR_FUNCTION (player_select_side_function),
; 538  : 													UI_ATTR_ITEM_NUMBER ( ENTITY_SIDE_BLUE_FORCE ),
; 539  :           									  	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 540  :        									     	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 541  :     									        	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 542  :  									           	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 543  : 													UI_ATTR_DRAWABLE (TRUE),
; 544  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 545  : 													UI_ATTR_CLEAR ( TRUE ),
; 546  : 													UI_ATTR_END
; 547  : 												);
; 548  : 
; 549  : 	preprocess_translation_object_size (player_blue_side_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  00e54	6a 02		 push	 2
  00e56	6a 00		 push	 0
  00e58	6a 00		 push	 0
  00e5a	6a 00		 push	 0
  00e5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  00e61	50		 push	 eax
  00e62	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 550  : 
; 551  : 	set_text_option_backdrop_object (option_bdrop, player_blue_side_selection_button);

  00e67	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_blue_side_selection_button@@3PAUUI_OBJECT@@A
  00e6c	50		 push	 eax
  00e6d	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  00e70	51		 push	 ecx
  00e71	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 552  : 
; 553  : 	////////////////////////////////////////////////
; 554  : 	// General Log Selection Button
; 555  : 
; 556  : 	x1 = 0.580;

  00e76	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f147ae1
  00e7e	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 557  : 	y1 = 0.750;

  00e83	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f400000
  00e8b	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 558  : 	x2 = 0.312;

  00e90	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e9fbe77
  00e98	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 559  : 	y2 = 0.042;

  00e9d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d2c0831
  00ea5	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 560  : 
; 561  : 	option_bdrop = create_ui_object

  00eaa	6a 11		 push	 17			; 00000011H
  00eac	68 f4 01 00 00	 push	 500			; 000001f4H
  00eb1	6a 4d		 push	 77			; 0000004dH
  00eb3	6a 00		 push	 0
  00eb5	6a 30		 push	 48			; 00000030H
  00eb7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  00ebc	50		 push	 eax
  00ebd	6a 4c		 push	 76			; 0000004cH
  00ebf	68 ff 00 00 00	 push	 255			; 000000ffH
  00ec4	68 ff 00 00 00	 push	 255			; 000000ffH
  00ec9	68 ff 00 00 00	 push	 255			; 000000ffH
  00ece	68 ff 00 00 00	 push	 255			; 000000ffH
  00ed3	6a 0a		 push	 10			; 0000000aH
  00ed5	68 ff 00 00 00	 push	 255			; 000000ffH
  00eda	68 ff 00 00 00	 push	 255			; 000000ffH
  00edf	68 ff 00 00 00	 push	 255			; 000000ffH
  00ee4	68 ff 00 00 00	 push	 255			; 000000ffH
  00ee9	6a 0b		 push	 11			; 0000000bH
  00eeb	83 ec 08	 sub	 esp, 8
  00eee	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  00ef6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00efb	83 ec 08	 sub	 esp, 8
  00efe	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  00f06	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f0b	6a 59		 push	 89			; 00000059H
  00f0d	83 ec 08	 sub	 esp, 8
  00f10	0f 57 c0	 xorps	 xmm0, xmm0
  00f13	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f18	83 ec 08	 sub	 esp, 8
  00f1b	0f 57 c0	 xorps	 xmm0, xmm0
  00f1e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00f23	6a 58		 push	 88			; 00000058H
  00f25	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  00f2b	51		 push	 ecx
  00f2c	6a 32		 push	 50			; 00000032H
  00f2e	6a 01		 push	 1
  00f30	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00f35	83 c4 78	 add	 esp, 120		; 00000078H
  00f38	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 562  : 	(
; 563  : 		UI_TYPE_AREA,
; 564  : 		UI_ATTR_PARENT (select_player_screen),
; 565  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 566  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 567  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 568  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 569  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 570  : 		UI_ATTR_OFFSET_TIME (0),
; 571  : 		UI_ATTR_TIME_LENGTH (500),
; 572  : 		UI_ATTR_END
; 573  : 	);
; 574  : 
; 575  : 	player_general_log_selection_button = create_ui_object

  00f3b	6a 11		 push	 17			; 00000011H
  00f3d	6a 01		 push	 1
  00f3f	6a 07		 push	 7
  00f41	6a 01		 push	 1
  00f43	6a 1b		 push	 27			; 0000001bH
  00f45	68 ff 00 00 00	 push	 255			; 000000ffH
  00f4a	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00f51	50		 push	 eax
  00f52	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00f59	51		 push	 ecx
  00f5a	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00f61	52		 push	 edx
  00f62	6a 22		 push	 34			; 00000022H
  00f64	6a 00		 push	 0
  00f66	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  00f6d	50		 push	 eax
  00f6e	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  00f75	51		 push	 ecx
  00f76	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  00f7d	52		 push	 edx
  00f7e	6a 23		 push	 35			; 00000023H
  00f80	68 ff 00 00 00	 push	 255			; 000000ffH
  00f85	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00f8c	50		 push	 eax
  00f8d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00f94	51		 push	 ecx
  00f95	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00f9c	52		 push	 edx
  00f9d	6a 14		 push	 20			; 00000014H
  00f9f	6a 00		 push	 0
  00fa1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  00fa8	50		 push	 eax
  00fa9	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  00fb0	51		 push	 ecx
  00fb1	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  00fb8	52		 push	 edx
  00fb9	6a 15		 push	 21			; 00000015H
  00fbb	68 00 00 00 00	 push	 OFFSET ?notify_show_general_log_page@@YGXPAUUI_OBJECT@@@Z ; notify_show_general_log_page
  00fc0	6a 16		 push	 22			; 00000016H
  00fc2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BKGOBDLF@Flight?5Log@
  00fc7	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00fcc	50		 push	 eax
  00fcd	6a 4a		 push	 74			; 0000004aH
  00fcf	6a 09		 push	 9
  00fd1	6a 12		 push	 18			; 00000012H
  00fd3	6a 01		 push	 1
  00fd5	6a 4b		 push	 75			; 0000004bH
  00fd7	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  00fdc	83 ec 08	 sub	 esp, 8
  00fdf	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00fe4	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  00fe9	83 ec 08	 sub	 esp, 8
  00fec	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00ff1	6a 59		 push	 89			; 00000059H
  00ff3	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  00ff8	83 ec 08	 sub	 esp, 8
  00ffb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01000	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  01005	83 ec 08	 sub	 esp, 8
  01008	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0100d	6a 58		 push	 88			; 00000058H
  0100f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01014	50		 push	 eax
  01015	6a 32		 push	 50			; 00000032H
  01017	6a 02		 push	 2
  01019	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0101e	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  01024	a3 00 00 00 00	 mov	 DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A, eax

; 576  : 												(
; 577  : 													UI_TYPE_BUTTON,
; 578  : 													UI_ATTR_PARENT (select_player_screen),
; 579  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 580  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 581  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 582  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 583  : 													UI_ATTR_TEXT (get_trans ("Flight Log")),
; 584  : 													UI_ATTR_FUNCTION (notify_show_general_log_page),
; 585  :   									          	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 586  :   									         	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 587  :       								      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 588  : 		  									   	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 589  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 590  : 													UI_ATTR_CLEAR ( TRUE ),
; 591  : 													UI_ATTR_END
; 592  : 												);
; 593  : 
; 594  : 	preprocess_translation_object_size (player_general_log_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  01029	6a 02		 push	 2
  0102b	6a 00		 push	 0
  0102d	6a 00		 push	 0
  0102f	6a 00		 push	 0
  01031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  01036	50		 push	 eax
  01037	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 595  : 
; 596  : 	set_text_option_backdrop_object (option_bdrop, player_general_log_selection_button);

  0103c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_general_log_selection_button@@3PAUUI_OBJECT@@A
  01041	50		 push	 eax
  01042	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  01045	51		 push	 ecx
  01046	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 597  : 
; 598  : 	////////////////////////////////////////////////
; 599  : 	// Flight Hours Log Selection Button
; 600  : 
; 601  : 	x1 = 0.620;

  0104b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f1eb852
  01053	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 602  : 	y1 = 0.800;

  01058	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f4ccccd
  01060	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 603  : 	x2 = 0.312;

  01065	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e9fbe77
  0106d	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 604  : 	y2 = 0.042;

  01072	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d2c0831
  0107a	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 605  : 
; 606  : 	option_bdrop = create_ui_object

  0107f	6a 11		 push	 17			; 00000011H
  01081	68 f4 01 00 00	 push	 500			; 000001f4H
  01086	6a 4d		 push	 77			; 0000004dH
  01088	6a 00		 push	 0
  0108a	6a 30		 push	 48			; 00000030H
  0108c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  01091	50		 push	 eax
  01092	6a 4c		 push	 76			; 0000004cH
  01094	68 ff 00 00 00	 push	 255			; 000000ffH
  01099	68 ff 00 00 00	 push	 255			; 000000ffH
  0109e	68 ff 00 00 00	 push	 255			; 000000ffH
  010a3	68 ff 00 00 00	 push	 255			; 000000ffH
  010a8	6a 0a		 push	 10			; 0000000aH
  010aa	68 ff 00 00 00	 push	 255			; 000000ffH
  010af	68 ff 00 00 00	 push	 255			; 000000ffH
  010b4	68 ff 00 00 00	 push	 255			; 000000ffH
  010b9	68 ff 00 00 00	 push	 255			; 000000ffH
  010be	6a 0b		 push	 11			; 0000000bH
  010c0	83 ec 08	 sub	 esp, 8
  010c3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  010cb	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  010d0	83 ec 08	 sub	 esp, 8
  010d3	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  010db	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  010e0	6a 59		 push	 89			; 00000059H
  010e2	83 ec 08	 sub	 esp, 8
  010e5	0f 57 c0	 xorps	 xmm0, xmm0
  010e8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  010ed	83 ec 08	 sub	 esp, 8
  010f0	0f 57 c0	 xorps	 xmm0, xmm0
  010f3	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  010f8	6a 58		 push	 88			; 00000058H
  010fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01100	51		 push	 ecx
  01101	6a 32		 push	 50			; 00000032H
  01103	6a 01		 push	 1
  01105	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0110a	83 c4 78	 add	 esp, 120		; 00000078H
  0110d	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 607  : 	(
; 608  : 		UI_TYPE_AREA,
; 609  : 		UI_ATTR_PARENT (select_player_screen),
; 610  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 611  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 612  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 613  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 614  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 615  : 		UI_ATTR_OFFSET_TIME (0),
; 616  : 		UI_ATTR_TIME_LENGTH (500),
; 617  : 		UI_ATTR_END
; 618  : 	);
; 619  : 
; 620  : 	player_flight_hours_selection_button = create_ui_object

  01110	6a 11		 push	 17			; 00000011H
  01112	6a 01		 push	 1
  01114	6a 07		 push	 7
  01116	6a 01		 push	 1
  01118	6a 1b		 push	 27			; 0000001bH
  0111a	68 ff 00 00 00	 push	 255			; 000000ffH
  0111f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  01126	50		 push	 eax
  01127	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0112e	51		 push	 ecx
  0112f	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  01136	52		 push	 edx
  01137	6a 22		 push	 34			; 00000022H
  01139	6a 00		 push	 0
  0113b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  01142	50		 push	 eax
  01143	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0114a	51		 push	 ecx
  0114b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  01152	52		 push	 edx
  01153	6a 23		 push	 35			; 00000023H
  01155	68 ff 00 00 00	 push	 255			; 000000ffH
  0115a	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  01161	50		 push	 eax
  01162	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  01169	51		 push	 ecx
  0116a	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  01171	52		 push	 edx
  01172	6a 14		 push	 20			; 00000014H
  01174	6a 00		 push	 0
  01176	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0117d	50		 push	 eax
  0117e	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  01185	51		 push	 ecx
  01186	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0118d	52		 push	 edx
  0118e	6a 15		 push	 21			; 00000015H
  01190	68 00 00 00 00	 push	 OFFSET ?notify_show_flight_hours_page@@YGXPAUUI_OBJECT@@@Z ; notify_show_flight_hours_page
  01195	6a 16		 push	 22			; 00000016H
  01197	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CPOKEKEE@Flight?5Hours@
  0119c	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  011a1	50		 push	 eax
  011a2	6a 4a		 push	 74			; 0000004aH
  011a4	6a 09		 push	 9
  011a6	6a 12		 push	 18			; 00000012H
  011a8	6a 01		 push	 1
  011aa	6a 4b		 push	 75			; 0000004bH
  011ac	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  011b1	83 ec 08	 sub	 esp, 8
  011b4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  011b9	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  011be	83 ec 08	 sub	 esp, 8
  011c1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  011c6	6a 59		 push	 89			; 00000059H
  011c8	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  011cd	83 ec 08	 sub	 esp, 8
  011d0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  011d5	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  011da	83 ec 08	 sub	 esp, 8
  011dd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  011e2	6a 58		 push	 88			; 00000058H
  011e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  011e9	50		 push	 eax
  011ea	6a 32		 push	 50			; 00000032H
  011ec	6a 02		 push	 2
  011ee	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  011f3	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  011f9	a3 00 00 00 00	 mov	 DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A, eax

; 621  : 												(
; 622  : 													UI_TYPE_BUTTON,
; 623  : 													UI_ATTR_PARENT (select_player_screen),
; 624  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 625  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 626  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 627  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 628  : 													UI_ATTR_TEXT (get_trans ("Flight Hours")),
; 629  : 													UI_ATTR_FUNCTION (notify_show_flight_hours_page),
; 630  :             									UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 631  :          								   	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 632  :       								      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 633  :    								         	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 634  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 635  : 													UI_ATTR_CLEAR ( TRUE ),
; 636  : 													UI_ATTR_END
; 637  : 												);
; 638  : 
; 639  : 	preprocess_translation_object_size (player_flight_hours_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  011fe	6a 02		 push	 2
  01200	6a 00		 push	 0
  01202	6a 00		 push	 0
  01204	6a 00		 push	 0
  01206	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  0120b	50		 push	 eax
  0120c	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 640  : 
; 641  : 	set_text_option_backdrop_object (option_bdrop, player_flight_hours_selection_button);

  01211	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_flight_hours_selection_button@@3PAUUI_OBJECT@@A
  01216	50		 push	 eax
  01217	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  0121a	51		 push	 ecx
  0121b	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 642  : 
; 643  : 
; 644  : 	////////////////////////////////////////////////
; 645  : 	// Weapon Log Selection Button
; 646  : 
; 647  : 	x1 = 0.660;

  01220	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f28f5c3
  01228	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 648  : 	y1 = 0.850;

  0122d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f59999a
  01235	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 649  : 	x2 = 0.220;

  0123a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e6147ae
  01242	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 650  : 	y2 = 0.042;

  01247	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d2c0831
  0124f	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 651  : 
; 652  : 	option_bdrop = create_ui_object

  01254	6a 11		 push	 17			; 00000011H
  01256	68 f4 01 00 00	 push	 500			; 000001f4H
  0125b	6a 4d		 push	 77			; 0000004dH
  0125d	6a 00		 push	 0
  0125f	6a 30		 push	 48			; 00000030H
  01261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  01266	50		 push	 eax
  01267	6a 4c		 push	 76			; 0000004cH
  01269	68 ff 00 00 00	 push	 255			; 000000ffH
  0126e	68 ff 00 00 00	 push	 255			; 000000ffH
  01273	68 ff 00 00 00	 push	 255			; 000000ffH
  01278	68 ff 00 00 00	 push	 255			; 000000ffH
  0127d	6a 0a		 push	 10			; 0000000aH
  0127f	68 ff 00 00 00	 push	 255			; 000000ffH
  01284	68 ff 00 00 00	 push	 255			; 000000ffH
  01289	68 ff 00 00 00	 push	 255			; 000000ffH
  0128e	68 ff 00 00 00	 push	 255			; 000000ffH
  01293	6a 0b		 push	 11			; 0000000bH
  01295	83 ec 08	 sub	 esp, 8
  01298	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  012a0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  012a5	83 ec 08	 sub	 esp, 8
  012a8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  012b0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  012b5	6a 59		 push	 89			; 00000059H
  012b7	83 ec 08	 sub	 esp, 8
  012ba	0f 57 c0	 xorps	 xmm0, xmm0
  012bd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  012c2	83 ec 08	 sub	 esp, 8
  012c5	0f 57 c0	 xorps	 xmm0, xmm0
  012c8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  012cd	6a 58		 push	 88			; 00000058H
  012cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  012d5	51		 push	 ecx
  012d6	6a 32		 push	 50			; 00000032H
  012d8	6a 01		 push	 1
  012da	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  012df	83 c4 78	 add	 esp, 120		; 00000078H
  012e2	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 653  : 	(
; 654  : 		UI_TYPE_AREA,
; 655  : 		UI_ATTR_PARENT (select_player_screen),
; 656  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 657  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 658  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 659  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 660  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 661  : 		UI_ATTR_OFFSET_TIME (0),
; 662  : 		UI_ATTR_TIME_LENGTH (500),
; 663  : 		UI_ATTR_END
; 664  : 	);
; 665  : 
; 666  : 	player_weapon_log_selection_button = create_ui_object

  012e5	6a 11		 push	 17			; 00000011H
  012e7	6a 01		 push	 1
  012e9	6a 07		 push	 7
  012eb	6a 01		 push	 1
  012ed	6a 1b		 push	 27			; 0000001bH
  012ef	68 ff 00 00 00	 push	 255			; 000000ffH
  012f4	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  012fb	50		 push	 eax
  012fc	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  01303	51		 push	 ecx
  01304	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0130b	52		 push	 edx
  0130c	6a 22		 push	 34			; 00000022H
  0130e	6a 00		 push	 0
  01310	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  01317	50		 push	 eax
  01318	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0131f	51		 push	 ecx
  01320	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  01327	52		 push	 edx
  01328	6a 23		 push	 35			; 00000023H
  0132a	68 ff 00 00 00	 push	 255			; 000000ffH
  0132f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  01336	50		 push	 eax
  01337	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0133e	51		 push	 ecx
  0133f	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  01346	52		 push	 edx
  01347	6a 14		 push	 20			; 00000014H
  01349	6a 00		 push	 0
  0134b	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  01352	50		 push	 eax
  01353	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0135a	51		 push	 ecx
  0135b	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  01362	52		 push	 edx
  01363	6a 15		 push	 21			; 00000015H
  01365	68 00 00 00 00	 push	 OFFSET ?notify_show_weapon_log_page@@YGXPAUUI_OBJECT@@@Z ; notify_show_weapon_log_page
  0136a	6a 16		 push	 22			; 00000016H
  0136c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FAMFPMO@Weapons?5Log@
  01371	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  01376	50		 push	 eax
  01377	6a 4a		 push	 74			; 0000004aH
  01379	6a 09		 push	 9
  0137b	6a 12		 push	 18			; 00000012H
  0137d	6a 01		 push	 1
  0137f	6a 4b		 push	 75			; 0000004bH
  01381	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  01386	83 ec 08	 sub	 esp, 8
  01389	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0138e	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  01393	83 ec 08	 sub	 esp, 8
  01396	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0139b	6a 59		 push	 89			; 00000059H
  0139d	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  013a2	83 ec 08	 sub	 esp, 8
  013a5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  013aa	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  013af	83 ec 08	 sub	 esp, 8
  013b2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  013b7	6a 58		 push	 88			; 00000058H
  013b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  013be	50		 push	 eax
  013bf	6a 32		 push	 50			; 00000032H
  013c1	6a 02		 push	 2
  013c3	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  013c8	81 c4 b8 00 00
	00		 add	 esp, 184		; 000000b8H
  013ce	a3 00 00 00 00	 mov	 DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A, eax

; 667  : 												(
; 668  : 													UI_TYPE_BUTTON,
; 669  : 													UI_ATTR_PARENT (select_player_screen),
; 670  : 													UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 671  : 													UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 672  : 													UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 673  : 													UI_ATTR_FONT_TYPE (UI_FONT_STRETCH_ITALIC_ARIAL_18),
; 674  : 													UI_ATTR_TEXT (get_trans ("Weapons Log")),
; 675  : 													UI_ATTR_FUNCTION (notify_show_weapon_log_page),
; 676  :             									UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 677  :          								   	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 678  :       								      	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 679  :    								         	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 680  : 													UI_ATTR_HIGHLIGHTABLE (TRUE),
; 681  : 													UI_ATTR_CLEAR ( TRUE ),
; 682  : 													UI_ATTR_END
; 683  : 												);
; 684  : 
; 685  : 	preprocess_translation_object_size (player_weapon_log_selection_button, NULL, NULL, 0, RESIZE_OPTION_FIXED_BUTTON);

  013d3	6a 02		 push	 2
  013d5	6a 00		 push	 0
  013d7	6a 00		 push	 0
  013d9	6a 00		 push	 0
  013db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  013e0	50		 push	 eax
  013e1	e8 00 00 00 00	 call	 ?preprocess_translation_object_size@@YGXPAUUI_OBJECT@@0PAPBDHW4RESIZE_UI_OBJECT_TYPES@@@Z ; preprocess_translation_object_size

; 686  : 
; 687  : 	set_text_option_backdrop_object (option_bdrop, player_weapon_log_selection_button);

  013e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_weapon_log_selection_button@@3PAUUI_OBJECT@@A
  013eb	50		 push	 eax
  013ec	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  013ef	51		 push	 ecx
  013f0	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 688  : 
; 689  : 	/////////////////////////////////////////////////////////////////
; 690  : 	// Ok Button
; 691  : 
; 692  : 	option_bdrop = create_ui_object

  013f5	6a 11		 push	 17			; 00000011H
  013f7	68 f4 01 00 00	 push	 500			; 000001f4H
  013fc	6a 4d		 push	 77			; 0000004dH
  013fe	6a 00		 push	 0
  01400	6a 30		 push	 48			; 00000030H
  01402	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  01407	50		 push	 eax
  01408	6a 4c		 push	 76			; 0000004cH
  0140a	68 ff 00 00 00	 push	 255			; 000000ffH
  0140f	68 ff 00 00 00	 push	 255			; 000000ffH
  01414	68 ff 00 00 00	 push	 255			; 000000ffH
  01419	68 ff 00 00 00	 push	 255			; 000000ffH
  0141e	6a 0a		 push	 10			; 0000000aH
  01420	68 ff 00 00 00	 push	 255			; 000000ffH
  01425	68 ff 00 00 00	 push	 255			; 000000ffH
  0142a	68 ff 00 00 00	 push	 255			; 000000ffH
  0142f	68 ff 00 00 00	 push	 255			; 000000ffH
  01434	6a 0b		 push	 11			; 0000000bH
  01436	83 ec 08	 sub	 esp, 8
  01439	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  01441	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01446	83 ec 08	 sub	 esp, 8
  01449	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  01451	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01456	6a 59		 push	 89			; 00000059H
  01458	83 ec 08	 sub	 esp, 8
  0145b	0f 57 c0	 xorps	 xmm0, xmm0
  0145e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01463	83 ec 08	 sub	 esp, 8
  01466	0f 57 c0	 xorps	 xmm0, xmm0
  01469	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0146e	6a 58		 push	 88			; 00000058H
  01470	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01476	51		 push	 ecx
  01477	6a 32		 push	 50			; 00000032H
  01479	6a 01		 push	 1
  0147b	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01480	83 c4 78	 add	 esp, 120		; 00000078H
  01483	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 693  : 	(
; 694  : 		UI_TYPE_AREA,
; 695  : 		UI_ATTR_PARENT (select_player_screen),
; 696  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 697  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 698  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 699  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 700  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 701  : 		UI_ATTR_OFFSET_TIME (0),
; 702  : 		UI_ATTR_TIME_LENGTH (500),
; 703  : 		UI_ATTR_END
; 704  : 	);
; 705  : 
; 706  : 	temp_obj = create_ui_object

  01486	6a 11		 push	 17			; 00000011H
  01488	6a 01		 push	 1
  0148a	6a 07		 push	 7
  0148c	6a 01		 push	 1
  0148e	6a 1b		 push	 27			; 0000001bH
  01490	68 ff 00 00 00	 push	 255			; 000000ffH
  01495	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0149c	50		 push	 eax
  0149d	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  014a4	51		 push	 ecx
  014a5	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  014ac	52		 push	 edx
  014ad	6a 22		 push	 34			; 00000022H
  014af	6a 00		 push	 0
  014b1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  014b8	50		 push	 eax
  014b9	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  014c0	51		 push	 ecx
  014c1	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  014c8	52		 push	 edx
  014c9	6a 23		 push	 35			; 00000023H
  014cb	68 ff 00 00 00	 push	 255			; 000000ffH
  014d0	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  014d7	50		 push	 eax
  014d8	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  014df	51		 push	 ecx
  014e0	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  014e7	52		 push	 edx
  014e8	6a 14		 push	 20			; 00000014H
  014ea	6a 00		 push	 0
  014ec	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  014f3	50		 push	 eax
  014f4	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  014fb	51		 push	 ecx
  014fc	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  01503	52		 push	 edx
  01504	6a 15		 push	 21			; 00000015H
  01506	6a 01		 push	 1
  01508	6a 4b		 push	 75			; 0000004bH
  0150a	6a 08		 push	 8
  0150c	6a 12		 push	 18			; 00000012H
  0150e	68 00 00 00 00	 push	 OFFSET ?notify_select_player_exit_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_select_player_exit_button
  01513	6a 16		 push	 22			; 00000016H
  01515	6a 01		 push	 1
  01517	6a 2f		 push	 47			; 0000002fH
  01519	68 00 00 00 00	 push	 OFFSET ??_C@_05LMLILOOH@UI_OK@
  0151e	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  01523	50		 push	 eax
  01524	6a 4a		 push	 74			; 0000004aH
  01526	83 ec 08	 sub	 esp, 8
  01529	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa99999a0000000
  01531	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01536	83 ec 08	 sub	 esp, 8
  01539	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fc3333340000000
  01541	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01546	6a 59		 push	 89			; 00000059H
  01548	83 ec 08	 sub	 esp, 8
  0154b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fea872b00000000
  01553	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01558	83 ec 08	 sub	 esp, 8
  0155b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fa374bc60000000
  01563	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01568	6a 58		 push	 88			; 00000058H
  0156a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  0156f	50		 push	 eax
  01570	6a 32		 push	 50			; 00000032H
  01572	6a 02		 push	 2
  01574	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01579	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0157f	89 45 e4	 mov	 DWORD PTR _temp_obj$[ebp], eax

; 707  : 			(
; 708  : 				UI_TYPE_BUTTON,
; 709  : 				UI_ATTR_PARENT (select_player_screen),
; 710  : 				UI_ATTR_VIRTUAL_POSITION (OPTIONS_OK_BUTTON_POS_X, OPTIONS_OK_BUTTON_POS_Y),
; 711  : 				UI_ATTR_VIRTUAL_SIZE (OPTIONS_OK_BUTTON_X, OPTIONS_OK_BUTTON_Y),
; 712  : 				UI_ATTR_TEXT (get_trans("UI_OK")),
; 713  : 				UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_UP),
; 714  : 				UI_ATTR_FUNCTION (notify_select_player_exit_button),
; 715  : 				UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 716  : 				UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 717  :            	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 718  :            	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 719  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 720  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 721  : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 722  : 				UI_ATTR_CLEAR (TRUE),
; 723  : 				UI_ATTR_END
; 724  : 			);
; 725  : 
; 726  : 	set_text_option_backdrop_object (option_bdrop, temp_obj);

  01582	8b 45 e4	 mov	 eax, DWORD PTR _temp_obj$[ebp]
  01585	50		 push	 eax
  01586	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  01589	51		 push	 ecx
  0158a	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 727  : 
; 728  : 	/////////////////////////////////////////////////////////////////
; 729  : 	// Undo Button
; 730  : 
; 731  : 	x1 = OPTIONS_OK_BUTTON_POS_X + 0.020;

  0158f	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d6d9168
  01597	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 732  : 	y1 = OPTIONS_OK_BUTTON_POS_Y + 0.050;

  0159c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f610625
  015a4	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 733  : 	x2 = OPTIONS_OK_BUTTON_X;

  015a9	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e19999a
  015b1	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 734  : 	y2 = OPTIONS_OK_BUTTON_Y;

  015b6	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3d4ccccd
  015be	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 735  : 
; 736  : 	option_bdrop = create_ui_object

  015c3	6a 11		 push	 17			; 00000011H
  015c5	68 f4 01 00 00	 push	 500			; 000001f4H
  015ca	6a 4d		 push	 77			; 0000004dH
  015cc	6a 00		 push	 0
  015ce	6a 30		 push	 48			; 00000030H
  015d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?text_option_bdrop@@3PAUTEXTURE_GRAPHIC@@A ; text_option_bdrop
  015d5	50		 push	 eax
  015d6	6a 4c		 push	 76			; 0000004cH
  015d8	68 ff 00 00 00	 push	 255			; 000000ffH
  015dd	68 ff 00 00 00	 push	 255			; 000000ffH
  015e2	68 ff 00 00 00	 push	 255			; 000000ffH
  015e7	68 ff 00 00 00	 push	 255			; 000000ffH
  015ec	6a 0a		 push	 10			; 0000000aH
  015ee	68 ff 00 00 00	 push	 255			; 000000ffH
  015f3	68 ff 00 00 00	 push	 255			; 000000ffH
  015f8	68 ff 00 00 00	 push	 255			; 000000ffH
  015fd	68 ff 00 00 00	 push	 255			; 000000ffH
  01602	6a 0b		 push	 11			; 0000000bH
  01604	83 ec 08	 sub	 esp, 8
  01607	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fad2f1aa0000000
  0160f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01614	83 ec 08	 sub	 esp, 8
  01617	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fdee978e0000000
  0161f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01624	6a 59		 push	 89			; 00000059H
  01626	83 ec 08	 sub	 esp, 8
  01629	0f 57 c0	 xorps	 xmm0, xmm0
  0162c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01631	83 ec 08	 sub	 esp, 8
  01634	0f 57 c0	 xorps	 xmm0, xmm0
  01637	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0163c	6a 58		 push	 88			; 00000058H
  0163e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01644	51		 push	 ecx
  01645	6a 32		 push	 50			; 00000032H
  01647	6a 01		 push	 1
  01649	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0164e	83 c4 78	 add	 esp, 120		; 00000078H
  01651	89 45 e0	 mov	 DWORD PTR _option_bdrop$[ebp], eax

; 737  : 	(
; 738  : 		UI_TYPE_AREA,
; 739  : 		UI_ATTR_PARENT (select_player_screen),
; 740  : 		UI_ATTR_VIRTUAL_POSITION (0.0, 0.0),
; 741  : 		UI_ATTR_VIRTUAL_SIZE (TEXT_OPTION_BDROP_WIDTH, TEXT_OPTION_BDROP_HEIGHT),
; 742  : 		UI_ATTR_COLOUR_START (255, 255, 255, 255),
; 743  : 		UI_ATTR_COLOUR_END (255, 255, 255, 255),
; 744  : 		UI_ATTR_TEXTURE_GRAPHIC (text_option_bdrop),
; 745  : 		UI_ATTR_OFFSET_TIME (0),
; 746  : 		UI_ATTR_TIME_LENGTH (500),
; 747  : 		UI_ATTR_END
; 748  : 	);
; 749  : 
; 750  : 	temp_obj = create_ui_object

  01654	6a 11		 push	 17			; 00000011H
  01656	6a 01		 push	 1
  01658	6a 07		 push	 7
  0165a	6a 01		 push	 1
  0165c	6a 1b		 push	 27			; 0000001bH
  0165e	68 ff 00 00 00	 push	 255			; 000000ffH
  01663	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  0166a	50		 push	 eax
  0166b	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  01672	51		 push	 ecx
  01673	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  0167a	52		 push	 edx
  0167b	6a 22		 push	 34			; 00000022H
  0167d	6a 00		 push	 0
  0167f	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A
  01686	50		 push	 eax
  01687	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+1
  0168e	51		 push	 ecx
  0168f	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_hilite_colour@@3UREAL_COLOUR@@A+2
  01696	52		 push	 edx
  01697	6a 23		 push	 35			; 00000023H
  01699	68 ff 00 00 00	 push	 255			; 000000ffH
  0169e	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  016a5	50		 push	 eax
  016a6	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  016ad	51		 push	 ecx
  016ae	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  016b5	52		 push	 edx
  016b6	6a 14		 push	 20			; 00000014H
  016b8	6a 00		 push	 0
  016ba	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  016c1	50		 push	 eax
  016c2	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  016c9	51		 push	 ecx
  016ca	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  016d1	52		 push	 edx
  016d2	6a 15		 push	 21			; 00000015H
  016d4	6a 01		 push	 1
  016d6	6a 4b		 push	 75			; 0000004bH
  016d8	6a 08		 push	 8
  016da	6a 12		 push	 18			; 00000012H
  016dc	68 00 00 00 00	 push	 OFFSET ?notify_select_player_restore_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_select_player_restore_button
  016e1	6a 16		 push	 22			; 00000016H
  016e3	6a 01		 push	 1
  016e5	6a 2f		 push	 47			; 0000002fH
  016e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DKJDPFA@Undo?5Last?5Mission@
  016ec	6a 4a		 push	 74			; 0000004aH
  016ee	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  016f3	83 ec 08	 sub	 esp, 8
  016f6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  016fb	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  01700	83 ec 08	 sub	 esp, 8
  01703	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01708	6a 59		 push	 89			; 00000059H
  0170a	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0170f	83 ec 08	 sub	 esp, 8
  01712	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01717	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  0171c	83 ec 08	 sub	 esp, 8
  0171f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01724	6a 58		 push	 88			; 00000058H
  01726	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  0172b	50		 push	 eax
  0172c	6a 32		 push	 50			; 00000032H
  0172e	6a 02		 push	 2
  01730	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01735	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0173b	89 45 e4	 mov	 DWORD PTR _temp_obj$[ebp], eax

; 751  : 			(
; 752  : 				UI_TYPE_BUTTON,
; 753  : 				UI_ATTR_PARENT (select_player_screen),
; 754  : 				UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 755  : 				UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 756  : 				UI_ATTR_TEXT ("Undo Last Mission"),
; 757  : 				UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_UP),
; 758  : 				UI_ATTR_FUNCTION (notify_select_player_restore_button),
; 759  : 				UI_ATTR_FONT_TYPE (UI_FONT_THICK_ITALIC_ARIAL_18),
; 760  : 				UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_LEFT_CENTRE),
; 761  :            	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 762  :            	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 763  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_START (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 0),
; 764  :            	UI_ATTR_HIGHLIGHTED_FONT_COLOUR_END (ui_option_text_hilite_colour.r, ui_option_text_hilite_colour.g, ui_option_text_hilite_colour.b, 255),
; 765  : 				UI_ATTR_HIGHLIGHTABLE (TRUE),
; 766  : 				UI_ATTR_CLEAR (TRUE),
; 767  : 				UI_ATTR_END
; 768  : 			);
; 769  : 
; 770  : 	set_text_option_backdrop_object (option_bdrop, temp_obj);

  0173e	8b 45 e4	 mov	 eax, DWORD PTR _temp_obj$[ebp]
  01741	50		 push	 eax
  01742	8b 4d e0	 mov	 ecx, DWORD PTR _option_bdrop$[ebp]
  01745	51		 push	 ecx
  01746	e8 00 00 00 00	 call	 ?set_text_option_backdrop_object@@YGXPAUUI_OBJECT@@0@Z ; set_text_option_backdrop_object

; 771  : 
; 772  : 
; 773  : 	///////////////////////////////////////////
; 774  : 	// Player name entry area
; 775  : 
; 776  : 	x1 = get_ui_object_virtual_x (player_list);

  0174b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  01750	50		 push	 eax
  01751	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  01757	8b 11		 mov	 edx, DWORD PTR [ecx]
  01759	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  01760	ff d0		 call	 eax
  01762	d9 5d f8	 fstp	 DWORD PTR _x1$[ebp]

; 777  : 	y1 = get_ui_object_virtual_y (player_list);

  01765	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0176a	50		 push	 eax
  0176b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  01771	8b 11		 mov	 edx, DWORD PTR [ecx]
  01773	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0177a	ff d0		 call	 eax
  0177c	d9 5d f4	 fstp	 DWORD PTR _y1$[ebp]

; 778  : 	x2 = get_ui_object_virtual_x_size (player_list);

  0177f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  01784	50		 push	 eax
  01785	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0178b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0178d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  01794	ff d0		 call	 eax
  01796	d9 5d f0	 fstp	 DWORD PTR _x2$[ebp]

; 779  : 	y2 = get_ui_object_virtual_y_size (player_list);

  01799	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  0179e	50		 push	 eax
  0179f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?player_list@@3PAUUI_OBJECT@@A
  017a5	8b 11		 mov	 edx, DWORD PTR [ecx]
  017a7	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  017ae	ff d0		 call	 eax
  017b0	d9 5d ec	 fstp	 DWORD PTR _y2$[ebp]

; 780  : 
; 781  :    player_name_entry_area = create_ui_object

  017b3	6a 11		 push	 17			; 00000011H
  017b5	6a 00		 push	 0
  017b7	6a 2f		 push	 47			; 0000002fH
  017b9	6a 01		 push	 1
  017bb	6a 07		 push	 7
  017bd	6a 05		 push	 5
  017bf	6a 12		 push	 18			; 00000012H
  017c1	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  017c6	83 ec 08	 sub	 esp, 8
  017c9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  017ce	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  017d3	83 ec 08	 sub	 esp, 8
  017d6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  017db	6a 59		 push	 89			; 00000059H
  017dd	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  017e2	83 ec 08	 sub	 esp, 8
  017e5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  017ea	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  017ef	83 ec 08	 sub	 esp, 8
  017f2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  017f7	6a 58		 push	 88			; 00000058H
  017f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_list_area@@3PAUUI_OBJECT@@A
  017fe	50		 push	 eax
  017ff	6a 32		 push	 50			; 00000032H
  01801	6a 01		 push	 1
  01803	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01808	83 c4 50	 add	 esp, 80			; 00000050H
  0180b	a3 00 00 00 00	 mov	 DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A, eax

; 782  :             (
; 783  :                UI_TYPE_AREA,
; 784  :                UI_ATTR_PARENT (player_list_area),
; 785  : 					UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 786  : 					UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 787  : 					UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_18),
; 788  : 					UI_ATTR_CLEAR (TRUE),
; 789  : 					UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_NONE),
; 790  :                UI_ATTR_END
; 791  :             );
; 792  : 
; 793  : 	x1 = 0.0;

  01810	0f 57 c0	 xorps	 xmm0, xmm0
  01813	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 794  : 	y1 = 0.0;

  01818	0f 57 c0	 xorps	 xmm0, xmm0
  0181b	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 795  : 	x2 = 1.0;

  01820	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  01828	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 796  : 	y2 = 0.25;

  0182d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e800000
  01835	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 797  : 
; 798  :    player_name_input = create_ui_object

  0183a	6a 11		 push	 17			; 00000011H
  0183c	6a 00		 push	 0
  0183e	6a 07		 push	 7
  01840	68 00 00 00 00	 push	 OFFSET ?player_name_input_function@@YGXPAUUI_OBJECT@@PAX@Z ; player_name_input_function
  01845	6a 16		 push	 22			; 00000016H
  01847	68 ff 00 00 00	 push	 255			; 000000ffH
  0184c	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  01853	50		 push	 eax
  01854	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  0185b	51		 push	 ecx
  0185c	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  01863	52		 push	 edx
  01864	6a 14		 push	 20			; 00000014H
  01866	6a 00		 push	 0
  01868	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A
  0186f	50		 push	 eax
  01870	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+1
  01877	51		 push	 ecx
  01878	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_text_default_colour@@3UREAL_COLOUR@@A+2
  0187f	52		 push	 edx
  01880	6a 15		 push	 21			; 00000015H
  01882	6a 05		 push	 5
  01884	6a 12		 push	 18			; 00000012H
  01886	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  0188b	83 ec 08	 sub	 esp, 8
  0188e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01893	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  01898	83 ec 08	 sub	 esp, 8
  0189b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  018a0	6a 59		 push	 89			; 00000059H
  018a2	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  018a7	83 ec 08	 sub	 esp, 8
  018aa	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  018af	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  018b4	83 ec 08	 sub	 esp, 8
  018b7	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  018bc	6a 58		 push	 88			; 00000058H
  018be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_name_entry_area@@3PAUUI_OBJECT@@A
  018c3	50		 push	 eax
  018c4	6a 32		 push	 50			; 00000032H
  018c6	6a 10		 push	 16			; 00000010H
  018c8	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  018cd	83 c4 78	 add	 esp, 120		; 00000078H
  018d0	a3 00 00 00 00	 mov	 DWORD PTR ?player_name_input@@3PAUUI_OBJECT@@A, eax

; 799  :             (
; 800  :                UI_TYPE_INPUT,
; 801  :                UI_ATTR_PARENT (player_name_entry_area),
; 802  : 					UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 803  : 					UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 804  : 					UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_18),
; 805  :             	UI_ATTR_FONT_COLOUR_START (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 0),
; 806  :             	UI_ATTR_FONT_COLOUR_END (ui_option_text_default_colour.r, ui_option_text_default_colour.g, ui_option_text_default_colour.b, 255),
; 807  : 					UI_ATTR_FUNCTION (player_name_input_function),
; 808  : 					UI_ATTR_CLEAR (FALSE),
; 809  :                UI_ATTR_END
; 810  :             );
; 811  : 
; 812  : 	/////////////////////////////////////////////////////////////////
; 813  : 	// Text Areas
; 814  : 
; 815  : 	x1 = 0.584;

  018d5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f158106
  018dd	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 816  : 	y1 = 0.900;

  018e2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f666666
  018ea	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 817  : 	x2 = 0.195;

  018ef	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3e47ae14
  018f7	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 818  : 	y2 = 0.030;

  018fc	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  01904	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 819  : 
; 820  :    current_player_rank_text = create_ui_object

  01909	6a 11		 push	 17			; 00000011H
  0190b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  01910	6a 4a		 push	 74			; 0000004aH
  01912	68 ff 00 00 00	 push	 255			; 000000ffH
  01917	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A
  0191e	50		 push	 eax
  0191f	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+1
  01926	51		 push	 ecx
  01927	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+2
  0192e	52		 push	 edx
  0192f	6a 14		 push	 20			; 00000014H
  01931	6a 00		 push	 0
  01933	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A
  0193a	50		 push	 eax
  0193b	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+1
  01942	51		 push	 ecx
  01943	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+2
  0194a	52		 push	 edx
  0194b	6a 15		 push	 21			; 00000015H
  0194d	6a 0a		 push	 10			; 0000000aH
  0194f	6a 12		 push	 18			; 00000012H
  01951	6a 02		 push	 2
  01953	6a 4b		 push	 75			; 0000004bH
  01955	6a 01		 push	 1
  01957	6a 07		 push	 7
  01959	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  0195e	83 ec 08	 sub	 esp, 8
  01961	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01966	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  0196b	83 ec 08	 sub	 esp, 8
  0196e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01973	6a 59		 push	 89			; 00000059H
  01975	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  0197a	83 ec 08	 sub	 esp, 8
  0197d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01982	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  01987	83 ec 08	 sub	 esp, 8
  0198a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0198f	6a 58		 push	 88			; 00000058H
  01991	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01996	50		 push	 eax
  01997	6a 32		 push	 50			; 00000032H
  01999	6a 01		 push	 1
  0199b	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  019a0	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  019a6	a3 00 00 00 00	 mov	 DWORD PTR ?current_player_rank_text@@3PAUUI_OBJECT@@A, eax

; 821  :             (
; 822  :                UI_TYPE_AREA,
; 823  :                UI_ATTR_PARENT (select_player_screen),
; 824  : 					UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 825  : 					UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 826  : 					UI_ATTR_CLEAR ( TRUE ),
; 827  : 					UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 828  : 					UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_22),
; 829  :   				   UI_ATTR_FONT_COLOUR_START (ui_option_title_text_colour.r, ui_option_title_text_colour.g, ui_option_title_text_colour.b, 0),
; 830  :    				UI_ATTR_FONT_COLOUR_END (ui_option_title_text_colour.r, ui_option_title_text_colour.g, ui_option_title_text_colour.b, 255),
; 831  : 					UI_ATTR_TEXT (""),
; 832  :                UI_ATTR_END
; 833  :             );
; 834  : 
; 835  : 	x1 = 0.462;

  019ab	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3eec8b44
  019b3	f3 0f 11 45 f8	 movss	 DWORD PTR _x1$[ebp], xmm0

; 836  : 	y1 = 0.946;

  019b8	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f722d0e
  019c0	f3 0f 11 45 f4	 movss	 DWORD PTR _y1$[ebp], xmm0

; 837  : 	x2 = 0.317;

  019c5	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3ea24dd3
  019cd	f3 0f 11 45 f0	 movss	 DWORD PTR _x2$[ebp], xmm0

; 838  : 	y2 = 0.030;

  019d2	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3cf5c28f
  019da	f3 0f 11 45 ec	 movss	 DWORD PTR _y2$[ebp], xmm0

; 839  : 
; 840  :    player_commision_date_text = create_ui_object

  019df	6a 11		 push	 17			; 00000011H
  019e1	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  019e6	6a 4a		 push	 74			; 0000004aH
  019e8	6a 02		 push	 2
  019ea	6a 4b		 push	 75			; 0000004bH
  019ec	68 ff 00 00 00	 push	 255			; 000000ffH
  019f1	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A
  019f8	50		 push	 eax
  019f9	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+1
  01a00	51		 push	 ecx
  01a01	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+2
  01a08	52		 push	 edx
  01a09	6a 14		 push	 20			; 00000014H
  01a0b	6a 00		 push	 0
  01a0d	0f b6 05 00 00
	00 00		 movzx	 eax, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A
  01a14	50		 push	 eax
  01a15	0f b6 0d 01 00
	00 00		 movzx	 ecx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+1
  01a1c	51		 push	 ecx
  01a1d	0f b6 15 02 00
	00 00		 movzx	 edx, BYTE PTR ?ui_option_title_text_colour@@3UREAL_COLOUR@@A+2
  01a24	52		 push	 edx
  01a25	6a 15		 push	 21			; 00000015H
  01a27	6a 03		 push	 3
  01a29	6a 12		 push	 18			; 00000012H
  01a2b	6a 01		 push	 1
  01a2d	6a 07		 push	 7
  01a2f	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _y2$[ebp]
  01a34	83 ec 08	 sub	 esp, 8
  01a37	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01a3c	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _x2$[ebp]
  01a41	83 ec 08	 sub	 esp, 8
  01a44	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01a49	6a 59		 push	 89			; 00000059H
  01a4b	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _y1$[ebp]
  01a50	83 ec 08	 sub	 esp, 8
  01a53	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01a58	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _x1$[ebp]
  01a5d	83 ec 08	 sub	 esp, 8
  01a60	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  01a65	6a 58		 push	 88			; 00000058H
  01a67	a1 00 00 00 00	 mov	 eax, DWORD PTR ?select_player_screen@@3PAUUI_OBJECT@@A ; select_player_screen
  01a6c	50		 push	 eax
  01a6d	6a 32		 push	 50			; 00000032H
  01a6f	6a 01		 push	 1
  01a71	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  01a76	81 c4 80 00 00
	00		 add	 esp, 128		; 00000080H
  01a7c	a3 00 00 00 00	 mov	 DWORD PTR ?player_commision_date_text@@3PAUUI_OBJECT@@A, eax

; 841  :             (
; 842  :                UI_TYPE_AREA,
; 843  :                UI_ATTR_PARENT (select_player_screen),
; 844  : 					UI_ATTR_VIRTUAL_POSITION (x1, y1),
; 845  : 					UI_ATTR_VIRTUAL_SIZE (x2, y2),
; 846  : 					UI_ATTR_CLEAR ( TRUE ),
; 847  : 					UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_16),
; 848  :      	 			UI_ATTR_FONT_COLOUR_START (ui_option_title_text_colour.r, ui_option_title_text_colour.g, ui_option_title_text_colour.b, 0),
; 849  :       			UI_ATTR_FONT_COLOUR_END (ui_option_title_text_colour.r, ui_option_title_text_colour.g, ui_option_title_text_colour.b, 255),
; 850  : 					UI_ATTR_TEXT_JUSTIFY (TEXT_JUSTIFY_RIGHT_CENTRE),
; 851  : 					UI_ATTR_TEXT (""),
; 852  :                UI_ATTR_END
; 853  :             );
; 854  : 
; 855  : 	rebuild_player_log_list ();

  01a81	e8 00 00 00 00	 call	 ?rebuild_player_log_list@@YGXXZ ; rebuild_player_log_list

; 856  : 
; 857  : }

  01a86	5f		 pop	 edi
  01a87	5e		 pop	 esi
  01a88	5b		 pop	 ebx
  01a89	8b e5		 mov	 esp, ebp
  01a8b	5d		 pop	 ebp
  01a8c	c3		 ret	 0
?initialise_select_player_screen@@YGXXZ ENDP		; initialise_select_player_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
