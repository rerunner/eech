; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\area\ar_size.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_area_ui_object_size_functions@@YGXH@Z	; overload_area_ui_object_size_functions
PUBLIC	__real@0000000000000000
EXTRN	?get_screen_width@@YGHPAUSCREEN@@@Z:PROC	; get_screen_width
EXTRN	?get_screen_height@@YGHPAUSCREEN@@@Z:PROC	; get_screen_height
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_set_ui_object_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_x_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size_end
EXTRN	?fn_get_ui_object_x_size_end@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size_end
EXTRN	?fn_set_ui_object_y_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size_end
EXTRN	?fn_get_ui_object_y_size_end@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size_end
EXTRN	?fn_set_ui_object_x_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_x_size_start
EXTRN	?fn_get_ui_object_x_size_start@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size_start
EXTRN	?fn_set_ui_object_y_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_y_size_start
EXTRN	?fn_get_ui_object_y_size_start@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size_start
EXTRN	?fn_set_ui_object_virtual_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_x_size
EXTRN	?fn_get_ui_object_virtual_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_x_size
EXTRN	?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA:BYTE ; fn_set_ui_object_virtual_y_size
EXTRN	?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_virtual_y_size
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	__fltused:DWORD
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_virtual_y_size@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv132 = -76						; size = 4
tv128 = -72						; size = 4
tv88 = -72						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_virtual_y_size@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_virtual_y_size, COMDAT

; 400  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 401  : 	
; 402  : 	area_ui_object
; 403  : 		*area;
; 404  : 
; 405  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 406  : 
; 407  : 	if (area->virtual_coords)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	c1 e9 02	 shr	 ecx, 2
  0001b	83 e1 01	 and	 ecx, 1
  0001e	74 14		 je	 SHORT $LN2@get_area_u

; 408  : 	{
; 409  : 
; 410  : 		return (area->y_size_start);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00023	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  00028	f3 0f 11 45 b8	 movss	 DWORD PTR tv88[ebp], xmm0
  0002d	d9 45 b8	 fld	 DWORD PTR tv88[ebp]
  00030	eb 2c		 jmp	 SHORT $LN3@get_area_u

; 411  : 	}
; 412  : 	else

  00032	eb 2a		 jmp	 SHORT $LN3@get_area_u
$LN2@get_area_u:

; 413  : 	{
; 414  : 
; 415  : 		return (area->y_size_start / get_ui_object_y_size (obj));

  00034	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00037	50		 push	 eax
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00044	ff d0		 call	 eax
  00046	d9 5d b8	 fstp	 DWORD PTR tv128[ebp]
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  0004c	f3 0f 10 41 1c	 movss	 xmm0, DWORD PTR [ecx+28]
  00051	f3 0f 5e 45 b8	 divss	 xmm0, DWORD PTR tv128[ebp]
  00056	f3 0f 11 45 b4	 movss	 DWORD PTR tv132[ebp], xmm0
  0005b	d9 45 b4	 fld	 DWORD PTR tv132[ebp]
$LN3@get_area_u:

; 416  : 	}
; 417  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?get_area_ui_object_virtual_y_size@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_virtual_y_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_virtual_y_size@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_size$ = 12						; size = 4
?set_area_ui_object_virtual_y_size@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_virtual_y_size, COMDAT

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 381  : 	
; 382  : 	area_ui_object
; 383  : 		*area;
; 384  : 
; 385  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 386  : 
; 387  : 	area->virtual_coords = TRUE;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	83 c9 04	 or	 ecx, 4
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0001e	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 388  : 
; 389  : 	area->y_size_start = y_size;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00029	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 390  : 	area->y_size_end = y_size;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00031	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00036	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 391  : 
; 392  : 	set_ui_object_redraw (obj, TRUE);

  0003b	6a 01		 push	 1
  0003d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0004d	ff d0		 call	 eax

; 393  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?set_area_ui_object_virtual_y_size@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_virtual_y_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_virtual_x_size@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv132 = -76						; size = 4
tv128 = -72						; size = 4
tv88 = -72						; size = 4
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_virtual_x_size@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_virtual_x_size, COMDAT

; 356  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 357  : 	
; 358  : 	area_ui_object
; 359  : 		*area;
; 360  : 
; 361  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 362  : 
; 363  : 	if (area->virtual_coords)

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	c1 e9 02	 shr	 ecx, 2
  0001b	83 e1 01	 and	 ecx, 1
  0001e	74 14		 je	 SHORT $LN2@get_area_u

; 364  : 	{
; 365  : 
; 366  : 		return (area->x_size_start);

  00020	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00023	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  00028	f3 0f 11 45 b8	 movss	 DWORD PTR tv88[ebp], xmm0
  0002d	d9 45 b8	 fld	 DWORD PTR tv88[ebp]
  00030	eb 2c		 jmp	 SHORT $LN3@get_area_u

; 367  : 	}
; 368  : 	else

  00032	eb 2a		 jmp	 SHORT $LN3@get_area_u
$LN2@get_area_u:

; 369  : 	{
; 370  : 
; 371  : 		return (area->x_size_start / get_ui_object_x_size (obj));

  00034	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00037	50		 push	 eax
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00044	ff d0		 call	 eax
  00046	d9 5d b8	 fstp	 DWORD PTR tv128[ebp]
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _area$[ebp]
  0004c	f3 0f 10 41 18	 movss	 xmm0, DWORD PTR [ecx+24]
  00051	f3 0f 5e 45 b8	 divss	 xmm0, DWORD PTR tv128[ebp]
  00056	f3 0f 11 45 b4	 movss	 DWORD PTR tv132[ebp], xmm0
  0005b	d9 45 b4	 fld	 DWORD PTR tv132[ebp]
$LN3@get_area_u:

; 372  : 	}
; 373  : }

  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi
  00060	5b		 pop	 ebx
  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c2 04 00	 ret	 4
?get_area_ui_object_virtual_x_size@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_virtual_x_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_virtual_x_size@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x_size$ = 12						; size = 4
?set_area_ui_object_virtual_x_size@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_virtual_x_size, COMDAT

; 336  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 337  : 	
; 338  : 	area_ui_object
; 339  : 		*area;
; 340  : 
; 341  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 342  : 
; 343  : 	area->virtual_coords = TRUE;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00018	83 c9 04	 or	 ecx, 4
  0001b	8b 55 fc	 mov	 edx, DWORD PTR _area$[ebp]
  0001e	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 344  : 
; 345  : 	area->x_size_start = x_size;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00024	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  00029	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 346  : 	area->x_size_end = x_size;

  0002e	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00031	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  00036	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 347  : 
; 348  : 	set_ui_object_redraw (obj, TRUE);

  0003b	6a 01		 push	 1
  0003d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00040	50		 push	 eax
  00041	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00044	8b 11		 mov	 edx, DWORD PTR [ecx]
  00046	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0004d	ff d0		 call	 eax

; 349  : }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 08 00	 ret	 8
?set_area_ui_object_virtual_x_size@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_virtual_x_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_y_size_start@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_size_start@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_y_size_start, COMDAT

; 321  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 322  : 
; 323  : 	area_ui_object
; 324  : 		*area;
; 325  : 
; 326  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 327  : 
; 328  : 	return area->y_size_start;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 1c	 fld	 DWORD PTR [eax+28]

; 329  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_y_size_start@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_y_size_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_y_size_start@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_size$ = 12						; size = 4
?set_area_ui_object_y_size_start@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_y_size_start, COMDAT

; 304  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 305  : 	
; 306  : 	area_ui_object
; 307  : 		*area;
; 308  : 
; 309  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 310  : 
; 311  : 	area->y_size_start = y_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  0001a	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 312  : 
; 313  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 314  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_y_size_start@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_y_size_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_x_size_start@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_size_start@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_x_size_start, COMDAT

; 289  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 290  : 	
; 291  : 	area_ui_object
; 292  : 		*area;
; 293  : 
; 294  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 295  : 
; 296  : 	return area->x_size_start;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 18	 fld	 DWORD PTR [eax+24]

; 297  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_x_size_start@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_x_size_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_x_size_start@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x_size$ = 12						; size = 4
?set_area_ui_object_x_size_start@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_x_size_start, COMDAT

; 272  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 273  : 	
; 274  : 	area_ui_object
; 275  : 		*area;
; 276  : 
; 277  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 278  : 
; 279  : 	area->x_size_start = x_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  0001a	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 280  : 
; 281  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 282  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_x_size_start@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_x_size_start
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_y_size_end@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_size_end@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_y_size_end, COMDAT

; 257  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 258  : 
; 259  : 	area_ui_object
; 260  : 		*area;
; 261  : 
; 262  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 263  : 
; 264  : 	return area->x_size_end;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 10	 fld	 DWORD PTR [eax+16]

; 265  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_y_size_end@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_y_size_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_y_size_end@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_size$ = 12						; size = 4
?set_area_ui_object_y_size_end@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_y_size_end, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 	
; 242  : 	area_ui_object
; 243  : 		*area;
; 244  : 
; 245  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 246  : 
; 247  : 	area->y_size_end = y_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  0001a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 248  : 
; 249  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 250  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_y_size_end@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_y_size_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_x_size_end@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_size_end@@YGMPAUUI_OBJECT@@@Z PROC ; get_area_ui_object_x_size_end, COMDAT

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 226  : 
; 227  : 	area_ui_object
; 228  : 		*area;
; 229  : 
; 230  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 231  : 
; 232  : 	return area->x_size_end;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	d9 40 10	 fld	 DWORD PTR [eax+16]

; 233  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 04 00	 ret	 4
?get_area_ui_object_x_size_end@@YGMPAUUI_OBJECT@@@Z ENDP ; get_area_ui_object_x_size_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_x_size_end@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x_size$ = 12						; size = 4
?set_area_ui_object_x_size_end@@YGXPAUUI_OBJECT@@M@Z PROC ; set_area_ui_object_x_size_end, COMDAT

; 208  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 209  : 	
; 210  : 	area_ui_object
; 211  : 		*area;
; 212  : 
; 213  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 214  : 
; 215  : 	area->x_size_end = x_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  0001a	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 216  : 
; 217  : 	set_ui_object_redraw (obj, TRUE);

  0001f	6a 01		 push	 1
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00031	ff d0		 call	 eax

; 218  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_area_ui_object_x_size_end@@YGXPAUUI_OBJECT@@M@Z ENDP ; set_area_ui_object_x_size_end
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_y_size@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv159 = -80						; size = 4
_parent$1 = -12						; size = 4
_area$ = -8						; size = 4
_size$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_y_size@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_y_size, COMDAT

; 159  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 160  : 
; 161  : 	float
; 162  : 		size;
; 163  : 	
; 164  : 	area_ui_object
; 165  : 		*area;
; 166  : 
; 167  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 168  : 
; 169  : 	if (area->time_length != 0.0)

  00012	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f2 0f 2a 80 b8
	00 00 00	 cvtsi2sd xmm0, DWORD PTR [eax+184]
  0001d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00025	9f		 lahf
  00026	f6 c4 44	 test	 ah, 68			; 00000044H
  00029	7b 39		 jnp	 SHORT $LN2@get_area_u

; 170  : 	{
; 171  : 
; 172  : 		size = area->y_size_start + ((area->y_size_end - area->y_size_start) * area->t) / area->time_length;

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00031	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  00036	f3 0f 5c 41 1c	 subss	 xmm0, DWORD PTR [ecx+28]
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _area$[ebp]
  0003e	f3 0f 59 82 ac
	00 00 00	 mulss	 xmm0, DWORD PTR [edx+172]
  00046	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00049	f3 0f 2a 88 b8
	00 00 00	 cvtsi2ss xmm1, DWORD PTR [eax+184]
  00051	f3 0f 5e c1	 divss	 xmm0, xmm1
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00058	f3 0f 58 41 1c	 addss	 xmm0, DWORD PTR [ecx+28]
  0005d	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 173  : 	}
; 174  : 	else

  00062	eb 0d		 jmp	 SHORT $LN3@get_area_u
$LN2@get_area_u:

; 175  : 	{
; 176  : 
; 177  : 		size = area->y_size_start;

  00064	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00067	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  0006c	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0
$LN3@get_area_u:

; 178  : 	}
; 179  : 
; 180  : 	if (area->virtual_coords)

  00071	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00074	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00077	c1 e9 02	 shr	 ecx, 2
  0007a	83 e1 01	 and	 ecx, 1
  0007d	74 5a		 je	 SHORT $LN6@get_area_u

; 181  : 	{
; 182  : 
; 183  : 		ui_object
; 184  : 			*parent;
; 185  : 
; 186  : 		parent = get_ui_object_parent (obj);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	89 45 f4	 mov	 DWORD PTR _parent$1[ebp], eax

; 187  : 
; 188  : 		if (parent)

  00094	83 7d f4 00	 cmp	 DWORD PTR _parent$1[ebp], 0
  00098	74 26		 je	 SHORT $LN5@get_area_u

; 189  : 		{
; 190  : 
; 191  : 			size *= get_ui_object_y_size (parent);

  0009a	8b 45 f4	 mov	 eax, DWORD PTR _parent$1[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000aa	ff d0		 call	 eax
  000ac	d9 5d b0	 fstp	 DWORD PTR tv159[ebp]
  000af	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv159[ebp]
  000b4	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _size$[ebp]
  000b9	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 192  : 		}
; 193  : 		else

  000be	eb 19		 jmp	 SHORT $LN6@get_area_u
$LN5@get_area_u:

; 194  : 		{
; 195  : 
; 196  : 			size *= get_screen_height (video_screen);

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?get_screen_height@@YGHPAUSCREEN@@@Z ; get_screen_height
  000cb	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000cf	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _size$[ebp]
  000d4	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0
$LN6@get_area_u:

; 197  : 		}
; 198  : 	}
; 199  : 
; 200  : 	return size;

  000d9	d9 45 fc	 fld	 DWORD PTR _size$[ebp]

; 201  : }

  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c2 04 00	 ret	 4
?get_area_ui_object_y_size@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_y_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_y_size@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_y_size$ = 12						; size = 4
?set_area_ui_object_y_size@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_y_size, COMDAT

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 142  : 	
; 143  : 	area_ui_object
; 144  : 		*area;
; 145  : 
; 146  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 147  : 
; 148  : 	area->y_size_end = y_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  0001a	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 149  : 	area->y_size_start = y_size;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00022	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y_size$[ebp]
  00027	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 150  : 
; 151  : 	set_ui_object_redraw (obj, TRUE);

  0002c	6a 01		 push	 1
  0002e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003e	ff d0		 call	 eax

; 152  : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?set_area_ui_object_y_size@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_y_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?get_area_ui_object_x_size@@YGMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv159 = -80						; size = 4
_parent$1 = -12						; size = 4
_area$ = -8						; size = 4
_size$ = -4						; size = 4
_obj$ = 8						; size = 4
?get_area_ui_object_x_size@@YGMPAUUI_OBJECT@@@Z PROC	; get_area_ui_object_x_size, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 93   : 
; 94   : 	float
; 95   : 		size;
; 96   : 	
; 97   : 	area_ui_object
; 98   : 		*area;
; 99   : 
; 100  : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d f8	 mov	 DWORD PTR _area$[ebp], ecx

; 101  : 
; 102  : 	if (area->time_length != 0.0)

  00012	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f2 0f 2a 80 b8
	00 00 00	 cvtsi2sd xmm0, DWORD PTR [eax+184]
  0001d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00025	9f		 lahf
  00026	f6 c4 44	 test	 ah, 68			; 00000044H
  00029	7b 39		 jnp	 SHORT $LN2@get_area_u

; 103  : 	{
; 104  : 
; 105  : 		size = area->x_size_start + ((area->x_size_end - area->x_size_start) * area->t) / area->time_length;

  0002b	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  0002e	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00031	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00036	f3 0f 5c 41 18	 subss	 xmm0, DWORD PTR [ecx+24]
  0003b	8b 55 f8	 mov	 edx, DWORD PTR _area$[ebp]
  0003e	f3 0f 59 82 ac
	00 00 00	 mulss	 xmm0, DWORD PTR [edx+172]
  00046	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00049	f3 0f 2a 88 b8
	00 00 00	 cvtsi2ss xmm1, DWORD PTR [eax+184]
  00051	f3 0f 5e c1	 divss	 xmm0, xmm1
  00055	8b 4d f8	 mov	 ecx, DWORD PTR _area$[ebp]
  00058	f3 0f 58 41 18	 addss	 xmm0, DWORD PTR [ecx+24]
  0005d	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 106  : 	}
; 107  : 	else

  00062	eb 0d		 jmp	 SHORT $LN3@get_area_u
$LN2@get_area_u:

; 108  : 	{
; 109  : 
; 110  : 		size = area->x_size_start;

  00064	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00067	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  0006c	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0
$LN3@get_area_u:

; 111  : 	}
; 112  : 
; 113  : 	if (area->virtual_coords)

  00071	8b 45 f8	 mov	 eax, DWORD PTR _area$[ebp]
  00074	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00077	c1 e9 02	 shr	 ecx, 2
  0007a	83 e1 01	 and	 ecx, 1
  0007d	74 5a		 je	 SHORT $LN6@get_area_u

; 114  : 	{
; 115  : 
; 116  : 		ui_object
; 117  : 			*parent;
; 118  : 
; 119  : 		parent = get_ui_object_parent (obj);

  0007f	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00082	50		 push	 eax
  00083	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0008f	ff d0		 call	 eax
  00091	89 45 f4	 mov	 DWORD PTR _parent$1[ebp], eax

; 120  : 
; 121  : 		if (parent)

  00094	83 7d f4 00	 cmp	 DWORD PTR _parent$1[ebp], 0
  00098	74 26		 je	 SHORT $LN5@get_area_u

; 122  : 		{
; 123  : 
; 124  : 			size *= get_ui_object_x_size (parent);

  0009a	8b 45 f4	 mov	 eax, DWORD PTR _parent$1[ebp]
  0009d	50		 push	 eax
  0009e	8b 4d f4	 mov	 ecx, DWORD PTR _parent$1[ebp]
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000aa	ff d0		 call	 eax
  000ac	d9 5d b0	 fstp	 DWORD PTR tv159[ebp]
  000af	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv159[ebp]
  000b4	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _size$[ebp]
  000b9	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0

; 125  : 		}
; 126  : 		else

  000be	eb 19		 jmp	 SHORT $LN6@get_area_u
$LN5@get_area_u:

; 127  : 		{
; 128  : 
; 129  : 			size *= get_screen_width (video_screen);

  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?get_screen_width@@YGHPAUSCREEN@@@Z ; get_screen_width
  000cb	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000cf	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _size$[ebp]
  000d4	f3 0f 11 45 fc	 movss	 DWORD PTR _size$[ebp], xmm0
$LN6@get_area_u:

; 130  : 		}
; 131  : 	}
; 132  : 
; 133  : 	return size;

  000d9	d9 45 fc	 fld	 DWORD PTR _size$[ebp]

; 134  : }

  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	8b e5		 mov	 esp, ebp
  000e1	5d		 pop	 ebp
  000e2	c2 04 00	 ret	 4
?get_area_ui_object_x_size@@YGMPAUUI_OBJECT@@@Z ENDP	; get_area_ui_object_x_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?set_area_ui_object_x_size@@YGXPAUUI_OBJECT@@M@Z
_TEXT	SEGMENT
_area$ = -4						; size = 4
_obj$ = 8						; size = 4
_x_size$ = 12						; size = 4
?set_area_ui_object_x_size@@YGXPAUUI_OBJECT@@M@Z PROC	; set_area_ui_object_x_size, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 	
; 76   : 	area_ui_object
; 77   : 		*area;
; 78   : 
; 79   : 	area = (area_ui_object *) obj->data;

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _area$[ebp], ecx

; 80   : 
; 81   : 	area->x_size_end = x_size;

  00012	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00015	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  0001a	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 82   : 	area->x_size_start = x_size;

  0001f	8b 45 fc	 mov	 eax, DWORD PTR _area$[ebp]
  00022	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _x_size$[ebp]
  00027	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 83   : 
; 84   : 	set_ui_object_redraw (obj, TRUE);

  0002c	6a 01		 push	 1
  0002e	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0003e	ff d0		 call	 eax

; 85   : }

  00040	5f		 pop	 edi
  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	8b e5		 mov	 esp, ebp
  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
?set_area_ui_object_x_size@@YGXPAUUI_OBJECT@@M@Z ENDP	; set_area_ui_object_x_size
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\area\ar_size.c
;	COMDAT ?overload_area_ui_object_size_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_area_ui_object_size_functions@@YGXH@Z PROC	; overload_area_ui_object_size_functions, COMDAT

; 424  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 425  : 
; 426  : 	fn_set_ui_object_x_size [type] = set_area_ui_object_x_size;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_size@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_size

; 427  : 
; 428  : 	fn_get_ui_object_x_size [type] = get_area_ui_object_x_size;

  00017	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0001a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_size@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_size

; 429  : 
; 430  : 
; 431  : 	fn_set_ui_object_y_size [type] = set_area_ui_object_y_size;

  00025	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00028	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_size@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_size

; 432  : 
; 433  : 	fn_get_ui_object_y_size [type] = get_area_ui_object_y_size;

  00033	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00036	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_size@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_size

; 434  : 
; 435  : 
; 436  : 	fn_set_ui_object_x_size_end [type] = set_area_ui_object_x_size_end;

  00041	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00044	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_size_end@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_size_end

; 437  : 
; 438  : 	fn_get_ui_object_x_size_end [type] = get_area_ui_object_x_size_end;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00052	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_size_end@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_size_end@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_size_end

; 439  : 
; 440  : 
; 441  : 	fn_set_ui_object_y_size_end [type] = set_area_ui_object_y_size_end;

  0005d	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00060	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_size_end@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_size_end@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_size_end

; 442  : 
; 443  : 	fn_get_ui_object_y_size_end [type] = get_area_ui_object_y_size_end;

  0006b	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0006e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_size_end@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_size_end@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_size_end

; 444  : 
; 445  : 
; 446  : 	fn_set_ui_object_x_size_start [type] = set_area_ui_object_x_size_start;

  00079	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0007c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_x_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_x_size_start@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_x_size_start

; 447  : 
; 448  : 	fn_get_ui_object_x_size_start [type] = get_area_ui_object_x_size_start;

  00087	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0008a	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_x_size_start@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_x_size_start@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_x_size_start

; 449  : 
; 450  : 
; 451  : 	fn_set_ui_object_y_size_start [type] = set_area_ui_object_y_size_start;

  00095	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00098	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_y_size_start@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_y_size_start@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_y_size_start

; 452  : 
; 453  : 	fn_get_ui_object_y_size_start [type] = get_area_ui_object_y_size_start;

  000a3	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000a6	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_y_size_start@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_y_size_start@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_y_size_start

; 454  : 
; 455  : 
; 456  : 	fn_set_ui_object_virtual_x_size [type] = set_area_ui_object_virtual_x_size;

  000b1	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000b4	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_virtual_x_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_virtual_x_size@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_virtual_x_size

; 457  : 
; 458  : 	fn_get_ui_object_virtual_x_size [type] = get_area_ui_object_virtual_x_size;

  000bf	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000c2	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_virtual_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_virtual_x_size@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_virtual_x_size

; 459  : 
; 460  : 
; 461  : 	fn_set_ui_object_virtual_y_size [type] = set_area_ui_object_virtual_y_size;

  000cd	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000d0	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_set_ui_object_virtual_y_size@@3PAP6GXPAUUI_OBJECT@@M@ZA[eax*4], OFFSET ?set_area_ui_object_virtual_y_size@@YGXPAUUI_OBJECT@@M@Z ; set_area_ui_object_virtual_y_size

; 462  : 
; 463  : 	fn_get_ui_object_virtual_y_size [type] = get_area_ui_object_virtual_y_size;

  000db	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  000de	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_get_ui_object_virtual_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?get_area_ui_object_virtual_y_size@@YGMPAUUI_OBJECT@@@Z ; get_area_ui_object_virtual_y_size

; 464  : }

  000e9	5f		 pop	 edi
  000ea	5e		 pop	 esi
  000eb	5b		 pop	 ebx
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c2 04 00	 ret	 4
?overload_area_ui_object_size_functions@@YGXH@Z ENDP	; overload_area_ui_object_size_functions
_TEXT	ENDS
END
