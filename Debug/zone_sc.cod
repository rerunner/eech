; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?valid_combat_zone@@3HA				; valid_combat_zone
PUBLIC	?combat_zone_text_area@@3PAUUI_OBJECT@@A	; combat_zone_text_area
PUBLIC	?combat_zone_screen@@3PAUUI_OBJECT@@A		; combat_zone_screen
_BSS	SEGMENT
?valid_combat_zone@@3HA DD 01H DUP (?)			; valid_combat_zone
?combat_zone_text_area@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; combat_zone_text_area
?combat_zone_screen@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; combat_zone_screen
_BSS	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?set_briefing_side@@YGXH@Z			; set_briefing_side
PUBLIC	?initialise_combat_zone_screen@@YGXXZ		; initialise_combat_zone_screen
PUBLIC	?load_3d_terrain_game_data@@YGXXZ		; load_3d_terrain_game_data
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?__LINE__Var@?0??notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z@4JA ; `notify_combat_zone_screen'::`1'::__LINE__Var
PUBLIC	??_C@_0EE@KADOOOJC@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ ; `string'
PUBLIC	??_C@_0L@OBCFCENC@?$CFs?2terrain@		; `string'
PUBLIC	??_C@_0CA@POKKBJID@ZONE_FN?3?5unable?5to?5load?5terrain@ ; `string'
PUBLIC	?__LINE__Var@?0??combat_zone_read_text@@YGHXZ@4JA ; `combat_zone_read_text'::`1'::__LINE__Var
PUBLIC	??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@		; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0BK@HMBNLIAL@get_current_player_log?5?$CI?$CJ@ ; `string'
PUBLIC	__real@4024000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@403c000000000000
PUBLIC	__real@405e000000000000
PUBLIC	__real@407a400000000000
PUBLIC	__real@407ba00000000000
PUBLIC	__real@407e000000000000
PUBLIC	__real@4083600000000000
PUBLIC	__real@4084000000000000
EXTRN	__imp__fclose:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_strcmp:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?safe_fopen@@YGPAU_iobuf@@PBD0@Z:PROC		; safe_fopen
EXTRN	?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z:PROC	; get_next_file_tag
EXTRN	?get_next_file_int@@YGHPAU_iobuf@@@Z:PROC	; get_next_file_int
EXTRN	?get_next_file_string@@YGHPAU_iobuf@@PADH@Z:PROC ; get_next_file_string
EXTRN	?get_next_file_word@@YGHPAU_iobuf@@PADH@Z:PROC	; get_next_file_word
EXTRN	?if_file_tag_variable@@YGHPBD0H@Z:PROC		; if_file_tag_variable
EXTRN	?create_ui_object@@YAPAUUI_OBJECT@@HZZ:PROC	; create_ui_object
EXTRN	?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z:PROC	; destroy_ui_object
EXTRN	?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z:PROC	; pop_ui_screen
EXTRN	?load_3d_terrain@@YGHPBD@Z:PROC			; load_3d_terrain
EXTRN	?unload_3d_terrain@@YGXXZ:PROC			; unload_3d_terrain
EXTRN	?load_2d_terrain@@YGXPBD@Z:PROC			; load_2d_terrain
EXTRN	?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ:PROC ; get_current_player_log
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_child
EXTRN	?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_next
EXTRN	?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA:BYTE ; fn_set_ui_object_graphic
EXTRN	?graphics_files@@3PAUFILE_DATA@@A:BYTE		; graphics_files
EXTRN	?application_tag_strings@@3PAPBDA:BYTE		; application_tag_strings
EXTRN	?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A:DWORD ; current_game_session
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT __real@4084000000000000
CONST	SEGMENT
__real@4084000000000000 DQ 04084000000000000r	; 640
CONST	ENDS
;	COMDAT __real@4083600000000000
CONST	SEGMENT
__real@4083600000000000 DQ 04083600000000000r	; 620
CONST	ENDS
;	COMDAT __real@407e000000000000
CONST	SEGMENT
__real@407e000000000000 DQ 0407e000000000000r	; 480
CONST	ENDS
;	COMDAT __real@407ba00000000000
CONST	SEGMENT
__real@407ba00000000000 DQ 0407ba00000000000r	; 442
CONST	ENDS
;	COMDAT __real@407a400000000000
CONST	SEGMENT
__real@407a400000000000 DQ 0407a400000000000r	; 420
CONST	ENDS
;	COMDAT __real@405e000000000000
CONST	SEGMENT
__real@405e000000000000 DQ 0405e000000000000r	; 120
CONST	ENDS
;	COMDAT __real@403c000000000000
CONST	SEGMENT
__real@403c000000000000 DQ 0403c000000000000r	; 28
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT ??_C@_0BK@HMBNLIAL@get_current_player_log?5?$CI?$CJ@
CONST	SEGMENT
??_C@_0BK@HMBNLIAL@get_current_player_log?5?$CI?$CJ@ DB 'get_current_play'
	DB	'er_log ()', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@
CONST	SEGMENT
??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@ DB '%s\%s\%s', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??combat_zone_read_text@@YGHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??combat_zone_read_text@@YGHXZ@4JA DD 0f5H ; `combat_zone_read_text'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CA@POKKBJID@ZONE_FN?3?5unable?5to?5load?5terrain@
CONST	SEGMENT
??_C@_0CA@POKKBJID@ZONE_FN?3?5unable?5to?5load?5terrain@ DB 'ZONE_FN: una'
	DB	'ble to load terrain', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OBCFCENC@?$CFs?2terrain@
CONST	SEGMENT
??_C@_0L@OBCFCENC@?$CFs?2terrain@ DB '%s\terrain', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
CONST	SEGMENT
??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@ DB 'get_valid_curren'
	DB	't_game_session ()', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@KADOOOJC@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EE@KADOOOJC@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z@4JA DD 09aH ; `notify_combat_zone_screen'::`1'::__LINE__Var
_DATA	ENDS
_DATA	SEGMENT
?briefing_red_forces@@3HA DD 01H			; briefing_red_forces
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?combat_zone_read_text@@YGHXZ
_TEXT	SEGMENT
tv92 = -2528						; size = 4
_tag$ = -2204						; size = 4
_filename$ = -2200					; size = 1024
_line$ = -1176						; size = 1024
_operator_$ = -152					; size = 64
_variable$ = -88					; size = 64
_file_ptr$ = -24					; size = 4
_line_count$ = -20					; size = 4
_value$ = -16						; size = 4
_long_text_flag$ = -12					; size = 4
_destroy_ui_line$ = -8					; size = 4
_ui_line$ = -4						; size = 4
?combat_zone_read_text@@YGHXZ PROC			; combat_zone_read_text, COMDAT

; 245  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e0 09 00
	00		 sub	 esp, 2528		; 000009e0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 246  : 
; 247  : 	ui_object
; 248  : 		*ui_line,
; 249  : 		*destroy_ui_line;
; 250  : 
; 251  : 	int
; 252  : 		long_text_flag,
; 253  : 		value,
; 254  : 		line_count;
; 255  : 
; 256  : 	FILE
; 257  : 		*file_ptr;
; 258  : 
; 259  : 	char
; 260  : 		variable [64],
; 261  : 		operator_ [64],
; 262  : 		line [1024],
; 263  : 		filename [1024];
; 264  : 
; 265  : 	file_tags
; 266  : 		tag;
; 267  : 
; 268  : 	ui_line = get_ui_object_child (combat_zone_text_area);

  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_text_area@@3PAUUI_OBJECT@@A ; combat_zone_text_area
  00011	50		 push	 eax
  00012	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?combat_zone_text_area@@3PAUUI_OBJECT@@A ; combat_zone_text_area
  00018	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_child@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00021	ff d0		 call	 eax
  00023	89 45 fc	 mov	 DWORD PTR _ui_line$[ebp], eax
$LN2@combat_zon:

; 269  : 
; 270  : 	while (ui_line)

  00026	83 7d fc 00	 cmp	 DWORD PTR _ui_line$[ebp], 0
  0002a	74 26		 je	 SHORT $LN3@combat_zon

; 271  : 	{
; 272  : 
; 273  : 		destroy_ui_line = ui_line;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _ui_line$[ebp]
  0002f	89 45 f8	 mov	 DWORD PTR _destroy_ui_line$[ebp], eax

; 274  : 
; 275  : 		ui_line = get_ui_object_next (ui_line);

  00032	8b 45 fc	 mov	 eax, DWORD PTR _ui_line$[ebp]
  00035	50		 push	 eax
  00036	8b 4d fc	 mov	 ecx, DWORD PTR _ui_line$[ebp]
  00039	8b 11		 mov	 edx, DWORD PTR [ecx]
  0003b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_next@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00042	ff d0		 call	 eax
  00044	89 45 fc	 mov	 DWORD PTR _ui_line$[ebp], eax

; 276  : 
; 277  : 		destroy_ui_object (destroy_ui_line);

  00047	8b 45 f8	 mov	 eax, DWORD PTR _destroy_ui_line$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z ; destroy_ui_object

; 278  : 	}

  00050	eb d4		 jmp	 SHORT $LN2@combat_zon
$LN3@combat_zon:

; 279  : 
; 280  : 	//
; 281  : 	//
; 282  : 	//
; 283  : 
; 284  : 	line_count = 0;

  00052	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _line_count$[ebp], 0

; 285  : 
; 286  : 	sprintf (filename, "%s\\%s\\%s", current_game_session->data_path, current_game_session->campaign_directory, current_game_session->campaign_filename);

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0005e	05 5c 01 00 00	 add	 eax, 348		; 0000015cH
  00063	50		 push	 eax
  00064	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  0006a	81 c1 1c 01 00
	00		 add	 ecx, 284		; 0000011cH
  00070	51		 push	 ecx
  00071	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00077	83 c2 1c	 add	 edx, 28			; 0000001cH
  0007a	52		 push	 edx
  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_08EFGGCJLD@?$CFs?2?$CFs?2?$CFs@
  00080	8d 85 68 f7 ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  00086	50		 push	 eax
  00087	e8 00 00 00 00	 call	 _sprintf
  0008c	83 c4 14	 add	 esp, 20			; 00000014H

; 287  : 
; 288  : 	file_ptr = safe_fopen (filename, "r");

  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  00094	8d 85 68 f7 ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  0009a	50		 push	 eax
  0009b	e8 00 00 00 00	 call	 ?safe_fopen@@YGPAU_iobuf@@PBD0@Z ; safe_fopen
  000a0	89 45 e8	 mov	 DWORD PTR _file_ptr$[ebp], eax

; 289  : 
; 290  : 	long_text_flag = FALSE;

  000a3	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _long_text_flag$[ebp], 0
$LN4@combat_zon:

; 291  : 
; 292  : 	while (TRUE)

  000aa	b8 01 00 00 00	 mov	 eax, 1
  000af	85 c0		 test	 eax, eax
  000b1	0f 84 52 02 00
	00		 je	 $LN5@combat_zon

; 293  : 	{
; 294  : 
; 295  : 		tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG);

  000b7	68 af 00 00 00	 push	 175			; 000000afH
  000bc	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  000c1	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  000c4	50		 push	 eax
  000c5	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  000ca	89 85 64 f7 ff
	ff		 mov	 DWORD PTR _tag$[ebp], eax

; 296  : 
; 297  : 		switch (tag)

  000d0	8b 85 64 f7 ff
	ff		 mov	 eax, DWORD PTR _tag$[ebp]
  000d6	89 85 20 f6 ff
	ff		 mov	 DWORD PTR tv92[ebp], eax
  000dc	8b 8d 20 f6 ff
	ff		 mov	 ecx, DWORD PTR tv92[ebp]
  000e2	83 c1 11	 add	 ecx, 17			; 00000011H
  000e5	89 8d 20 f6 ff
	ff		 mov	 DWORD PTR tv92[ebp], ecx
  000eb	83 bd 20 f6 ff
	ff 69		 cmp	 DWORD PTR tv92[ebp], 105 ; 00000069H
  000f2	0f 87 0c 02 00
	00		 ja	 $LN6@combat_zon
  000f8	8b 95 20 f6 ff
	ff		 mov	 edx, DWORD PTR tv92[ebp]
  000fe	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN31@combat_zon[edx]
  00105	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN32@combat_zon[eax*4]
$LN16@combat_zon:

; 298  : 		{
; 299  : 
; 300  : 			case FILE_TAG_LANGUAGE_TEXT_START:
; 301  : 			{
; 302  : 
; 303  : 				get_next_file_word (file_ptr, operator_, sizeof (operator_));

  0010c	6a 40		 push	 64			; 00000040H
  0010e	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _operator_$[ebp]
  00114	50		 push	 eax
  00115	8b 4d e8	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00118	51		 push	 ecx
  00119	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word
$LN8@combat_zon:

; 304  : 
; 305  : 				// skip script till correct language
; 306  : 
; 307  : 				while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  0011e	68 af 00 00 00	 push	 175			; 000000afH
  00123	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00128	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00131	89 85 64 f7 ff
	ff		 mov	 DWORD PTR _tag$[ebp], eax
  00137	83 bd 64 f7 ff
	ff 00		 cmp	 DWORD PTR _tag$[ebp], 0
  0013e	74 18		 je	 SHORT $LN9@combat_zon

; 308  : 				{
; 309  : 
; 310  : 					#if (LANGUAGE == LANGUAGE_FRENCH)
; 311  : 
; 312  : 					if (tag == FILE_TAG_LANGUAGE_FRENCH)

  00140	83 bd 64 f7 ff
	ff 4e		 cmp	 DWORD PTR _tag$[ebp], 78 ; 0000004eH
  00147	75 02		 jne	 SHORT $LN17@combat_zon

; 313  : 					{
; 314  : 
; 315  : 						break;

  00149	eb 0d		 jmp	 SHORT $LN9@combat_zon
$LN17@combat_zon:

; 316  : 					}
; 317  : 					#elif (LANGUAGE == LANGUAGE_GERMAN)
; 318  : 
; 319  : 					if (tag == FILE_TAG_LANGUAGE_GERMAN)
; 320  : 					{
; 321  : 
; 322  : 						break;
; 323  : 					}
; 324  : 					#elif (LANGUAGE == LANGUAGE_ITALIAN)
; 325  : 
; 326  : 					if (tag == FILE_TAG_LANGUAGE_ITALIAN)
; 327  : 					{
; 328  : 
; 329  : 						break;
; 330  : 					}
; 331  : 					#elif (LANGUAGE == LANGUAGE_SPANISH)
; 332  : 
; 333  : 					if (tag == FILE_TAG_LANGUAGE_SPANISH)
; 334  : 					{
; 335  : 
; 336  : 						break;
; 337  : 					}
; 338  : 					#else //LANGUAGE_ENGLISH
; 339  : 
; 340  : 					if (tag == FILE_TAG_LANGUAGE_ENGLISH)
; 341  : 					{
; 342  : 
; 343  : 						break;
; 344  : 					}
; 345  : 					#endif
; 346  : 
; 347  : 					if (tag == FILE_TAG_LANGUAGE_TEXT_STOP)

  0014b	83 bd 64 f7 ff
	ff 55		 cmp	 DWORD PTR _tag$[ebp], 85 ; 00000055H
  00152	75 02		 jne	 SHORT $LN18@combat_zon

; 348  : 					{
; 349  : 
; 350  : 						break;

  00154	eb 02		 jmp	 SHORT $LN9@combat_zon
$LN18@combat_zon:

; 351  : 					}
; 352  : 				}

  00156	eb c6		 jmp	 SHORT $LN8@combat_zon
$LN9@combat_zon:

; 353  : 
; 354  : 				break;

  00158	e9 a7 01 00 00	 jmp	 $LN6@combat_zon
$LN19@combat_zon:

; 355  : 			}
; 356  : 
; 357  : 			case FILE_TAG_LANGUAGE_TEXT_END:
; 358  : 			{
; 359  : 
; 360  : 				get_next_file_word (file_ptr, operator_, sizeof (operator_));

  0015d	6a 40		 push	 64			; 00000040H
  0015f	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _operator_$[ebp]
  00165	50		 push	 eax
  00166	8b 4d e8	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  00169	51		 push	 ecx
  0016a	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word
$LN10@combat_zon:

; 361  : 
; 362  : 				// skip script till end of languages
; 363  : 
; 364  : 				while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  0016f	68 af 00 00 00	 push	 175			; 000000afH
  00174	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  00179	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  0017c	50		 push	 eax
  0017d	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  00182	89 85 64 f7 ff
	ff		 mov	 DWORD PTR _tag$[ebp], eax
  00188	83 bd 64 f7 ff
	ff 00		 cmp	 DWORD PTR _tag$[ebp], 0
  0018f	74 0d		 je	 SHORT $LN11@combat_zon

; 365  : 				{
; 366  : 
; 367  : 					if (tag == FILE_TAG_LANGUAGE_TEXT_STOP)

  00191	83 bd 64 f7 ff
	ff 55		 cmp	 DWORD PTR _tag$[ebp], 85 ; 00000055H
  00198	75 02		 jne	 SHORT $LN20@combat_zon

; 368  : 					{
; 369  : 
; 370  : 						break;

  0019a	eb 02		 jmp	 SHORT $LN11@combat_zon
$LN20@combat_zon:

; 371  : 					}
; 372  : 				}

  0019c	eb d1		 jmp	 SHORT $LN10@combat_zon
$LN11@combat_zon:

; 373  : 
; 374  : 				break;

  0019e	e9 61 01 00 00	 jmp	 $LN6@combat_zon
$LN21@combat_zon:

; 375  : 			}
; 376  : 
; 377  : 			case FILE_TAG_LONG_TEXT_START:
; 378  : 			{
; 379  : 
; 380  : 				long_text_flag = TRUE;

  001a3	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _long_text_flag$[ebp], 1
$LN12@combat_zon:

; 381  : 
; 382  : 				while (TRUE)

  001aa	b8 01 00 00 00	 mov	 eax, 1
  001af	85 c0		 test	 eax, eax
  001b1	0f 84 92 00 00
	00		 je	 $LN13@combat_zon

; 383  : 				{
; 384  : 
; 385  : 					get_next_file_string (file_ptr, line, sizeof (line));

  001b7	68 00 04 00 00	 push	 1024			; 00000400H
  001bc	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR _line$[ebp]
  001c2	50		 push	 eax
  001c3	8b 4d e8	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  001c6	51		 push	 ecx
  001c7	e8 00 00 00 00	 call	 ?get_next_file_string@@YGHPAU_iobuf@@PADH@Z ; get_next_file_string

; 386  : 
; 387  : 					if (strcmp ((line + 1), application_tag_strings [FILE_TAG_TEXT_END]) == 0)

  001cc	b8 04 00 00 00	 mov	 eax, 4
  001d1	69 c8 9f 00 00
	00		 imul	 ecx, eax, 159
  001d7	8b 91 00 00 00
	00		 mov	 edx, DWORD PTR ?application_tag_strings@@3PAPBDA[ecx]
  001dd	52		 push	 edx
  001de	8d 85 69 fb ff
	ff		 lea	 eax, DWORD PTR _line$[ebp+1]
  001e4	50		 push	 eax
  001e5	e8 00 00 00 00	 call	 _strcmp
  001ea	83 c4 08	 add	 esp, 8
  001ed	85 c0		 test	 eax, eax
  001ef	75 02		 jne	 SHORT $LN22@combat_zon

; 388  : 					{
; 389  : 
; 390  : 						break;

  001f1	eb 56		 jmp	 SHORT $LN13@combat_zon
$LN22@combat_zon:

; 391  : 					}
; 392  : 
; 393  : 					create_ui_object

  001f3	6a 11		 push	 17			; 00000011H
  001f5	6a 00		 push	 0
  001f7	6a 12		 push	 18			; 00000012H
  001f9	8d 85 68 fb ff
	ff		 lea	 eax, DWORD PTR _line$[ebp]
  001ff	50		 push	 eax
  00200	6a 4a		 push	 74			; 0000004aH
  00202	8b 4d ec	 mov	 ecx, DWORD PTR _line_count$[ebp]
  00205	83 c1 01	 add	 ecx, 1
  00208	6b d1 0c	 imul	 edx, ecx, 12
  0020b	f2 0f 2a c2	 cvtsi2sd xmm0, edx
  0020f	83 ec 08	 sub	 esp, 8
  00212	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00217	83 ec 08	 sub	 esp, 8
  0021a	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00222	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00227	6a 34		 push	 52			; 00000034H
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_text_area@@3PAUUI_OBJECT@@A ; combat_zone_text_area
  0022e	50		 push	 eax
  0022f	6a 32		 push	 50			; 00000032H
  00231	6a 05		 push	 5
  00233	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00238	83 c4 34	 add	 esp, 52			; 00000034H

; 394  : 								(
; 395  : 									UI_TYPE_TEXT,
; 396  : 									UI_ATTR_PARENT (combat_zone_text_area),
; 397  : 									UI_ATTR_POSITION (10, (line_count + 1) * 12),
; 398  : 									UI_ATTR_TEXT (line),
; 399  : 									UI_ATTR_FONT_TYPE (UI_FONT_ARIAL_10),
; 400  : 									UI_ATTR_END
; 401  : 							  );
; 402  : 
; 403  : 					line_count ++;

  0023b	8b 45 ec	 mov	 eax, DWORD PTR _line_count$[ebp]
  0023e	83 c0 01	 add	 eax, 1
  00241	89 45 ec	 mov	 DWORD PTR _line_count$[ebp], eax

; 404  : 				}

  00244	e9 61 ff ff ff	 jmp	 $LN12@combat_zon
$LN13@combat_zon:

; 405  : 
; 406  : 				break;

  00249	e9 b6 00 00 00	 jmp	 $LN6@combat_zon
$LN23@combat_zon:

; 407  : 			}
; 408  : 
; 409  : 			case FILE_TAG_IF:
; 410  : 			{
; 411  : 
; 412  : 				ASSERT (get_current_player_log ());

  0024e	e8 00 00 00 00	 call	 ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
  00253	85 c0		 test	 eax, eax
  00255	75 1a		 jne	 SHORT $LN24@combat_zon
  00257	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??combat_zone_read_text@@YGHXZ@4JA
  0025c	05 a7 00 00 00	 add	 eax, 167		; 000000a7H
  00261	50		 push	 eax
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@KADOOOJC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00267	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@HMBNLIAL@get_current_player_log?5?$CI?$CJ@
  0026c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN24@combat_zon:

; 413  : 	
; 414  : 				get_next_file_word (file_ptr, variable, sizeof (variable));

  00271	6a 40		 push	 64			; 00000040H
  00273	8d 45 a8	 lea	 eax, DWORD PTR _variable$[ebp]
  00276	50		 push	 eax
  00277	8b 4d e8	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0027a	51		 push	 ecx
  0027b	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 415  : 
; 416  : 				get_next_file_word (file_ptr, operator_, sizeof (operator_));

  00280	6a 40		 push	 64			; 00000040H
  00282	8d 85 68 ff ff
	ff		 lea	 eax, DWORD PTR _operator_$[ebp]
  00288	50		 push	 eax
  00289	8b 4d e8	 mov	 ecx, DWORD PTR _file_ptr$[ebp]
  0028c	51		 push	 ecx
  0028d	e8 00 00 00 00	 call	 ?get_next_file_word@@YGHPAU_iobuf@@PADH@Z ; get_next_file_word

; 417  : 
; 418  : 				value = get_next_file_int (file_ptr);

  00292	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  00295	50		 push	 eax
  00296	e8 00 00 00 00	 call	 ?get_next_file_int@@YGHPAU_iobuf@@@Z ; get_next_file_int
  0029b	89 45 f0	 mov	 DWORD PTR _value$[ebp], eax

; 419  : 
; 420  : 				if (!if_file_tag_variable (variable, operator_, value))

  0029e	8b 45 f0	 mov	 eax, DWORD PTR _value$[ebp]
  002a1	50		 push	 eax
  002a2	8d 8d 68 ff ff
	ff		 lea	 ecx, DWORD PTR _operator_$[ebp]
  002a8	51		 push	 ecx
  002a9	8d 55 a8	 lea	 edx, DWORD PTR _variable$[ebp]
  002ac	52		 push	 edx
  002ad	e8 00 00 00 00	 call	 ?if_file_tag_variable@@YGHPBD0H@Z ; if_file_tag_variable
  002b2	85 c0		 test	 eax, eax
  002b4	75 38		 jne	 SHORT $LN15@combat_zon
$LN14@combat_zon:

; 421  : 				{
; 422  : 
; 423  : 					// skip script till endif
; 424  : 
; 425  : 					while (tag = (file_tags) get_next_file_tag (file_ptr, application_tag_strings, FILE_TAG_APPLICATION_LAST_TAG))

  002b6	68 af 00 00 00	 push	 175			; 000000afH
  002bb	68 00 00 00 00	 push	 OFFSET ?application_tag_strings@@3PAPBDA ; application_tag_strings
  002c0	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ?get_next_file_tag@@YGHPAU_iobuf@@QAPBDH@Z ; get_next_file_tag
  002c9	89 85 64 f7 ff
	ff		 mov	 DWORD PTR _tag$[ebp], eax
  002cf	83 bd 64 f7 ff
	ff 00		 cmp	 DWORD PTR _tag$[ebp], 0
  002d6	74 16		 je	 SHORT $LN15@combat_zon

; 426  : 					{
; 427  : 
; 428  : 						if ((tag == FILE_TAG_ENDIF) || (tag == FILE_TAG_END))

  002d8	83 bd 64 f7 ff
	ff f4		 cmp	 DWORD PTR _tag$[ebp], -12 ; fffffff4H
  002df	74 09		 je	 SHORT $LN27@combat_zon
  002e1	83 bd 64 f7 ff
	ff f6		 cmp	 DWORD PTR _tag$[ebp], -10 ; fffffff6H
  002e8	75 02		 jne	 SHORT $LN26@combat_zon
$LN27@combat_zon:

; 429  : 						{
; 430  : 
; 431  : 							break;

  002ea	eb 02		 jmp	 SHORT $LN15@combat_zon
$LN26@combat_zon:

; 432  : 						}
; 433  : 					}

  002ec	eb c8		 jmp	 SHORT $LN14@combat_zon
$LN15@combat_zon:

; 434  : 				}
; 435  : 
; 436  : 				break;

  002ee	eb 14		 jmp	 SHORT $LN6@combat_zon

; 437  : 			}
; 438  : 
; 439  : 			case FILE_TAG_ENDIF:
; 440  : 			{
; 441  : 
; 442  : 				break;

  002f0	eb 12		 jmp	 SHORT $LN6@combat_zon
$LN29@combat_zon:

; 443  : 			}
; 444  : 
; 445  : 			case FILE_TAG_END:
; 446  : 			{
; 447  : 
; 448  : 				fclose (file_ptr);

  002f2	8b 45 e8	 mov	 eax, DWORD PTR _file_ptr$[ebp]
  002f5	50		 push	 eax
  002f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__fclose
  002fc	83 c4 04	 add	 esp, 4

; 449  : 
; 450  : 				return long_text_flag;

  002ff	8b 45 f4	 mov	 eax, DWORD PTR _long_text_flag$[ebp]
  00302	eb 07		 jmp	 SHORT $LN1@combat_zon
$LN6@combat_zon:

; 451  : 			}
; 452  : 		}
; 453  : 	}

  00304	e9 a1 fd ff ff	 jmp	 $LN4@combat_zon
$LN5@combat_zon:

; 454  : 
; 455  : 	return FALSE;

  00309	33 c0		 xor	 eax, eax
$LN1@combat_zon:

; 456  : }

  0030b	5f		 pop	 edi
  0030c	5e		 pop	 esi
  0030d	5b		 pop	 ebx
  0030e	8b e5		 mov	 esp, ebp
  00310	5d		 pop	 ebp
  00311	c3		 ret	 0
  00312	66 90		 npad	 2
$LN32@combat_zon:
  00314	00 00 00 00	 DD	 $LN23@combat_zon
  00318	00 00 00 00	 DD	 $LN29@combat_zon
  0031c	00 00 00 00	 DD	 $LN19@combat_zon
  00320	00 00 00 00	 DD	 $LN16@combat_zon
  00324	00 00 00 00	 DD	 $LN21@combat_zon
  00328	00 00 00 00	 DD	 $LN6@combat_zon
$LN31@combat_zon:
  0032c	00		 DB	 0
  0032d	05		 DB	 5
  0032e	05		 DB	 5
  0032f	05		 DB	 5
  00330	05		 DB	 5
  00331	05		 DB	 5
  00332	05		 DB	 5
  00333	01		 DB	 1
  00334	05		 DB	 5
  00335	05		 DB	 5
  00336	05		 DB	 5
  00337	05		 DB	 5
  00338	05		 DB	 5
  00339	05		 DB	 5
  0033a	05		 DB	 5
  0033b	05		 DB	 5
  0033c	05		 DB	 5
  0033d	05		 DB	 5
  0033e	05		 DB	 5
  0033f	05		 DB	 5
  00340	05		 DB	 5
  00341	05		 DB	 5
  00342	05		 DB	 5
  00343	05		 DB	 5
  00344	05		 DB	 5
  00345	05		 DB	 5
  00346	05		 DB	 5
  00347	05		 DB	 5
  00348	05		 DB	 5
  00349	05		 DB	 5
  0034a	05		 DB	 5
  0034b	05		 DB	 5
  0034c	05		 DB	 5
  0034d	05		 DB	 5
  0034e	05		 DB	 5
  0034f	05		 DB	 5
  00350	05		 DB	 5
  00351	05		 DB	 5
  00352	05		 DB	 5
  00353	05		 DB	 5
  00354	05		 DB	 5
  00355	05		 DB	 5
  00356	05		 DB	 5
  00357	05		 DB	 5
  00358	05		 DB	 5
  00359	05		 DB	 5
  0035a	05		 DB	 5
  0035b	05		 DB	 5
  0035c	05		 DB	 5
  0035d	05		 DB	 5
  0035e	05		 DB	 5
  0035f	05		 DB	 5
  00360	05		 DB	 5
  00361	05		 DB	 5
  00362	05		 DB	 5
  00363	05		 DB	 5
  00364	05		 DB	 5
  00365	05		 DB	 5
  00366	05		 DB	 5
  00367	05		 DB	 5
  00368	05		 DB	 5
  00369	05		 DB	 5
  0036a	05		 DB	 5
  0036b	05		 DB	 5
  0036c	05		 DB	 5
  0036d	05		 DB	 5
  0036e	05		 DB	 5
  0036f	05		 DB	 5
  00370	05		 DB	 5
  00371	05		 DB	 5
  00372	05		 DB	 5
  00373	05		 DB	 5
  00374	05		 DB	 5
  00375	05		 DB	 5
  00376	05		 DB	 5
  00377	05		 DB	 5
  00378	05		 DB	 5
  00379	05		 DB	 5
  0037a	05		 DB	 5
  0037b	05		 DB	 5
  0037c	05		 DB	 5
  0037d	05		 DB	 5
  0037e	05		 DB	 5
  0037f	05		 DB	 5
  00380	05		 DB	 5
  00381	05		 DB	 5
  00382	05		 DB	 5
  00383	05		 DB	 5
  00384	05		 DB	 5
  00385	05		 DB	 5
  00386	05		 DB	 5
  00387	05		 DB	 5
  00388	05		 DB	 5
  00389	05		 DB	 5
  0038a	05		 DB	 5
  0038b	05		 DB	 5
  0038c	05		 DB	 5
  0038d	05		 DB	 5
  0038e	05		 DB	 5
  0038f	05		 DB	 5
  00390	02		 DB	 2
  00391	03		 DB	 3
  00392	05		 DB	 5
  00393	05		 DB	 5
  00394	05		 DB	 5
  00395	04		 DB	 4
?combat_zone_read_text@@YGHXZ ENDP			; combat_zone_read_text
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?notify_combat_zone_back_button@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_combat_zone_back_button@@YGXPAUUI_OBJECT@@PAX@Z PROC ; notify_combat_zone_back_button, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 178  : 
; 179  : 	if ((int) arg == BUTTON_STATE_DOWN)

  00009	83 7d 0c 02	 cmp	 DWORD PTR _arg$[ebp], 2
  0000d	75 3f		 jne	 SHORT $LN2@notify_com

; 180  : 	{
; 181  : 
; 182  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_SELECTED));

  0000f	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00014	69 c8 60 01 00
	00		 imul	 ecx, eax, 352
  0001a	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00020	52		 push	 edx
  00021	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00024	50		 push	 eax
  00025	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  00031	ff d0		 call	 eax

; 183  : 
; 184  : 		set_ui_object_redraw (combat_zone_screen, TRUE);

  00033	6a 01		 push	 1
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  0003a	50		 push	 eax
  0003b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  0004a	ff d0		 call	 eax
  0004c	eb 70		 jmp	 SHORT $LN1@notify_com
$LN2@notify_com:

; 185  : 	}
; 186  : 	else if ((int) arg == BUTTON_STATE_UP)

  0004e	83 7d 0c 01	 cmp	 DWORD PTR _arg$[ebp], 1
  00052	75 2d		 jne	 SHORT $LN4@notify_com

; 187  : 	{
; 188  : 
; 189  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_UNSELECTED));

  00054	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00059	69 c8 5f 01 00
	00		 imul	 ecx, eax, 351
  0005f	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00065	52		 push	 edx
  00066	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0006d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0006f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  00076	ff d0		 call	 eax

; 190  : 
; 191  : 		pop_ui_screen (SCREEN_POP_ACTUAL);

  00078	6a 00		 push	 0
  0007a	e8 00 00 00 00	 call	 ?pop_ui_screen@@YGXW4SCREEN_POP_TYPES@@@Z ; pop_ui_screen

; 192  : 	}
; 193  : 	else 

  0007f	eb 3d		 jmp	 SHORT $LN1@notify_com
$LN4@notify_com:

; 194  : 	{
; 195  : 
; 196  : 		set_ui_object_graphic (obj, (unsigned short int *) get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_UNSELECTED));

  00081	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00086	69 c8 5f 01 00
	00		 imul	 ecx, eax, 351
  0008c	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00092	52		 push	 edx
  00093	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00096	50		 push	 eax
  00097	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0009a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  000a3	ff d0		 call	 eax

; 197  : 
; 198  : 		set_ui_object_redraw (combat_zone_screen, TRUE);

  000a5	6a 01		 push	 1
  000a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  000ac	50		 push	 eax
  000ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  000bc	ff d0		 call	 eax
$LN1@notify_com:

; 199  : 	}
; 200  : 
; 201  : 	//set_ui_object_graphic_type (obj, UI_OBJECT_ALPHA_GRAPHIC);
; 202  : }

  000be	5f		 pop	 edi
  000bf	5e		 pop	 esi
  000c0	5b		 pop	 ebx
  000c1	8b e5		 mov	 esp, ebp
  000c3	5d		 pop	 ebp
  000c4	c2 08 00	 ret	 8
?notify_combat_zone_back_button@@YGXPAUUI_OBJECT@@PAX@Z ENDP ; notify_combat_zone_back_button
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
_arg$ = 12						; size = 4
?notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z PROC	; notify_combat_zone_screen, COMDAT

; 154  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 155  : 
; 156  : 	ASSERT ( get_valid_current_game_session () );

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A, 0 ; current_game_session
  00010	75 18		 jne	 SHORT $LN2@notify_com
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z@4JA
  00017	83 c0 02	 add	 eax, 2
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@KADOOOJC@c?3?2users?2nhv90?2projects?2eech?2ap@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@EEKIOPJL@get_valid_current_game_session?5@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@notify_com:

; 157  : 
; 158  : 	combat_zone_read_text ();

  0002a	e8 00 00 00 00	 call	 ?combat_zone_read_text@@YGHXZ ; combat_zone_read_text

; 159  : 
; 160  : 	if ( briefing_red_forces )

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?briefing_red_forces@@3HA, 0
  00036	74 2b		 je	 SHORT $LN3@notify_com

; 161  : 	{
; 162  : 
; 163  : 		set_ui_object_graphic ( combat_zone_screen, ( unsigned short int * ) get_graphics_file_data ( GRAPHICS_UI_HAVOC_CZONE_SCREEN ) );

  00038	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  0003d	69 c8 6f 01 00
	00		 imul	 ecx, eax, 367
  00043	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00049	52		 push	 edx
  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  0004f	50		 push	 eax
  00050	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  00056	8b 11		 mov	 edx, DWORD PTR [ecx]
  00058	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  0005f	ff d0		 call	 eax

; 164  : 	}
; 165  : 	else

  00061	eb 29		 jmp	 SHORT $LN1@notify_com
$LN3@notify_com:

; 166  : 	{
; 167  : 
; 168  : 		set_ui_object_graphic ( combat_zone_screen, ( unsigned short int * ) get_graphics_file_data ( GRAPHICS_UI_APACHE_CZONE_SCREEN ) );

  00063	b8 28 00 00 00	 mov	 eax, 40			; 00000028H
  00068	69 c8 44 01 00
	00		 imul	 ecx, eax, 324
  0006e	8b 91 1c 00 00
	00		 mov	 edx, DWORD PTR ?graphics_files@@3PAUFILE_DATA@@A[ecx+28]
  00074	52		 push	 edx
  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  0007a	50		 push	 eax
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_graphic@@3PAP6GXPAUUI_OBJECT@@PAG@ZA[edx*4]
  0008a	ff d0		 call	 eax
$LN1@notify_com:

; 169  : 	}
; 170  : }

  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	8b e5		 mov	 esp, ebp
  00091	5d		 pop	 ebp
  00092	c2 08 00	 ret	 8
?notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z ENDP	; notify_combat_zone_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?load_3d_terrain_game_data@@YGXXZ
_TEXT	SEGMENT
_session$ = -1028					; size = 4
_filename$ = -1024					; size = 1024
?load_3d_terrain_game_data@@YGXXZ PROC			; load_3d_terrain_game_data, COMDAT

; 209  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 04 00
	00		 sub	 esp, 1220		; 000004c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 210  : 
; 211  : 	char
; 212  : 		filename [1024];
; 213  : 
; 214  : 	session_list_data_type
; 215  : 		*session;
; 216  : 
; 217  : 	//
; 218  : 	// Load 3d terrain
; 219  : 	//
; 220  : 
; 221  : 	unload_3d_terrain ();

  0000c	e8 00 00 00 00	 call	 ?unload_3d_terrain@@YGXXZ ; unload_3d_terrain

; 222  : 
; 223  : 	session = get_current_game_session ();

  00011	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_game_session@@3PAUSESSION_LIST_DATA_TYPE@@A ; current_game_session
  00016	89 85 fc fb ff
	ff		 mov	 DWORD PTR _session$[ebp], eax

; 224  : 
; 225  : 	sprintf (filename, "%s\\terrain", session->data_path);

  0001c	8b 85 fc fb ff
	ff		 mov	 eax, DWORD PTR _session$[ebp]
  00022	83 c0 1c	 add	 eax, 28			; 0000001cH
  00025	50		 push	 eax
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OBCFCENC@?$CFs?2terrain@
  0002b	8d 8d 00 fc ff
	ff		 lea	 ecx, DWORD PTR _filename$[ebp]
  00031	51		 push	 ecx
  00032	e8 00 00 00 00	 call	 _sprintf
  00037	83 c4 0c	 add	 esp, 12			; 0000000cH

; 226  : 
; 227  : 	if (!load_3d_terrain (filename))

  0003a	8d 85 00 fc ff
	ff		 lea	 eax, DWORD PTR _filename$[ebp]
  00040	50		 push	 eax
  00041	e8 00 00 00 00	 call	 ?load_3d_terrain@@YGHPBD@Z ; load_3d_terrain
  00046	85 c0		 test	 eax, eax
  00048	75 0d		 jne	 SHORT $LN2@load_3d_te

; 228  : 	{
; 229  : 
; 230  : 		debug_fatal ("ZONE_FN: unable to load terrain");

  0004a	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@POKKBJID@ZONE_FN?3?5unable?5to?5load?5terrain@
  0004f	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00054	83 c4 04	 add	 esp, 4
$LN2@load_3d_te:

; 231  : 	}
; 232  : 
; 233  : 	//
; 234  : 	// Load 2d map
; 235  : 	//
; 236  : 	
; 237  : 	load_2d_terrain (session->data_path);

  00057	8b 85 fc fb ff
	ff		 mov	 eax, DWORD PTR _session$[ebp]
  0005d	83 c0 1c	 add	 eax, 28			; 0000001cH
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?load_2d_terrain@@YGXPBD@Z ; load_2d_terrain

; 238  : }

  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?load_3d_terrain_game_data@@YGXXZ ENDP			; load_3d_terrain_game_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?initialise_combat_zone_screen@@YGXXZ
_TEXT	SEGMENT
?initialise_combat_zone_screen@@YGXXZ PROC		; initialise_combat_zone_screen, COMDAT

; 104  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 105  : 
; 106  :    combat_zone_screen = create_ui_object

  00009	6a 11		 push	 17			; 00000011H
  0000b	68 00 00 00 00	 push	 OFFSET ?notify_combat_zone_screen@@YGXPAUUI_OBJECT@@PAX@Z ; notify_combat_zone_screen
  00010	6a 16		 push	 22			; 00000016H
  00012	83 ec 08	 sub	 esp, 8
  00015	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@407e000000000000
  0001d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00022	83 ec 08	 sub	 esp, 8
  00025	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4084000000000000
  0002d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00032	6a 42		 push	 66			; 00000042H
  00034	83 ec 08	 sub	 esp, 8
  00037	0f 57 c0	 xorps	 xmm0, xmm0
  0003a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0003f	83 ec 08	 sub	 esp, 8
  00042	0f 57 c0	 xorps	 xmm0, xmm0
  00045	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0004a	6a 34		 push	 52			; 00000034H
  0004c	6a 06		 push	 6
  0004e	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  00053	83 c4 38	 add	 esp, 56			; 00000038H
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A, eax ; combat_zone_screen

; 107  :             (
; 108  :                UI_TYPE_SCREEN,
; 109  :                UI_ATTR_POSITION (0, 0),
; 110  :                UI_ATTR_SIZE (640, 480),
; 111  : 					//UI_ATTR_GRAPHIC ( get_graphics_file_data ( GRAPHICS_UI_APACHE_CZONE_SCREEN ) ),
; 112  : 					UI_ATTR_FUNCTION (notify_combat_zone_screen),
; 113  :                UI_ATTR_END
; 114  :             );
; 115  : 
; 116  : 	combat_zone_text_area = create_ui_object

  0005b	6a 11		 push	 17			; 00000011H
  0005d	6a 01		 push	 1
  0005f	6a 07		 push	 7
  00061	83 ec 08	 sub	 esp, 8
  00064	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@407a400000000000
  0006c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00071	83 ec 08	 sub	 esp, 8
  00074	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4083600000000000
  0007c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00081	6a 42		 push	 66			; 00000042H
  00083	83 ec 08	 sub	 esp, 8
  00086	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4034000000000000
  0008e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00093	83 ec 08	 sub	 esp, 8
  00096	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  0009e	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000a3	6a 34		 push	 52			; 00000034H
  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  000aa	50		 push	 eax
  000ab	6a 32		 push	 50			; 00000032H
  000ad	6a 01		 push	 1
  000af	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  000b4	83 c4 40	 add	 esp, 64			; 00000040H
  000b7	a3 00 00 00 00	 mov	 DWORD PTR ?combat_zone_text_area@@3PAUUI_OBJECT@@A, eax ; combat_zone_text_area

; 117  :             (
; 118  :                UI_TYPE_AREA,
; 119  :                UI_ATTR_PARENT (combat_zone_screen),
; 120  :                UI_ATTR_POSITION (10, 20),
; 121  :                UI_ATTR_SIZE (620, 420),
; 122  : 					UI_ATTR_CLEAR (TRUE),
; 123  :                UI_ATTR_END
; 124  :             );
; 125  : 
; 126  :    create_ui_object

  000bc	6a 11		 push	 17			; 00000011H
  000be	6a 03		 push	 3
  000c0	6a 2f		 push	 47			; 0000002fH
  000c2	68 00 00 00 00	 push	 OFFSET ?notify_combat_zone_back_button@@YGXPAUUI_OBJECT@@PAX@Z ; notify_combat_zone_back_button
  000c7	6a 16		 push	 22			; 00000016H
  000c9	83 ec 08	 sub	 esp, 8
  000cc	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@403c000000000000
  000d4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000d9	83 ec 08	 sub	 esp, 8
  000dc	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405e000000000000
  000e4	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000e9	6a 42		 push	 66			; 00000042H
  000eb	83 ec 08	 sub	 esp, 8
  000ee	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@407ba00000000000
  000f6	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000fb	83 ec 08	 sub	 esp, 8
  000fe	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4024000000000000
  00106	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0010b	6a 34		 push	 52			; 00000034H
  0010d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?combat_zone_screen@@3PAUUI_OBJECT@@A ; combat_zone_screen
  00112	50		 push	 eax
  00113	6a 32		 push	 50			; 00000032H
  00115	6a 02		 push	 2
  00117	e8 00 00 00 00	 call	 ?create_ui_object@@YAPAUUI_OBJECT@@HZZ ; create_ui_object
  0011c	83 c4 48	 add	 esp, 72			; 00000048H

; 127  :             (
; 128  :                UI_TYPE_BUTTON,
; 129  :                UI_ATTR_PARENT (combat_zone_screen),
; 130  :                UI_ATTR_POSITION (10, 442),
; 131  :                UI_ATTR_SIZE (120, 28),
; 132  : 					UI_ATTR_FUNCTION (notify_combat_zone_back_button),
; 133  : 					UI_ATTR_NOTIFY_ON (NOTIFY_TYPE_BUTTON_EITHER),
; 134  : 					//UI_ATTR_ALPHA_GRAPHIC (get_graphics_file_data (GRAPHICS_UI_APACHE_PLANNER_BACK_BUTTON_UNSELECTED)),
; 135  :                UI_ATTR_END
; 136  :             );
; 137  : }

  0011f	5f		 pop	 edi
  00120	5e		 pop	 esi
  00121	5b		 pop	 ebx
  00122	8b e5		 mov	 esp, ebp
  00124	5d		 pop	 ebp
  00125	c3		 ret	 0
?initialise_combat_zone_screen@@YGXXZ ENDP		; initialise_combat_zone_screen
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\czone\zone_sc.c
;	COMDAT ?set_briefing_side@@YGXH@Z
_TEXT	SEGMENT
_red_forces$ = 8					; size = 4
?set_briefing_side@@YGXH@Z PROC				; set_briefing_side, COMDAT

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 145  : 
; 146  : 	briefing_red_forces = red_forces;

  00009	8b 45 08	 mov	 eax, DWORD PTR _red_forces$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?briefing_red_forces@@3HA, eax

; 147  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_briefing_side@@YGXH@Z ENDP				; set_briefing_side
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);

  00009	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0000c	89 45 f8	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  0000f	8b 45 f8	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00012	50		 push	 eax
  00013	6a 00		 push	 0
  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00018	51		 push	 ecx
  00019	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  0001c	52		 push	 edx
  0001d	e8 00 00 00 00	 call	 __vsprintf_l
  00022	83 c4 10	 add	 esp, 16			; 00000010H
  00025	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1792 :         return _Result;

  0002f	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 1793 :     }

  00032	5f		 pop	 edi
  00033	5e		 pop	 esi
  00034	5b		 pop	 ebx
  00035	8b e5		 mov	 esp, ebp
  00037	5d		 pop	 ebp
  00038	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1459 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1460 :         #pragma warning(push)
; 1461 :         #pragma warning(disable: 4996) // Deprecation
; 1462 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00009	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	6a ff		 push	 -1
  00017	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0001a	50		 push	 eax
  0001b	e8 00 00 00 00	 call	 __vsnprintf_l
  00020	83 c4 14	 add	 esp, 20			; 00000014H

; 1463 :         #pragma warning(pop)
; 1464 :     }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -72						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00009	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00010	51		 push	 ecx
  00011	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  00014	52		 push	 edx
  00015	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  00018	50		 push	 eax
  00019	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  0001c	51		 push	 ecx
  0001d	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	83 ca 01	 or	 edx, 1
  00027	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00032	83 c4 1c	 add	 esp, 28			; 0000001cH
  00035	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00038	83 7d fc 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0003c	7d 09		 jge	 SHORT $LN3@vsnprintf_
  0003e	c7 45 b8 ff ff
	ff ff		 mov	 DWORD PTR tv74[ebp], -1
  00045	eb 06		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00047	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]
  0004a	89 45 b8	 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  0004d	8b 45 b8	 mov	 eax, DWORD PTR tv74[ebp]

; 1395 :     }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	8b e5		 mov	 esp, ebp
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00009	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
