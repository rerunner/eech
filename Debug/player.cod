; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\ui_menu\player\player.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?pilot_rank_names@@3PAPBDA			; pilot_rank_names
PUBLIC	?medal_type_names@@3PAPBDA			; medal_type_names
PUBLIC	??_C@_0P@PMAOLKGF@RANK_NAME_NONE@		; `string'
PUBLIC	??_C@_0L@ELPBOFCK@LIEUTENANT@			; `string'
PUBLIC	??_C@_07CMLHBBDF@CAPTAIN@			; `string'
PUBLIC	??_C@_05JPIKHLGF@MAJOR@				; `string'
PUBLIC	??_C@_0L@LDAAMIJD@LT_COLONEL@			; `string'
PUBLIC	??_C@_07HMODIFKL@COLONEL@			; `string'
PUBLIC	??_C@_0BA@NKHKCCON@NUM_PILOT_RANKS@		; `string'
PUBLIC	??_C@_0L@DKLDFGIB@MEDAL_NONE@			; `string'
PUBLIC	??_C@_05LEPHLDM@SAUDI@				; `string'
PUBLIC	??_C@_07LLCIPAAM@LEBANON@			; `string'
PUBLIC	??_C@_06GNJGLMLD@TAIWAN@			; `string'
PUBLIC	??_C@_0N@OKDEBLHA@ARMY_AVIATOR@			; `string'
PUBLIC	??_C@_0P@JCBLJHDD@SENIOR_AVIATOR@		; `string'
PUBLIC	??_C@_0P@KBJFONCA@MASTER_AVIATOR@		; `string'
PUBLIC	??_C@_0N@KJAGOGJH@PURPLE_HEART@			; `string'
PUBLIC	??_C@_09MHJFMFLB@AIR_MEDAL@			; `string'
PUBLIC	??_C@_0N@KOEHHKPC@FLYING_CROSS@			; `string'
PUBLIC	??_C@_0M@NOCDCCO@SILVER_STAR@			; `string'
PUBLIC	??_C@_0BG@KABEKIPD@DISTINGUISHED_SERVICE@	; `string'
PUBLIC	??_C@_0BA@CKLGBPAL@MEDAL_OF_HONOUR@		; `string'
PUBLIC	??_C@_0BA@KANNPDI@NUM_MEDAL_TYPES@		; `string'
;	COMDAT ??_C@_0BA@KANNPDI@NUM_MEDAL_TYPES@
CONST	SEGMENT
??_C@_0BA@KANNPDI@NUM_MEDAL_TYPES@ DB 'NUM_MEDAL_TYPES', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CKLGBPAL@MEDAL_OF_HONOUR@
CONST	SEGMENT
??_C@_0BA@CKLGBPAL@MEDAL_OF_HONOUR@ DB 'MEDAL_OF_HONOUR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KABEKIPD@DISTINGUISHED_SERVICE@
CONST	SEGMENT
??_C@_0BG@KABEKIPD@DISTINGUISHED_SERVICE@ DB 'DISTINGUISHED_SERVICE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NOCDCCO@SILVER_STAR@
CONST	SEGMENT
??_C@_0M@NOCDCCO@SILVER_STAR@ DB 'SILVER_STAR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KOEHHKPC@FLYING_CROSS@
CONST	SEGMENT
??_C@_0N@KOEHHKPC@FLYING_CROSS@ DB 'FLYING_CROSS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MHJFMFLB@AIR_MEDAL@
CONST	SEGMENT
??_C@_09MHJFMFLB@AIR_MEDAL@ DB 'AIR_MEDAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KJAGOGJH@PURPLE_HEART@
CONST	SEGMENT
??_C@_0N@KJAGOGJH@PURPLE_HEART@ DB 'PURPLE_HEART', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBJFONCA@MASTER_AVIATOR@
CONST	SEGMENT
??_C@_0P@KBJFONCA@MASTER_AVIATOR@ DB 'MASTER_AVIATOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JCBLJHDD@SENIOR_AVIATOR@
CONST	SEGMENT
??_C@_0P@JCBLJHDD@SENIOR_AVIATOR@ DB 'SENIOR_AVIATOR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKDEBLHA@ARMY_AVIATOR@
CONST	SEGMENT
??_C@_0N@OKDEBLHA@ARMY_AVIATOR@ DB 'ARMY_AVIATOR', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06GNJGLMLD@TAIWAN@
CONST	SEGMENT
??_C@_06GNJGLMLD@TAIWAN@ DB 'TAIWAN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07LLCIPAAM@LEBANON@
CONST	SEGMENT
??_C@_07LLCIPAAM@LEBANON@ DB 'LEBANON', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05LEPHLDM@SAUDI@
CONST	SEGMENT
??_C@_05LEPHLDM@SAUDI@ DB 'SAUDI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DKLDFGIB@MEDAL_NONE@
CONST	SEGMENT
??_C@_0L@DKLDFGIB@MEDAL_NONE@ DB 'MEDAL_NONE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NKHKCCON@NUM_PILOT_RANKS@
CONST	SEGMENT
??_C@_0BA@NKHKCCON@NUM_PILOT_RANKS@ DB 'NUM_PILOT_RANKS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HMODIFKL@COLONEL@
CONST	SEGMENT
??_C@_07HMODIFKL@COLONEL@ DB 'COLONEL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDAAMIJD@LT_COLONEL@
CONST	SEGMENT
??_C@_0L@LDAAMIJD@LT_COLONEL@ DB 'LT_COLONEL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05JPIKHLGF@MAJOR@
CONST	SEGMENT
??_C@_05JPIKHLGF@MAJOR@ DB 'MAJOR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CMLHBBDF@CAPTAIN@
CONST	SEGMENT
??_C@_07CMLHBBDF@CAPTAIN@ DB 'CAPTAIN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ELPBOFCK@LIEUTENANT@
CONST	SEGMENT
??_C@_0L@ELPBOFCK@LIEUTENANT@ DB 'LIEUTENANT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMAOLKGF@RANK_NAME_NONE@
CONST	SEGMENT
??_C@_0P@PMAOLKGF@RANK_NAME_NONE@ DB 'RANK_NAME_NONE', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?pilot_rank_names@@3PAPBDA DD FLAT:??_C@_0P@PMAOLKGF@RANK_NAME_NONE@ ; pilot_rank_names
	DD	FLAT:??_C@_0L@ELPBOFCK@LIEUTENANT@
	DD	FLAT:??_C@_07CMLHBBDF@CAPTAIN@
	DD	FLAT:??_C@_05JPIKHLGF@MAJOR@
	DD	FLAT:??_C@_0L@LDAAMIJD@LT_COLONEL@
	DD	FLAT:??_C@_07HMODIFKL@COLONEL@
	DD	FLAT:??_C@_0BA@NKHKCCON@NUM_PILOT_RANKS@
?medal_type_names@@3PAPBDA DD FLAT:??_C@_0L@DKLDFGIB@MEDAL_NONE@ ; medal_type_names
	DD	FLAT:??_C@_05LEPHLDM@SAUDI@
	DD	FLAT:??_C@_07LLCIPAAM@LEBANON@
	DD	FLAT:??_C@_06GNJGLMLD@TAIWAN@
	DD	FLAT:??_C@_0N@OKDEBLHA@ARMY_AVIATOR@
	DD	FLAT:??_C@_0P@JCBLJHDD@SENIOR_AVIATOR@
	DD	FLAT:??_C@_0P@KBJFONCA@MASTER_AVIATOR@
	DD	FLAT:??_C@_0N@KJAGOGJH@PURPLE_HEART@
	DD	FLAT:??_C@_09MHJFMFLB@AIR_MEDAL@
	DD	FLAT:??_C@_0N@KOEHHKPC@FLYING_CROSS@
	DD	FLAT:??_C@_0M@NOCDCCO@SILVER_STAR@
	DD	FLAT:??_C@_0BG@KABEKIPD@DISTINGUISHED_SERVICE@
	DD	FLAT:??_C@_0BA@CKLGBPAL@MEDAL_OF_HONOUR@
	DD	FLAT:??_C@_0BA@KANNPDI@NUM_MEDAL_TYPES@
_DATA	ENDS
PUBLIC	?initialise_medal_and_promotion_names@@YGXXZ	; initialise_medal_and_promotion_names
PUBLIC	?get_pilot_rank_name@@YGPBDH@Z			; get_pilot_rank_name
PUBLIC	?get_pilot_rank_short_name@@YGPBDH@Z		; get_pilot_rank_short_name
PUBLIC	?get_untranslated_pilot_rank_short_name@@YGPBDH@Z ; get_untranslated_pilot_rank_short_name
PUBLIC	?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ	; get_player_log_list
PUBLIC	?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z	; set_player_log_list
PUBLIC	?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ; get_current_player_log
PUBLIC	?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ; set_current_player_log
PUBLIC	?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ; get_player_log_next
PUBLIC	?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_name
PUBLIC	?get_player_rank_from_points@@YGHH@Z		; get_player_rank_from_points
PUBLIC	?get_player_points_from_rank@@YGHH@Z		; get_player_points_from_rank
PUBLIC	?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_rank
PUBLIC	?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_rank
PUBLIC	?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_experience
PUBLIC	?set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_experience
PUBLIC	?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; inc_player_log_experience
PUBLIC	?get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_missions_flown
PUBLIC	?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_missions_flown
PUBLIC	?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_missions_flown
PUBLIC	?get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_failed_tours
PUBLIC	?set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_failed_tours
PUBLIC	?inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_failed_tours
PUBLIC	?get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_successful_tours
PUBLIC	?set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_successful_tours
PUBLIC	?inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_successful_tours
PUBLIC	?get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_level
PUBLIC	?set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; set_player_log_level
PUBLIC	?get_player_log_task_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_task_level
PUBLIC	?get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_hours
PUBLIC	?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_flying_seconds
PUBLIC	?set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; set_player_log_flying_seconds
PUBLIC	?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; inc_player_log_flying_seconds
PUBLIC	?inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z ; inc_player_log_kills
PUBLIC	?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ; update_player_log_mission_success_rate
PUBLIC	?get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z ; get_player_weapon_log_fired
PUBLIC	?set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z ; set_player_weapon_log_fired
PUBLIC	?inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; inc_player_weapon_log_fired
PUBLIC	?get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z ; get_player_weapon_log_hit
PUBLIC	?set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z ; set_player_weapon_log_hit
PUBLIC	?inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ; inc_player_weapon_log_hit
PUBLIC	?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_deaths
PUBLIC	?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_helicopters_lost
PUBLIC	?backup_current_player_log@@YGXXZ		; backup_current_player_log
PUBLIC	?restore_log_from_backup@@YGHXZ			; restore_log_from_backup
PUBLIC	??_C@_0M@FJMAMPGJ@Medal?5Saudi@			; `string'
PUBLIC	??_C@_0O@BNCBBOEF@Medal?5Lebanon@		; `string'
PUBLIC	??_C@_0N@ODEBLCNO@Medal?5Taiwan@		; `string'
PUBLIC	??_C@_0BB@EMDGHCDK@Medal?5Army?5Wings@		; `string'
PUBLIC	??_C@_0BD@JPKHHCMM@Medal?5Senior?5Wings@	; `string'
PUBLIC	??_C@_0BD@PAFMOKND@Medal?5Master?5Wings@	; `string'
PUBLIC	??_C@_0N@OOICACPC@Medal?5Purple@		; `string'
PUBLIC	??_C@_09NPPFACME@Medal?5Air@			; `string'
PUBLIC	??_C@_0BE@BJOEHDAH@Medal?5Distinguished@	; `string'
PUBLIC	??_C@_0N@FLJHBDKJ@Medal?5Silver@		; `string'
PUBLIC	??_C@_0O@BOJFGMNN@Medal?5Service@		; `string'
PUBLIC	??_C@_0N@KDOANAIF@Medal?5Honour@		; `string'
PUBLIC	??_C@_0P@GPNPPMPN@Medal?5SV?5Yemen@		; `string'
PUBLIC	??_C@_0BB@JNGBKPHG@Medal?5SV?5Lebanon@		; `string'
PUBLIC	??_C@_0BA@MGJHEKEL@Medal?5SV?5Taiwan@		; `string'
PUBLIC	??_C@_0BE@OBBJPHBK@Medal?5SV?5Army?5Wings@	; `string'
PUBLIC	??_C@_0BG@JHPBIMOO@Medal?5SV?5Senior?5Wings@	; `string'
PUBLIC	??_C@_0BG@PIAKBEPB@Medal?5SV?5Master?5Wings@	; `string'
PUBLIC	??_C@_0P@ONPAAEIP@Medal?5SV?5Glory@		; `string'
PUBLIC	??_C@_0BA@LMNGNCDL@Medal?5SV?5Banner@		; `string'
PUBLIC	??_C@_0P@CHGLDJFP@Medal?5SV?5Lenin@		; `string'
PUBLIC	??_C@_0BB@JONFNNOO@Medal?5SV?5Service@		; `string'
PUBLIC	??_C@_0BB@HNCHPAGG@Medal?5SV?5Victory@		; `string'
PUBLIC	??_C@_0O@GLANAFCA@Medal?5SV?5Star@		; `string'
PUBLIC	??_C@_0L@HLAANINN@Lieutenant@			; `string'
PUBLIC	??_C@_07CIJMMPOH@Captain@			; `string'
PUBLIC	??_C@_05FDLAJJBN@Major@				; `string'
PUBLIC	??_C@_0M@MOMICILP@Lt?4?5Colonel@		; `string'
PUBLIC	??_C@_07HIMIFLHJ@Colonel@			; `string'
PUBLIC	?__LINE__Var@?0??get_pilot_rank_name@@YGPBDH@Z@4JA ; `get_pilot_rank_name'::`1'::__LINE__Var
PUBLIC	??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@ ; `string'
PUBLIC	?__LINE__Var@?0??get_pilot_rank_short_name@@YGPBDH@Z@4JA ; `get_pilot_rank_short_name'::`1'::__LINE__Var
PUBLIC	??_C@_03FHIGAOMG@Lt?4@				; `string'
PUBLIC	??_C@_05FAGDBBFP@Capt?4@			; `string'
PUBLIC	??_C@_04FEGDEDKG@Maj?4@				; `string'
PUBLIC	??_C@_08KHLIDNHL@Lt?4?5Col?4@			; `string'
PUBLIC	??_C@_04PABPGEG@Col?4@				; `string'
PUBLIC	?__LINE__Var@?0??get_untranslated_pilot_rank_short_name@@YGPBDH@Z@4JA ; `get_untranslated_pilot_rank_short_name'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@DBMCDKLI@TRAINING1_LEVEL@		; `string'
PUBLIC	??_C@_0BA@LPENDNFL@TRAINING2_LEVEL@		; `string'
PUBLIC	??_C@_0BA@HDOHDNMF@TRAINING3_LEVEL@		; `string'
PUBLIC	??_C@_0BA@HJCCDENM@TRAINING4_LEVEL@		; `string'
PUBLIC	??_C@_0BA@LFIIDEEC@TRAINING5_LEVEL@		; `string'
PUBLIC	?__LINE__Var@?0??get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU2@@Z@4JA ; `get_player_log_next'::`1'::__LINE__Var
PUBLIC	??_C@_03MGHMBJCF@log@				; `string'
PUBLIC	?__LINE__Var@?0??get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_name'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_rank'::`1'::__LINE__Var
PUBLIC	??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@ ; `string'
PUBLIC	?__LINE__Var@?0??set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_rank'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_experience'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_experience'::`1'::__LINE__Var
PUBLIC	??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ ; `string'
PUBLIC	??_C@_0BD@JJHEBHEI@PLAYER?3?5current?5?$CFd@	; `string'
PUBLIC	??_C@_0BJ@JEMHJBPE@PLAYER?3?5?5?5?5lieutenant?7?$CFd@ ; `string'
PUBLIC	??_C@_0BI@OHOEKMNA@PLAYER?3?5?5?5?5captain?5?7?7?$CFd@ ; `string'
PUBLIC	??_C@_0BG@HKBOHIIC@PLAYER?3?5?5?5?5major?7?7?7?$CFd@ ; `string'
PUBLIC	??_C@_0BJ@LBMPPOIE@PLAYER?3?5?5?5?5Lt?5Colonel?7?$CFd@ ; `string'
PUBLIC	??_C@_0BH@ILCGKBN@PLAYER?3?5?5?5?5Colonel?7?7?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `inc_player_log_experience'::`1'::__LINE__Var
PUBLIC	??_C@_0CG@EHECKPNI@PLAYER?3?5?$CFd?5points?5awarded?0?5curr@ ; `string'
PUBLIC	?__LINE__Var@?0??get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_missions_flown'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_missions_flown'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_missions_flown'::`1'::__LINE__Var
PUBLIC	??_C@_0BI@PHHNDEPE@Uknown?5gunship?5type?3?5?$CFd@ ; `string'
PUBLIC	?__LINE__Var@?0??get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_failed_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_failed_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_failed_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_successful_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_successful_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_successful_tours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_level'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `set_player_log_level'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_flying_hours'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `get_player_log_flying_seconds'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA ; `set_player_log_flying_seconds'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA ; `inc_player_log_flying_seconds'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_air_kills'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_ground_kills'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_sea_kills'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_fixed_kills'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_friendly_kills'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_deaths'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA ; `inc_player_log_helicopters_lost'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA ; `inc_player_log_kills'::`1'::__LINE__Var
PUBLIC	??_C@_06GPEKEEBB@victim@			; `string'
PUBLIC	?__LINE__Var@?0??update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA ; `update_player_log_mission_success_rate'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `get_player_weapon_log_fired'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA ; `set_player_weapon_log_fired'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `inc_player_weapon_log_fired'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `get_player_weapon_log_hit'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA ; `set_player_weapon_log_hit'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA ; `inc_player_weapon_log_hit'::`1'::__LINE__Var
PUBLIC	__real@4a5bba00
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?register_file_tag_variable@@YGXPBDPAH@Z:PROC	; register_file_tag_variable
EXTRN	?unregister_file_tag_variable@@YGXPBD@Z:PROC	; unregister_file_tag_variable
EXTRN	?get_trans@@YGPBDPBD@Z:PROC			; get_trans
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?vehicle_database@@3PAUVEHICLE_DATA@@A:BYTE	; vehicle_database
EXTRN	?us_medal_type_names@@3PAPBDA:BYTE		; us_medal_type_names
EXTRN	?cis_medal_type_names@@3PAPBDA:BYTE		; cis_medal_type_names
EXTRN	?rank_type_names@@3PAPBDA:BYTE			; rank_type_names
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?player_log_list@@3PAUPLAYER_LOG_TYPE@@A DD 01H DUP (?)	; player_log_list
?current_player_log@@3PAUPLAYER_LOG_TYPE@@A DD 01H DUP (?) ; current_player_log
?current_backup_log@@3UPLAYER_LOG_TYPE@@A DB 0d40H DUP (?) ; current_backup_log
_BSS	ENDS
;	COMDAT __real@4a5bba00
CONST	SEGMENT
__real@4a5bba00 DD 04a5bba00r			; 3.6e+06
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0471H ; `inc_player_weapon_log_hit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA DD 0464H ; `set_player_weapon_log_hit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0457H ; `get_player_weapon_log_hit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 044aH ; `inc_player_weapon_log_fired'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA DD 043dH ; `set_player_weapon_log_fired'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0430H ; `get_player_weapon_log_fired'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA DD 03d7H ; `update_player_log_mission_success_rate'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_06GPEKEEBB@victim@
CONST	SEGMENT
??_C@_06GPEKEEBB@victim@ DB 'victim', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA DD 0390H ; `inc_player_log_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0365H ; `inc_player_log_helicopters_lost'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0358H ; `inc_player_log_deaths'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 034bH ; `inc_player_log_friendly_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 033eH ; `inc_player_log_fixed_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0331H ; `inc_player_log_sea_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0324H ; `inc_player_log_ground_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0317H ; `inc_player_log_air_kills'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA DD 0305H ; `inc_player_log_flying_seconds'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA DD 02f8H ; `set_player_log_flying_seconds'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 02ebH ; `get_player_log_flying_seconds'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 02deH ; `get_player_log_flying_hours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 02d1H ; `set_player_log_level'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 02c4H ; `get_player_log_level'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 02b7H ; `inc_player_log_successful_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 02aaH ; `set_player_log_successful_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 029dH ; `get_player_log_successful_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0290H ; `inc_player_log_failed_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0283H ; `set_player_log_failed_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0276H ; `get_player_log_failed_tours'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BI@PHHNDEPE@Uknown?5gunship?5type?3?5?$CFd@
CONST	SEGMENT
??_C@_0BI@PHHNDEPE@Uknown?5gunship?5type?3?5?$CFd@ DB 'Uknown gunship typ'
	DB	'e: %d', 00H					; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0262H ; `inc_player_log_missions_flown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0255H ; `set_player_log_missions_flown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0248H ; `get_player_log_missions_flown'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CG@EHECKPNI@PLAYER?3?5?$CFd?5points?5awarded?0?5curr@
CONST	SEGMENT
??_C@_0CG@EHECKPNI@PLAYER?3?5?$CFd?5points?5awarded?0?5curr@ DB 'PLAYER: '
	DB	'%d points awarded, current %d', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0232H ; `inc_player_log_experience'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BH@ILCGKBN@PLAYER?3?5?5?5?5Colonel?7?7?$CFd@
CONST	SEGMENT
??_C@_0BH@ILCGKBN@PLAYER?3?5?5?5?5Colonel?7?7?$CFd@ DB 'PLAYER:    Colone'
	DB	'l', 09H, 09H, '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LBMPPOIE@PLAYER?3?5?5?5?5Lt?5Colonel?7?$CFd@
CONST	SEGMENT
??_C@_0BJ@LBMPPOIE@PLAYER?3?5?5?5?5Lt?5Colonel?7?$CFd@ DB 'PLAYER:    Lt '
	DB	'Colonel', 09H, '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HKBOHIIC@PLAYER?3?5?5?5?5major?7?7?7?$CFd@
CONST	SEGMENT
??_C@_0BG@HKBOHIIC@PLAYER?3?5?5?5?5major?7?7?7?$CFd@ DB 'PLAYER:    major'
	DB	09H, 09H, 09H, '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OHOEKMNA@PLAYER?3?5?5?5?5captain?5?7?7?$CFd@
CONST	SEGMENT
??_C@_0BI@OHOEKMNA@PLAYER?3?5?5?5?5captain?5?7?7?$CFd@ DB 'PLAYER:    cap'
	DB	'tain ', 09H, 09H, '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@JEMHJBPE@PLAYER?3?5?5?5?5lieutenant?7?$CFd@
CONST	SEGMENT
??_C@_0BJ@JEMHJBPE@PLAYER?3?5?5?5?5lieutenant?7?$CFd@ DB 'PLAYER:    lieu'
	DB	'tenant', 09H, '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JJHEBHEI@PLAYER?3?5current?5?$CFd@
CONST	SEGMENT
??_C@_0BD@JJHEBHEI@PLAYER?3?5current?5?$CFd@ DB 'PLAYER: current %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
CONST	SEGMENT
??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@ DB 'P'
	DB	'LAYER: ------------------------------------------------------'
	DB	'--------------------------', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 0216H ; `set_player_log_experience'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 0209H ; `get_player_log_experience'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA DD 01fcH ; `set_player_log_rank'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
CONST	SEGMENT
??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@ DB '('
	DB	'side >= 0) && (side <= NUM_ENTITY_SIDES)', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA DD 01efH ; `get_player_log_rank'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z@4JA DD 018dH ; `get_player_log_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03MGHMBJCF@log@
CONST	SEGMENT
??_C@_03MGHMBJCF@log@ DB 'log', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU2@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU2@@Z@4JA DD 0182H ; `get_player_log_next'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@LFIIDEEC@TRAINING5_LEVEL@
CONST	SEGMENT
??_C@_0BA@LFIIDEEC@TRAINING5_LEVEL@ DB 'TRAINING5_LEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HJCCDENM@TRAINING4_LEVEL@
CONST	SEGMENT
??_C@_0BA@HJCCDENM@TRAINING4_LEVEL@ DB 'TRAINING4_LEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HDOHDNMF@TRAINING3_LEVEL@
CONST	SEGMENT
??_C@_0BA@HDOHDNMF@TRAINING3_LEVEL@ DB 'TRAINING3_LEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LPENDNFL@TRAINING2_LEVEL@
CONST	SEGMENT
??_C@_0BA@LPENDNFL@TRAINING2_LEVEL@ DB 'TRAINING2_LEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DBMCDKLI@TRAINING1_LEVEL@
CONST	SEGMENT
??_C@_0BA@DBMCDKLI@TRAINING1_LEVEL@ DB 'TRAINING1_LEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_untranslated_pilot_rank_short_name@@YGPBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_untranslated_pilot_rank_short_name@@YGPBDH@Z@4JA DD 0127H ; `get_untranslated_pilot_rank_short_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_04PABPGEG@Col?4@
CONST	SEGMENT
??_C@_04PABPGEG@Col?4@ DB 'Col.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08KHLIDNHL@Lt?4?5Col?4@
CONST	SEGMENT
??_C@_08KHLIDNHL@Lt?4?5Col?4@ DB 'Lt. Col.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FEGDEDKG@Maj?4@
CONST	SEGMENT
??_C@_04FEGDEDKG@Maj?4@ DB 'Maj.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAGDBBFP@Capt?4@
CONST	SEGMENT
??_C@_05FAGDBBFP@Capt?4@ DB 'Capt.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03FHIGAOMG@Lt?4@
CONST	SEGMENT
??_C@_03FHIGAOMG@Lt?4@ DB 'Lt.', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_pilot_rank_short_name@@YGPBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_pilot_rank_short_name@@YGPBDH@Z@4JA DD 0f0H ; `get_pilot_rank_short_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@
CONST	SEGMENT
??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@ DB '('
	DB	'rank > PILOT_RANK_NONE) && (rank < NUM_PILOT_RANKS)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\ui_menu\player\player.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??get_pilot_rank_name@@YGPBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??get_pilot_rank_name@@YGPBDH@Z@4JA DD 0b9H ; `get_pilot_rank_name'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_07HIMIFLHJ@Colonel@
CONST	SEGMENT
??_C@_07HIMIFLHJ@Colonel@ DB 'Colonel', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MOMICILP@Lt?4?5Colonel@
CONST	SEGMENT
??_C@_0M@MOMICILP@Lt?4?5Colonel@ DB 'Lt. Colonel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05FDLAJJBN@Major@
CONST	SEGMENT
??_C@_05FDLAJJBN@Major@ DB 'Major', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07CIJMMPOH@Captain@
CONST	SEGMENT
??_C@_07CIJMMPOH@Captain@ DB 'Captain', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HLAANINN@Lieutenant@
CONST	SEGMENT
??_C@_0L@HLAANINN@Lieutenant@ DB 'Lieutenant', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLANAFCA@Medal?5SV?5Star@
CONST	SEGMENT
??_C@_0O@GLANAFCA@Medal?5SV?5Star@ DB 'Medal SV Star', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HNCHPAGG@Medal?5SV?5Victory@
CONST	SEGMENT
??_C@_0BB@HNCHPAGG@Medal?5SV?5Victory@ DB 'Medal SV Victory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JONFNNOO@Medal?5SV?5Service@
CONST	SEGMENT
??_C@_0BB@JONFNNOO@Medal?5SV?5Service@ DB 'Medal SV Service', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CHGLDJFP@Medal?5SV?5Lenin@
CONST	SEGMENT
??_C@_0P@CHGLDJFP@Medal?5SV?5Lenin@ DB 'Medal SV Lenin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@LMNGNCDL@Medal?5SV?5Banner@
CONST	SEGMENT
??_C@_0BA@LMNGNCDL@Medal?5SV?5Banner@ DB 'Medal SV Banner', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ONPAAEIP@Medal?5SV?5Glory@
CONST	SEGMENT
??_C@_0P@ONPAAEIP@Medal?5SV?5Glory@ DB 'Medal SV Glory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PIAKBEPB@Medal?5SV?5Master?5Wings@
CONST	SEGMENT
??_C@_0BG@PIAKBEPB@Medal?5SV?5Master?5Wings@ DB 'Medal SV Master Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JHPBIMOO@Medal?5SV?5Senior?5Wings@
CONST	SEGMENT
??_C@_0BG@JHPBIMOO@Medal?5SV?5Senior?5Wings@ DB 'Medal SV Senior Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OBBJPHBK@Medal?5SV?5Army?5Wings@
CONST	SEGMENT
??_C@_0BE@OBBJPHBK@Medal?5SV?5Army?5Wings@ DB 'Medal SV Army Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MGJHEKEL@Medal?5SV?5Taiwan@
CONST	SEGMENT
??_C@_0BA@MGJHEKEL@Medal?5SV?5Taiwan@ DB 'Medal SV Taiwan', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JNGBKPHG@Medal?5SV?5Lebanon@
CONST	SEGMENT
??_C@_0BB@JNGBKPHG@Medal?5SV?5Lebanon@ DB 'Medal SV Lebanon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GPNPPMPN@Medal?5SV?5Yemen@
CONST	SEGMENT
??_C@_0P@GPNPPMPN@Medal?5SV?5Yemen@ DB 'Medal SV Yemen', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDOANAIF@Medal?5Honour@
CONST	SEGMENT
??_C@_0N@KDOANAIF@Medal?5Honour@ DB 'Medal Honour', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BOJFGMNN@Medal?5Service@
CONST	SEGMENT
??_C@_0O@BOJFGMNN@Medal?5Service@ DB 'Medal Service', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FLJHBDKJ@Medal?5Silver@
CONST	SEGMENT
??_C@_0N@FLJHBDKJ@Medal?5Silver@ DB 'Medal Silver', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BJOEHDAH@Medal?5Distinguished@
CONST	SEGMENT
??_C@_0BE@BJOEHDAH@Medal?5Distinguished@ DB 'Medal Distinguished', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPPFACME@Medal?5Air@
CONST	SEGMENT
??_C@_09NPPFACME@Medal?5Air@ DB 'Medal Air', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OOICACPC@Medal?5Purple@
CONST	SEGMENT
??_C@_0N@OOICACPC@Medal?5Purple@ DB 'Medal Purple', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAFMOKND@Medal?5Master?5Wings@
CONST	SEGMENT
??_C@_0BD@PAFMOKND@Medal?5Master?5Wings@ DB 'Medal Master Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPKHHCMM@Medal?5Senior?5Wings@
CONST	SEGMENT
??_C@_0BD@JPKHHCMM@Medal?5Senior?5Wings@ DB 'Medal Senior Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EMDGHCDK@Medal?5Army?5Wings@
CONST	SEGMENT
??_C@_0BB@EMDGHCDK@Medal?5Army?5Wings@ DB 'Medal Army Wings', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ODEBLCNO@Medal?5Taiwan@
CONST	SEGMENT
??_C@_0N@ODEBLCNO@Medal?5Taiwan@ DB 'Medal Taiwan', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNCBBOEF@Medal?5Lebanon@
CONST	SEGMENT
??_C@_0O@BNCBBOEF@Medal?5Lebanon@ DB 'Medal Lebanon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJMAMPGJ@Medal?5Saudi@
CONST	SEGMENT
??_C@_0M@FJMAMPGJ@Medal?5Saudi@ DB 'Medal Saudi', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_artillery_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_artillery_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_artillery_kills, COMDAT

; 903  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 904  : 	log->side_log [side].kills.artillery++;

  00009	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00013	8b 94 01 b0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+176]
  0001a	83 c2 01	 add	 edx, 1
  0001d	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00027	89 94 01 b0 00
	00 00		 mov	 DWORD PTR [ecx+eax+176], edx

; 905  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?inc_player_log_artillery_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_artillery_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_armour_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_armour_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_armour_kills, COMDAT

; 898  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 899  : 	log->side_log [side].kills.armour++;

  00009	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00013	8b 94 01 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+172]
  0001a	83 c2 01	 add	 edx, 1
  0001d	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00027	89 94 01 ac 00
	00 00		 mov	 DWORD PTR [ecx+eax+172], edx

; 900  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?inc_player_log_armour_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_armour_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_ada_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_ada_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_ada_kills, COMDAT

; 893  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 894  : 	log->side_log [side].kills.air_defence++;

  00009	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00013	8b 94 01 a8 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+168]
  0001a	83 c2 01	 add	 edx, 1
  0001d	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00027	89 94 01 a8 00
	00 00		 mov	 DWORD PTR [ecx+eax+168], edx

; 895  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?inc_player_log_ada_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_ada_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_helicopter_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_helicopter_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_helicopter_kills, COMDAT

; 888  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 889  : 	log->side_log [side].kills.helicopter++;

  00009	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00013	8b 94 01 a4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+164]
  0001a	83 c2 01	 add	 edx, 1
  0001d	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00027	89 94 01 a4 00
	00 00		 mov	 DWORD PTR [ecx+eax+164], edx

; 890  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?inc_player_log_helicopter_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_helicopter_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_fixed_wing_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_fixed_wing_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_fixed_wing_kills, COMDAT

; 883  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 884  : 	log->side_log [side].kills.fixed_wing++;

  00009	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00010	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00013	8b 94 01 a0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+160]
  0001a	83 c2 01	 add	 edx, 1
  0001d	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00027	89 94 01 a0 00
	00 00		 mov	 DWORD PTR [ecx+eax+160], edx

; 885  : }

  0002e	5f		 pop	 edi
  0002f	5e		 pop	 esi
  00030	5b		 pop	 ebx
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 08 00	 ret	 8
?inc_player_log_fixed_wing_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_fixed_wing_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_friendly_kills, COMDAT

; 843  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 844  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 845  : 
; 846  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 847  : 
; 848  : 	log->side_log [side].kills.friendly ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 9c 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+156]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 9c 00
	00 00		 mov	 DWORD PTR [ecx+eax+156], edx

; 849  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_friendly_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_fixed_kills, COMDAT

; 830  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 831  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 832  : 
; 833  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 834  : 
; 835  : 	log->side_log [side].kills.fixed ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 94 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+148]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 94 00
	00 00		 mov	 DWORD PTR [ecx+eax+148], edx

; 836  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_fixed_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_sea_kills, COMDAT

; 817  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 818  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 819  : 
; 820  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 821  : 
; 822  : 	log->side_log [side].kills.sea ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 90 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+144]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 90 00
	00 00		 mov	 DWORD PTR [ecx+eax+144], edx

; 823  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_sea_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_ground_kills, COMDAT

; 804  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 805  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 806  : 
; 807  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 808  : 
; 809  : 	log->side_log [side].kills.ground ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 8c 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+140]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 8c 00
	00 00		 mov	 DWORD PTR [ecx+eax+140], edx

; 810  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_ground_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_air_kills, COMDAT

; 791  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 792  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 793  : 
; 794  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 795  : 
; 796  : 	log->side_log [side].kills.air ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 88 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+136]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 88 00
	00 00		 mov	 DWORD PTR [ecx+eax+136], edx

; 797  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_air_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?restore_log_from_backup@@YGHXZ
_TEXT	SEGMENT
_next_in_list$ = -4					; size = 4
?restore_log_from_backup@@YGHXZ PROC			; restore_log_from_backup, COMDAT

; 1165 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1166 : 	player_log_type* next_in_list;
; 1167 : 
; 1168 : 	if (!current_player_log || current_player_log->unique_id == 0
; 1169 : 		|| current_player_log->unique_id != current_backup_log.unique_id)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A, 0
  00010	74 1b		 je	 SHORT $LN3@restore_lo
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	74 10		 je	 SHORT $LN3@restore_lo
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00022	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00025	3b 0d 04 00 00
	00		 cmp	 ecx, DWORD PTR ?current_backup_log@@3UPLAYER_LOG_TYPE@@A+4
  0002b	74 04		 je	 SHORT $LN2@restore_lo
$LN3@restore_lo:

; 1170 : 	{
; 1171 : 		return FALSE;

  0002d	33 c0		 xor	 eax, eax
  0002f	eb 33		 jmp	 SHORT $LN1@restore_lo
$LN2@restore_lo:

; 1172 : 	}
; 1173 : 
; 1174 : 	next_in_list = current_player_log->next;   // make sure next pointer is retained

  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00036	8b 88 3c 0d 00
	00		 mov	 ecx, DWORD PTR [eax+3388]
  0003c	89 4d fc	 mov	 DWORD PTR _next_in_list$[ebp], ecx

; 1175 : 
; 1176 : 	*current_player_log = current_backup_log;

  0003f	b9 50 03 00 00	 mov	 ecx, 848		; 00000350H
  00044	be 00 00 00 00	 mov	 esi, OFFSET ?current_backup_log@@3UPLAYER_LOG_TYPE@@A
  00049	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  0004f	f3 a5		 rep movsd

; 1177 : 	current_player_log->next = next_in_list;

  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _next_in_list$[ebp]
  00059	89 88 3c 0d 00
	00		 mov	 DWORD PTR [eax+3388], ecx

; 1178 : 
; 1179 : 	return TRUE;

  0005f	b8 01 00 00 00	 mov	 eax, 1
$LN1@restore_lo:

; 1180 : }

  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?restore_log_from_backup@@YGHXZ ENDP			; restore_log_from_backup
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?backup_current_player_log@@YGXXZ
_TEXT	SEGMENT
?backup_current_player_log@@YGXXZ PROC			; backup_current_player_log, COMDAT

; 1150 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1151 : 	if (!current_player_log || current_player_log->unique_id == 0)

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A, 0
  00010	74 0b		 je	 SHORT $LN3@backup_cur
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00017	83 78 04 00	 cmp	 DWORD PTR [eax+4], 0
  0001b	75 0c		 jne	 SHORT $LN2@backup_cur
$LN3@backup_cur:

; 1152 : 	{
; 1153 : 		current_backup_log.unique_id = 0;  // invalid

  0001d	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?current_backup_log@@3UPLAYER_LOG_TYPE@@A+4, 0

; 1154 : 		return;

  00027	eb 12		 jmp	 SHORT $LN1@backup_cur
$LN2@backup_cur:

; 1155 : 	}
; 1156 : 
; 1157 : 	current_backup_log = *current_player_log;

  00029	b9 50 03 00 00	 mov	 ecx, 848		; 00000350H
  0002e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A
  00034	bf 00 00 00 00	 mov	 edi, OFFSET ?current_backup_log@@3UPLAYER_LOG_TYPE@@A
  00039	f3 a5		 rep movsd
$LN1@backup_cur:

; 1158 : }

  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx
  0003e	8b e5		 mov	 esp, ebp
  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
?backup_current_player_log@@YGXXZ ENDP			; backup_current_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_helicopters_lost, COMDAT

; 869  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 870  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 871  : 
; 872  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 873  : 
; 874  : 	log->side_log [side].helicopters_lost++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 50 03
	00 00		 mov	 edx, DWORD PTR [ecx+eax+848]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 50 03
	00 00		 mov	 DWORD PTR [ecx+eax+848], edx

; 875  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_helicopters_lost@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_helicopters_lost
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC	; inc_player_log_deaths, COMDAT

; 856  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 857  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 858  : 
; 859  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 860  : 
; 861  : 	log->side_log [side].kills.deaths ++;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 94 01 98 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax+152]
  0005c	83 c2 01	 add	 edx, 1
  0005f	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00066	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00069	89 94 01 98 00
	00 00		 mov	 DWORD PTR [ecx+eax+152], edx

; 862  : }

  00070	5f		 pop	 edi
  00071	5e		 pop	 esi
  00072	5b		 pop	 ebx
  00073	8b e5		 mov	 esp, ebp
  00075	5d		 pop	 ebp
  00076	c2 08 00	 ret	 8
?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP	; inc_player_log_deaths
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
?inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; inc_player_weapon_log_hit, COMDAT

; 1137 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1138 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 1139 : 
; 1140 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 1141 : 
; 1142 : 	++log->side_log [side].weapon_usage[weapon][WEAPON_LOG_HIT];

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	c1 e2 00	 shl	 edx, 0
  0006b	8b 04 11	 mov	 eax, DWORD PTR [ecx+edx]
  0006e	83 c0 01	 add	 eax, 1
  00071	b9 04 00 00 00	 mov	 ecx, 4
  00076	c1 e1 00	 shl	 ecx, 0
  00079	69 55 08 4c 03
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 844
  00080	8b 75 0c	 mov	 esi, DWORD PTR _log$[ebp]
  00083	8d 54 16 0c	 lea	 edx, DWORD PTR [esi+edx+12]
  00087	8b 75 10	 mov	 esi, DWORD PTR _weapon$[ebp]
  0008a	8d 94 f2 a8 00
	00 00		 lea	 edx, DWORD PTR [edx+esi*8+168]
  00091	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 1143 : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 0c 00	 ret	 12			; 0000000cH
?inc_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; inc_player_weapon_log_hit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
_hit_count$ = 20					; size = 4
?set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z PROC ; set_player_weapon_log_hit, COMDAT

; 1124 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1125 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 1126 : 
; 1127 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 1128 : 
; 1129 : 	log->side_log [side].weapon_usage[weapon][WEAPON_LOG_HIT] =  hit_count;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	c1 e2 00	 shl	 edx, 0
  0006b	8b 45 14	 mov	 eax, DWORD PTR _hit_count$[ebp]
  0006e	89 04 11	 mov	 DWORD PTR [ecx+edx], eax

; 1130 : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 10 00	 ret	 16			; 00000010H
?set_player_weapon_log_hit@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z ENDP ; set_player_weapon_log_hit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
?get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z PROC ; get_player_weapon_log_hit, COMDAT

; 1111 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1112 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 1113 : 
; 1114 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 1115 : 
; 1116 : 	return log->side_log [side].weapon_usage[weapon][WEAPON_LOG_FIRED];

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	6b c2 00	 imul	 eax, edx, 0
  0006b	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]

; 1117 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 0c 00	 ret	 12			; 0000000cH
?get_player_weapon_log_hit@@YGHHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; get_player_weapon_log_hit
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
?inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; inc_player_weapon_log_fired, COMDAT

; 1098 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1099 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 1100 : 
; 1101 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 1102 : 
; 1103 : 	++log->side_log [side].weapon_usage[weapon][WEAPON_LOG_FIRED];

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	6b c2 00	 imul	 eax, edx, 0
  0006b	8b 0c 01	 mov	 ecx, DWORD PTR [ecx+eax]
  0006e	83 c1 01	 add	 ecx, 1
  00071	ba 04 00 00 00	 mov	 edx, 4
  00076	6b c2 00	 imul	 eax, edx, 0
  00079	69 55 08 4c 03
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 844
  00080	8b 75 0c	 mov	 esi, DWORD PTR _log$[ebp]
  00083	8d 54 16 0c	 lea	 edx, DWORD PTR [esi+edx+12]
  00087	8b 75 10	 mov	 esi, DWORD PTR _weapon$[ebp]
  0008a	8d 94 f2 a8 00
	00 00		 lea	 edx, DWORD PTR [edx+esi*8+168]
  00091	89 0c 02	 mov	 DWORD PTR [edx+eax], ecx

; 1104 : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 0c 00	 ret	 12			; 0000000cH
?inc_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; inc_player_weapon_log_fired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
_fired_count$ = 20					; size = 4
?set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z PROC ; set_player_weapon_log_fired, COMDAT

; 1085 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1086 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 1087 : 
; 1088 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 1089 : 
; 1090 : 	log->side_log [side].weapon_usage[weapon][WEAPON_LOG_FIRED] =  fired_count;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	6b c2 00	 imul	 eax, edx, 0
  0006b	8b 55 14	 mov	 edx, DWORD PTR _fired_count$[ebp]
  0006e	89 14 01	 mov	 DWORD PTR [ecx+eax], edx

; 1091 : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 10 00	 ret	 16			; 00000010H
?set_player_weapon_log_fired@@YGXHPAUPLAYER_LOG_TYPE@@HH@Z ENDP ; set_player_weapon_log_fired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_weapon$ = 16						; size = 4
?get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z PROC ; get_player_weapon_log_fired, COMDAT

; 1072 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1073 : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 1074 : 
; 1075 : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 1076 : 
; 1077 : 	return log->side_log [side].weapon_usage[weapon][WEAPON_LOG_FIRED];

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	8b 45 10	 mov	 eax, DWORD PTR _weapon$[ebp]
  0005c	8d 8c c2 a8 00
	00 00		 lea	 ecx, DWORD PTR [edx+eax*8+168]
  00063	ba 04 00 00 00	 mov	 edx, 4
  00068	6b c2 00	 imul	 eax, edx, 0
  0006b	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]

; 1078 : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 0c 00	 ret	 12			; 0000000cH
?get_player_weapon_log_fired@@YGHHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; get_player_weapon_log_fired
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z
_TEXT	SEGMENT
_total_success_rate$ = -8				; size = 4
_missions_flown$ = -4					; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_success_rate$ = 16					; size = 4
?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z PROC ; update_player_log_mission_success_rate, COMDAT

; 983  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 984  : 	int
; 985  : 		missions_flown;
; 986  : 
; 987  : 	float
; 988  : 		total_success_rate;
; 989  : 
; 990  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@update_pla
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  00014	83 c0 07	 add	 eax, 7
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@update_pla:

; 991  : 
; 992  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@update_pla
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@update_pla
$LN4@update_pla:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  00038	83 c0 09	 add	 eax, 9
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@update_pla:

; 993  : 
; 994  : 	missions_flown = log->side_log [side].missions_flown;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 54 01 18	 mov	 edx, DWORD PTR [ecx+eax+24]
  00059	89 55 fc	 mov	 DWORD PTR _missions_flown$[ebp], edx

; 995  : 
; 996  : 	total_success_rate =	(float)missions_flown * log->side_log [side].mission_success_rate;

  0005c	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _missions_flown$[ebp]
  00061	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00068	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  0006b	f3 0f 59 84 01
	84 00 00 00	 mulss	 xmm0, DWORD PTR [ecx+eax+132]
  00074	f3 0f 11 45 f8	 movss	 DWORD PTR _total_success_rate$[ebp], xmm0

; 997  : 
; 998  : 	total_success_rate += success_rate;

  00079	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _total_success_rate$[ebp]
  0007e	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _success_rate$[ebp]
  00083	f3 0f 11 45 f8	 movss	 DWORD PTR _total_success_rate$[ebp], xmm0

; 999  : 
; 1000 : //	arneh - commented out this, as mission count has already been updated by inc_player_log_missions_flown
; 1001 : //	missions_flown += 1;
; 1002 : 
; 1003 : 	log->side_log [side].mission_success_rate = (total_success_rate / missions_flown);

  00088	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _missions_flown$[ebp]
  0008d	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _total_success_rate$[ebp]
  00092	f3 0f 5e c8	 divss	 xmm1, xmm0
  00096	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0009d	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  000a0	f3 0f 11 8c 01
	84 00 00 00	 movss	 DWORD PTR [ecx+eax+132], xmm1

; 1004 : 
; 1005 : //	log->side_log [side].missions_flown = missions_flown;
; 1006 : }

  000a9	5f		 pop	 edi
  000aa	5e		 pop	 esi
  000ab	5b		 pop	 ebx
  000ac	8b e5		 mov	 esp, ebp
  000ae	5d		 pop	 ebp
  000af	c2 0c 00	 ret	 12			; 0000000cH
?update_player_log_mission_success_rate@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ENDP ; update_player_log_mission_success_rate
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z
_TEXT	SEGMENT
tv167 = -76						; size = 4
tv140 = -76						; size = 4
tv95 = -76						; size = 4
tv159 = -72						; size = 4
tv139 = -72						; size = 4
tv88 = -72						; size = 4
_map_icon$1 = -4					; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_victim$ = 16						; size = 4
?inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z PROC ; inc_player_log_kills, COMDAT

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 913  : 	ASSERT (victim);

  00009	83 7d 10 00	 cmp	 DWORD PTR _victim$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06GPEKEEBB@victim@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@inc_player:

; 914  : 	ASSERT (log);

  00027	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0002b	75 18		 jne	 SHORT $LN5@inc_player
  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
  00032	83 c0 02	 add	 eax, 2
  00035	50		 push	 eax
  00036	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0003b	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00040	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@inc_player:

; 915  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00045	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  00049	7c 06		 jl	 SHORT $LN7@inc_player
  0004b	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  0004f	7e 18		 jle	 SHORT $LN6@inc_player
$LN7@inc_player:
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
  00056	83 c0 03	 add	 eax, 3
  00059	50		 push	 eax
  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00064	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN6@inc_player:

; 916  : 
; 917  : 	if (victim == get_gunship_entity ())

  00069	8b 45 10	 mov	 eax, DWORD PTR _victim$[ebp]
  0006c	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00072	75 12		 jne	 SHORT $LN8@inc_player

; 918  : 	{
; 919  : 		inc_player_log_deaths (side, log);

  00074	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00077	50		 push	 eax
  00078	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  0007b	51		 push	 ecx
  0007c	e8 00 00 00 00	 call	 ?inc_player_log_deaths@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_deaths

; 920  : 	}
; 921  : 	else

  00081	e9 2c 02 00 00	 jmp	 $LN1@inc_player
$LN8@inc_player:

; 922  : 	{
; 923  : 		if (get_local_entity_int_value (victim, INT_TYPE_SIDE) != get_global_gunship_side ())

  00086	83 7d 10 00	 cmp	 DWORD PTR _victim$[ebp], 0
  0008a	74 0a		 je	 SHORT $LN24@inc_player
  0008c	8b 45 10	 mov	 eax, DWORD PTR _victim$[ebp]
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	89 4d b8	 mov	 DWORD PTR tv88[ebp], ecx
  00094	eb 1d		 jmp	 SHORT $LN25@inc_player
$LN24@inc_player:
  00096	68 9b 03 00 00	 push	 923			; 0000039bH
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000a6	52		 push	 edx
  000a7	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000ac	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv88[ebp], 0
$LN25@inc_player:
  000b3	b8 01 00 00 00	 mov	 eax, 1
  000b8	85 c0		 test	 eax, eax
  000ba	74 09		 je	 SHORT $LN26@inc_player
  000bc	c7 45 b4 bb 00
	00 00		 mov	 DWORD PTR tv95[ebp], 187 ; 000000bbH
  000c3	eb 1d		 jmp	 SHORT $LN27@inc_player
$LN26@inc_player:
  000c5	68 9b 03 00 00	 push	 923			; 0000039bH
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000d5	51		 push	 ecx
  000d6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000db	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv95[ebp], 0
$LN27@inc_player:
  000e2	68 bb 00 00 00	 push	 187			; 000000bbH
  000e7	8b 55 10	 mov	 edx, DWORD PTR _victim$[ebp]
  000ea	52		 push	 edx
  000eb	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv88[ebp], 1116
  000f2	8b 4d b4	 mov	 ecx, DWORD PTR tv95[ebp]
  000f5	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  000fc	ff d2		 call	 edx
  000fe	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+8
  00104	0f 84 9b 01 00
	00		 je	 $LN10@inc_player

; 924  : 		{
; 925  : 			switch (get_local_entity_type (victim))

  0010a	83 7d 10 00	 cmp	 DWORD PTR _victim$[ebp], 0
  0010e	74 0a		 je	 SHORT $LN28@inc_player
  00110	8b 45 10	 mov	 eax, DWORD PTR _victim$[ebp]
  00113	8b 08		 mov	 ecx, DWORD PTR [eax]
  00115	89 4d b8	 mov	 DWORD PTR tv139[ebp], ecx
  00118	eb 1d		 jmp	 SHORT $LN29@inc_player
$LN28@inc_player:
  0011a	68 9d 03 00 00	 push	 925			; 0000039dH
  0011f	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00124	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0012a	52		 push	 edx
  0012b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00130	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv139[ebp], 0
$LN29@inc_player:
  00137	8b 45 b8	 mov	 eax, DWORD PTR tv139[ebp]
  0013a	89 45 b4	 mov	 DWORD PTR tv140[ebp], eax
  0013d	8b 4d b4	 mov	 ecx, DWORD PTR tv140[ebp]
  00140	83 e9 01	 sub	 ecx, 1
  00143	89 4d b4	 mov	 DWORD PTR tv140[ebp], ecx
  00146	83 7d b4 1d	 cmp	 DWORD PTR tv140[ebp], 29 ; 0000001dH
  0014a	0f 87 53 01 00
	00		 ja	 $LN2@inc_player
  00150	8b 55 b4	 mov	 edx, DWORD PTR tv140[ebp]
  00153	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN34@inc_player[edx]
  0015a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN35@inc_player[eax*4]
$LN12@inc_player:

; 926  : 			{
; 927  : 				case ENTITY_TYPE_FIXED_WING:
; 928  : 					inc_player_log_fixed_wing_kills(side, log);

  00161	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00164	50		 push	 eax
  00165	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00168	51		 push	 ecx
  00169	e8 00 00 00 00	 call	 ?inc_player_log_fixed_wing_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_fixed_wing_kills

; 929  : 					inc_player_log_air_kills (side, log);

  0016e	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00171	50		 push	 eax
  00172	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00175	51		 push	 ecx
  00176	e8 00 00 00 00	 call	 ?inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_air_kills

; 930  : 
; 931  : 					break;

  0017b	e9 23 01 00 00	 jmp	 $LN2@inc_player
$LN13@inc_player:

; 932  : 				case ENTITY_TYPE_HELICOPTER:
; 933  : 					inc_player_log_helicopter_kills (side, log);

  00180	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00183	50		 push	 eax
  00184	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 ?inc_player_log_helicopter_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_helicopter_kills

; 934  : 					inc_player_log_air_kills (side, log);

  0018d	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00190	50		 push	 eax
  00191	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00194	51		 push	 ecx
  00195	e8 00 00 00 00	 call	 ?inc_player_log_air_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_air_kills

; 935  : 
; 936  : 					break;

  0019a	e9 04 01 00 00	 jmp	 $LN2@inc_player
$LN14@inc_player:

; 937  : 				case ENTITY_TYPE_ANTI_AIRCRAFT:
; 938  : 					inc_player_log_ada_kills(side, log);

  0019f	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  001a2	50		 push	 eax
  001a3	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  001a6	51		 push	 ecx
  001a7	e8 00 00 00 00	 call	 ?inc_player_log_ada_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_ada_kills

; 939  : 					inc_player_log_ground_kills (side, log);

  001ac	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  001af	50		 push	 eax
  001b0	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  001b3	51		 push	 ecx
  001b4	e8 00 00 00 00	 call	 ?inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_ground_kills

; 940  : 
; 941  : 					break;

  001b9	e9 e5 00 00 00	 jmp	 $LN2@inc_player
$LN15@inc_player:

; 942  : 				case ENTITY_TYPE_ROUTED_VEHICLE:
; 943  : 					{
; 944  : 						int	map_icon = vehicle_database[get_local_entity_int_value(victim, INT_TYPE_ENTITY_SUB_TYPE)].map_icon;

  001be	83 7d 10 00	 cmp	 DWORD PTR _victim$[ebp], 0
  001c2	74 0a		 je	 SHORT $LN30@inc_player
  001c4	8b 45 10	 mov	 eax, DWORD PTR _victim$[ebp]
  001c7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001c9	89 4d b8	 mov	 DWORD PTR tv159[ebp], ecx
  001cc	eb 21		 jmp	 SHORT $LN31@inc_player
$LN30@inc_player:
  001ce	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
  001d4	83 c2 20	 add	 edx, 32			; 00000020H
  001d7	52		 push	 edx
  001d8	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  001dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  001e2	50		 push	 eax
  001e3	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001e8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv159[ebp], 0
$LN31@inc_player:
  001ef	b9 01 00 00 00	 mov	 ecx, 1
  001f4	85 c9		 test	 ecx, ecx
  001f6	74 09		 je	 SHORT $LN32@inc_player
  001f8	c7 45 b4 34 00
	00 00		 mov	 DWORD PTR tv167[ebp], 52 ; 00000034H
  001ff	eb 21		 jmp	 SHORT $LN33@inc_player
$LN32@inc_player:
  00201	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z@4JA
  00207	83 c2 20	 add	 edx, 32			; 00000020H
  0020a	52		 push	 edx
  0020b	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00210	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0021b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv167[ebp], 0
$LN33@inc_player:
  00222	6a 34		 push	 52			; 00000034H
  00224	8b 4d 10	 mov	 ecx, DWORD PTR _victim$[ebp]
  00227	51		 push	 ecx
  00228	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv159[ebp], 1116
  0022f	8b 45 b4	 mov	 eax, DWORD PTR tv167[ebp]
  00232	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00239	ff d1		 call	 ecx
  0023b	69 d0 bc 00 00
	00		 imul	 edx, eax, 188
  00241	8b 82 44 00 00
	00		 mov	 eax, DWORD PTR ?vehicle_database@@3PAUVEHICLE_DATA@@A[edx+68]
  00247	89 45 fc	 mov	 DWORD PTR _map_icon$1[ebp], eax

; 945  : 
; 946  : 						inc_player_log_ground_kills (side, log);

  0024a	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  0024d	50		 push	 eax
  0024e	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00251	51		 push	 ecx
  00252	e8 00 00 00 00	 call	 ?inc_player_log_ground_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_ground_kills

; 947  : 						
; 948  : 						if (map_icon == MAP_ICON_TANK || map_icon == MAP_ICON_APC)

  00257	83 7d fc 16	 cmp	 DWORD PTR _map_icon$1[ebp], 22 ; 00000016H
  0025b	74 06		 je	 SHORT $LN18@inc_player
  0025d	83 7d fc 03	 cmp	 DWORD PTR _map_icon$1[ebp], 3
  00261	75 0f		 jne	 SHORT $LN16@inc_player
$LN18@inc_player:

; 949  : 							inc_player_log_armour_kills(side, log);

  00263	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00266	50		 push	 eax
  00267	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  0026a	51		 push	 ecx
  0026b	e8 00 00 00 00	 call	 ?inc_player_log_armour_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_armour_kills
  00270	eb 13		 jmp	 SHORT $LN17@inc_player
$LN16@inc_player:

; 950  : 						else if (map_icon == MAP_ICON_ARTILLERY)

  00272	83 7d fc 04	 cmp	 DWORD PTR _map_icon$1[ebp], 4
  00276	75 0d		 jne	 SHORT $LN17@inc_player

; 951  : 							inc_player_log_artillery_kills(side, log);

  00278	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  0027b	50		 push	 eax
  0027c	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  0027f	51		 push	 ecx
  00280	e8 00 00 00 00	 call	 ?inc_player_log_artillery_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_artillery_kills
$LN17@inc_player:

; 952  : 
; 953  : 						break;

  00285	eb 1c		 jmp	 SHORT $LN2@inc_player
$LN20@inc_player:

; 954  : 					}
; 955  : 				case ENTITY_TYPE_SHIP_VEHICLE:
; 956  : 					inc_player_log_sea_kills (side, log);

  00287	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  0028a	50		 push	 eax
  0028b	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  0028e	51		 push	 ecx
  0028f	e8 00 00 00 00	 call	 ?inc_player_log_sea_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_sea_kills

; 957  : 		
; 958  : 					break;

  00294	eb 0d		 jmp	 SHORT $LN2@inc_player
$LN21@inc_player:

; 959  : 				case ENTITY_TYPE_BRIDGE:
; 960  : 				case ENTITY_TYPE_CITY_BUILDING:
; 961  : 				case ENTITY_TYPE_SCENIC:
; 962  : 				case ENTITY_TYPE_SITE:
; 963  : 				case ENTITY_TYPE_SITE_UPDATABLE:
; 964  : 					inc_player_log_fixed_kills (side, log);

  00296	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00299	50		 push	 eax
  0029a	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  0029d	51		 push	 ecx
  0029e	e8 00 00 00 00	 call	 ?inc_player_log_fixed_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_fixed_kills
$LN2@inc_player:

; 965  : 		
; 966  : 					break;
; 967  : 				default:
; 968  : 					break;
; 969  : 			}
; 970  : 		}
; 971  : 		else

  002a3	eb 0d		 jmp	 SHORT $LN1@inc_player
$LN10@inc_player:

; 972  : 		{
; 973  : 			inc_player_log_friendly_kills (side, log);

  002a5	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  002a8	50		 push	 eax
  002a9	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  002ac	51		 push	 ecx
  002ad	e8 00 00 00 00	 call	 ?inc_player_log_friendly_kills@@YGXHPAUPLAYER_LOG_TYPE@@@Z ; inc_player_log_friendly_kills
$LN1@inc_player:

; 974  : 		}
; 975  : 	}
; 976  : }

  002b2	5f		 pop	 edi
  002b3	5e		 pop	 esi
  002b4	5b		 pop	 ebx
  002b5	8b e5		 mov	 esp, ebp
  002b7	5d		 pop	 ebp
  002b8	c2 0c 00	 ret	 12			; 0000000cH
  002bb	90		 npad	 1
$LN35@inc_player:
  002bc	00 00 00 00	 DD	 $LN14@inc_player
  002c0	00 00 00 00	 DD	 $LN21@inc_player
  002c4	00 00 00 00	 DD	 $LN12@inc_player
  002c8	00 00 00 00	 DD	 $LN13@inc_player
  002cc	00 00 00 00	 DD	 $LN15@inc_player
  002d0	00 00 00 00	 DD	 $LN20@inc_player
  002d4	00 00 00 00	 DD	 $LN2@inc_player
$LN34@inc_player:
  002d8	00		 DB	 0
  002d9	01		 DB	 1
  002da	06		 DB	 6
  002db	06		 DB	 6
  002dc	06		 DB	 6
  002dd	01		 DB	 1
  002de	06		 DB	 6
  002df	06		 DB	 6
  002e0	06		 DB	 6
  002e1	02		 DB	 2
  002e2	06		 DB	 6
  002e3	06		 DB	 6
  002e4	06		 DB	 6
  002e5	03		 DB	 3
  002e6	06		 DB	 6
  002e7	06		 DB	 6
  002e8	06		 DB	 6
  002e9	06		 DB	 6
  002ea	06		 DB	 6
  002eb	06		 DB	 6
  002ec	06		 DB	 6
  002ed	06		 DB	 6
  002ee	04		 DB	 4
  002ef	01		 DB	 1
  002f0	06		 DB	 6
  002f1	06		 DB	 6
  002f2	06		 DB	 6
  002f3	05		 DB	 5
  002f4	01		 DB	 1
  002f5	01		 DB	 1
?inc_player_log_kills@@YGXHPAUPLAYER_LOG_TYPE@@PAUENTITY@@@Z ENDP ; inc_player_log_kills
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z
_TEXT	SEGMENT
_type$ = -4						; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_delta_flying_seconds$ = 16				; size = 4
?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z PROC ; inc_player_log_flying_seconds, COMDAT

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 774  : 	gunship_types type = get_global_gunship_type();

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 fc	 mov	 DWORD PTR _type$[ebp], eax

; 775  : 	
; 776  : 	ASSERT (log);

  00011	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  00015	75 18		 jne	 SHORT $LN2@inc_player
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  0001c	83 c0 03	 add	 eax, 3
  0001f	50		 push	 eax
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 777  : 
; 778  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  0002f	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  00033	7c 06		 jl	 SHORT $LN4@inc_player
  00035	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00039	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  00040	83 c0 05	 add	 eax, 5
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 779  : 
; 780  : 	log->side_log [side].flying_seconds += delta_flying_seconds;

  00053	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  0005d	f3 0f 10 84 01
	80 00 00 00	 movss	 xmm0, DWORD PTR [ecx+eax+128]
  00066	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _delta_flying_seconds$[ebp]
  0006b	69 55 08 4c 03
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 844
  00072	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  00075	f3 0f 11 84 10
	80 00 00 00	 movss	 DWORD PTR [eax+edx+128], xmm0

; 781  : 	
; 782  : 	if (type < NUM_GUNSHIP_TYPES)

  0007e	83 7d fc 0a	 cmp	 DWORD PTR _type$[ebp], 10 ; 0000000aH
  00082	7d 39		 jge	 SHORT $LN5@inc_player

; 783  : 		log->side_log [side].gunship_flying_seconds[type] += delta_flying_seconds;

  00084	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0008b	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  0008e	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00092	8b 45 fc	 mov	 eax, DWORD PTR _type$[ebp]
  00095	f3 0f 10 84 82
	08 03 00 00	 movss	 xmm0, DWORD PTR [edx+eax*4+776]
  0009e	f3 0f 58 45 10	 addss	 xmm0, DWORD PTR _delta_flying_seconds$[ebp]
  000a3	69 4d 08 4c 03
	00 00		 imul	 ecx, DWORD PTR _side$[ebp], 844
  000aa	8b 55 0c	 mov	 edx, DWORD PTR _log$[ebp]
  000ad	8d 44 0a 0c	 lea	 eax, DWORD PTR [edx+ecx+12]
  000b1	8b 4d fc	 mov	 ecx, DWORD PTR _type$[ebp]
  000b4	f3 0f 11 84 88
	08 03 00 00	 movss	 DWORD PTR [eax+ecx*4+776], xmm0
$LN5@inc_player:

; 784  : }

  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx
  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c2 0c 00	 ret	 12			; 0000000cH
?inc_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ENDP ; inc_player_log_flying_seconds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_flying_seconds$ = 16					; size = 4
?set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z PROC ; set_player_log_flying_seconds, COMDAT

; 760  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 761  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 762  : 
; 763  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 764  : 
; 765  : 	log->side_log [side].flying_seconds = flying_seconds;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _flying_seconds$[ebp]
  0005a	f3 0f 11 84 01
	80 00 00 00	 movss	 DWORD PTR [ecx+eax+128], xmm0

; 766  : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5b		 pop	 ebx
  00066	8b e5		 mov	 esp, ebp
  00068	5d		 pop	 ebp
  00069	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_flying_seconds@@YGXHPAUPLAYER_LOG_TYPE@@M@Z ENDP ; set_player_log_flying_seconds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_flying_seconds, COMDAT

; 747  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 748  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 749  : 
; 750  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 751  : 
; 752  : 	return log->side_log [side].flying_seconds;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	d9 84 01 80 00
	00 00		 fld	 DWORD PTR [ecx+eax+128]

; 753  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 08 00	 ret	 8
?get_player_log_flying_seconds@@YGMHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_flying_seconds
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
tv85 = -68						; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_flying_hours, COMDAT

; 734  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 735  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 736  : 
; 737  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 738  : 
; 739  : 	return (float) log->side_log [side].flying_seconds / TIME_1_HOUR;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	f3 0f 10 84 01
	80 00 00 00	 movss	 xmm0, DWORD PTR [ecx+eax+128]
  0005e	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@4a5bba00
  00066	f3 0f 11 45 bc	 movss	 DWORD PTR tv85[ebp], xmm0
  0006b	d9 45 bc	 fld	 DWORD PTR tv85[ebp]

; 740  : }

  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c2 08 00	 ret	 8
?get_player_log_flying_hours@@YGMHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_flying_hours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_task_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
tv67 = -72						; size = 4
_rank$ = -4						; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_task_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_task_level, COMDAT

; 1013 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1014 : 
; 1015 : 	int
; 1016 : 		rank;
; 1017 : 
; 1018 : 	rank = get_player_log_rank (side, log);

  00009	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _side$[ebp]
  00010	51		 push	 ecx
  00011	e8 00 00 00 00	 call	 ?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ; get_player_log_rank
  00016	89 45 fc	 mov	 DWORD PTR _rank$[ebp], eax

; 1019 : 
; 1020 : 	switch ( rank )

  00019	8b 45 fc	 mov	 eax, DWORD PTR _rank$[ebp]
  0001c	89 45 b8	 mov	 DWORD PTR tv67[ebp], eax
  0001f	8b 4d b8	 mov	 ecx, DWORD PTR tv67[ebp]
  00022	83 e9 01	 sub	 ecx, 1
  00025	89 4d b8	 mov	 DWORD PTR tv67[ebp], ecx
  00028	83 7d b8 04	 cmp	 DWORD PTR tv67[ebp], 4
  0002c	77 35		 ja	 SHORT $LN2@get_player
  0002e	8b 55 b8	 mov	 edx, DWORD PTR tv67[ebp]
  00031	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN10@get_player[edx*4]
$LN4@get_player:

; 1021 : 	{
; 1022 : 
; 1023 : 		case PILOT_RANK_LIEUTENANT:
; 1024 : 		{
; 1025 : 
; 1026 : 			return ( 6 );

  00038	b8 06 00 00 00	 mov	 eax, 6
  0003d	eb 26		 jmp	 SHORT $LN1@get_player

; 1027 : 
; 1028 : 			break;

  0003f	eb 22		 jmp	 SHORT $LN2@get_player
$LN5@get_player:

; 1029 : 		}
; 1030 : 
; 1031 : 		case PILOT_RANK_CAPTAIN:
; 1032 : 		{
; 1033 : 
; 1034 : 			return ( 7 );

  00041	b8 07 00 00 00	 mov	 eax, 7
  00046	eb 1d		 jmp	 SHORT $LN1@get_player

; 1035 : 
; 1036 : 			break;

  00048	eb 19		 jmp	 SHORT $LN2@get_player
$LN6@get_player:

; 1037 : 		}
; 1038 : 
; 1039 : 		case PILOT_RANK_MAJOR:
; 1040 : 		{
; 1041 : 
; 1042 : 			return ( 8 );

  0004a	b8 08 00 00 00	 mov	 eax, 8
  0004f	eb 14		 jmp	 SHORT $LN1@get_player

; 1043 : 
; 1044 : 			break;

  00051	eb 10		 jmp	 SHORT $LN2@get_player
$LN7@get_player:

; 1045 : 		}
; 1046 : 
; 1047 : 		case PILOT_RANK_LT_COLONEL:
; 1048 : 		{
; 1049 : 
; 1050 : 			return ( 9 );

  00053	b8 09 00 00 00	 mov	 eax, 9
  00058	eb 0b		 jmp	 SHORT $LN1@get_player

; 1051 : 
; 1052 : 			break;

  0005a	eb 07		 jmp	 SHORT $LN2@get_player
$LN8@get_player:

; 1053 : 		}
; 1054 : 
; 1055 : 		case PILOT_RANK_COLONEL:
; 1056 : 		{
; 1057 : 
; 1058 : 			return ( 10 );

  0005c	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00061	eb 02		 jmp	 SHORT $LN1@get_player
$LN2@get_player:

; 1059 : 
; 1060 : 			break;
; 1061 : 		}
; 1062 : 	}
; 1063 : 
; 1064 : 	return ( 0 );

  00063	33 c0		 xor	 eax, eax
$LN1@get_player:

; 1065 : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
  0006e	66 90		 npad	 2
$LN10@get_player:
  00070	00 00 00 00	 DD	 $LN4@get_player
  00074	00 00 00 00	 DD	 $LN5@get_player
  00078	00 00 00 00	 DD	 $LN6@get_player
  0007c	00 00 00 00	 DD	 $LN7@get_player
  00080	00 00 00 00	 DD	 $LN8@get_player
?get_player_log_task_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_task_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_level$ = 16						; size = 4
?set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC	; set_player_log_level, COMDAT

; 721  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 722  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 723  : 
; 724  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 725  : 
; 726  : 	log->side_log [side].level [0] = level;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	b8 04 00 00 00	 mov	 eax, 4
  0005e	6b c8 00	 imul	 ecx, eax, 0
  00061	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  00064	89 44 0a 4c	 mov	 DWORD PTR [edx+ecx+76], eax

; 727  : }

  00068	5f		 pop	 edi
  00069	5e		 pop	 esi
  0006a	5b		 pop	 ebx
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_level@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP	; set_player_log_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC	; get_player_log_level, COMDAT

; 708  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 709  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 710  : 
; 711  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 712  : 
; 713  : 	return log->side_log [side].level [0];

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00059	b8 04 00 00 00	 mov	 eax, 4
  0005e	6b c8 00	 imul	 ecx, eax, 0
  00061	8b 44 0a 4c	 mov	 eax, DWORD PTR [edx+ecx+76]

; 714  : }

  00065	5f		 pop	 edi
  00066	5e		 pop	 esi
  00067	5b		 pop	 ebx
  00068	8b e5		 mov	 esp, ebp
  0006a	5d		 pop	 ebp
  0006b	c2 08 00	 ret	 8
?get_player_log_level@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP	; get_player_log_level
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_successful_tours, COMDAT

; 695  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 696  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 697  : 
; 698  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 699  : 
; 700  : 	log->side_log [side].successful_tours += 1;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 54 01 1c	 mov	 edx, DWORD PTR [ecx+eax+28]
  00059	83 c2 01	 add	 edx, 1
  0005c	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00066	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 701  : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?inc_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_successful_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_successful_tours$ = 16					; size = 4
?set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; set_player_log_successful_tours, COMDAT

; 682  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 683  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 684  : 
; 685  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 686  : 
; 687  : 	log->side_log [side].successful_tours = successful_tours;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 55 10	 mov	 edx, DWORD PTR _successful_tours$[ebp]
  00058	89 54 01 1c	 mov	 DWORD PTR [ecx+eax+28], edx

; 688  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_successful_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; set_player_log_successful_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_successful_tours, COMDAT

; 669  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 670  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 671  : 
; 672  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 673  : 
; 674  : 	return log->side_log [side].successful_tours;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 44 01 1c	 mov	 eax, DWORD PTR [ecx+eax+28]

; 675  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?get_player_log_successful_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_successful_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_failed_tours, COMDAT

; 656  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 657  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 658  : 
; 659  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 660  : 
; 661  : 	log->side_log [side].failed_tours += 1;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 54 01 14	 mov	 edx, DWORD PTR [ecx+eax+20]
  00059	83 c2 01	 add	 edx, 1
  0005c	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00066	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 662  : }

  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx
  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c2 08 00	 ret	 8
?inc_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_failed_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_failed_tours$ = 16					; size = 4
?set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; set_player_log_failed_tours, COMDAT

; 643  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 644  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 645  : 
; 646  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 647  : 
; 648  : 	log->side_log [side].failed_tours = failed_tours;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 55 10	 mov	 edx, DWORD PTR _failed_tours$[ebp]
  00058	89 54 01 14	 mov	 DWORD PTR [ecx+eax+20], edx

; 649  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_failed_tours@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; set_player_log_failed_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_failed_tours, COMDAT

; 630  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 631  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 632  : 
; 633  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 634  : 
; 635  : 	return log->side_log [side].failed_tours;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 44 01 14	 mov	 eax, DWORD PTR [ecx+eax+20]

; 636  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?get_player_log_failed_tours@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_failed_tours
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_type$ = -4						; size = 4
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z PROC ; inc_player_log_missions_flown, COMDAT

; 610  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 611  : 	gunship_types type = get_global_gunship_type();

  00009	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0000e	89 45 fc	 mov	 DWORD PTR _type$[ebp], eax

; 612  : 
; 613  : 	ASSERT (log);

  00011	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  00015	75 18		 jne	 SHORT $LN2@inc_player
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  0001c	83 c0 03	 add	 eax, 3
  0001f	50		 push	 eax
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00025	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 614  : 
; 615  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  0002f	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  00033	7c 06		 jl	 SHORT $LN4@inc_player
  00035	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00039	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00040	83 c0 05	 add	 eax, 5
  00043	50		 push	 eax
  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00049	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  0004e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 616  : 
; 617  : 	log->side_log [side].missions_flown += 1;

  00053	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  0005d	8b 54 01 18	 mov	 edx, DWORD PTR [ecx+eax+24]
  00061	83 c2 01	 add	 edx, 1
  00064	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0006b	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  0006e	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 618  : 
; 619  : 	if (type >= 0 && type < NUM_GUNSHIP_TYPES)

  00072	83 7d fc 00	 cmp	 DWORD PTR _type$[ebp], 0
  00076	7c 3d		 jl	 SHORT $LN5@inc_player
  00078	83 7d fc 0a	 cmp	 DWORD PTR _type$[ebp], 10 ; 0000000aH
  0007c	7d 37		 jge	 SHORT $LN5@inc_player

; 620  : 		log->side_log [side].gunship_missions[type] += 1;

  0007e	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00085	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00088	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0008c	8b 45 fc	 mov	 eax, DWORD PTR _type$[ebp]
  0008f	0f b7 8c 42 30
	03 00 00	 movzx	 ecx, WORD PTR [edx+eax*2+816]
  00097	83 c1 01	 add	 ecx, 1
  0009a	69 55 08 4c 03
	00 00		 imul	 edx, DWORD PTR _side$[ebp], 844
  000a1	8b 45 0c	 mov	 eax, DWORD PTR _log$[ebp]
  000a4	8d 54 10 0c	 lea	 edx, DWORD PTR [eax+edx+12]
  000a8	8b 45 fc	 mov	 eax, DWORD PTR _type$[ebp]
  000ab	66 89 8c 42 30
	03 00 00	 mov	 WORD PTR [edx+eax*2+816], cx

; 621  : 	else

  000b3	eb 11		 jmp	 SHORT $LN1@inc_player
$LN5@inc_player:

; 622  : 		debug_log("Uknown gunship type: %d", type);

  000b5	8b 45 fc	 mov	 eax, DWORD PTR _type$[ebp]
  000b8	50		 push	 eax
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PHHNDEPE@Uknown?5gunship?5type?3?5?$CFd@
  000be	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000c3	83 c4 08	 add	 esp, 8
$LN1@inc_player:

; 623  : }

  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	5b		 pop	 ebx
  000c9	8b e5		 mov	 esp, ebp
  000cb	5d		 pop	 ebp
  000cc	c2 08 00	 ret	 8
?inc_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@@Z ENDP ; inc_player_log_missions_flown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_missions_flown$ = 16					; size = 4
?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; set_player_log_missions_flown, COMDAT

; 597  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 598  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 599  : 
; 600  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 601  : 
; 602  : 	log->side_log [side].missions_flown = missions_flown;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 55 10	 mov	 edx, DWORD PTR _missions_flown$[ebp]
  00058	89 54 01 18	 mov	 DWORD PTR [ecx+eax+24], edx

; 603  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_missions_flown@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; set_player_log_missions_flown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_missions_flown, COMDAT

; 584  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 585  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 586  : 
; 587  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 588  : 
; 589  : 	return log->side_log [side].missions_flown;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 44 01 18	 mov	 eax, DWORD PTR [ecx+eax+24]

; 590  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?get_player_log_missions_flown@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_missions_flown
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_delta_experience$ = 16					; size = 4
?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; inc_player_log_experience, COMDAT

; 562  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 563  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@inc_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@inc_player:

; 564  : 
; 565  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@inc_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@inc_player
$LN4@inc_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@inc_player:

; 566  : 
; 567  : 	log->side_log [side].experience += delta_experience;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00059	03 55 10	 add	 edx, DWORD PTR _delta_experience$[ebp]
  0005c	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00063	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00066	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 568  : 
; 569  : 	debug_log ("PLAYER: --------------------------------------------------------------------------------");

  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  0006f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00074	83 c4 04	 add	 esp, 4

; 570  : 	debug_log ("PLAYER: %d points awarded, current %d", delta_experience, log->side_log [side].experience);

  00077	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0007e	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00081	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00085	52		 push	 edx
  00086	8b 45 10	 mov	 eax, DWORD PTR _delta_experience$[ebp]
  00089	50		 push	 eax
  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@EHECKPNI@PLAYER?3?5?$CFd?5points?5awarded?0?5curr@
  0008f	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00094	83 c4 0c	 add	 esp, 12			; 0000000cH

; 571  : 	debug_log ("PLAYER:    lieutenant	%d", LIEUTENANT_POINTS_BASE);

  00097	6a 00		 push	 0
  00099	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JEMHJBPE@PLAYER?3?5?5?5?5lieutenant?7?$CFd@
  0009e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000a3	83 c4 08	 add	 esp, 8

; 572  : 	debug_log ("PLAYER:    captain 		%d", CAPTAIN_POINTS_BASE);

  000a6	68 4c 1d 00 00	 push	 7500			; 00001d4cH
  000ab	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@OHOEKMNA@PLAYER?3?5?5?5?5captain?5?7?7?$CFd@
  000b0	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b5	83 c4 08	 add	 esp, 8

; 573  : 	debug_log ("PLAYER:    major			%d", MAJOR_POINTS_BASE);

  000b8	68 00 7d 00 00	 push	 32000			; 00007d00H
  000bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HKBOHIIC@PLAYER?3?5?5?5?5major?7?7?7?$CFd@
  000c2	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000c7	83 c4 08	 add	 esp, 8

; 574  : 	debug_log ("PLAYER:    Lt Colonel	%d", LT_COLONEL_POINTS_BASE);

  000ca	68 c0 d4 01 00	 push	 120000			; 0001d4c0H
  000cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LBMPPOIE@PLAYER?3?5?5?5?5Lt?5Colonel?7?$CFd@
  000d4	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d9	83 c4 08	 add	 esp, 8

; 575  : 	debug_log ("PLAYER:    Colonel		%d", COLONEL_POINTS_BASE);

  000dc	68 90 d0 03 00	 push	 250000			; 0003d090H
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ILCGKBN@PLAYER?3?5?5?5?5Colonel?7?7?$CFd@
  000e6	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000eb	83 c4 08	 add	 esp, 8

; 576  : 	debug_log ("PLAYER: --------------------------------------------------------------------------------");

  000ee	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  000f3	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000f8	83 c4 04	 add	 esp, 4

; 577  : }

  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx
  000fe	8b e5		 mov	 esp, ebp
  00100	5d		 pop	 ebp
  00101	c2 0c 00	 ret	 12			; 0000000cH
?inc_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; inc_player_log_experience
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_experience$ = 16					; size = 4
?set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC ; set_player_log_experience, COMDAT

; 534  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 535  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 536  : 
; 537  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 538  : 
; 539  : 	if ( experience < 0 )

  0004b	83 7d 10 00	 cmp	 DWORD PTR _experience$[ebp], 0
  0004f	7d 07		 jge	 SHORT $LN5@set_player

; 540  : 	{
; 541  : 
; 542  : 		experience = 0;

  00051	c7 45 10 00 00
	00 00		 mov	 DWORD PTR _experience$[ebp], 0
$LN5@set_player:

; 543  : 	}
; 544  : 
; 545  : 	log->side_log [side].experience = experience;

  00058	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00062	8b 55 10	 mov	 edx, DWORD PTR _experience$[ebp]
  00065	89 54 01 10	 mov	 DWORD PTR [ecx+eax+16], edx

; 546  : 
; 547  : 	debug_log ("PLAYER: --------------------------------------------------------------------------------");

  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  0006e	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  00073	83 c4 04	 add	 esp, 4

; 548  : 	debug_log ("PLAYER: current %d", log->side_log [side].experience);

  00076	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  0007d	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00080	8b 54 01 10	 mov	 edx, DWORD PTR [ecx+eax+16]
  00084	52		 push	 edx
  00085	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JJHEBHEI@PLAYER?3?5current?5?$CFd@
  0008a	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0008f	83 c4 08	 add	 esp, 8

; 549  : 	debug_log ("PLAYER:    lieutenant	%d", LIEUTENANT_POINTS_BASE);

  00092	6a 00		 push	 0
  00094	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@JEMHJBPE@PLAYER?3?5?5?5?5lieutenant?7?$CFd@
  00099	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0009e	83 c4 08	 add	 esp, 8

; 550  : 	debug_log ("PLAYER:    captain 		%d", CAPTAIN_POINTS_BASE);

  000a1	68 4c 1d 00 00	 push	 7500			; 00001d4cH
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@OHOEKMNA@PLAYER?3?5?5?5?5captain?5?7?7?$CFd@
  000ab	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000b0	83 c4 08	 add	 esp, 8

; 551  : 	debug_log ("PLAYER:    major			%d", MAJOR_POINTS_BASE);

  000b3	68 00 7d 00 00	 push	 32000			; 00007d00H
  000b8	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HKBOHIIC@PLAYER?3?5?5?5?5major?7?7?7?$CFd@
  000bd	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000c2	83 c4 08	 add	 esp, 8

; 552  : 	debug_log ("PLAYER:    Lt Colonel	%d", LT_COLONEL_POINTS_BASE);

  000c5	68 c0 d4 01 00	 push	 120000			; 0001d4c0H
  000ca	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LBMPPOIE@PLAYER?3?5?5?5?5Lt?5Colonel?7?$CFd@
  000cf	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000d4	83 c4 08	 add	 esp, 8

; 553  : 	debug_log ("PLAYER:    Colonel		%d", COLONEL_POINTS_BASE);

  000d7	68 90 d0 03 00	 push	 250000			; 0003d090H
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@ILCGKBN@PLAYER?3?5?5?5?5Colonel?7?7?$CFd@
  000e1	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000e6	83 c4 08	 add	 esp, 8

; 554  : 	debug_log ("PLAYER: --------------------------------------------------------------------------------");

  000e9	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@IFPADBON@PLAYER?3?5?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9?9@
  000ee	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  000f3	83 c4 04	 add	 esp, 4

; 555  : }

  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_experience@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP ; set_player_log_experience
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC ; get_player_log_experience, COMDAT

; 521  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 522  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 523  : 
; 524  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 525  : 
; 526  : 	return log->side_log [side].experience;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 44 01 10	 mov	 eax, DWORD PTR [ecx+eax+16]

; 527  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?get_player_log_experience@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP ; get_player_log_experience
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
_rank$ = 16						; size = 4
?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z PROC	; set_player_log_rank, COMDAT

; 508  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 509  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_player:

; 510  : 
; 511  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@set_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@set_player
$LN4@set_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_player:

; 512  : 
; 513  : 	log->side_log [side].rank = rank;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 55 10	 mov	 edx, DWORD PTR _rank$[ebp]
  00058	89 54 01 0c	 mov	 DWORD PTR [ecx+eax+12], edx

; 514  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 0c 00	 ret	 12			; 0000000cH
?set_player_log_rank@@YGXHPAUPLAYER_LOG_TYPE@@H@Z ENDP	; set_player_log_rank
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_side$ = 8						; size = 4
_log$ = 12						; size = 4
?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z PROC	; get_player_log_rank, COMDAT

; 495  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 496  : 	ASSERT (log);

  00009	83 7d 0c 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 497  : 
; 498  : 	ASSERT ((side >= 0) && (side <= NUM_ENTITY_SIDES));

  00027	83 7d 08 00	 cmp	 DWORD PTR _side$[ebp], 0
  0002b	7c 06		 jl	 SHORT $LN4@get_player
  0002d	83 7d 08 03	 cmp	 DWORD PTR _side$[ebp], 3
  00031	7e 18		 jle	 SHORT $LN3@get_player
$LN4@get_player:
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z@4JA
  00038	83 c0 03	 add	 eax, 3
  0003b	50		 push	 eax
  0003c	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00041	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EDPCIMHH@?$CIside?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CIside?5?$DM?$DN?5NUM_ENT@
  00046	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@get_player:

; 499  : 
; 500  : 	return log->side_log [side].rank;

  0004b	69 45 08 4c 03
	00 00		 imul	 eax, DWORD PTR _side$[ebp], 844
  00052	8b 4d 0c	 mov	 ecx, DWORD PTR _log$[ebp]
  00055	8b 44 01 0c	 mov	 eax, DWORD PTR [ecx+eax+12]

; 501  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 08 00	 ret	 8
?get_player_log_rank@@YGHHPAUPLAYER_LOG_TYPE@@@Z ENDP	; get_player_log_rank
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_points_from_rank@@YGHH@Z
_TEXT	SEGMENT
tv64 = -68						; size = 4
_rank$ = 8						; size = 4
?get_player_points_from_rank@@YGHH@Z PROC		; get_player_points_from_rank, COMDAT

; 437  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 438  : 
; 439  : 	switch ( rank )

  00009	8b 45 08	 mov	 eax, DWORD PTR _rank$[ebp]
  0000c	89 45 bc	 mov	 DWORD PTR tv64[ebp], eax
  0000f	8b 4d bc	 mov	 ecx, DWORD PTR tv64[ebp]
  00012	83 e9 01	 sub	 ecx, 1
  00015	89 4d bc	 mov	 DWORD PTR tv64[ebp], ecx
  00018	83 7d bc 04	 cmp	 DWORD PTR tv64[ebp], 4
  0001c	77 34		 ja	 SHORT $LN9@get_player
  0001e	8b 55 bc	 mov	 edx, DWORD PTR tv64[ebp]
  00021	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN11@get_player[edx*4]
$LN4@get_player:

; 440  : 	{
; 441  : 
; 442  : 		case PILOT_RANK_LIEUTENANT:
; 443  : 		{
; 444  : 
; 445  : 			return ( LIEUTENANT_POINTS_BASE );

  00028	33 c0		 xor	 eax, eax
  0002a	eb 28		 jmp	 SHORT $LN1@get_player

; 446  : 
; 447  : 			break;

  0002c	eb 26		 jmp	 SHORT $LN1@get_player
$LN5@get_player:

; 448  : 		}
; 449  : 
; 450  : 		case PILOT_RANK_CAPTAIN:
; 451  : 		{
; 452  : 
; 453  : 			return ( CAPTAIN_POINTS_BASE );

  0002e	b8 4c 1d 00 00	 mov	 eax, 7500		; 00001d4cH
  00033	eb 1f		 jmp	 SHORT $LN1@get_player

; 454  : 
; 455  : 			break;

  00035	eb 1d		 jmp	 SHORT $LN1@get_player
$LN6@get_player:

; 456  : 		}
; 457  : 
; 458  : 		case PILOT_RANK_MAJOR:
; 459  : 		{
; 460  : 
; 461  : 			return ( MAJOR_POINTS_BASE );

  00037	b8 00 7d 00 00	 mov	 eax, 32000		; 00007d00H
  0003c	eb 16		 jmp	 SHORT $LN1@get_player

; 462  : 
; 463  : 			break;

  0003e	eb 14		 jmp	 SHORT $LN1@get_player
$LN7@get_player:

; 464  : 		}
; 465  : 
; 466  : 		case PILOT_RANK_LT_COLONEL:
; 467  : 		{
; 468  : 
; 469  : 			return ( LT_COLONEL_POINTS_BASE );

  00040	b8 c0 d4 01 00	 mov	 eax, 120000		; 0001d4c0H
  00045	eb 0d		 jmp	 SHORT $LN1@get_player

; 470  : 
; 471  : 			break;

  00047	eb 0b		 jmp	 SHORT $LN1@get_player
$LN8@get_player:

; 472  : 		}
; 473  : 
; 474  : 		case PILOT_RANK_COLONEL:
; 475  : 		{
; 476  : 
; 477  : 			return ( COLONEL_POINTS_BASE );

  00049	b8 90 d0 03 00	 mov	 eax, 250000		; 0003d090H
  0004e	eb 04		 jmp	 SHORT $LN1@get_player

; 478  : 
; 479  : 			break;

  00050	eb 02		 jmp	 SHORT $LN1@get_player
$LN9@get_player:

; 480  : 		}
; 481  : 
; 482  : 		default:
; 483  : 		{
; 484  : 
; 485  : 			return ( LIEUTENANT_POINTS_BASE );

  00052	33 c0		 xor	 eax, eax
$LN1@get_player:

; 486  : 		}
; 487  : 	}
; 488  : }

  00054	5f		 pop	 edi
  00055	5e		 pop	 esi
  00056	5b		 pop	 ebx
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c2 04 00	 ret	 4
  0005d	0f 1f 00	 npad	 3
$LN11@get_player:
  00060	00 00 00 00	 DD	 $LN4@get_player
  00064	00 00 00 00	 DD	 $LN5@get_player
  00068	00 00 00 00	 DD	 $LN6@get_player
  0006c	00 00 00 00	 DD	 $LN7@get_player
  00070	00 00 00 00	 DD	 $LN8@get_player
?get_player_points_from_rank@@YGHH@Z ENDP		; get_player_points_from_rank
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_rank_from_points@@YGHH@Z
_TEXT	SEGMENT
_points$ = 8						; size = 4
?get_player_rank_from_points@@YGHH@Z PROC		; get_player_rank_from_points, COMDAT

; 408  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 409  : 
; 410  : 	if ( points < CAPTAIN_POINTS_BASE )

  00009	81 7d 08 4c 1d
	00 00		 cmp	 DWORD PTR _points$[ebp], 7500 ; 00001d4cH
  00010	7d 09		 jge	 SHORT $LN2@get_player

; 411  : 	{
; 412  : 		return ( PILOT_RANK_LIEUTENANT );

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	eb 3d		 jmp	 SHORT $LN1@get_player
  00019	eb 3b		 jmp	 SHORT $LN1@get_player
$LN2@get_player:

; 413  : 	}
; 414  : 	else if ( points < MAJOR_POINTS_BASE )

  0001b	81 7d 08 00 7d
	00 00		 cmp	 DWORD PTR _points$[ebp], 32000 ; 00007d00H
  00022	7d 09		 jge	 SHORT $LN4@get_player

; 415  : 	{
; 416  : 		return ( PILOT_RANK_CAPTAIN );

  00024	b8 02 00 00 00	 mov	 eax, 2
  00029	eb 2b		 jmp	 SHORT $LN1@get_player
  0002b	eb 29		 jmp	 SHORT $LN1@get_player
$LN4@get_player:

; 417  : 	}
; 418  : 	else if ( points < LT_COLONEL_POINTS_BASE )

  0002d	81 7d 08 c0 d4
	01 00		 cmp	 DWORD PTR _points$[ebp], 120000 ; 0001d4c0H
  00034	7d 09		 jge	 SHORT $LN6@get_player

; 419  : 	{
; 420  : 		return ( PILOT_RANK_MAJOR );

  00036	b8 03 00 00 00	 mov	 eax, 3
  0003b	eb 19		 jmp	 SHORT $LN1@get_player
  0003d	eb 17		 jmp	 SHORT $LN1@get_player
$LN6@get_player:

; 421  : 	}
; 422  : 	else if ( points < COLONEL_POINTS_BASE )

  0003f	81 7d 08 90 d0
	03 00		 cmp	 DWORD PTR _points$[ebp], 250000 ; 0003d090H
  00046	7d 09		 jge	 SHORT $LN8@get_player

; 423  : 	{
; 424  : 		return ( PILOT_RANK_LT_COLONEL );

  00048	b8 04 00 00 00	 mov	 eax, 4
  0004d	eb 07		 jmp	 SHORT $LN1@get_player

; 425  : 	}
; 426  : 	else

  0004f	eb 05		 jmp	 SHORT $LN1@get_player
$LN8@get_player:

; 427  : 	{
; 428  : 		return ( PILOT_RANK_COLONEL );

  00051	b8 05 00 00 00	 mov	 eax, 5
$LN1@get_player:

; 429  : 	}
; 430  : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?get_player_rank_from_points@@YGHH@Z ENDP		; get_player_rank_from_points
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_log$ = 8						; size = 4
?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z PROC	; get_player_log_name, COMDAT

; 397  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 398  : 	ASSERT (log);

  00009	83 7d 08 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 399  : 
; 400  : 	return log->name;

  00027	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  0002a	8b 00		 mov	 eax, DWORD PTR [eax]

; 401  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5b		 pop	 ebx
  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c2 04 00	 ret	 4
?get_player_log_name@@YGPBDPAUPLAYER_LOG_TYPE@@@Z ENDP	; get_player_log_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z
_TEXT	SEGMENT
_log$ = 8						; size = 4
?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z PROC ; get_player_log_next, COMDAT

; 386  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 387  : 	ASSERT (log);

  00009	83 7d 08 00	 cmp	 DWORD PTR _log$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@get_player
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU2@@Z@4JA
  00014	83 c0 01	 add	 eax, 1
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03MGHMBJCF@log@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@get_player:

; 388  : 	
; 389  : 	return log->next;

  00027	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  0002a	8b 80 3c 0d 00
	00		 mov	 eax, DWORD PTR [eax+3388]

; 390  : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 04 00	 ret	 4
?get_player_log_next@@YGPAUPLAYER_LOG_TYPE@@PAU1@@Z ENDP ; get_player_log_next
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_log$ = 8						; size = 4
?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z PROC	; set_current_player_log, COMDAT

; 361  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 362  : 	current_player_log = log;

  00009	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A, eax

; 363  : 	if (log)

  00011	83 7d 08 00	 cmp	 DWORD PTR _log$[ebp], 0
  00015	74 0f		 je	 SHORT $LN2@set_curren

; 364  : 		current_backup_log = *log;

  00017	b9 50 03 00 00	 mov	 ecx, 848		; 00000350H
  0001c	8b 75 08	 mov	 esi, DWORD PTR _log$[ebp]
  0001f	bf 00 00 00 00	 mov	 edi, OFFSET ?current_backup_log@@3UPLAYER_LOG_TYPE@@A
  00024	f3 a5		 rep movsd
$LN2@set_curren:

; 365  : 
; 366  : 	// debug
; 367  : 	unregister_file_tag_variable ("TRAINING1_LEVEL");

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DBMCDKLI@TRAINING1_LEVEL@
  0002b	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 368  : 	unregister_file_tag_variable ("TRAINING2_LEVEL");

  00030	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LPENDNFL@TRAINING2_LEVEL@
  00035	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 369  : 	unregister_file_tag_variable ("TRAINING3_LEVEL");

  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HDOHDNMF@TRAINING3_LEVEL@
  0003f	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 370  : 	unregister_file_tag_variable ("TRAINING4_LEVEL");

  00044	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HJCCDENM@TRAINING4_LEVEL@
  00049	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 371  : 	unregister_file_tag_variable ("TRAINING5_LEVEL");

  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LFIIDEEC@TRAINING5_LEVEL@
  00053	e8 00 00 00 00	 call	 ?unregister_file_tag_variable@@YGXPBD@Z ; unregister_file_tag_variable

; 372  : 
; 373  : 	register_file_tag_variable ("TRAINING1_LEVEL", &log->side_log [ENTITY_SIDE_BLUE_FORCE].level [0]);

  00058	b8 4c 03 00 00	 mov	 eax, 844		; 0000034cH
  0005d	c1 e0 00	 shl	 eax, 0
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  00063	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  00067	b8 04 00 00 00	 mov	 eax, 4
  0006c	6b c8 00	 imul	 ecx, eax, 0
  0006f	8d 54 0a 4c	 lea	 edx, DWORD PTR [edx+ecx+76]
  00073	52		 push	 edx
  00074	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DBMCDKLI@TRAINING1_LEVEL@
  00079	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 374  : 	register_file_tag_variable ("TRAINING2_LEVEL", &log->side_log [ENTITY_SIDE_BLUE_FORCE].level [1]);

  0007e	b8 4c 03 00 00	 mov	 eax, 844		; 0000034cH
  00083	c1 e0 00	 shl	 eax, 0
  00086	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  00089	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  0008d	b8 04 00 00 00	 mov	 eax, 4
  00092	c1 e0 00	 shl	 eax, 0
  00095	8d 4c 02 4c	 lea	 ecx, DWORD PTR [edx+eax+76]
  00099	51		 push	 ecx
  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LPENDNFL@TRAINING2_LEVEL@
  0009f	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 375  : 	register_file_tag_variable ("TRAINING3_LEVEL", &log->side_log [ENTITY_SIDE_BLUE_FORCE].level [2]);

  000a4	b8 4c 03 00 00	 mov	 eax, 844		; 0000034cH
  000a9	c1 e0 00	 shl	 eax, 0
  000ac	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  000af	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000b3	b8 04 00 00 00	 mov	 eax, 4
  000b8	d1 e0		 shl	 eax, 1
  000ba	8d 4c 02 4c	 lea	 ecx, DWORD PTR [edx+eax+76]
  000be	51		 push	 ecx
  000bf	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HDOHDNMF@TRAINING3_LEVEL@
  000c4	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 376  : 	register_file_tag_variable ("TRAINING4_LEVEL", &log->side_log [ENTITY_SIDE_BLUE_FORCE].level [3]);

  000c9	b8 4c 03 00 00	 mov	 eax, 844		; 0000034cH
  000ce	c1 e0 00	 shl	 eax, 0
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  000d4	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000d8	b8 04 00 00 00	 mov	 eax, 4
  000dd	6b c8 03	 imul	 ecx, eax, 3
  000e0	8d 54 0a 4c	 lea	 edx, DWORD PTR [edx+ecx+76]
  000e4	52		 push	 edx
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HJCCDENM@TRAINING4_LEVEL@
  000ea	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 377  : 	register_file_tag_variable ("TRAINING5_LEVEL", &log->side_log [ENTITY_SIDE_BLUE_FORCE].level [4]);

  000ef	b8 4c 03 00 00	 mov	 eax, 844		; 0000034cH
  000f4	c1 e0 00	 shl	 eax, 0
  000f7	8b 4d 08	 mov	 ecx, DWORD PTR _log$[ebp]
  000fa	8d 54 01 0c	 lea	 edx, DWORD PTR [ecx+eax+12]
  000fe	b8 04 00 00 00	 mov	 eax, 4
  00103	c1 e0 02	 shl	 eax, 2
  00106	8d 4c 02 4c	 lea	 ecx, DWORD PTR [edx+eax+76]
  0010a	51		 push	 ecx
  0010b	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@LFIIDEEC@TRAINING5_LEVEL@
  00110	e8 00 00 00 00	 call	 ?register_file_tag_variable@@YGXPBDPAH@Z ; register_file_tag_variable

; 378  : 	// end
; 379  : }

  00115	5f		 pop	 edi
  00116	5e		 pop	 esi
  00117	5b		 pop	 ebx
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c2 04 00	 ret	 4
?set_current_player_log@@YGXPAUPLAYER_LOG_TYPE@@@Z ENDP	; set_current_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ
_TEXT	SEGMENT
?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ PROC	; get_current_player_log, COMDAT

; 352  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 353  : 	return current_player_log;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?current_player_log@@3PAUPLAYER_LOG_TYPE@@A

; 354  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_current_player_log@@YGPAUPLAYER_LOG_TYPE@@XZ ENDP	; get_current_player_log
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z
_TEXT	SEGMENT
_log$ = 8						; size = 4
?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z PROC	; set_player_log_list, COMDAT

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 344  : 	player_log_list = log;

  00009	8b 45 08	 mov	 eax, DWORD PTR _log$[ebp]
  0000c	a3 00 00 00 00	 mov	 DWORD PTR ?player_log_list@@3PAUPLAYER_LOG_TYPE@@A, eax

; 345  : }

  00011	5f		 pop	 edi
  00012	5e		 pop	 esi
  00013	5b		 pop	 ebx
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
?set_player_log_list@@YGXPAUPLAYER_LOG_TYPE@@@Z ENDP	; set_player_log_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ
_TEXT	SEGMENT
?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ PROC	; get_player_log_list, COMDAT

; 334  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 335  : 	return player_log_list;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?player_log_list@@3PAUPLAYER_LOG_TYPE@@A

; 336  : }

  0000e	5f		 pop	 edi
  0000f	5e		 pop	 esi
  00010	5b		 pop	 ebx
  00011	8b e5		 mov	 esp, ebp
  00013	5d		 pop	 ebp
  00014	c3		 ret	 0
?get_player_log_list@@YGPAUPLAYER_LOG_TYPE@@XZ ENDP	; get_player_log_list
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_untranslated_pilot_rank_short_name@@YGPBDH@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_rank$ = 8						; size = 4
?get_untranslated_pilot_rank_short_name@@YGPBDH@Z PROC	; get_untranslated_pilot_rank_short_name, COMDAT

; 295  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 296  : 	ASSERT ((rank > PILOT_RANK_NONE) && (rank < NUM_PILOT_RANKS));

  00009	83 7d 08 00	 cmp	 DWORD PTR _rank$[ebp], 0
  0000d	7e 06		 jle	 SHORT $LN5@get_untran
  0000f	83 7d 08 06	 cmp	 DWORD PTR _rank$[ebp], 6
  00013	7c 18		 jl	 SHORT $LN4@get_untran
$LN5@get_untran:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_untranslated_pilot_rank_short_name@@YGPBDH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_untran:

; 297  : 
; 298  : 	switch ( rank )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _rank$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax
  00033	8b 4d bc	 mov	 ecx, DWORD PTR tv70[ebp]
  00036	83 e9 01	 sub	 ecx, 1
  00039	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  0003c	83 7d bc 04	 cmp	 DWORD PTR tv70[ebp], 4
  00040	77 2d		 ja	 SHORT $LN2@get_untran
  00042	8b 55 bc	 mov	 edx, DWORD PTR tv70[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN12@get_untran[edx*4]
$LN6@get_untran:

; 299  : 	{
; 300  : 		case PILOT_RANK_LIEUTENANT:
; 301  : 		{
; 302  : 			return ("Lt.");

  0004c	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_03FHIGAOMG@Lt?4@
  00051	eb 1e		 jmp	 SHORT $LN1@get_untran
$LN7@get_untran:

; 303  : 		}
; 304  : 
; 305  : 		case PILOT_RANK_CAPTAIN:
; 306  : 		{
; 307  : 			return ("Capt.");

  00053	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_05FAGDBBFP@Capt?4@
  00058	eb 17		 jmp	 SHORT $LN1@get_untran
$LN8@get_untran:

; 308  : 		}
; 309  : 
; 310  : 		case PILOT_RANK_MAJOR:
; 311  : 		{
; 312  : 			return ("Maj.");

  0005a	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_04FEGDEDKG@Maj?4@
  0005f	eb 10		 jmp	 SHORT $LN1@get_untran
$LN9@get_untran:

; 313  : 		}
; 314  : 
; 315  : 		case PILOT_RANK_LT_COLONEL:
; 316  : 		{
; 317  : 			return ("Lt. Col.");

  00061	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08KHLIDNHL@Lt?4?5Col?4@
  00066	eb 09		 jmp	 SHORT $LN1@get_untran
$LN10@get_untran:

; 318  : 		}
; 319  : 
; 320  : 		case PILOT_RANK_COLONEL:
; 321  : 		{
; 322  : 			return ("Col.");

  00068	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_04PABPGEG@Col?4@
  0006d	eb 02		 jmp	 SHORT $LN1@get_untran
$LN2@get_untran:

; 323  : 		}
; 324  : 	}
; 325  : 
; 326  : 	return ( NULL );

  0006f	33 c0		 xor	 eax, eax
$LN1@get_untran:

; 327  : }

  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	5b		 pop	 ebx
  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 04 00	 ret	 4
  0007a	66 90		 npad	 2
$LN12@get_untran:
  0007c	00 00 00 00	 DD	 $LN6@get_untran
  00080	00 00 00 00	 DD	 $LN7@get_untran
  00084	00 00 00 00	 DD	 $LN8@get_untran
  00088	00 00 00 00	 DD	 $LN9@get_untran
  0008c	00 00 00 00	 DD	 $LN10@get_untran
?get_untranslated_pilot_rank_short_name@@YGPBDH@Z ENDP	; get_untranslated_pilot_rank_short_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_pilot_rank_short_name@@YGPBDH@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_rank$ = 8						; size = 4
?get_pilot_rank_short_name@@YGPBDH@Z PROC		; get_pilot_rank_short_name, COMDAT

; 240  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 241  : 	ASSERT ((rank > PILOT_RANK_NONE) && (rank < NUM_PILOT_RANKS));

  00009	83 7d 08 00	 cmp	 DWORD PTR _rank$[ebp], 0
  0000d	7e 06		 jle	 SHORT $LN5@get_pilot_
  0000f	83 7d 08 06	 cmp	 DWORD PTR _rank$[ebp], 6
  00013	7c 18		 jl	 SHORT $LN4@get_pilot_
$LN5@get_pilot_:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pilot_rank_short_name@@YGPBDH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_pilot_:

; 242  : 
; 243  : 	switch ( rank )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _rank$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax
  00033	8b 4d bc	 mov	 ecx, DWORD PTR tv70[ebp]
  00036	83 e9 01	 sub	 ecx, 1
  00039	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  0003c	83 7d bc 04	 cmp	 DWORD PTR tv70[ebp], 4
  00040	77 4e		 ja	 SHORT $LN2@get_pilot_
  00042	8b 55 bc	 mov	 edx, DWORD PTR tv70[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN12@get_pilot_[edx*4]
$LN6@get_pilot_:

; 244  : 	{
; 245  : 
; 246  : 		case PILOT_RANK_LIEUTENANT:
; 247  : 		{
; 248  : 
; 249  : 			return (get_trans ("Lt."));

  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_03FHIGAOMG@Lt?4@
  00051	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00056	eb 3a		 jmp	 SHORT $LN1@get_pilot_

; 250  : 
; 251  : 			break;

  00058	eb 36		 jmp	 SHORT $LN2@get_pilot_
$LN7@get_pilot_:

; 252  : 		}
; 253  : 
; 254  : 		case PILOT_RANK_CAPTAIN:
; 255  : 		{
; 256  : 
; 257  : 			return (get_trans ("Capt."));

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_05FAGDBBFP@Capt?4@
  0005f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00064	eb 2c		 jmp	 SHORT $LN1@get_pilot_

; 258  : 
; 259  : 			break;

  00066	eb 28		 jmp	 SHORT $LN2@get_pilot_
$LN8@get_pilot_:

; 260  : 		}
; 261  : 
; 262  : 		case PILOT_RANK_MAJOR:
; 263  : 		{
; 264  : 
; 265  : 			return (get_trans ("Maj."));

  00068	68 00 00 00 00	 push	 OFFSET ??_C@_04FEGDEDKG@Maj?4@
  0006d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00072	eb 1e		 jmp	 SHORT $LN1@get_pilot_

; 266  : 
; 267  : 			break;

  00074	eb 1a		 jmp	 SHORT $LN2@get_pilot_
$LN9@get_pilot_:

; 268  : 		}
; 269  : 
; 270  : 		case PILOT_RANK_LT_COLONEL:
; 271  : 		{
; 272  : 
; 273  : 			return (get_trans ("Lt. Col."));

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_08KHLIDNHL@Lt?4?5Col?4@
  0007b	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00080	eb 10		 jmp	 SHORT $LN1@get_pilot_

; 274  : 
; 275  : 			break;

  00082	eb 0c		 jmp	 SHORT $LN2@get_pilot_
$LN10@get_pilot_:

; 276  : 		}
; 277  : 
; 278  : 		case PILOT_RANK_COLONEL:
; 279  : 		{
; 280  : 
; 281  : 			return (get_trans ("Col."));

  00084	68 00 00 00 00	 push	 OFFSET ??_C@_04PABPGEG@Col?4@
  00089	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0008e	eb 02		 jmp	 SHORT $LN1@get_pilot_
$LN2@get_pilot_:

; 282  : 
; 283  : 			break;
; 284  : 		}
; 285  : 	}
; 286  : 
; 287  : 	return ( NULL );

  00090	33 c0		 xor	 eax, eax
$LN1@get_pilot_:

; 288  : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
  0009b	90		 npad	 1
$LN12@get_pilot_:
  0009c	00 00 00 00	 DD	 $LN6@get_pilot_
  000a0	00 00 00 00	 DD	 $LN7@get_pilot_
  000a4	00 00 00 00	 DD	 $LN8@get_pilot_
  000a8	00 00 00 00	 DD	 $LN9@get_pilot_
  000ac	00 00 00 00	 DD	 $LN10@get_pilot_
?get_pilot_rank_short_name@@YGPBDH@Z ENDP		; get_pilot_rank_short_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?get_pilot_rank_name@@YGPBDH@Z
_TEXT	SEGMENT
tv70 = -68						; size = 4
_rank$ = 8						; size = 4
?get_pilot_rank_name@@YGPBDH@Z PROC			; get_pilot_rank_name, COMDAT

; 185  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 186  : 	ASSERT ((rank > PILOT_RANK_NONE) && (rank < NUM_PILOT_RANKS));

  00009	83 7d 08 00	 cmp	 DWORD PTR _rank$[ebp], 0
  0000d	7e 06		 jle	 SHORT $LN5@get_pilot_
  0000f	83 7d 08 06	 cmp	 DWORD PTR _rank$[ebp], 6
  00013	7c 18		 jl	 SHORT $LN4@get_pilot_
$LN5@get_pilot_:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??get_pilot_rank_name@@YGPBDH@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0EE@IOOMBHDK@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0DF@ICBNCJLE@?$CIrank?5?$DO?5PILOT_RANK_NONE?$CJ?5?$CG?$CG?5?$CIra@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@get_pilot_:

; 187  : 
; 188  : 	switch ( rank )

  0002d	8b 45 08	 mov	 eax, DWORD PTR _rank$[ebp]
  00030	89 45 bc	 mov	 DWORD PTR tv70[ebp], eax
  00033	8b 4d bc	 mov	 ecx, DWORD PTR tv70[ebp]
  00036	83 e9 01	 sub	 ecx, 1
  00039	89 4d bc	 mov	 DWORD PTR tv70[ebp], ecx
  0003c	83 7d bc 04	 cmp	 DWORD PTR tv70[ebp], 4
  00040	77 4e		 ja	 SHORT $LN2@get_pilot_
  00042	8b 55 bc	 mov	 edx, DWORD PTR tv70[ebp]
  00045	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN12@get_pilot_[edx*4]
$LN6@get_pilot_:

; 189  : 	{
; 190  : 
; 191  : 		case PILOT_RANK_LIEUTENANT:
; 192  : 		{
; 193  : 
; 194  : 			return (get_trans ("Lieutenant"));

  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HLAANINN@Lieutenant@
  00051	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00056	eb 3a		 jmp	 SHORT $LN1@get_pilot_

; 195  : 
; 196  : 			break;

  00058	eb 36		 jmp	 SHORT $LN2@get_pilot_
$LN7@get_pilot_:

; 197  : 		}
; 198  : 
; 199  : 		case PILOT_RANK_CAPTAIN:
; 200  : 		{
; 201  : 
; 202  : 			return (get_trans ("Captain"));

  0005a	68 00 00 00 00	 push	 OFFSET ??_C@_07CIJMMPOH@Captain@
  0005f	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00064	eb 2c		 jmp	 SHORT $LN1@get_pilot_

; 203  : 
; 204  : 			break;

  00066	eb 28		 jmp	 SHORT $LN2@get_pilot_
$LN8@get_pilot_:

; 205  : 		}
; 206  : 
; 207  : 		case PILOT_RANK_MAJOR:
; 208  : 		{
; 209  : 
; 210  : 			return (get_trans ("Major"));

  00068	68 00 00 00 00	 push	 OFFSET ??_C@_05FDLAJJBN@Major@
  0006d	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00072	eb 1e		 jmp	 SHORT $LN1@get_pilot_

; 211  : 
; 212  : 			break;

  00074	eb 1a		 jmp	 SHORT $LN2@get_pilot_
$LN9@get_pilot_:

; 213  : 		}
; 214  : 
; 215  : 		case PILOT_RANK_LT_COLONEL:
; 216  : 		{
; 217  : 
; 218  : 			return (get_trans ("Lt. Colonel"));

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MOMICILP@Lt?4?5Colonel@
  0007b	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  00080	eb 10		 jmp	 SHORT $LN1@get_pilot_

; 219  : 
; 220  : 			break;

  00082	eb 0c		 jmp	 SHORT $LN2@get_pilot_
$LN10@get_pilot_:

; 221  : 		}
; 222  : 
; 223  : 		case PILOT_RANK_COLONEL:
; 224  : 		{
; 225  : 
; 226  : 			return (get_trans ("Colonel"));

  00084	68 00 00 00 00	 push	 OFFSET ??_C@_07HIMIFLHJ@Colonel@
  00089	e8 00 00 00 00	 call	 ?get_trans@@YGPBDPBD@Z	; get_trans
  0008e	eb 02		 jmp	 SHORT $LN1@get_pilot_
$LN2@get_pilot_:

; 227  : 
; 228  : 			break;
; 229  : 		}
; 230  : 	}
; 231  : 
; 232  : 	return ( NULL );

  00090	33 c0		 xor	 eax, eax
$LN1@get_pilot_:

; 233  : }

  00092	5f		 pop	 edi
  00093	5e		 pop	 esi
  00094	5b		 pop	 ebx
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c2 04 00	 ret	 4
  0009b	90		 npad	 1
$LN12@get_pilot_:
  0009c	00 00 00 00	 DD	 $LN6@get_pilot_
  000a0	00 00 00 00	 DD	 $LN7@get_pilot_
  000a4	00 00 00 00	 DD	 $LN8@get_pilot_
  000a8	00 00 00 00	 DD	 $LN9@get_pilot_
  000ac	00 00 00 00	 DD	 $LN10@get_pilot_
?get_pilot_rank_name@@YGPBDH@Z ENDP			; get_pilot_rank_name
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\ui_menu\player\player.c
;	COMDAT ?initialise_medal_and_promotion_names@@YGXXZ
_TEXT	SEGMENT
?initialise_medal_and_promotion_names@@YGXXZ PROC	; initialise_medal_and_promotion_names, COMDAT

; 142  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 143  : 
; 144  : 	us_medal_type_names [MEDAL_TYPE_NONE] = NULL;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 00	 imul	 ecx, eax, 0
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], 0

; 145  : 	us_medal_type_names [MEDAL_SAUDI] = "Medal Saudi";

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	c1 e0 00	 shl	 eax, 0
  00023	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0M@FJMAMPGJ@Medal?5Saudi@

; 146  : 	us_medal_type_names [MEDAL_LEBANON] = "Medal Lebanon";

  0002d	b8 04 00 00 00	 mov	 eax, 4
  00032	d1 e0		 shl	 eax, 1
  00034	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0O@BNCBBOEF@Medal?5Lebanon@

; 147  : 	us_medal_type_names [MEDAL_TAIWAN] = "Medal Taiwan";

  0003e	b8 04 00 00 00	 mov	 eax, 4
  00043	6b c8 03	 imul	 ecx, eax, 3
  00046	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0N@ODEBLCNO@Medal?5Taiwan@

; 148  : 	us_medal_type_names [MEDAL_ARMY_AVIATOR] = "Medal Army Wings";

  00050	b8 04 00 00 00	 mov	 eax, 4
  00055	c1 e0 02	 shl	 eax, 2
  00058	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0BB@EMDGHCDK@Medal?5Army?5Wings@

; 149  : 	us_medal_type_names [MEDAL_SENIOR_AVIATOR] = "Medal Senior Wings";

  00062	b8 04 00 00 00	 mov	 eax, 4
  00067	6b c8 05	 imul	 ecx, eax, 5
  0006a	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BD@JPKHHCMM@Medal?5Senior?5Wings@

; 150  : 	us_medal_type_names [MEDAL_MASTER_AVIATOR] = "Medal Master Wings";

  00074	b8 04 00 00 00	 mov	 eax, 4
  00079	6b c8 06	 imul	 ecx, eax, 6
  0007c	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BD@PAFMOKND@Medal?5Master?5Wings@

; 151  : 	us_medal_type_names [MEDAL_PURPLE_HEART] = "Medal Purple";

  00086	b8 04 00 00 00	 mov	 eax, 4
  0008b	6b c8 07	 imul	 ecx, eax, 7
  0008e	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0N@OOICACPC@Medal?5Purple@

; 152  : 	us_medal_type_names [MEDAL_AIR_MEDAL] = "Medal Air";

  00098	b8 04 00 00 00	 mov	 eax, 4
  0009d	c1 e0 03	 shl	 eax, 3
  000a0	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_09NPPFACME@Medal?5Air@

; 153  : 	us_medal_type_names [MEDAL_FLYING_CROSS] = "Medal Distinguished";

  000aa	b8 04 00 00 00	 mov	 eax, 4
  000af	6b c8 09	 imul	 ecx, eax, 9
  000b2	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BE@BJOEHDAH@Medal?5Distinguished@

; 154  : 	us_medal_type_names [MEDAL_SILVER_STAR] = "Medal Silver";

  000bc	b8 04 00 00 00	 mov	 eax, 4
  000c1	6b c8 0a	 imul	 ecx, eax, 10
  000c4	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0N@FLJHBDKJ@Medal?5Silver@

; 155  : 	us_medal_type_names [MEDAL_DISTINGUISHED_SERVICE] = "Medal Service";

  000ce	b8 04 00 00 00	 mov	 eax, 4
  000d3	6b c8 0b	 imul	 ecx, eax, 11
  000d6	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0O@BOJFGMNN@Medal?5Service@

; 156  : 	us_medal_type_names [MEDAL_MEDAL_OF_HONOUR] = "Medal Honour";

  000e0	b8 04 00 00 00	 mov	 eax, 4
  000e5	6b c8 0c	 imul	 ecx, eax, 12
  000e8	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?us_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0N@KDOANAIF@Medal?5Honour@

; 157  : 
; 158  : 	cis_medal_type_names [MEDAL_TYPE_NONE] = NULL;

  000f2	b8 04 00 00 00	 mov	 eax, 4
  000f7	6b c8 00	 imul	 ecx, eax, 0
  000fa	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], 0

; 159  : 	cis_medal_type_names [MEDAL_SAUDI] = "Medal SV Yemen";

  00104	b8 04 00 00 00	 mov	 eax, 4
  00109	c1 e0 00	 shl	 eax, 0
  0010c	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0P@GPNPPMPN@Medal?5SV?5Yemen@

; 160  : 	cis_medal_type_names [MEDAL_LEBANON] = "Medal SV Lebanon";

  00116	b8 04 00 00 00	 mov	 eax, 4
  0011b	d1 e0		 shl	 eax, 1
  0011d	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0BB@JNGBKPHG@Medal?5SV?5Lebanon@

; 161  : 	cis_medal_type_names [MEDAL_TAIWAN] = "Medal SV Taiwan";

  00127	b8 04 00 00 00	 mov	 eax, 4
  0012c	6b c8 03	 imul	 ecx, eax, 3
  0012f	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BA@MGJHEKEL@Medal?5SV?5Taiwan@

; 162  : 	cis_medal_type_names [MEDAL_ARMY_AVIATOR] = "Medal SV Army Wings";

  00139	b8 04 00 00 00	 mov	 eax, 4
  0013e	c1 e0 02	 shl	 eax, 2
  00141	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0BE@OBBJPHBK@Medal?5SV?5Army?5Wings@

; 163  : 	cis_medal_type_names [MEDAL_SENIOR_AVIATOR] = "Medal SV Senior Wings";

  0014b	b8 04 00 00 00	 mov	 eax, 4
  00150	6b c8 05	 imul	 ecx, eax, 5
  00153	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BG@JHPBIMOO@Medal?5SV?5Senior?5Wings@

; 164  : 	cis_medal_type_names [MEDAL_MASTER_AVIATOR] = "Medal SV Master Wings";

  0015d	b8 04 00 00 00	 mov	 eax, 4
  00162	6b c8 06	 imul	 ecx, eax, 6
  00165	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BG@PIAKBEPB@Medal?5SV?5Master?5Wings@

; 165  : 	cis_medal_type_names [MEDAL_PURPLE_HEART] = "Medal SV Glory";

  0016f	b8 04 00 00 00	 mov	 eax, 4
  00174	6b c8 07	 imul	 ecx, eax, 7
  00177	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0P@ONPAAEIP@Medal?5SV?5Glory@

; 166  : 	cis_medal_type_names [MEDAL_AIR_MEDAL] = "Medal SV Banner";

  00181	b8 04 00 00 00	 mov	 eax, 4
  00186	c1 e0 03	 shl	 eax, 3
  00189	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[eax], OFFSET ??_C@_0BA@LMNGNCDL@Medal?5SV?5Banner@

; 167  : 	cis_medal_type_names [MEDAL_FLYING_CROSS] = "Medal SV Lenin";

  00193	b8 04 00 00 00	 mov	 eax, 4
  00198	6b c8 09	 imul	 ecx, eax, 9
  0019b	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0P@CHGLDJFP@Medal?5SV?5Lenin@

; 168  : 	cis_medal_type_names [MEDAL_SILVER_STAR] = "Medal SV Service";

  001a5	b8 04 00 00 00	 mov	 eax, 4
  001aa	6b c8 0a	 imul	 ecx, eax, 10
  001ad	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BB@JONFNNOO@Medal?5SV?5Service@

; 169  : 	cis_medal_type_names [MEDAL_DISTINGUISHED_SERVICE] = "Medal SV Victory";

  001b7	b8 04 00 00 00	 mov	 eax, 4
  001bc	6b c8 0b	 imul	 ecx, eax, 11
  001bf	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0BB@HNCHPAGG@Medal?5SV?5Victory@

; 170  : 	cis_medal_type_names [MEDAL_MEDAL_OF_HONOUR] = "Medal SV Star";

  001c9	b8 04 00 00 00	 mov	 eax, 4
  001ce	6b c8 0c	 imul	 ecx, eax, 12
  001d1	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cis_medal_type_names@@3PAPBDA[ecx], OFFSET ??_C@_0O@GLANAFCA@Medal?5SV?5Star@

; 171  : 
; 172  : 	rank_type_names [PILOT_RANK_NONE] = NULL;

  001db	b8 04 00 00 00	 mov	 eax, 4
  001e0	6b c8 00	 imul	 ecx, eax, 0
  001e3	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[ecx], 0

; 173  : 	rank_type_names [PILOT_RANK_LIEUTENANT] = "Lieutenant";

  001ed	b8 04 00 00 00	 mov	 eax, 4
  001f2	c1 e0 00	 shl	 eax, 0
  001f5	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[eax], OFFSET ??_C@_0L@HLAANINN@Lieutenant@

; 174  : 	rank_type_names [PILOT_RANK_CAPTAIN] = "Captain";

  001ff	b8 04 00 00 00	 mov	 eax, 4
  00204	d1 e0		 shl	 eax, 1
  00206	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[eax], OFFSET ??_C@_07CIJMMPOH@Captain@

; 175  : 	rank_type_names [PILOT_RANK_MAJOR] = "Major";

  00210	b8 04 00 00 00	 mov	 eax, 4
  00215	6b c8 03	 imul	 ecx, eax, 3
  00218	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[ecx], OFFSET ??_C@_05FDLAJJBN@Major@

; 176  : 	rank_type_names [PILOT_RANK_LT_COLONEL] = "Lt. Colonel";

  00222	b8 04 00 00 00	 mov	 eax, 4
  00227	c1 e0 02	 shl	 eax, 2
  0022a	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[eax], OFFSET ??_C@_0M@MOMICILP@Lt?4?5Colonel@

; 177  : 	rank_type_names [PILOT_RANK_COLONEL] = "Colonel";

  00234	b8 04 00 00 00	 mov	 eax, 4
  00239	6b c8 05	 imul	 ecx, eax, 5
  0023c	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?rank_type_names@@3PAPBDA[ecx], OFFSET ??_C@_07HIMIFLHJ@Colonel@

; 178  : }

  00246	5f		 pop	 edi
  00247	5e		 pop	 esi
  00248	5b		 pop	 ebx
  00249	8b e5		 mov	 esp, ebp
  0024b	5d		 pop	 ebp
  0024c	c3		 ret	 0
?initialise_medal_and_promotion_names@@YGXXZ ENDP	; initialise_medal_and_promotion_names
_TEXT	ENDS
END
