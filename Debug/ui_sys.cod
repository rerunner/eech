; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_sys\ui_sys.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ui_installed@@3HA				; ui_installed
PUBLIC	?ui_objects@@3PAUUI_OBJECT@@A			; ui_objects
PUBLIC	?first_free_ui_object@@3PAUUI_OBJECT@@A		; first_free_ui_object
PUBLIC	?first_used_ui_object@@3PAUUI_OBJECT@@A		; first_used_ui_object
_BSS	SEGMENT
?ui_installed@@3HA DD 01H DUP (?)			; ui_installed
?ui_objects@@3PAUUI_OBJECT@@A DD 01H DUP (?)		; ui_objects
?first_free_ui_object@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; first_free_ui_object
?first_used_ui_object@@3PAUUI_OBJECT@@A DD 01H DUP (?)	; first_used_ui_object
_BSS	ENDS
PUBLIC	?initialise_ui_system@@YGXH@Z			; initialise_ui_system
PUBLIC	?deinitialise_ui_system@@YGXXZ			; deinitialise_ui_system
PUBLIC	?get_free_ui_object@@YGPAUUI_OBJECT@@XZ		; get_free_ui_object
PUBLIC	?set_free_ui_object@@YGXPAUUI_OBJECT@@@Z	; set_free_ui_object
PUBLIC	??_C@_0DE@ODGIJBHF@Initialising?5UI?5system?0?5Memory?5@ ; `string'
PUBLIC	?__LINE__Var@?0??initialise_system_ui_objects@@YGXH@Z@4JA ; `initialise_system_ui_objects'::`1'::__LINE__Var
PUBLIC	??_C@_0DO@OPMJBKPK@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_0DB@IJOCDAGF@?$CInum_ui_objects?5?$DO?50?$CJ?5?$CG?$CG?5?$CInum_ui@ ; `string'
PUBLIC	??_C@_0CB@JEEFOANE@WARNING?$CB?5ui_objects?5still?5in?5us@ ; `string'
PUBLIC	??_C@_0CI@PCNFAOFM@WARNING?$CB?5Failed?5to?5get?5a?5free?5u@ ; `string'
PUBLIC	?__LINE__Var@?0??set_free_ui_object@@YGXPAUUI_OBJECT@@@Z@4JA ; `set_free_ui_object'::`1'::__LINE__Var
PUBLIC	??_C@_03GJLPFLNF@obj@				; `string'
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?register_post_activate_message_function@@YGHP6GXH@Z@Z:PROC ; register_post_activate_message_function
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?debug_log@@YAXPBDZZ:PROC			; debug_log
EXTRN	?get_memory_block_system_installed@@YGHXZ:PROC	; get_memory_block_system_installed
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?free_mem@@YGXPAX@Z:PROC			; free_mem
EXTRN	?initialise_ui_global_functions@@YGXXZ:PROC	; initialise_ui_global_functions
EXTRN	?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z:PROC	; destroy_ui_object
EXTRN	?get_ui_screen_stack_head@@YGPAUUI_OBJECT@@XZ:PROC ; get_ui_screen_stack_head
EXTRN	?initialise_ui_colours@@YGXXZ:PROC		; initialise_ui_colours
EXTRN	?bExiting@@3HA:DWORD				; bExiting
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
;	COMDAT ??_C@_03GJLPFLNF@obj@
CONST	SEGMENT
??_C@_03GJLPFLNF@obj@ DB 'obj', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_free_ui_object@@YGXPAUUI_OBJECT@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_free_ui_object@@YGXPAUUI_OBJECT@@@Z@4JA DD 0119H ; `set_free_ui_object'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CI@PCNFAOFM@WARNING?$CB?5Failed?5to?5get?5a?5free?5u@
CONST	SEGMENT
??_C@_0CI@PCNFAOFM@WARNING?$CB?5Failed?5to?5get?5a?5free?5u@ DB 'WARNING!'
	DB	' Failed to get a free ui_object', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JEEFOANE@WARNING?$CB?5ui_objects?5still?5in?5us@
CONST	SEGMENT
??_C@_0CB@JEEFOANE@WARNING?$CB?5ui_objects?5still?5in?5us@ DB 'WARNING! u'
	DB	'i_objects still in use', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IJOCDAGF@?$CInum_ui_objects?5?$DO?50?$CJ?5?$CG?$CG?5?$CInum_ui@
CONST	SEGMENT
??_C@_0DB@IJOCDAGF@?$CInum_ui_objects?5?$DO?50?$CJ?5?$CG?$CG?5?$CInum_ui@ DB '('
	DB	'num_ui_objects > 0) && (num_ui_objects < 65536)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OPMJBKPK@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DO@OPMJBKPK@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\userint2\ui_sys\ui_sys.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_system_ui_objects@@YGXH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_system_ui_objects@@YGXH@Z@4JA DD 088H ; `initialise_system_ui_objects'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DE@ODGIJBHF@Initialising?5UI?5system?0?5Memory?5@
CONST	SEGMENT
??_C@_0DE@ODGIJBHF@Initialising?5UI?5system?0?5Memory?5@ DB 'Initialising'
	DB	' UI system, Memory Blocks not installed', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?repaint_ui_system@@YGXH@Z
_TEXT	SEGMENT
_screen_stack$ = -4					; size = 4
_activate$ = 8						; size = 4
?repaint_ui_system@@YGXH@Z PROC				; repaint_ui_system, COMDAT

; 328  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 329  : 
; 330  :    ui_object
; 331  :       *screen_stack;
; 332  : 
; 333  : 	if (activate)

  00009	83 7d 08 00	 cmp	 DWORD PTR _activate$[ebp], 0
  0000d	74 2b		 je	 SHORT $LN1@repaint_ui

; 334  : 	{
; 335  : 
; 336  : 		if (!bExiting)

  0000f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bExiting@@3HA, 0 ; bExiting
  00016	75 22		 jne	 SHORT $LN1@repaint_ui

; 337  : 		{
; 338  : 	
; 339  : 			//
; 340  : 			// Need to repaint the ui screen
; 341  : 			//
; 342  : 	
; 343  : 			screen_stack = get_ui_screen_stack_head ();

  00018	e8 00 00 00 00	 call	 ?get_ui_screen_stack_head@@YGPAUUI_OBJECT@@XZ ; get_ui_screen_stack_head
  0001d	89 45 fc	 mov	 DWORD PTR _screen_stack$[ebp], eax

; 344  : 	
; 345  : 			if (screen_stack)

  00020	83 7d fc 00	 cmp	 DWORD PTR _screen_stack$[ebp], 0
  00024	74 14		 je	 SHORT $LN1@repaint_ui

; 346  : 			{
; 347  : 	
; 348  : 				set_ui_object_redraw (screen_stack, TRUE);

  00026	6a 01		 push	 1
  00028	8b 45 fc	 mov	 eax, DWORD PTR _screen_stack$[ebp]
  0002b	50		 push	 eax
  0002c	8b 4d fc	 mov	 ecx, DWORD PTR _screen_stack$[ebp]
  0002f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00031	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00038	ff d0		 call	 eax
$LN1@repaint_ui:

; 349  : 			}
; 350  : 		}
; 351  : 	}
; 352  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 04 00	 ret	 4
?repaint_ui_system@@YGXH@Z ENDP				; repaint_ui_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?deinitialise_system_ui_objects@@YGXXZ
_TEXT	SEGMENT
_this_object$ = -4					; size = 4
?deinitialise_system_ui_objects@@YGXXZ PROC		; deinitialise_system_ui_objects, COMDAT

; 176  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 177  : 
; 178  :    ui_object
; 179  :       *this_object;
; 180  : 
; 181  :    this_object = first_used_ui_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A ; first_used_ui_object
  0000e	89 45 fc	 mov	 DWORD PTR _this_object$[ebp], eax
$LN2@deinitiali:

; 182  : 
; 183  :    while (this_object)

  00011	83 7d fc 00	 cmp	 DWORD PTR _this_object$[ebp], 0
  00015	74 20		 je	 SHORT $LN3@deinitiali

; 184  :    {
; 185  : 
; 186  :       this_object = first_used_ui_object->succ;

  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A ; first_used_ui_object
  0001c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001f	89 4d fc	 mov	 DWORD PTR _this_object$[ebp], ecx

; 187  : 
; 188  :       destroy_ui_object (first_used_ui_object);

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A ; first_used_ui_object
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 ?destroy_ui_object@@YGXPAUUI_OBJECT@@@Z ; destroy_ui_object

; 189  : 
; 190  :       first_used_ui_object = this_object;

  0002d	8b 45 fc	 mov	 eax, DWORD PTR _this_object$[ebp]
  00030	a3 00 00 00 00	 mov	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, eax ; first_used_ui_object

; 191  :    }

  00035	eb da		 jmp	 SHORT $LN2@deinitiali
$LN3@deinitiali:

; 192  : 
; 193  :    if (first_used_ui_object)

  00037	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, 0 ; first_used_ui_object
  0003e	74 0d		 je	 SHORT $LN4@deinitiali

; 194  :    {
; 195  : 
; 196  :       debug_log ("WARNING! ui_objects still in use");

  00040	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@JEEFOANE@WARNING?$CB?5ui_objects?5still?5in?5us@
  00045	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0004a	83 c4 04	 add	 esp, 4
$LN4@deinitiali:

; 197  :    }
; 198  : 
; 199  :    free_mem (ui_objects);

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  00052	50		 push	 eax
  00053	e8 00 00 00 00	 call	 ?free_mem@@YGXPAX@Z	; free_mem

; 200  : 
; 201  :    ui_objects = NULL;

  00058	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A, 0 ; ui_objects

; 202  : 
; 203  :    first_free_ui_object = NULL;

  00062	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A, 0 ; first_free_ui_object

; 204  : 
; 205  :    first_used_ui_object = NULL;

  0006c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, 0 ; first_used_ui_object

; 206  : }

  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5b		 pop	 ebx
  00079	8b e5		 mov	 esp, ebp
  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
?deinitialise_system_ui_objects@@YGXXZ ENDP		; deinitialise_system_ui_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?initialise_system_ui_objects@@YGXH@Z
_TEXT	SEGMENT
_i$ = -8						; size = 4
_size$ = -4						; size = 4
_num_ui_objects$ = 8					; size = 4
?initialise_system_ui_objects@@YGXH@Z PROC		; initialise_system_ui_objects, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 137  : 
; 138  :    int
; 139  :       size,
; 140  :       i;
; 141  : 
; 142  :    ASSERT ((num_ui_objects > 0) && (num_ui_objects < 65536));

  00009	83 7d 08 00	 cmp	 DWORD PTR _num_ui_objects$[ebp], 0
  0000d	7e 09		 jle	 SHORT $LN6@initialise
  0000f	81 7d 08 00 00
	01 00		 cmp	 DWORD PTR _num_ui_objects$[ebp], 65536 ; 00010000H
  00016	7c 18		 jl	 SHORT $LN5@initialise
$LN6@initialise:
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_system_ui_objects@@YGXH@Z@4JA
  0001d	83 c0 06	 add	 eax, 6
  00020	50		 push	 eax
  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@OPMJBKPK@c?3?2users?2nhv90?2projects?2eech?2mo@
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DB@IJOCDAGF@?$CInum_ui_objects?5?$DO?50?$CJ?5?$CG?$CG?5?$CInum_ui@
  0002b	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 143  : 
; 144  :    size = num_ui_objects * sizeof (ui_object);

  00030	8b 45 08	 mov	 eax, DWORD PTR _num_ui_objects$[ebp]
  00033	c1 e0 05	 shl	 eax, 5
  00036	89 45 fc	 mov	 DWORD PTR _size$[ebp], eax

; 145  : 
; 146  :    ui_objects = (ui_object*) malloc_heap_mem (size);

  00039	8b 45 fc	 mov	 eax, DWORD PTR _size$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  00042	a3 00 00 00 00	 mov	 DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A, eax ; ui_objects

; 147  : 
; 148  :    memset (ui_objects, 0, size);

  00047	8b 45 fc	 mov	 eax, DWORD PTR _size$[ebp]
  0004a	50		 push	 eax
  0004b	6a 00		 push	 0
  0004d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  00053	51		 push	 ecx
  00054	e8 00 00 00 00	 call	 _memset
  00059	83 c4 0c	 add	 esp, 12			; 0000000cH

; 149  : 
; 150  :    for (i = 0; i < num_ui_objects; i++)

  0005c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00063	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  00065	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00068	83 c0 01	 add	 eax, 1
  0006b	89 45 f8	 mov	 DWORD PTR _i$[ebp], eax
$LN4@initialise:
  0006e	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00071	3b 45 08	 cmp	 eax, DWORD PTR _num_ui_objects$[ebp]
  00074	7d 51		 jge	 SHORT $LN3@initialise

; 151  :    {
; 152  : 
; 153  :       if (i < num_ui_objects - 1)

  00076	8b 45 08	 mov	 eax, DWORD PTR _num_ui_objects$[ebp]
  00079	83 e8 01	 sub	 eax, 1
  0007c	39 45 f8	 cmp	 DWORD PTR _i$[ebp], eax
  0007f	7d 1f		 jge	 SHORT $LN7@initialise

; 154  :       {
; 155  : 
; 156  :          ui_objects [i].succ = &ui_objects [i + 1];

  00081	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  00084	83 c0 01	 add	 eax, 1
  00087	c1 e0 05	 shl	 eax, 5
  0008a	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  00090	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  00093	c1 e1 05	 shl	 ecx, 5
  00096	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  0009c	89 44 0a 08	 mov	 DWORD PTR [edx+ecx+8], eax
$LN7@initialise:

; 157  :       }
; 158  : 
; 159  :       if (i > 0)

  000a0	83 7d f8 00	 cmp	 DWORD PTR _i$[ebp], 0
  000a4	7e 1f		 jle	 SHORT $LN8@initialise

; 160  :       {
; 161  : 
; 162  :          ui_objects [i].pred = &ui_objects [i - 1];

  000a6	8b 45 f8	 mov	 eax, DWORD PTR _i$[ebp]
  000a9	83 e8 01	 sub	 eax, 1
  000ac	c1 e0 05	 shl	 eax, 5
  000af	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  000b5	8b 4d f8	 mov	 ecx, DWORD PTR _i$[ebp]
  000b8	c1 e1 05	 shl	 ecx, 5
  000bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  000c1	89 44 0a 0c	 mov	 DWORD PTR [edx+ecx+12], eax
$LN8@initialise:

; 163  :       }
; 164  :    }

  000c5	eb 9e		 jmp	 SHORT $LN2@initialise
$LN3@initialise:

; 165  : 
; 166  :    first_free_ui_object = ui_objects;

  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_objects@@3PAUUI_OBJECT@@A ; ui_objects
  000cc	a3 00 00 00 00	 mov	 DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A, eax ; first_free_ui_object

; 167  : 
; 168  :    first_used_ui_object = NULL;

  000d1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, 0 ; first_used_ui_object

; 169  : }

  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 04 00	 ret	 4
?initialise_system_ui_objects@@YGXH@Z ENDP		; initialise_system_ui_objects
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?set_free_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
_obj$ = 8						; size = 4
?set_free_ui_object@@YGXPAUUI_OBJECT@@@Z PROC		; set_free_ui_object, COMDAT

; 281  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 282  : 
; 283  :    ASSERT (obj);

  00009	83 7d 08 00	 cmp	 DWORD PTR _obj$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_free_u
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_free_ui_object@@YGXPAUUI_OBJECT@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@OPMJBKPK@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03GJLPFLNF@obj@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_free_u:

; 284  : 
; 285  :    obj->type = UI_TYPE_UNKNOWN;

  00027	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0002a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 286  : 
; 287  :    obj->data = NULL;

  00030	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00033	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 288  : 
; 289  :    // unlink ui_objects from used list
; 290  : 
; 291  :    if (obj->pred)

  0003a	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003d	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00041	74 11		 je	 SHORT $LN3@set_free_u

; 292  :    {
; 293  : 
; 294  :       obj->pred->succ = obj->succ;

  00043	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00046	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00049	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  0004c	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0004f	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 295  :    }
; 296  :    else

  00052	eb 0c		 jmp	 SHORT $LN4@set_free_u
$LN3@set_free_u:

; 297  :    {
; 298  : 
; 299  :       first_used_ui_object = obj->succ;

  00054	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00057	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0005a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, ecx ; first_used_ui_object
$LN4@set_free_u:

; 300  :    }
; 301  : 
; 302  :    if (obj->succ)

  00060	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00063	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00067	74 0f		 je	 SHORT $LN5@set_free_u

; 303  :    {
; 304  : 
; 305  :       obj->succ->pred = obj->pred;

  00069	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0006c	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0006f	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00072	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  00075	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
$LN5@set_free_u:

; 306  :    }
; 307  : 
; 308  :    // link ui_objects into start of free list
; 309  : 
; 310  :    obj->succ = first_free_ui_object;

  00078	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0007b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A ; first_free_ui_object
  00081	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 311  : 
; 312  :    if (obj->succ)

  00084	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00087	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0008b	74 0c		 je	 SHORT $LN6@set_free_u

; 313  :    {
; 314  : 
; 315  :       obj->succ->pred = obj;

  0008d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00090	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00093	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  00096	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$LN6@set_free_u:

; 316  :    }
; 317  : 
; 318  :    obj->pred = NULL;

  00099	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0009c	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0

; 319  : 
; 320  :    first_free_ui_object = obj;

  000a3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A, eax ; first_free_ui_object

; 321  : }

  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi
  000ad	5b		 pop	 ebx
  000ae	8b e5		 mov	 esp, ebp
  000b0	5d		 pop	 ebp
  000b1	c2 04 00	 ret	 4
?set_free_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP		; set_free_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?get_free_ui_object@@YGPAUUI_OBJECT@@XZ
_TEXT	SEGMENT
_new_$ = -4						; size = 4
?get_free_ui_object@@YGPAUUI_OBJECT@@XZ PROC		; get_free_ui_object, COMDAT

; 213  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 214  : 
; 215  :    ui_object
; 216  :       *new_;
; 217  : 
; 218  : /*
; 219  : 	{
; 220  : 
; 221  : 		int
; 222  : 			count;
; 223  : 	
; 224  : 		count = 0;
; 225  : 	
; 226  : 		new_ = first_free_ui_object;
; 227  : 	
; 228  : 		while (new_)
; 229  : 		{
; 230  : 	
; 231  : 			count ++;
; 232  : 	
; 233  : 			new_ = new_->succ;
; 234  : 		}
; 235  : 
; 236  : 		debug_log ("UI_SYS: free list count = %d", count);
; 237  : 	}
; 238  : */
; 239  : 
; 240  :    new_ = first_free_ui_object;

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A ; first_free_ui_object
  0000e	89 45 fc	 mov	 DWORD PTR _new_$[ebp], eax

; 241  : 
; 242  :    if (new_)

  00011	83 7d fc 00	 cmp	 DWORD PTR _new_$[ebp], 0
  00015	74 4d		 je	 SHORT $LN2@get_free_u

; 243  :    {
; 244  : 
; 245  :       // unlink new_ ui_object from free list
; 246  : 
; 247  :       first_free_ui_object = new_->succ;

  00017	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0001a	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0001d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?first_free_ui_object@@3PAUUI_OBJECT@@A, ecx ; first_free_ui_object

; 248  : 
; 249  :       if (new_->succ)

  00023	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00026	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0002a	74 0d		 je	 SHORT $LN4@get_free_u

; 250  :       {
; 251  : 
; 252  :          new_->succ->pred = NULL;

  0002c	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0002f	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00032	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
$LN4@get_free_u:

; 253  :       }
; 254  : 
; 255  :       // insert new_ ui_object into used list
; 256  : 
; 257  :       new_->succ = first_used_ui_object;

  00039	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0003c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A ; first_used_ui_object
  00042	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 258  : 
; 259  :       if (new_->succ)

  00045	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00048	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0004c	74 0c		 je	 SHORT $LN5@get_free_u

; 260  :       {
; 261  : 
; 262  :          new_->succ->pred = new_;

  0004e	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  00051	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00054	8b 55 fc	 mov	 edx, DWORD PTR _new_$[ebp]
  00057	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
$LN5@get_free_u:

; 263  :       }
; 264  : 
; 265  :       first_used_ui_object = new_;

  0005a	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]
  0005d	a3 00 00 00 00	 mov	 DWORD PTR ?first_used_ui_object@@3PAUUI_OBJECT@@A, eax ; first_used_ui_object

; 266  :    }
; 267  :    else

  00062	eb 0d		 jmp	 SHORT $LN3@get_free_u
$LN2@get_free_u:

; 268  :    {
; 269  : 
; 270  :       debug_log ("WARNING! Failed to get a free ui_object");

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@PCNFAOFM@WARNING?$CB?5Failed?5to?5get?5a?5free?5u@
  00069	e8 00 00 00 00	 call	 ?debug_log@@YAXPBDZZ	; debug_log
  0006e	83 c4 04	 add	 esp, 4
$LN3@get_free_u:

; 271  :    }
; 272  : 
; 273  :    return (new_);

  00071	8b 45 fc	 mov	 eax, DWORD PTR _new_$[ebp]

; 274  : }

  00074	5f		 pop	 edi
  00075	5e		 pop	 esi
  00076	5b		 pop	 ebx
  00077	8b e5		 mov	 esp, ebp
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?get_free_ui_object@@YGPAUUI_OBJECT@@XZ ENDP		; get_free_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?deinitialise_ui_system@@YGXXZ
_TEXT	SEGMENT
?deinitialise_ui_system@@YGXXZ PROC			; deinitialise_ui_system, COMDAT

; 124  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 125  : 
; 126  : 	set_ui_installed (FALSE);

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ui_installed@@3HA, 0 ; ui_installed

; 127  : 
; 128  :    deinitialise_system_ui_objects ();

  00013	e8 00 00 00 00	 call	 ?deinitialise_system_ui_objects@@YGXXZ ; deinitialise_system_ui_objects

; 129  : }

  00018	5f		 pop	 edi
  00019	5e		 pop	 esi
  0001a	5b		 pop	 ebx
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?deinitialise_ui_system@@YGXXZ ENDP			; deinitialise_ui_system
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_sys\ui_sys.c
;	COMDAT ?initialise_ui_system@@YGXH@Z
_TEXT	SEGMENT
_num_ui_objects$ = 8					; size = 4
?initialise_ui_system@@YGXH@Z PROC			; initialise_ui_system, COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 101  : 
; 102  : 	initialise_ui_colours ();

  00009	e8 00 00 00 00	 call	 ?initialise_ui_colours@@YGXXZ ; initialise_ui_colours

; 103  : 
; 104  : 	set_ui_installed (TRUE);

  0000e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ui_installed@@3HA, 1 ; ui_installed

; 105  : 
; 106  :    if (!get_memory_block_system_installed ())

  00018	e8 00 00 00 00	 call	 ?get_memory_block_system_installed@@YGHXZ ; get_memory_block_system_installed
  0001d	85 c0		 test	 eax, eax
  0001f	75 0d		 jne	 SHORT $LN2@initialise

; 107  :    {
; 108  : 
; 109  :       debug_fatal ("Initialising UI system, Memory Blocks not installed");

  00021	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@ODGIJBHF@Initialising?5UI?5system?0?5Memory?5@
  00026	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0002b	83 c4 04	 add	 esp, 4
$LN2@initialise:

; 110  :    }
; 111  : 
; 112  :    initialise_system_ui_objects (num_ui_objects);

  0002e	8b 45 08	 mov	 eax, DWORD PTR _num_ui_objects$[ebp]
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ?initialise_system_ui_objects@@YGXH@Z ; initialise_system_ui_objects

; 113  : 
; 114  :    initialise_ui_global_functions ();

  00037	e8 00 00 00 00	 call	 ?initialise_ui_global_functions@@YGXXZ ; initialise_ui_global_functions

; 115  : 
; 116  :    register_post_activate_message_function (repaint_ui_system);

  0003c	68 00 00 00 00	 push	 OFFSET ?repaint_ui_system@@YGXH@Z ; repaint_ui_system
  00041	e8 00 00 00 00	 call	 ?register_post_activate_message_function@@YGHP6GXH@Z@Z ; register_post_activate_message_function

; 117  : }

  00046	5f		 pop	 edi
  00047	5e		 pop	 esi
  00048	5b		 pop	 ebx
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c2 04 00	 ret	 4
?initialise_ui_system@@YGXH@Z ENDP			; initialise_ui_system
_TEXT	ENDS
END
