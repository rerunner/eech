; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\slider\vs_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_vslider_ui_object_update_functions@@YGXH@Z ; overload_vslider_ui_object_update_functions
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z:PROC ; recalculate_slider_size
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_update_ui_object
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vs_updt.c
;	COMDAT ?update_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv310 = -132						; size = 4
tv302 = -132						; size = 4
tv273 = -132						; size = 4
tv265 = -132						; size = 4
_old_viewport_y2$ = -64					; size = 4
_old_viewport_x2$ = -60					; size = 4
_old_viewport_y1$ = -56					; size = 4
_old_viewport_x1$ = -52					; size = 4
_area$ = -48						; size = 4
_parent$ = -44						; size = 4
_y2$ = -40						; size = 4
_x2$ = -36						; size = 4
_y1$ = -32						; size = 4
_x1$ = -28						; size = 4
_parent_y_origin$ = -24					; size = 4
_parent_x_origin$ = -20					; size = 4
_parent_y2$ = -16					; size = 4
_parent_x2$ = -12					; size = 4
_parent_y1$ = -8					; size = 4
_parent_x1$ = -4					; size = 4
_obj$ = 8						; size = 4
?update_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; update_vslider_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		parent_x1,
; 78   : 		parent_y1,
; 79   : 		parent_x2,
; 80   : 		parent_y2,
; 81   : 		parent_x_origin,
; 82   : 		parent_y_origin;
; 83   : 
; 84   : 	float
; 85   : 		x1,
; 86   : 		y1,
; 87   : 		x2,
; 88   : 		y2;
; 89   : 
; 90   : 	ui_object
; 91   : 		*parent;
; 92   : 
; 93   :    area_ui_object
; 94   :       *area;
; 95   : 
; 96   : 	float
; 97   : 		old_viewport_x1,
; 98   : 		old_viewport_y1,
; 99   : 		old_viewport_x2,
; 100  : 		old_viewport_y2;
; 101  : 
; 102  :    // store parents viewport data
; 103  : 
; 104  : 	old_viewport_x1 = active_viewport.x_min;

  0000c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00014	f3 0f 11 45 cc	 movss	 DWORD PTR _old_viewport_x1$[ebp], xmm0

; 105  : 	old_viewport_y1 = active_viewport.y_min;

  00019	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00021	f3 0f 11 45 c8	 movss	 DWORD PTR _old_viewport_y1$[ebp], xmm0

; 106  : 	old_viewport_x2 = active_viewport.x_max;

  00026	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0002e	f3 0f 11 45 c4	 movss	 DWORD PTR _old_viewport_x2$[ebp], xmm0

; 107  : 	old_viewport_y2 = active_viewport.y_max;

  00033	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0003b	f3 0f 11 45 c0	 movss	 DWORD PTR _old_viewport_y2$[ebp], xmm0

; 108  : 
; 109  :    area = (area_ui_object *) obj->data;

  00040	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00043	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00046	89 4d d0	 mov	 DWORD PTR _area$[ebp], ecx

; 110  : 
; 111  : 	// store parents viewport data
; 112  : 
; 113  : 	parent = get_ui_object_parent (obj);

  00049	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00050	8b 11		 mov	 edx, DWORD PTR [ecx]
  00052	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00059	ff d0		 call	 eax
  0005b	89 45 d4	 mov	 DWORD PTR _parent$[ebp], eax

; 114  : 
; 115  : 	parent_x_origin = get_ui_object_x_origin (parent);

  0005e	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  00061	50		 push	 eax
  00062	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  00065	8b 11		 mov	 edx, DWORD PTR [ecx]
  00067	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0006e	ff d0		 call	 eax
  00070	d9 5d ec	 fstp	 DWORD PTR _parent_x_origin$[ebp]

; 116  : 
; 117  : 	parent_y_origin = get_ui_object_y_origin (parent);

  00073	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  00076	50		 push	 eax
  00077	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0007a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00083	ff d0		 call	 eax
  00085	d9 5d e8	 fstp	 DWORD PTR _parent_y_origin$[ebp]

; 118  : 
; 119  : 	parent_x1 = get_ui_object_x (parent);

  00088	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  0008f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00091	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00098	ff d0		 call	 eax
  0009a	d9 5d fc	 fstp	 DWORD PTR _parent_x1$[ebp]

; 120  : 
; 121  : 	parent_y1 = get_ui_object_y (parent);

  0009d	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ad	ff d0		 call	 eax
  000af	d9 5d f8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 122  : 
; 123  : 	parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  000b2	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  000b5	50		 push	 eax
  000b6	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000b9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bb	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000c2	ff d0		 call	 eax
  000c4	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv265[ebp]
  000ca	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv265[ebp]
  000d2	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  000d7	f3 0f 11 45 f4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 124  : 
; 125  : 	parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  000dc	8b 45 d4	 mov	 eax, DWORD PTR _parent$[ebp]
  000df	50		 push	 eax
  000e0	8b 4d d4	 mov	 ecx, DWORD PTR _parent$[ebp]
  000e3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e5	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000ec	ff d0		 call	 eax
  000ee	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv273[ebp]
  000f4	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv273[ebp]
  000fc	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00101	f3 0f 11 45 f0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 126  : 
; 127  : 	recalculate_slider_size (obj);

  00106	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00109	50		 push	 eax
  0010a	e8 00 00 00 00	 call	 ?recalculate_slider_size@@YGXPAUUI_OBJECT@@@Z ; recalculate_slider_size

; 128  : 
; 129  :    if (area->drawable)

  0010f	8b 45 d0	 mov	 eax, DWORD PTR _area$[ebp]
  00112	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00115	c1 e9 05	 shr	 ecx, 5
  00118	83 e1 01	 and	 ecx, 1
  0011b	0f 84 29 01 00
	00		 je	 $LN3@update_vsl

; 130  :    {
; 131  : 
; 132  : 		ui_set_origin (0, 0);

  00121	51		 push	 ecx
  00122	0f 57 c0	 xorps	 xmm0, xmm0
  00125	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0012a	51		 push	 ecx
  0012b	0f 57 c0	 xorps	 xmm0, xmm0
  0012e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00133	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 133  : 
; 134  :       draw_ui_object (obj);

  00138	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0013b	50		 push	 eax
  0013c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0013f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00141	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[edx*4]
  00148	ff d0		 call	 eax

; 135  : 
; 136  :       if (area->child)

  0014a	8b 45 d0	 mov	 eax, DWORD PTR _area$[ebp]
  0014d	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  00151	0f 84 f3 00 00
	00		 je	 $LN3@update_vsl

; 137  :       {
; 138  : 
; 139  : 			x1 = get_ui_object_x (obj);

  00157	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0015a	50		 push	 eax
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0015e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00160	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00167	ff d0		 call	 eax
  00169	d9 5d e4	 fstp	 DWORD PTR _x1$[ebp]

; 140  : 
; 141  : 			y1 = get_ui_object_y (obj);

  0016c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0016f	50		 push	 eax
  00170	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00173	8b 11		 mov	 edx, DWORD PTR [ecx]
  00175	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0017c	ff d0		 call	 eax
  0017e	d9 5d e0	 fstp	 DWORD PTR _y1$[ebp]

; 142  : 
; 143  : 			x2 = x1 + get_ui_object_x_size (obj);

  00181	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00184	50		 push	 eax
  00185	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00188	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00191	ff d0		 call	 eax
  00193	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv302[ebp]
  00199	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv302[ebp]
  001a1	f3 0f 58 45 e4	 addss	 xmm0, DWORD PTR _x1$[ebp]
  001a6	f3 0f 11 45 dc	 movss	 DWORD PTR _x2$[ebp], xmm0

; 144  : 
; 145  : 			y2 = y1 + get_ui_object_y_size (obj);

  001ab	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001ae	50		 push	 eax
  001af	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b2	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b4	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  001bb	ff d0		 call	 eax
  001bd	d9 9d 7c ff ff
	ff		 fstp	 DWORD PTR tv310[ebp]
  001c3	f3 0f 10 85 7c
	ff ff ff	 movss	 xmm0, DWORD PTR tv310[ebp]
  001cb	f3 0f 58 45 e0	 addss	 xmm0, DWORD PTR _y1$[ebp]
  001d0	f3 0f 11 45 d8	 movss	 DWORD PTR _y2$[ebp], xmm0

; 146  : 
; 147  : 			ui_clip_area (&x1, &y1, &x2, &y2);

  001d5	8d 45 d8	 lea	 eax, DWORD PTR _y2$[ebp]
  001d8	50		 push	 eax
  001d9	8d 4d dc	 lea	 ecx, DWORD PTR _x2$[ebp]
  001dc	51		 push	 ecx
  001dd	8d 55 e0	 lea	 edx, DWORD PTR _y1$[ebp]
  001e0	52		 push	 edx
  001e1	8d 45 e4	 lea	 eax, DWORD PTR _x1$[ebp]
  001e4	50		 push	 eax
  001e5	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 148  : 
; 149  : 			set_viewport (x1, y1, x2, y2);

  001ea	51		 push	 ecx
  001eb	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001f0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f5	51		 push	 ecx
  001f6	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00200	51		 push	 ecx
  00201	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00206	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0020b	51		 push	 ecx
  0020c	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00211	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00216	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 150  : 	
; 151  : 			ui_set_origin (0, 0);

  0021b	51		 push	 ecx
  0021c	0f 57 c0	 xorps	 xmm0, xmm0
  0021f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00224	51		 push	 ecx
  00225	0f 57 c0	 xorps	 xmm0, xmm0
  00228	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0022d	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 152  : 	
; 153  :          update_ui_object (area->child);

  00232	8b 45 d0	 mov	 eax, DWORD PTR _area$[ebp]
  00235	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00238	51		 push	 ecx
  00239	8b 55 d0	 mov	 edx, DWORD PTR _area$[ebp]
  0023c	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0023f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00241	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  00248	ff d2		 call	 edx
$LN3@update_vsl:

; 154  :       }
; 155  : 	}
; 156  : 
; 157  : 	set_viewport (old_viewport_x1, old_viewport_y1, old_viewport_x2, old_viewport_y2);

  0024a	51		 push	 ecx
  0024b	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_viewport_y2$[ebp]
  00250	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00255	51		 push	 ecx
  00256	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _old_viewport_x2$[ebp]
  0025b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00260	51		 push	 ecx
  00261	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _old_viewport_y1$[ebp]
  00266	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026b	51		 push	 ecx
  0026c	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _old_viewport_x1$[ebp]
  00271	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00276	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 158  : 
; 159  : 	if (area->next)

  0027b	8b 45 d0	 mov	 eax, DWORD PTR _area$[ebp]
  0027e	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  00282	74 7f		 je	 SHORT $LN4@update_vsl

; 160  : 	{
; 161  : 
; 162  : 		parent = get_ui_object_parent (obj);

  00284	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00287	50		 push	 eax
  00288	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0028b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0028d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00294	ff d0		 call	 eax
  00296	89 45 d4	 mov	 DWORD PTR _parent$[ebp], eax

; 163  : 
; 164  : 		if (parent)

  00299	83 7d d4 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0029d	74 4c		 je	 SHORT $LN5@update_vsl

; 165  : 		{
; 166  : 	
; 167  : 			set_viewport (parent_x1, parent_y1, parent_x2, parent_y2);

  0029f	51		 push	 ecx
  002a0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  002a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002aa	51		 push	 ecx
  002ab	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  002b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002b5	51		 push	 ecx
  002b6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  002bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c0	51		 push	 ecx
  002c1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  002c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002cb	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 168  : 	
; 169  : 			ui_set_origin (parent_x_origin, parent_y_origin);

  002d0	51		 push	 ecx
  002d1	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y_origin$[ebp]
  002d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002db	51		 push	 ecx
  002dc	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x_origin$[ebp]
  002e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002e6	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN5@update_vsl:

; 170  : 		}
; 171  : 
; 172  : 		update_ui_object (area->next);

  002eb	8b 45 d0	 mov	 eax, DWORD PTR _area$[ebp]
  002ee	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  002f1	51		 push	 ecx
  002f2	8b 55 d0	 mov	 edx, DWORD PTR _area$[ebp]
  002f5	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  002f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  002fa	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  00301	ff d2		 call	 edx
$LN4@update_vsl:

; 173  : 	}
; 174  : }

  00303	5f		 pop	 edi
  00304	5e		 pop	 esi
  00305	5b		 pop	 ebx
  00306	8b e5		 mov	 esp, ebp
  00308	5d		 pop	 ebp
  00309	c2 04 00	 ret	 4
?update_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; update_vslider_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vs_updt.c
;	COMDAT ?overload_vslider_ui_object_update_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_vslider_ui_object_update_functions@@YGXH@Z PROC ; overload_vslider_ui_object_update_functions, COMDAT

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 182  : 
; 183  : 	fn_update_ui_object [type] = update_vslider_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?update_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z ; update_vslider_ui_object

; 184  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_vslider_ui_object_update_functions@@YGXH@Z ENDP ; overload_vslider_ui_object_update_functions
_TEXT	ENDS
END
