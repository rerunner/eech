; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_sound_effect_pack_functions@@YGXXZ	; overload_sound_effect_pack_functions
PUBLIC	?pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_only_sound_effect_data
PUBLIC	?unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; unpack_local_only_sound_effect_data
PUBLIC	?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA ; `unpack_local_data'::`1'::__LINE__Var
PUBLIC	??_C@_0CF@CJFMAPLO@raw?9?$DOsound_effect_sequence_coun@ ; `string'
PUBLIC	?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `pack_local_only_sound_effect_data'::`1'::__LINE__Var
PUBLIC	??_C@_02LFNMGJAP@en@				; `string'
PUBLIC	??_C@_0N@MGIMPDPO@raw?9?$DOlooping@		; `string'
PUBLIC	??_C@_0CG@BDFIJDNE@raw?9?$DOsound_effect_sequence_coun@ ; `string'
PUBLIC	?__LINE__Var@?0??unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA ; `unpack_local_only_sound_effect_data'::`1'::__LINE__Var
PUBLIC	??_C@_06MLKDMCBD@parent@			; `string'
EXTRN	_memset:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?malloc_fast_memory@@YGPAXI@Z:PROC		; malloc_fast_memory
EXTRN	?malloc_heap_memory@@YGPAXI@Z:PROC		; malloc_heap_memory
EXTRN	?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z:PROC	; pack_entity_type
EXTRN	?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z:PROC ; insert_local_entity_into_parents_child_list
EXTRN	?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z:PROC ; pack_float_value
EXTRN	?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z:PROC ; unpack_float_value
EXTRN	?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z:PROC ; pack_int_value
EXTRN	?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z:PROC ; unpack_int_value
EXTRN	?register_attach_sound_effect_to_object@@YGXPAUENTITY@@HW4ENTITY_SIDES@@HHH@Z:PROC ; register_attach_sound_effect_to_object
EXTRN	?get_free_entity@@YGPAUENTITY@@H@Z:PROC		; get_free_entity
EXTRN	?unpack_entity_safe_index@@YGHXZ:PROC		; unpack_entity_safe_index
EXTRN	?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z:PROC	; pack_entity_safe_ptr
EXTRN	?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; pack_effect_data
EXTRN	?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z:PROC ; unpack_effect_data
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA:BYTE ; fn_pack_local_entity_data
EXTRN	?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA:BYTE ; fn_unpack_local_entity_data
EXTRN	?overload_invalid_list_type_message@@3PBDB:DWORD ; overload_invalid_list_type_message
EXTRN	?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA:BYTE ; fn_get_local_entity_parent
EXTRN	?effect_database@@3QBUEFFECT_DATA@@B:BYTE	; effect_database
EXTRN	?update_entity@@3PAUENTITY@@A:DWORD		; update_entity
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_06MLKDMCBD@parent@
CONST	SEGMENT
??_C@_06MLKDMCBD@parent@ DB 'parent', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 016fH ; `unpack_local_only_sound_effect_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CG@BDFIJDNE@raw?9?$DOsound_effect_sequence_coun@
CONST	SEGMENT
??_C@_0CG@BDFIJDNE@raw?9?$DOsound_effect_sequence_coun@ DB 'raw->sound_ef'
	DB	'fect_sequence_count == 1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGIMPDPO@raw?9?$DOlooping@
CONST	SEGMENT
??_C@_0N@MGIMPDPO@raw?9?$DOlooping@ DB 'raw->looping', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02LFNMGJAP@en@
CONST	SEGMENT
??_C@_02LFNMGJAP@en@ DB 'en', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 0142H ; `pack_local_only_sound_effect_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CF@CJFMAPLO@raw?9?$DOsound_effect_sequence_coun@
CONST	SEGMENT
??_C@_0CF@CJFMAPLO@raw?9?$DOsound_effect_sequence_coun@ DB 'raw->sound_ef'
	DB	'fect_sequence_count > 0', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA DD 0bfH ; `unpack_local_data'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
CONST	SEGMENT
??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@ DB '('
	DB	'mode >= 0) && (mode < NUM_PACK_MODES)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\special\effect\sounde'
	DB	'ff\se_pack.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA DD 050H ; `pack_local_data'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
;	COMDAT ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv213 = -80						; size = 4
tv203 = -80						; size = 4
tv193 = -80						; size = 4
tv183 = -80						; size = 4
tv173 = -80						; size = 4
tv89 = -80						; size = 4
tv70 = -80						; size = 4
_raw$1 = -12						; size = 4
_index$2 = -8						; size = 4
_loop$3 = -4						; size = 4
_en$ = 8						; size = 4
_type$ = 12						; size = 4
_mode$ = 16						; size = 4
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z PROC ; unpack_local_data, COMDAT

; 191  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 192  : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 10 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@unpack_loc
  0000f	83 7d 10 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@unpack_loc
$LN8@unpack_loc:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@unpack_loc:

; 193  : 
; 194  : 	switch (mode)

  0002d	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b0	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b0 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c 53 02 00
	00		 jl	 $LN2@unpack_loc
  0003d	83 7d b0 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@unpack_loc
  00043	e9 48 02 00 00	 jmp	 $LN2@unpack_loc
$LN9@unpack_loc:

; 195  : 	{
; 196  : 		////////////////////////////////////////
; 197  : 		case PACK_MODE_SERVER_SESSION:
; 198  : 		case PACK_MODE_CLIENT_SESSION:
; 199  : 		////////////////////////////////////////
; 200  : 		{
; 201  : 			unsigned int
; 202  : 				loop;
; 203  : 
; 204  : 			int
; 205  : 				index;
; 206  : 
; 207  : 			sound_effect
; 208  : 				*raw;
; 209  : 
; 210  : 			//
; 211  : 			// create entity
; 212  : 			//
; 213  : 
; 214  : 			index = unpack_entity_safe_index ();

  00048	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  0004d	89 45 f8	 mov	 DWORD PTR _index$2[ebp], eax

; 215  : 
; 216  : 			en = get_free_entity (index);

  00050	8b 45 f8	 mov	 eax, DWORD PTR _index$2[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?get_free_entity@@YGPAUENTITY@@H@Z ; get_free_entity
  00059	89 45 08	 mov	 DWORD PTR _en$[ebp], eax

; 217  : 
; 218  : 			set_local_entity_type (en, type);

  0005c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0005f	8b 4d 0c	 mov	 ecx, DWORD PTR _type$[ebp]
  00062	89 08		 mov	 DWORD PTR [eax], ecx

; 219  : 
; 220  : 			raw = (sound_effect *) malloc_heap_mem (sizeof (sound_effect));

  00064	6a 44		 push	 68			; 00000044H
  00066	e8 00 00 00 00	 call	 ?malloc_heap_memory@@YGPAXI@Z ; malloc_heap_memory
  0006b	89 45 f4	 mov	 DWORD PTR _raw$1[ebp], eax

; 221  : 
; 222  : 			set_local_entity_data (en, raw);

  0006e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00071	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00074	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 223  : 
; 224  : 			memset (raw, 0, sizeof (sound_effect));

  00077	6a 44		 push	 68			; 00000044H
  00079	6a 00		 push	 0
  0007b	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _memset
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH

; 225  : 
; 226  : 			//
; 227  : 			// unpack effect data (in exactly the same order as the data was packed)
; 228  : 			//
; 229  : 
; 230  : 			unpack_effect_data( en, &raw->eff, mode );

  00087	8b 45 10	 mov	 eax, DWORD PTR _mode$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0008e	51		 push	 ecx
  0008f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00092	52		 push	 edx
  00093	e8 00 00 00 00	 call	 ?unpack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; unpack_effect_data

; 231  : 
; 232  : 			//
; 233  : 			// unpack sound data
; 234  : 			//
; 235  : 
; 236  : 			raw->sound_effect_sequence_count = unpack_int_value (en, INT_TYPE_SOUND_EFFECT_SEQUENCE_COUNT);

  00098	68 c5 00 00 00	 push	 197			; 000000c5H
  0009d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a0	50		 push	 eax
  000a1	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  000a6	89 45 b0	 mov	 DWORD PTR tv89[ebp], eax
  000a9	8b 4d b0	 mov	 ecx, DWORD PTR tv89[ebp]
  000ac	83 e1 0f	 and	 ecx, 15			; 0000000fH
  000af	c1 e1 0b	 shl	 ecx, 11			; 0000000bH
  000b2	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  000b5	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  000b8	25 ff 87 ff ff	 and	 eax, -30721		; ffff87ffH
  000bd	0b c1		 or	 eax, ecx
  000bf	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  000c2	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 237  : 
; 238  : 			ASSERT (raw->sound_effect_sequence_count > 0);

  000c5	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  000c8	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000cb	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  000ce	83 e1 0f	 and	 ecx, 15			; 0000000fH
  000d1	77 18		 ja	 SHORT $LN10@unpack_loc
  000d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z@4JA
  000d8	83 c0 2f	 add	 eax, 47			; 0000002fH
  000db	50		 push	 eax
  000dc	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000e1	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@CJFMAPLO@raw?9?$DOsound_effect_sequence_coun@
  000e6	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN10@unpack_loc:

; 239  : 
; 240  : 			raw->effect_index = (sound_sample_indices *) malloc_fast_mem (sizeof (sound_sample_indices) * raw->sound_effect_sequence_count);

  000eb	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  000ee	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000f1	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  000f4	83 e1 0f	 and	 ecx, 15			; 0000000fH
  000f7	c1 e1 02	 shl	 ecx, 2
  000fa	51		 push	 ecx
  000fb	e8 00 00 00 00	 call	 ?malloc_fast_memory@@YGPAXI@Z ; malloc_fast_memory
  00100	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  00103	89 42 28	 mov	 DWORD PTR [edx+40], eax

; 241  : 
; 242  : 			for (loop = 0; loop < raw->sound_effect_sequence_count; loop ++)

  00106	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _loop$3[ebp], 0
  0010d	eb 09		 jmp	 SHORT $LN6@unpack_loc
$LN4@unpack_loc:
  0010f	8b 45 fc	 mov	 eax, DWORD PTR _loop$3[ebp]
  00112	83 c0 01	 add	 eax, 1
  00115	89 45 fc	 mov	 DWORD PTR _loop$3[ebp], eax
$LN6@unpack_loc:
  00118	8b 45 f4	 mov	 eax, DWORD PTR _raw$1[ebp]
  0011b	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0011e	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00121	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00124	39 4d fc	 cmp	 DWORD PTR _loop$3[ebp], ecx
  00127	73 1c		 jae	 SHORT $LN5@unpack_loc

; 243  : 			{
; 244  : 				raw->effect_index [loop] = unpack_int_value (en, INT_TYPE_SOUND_EFFECT_INDEX);

  00129	68 c1 00 00 00	 push	 193			; 000000c1H
  0012e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00137	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0013a	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0013d	8b 4d fc	 mov	 ecx, DWORD PTR _loop$3[ebp]
  00140	89 04 8a	 mov	 DWORD PTR [edx+ecx*4], eax

; 245  : 			}

  00143	eb ca		 jmp	 SHORT $LN4@unpack_loc
$LN5@unpack_loc:

; 246  : 
; 247  : 			raw->amplification = unpack_float_value (en, FLOAT_TYPE_AMPLIFICATION);

  00145	6a 09		 push	 9
  00147	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0014a	50		 push	 eax
  0014b	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00150	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00153	d9 59 2c	 fstp	 DWORD PTR [ecx+44]

; 248  : 
; 249  : 			raw->pitch = unpack_float_value (en, FLOAT_TYPE_SOUNDPITCH);

  00156	6a 0a		 push	 10			; 0000000aH
  00158	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0015b	50		 push	 eax
  0015c	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00161	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00164	d9 59 30	 fstp	 DWORD PTR [ecx+48]

; 250  : 
; 251  : 			raw->effect_lifetime = unpack_float_value (en, FLOAT_TYPE_EFFECT_LIFETIME);

  00167	6a 20		 push	 32			; 00000020H
  00169	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00172	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00175	d9 59 34	 fstp	 DWORD PTR [ecx+52]

; 252  : 
; 253  : 			raw->valid_effect_lifetime = unpack_float_value (en, FLOAT_TYPE_VALID_EFFECT_LIFETIME);

  00178	68 92 00 00 00	 push	 146			; 00000092H
  0017d	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00180	50		 push	 eax
  00181	e8 00 00 00 00	 call	 ?unpack_float_value@@YGMPAUENTITY@@W4FLOAT_TYPES@@@Z ; unpack_float_value
  00186	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00189	d9 59 38	 fstp	 DWORD PTR [ecx+56]

; 254  : 
; 255  : 			//sound_effect_data 
; 256  : 
; 257  : 			raw->sound_channel = unpack_int_value (en, INT_TYPE_SOUND_CHANNEL);

  0018c	68 c0 00 00 00	 push	 192			; 000000c0H
  00191	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00194	50		 push	 eax
  00195	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0019a	89 45 b0	 mov	 DWORD PTR tv173[ebp], eax
  0019d	8b 4d b0	 mov	 ecx, DWORD PTR tv173[ebp]
  001a0	83 e1 0f	 and	 ecx, 15			; 0000000fH
  001a3	c1 e1 02	 shl	 ecx, 2
  001a6	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  001a9	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  001ac	83 e0 c3	 and	 eax, -61		; ffffffc3H
  001af	0b c1		 or	 eax, ecx
  001b1	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  001b4	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 258  : 
; 259  : 			raw->sound_locality = unpack_int_value (en, INT_TYPE_SOUND_LOCALITY);

  001b7	68 c7 00 00 00	 push	 199			; 000000c7H
  001bc	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001c5	89 45 b0	 mov	 DWORD PTR tv183[ebp], eax
  001c8	8b 4d b0	 mov	 ecx, DWORD PTR tv183[ebp]
  001cb	83 e1 03	 and	 ecx, 3
  001ce	c1 e1 06	 shl	 ecx, 6
  001d1	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  001d4	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  001d7	25 3f ff ff ff	 and	 eax, -193		; ffffff3fH
  001dc	0b c1		 or	 eax, ecx
  001de	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  001e1	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 260  : 
; 261  : 			raw->valid_sound_effect = unpack_int_value (en, INT_TYPE_VALID_SOUND_EFFECT);

  001e4	68 f1 00 00 00	 push	 241			; 000000f1H
  001e9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  001ec	50		 push	 eax
  001ed	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  001f2	89 45 b0	 mov	 DWORD PTR tv193[ebp], eax
  001f5	8b 4d b0	 mov	 ecx, DWORD PTR tv193[ebp]
  001f8	83 e1 01	 and	 ecx, 1
  001fb	c1 e1 08	 shl	 ecx, 8
  001fe	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  00201	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00204	25 ff fe ff ff	 and	 eax, -257		; fffffeffH
  00209	0b c1		 or	 eax, ecx
  0020b	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0020e	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 262  : 
; 263  : 			raw->looping = unpack_int_value (en, INT_TYPE_SOUND_EFFECT_LOOPING);

  00211	68 c2 00 00 00	 push	 194			; 000000c2H
  00216	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0021f	89 45 b0	 mov	 DWORD PTR tv203[ebp], eax
  00222	8b 4d b0	 mov	 ecx, DWORD PTR tv203[ebp]
  00225	83 e1 01	 and	 ecx, 1
  00228	c1 e1 09	 shl	 ecx, 9
  0022b	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  0022e	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  00231	25 ff fd ff ff	 and	 eax, -513		; fffffdffH
  00236	0b c1		 or	 eax, ecx
  00238	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  0023b	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 264  : 
; 265  : 			raw->panning = unpack_int_value (en, INT_TYPE_SOUND_EFFECT_PANNING);

  0023e	68 c3 00 00 00	 push	 195			; 000000c3H
  00243	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0024c	89 45 b0	 mov	 DWORD PTR tv213[ebp], eax
  0024f	8b 4d b0	 mov	 ecx, DWORD PTR tv213[ebp]
  00252	83 e1 01	 and	 ecx, 1
  00255	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00258	8b 55 f4	 mov	 edx, DWORD PTR _raw$1[ebp]
  0025b	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0025e	25 ff fb ff ff	 and	 eax, -1025		; fffffbffH
  00263	0b c1		 or	 eax, ecx
  00265	8b 4d f4	 mov	 ecx, DWORD PTR _raw$1[ebp]
  00268	89 41 40	 mov	 DWORD PTR [ecx+64], eax

; 266  : 
; 267  : 			//
; 268  : 			// link into system
; 269  : 			//
; 270  : 
; 271  : 			// sound effect needs a parent
; 272  : 			//ASSERT (raw->eff.special_effect_link.parent);
; 273  : 
; 274  : 			if (unpack_int_value (en, INT_TYPE_VALID))

  0026b	68 ef 00 00 00	 push	 239			; 000000efH
  00270	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00273	50		 push	 eax
  00274	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00279	85 c0		 test	 eax, eax
  0027b	74 13		 je	 SHORT $LN11@unpack_loc

; 275  : 			{
; 276  : 				insert_local_entity_into_parents_child_list (en, LIST_TYPE_UPDATE, get_update_entity (), NULL);

  0027d	6a 00		 push	 0
  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?update_entity@@3PAUENTITY@@A ; update_entity
  00284	50		 push	 eax
  00285	6a 29		 push	 41			; 00000029H
  00287	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0028a	51		 push	 ecx
  0028b	e8 00 00 00 00	 call	 ?insert_local_entity_into_parents_child_list@@YGXPAUENTITY@@W4LIST_TYPES@@00@Z ; insert_local_entity_into_parents_child_list
$LN11@unpack_loc:
$LN2@unpack_loc:

; 277  : 			}
; 278  : 
; 279  : 			#if DEBUG_MODULE
; 280  : 
; 281  : 			debug_log ("SE_PACK: Unpacked %d - Sub-type %d", get_local_entity_safe_index (en), raw->eff.sub_type);
; 282  : 
; 283  : 			#endif
; 284  : 
; 285  : 			break;
; 286  : 		}
; 287  : 		////////////////////////////////////////
; 288  : 		case PACK_MODE_BROWSE_SESSION:
; 289  : 		////////////////////////////////////////
; 290  : 		{
; 291  : 			break;
; 292  : 		}
; 293  : 		////////////////////////////////////////
; 294  : 		case PACK_MODE_UPDATE_ENTITY:
; 295  : 		////////////////////////////////////////
; 296  : 		{
; 297  : 			//
; 298  : 			// always use access functions to set the data
; 299  : 			//
; 300  : 
; 301  : 			break;
; 302  : 		}
; 303  : 	}
; 304  : }

  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	8b e5		 mov	 esp, ebp
  00295	5d		 pop	 ebp
  00296	c2 0c 00	 ret	 12			; 0000000cH
?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ENDP ; unpack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
;	COMDAT ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
tv212 = -80						; size = 4
tv205 = -76						; size = 4
tv130 = -76						; size = 4
tv90 = -76						; size = 4
tv70 = -76						; size = 4
_loop$1 = -8						; size = 4
_raw$2 = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC	; pack_local_data, COMDAT

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 81   : 	ASSERT ((mode >= 0) && (mode < NUM_PACK_MODES));

  00009	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0000d	7c 06		 jl	 SHORT $LN8@pack_local
  0000f	83 7d 0c 04	 cmp	 DWORD PTR _mode$[ebp], 4
  00013	7c 18		 jl	 SHORT $LN7@pack_local
$LN8@pack_local:
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0001a	83 c0 01	 add	 eax, 1
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@MMFDPOBJ@?$CImode?5?$DO?$DN?50?$CJ?5?$CG?$CG?5?$CImode?5?$DM?5NUM_PACK@
  00028	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@pack_local:

; 82   : 
; 83   : 	switch (mode)

  0002d	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00030	89 45 b4	 mov	 DWORD PTR tv70[ebp], eax
  00033	83 7d b4 00	 cmp	 DWORD PTR tv70[ebp], 0
  00037	0f 8c a1 02 00
	00		 jl	 $LN2@pack_local
  0003d	83 7d b4 01	 cmp	 DWORD PTR tv70[ebp], 1
  00041	7e 05		 jle	 SHORT $LN9@pack_local
  00043	e9 96 02 00 00	 jmp	 $LN2@pack_local
$LN9@pack_local:

; 84   : 	{
; 85   : 		////////////////////////////////////////
; 86   : 		case PACK_MODE_SERVER_SESSION:
; 87   : 		case PACK_MODE_CLIENT_SESSION:
; 88   : 		////////////////////////////////////////
; 89   : 		{
; 90   : 			sound_effect
; 91   : 				*raw;
; 92   : 
; 93   : 			unsigned int
; 94   : 				loop;
; 95   : 
; 96   : 			raw = (sound_effect *) get_local_entity_data (en);

  00048	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	89 4d fc	 mov	 DWORD PTR _raw$2[ebp], ecx

; 97   : 
; 98   : 			if (effect_database [raw->eff.sub_type].constructed_locally)

  00051	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00054	8b 08		 mov	 ecx, DWORD PTR [eax]
  00056	83 3c 8d 00 00
	00 00 00	 cmp	 DWORD PTR ?effect_database@@3QBUEFFECT_DATA@@B[ecx*4], 0
  0005e	74 05		 je	 SHORT $LN10@pack_local

; 99   : 			{
; 100  : 				return;

  00060	e9 79 02 00 00	 jmp	 $LN1@pack_local
$LN10@pack_local:

; 101  : 			}
; 102  : 
; 103  : 			if (mode == PACK_MODE_SERVER_SESSION)

  00065	83 7d 0c 00	 cmp	 DWORD PTR _mode$[ebp], 0
  00069	75 3b		 jne	 SHORT $LN12@pack_local

; 104  : 			{
; 105  : 	
; 106  : 				if (get_local_entity_type (raw->eff.special_effect_link.parent) == ENTITY_TYPE_SESSION)

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0006e	83 78 10 00	 cmp	 DWORD PTR [eax+16], 0
  00072	74 0d		 je	 SHORT $LN18@pack_local
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _raw$2[ebp]
  00077	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0007a	8b 02		 mov	 eax, DWORD PTR [edx]
  0007c	89 45 b4	 mov	 DWORD PTR tv90[ebp], eax
  0007f	eb 1a		 jmp	 SHORT $LN19@pack_local
$LN18@pack_local:
  00081	6a 6a		 push	 106			; 0000006aH
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00088	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0008e	51		 push	 ecx
  0008f	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00094	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv90[ebp], 0
$LN19@pack_local:
  0009b	83 7d b4 1b	 cmp	 DWORD PTR tv90[ebp], 27	; 0000001bH
  0009f	75 05		 jne	 SHORT $LN12@pack_local

; 107  : 				{
; 108  : 	
; 109  : 					return;

  000a1	e9 38 02 00 00	 jmp	 $LN1@pack_local
$LN12@pack_local:

; 110  : 				}
; 111  : 			}
; 112  : 
; 113  : 			pack_entity_type (get_local_entity_type (en));

  000a6	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000aa	74 0a		 je	 SHORT $LN20@pack_local
  000ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000af	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b1	89 4d b4	 mov	 DWORD PTR tv130[ebp], ecx
  000b4	eb 21		 jmp	 SHORT $LN21@pack_local
$LN20@pack_local:
  000b6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  000bc	83 c2 21	 add	 edx, 33			; 00000021H
  000bf	52		 push	 edx
  000c0	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000d0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv130[ebp], 0
$LN21@pack_local:
  000d7	8b 4d b4	 mov	 ecx, DWORD PTR tv130[ebp]
  000da	51		 push	 ecx
  000db	e8 00 00 00 00	 call	 ?pack_entity_type@@YGXW4ENTITY_TYPES@@@Z ; pack_entity_type

; 114  : 
; 115  : 			pack_entity_safe_ptr (en);

  000e0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr

; 116  : 
; 117  : 			//
; 118  : 			// pack effect data
; 119  : 			//
; 120  : 
; 121  : 			pack_effect_data (en, &raw->eff, mode);

  000e9	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  000ec	50		 push	 eax
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _raw$2[ebp]
  000f0	51		 push	 ecx
  000f1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000f4	52		 push	 edx
  000f5	e8 00 00 00 00	 call	 ?pack_effect_data@@YGXPAUENTITY@@PAUEFFECT@@W4PACK_MODES@@@Z ; pack_effect_data

; 122  : 
; 123  : 			//
; 124  : 			// pack sound effect data
; 125  : 			//
; 126  : 
; 127  : 			pack_int_value (en, INT_TYPE_SOUND_EFFECT_SEQUENCE_COUNT, raw->sound_effect_sequence_count);

  000fa	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  000fd	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00100	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00103	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00106	51		 push	 ecx
  00107	68 c5 00 00 00	 push	 197			; 000000c5H
  0010c	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0010f	52		 push	 edx
  00110	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 128  : 
; 129  : 			for (loop = 0; loop < raw->sound_effect_sequence_count; loop ++)

  00115	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$1[ebp], 0
  0011c	eb 09		 jmp	 SHORT $LN6@pack_local
$LN4@pack_local:
  0011e	8b 45 f8	 mov	 eax, DWORD PTR _loop$1[ebp]
  00121	83 c0 01	 add	 eax, 1
  00124	89 45 f8	 mov	 DWORD PTR _loop$1[ebp], eax
$LN6@pack_local:
  00127	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0012a	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0012d	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00130	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00133	39 4d f8	 cmp	 DWORD PTR _loop$1[ebp], ecx
  00136	73 1d		 jae	 SHORT $LN5@pack_local

; 130  : 			{
; 131  : 				pack_int_value (en, INT_TYPE_SOUND_EFFECT_INDEX, raw->effect_index [loop]);

  00138	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0013b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0013e	8b 55 f8	 mov	 edx, DWORD PTR _loop$1[ebp]
  00141	8b 04 91	 mov	 eax, DWORD PTR [ecx+edx*4]
  00144	50		 push	 eax
  00145	68 c1 00 00 00	 push	 193			; 000000c1H
  0014a	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0014d	51		 push	 ecx
  0014e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 132  : 			}

  00153	eb c9		 jmp	 SHORT $LN4@pack_local
$LN5@pack_local:

; 133  : 
; 134  : 			pack_float_value (en, FLOAT_TYPE_AMPLIFICATION, raw->amplification);

  00155	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00158	51		 push	 ecx
  00159	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0015e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00163	6a 09		 push	 9
  00165	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00168	51		 push	 ecx
  00169	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 135  : 
; 136  : 			pack_float_value (en, FLOAT_TYPE_SOUNDPITCH, raw->pitch);

  0016e	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00171	51		 push	 ecx
  00172	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  00177	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0017c	6a 0a		 push	 10			; 0000000aH
  0017e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00181	51		 push	 ecx
  00182	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 137  : 
; 138  : 			pack_float_value (en, FLOAT_TYPE_EFFECT_LIFETIME, raw->effect_lifetime);

  00187	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0018a	51		 push	 ecx
  0018b	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	6a 20		 push	 32			; 00000020H
  00197	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0019a	51		 push	 ecx
  0019b	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 139  : 
; 140  : 			pack_float_value (en, FLOAT_TYPE_VALID_EFFECT_LIFETIME, raw->valid_effect_lifetime);

  001a0	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001a3	51		 push	 ecx
  001a4	f3 0f 10 40 38	 movss	 xmm0, DWORD PTR [eax+56]
  001a9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ae	68 92 00 00 00	 push	 146			; 00000092H
  001b3	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001b6	51		 push	 ecx
  001b7	e8 00 00 00 00	 call	 ?pack_float_value@@YGXPAUENTITY@@W4FLOAT_TYPES@@M@Z ; pack_float_value

; 141  : 
; 142  : 			// sound_effect_data
; 143  : 
; 144  : 			pack_int_value (en, INT_TYPE_SOUND_CHANNEL, raw->sound_channel);

  001bc	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001bf	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001c2	c1 e9 02	 shr	 ecx, 2
  001c5	83 e1 0f	 and	 ecx, 15			; 0000000fH
  001c8	51		 push	 ecx
  001c9	68 c0 00 00 00	 push	 192			; 000000c0H
  001ce	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001d1	52		 push	 edx
  001d2	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 145  : 
; 146  : 			pack_int_value (en, INT_TYPE_SOUND_LOCALITY, raw->sound_locality);

  001d7	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001da	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001dd	c1 e9 06	 shr	 ecx, 6
  001e0	83 e1 03	 and	 ecx, 3
  001e3	51		 push	 ecx
  001e4	68 c7 00 00 00	 push	 199			; 000000c7H
  001e9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  001ec	52		 push	 edx
  001ed	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 147  : 
; 148  : 			pack_int_value (en, INT_TYPE_VALID_SOUND_EFFECT, raw->valid_sound_effect);

  001f2	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  001f5	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  001f8	c1 e9 08	 shr	 ecx, 8
  001fb	83 e1 01	 and	 ecx, 1
  001fe	51		 push	 ecx
  001ff	68 f1 00 00 00	 push	 241			; 000000f1H
  00204	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00207	52		 push	 edx
  00208	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 149  : 
; 150  : 			pack_int_value (en, INT_TYPE_SOUND_EFFECT_LOOPING, raw->looping);

  0020d	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  00210	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00213	c1 e9 09	 shr	 ecx, 9
  00216	83 e1 01	 and	 ecx, 1
  00219	51		 push	 ecx
  0021a	68 c2 00 00 00	 push	 194			; 000000c2H
  0021f	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00222	52		 push	 edx
  00223	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 151  : 
; 152  : 			pack_int_value (en, INT_TYPE_SOUND_EFFECT_PANNING, raw->panning);

  00228	8b 45 fc	 mov	 eax, DWORD PTR _raw$2[ebp]
  0022b	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0022e	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00231	83 e1 01	 and	 ecx, 1
  00234	51		 push	 ecx
  00235	68 c3 00 00 00	 push	 195			; 000000c3H
  0023a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0023d	52		 push	 edx
  0023e	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 153  : 
; 154  : 			if (get_local_entity_parent (en, LIST_TYPE_UPDATE))

  00243	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00247	74 0a		 je	 SHORT $LN22@pack_local
  00249	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0024c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024e	89 4d b4	 mov	 DWORD PTR tv205[ebp], ecx
  00251	eb 1d		 jmp	 SHORT $LN23@pack_local
$LN22@pack_local:
  00253	68 9a 00 00 00	 push	 154			; 0000009aH
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0025d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00263	52		 push	 edx
  00264	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00269	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv205[ebp], 0
$LN23@pack_local:
  00270	b8 01 00 00 00	 mov	 eax, 1
  00275	85 c0		 test	 eax, eax
  00277	74 09		 je	 SHORT $LN24@pack_local
  00279	c7 45 b0 29 00
	00 00		 mov	 DWORD PTR tv212[ebp], 41 ; 00000029H
  00280	eb 1d		 jmp	 SHORT $LN25@pack_local
$LN24@pack_local:
  00282	68 9a 00 00 00	 push	 154			; 0000009aH
  00287	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0028c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_list_type_message@@3PBDB ; overload_invalid_list_type_message
  00292	51		 push	 ecx
  00293	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00298	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv212[ebp], 0
$LN25@pack_local:
  0029f	6a 29		 push	 41			; 00000029H
  002a1	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  002a4	52		 push	 edx
  002a5	69 45 b4 b4 00
	00 00		 imul	 eax, DWORD PTR tv205[ebp], 180
  002ac	8b 4d b0	 mov	 ecx, DWORD PTR tv212[ebp]
  002af	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_parent@@3PAY0CN@P6GPAUENTITY@@PAU1@W4LIST_TYPES@@@ZA[eax+ecx*4]
  002b6	ff d2		 call	 edx
  002b8	85 c0		 test	 eax, eax
  002ba	74 12		 je	 SHORT $LN13@pack_local

; 155  : 			{
; 156  : 				pack_int_value (en, INT_TYPE_VALID, TRUE);

  002bc	6a 01		 push	 1
  002be	68 ef 00 00 00	 push	 239			; 000000efH
  002c3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002c6	50		 push	 eax
  002c7	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 157  : 			}
; 158  : 			else

  002cc	eb 10		 jmp	 SHORT $LN14@pack_local
$LN13@pack_local:

; 159  : 			{
; 160  : 				pack_int_value (en, INT_TYPE_VALID, FALSE);

  002ce	6a 00		 push	 0
  002d0	68 ef 00 00 00	 push	 239			; 000000efH
  002d5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002d8	50		 push	 eax
  002d9	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value
$LN14@pack_local:
$LN2@pack_local:
$LN1@pack_local:

; 161  : 			}
; 162  : 
; 163  : 			#if DEBUG_MODULE
; 164  : 
; 165  : 			debug_log ("SE_PACK: Packed %d - Sub-type %d", get_local_entity_safe_index (en), raw->eff.sub_type);
; 166  : 
; 167  : 			#endif
; 168  : 
; 169  : 			break;
; 170  : 		}
; 171  : 		////////////////////////////////////////
; 172  : 		case PACK_MODE_BROWSE_SESSION:
; 173  : 		////////////////////////////////////////
; 174  : 		{
; 175  : 			break;
; 176  : 		}
; 177  : 		////////////////////////////////////////
; 178  : 		case PACK_MODE_UPDATE_ENTITY:
; 179  : 		////////////////////////////////////////
; 180  : 		{
; 181  : 			break;
; 182  : 		}
; 183  : 	}
; 184  : }

  002de	5f		 pop	 edi
  002df	5e		 pop	 esi
  002e0	5b		 pop	 ebx
  002e1	8b e5		 mov	 esp, ebp
  002e3	5d		 pop	 ebp
  002e4	c2 08 00	 ret	 8
?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP	; pack_local_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
;	COMDAT ?unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_sub_type$ = -20					; size = 4
_valid$ = -16						; size = 4
_sample_index$ = -12					; size = 4
_entity_index$ = -8					; size = 4
_side$ = -4						; size = 4
_parent$ = 8						; size = 4
_mode$ = 12						; size = 4
?unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC ; unpack_local_only_sound_effect_data, COMDAT

; 367  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 368  : 	int
; 369  : 		side,
; 370  : 		entity_index,
; 371  : 		sample_index,
; 372  : 		valid;
; 373  : 
; 374  : 	entity_sub_types
; 375  : 		sub_type;
; 376  : 
; 377  : 	ASSERT (parent);

  00009	83 7d 08 00	 cmp	 DWORD PTR _parent$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@unpack_loc
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_06MLKDMCBD@parent@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@unpack_loc:

; 378  : 
; 379  : 	//
; 380  : 	// unpack data
; 381  : 	//
; 382  : 
; 383  : 	if (mode == PACK_MODE_CLIENT_SESSION)

  00027	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  0002b	75 0a		 jne	 SHORT $LN3@unpack_loc

; 384  : 	{
; 385  : 		entity_index = unpack_entity_safe_index ();

  0002d	e8 00 00 00 00	 call	 ?unpack_entity_safe_index@@YGHXZ ; unpack_entity_safe_index
  00032	89 45 f8	 mov	 DWORD PTR _entity_index$[ebp], eax

; 386  : 	}
; 387  : 	else

  00035	eb 07		 jmp	 SHORT $LN4@unpack_loc
$LN3@unpack_loc:

; 388  : 	{
; 389  : 		entity_index = ENTITY_INDEX_DONT_CARE;

  00037	c7 45 f8 ff ff
	ff ff		 mov	 DWORD PTR _entity_index$[ebp], -1
$LN4@unpack_loc:

; 390  : 	}
; 391  : 
; 392  : 	side = unpack_int_value (NULL, INT_TYPE_SIDE);

  0003e	68 bb 00 00 00	 push	 187			; 000000bbH
  00043	6a 00		 push	 0
  00045	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  0004a	89 45 fc	 mov	 DWORD PTR _side$[ebp], eax

; 393  : 
; 394  : 	sub_type = unpack_int_value (NULL, INT_TYPE_ENTITY_SUB_TYPE);

  0004d	6a 34		 push	 52			; 00000034H
  0004f	6a 00		 push	 0
  00051	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00056	89 45 ec	 mov	 DWORD PTR _sub_type$[ebp], eax

; 395  : 
; 396  : 	valid = unpack_int_value (NULL, INT_TYPE_VALID_SOUND_EFFECT);

  00059	68 f1 00 00 00	 push	 241			; 000000f1H
  0005e	6a 00		 push	 0
  00060	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00065	89 45 f0	 mov	 DWORD PTR _valid$[ebp], eax

; 397  : 
; 398  : 	sample_index = unpack_int_value (NULL, INT_TYPE_SOUND_EFFECT_INDEX);

  00068	68 c1 00 00 00	 push	 193			; 000000c1H
  0006d	6a 00		 push	 0
  0006f	e8 00 00 00 00	 call	 ?unpack_int_value@@YGHPAUENTITY@@W4INT_TYPES@@@Z ; unpack_int_value
  00074	89 45 f4	 mov	 DWORD PTR _sample_index$[ebp], eax

; 399  : 
; 400  : 	register_attach_sound_effect_to_object (parent, entity_index, (entity_sides) side, sub_type, valid, sample_index);

  00077	8b 45 f4	 mov	 eax, DWORD PTR _sample_index$[ebp]
  0007a	50		 push	 eax
  0007b	8b 4d f0	 mov	 ecx, DWORD PTR _valid$[ebp]
  0007e	51		 push	 ecx
  0007f	8b 55 ec	 mov	 edx, DWORD PTR _sub_type$[ebp]
  00082	52		 push	 edx
  00083	8b 45 fc	 mov	 eax, DWORD PTR _side$[ebp]
  00086	50		 push	 eax
  00087	8b 4d f8	 mov	 ecx, DWORD PTR _entity_index$[ebp]
  0008a	51		 push	 ecx
  0008b	8b 55 08	 mov	 edx, DWORD PTR _parent$[ebp]
  0008e	52		 push	 edx
  0008f	e8 00 00 00 00	 call	 ?register_attach_sound_effect_to_object@@YGXPAUENTITY@@HW4ENTITY_SIDES@@HHH@Z ; register_attach_sound_effect_to_object

; 401  : 
; 402  : 	#if DEBUG_MODULE
; 403  : 
; 404  : 	debug_log ("SE_PACK: Unpacked Local-Only %d - Sub-type %d", entity_index, sub_type);
; 405  : 
; 406  : 	#endif
; 407  : }

  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c2 08 00	 ret	 8
?unpack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP ; unpack_local_only_sound_effect_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
;	COMDAT ?pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z
_TEXT	SEGMENT
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_mode$ = 12						; size = 4
?pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z PROC ; pack_local_only_sound_effect_data, COMDAT

; 322  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 323  : 	sound_effect
; 324  : 		*raw;
; 325  : 
; 326  : 	ASSERT (en);

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@pack_local
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00014	83 c0 04	 add	 eax, 4
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02LFNMGJAP@en@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@pack_local:

; 327  : 
; 328  : 	raw = (sound_effect *) get_local_entity_data (en);

  00027	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0002a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0002d	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 329  : 
; 330  : 	//
; 331  : 	// check properties
; 332  : 	//
; 333  : 
; 334  : 	ASSERT (raw->looping); 

  00030	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00033	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00036	c1 e9 09	 shr	 ecx, 9
  00039	83 e1 01	 and	 ecx, 1
  0003c	75 18		 jne	 SHORT $LN3@pack_local
  0003e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  00043	83 c0 0c	 add	 eax, 12			; 0000000cH
  00046	50		 push	 eax
  00047	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MGIMPDPO@raw?9?$DOlooping@
  00051	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@pack_local:

; 335  : 
; 336  : 	ASSERT (raw->sound_effect_sequence_count == 1);

  00056	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00059	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  0005c	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  0005f	83 e1 0f	 and	 ecx, 15			; 0000000fH
  00062	83 f9 01	 cmp	 ecx, 1
  00065	74 18		 je	 SHORT $LN4@pack_local
  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z@4JA
  0006c	83 c0 0e	 add	 eax, 14			; 0000000eH
  0006f	50		 push	 eax
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@COGFALGG@c?3?2users?2nhv90?2projects?2eech?2ap@
  00075	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@BDFIJDNE@raw?9?$DOsound_effect_sequence_coun@
  0007a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@pack_local:

; 337  : 
; 338  : 	//
; 339  : 	// pack data
; 340  : 	//
; 341  : 
; 342  : 	if (mode == PACK_MODE_CLIENT_SESSION)

  0007f	83 7d 0c 01	 cmp	 DWORD PTR _mode$[ebp], 1
  00083	75 09		 jne	 SHORT $LN5@pack_local

; 343  : 	{
; 344  : 		pack_entity_safe_ptr (en);

  00085	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00088	50		 push	 eax
  00089	e8 00 00 00 00	 call	 ?pack_entity_safe_ptr@@YGXPAUENTITY@@@Z ; pack_entity_safe_ptr
$LN5@pack_local:

; 345  : 	}
; 346  : 
; 347  : 	pack_int_value (en, INT_TYPE_SIDE, raw->side);

  0008e	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00091	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00094	83 e1 03	 and	 ecx, 3
  00097	51		 push	 ecx
  00098	68 bb 00 00 00	 push	 187			; 000000bbH
  0009d	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000a0	52		 push	 edx
  000a1	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 348  : 
; 349  : 	pack_int_value (en, INT_TYPE_ENTITY_SUB_TYPE, raw->eff.sub_type);

  000a6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	51		 push	 ecx
  000ac	6a 34		 push	 52			; 00000034H
  000ae	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000b1	52		 push	 edx
  000b2	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 350  : 
; 351  : 	pack_int_value (en, INT_TYPE_VALID_SOUND_EFFECT, raw->valid_sound_effect);

  000b7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ba	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  000bd	c1 e9 08	 shr	 ecx, 8
  000c0	83 e1 01	 and	 ecx, 1
  000c3	51		 push	 ecx
  000c4	68 f1 00 00 00	 push	 241			; 000000f1H
  000c9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000cc	52		 push	 edx
  000cd	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 352  : 
; 353  : 	pack_int_value (en, INT_TYPE_SOUND_EFFECT_INDEX, raw->effect_index [0]);

  000d2	b8 04 00 00 00	 mov	 eax, 4
  000d7	6b c8 00	 imul	 ecx, eax, 0
  000da	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  000dd	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  000e0	8b 0c 08	 mov	 ecx, DWORD PTR [eax+ecx]
  000e3	51		 push	 ecx
  000e4	68 c1 00 00 00	 push	 193			; 000000c1H
  000e9	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  000ec	52		 push	 edx
  000ed	e8 00 00 00 00	 call	 ?pack_int_value@@YGXPAUENTITY@@W4INT_TYPES@@H@Z ; pack_int_value

; 354  : 
; 355  : 	#if DEBUG_MODULE
; 356  : 
; 357  : 	debug_log ("SE_PACK: Packed Local-Only %d - Sub-type %d", get_local_entity_safe_index (en), raw->eff.sub_type);
; 358  : 
; 359  : 	#endif
; 360  : }

  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	8b e5		 mov	 esp, ebp
  000f7	5d		 pop	 ebp
  000f8	c2 08 00	 ret	 8
?pack_local_only_sound_effect_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ENDP ; pack_local_only_sound_effect_data
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\special\effect\soundeff\se_pack.c
;	COMDAT ?overload_sound_effect_pack_functions@@YGXXZ
_TEXT	SEGMENT
?overload_sound_effect_pack_functions@@YGXXZ PROC	; overload_sound_effect_pack_functions, COMDAT

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 312  : 	fn_pack_local_entity_data[ENTITY_TYPE_SOUND_EFFECT]		= pack_local_data;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	c1 e0 05	 shl	 eax, 5
  00011	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_pack_local_entity_data@@3PAP6GXPAUENTITY@@W4PACK_MODES@@@ZA[eax], OFFSET ?pack_local_data@@YGXPAUENTITY@@W4PACK_MODES@@@Z ; pack_local_data

; 313  : 
; 314  : 	fn_unpack_local_entity_data[ENTITY_TYPE_SOUND_EFFECT]		= unpack_local_data;

  0001b	b8 04 00 00 00	 mov	 eax, 4
  00020	c1 e0 05	 shl	 eax, 5
  00023	c7 80 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_unpack_local_entity_data@@3PAP6GXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@ZA[eax], OFFSET ?unpack_local_data@@YGXPAUENTITY@@W4ENTITY_TYPES@@W4PACK_MODES@@@Z ; unpack_local_data

; 315  : }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	8b e5		 mov	 esp, ebp
  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?overload_sound_effect_pack_functions@@YGXXZ ENDP	; overload_sound_effect_pack_functions
_TEXT	ENDS
END
