; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_routed_vehicle_update_functions@@YGXXZ ; overload_routed_vehicle_update_functions
PUBLIC	??$max@M@std@@YGABMABM0@Z			; std::max<float>
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA ; `update_server'::`1'::__LINE__Var
PUBLIC	??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA ; `update_client'::`1'::__LINE__Var
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ ; `string'
PUBLIC	??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
EXTRN	__imp___invalid_parameter:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z:PROC ; get_3d_terrain_point_data
EXTRN	?update_entity_weapon_systems@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_systems
EXTRN	?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z:PROC ; update_entity_weapon_system_weapon_and_target_vectors
EXTRN	?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_loading_doors
EXTRN	?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_system_ready
EXTRN	?update_vehicle_radar@@YGXPAUENTITY@@@Z:PROC	; update_vehicle_radar
EXTRN	?update_vehicle_target_scan@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_target_scan
EXTRN	?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_weapon_fire
EXTRN	?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z:PROC ; update_vehicle_decoy_release
EXTRN	?routed_vehicle_movement@@YGXPAUENTITY@@@Z:PROC	; routed_vehicle_movement
EXTRN	?routed_vehicle_death_movement@@YGXPAUENTITY@@@Z:PROC ; routed_vehicle_death_movement
EXTRN	?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z:PROC ; update_local_entity_view_interest_level
EXTRN	?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z:PROC ; write_tacview_unit_update
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_tacview_logging@@3HA:DWORD	; command_line_tacview_logging
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?system_comms_model@@3W4COMMS_MODEL_TYPES@@A:DWORD ; system_comms_model
EXTRN	?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_destroy_client_server_entity_family
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA:BYTE ; fn_update_client_server_entity
EXTRN	?tacview_log_file@@3PAU_iobuf@@A:DWORD		; tacview_log_file
EXTRN	__fltused:DWORD
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
CONST	SEGMENT
??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@ DB 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'm', 00H, 'a', 00H, 'x'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'p', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'f', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'm', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'v', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 's', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '7', 00H, '\', 00H, 'c'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'v', 00H, 'c', 00H, '\', 00H, 't'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'm', 00H
	DB	's', 00H, 'v', 00H, 'c', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '1', 00H, '6', 00H, '.', 00H, '2', 00H, '7', 00H, '0', 00H
	DB	'2', 00H, '3', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'l', 00H
	DB	'g', 00H, 'o', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'h', 00H, 'm'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
CONST	SEGMENT
??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@ DB 'c:\pro'
	DB	'gram files (x86)\microsoft visual studio\2017\community\vc\to'
	DB	'ols\msvc\14.16.27023\include\algorithm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA DD 0e1H ; `update_client'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed'
	DB	'\rv_updt.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA DD 052H ; `update_server'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_updt.c
;	COMDAT ?update_client@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv188 = -92						; size = 4
tv163 = -92						; size = 4
tv143 = -92						; size = 4
tv181 = -88						; size = 4
tv155 = -88						; size = 4
tv135 = -88						; size = 4
$T1 = -84						; size = 4
_rotated$2 = -16					; size = 4
_moved$3 = -12						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_client@@YGXPAUENTITY@@@Z PROC			; update_client, COMDAT

; 225  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 226  : 	routed_vehicle
; 227  : 		*raw;
; 228  : 
; 229  : 	int
; 230  : 		loop;
; 231  : 
; 232  : 	raw = (routed_vehicle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 233  : 
; 234  : 	raw->vh.sleep -= get_delta_time ();

  00012	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00015	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  0001d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00028	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 235  : 
; 236  : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00030	0f 57 c0	 xorps	 xmm0, xmm0
  00033	f3 0f 11 45 ac	 movss	 DWORD PTR $T1[ebp], xmm0
  00038	8d 45 ac	 lea	 eax, DWORD PTR $T1[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0003f	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  00045	51		 push	 ecx
  00046	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  0004b	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  0004e	8b 00		 mov	 eax, DWORD PTR [eax]
  00050	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 237  : 
; 238  : 	update_local_entity_view_interest_level (en);

  00056	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00059	50		 push	 eax
  0005a	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 239  : 
; 240  : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	0f 84 9f 01 00
	00		 je	 $LN8@update_cli

; 241  : 	{
; 242  : 
; 243  : 		////////////////////////////////////////
; 244  : 
; 245  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00075	eb 09		 jmp	 SHORT $LN4@update_cli
$LN2@update_cli:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_cli:
  00080	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00084	7d 0b		 jge	 SHORT $LN3@update_cli

; 246  : 		{
; 247  : 
; 248  : 			routed_vehicle_movement (en);

  00086	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?routed_vehicle_movement@@YGXPAUENTITY@@@Z ; routed_vehicle_movement

; 249  : 		}

  0008f	eb e6		 jmp	 SHORT $LN2@update_cli
$LN3@update_cli:

; 250  : 
; 251  : 		////////////////////////////////////////
; 252  : 
; 253  : 		update_vehicle_loading_doors (en);

  00091	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 254  : 
; 255  : 		update_vehicle_radar (en);

  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 256  : 
; 257  : 		////////////////////////////////////////
; 258  : 		//
; 259  : 		// ORDER IS CRITICAL
; 260  : 		//
; 261  : 
; 262  : 		update_vehicle_weapon_system_ready (en);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 263  : 
; 264  : 		update_entity_weapon_systems (en);

  000ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 265  : 
; 266  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000b5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 267  : 
; 268  : 		//
; 269  : 		////////////////////////////////////////
; 270  : 		
; 271  : 		if (tacview_is_logging() && raw->vh.mob.alive)

  000be	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000c5	0f 84 3d 01 00
	00		 je	 $LN11@update_cli
  000cb	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ce	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000d1	83 e1 01	 and	 ecx, 1
  000d4	0f 84 2e 01 00
	00		 je	 $LN11@update_cli

; 272  : 		{
; 273  : 			int
; 274  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  000da	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000de	74 0a		 je	 SHORT $LN16@update_cli
  000e0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e5	89 4d a8	 mov	 DWORD PTR tv135[ebp], ecx
  000e8	eb 21		 jmp	 SHORT $LN17@update_cli
$LN16@update_cli:
  000ea	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  000f0	83 c2 31	 add	 edx, 49			; 00000031H
  000f3	52		 push	 edx
  000f4	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000fe	50		 push	 eax
  000ff	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00104	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv135[ebp], 0
$LN17@update_cli:
  0010b	b9 01 00 00 00	 mov	 ecx, 1
  00110	85 c9		 test	 ecx, ecx
  00112	74 09		 je	 SHORT $LN18@update_cli
  00114	c7 45 a4 8e 00
	00 00		 mov	 DWORD PTR tv143[ebp], 142 ; 0000008eH
  0011b	eb 21		 jmp	 SHORT $LN19@update_cli
$LN18@update_cli:
  0011d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00123	83 c2 31	 add	 edx, 49			; 00000031H
  00126	52		 push	 edx
  00127	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00131	50		 push	 eax
  00132	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00137	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv143[ebp], 0
$LN19@update_cli:
  0013e	68 8e 00 00 00	 push	 142			; 0000008eH
  00143	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00146	51		 push	 ecx
  00147	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv135[ebp], 1116
  0014e	8b 45 a4	 mov	 eax, DWORD PTR tv143[ebp]
  00151	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00158	ff d1		 call	 ecx
  0015a	89 45 f4	 mov	 DWORD PTR _moved$3[ebp], eax

; 275  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  0015d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00161	74 0a		 je	 SHORT $LN20@update_cli
  00163	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00166	8b 08		 mov	 ecx, DWORD PTR [eax]
  00168	89 4d a8	 mov	 DWORD PTR tv155[ebp], ecx
  0016b	eb 21		 jmp	 SHORT $LN21@update_cli
$LN20@update_cli:
  0016d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  00173	83 c2 32	 add	 edx, 50			; 00000032H
  00176	52		 push	 edx
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0017c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00187	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv155[ebp], 0
$LN21@update_cli:
  0018e	b9 01 00 00 00	 mov	 ecx, 1
  00193	85 c9		 test	 ecx, ecx
  00195	74 09		 je	 SHORT $LN22@update_cli
  00197	c7 45 a4 b1 00
	00 00		 mov	 DWORD PTR tv163[ebp], 177 ; 000000b1H
  0019e	eb 21		 jmp	 SHORT $LN23@update_cli
$LN22@update_cli:
  001a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_client@@YGXPAUENTITY@@@Z@4JA
  001a6	83 c2 32	 add	 edx, 50			; 00000032H
  001a9	52		 push	 edx
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001ba	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv163[ebp], 0
$LN23@update_cli:
  001c1	68 b1 00 00 00	 push	 177			; 000000b1H
  001c6	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001c9	51		 push	 ecx
  001ca	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv155[ebp], 1116
  001d1	8b 45 a4	 mov	 eax, DWORD PTR tv163[ebp]
  001d4	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001db	ff d1		 call	 ecx
  001dd	89 45 f0	 mov	 DWORD PTR _rotated$2[ebp], eax

; 276  : 
; 277  : 			if (moved || rotated || command_line_tacview_logging < 3)

  001e0	83 7d f4 00	 cmp	 DWORD PTR _moved$3[ebp], 0
  001e4	75 0f		 jne	 SHORT $LN12@update_cli
  001e6	83 7d f0 00	 cmp	 DWORD PTR _rotated$2[ebp], 0
  001ea	75 09		 jne	 SHORT $LN12@update_cli
  001ec	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  001f3	7d 13		 jge	 SHORT $LN11@update_cli
$LN12@update_cli:

; 278  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  001f5	6a 00		 push	 0
  001f7	8b 45 f0	 mov	 eax, DWORD PTR _rotated$2[ebp]
  001fa	50		 push	 eax
  001fb	8b 4d f4	 mov	 ecx, DWORD PTR _moved$3[ebp]
  001fe	51		 push	 ecx
  001ff	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00202	52		 push	 edx
  00203	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN11@update_cli:

; 279  : 		}
; 280  : 	}
; 281  : 	else

  00208	e9 ce 00 00 00	 jmp	 $LN6@update_cli
$LN8@update_cli:

; 282  : 	{
; 283  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  0020d	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00211	74 0a		 je	 SHORT $LN24@update_cli
  00213	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00216	8b 08		 mov	 ecx, DWORD PTR [eax]
  00218	89 4d a8	 mov	 DWORD PTR tv181[ebp], ecx
  0021b	eb 1d		 jmp	 SHORT $LN25@update_cli
$LN24@update_cli:
  0021d	68 1b 01 00 00	 push	 283			; 0000011bH
  00222	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00227	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0022d	52		 push	 edx
  0022e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00233	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv181[ebp], 0
$LN25@update_cli:
  0023a	b8 01 00 00 00	 mov	 eax, 1
  0023f	85 c0		 test	 eax, eax
  00241	74 09		 je	 SHORT $LN26@update_cli
  00243	c7 45 a4 97 00
	00 00		 mov	 DWORD PTR tv188[ebp], 151 ; 00000097H
  0024a	eb 1d		 jmp	 SHORT $LN27@update_cli
$LN26@update_cli:
  0024c	68 1b 01 00 00	 push	 283			; 0000011bH
  00251	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00256	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0025c	51		 push	 ecx
  0025d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00262	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv188[ebp], 0
$LN27@update_cli:
  00269	68 97 00 00 00	 push	 151			; 00000097H
  0026e	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00271	52		 push	 edx
  00272	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv181[ebp], 1116
  00279	8b 4d a4	 mov	 ecx, DWORD PTR tv188[ebp]
  0027c	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  00283	ff d2		 call	 edx
  00285	83 f8 02	 cmp	 eax, 2
  00288	75 02		 jne	 SHORT $LN13@update_cli

; 284  : 		{
; 285  : 		}
; 286  : 		else

  0028a	eb 4f		 jmp	 SHORT $LN6@update_cli
$LN13@update_cli:

; 287  : 		{
; 288  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0028c	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00293	eb 09		 jmp	 SHORT $LN7@update_cli
$LN5@update_cli:
  00295	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  00298	83 c0 01	 add	 eax, 1
  0029b	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_cli:
  0029e	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  002a2	7d 37		 jge	 SHORT $LN6@update_cli

; 289  : 			{
; 290  : 				get_3d_terrain_point_data (raw->vh.mob.position.x, raw->vh.mob.position.z, &raw->vh.terrain_info);

  002a4	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002a7	05 4c 01 00 00	 add	 eax, 332		; 0000014cH
  002ac	50		 push	 eax
  002ad	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002b0	51		 push	 ecx
  002b1	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  002b6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002bb	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  002be	51		 push	 ecx
  002bf	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  002c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002c9	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  002ce	dd d8		 fstp	 ST(0)

; 291  : 
; 292  : 				routed_vehicle_death_movement (en);

  002d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002d3	50		 push	 eax
  002d4	e8 00 00 00 00	 call	 ?routed_vehicle_death_movement@@YGXPAUENTITY@@@Z ; routed_vehicle_death_movement

; 293  : 			}

  002d9	eb ba		 jmp	 SHORT $LN5@update_cli
$LN6@update_cli:

; 294  : 		}
; 295  : 	}
; 296  : }

  002db	5f		 pop	 edi
  002dc	5e		 pop	 esi
  002dd	5b		 pop	 ebx
  002de	8b e5		 mov	 esp, ebp
  002e0	5d		 pop	 ebp
  002e1	c2 04 00	 ret	 4
?update_client@@YGXPAUENTITY@@@Z ENDP			; update_client
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\algorithm
;	COMDAT ??$max@M@std@@YGABMABM0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@M@std@@YGABMABM0@Z PROC				; std::max<float>, COMDAT

; 5387 : 	{	// return larger of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 5388 : 	if (_Left < _Right)

  00009	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0000c	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000f	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00013	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00016	76 64		 jbe	 SHORT $LN8@max
$LN4@max:

; 5389 : 		{
; 5390 : 		_STL_ASSERT(!(_Right < _Left), "invalid comparator");

  00018	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
  0001b	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0001e	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  00022	0f 2f 01	 comiss	 xmm0, DWORD PTR [ecx]
  00025	77 02		 ja	 SHORT $LN9@max
  00027	eb 4a		 jmp	 SHORT $LN6@max
$LN9@max:
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEEMDEPI@invalid?5comparator@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00033	6a 00		 push	 0
  00035	68 0e 15 00 00	 push	 5390			; 0000150eH
  0003a	68 00 00 00 00	 push	 OFFSET ??_C@_0GK@JMBMHIBC@c?3?2program?5files?5?$CIx86?$CJ?2microsof@
  0003f	6a 02		 push	 2
  00041	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___CrtDbgReport
  00047	83 c4 18	 add	 esp, 24			; 00000018H
  0004a	83 f8 01	 cmp	 eax, 1
  0004d	75 01		 jne	 SHORT $LN12@max
  0004f	cc		 int	 3
$LN12@max:
  00050	6a 00		 push	 0
  00052	68 0e 15 00 00	 push	 5390			; 0000150eH
  00057	68 00 00 00 00	 push	 OFFSET ??_C@_1NE@FKBPBJEB@?$AAc?$AA?3?$AA?2?$AAp?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAf?$AAi?$AAl?$AAe@
  0005c	68 00 00 00 00	 push	 OFFSET ??_C@_1BC@ICCOKLEG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAm?$AAa?$AAx@
  00061	68 00 00 00 00	 push	 OFFSET ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp___invalid_parameter
  0006c	83 c4 14	 add	 esp, 20			; 00000014H
  0006f	33 c0		 xor	 eax, eax
  00071	75 b6		 jne	 SHORT $LN9@max
$LN6@max:
  00073	33 c0		 xor	 eax, eax
  00075	75 a1		 jne	 SHORT $LN4@max

; 5391 : 		return (_Right);

  00077	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  0007a	eb 03		 jmp	 SHORT $LN1@max
$LN8@max:

; 5392 : 		}
; 5393 : 
; 5394 : 	return (_Left);

  0007c	8b 45 08	 mov	 eax, DWORD PTR __Left$[ebp]
$LN1@max:

; 5395 : 	}

  0007f	5f		 pop	 edi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx
  00082	8b e5		 mov	 esp, ebp
  00084	5d		 pop	 ebp
  00085	c2 08 00	 ret	 8
??$max@M@std@@YGABMABM0@Z ENDP				; std::max<float>
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_updt.c
;	COMDAT ?update_server@@YGXPAUENTITY@@@Z
_TEXT	SEGMENT
tv191 = -92						; size = 4
tv166 = -92						; size = 4
tv146 = -92						; size = 4
tv213 = -88						; size = 4
tv184 = -88						; size = 4
tv158 = -88						; size = 4
tv138 = -88						; size = 4
$T1 = -84						; size = 4
_rotated$2 = -16					; size = 4
_moved$3 = -12						; size = 4
_loop$ = -8						; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
?update_server@@YGXPAUENTITY@@@Z PROC			; update_server, COMDAT

; 82   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 83   : 
; 84   : 	routed_vehicle
; 85   : 		*raw;
; 86   : 
; 87   : 	int
; 88   : 		loop;
; 89   : 
; 90   : 	raw = (routed_vehicle *) get_local_entity_data (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0000f	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 91   : 
; 92   : 	update_local_entity_view_interest_level (en);

  00012	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?update_local_entity_view_interest_level@@YGXPAUENTITY@@@Z ; update_local_entity_view_interest_level

; 93   : 
; 94   : 	raw->vh.sleep -= get_delta_time ();

  0001b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0001e	f3 0f 10 80 e8
	00 00 00	 movss	 xmm0, DWORD PTR [eax+232]
  00026	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00031	f3 0f 11 81 e8
	00 00 00	 movss	 DWORD PTR [ecx+232], xmm0

; 95   : 
; 96   : 	raw->vh.sleep = max (raw->vh.sleep, 0.0f);

  00039	0f 57 c0	 xorps	 xmm0, xmm0
  0003c	f3 0f 11 45 ac	 movss	 DWORD PTR $T1[ebp], xmm0
  00041	8d 45 ac	 lea	 eax, DWORD PTR $T1[ebp]
  00044	50		 push	 eax
  00045	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00048	81 c1 e8 00 00
	00		 add	 ecx, 232		; 000000e8H
  0004e	51		 push	 ecx
  0004f	e8 00 00 00 00	 call	 ??$max@M@std@@YGABMABM0@Z ; std::max<float>
  00054	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00057	8b 00		 mov	 eax, DWORD PTR [eax]
  00059	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax

; 97   : 
; 98   : 	#if DEBUG_MODULE
; 99   : 	// debug
; 100  : 	{
; 101  : 
; 102  : 		entity
; 103  : 			*group;
; 104  : 
; 105  : 		group = get_local_entity_parent (en, LIST_TYPE_MEMBER);
; 106  : 
; 107  : 		if (group)
; 108  : 		{
; 109  : 
; 110  : 			if (group_database [get_local_entity_int_value (group, INT_TYPE_ENTITY_SUB_TYPE)].frontline_flag)
; 111  : 			{
; 112  : 
; 113  : 				if (get_local_entity_parent (group, LIST_TYPE_KEYSITE_GROUP))
; 114  : 				{
; 115  : 
; 116  : 					if (get_local_entity_type (get_local_entity_parent (group, LIST_TYPE_KEYSITE_GROUP)) == ENTITY_TYPE_KEYSITE)
; 117  : 					{
; 118  : 
; 119  : 						if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) != OPERATIONAL_STATE_LANDED)
; 120  : 						{
; 121  : 
; 122  : 							entity
; 123  : 								*task;
; 124  : 
; 125  : 							task = get_local_entity_current_task (en);
; 126  : 
; 127  : 							if (task)
; 128  : 							{
; 129  : 
; 130  : 								if ((get_local_entity_int_value (task, INT_TYPE_ENTITY_SUB_TYPE) != ENTITY_SUB_TYPE_TASK_LANDING) &&
; 131  : 									(get_local_entity_int_value (task, INT_TYPE_ENTITY_SUB_TYPE) != ENTITY_SUB_TYPE_TASK_TAKEOFF) &&
; 132  : 									(get_local_entity_int_value (task, INT_TYPE_ENTITY_SUB_TYPE) != ENTITY_SUB_TYPE_TASK_TAKEOFF_HOLDING))
; 133  : 								{
; 134  : 
; 135  : 									debug_fatal ("GP_UPDAT: frontline entity %s, %d connected to KEYSITE", get_local_entity_string (en, STRING_TYPE_FULL_NAME), get_local_entity_index (en));
; 136  : 								}
; 137  : 							}
; 138  : 						}
; 139  : 					}
; 140  : 				}
; 141  : 			}
; 142  : 		}
; 143  : 
; 144  : 	}
; 145  : 	#endif
; 146  : 	// debug
; 147  : 
; 148  : 	if (raw->vh.mob.alive)

  0005f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00062	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00065	83 e1 01	 and	 ecx, 1
  00068	0f 84 ba 01 00
	00		 je	 $LN8@update_ser

; 149  : 	{
; 150  : 
; 151  : 		//
; 152  : 		// Update
; 153  : 		//
; 154  : 
; 155  : 		for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  0006e	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  00075	eb 09		 jmp	 SHORT $LN4@update_ser
$LN2@update_ser:
  00077	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0007a	83 c0 01	 add	 eax, 1
  0007d	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN4@update_ser:
  00080	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00084	7d 0b		 jge	 SHORT $LN3@update_ser

; 156  : 		{
; 157  : 
; 158  : 			routed_vehicle_movement (en);

  00086	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?routed_vehicle_movement@@YGXPAUENTITY@@@Z ; routed_vehicle_movement

; 159  : 		}

  0008f	eb e6		 jmp	 SHORT $LN2@update_ser
$LN3@update_ser:

; 160  : 
; 161  : 		////////////////////////////////////////
; 162  : 
; 163  : 		update_vehicle_loading_doors (en);

  00091	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?update_vehicle_loading_doors@@YGXPAUENTITY@@@Z ; update_vehicle_loading_doors

; 164  : 
; 165  : 		update_vehicle_radar (en);

  0009a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?update_vehicle_radar@@YGXPAUENTITY@@@Z ; update_vehicle_radar

; 166  : 
; 167  : 		////////////////////////////////////////
; 168  : 		//
; 169  : 		// ORDER IS CRITICAL
; 170  : 		//
; 171  : 
; 172  : 		update_vehicle_target_scan (en);

  000a3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000a6	50		 push	 eax
  000a7	e8 00 00 00 00	 call	 ?update_vehicle_target_scan@@YGXPAUENTITY@@@Z ; update_vehicle_target_scan

; 173  : 
; 174  : 		update_vehicle_weapon_system_ready (en);

  000ac	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?update_vehicle_weapon_system_ready@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_system_ready

; 175  : 
; 176  : 		update_entity_weapon_systems (en);

  000b5	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?update_entity_weapon_systems@@YGXPAUENTITY@@@Z ; update_entity_weapon_systems

; 177  : 
; 178  : 		update_entity_weapon_system_weapon_and_target_vectors (en);

  000be	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?update_entity_weapon_system_weapon_and_target_vectors@@YGXPAUENTITY@@@Z ; update_entity_weapon_system_weapon_and_target_vectors

; 179  : 
; 180  : 		update_vehicle_weapon_fire (en);

  000c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000ca	50		 push	 eax
  000cb	e8 00 00 00 00	 call	 ?update_vehicle_weapon_fire@@YGXPAUENTITY@@@Z ; update_vehicle_weapon_fire

; 181  : 
; 182  : 		update_vehicle_decoy_release (en);

  000d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?update_vehicle_decoy_release@@YGXPAUENTITY@@@Z ; update_vehicle_decoy_release

; 183  : 
; 184  : 		//
; 185  : 		////////////////////////////////////////
; 186  : 
; 187  : 		if (tacview_is_logging() && raw->vh.mob.alive)

  000d9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?tacview_log_file@@3PAU_iobuf@@A, 0 ; tacview_log_file
  000e0	0f 84 3d 01 00
	00		 je	 $LN11@update_ser
  000e6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000e9	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  000ec	83 e1 01	 and	 ecx, 1
  000ef	0f 84 2e 01 00
	00		 je	 $LN11@update_ser

; 188  : 		{
; 189  : 			int
; 190  : 				moved = get_local_entity_int_value(en, INT_TYPE_MOBILE_MOVING),

  000f5	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  000f9	74 0a		 je	 SHORT $LN17@update_ser
  000fb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000fe	8b 08		 mov	 ecx, DWORD PTR [eax]
  00100	89 4d a8	 mov	 DWORD PTR tv138[ebp], ecx
  00103	eb 21		 jmp	 SHORT $LN18@update_ser
$LN17@update_ser:
  00105	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0010b	83 c2 6c	 add	 edx, 108		; 0000006cH
  0010e	52		 push	 edx
  0010f	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00114	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0011f	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv138[ebp], 0
$LN18@update_ser:
  00126	b9 01 00 00 00	 mov	 ecx, 1
  0012b	85 c9		 test	 ecx, ecx
  0012d	74 09		 je	 SHORT $LN19@update_ser
  0012f	c7 45 a4 8e 00
	00 00		 mov	 DWORD PTR tv146[ebp], 142 ; 0000008eH
  00136	eb 21		 jmp	 SHORT $LN20@update_ser
$LN19@update_ser:
  00138	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0013e	83 c2 6c	 add	 edx, 108		; 0000006cH
  00141	52		 push	 edx
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00152	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv146[ebp], 0
$LN20@update_ser:
  00159	68 8e 00 00 00	 push	 142			; 0000008eH
  0015e	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  00161	51		 push	 ecx
  00162	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv138[ebp], 1116
  00169	8b 45 a4	 mov	 eax, DWORD PTR tv146[ebp]
  0016c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00173	ff d1		 call	 ecx
  00175	89 45 f4	 mov	 DWORD PTR _moved$3[ebp], eax

; 191  : 				rotated = get_local_entity_int_value(en, INT_TYPE_ROTATED);

  00178	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0017c	74 0a		 je	 SHORT $LN21@update_ser
  0017e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00181	8b 08		 mov	 ecx, DWORD PTR [eax]
  00183	89 4d a8	 mov	 DWORD PTR tv158[ebp], ecx
  00186	eb 21		 jmp	 SHORT $LN22@update_ser
$LN21@update_ser:
  00188	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  0018e	83 c2 6d	 add	 edx, 109		; 0000006dH
  00191	52		 push	 edx
  00192	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0019c	50		 push	 eax
  0019d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001a2	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv158[ebp], 0
$LN22@update_ser:
  001a9	b9 01 00 00 00	 mov	 ecx, 1
  001ae	85 c9		 test	 ecx, ecx
  001b0	74 09		 je	 SHORT $LN23@update_ser
  001b2	c7 45 a4 b1 00
	00 00		 mov	 DWORD PTR tv166[ebp], 177 ; 000000b1H
  001b9	eb 21		 jmp	 SHORT $LN24@update_ser
$LN23@update_ser:
  001bb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  001c1	83 c2 6d	 add	 edx, 109		; 0000006dH
  001c4	52		 push	 edx
  001c5	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  001d5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv166[ebp], 0
$LN24@update_ser:
  001dc	68 b1 00 00 00	 push	 177			; 000000b1H
  001e1	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  001e4	51		 push	 ecx
  001e5	69 55 a8 5c 04
	00 00		 imul	 edx, DWORD PTR tv158[ebp], 1116
  001ec	8b 45 a4	 mov	 eax, DWORD PTR tv166[ebp]
  001ef	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  001f6	ff d1		 call	 ecx
  001f8	89 45 f0	 mov	 DWORD PTR _rotated$2[ebp], eax

; 192  : 
; 193  : 			if (moved || rotated || command_line_tacview_logging < 3)

  001fb	83 7d f4 00	 cmp	 DWORD PTR _moved$3[ebp], 0
  001ff	75 0f		 jne	 SHORT $LN12@update_ser
  00201	83 7d f0 00	 cmp	 DWORD PTR _rotated$2[ebp], 0
  00205	75 09		 jne	 SHORT $LN12@update_ser
  00207	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?command_line_tacview_logging@@3HA, 3 ; command_line_tacview_logging
  0020e	7d 13		 jge	 SHORT $LN11@update_ser
$LN12@update_ser:

; 194  : 				write_tacview_unit_update(en, moved, rotated, FALSE);

  00210	6a 00		 push	 0
  00212	8b 45 f0	 mov	 eax, DWORD PTR _rotated$2[ebp]
  00215	50		 push	 eax
  00216	8b 4d f4	 mov	 ecx, DWORD PTR _moved$3[ebp]
  00219	51		 push	 ecx
  0021a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0021d	52		 push	 edx
  0021e	e8 00 00 00 00	 call	 ?write_tacview_unit_update@@YGXPAUENTITY@@HHH@Z ; write_tacview_unit_update
$LN11@update_ser:

; 195  : 		}
; 196  : 	}
; 197  : 	else

  00223	e9 4a 01 00 00	 jmp	 $LN6@update_ser
$LN8@update_ser:

; 198  : 	{
; 199  : 		if (get_local_entity_int_value (en, INT_TYPE_OPERATIONAL_STATE) == OPERATIONAL_STATE_DEAD)

  00228	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0022c	74 0a		 je	 SHORT $LN25@update_ser
  0022e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00231	8b 08		 mov	 ecx, DWORD PTR [eax]
  00233	89 4d a8	 mov	 DWORD PTR tv184[ebp], ecx
  00236	eb 1d		 jmp	 SHORT $LN26@update_ser
$LN25@update_ser:
  00238	68 c7 00 00 00	 push	 199			; 000000c7H
  0023d	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00242	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00248	52		 push	 edx
  00249	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0024e	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv184[ebp], 0
$LN26@update_ser:
  00255	b8 01 00 00 00	 mov	 eax, 1
  0025a	85 c0		 test	 eax, eax
  0025c	74 09		 je	 SHORT $LN27@update_ser
  0025e	c7 45 a4 97 00
	00 00		 mov	 DWORD PTR tv191[ebp], 151 ; 00000097H
  00265	eb 1d		 jmp	 SHORT $LN28@update_ser
$LN27@update_ser:
  00267	68 c7 00 00 00	 push	 199			; 000000c7H
  0026c	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00271	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00277	51		 push	 ecx
  00278	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0027d	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR tv191[ebp], 0
$LN28@update_ser:
  00284	68 97 00 00 00	 push	 151			; 00000097H
  00289	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0028c	52		 push	 edx
  0028d	69 45 a8 5c 04
	00 00		 imul	 eax, DWORD PTR tv184[ebp], 1116
  00294	8b 4d a4	 mov	 ecx, DWORD PTR tv191[ebp]
  00297	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0029e	ff d2		 call	 edx
  002a0	83 f8 02	 cmp	 eax, 2
  002a3	75 7e		 jne	 SHORT $LN13@update_ser

; 200  : 		{
; 201  : 			raw->vh.death_timer -= get_delta_time ();

  002a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002a8	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  002b0	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR ?system_delta_time@@3MA
  002b8	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  002bb	f3 0f 11 81 10
	01 00 00	 movss	 DWORD PTR [ecx+272], xmm0

; 202  : 
; 203  : 			if (raw->vh.death_timer <= 0.0)

  002c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  002c6	f3 0f 5a 80 10
	01 00 00	 cvtss2sd xmm0, DWORD PTR [eax+272]
  002ce	0f 57 c9	 xorps	 xmm1, xmm1
  002d1	66 0f 2f c8	 comisd	 xmm1, xmm0
  002d5	72 4a		 jb	 SHORT $LN15@update_ser

; 204  : 			{
; 205  : 				destroy_client_server_entity_family (en);

  002d7	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  002db	74 0a		 je	 SHORT $LN29@update_ser
  002dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002e0	8b 08		 mov	 ecx, DWORD PTR [eax]
  002e2	89 4d a8	 mov	 DWORD PTR tv213[ebp], ecx
  002e5	eb 21		 jmp	 SHORT $LN30@update_ser
$LN29@update_ser:
  002e7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??update_server@@YGXPAUENTITY@@@Z@4JA
  002ed	83 c2 7b	 add	 edx, 123		; 0000007bH
  002f0	52		 push	 edx
  002f1	68 00 00 00 00	 push	 OFFSET ??_C@_0FD@HBNBAKKE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  002fb	50		 push	 eax
  002fc	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00301	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR tv213[ebp], 0
$LN30@update_ser:
  00308	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  0030b	51		 push	 ecx
  0030c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?system_comms_model@@3W4COMMS_MODEL_TYPES@@A ; system_comms_model
  00312	c1 e2 02	 shl	 edx, 2
  00315	8b 45 a8	 mov	 eax, DWORD PTR tv213[ebp]
  00318	8b 8c c2 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_destroy_client_server_entity_family@@3PAY01P6GXPAUENTITY@@@ZA[edx+eax*8]
  0031f	ff d1		 call	 ecx
$LN15@update_ser:

; 206  : 			}
; 207  : 		}
; 208  : 		else

  00321	eb 4f		 jmp	 SHORT $LN6@update_ser
$LN13@update_ser:

; 209  : 		{
; 210  : 			for (loop = 0; loop < get_entity_movement_iterations (); loop ++)

  00323	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _loop$[ebp], 0
  0032a	eb 09		 jmp	 SHORT $LN7@update_ser
$LN5@update_ser:
  0032c	8b 45 f8	 mov	 eax, DWORD PTR _loop$[ebp]
  0032f	83 c0 01	 add	 eax, 1
  00332	89 45 f8	 mov	 DWORD PTR _loop$[ebp], eax
$LN7@update_ser:
  00335	83 7d f8 01	 cmp	 DWORD PTR _loop$[ebp], 1
  00339	7d 37		 jge	 SHORT $LN6@update_ser

; 211  : 			{
; 212  : 				get_3d_terrain_point_data (raw->vh.mob.position.x, raw->vh.mob.position.z, &raw->vh.terrain_info);

  0033b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0033e	05 4c 01 00 00	 add	 eax, 332		; 0000014cH
  00343	50		 push	 eax
  00344	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00347	51		 push	 ecx
  00348	f3 0f 10 41 0c	 movss	 xmm0, DWORD PTR [ecx+12]
  0034d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00352	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00355	51		 push	 ecx
  00356	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0035b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00360	e8 00 00 00 00	 call	 ?get_3d_terrain_point_data@@YGMMMPAUTERRAIN_3D_POINT_DATA@@@Z ; get_3d_terrain_point_data
  00365	dd d8		 fstp	 ST(0)

; 213  : 
; 214  : 				routed_vehicle_death_movement (en);

  00367	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ?routed_vehicle_death_movement@@YGXPAUENTITY@@@Z ; routed_vehicle_death_movement

; 215  : 			}

  00370	eb ba		 jmp	 SHORT $LN5@update_ser
$LN6@update_ser:

; 216  : 		}
; 217  : 	}
; 218  : }

  00372	5f		 pop	 edi
  00373	5e		 pop	 esi
  00374	5b		 pop	 ebx
  00375	8b e5		 mov	 esp, ebp
  00377	5d		 pop	 ebp
  00378	c2 04 00	 ret	 4
?update_server@@YGXPAUENTITY@@@Z ENDP			; update_server
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\vehicle\routed\rv_updt.c
;	COMDAT ?overload_routed_vehicle_update_functions@@YGXXZ
_TEXT	SEGMENT
?overload_routed_vehicle_update_functions@@YGXXZ PROC	; overload_routed_vehicle_update_functions, COMDAT

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 304  : 	fn_update_client_server_entity[ENTITY_TYPE_ROUTED_VEHICLE][COMMS_MODEL_SERVER]	= update_server;

  00009	b8 08 00 00 00	 mov	 eax, 8
  0000e	6b c8 17	 imul	 ecx, eax, 23
  00011	ba 04 00 00 00	 mov	 edx, 4
  00016	6b c2 00	 imul	 eax, edx, 0
  00019	c7 84 01 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+eax], OFFSET ?update_server@@YGXPAUENTITY@@@Z ; update_server

; 305  : 
; 306  : 	fn_update_client_server_entity[ENTITY_TYPE_ROUTED_VEHICLE][COMMS_MODEL_CLIENT]	= update_client;

  00024	b8 08 00 00 00	 mov	 eax, 8
  00029	6b c8 17	 imul	 ecx, eax, 23
  0002c	ba 04 00 00 00	 mov	 edx, 4
  00031	c1 e2 00	 shl	 edx, 0
  00034	c7 84 11 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_client_server_entity@@3PAY01P6GXPAUENTITY@@@ZA[ecx+edx], OFFSET ?update_client@@YGXPAUENTITY@@@Z ; update_client

; 307  : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?overload_routed_vehicle_update_functions@@YGXXZ ENDP	; overload_routed_vehicle_update_functions
_TEXT	ENDS
END
