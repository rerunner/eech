; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_helicopter_draw_functions@@YGXXZ	; overload_helicopter_draw_functions
PUBLIC	?update_helicopter_sprite_light_timers@@YGXXZ	; update_helicopter_sprite_light_timers
PUBLIC	?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA ; `draw_local_3d_object'::`1'::__LINE__Var
PUBLIC	??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@ ; `string'
PUBLIC	?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA ; `object_internal_lighting_valid'::`1'::__LINE__Var
PUBLIC	__real@3fb0000000000000
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
EXTRN	_memcpy:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?frac@@YGMM@Z:PROC				; frac
EXTRN	?insert_object_shadow_into_3d_scene@@YGXPAUOBJECT_3D_INSTANCE@@@Z:PROC ; insert_object_shadow_into_3d_scene
EXTRN	?insert_zbiased_relative_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAUVEC3D@@PAXM@Z:PROC ; insert_zbiased_relative_object_into_3d_scene
EXTRN	?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z:PROC ; insert_zbiased_object_into_3d_scene
EXTRN	?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z:PROC ; find_object_3d_sub_object
EXTRN	?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z:PROC ; construct_temporary_3d_object
EXTRN	?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z:PROC ; animate_and_draw_entity_muzzle_flash_effect
EXTRN	?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_loading_doors
EXTRN	?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_cargo_doors
EXTRN	?animate_aircraft_rudder@@YGXPAUENTITY@@@Z:PROC	; animate_aircraft_rudder
EXTRN	?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_undercarriage
EXTRN	?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z:PROC ; animate_aircraft_weapon_system_ready
EXTRN	?animate_aircraft_shadow@@YGXPAUENTITY@@@Z:PROC	; animate_aircraft_shadow
EXTRN	?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z:PROC ; animate_helicopter_main_rotors
EXTRN	?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z:PROC ; animate_damaged_helicopter_main_rotors
EXTRN	?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z:PROC ; animate_helicopter_tail_rotor
EXTRN	?animate_helicopter_wipers@@YGXPAUENTITY@@@Z:PROC ; animate_helicopter_wipers
EXTRN	?animate_helicopter_eo@@YGXPAUENTITY@@@Z:PROC	; animate_helicopter_eo
EXTRN	?animate_helicopter_suspension@@YGXPAUENTITY@@@Z:PROC ; animate_helicopter_suspension
EXTRN	?animate_helicopter_wheels@@YGXPAUENTITY@@@Z:PROC ; animate_helicopter_wheels
EXTRN	?draw_downwash_effect@@YGXPAUENTITY@@@Z:PROC	; draw_downwash_effect
EXTRN	?system_delta_time@@3MA:DWORD			; system_delta_time
EXTRN	?command_line_downwash@@3HA:DWORD		; command_line_downwash
EXTRN	?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A:DWORD ; in_flight_game_mode
EXTRN	?new_gunship@@3QBDB:BYTE			; new_gunship
EXTRN	?null_entity_pointer_message@@3PBDB:DWORD	; null_entity_pointer_message
EXTRN	?global_options@@3UGLOBAL_OPTIONS_DATA@@A:BYTE	; global_options
EXTRN	?in_flight_invisible_object@@3HA:DWORD		; in_flight_invisible_object
EXTRN	?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA:BYTE ; fn_draw_local_entity_3d_object
EXTRN	?overload_invalid_int_type_message@@3PBDB:DWORD	; overload_invalid_int_type_message
EXTRN	?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA:BYTE ; fn_get_local_entity_int_value
EXTRN	?entities@@3PAUENTITY@@A:DWORD			; entities
EXTRN	?gunship_entity@@3PAUENTITY@@A:DWORD		; gunship_entity
EXTRN	?session_entity@@3PAUENTITY@@A:DWORD		; session_entity
EXTRN	?view_mode@@3W4VIEW_MODES@@A:DWORD		; view_mode
EXTRN	?in_cockpit@@3HA:DWORD				; in_cockpit
EXTRN	?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A:DWORD ; virtual_cockpit_inst3d
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?sprite_light_timer@@3MA DD 01H DUP (?)			; sprite_light_timer
_BSS	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb0000000000000
CONST	SEGMENT
__real@3fb0000000000000 DQ 03fb0000000000000r	; 0.0625
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA DD 0257H ; `object_internal_lighting_valid'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
CONST	SEGMENT
??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@ DB 'c:\users\nh'
	DB	'v90\projects\eech\aphavoc\source\entity\mobile\aircraft\helic'
	DB	'op\hc_draw.c', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA DD 05fH ; `draw_local_3d_object'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
;	COMDAT ?draw_local_3d_object@@YGXPAUENTITY@@M@Z
_TEXT	SEGMENT
tv441 = -164						; size = 4
tv172 = -164						; size = 4
tv485 = -160						; size = 4
tv465 = -160						; size = 4
tv434 = -160						; size = 4
tv359 = -160						; size = 4
tv339 = -160						; size = 4
tv287 = -160						; size = 4
tv275 = -160						; size = 4
tv263 = -160						; size = 4
tv251 = -160						; size = 4
tv199 = -160						; size = 4
tv164 = -160						; size = 4
tv81 = -160						; size = 4
tv71 = -160						; size = 4
tv68 = -160						; size = 4
_shadow_object$1 = -92					; size = 4
_shadow_object$2 = -88					; size = 4
_search$3 = -84						; size = 56
_ejected$4 = -28					; size = 4
_draw_loading_doors$5 = -24				; size = 4
_draw_canopy_doors$6 = -20				; size = 4
_draw_virtual_cockpit_parts$7 = -16			; size = 4
_draw_gunship$ = -12					; size = 4
_internal_view$ = -8					; size = 4
_raw$ = -4						; size = 4
_en$ = 8						; size = 4
_range$ = 12						; size = 4
?draw_local_3d_object@@YGXPAUENTITY@@M@Z PROC		; draw_local_3d_object, COMDAT

; 95   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 00 00
	00		 sub	 esp, 164		; 000000a4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 96   : 	helicopter
; 97   : 		*raw;
; 98   : 
; 99   : 	int
; 100  : 		internal_view,
; 101  : 		draw_gunship;
; 102  : 
; 103  : 	raw = (helicopter *) get_local_entity_data (en);

  0000c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00012	89 4d fc	 mov	 DWORD PTR _raw$[ebp], ecx

; 104  : 
; 105  : 	//
; 106  : 	// the player's gunship is visible from the menus - where the in_cockpit flag is invalid
; 107  : 	//
; 108  : 
; 109  : 	if (en == get_gunship_entity ())

  00015	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00018	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  0001e	75 33		 jne	 SHORT $LN4@draw_local

; 110  : 	{
; 111  : 		internal_view = ((in_cockpit) && (get_in_flight_game_mode () == IN_FLIGHT_GAME_MODE_SIMULATOR));

  00020	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_cockpit@@3HA, 0 ; in_cockpit
  00027	74 15		 je	 SHORT $LN54@draw_local
  00029	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_game_mode@@3W4IN_FLIGHT_GAME_MODES@@A, 0 ; in_flight_game_mode
  00030	75 0c		 jne	 SHORT $LN54@draw_local
  00032	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv68[ebp], 1
  0003c	eb 0a		 jmp	 SHORT $LN55@draw_local
$LN54@draw_local:
  0003e	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv68[ebp], 0
$LN55@draw_local:
  00048	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv68[ebp]
  0004e	89 45 f8	 mov	 DWORD PTR _internal_view$[ebp], eax

; 112  : 	}
; 113  : 	else

  00051	eb 07		 jmp	 SHORT $LN5@draw_local
$LN4@draw_local:

; 114  : 	{
; 115  : 		internal_view = FALSE;

  00053	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _internal_view$[ebp], 0
$LN5@draw_local:

; 116  : 	}
; 117  : 
; 118  : 	draw_gunship = TRUE;

  0005a	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _draw_gunship$[ebp], 1

; 119  : 
; 120  : 	////////////////////////////////////////
; 121  : 	//
; 122  : 	// SORT COMANCHE AND HOKUM INSTANCES
; 123  : 	//
; 124  : 	// It is necessary to switch parts on and off for all Comanche and Hokum instances
; 125  : 	// because the player can change gunship so the instances need to be fixed up.
; 126  : 	//
; 127  : 	////////////////////////////////////////
; 128  : 
; 129  : 	{
; 130  : 		int
; 131  : 			draw_virtual_cockpit_parts,
; 132  : 			draw_canopy_doors,
; 133  : 			draw_loading_doors,
; 134  : 			ejected;
; 135  : 
; 136  : 		object_3d_sub_object_search_data
; 137  : 			search;
; 138  : 
; 139  : 		switch (raw->ac.object_3d_shape)

  00061	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00064	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  0006a	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], ecx
  00070	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv71[ebp]
  00076	81 ea f1 09 00
	00		 sub	 edx, 2545		; 000009f1H
  0007c	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv71[ebp], edx
  00082	81 bd 60 ff ff
	ff ed 00 00 00	 cmp	 DWORD PTR tv71[ebp], 237 ; 000000edH
  0008c	0f 87 b7 05 00
	00		 ja	 $LN33@draw_local
  00092	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00098	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN80@draw_local[eax]
  0009f	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN81@draw_local[ecx*4]
$LN6@draw_local:

; 140  : 		{
; 141  : 		case OBJECT_3D_RAH66:
; 142  : 		{
; 143  : 			////////////////////////////////////////
; 144  : 			//
; 145  : 			// Comanche
; 146  : 			//
; 147  : 			////////////////////////////////////////
; 148  : 
; 149  : 			//
; 150  : 			// draw 'canopy' doors on player object and 'loading' doors on AI object
; 151  : 			//
; 152  : 
; 153  : 			draw_virtual_cockpit_parts = FALSE;

  000a6	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0

; 154  : 
; 155  : 			draw_canopy_doors = FALSE;

  000ad	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _draw_canopy_doors$6[ebp], 0

; 156  : 
; 157  : 			draw_loading_doors = FALSE;

  000b4	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _draw_loading_doors$5[ebp], 0

; 158  : 
; 159  : 			if (en == get_gunship_entity ())

  000bb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  000be	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  000c4	75 16		 jne	 SHORT $LN7@draw_local

; 160  : 			{
; 161  : 				draw_canopy_doors = TRUE;

  000c6	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _draw_canopy_doors$6[ebp], 1

; 162  : 
; 163  : 				if (internal_view)

  000cd	83 7d f8 00	 cmp	 DWORD PTR _internal_view$[ebp], 0
  000d1	74 07		 je	 SHORT $LN9@draw_local

; 164  : 				{
; 165  : 					draw_virtual_cockpit_parts = TRUE;

  000d3	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 1
$LN9@draw_local:

; 166  : 				}
; 167  : 			}
; 168  : 			else

  000da	eb 07		 jmp	 SHORT $LN8@draw_local
$LN7@draw_local:

; 169  : 			{
; 170  : 				draw_loading_doors = TRUE;

  000dc	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _draw_loading_doors$5[ebp], 1
$LN8@draw_local:

; 171  : 			}
; 172  : 
; 173  : 			//
; 174  : 			// fuselage
; 175  : 			//
; 176  : 
; 177  : 			search.search_depth = 0;

  000e3	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 178  : 			search.search_object = raw->ac.inst3d;

  000ea	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  000ed	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  000f3	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 179  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_RAH66_FUSELAGE;

  000f6	c7 45 b8 f0 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 240 ; 000000f0H

; 180  : 
; 181  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  000fd	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00106	83 f8 01	 cmp	 eax, 1
  00109	75 36		 jne	 SHORT $LN10@draw_local

; 182  : 			{
; 183  : 				search.result_sub_object->visible_object = !draw_virtual_cockpit_parts;

  0010b	83 7d f0 00	 cmp	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0
  0010f	75 0c		 jne	 SHORT $LN56@draw_local
  00111	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv81[ebp], 1
  0011b	eb 0a		 jmp	 SHORT $LN57@draw_local
$LN56@draw_local:
  0011d	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv81[ebp], 0
$LN57@draw_local:
  00127	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv81[ebp]
  0012d	83 e0 01	 and	 eax, 1
  00130	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  00133	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00136	83 e2 fe	 and	 edx, -2			; fffffffeH
  00139	0b d0		 or	 edx, eax
  0013b	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0013e	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN10@draw_local:

; 184  : 			}
; 185  : 
; 186  : 			//
; 187  : 			// canopy/loading doors
; 188  : 			//
; 189  : 
; 190  : 			search.search_depth = 0;

  00141	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 191  : 			search.search_object = raw->ac.inst3d;

  00148	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0014b	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00151	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 192  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_CANOPY_DOORS;

  00154	c7 45 b8 c3 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 195 ; 000000c3H

; 193  : 
; 194  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0015b	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0015e	50		 push	 eax
  0015f	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00164	83 f8 01	 cmp	 eax, 1
  00167	75 17		 jne	 SHORT $LN11@draw_local

; 195  : 			{
; 196  : 				search.result_sub_object->visible_object = draw_canopy_doors;

  00169	8b 45 ec	 mov	 eax, DWORD PTR _draw_canopy_doors$6[ebp]
  0016c	83 e0 01	 and	 eax, 1
  0016f	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  00172	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00175	83 e2 fe	 and	 edx, -2			; fffffffeH
  00178	0b d0		 or	 edx, eax
  0017a	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0017d	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN11@draw_local:

; 197  : 			}
; 198  : 
; 199  : 			search.search_depth = 1;

  00180	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 1

; 200  : 			search.search_object = raw->ac.inst3d;

  00187	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0018a	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00190	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 201  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_CANOPY_DOORS;

  00193	c7 45 b8 c3 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 195 ; 000000c3H

; 202  : 
; 203  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0019a	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0019d	50		 push	 eax
  0019e	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  001a3	83 f8 01	 cmp	 eax, 1
  001a6	75 17		 jne	 SHORT $LN12@draw_local

; 204  : 			{
; 205  : 				search.result_sub_object->visible_object = draw_canopy_doors;

  001a8	8b 45 ec	 mov	 eax, DWORD PTR _draw_canopy_doors$6[ebp]
  001ab	83 e0 01	 and	 eax, 1
  001ae	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  001b1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001b4	83 e2 fe	 and	 edx, -2			; fffffffeH
  001b7	0b d0		 or	 edx, eax
  001b9	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  001bc	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN12@draw_local:

; 206  : 			}
; 207  : 
; 208  : 			search.search_depth = 0;

  001bf	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 209  : 			search.search_object = raw->ac.inst3d;

  001c6	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  001c9	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  001cf	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 210  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_LOADING_DOOR;

  001d2	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 49 ; 00000031H

; 211  : 
; 212  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  001d9	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  001e2	83 f8 01	 cmp	 eax, 1
  001e5	75 17		 jne	 SHORT $LN13@draw_local

; 213  : 			{
; 214  : 				search.result_sub_object->visible_object = draw_loading_doors;

  001e7	8b 45 e8	 mov	 eax, DWORD PTR _draw_loading_doors$5[ebp]
  001ea	83 e0 01	 and	 eax, 1
  001ed	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  001f0	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  001f3	83 e2 fe	 and	 edx, -2			; fffffffeH
  001f6	0b d0		 or	 edx, eax
  001f8	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  001fb	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN13@draw_local:

; 215  : 			}
; 216  : 
; 217  : 			search.search_depth = 1;

  001fe	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 1

; 218  : 			search.search_object = raw->ac.inst3d;

  00205	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00208	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0020e	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 219  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_LOADING_DOOR;

  00211	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 49 ; 00000031H

; 220  : 
; 221  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00218	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0021b	50		 push	 eax
  0021c	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00221	83 f8 01	 cmp	 eax, 1
  00224	75 17		 jne	 SHORT $LN14@draw_local

; 222  : 			{
; 223  : 				search.result_sub_object->visible_object = draw_loading_doors;

  00226	8b 45 e8	 mov	 eax, DWORD PTR _draw_loading_doors$5[ebp]
  00229	83 e0 01	 and	 eax, 1
  0022c	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  0022f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00232	83 e2 fe	 and	 edx, -2			; fffffffeH
  00235	0b d0		 or	 edx, eax
  00237	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0023a	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN14@draw_local:

; 224  : 			}
; 225  : 			break;

  0023d	e9 0e 04 00 00	 jmp	 $LN2@draw_local
$LN15@draw_local:

; 226  : 		}
; 227  : 		case OBJECT_3D_KA_52:
; 228  : 		{
; 229  : 			////////////////////////////////////////
; 230  : 			//
; 231  : 			// Hokum
; 232  : 			//
; 233  : 			////////////////////////////////////////
; 234  : 
; 235  : 			//
; 236  : 			// draw 'canopy' doors on player object and 'loading' doors on AI object
; 237  : 			//
; 238  : 
; 239  : 			ejected = get_local_entity_int_value (en, INT_TYPE_EJECTED);

  00242	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  00246	74 0d		 je	 SHORT $LN58@draw_local
  00248	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0024b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024d	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv164[ebp], ecx
  00253	eb 27		 jmp	 SHORT $LN59@draw_local
$LN58@draw_local:
  00255	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  0025b	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  00261	52		 push	 edx
  00262	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00267	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00272	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv164[ebp], 0
$LN59@draw_local:
  0027c	b9 01 00 00 00	 mov	 ecx, 1
  00281	85 c9		 test	 ecx, ecx
  00283	74 0c		 je	 SHORT $LN60@draw_local
  00285	c7 85 5c ff ff
	ff 31 00 00 00	 mov	 DWORD PTR tv172[ebp], 49 ; 00000031H
  0028f	eb 27		 jmp	 SHORT $LN61@draw_local
$LN60@draw_local:
  00291	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??draw_local_3d_object@@YGXPAUENTITY@@M@Z@4JA
  00297	81 c2 90 00 00
	00		 add	 edx, 144		; 00000090H
  0029d	52		 push	 edx
  0029e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  002a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  002a8	50		 push	 eax
  002a9	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  002ae	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv172[ebp], 0
$LN61@draw_local:
  002b8	6a 31		 push	 49			; 00000031H
  002ba	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  002bd	51		 push	 ecx
  002be	69 95 60 ff ff
	ff 5c 04 00 00	 imul	 edx, DWORD PTR tv164[ebp], 1116
  002c8	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv172[ebp]
  002ce	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  002d5	ff d1		 call	 ecx
  002d7	89 45 e4	 mov	 DWORD PTR _ejected$4[ebp], eax

; 240  : 
; 241  : 			draw_virtual_cockpit_parts = FALSE;

  002da	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0

; 242  : 
; 243  : 			draw_canopy_doors = FALSE;

  002e1	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _draw_canopy_doors$6[ebp], 0

; 244  : 
; 245  : 			draw_loading_doors = FALSE;

  002e8	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _draw_loading_doors$5[ebp], 0

; 246  : 
; 247  : 			if (en == get_gunship_entity ())

  002ef	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  002f2	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  002f8	75 1c		 jne	 SHORT $LN16@draw_local

; 248  : 			{
; 249  : 				if (!ejected)

  002fa	83 7d e4 00	 cmp	 DWORD PTR _ejected$4[ebp], 0
  002fe	75 07		 jne	 SHORT $LN18@draw_local

; 250  : 				{
; 251  : 					draw_canopy_doors = TRUE;

  00300	c7 45 ec 01 00
	00 00		 mov	 DWORD PTR _draw_canopy_doors$6[ebp], 1
$LN18@draw_local:

; 252  : 				}
; 253  : 
; 254  : 				if (internal_view)

  00307	83 7d f8 00	 cmp	 DWORD PTR _internal_view$[ebp], 0
  0030b	74 07		 je	 SHORT $LN19@draw_local

; 255  : 				{
; 256  : 					draw_virtual_cockpit_parts = TRUE;

  0030d	c7 45 f0 01 00
	00 00		 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 1
$LN19@draw_local:

; 257  : 				}
; 258  : 			}
; 259  : 			else

  00314	eb 0d		 jmp	 SHORT $LN20@draw_local
$LN16@draw_local:

; 260  : 			{
; 261  : 				if (!ejected)

  00316	83 7d e4 00	 cmp	 DWORD PTR _ejected$4[ebp], 0
  0031a	75 07		 jne	 SHORT $LN20@draw_local

; 262  : 				{
; 263  : 					draw_loading_doors = TRUE;

  0031c	c7 45 e8 01 00
	00 00		 mov	 DWORD PTR _draw_loading_doors$5[ebp], 1
$LN20@draw_local:

; 264  : 				}
; 265  : 			}
; 266  : 
; 267  : 			//
; 268  : 			// stub wings
; 269  : 			//
; 270  : 
; 271  : 			search.search_depth = 0;

  00323	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 272  : 			search.search_object = raw->ac.inst3d;

  0032a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0032d	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00333	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 273  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_KA52_WINGS;

  00336	c7 45 b8 e7 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 231 ; 000000e7H

; 274  : 
; 275  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0033d	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00346	83 f8 01	 cmp	 eax, 1
  00349	75 17		 jne	 SHORT $LN21@draw_local

; 276  : 			{
; 277  : 				search.result_sub_object->visible_object = draw_virtual_cockpit_parts;

  0034b	8b 45 f0	 mov	 eax, DWORD PTR _draw_virtual_cockpit_parts$7[ebp]
  0034e	83 e0 01	 and	 eax, 1
  00351	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  00354	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00357	83 e2 fe	 and	 edx, -2			; fffffffeH
  0035a	0b d0		 or	 edx, eax
  0035c	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0035f	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN21@draw_local:

; 278  : 			}
; 279  : 
; 280  : 			//
; 281  : 			// fuselage
; 282  : 			//
; 283  : 
; 284  : 			search.search_depth = 0;

  00362	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 285  : 			search.search_object = raw->ac.inst3d;

  00369	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0036c	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00372	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 286  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_KA52_FUSELAGE;

  00375	c7 45 b8 e6 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 230 ; 000000e6H

; 287  : 
; 288  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0037c	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00385	83 f8 01	 cmp	 eax, 1
  00388	75 36		 jne	 SHORT $LN22@draw_local

; 289  : 			{
; 290  : 				search.result_sub_object->visible_object = !draw_virtual_cockpit_parts;

  0038a	83 7d f0 00	 cmp	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0
  0038e	75 0c		 jne	 SHORT $LN62@draw_local
  00390	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv199[ebp], 1
  0039a	eb 0a		 jmp	 SHORT $LN63@draw_local
$LN62@draw_local:
  0039c	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv199[ebp], 0
$LN63@draw_local:
  003a6	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv199[ebp]
  003ac	83 e0 01	 and	 eax, 1
  003af	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  003b2	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003b5	83 e2 fe	 and	 edx, -2			; fffffffeH
  003b8	0b d0		 or	 edx, eax
  003ba	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  003bd	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN22@draw_local:

; 291  : 			}
; 292  : 
; 293  : 			//
; 294  : 			// canopy/loading doors
; 295  : 			//
; 296  : 
; 297  : 			search.search_depth = 0;

  003c0	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 298  : 			search.search_object = raw->ac.inst3d;

  003c7	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  003ca	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  003d0	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 299  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_CANOPY_DOORS;

  003d3	c7 45 b8 c3 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 195 ; 000000c3H

; 300  : 
; 301  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  003da	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  003dd	50		 push	 eax
  003de	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  003e3	83 f8 01	 cmp	 eax, 1
  003e6	75 17		 jne	 SHORT $LN23@draw_local

; 302  : 			{
; 303  : 				search.result_sub_object->visible_object = draw_canopy_doors;

  003e8	8b 45 ec	 mov	 eax, DWORD PTR _draw_canopy_doors$6[ebp]
  003eb	83 e0 01	 and	 eax, 1
  003ee	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  003f1	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  003f4	83 e2 fe	 and	 edx, -2			; fffffffeH
  003f7	0b d0		 or	 edx, eax
  003f9	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  003fc	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN23@draw_local:

; 304  : 			}
; 305  : 
; 306  : 			search.search_depth = 1;

  003ff	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 1

; 307  : 			search.search_object = raw->ac.inst3d;

  00406	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00409	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0040f	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 308  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_CANOPY_DOORS;

  00412	c7 45 b8 c3 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 195 ; 000000c3H

; 309  : 
; 310  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00419	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00422	83 f8 01	 cmp	 eax, 1
  00425	75 17		 jne	 SHORT $LN24@draw_local

; 311  : 			{
; 312  : 				search.result_sub_object->visible_object = draw_canopy_doors;

  00427	8b 45 ec	 mov	 eax, DWORD PTR _draw_canopy_doors$6[ebp]
  0042a	83 e0 01	 and	 eax, 1
  0042d	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  00430	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00433	83 e2 fe	 and	 edx, -2			; fffffffeH
  00436	0b d0		 or	 edx, eax
  00438	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0043b	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN24@draw_local:

; 313  : 			}
; 314  : 
; 315  : 			search.search_depth = 0;

  0043e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 316  : 			search.search_object = raw->ac.inst3d;

  00445	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00448	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0044e	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 317  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_LOADING_DOOR;

  00451	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 49 ; 00000031H

; 318  : 
; 319  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00458	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0045b	50		 push	 eax
  0045c	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  00461	83 f8 01	 cmp	 eax, 1
  00464	75 17		 jne	 SHORT $LN25@draw_local

; 320  : 			{
; 321  : 				search.result_sub_object->visible_object = draw_loading_doors;

  00466	8b 45 e8	 mov	 eax, DWORD PTR _draw_loading_doors$5[ebp]
  00469	83 e0 01	 and	 eax, 1
  0046c	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  0046f	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00472	83 e2 fe	 and	 edx, -2			; fffffffeH
  00475	0b d0		 or	 edx, eax
  00477	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  0047a	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN25@draw_local:

; 322  : 			}
; 323  : 
; 324  : 			search.search_depth = 1;

  0047d	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 1

; 325  : 			search.search_object = raw->ac.inst3d;

  00484	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00487	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0048d	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 326  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_LOADING_DOOR;

  00490	c7 45 b8 31 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 49 ; 00000031H

; 327  : 
; 328  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00497	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  0049a	50		 push	 eax
  0049b	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  004a0	83 f8 01	 cmp	 eax, 1
  004a3	75 17		 jne	 SHORT $LN26@draw_local

; 329  : 			{
; 330  : 				search.result_sub_object->visible_object = draw_loading_doors;

  004a5	8b 45 e8	 mov	 eax, DWORD PTR _draw_loading_doors$5[ebp]
  004a8	83 e0 01	 and	 eax, 1
  004ab	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  004ae	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  004b1	83 e2 fe	 and	 edx, -2			; fffffffeH
  004b4	0b d0		 or	 edx, eax
  004b6	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  004b9	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN26@draw_local:

; 331  : 			}
; 332  : 
; 333  : 			//
; 334  : 			// ejector seats & crew
; 335  : 			//
; 336  : 
; 337  : 			search.search_depth = 0;

  004bc	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 338  : 			search.search_object = raw->ac.inst3d;

  004c3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  004c6	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  004cc	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 339  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_KA52_EJECTOR_SEAT;

  004cf	c7 45 b8 c4 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 196 ; 000000c4H

; 340  : 
; 341  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  004d6	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  004d9	50		 push	 eax
  004da	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  004df	83 f8 01	 cmp	 eax, 1
  004e2	75 36		 jne	 SHORT $LN27@draw_local

; 342  : 			{
; 343  : 				search.result_sub_object->visible_object = !ejected;

  004e4	83 7d e4 00	 cmp	 DWORD PTR _ejected$4[ebp], 0
  004e8	75 0c		 jne	 SHORT $LN64@draw_local
  004ea	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv251[ebp], 1
  004f4	eb 0a		 jmp	 SHORT $LN65@draw_local
$LN64@draw_local:
  004f6	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv251[ebp], 0
$LN65@draw_local:
  00500	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv251[ebp]
  00506	83 e0 01	 and	 eax, 1
  00509	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  0050c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0050f	83 e2 fe	 and	 edx, -2			; fffffffeH
  00512	0b d0		 or	 edx, eax
  00514	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  00517	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN27@draw_local:

; 344  : 			}
; 345  : 
; 346  : 			search.search_depth = 1;

  0051a	c7 45 b4 01 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 1

; 347  : 			search.search_object = raw->ac.inst3d;

  00521	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00524	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  0052a	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 348  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_KA52_EJECTOR_SEAT;

  0052d	c7 45 b8 c4 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 196 ; 000000c4H

; 349  : 
; 350  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00534	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  00537	50		 push	 eax
  00538	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0053d	83 f8 01	 cmp	 eax, 1
  00540	75 36		 jne	 SHORT $LN28@draw_local

; 351  : 			{
; 352  : 				search.result_sub_object->visible_object = !ejected;

  00542	83 7d e4 00	 cmp	 DWORD PTR _ejected$4[ebp], 0
  00546	75 0c		 jne	 SHORT $LN66@draw_local
  00548	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv263[ebp], 1
  00552	eb 0a		 jmp	 SHORT $LN67@draw_local
$LN66@draw_local:
  00554	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv263[ebp], 0
$LN67@draw_local:
  0055e	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv263[ebp]
  00564	83 e0 01	 and	 eax, 1
  00567	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  0056a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0056d	83 e2 fe	 and	 edx, -2			; fffffffeH
  00570	0b d0		 or	 edx, eax
  00572	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  00575	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN28@draw_local:

; 353  : 			}
; 354  : 			break;

  00578	e9 d3 00 00 00	 jmp	 $LN2@draw_local
$LN29@draw_local:

; 355  : 		}
; 356  : 		case OBJECT_3D_AH1Z:
; 357  : 		{
; 358  : 			draw_virtual_cockpit_parts = internal_view;

  0057d	8b 45 f8	 mov	 eax, DWORD PTR _internal_view$[ebp]
  00580	89 45 f0	 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], eax

; 359  : 
; 360  : 			search.search_depth = 0;

  00583	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 361  : 			search.search_object = raw->ac.inst3d;

  0058a	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0058d	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00593	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 362  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_RAH66_FUSELAGE;

  00596	c7 45 b8 f0 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 240 ; 000000f0H

; 363  : 
; 364  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  0059d	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  005a0	50		 push	 eax
  005a1	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  005a6	83 f8 01	 cmp	 eax, 1
  005a9	75 36		 jne	 SHORT $LN30@draw_local

; 365  : 			{
; 366  : 				search.result_sub_object->visible_object = !draw_virtual_cockpit_parts;

  005ab	83 7d f0 00	 cmp	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0
  005af	75 0c		 jne	 SHORT $LN68@draw_local
  005b1	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv275[ebp], 1
  005bb	eb 0a		 jmp	 SHORT $LN69@draw_local
$LN68@draw_local:
  005bd	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv275[ebp], 0
$LN69@draw_local:
  005c7	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv275[ebp]
  005cd	83 e0 01	 and	 eax, 1
  005d0	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  005d3	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  005d6	83 e2 fe	 and	 edx, -2			; fffffffeH
  005d9	0b d0		 or	 edx, eax
  005db	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  005de	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN30@draw_local:

; 367  : 			}
; 368  : 			break;

  005e1	eb 6d		 jmp	 SHORT $LN2@draw_local
$LN31@draw_local:

; 369  : 		}
; 370  : 		case OBJECT_3D_OH58D:
; 371  : 		{
; 372  : 			draw_virtual_cockpit_parts = internal_view;

  005e3	8b 45 f8	 mov	 eax, DWORD PTR _internal_view$[ebp]
  005e6	89 45 f0	 mov	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], eax

; 373  : 
; 374  : 			search.search_depth = 0;

  005e9	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _search$3[ebp+8], 0

; 375  : 			search.search_object = raw->ac.inst3d;

  005f0	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  005f3	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  005f9	89 4d ac	 mov	 DWORD PTR _search$3[ebp], ecx

; 376  : 			search.sub_object_index = OBJECT_3D_SUB_OBJECT_RAH66_FUSELAGE;

  005fc	c7 45 b8 f0 00
	00 00		 mov	 DWORD PTR _search$3[ebp+12], 240 ; 000000f0H

; 377  : 
; 378  : 			if (find_object_3d_sub_object (&search) == SUB_OBJECT_SEARCH_RESULT_OBJECT_FOUND)

  00603	8d 45 ac	 lea	 eax, DWORD PTR _search$3[ebp]
  00606	50		 push	 eax
  00607	e8 00 00 00 00	 call	 ?find_object_3d_sub_object@@YG?AW4SUB_OBJECT_SEARCH_RESULT_TYPES@@PAUOBJECT_3D_SUB_OBJECT_SEARCH_DATA@@@Z ; find_object_3d_sub_object
  0060c	83 f8 01	 cmp	 eax, 1
  0060f	75 36		 jne	 SHORT $LN32@draw_local

; 379  : 			{
; 380  : 				search.result_sub_object->visible_object = !draw_virtual_cockpit_parts;

  00611	83 7d f0 00	 cmp	 DWORD PTR _draw_virtual_cockpit_parts$7[ebp], 0
  00615	75 0c		 jne	 SHORT $LN70@draw_local
  00617	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv287[ebp], 1
  00621	eb 0a		 jmp	 SHORT $LN71@draw_local
$LN70@draw_local:
  00623	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv287[ebp], 0
$LN71@draw_local:
  0062d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv287[ebp]
  00633	83 e0 01	 and	 eax, 1
  00636	8b 4d b0	 mov	 ecx, DWORD PTR _search$3[ebp+4]
  00639	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0063c	83 e2 fe	 and	 edx, -2			; fffffffeH
  0063f	0b d0		 or	 edx, eax
  00641	8b 45 b0	 mov	 eax, DWORD PTR _search$3[ebp+4]
  00644	89 50 08	 mov	 DWORD PTR [eax+8], edx
$LN32@draw_local:

; 381  : 			}
; 382  : 			break;

  00647	eb 07		 jmp	 SHORT $LN2@draw_local
$LN33@draw_local:

; 383  : 		}
; 384  : 		default:
; 385  : 		{
; 386  : 			draw_gunship = FALSE;

  00649	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _draw_gunship$[ebp], 0
$LN2@draw_local:

; 387  : 			break;
; 388  : 		}
; 389  : 		}
; 390  : 	}
; 391  : 
; 392  : 	////////////////////////////////////////
; 393  : 
; 394  : 	if (en == get_gunship_entity ())

  00650	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00653	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?gunship_entity@@3PAUENTITY@@A ; gunship_entity
  00659	0f 85 69 02 00
	00		 jne	 $LN34@draw_local

; 395  : 	{
; 396  : 		//
; 397  : 		// update viewpoint
; 398  : 		//
; 399  : 
; 400  : 		raw->ac.inst3d->vp.position = raw->ac.mob.position;

  0065f	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00662	83 c0 04	 add	 eax, 4
  00665	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00668	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  0066e	83 c2 08	 add	 edx, 8
  00671	8b 08		 mov	 ecx, DWORD PTR [eax]
  00673	89 0a		 mov	 DWORD PTR [edx], ecx
  00675	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00678	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0067b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0067e	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 401  : 
; 402  : 		memcpy (&raw->ac.inst3d->vp.attitude, &raw->ac.mob.attitude, sizeof (matrix3x3));

  00681	6a 24		 push	 36			; 00000024H
  00683	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00686	83 c0 10	 add	 eax, 16			; 00000010H
  00689	50		 push	 eax
  0068a	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0068d	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00693	83 c2 14	 add	 edx, 20			; 00000014H
  00696	52		 push	 edx
  00697	e8 00 00 00 00	 call	 _memcpy
  0069c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 403  : 
; 404  : 		//
; 405  : 		// animate
; 406  : 		//
; 407  : 
; 408  : 		if (!internal_view)

  0069f	83 7d f8 00	 cmp	 DWORD PTR _internal_view$[ebp], 0
  006a3	75 2b		 jne	 SHORT $LN38@draw_local

; 409  : 		{
; 410  : 			if (raw->main_rotor_damaged)

  006a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  006a8	8b 88 b0 01 00
	00		 mov	 ecx, DWORD PTR [eax+432]
  006ae	c1 e9 03	 shr	 ecx, 3
  006b1	83 e1 01	 and	 ecx, 1
  006b4	74 0d		 je	 SHORT $LN37@draw_local

; 411  : 			{
; 412  : 				animate_damaged_helicopter_main_rotors (en, TRUE);

  006b6	6a 01		 push	 1
  006b8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006bb	50		 push	 eax
  006bc	e8 00 00 00 00	 call	 ?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z ; animate_damaged_helicopter_main_rotors

; 413  : 			}
; 414  : 			else

  006c1	eb 0d		 jmp	 SHORT $LN38@draw_local
$LN37@draw_local:

; 415  : 			{
; 416  : 				animate_helicopter_main_rotors (en, TRUE, FALSE);

  006c3	6a 00		 push	 0
  006c5	6a 01		 push	 1
  006c7	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ca	50		 push	 eax
  006cb	e8 00 00 00 00	 call	 ?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z ; animate_helicopter_main_rotors
$LN38@draw_local:

; 417  : 			}
; 418  : 		}
; 419  : 
; 420  : 		animate_helicopter_tail_rotor (en);

  006d0	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006d3	50		 push	 eax
  006d4	e8 00 00 00 00	 call	 ?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z ; animate_helicopter_tail_rotor

; 421  : 
; 422  : 		animate_helicopter_wipers (en);

  006d9	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006dc	50		 push	 eax
  006dd	e8 00 00 00 00	 call	 ?animate_helicopter_wipers@@YGXPAUENTITY@@@Z ; animate_helicopter_wipers

; 423  : 
; 424  : 		animate_helicopter_eo (en);

  006e2	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006e5	50		 push	 eax
  006e6	e8 00 00 00 00	 call	 ?animate_helicopter_eo@@YGXPAUENTITY@@@Z ; animate_helicopter_eo

; 425  : 
; 426  : 		animate_helicopter_suspension (en);

  006eb	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 ?animate_helicopter_suspension@@YGXPAUENTITY@@@Z ; animate_helicopter_suspension

; 427  : 
; 428  : 		animate_helicopter_wheels (en);

  006f4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  006f7	50		 push	 eax
  006f8	e8 00 00 00 00	 call	 ?animate_helicopter_wheels@@YGXPAUENTITY@@@Z ; animate_helicopter_wheels

; 429  : 
; 430  : 		animate_aircraft_loading_doors (en);

  006fd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00700	50		 push	 eax
  00701	e8 00 00 00 00	 call	 ?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_loading_doors

; 431  : 
; 432  : 		animate_aircraft_cargo_doors (en);

  00706	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00709	50		 push	 eax
  0070a	e8 00 00 00 00	 call	 ?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_cargo_doors

; 433  : 
; 434  : 		animate_aircraft_undercarriage (en);

  0070f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00712	50		 push	 eax
  00713	e8 00 00 00 00	 call	 ?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; animate_aircraft_undercarriage

; 435  : 
; 436  : 		animate_aircraft_weapon_system_ready (en);

  00718	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0071b	50		 push	 eax
  0071c	e8 00 00 00 00	 call	 ?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; animate_aircraft_weapon_system_ready

; 437  : 
; 438  : 		animate_aircraft_shadow (en);

  00721	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00724	50		 push	 eax
  00725	e8 00 00 00 00	 call	 ?animate_aircraft_shadow@@YGXPAUENTITY@@@Z ; animate_aircraft_shadow

; 439  : 
; 440  : 		animate_aircraft_rudder (en);

  0072a	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0072d	50		 push	 eax
  0072e	e8 00 00 00 00	 call	 ?animate_aircraft_rudder@@YGXPAUENTITY@@@Z ; animate_aircraft_rudder

; 441  : 
; 442  : 		raw->ac.inst3d->object_internal_lighting = object_internal_lighting_valid (en);

  00733	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00736	50		 push	 eax
  00737	e8 00 00 00 00	 call	 ?object_internal_lighting_valid@@YGHPAUENTITY@@@Z ; object_internal_lighting_valid
  0073c	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv339[ebp], eax
  00742	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00745	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  0074b	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv339[ebp]
  00751	83 e0 01	 and	 eax, 1
  00754	c1 e0 03	 shl	 eax, 3
  00757	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  0075a	83 e1 f7	 and	 ecx, -9			; fffffff7H
  0075d	0b c8		 or	 ecx, eax
  0075f	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00762	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00768	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 443  : 
; 444  : 		raw->ac.inst3d->object_sprite_lights = (raw->ac.inst3d->object_internal_lighting && sprite_light_valid (en));

  0076b	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  0076e	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00774	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00777	c1 ea 03	 shr	 edx, 3
  0077a	83 e2 01	 and	 edx, 1
  0077d	74 19		 je	 SHORT $LN72@draw_local
  0077f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00782	50		 push	 eax
  00783	e8 00 00 00 00	 call	 ?sprite_light_valid@@YGHPAUENTITY@@@Z ; sprite_light_valid
  00788	85 c0		 test	 eax, eax
  0078a	74 0c		 je	 SHORT $LN72@draw_local
  0078c	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv359[ebp], 1
  00796	eb 0a		 jmp	 SHORT $LN73@draw_local
$LN72@draw_local:
  00798	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv359[ebp], 0
$LN73@draw_local:
  007a2	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  007a5	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  007ab	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv359[ebp]
  007b1	83 e0 01	 and	 eax, 1
  007b4	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  007b7	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  007ba	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH
  007c0	0b c8		 or	 ecx, eax
  007c2	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  007c5	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  007cb	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 445  : 
; 446  : 		//
; 447  : 		// draw
; 448  : 		//
; 449  : 
; 450  : 		if (!internal_view)

  007ce	83 7d f8 00	 cmp	 DWORD PTR _internal_view$[ebp], 0
  007d2	75 31		 jne	 SHORT $LN39@draw_local

; 451  : 		{
; 452  : 			if (!in_flight_invisible_object)

  007d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?in_flight_invisible_object@@3HA, 0 ; in_flight_invisible_object
  007db	75 23		 jne	 SHORT $LN41@draw_local

; 453  : 			{
; 454  : 				animate_and_draw_entity_muzzle_flash_effect (en);

  007dd	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  007e0	50		 push	 eax
  007e1	e8 00 00 00 00	 call	 ?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ; animate_and_draw_entity_muzzle_flash_effect

; 455  : 
; 456  : 				insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, raw->ac.inst3d);

  007e6	51		 push	 ecx
  007e7	0f 57 c0	 xorps	 xmm0, xmm0
  007ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ef	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  007f2	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  007f8	51		 push	 ecx
  007f9	6a 01		 push	 1
  007fb	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene
$LN41@draw_local:

; 457  : 			}
; 458  : 		}
; 459  : 		else

  00800	e9 be 00 00 00	 jmp	 $LN45@draw_local
$LN39@draw_local:

; 460  : 		{
; 461  : 			if (get_comanche_hokum_gunship () && draw_gunship)

  00805	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+12
  0080a	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR ?new_gunship@@3QBDB[eax]
  00811	85 c9		 test	 ecx, ecx
  00813	0f 84 aa 00 00
	00		 je	 $LN45@draw_local
  00819	83 7d f4 00	 cmp	 DWORD PTR _draw_gunship$[ebp], 0
  0081d	0f 84 a0 00 00
	00		 je	 $LN45@draw_local

; 462  : 			{
; 463  : 				if (get_global_draw_cockpit_graphics ())

  00823	83 3d b8 01 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+440, 0
  0082a	0f 84 93 00 00
	00		 je	 $LN45@draw_local

; 464  : 				{
; 465  : 					if (!get_global_glass_cockpit ())

  00830	83 3d 68 03 00
	00 00		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+872, 0
  00837	0f 85 86 00 00
	00		 jne	 $LN45@draw_local

; 466  : 					{
; 467  : 						if
; 468  : 						(
; 469  : 							(get_view_mode () == VIEW_MODE_VIRTUAL_COCKPIT_CREW) ||

  0083d	83 3d 00 00 00
	00 23		 cmp	 DWORD PTR ?view_mode@@3W4VIEW_MODES@@A, 35 ; view_mode, 00000023H
  00844	74 09		 je	 SHORT $LN46@draw_local
  00846	83 3d 78 03 00
	00 02		 cmp	 DWORD PTR ?global_options@@3UGLOBAL_OPTIONS_DATA@@A+888, 2
  0084d	75 74		 jne	 SHORT $LN45@draw_local
$LN46@draw_local:

; 470  : 							(get_global_cockpit_detail_level () == COCKPIT_DETAIL_LEVEL_HIGH)
; 471  : 						)
; 472  : 						{
; 473  : 							animate_and_draw_entity_muzzle_flash_effect (en);

  0084f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00852	50		 push	 eax
  00853	e8 00 00 00 00	 call	 ?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ; animate_and_draw_entity_muzzle_flash_effect

; 474  : 
; 475  : 							raw->ac.inst3d->vp.position = virtual_cockpit_inst3d->vp.position;

  00858	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  0085d	83 c0 08	 add	 eax, 8
  00860	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00863	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00869	83 c2 08	 add	 edx, 8
  0086c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0086e	89 0a		 mov	 DWORD PTR [edx], ecx
  00870	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00873	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00876	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00879	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 476  : 
; 477  : 							memcpy (&raw->ac.inst3d->vp.attitude, &virtual_cockpit_inst3d->vp.attitude, sizeof (matrix3x3));

  0087c	6a 24		 push	 36			; 00000024H
  0087e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?virtual_cockpit_inst3d@@3PAUOBJECT_3D_INSTANCE@@A ; virtual_cockpit_inst3d
  00883	83 c0 14	 add	 eax, 20			; 00000014H
  00886	50		 push	 eax
  00887	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  0088a	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00890	83 c2 14	 add	 edx, 20			; 00000014H
  00893	52		 push	 edx
  00894	e8 00 00 00 00	 call	 _memcpy
  00899	83 c4 0c	 add	 esp, 12			; 0000000cH

; 478  : 
; 479  : 							insert_relative_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_ZBUFFERED_OBJECT, &raw->ac.inst3d->vp.position, raw->ac.inst3d);

  0089c	51		 push	 ecx
  0089d	0f 57 c0	 xorps	 xmm0, xmm0
  008a0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  008a5	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008a8	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  008ae	51		 push	 ecx
  008af	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  008b2	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  008b8	83 c0 08	 add	 eax, 8
  008bb	50		 push	 eax
  008bc	6a 02		 push	 2
  008be	e8 00 00 00 00	 call	 ?insert_zbiased_relative_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAUVEC3D@@PAXM@Z ; insert_zbiased_relative_object_into_3d_scene
$LN45@draw_local:

; 480  : 						}
; 481  : 					}
; 482  : 				}
; 483  : 			}
; 484  : 		}
; 485  : 	}
; 486  : 	else

  008c3	e9 d9 01 00 00	 jmp	 $LN35@draw_local
$LN34@draw_local:

; 487  : 	{
; 488  : 		//
; 489  : 		// update viewpoint
; 490  : 		//
; 491  : 
; 492  : 		raw->ac.inst3d->vp.position = raw->ac.mob.position;

  008c8	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008cb	83 c0 04	 add	 eax, 4
  008ce	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  008d1	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  008d7	83 c2 08	 add	 edx, 8
  008da	8b 08		 mov	 ecx, DWORD PTR [eax]
  008dc	89 0a		 mov	 DWORD PTR [edx], ecx
  008de	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  008e1	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  008e4	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  008e7	89 42 08	 mov	 DWORD PTR [edx+8], eax

; 493  : 
; 494  : 		memcpy (&raw->ac.inst3d->vp.attitude, &raw->ac.mob.attitude, sizeof (matrix3x3));

  008ea	6a 24		 push	 36			; 00000024H
  008ec	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  008ef	83 c0 10	 add	 eax, 16			; 00000010H
  008f2	50		 push	 eax
  008f3	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  008f6	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  008fc	83 c2 14	 add	 edx, 20			; 00000014H
  008ff	52		 push	 edx
  00900	e8 00 00 00 00	 call	 _memcpy
  00905	83 c4 0c	 add	 esp, 12			; 0000000cH

; 495  : 
; 496  : 		//
; 497  : 		// animate
; 498  : 		//
; 499  : 
; 500  : 		if (get_local_entity_int_value (en, INT_TYPE_ALIVE))

  00908	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0090c	74 0d		 je	 SHORT $LN74@draw_local
  0090e	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00911	8b 08		 mov	 ecx, DWORD PTR [eax]
  00913	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv434[ebp], ecx
  00919	eb 20		 jmp	 SHORT $LN75@draw_local
$LN74@draw_local:
  0091b	68 f4 01 00 00	 push	 500			; 000001f4H
  00920	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00925	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  0092b	52		 push	 edx
  0092c	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00931	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv434[ebp], 0
$LN75@draw_local:
  0093b	b8 01 00 00 00	 mov	 eax, 1
  00940	85 c0		 test	 eax, eax
  00942	74 0c		 je	 SHORT $LN76@draw_local
  00944	c7 85 5c ff ff
	ff 07 00 00 00	 mov	 DWORD PTR tv441[ebp], 7
  0094e	eb 20		 jmp	 SHORT $LN77@draw_local
$LN76@draw_local:
  00950	68 f4 01 00 00	 push	 500			; 000001f4H
  00955	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  0095a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00960	51		 push	 ecx
  00961	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00966	c7 85 5c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv441[ebp], 0
$LN77@draw_local:
  00970	6a 07		 push	 7
  00972	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  00975	52		 push	 edx
  00976	69 85 60 ff ff
	ff 5c 04 00 00	 imul	 eax, DWORD PTR tv434[ebp], 1116
  00980	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv441[ebp]
  00986	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0098d	ff d2		 call	 edx
  0098f	85 c0		 test	 eax, eax
  00991	74 0f		 je	 SHORT $LN47@draw_local

; 501  : 		{
; 502  : 			animate_helicopter_main_rotors (en, FALSE, FALSE);

  00993	6a 00		 push	 0
  00995	6a 00		 push	 0
  00997	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0099a	50		 push	 eax
  0099b	e8 00 00 00 00	 call	 ?animate_helicopter_main_rotors@@YGXPAUENTITY@@HH@Z ; animate_helicopter_main_rotors

; 503  : 		}
; 504  : 		else

  009a0	eb 0b		 jmp	 SHORT $LN48@draw_local
$LN47@draw_local:

; 505  : 		{
; 506  : 			animate_damaged_helicopter_main_rotors (en, FALSE);

  009a2	6a 00		 push	 0
  009a4	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009a7	50		 push	 eax
  009a8	e8 00 00 00 00	 call	 ?animate_damaged_helicopter_main_rotors@@YGXPAUENTITY@@H@Z ; animate_damaged_helicopter_main_rotors
$LN48@draw_local:

; 507  : 		}
; 508  : 
; 509  : 		animate_helicopter_tail_rotor (en);

  009ad	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009b0	50		 push	 eax
  009b1	e8 00 00 00 00	 call	 ?animate_helicopter_tail_rotor@@YGXPAUENTITY@@@Z ; animate_helicopter_tail_rotor

; 510  : 
; 511  : 		animate_aircraft_loading_doors (en);

  009b6	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009b9	50		 push	 eax
  009ba	e8 00 00 00 00	 call	 ?animate_aircraft_loading_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_loading_doors

; 512  : 
; 513  : 		animate_aircraft_cargo_doors (en);

  009bf	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009c2	50		 push	 eax
  009c3	e8 00 00 00 00	 call	 ?animate_aircraft_cargo_doors@@YGXPAUENTITY@@@Z ; animate_aircraft_cargo_doors

; 514  : 
; 515  : 		animate_aircraft_undercarriage (en);

  009c8	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009cb	50		 push	 eax
  009cc	e8 00 00 00 00	 call	 ?animate_aircraft_undercarriage@@YGXPAUENTITY@@@Z ; animate_aircraft_undercarriage

; 516  : 
; 517  : 		animate_aircraft_weapon_system_ready (en);

  009d1	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009d4	50		 push	 eax
  009d5	e8 00 00 00 00	 call	 ?animate_aircraft_weapon_system_ready@@YGXPAUENTITY@@@Z ; animate_aircraft_weapon_system_ready

; 518  : 
; 519  : 		animate_aircraft_shadow (en);

  009da	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009dd	50		 push	 eax
  009de	e8 00 00 00 00	 call	 ?animate_aircraft_shadow@@YGXPAUENTITY@@@Z ; animate_aircraft_shadow

; 520  : 
; 521  : 		animate_and_draw_entity_muzzle_flash_effect (en);

  009e3	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009e6	50		 push	 eax
  009e7	e8 00 00 00 00	 call	 ?animate_and_draw_entity_muzzle_flash_effect@@YGXPAUENTITY@@@Z ; animate_and_draw_entity_muzzle_flash_effect

; 522  : 
; 523  : 		raw->ac.inst3d->object_internal_lighting = object_internal_lighting_valid (en);

  009ec	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  009ef	50		 push	 eax
  009f0	e8 00 00 00 00	 call	 ?object_internal_lighting_valid@@YGHPAUENTITY@@@Z ; object_internal_lighting_valid
  009f5	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv465[ebp], eax
  009fb	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  009fe	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00a04	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv465[ebp]
  00a0a	83 e0 01	 and	 eax, 1
  00a0d	c1 e0 03	 shl	 eax, 3
  00a10	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  00a13	83 e1 f7	 and	 ecx, -9			; fffffff7H
  00a16	0b c8		 or	 ecx, eax
  00a18	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00a1b	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00a21	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 524  : 
; 525  : 		raw->ac.inst3d->object_sprite_lights = (raw->ac.inst3d->object_internal_lighting && sprite_light_valid (en));

  00a24	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00a27	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00a2d	8b 51 50	 mov	 edx, DWORD PTR [ecx+80]
  00a30	c1 ea 03	 shr	 edx, 3
  00a33	83 e2 01	 and	 edx, 1
  00a36	74 19		 je	 SHORT $LN78@draw_local
  00a38	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00a3b	50		 push	 eax
  00a3c	e8 00 00 00 00	 call	 ?sprite_light_valid@@YGHPAUENTITY@@@Z ; sprite_light_valid
  00a41	85 c0		 test	 eax, eax
  00a43	74 0c		 je	 SHORT $LN78@draw_local
  00a45	c7 85 60 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv485[ebp], 1
  00a4f	eb 0a		 jmp	 SHORT $LN79@draw_local
$LN78@draw_local:
  00a51	c7 85 60 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv485[ebp], 0
$LN79@draw_local:
  00a5b	8b 4d fc	 mov	 ecx, DWORD PTR _raw$[ebp]
  00a5e	8b 91 84 00 00
	00		 mov	 edx, DWORD PTR [ecx+132]
  00a64	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv485[ebp]
  00a6a	83 e0 01	 and	 eax, 1
  00a6d	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  00a70	8b 4a 50	 mov	 ecx, DWORD PTR [edx+80]
  00a73	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH
  00a79	0b c8		 or	 ecx, eax
  00a7b	8b 55 fc	 mov	 edx, DWORD PTR _raw$[ebp]
  00a7e	8b 82 84 00 00
	00		 mov	 eax, DWORD PTR [edx+132]
  00a84	89 48 50	 mov	 DWORD PTR [eax+80], ecx

; 526  : 
; 527  : 		//
; 528  : 		// draw
; 529  : 		//
; 530  : 
; 531  : 		insert_object_into_3d_scene (OBJECT_3D_DRAW_TYPE_OBJECT, raw->ac.inst3d);

  00a87	51		 push	 ecx
  00a88	0f 57 c0	 xorps	 xmm0, xmm0
  00a8b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00a90	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00a93	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [eax+132]
  00a99	51		 push	 ecx
  00a9a	6a 01		 push	 1
  00a9c	e8 00 00 00 00	 call	 ?insert_zbiased_object_into_3d_scene@@YGXW4OBJECT_3D_DRAWING_TYPES@@PAXM@Z ; insert_zbiased_object_into_3d_scene
$LN35@draw_local:

; 532  : 	}
; 533  : 
; 534  : 	////////////////////////////////////////
; 535  : 	//
; 536  : 	// draw comanche and hokum shadows
; 537  : 	//
; 538  : 	////////////////////////////////////////
; 539  : 
; 540  : 	if (raw->ac.object_3d_shape == OBJECT_3D_RAH66)

  00aa1	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00aa4	81 b8 80 00 00
	00 f9 09 00 00	 cmp	 DWORD PTR [eax+128], 2553 ; 000009f9H
  00aae	75 33		 jne	 SHORT $LN49@draw_local

; 541  : 	{
; 542  : 		object_3d_instance
; 543  : 			*shadow_object;
; 544  : 
; 545  : 		shadow_object = construct_temporary_3d_object (OBJECT_3D_RAH66_FUSELAGE, FALSE);

  00ab0	6a 00		 push	 0
  00ab2	68 fa 09 00 00	 push	 2554			; 000009faH
  00ab7	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  00abc	89 45 a8	 mov	 DWORD PTR _shadow_object$2[ebp], eax

; 546  : 
; 547  : 		shadow_object->vp = raw->ac.inst3d->vp;

  00abf	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00ac2	8b b0 84 00 00
	00		 mov	 esi, DWORD PTR [eax+132]
  00ac8	83 c6 08	 add	 esi, 8
  00acb	8b 7d a8	 mov	 edi, DWORD PTR _shadow_object$2[ebp]
  00ace	83 c7 08	 add	 edi, 8
  00ad1	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00ad6	f3 a5		 rep movsd

; 548  : 
; 549  : 		insert_object_shadow_into_3d_scene (shadow_object);

  00ad8	8b 45 a8	 mov	 eax, DWORD PTR _shadow_object$2[ebp]
  00adb	50		 push	 eax
  00adc	e8 00 00 00 00	 call	 ?insert_object_shadow_into_3d_scene@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; insert_object_shadow_into_3d_scene
  00ae1	eb 40		 jmp	 SHORT $LN51@draw_local
$LN49@draw_local:

; 550  : 	}
; 551  : 	else if (raw->ac.object_3d_shape == OBJECT_3D_KA_52)

  00ae3	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00ae6	81 b8 80 00 00
	00 f1 09 00 00	 cmp	 DWORD PTR [eax+128], 2545 ; 000009f1H
  00af0	75 31		 jne	 SHORT $LN51@draw_local

; 552  : 	{
; 553  : 		object_3d_instance
; 554  : 			*shadow_object;
; 555  : 
; 556  : 		shadow_object = construct_temporary_3d_object (OBJECT_3D_KA_52_FUSELAGE, FALSE);

  00af2	6a 00		 push	 0
  00af4	68 f3 09 00 00	 push	 2547			; 000009f3H
  00af9	e8 00 00 00 00	 call	 ?construct_temporary_3d_object@@YGPAUOBJECT_3D_INSTANCE@@HH@Z ; construct_temporary_3d_object
  00afe	89 45 a4	 mov	 DWORD PTR _shadow_object$1[ebp], eax

; 557  : 
; 558  : 		shadow_object->vp = raw->ac.inst3d->vp;

  00b01	8b 45 fc	 mov	 eax, DWORD PTR _raw$[ebp]
  00b04	8b b0 84 00 00
	00		 mov	 esi, DWORD PTR [eax+132]
  00b0a	83 c6 08	 add	 esi, 8
  00b0d	8b 7d a4	 mov	 edi, DWORD PTR _shadow_object$1[ebp]
  00b10	83 c7 08	 add	 edi, 8
  00b13	b9 0c 00 00 00	 mov	 ecx, 12			; 0000000cH
  00b18	f3 a5		 rep movsd

; 559  : 
; 560  : 		insert_object_shadow_into_3d_scene (shadow_object);

  00b1a	8b 45 a4	 mov	 eax, DWORD PTR _shadow_object$1[ebp]
  00b1d	50		 push	 eax
  00b1e	e8 00 00 00 00	 call	 ?insert_object_shadow_into_3d_scene@@YGXPAUOBJECT_3D_INSTANCE@@@Z ; insert_object_shadow_into_3d_scene
$LN51@draw_local:

; 561  : 	}
; 562  : 
; 563  : 	////////////////////////////////////////
; 564  : 
; 565  : 	////////////////////////////////////////
; 566  : 	// Xhit: added for downwash effect. (030328)
; 567  : 	// VJ 030512 changed from no_downbwash to downwash
; 568  : 	////////////////////////////////////////
; 569  : 	if(command_line_downwash)

  00b23	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?command_line_downwash@@3HA, 0 ; command_line_downwash
  00b2a	74 09		 je	 SHORT $LN52@draw_local

; 570  : 	{
; 571  : 		draw_downwash_effect(en);

  00b2c	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00b2f	50		 push	 eax
  00b30	e8 00 00 00 00	 call	 ?draw_downwash_effect@@YGXPAUENTITY@@@Z ; draw_downwash_effect
$LN52@draw_local:

; 572  : 	}
; 573  : 	////////////////////////////////////////
; 574  : 
; 575  : 	#if DEBUG_MODULE
; 576  : 
; 577  : 	if (en == get_external_view_entity ())
; 578  : 	{
; 579  : 		draw_mobile_entity_debug_info (en);
; 580  : 	}
; 581  : 
; 582  : 	#endif
; 583  : }

  00b35	5f		 pop	 edi
  00b36	5e		 pop	 esi
  00b37	5b		 pop	 ebx
  00b38	8b e5		 mov	 esp, ebp
  00b3a	5d		 pop	 ebp
  00b3b	c2 08 00	 ret	 8
  00b3e	66 90		 npad	 2
$LN81@draw_local:
  00b40	00 00 00 00	 DD	 $LN15@draw_local
  00b44	00 00 00 00	 DD	 $LN31@draw_local
  00b48	00 00 00 00	 DD	 $LN6@draw_local
  00b4c	00 00 00 00	 DD	 $LN29@draw_local
  00b50	00 00 00 00	 DD	 $LN33@draw_local
$LN80@draw_local:
  00b54	00		 DB	 0
  00b55	04		 DB	 4
  00b56	04		 DB	 4
  00b57	04		 DB	 4
  00b58	04		 DB	 4
  00b59	01		 DB	 1
  00b5a	04		 DB	 4
  00b5b	04		 DB	 4
  00b5c	02		 DB	 2
  00b5d	04		 DB	 4
  00b5e	04		 DB	 4
  00b5f	04		 DB	 4
  00b60	04		 DB	 4
  00b61	04		 DB	 4
  00b62	04		 DB	 4
  00b63	04		 DB	 4
  00b64	04		 DB	 4
  00b65	04		 DB	 4
  00b66	04		 DB	 4
  00b67	04		 DB	 4
  00b68	04		 DB	 4
  00b69	04		 DB	 4
  00b6a	04		 DB	 4
  00b6b	04		 DB	 4
  00b6c	04		 DB	 4
  00b6d	04		 DB	 4
  00b6e	04		 DB	 4
  00b6f	04		 DB	 4
  00b70	04		 DB	 4
  00b71	04		 DB	 4
  00b72	04		 DB	 4
  00b73	04		 DB	 4
  00b74	04		 DB	 4
  00b75	04		 DB	 4
  00b76	04		 DB	 4
  00b77	04		 DB	 4
  00b78	04		 DB	 4
  00b79	04		 DB	 4
  00b7a	04		 DB	 4
  00b7b	04		 DB	 4
  00b7c	04		 DB	 4
  00b7d	04		 DB	 4
  00b7e	04		 DB	 4
  00b7f	04		 DB	 4
  00b80	04		 DB	 4
  00b81	04		 DB	 4
  00b82	04		 DB	 4
  00b83	04		 DB	 4
  00b84	04		 DB	 4
  00b85	04		 DB	 4
  00b86	04		 DB	 4
  00b87	04		 DB	 4
  00b88	04		 DB	 4
  00b89	04		 DB	 4
  00b8a	04		 DB	 4
  00b8b	04		 DB	 4
  00b8c	04		 DB	 4
  00b8d	04		 DB	 4
  00b8e	04		 DB	 4
  00b8f	04		 DB	 4
  00b90	04		 DB	 4
  00b91	04		 DB	 4
  00b92	04		 DB	 4
  00b93	04		 DB	 4
  00b94	04		 DB	 4
  00b95	04		 DB	 4
  00b96	04		 DB	 4
  00b97	04		 DB	 4
  00b98	04		 DB	 4
  00b99	04		 DB	 4
  00b9a	04		 DB	 4
  00b9b	04		 DB	 4
  00b9c	04		 DB	 4
  00b9d	04		 DB	 4
  00b9e	04		 DB	 4
  00b9f	04		 DB	 4
  00ba0	04		 DB	 4
  00ba1	04		 DB	 4
  00ba2	04		 DB	 4
  00ba3	04		 DB	 4
  00ba4	04		 DB	 4
  00ba5	04		 DB	 4
  00ba6	04		 DB	 4
  00ba7	04		 DB	 4
  00ba8	04		 DB	 4
  00ba9	04		 DB	 4
  00baa	04		 DB	 4
  00bab	04		 DB	 4
  00bac	04		 DB	 4
  00bad	04		 DB	 4
  00bae	04		 DB	 4
  00baf	04		 DB	 4
  00bb0	04		 DB	 4
  00bb1	04		 DB	 4
  00bb2	04		 DB	 4
  00bb3	04		 DB	 4
  00bb4	04		 DB	 4
  00bb5	04		 DB	 4
  00bb6	04		 DB	 4
  00bb7	04		 DB	 4
  00bb8	04		 DB	 4
  00bb9	04		 DB	 4
  00bba	04		 DB	 4
  00bbb	04		 DB	 4
  00bbc	04		 DB	 4
  00bbd	04		 DB	 4
  00bbe	04		 DB	 4
  00bbf	04		 DB	 4
  00bc0	04		 DB	 4
  00bc1	04		 DB	 4
  00bc2	04		 DB	 4
  00bc3	04		 DB	 4
  00bc4	04		 DB	 4
  00bc5	04		 DB	 4
  00bc6	04		 DB	 4
  00bc7	04		 DB	 4
  00bc8	04		 DB	 4
  00bc9	04		 DB	 4
  00bca	04		 DB	 4
  00bcb	04		 DB	 4
  00bcc	04		 DB	 4
  00bcd	04		 DB	 4
  00bce	04		 DB	 4
  00bcf	04		 DB	 4
  00bd0	04		 DB	 4
  00bd1	04		 DB	 4
  00bd2	04		 DB	 4
  00bd3	04		 DB	 4
  00bd4	04		 DB	 4
  00bd5	04		 DB	 4
  00bd6	04		 DB	 4
  00bd7	04		 DB	 4
  00bd8	04		 DB	 4
  00bd9	04		 DB	 4
  00bda	04		 DB	 4
  00bdb	04		 DB	 4
  00bdc	04		 DB	 4
  00bdd	04		 DB	 4
  00bde	04		 DB	 4
  00bdf	04		 DB	 4
  00be0	04		 DB	 4
  00be1	04		 DB	 4
  00be2	04		 DB	 4
  00be3	04		 DB	 4
  00be4	04		 DB	 4
  00be5	04		 DB	 4
  00be6	04		 DB	 4
  00be7	04		 DB	 4
  00be8	04		 DB	 4
  00be9	04		 DB	 4
  00bea	04		 DB	 4
  00beb	04		 DB	 4
  00bec	04		 DB	 4
  00bed	04		 DB	 4
  00bee	04		 DB	 4
  00bef	04		 DB	 4
  00bf0	04		 DB	 4
  00bf1	04		 DB	 4
  00bf2	04		 DB	 4
  00bf3	04		 DB	 4
  00bf4	04		 DB	 4
  00bf5	04		 DB	 4
  00bf6	04		 DB	 4
  00bf7	04		 DB	 4
  00bf8	04		 DB	 4
  00bf9	04		 DB	 4
  00bfa	04		 DB	 4
  00bfb	04		 DB	 4
  00bfc	04		 DB	 4
  00bfd	04		 DB	 4
  00bfe	04		 DB	 4
  00bff	04		 DB	 4
  00c00	04		 DB	 4
  00c01	04		 DB	 4
  00c02	04		 DB	 4
  00c03	04		 DB	 4
  00c04	04		 DB	 4
  00c05	04		 DB	 4
  00c06	04		 DB	 4
  00c07	04		 DB	 4
  00c08	04		 DB	 4
  00c09	04		 DB	 4
  00c0a	04		 DB	 4
  00c0b	04		 DB	 4
  00c0c	04		 DB	 4
  00c0d	04		 DB	 4
  00c0e	04		 DB	 4
  00c0f	04		 DB	 4
  00c10	04		 DB	 4
  00c11	04		 DB	 4
  00c12	04		 DB	 4
  00c13	04		 DB	 4
  00c14	04		 DB	 4
  00c15	04		 DB	 4
  00c16	04		 DB	 4
  00c17	04		 DB	 4
  00c18	04		 DB	 4
  00c19	04		 DB	 4
  00c1a	04		 DB	 4
  00c1b	04		 DB	 4
  00c1c	04		 DB	 4
  00c1d	04		 DB	 4
  00c1e	04		 DB	 4
  00c1f	04		 DB	 4
  00c20	04		 DB	 4
  00c21	04		 DB	 4
  00c22	04		 DB	 4
  00c23	04		 DB	 4
  00c24	04		 DB	 4
  00c25	04		 DB	 4
  00c26	04		 DB	 4
  00c27	04		 DB	 4
  00c28	04		 DB	 4
  00c29	04		 DB	 4
  00c2a	04		 DB	 4
  00c2b	04		 DB	 4
  00c2c	04		 DB	 4
  00c2d	04		 DB	 4
  00c2e	04		 DB	 4
  00c2f	04		 DB	 4
  00c30	04		 DB	 4
  00c31	04		 DB	 4
  00c32	04		 DB	 4
  00c33	04		 DB	 4
  00c34	04		 DB	 4
  00c35	04		 DB	 4
  00c36	04		 DB	 4
  00c37	04		 DB	 4
  00c38	04		 DB	 4
  00c39	04		 DB	 4
  00c3a	04		 DB	 4
  00c3b	04		 DB	 4
  00c3c	04		 DB	 4
  00c3d	04		 DB	 4
  00c3e	04		 DB	 4
  00c3f	04		 DB	 4
  00c40	04		 DB	 4
  00c41	03		 DB	 3
?draw_local_3d_object@@YGXPAUENTITY@@M@Z ENDP		; draw_local_3d_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
;	COMDAT ?sprite_light_valid@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv76 = -80						; size = 4
_float_offset$ = -12					; size = 4
_val$ = -8						; size = 4
_integer_offset$ = -4					; size = 4
_en$ = 8						; size = 4
?sprite_light_valid@@YGHPAUENTITY@@@Z PROC		; sprite_light_valid, COMDAT

; 634  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 635  : 	int
; 636  : 		integer_offset;
; 637  : 
; 638  : 	float
; 639  : 		val,
; 640  : 		float_offset;
; 641  : 
; 642  : 	//
; 643  : 	// uses entity index to offset sprite lights so that they are not all flashing in sync on all objects
; 644  : 	//
; 645  : 
; 646  : 	integer_offset = get_local_entity_index (en);

  00009	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  0000c	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?entities@@3PAUENTITY@@A ; entities
  00012	c1 f8 04	 sar	 eax, 4
  00015	89 45 fc	 mov	 DWORD PTR _integer_offset$[ebp], eax

; 647  : 
; 648  : 	integer_offset = integer_offset & 0x0f;

  00018	8b 45 fc	 mov	 eax, DWORD PTR _integer_offset$[ebp]
  0001b	83 e0 0f	 and	 eax, 15			; 0000000fH
  0001e	89 45 fc	 mov	 DWORD PTR _integer_offset$[ebp], eax

; 649  : 
; 650  : 	float_offset = ((float)integer_offset) * 0.0625;

  00021	f3 0f 2a 45 fc	 cvtsi2ss xmm0, DWORD PTR _integer_offset$[ebp]
  00026	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0002a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fb0000000000000
  00032	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00036	f3 0f 11 45 f4	 movss	 DWORD PTR _float_offset$[ebp], xmm0

; 651  : 
; 652  : 	val = frac (sprite_light_timer + float_offset);

  0003b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sprite_light_timer@@3MA
  00043	f3 0f 58 45 f4	 addss	 xmm0, DWORD PTR _float_offset$[ebp]
  00048	51		 push	 ecx
  00049	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0004e	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00053	d9 5d f8	 fstp	 DWORD PTR _val$[ebp]

; 653  : 
; 654  : 	return (val < SPRITE_LIGHT_ON_THRESHOLD);

  00056	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _val$[ebp]
  0005b	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb999999999999a
  00063	66 0f 2f c8	 comisd	 xmm1, xmm0
  00067	76 09		 jbe	 SHORT $LN3@sprite_lig
  00069	c7 45 b0 01 00
	00 00		 mov	 DWORD PTR tv76[ebp], 1
  00070	eb 07		 jmp	 SHORT $LN4@sprite_lig
$LN3@sprite_lig:
  00072	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN4@sprite_lig:
  00079	8b 45 b0	 mov	 eax, DWORD PTR tv76[ebp]

; 655  : }

  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	5b		 pop	 ebx
  0007f	8b e5		 mov	 esp, ebp
  00081	5d		 pop	 ebp
  00082	c2 04 00	 ret	 4
?sprite_light_valid@@YGHPAUENTITY@@@Z ENDP		; sprite_light_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
;	COMDAT ?object_internal_lighting_valid@@YGHPAUENTITY@@@Z
_TEXT	SEGMENT
tv149 = -76						; size = 4
tv129 = -76						; size = 4
tv76 = -76						; size = 4
tv157 = -72						; size = 4
tv141 = -72						; size = 4
tv89 = -72						; size = 4
tv69 = -72						; size = 4
_day_segment_type$ = -4					; size = 4
_en$ = 8						; size = 4
?object_internal_lighting_valid@@YGHPAUENTITY@@@Z PROC	; object_internal_lighting_valid, COMDAT

; 599  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 600  : 	day_segment_types
; 601  : 		day_segment_type;
; 602  : 
; 603  : 	if (get_local_entity_int_value (en, INT_TYPE_PLAYER) != ENTITY_PLAYER_AI)

  00009	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0000d	74 0a		 je	 SHORT $LN5@object_int
  0000f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	89 4d b8	 mov	 DWORD PTR tv69[ebp], ecx
  00017	eb 1d		 jmp	 SHORT $LN6@object_int
$LN5@object_int:
  00019	68 5b 02 00 00	 push	 603			; 0000025bH
  0001e	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00023	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00029	52		 push	 edx
  0002a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0002f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv69[ebp], 0
$LN6@object_int:
  00036	b8 01 00 00 00	 mov	 eax, 1
  0003b	85 c0		 test	 eax, eax
  0003d	74 09		 je	 SHORT $LN7@object_int
  0003f	c7 45 b4 9c 00
	00 00		 mov	 DWORD PTR tv76[ebp], 156 ; 0000009cH
  00046	eb 1d		 jmp	 SHORT $LN8@object_int
$LN7@object_int:
  00048	68 5b 02 00 00	 push	 603			; 0000025bH
  0004d	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00052	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0005e	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv76[ebp], 0
$LN8@object_int:
  00065	68 9c 00 00 00	 push	 156			; 0000009cH
  0006a	8b 55 08	 mov	 edx, DWORD PTR _en$[ebp]
  0006d	52		 push	 edx
  0006e	69 45 b8 5c 04
	00 00		 imul	 eax, DWORD PTR tv69[ebp], 1116
  00075	8b 4d b4	 mov	 ecx, DWORD PTR tv76[ebp]
  00078	8b 94 88 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[eax+ecx*4]
  0007f	ff d2		 call	 edx
  00081	85 c0		 test	 eax, eax
  00083	0f 84 87 00 00
	00		 je	 $LN2@object_int

; 604  : 	{
; 605  : 		return (get_local_entity_int_value (en, INT_TYPE_LIGHTS_ON));

  00089	83 7d 08 00	 cmp	 DWORD PTR _en$[ebp], 0
  0008d	74 0a		 je	 SHORT $LN9@object_int
  0008f	8b 45 08	 mov	 eax, DWORD PTR _en$[ebp]
  00092	8b 08		 mov	 ecx, DWORD PTR [eax]
  00094	89 4d b8	 mov	 DWORD PTR tv89[ebp], ecx
  00097	eb 21		 jmp	 SHORT $LN10@object_int
$LN9@object_int:
  00099	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA
  0009f	83 c2 06	 add	 edx, 6
  000a2	52		 push	 edx
  000a3	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000b3	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv89[ebp], 0
$LN10@object_int:
  000ba	b9 01 00 00 00	 mov	 ecx, 1
  000bf	85 c9		 test	 ecx, ecx
  000c1	74 09		 je	 SHORT $LN11@object_int
  000c3	c7 45 b4 7a 00
	00 00		 mov	 DWORD PTR tv129[ebp], 122 ; 0000007aH
  000ca	eb 21		 jmp	 SHORT $LN12@object_int
$LN11@object_int:
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA
  000d2	83 c2 06	 add	 edx, 6
  000d5	52		 push	 edx
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  000db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  000e6	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv129[ebp], 0
$LN12@object_int:
  000ed	6a 7a		 push	 122			; 0000007aH
  000ef	8b 4d 08	 mov	 ecx, DWORD PTR _en$[ebp]
  000f2	51		 push	 ecx
  000f3	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv89[ebp], 1116
  000fa	8b 45 b4	 mov	 eax, DWORD PTR tv129[ebp]
  000fd	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00104	ff d1		 call	 ecx
  00106	e9 ac 00 00 00	 jmp	 $LN1@object_int

; 606  : 	}
; 607  : 	else

  0010b	e9 a7 00 00 00	 jmp	 $LN1@object_int
$LN2@object_int:

; 608  : 	{
; 609  : 		day_segment_type = (day_segment_types) get_local_entity_int_value (get_session_entity (), INT_TYPE_DAY_SEGMENT_TYPE);

  00110	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?session_entity@@3PAUENTITY@@A, 0 ; session_entity
  00117	74 0c		 je	 SHORT $LN13@object_int
  00119	a1 00 00 00 00	 mov	 eax, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  0011e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00120	89 4d b8	 mov	 DWORD PTR tv141[ebp], ecx
  00123	eb 21		 jmp	 SHORT $LN14@object_int
$LN13@object_int:
  00125	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA
  0012b	83 c2 0a	 add	 edx, 10			; 0000000aH
  0012e	52		 push	 edx
  0012f	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?null_entity_pointer_message@@3PBDB ; null_entity_pointer_message
  00139	50		 push	 eax
  0013a	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  0013f	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv141[ebp], 0
$LN14@object_int:
  00146	b9 01 00 00 00	 mov	 ecx, 1
  0014b	85 c9		 test	 ecx, ecx
  0014d	74 09		 je	 SHORT $LN15@object_int
  0014f	c7 45 b4 27 00
	00 00		 mov	 DWORD PTR tv149[ebp], 39 ; 00000027H
  00156	eb 21		 jmp	 SHORT $LN16@object_int
$LN15@object_int:
  00158	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?__LINE__Var@?0??object_internal_lighting_valid@@YGHPAUENTITY@@@Z@4JA
  0015e	83 c2 0a	 add	 edx, 10			; 0000000aH
  00161	52		 push	 edx
  00162	68 00 00 00 00	 push	 OFFSET ??_C@_0FF@LLAMJIGE@c?3?2users?2nhv90?2projects?2eech?2ap@
  00167	a1 00 00 00 00	 mov	 eax, DWORD PTR ?overload_invalid_int_type_message@@3PBDB ; overload_invalid_int_type_message
  0016c	50		 push	 eax
  0016d	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
  00172	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR tv149[ebp], 0
$LN16@object_int:
  00179	6a 27		 push	 39			; 00000027H
  0017b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?session_entity@@3PAUENTITY@@A ; session_entity
  00181	51		 push	 ecx
  00182	69 55 b8 5c 04
	00 00		 imul	 edx, DWORD PTR tv141[ebp], 1116
  00189	8b 45 b4	 mov	 eax, DWORD PTR tv149[ebp]
  0018c	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_get_local_entity_int_value@@3PAY0BBH@P6GHPAUENTITY@@W4INT_TYPES@@@ZA[edx+eax*4]
  00193	ff d1		 call	 ecx
  00195	89 45 fc	 mov	 DWORD PTR _day_segment_type$[ebp], eax

; 610  : 
; 611  : 		return ((day_segment_type == DAY_SEGMENT_TYPE_NIGHT) || (day_segment_type == DAY_SEGMENT_TYPE_DUSK));

  00198	83 7d fc 03	 cmp	 DWORD PTR _day_segment_type$[ebp], 3
  0019c	74 0f		 je	 SHORT $LN17@object_int
  0019e	83 7d fc 02	 cmp	 DWORD PTR _day_segment_type$[ebp], 2
  001a2	74 09		 je	 SHORT $LN17@object_int
  001a4	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR tv157[ebp], 0
  001ab	eb 07		 jmp	 SHORT $LN18@object_int
$LN17@object_int:
  001ad	c7 45 b8 01 00
	00 00		 mov	 DWORD PTR tv157[ebp], 1
$LN18@object_int:
  001b4	8b 45 b8	 mov	 eax, DWORD PTR tv157[ebp]
$LN1@object_int:

; 612  : 	}
; 613  : }

  001b7	5f		 pop	 edi
  001b8	5e		 pop	 esi
  001b9	5b		 pop	 ebx
  001ba	8b e5		 mov	 esp, ebp
  001bc	5d		 pop	 ebp
  001bd	c2 04 00	 ret	 4
?object_internal_lighting_valid@@YGHPAUENTITY@@@Z ENDP	; object_internal_lighting_valid
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
;	COMDAT ?update_helicopter_sprite_light_timers@@YGXXZ
_TEXT	SEGMENT
?update_helicopter_sprite_light_timers@@YGXXZ PROC	; update_helicopter_sprite_light_timers, COMDAT

; 620  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 621  : 	sprite_light_timer += (get_delta_time () * SPRITE_LIGHT_TIMER_FREQUENCY);

  00009	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?system_delta_time@@3MA
  00011	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00019	f3 0f 5a 0d 00
	00 00 00	 cvtss2sd xmm1, DWORD PTR ?sprite_light_timer@@3MA
  00021	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00025	f2 0f 5a c1	 cvtsd2ss xmm0, xmm1
  00029	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?sprite_light_timer@@3MA, xmm0

; 622  : 
; 623  : 	if (sprite_light_timer >= 1.0)

  00031	f3 0f 5a 05 00
	00 00 00	 cvtss2sd xmm0, DWORD PTR ?sprite_light_timer@@3MA
  00039	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3ff0000000000000
  00041	72 19		 jb	 SHORT $LN2@update_hel

; 624  : 	{
; 625  : 		sprite_light_timer = frac (sprite_light_timer);

  00043	51		 push	 ecx
  00044	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?sprite_light_timer@@3MA
  0004c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00051	e8 00 00 00 00	 call	 ?frac@@YGMM@Z		; frac
  00056	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?sprite_light_timer@@3MA
$LN2@update_hel:

; 626  : 	}
; 627  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
?update_helicopter_sprite_light_timers@@YGXXZ ENDP	; update_helicopter_sprite_light_timers
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\aphavoc\source\entity\mobile\aircraft\helicop\hc_draw.c
;	COMDAT ?overload_helicopter_draw_functions@@YGXXZ
_TEXT	SEGMENT
?overload_helicopter_draw_functions@@YGXXZ PROC		; overload_helicopter_draw_functions, COMDAT

; 590  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 591  : 	fn_draw_local_entity_3d_object[ENTITY_TYPE_HELICOPTER]	= draw_local_3d_object;

  00009	b8 04 00 00 00	 mov	 eax, 4
  0000e	6b c8 0e	 imul	 ecx, eax, 14
  00011	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fn_draw_local_entity_3d_object@@3PAP6GXPAUENTITY@@M@ZA[ecx], OFFSET ?draw_local_3d_object@@YGXPAUENTITY@@M@Z ; draw_local_3d_object

; 592  : }

  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi
  0001d	5b		 pop	 ebx
  0001e	8b e5		 mov	 esp, ebp
  00020	5d		 pop	 ebp
  00021	c3		 ret	 0
?overload_helicopter_draw_functions@@YGXXZ ENDP		; overload_helicopter_draw_functions
_TEXT	ENDS
END
