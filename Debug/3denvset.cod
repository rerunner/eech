; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\3d\3denvset.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_fabsf
PUBLIC	?fabs@@YGMM@Z					; fabs
PUBLIC	?create_3d_environment@@YGPAUENV_3D@@XZ		; create_3d_environment
PUBLIC	?destroy_3d_environment@@YGXPAUENV_3D@@@Z	; destroy_3d_environment
PUBLIC	?set_3d_active_environment@@YGXPAUENV_3D@@@Z	; set_3d_active_environment
PUBLIC	?set_3d_time_of_day@@YGXPAUENV_3D@@M@Z		; set_3d_time_of_day
PUBLIC	?set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z ; set_3d_weathermode
PUBLIC	?set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z ; set_3d_target_weathermode
PUBLIC	?set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z ; set_3d_target_weathermode_transitional_status
PUBLIC	?set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z ; set_3d_infrared_mode
PUBLIC	?set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z ; set_3d_render_filter
PUBLIC	?set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z ; set_3d_ambient_light
PUBLIC	?set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z ; set_3d_fog_colour
PUBLIC	?set_monochrome_mode@@YGXPAUENV_3D@@H@Z		; set_monochrome_mode
PUBLIC	?add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z ; add_3d_fog_setting
PUBLIC	?add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z ; add_3d_ambient_light_setting
PUBLIC	?add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z ; add_3d_sun_setting
PUBLIC	?add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z ; add_3d_moon_setting
PUBLIC	?add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z ; add_3d_cloud_light_setting
PUBLIC	?add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z ; add_3d_shadow_setting
PUBLIC	?add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z ; add_3d_light_to_environment
PUBLIC	?remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z ; remove_3d_light_from_environment
PUBLIC	?set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z ; set_global_3d_fog_scale_setting
PUBLIC	?recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z ; recalculate_3d_environment_settings
PUBLIC	?reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ; reset_3d_ambient_light_settings
PUBLIC	?initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z	; initialise_3d_moon_settings
PUBLIC	?initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_ambient_light_settings
PUBLIC	?initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z	; initialise_3d_fog_settings
PUBLIC	?initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z	; initialise_3d_sun_settings
PUBLIC	?initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_cloud_light_settings
PUBLIC	?initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_shadow_settings
PUBLIC	?calculate_3d_moon_light@@YGXPAUENV_3D@@@Z	; calculate_3d_moon_light
PUBLIC	?calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z	; calculate_3d_fog_settings
PUBLIC	?calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z	; calculate_3d_ambient_light
PUBLIC	?calculate_3d_sun_light@@YGXPAUENV_3D@@@Z	; calculate_3d_sun_light
PUBLIC	?calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z	; calculate_3d_cloud_light
PUBLIC	?calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z	; calculate_3d_shadow_light
PUBLIC	?set_3d_delta_time@@YGXPAUENV_3D@@M@Z		; set_3d_delta_time
PUBLIC	?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z ; interpolate_two_fog_settings
PUBLIC	?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z ; calculate_interpolated_fog_setting
PUBLIC	?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings
PUBLIC	?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting
PUBLIC	?reset_3d_fog_settings@@YGXPAUENV_3D@@@Z	; reset_3d_fog_settings
PUBLIC	?reset_3d_sun_settings@@YGXPAUENV_3D@@@Z	; reset_3d_sun_settings
PUBLIC	?reset_3d_moon_settings@@YGXPAUENV_3D@@@Z	; reset_3d_moon_settings
PUBLIC	?reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z ; reset_3d_cloud_light_settings
PUBLIC	?reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z	; reset_3d_shadow_settings
PUBLIC	?__LINE__Var@?0??create_3d_environment@@YGPAUENV_3D@@XZ@4JA ; `create_3d_environment'::`1'::__LINE__Var
PUBLIC	??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@ ; `string'
PUBLIC	??_C@_03OJGPBPII@env@				; `string'
PUBLIC	?__LINE__Var@?0??destroy_3d_environment@@YGXPAUENV_3D@@@Z@4JA ; `destroy_3d_environment'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_active_environment@@YGXPAUENV_3D@@@Z@4JA ; `set_3d_active_environment'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_time_of_day@@YGXPAUENV_3D@@M@Z@4JA ; `set_3d_time_of_day'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_delta_time@@YGXPAUENV_3D@@M@Z@4JA ; `set_3d_delta_time'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA ; `set_3d_weathermode'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA ; `set_3d_target_weathermode'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA ; `set_3d_target_weathermode_transitional_status'::`1'::__LINE__Var
PUBLIC	??_C@_0L@MHFEGEFF@value?5?$DO?$DN?50@		; `string'
PUBLIC	??_C@_0L@KEIPAGHE@value?5?$DM?$DN?51@		; `string'
PUBLIC	?__LINE__Var@?0??set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA ; `set_3d_infrared_mode'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA ; `set_3d_render_filter'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_fog_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_fog_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z@4JA ; `add_3d_fog_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_ambient_light_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_ambient_light_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z@4JA ; `add_3d_ambient_light_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_sun_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_sun_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA ; `add_3d_sun_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_moon_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_moon_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA ; `add_3d_moon_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_cloud_light_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_cloud_light_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z@4JA ; `add_3d_cloud_light_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA ; `initialise_3d_shadow_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA ; `reset_3d_shadow_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z@4JA ; `add_3d_shadow_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z@4JA ; `set_3d_ambient_light'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z@4JA ; `set_3d_fog_colour'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA ; `add_3d_light_to_environment'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z@4JA ; `set_global_3d_fog_scale_setting'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA ; `remove_3d_light_from_environment'::`1'::__LINE__Var
PUBLIC	??_C@_0FC@OINNIEM@Trying?5to?5remove?5light?5from?5env@ ; `string'
PUBLIC	?__LINE__Var@?0??recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z@4JA ; `recalculate_3d_environment_settings'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_fog_settings'::`1'::__LINE__Var
PUBLIC	??_C@_0FJ@LKGIJCIJ@Unable?5to?5calculate?5the?5fog?5lev@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_ambient_light'::`1'::__LINE__Var
PUBLIC	??_C@_0FM@HJMCEHMJ@Unable?5to?5calculate?5the?5ambient@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_3d_sun_light@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_sun_light'::`1'::__LINE__Var
PUBLIC	??_C@_0FA@IKHIBPAM@Unable?5to?5calculate?5the?5sun?5lig@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_3d_moon_light@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_moon_light'::`1'::__LINE__Var
PUBLIC	??_C@_0FB@EAADBOHM@Unable?5to?5calculate?5the?5moon?5li@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_cloud_light'::`1'::__LINE__Var
PUBLIC	??_C@_0FK@GLPNOACF@Unable?5to?5calculate?5the?5cloud?5l@ ; `string'
PUBLIC	?__LINE__Var@?0??calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z@4JA ; `calculate_3d_shadow_light'::`1'::__LINE__Var
PUBLIC	??_C@_0FL@KHNKDKAB@Unable?5to?5calculate?5the?5shadow?5@ ; `string'
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fbc28f5c28f5c29
PUBLIC	__real@3fd3333333333333
PUBLIC	__real@3fe2e147ae147ae1
PUBLIC	__real@406fe00000000000
PUBLIC	__real@40c90fdb
PUBLIC	__real@47a8c000
EXTRN	_memset:PROC
EXTRN	_fabs:PROC
EXTRN	?process_assert@@YGXPBD0H@Z:PROC		; process_assert
EXTRN	?debug_fatal@@YAXPBDZZ:PROC			; debug_fatal
EXTRN	?safe_malloc_memory@@YGPAXI@Z:PROC		; safe_malloc_memory
EXTRN	?safe_free@@YGXPAX@Z:PROC			; safe_free
EXTRN	?get_3d_transformation_matrix@@YGXQAY02MMMM@Z:PROC ; get_3d_transformation_matrix
EXTRN	?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z:PROC ; get_3d_weathermode
EXTRN	?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z:PROC ; get_3d_target_weathermode
EXTRN	?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z:PROC ; get_3d_target_weathermode_transitional_status
EXTRN	?realise_3d_clip_extents@@YGXPAUENV_3D@@@Z:PROC	; realise_3d_clip_extents
EXTRN	?realise_3d_lightmode@@YGXPAUENV_3D@@@Z:PROC	; realise_3d_lightmode
EXTRN	?realise_3d_viewpoint@@YGXPAUENV_3D@@@Z:PROC	; realise_3d_viewpoint
EXTRN	?realise_3d_fogmode@@YGXPAUENV_3D@@@Z:PROC	; realise_3d_fogmode
EXTRN	?realise_3d_shadow_setting@@YGXPAUENV_3D@@@Z:PROC ; realise_3d_shadow_setting
EXTRN	?destroy_all_3d_horizon_images@@YGXPAUENV_3D@@@Z:PROC ; destroy_all_3d_horizon_images
EXTRN	?update_3d_horizon@@YGXPAUENV_3D@@@Z:PROC	; update_3d_horizon
EXTRN	?set_3d_sun_position@@YGXMM@Z:PROC		; set_3d_sun_position
EXTRN	?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z:PROC	; set_3d_sun_colour
EXTRN	?set_3d_sun_light_intensity@@YGXM@Z:PROC	; set_3d_sun_light_intensity
EXTRN	?set_3d_sun_scale@@YGXM@Z:PROC			; set_3d_sun_scale
EXTRN	?set_3d_moon_position@@YGXMM@Z:PROC		; set_3d_moon_position
EXTRN	?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z:PROC ; set_3d_moon_colour
EXTRN	?active_3d_environment@@3PAUENV_3D@@A:DWORD	; active_3d_environment
EXTRN	__fltused:DWORD
;	COMDAT __real@47a8c000
CONST	SEGMENT
__real@47a8c000 DD 047a8c000r			; 86400
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@406fe00000000000
CONST	SEGMENT
__real@406fe00000000000 DQ 0406fe00000000000r	; 255
CONST	ENDS
;	COMDAT __real@3fe2e147ae147ae1
CONST	SEGMENT
__real@3fe2e147ae147ae1 DQ 03fe2e147ae147ae1r	; 0.59
CONST	ENDS
;	COMDAT __real@3fd3333333333333
CONST	SEGMENT
__real@3fd3333333333333 DQ 03fd3333333333333r	; 0.3
CONST	ENDS
;	COMDAT __real@3fbc28f5c28f5c29
CONST	SEGMENT
__real@3fbc28f5c28f5c29 DQ 03fbc28f5c28f5c29r	; 0.11
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT ??_C@_0FL@KHNKDKAB@Unable?5to?5calculate?5the?5shadow?5@
CONST	SEGMENT
??_C@_0FL@KHNKDKAB@Unable?5to?5calculate?5the?5shadow?5@ DB 'Unable to ca'
	DB	'lculate the shadow light - no settings have been specified fo'
	DB	'r weather mode %d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z@4JA DD 0924H ; `calculate_3d_shadow_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FK@GLPNOACF@Unable?5to?5calculate?5the?5cloud?5l@
CONST	SEGMENT
??_C@_0FK@GLPNOACF@Unable?5to?5calculate?5the?5cloud?5l@ DB 'Unable to ca'
	DB	'lculate the cloud light - no settings have been specified for'
	DB	' weather mode %d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z@4JA DD 08d9H ; `calculate_3d_cloud_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FB@EAADBOHM@Unable?5to?5calculate?5the?5moon?5li@
CONST	SEGMENT
??_C@_0FB@EAADBOHM@Unable?5to?5calculate?5the?5moon?5li@ DB 'Unable to ca'
	DB	'lculate the moon light - no settings have been specified for '
	DB	'mode %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_moon_light@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_moon_light@@YGXPAUENV_3D@@@Z@4JA DD 0875H ; `calculate_3d_moon_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FA@IKHIBPAM@Unable?5to?5calculate?5the?5sun?5lig@
CONST	SEGMENT
??_C@_0FA@IKHIBPAM@Unable?5to?5calculate?5the?5sun?5lig@ DB 'Unable to ca'
	DB	'lculate the sun light - no settings have been specified for m'
	DB	'ode %d', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_sun_light@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_sun_light@@YGXPAUENV_3D@@@Z@4JA DD 080eH ; `calculate_3d_sun_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FM@HJMCEHMJ@Unable?5to?5calculate?5the?5ambient@
CONST	SEGMENT
??_C@_0FM@HJMCEHMJ@Unable?5to?5calculate?5the?5ambient@ DB 'Unable to cal'
	DB	'culate the ambient light - no settings have been specified fo'
	DB	'r weather mode %d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z@4JA DD 07ccH ; `calculate_3d_ambient_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FJ@LKGIJCIJ@Unable?5to?5calculate?5the?5fog?5lev@
CONST	SEGMENT
??_C@_0FJ@LKGIJCIJ@Unable?5to?5calculate?5the?5fog?5lev@ DB 'Unable to ca'
	DB	'lculate the fog levels - no settings have been specified for '
	DB	'weather mode %d', 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA DD 078bH ; `calculate_3d_fog_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z@4JA DD 0753H ; `recalculate_3d_environment_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0FC@OINNIEM@Trying?5to?5remove?5light?5from?5env@
CONST	SEGMENT
??_C@_0FC@OINNIEM@Trying?5to?5remove?5light?5from?5env@ DB 'Trying to rem'
	DB	'ove light from environment, but its not in there in the first'
	DB	' place!', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA DD 06f6H ; `remove_3d_light_from_environment'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z@4JA DD 06d4H ; `set_global_3d_fog_scale_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA DD 06a2H ; `add_3d_light_to_environment'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z@4JA DD 068dH ; `set_3d_fog_colour'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z@4JA DD 0681H ; `set_3d_ambient_light'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z@4JA DD 0612H ; `add_3d_shadow_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA DD 05e5H ; `reset_3d_shadow_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA DD 05d0H ; `initialise_3d_shadow_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z@4JA DD 056eH ; `add_3d_cloud_light_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA DD 0541H ; `reset_3d_cloud_light_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA DD 052cH ; `initialise_3d_cloud_light_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA DD 04a8H ; `add_3d_moon_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA DD 0477H ; `reset_3d_moon_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA DD 0462H ; `initialise_3d_moon_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA DD 03d5H ; `add_3d_sun_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA DD 03a4H ; `reset_3d_sun_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA DD 038fH ; `initialise_3d_sun_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z@4JA DD 0324H ; `add_3d_ambient_light_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA DD 02f7H ; `reset_3d_ambient_light_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA DD 02e2H ; `initialise_3d_ambient_light_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z@4JA DD 0277H ; `add_3d_fog_setting'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??reset_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??reset_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA DD 024aH ; `reset_3d_fog_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA DD 0235H ; `initialise_3d_fog_settings'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA DD 013aH ; `set_3d_render_filter'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA DD 0132H ; `set_3d_infrared_mode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@KEIPAGHE@value?5?$DM?$DN?51@
CONST	SEGMENT
??_C@_0L@KEIPAGHE@value?5?$DM?$DN?51@ DB 'value <= 1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MHFEGEFF@value?5?$DO?$DN?50@
CONST	SEGMENT
??_C@_0L@MHFEGEFF@value?5?$DO?$DN?50@ DB 'value >= 0', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA DD 0123H ; `set_3d_target_weathermode_transitional_status'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA DD 0117H ; `set_3d_target_weathermode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA DD 010bH ; `set_3d_weathermode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_delta_time@@YGXPAUENV_3D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_delta_time@@YGXPAUENV_3D@@M@Z@4JA DD 0ffH ; `set_3d_delta_time'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_time_of_day@@YGXPAUENV_3D@@M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_time_of_day@@YGXPAUENV_3D@@M@Z@4JA DD 0f3H ; `set_3d_time_of_day'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??set_3d_active_environment@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??set_3d_active_environment@@YGXPAUENV_3D@@@Z@4JA DD 0d9H ; `set_3d_active_environment'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??destroy_3d_environment@@YGXPAUENV_3D@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??destroy_3d_environment@@YGXPAUENV_3D@@@Z@4JA DD 0bbH ; `destroy_3d_environment'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_03OJGPBPII@env@
CONST	SEGMENT
??_C@_03OJGPBPII@env@ DB 'env', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
CONST	SEGMENT
??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@ DB 'c:\users\nh'
	DB	'v90\projects\eech\modules\3d\3denvset.c', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??create_3d_environment@@YGPAUENV_3D@@XZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??create_3d_environment@@YGPAUENV_3D@@XZ@4JA DD 096H ; `create_3d_environment'::`1'::__LINE__Var
_DATA	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_light$1 = -12						; size = 4
_old_light$2 = -8					; size = 4
_weathermode$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z PROC	; reset_3d_shadow_settings, COMDAT

; 1509 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1510 : 
; 1511 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_s:

; 1512 : 
; 1513 : 	if ( env->number_of_shadow_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 b8 80 00 00
	00 00		 cmp	 DWORD PTR [eax+128], 0
  00031	74 6a		 je	 SHORT $LN8@reset_3d_s

; 1514 : 	{
; 1515 : 
; 1516 : 		int
; 1517 : 			weathermode;
; 1518 : 
; 1519 : 		main_light_setting
; 1520 : 			*old_light,
; 1521 : 			*light;
; 1522 : 
; 1523 : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00033	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$3[ebp], 1
  0003a	eb 09		 jmp	 SHORT $LN4@reset_3d_s
$LN2@reset_3d_s:
  0003c	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0003f	83 c0 01	 add	 eax, 1
  00042	89 45 fc	 mov	 DWORD PTR _weathermode$3[ebp], eax
$LN4@reset_3d_s:
  00045	83 7d fc 05	 cmp	 DWORD PTR _weathermode$3[ebp], 5
  00049	7d 52		 jge	 SHORT $LN8@reset_3d_s

; 1524 : 		{
; 1525 : 
; 1526 : 			if ( env->shadow_settings[weathermode] )

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00051	83 bc 81 d4 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+212], 0
  00059	74 40		 je	 SHORT $LN9@reset_3d_s

; 1527 : 			{
; 1528 : 
; 1529 : 				light = env->shadow_settings[weathermode];

  0005b	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00061	8b 94 81 d4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+212]
  00068	89 55 f4	 mov	 DWORD PTR _light$1[ebp], edx
$LN5@reset_3d_s:

; 1530 : 
; 1531 : 				while ( light )

  0006b	83 7d f4 00	 cmp	 DWORD PTR _light$1[ebp], 0
  0006f	74 19		 je	 SHORT $LN6@reset_3d_s

; 1532 : 				{
; 1533 : 
; 1534 : 					old_light = light;

  00071	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  00074	89 45 f8	 mov	 DWORD PTR _old_light$2[ebp], eax

; 1535 : 
; 1536 : 					light = light->succ;

  00077	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	89 4d f4	 mov	 DWORD PTR _light$1[ebp], ecx

; 1537 : 
; 1538 : 					safe_free ( old_light );

  0007f	8b 45 f8	 mov	 eax, DWORD PTR _old_light$2[ebp]
  00082	50		 push	 eax
  00083	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1539 : 				}

  00088	eb e1		 jmp	 SHORT $LN5@reset_3d_s
$LN6@reset_3d_s:

; 1540 : 
; 1541 : 				env->shadow_settings[weathermode] = NULL;

  0008a	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0008d	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00090	c7 84 81 d4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+212], 0
$LN9@reset_3d_s:

; 1542 : 			}
; 1543 : 		}

  0009b	eb 9f		 jmp	 SHORT $LN2@reset_3d_s
$LN8@reset_3d_s:

; 1544 : 	}
; 1545 : 
; 1546 : 	env->number_of_shadow_settings = 0;

  0009d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000a0	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+128], 0

; 1547 : }

  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	5b		 pop	 ebx
  000ad	8b e5		 mov	 esp, ebp
  000af	5d		 pop	 ebp
  000b0	c2 04 00	 ret	 4
?reset_3d_shadow_settings@@YGXPAUENV_3D@@@Z ENDP	; reset_3d_shadow_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_light$1 = -12						; size = 4
_old_light$2 = -8					; size = 4
_weathermode$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z PROC	; reset_3d_cloud_light_settings, COMDAT

; 1345 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1346 : 
; 1347 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_c
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_c:

; 1348 : 
; 1349 : 	if ( env->number_of_cloud_light_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 7c 00	 cmp	 DWORD PTR [eax+124], 0
  0002e	74 6a		 je	 SHORT $LN8@reset_3d_c

; 1350 : 	{
; 1351 : 
; 1352 : 		int
; 1353 : 			weathermode;
; 1354 : 
; 1355 : 		main_light_setting
; 1356 : 			*old_light,
; 1357 : 			*light;
; 1358 : 
; 1359 : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00030	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$3[ebp], 1
  00037	eb 09		 jmp	 SHORT $LN4@reset_3d_c
$LN2@reset_3d_c:
  00039	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0003c	83 c0 01	 add	 eax, 1
  0003f	89 45 fc	 mov	 DWORD PTR _weathermode$3[ebp], eax
$LN4@reset_3d_c:
  00042	83 7d fc 05	 cmp	 DWORD PTR _weathermode$3[ebp], 5
  00046	7d 52		 jge	 SHORT $LN8@reset_3d_c

; 1360 : 		{
; 1361 : 
; 1362 : 			if ( env->cloud_light_settings[weathermode] )

  00048	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004e	83 bc 81 98 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+152], 0
  00056	74 40		 je	 SHORT $LN9@reset_3d_c

; 1363 : 			{
; 1364 : 
; 1365 : 				light = env->cloud_light_settings[weathermode];

  00058	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0005e	8b 94 81 98 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+152]
  00065	89 55 f4	 mov	 DWORD PTR _light$1[ebp], edx
$LN5@reset_3d_c:

; 1366 : 
; 1367 : 				while ( light )

  00068	83 7d f4 00	 cmp	 DWORD PTR _light$1[ebp], 0
  0006c	74 19		 je	 SHORT $LN6@reset_3d_c

; 1368 : 				{
; 1369 : 
; 1370 : 					old_light = light;

  0006e	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  00071	89 45 f8	 mov	 DWORD PTR _old_light$2[ebp], eax

; 1371 : 
; 1372 : 					light = light->succ;

  00074	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	89 4d f4	 mov	 DWORD PTR _light$1[ebp], ecx

; 1373 : 
; 1374 : 					safe_free ( old_light );

  0007c	8b 45 f8	 mov	 eax, DWORD PTR _old_light$2[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1375 : 				}

  00085	eb e1		 jmp	 SHORT $LN5@reset_3d_c
$LN6@reset_3d_c:

; 1376 : 
; 1377 : 				env->cloud_light_settings[weathermode] = NULL;

  00087	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	c7 84 81 98 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+152], 0
$LN9@reset_3d_c:

; 1378 : 			}
; 1379 : 		}

  00098	eb 9f		 jmp	 SHORT $LN2@reset_3d_c
$LN8@reset_3d_c:

; 1380 : 	}
; 1381 : 
; 1382 : 	env->number_of_cloud_light_settings = 0;

  0009a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0009d	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], 0

; 1383 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?reset_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z ENDP	; reset_3d_cloud_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_moon_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$1 = -12					; size = 4
_light$2 = -8						; size = 4
_old_light$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_moon_settings@@YGXPAUENV_3D@@@Z PROC		; reset_3d_moon_settings, COMDAT

; 1143 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1144 : 
; 1145 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_m
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_m:

; 1146 : 
; 1147 : 	if ( env->number_of_moon_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0002e	74 6a		 je	 SHORT $LN8@reset_3d_m

; 1148 : 	{
; 1149 : 
; 1150 : 		main_light_setting
; 1151 : 			*old_light,
; 1152 : 			*light;
; 1153 : 
; 1154 : 		int
; 1155 : 			weathermode;
; 1156 : 
; 1157 : 		//
; 1158 : 		// Free the memory for these settings up.
; 1159 : 		//
; 1160 : 
; 1161 : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00030	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _weathermode$1[ebp], 1
  00037	eb 09		 jmp	 SHORT $LN4@reset_3d_m
$LN2@reset_3d_m:
  00039	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0003c	83 c0 01	 add	 eax, 1
  0003f	89 45 f4	 mov	 DWORD PTR _weathermode$1[ebp], eax
$LN4@reset_3d_m:
  00042	83 7d f4 05	 cmp	 DWORD PTR _weathermode$1[ebp], 5
  00046	7d 52		 jge	 SHORT $LN8@reset_3d_m

; 1162 : 		{
; 1163 : 
; 1164 : 			if ( env->moon_settings[weathermode] )

  00048	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004e	83 bc 81 c0 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+192], 0
  00056	74 40		 je	 SHORT $LN9@reset_3d_m

; 1165 : 			{
; 1166 : 
; 1167 : 				light = env->moon_settings[weathermode];

  00058	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0005e	8b 94 81 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+192]
  00065	89 55 f8	 mov	 DWORD PTR _light$2[ebp], edx
$LN5@reset_3d_m:

; 1168 : 
; 1169 : 				while ( light )

  00068	83 7d f8 00	 cmp	 DWORD PTR _light$2[ebp], 0
  0006c	74 19		 je	 SHORT $LN6@reset_3d_m

; 1170 : 				{
; 1171 : 
; 1172 : 					old_light = light;

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _light$2[ebp]
  00071	89 45 fc	 mov	 DWORD PTR _old_light$3[ebp], eax

; 1173 : 
; 1174 : 					light = light->succ;

  00074	8b 45 f8	 mov	 eax, DWORD PTR _light$2[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	89 4d f8	 mov	 DWORD PTR _light$2[ebp], ecx

; 1175 : 
; 1176 : 					safe_free ( old_light );

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _old_light$3[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 1177 : 				}

  00085	eb e1		 jmp	 SHORT $LN5@reset_3d_m
$LN6@reset_3d_m:

; 1178 : 
; 1179 : 				env->moon_settings[weathermode] = NULL;

  00087	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	c7 84 81 c0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+192], 0
$LN9@reset_3d_m:

; 1180 : 			}
; 1181 : 		}

  00098	eb 9f		 jmp	 SHORT $LN2@reset_3d_m
$LN8@reset_3d_m:

; 1182 : 	}
; 1183 : 
; 1184 : 	env->number_of_moon_settings = 0;

  0009a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0009d	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [eax+120], 0

; 1185 : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?reset_3d_moon_settings@@YGXPAUENV_3D@@@Z ENDP		; reset_3d_moon_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_sun_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$1 = -12					; size = 4
_light$2 = -8						; size = 4
_old_light$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_sun_settings@@YGXPAUENV_3D@@@Z PROC		; reset_3d_sun_settings, COMDAT

; 932  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 933  : 
; 934  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_s
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_s:

; 935  : 
; 936  : 	if ( env->number_of_sun_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 74 00	 cmp	 DWORD PTR [eax+116], 0
  0002e	74 6a		 je	 SHORT $LN8@reset_3d_s

; 937  : 	{
; 938  : 
; 939  : 		main_light_setting
; 940  : 			*old_light,
; 941  : 			*light;
; 942  : 
; 943  : 		int
; 944  : 			weathermode;
; 945  : 
; 946  : 		//
; 947  : 		// Free the memory for these settings up.
; 948  : 		//
; 949  : 
; 950  : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00030	c7 45 f4 01 00
	00 00		 mov	 DWORD PTR _weathermode$1[ebp], 1
  00037	eb 09		 jmp	 SHORT $LN4@reset_3d_s
$LN2@reset_3d_s:
  00039	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0003c	83 c0 01	 add	 eax, 1
  0003f	89 45 f4	 mov	 DWORD PTR _weathermode$1[ebp], eax
$LN4@reset_3d_s:
  00042	83 7d f4 05	 cmp	 DWORD PTR _weathermode$1[ebp], 5
  00046	7d 52		 jge	 SHORT $LN8@reset_3d_s

; 951  : 		{
; 952  : 
; 953  : 			if ( env->sun_settings[weathermode] )

  00048	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004e	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  00056	74 40		 je	 SHORT $LN9@reset_3d_s

; 954  : 			{
; 955  : 
; 956  : 				light = env->sun_settings[weathermode];

  00058	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0005e	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  00065	89 55 f8	 mov	 DWORD PTR _light$2[ebp], edx
$LN5@reset_3d_s:

; 957  : 
; 958  : 				while ( light )

  00068	83 7d f8 00	 cmp	 DWORD PTR _light$2[ebp], 0
  0006c	74 19		 je	 SHORT $LN6@reset_3d_s

; 959  : 				{
; 960  : 
; 961  : 					old_light = light;

  0006e	8b 45 f8	 mov	 eax, DWORD PTR _light$2[ebp]
  00071	89 45 fc	 mov	 DWORD PTR _old_light$3[ebp], eax

; 962  : 
; 963  : 					light = light->succ;

  00074	8b 45 f8	 mov	 eax, DWORD PTR _light$2[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	89 4d f8	 mov	 DWORD PTR _light$2[ebp], ecx

; 964  : 
; 965  : 					safe_free ( old_light );

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _old_light$3[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 966  : 				}

  00085	eb e1		 jmp	 SHORT $LN5@reset_3d_s
$LN6@reset_3d_s:

; 967  : 
; 968  : 				env->sun_settings[weathermode] = NULL;

  00087	8b 45 f4	 mov	 eax, DWORD PTR _weathermode$1[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	c7 84 81 ac 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+172], 0
$LN9@reset_3d_s:

; 969  : 			}
; 970  : 		}

  00098	eb 9f		 jmp	 SHORT $LN2@reset_3d_s
$LN8@reset_3d_s:

; 971  : 	}
; 972  : 
; 973  : 	env->number_of_sun_settings = 0;

  0009a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0009d	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], 0

; 974  : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?reset_3d_sun_settings@@YGXPAUENV_3D@@@Z ENDP		; reset_3d_sun_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_fog_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_fog$1 = -12						; size = 4
_old_fog$2 = -8						; size = 4
_weathermode$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_fog_settings@@YGXPAUENV_3D@@@Z PROC		; reset_3d_fog_settings, COMDAT

; 586  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 587  : 
; 588  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_f
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_f:

; 589  : 
; 590  : 	if ( env->number_of_fog_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 48 00	 cmp	 DWORD PTR [eax+72], 0
  0002e	74 61		 je	 SHORT $LN8@reset_3d_f

; 591  : 	{
; 592  : 
; 593  : 		int
; 594  : 			weathermode;
; 595  : 
; 596  : 		fog_setting
; 597  : 			*old_fog,
; 598  : 			*fog;
; 599  : 
; 600  : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00030	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$3[ebp], 1
  00037	eb 09		 jmp	 SHORT $LN4@reset_3d_f
$LN2@reset_3d_f:
  00039	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0003c	83 c0 01	 add	 eax, 1
  0003f	89 45 fc	 mov	 DWORD PTR _weathermode$3[ebp], eax
$LN4@reset_3d_f:
  00042	83 7d fc 05	 cmp	 DWORD PTR _weathermode$3[ebp], 5
  00046	7d 49		 jge	 SHORT $LN8@reset_3d_f

; 601  : 		{
; 602  : 
; 603  : 			if ( env->fog_settings[weathermode] )

  00048	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004e	83 7c 81 4c 00	 cmp	 DWORD PTR [ecx+eax*4+76], 0
  00053	74 3a		 je	 SHORT $LN9@reset_3d_f

; 604  : 			{
; 605  : 
; 606  : 				fog = env->fog_settings[weathermode];

  00055	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  00058	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0005b	8b 54 81 4c	 mov	 edx, DWORD PTR [ecx+eax*4+76]
  0005f	89 55 f4	 mov	 DWORD PTR _fog$1[ebp], edx
$LN5@reset_3d_f:

; 607  : 
; 608  : 				while ( fog )

  00062	83 7d f4 00	 cmp	 DWORD PTR _fog$1[ebp], 0
  00066	74 19		 je	 SHORT $LN6@reset_3d_f

; 609  : 				{
; 610  : 
; 611  : 					old_fog = fog;

  00068	8b 45 f4	 mov	 eax, DWORD PTR _fog$1[ebp]
  0006b	89 45 f8	 mov	 DWORD PTR _old_fog$2[ebp], eax

; 612  : 
; 613  : 					fog = fog->succ;

  0006e	8b 45 f4	 mov	 eax, DWORD PTR _fog$1[ebp]
  00071	8b 08		 mov	 ecx, DWORD PTR [eax]
  00073	89 4d f4	 mov	 DWORD PTR _fog$1[ebp], ecx

; 614  : 
; 615  : 					safe_free ( old_fog );

  00076	8b 45 f8	 mov	 eax, DWORD PTR _old_fog$2[ebp]
  00079	50		 push	 eax
  0007a	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 616  : 				}

  0007f	eb e1		 jmp	 SHORT $LN5@reset_3d_f
$LN6@reset_3d_f:

; 617  : 
; 618  : 				env->fog_settings[weathermode] = NULL;

  00081	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00087	c7 44 81 4c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*4+76], 0
$LN9@reset_3d_f:

; 619  : 			}
; 620  : 		}

  0008f	eb a8		 jmp	 SHORT $LN2@reset_3d_f
$LN8@reset_3d_f:

; 621  : 	}
; 622  : 
; 623  : 	env->number_of_fog_settings = 0;

  00091	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00094	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 624  : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?reset_3d_fog_settings@@YGXPAUENV_3D@@@Z ENDP		; reset_3d_fog_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z
_TEXT	SEGMENT
_t$1 = -12						; size = 4
_light2$2 = -8						; size = 4
_light1$3 = -4						; size = 4
_time_of_day$ = 8					; size = 4
_light_head$ = 12					; size = 4
_result_light$ = 16					; size = 4
?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z PROC ; calculate_interpolated_light_setting, COMDAT

; 478  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 479  : 
; 480  : 	//
; 481  : 	// Handle the case where there is only one light setting
; 482  : 	//
; 483  : 
; 484  : 	if ( !light_head->succ )

  00009	8b 45 0c	 mov	 eax, DWORD PTR _light_head$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	0f 85 a1 00 00
	00		 jne	 $LN4@calculate_

; 485  : 	{
; 486  : 
; 487  : 		result_light->light__colour.red = light_head->light__colour.red;

  00015	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00018	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 488  : 		result_light->light__colour.green = light_head->light__colour.green;

  00021	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00024	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00027	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0002a	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 489  : 		result_light->light__colour.blue = light_head->light__colour.blue;

  0002d	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00033	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00036	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 490  : 		result_light->light__colour.alpha = light_head->light__colour.alpha;

  00039	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  0003c	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0003f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00042	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 491  : 
; 492  : 		result_light->object_colour.red = light_head->object_colour.red;

  00045	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00048	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0004b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0004e	89 50 14	 mov	 DWORD PTR [eax+20], edx

; 493  : 		result_light->object_colour.green = light_head->object_colour.green;

  00051	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00054	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00057	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0005a	89 50 18	 mov	 DWORD PTR [eax+24], edx

; 494  : 		result_light->object_colour.blue = light_head->object_colour.blue;

  0005d	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00060	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00063	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00066	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 495  : 		result_light->object_colour.alpha = light_head->object_colour.alpha;

  00069	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0006f	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00072	89 50 20	 mov	 DWORD PTR [eax+32], edx

; 496  : 
; 497  : 		result_light->heading = light_head->heading;

  00075	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00078	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0007b	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  0007e	89 50 24	 mov	 DWORD PTR [eax+36], edx

; 498  : 		result_light->pitch = light_head->pitch;

  00081	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00087	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  0008a	89 50 28	 mov	 DWORD PTR [eax+40], edx

; 499  : 
; 500  : 		result_light->scale = light_head->scale;

  0008d	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  00090	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  00093	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00096	89 50 30	 mov	 DWORD PTR [eax+48], edx

; 501  : 		result_light->shadow = light_head->shadow;

  00099	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  0009f	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  000a2	89 50 34	 mov	 DWORD PTR [eax+52], edx

; 502  : 
; 503  : 		result_light->main_light = light_head->main_light;

  000a5	8b 45 10	 mov	 eax, DWORD PTR _result_light$[ebp]
  000a8	8b 4d 0c	 mov	 ecx, DWORD PTR _light_head$[ebp]
  000ab	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  000ae	89 50 38	 mov	 DWORD PTR [eax+56], edx

; 504  : 	}
; 505  : 	else

  000b1	e9 c0 00 00 00	 jmp	 $LN5@calculate_
$LN4@calculate_:

; 506  : 	{
; 507  : 
; 508  : 		main_light_setting
; 509  : 			*light1,
; 510  : 			*light2;
; 511  : 
; 512  : 		float
; 513  : 			t;
; 514  : 
; 515  : 		light1 = light_head;

  000b6	8b 45 0c	 mov	 eax, DWORD PTR _light_head$[ebp]
  000b9	89 45 fc	 mov	 DWORD PTR _light1$3[ebp], eax

; 516  : 		light2 = light_head;

  000bc	8b 45 0c	 mov	 eax, DWORD PTR _light_head$[ebp]
  000bf	89 45 f8	 mov	 DWORD PTR _light2$2[ebp], eax
$LN2@calculate_:

; 517  : 	
; 518  : 		while ( ( light2 ) && ( light2->time < time_of_day ) )

  000c2	83 7d f8 00	 cmp	 DWORD PTR _light2$2[ebp], 0
  000c6	74 1e		 je	 SHORT $LN3@calculate_
  000c8	8b 45 f8	 mov	 eax, DWORD PTR _light2$2[ebp]
  000cb	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  000d0	0f 2f 40 2c	 comiss	 xmm0, DWORD PTR [eax+44]
  000d4	76 10		 jbe	 SHORT $LN3@calculate_

; 519  : 		{
; 520  : 	
; 521  : 			light1 = light2;

  000d6	8b 45 f8	 mov	 eax, DWORD PTR _light2$2[ebp]
  000d9	89 45 fc	 mov	 DWORD PTR _light1$3[ebp], eax

; 522  : 	
; 523  : 			light2 = light2->succ;

  000dc	8b 45 f8	 mov	 eax, DWORD PTR _light2$2[ebp]
  000df	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e1	89 4d f8	 mov	 DWORD PTR _light2$2[ebp], ecx

; 524  : 		}

  000e4	eb dc		 jmp	 SHORT $LN2@calculate_
$LN3@calculate_:

; 525  : 	
; 526  : 		if ( light2 )

  000e6	83 7d f8 00	 cmp	 DWORD PTR _light2$2[ebp], 0
  000ea	74 3a		 je	 SHORT $LN6@calculate_

; 527  : 		{
; 528  : 	
; 529  : 			//
; 530  : 			// Have to work out how far between these two settings we are.
; 531  : 			//
; 532  : 	
; 533  : 			if ( light1 == light2 )

  000ec	8b 45 fc	 mov	 eax, DWORD PTR _light1$3[ebp]
  000ef	3b 45 f8	 cmp	 eax, DWORD PTR _light2$2[ebp]
  000f2	75 0a		 jne	 SHORT $LN8@calculate_

; 534  : 			{
; 535  : 	
; 536  : 				t = 0;

  000f4	0f 57 c0	 xorps	 xmm0, xmm0
  000f7	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0

; 537  : 			}
; 538  : 			else

  000fc	eb 26		 jmp	 SHORT $LN9@calculate_
$LN8@calculate_:

; 539  : 			{
; 540  : 	
; 541  : 				t = ( ( time_of_day - light1->time ) / ( light2->time - light1->time ) );

  000fe	8b 45 fc	 mov	 eax, DWORD PTR _light1$3[ebp]
  00101	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  00106	f3 0f 5c 40 2c	 subss	 xmm0, DWORD PTR [eax+44]
  0010b	8b 4d f8	 mov	 ecx, DWORD PTR _light2$2[ebp]
  0010e	8b 55 fc	 mov	 edx, DWORD PTR _light1$3[ebp]
  00111	f3 0f 10 49 2c	 movss	 xmm1, DWORD PTR [ecx+44]
  00116	f3 0f 5c 4a 2c	 subss	 xmm1, DWORD PTR [edx+44]
  0011b	f3 0f 5e c1	 divss	 xmm0, xmm1
  0011f	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0
$LN9@calculate_:

; 542  : 			}
; 543  : 		}
; 544  : 		else

  00124	eb 34		 jmp	 SHORT $LN7@calculate_
$LN6@calculate_:

; 545  : 		{
; 546  : 	
; 547  : 			//
; 548  : 			// We are somewhere between the last setting and the first setting
; 549  : 			//
; 550  : 	
; 551  : 			light2 = light_head;

  00126	8b 45 0c	 mov	 eax, DWORD PTR _light_head$[ebp]
  00129	89 45 f8	 mov	 DWORD PTR _light2$2[ebp], eax

; 552  : 	
; 553  : 			t = ( ( time_of_day - light1->time ) / ( ( light2->time + ONE_DAY ) - light1->time ) );

  0012c	8b 45 fc	 mov	 eax, DWORD PTR _light1$3[ebp]
  0012f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  00134	f3 0f 5c 40 2c	 subss	 xmm0, DWORD PTR [eax+44]
  00139	8b 4d f8	 mov	 ecx, DWORD PTR _light2$2[ebp]
  0013c	f3 0f 10 49 2c	 movss	 xmm1, DWORD PTR [ecx+44]
  00141	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@47a8c000
  00149	8b 55 fc	 mov	 edx, DWORD PTR _light1$3[ebp]
  0014c	f3 0f 5c 4a 2c	 subss	 xmm1, DWORD PTR [edx+44]
  00151	f3 0f 5e c1	 divss	 xmm0, xmm1
  00155	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0
$LN7@calculate_:

; 554  : 		}
; 555  : 
; 556  : 		interpolate_two_light_settings  ( result_light, light1, light2, t );

  0015a	51		 push	 ecx
  0015b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _t$1[ebp]
  00160	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00165	8b 45 f8	 mov	 eax, DWORD PTR _light2$2[ebp]
  00168	50		 push	 eax
  00169	8b 4d fc	 mov	 ecx, DWORD PTR _light1$3[ebp]
  0016c	51		 push	 ecx
  0016d	8b 55 10	 mov	 edx, DWORD PTR _result_light$[ebp]
  00170	52		 push	 edx
  00171	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings
$LN5@calculate_:

; 557  : 	}
; 558  : }

  00176	5f		 pop	 edi
  00177	5e		 pop	 esi
  00178	5b		 pop	 ebx
  00179	8b e5		 mov	 esp, ebp
  0017b	5d		 pop	 ebp
  0017c	c2 0c 00	 ret	 12			; 0000000cH
?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ENDP ; calculate_interpolated_light_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z
_TEXT	SEGMENT
_dshadow$ = -24						; size = 4
_dscale$ = -20						; size = 4
_da$ = -16						; size = 4
_db$ = -12						; size = 4
_dg$ = -8						; size = 4
_dr$ = -4						; size = 4
_result_light$ = 8					; size = 4
_start_light$ = 12					; size = 4
_end_light$ = 16					; size = 4
_t$ = 20						; size = 4
?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z PROC ; interpolate_two_light_settings, COMDAT

; 421  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 422  : 
; 423  : 	float
; 424  : 		dr,
; 425  : 		dg,
; 426  : 		db,
; 427  : 		da,
; 428  : 		dscale,
; 429  : 		dshadow;
; 430  : 
; 431  : 	//
; 432  : 	// Calculate the light light colour
; 433  : 	//
; 434  : 
; 435  : 	dr = end_light->light__colour.red - start_light->light__colour.red;

  00009	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  0000f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00014	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _dr$[ebp], xmm0

; 436  : 	dg = end_light->light__colour.green - start_light->light__colour.green;

  0001e	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  00024	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00029	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0002e	f3 0f 11 45 f8	 movss	 DWORD PTR _dg$[ebp], xmm0

; 437  : 	db = end_light->light__colour.blue - start_light->light__colour.blue;

  00033	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  00039	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0003e	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00043	f3 0f 11 45 f4	 movss	 DWORD PTR _db$[ebp], xmm0

; 438  : 	da = end_light->light__colour.alpha - start_light->light__colour.alpha;

  00048	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  0004b	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  0004e	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  00053	f3 0f 5c 41 10	 subss	 xmm0, DWORD PTR [ecx+16]
  00058	f3 0f 11 45 f0	 movss	 DWORD PTR _da$[ebp], xmm0

; 439  : 
; 440  : 	result_light->light__colour.red = start_light->light__colour.red + ( t * dr );

  0005d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00062	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _dr$[ebp]
  00067	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  0006a	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0006f	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  00072	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 441  : 	result_light->light__colour.green = start_light->light__colour.green + ( t * dg );

  00077	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  0007c	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dg$[ebp]
  00081	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00084	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00089	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  0008c	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 442  : 	result_light->light__colour.blue = start_light->light__colour.blue + ( t * db );

  00091	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00096	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _db$[ebp]
  0009b	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  0009e	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  000a3	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  000a6	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 443  : 	result_light->light__colour.alpha = start_light->light__colour.alpha + ( t * da );

  000ab	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  000b0	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _da$[ebp]
  000b5	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  000b8	f3 0f 58 40 10	 addss	 xmm0, DWORD PTR [eax+16]
  000bd	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  000c0	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 444  : 
; 445  : 	//
; 446  : 	// Calculate the light object colour
; 447  : 	//
; 448  : 
; 449  : 	dr = end_light->object_colour.red - start_light->object_colour.red;

  000c5	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  000c8	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  000cb	f3 0f 10 40 14	 movss	 xmm0, DWORD PTR [eax+20]
  000d0	f3 0f 5c 41 14	 subss	 xmm0, DWORD PTR [ecx+20]
  000d5	f3 0f 11 45 fc	 movss	 DWORD PTR _dr$[ebp], xmm0

; 450  : 	dg = end_light->object_colour.green - start_light->object_colour.green;

  000da	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  000dd	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  000e0	f3 0f 10 40 18	 movss	 xmm0, DWORD PTR [eax+24]
  000e5	f3 0f 5c 41 18	 subss	 xmm0, DWORD PTR [ecx+24]
  000ea	f3 0f 11 45 f8	 movss	 DWORD PTR _dg$[ebp], xmm0

; 451  : 	db = end_light->object_colour.blue - start_light->object_colour.blue;

  000ef	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  000f2	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  000f5	f3 0f 10 40 1c	 movss	 xmm0, DWORD PTR [eax+28]
  000fa	f3 0f 5c 41 1c	 subss	 xmm0, DWORD PTR [ecx+28]
  000ff	f3 0f 11 45 f4	 movss	 DWORD PTR _db$[ebp], xmm0

; 452  : 	da = end_light->object_colour.alpha - start_light->object_colour.alpha;

  00104	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  00107	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  0010a	f3 0f 10 40 20	 movss	 xmm0, DWORD PTR [eax+32]
  0010f	f3 0f 5c 41 20	 subss	 xmm0, DWORD PTR [ecx+32]
  00114	f3 0f 11 45 f0	 movss	 DWORD PTR _da$[ebp], xmm0

; 453  : 
; 454  : 	result_light->object_colour.red = start_light->object_colour.red + ( t * dr );

  00119	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  0011e	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _dr$[ebp]
  00123	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00126	f3 0f 58 40 14	 addss	 xmm0, DWORD PTR [eax+20]
  0012b	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  0012e	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 455  : 	result_light->object_colour.green = start_light->object_colour.green + ( t * dg );

  00133	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00138	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dg$[ebp]
  0013d	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00140	f3 0f 58 40 18	 addss	 xmm0, DWORD PTR [eax+24]
  00145	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  00148	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 456  : 	result_light->object_colour.blue = start_light->object_colour.blue + ( t * db );

  0014d	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00152	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _db$[ebp]
  00157	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  0015a	f3 0f 58 40 1c	 addss	 xmm0, DWORD PTR [eax+28]
  0015f	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  00162	f3 0f 11 41 1c	 movss	 DWORD PTR [ecx+28], xmm0

; 457  : 	result_light->object_colour.alpha = start_light->object_colour.alpha + ( t * da );

  00167	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  0016c	f3 0f 59 45 f0	 mulss	 xmm0, DWORD PTR _da$[ebp]
  00171	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00174	f3 0f 58 40 20	 addss	 xmm0, DWORD PTR [eax+32]
  00179	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  0017c	f3 0f 11 41 20	 movss	 DWORD PTR [ecx+32], xmm0

; 458  : 
; 459  : 	result_light->heading = get_interpolated_angle ( start_light->heading, end_light->heading, t );

  00181	51		 push	 ecx
  00182	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00187	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0018c	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  0018f	51		 push	 ecx
  00190	f3 0f 10 40 24	 movss	 xmm0, DWORD PTR [eax+36]
  00195	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019a	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  0019d	51		 push	 ecx
  0019e	f3 0f 10 41 24	 movss	 xmm0, DWORD PTR [ecx+36]
  001a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001a8	e8 00 00 00 00	 call	 ?get_interpolated_angle@@YGMMMM@Z ; get_interpolated_angle
  001ad	8b 55 08	 mov	 edx, DWORD PTR _result_light$[ebp]
  001b0	d9 5a 24	 fstp	 DWORD PTR [edx+36]

; 460  : 	result_light->pitch = get_interpolated_angle ( start_light->pitch, end_light->pitch, t );

  001b3	51		 push	 ecx
  001b4	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  001c1	51		 push	 ecx
  001c2	f3 0f 10 40 28	 movss	 xmm0, DWORD PTR [eax+40]
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  001cf	51		 push	 ecx
  001d0	f3 0f 10 41 28	 movss	 xmm0, DWORD PTR [ecx+40]
  001d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001da	e8 00 00 00 00	 call	 ?get_interpolated_angle@@YGMMMM@Z ; get_interpolated_angle
  001df	8b 55 08	 mov	 edx, DWORD PTR _result_light$[ebp]
  001e2	d9 5a 28	 fstp	 DWORD PTR [edx+40]

; 461  : 
; 462  : 	dscale = end_light->scale - start_light->scale;

  001e5	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  001e8	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  001eb	f3 0f 10 40 30	 movss	 xmm0, DWORD PTR [eax+48]
  001f0	f3 0f 5c 41 30	 subss	 xmm0, DWORD PTR [ecx+48]
  001f5	f3 0f 11 45 ec	 movss	 DWORD PTR _dscale$[ebp], xmm0

; 463  : 
; 464  : 	result_light->scale = start_light->scale + ( t * dscale );

  001fa	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  001ff	f3 0f 59 45 ec	 mulss	 xmm0, DWORD PTR _dscale$[ebp]
  00204	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00207	f3 0f 58 40 30	 addss	 xmm0, DWORD PTR [eax+48]
  0020c	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  0020f	f3 0f 11 41 30	 movss	 DWORD PTR [ecx+48], xmm0

; 465  : 
; 466  : 	dshadow = end_light->shadow - start_light->shadow;

  00214	8b 45 10	 mov	 eax, DWORD PTR _end_light$[ebp]
  00217	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  0021a	f3 0f 10 40 34	 movss	 xmm0, DWORD PTR [eax+52]
  0021f	f3 0f 5c 41 34	 subss	 xmm0, DWORD PTR [ecx+52]
  00224	f3 0f 11 45 e8	 movss	 DWORD PTR _dshadow$[ebp], xmm0

; 467  : 
; 468  : 	result_light->shadow = start_light->shadow + ( t * dshadow );

  00229	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  0022e	f3 0f 59 45 e8	 mulss	 xmm0, DWORD PTR _dshadow$[ebp]
  00233	8b 45 0c	 mov	 eax, DWORD PTR _start_light$[ebp]
  00236	f3 0f 58 40 34	 addss	 xmm0, DWORD PTR [eax+52]
  0023b	8b 4d 08	 mov	 ecx, DWORD PTR _result_light$[ebp]
  0023e	f3 0f 11 41 34	 movss	 DWORD PTR [ecx+52], xmm0

; 469  : 
; 470  : 	result_light->main_light = start_light->main_light;

  00243	8b 45 08	 mov	 eax, DWORD PTR _result_light$[ebp]
  00246	8b 4d 0c	 mov	 ecx, DWORD PTR _start_light$[ebp]
  00249	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0024c	89 50 38	 mov	 DWORD PTR [eax+56], edx

; 471  : }

  0024f	5f		 pop	 edi
  00250	5e		 pop	 esi
  00251	5b		 pop	 ebx
  00252	8b e5		 mov	 esp, ebp
  00254	5d		 pop	 ebp
  00255	c2 10 00	 ret	 16			; 00000010H
?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ENDP ; interpolate_two_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z
_TEXT	SEGMENT
_t$1 = -12						; size = 4
_fog2$2 = -8						; size = 4
_fog1$3 = -4						; size = 4
_time_of_day$ = 8					; size = 4
_fog_head$ = 12						; size = 4
_result_fog$ = 16					; size = 4
?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z PROC ; calculate_interpolated_fog_setting, COMDAT

; 348  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 349  : 
; 350  : 	//
; 351  : 	// Handle the case where there is only one fog setting
; 352  : 	//
; 353  : 
; 354  : 	if ( !fog_head->succ )

  00009	8b 45 0c	 mov	 eax, DWORD PTR _fog_head$[ebp]
  0000c	83 38 00	 cmp	 DWORD PTR [eax], 0
  0000f	75 29		 jne	 SHORT $LN4@calculate_

; 355  : 	{
; 356  : 
; 357  : 		result_fog->scale = fog_head->scale;

  00011	8b 45 10	 mov	 eax, DWORD PTR _result_fog$[ebp]
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR _fog_head$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 358  : 		result_fog->start = fog_head->start;

  0001d	8b 45 10	 mov	 eax, DWORD PTR _result_fog$[ebp]
  00020	8b 4d 0c	 mov	 ecx, DWORD PTR _fog_head$[ebp]
  00023	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00026	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 359  : 		result_fog->end = fog_head->end;

  00029	8b 45 10	 mov	 eax, DWORD PTR _result_fog$[ebp]
  0002c	8b 4d 0c	 mov	 ecx, DWORD PTR _fog_head$[ebp]
  0002f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00032	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 360  : 	}
; 361  : 	else

  00035	e9 c0 00 00 00	 jmp	 $LN5@calculate_
$LN4@calculate_:

; 362  : 	{
; 363  : 
; 364  : 		fog_setting
; 365  : 			*fog1,
; 366  : 			*fog2;
; 367  : 
; 368  : 		float
; 369  : 			t;
; 370  : 
; 371  : 		fog1 = fog_head;

  0003a	8b 45 0c	 mov	 eax, DWORD PTR _fog_head$[ebp]
  0003d	89 45 fc	 mov	 DWORD PTR _fog1$3[ebp], eax

; 372  : 		fog2 = fog_head;

  00040	8b 45 0c	 mov	 eax, DWORD PTR _fog_head$[ebp]
  00043	89 45 f8	 mov	 DWORD PTR _fog2$2[ebp], eax
$LN2@calculate_:

; 373  : 	
; 374  : 		while ( ( fog2 ) && ( fog2->time < time_of_day ) )

  00046	83 7d f8 00	 cmp	 DWORD PTR _fog2$2[ebp], 0
  0004a	74 1e		 je	 SHORT $LN3@calculate_
  0004c	8b 45 f8	 mov	 eax, DWORD PTR _fog2$2[ebp]
  0004f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  00054	0f 2f 40 10	 comiss	 xmm0, DWORD PTR [eax+16]
  00058	76 10		 jbe	 SHORT $LN3@calculate_

; 375  : 		{
; 376  : 	
; 377  : 			fog1 = fog2;

  0005a	8b 45 f8	 mov	 eax, DWORD PTR _fog2$2[ebp]
  0005d	89 45 fc	 mov	 DWORD PTR _fog1$3[ebp], eax

; 378  : 	
; 379  : 			fog2 = fog2->succ;

  00060	8b 45 f8	 mov	 eax, DWORD PTR _fog2$2[ebp]
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	89 4d f8	 mov	 DWORD PTR _fog2$2[ebp], ecx

; 380  : 		}

  00068	eb dc		 jmp	 SHORT $LN2@calculate_
$LN3@calculate_:

; 381  : 	
; 382  : 		if ( fog2 )

  0006a	83 7d f8 00	 cmp	 DWORD PTR _fog2$2[ebp], 0
  0006e	74 3a		 je	 SHORT $LN6@calculate_

; 383  : 		{
; 384  : 	
; 385  : 			//
; 386  : 			// Have to work out how far between these two settings we are.
; 387  : 			//
; 388  : 	
; 389  : 			if ( fog1 == fog2 )

  00070	8b 45 fc	 mov	 eax, DWORD PTR _fog1$3[ebp]
  00073	3b 45 f8	 cmp	 eax, DWORD PTR _fog2$2[ebp]
  00076	75 0a		 jne	 SHORT $LN8@calculate_

; 390  : 			{
; 391  : 	
; 392  : 				t = 0;

  00078	0f 57 c0	 xorps	 xmm0, xmm0
  0007b	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0

; 393  : 			}
; 394  : 			else

  00080	eb 26		 jmp	 SHORT $LN9@calculate_
$LN8@calculate_:

; 395  : 			{
; 396  : 	
; 397  : 				t = ( ( time_of_day - fog1->time ) / ( fog2->time - fog1->time ) );

  00082	8b 45 fc	 mov	 eax, DWORD PTR _fog1$3[ebp]
  00085	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  0008a	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _fog2$2[ebp]
  00092	8b 55 fc	 mov	 edx, DWORD PTR _fog1$3[ebp]
  00095	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  0009a	f3 0f 5c 4a 10	 subss	 xmm1, DWORD PTR [edx+16]
  0009f	f3 0f 5e c1	 divss	 xmm0, xmm1
  000a3	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0
$LN9@calculate_:

; 398  : 			}
; 399  : 		}
; 400  : 		else

  000a8	eb 34		 jmp	 SHORT $LN7@calculate_
$LN6@calculate_:

; 401  : 		{
; 402  : 	
; 403  : 			//
; 404  : 			// We are somewhere between the last setting and the first setting
; 405  : 			//
; 406  : 	
; 407  : 			fog2 = fog_head;

  000aa	8b 45 0c	 mov	 eax, DWORD PTR _fog_head$[ebp]
  000ad	89 45 f8	 mov	 DWORD PTR _fog2$2[ebp], eax

; 408  : 	
; 409  : 			t = ( ( time_of_day - fog1->time ) / ( ( fog2->time + ONE_DAY ) - fog1->time ) );

  000b0	8b 45 fc	 mov	 eax, DWORD PTR _fog1$3[ebp]
  000b3	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _time_of_day$[ebp]
  000b8	f3 0f 5c 40 10	 subss	 xmm0, DWORD PTR [eax+16]
  000bd	8b 4d f8	 mov	 ecx, DWORD PTR _fog2$2[ebp]
  000c0	f3 0f 10 49 10	 movss	 xmm1, DWORD PTR [ecx+16]
  000c5	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@47a8c000
  000cd	8b 55 fc	 mov	 edx, DWORD PTR _fog1$3[ebp]
  000d0	f3 0f 5c 4a 10	 subss	 xmm1, DWORD PTR [edx+16]
  000d5	f3 0f 5e c1	 divss	 xmm0, xmm1
  000d9	f3 0f 11 45 f4	 movss	 DWORD PTR _t$1[ebp], xmm0
$LN7@calculate_:

; 410  : 		}
; 411  : 
; 412  : 		interpolate_two_fog_settings  ( result_fog, fog1, fog2, t );

  000de	51		 push	 ecx
  000df	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _t$1[ebp]
  000e4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e9	8b 45 f8	 mov	 eax, DWORD PTR _fog2$2[ebp]
  000ec	50		 push	 eax
  000ed	8b 4d fc	 mov	 ecx, DWORD PTR _fog1$3[ebp]
  000f0	51		 push	 ecx
  000f1	8b 55 10	 mov	 edx, DWORD PTR _result_fog$[ebp]
  000f4	52		 push	 edx
  000f5	e8 00 00 00 00	 call	 ?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z ; interpolate_two_fog_settings
$LN5@calculate_:

; 413  : 	}
; 414  : }

  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c2 0c 00	 ret	 12			; 0000000cH
?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z ENDP ; calculate_interpolated_fog_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z
_TEXT	SEGMENT
_dend$ = -12						; size = 4
_dstart$ = -8						; size = 4
_dscale$ = -4						; size = 4
_result_fog$ = 8					; size = 4
_start_fog$ = 12					; size = 4
_end_fog$ = 16						; size = 4
_t$ = 20						; size = 4
?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z PROC ; interpolate_two_fog_settings, COMDAT

; 327  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 328  : 
; 329  : 	float
; 330  : 		dscale,
; 331  : 		dstart,
; 332  : 		dend;
; 333  : 
; 334  : 	dscale = end_fog->scale - start_fog->scale;

  00009	8b 45 10	 mov	 eax, DWORD PTR _end_fog$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _start_fog$[ebp]
  0000f	f3 0f 10 40 04	 movss	 xmm0, DWORD PTR [eax+4]
  00014	f3 0f 5c 41 04	 subss	 xmm0, DWORD PTR [ecx+4]
  00019	f3 0f 11 45 fc	 movss	 DWORD PTR _dscale$[ebp], xmm0

; 335  : 	dstart = end_fog->start - start_fog->start;

  0001e	8b 45 10	 mov	 eax, DWORD PTR _end_fog$[ebp]
  00021	8b 4d 0c	 mov	 ecx, DWORD PTR _start_fog$[ebp]
  00024	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]
  00029	f3 0f 5c 41 08	 subss	 xmm0, DWORD PTR [ecx+8]
  0002e	f3 0f 11 45 f8	 movss	 DWORD PTR _dstart$[ebp], xmm0

; 336  : 	dend = end_fog->end - start_fog->end;

  00033	8b 45 10	 mov	 eax, DWORD PTR _end_fog$[ebp]
  00036	8b 4d 0c	 mov	 ecx, DWORD PTR _start_fog$[ebp]
  00039	f3 0f 10 40 0c	 movss	 xmm0, DWORD PTR [eax+12]
  0003e	f3 0f 5c 41 0c	 subss	 xmm0, DWORD PTR [ecx+12]
  00043	f3 0f 11 45 f4	 movss	 DWORD PTR _dend$[ebp], xmm0

; 337  : 
; 338  : 	result_fog->scale = start_fog->scale + ( t * dscale );

  00048	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  0004d	f3 0f 59 45 fc	 mulss	 xmm0, DWORD PTR _dscale$[ebp]
  00052	8b 45 0c	 mov	 eax, DWORD PTR _start_fog$[ebp]
  00055	f3 0f 58 40 04	 addss	 xmm0, DWORD PTR [eax+4]
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _result_fog$[ebp]
  0005d	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 339  : 	result_fog->start = start_fog->start + ( t * dstart );

  00062	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00067	f3 0f 59 45 f8	 mulss	 xmm0, DWORD PTR _dstart$[ebp]
  0006c	8b 45 0c	 mov	 eax, DWORD PTR _start_fog$[ebp]
  0006f	f3 0f 58 40 08	 addss	 xmm0, DWORD PTR [eax+8]
  00074	8b 4d 08	 mov	 ecx, DWORD PTR _result_fog$[ebp]
  00077	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 340  : 	result_fog->end = start_fog->end + ( t * dend );

  0007c	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _t$[ebp]
  00081	f3 0f 59 45 f4	 mulss	 xmm0, DWORD PTR _dend$[ebp]
  00086	8b 45 0c	 mov	 eax, DWORD PTR _start_fog$[ebp]
  00089	f3 0f 58 40 0c	 addss	 xmm0, DWORD PTR [eax+12]
  0008e	8b 4d 08	 mov	 ecx, DWORD PTR _result_fog$[ebp]
  00091	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 341  : }

  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c2 10 00	 ret	 16			; 00000010H
?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z ENDP ; interpolate_two_fog_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_delta_time@@YGXPAUENV_3D@@M@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_delta_time$ = 12					; size = 4
?set_3d_delta_time@@YGXPAUENV_3D@@M@Z PROC		; set_3d_delta_time, COMDAT

; 255  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 256  : 
; 257  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_del
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_delta_time@@YGXPAUENV_3D@@M@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_del:

; 258  : 
; 259  : 	env->delta_time = delta_time;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _delta_time$[ebp]
  0002f	f3 0f 11 80 e4
	02 00 00	 movss	 DWORD PTR [eax+740], xmm0

; 260  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
?set_3d_delta_time@@YGXPAUENV_3D@@M@Z ENDP		; set_3d_delta_time
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_end_mode$ = -192					; size = 4
_start_mode$ = -188					; size = 4
_weather_t$ = -184					; size = 4
_result_light$ = -180					; size = 60
_end_light$ = -120					; size = 60
_start_light$ = -60					; size = 60
_env$ = 8						; size = 4
?calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z PROC	; calculate_3d_shadow_light, COMDAT

; 2340 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2341 : 
; 2342 : 	main_light_setting
; 2343 : 		start_light,
; 2344 : 		end_light,
; 2345 : 		result_light;
; 2346 : 
; 2347 : 	float
; 2348 : 		weather_t;
; 2349 : 
; 2350 : 	weathermodes
; 2351 : 		start_mode,
; 2352 : 		end_mode;
; 2353 : 
; 2354 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 2355 : 
; 2356 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax

; 2357 : 
; 2358 : 	end_mode = get_3d_target_weathermode ( env );

  00039	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  00042	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax

; 2359 : 
; 2360 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00048	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  00051	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR _weather_t$[ebp]

; 2361 : 
; 2362 : 	if ( weather_t == 0 )

  00057	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  0005f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00066	9f		 lahf
  00067	f6 c4 44	 test	 ah, 68			; 00000044H
  0006a	7a 0c		 jp	 SHORT $LN3@calculate_

; 2363 : 	{
; 2364 : 
; 2365 : 		end_mode = start_mode;

  0006c	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  00072	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 2366 : 	}
; 2367 : 
; 2368 : 	if ( weather_t == 1 )

  00078	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00080	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00087	9f		 lahf
  00088	f6 c4 44	 test	 ah, 68			; 00000044H
  0008b	7a 0c		 jp	 SHORT $LN4@calculate_

; 2369 : 	{
; 2370 : 
; 2371 : 		start_mode = end_mode;

  0008d	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  00093	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 2372 : 	}
; 2373 : 
; 2374 : 	//
; 2375 : 	// Bomb out if we don't have any ambient light settings
; 2376 : 	//
; 2377 : 
; 2378 : 	if ( !env->shadow_settings[start_mode] )

  00099	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000a2	83 bc 81 d4 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+212], 0
  000aa	75 14		 jne	 SHORT $LN5@calculate_

; 2379 : 	{
; 2380 : 
; 2381 : 		debug_fatal ( "Unable to calculate the shadow light - no settings have been specified for weather mode %d", start_mode );

  000ac	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  000b2	50		 push	 eax
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FL@KHNKDKAB@Unable?5to?5calculate?5the?5shadow?5@
  000b8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000bd	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 2382 : 	}
; 2383 : 
; 2384 : 	if ( !env->shadow_settings[end_mode] )

  000c0	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000c9	83 bc 81 d4 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+212], 0
  000d1	75 14		 jne	 SHORT $LN6@calculate_

; 2385 : 	{
; 2386 : 
; 2387 : 		debug_fatal ( "Unable to calculate the shadow light - no settings have been specified for weather mode %d", end_mode );

  000d3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000d9	50		 push	 eax
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0FL@KHNKDKAB@Unable?5to?5calculate?5the?5shadow?5@
  000df	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e4	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 2388 : 	}
; 2389 : 
; 2390 : 	calculate_interpolated_light_setting ( env->time_of_day, env->shadow_settings[start_mode], &start_light );

  000e7	8d 45 c4	 lea	 eax, DWORD PTR _start_light$[ebp]
  000ea	50		 push	 eax
  000eb	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000f1	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000f4	8b 84 8a d4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+212]
  000fb	50		 push	 eax
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	51		 push	 ecx
  00100	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2391 : 
; 2392 : 	calculate_interpolated_light_setting ( env->time_of_day, env->shadow_settings[end_mode], &end_light );

  00112	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  00115	50		 push	 eax
  00116	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _end_mode$[ebp]
  0011c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0011f	8b 84 8a d4 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+212]
  00126	50		 push	 eax
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0012a	51		 push	 ecx
  0012b	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00133	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00138	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2393 : 
; 2394 : 	interpolate_two_light_settings ( &result_light, &start_light, &end_light, weather_t );

  0013d	51		 push	 ecx
  0013e	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  0014e	50		 push	 eax
  0014f	8d 4d c4	 lea	 ecx, DWORD PTR _start_light$[ebp]
  00152	51		 push	 ecx
  00153	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _result_light$[ebp]
  00159	52		 push	 edx
  0015a	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings

; 2395 : 
; 2396 : 	env->shadow_setting.light__colour.red = result_light.light__colour.red;

  0015f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00162	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+4]
  0016a	f3 0f 11 80 a0
	01 00 00	 movss	 DWORD PTR [eax+416], xmm0

; 2397 : 	env->shadow_setting.light__colour.green = result_light.light__colour.green;

  00172	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00175	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+8]
  0017d	f3 0f 11 80 a4
	01 00 00	 movss	 DWORD PTR [eax+420], xmm0

; 2398 : 	env->shadow_setting.light__colour.blue = result_light.light__colour.blue;

  00185	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00188	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+12]
  00190	f3 0f 11 80 a8
	01 00 00	 movss	 DWORD PTR [eax+424], xmm0

; 2399 : }

  00198	5f		 pop	 edi
  00199	5e		 pop	 esi
  0019a	5b		 pop	 ebx
  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c2 04 00	 ret	 4
?calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z ENDP	; calculate_3d_shadow_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_end_mode$ = -192					; size = 4
_start_mode$ = -188					; size = 4
_weather_t$ = -184					; size = 4
_result_light$ = -180					; size = 60
_end_light$ = -120					; size = 60
_start_light$ = -60					; size = 60
_env$ = 8						; size = 4
?calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z PROC	; calculate_3d_cloud_light, COMDAT

; 2265 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2266 : 
; 2267 : 	main_light_setting
; 2268 : 		start_light,
; 2269 : 		end_light,
; 2270 : 		result_light;
; 2271 : 
; 2272 : 	float
; 2273 : 		weather_t;
; 2274 : 
; 2275 : 	weathermodes
; 2276 : 		start_mode,
; 2277 : 		end_mode;
; 2278 : 
; 2279 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 2280 : 
; 2281 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax

; 2282 : 
; 2283 : 	end_mode = get_3d_target_weathermode ( env );

  00039	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  00042	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax

; 2284 : 
; 2285 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00048	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  00051	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR _weather_t$[ebp]

; 2286 : 
; 2287 : 	if ( weather_t == 0 )

  00057	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  0005f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00066	9f		 lahf
  00067	f6 c4 44	 test	 ah, 68			; 00000044H
  0006a	7a 0c		 jp	 SHORT $LN3@calculate_

; 2288 : 	{
; 2289 : 
; 2290 : 		end_mode = start_mode;

  0006c	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  00072	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 2291 : 	}
; 2292 : 
; 2293 : 	if ( weather_t == 1 )

  00078	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00080	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00087	9f		 lahf
  00088	f6 c4 44	 test	 ah, 68			; 00000044H
  0008b	7a 0c		 jp	 SHORT $LN4@calculate_

; 2294 : 	{
; 2295 : 
; 2296 : 		start_mode = end_mode;

  0008d	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  00093	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 2297 : 	}
; 2298 : 
; 2299 : 	//
; 2300 : 	// Bomb out if we don't have any cloud light settings
; 2301 : 	//
; 2302 : 
; 2303 : 	if ( !env->cloud_light_settings[start_mode] )

  00099	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000a2	83 bc 81 98 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+152], 0
  000aa	75 14		 jne	 SHORT $LN5@calculate_

; 2304 : 	{
; 2305 : 
; 2306 : 		debug_fatal ( "Unable to calculate the cloud light - no settings have been specified for weather mode %d", start_mode );

  000ac	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  000b2	50		 push	 eax
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FK@GLPNOACF@Unable?5to?5calculate?5the?5cloud?5l@
  000b8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000bd	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 2307 : 	}
; 2308 : 
; 2309 : 	if ( !env->cloud_light_settings[end_mode] )

  000c0	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000c9	83 bc 81 98 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+152], 0
  000d1	75 14		 jne	 SHORT $LN6@calculate_

; 2310 : 	{
; 2311 : 
; 2312 : 		debug_fatal ( "Unable to calculate the cloud light - no settings have been specified for weather mode %d", end_mode );

  000d3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000d9	50		 push	 eax
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0FK@GLPNOACF@Unable?5to?5calculate?5the?5cloud?5l@
  000df	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e4	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 2313 : 	}
; 2314 : 
; 2315 : 	calculate_interpolated_light_setting ( env->time_of_day, env->cloud_light_settings[start_mode], &start_light );

  000e7	8d 45 c4	 lea	 eax, DWORD PTR _start_light$[ebp]
  000ea	50		 push	 eax
  000eb	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000f1	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000f4	8b 84 8a 98 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+152]
  000fb	50		 push	 eax
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	51		 push	 ecx
  00100	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2316 : 
; 2317 : 	calculate_interpolated_light_setting ( env->time_of_day, env->cloud_light_settings[end_mode], &end_light );

  00112	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  00115	50		 push	 eax
  00116	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _end_mode$[ebp]
  0011c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0011f	8b 84 8a 98 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+152]
  00126	50		 push	 eax
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0012a	51		 push	 ecx
  0012b	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00133	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00138	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2318 : 
; 2319 : 	interpolate_two_light_settings ( &result_light, &start_light, &end_light, weather_t );

  0013d	51		 push	 ecx
  0013e	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  0014e	50		 push	 eax
  0014f	8d 4d c4	 lea	 ecx, DWORD PTR _start_light$[ebp]
  00152	51		 push	 ecx
  00153	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _result_light$[ebp]
  00159	52		 push	 edx
  0015a	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings

; 2320 : 
; 2321 : 	env->cloud_light.light__colour.red = result_light.light__colour.red;

  0015f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00162	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+4]
  0016a	f3 0f 11 80 64
	01 00 00	 movss	 DWORD PTR [eax+356], xmm0

; 2322 : 	env->cloud_light.light__colour.green = result_light.light__colour.green;

  00172	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00175	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+8]
  0017d	f3 0f 11 80 68
	01 00 00	 movss	 DWORD PTR [eax+360], xmm0

; 2323 : 	env->cloud_light.light__colour.blue = result_light.light__colour.blue;

  00185	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00188	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+12]
  00190	f3 0f 11 80 6c
	01 00 00	 movss	 DWORD PTR [eax+364], xmm0

; 2324 : 	env->cloud_light.light__colour.alpha = result_light.light__colour.alpha;

  00198	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0019b	f3 0f 10 85 5c
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+16]
  001a3	f3 0f 11 80 70
	01 00 00	 movss	 DWORD PTR [eax+368], xmm0

; 2325 : 
; 2326 : 	env->cloud_light.object_colour.red = result_light.object_colour.red;

  001ab	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001ae	f3 0f 10 85 60
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+20]
  001b6	f3 0f 11 80 74
	01 00 00	 movss	 DWORD PTR [eax+372], xmm0

; 2327 : 	env->cloud_light.object_colour.green = result_light.object_colour.green;

  001be	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001c1	f3 0f 10 85 64
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+24]
  001c9	f3 0f 11 80 78
	01 00 00	 movss	 DWORD PTR [eax+376], xmm0

; 2328 : 	env->cloud_light.object_colour.blue = result_light.object_colour.blue;

  001d1	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001d4	f3 0f 10 85 68
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+28]
  001dc	f3 0f 11 80 7c
	01 00 00	 movss	 DWORD PTR [eax+380], xmm0

; 2329 : 	env->cloud_light.object_colour.alpha = result_light.object_colour.alpha;

  001e4	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001e7	f3 0f 10 85 6c
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+32]
  001ef	f3 0f 11 80 80
	01 00 00	 movss	 DWORD PTR [eax+384], xmm0

; 2330 : 
; 2331 : 	env->cloud_light.heading = result_light.heading;

  001f7	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001fa	f3 0f 10 85 70
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+36]
  00202	f3 0f 11 80 84
	01 00 00	 movss	 DWORD PTR [eax+388], xmm0

; 2332 : 	env->cloud_light.pitch = result_light.pitch;

  0020a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0020d	f3 0f 10 85 74
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+40]
  00215	f3 0f 11 80 88
	01 00 00	 movss	 DWORD PTR [eax+392], xmm0

; 2333 : }

  0021d	5f		 pop	 edi
  0021e	5e		 pop	 esi
  0021f	5b		 pop	 ebx
  00220	8b e5		 mov	 esp, ebp
  00222	5d		 pop	 ebp
  00223	c2 04 00	 ret	 4
?calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z ENDP	; calculate_3d_cloud_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_sun_light@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_sun_attitude$1 = -172					; size = 36
_sun_is_main_light$ = -136				; size = 4
_end_mode$ = -132					; size = 4
_start_mode$ = -128					; size = 4
_weather_t$ = -124					; size = 4
_end_light$ = -120					; size = 60
_start_light$ = -60					; size = 60
_env$ = 8						; size = 4
?calculate_3d_sun_light@@YGXPAUENV_3D@@@Z PROC		; calculate_3d_sun_light, COMDAT

; 2062 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2063 : 
; 2064 : 	main_light_setting
; 2065 : 		start_light,
; 2066 : 		end_light;
; 2067 : 
; 2068 : 	float
; 2069 : 		weather_t;
; 2070 : 
; 2071 : 	weathermodes
; 2072 : 		start_mode,
; 2073 : 		end_mode;
; 2074 : 
; 2075 : 	int
; 2076 : 		sun_is_main_light;
; 2077 : 
; 2078 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_sun_light@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 2079 : 
; 2080 : 	//
; 2081 : 	// Get the weather information
; 2082 : 	//
; 2083 : 
; 2084 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 45 80	 mov	 DWORD PTR _start_mode$[ebp], eax

; 2085 : 
; 2086 : 	end_mode = get_3d_target_weathermode ( env );

  00036	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  0003f	89 85 7c ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax

; 2087 : 
; 2088 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00045	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  0004e	d9 5d 84	 fstp	 DWORD PTR _weather_t$[ebp]

; 2089 : 
; 2090 : 	if ( weather_t == 0 )

  00051	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00056	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0005d	9f		 lahf
  0005e	f6 c4 44	 test	 ah, 68			; 00000044H
  00061	7a 09		 jp	 SHORT $LN3@calculate_

; 2091 : 	{
; 2092 : 
; 2093 : 		end_mode = start_mode;

  00063	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  00066	89 85 7c ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 2094 : 	}
; 2095 : 
; 2096 : 	if ( weather_t == 1 )

  0006c	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00071	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00078	9f		 lahf
  00079	f6 c4 44	 test	 ah, 68			; 00000044H
  0007c	7a 09		 jp	 SHORT $LN4@calculate_

; 2097 : 	{
; 2098 : 
; 2099 : 		start_mode = end_mode;

  0007e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  00084	89 45 80	 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 2100 : 	}
; 2101 : 
; 2102 : 	//
; 2103 : 	// Bomb out if we don't have any sun light settings
; 2104 : 	//
; 2105 : 
; 2106 : 	if ( !env->sun_settings[start_mode] )

  00087	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  00095	75 11		 jne	 SHORT $LN5@calculate_

; 2107 : 	{
; 2108 : 
; 2109 : 		debug_fatal ( "Unable to calculate the sun light - no settings have been specified for mode %d", start_mode );

  00097	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  0009a	50		 push	 eax
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@IKHIBPAM@Unable?5to?5calculate?5the?5sun?5lig@
  000a0	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000a5	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 2110 : 	}
; 2111 : 
; 2112 : 	if ( !env->sun_settings[end_mode] )

  000a8	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000b1	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  000b9	75 14		 jne	 SHORT $LN6@calculate_

; 2113 : 	{
; 2114 : 
; 2115 : 		debug_fatal ( "Unable to calculate the sun light - no settings have been specified for mode %d", end_mode );

  000bb	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000c1	50		 push	 eax
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FA@IKHIBPAM@Unable?5to?5calculate?5the?5sun?5lig@
  000c7	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000cc	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 2116 : 	}
; 2117 : 
; 2118 : 	sun_is_main_light = FALSE;

  000cf	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _sun_is_main_light$[ebp], 0

; 2119 : 
; 2120 : 	calculate_interpolated_light_setting ( env->time_of_day, env->sun_settings[start_mode], &start_light );

  000d9	8d 45 c4	 lea	 eax, DWORD PTR _start_light$[ebp]
  000dc	50		 push	 eax
  000dd	8b 4d 80	 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000e0	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000e3	8b 84 8a ac 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+172]
  000ea	50		 push	 eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ee	51		 push	 ecx
  000ef	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  000f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fc	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2121 : 
; 2122 : 	calculate_interpolated_light_setting ( env->time_of_day, env->sun_settings[end_mode], &end_light );

  00101	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  00104	50		 push	 eax
  00105	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _end_mode$[ebp]
  0010b	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0010e	8b 84 8a ac 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+172]
  00115	50		 push	 eax
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00119	51		 push	 ecx
  0011a	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2123 : 
; 2124 : 	interpolate_two_light_settings ( &env->sun_light, &start_light, &end_light, weather_t );

  0012c	51		 push	 ecx
  0012d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  0013a	50		 push	 eax
  0013b	8d 4d c4	 lea	 ecx, DWORD PTR _start_light$[ebp]
  0013e	51		 push	 ecx
  0013f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00142	81 c2 e8 00 00
	00		 add	 edx, 232		; 000000e8H
  00148	52		 push	 edx
  00149	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings

; 2125 : 
; 2126 : 	//
; 2127 : 	// Handle the case where there is only one light setting
; 2128 : 	//
; 2129 : 
; 2130 : 	set_3d_sun_position ( env->sun_light.heading, env->sun_light.pitch );

  0014e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00151	51		 push	 ecx
  00152	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  0015a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00162	51		 push	 ecx
  00163	f3 0f 10 81 0c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+268]
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	e8 00 00 00 00	 call	 ?set_3d_sun_position@@YGXMM@Z ; set_3d_sun_position

; 2131 : 
; 2132 : 	set_3d_sun_colour ( &env->sun_light.object_colour );

  00175	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00178	05 fc 00 00 00	 add	 eax, 252		; 000000fcH
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?set_3d_sun_colour@@YGXPAULIGHT_COLOUR@@@Z ; set_3d_sun_colour

; 2133 : 
; 2134 : 	set_3d_sun_scale ( env->sun_light.scale );

  00183	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00186	51		 push	 ecx
  00187	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  0018f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00194	e8 00 00 00 00	 call	 ?set_3d_sun_scale@@YGXM@Z ; set_3d_sun_scale

; 2135 : 
; 2136 : 	if ( env->sun_light.main_light )

  00199	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0019c	83 b8 20 01 00
	00 00		 cmp	 DWORD PTR [eax+288], 0
  001a3	0f 84 55 01 00
	00		 je	 $LN7@calculate_

; 2137 : 	{
; 2138 : 
; 2139 : 		matrix3x3
; 2140 : 			sun_attitude;
; 2141 : 
; 2142 : 		get_3d_transformation_matrix ( sun_attitude, env->sun_light.heading, env->sun_light.pitch, 0 );

  001a9	51		 push	 ecx
  001aa	0f 57 c0	 xorps	 xmm0, xmm0
  001ad	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b2	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001b5	51		 push	 ecx
  001b6	f3 0f 10 80 10
	01 00 00	 movss	 xmm0, DWORD PTR [eax+272]
  001be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c3	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001c6	51		 push	 ecx
  001c7	f3 0f 10 81 0c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+268]
  001cf	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001d4	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR _sun_attitude$1[ebp]
  001da	52		 push	 edx
  001db	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 2143 : 
; 2144 : 		env->sun_3d_light.type = LIGHT_3D_TYPE_DIRECTIONAL;

  001e0	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001e3	c7 80 18 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+536], 1

; 2145 : 
; 2146 : 		env->sun_3d_light.colour = env->sun_light.light__colour;

  001ed	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001f0	05 ec 00 00 00	 add	 eax, 236		; 000000ecH
  001f5	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001f8	81 c1 00 02 00
	00		 add	 ecx, 512		; 00000200H
  001fe	8b 10		 mov	 edx, DWORD PTR [eax]
  00200	89 11		 mov	 DWORD PTR [ecx], edx
  00202	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00205	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00208	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0020b	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  0020e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00211	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 2147 : 		env->sun_3d_light.intensity = ( env->sun_3d_light.colour.red * 0.3 ) + ( env->sun_3d_light.colour.green * 0.59 ) + ( env->sun_3d_light.colour.blue * 0.11 );

  00214	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00217	f3 0f 5a 80 00
	02 00 00	 cvtss2sd xmm0, DWORD PTR [eax+512]
  0021f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00227	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0022a	f3 0f 5a 89 04
	02 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+516]
  00232	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  0023a	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0023e	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00241	f3 0f 5a 8a 08
	02 00 00	 cvtss2sd xmm1, DWORD PTR [edx+520]
  00249	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  00251	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00255	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00259	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0025c	f3 0f 11 80 10
	02 00 00	 movss	 DWORD PTR [eax+528], xmm0

; 2148 : 
; 2149 : 		env->sun_3d_light.light_direction.x = sun_attitude[2][0];

  00264	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00269	d1 e0		 shl	 eax, 1
  0026b	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _sun_attitude$1[ebp+eax]
  00272	ba 04 00 00 00	 mov	 edx, 4
  00277	6b c2 00	 imul	 eax, edx, 0
  0027a	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0027d	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  00280	89 82 e8 01 00
	00		 mov	 DWORD PTR [edx+488], eax

; 2150 : 		env->sun_3d_light.light_direction.y = sun_attitude[2][1];

  00286	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  0028b	d1 e0		 shl	 eax, 1
  0028d	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _sun_attitude$1[ebp+eax]
  00294	ba 04 00 00 00	 mov	 edx, 4
  00299	c1 e2 00	 shl	 edx, 0
  0029c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0029f	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  002a2	89 88 ec 01 00
	00		 mov	 DWORD PTR [eax+492], ecx

; 2151 : 		env->sun_3d_light.light_direction.z = sun_attitude[2][2];

  002a8	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  002ad	d1 e0		 shl	 eax, 1
  002af	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _sun_attitude$1[ebp+eax]
  002b6	ba 04 00 00 00	 mov	 edx, 4
  002bb	d1 e2		 shl	 edx, 1
  002bd	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002c0	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  002c3	89 88 f0 01 00
	00		 mov	 DWORD PTR [eax+496], ecx

; 2152 : 
; 2153 : 		env->shadows_enabled = TRUE;

  002c9	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002cc	c7 80 9c 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+668], 1

; 2154 : 		env->shadow_strength = env->sun_light.shadow;

  002d6	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002d9	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  002dc	8b 91 1c 01 00
	00		 mov	 edx, DWORD PTR [ecx+284]
  002e2	89 90 a0 02 00
	00		 mov	 DWORD PTR [eax+672], edx

; 2155 : 
; 2156 : 		set_3d_sun_light_intensity ( env->sun_light.object_colour.alpha );

  002e8	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002eb	51		 push	 ecx
  002ec	f3 0f 10 80 08
	01 00 00	 movss	 xmm0, DWORD PTR [eax+264]
  002f4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002f9	e8 00 00 00 00	 call	 ?set_3d_sun_light_intensity@@YGXM@Z ; set_3d_sun_light_intensity
$LN7@calculate_:

; 2157 : 	}
; 2158 : }

  002fe	5f		 pop	 edi
  002ff	5e		 pop	 esi
  00300	5b		 pop	 ebx
  00301	8b e5		 mov	 esp, ebp
  00303	5d		 pop	 ebp
  00304	c2 04 00	 ret	 4
?calculate_3d_sun_light@@YGXPAUENV_3D@@@Z ENDP		; calculate_3d_sun_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_end_mode$ = -192					; size = 4
_start_mode$ = -188					; size = 4
_weather_t$ = -184					; size = 4
_result_light$ = -180					; size = 60
_end_light$ = -120					; size = 60
_start_light$ = -60					; size = 60
_env$ = 8						; size = 4
?calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z PROC	; calculate_3d_ambient_light, COMDAT

; 1996 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 00 01 00
	00		 sub	 esp, 256		; 00000100H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1997 : 
; 1998 : 	main_light_setting
; 1999 : 		start_light,
; 2000 : 		end_light,
; 2001 : 		result_light;
; 2002 : 
; 2003 : 	float
; 2004 : 		weather_t;
; 2005 : 
; 2006 : 	weathermodes
; 2007 : 		start_mode,
; 2008 : 		end_mode;
; 2009 : 
; 2010 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 2011 : 
; 2012 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax

; 2013 : 
; 2014 : 	end_mode = get_3d_target_weathermode ( env );

  00039	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  00042	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax

; 2015 : 
; 2016 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00048	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  00051	d9 9d 48 ff ff
	ff		 fstp	 DWORD PTR _weather_t$[ebp]

; 2017 : 
; 2018 : 	if ( weather_t == 0 )

  00057	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  0005f	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  00066	9f		 lahf
  00067	f6 c4 44	 test	 ah, 68			; 00000044H
  0006a	7a 0c		 jp	 SHORT $LN3@calculate_

; 2019 : 	{
; 2020 : 
; 2021 : 		end_mode = start_mode;

  0006c	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  00072	89 85 40 ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 2022 : 	}
; 2023 : 
; 2024 : 	if ( weather_t == 1 )

  00078	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00080	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00087	9f		 lahf
  00088	f6 c4 44	 test	 ah, 68			; 00000044H
  0008b	7a 0c		 jp	 SHORT $LN4@calculate_

; 2025 : 	{
; 2026 : 
; 2027 : 		start_mode = end_mode;

  0008d	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  00093	89 85 44 ff ff
	ff		 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 2028 : 	}
; 2029 : 
; 2030 : 	//
; 2031 : 	// Bomb out if we don't have any ambient light settings
; 2032 : 	//
; 2033 : 
; 2034 : 	if ( !env->ambient_light_settings[start_mode] )

  00099	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000a2	83 bc 81 84 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+132], 0
  000aa	75 14		 jne	 SHORT $LN5@calculate_

; 2035 : 	{
; 2036 : 
; 2037 : 		debug_fatal ( "Unable to calculate the ambient light - no settings have been specified for weather mode %d", start_mode );

  000ac	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR _start_mode$[ebp]
  000b2	50		 push	 eax
  000b3	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@HJMCEHMJ@Unable?5to?5calculate?5the?5ambient@
  000b8	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000bd	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 2038 : 	}
; 2039 : 
; 2040 : 	if ( !env->ambient_light_settings[end_mode] )

  000c0	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000c9	83 bc 81 84 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+132], 0
  000d1	75 14		 jne	 SHORT $LN6@calculate_

; 2041 : 	{
; 2042 : 
; 2043 : 		debug_fatal ( "Unable to calculate the ambient light - no settings have been specified for weather mode %d", end_mode );

  000d3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000d9	50		 push	 eax
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_0FM@HJMCEHMJ@Unable?5to?5calculate?5the?5ambient@
  000df	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000e4	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 2044 : 	}
; 2045 : 
; 2046 : 	calculate_interpolated_light_setting ( env->time_of_day, env->ambient_light_settings[start_mode], &start_light );

  000e7	8d 45 c4	 lea	 eax, DWORD PTR _start_light$[ebp]
  000ea	50		 push	 eax
  000eb	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000f1	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000f4	8b 84 8a 84 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+132]
  000fb	50		 push	 eax
  000fc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ff	51		 push	 ecx
  00100	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00108	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010d	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2047 : 
; 2048 : 	calculate_interpolated_light_setting ( env->time_of_day, env->ambient_light_settings[end_mode], &end_light );

  00112	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  00115	50		 push	 eax
  00116	8b 8d 40 ff ff
	ff		 mov	 ecx, DWORD PTR _end_mode$[ebp]
  0011c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0011f	8b 84 8a 84 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+132]
  00126	50		 push	 eax
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0012a	51		 push	 ecx
  0012b	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00133	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00138	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2049 : 
; 2050 : 	interpolate_two_light_settings ( &result_light, &start_light, &end_light, weather_t );

  0013d	51		 push	 ecx
  0013e	f3 0f 10 85 48
	ff ff ff	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00146	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0014b	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  0014e	50		 push	 eax
  0014f	8d 4d c4	 lea	 ecx, DWORD PTR _start_light$[ebp]
  00152	51		 push	 ecx
  00153	8d 95 4c ff ff
	ff		 lea	 edx, DWORD PTR _result_light$[ebp]
  00159	52		 push	 edx
  0015a	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings

; 2051 : 
; 2052 : 	env->ambient_light.red = result_light.light__colour.red;

  0015f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00162	f3 0f 10 85 50
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+4]
  0016a	f3 0f 11 80 d8
	01 00 00	 movss	 DWORD PTR [eax+472], xmm0

; 2053 : 	env->ambient_light.green = result_light.light__colour.green;

  00172	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00175	f3 0f 10 85 54
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+8]
  0017d	f3 0f 11 80 dc
	01 00 00	 movss	 DWORD PTR [eax+476], xmm0

; 2054 : 	env->ambient_light.blue = result_light.light__colour.blue;

  00185	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00188	f3 0f 10 85 58
	ff ff ff	 movss	 xmm0, DWORD PTR _result_light$[ebp+12]
  00190	f3 0f 11 80 e0
	01 00 00	 movss	 DWORD PTR [eax+480], xmm0

; 2055 : }

  00198	5f		 pop	 edi
  00199	5e		 pop	 esi
  0019a	5b		 pop	 ebx
  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c2 04 00	 ret	 4
?calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z ENDP	; calculate_3d_ambient_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_end_mode$ = -72					; size = 4
_start_mode$ = -68					; size = 4
_weather_t$ = -64					; size = 4
_result_fog$ = -60					; size = 20
_end_fog$ = -40						; size = 20
_start_fog$ = -20					; size = 20
_env$ = 8						; size = 4
?calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z PROC	; calculate_3d_fog_settings, COMDAT

; 1931 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 1932 : 
; 1933 : 	fog_setting
; 1934 : 		start_fog,
; 1935 : 		end_fog,
; 1936 : 		result_fog;
; 1937 : 
; 1938 : 	float
; 1939 : 		weather_t;
; 1940 : 
; 1941 : 	weathermodes
; 1942 : 		start_mode,
; 1943 : 		end_mode;
; 1944 : 
; 1945 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 0e	 add	 eax, 14			; 0000000eH
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 1946 : 
; 1947 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 45 bc	 mov	 DWORD PTR _start_mode$[ebp], eax

; 1948 : 
; 1949 : 	end_mode = get_3d_target_weathermode ( env );

  00036	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  0003f	89 45 b8	 mov	 DWORD PTR _end_mode$[ebp], eax

; 1950 : 
; 1951 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00042	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  0004b	d9 5d c0	 fstp	 DWORD PTR _weather_t$[ebp]

; 1952 : 
; 1953 : 	if ( weather_t == 0 )

  0004e	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00053	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0005a	9f		 lahf
  0005b	f6 c4 44	 test	 ah, 68			; 00000044H
  0005e	7a 06		 jp	 SHORT $LN3@calculate_

; 1954 : 	{
; 1955 : 
; 1956 : 		end_mode = start_mode;

  00060	8b 45 bc	 mov	 eax, DWORD PTR _start_mode$[ebp]
  00063	89 45 b8	 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 1957 : 	}
; 1958 : 
; 1959 : 	if ( weather_t == 1 )

  00066	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  0006b	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00072	9f		 lahf
  00073	f6 c4 44	 test	 ah, 68			; 00000044H
  00076	7a 06		 jp	 SHORT $LN4@calculate_

; 1960 : 	{
; 1961 : 
; 1962 : 		start_mode = end_mode;

  00078	8b 45 b8	 mov	 eax, DWORD PTR _end_mode$[ebp]
  0007b	89 45 bc	 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 1963 : 	}
; 1964 : 
; 1965 : 	//
; 1966 : 	// Bomb out if we don't have any fog settings
; 1967 : 	//
; 1968 : 
; 1969 : 	if ( !env->fog_settings[start_mode] )

  0007e	8b 45 bc	 mov	 eax, DWORD PTR _start_mode$[ebp]
  00081	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00084	83 7c 81 4c 00	 cmp	 DWORD PTR [ecx+eax*4+76], 0
  00089	75 11		 jne	 SHORT $LN5@calculate_

; 1970 : 	{
; 1971 : 
; 1972 : 		debug_fatal ( "Unable to calculate the fog levels - no settings have been specified for weather mode %d", start_mode );

  0008b	8b 45 bc	 mov	 eax, DWORD PTR _start_mode$[ebp]
  0008e	50		 push	 eax
  0008f	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@LKGIJCIJ@Unable?5to?5calculate?5the?5fog?5lev@
  00094	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  00099	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 1973 : 	}
; 1974 : 
; 1975 : 	if ( !env->fog_settings[end_mode] )

  0009c	8b 45 b8	 mov	 eax, DWORD PTR _end_mode$[ebp]
  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000a2	83 7c 81 4c 00	 cmp	 DWORD PTR [ecx+eax*4+76], 0
  000a7	75 11		 jne	 SHORT $LN6@calculate_

; 1976 : 	{
; 1977 : 
; 1978 : 		debug_fatal ( "Unable to calculate the fog levels - no settings have been specified for weather mode %d", end_mode );

  000a9	8b 45 b8	 mov	 eax, DWORD PTR _end_mode$[ebp]
  000ac	50		 push	 eax
  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0FJ@LKGIJCIJ@Unable?5to?5calculate?5the?5fog?5lev@
  000b2	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000b7	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 1979 : 	}
; 1980 : 
; 1981 : 	calculate_interpolated_fog_setting ( env->time_of_day, env->fog_settings[start_mode], &start_fog );

  000ba	8d 45 ec	 lea	 eax, DWORD PTR _start_fog$[ebp]
  000bd	50		 push	 eax
  000be	8b 4d bc	 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000c1	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000c4	8b 44 8a 4c	 mov	 eax, DWORD PTR [edx+ecx*4+76]
  000c8	50		 push	 eax
  000c9	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000cc	51		 push	 ecx
  000cd	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  000d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000da	e8 00 00 00 00	 call	 ?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z ; calculate_interpolated_fog_setting

; 1982 : 
; 1983 : 	calculate_interpolated_fog_setting ( env->time_of_day, env->fog_settings[end_mode], &end_fog );

  000df	8d 45 d8	 lea	 eax, DWORD PTR _end_fog$[ebp]
  000e2	50		 push	 eax
  000e3	8b 4d b8	 mov	 ecx, DWORD PTR _end_mode$[ebp]
  000e6	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000e9	8b 44 8a 4c	 mov	 eax, DWORD PTR [edx+ecx*4+76]
  000ed	50		 push	 eax
  000ee	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000f1	51		 push	 ecx
  000f2	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  000fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000ff	e8 00 00 00 00	 call	 ?calculate_interpolated_fog_setting@@YGXMPAUFOG_SETTING@@0@Z ; calculate_interpolated_fog_setting

; 1984 : 
; 1985 : 	interpolate_two_fog_settings ( &result_fog, &start_fog, &end_fog, weather_t );

  00104	51		 push	 ecx
  00105	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  0010a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0010f	8d 45 d8	 lea	 eax, DWORD PTR _end_fog$[ebp]
  00112	50		 push	 eax
  00113	8d 4d ec	 lea	 ecx, DWORD PTR _start_fog$[ebp]
  00116	51		 push	 ecx
  00117	8d 55 c4	 lea	 edx, DWORD PTR _result_fog$[ebp]
  0011a	52		 push	 edx
  0011b	e8 00 00 00 00	 call	 ?interpolate_two_fog_settings@@YGXPAUFOG_SETTING@@00M@Z ; interpolate_two_fog_settings

; 1986 : 
; 1987 : 	env->fog_start = ( result_fog.start * result_fog.scale );

  00120	f3 0f 10 45 cc	 movss	 xmm0, DWORD PTR _result_fog$[ebp+8]
  00125	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _result_fog$[ebp+4]
  0012a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0012d	f3 0f 11 40 60	 movss	 DWORD PTR [eax+96], xmm0

; 1988 : 	env->fog_end = ( result_fog.end * result_fog.scale );

  00132	f3 0f 10 45 d0	 movss	 xmm0, DWORD PTR _result_fog$[ebp+12]
  00137	f3 0f 59 45 c8	 mulss	 xmm0, DWORD PTR _result_fog$[ebp+4]
  0013c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0013f	f3 0f 11 40 64	 movss	 DWORD PTR [eax+100], xmm0

; 1989 : }

  00144	5f		 pop	 edi
  00145	5e		 pop	 esi
  00146	5b		 pop	 ebx
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c2 04 00	 ret	 4
?calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z ENDP	; calculate_3d_fog_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?calculate_3d_moon_light@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_moon_attitude$1 = -172					; size = 36
_moon_is_main_light$ = -136				; size = 4
_end_mode$ = -132					; size = 4
_start_mode$ = -128					; size = 4
_weather_t$ = -124					; size = 4
_end_light$ = -120					; size = 60
_start_light$ = -60					; size = 60
_env$ = 8						; size = 4
?calculate_3d_moon_light@@YGXPAUENV_3D@@@Z PROC		; calculate_3d_moon_light, COMDAT

; 2165 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ec 00 00
	00		 sub	 esp, 236		; 000000ecH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 2166 : 
; 2167 : 	main_light_setting
; 2168 : 		start_light,
; 2169 : 		end_light;
; 2170 : 
; 2171 : 	float
; 2172 : 		weather_t;
; 2173 : 
; 2174 : 	weathermodes
; 2175 : 		start_mode,
; 2176 : 		end_mode;
; 2177 : 
; 2178 : 	int
; 2179 : 		moon_is_main_light;
; 2180 : 
; 2181 : 	ASSERT ( env );

  0000c	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  00010	75 18		 jne	 SHORT $LN2@calculate_
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??calculate_3d_moon_light@@YGXPAUENV_3D@@@Z@4JA
  00017	83 c0 10	 add	 eax, 16			; 00000010H
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00020	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00025	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@calculate_:

; 2182 : 
; 2183 : 	//
; 2184 : 	// Get the weather information
; 2185 : 	//
; 2186 : 
; 2187 : 	start_mode = get_3d_weathermode ( env );

  0002a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002d	50		 push	 eax
  0002e	e8 00 00 00 00	 call	 ?get_3d_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_weathermode
  00033	89 45 80	 mov	 DWORD PTR _start_mode$[ebp], eax

; 2188 : 
; 2189 : 	end_mode = get_3d_target_weathermode ( env );

  00036	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ?get_3d_target_weathermode@@YG?AW4WEATHERMODES@@PAUENV_3D@@@Z ; get_3d_target_weathermode
  0003f	89 85 7c ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax

; 2190 : 
; 2191 : 	weather_t = get_3d_target_weathermode_transitional_status ( env );

  00045	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?get_3d_target_weathermode_transitional_status@@YGMPAUENV_3D@@@Z ; get_3d_target_weathermode_transitional_status
  0004e	d9 5d 84	 fstp	 DWORD PTR _weather_t$[ebp]

; 2192 : 
; 2193 : 	if ( weather_t == 0 )

  00051	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00056	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@00000000
  0005d	9f		 lahf
  0005e	f6 c4 44	 test	 ah, 68			; 00000044H
  00061	7a 09		 jp	 SHORT $LN3@calculate_

; 2194 : 	{
; 2195 : 
; 2196 : 		end_mode = start_mode;

  00063	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  00066	89 85 7c ff ff
	ff		 mov	 DWORD PTR _end_mode$[ebp], eax
$LN3@calculate_:

; 2197 : 	}
; 2198 : 
; 2199 : 	if ( weather_t == 1 )

  0006c	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00071	0f 2e 05 00 00
	00 00		 ucomiss xmm0, DWORD PTR __real@3f800000
  00078	9f		 lahf
  00079	f6 c4 44	 test	 ah, 68			; 00000044H
  0007c	7a 09		 jp	 SHORT $LN4@calculate_

; 2200 : 	{
; 2201 : 
; 2202 : 		start_mode = end_mode;

  0007e	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  00084	89 45 80	 mov	 DWORD PTR _start_mode$[ebp], eax
$LN4@calculate_:

; 2203 : 	}
; 2204 : 
; 2205 : 	//
; 2206 : 	// Bomb out if we don't have any sun light settings
; 2207 : 	//
; 2208 : 
; 2209 : 	if ( !env->moon_settings[start_mode] )

  00087	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	83 bc 81 c0 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+192], 0
  00095	75 11		 jne	 SHORT $LN5@calculate_

; 2210 : 	{
; 2211 : 
; 2212 : 		debug_fatal ( "Unable to calculate the moon light - no settings have been specified for mode %d", start_mode );

  00097	8b 45 80	 mov	 eax, DWORD PTR _start_mode$[ebp]
  0009a	50		 push	 eax
  0009b	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@EAADBOHM@Unable?5to?5calculate?5the?5moon?5li@
  000a0	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000a5	83 c4 08	 add	 esp, 8
$LN5@calculate_:

; 2213 : 	}
; 2214 : 
; 2215 : 	if ( !env->moon_settings[end_mode] )

  000a8	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000ae	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000b1	83 bc 81 c0 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+192], 0
  000b9	75 14		 jne	 SHORT $LN6@calculate_

; 2216 : 	{
; 2217 : 
; 2218 : 		debug_fatal ( "Unable to calculate the moon light - no settings have been specified for mode %d", end_mode );

  000bb	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR _end_mode$[ebp]
  000c1	50		 push	 eax
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_0FB@EAADBOHM@Unable?5to?5calculate?5the?5moon?5li@
  000c7	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  000cc	83 c4 08	 add	 esp, 8
$LN6@calculate_:

; 2219 : 	}
; 2220 : 
; 2221 : 	moon_is_main_light = FALSE;

  000cf	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _moon_is_main_light$[ebp], 0

; 2222 : 
; 2223 : 	calculate_interpolated_light_setting ( env->time_of_day, env->moon_settings[start_mode], &start_light );

  000d9	8d 45 c4	 lea	 eax, DWORD PTR _start_light$[ebp]
  000dc	50		 push	 eax
  000dd	8b 4d 80	 mov	 ecx, DWORD PTR _start_mode$[ebp]
  000e0	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000e3	8b 84 8a c0 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+192]
  000ea	50		 push	 eax
  000eb	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000ee	51		 push	 ecx
  000ef	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  000f7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000fc	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2224 : 
; 2225 : 	calculate_interpolated_light_setting ( env->time_of_day, env->moon_settings[end_mode], &end_light );

  00101	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  00104	50		 push	 eax
  00105	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR _end_mode$[ebp]
  0010b	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0010e	8b 84 8a c0 00
	00 00		 mov	 eax, DWORD PTR [edx+ecx*4+192]
  00115	50		 push	 eax
  00116	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00119	51		 push	 ecx
  0011a	f3 0f 10 81 e0
	02 00 00	 movss	 xmm0, DWORD PTR [ecx+736]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	e8 00 00 00 00	 call	 ?calculate_interpolated_light_setting@@YGXMPAUMAIN_LIGHT_SETTING@@0@Z ; calculate_interpolated_light_setting

; 2226 : 
; 2227 : 	interpolate_two_light_settings ( &env->moon_light, &start_light, &end_light, weather_t );

  0012c	51		 push	 ecx
  0012d	f3 0f 10 45 84	 movss	 xmm0, DWORD PTR _weather_t$[ebp]
  00132	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00137	8d 45 88	 lea	 eax, DWORD PTR _end_light$[ebp]
  0013a	50		 push	 eax
  0013b	8d 4d c4	 lea	 ecx, DWORD PTR _start_light$[ebp]
  0013e	51		 push	 ecx
  0013f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00142	81 c2 24 01 00
	00		 add	 edx, 292		; 00000124H
  00148	52		 push	 edx
  00149	e8 00 00 00 00	 call	 ?interpolate_two_light_settings@@YGXPAUMAIN_LIGHT_SETTING@@00M@Z ; interpolate_two_light_settings

; 2228 : 
; 2229 : 	//
; 2230 : 	// Handle the case where there is only one light setting
; 2231 : 	//
; 2232 : 
; 2233 : 	set_3d_moon_position ( env->moon_light.heading, env->moon_light.pitch );

  0014e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00151	51		 push	 ecx
  00152	f3 0f 10 80 4c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+332]
  0015a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0015f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00162	51		 push	 ecx
  00163	f3 0f 10 81 48
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+328]
  0016b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00170	e8 00 00 00 00	 call	 ?set_3d_moon_position@@YGXMM@Z ; set_3d_moon_position

; 2234 : 
; 2235 : 	set_3d_moon_colour ( &env->moon_light.object_colour );

  00175	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00178	05 38 01 00 00	 add	 eax, 312		; 00000138H
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 ?set_3d_moon_colour@@YGXPAULIGHT_COLOUR@@@Z ; set_3d_moon_colour

; 2236 : 
; 2237 : 	if ( env->moon_light.main_light )

  00183	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00186	83 b8 5c 01 00
	00 00		 cmp	 DWORD PTR [eax+348], 0
  0018d	0f 84 3f 01 00
	00		 je	 $LN7@calculate_

; 2238 : 	{
; 2239 : 
; 2240 : 		matrix3x3
; 2241 : 			moon_attitude;
; 2242 : 
; 2243 : 		get_3d_transformation_matrix ( moon_attitude, env->moon_light.heading, env->moon_light.pitch, 0 );

  00193	51		 push	 ecx
  00194	0f 57 c0	 xorps	 xmm0, xmm0
  00197	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0019c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0019f	51		 push	 ecx
  001a0	f3 0f 10 80 4c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+332]
  001a8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ad	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001b0	51		 push	 ecx
  001b1	f3 0f 10 81 48
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+328]
  001b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001be	8d 95 54 ff ff
	ff		 lea	 edx, DWORD PTR _moon_attitude$1[ebp]
  001c4	52		 push	 edx
  001c5	e8 00 00 00 00	 call	 ?get_3d_transformation_matrix@@YGXQAY02MMMM@Z ; get_3d_transformation_matrix

; 2244 : 
; 2245 : 		env->moon_3d_light.type = LIGHT_3D_TYPE_DIRECTIONAL;

  001ca	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001cd	c7 80 54 02 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+596], 1

; 2246 : 
; 2247 : 		env->moon_3d_light.colour = env->moon_light.light__colour;

  001d7	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001da	05 28 01 00 00	 add	 eax, 296		; 00000128H
  001df	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001e2	81 c1 3c 02 00
	00		 add	 ecx, 572		; 0000023cH
  001e8	8b 10		 mov	 edx, DWORD PTR [eax]
  001ea	89 11		 mov	 DWORD PTR [ecx], edx
  001ec	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  001ef	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  001f2	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  001f5	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  001f8	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  001fb	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 2248 : 		env->moon_3d_light.intensity = ( env->moon_3d_light.colour.red * 0.3 ) + ( env->moon_3d_light.colour.green * 0.59 ) + ( env->moon_3d_light.colour.blue * 0.11 );

  001fe	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00201	f3 0f 5a 80 3c
	02 00 00	 cvtss2sd xmm0, DWORD PTR [eax+572]
  00209	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3fd3333333333333
  00211	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00214	f3 0f 5a 89 40
	02 00 00	 cvtss2sd xmm1, DWORD PTR [ecx+576]
  0021c	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fe2e147ae147ae1
  00224	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00228	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0022b	f3 0f 5a 8a 44
	02 00 00	 cvtss2sd xmm1, DWORD PTR [edx+580]
  00233	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@3fbc28f5c28f5c29
  0023b	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0023f	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00243	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00246	f3 0f 11 80 4c
	02 00 00	 movss	 DWORD PTR [eax+588], xmm0

; 2249 : 
; 2250 : 		env->moon_3d_light.light_direction.x = moon_attitude[2][0];

  0024e	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00253	d1 e0		 shl	 eax, 1
  00255	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _moon_attitude$1[ebp+eax]
  0025c	ba 04 00 00 00	 mov	 edx, 4
  00261	6b c2 00	 imul	 eax, edx, 0
  00264	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00267	8b 04 01	 mov	 eax, DWORD PTR [ecx+eax]
  0026a	89 82 24 02 00
	00		 mov	 DWORD PTR [edx+548], eax

; 2251 : 		env->moon_3d_light.light_direction.y = moon_attitude[2][1];

  00270	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00275	d1 e0		 shl	 eax, 1
  00277	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _moon_attitude$1[ebp+eax]
  0027e	ba 04 00 00 00	 mov	 edx, 4
  00283	c1 e2 00	 shl	 edx, 0
  00286	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00289	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  0028c	89 88 28 02 00
	00		 mov	 DWORD PTR [eax+552], ecx

; 2252 : 		env->moon_3d_light.light_direction.z = moon_attitude[2][2];

  00292	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00297	d1 e0		 shl	 eax, 1
  00299	8d 8c 05 54 ff
	ff ff		 lea	 ecx, DWORD PTR _moon_attitude$1[ebp+eax]
  002a0	ba 04 00 00 00	 mov	 edx, 4
  002a5	d1 e2		 shl	 edx, 1
  002a7	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002aa	8b 0c 11	 mov	 ecx, DWORD PTR [ecx+edx]
  002ad	89 88 2c 02 00
	00		 mov	 DWORD PTR [eax+556], ecx

; 2253 : 
; 2254 : 		env->shadows_enabled = FALSE;

  002b3	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002b6	c7 80 9c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+668], 0

; 2255 : 
; 2256 : 		env->shadow_strength = env->moon_light.shadow;

  002c0	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002c3	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  002c6	8b 91 58 01 00
	00		 mov	 edx, DWORD PTR [ecx+344]
  002cc	89 90 a0 02 00
	00		 mov	 DWORD PTR [eax+672], edx
$LN7@calculate_:

; 2257 : 	}
; 2258 : }

  002d2	5f		 pop	 edi
  002d3	5e		 pop	 esi
  002d4	5b		 pop	 ebx
  002d5	8b e5		 mov	 esp, ebp
  002d7	5d		 pop	 ebp
  002d8	c2 04 00	 ret	 4
?calculate_3d_moon_light@@YGXPAUENV_3D@@@Z ENDP		; calculate_3d_moon_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$ = -4					; size = 4
_env$ = 8						; size = 4
?initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z PROC	; initialise_3d_shadow_settings, COMDAT

; 1488 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1489 : 
; 1490 : 	int
; 1491 : 		weathermode;
; 1492 : 
; 1493 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 1494 : 
; 1495 : 	env->number_of_shadow_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+128], 0

; 1496 : 
; 1497 : 	for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00034	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$[ebp], 1
  0003b	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003d	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  00040	83 c0 01	 add	 eax, 1
  00043	89 45 fc	 mov	 DWORD PTR _weathermode$[ebp], eax
$LN4@initialise:
  00046	83 7d fc 05	 cmp	 DWORD PTR _weathermode$[ebp], 5
  0004a	7d 13		 jge	 SHORT $LN1@initialise

; 1498 : 	{
; 1499 : 
; 1500 : 		env->shadow_settings[weathermode] = NULL;

  0004c	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0004f	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00052	c7 84 81 d4 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+212], 0

; 1501 : 	}

  0005d	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 1502 : }

  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	5b		 pop	 ebx
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c2 04 00	 ret	 4
?initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z ENDP	; initialise_3d_shadow_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$ = -4					; size = 4
_env$ = 8						; size = 4
?initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z PROC ; initialise_3d_cloud_light_settings, COMDAT

; 1324 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1325 : 
; 1326 : 	int
; 1327 : 		weathermode;
; 1328 : 
; 1329 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 1330 : 
; 1331 : 	env->number_of_cloud_light_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 40 7c 00 00
	00 00		 mov	 DWORD PTR [eax+124], 0

; 1332 : 
; 1333 : 	for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00031	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$[ebp], 1
  00038	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 fc	 mov	 DWORD PTR _weathermode$[ebp], eax
$LN4@initialise:
  00043	83 7d fc 05	 cmp	 DWORD PTR _weathermode$[ebp], 5
  00047	7d 13		 jge	 SHORT $LN1@initialise

; 1334 : 	{
; 1335 : 
; 1336 : 		env->cloud_light_settings[weathermode] = NULL;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004f	c7 84 81 98 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+152], 0

; 1337 : 	}

  0005a	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 1338 : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z ENDP ; initialise_3d_cloud_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$ = -4					; size = 4
_env$ = 8						; size = 4
?initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z PROC	; initialise_3d_sun_settings, COMDAT

; 911  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 912  : 
; 913  : 	int
; 914  : 		weathermode;
; 915  : 
; 916  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 917  : 
; 918  : 	env->number_of_sun_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 40 74 00 00
	00 00		 mov	 DWORD PTR [eax+116], 0

; 919  : 
; 920  : 	for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00031	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$[ebp], 1
  00038	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 fc	 mov	 DWORD PTR _weathermode$[ebp], eax
$LN4@initialise:
  00043	83 7d fc 05	 cmp	 DWORD PTR _weathermode$[ebp], 5
  00047	7d 13		 jge	 SHORT $LN1@initialise

; 921  : 	{
; 922  : 
; 923  : 		env->sun_settings[weathermode] = NULL;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004f	c7 84 81 ac 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+172], 0

; 924  : 	}

  0005a	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 925  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z ENDP	; initialise_3d_sun_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_mode$ = -4						; size = 4
_env$ = 8						; size = 4
?initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z PROC	; initialise_3d_fog_settings, COMDAT

; 565  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 566  : 
; 567  : 	int
; 568  : 		mode;
; 569  : 
; 570  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 571  : 
; 572  : 	env->number_of_fog_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 40 48 00 00
	00 00		 mov	 DWORD PTR [eax+72], 0

; 573  : 
; 574  : 	for ( mode = WEATHERMODE_INVALID + 1; mode < WEATHERMODE_LAST; mode++ )

  00031	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _mode$[ebp], 1
  00038	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _mode$[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 fc	 mov	 DWORD PTR _mode$[ebp], eax
$LN4@initialise:
  00043	83 7d fc 05	 cmp	 DWORD PTR _mode$[ebp], 5
  00047	7d 10		 jge	 SHORT $LN1@initialise

; 575  : 	{
; 576  : 
; 577  : 		env->fog_settings[mode] = NULL;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _mode$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004f	c7 44 81 4c 00
	00 00 00	 mov	 DWORD PTR [ecx+eax*4+76], 0

; 578  : 	}

  00057	eb e1		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 579  : }

  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	5b		 pop	 ebx
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c2 04 00	 ret	 4
?initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z ENDP	; initialise_3d_fog_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$ = -4					; size = 4
_env$ = 8						; size = 4
?initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z PROC ; initialise_3d_ambient_light_settings, COMDAT

; 738  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 739  : 
; 740  : 	int
; 741  : 		weathermode;
; 742  : 
; 743  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 744  : 
; 745  : 	env->number_of_ambient_light_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], 0

; 746  : 
; 747  : 	for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00031	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$[ebp], 1
  00038	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 fc	 mov	 DWORD PTR _weathermode$[ebp], eax
$LN4@initialise:
  00043	83 7d fc 05	 cmp	 DWORD PTR _weathermode$[ebp], 5
  00047	7d 13		 jge	 SHORT $LN1@initialise

; 748  : 	{
; 749  : 
; 750  : 		env->ambient_light_settings[weathermode] = NULL;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004f	c7 84 81 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+132], 0

; 751  : 	}

  0005a	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 752  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ENDP ; initialise_3d_ambient_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_weathermode$ = -4					; size = 4
_env$ = 8						; size = 4
?initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z PROC	; initialise_3d_moon_settings, COMDAT

; 1122 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1123 : 
; 1124 : 	int
; 1125 : 		weathermode;
; 1126 : 
; 1127 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN5@initialise
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN5@initialise:

; 1128 : 
; 1129 : 	env->number_of_moon_settings = 0;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	c7 40 78 00 00
	00 00		 mov	 DWORD PTR [eax+120], 0

; 1130 : 
; 1131 : 	for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00031	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$[ebp], 1
  00038	eb 09		 jmp	 SHORT $LN4@initialise
$LN2@initialise:
  0003a	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 fc	 mov	 DWORD PTR _weathermode$[ebp], eax
$LN4@initialise:
  00043	83 7d fc 05	 cmp	 DWORD PTR _weathermode$[ebp], 5
  00047	7d 13		 jge	 SHORT $LN1@initialise

; 1132 : 	{
; 1133 : 
; 1134 : 		env->moon_settings[weathermode] = NULL;

  00049	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0004c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004f	c7 84 81 c0 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+192], 0

; 1135 : 	}

  0005a	eb de		 jmp	 SHORT $LN2@initialise
$LN1@initialise:

; 1136 : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z ENDP	; initialise_3d_moon_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_light$1 = -12						; size = 4
_old_light$2 = -8					; size = 4
_weathermode$3 = -4					; size = 4
_env$ = 8						; size = 4
?reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z PROC	; reset_3d_ambient_light_settings, COMDAT

; 759  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 760  : 
; 761  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@reset_3d_a
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@reset_3d_a:

; 762  : 
; 763  : 	if ( env->number_of_ambient_light_settings )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 70 00	 cmp	 DWORD PTR [eax+112], 0
  0002e	74 6a		 je	 SHORT $LN8@reset_3d_a

; 764  : 	{
; 765  : 
; 766  : 		int
; 767  : 			weathermode;
; 768  : 
; 769  : 		main_light_setting
; 770  : 			*old_light,
; 771  : 			*light;
; 772  : 
; 773  : 		for ( weathermode = WEATHERMODE_INVALID + 1; weathermode < WEATHERMODE_LAST; weathermode++ )

  00030	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _weathermode$3[ebp], 1
  00037	eb 09		 jmp	 SHORT $LN4@reset_3d_a
$LN2@reset_3d_a:
  00039	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0003c	83 c0 01	 add	 eax, 1
  0003f	89 45 fc	 mov	 DWORD PTR _weathermode$3[ebp], eax
$LN4@reset_3d_a:
  00042	83 7d fc 05	 cmp	 DWORD PTR _weathermode$3[ebp], 5
  00046	7d 52		 jge	 SHORT $LN8@reset_3d_a

; 774  : 		{
; 775  : 
; 776  : 			if ( env->ambient_light_settings[weathermode] )

  00048	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0004b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0004e	83 bc 81 84 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+132], 0
  00056	74 40		 je	 SHORT $LN9@reset_3d_a

; 777  : 			{
; 778  : 
; 779  : 				light = env->ambient_light_settings[weathermode];

  00058	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0005e	8b 94 81 84 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+132]
  00065	89 55 f4	 mov	 DWORD PTR _light$1[ebp], edx
$LN5@reset_3d_a:

; 780  : 
; 781  : 				while ( light )

  00068	83 7d f4 00	 cmp	 DWORD PTR _light$1[ebp], 0
  0006c	74 19		 je	 SHORT $LN6@reset_3d_a

; 782  : 				{
; 783  : 
; 784  : 					old_light = light;

  0006e	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  00071	89 45 f8	 mov	 DWORD PTR _old_light$2[ebp], eax

; 785  : 
; 786  : 					light = light->succ;

  00074	8b 45 f4	 mov	 eax, DWORD PTR _light$1[ebp]
  00077	8b 08		 mov	 ecx, DWORD PTR [eax]
  00079	89 4d f4	 mov	 DWORD PTR _light$1[ebp], ecx

; 787  : 
; 788  : 					safe_free ( old_light );

  0007c	8b 45 f8	 mov	 eax, DWORD PTR _old_light$2[ebp]
  0007f	50		 push	 eax
  00080	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 789  : 				}

  00085	eb e1		 jmp	 SHORT $LN5@reset_3d_a
$LN6@reset_3d_a:

; 790  : 
; 791  : 				env->ambient_light_settings[weathermode] = NULL;

  00087	8b 45 fc	 mov	 eax, DWORD PTR _weathermode$3[ebp]
  0008a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008d	c7 84 81 84 00
	00 00 00 00 00
	00		 mov	 DWORD PTR [ecx+eax*4+132], 0
$LN9@reset_3d_a:

; 792  : 			}
; 793  : 		}

  00098	eb 9f		 jmp	 SHORT $LN2@reset_3d_a
$LN8@reset_3d_a:

; 794  : 	}
; 795  : 
; 796  : 	env->number_of_ambient_light_settings = 0;

  0009a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0009d	c7 40 70 00 00
	00 00		 mov	 DWORD PTR [eax+112], 0

; 797  : }

  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c2 04 00	 ret	 4
?reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ENDP	; reset_3d_ambient_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?initialise_3d_light_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?initialise_3d_light_settings@@YGXPAUENV_3D@@@Z PROC	; initialise_3d_light_settings, COMDAT

; 720  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 721  : 
; 722  : 	env->sun_3d_light.pred = NULL;

  00009	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0000c	c7 80 1c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+540], 0

; 723  : 
; 724  : 	env->sun_3d_light.succ = NULL;

  00016	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00019	c7 80 20 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+544], 0

; 725  : 
; 726  : 	env->moon_3d_light.pred = NULL;

  00023	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00026	c7 80 58 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+600], 0

; 727  : 
; 728  : 	env->moon_3d_light.succ = NULL;

  00030	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00033	c7 80 5c 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+604], 0

; 729  : 
; 730  : 	env->secondary_light_sources = NULL;

  0003d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00040	c7 80 a4 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+676], 0

; 731  : }

  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c2 04 00	 ret	 4
?initialise_3d_light_settings@@YGXPAUENV_3D@@@Z ENDP	; initialise_3d_light_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?get_interpolated_angle@@YGMMMM@Z
_TEXT	SEGMENT
tv128 = -88						; size = 4
tv142 = -84						; size = 4
tv132 = -80						; size = 4
tv90 = -80						; size = 4
_angle$1 = -12						; size = 4
_difference2$ = -8					; size = 4
_difference1$ = -4					; size = 4
_angle1$ = 8						; size = 4
_angle2$ = 12						; size = 4
_t$ = 16						; size = 4
?get_interpolated_angle@@YGMMMM@Z PROC			; get_interpolated_angle, COMDAT

; 2406 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 2407 : 
; 2408 : 	float
; 2409 : 		difference1,
; 2410 : 		difference2;
; 2411 : 
; 2412 : 	//
; 2413 : 	// Both angles are between 0 and 2*PI - ( ie 0 -> 360 )
; 2414 : 	//
; 2415 : 
; 2416 : 	//
; 2417 : 	// Find the smallest distance between angle1, and angle2
; 2418 : 	//
; 2419 : 
; 2420 : 	difference1 = angle2 - angle1;

  00009	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _angle2$[ebp]
  0000e	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _angle1$[ebp]
  00013	f3 0f 11 45 fc	 movss	 DWORD PTR _difference1$[ebp], xmm0

; 2421 : 
; 2422 : 	difference2 = ( angle2 + PI2 ) - angle1;

  00018	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _angle2$[ebp]
  0001d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  00025	f3 0f 5c 45 08	 subss	 xmm0, DWORD PTR _angle1$[ebp]
  0002a	f3 0f 11 45 f8	 movss	 DWORD PTR _difference2$[ebp], xmm0

; 2423 : 
; 2424 : 	if ( fabs ( difference1 ) <= fabs ( difference2 ) )

  0002f	51		 push	 ecx
  00030	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _difference1$[ebp]
  00035	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003a	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0003f	d9 5d b0	 fstp	 DWORD PTR tv90[ebp]
  00042	f3 0f 10 45 b0	 movss	 xmm0, DWORD PTR tv90[ebp]
  00047	51		 push	 ecx
  00048	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR _difference2$[ebp]
  0004d	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  00052	f3 0f 11 45 ac	 movss	 DWORD PTR tv142[ebp], xmm0
  00057	e8 00 00 00 00	 call	 ?fabs@@YGMM@Z		; fabs
  0005c	d9 5d a8	 fstp	 DWORD PTR tv128[ebp]
  0005f	f3 0f 10 45 a8	 movss	 xmm0, DWORD PTR tv128[ebp]
  00064	f3 0f 10 4d ac	 movss	 xmm1, DWORD PTR tv142[ebp]
  00069	0f 2f c1	 comiss	 xmm0, xmm1
  0006c	72 1b		 jb	 SHORT $LN2@get_interp

; 2425 : 	{
; 2426 : 
; 2427 : 		//
; 2428 : 		// Interpolate as normal
; 2429 : 		//
; 2430 : 
; 2431 : 		return ( angle1 + ( difference1 * t ) );

  0006e	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _difference1$[ebp]
  00073	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _t$[ebp]
  00078	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _angle1$[ebp]
  0007d	f3 0f 11 45 b0	 movss	 DWORD PTR tv132[ebp], xmm0
  00082	d9 45 b0	 fld	 DWORD PTR tv132[ebp]
  00085	eb 54		 jmp	 SHORT $LN3@get_interp

; 2432 : 	}
; 2433 : 	else

  00087	eb 52		 jmp	 SHORT $LN3@get_interp
$LN2@get_interp:

; 2434 : 	{
; 2435 : 
; 2436 : 		float
; 2437 : 			angle;
; 2438 : 
; 2439 : 		angle = ( angle1 + ( difference2 * t ) );

  00089	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _difference2$[ebp]
  0008e	f3 0f 59 45 10	 mulss	 xmm0, DWORD PTR _t$[ebp]
  00093	f3 0f 58 45 08	 addss	 xmm0, DWORD PTR _angle1$[ebp]
  00098	f3 0f 11 45 f4	 movss	 DWORD PTR _angle$1[ebp], xmm0

; 2440 : 
; 2441 : 		if ( angle < 0 )

  0009d	0f 57 c0	 xorps	 xmm0, xmm0
  000a0	0f 2f 45 f4	 comiss	 xmm0, DWORD PTR _angle$1[ebp]
  000a4	76 12		 jbe	 SHORT $LN4@get_interp

; 2442 : 		{
; 2443 : 
; 2444 : 			angle += PI2;

  000a6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _angle$1[ebp]
  000ab	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c90fdb
  000b3	f3 0f 11 45 f4	 movss	 DWORD PTR _angle$1[ebp], xmm0
$LN4@get_interp:

; 2445 : 		}
; 2446 : 
; 2447 : 		if ( angle > PI2 )

  000b8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _angle$1[ebp]
  000bd	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@40c90fdb
  000c4	76 12		 jbe	 SHORT $LN5@get_interp

; 2448 : 		{
; 2449 : 
; 2450 : 			angle -= PI2;

  000c6	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _angle$1[ebp]
  000cb	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@40c90fdb
  000d3	f3 0f 11 45 f4	 movss	 DWORD PTR _angle$1[ebp], xmm0
$LN5@get_interp:

; 2451 : 		}
; 2452 : 
; 2453 : 		return ( angle );

  000d8	d9 45 f4	 fld	 DWORD PTR _angle$1[ebp]
$LN3@get_interp:

; 2454 : 	}
; 2455 : }

  000db	5f		 pop	 edi
  000dc	5e		 pop	 esi
  000dd	5b		 pop	 ebx
  000de	8b e5		 mov	 esp, ebp
  000e0	5d		 pop	 ebp
  000e1	c2 0c 00	 ret	 12			; 0000000cH
?get_interpolated_angle@@YGMMMM@Z ENDP			; get_interpolated_angle
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z PROC ; recalculate_3d_environment_settings, COMDAT

; 1875 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1876 : 
; 1877 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@recalculat
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@recalculat:

; 1878 : 
; 1879 : 	//
; 1880 : 	// Calcualate the light settings
; 1881 : 	//
; 1882 : 
; 1883 : 	if ( env->lightmode == LIGHTMODE_AUTOMATIC_LIGHT )

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	83 78 6c 01	 cmp	 DWORD PTR [eax+108], 1
  0002e	75 2d		 jne	 SHORT $LN3@recalculat

; 1884 : 	{
; 1885 : 	
; 1886 : 		calculate_3d_ambient_light ( env );

  00030	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?calculate_3d_ambient_light@@YGXPAUENV_3D@@@Z ; calculate_3d_ambient_light

; 1887 : 	
; 1888 : 		calculate_3d_sun_light ( env );

  00039	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?calculate_3d_sun_light@@YGXPAUENV_3D@@@Z ; calculate_3d_sun_light

; 1889 : 	
; 1890 : 		calculate_3d_moon_light ( env );

  00042	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?calculate_3d_moon_light@@YGXPAUENV_3D@@@Z ; calculate_3d_moon_light

; 1891 : 
; 1892 : 		calculate_3d_cloud_light ( env );

  0004b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004e	50		 push	 eax
  0004f	e8 00 00 00 00	 call	 ?calculate_3d_cloud_light@@YGXPAUENV_3D@@@Z ; calculate_3d_cloud_light

; 1893 : 
; 1894 : 		calculate_3d_shadow_light ( env );

  00054	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 ?calculate_3d_shadow_light@@YGXPAUENV_3D@@@Z ; calculate_3d_shadow_light
$LN3@recalculat:

; 1895 : 	}
; 1896 : 
; 1897 : 	//
; 1898 : 	// Update the positioning according to the time of day
; 1899 : 	//
; 1900 : 
; 1901 : 	update_3d_horizon ( env );

  0005d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00060	50		 push	 eax
  00061	e8 00 00 00 00	 call	 ?update_3d_horizon@@YGXPAUENV_3D@@@Z ; update_3d_horizon

; 1902 : 
; 1903 : 	if ( env->fogmode == FOGMODE_ON_AUTOMATIC )

  00066	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00069	83 78 44 01	 cmp	 DWORD PTR [eax+68], 1
  0006d	75 18		 jne	 SHORT $LN4@recalculat

; 1904 : 	{
; 1905 : 
; 1906 : 		env->fog_colour = env->horizon_3d_fog_colour;

  0006f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00072	8b 88 a8 02 00
	00		 mov	 ecx, DWORD PTR [eax+680]
  00078	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0007b	89 4a 68	 mov	 DWORD PTR [edx+104], ecx

; 1907 : 
; 1908 : 		//
; 1909 : 		// Calculate the fog start / end positions
; 1910 : 		//
; 1911 : 
; 1912 : 		calculate_3d_fog_settings ( env );

  0007e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?calculate_3d_fog_settings@@YGXPAUENV_3D@@@Z ; calculate_3d_fog_settings
$LN4@recalculat:

; 1913 : 	}
; 1914 : 
; 1915 : 	//
; 1916 : 	// If this is the current 3d environment, update all the 3d variables
; 1917 : 	//
; 1918 : 
; 1919 : 	if ( env == active_3d_environment )

  00087	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0008a	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  00090	75 09		 jne	 SHORT $LN1@recalculat

; 1920 : 	{
; 1921 : 
; 1922 : 		set_3d_active_environment ( env );

  00092	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?set_3d_active_environment@@YGXPAUENV_3D@@@Z ; set_3d_active_environment
$LN1@recalculat:

; 1923 : 	}
; 1924 : }

  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx
  0009e	8b e5		 mov	 esp, ebp
  000a0	5d		 pop	 ebp
  000a1	c2 04 00	 ret	 4
?recalculate_3d_environment_settings@@YGXPAUENV_3D@@@Z ENDP ; recalculate_3d_environment_settings
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z
_TEXT	SEGMENT
_fog$1 = -8						; size = 4
_mode$ = -4						; size = 4
_env$ = 8						; size = 4
_new_fog_scale$ = 12					; size = 4
?set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z PROC ; set_global_3d_fog_scale_setting, COMDAT

; 1748 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1749 : 
; 1750 : 	int
; 1751 : 		mode;
; 1752 : 
; 1753 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN7@set_global
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN7@set_global:

; 1754 : 
; 1755 : 	//
; 1756 : 	// Go through all the fog settings, altering the scale of each one to the new scale
; 1757 : 	//
; 1758 : 
; 1759 : 	for ( mode = WEATHERMODE_INVALID + 1; mode < WEATHERMODE_LAST; mode++ )

  00027	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _mode$[ebp], 1
  0002e	eb 09		 jmp	 SHORT $LN4@set_global
$LN2@set_global:
  00030	8b 45 fc	 mov	 eax, DWORD PTR _mode$[ebp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 45 fc	 mov	 DWORD PTR _mode$[ebp], eax
$LN4@set_global:
  00039	83 7d fc 05	 cmp	 DWORD PTR _mode$[ebp], 5
  0003d	7d 2c		 jge	 SHORT $LN3@set_global

; 1760 : 	{
; 1761 : 
; 1762 : 		fog_setting
; 1763 : 			*fog;
; 1764 : 
; 1765 : 		fog = env->fog_settings[mode];

  0003f	8b 45 fc	 mov	 eax, DWORD PTR _mode$[ebp]
  00042	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00045	8b 54 81 4c	 mov	 edx, DWORD PTR [ecx+eax*4+76]
  00049	89 55 f8	 mov	 DWORD PTR _fog$1[ebp], edx
$LN5@set_global:

; 1766 : 
; 1767 : 		while ( fog )

  0004c	83 7d f8 00	 cmp	 DWORD PTR _fog$1[ebp], 0
  00050	74 17		 je	 SHORT $LN6@set_global

; 1768 : 		{
; 1769 : 
; 1770 : 			fog->scale = new_fog_scale;

  00052	8b 45 f8	 mov	 eax, DWORD PTR _fog$1[ebp]
  00055	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _new_fog_scale$[ebp]
  0005a	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1771 : 
; 1772 : 			fog = fog->succ;

  0005f	8b 45 f8	 mov	 eax, DWORD PTR _fog$1[ebp]
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	89 4d f8	 mov	 DWORD PTR _fog$1[ebp], ecx

; 1773 : 		}

  00067	eb e3		 jmp	 SHORT $LN5@set_global
$LN6@set_global:

; 1774 : 	}

  00069	eb c5		 jmp	 SHORT $LN2@set_global
$LN3@set_global:

; 1775 : }

  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi
  0006d	5b		 pop	 ebx
  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c2 08 00	 ret	 8
?set_global_3d_fog_scale_setting@@YGXPAUENV_3D@@M@Z ENDP ; set_global_3d_fog_scale_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z
_TEXT	SEGMENT
_in_list$ = -8						; size = 4
_lights$ = -4						; size = 4
_env$ = 8						; size = 4
_light$ = 12						; size = 4
?remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z PROC ; remove_3d_light_from_environment, COMDAT

; 1782 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1783 : 
; 1784 : 	light_3d_source
; 1785 : 		*lights;
; 1786 : 
; 1787 : 	int
; 1788 : 		in_list;
; 1789 : 
; 1790 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@remove_3d_
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA
  00014	83 c0 08	 add	 eax, 8
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@remove_3d_:

; 1791 : 
; 1792 : 	//
; 1793 : 	// Check that the light is in the environment already.
; 1794 : 	//
; 1795 : 
; 1796 : 	in_list = FALSE;

  00027	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _in_list$[ebp], 0

; 1797 : 
; 1798 : 	lights = env->secondary_light_sources;

  0002e	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00031	8b 88 a4 02 00
	00		 mov	 ecx, DWORD PTR [eax+676]
  00037	89 4d fc	 mov	 DWORD PTR _lights$[ebp], ecx
$LN2@remove_3d_:

; 1799 : 
; 1800 : 	while ( lights )

  0003a	83 7d fc 00	 cmp	 DWORD PTR _lights$[ebp], 0
  0003e	74 1e		 je	 SHORT $LN3@remove_3d_

; 1801 : 	{
; 1802 : 
; 1803 : 		if ( lights == light )

  00040	8b 45 fc	 mov	 eax, DWORD PTR _lights$[ebp]
  00043	3b 45 0c	 cmp	 eax, DWORD PTR _light$[ebp]
  00046	75 0b		 jne	 SHORT $LN5@remove_3d_

; 1804 : 		{
; 1805 : 
; 1806 : 			in_list = TRUE;

  00048	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR _in_list$[ebp], 1

; 1807 : 
; 1808 : 			break;

  0004f	eb 0d		 jmp	 SHORT $LN3@remove_3d_

; 1809 : 		}
; 1810 : 		else

  00051	eb 09		 jmp	 SHORT $LN6@remove_3d_
$LN5@remove_3d_:

; 1811 : 		{
; 1812 : 
; 1813 : 			lights = lights->succ;

  00053	8b 45 fc	 mov	 eax, DWORD PTR _lights$[ebp]
  00056	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00059	89 4d fc	 mov	 DWORD PTR _lights$[ebp], ecx
$LN6@remove_3d_:

; 1814 : 		}
; 1815 : 	}

  0005c	eb dc		 jmp	 SHORT $LN2@remove_3d_
$LN3@remove_3d_:

; 1816 : 
; 1817 : 	if ( !in_list )

  0005e	83 7d f8 00	 cmp	 DWORD PTR _in_list$[ebp], 0
  00062	75 0f		 jne	 SHORT $LN7@remove_3d_

; 1818 : 	{
; 1819 : 
; 1820 : 		debug_fatal ( "Trying to remove light from environment, but its not in there in the first place!" );

  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0FC@OINNIEM@Trying?5to?5remove?5light?5from?5env@
  00069	e8 00 00 00 00	 call	 ?debug_fatal@@YAXPBDZZ	; debug_fatal
  0006e	83 c4 04	 add	 esp, 4

; 1821 : 	}
; 1822 : 	else

  00071	eb 79		 jmp	 SHORT $LN1@remove_3d_
$LN7@remove_3d_:

; 1823 : 	{
; 1824 : 
; 1825 : 		//
; 1826 : 		// Remove the light
; 1827 : 		//
; 1828 : 
; 1829 : 		if ( env->secondary_light_sources == light )

  00073	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00076	8b 88 a4 02 00
	00		 mov	 ecx, DWORD PTR [eax+676]
  0007c	3b 4d 0c	 cmp	 ecx, DWORD PTR _light$[ebp]
  0007f	75 27		 jne	 SHORT $LN9@remove_3d_

; 1830 : 		{
; 1831 : 
; 1832 : 			//
; 1833 : 			// Remove from the head of the list
; 1834 : 			//
; 1835 : 
; 1836 : 			env->secondary_light_sources = light->succ;

  00081	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00084	8b 4d 0c	 mov	 ecx, DWORD PTR _light$[ebp]
  00087	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  0008a	89 90 a4 02 00
	00		 mov	 DWORD PTR [eax+676], edx

; 1837 : 
; 1838 : 			if ( light->succ )

  00090	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  00093	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  00097	74 0d		 je	 SHORT $LN11@remove_3d_

; 1839 : 			{
; 1840 : 
; 1841 : 				light->succ->pred = NULL;

  00099	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  0009c	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0009f	c7 41 34 00 00
	00 00		 mov	 DWORD PTR [ecx+52], 0
$LN11@remove_3d_:

; 1842 : 			}
; 1843 : 		}
; 1844 : 		else

  000a6	eb 30		 jmp	 SHORT $LN10@remove_3d_
$LN9@remove_3d_:

; 1845 : 		{
; 1846 : 
; 1847 : 			if ( light->succ )

  000a8	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000ab	83 78 38 00	 cmp	 DWORD PTR [eax+56], 0
  000af	74 0f		 je	 SHORT $LN12@remove_3d_

; 1848 : 			{
; 1849 : 
; 1850 : 				light->succ->pred = light->pred;

  000b1	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000b4	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  000b7	8b 55 0c	 mov	 edx, DWORD PTR _light$[ebp]
  000ba	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  000bd	89 41 34	 mov	 DWORD PTR [ecx+52], eax
$LN12@remove_3d_:

; 1851 : 			}
; 1852 : 
; 1853 : 			if ( light->pred )

  000c0	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000c3	83 78 34 00	 cmp	 DWORD PTR [eax+52], 0
  000c7	74 0f		 je	 SHORT $LN10@remove_3d_

; 1854 : 			{
; 1855 : 
; 1856 : 				light->pred->succ = light->succ;

  000c9	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000cc	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  000cf	8b 55 0c	 mov	 edx, DWORD PTR _light$[ebp]
  000d2	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  000d5	89 41 38	 mov	 DWORD PTR [ecx+56], eax
$LN10@remove_3d_:

; 1857 : 			}
; 1858 : 		}
; 1859 : 
; 1860 : 		//
; 1861 : 		// Destroy any lingering pointers
; 1862 : 		//
; 1863 : 
; 1864 : 		light->succ = NULL;

  000d8	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000db	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0

; 1865 : 
; 1866 : 		light->pred = NULL;

  000e2	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  000e5	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0
$LN1@remove_3d_:

; 1867 : 	}
; 1868 : }

  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	5b		 pop	 ebx
  000ef	8b e5		 mov	 esp, ebp
  000f1	5d		 pop	 ebp
  000f2	c2 08 00	 ret	 8
?remove_3d_light_from_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z ENDP ; remove_3d_light_from_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z
_TEXT	SEGMENT
_lights$ = -4						; size = 4
_env$ = 8						; size = 4
_light$ = 12						; size = 4
?add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z PROC ; add_3d_light_to_environment, COMDAT

; 1698 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1699 : 
; 1700 : 	light_3d_source
; 1701 : 		*lights;
; 1702 : 
; 1703 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_lig
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_lig:

; 1704 : 
; 1705 : 	//
; 1706 : 	// Check that the light isn't in the environment already.
; 1707 : 	//
; 1708 : 
; 1709 : 	lights = env->secondary_light_sources;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 88 a4 02 00
	00		 mov	 ecx, DWORD PTR [eax+676]
  00030	89 4d fc	 mov	 DWORD PTR _lights$[ebp], ecx
$LN2@add_3d_lig:

; 1710 : 
; 1711 : 	while ( lights )

  00033	83 7d fc 00	 cmp	 DWORD PTR _lights$[ebp], 0
  00037	74 17		 je	 SHORT $LN3@add_3d_lig

; 1712 : 	{
; 1713 : 
; 1714 : 		if ( lights == light )

  00039	8b 45 fc	 mov	 eax, DWORD PTR _lights$[ebp]
  0003c	3b 45 0c	 cmp	 eax, DWORD PTR _light$[ebp]
  0003f	75 04		 jne	 SHORT $LN5@add_3d_lig

; 1715 : 		{
; 1716 : 
; 1717 : 			return;

  00041	eb 4d		 jmp	 SHORT $LN1@add_3d_lig

; 1718 : 		}
; 1719 : 		else

  00043	eb 09		 jmp	 SHORT $LN6@add_3d_lig
$LN5@add_3d_lig:

; 1720 : 		{
; 1721 : 
; 1722 : 			lights = lights->succ;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _lights$[ebp]
  00048	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  0004b	89 4d fc	 mov	 DWORD PTR _lights$[ebp], ecx
$LN6@add_3d_lig:

; 1723 : 		}
; 1724 : 	}

  0004e	eb e3		 jmp	 SHORT $LN2@add_3d_lig
$LN3@add_3d_lig:

; 1725 : 
; 1726 : 	//
; 1727 : 	// It isn't in the list - add it
; 1728 : 	//
; 1729 : 
; 1730 : 	light->succ = env->secondary_light_sources;

  00050	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  00053	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00056	8b 91 a4 02 00
	00		 mov	 edx, DWORD PTR [ecx+676]
  0005c	89 50 38	 mov	 DWORD PTR [eax+56], edx

; 1731 : 
; 1732 : 	light->pred = NULL;

  0005f	8b 45 0c	 mov	 eax, DWORD PTR _light$[ebp]
  00062	c7 40 34 00 00
	00 00		 mov	 DWORD PTR [eax+52], 0

; 1733 : 
; 1734 : 	if ( env->secondary_light_sources )

  00069	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0006c	83 b8 a4 02 00
	00 00		 cmp	 DWORD PTR [eax+676], 0
  00073	74 0f		 je	 SHORT $LN7@add_3d_lig

; 1735 : 	{
; 1736 : 	
; 1737 : 		env->secondary_light_sources->pred = light;

  00075	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00078	8b 88 a4 02 00
	00		 mov	 ecx, DWORD PTR [eax+676]
  0007e	8b 55 0c	 mov	 edx, DWORD PTR _light$[ebp]
  00081	89 51 34	 mov	 DWORD PTR [ecx+52], edx
$LN7@add_3d_lig:

; 1738 : 	}
; 1739 : 
; 1740 : 	env->secondary_light_sources = light;

  00084	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00087	8b 4d 0c	 mov	 ecx, DWORD PTR _light$[ebp]
  0008a	89 88 a4 02 00
	00		 mov	 DWORD PTR [eax+676], ecx
$LN1@add_3d_lig:

; 1741 : }

  00090	5f		 pop	 edi
  00091	5e		 pop	 esi
  00092	5b		 pop	 ebx
  00093	8b e5		 mov	 esp, ebp
  00095	5d		 pop	 ebp
  00096	c2 08 00	 ret	 8
?add_3d_light_to_environment@@YGXPAUENV_3D@@PAULIGHT_3D_SOURCE@@@Z ENDP ; add_3d_light_to_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z
_TEXT	SEGMENT
_last_light$1 = -24					; size = 4
_this_light$2 = -20					; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_light$ = -4						; size = 4
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
_colour$ = 16						; size = 4
_time$ = 20						; size = 4
?add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z PROC ; add_3d_shadow_setting, COMDAT

; 1554 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1555 : 
; 1556 : 	main_light_setting
; 1557 : 		*light;
; 1558 : 
; 1559 : 	float
; 1560 : 		r,
; 1561 : 		g,
; 1562 : 		b;
; 1563 : 
; 1564 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_sha
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_sha:

; 1565 : 
; 1566 : 	light = ( main_light_setting * ) safe_malloc ( sizeof ( main_light_setting ) );

  00027	6a 3c		 push	 60			; 0000003cH
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _light$[ebp], eax

; 1567 : 
; 1568 : 	r = colour.r;

  00031	0f b6 45 12	 movzx	 eax, BYTE PTR _colour$[ebp+2]
  00035	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00039	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1569 : 	g = colour.g;

  0003e	0f b6 45 11	 movzx	 eax, BYTE PTR _colour$[ebp+1]
  00042	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00046	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1570 : 	b = colour.b;

  0004b	0f b6 45 10	 movzx	 eax, BYTE PTR _colour$[ebp]
  0004f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00053	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1571 : 
; 1572 : 	r /= 255.0;

  00058	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  0005d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00065	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00069	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1573 : 	g /= 255.0;

  0006e	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  00073	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0007b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007f	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1574 : 	b /= 255.0;

  00084	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  00089	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00091	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00095	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1575 : 
; 1576 : 	light->light__colour.red = r;

  0009a	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0009d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  000a2	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1577 : 	light->light__colour.green = g;

  000a7	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000aa	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000af	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1578 : 	light->light__colour.blue = b;

  000b4	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000b7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000bc	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 1579 : 
; 1580 : 	light->time = time;

  000c1	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000c4	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _time$[ebp]
  000c9	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1581 : 
; 1582 : 	if ( env->shadow_settings[mode] )

  000ce	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  000d1	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000d4	83 bc 81 d4 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+212], 0
  000dc	0f 84 b1 00 00
	00		 je	 $LN5@add_3d_sha

; 1583 : 	{
; 1584 : 
; 1585 : 		main_light_setting
; 1586 : 			*this_light,
; 1587 : 			*last_light;
; 1588 : 
; 1589 : 		env->number_of_shadow_settings++;

  000e2	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  000e5	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  000eb	83 c1 01	 add	 ecx, 1
  000ee	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000f1	89 8a 80 00 00
	00		 mov	 DWORD PTR [edx+128], ecx

; 1590 : 
; 1591 : 		last_light = env->shadow_settings[mode];

  000f7	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  000fa	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000fd	8b 94 81 d4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+212]
  00104	89 55 e8	 mov	 DWORD PTR _last_light$1[ebp], edx

; 1592 : 
; 1593 : 		this_light = env->shadow_settings[mode];

  00107	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  0010a	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0010d	8b 94 81 d4 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+212]
  00114	89 55 ec	 mov	 DWORD PTR _this_light$2[ebp], edx
$LN2@add_3d_sha:

; 1594 : 
; 1595 : 		while ( this_light )

  00117	83 7d ec 00	 cmp	 DWORD PTR _this_light$2[ebp], 0
  0011b	74 63		 je	 SHORT $LN3@add_3d_sha

; 1596 : 		{
; 1597 : 
; 1598 : 			if ( this_light->time > light->time )

  0011d	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00120	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00123	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00128	0f 2f 41 2c	 comiss	 xmm0, DWORD PTR [ecx+44]
  0012c	76 42		 jbe	 SHORT $LN7@add_3d_sha

; 1599 : 			{
; 1600 : 
; 1601 : 				//
; 1602 : 				// Insert *before* this_light
; 1603 : 				//
; 1604 : 
; 1605 : 				if ( last_light == this_light )

  0012e	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00131	3b 45 ec	 cmp	 eax, DWORD PTR _this_light$2[ebp]
  00134	75 26		 jne	 SHORT $LN9@add_3d_sha

; 1606 : 				{
; 1607 : 
; 1608 : 					light->succ = env->shadow_settings[mode];

  00136	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00139	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  0013c	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0013f	8b 8c 8a d4 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+212]
  00146	89 08		 mov	 DWORD PTR [eax], ecx

; 1609 : 
; 1610 : 					env->shadow_settings[mode] = light;

  00148	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0014e	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  00151	89 94 81 d4 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+212], edx

; 1611 : 
; 1612 : 					return;

  00158	eb 67		 jmp	 SHORT $LN1@add_3d_sha

; 1613 : 				}
; 1614 : 				else

  0015a	eb 12		 jmp	 SHORT $LN10@add_3d_sha
$LN9@add_3d_sha:

; 1615 : 				{
; 1616 : 
; 1617 : 					last_light->succ = light;

  0015c	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  0015f	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00162	89 08		 mov	 DWORD PTR [eax], ecx

; 1618 : 
; 1619 : 					light->succ = this_light;

  00164	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00167	8b 4d ec	 mov	 ecx, DWORD PTR _this_light$2[ebp]
  0016a	89 08		 mov	 DWORD PTR [eax], ecx

; 1620 : 
; 1621 : 					return;

  0016c	eb 53		 jmp	 SHORT $LN1@add_3d_sha
$LN10@add_3d_sha:

; 1622 : 				}
; 1623 : 			}
; 1624 : 			else

  0016e	eb 0e		 jmp	 SHORT $LN8@add_3d_sha
$LN7@add_3d_sha:

; 1625 : 			{
; 1626 : 
; 1627 : 				last_light = this_light;

  00170	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00173	89 45 e8	 mov	 DWORD PTR _last_light$1[ebp], eax

; 1628 : 
; 1629 : 				this_light = this_light->succ;

  00176	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00179	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017b	89 4d ec	 mov	 DWORD PTR _this_light$2[ebp], ecx
$LN8@add_3d_sha:

; 1630 : 			}
; 1631 : 		}

  0017e	eb 97		 jmp	 SHORT $LN2@add_3d_sha
$LN3@add_3d_sha:

; 1632 : 
; 1633 : 		//
; 1634 : 		// Got to the end of the list, and have to put it here.
; 1635 : 		//
; 1636 : 
; 1637 : 		light->succ = NULL;

  00180	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00183	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1638 : 
; 1639 : 		last_light->succ = light;

  00189	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  0018c	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0018f	89 08		 mov	 DWORD PTR [eax], ecx

; 1640 : 	}
; 1641 : 	else

  00191	eb 2e		 jmp	 SHORT $LN6@add_3d_sha
$LN5@add_3d_sha:

; 1642 : 	{
; 1643 : 
; 1644 : 		env->number_of_shadow_settings++;

  00193	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00196	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [eax+128]
  0019c	83 c1 01	 add	 ecx, 1
  0019f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001a2	89 8a 80 00 00
	00		 mov	 DWORD PTR [edx+128], ecx

; 1645 : 
; 1646 : 		env->shadow_settings[mode] = light;

  001a8	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  001ab	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001ae	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  001b1	89 94 81 d4 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+212], edx

; 1647 : 
; 1648 : 		light->succ = NULL;

  001b8	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001bb	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_sha:
$LN1@add_3d_sha:

; 1649 : 	}
; 1650 : }

  001c1	5f		 pop	 edi
  001c2	5e		 pop	 esi
  001c3	5b		 pop	 ebx
  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c2 10 00	 ret	 16			; 00000010H
?add_3d_shadow_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@M@Z ENDP ; add_3d_shadow_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z
_TEXT	SEGMENT
_last_light$1 = -12					; size = 4
_this_light$2 = -8					; size = 4
_light$ = -4						; size = 4
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
_colour$ = 16						; size = 4
_object_colour$ = 20					; size = 4
_heading$ = 24						; size = 4
_pitch$ = 28						; size = 4
_time$ = 32						; size = 4
?add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z PROC ; add_3d_cloud_light_setting, COMDAT

; 1390 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1391 : 
; 1392 : 	main_light_setting
; 1393 : 		*light;
; 1394 : 
; 1395 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_clo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_clo:

; 1396 : 
; 1397 : 	light = ( main_light_setting * ) safe_malloc ( sizeof ( main_light_setting ) );

  00027	6a 3c		 push	 60			; 0000003cH
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _light$[ebp], eax

; 1398 : 
; 1399 : 	light->light__colour.red = ( ( float ) colour.r ) / 255.0;

  00031	0f b6 45 12	 movzx	 eax, BYTE PTR _colour$[ebp+2]
  00035	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00039	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0003d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00045	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00049	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0004c	f3 0f 11 41 04	 movss	 DWORD PTR [ecx+4], xmm0

; 1400 : 	light->light__colour.green = ( ( float ) colour.g ) / 255.0;

  00051	0f b6 45 11	 movzx	 eax, BYTE PTR _colour$[ebp+1]
  00055	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00059	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0005d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00065	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00069	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0006c	f3 0f 11 41 08	 movss	 DWORD PTR [ecx+8], xmm0

; 1401 : 	light->light__colour.blue = ( ( float ) colour.b ) / 255.0;

  00071	0f b6 45 10	 movzx	 eax, BYTE PTR _colour$[ebp]
  00075	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00079	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0007d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00085	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0008c	f3 0f 11 41 0c	 movss	 DWORD PTR [ecx+12], xmm0

; 1402 : 	light->light__colour.alpha = ( ( float ) colour.a ) / 255.0;

  00091	0f b6 45 13	 movzx	 eax, BYTE PTR _colour$[ebp+3]
  00095	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00099	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0009d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  000ac	f3 0f 11 41 10	 movss	 DWORD PTR [ecx+16], xmm0

; 1403 : 
; 1404 : 	light->object_colour.red = ( ( float ) object_colour.r ) / 255.0;

  000b1	0f b6 45 16	 movzx	 eax, BYTE PTR _object_colour$[ebp+2]
  000b5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000bd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000c5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c9	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  000cc	f3 0f 11 41 14	 movss	 DWORD PTR [ecx+20], xmm0

; 1405 : 	light->object_colour.green = ( ( float ) object_colour.g ) / 255.0;

  000d1	0f b6 45 15	 movzx	 eax, BYTE PTR _object_colour$[ebp+1]
  000d5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000d9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000dd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000e5	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000e9	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  000ec	f3 0f 11 41 18	 movss	 DWORD PTR [ecx+24], xmm0

; 1406 : 	light->object_colour.blue = ( ( float ) object_colour.b ) / 255.0;

  000f1	0f b6 45 14	 movzx	 eax, BYTE PTR _object_colour$[ebp]
  000f5	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f9	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  000fd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00105	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00109	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0010c	f3 0f 11 41 1c	 movss	 DWORD PTR [ecx+28], xmm0

; 1407 : 	light->object_colour.alpha = ( ( float ) object_colour.a ) / 255.0;

  00111	0f b6 45 17	 movzx	 eax, BYTE PTR _object_colour$[ebp+3]
  00115	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00119	f3 0f 5a c0	 cvtss2sd xmm0, xmm0
  0011d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00125	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00129	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0012c	f3 0f 11 41 20	 movss	 DWORD PTR [ecx+32], xmm0

; 1408 : 
; 1409 : 	light->time = time;

  00131	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00134	f3 0f 10 45 20	 movss	 xmm0, DWORD PTR _time$[ebp]
  00139	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1410 : 	light->heading = heading;

  0013e	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00141	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _heading$[ebp]
  00146	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1411 : 	light->pitch = pitch;

  0014b	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0014e	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  00153	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1412 : 
; 1413 : 	if ( env->cloud_light_settings[mode] )

  00158	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  0015b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0015e	83 bc 81 98 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+152], 0
  00166	0f 84 ab 00 00
	00		 je	 $LN5@add_3d_clo

; 1414 : 	{
; 1415 : 
; 1416 : 		main_light_setting
; 1417 : 			*this_light,
; 1418 : 			*last_light;
; 1419 : 
; 1420 : 		env->number_of_cloud_light_settings++;

  0016c	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0016f	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  00172	83 c1 01	 add	 ecx, 1
  00175	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00178	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx

; 1421 : 
; 1422 : 		last_light = env->cloud_light_settings[mode];

  0017b	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  0017e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00181	8b 94 81 98 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+152]
  00188	89 55 f4	 mov	 DWORD PTR _last_light$1[ebp], edx

; 1423 : 
; 1424 : 		this_light = env->cloud_light_settings[mode];

  0018b	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  0018e	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00191	8b 94 81 98 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+152]
  00198	89 55 f8	 mov	 DWORD PTR _this_light$2[ebp], edx
$LN2@add_3d_clo:

; 1425 : 
; 1426 : 		while ( this_light )

  0019b	83 7d f8 00	 cmp	 DWORD PTR _this_light$2[ebp], 0
  0019f	74 63		 je	 SHORT $LN3@add_3d_clo

; 1427 : 		{
; 1428 : 
; 1429 : 			if ( this_light->time > light->time )

  001a1	8b 45 f8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  001a4	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  001a7	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  001ac	0f 2f 41 2c	 comiss	 xmm0, DWORD PTR [ecx+44]
  001b0	76 42		 jbe	 SHORT $LN7@add_3d_clo

; 1430 : 			{
; 1431 : 
; 1432 : 				//
; 1433 : 				// Insert *before* this_light
; 1434 : 				//
; 1435 : 
; 1436 : 				if ( last_light == this_light )

  001b2	8b 45 f4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  001b5	3b 45 f8	 cmp	 eax, DWORD PTR _this_light$2[ebp]
  001b8	75 26		 jne	 SHORT $LN9@add_3d_clo

; 1437 : 				{
; 1438 : 
; 1439 : 					light->succ = env->cloud_light_settings[mode];

  001ba	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001bd	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  001c0	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001c3	8b 8c 8a 98 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+152]
  001ca	89 08		 mov	 DWORD PTR [eax], ecx

; 1440 : 
; 1441 : 					env->cloud_light_settings[mode] = light;

  001cc	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  001cf	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001d2	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  001d5	89 94 81 98 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+152], edx

; 1442 : 
; 1443 : 					return;

  001dc	eb 61		 jmp	 SHORT $LN1@add_3d_clo

; 1444 : 				}
; 1445 : 				else

  001de	eb 12		 jmp	 SHORT $LN10@add_3d_clo
$LN9@add_3d_clo:

; 1446 : 				{
; 1447 : 
; 1448 : 					last_light->succ = light;

  001e0	8b 45 f4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  001e3	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  001e6	89 08		 mov	 DWORD PTR [eax], ecx

; 1449 : 
; 1450 : 					light->succ = this_light;

  001e8	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001eb	8b 4d f8	 mov	 ecx, DWORD PTR _this_light$2[ebp]
  001ee	89 08		 mov	 DWORD PTR [eax], ecx

; 1451 : 
; 1452 : 					return;

  001f0	eb 4d		 jmp	 SHORT $LN1@add_3d_clo
$LN10@add_3d_clo:

; 1453 : 				}
; 1454 : 			}
; 1455 : 			else

  001f2	eb 0e		 jmp	 SHORT $LN8@add_3d_clo
$LN7@add_3d_clo:

; 1456 : 			{
; 1457 : 
; 1458 : 				last_light = this_light;

  001f4	8b 45 f8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  001f7	89 45 f4	 mov	 DWORD PTR _last_light$1[ebp], eax

; 1459 : 
; 1460 : 				this_light = this_light->succ;

  001fa	8b 45 f8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  001fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  001ff	89 4d f8	 mov	 DWORD PTR _this_light$2[ebp], ecx
$LN8@add_3d_clo:

; 1461 : 			}
; 1462 : 		}

  00202	eb 97		 jmp	 SHORT $LN2@add_3d_clo
$LN3@add_3d_clo:

; 1463 : 
; 1464 : 		//
; 1465 : 		// Got to the end of the list, and have to put it here.
; 1466 : 		//
; 1467 : 
; 1468 : 		light->succ = NULL;

  00204	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00207	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1469 : 
; 1470 : 		last_light->succ = light;

  0020d	8b 45 f4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00210	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00213	89 08		 mov	 DWORD PTR [eax], ecx

; 1471 : 	}
; 1472 : 	else

  00215	eb 28		 jmp	 SHORT $LN6@add_3d_clo
$LN5@add_3d_clo:

; 1473 : 	{
; 1474 : 
; 1475 : 		env->number_of_cloud_light_settings++;

  00217	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0021a	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  0021d	83 c1 01	 add	 ecx, 1
  00220	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00223	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx

; 1476 : 
; 1477 : 		env->cloud_light_settings[mode] = light;

  00226	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00229	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0022c	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  0022f	89 94 81 98 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+152], edx

; 1478 : 
; 1479 : 		light->succ = NULL;

  00236	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00239	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_clo:
$LN1@add_3d_clo:

; 1480 : 	}
; 1481 : }

  0023f	5f		 pop	 edi
  00240	5e		 pop	 esi
  00241	5b		 pop	 ebx
  00242	8b e5		 mov	 esp, ebp
  00244	5d		 pop	 ebp
  00245	c2 1c 00	 ret	 28			; 0000001cH
?add_3d_cloud_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@2MMM@Z ENDP ; add_3d_cloud_light_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z
_TEXT	SEGMENT
_last_light$1 = -24					; size = 4
_this_light$2 = -20					; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_light$ = -4						; size = 4
_env$ = 8						; size = 4
_weathermode$ = 12					; size = 4
_scale$ = 16						; size = 4
_shadow$ = 20						; size = 4
_object_colour$ = 24					; size = 4
_object_intensity$ = 28					; size = 4
_light_colour$ = 32					; size = 4
_light_intensity$ = 36					; size = 4
_heading$ = 40						; size = 4
_pitch$ = 44						; size = 4
_main_light$ = 48					; size = 4
_time$ = 52						; size = 4
?add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z PROC ; add_3d_moon_setting, COMDAT

; 1192 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1193 : 
; 1194 : 	main_light_setting
; 1195 : 		*light;
; 1196 : 
; 1197 : 	float
; 1198 : 		r,
; 1199 : 		g,
; 1200 : 		b;
; 1201 : 
; 1202 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_moo
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_moo:

; 1203 : 
; 1204 : 	light = ( main_light_setting * ) safe_malloc ( sizeof ( main_light_setting ) );

  00027	6a 3c		 push	 60			; 0000003cH
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _light$[ebp], eax

; 1205 : 
; 1206 : 	r = light_colour.r;

  00031	0f b6 45 22	 movzx	 eax, BYTE PTR _light_colour$[ebp+2]
  00035	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00039	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1207 : 	g = light_colour.g;

  0003e	0f b6 45 21	 movzx	 eax, BYTE PTR _light_colour$[ebp+1]
  00042	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00046	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1208 : 	b = light_colour.b;

  0004b	0f b6 45 20	 movzx	 eax, BYTE PTR _light_colour$[ebp]
  0004f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00053	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1209 : 
; 1210 : 	r /= 255.0;

  00058	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  0005d	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00065	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00069	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1211 : 	g /= 255.0;

  0006e	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  00073	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0007b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007f	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1212 : 	b /= 255.0;

  00084	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  00089	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00091	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00095	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1213 : 
; 1214 : 	r *= light_intensity;

  0009a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  0009f	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000a4	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1215 : 	g *= light_intensity;

  000a9	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000ae	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000b3	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1216 : 	b *= light_intensity;

  000b8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000bd	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000c2	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1217 : 
; 1218 : 	light->light__colour.red = r;

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000ca	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  000cf	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1219 : 	light->light__colour.green = g;

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000d7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000dc	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1220 : 	light->light__colour.blue = b;

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000e4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000e9	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 1221 : 
; 1222 : 	r = object_colour.r;

  000ee	0f b6 45 1a	 movzx	 eax, BYTE PTR _object_colour$[ebp+2]
  000f2	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000f6	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1223 : 	g = object_colour.g;

  000fb	0f b6 45 19	 movzx	 eax, BYTE PTR _object_colour$[ebp+1]
  000ff	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00103	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1224 : 	b = object_colour.b;

  00108	0f b6 45 18	 movzx	 eax, BYTE PTR _object_colour$[ebp]
  0010c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00110	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1225 : 
; 1226 : 	r /= 255.0;

  00115	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  0011a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00122	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00126	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1227 : 	g /= 255.0;

  0012b	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  00130	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00138	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0013c	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1228 : 	b /= 255.0;

  00141	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  00146	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0014e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00152	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1229 : 
; 1230 : 	r *= object_intensity;

  00157	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  0015c	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  00161	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1231 : 	g *= object_intensity;

  00166	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  0016b	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  00170	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1232 : 	b *= object_intensity;

  00175	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  0017a	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  0017f	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1233 : 
; 1234 : 	light->object_colour.red = r;

  00184	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00187	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  0018c	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1235 : 	light->object_colour.green = g;

  00191	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00194	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  00199	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 1236 : 	light->object_colour.blue = b;

  0019e	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001a1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  001a6	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1237 : 
; 1238 : 	light->time = time;

  001ab	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001ae	f3 0f 10 45 34	 movss	 xmm0, DWORD PTR _time$[ebp]
  001b3	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1239 : 
; 1240 : 	light->heading = heading;

  001b8	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001bb	f3 0f 10 45 28	 movss	 xmm0, DWORD PTR _heading$[ebp]
  001c0	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1241 : 	light->pitch = pitch;

  001c5	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001c8	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  001cd	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1242 : 
; 1243 : 	light->scale = scale;

  001d2	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001d5	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _scale$[ebp]
  001da	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1244 : 
; 1245 : 	light->shadow = shadow;

  001df	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001e2	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _shadow$[ebp]
  001e7	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 1246 : 
; 1247 : 	light->main_light = main_light;

  001ec	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001ef	8b 4d 30	 mov	 ecx, DWORD PTR _main_light$[ebp]
  001f2	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 1248 : 
; 1249 : 	if ( env->moon_settings[weathermode] )

  001f5	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  001f8	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001fb	83 bc 81 c0 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+192], 0
  00203	0f 84 ab 00 00
	00		 je	 $LN5@add_3d_moo

; 1250 : 	{
; 1251 : 
; 1252 : 		main_light_setting
; 1253 : 			*this_light,
; 1254 : 			*last_light;
; 1255 : 
; 1256 : 		env->number_of_moon_settings++;

  00209	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0020c	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0020f	83 c1 01	 add	 ecx, 1
  00212	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00215	89 4a 78	 mov	 DWORD PTR [edx+120], ecx

; 1257 : 
; 1258 : 		last_light = env->moon_settings[weathermode];

  00218	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0021b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0021e	8b 94 81 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+192]
  00225	89 55 e8	 mov	 DWORD PTR _last_light$1[ebp], edx

; 1259 : 
; 1260 : 		this_light = env->moon_settings[weathermode];

  00228	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0022b	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0022e	8b 94 81 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+192]
  00235	89 55 ec	 mov	 DWORD PTR _this_light$2[ebp], edx
$LN2@add_3d_moo:

; 1261 : 
; 1262 : 		while ( this_light )

  00238	83 7d ec 00	 cmp	 DWORD PTR _this_light$2[ebp], 0
  0023c	74 63		 je	 SHORT $LN3@add_3d_moo

; 1263 : 		{
; 1264 : 
; 1265 : 			if ( this_light->time > light->time )

  0023e	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00241	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00244	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  00249	0f 2f 41 2c	 comiss	 xmm0, DWORD PTR [ecx+44]
  0024d	76 42		 jbe	 SHORT $LN7@add_3d_moo

; 1266 : 			{
; 1267 : 
; 1268 : 				//
; 1269 : 				// Insert *before* this_light
; 1270 : 				//
; 1271 : 
; 1272 : 				if ( last_light == this_light )

  0024f	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00252	3b 45 ec	 cmp	 eax, DWORD PTR _this_light$2[ebp]
  00255	75 26		 jne	 SHORT $LN9@add_3d_moo

; 1273 : 				{
; 1274 : 
; 1275 : 					light->succ = env->moon_settings[weathermode];

  00257	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0025a	8b 4d 0c	 mov	 ecx, DWORD PTR _weathermode$[ebp]
  0025d	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00260	8b 8c 8a c0 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+192]
  00267	89 08		 mov	 DWORD PTR [eax], ecx

; 1276 : 
; 1277 : 					env->moon_settings[weathermode] = light;

  00269	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  0026c	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0026f	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  00272	89 94 81 c0 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+192], edx

; 1278 : 
; 1279 : 					return;

  00279	eb 61		 jmp	 SHORT $LN1@add_3d_moo

; 1280 : 				}
; 1281 : 				else

  0027b	eb 12		 jmp	 SHORT $LN10@add_3d_moo
$LN9@add_3d_moo:

; 1282 : 				{
; 1283 : 
; 1284 : 					last_light->succ = light;

  0027d	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00280	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00283	89 08		 mov	 DWORD PTR [eax], ecx

; 1285 : 
; 1286 : 					light->succ = this_light;

  00285	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00288	8b 4d ec	 mov	 ecx, DWORD PTR _this_light$2[ebp]
  0028b	89 08		 mov	 DWORD PTR [eax], ecx

; 1287 : 
; 1288 : 					return;

  0028d	eb 4d		 jmp	 SHORT $LN1@add_3d_moo
$LN10@add_3d_moo:

; 1289 : 				}
; 1290 : 			}
; 1291 : 			else

  0028f	eb 0e		 jmp	 SHORT $LN8@add_3d_moo
$LN7@add_3d_moo:

; 1292 : 			{
; 1293 : 
; 1294 : 				last_light = this_light;

  00291	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00294	89 45 e8	 mov	 DWORD PTR _last_light$1[ebp], eax

; 1295 : 
; 1296 : 				this_light = this_light->succ;

  00297	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  0029a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0029c	89 4d ec	 mov	 DWORD PTR _this_light$2[ebp], ecx
$LN8@add_3d_moo:

; 1297 : 			}
; 1298 : 		}

  0029f	eb 97		 jmp	 SHORT $LN2@add_3d_moo
$LN3@add_3d_moo:

; 1299 : 
; 1300 : 		//
; 1301 : 		// Got to the end of the list, and have to put it here.
; 1302 : 		//
; 1303 : 
; 1304 : 		light->succ = NULL;

  002a1	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  002a4	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1305 : 
; 1306 : 		last_light->succ = light;

  002aa	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  002ad	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  002b0	89 08		 mov	 DWORD PTR [eax], ecx

; 1307 : 	}
; 1308 : 	else

  002b2	eb 28		 jmp	 SHORT $LN6@add_3d_moo
$LN5@add_3d_moo:

; 1309 : 	{
; 1310 : 
; 1311 : 		env->number_of_moon_settings++;

  002b4	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  002b7	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  002ba	83 c1 01	 add	 ecx, 1
  002bd	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  002c0	89 4a 78	 mov	 DWORD PTR [edx+120], ecx

; 1312 : 
; 1313 : 		env->moon_settings[weathermode] = light;

  002c3	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  002c6	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  002c9	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  002cc	89 94 81 c0 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+192], edx

; 1314 : 
; 1315 : 		light->succ = NULL;

  002d3	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  002d6	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_moo:
$LN1@add_3d_moo:

; 1316 : 	}
; 1317 : }

  002dc	5f		 pop	 edi
  002dd	5e		 pop	 esi
  002de	5b		 pop	 ebx
  002df	8b e5		 mov	 esp, ebp
  002e1	5d		 pop	 ebp
  002e2	c2 30 00	 ret	 48			; 00000030H
?add_3d_moon_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z ENDP ; add_3d_moon_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z
_TEXT	SEGMENT
_last_light$1 = -28					; size = 4
_this_light$2 = -24					; size = 4
_a$ = -20						; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_light$ = -4						; size = 4
_env$ = 8						; size = 4
_weathermode$ = 12					; size = 4
_scale$ = 16						; size = 4
_shadow$ = 20						; size = 4
_object_colour$ = 24					; size = 4
_object_intensity$ = 28					; size = 4
_light_colour$ = 32					; size = 4
_light_intensity$ = 36					; size = 4
_heading$ = 40						; size = 4
_pitch$ = 44						; size = 4
_main_light$ = 48					; size = 4
_time$ = 52						; size = 4
?add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z PROC ; add_3d_sun_setting, COMDAT

; 981  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 5c	 sub	 esp, 92			; 0000005cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 982  : 
; 983  : 	main_light_setting
; 984  : 		*light;
; 985  : 
; 986  : 	float
; 987  : 		r,
; 988  : 		g,
; 989  : 		b,
; 990  : 		a;
; 991  : 
; 992  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_sun
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z@4JA
  00014	83 c0 0b	 add	 eax, 11			; 0000000bH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_sun:

; 993  : 
; 994  : 	light = ( main_light_setting * ) safe_malloc ( sizeof ( main_light_setting ) );

  00027	6a 3c		 push	 60			; 0000003cH
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _light$[ebp], eax

; 995  : 
; 996  : 	r = light_colour.r;

  00031	0f b6 45 22	 movzx	 eax, BYTE PTR _light_colour$[ebp+2]
  00035	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00039	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 997  : 	g = light_colour.g;

  0003e	0f b6 45 21	 movzx	 eax, BYTE PTR _light_colour$[ebp+1]
  00042	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00046	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 998  : 	b = light_colour.b;

  0004b	0f b6 45 20	 movzx	 eax, BYTE PTR _light_colour$[ebp]
  0004f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00053	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 999  : 	a = light_colour.a;

  00058	0f b6 45 23	 movzx	 eax, BYTE PTR _light_colour$[ebp+3]
  0005c	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00060	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1000 : 
; 1001 : 	r /= 255.0;

  00065	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  0006a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00072	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00076	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1002 : 	g /= 255.0;

  0007b	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  00080	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00088	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0008c	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1003 : 	b /= 255.0;

  00091	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  00096	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0009e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000a2	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1004 : 	a /= 255.0;

  000a7	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _a$[ebp]
  000ac	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000b4	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000b8	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1005 : 
; 1006 : 	r *= light_intensity;

  000bd	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  000c2	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000c7	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1007 : 	g *= light_intensity;

  000cc	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000d1	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000d6	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1008 : 	b *= light_intensity;

  000db	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000e0	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000e5	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1009 : 	a *= light_intensity;

  000ea	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _a$[ebp]
  000ef	f3 0f 59 45 24	 mulss	 xmm0, DWORD PTR _light_intensity$[ebp]
  000f4	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1010 : 
; 1011 : 	light->light__colour.red = r;

  000f9	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000fc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  00101	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 1012 : 	light->light__colour.green = g;

  00106	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00109	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  0010e	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 1013 : 	light->light__colour.blue = b;

  00113	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00116	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  0011b	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 1014 : 	light->light__colour.alpha = a;

  00120	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00123	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _a$[ebp]
  00128	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 1015 : 
; 1016 : 	r = object_colour.r;

  0012d	0f b6 45 1a	 movzx	 eax, BYTE PTR _object_colour$[ebp+2]
  00131	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00135	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1017 : 	g = object_colour.g;

  0013a	0f b6 45 19	 movzx	 eax, BYTE PTR _object_colour$[ebp+1]
  0013e	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00142	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1018 : 	b = object_colour.b;

  00147	0f b6 45 18	 movzx	 eax, BYTE PTR _object_colour$[ebp]
  0014b	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0014f	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1019 : 	a = object_colour.a;

  00154	0f b6 45 1b	 movzx	 eax, BYTE PTR _object_colour$[ebp+3]
  00158	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  0015c	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1020 : 
; 1021 : 	r /= 255.0;

  00161	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  00166	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0016e	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00172	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1022 : 	g /= 255.0;

  00177	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  0017c	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00184	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00188	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1023 : 	b /= 255.0;

  0018d	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  00192	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  0019a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0019e	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1024 : 	a /= 255.0;

  001a3	f3 0f 5a 45 ec	 cvtss2sd xmm0, DWORD PTR _a$[ebp]
  001a8	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  001b0	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  001b4	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1025 : 
; 1026 : 	r *= object_intensity;

  001b9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  001be	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  001c3	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 1027 : 	g *= object_intensity;

  001c8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  001cd	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  001d2	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 1028 : 	b *= object_intensity;

  001d7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  001dc	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  001e1	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 1029 : 	a *= object_intensity;

  001e6	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _a$[ebp]
  001eb	f3 0f 59 45 1c	 mulss	 xmm0, DWORD PTR _object_intensity$[ebp]
  001f0	f3 0f 11 45 ec	 movss	 DWORD PTR _a$[ebp], xmm0

; 1030 : 
; 1031 : 	light->object_colour.red = r;

  001f5	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001f8	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  001fd	f3 0f 11 40 14	 movss	 DWORD PTR [eax+20], xmm0

; 1032 : 	light->object_colour.green = g;

  00202	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00205	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  0020a	f3 0f 11 40 18	 movss	 DWORD PTR [eax+24], xmm0

; 1033 : 	light->object_colour.blue = b;

  0020f	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00212	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  00217	f3 0f 11 40 1c	 movss	 DWORD PTR [eax+28], xmm0

; 1034 : 	light->object_colour.alpha = a;

  0021c	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0021f	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _a$[ebp]
  00224	f3 0f 11 40 20	 movss	 DWORD PTR [eax+32], xmm0

; 1035 : 
; 1036 : 	light->time = time;

  00229	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0022c	f3 0f 10 45 34	 movss	 xmm0, DWORD PTR _time$[ebp]
  00231	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 1037 : 
; 1038 : 	light->heading = heading;

  00236	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00239	f3 0f 10 45 28	 movss	 xmm0, DWORD PTR _heading$[ebp]
  0023e	f3 0f 11 40 24	 movss	 DWORD PTR [eax+36], xmm0

; 1039 : 	light->pitch = pitch;

  00243	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00246	f3 0f 10 45 2c	 movss	 xmm0, DWORD PTR _pitch$[ebp]
  0024b	f3 0f 11 40 28	 movss	 DWORD PTR [eax+40], xmm0

; 1040 : 
; 1041 : 	light->scale = scale;

  00250	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00253	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _scale$[ebp]
  00258	f3 0f 11 40 30	 movss	 DWORD PTR [eax+48], xmm0

; 1042 : 
; 1043 : 	light->shadow = shadow;

  0025d	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00260	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _shadow$[ebp]
  00265	f3 0f 11 40 34	 movss	 DWORD PTR [eax+52], xmm0

; 1044 : 
; 1045 : 	light->main_light = main_light;

  0026a	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0026d	8b 4d 30	 mov	 ecx, DWORD PTR _main_light$[ebp]
  00270	89 48 38	 mov	 DWORD PTR [eax+56], ecx

; 1046 : 
; 1047 : 	if ( env->sun_settings[weathermode] )

  00273	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  00276	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00279	83 bc 81 ac 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+172], 0
  00281	0f 84 ab 00 00
	00		 je	 $LN5@add_3d_sun

; 1048 : 	{
; 1049 : 
; 1050 : 		main_light_setting
; 1051 : 			*this_light,
; 1052 : 			*last_light;
; 1053 : 
; 1054 : 		env->number_of_sun_settings++;

  00287	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0028a	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  0028d	83 c1 01	 add	 ecx, 1
  00290	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00293	89 4a 74	 mov	 DWORD PTR [edx+116], ecx

; 1055 : 
; 1056 : 		last_light = env->sun_settings[weathermode];

  00296	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  00299	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0029c	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  002a3	89 55 e4	 mov	 DWORD PTR _last_light$1[ebp], edx

; 1057 : 
; 1058 : 		this_light = env->sun_settings[weathermode];

  002a6	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  002a9	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  002ac	8b 94 81 ac 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+172]
  002b3	89 55 e8	 mov	 DWORD PTR _this_light$2[ebp], edx
$LN2@add_3d_sun:

; 1059 : 
; 1060 : 		while ( this_light )

  002b6	83 7d e8 00	 cmp	 DWORD PTR _this_light$2[ebp], 0
  002ba	74 63		 je	 SHORT $LN3@add_3d_sun

; 1061 : 		{
; 1062 : 
; 1063 : 			if ( this_light->time > light->time )

  002bc	8b 45 e8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  002bf	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  002c2	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  002c7	0f 2f 41 2c	 comiss	 xmm0, DWORD PTR [ecx+44]
  002cb	76 42		 jbe	 SHORT $LN7@add_3d_sun

; 1064 : 			{
; 1065 : 
; 1066 : 				//
; 1067 : 				// Insert *before* this_light
; 1068 : 				//
; 1069 : 
; 1070 : 				if ( last_light == this_light )

  002cd	8b 45 e4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  002d0	3b 45 e8	 cmp	 eax, DWORD PTR _this_light$2[ebp]
  002d3	75 26		 jne	 SHORT $LN9@add_3d_sun

; 1071 : 				{
; 1072 : 
; 1073 : 					light->succ = env->sun_settings[weathermode];

  002d5	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  002d8	8b 4d 0c	 mov	 ecx, DWORD PTR _weathermode$[ebp]
  002db	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  002de	8b 8c 8a ac 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+172]
  002e5	89 08		 mov	 DWORD PTR [eax], ecx

; 1074 : 
; 1075 : 					env->sun_settings[weathermode] = light;

  002e7	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  002ea	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  002ed	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  002f0	89 94 81 ac 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+172], edx

; 1076 : 
; 1077 : 					return;

  002f7	eb 61		 jmp	 SHORT $LN1@add_3d_sun

; 1078 : 				}
; 1079 : 				else

  002f9	eb 12		 jmp	 SHORT $LN10@add_3d_sun
$LN9@add_3d_sun:

; 1080 : 				{
; 1081 : 
; 1082 : 					last_light->succ = light;

  002fb	8b 45 e4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  002fe	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00301	89 08		 mov	 DWORD PTR [eax], ecx

; 1083 : 
; 1084 : 					light->succ = this_light;

  00303	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00306	8b 4d e8	 mov	 ecx, DWORD PTR _this_light$2[ebp]
  00309	89 08		 mov	 DWORD PTR [eax], ecx

; 1085 : 
; 1086 : 					return;

  0030b	eb 4d		 jmp	 SHORT $LN1@add_3d_sun
$LN10@add_3d_sun:

; 1087 : 				}
; 1088 : 			}
; 1089 : 			else

  0030d	eb 0e		 jmp	 SHORT $LN8@add_3d_sun
$LN7@add_3d_sun:

; 1090 : 			{
; 1091 : 
; 1092 : 				last_light = this_light;

  0030f	8b 45 e8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00312	89 45 e4	 mov	 DWORD PTR _last_light$1[ebp], eax

; 1093 : 
; 1094 : 				this_light = this_light->succ;

  00315	8b 45 e8	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00318	8b 08		 mov	 ecx, DWORD PTR [eax]
  0031a	89 4d e8	 mov	 DWORD PTR _this_light$2[ebp], ecx
$LN8@add_3d_sun:

; 1095 : 			}
; 1096 : 		}

  0031d	eb 97		 jmp	 SHORT $LN2@add_3d_sun
$LN3@add_3d_sun:

; 1097 : 
; 1098 : 		//
; 1099 : 		// Got to the end of the list, and have to put it here.
; 1100 : 		//
; 1101 : 
; 1102 : 		light->succ = NULL;

  0031f	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00322	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1103 : 
; 1104 : 		last_light->succ = light;

  00328	8b 45 e4	 mov	 eax, DWORD PTR _last_light$1[ebp]
  0032b	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0032e	89 08		 mov	 DWORD PTR [eax], ecx

; 1105 : 	}
; 1106 : 	else

  00330	eb 28		 jmp	 SHORT $LN6@add_3d_sun
$LN5@add_3d_sun:

; 1107 : 	{
; 1108 : 
; 1109 : 		env->number_of_sun_settings++;

  00332	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00335	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  00338	83 c1 01	 add	 ecx, 1
  0033b	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0033e	89 4a 74	 mov	 DWORD PTR [edx+116], ecx

; 1110 : 
; 1111 : 		env->sun_settings[weathermode] = light;

  00341	8b 45 0c	 mov	 eax, DWORD PTR _weathermode$[ebp]
  00344	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00347	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  0034a	89 94 81 ac 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+172], edx

; 1112 : 
; 1113 : 		light->succ = NULL;

  00351	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00354	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_sun:
$LN1@add_3d_sun:

; 1114 : 	}
; 1115 : }

  0035a	5f		 pop	 edi
  0035b	5e		 pop	 esi
  0035c	5b		 pop	 ebx
  0035d	8b e5		 mov	 esp, ebp
  0035f	5d		 pop	 ebp
  00360	c2 30 00	 ret	 48			; 00000030H
?add_3d_sun_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMUREAL_COLOUR@@M2MMMHM@Z ENDP ; add_3d_sun_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z
_TEXT	SEGMENT
_last_light$1 = -24					; size = 4
_this_light$2 = -20					; size = 4
_b$ = -16						; size = 4
_g$ = -12						; size = 4
_r$ = -8						; size = 4
_light$ = -4						; size = 4
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
_colour$ = 16						; size = 4
_intensity$ = 20					; size = 4
_time$ = 24						; size = 4
?add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z PROC ; add_3d_ambient_light_setting, COMDAT

; 804  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 805  : 
; 806  : 	main_light_setting
; 807  : 		*light;
; 808  : 
; 809  : 	float
; 810  : 		r,
; 811  : 		g,
; 812  : 		b;
; 813  : 
; 814  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_amb
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z@4JA
  00014	83 c0 0a	 add	 eax, 10			; 0000000aH
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_amb:

; 815  : 
; 816  : 	light = ( main_light_setting * ) safe_malloc ( sizeof ( main_light_setting ) );

  00027	6a 3c		 push	 60			; 0000003cH
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _light$[ebp], eax

; 817  : 
; 818  : 	r = colour.r;

  00031	0f b6 45 12	 movzx	 eax, BYTE PTR _colour$[ebp+2]
  00035	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00039	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 819  : 	g = colour.g;

  0003e	0f b6 45 11	 movzx	 eax, BYTE PTR _colour$[ebp+1]
  00042	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00046	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 820  : 	b = colour.b;

  0004b	0f b6 45 10	 movzx	 eax, BYTE PTR _colour$[ebp]
  0004f	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  00053	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 821  : 
; 822  : 	r *= intensity;

  00058	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  0005d	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _intensity$[ebp]
  00062	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 823  : 	g *= intensity;

  00067	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  0006c	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _intensity$[ebp]
  00071	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 824  : 	b *= intensity;

  00076	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  0007b	f3 0f 59 45 14	 mulss	 xmm0, DWORD PTR _intensity$[ebp]
  00080	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 825  : 
; 826  : 	r /= 255.0;

  00085	f3 0f 5a 45 f8	 cvtss2sd xmm0, DWORD PTR _r$[ebp]
  0008a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  00092	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00096	f3 0f 11 45 f8	 movss	 DWORD PTR _r$[ebp], xmm0

; 827  : 	g /= 255.0;

  0009b	f3 0f 5a 45 f4	 cvtss2sd xmm0, DWORD PTR _g$[ebp]
  000a0	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000a8	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000ac	f3 0f 11 45 f4	 movss	 DWORD PTR _g$[ebp], xmm0

; 828  : 	b /= 255.0;

  000b1	f3 0f 5a 45 f0	 cvtss2sd xmm0, DWORD PTR _b$[ebp]
  000b6	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@406fe00000000000
  000be	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c2	f3 0f 11 45 f0	 movss	 DWORD PTR _b$[ebp], xmm0

; 829  : 
; 830  : 	light->light__colour.red = r;

  000c7	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000ca	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _r$[ebp]
  000cf	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 831  : 	light->light__colour.green = g;

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000d7	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _g$[ebp]
  000dc	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 832  : 	light->light__colour.blue = b;

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000e4	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _b$[ebp]
  000e9	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 833  : 
; 834  : 	light->time = time;

  000ee	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  000f1	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _time$[ebp]
  000f6	f3 0f 11 40 2c	 movss	 DWORD PTR [eax+44], xmm0

; 835  : 
; 836  : 	if ( env->ambient_light_settings[mode] )

  000fb	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  000fe	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00101	83 bc 81 84 00
	00 00 00	 cmp	 DWORD PTR [ecx+eax*4+132], 0
  00109	0f 84 ab 00 00
	00		 je	 $LN5@add_3d_amb

; 837  : 	{
; 838  : 
; 839  : 		main_light_setting
; 840  : 			*this_light,
; 841  : 			*last_light;
; 842  : 
; 843  : 		env->number_of_ambient_light_settings++;

  0010f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00112	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00115	83 c1 01	 add	 ecx, 1
  00118	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  0011b	89 4a 70	 mov	 DWORD PTR [edx+112], ecx

; 844  : 
; 845  : 		last_light = env->ambient_light_settings[mode];

  0011e	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00121	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00124	8b 94 81 84 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+132]
  0012b	89 55 e8	 mov	 DWORD PTR _last_light$1[ebp], edx

; 846  : 
; 847  : 		this_light = env->ambient_light_settings[mode];

  0012e	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00131	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00134	8b 94 81 84 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+132]
  0013b	89 55 ec	 mov	 DWORD PTR _this_light$2[ebp], edx
$LN2@add_3d_amb:

; 848  : 
; 849  : 		while ( this_light )

  0013e	83 7d ec 00	 cmp	 DWORD PTR _this_light$2[ebp], 0
  00142	74 63		 je	 SHORT $LN3@add_3d_amb

; 850  : 		{
; 851  : 
; 852  : 			if ( this_light->time > light->time )

  00144	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  00147	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  0014a	f3 0f 10 40 2c	 movss	 xmm0, DWORD PTR [eax+44]
  0014f	0f 2f 41 2c	 comiss	 xmm0, DWORD PTR [ecx+44]
  00153	76 42		 jbe	 SHORT $LN7@add_3d_amb

; 853  : 			{
; 854  : 
; 855  : 				//
; 856  : 				// Insert *before* this_light
; 857  : 				//
; 858  : 
; 859  : 				if ( last_light == this_light )

  00155	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00158	3b 45 ec	 cmp	 eax, DWORD PTR _this_light$2[ebp]
  0015b	75 26		 jne	 SHORT $LN9@add_3d_amb

; 860  : 				{
; 861  : 
; 862  : 					light->succ = env->ambient_light_settings[mode];

  0015d	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  00160	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  00163	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00166	8b 8c 8a 84 00
	00 00		 mov	 ecx, DWORD PTR [edx+ecx*4+132]
  0016d	89 08		 mov	 DWORD PTR [eax], ecx

; 863  : 
; 864  : 					env->ambient_light_settings[mode] = light;

  0016f	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00172	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00175	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  00178	89 94 81 84 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+132], edx

; 865  : 
; 866  : 					return;

  0017f	eb 61		 jmp	 SHORT $LN1@add_3d_amb

; 867  : 				}
; 868  : 				else

  00181	eb 12		 jmp	 SHORT $LN10@add_3d_amb
$LN9@add_3d_amb:

; 869  : 				{
; 870  : 
; 871  : 					last_light->succ = light;

  00183	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  00186	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  00189	89 08		 mov	 DWORD PTR [eax], ecx

; 872  : 
; 873  : 					light->succ = this_light;

  0018b	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  0018e	8b 4d ec	 mov	 ecx, DWORD PTR _this_light$2[ebp]
  00191	89 08		 mov	 DWORD PTR [eax], ecx

; 874  : 
; 875  : 					return;

  00193	eb 4d		 jmp	 SHORT $LN1@add_3d_amb
$LN10@add_3d_amb:

; 876  : 				}
; 877  : 			}
; 878  : 			else

  00195	eb 0e		 jmp	 SHORT $LN8@add_3d_amb
$LN7@add_3d_amb:

; 879  : 			{
; 880  : 
; 881  : 				last_light = this_light;

  00197	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  0019a	89 45 e8	 mov	 DWORD PTR _last_light$1[ebp], eax

; 882  : 
; 883  : 				this_light = this_light->succ;

  0019d	8b 45 ec	 mov	 eax, DWORD PTR _this_light$2[ebp]
  001a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a2	89 4d ec	 mov	 DWORD PTR _this_light$2[ebp], ecx
$LN8@add_3d_amb:

; 884  : 			}
; 885  : 		}

  001a5	eb 97		 jmp	 SHORT $LN2@add_3d_amb
$LN3@add_3d_amb:

; 886  : 
; 887  : 		//
; 888  : 		// Got to the end of the list, and have to put it here.
; 889  : 		//
; 890  : 
; 891  : 		light->succ = NULL;

  001a7	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001aa	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 892  : 
; 893  : 		last_light->succ = light;

  001b0	8b 45 e8	 mov	 eax, DWORD PTR _last_light$1[ebp]
  001b3	8b 4d fc	 mov	 ecx, DWORD PTR _light$[ebp]
  001b6	89 08		 mov	 DWORD PTR [eax], ecx

; 894  : 	}
; 895  : 	else

  001b8	eb 28		 jmp	 SHORT $LN6@add_3d_amb
$LN5@add_3d_amb:

; 896  : 	{
; 897  : 
; 898  : 		env->number_of_ambient_light_settings++;

  001ba	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  001bd	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  001c0	83 c1 01	 add	 ecx, 1
  001c3	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  001c6	89 4a 70	 mov	 DWORD PTR [edx+112], ecx

; 899  : 
; 900  : 		env->ambient_light_settings[mode] = light;

  001c9	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  001cc	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  001cf	8b 55 fc	 mov	 edx, DWORD PTR _light$[ebp]
  001d2	89 94 81 84 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+132], edx

; 901  : 
; 902  : 		light->succ = NULL;

  001d9	8b 45 fc	 mov	 eax, DWORD PTR _light$[ebp]
  001dc	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_amb:
$LN1@add_3d_amb:

; 903  : 	}
; 904  : }

  001e2	5f		 pop	 edi
  001e3	5e		 pop	 esi
  001e4	5b		 pop	 ebx
  001e5	8b e5		 mov	 esp, ebp
  001e7	5d		 pop	 ebp
  001e8	c2 14 00	 ret	 20			; 00000014H
?add_3d_ambient_light_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@UREAL_COLOUR@@MM@Z ENDP ; add_3d_ambient_light_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z
_TEXT	SEGMENT
_last_fog$1 = -12					; size = 4
_this_fog$2 = -8					; size = 4
_fog$ = -4						; size = 4
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
_fog_scale$ = 16					; size = 4
_start$ = 20						; size = 4
_end$ = 24						; size = 4
_time$ = 28						; size = 4
?add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z PROC ; add_3d_fog_setting, COMDAT

; 631  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 632  : 
; 633  : 	fog_setting
; 634  : 		*fog;
; 635  : 
; 636  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN4@add_3d_fog
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z@4JA
  00014	83 c0 05	 add	 eax, 5
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@add_3d_fog:

; 637  : 
; 638  : 	fog = ( fog_setting * ) safe_malloc ( sizeof ( fog_setting ) );

  00027	6a 14		 push	 20			; 00000014H
  00029	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  0002e	89 45 fc	 mov	 DWORD PTR _fog$[ebp], eax

; 639  : 
; 640  : 	fog->scale = fog_scale;

  00031	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  00034	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fog_scale$[ebp]
  00039	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 641  : 	fog->start = start;

  0003e	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  00041	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _start$[ebp]
  00046	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 642  : 	fog->end = end;

  0004b	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  0004e	f3 0f 10 45 18	 movss	 xmm0, DWORD PTR _end$[ebp]
  00053	f3 0f 11 40 0c	 movss	 DWORD PTR [eax+12], xmm0

; 643  : 	fog->time = time;

  00058	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  0005b	f3 0f 10 45 1c	 movss	 xmm0, DWORD PTR _time$[ebp]
  00060	f3 0f 11 40 10	 movss	 DWORD PTR [eax+16], xmm0

; 644  : 
; 645  : 	if ( env->fog_settings[mode] )

  00065	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0006b	83 7c 81 4c 00	 cmp	 DWORD PTR [ecx+eax*4+76], 0
  00070	0f 84 9f 00 00
	00		 je	 $LN5@add_3d_fog

; 646  : 	{
; 647  : 
; 648  : 		fog_setting
; 649  : 			*this_fog,
; 650  : 			*last_fog;
; 651  : 
; 652  : 		env->number_of_fog_settings++;

  00076	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00079	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0007c	83 c1 01	 add	 ecx, 1
  0007f	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00082	89 4a 48	 mov	 DWORD PTR [edx+72], ecx

; 653  : 
; 654  : 		last_fog = env->fog_settings[mode];

  00085	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00088	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0008b	8b 54 81 4c	 mov	 edx, DWORD PTR [ecx+eax*4+76]
  0008f	89 55 f4	 mov	 DWORD PTR _last_fog$1[ebp], edx

; 655  : 
; 656  : 		this_fog = env->fog_settings[mode];

  00092	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00095	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  00098	8b 54 81 4c	 mov	 edx, DWORD PTR [ecx+eax*4+76]
  0009c	89 55 f8	 mov	 DWORD PTR _this_fog$2[ebp], edx
$LN2@add_3d_fog:

; 657  : 
; 658  : 		while ( this_fog )

  0009f	83 7d f8 00	 cmp	 DWORD PTR _this_fog$2[ebp], 0
  000a3	74 5d		 je	 SHORT $LN3@add_3d_fog

; 659  : 		{
; 660  : 
; 661  : 			if ( this_fog->time > fog->time )

  000a5	8b 45 f8	 mov	 eax, DWORD PTR _this_fog$2[ebp]
  000a8	8b 4d fc	 mov	 ecx, DWORD PTR _fog$[ebp]
  000ab	f3 0f 10 40 10	 movss	 xmm0, DWORD PTR [eax+16]
  000b0	0f 2f 41 10	 comiss	 xmm0, DWORD PTR [ecx+16]
  000b4	76 3c		 jbe	 SHORT $LN7@add_3d_fog

; 662  : 			{
; 663  : 
; 664  : 				//
; 665  : 				// Insert *before* this_fog
; 666  : 				//
; 667  : 
; 668  : 				if ( last_fog == this_fog )

  000b6	8b 45 f4	 mov	 eax, DWORD PTR _last_fog$1[ebp]
  000b9	3b 45 f8	 cmp	 eax, DWORD PTR _this_fog$2[ebp]
  000bc	75 20		 jne	 SHORT $LN9@add_3d_fog

; 669  : 				{
; 670  : 
; 671  : 					fog->succ = env->fog_settings[mode];

  000be	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  000c1	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  000c4	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  000c7	8b 4c 8a 4c	 mov	 ecx, DWORD PTR [edx+ecx*4+76]
  000cb	89 08		 mov	 DWORD PTR [eax], ecx

; 672  : 
; 673  : 					env->fog_settings[mode] = fog;

  000cd	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  000d0	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  000d3	8b 55 fc	 mov	 edx, DWORD PTR _fog$[ebp]
  000d6	89 54 81 4c	 mov	 DWORD PTR [ecx+eax*4+76], edx

; 674  : 
; 675  : 					return;

  000da	eb 5e		 jmp	 SHORT $LN1@add_3d_fog

; 676  : 				}
; 677  : 				else

  000dc	eb 12		 jmp	 SHORT $LN10@add_3d_fog
$LN9@add_3d_fog:

; 678  : 				{
; 679  : 
; 680  : 					last_fog->succ = fog;

  000de	8b 45 f4	 mov	 eax, DWORD PTR _last_fog$1[ebp]
  000e1	8b 4d fc	 mov	 ecx, DWORD PTR _fog$[ebp]
  000e4	89 08		 mov	 DWORD PTR [eax], ecx

; 681  : 
; 682  : 					fog->succ = this_fog;

  000e6	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  000e9	8b 4d f8	 mov	 ecx, DWORD PTR _this_fog$2[ebp]
  000ec	89 08		 mov	 DWORD PTR [eax], ecx

; 683  : 
; 684  : 					return;

  000ee	eb 4a		 jmp	 SHORT $LN1@add_3d_fog
$LN10@add_3d_fog:

; 685  : 				}
; 686  : 			}
; 687  : 			else

  000f0	eb 0e		 jmp	 SHORT $LN8@add_3d_fog
$LN7@add_3d_fog:

; 688  : 			{
; 689  : 
; 690  : 				last_fog = this_fog;

  000f2	8b 45 f8	 mov	 eax, DWORD PTR _this_fog$2[ebp]
  000f5	89 45 f4	 mov	 DWORD PTR _last_fog$1[ebp], eax

; 691  : 
; 692  : 				this_fog = this_fog->succ;

  000f8	8b 45 f8	 mov	 eax, DWORD PTR _this_fog$2[ebp]
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	89 4d f8	 mov	 DWORD PTR _this_fog$2[ebp], ecx
$LN8@add_3d_fog:

; 693  : 			}
; 694  : 		}

  00100	eb 9d		 jmp	 SHORT $LN2@add_3d_fog
$LN3@add_3d_fog:

; 695  : 
; 696  : 		//
; 697  : 		// Got to the end of the list, and have to put it here.
; 698  : 		//
; 699  : 
; 700  : 		fog->succ = NULL;

  00102	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  00105	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 701  : 
; 702  : 		last_fog->succ = fog;

  0010b	8b 45 f4	 mov	 eax, DWORD PTR _last_fog$1[ebp]
  0010e	8b 4d fc	 mov	 ecx, DWORD PTR _fog$[ebp]
  00111	89 08		 mov	 DWORD PTR [eax], ecx

; 703  : 	}
; 704  : 	else

  00113	eb 25		 jmp	 SHORT $LN6@add_3d_fog
$LN5@add_3d_fog:

; 705  : 	{
; 706  : 
; 707  : 		env->number_of_fog_settings++;

  00115	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00118	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0011b	83 c1 01	 add	 ecx, 1
  0011e	8b 55 08	 mov	 edx, DWORD PTR _env$[ebp]
  00121	89 4a 48	 mov	 DWORD PTR [edx+72], ecx

; 708  : 
; 709  : 		env->fog_settings[mode] = fog;

  00124	8b 45 0c	 mov	 eax, DWORD PTR _mode$[ebp]
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _env$[ebp]
  0012a	8b 55 fc	 mov	 edx, DWORD PTR _fog$[ebp]
  0012d	89 54 81 4c	 mov	 DWORD PTR [ecx+eax*4+76], edx

; 710  : 
; 711  : 		fog->succ = NULL;

  00131	8b 45 fc	 mov	 eax, DWORD PTR _fog$[ebp]
  00134	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN6@add_3d_fog:
$LN1@add_3d_fog:

; 712  : 	}
; 713  : }

  0013a	5f		 pop	 edi
  0013b	5e		 pop	 esi
  0013c	5b		 pop	 ebx
  0013d	8b e5		 mov	 esp, ebp
  0013f	5d		 pop	 ebp
  00140	c2 18 00	 ret	 24			; 00000018H
?add_3d_fog_setting@@YGXPAUENV_3D@@W4WEATHERMODES@@MMMM@Z ENDP ; add_3d_fog_setting
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_monochrome_mode@@YGXPAUENV_3D@@H@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_monochrome$ = 12					; size = 4
?set_monochrome_mode@@YGXPAUENV_3D@@H@Z PROC		; set_monochrome_mode, COMDAT

; 1689 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1690 : 	env->monochrome_mode = monochrome;

  00009	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _monochrome$[ebp]
  0000f	89 88 e8 02 00
	00		 mov	 DWORD PTR [eax+744], ecx

; 1691 : }

  00015	5f		 pop	 edi
  00016	5e		 pop	 esi
  00017	5b		 pop	 ebx
  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c2 08 00	 ret	 8
?set_monochrome_mode@@YGXPAUENV_3D@@H@Z ENDP		; set_monochrome_mode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_fog_colour$ = 12					; size = 4
?set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z PROC	; set_3d_fog_colour, COMDAT

; 1677 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1678 : 
; 1679 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_fog
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_fog:

; 1680 : 
; 1681 : 	env->fog_colour = fog_colour;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _fog_colour$[ebp]
  0002d	89 48 68	 mov	 DWORD PTR [eax+104], ecx

; 1682 : }

  00030	5f		 pop	 edi
  00031	5e		 pop	 esi
  00032	5b		 pop	 ebx
  00033	8b e5		 mov	 esp, ebp
  00035	5d		 pop	 ebp
  00036	c2 08 00	 ret	 8
?set_3d_fog_colour@@YGXPAUENV_3D@@UREAL_COLOUR@@@Z ENDP	; set_3d_fog_colour
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_colour$ = 12						; size = 4
?set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z PROC ; set_3d_ambient_light, COMDAT

; 1665 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 1666 : 
; 1667 : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_amb
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_amb:

; 1668 : 
; 1669 : 	env->ambient_light = *colour;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	05 d8 01 00 00	 add	 eax, 472		; 000001d8H
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR _colour$[ebp]
  00032	8b 11		 mov	 edx, DWORD PTR [ecx]
  00034	89 10		 mov	 DWORD PTR [eax], edx
  00036	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00039	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0003c	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0003f	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00042	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00045	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 1670 : }

  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	5b		 pop	 ebx
  0004b	8b e5		 mov	 esp, ebp
  0004d	5d		 pop	 ebp
  0004e	c2 08 00	 ret	 8
?set_3d_ambient_light@@YGXPAUENV_3D@@PAULIGHT_COLOUR@@@Z ENDP ; set_3d_ambient_light
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
?set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z PROC ; set_3d_render_filter, COMDAT

; 314  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 315  : 
; 316  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_ren
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_ren:

; 317  : 
; 318  : 	env->render_filter = mode;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  0002d	89 88 d0 02 00
	00		 mov	 DWORD PTR [eax+720], ecx

; 319  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_3d_render_filter@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z ENDP ; set_3d_render_filter
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
?set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z PROC ; set_3d_infrared_mode, COMDAT

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 307  : 
; 308  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_inf
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_inf:

; 309  : 
; 310  : 	env->render_filter = mode;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  0002d	89 88 d0 02 00
	00		 mov	 DWORD PTR [eax+720], ecx

; 311  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_3d_infrared_mode@@YGXPAUENV_3D@@W4RENDER_FILTERS@@@Z ENDP ; set_3d_infrared_mode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_value$ = 12						; size = 4
?set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z PROC ; set_3d_target_weathermode_transitional_status, COMDAT

; 291  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 292  : 
; 293  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_tar
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_tar:

; 294  : 
; 295  : 	ASSERT ( value >= 0 );

  00027	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _value$[ebp]
  0002c	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  00033	73 18		 jae	 SHORT $LN3@set_3d_tar
  00035	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA
  0003a	83 c0 04	 add	 eax, 4
  0003d	50		 push	 eax
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00043	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MHFEGEFF@value?5?$DO?$DN?50@
  00048	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN3@set_3d_tar:

; 296  : 	ASSERT ( value <= 1 );

  0004d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00055	0f 2f 45 0c	 comiss	 xmm0, DWORD PTR _value$[ebp]
  00059	73 18		 jae	 SHORT $LN4@set_3d_tar
  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z@4JA
  00060	83 c0 05	 add	 eax, 5
  00063	50		 push	 eax
  00064	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  00069	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KEIPAGHE@value?5?$DM?$DN?51@
  0006e	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN4@set_3d_tar:

; 297  : 
; 298  : 	env->weather_targetdistance = value;

  00073	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00076	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _value$[ebp]
  0007b	f3 0f 11 80 dc
	02 00 00	 movss	 DWORD PTR [eax+732], xmm0

; 299  : }

  00083	5f		 pop	 edi
  00084	5e		 pop	 esi
  00085	5b		 pop	 ebx
  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c2 08 00	 ret	 8
?set_3d_target_weathermode_transitional_status@@YGXPAUENV_3D@@M@Z ENDP ; set_3d_target_weathermode_transitional_status
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
?set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z PROC ; set_3d_target_weathermode, COMDAT

; 279  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 280  : 
; 281  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_tar
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_tar:

; 282  : 
; 283  : 	env->target_weathermode = mode;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  0002d	89 88 d8 02 00
	00		 mov	 DWORD PTR [eax+728], ecx

; 284  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_3d_target_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z ENDP ; set_3d_target_weathermode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_mode$ = 12						; size = 4
?set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z PROC ; set_3d_weathermode, COMDAT

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 268  : 
; 269  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_wea
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_wea:

; 270  : 
; 271  : 	env->weathermode = mode;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	8b 4d 0c	 mov	 ecx, DWORD PTR _mode$[ebp]
  0002d	89 88 d4 02 00
	00		 mov	 DWORD PTR [eax+724], ecx

; 272  : }

  00033	5f		 pop	 edi
  00034	5e		 pop	 esi
  00035	5b		 pop	 ebx
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c2 08 00	 ret	 8
?set_3d_weathermode@@YGXPAUENV_3D@@W4WEATHERMODES@@@Z ENDP ; set_3d_weathermode
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_time_of_day@@YGXPAUENV_3D@@M@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
_time$ = 12						; size = 4
?set_3d_time_of_day@@YGXPAUENV_3D@@M@Z PROC		; set_3d_time_of_day, COMDAT

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 244  : 
; 245  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_tim
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_time_of_day@@YGXPAUENV_3D@@M@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_tim:

; 246  : 
; 247  : 	env->time_of_day = time;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _time$[ebp]
  0002f	f3 0f 11 80 e0
	02 00 00	 movss	 DWORD PTR [eax+736], xmm0

; 248  : }

  00037	5f		 pop	 edi
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx
  0003a	8b e5		 mov	 esp, ebp
  0003c	5d		 pop	 ebp
  0003d	c2 08 00	 ret	 8
?set_3d_time_of_day@@YGXPAUENV_3D@@M@Z ENDP		; set_3d_time_of_day
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?set_3d_active_environment@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?set_3d_active_environment@@YGXPAUENV_3D@@@Z PROC	; set_3d_active_environment, COMDAT

; 217  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 218  : 
; 219  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@set_3d_act
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??set_3d_active_environment@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@set_3d_act:

; 220  : 
; 221  : 	active_3d_environment = env;

  00027	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A, eax ; active_3d_environment

; 222  : 
; 223  : 	//
; 224  : 	// Set the global 3d variables
; 225  : 	//
; 226  : 
; 227  : 	realise_3d_fogmode ( env );

  0002f	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ?realise_3d_fogmode@@YGXPAUENV_3D@@@Z ; realise_3d_fogmode

; 228  : 
; 229  : 	realise_3d_clip_extents ( env );

  00038	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?realise_3d_clip_extents@@YGXPAUENV_3D@@@Z ; realise_3d_clip_extents

; 230  : 
; 231  : 	realise_3d_lightmode ( env );

  00041	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00044	50		 push	 eax
  00045	e8 00 00 00 00	 call	 ?realise_3d_lightmode@@YGXPAUENV_3D@@@Z ; realise_3d_lightmode

; 232  : 
; 233  : 	realise_3d_viewpoint ( env );

  0004a	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?realise_3d_viewpoint@@YGXPAUENV_3D@@@Z ; realise_3d_viewpoint

; 234  : 
; 235  : 	realise_3d_shadow_setting ( env );

  00053	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 ?realise_3d_shadow_setting@@YGXPAUENV_3D@@@Z ; realise_3d_shadow_setting

; 236  : }

  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c2 04 00	 ret	 4
?set_3d_active_environment@@YGXPAUENV_3D@@@Z ENDP	; set_3d_active_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?destroy_3d_environment@@YGXPAUENV_3D@@@Z
_TEXT	SEGMENT
_env$ = 8						; size = 4
?destroy_3d_environment@@YGXPAUENV_3D@@@Z PROC		; destroy_3d_environment, COMDAT

; 187  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 188  : 
; 189  : 	ASSERT ( env );

  00009	83 7d 08 00	 cmp	 DWORD PTR _env$[ebp], 0
  0000d	75 18		 jne	 SHORT $LN2@destroy_3d
  0000f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??destroy_3d_environment@@YGXPAUENV_3D@@@Z@4JA
  00014	83 c0 02	 add	 eax, 2
  00017	50		 push	 eax
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00022	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@destroy_3d:

; 190  : 
; 191  : 	if ( active_3d_environment == env )

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A ; active_3d_environment
  0002c	3b 45 08	 cmp	 eax, DWORD PTR _env$[ebp]
  0002f	75 0a		 jne	 SHORT $LN3@destroy_3d

; 192  : 	{
; 193  : 
; 194  : 		active_3d_environment = NULL;

  00031	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?active_3d_environment@@3PAUENV_3D@@A, 0 ; active_3d_environment
$LN3@destroy_3d:

; 195  : 	}
; 196  : 
; 197  : 	//
; 198  : 	// Clear up any ambient light settings.
; 199  : 	//
; 200  : 
; 201  : 	reset_3d_ambient_light_settings ( env );

  0003b	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 ?reset_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ; reset_3d_ambient_light_settings

; 202  : 
; 203  : 	//
; 204  : 	// Remove any horizon images
; 205  : 	//
; 206  : 
; 207  : 	destroy_all_3d_horizon_images ( env );

  00044	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 ?destroy_all_3d_horizon_images@@YGXPAUENV_3D@@@Z ; destroy_all_3d_horizon_images

; 208  : 
; 209  : 	safe_free ( env );

  0004d	8b 45 08	 mov	 eax, DWORD PTR _env$[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?safe_free@@YGXPAX@Z	; safe_free

; 210  : }

  00056	5f		 pop	 edi
  00057	5e		 pop	 esi
  00058	5b		 pop	 ebx
  00059	8b e5		 mov	 esp, ebp
  0005b	5d		 pop	 ebp
  0005c	c2 04 00	 ret	 4
?destroy_3d_environment@@YGXPAUENV_3D@@@Z ENDP		; destroy_3d_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\3d\3denvset.c
;	COMDAT ?create_3d_environment@@YGPAUENV_3D@@XZ
_TEXT	SEGMENT
_env$ = -4						; size = 4
?create_3d_environment@@YGPAUENV_3D@@XZ PROC		; create_3d_environment, COMDAT

; 150  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 151  : 
; 152  : 	env_3d
; 153  : 		*env;
; 154  : 
; 155  : 	env = ( env_3d * ) safe_malloc ( sizeof ( env_3d ) );

  00009	68 ec 02 00 00	 push	 748			; 000002ecH
  0000e	e8 00 00 00 00	 call	 ?safe_malloc_memory@@YGPAXI@Z ; safe_malloc_memory
  00013	89 45 fc	 mov	 DWORD PTR _env$[ebp], eax

; 156  : 
; 157  : 	memset ( env, 0, sizeof ( env_3d ) );

  00016	68 ec 02 00 00	 push	 748			; 000002ecH
  0001b	6a 00		 push	 0
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 _memset
  00026	83 c4 0c	 add	 esp, 12			; 0000000cH

; 158  : 
; 159  : 	ASSERT ( env );

  00029	83 7d fc 00	 cmp	 DWORD PTR _env$[ebp], 0
  0002d	75 18		 jne	 SHORT $LN2@create_3d_
  0002f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?__LINE__Var@?0??create_3d_environment@@YGPAUENV_3D@@XZ@4JA
  00034	83 c0 09	 add	 eax, 9
  00037	50		 push	 eax
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0DD@KNALGFGF@c?3?2users?2nhv90?2projects?2eech?2mo@
  0003d	68 00 00 00 00	 push	 OFFSET ??_C@_03OJGPBPII@env@
  00042	e8 00 00 00 00	 call	 ?process_assert@@YGXPBD0H@Z ; process_assert
$LN2@create_3d_:

; 160  : 
; 161  : 	//
; 162  : 	// Set up default values in the environment
; 163  : 	//
; 164  : 
; 165  : 	initialise_3d_fog_settings ( env );

  00047	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ?initialise_3d_fog_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_fog_settings

; 166  : 
; 167  : 	initialise_3d_light_settings ( env );

  00050	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 ?initialise_3d_light_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_light_settings

; 168  : 
; 169  : 	initialise_3d_ambient_light_settings ( env );

  00059	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?initialise_3d_ambient_light_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_ambient_light_settings

; 170  : 
; 171  : 	initialise_3d_sun_settings ( env );

  00062	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?initialise_3d_sun_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_sun_settings

; 172  : 
; 173  : 	initialise_3d_moon_settings ( env );

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 ?initialise_3d_moon_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_moon_settings

; 174  : 
; 175  : 	initialise_3d_cloud_light_settings ( env );

  00074	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?initialise_3d_cloud_light_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_cloud_light_settings

; 176  : 
; 177  : 	initialise_3d_shadow_settings ( env );

  0007d	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]
  00080	50		 push	 eax
  00081	e8 00 00 00 00	 call	 ?initialise_3d_shadow_settings@@YGXPAUENV_3D@@@Z ; initialise_3d_shadow_settings

; 178  : 
; 179  : 	return ( env );

  00086	8b 45 fc	 mov	 eax, DWORD PTR _env$[ebp]

; 180  : }

  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5b		 pop	 ebx
  0008c	8b e5		 mov	 esp, ebp
  0008e	5d		 pop	 ebp
  0008f	c3		 ret	 0
?create_3d_environment@@YGPAUENV_3D@@XZ ENDP		; create_3d_environment
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\cmath
;	COMDAT ?fabs@@YGMM@Z
_TEXT	SEGMENT
__Xx$ = 8						; size = 4
?fabs@@YGMM@Z PROC					; fabs, COMDAT

; 112  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 113  : 	return (_CSTD fabsf(_Xx));

  00009	51		 push	 ecx
  0000a	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR __Xx$[ebp]
  0000f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00014	e8 00 00 00 00	 call	 _fabsf
  00019	83 c4 04	 add	 esp, 4

; 114  : 	}

  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi
  0001e	5b		 pop	 ebx
  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?fabs@@YGMM@Z ENDP					; fabs
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.18362.0\ucrt\corecrt_math.h
;	COMDAT _fabsf
_TEXT	SEGMENT
tv71 = -68						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT

; 671  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 672  :             return (float)fabs(_X);

  00009	f3 0f 5a 45 08	 cvtss2sd xmm0, DWORD PTR __X$[ebp]
  0000e	83 ec 08	 sub	 esp, 8
  00011	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 _fabs
  0001b	83 c4 08	 add	 esp, 8
  0001e	d9 5d bc	 fstp	 DWORD PTR tv71[ebp]
  00021	d9 45 bc	 fld	 DWORD PTR tv71[ebp]

; 673  :         }

  00024	5f		 pop	 edi
  00025	5e		 pop	 esi
  00026	5b		 pop	 ebx
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
_fabsf	ENDP
_TEXT	ENDS
END
