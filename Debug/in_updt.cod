; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\input\in_updt.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_input_ui_object_update_functions@@YGXH@Z ; overload_input_ui_object_update_functions
EXTRN	?set_viewport@@YGXMMMM@Z:PROC			; set_viewport
EXTRN	?ui_set_origin@@YGXMM@Z:PROC			; ui_set_origin
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?active_viewport@@3UVIEWPORT@@A:BYTE		; active_viewport
EXTRN	?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_draw_ui_object
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_origin
EXTRN	?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_origin
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA:BYTE ; fn_get_ui_object_parent
EXTRN	?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA:BYTE ; fn_update_ui_object
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\input\in_updt.c
;	COMDAT ?update_input_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv528 = -136						; size = 4
tv520 = -136						; size = 4
tv500 = -136						; size = 4
tv492 = -136						; size = 4
tv433 = -136						; size = 4
tv425 = -136						; size = 4
tv397 = -136						; size = 4
tv389 = -136						; size = 4
_old_viewport_y2$ = -68					; size = 4
_old_viewport_x2$ = -64					; size = 4
_old_viewport_y1$ = -60					; size = 4
_old_viewport_x1$ = -56					; size = 4
_input$ = -52						; size = 4
_parent$ = -48						; size = 4
_grand_parent$ = -44					; size = 4
_grand_parent_y_origin$ = -40				; size = 4
_grand_parent_x_origin$ = -36				; size = 4
_parent_y2$ = -32					; size = 4
_parent_x2$ = -28					; size = 4
_parent_y1$ = -24					; size = 4
_parent_x1$ = -20					; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
?update_input_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; update_input_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 75   : 
; 76   :    float
; 77   :       x1,
; 78   :       y1,
; 79   :       x2,
; 80   :       y2,
; 81   :       parent_x1,
; 82   :       parent_y1,
; 83   :       parent_x2,
; 84   :       parent_y2,
; 85   :       grand_parent_x_origin = 0.0,

  0000c	0f 57 c0	 xorps	 xmm0, xmm0
  0000f	f3 0f 11 45 dc	 movss	 DWORD PTR _grand_parent_x_origin$[ebp], xmm0

; 86   :       grand_parent_y_origin = 0.0;

  00014	0f 57 c0	 xorps	 xmm0, xmm0
  00017	f3 0f 11 45 d8	 movss	 DWORD PTR _grand_parent_y_origin$[ebp], xmm0

; 87   : 
; 88   :    ui_object
; 89   :       *grand_parent,
; 90   :       *parent;
; 91   : 
; 92   :    input_ui_object
; 93   :       *input;
; 94   : 
; 95   : 	float
; 96   : 		old_viewport_x1,
; 97   : 		old_viewport_y1,
; 98   : 		old_viewport_x2,
; 99   : 		old_viewport_y2;
; 100  : 
; 101  :    // store parents viewport data
; 102  : 
; 103  : 	old_viewport_x1 = active_viewport.x_min;

  0001c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A
  00024	f3 0f 11 45 c8	 movss	 DWORD PTR _old_viewport_x1$[ebp], xmm0

; 104  : 	old_viewport_y1 = active_viewport.y_min;

  00029	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+4
  00031	f3 0f 11 45 c4	 movss	 DWORD PTR _old_viewport_y1$[ebp], xmm0

; 105  : 	old_viewport_x2 = active_viewport.x_max;

  00036	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+8
  0003e	f3 0f 11 45 c0	 movss	 DWORD PTR _old_viewport_x2$[ebp], xmm0

; 106  : 	old_viewport_y2 = active_viewport.y_max;

  00043	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?active_viewport@@3UVIEWPORT@@A+12
  0004b	f3 0f 11 45 bc	 movss	 DWORD PTR _old_viewport_y2$[ebp], xmm0

; 107  : 
; 108  :    input = (input_ui_object *) obj->data;

  00050	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00053	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00056	89 4d cc	 mov	 DWORD PTR _input$[ebp], ecx

; 109  : 
; 110  :    // store parents viewport data
; 111  : 
; 112  :    parent = get_ui_object_parent (obj);

  00059	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0005c	50		 push	 eax
  0005d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00060	8b 11		 mov	 edx, DWORD PTR [ecx]
  00062	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  00069	ff d0		 call	 eax
  0006b	89 45 d0	 mov	 DWORD PTR _parent$[ebp], eax

; 113  : 
; 114  :    grand_parent = get_ui_object_parent (parent);

  0006e	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00071	50		 push	 eax
  00072	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00075	8b 11		 mov	 edx, DWORD PTR [ecx]
  00077	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  0007e	ff d0		 call	 eax
  00080	89 45 d4	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 115  : 
; 116  :    if (parent)

  00083	83 7d d0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00087	0f 84 e2 01 00
	00		 je	 $LN2@update_inp

; 117  :    {
; 118  :    
; 119  :       if (grand_parent)

  0008d	83 7d d4 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  00091	74 2a		 je	 SHORT $LN3@update_inp

; 120  :       {
; 121  :       
; 122  :          grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  00093	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00096	50		 push	 eax
  00097	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  0009a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000a3	ff d0		 call	 eax
  000a5	d9 5d dc	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 123  : 
; 124  :          grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  000a8	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  000ab	50		 push	 eax
  000ac	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  000af	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000b8	ff d0		 call	 eax
  000ba	d9 5d d8	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN3@update_inp:

; 125  :       }
; 126  :    
; 127  :       ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  000bd	51		 push	 ecx
  000be	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  000c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c8	51		 push	 ecx
  000c9	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  000ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d3	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 128  : 
; 129  :       parent_x1 = get_ui_object_x (parent);

  000d8	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000e8	ff d0		 call	 eax
  000ea	d9 5d ec	 fstp	 DWORD PTR _parent_x1$[ebp]

; 130  : 
; 131  :       parent_y1 = get_ui_object_y (parent);

  000ed	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  000f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  000fd	ff d0		 call	 eax
  000ff	d9 5d e8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 132  : 
; 133  :       parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  00102	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00105	50		 push	 eax
  00106	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00109	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010b	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00112	ff d0		 call	 eax
  00114	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv389[ebp]
  0011a	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv389[ebp]
  00122	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00127	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 134  : 
; 135  :       parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  0012c	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0012f	50		 push	 eax
  00130	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00133	8b 11		 mov	 edx, DWORD PTR [ecx]
  00135	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0013c	ff d0		 call	 eax
  0013e	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv397[ebp]
  00144	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv397[ebp]
  0014c	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00151	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 136  : 
; 137  :       x1 = parent_x1;

  00156	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  0015b	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 138  : 
; 139  :       y1 = parent_y1;

  00160	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00165	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 140  : 
; 141  :       x2 = parent_x2;

  0016a	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  0016f	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 142  : 
; 143  :       y2 = parent_y2;

  00174	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  00179	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 144  : 
; 145  :       ui_clip_area (&x1, &y1, &x2, &y2);

  0017e	8d 45 f0	 lea	 eax, DWORD PTR _y2$[ebp]
  00181	50		 push	 eax
  00182	8d 4d f4	 lea	 ecx, DWORD PTR _x2$[ebp]
  00185	51		 push	 ecx
  00186	8d 55 f8	 lea	 edx, DWORD PTR _y1$[ebp]
  00189	52		 push	 edx
  0018a	8d 45 fc	 lea	 eax, DWORD PTR _x1$[ebp]
  0018d	50		 push	 eax
  0018e	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 146  : 
; 147  :       x1 += grand_parent_x_origin;

  00193	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00198	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  0019d	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 148  : 
; 149  :       y1 += grand_parent_y_origin;

  001a2	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001a7	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  001ac	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 150  : 
; 151  :       x2 += grand_parent_x_origin;

  001b1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001b6	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  001bb	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 152  : 
; 153  :       y2 += grand_parent_y_origin;

  001c0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001c5	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  001ca	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 154  : 
; 155  :       set_viewport (x1, y1, x2, y2);

  001cf	51		 push	 ecx
  001d0	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001da	51		 push	 ecx
  001db	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001e5	51		 push	 ecx
  001e6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001eb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f0	51		 push	 ecx
  001f1	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001f6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001fb	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 156  :       
; 157  :       parent_x1 += get_ui_object_x_origin (parent);

  00200	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00203	50		 push	 eax
  00204	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00207	8b 11		 mov	 edx, DWORD PTR [ecx]
  00209	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00210	ff d0		 call	 eax
  00212	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv425[ebp]
  00218	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv425[ebp]
  00220	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00225	f3 0f 11 45 ec	 movss	 DWORD PTR _parent_x1$[ebp], xmm0

; 158  : 
; 159  :       parent_y1 += get_ui_object_y_origin (parent);

  0022a	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0022d	50		 push	 eax
  0022e	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00231	8b 11		 mov	 edx, DWORD PTR [ecx]
  00233	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0023a	ff d0		 call	 eax
  0023c	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv433[ebp]
  00242	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv433[ebp]
  0024a	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0024f	f3 0f 11 45 e8	 movss	 DWORD PTR _parent_y1$[ebp], xmm0

; 160  : 
; 161  :       ui_set_origin (parent_x1, parent_y1);

  00254	51		 push	 ecx
  00255	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0025a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025f	51		 push	 ecx
  00260	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00265	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0026a	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN2@update_inp:

; 162  :    }
; 163  : 
; 164  :    if (input->area.drawable)

  0026f	8b 45 cc	 mov	 eax, DWORD PTR _input$[ebp]
  00272	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00275	c1 e9 05	 shr	 ecx, 5
  00278	83 e1 01	 and	 ecx, 1
  0027b	74 4a		 je	 SHORT $LN6@update_inp

; 165  :    {
; 166  : 
; 167  : 		if (get_ui_object_state (obj) == UI_OBJECT_STATE_ON)

  0027d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00280	50		 push	 eax
  00281	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00284	8b 11		 mov	 edx, DWORD PTR [ecx]
  00286	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0028d	ff d0		 call	 eax
  0028f	83 f8 01	 cmp	 eax, 1
  00292	75 12		 jne	 SHORT $LN5@update_inp

; 168  : 		{
; 169  : 
; 170  : 			draw_ui_object (obj);

  00294	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00297	50		 push	 eax
  00298	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0029b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0029d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_draw_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[edx*4]
  002a4	ff d0		 call	 eax
$LN5@update_inp:

; 171  : 		}
; 172  : 
; 173  :       if (input->area.child)

  002a6	8b 45 cc	 mov	 eax, DWORD PTR _input$[ebp]
  002a9	83 78 40 00	 cmp	 DWORD PTR [eax+64], 0
  002ad	74 18		 je	 SHORT $LN6@update_inp

; 174  :       {
; 175  : 
; 176  :          update_ui_object (input->area.child);

  002af	8b 45 cc	 mov	 eax, DWORD PTR _input$[ebp]
  002b2	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  002b5	51		 push	 ecx
  002b6	8b 55 cc	 mov	 edx, DWORD PTR _input$[ebp]
  002b9	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  002bc	8b 08		 mov	 ecx, DWORD PTR [eax]
  002be	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  002c5	ff d2		 call	 edx
$LN6@update_inp:

; 177  :       }
; 178  :    }
; 179  : 
; 180  :    if (input->area.next)

  002c7	8b 45 cc	 mov	 eax, DWORD PTR _input$[ebp]
  002ca	83 78 44 00	 cmp	 DWORD PTR [eax+68], 0
  002ce	0f 84 f1 01 00
	00		 je	 $LN7@update_inp

; 181  :    {
; 182  : 
; 183  :       parent = get_ui_object_parent (obj);

  002d4	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  002d7	50		 push	 eax
  002d8	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  002db	8b 11		 mov	 edx, DWORD PTR [ecx]
  002dd	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002e4	ff d0		 call	 eax
  002e6	89 45 d0	 mov	 DWORD PTR _parent$[ebp], eax

; 184  :    
; 185  :       grand_parent = get_ui_object_parent (parent);

  002e9	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  002ec	50		 push	 eax
  002ed	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  002f0	8b 11		 mov	 edx, DWORD PTR [ecx]
  002f2	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_parent@@3PAP6GPAUUI_OBJECT@@PAU1@@ZA[edx*4]
  002f9	ff d0		 call	 eax
  002fb	89 45 d4	 mov	 DWORD PTR _grand_parent$[ebp], eax

; 186  : 
; 187  :       if (parent)

  002fe	83 7d d0 00	 cmp	 DWORD PTR _parent$[ebp], 0
  00302	0f 84 a5 01 00
	00		 je	 $LN8@update_inp

; 188  :       {
; 189  :       
; 190  :          if (grand_parent)

  00308	83 7d d4 00	 cmp	 DWORD PTR _grand_parent$[ebp], 0
  0030c	74 2a		 je	 SHORT $LN9@update_inp

; 191  :          {
; 192  :          
; 193  : 				grand_parent_x_origin = get_ui_object_x_origin (grand_parent);

  0030e	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00311	50		 push	 eax
  00312	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  00315	8b 11		 mov	 edx, DWORD PTR [ecx]
  00317	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0031e	ff d0		 call	 eax
  00320	d9 5d dc	 fstp	 DWORD PTR _grand_parent_x_origin$[ebp]

; 194  : 
; 195  : 				grand_parent_y_origin = get_ui_object_y_origin (grand_parent);

  00323	8b 45 d4	 mov	 eax, DWORD PTR _grand_parent$[ebp]
  00326	50		 push	 eax
  00327	8b 4d d4	 mov	 ecx, DWORD PTR _grand_parent$[ebp]
  0032a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0032c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00333	ff d0		 call	 eax
  00335	d9 5d d8	 fstp	 DWORD PTR _grand_parent_y_origin$[ebp]
$LN9@update_inp:

; 196  : 			}
; 197  : 	
; 198  : 			ui_set_origin (grand_parent_x_origin, grand_parent_y_origin);

  00338	51		 push	 ecx
  00339	f3 0f 10 45 d8	 movss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  0033e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00343	51		 push	 ecx
  00344	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  00349	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0034e	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin

; 199  : 		
; 200  : 			parent_x1 = get_ui_object_x (parent);

  00353	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00356	50		 push	 eax
  00357	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0035a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0035c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00363	ff d0		 call	 eax
  00365	d9 5d ec	 fstp	 DWORD PTR _parent_x1$[ebp]

; 201  : 
; 202  : 			parent_y1 = get_ui_object_y (parent);

  00368	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0036b	50		 push	 eax
  0036c	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0036f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00371	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00378	ff d0		 call	 eax
  0037a	d9 5d e8	 fstp	 DWORD PTR _parent_y1$[ebp]

; 203  : 
; 204  : 			parent_x2 = parent_x1 + get_ui_object_x_size (parent);

  0037d	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00380	50		 push	 eax
  00381	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00384	8b 11		 mov	 edx, DWORD PTR [ecx]
  00386	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0038d	ff d0		 call	 eax
  0038f	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv492[ebp]
  00395	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv492[ebp]
  0039d	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  003a2	f3 0f 11 45 e4	 movss	 DWORD PTR _parent_x2$[ebp], xmm0

; 205  : 
; 206  : 			parent_y2 = parent_y1 + get_ui_object_y_size (parent);

  003a7	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  003aa	50		 push	 eax
  003ab	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  003ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  003b0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  003b7	ff d0		 call	 eax
  003b9	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv500[ebp]
  003bf	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv500[ebp]
  003c7	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  003cc	f3 0f 11 45 e0	 movss	 DWORD PTR _parent_y2$[ebp], xmm0

; 207  : 	
; 208  : 			x1 = parent_x1 + grand_parent_x_origin;

  003d1	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  003d6	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  003db	f3 0f 11 45 fc	 movss	 DWORD PTR _x1$[ebp], xmm0

; 209  : 
; 210  : 			y1 = parent_y1 + grand_parent_y_origin;

  003e0	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  003e5	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  003ea	f3 0f 11 45 f8	 movss	 DWORD PTR _y1$[ebp], xmm0

; 211  : 
; 212  : 			x2 = parent_x2 + grand_parent_x_origin;

  003ef	f3 0f 10 45 e4	 movss	 xmm0, DWORD PTR _parent_x2$[ebp]
  003f4	f3 0f 58 45 dc	 addss	 xmm0, DWORD PTR _grand_parent_x_origin$[ebp]
  003f9	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 213  : 
; 214  : 			y2 = parent_y2 + grand_parent_y_origin;

  003fe	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _parent_y2$[ebp]
  00403	f3 0f 58 45 d8	 addss	 xmm0, DWORD PTR _grand_parent_y_origin$[ebp]
  00408	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 215  : 
; 216  : 			set_viewport (x1, y1, x2, y2);

  0040d	51		 push	 ecx
  0040e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00413	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00418	51		 push	 ecx
  00419	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0041e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00423	51		 push	 ecx
  00424	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00429	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0042e	51		 push	 ecx
  0042f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00434	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00439	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 217  : 			
; 218  : 			parent_x1 += get_ui_object_x_origin (parent);

  0043e	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  00441	50		 push	 eax
  00442	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  00445	8b 11		 mov	 edx, DWORD PTR [ecx]
  00447	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0044e	ff d0		 call	 eax
  00450	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv520[ebp]
  00456	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv520[ebp]
  0045e	f3 0f 58 45 ec	 addss	 xmm0, DWORD PTR _parent_x1$[ebp]
  00463	f3 0f 11 45 ec	 movss	 DWORD PTR _parent_x1$[ebp], xmm0

; 219  : 
; 220  : 			parent_y1 += get_ui_object_y_origin (parent);

  00468	8b 45 d0	 mov	 eax, DWORD PTR _parent$[ebp]
  0046b	50		 push	 eax
  0046c	8b 4d d0	 mov	 ecx, DWORD PTR _parent$[ebp]
  0046f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00471	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_origin@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00478	ff d0		 call	 eax
  0047a	d9 9d 78 ff ff
	ff		 fstp	 DWORD PTR tv528[ebp]
  00480	f3 0f 10 85 78
	ff ff ff	 movss	 xmm0, DWORD PTR tv528[ebp]
  00488	f3 0f 58 45 e8	 addss	 xmm0, DWORD PTR _parent_y1$[ebp]
  0048d	f3 0f 11 45 e8	 movss	 DWORD PTR _parent_y1$[ebp], xmm0

; 221  : 
; 222  : 			ui_set_origin (parent_x1, parent_y1);

  00492	51		 push	 ecx
  00493	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _parent_y1$[ebp]
  00498	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0049d	51		 push	 ecx
  0049e	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _parent_x1$[ebp]
  004a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004a8	e8 00 00 00 00	 call	 ?ui_set_origin@@YGXMM@Z	; ui_set_origin
$LN8@update_inp:

; 223  : 		}
; 224  : 
; 225  : 		update_ui_object (input->area.next);

  004ad	8b 45 cc	 mov	 eax, DWORD PTR _input$[ebp]
  004b0	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  004b3	51		 push	 ecx
  004b4	8b 55 cc	 mov	 edx, DWORD PTR _input$[ebp]
  004b7	8b 42 44	 mov	 eax, DWORD PTR [edx+68]
  004ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  004bc	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[ecx*4]
  004c3	ff d2		 call	 edx
$LN7@update_inp:

; 226  : 	}
; 227  : 
; 228  : 	set_viewport (old_viewport_x1, old_viewport_y1, old_viewport_x2, old_viewport_y2);

  004c5	51		 push	 ecx
  004c6	f3 0f 10 45 bc	 movss	 xmm0, DWORD PTR _old_viewport_y2$[ebp]
  004cb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004d0	51		 push	 ecx
  004d1	f3 0f 10 45 c0	 movss	 xmm0, DWORD PTR _old_viewport_x2$[ebp]
  004d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004db	51		 push	 ecx
  004dc	f3 0f 10 45 c4	 movss	 xmm0, DWORD PTR _old_viewport_y1$[ebp]
  004e1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004e6	51		 push	 ecx
  004e7	f3 0f 10 45 c8	 movss	 xmm0, DWORD PTR _old_viewport_x1$[ebp]
  004ec	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004f1	e8 00 00 00 00	 call	 ?set_viewport@@YGXMMMM@Z ; set_viewport

; 229  : }

  004f6	5f		 pop	 edi
  004f7	5e		 pop	 esi
  004f8	5b		 pop	 ebx
  004f9	8b e5		 mov	 esp, ebp
  004fb	5d		 pop	 ebp
  004fc	c2 04 00	 ret	 4
?update_input_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; update_input_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\input\in_updt.c
;	COMDAT ?overload_input_ui_object_update_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_input_ui_object_update_functions@@YGXH@Z PROC	; overload_input_ui_object_update_functions, COMDAT

; 236  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 237  : 
; 238  : 	fn_update_ui_object [type] = update_input_ui_object;

  00009	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  0000c	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?fn_update_ui_object@@3PAP6GXPAUUI_OBJECT@@@ZA[eax*4], OFFSET ?update_input_ui_object@@YGXPAUUI_OBJECT@@@Z ; update_input_ui_object

; 239  : }

  00017	5f		 pop	 edi
  00018	5e		 pop	 esi
  00019	5b		 pop	 ebx
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
?overload_input_ui_object_update_functions@@YGXH@Z ENDP	; overload_input_ui_object_update_functions
_TEXT	ENDS
END
