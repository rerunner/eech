; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_obj\slider\vs_draw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?overload_vslider_ui_object_draw_functions@@YGXH@Z ; overload_vslider_ui_object_draw_functions
PUBLIC	?draw_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z	; draw_vslider_ui_object
PUBLIC	__real@3f800000
EXTRN	?set_active_screen@@YGHPAUSCREEN@@@Z:PROC	; set_active_screen
EXTRN	?get_active_screen@@YGPAUSCREEN@@XZ:PROC	; get_active_screen
EXTRN	?set_ui_redraw@@YGXH@Z:PROC			; set_ui_redraw
EXTRN	?set_ui_repaint_area@@YGXHHHH@Z:PROC		; set_ui_repaint_area
EXTRN	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z:PROC	; ui_draw_area
EXTRN	?ui_draw_graphic@@YGXMMMMPAG@Z:PROC		; ui_draw_graphic
EXTRN	?ui_draw_hilight@@YGXMMMM@Z:PROC		; ui_draw_hilight
EXTRN	?video_screen@@3PAUSCREEN@@A:DWORD		; video_screen
EXTRN	?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x
EXTRN	?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y
EXTRN	?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_x_size
EXTRN	?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_y_size
EXTRN	?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_state
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA:BYTE ; fn_set_ui_object_redraw
EXTRN	?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_redraw
EXTRN	?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_clear
EXTRN	?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted
EXTRN	?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_graphic
EXTRN	?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_active_screen
EXTRN	__fltused:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vs_draw.c
;	COMDAT ?draw_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv261 = -96						; size = 4
tv253 = -96						; size = 4
_old_state$1 = -28					; size = 4
_graphic$ = -24						; size = 4
_old_active_screen$ = -20				; size = 4
_y2$ = -16						; size = 4
_x2$ = -12						; size = 4
_y1$ = -8						; size = 4
_x1$ = -4						; size = 4
_obj$ = 8						; size = 4
?draw_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z PROC	; draw_vslider_ui_object, COMDAT

; 74   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 75   : 
; 76   : 	float
; 77   : 		x1,
; 78   : 		y1,
; 79   : 		x2,
; 80   : 		y2;
; 81   : 
; 82   : 	struct SCREEN
; 83   : 		*old_active_screen;
; 84   : 
; 85   : 	unsigned short int
; 86   : 		*graphic;
; 87   : 
; 88   : 	if (get_ui_object_redraw (obj))

  00009	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0000c	50		 push	 eax
  0000d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00010	8b 11		 mov	 edx, DWORD PTR [ecx]
  00012	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_redraw@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00019	ff d0		 call	 eax
  0001b	85 c0		 test	 eax, eax
  0001d	0f 84 6c 02 00
	00		 je	 $LN2@draw_vslid

; 89   : 	{
; 90   : 
; 91   : 		x1 = get_ui_object_x (obj);

  00023	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00026	50		 push	 eax
  00027	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0002a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002c	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00033	ff d0		 call	 eax
  00035	d9 5d fc	 fstp	 DWORD PTR _x1$[ebp]

; 92   : 
; 93   : 		y1 = get_ui_object_y (obj);

  00038	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0003b	50		 push	 eax
  0003c	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00048	ff d0		 call	 eax
  0004a	d9 5d f8	 fstp	 DWORD PTR _y1$[ebp]

; 94   : 
; 95   : 		x2 = x1 + get_ui_object_x_size (obj);

  0004d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00050	50		 push	 eax
  00051	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00054	8b 11		 mov	 edx, DWORD PTR [ecx]
  00056	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_x_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  0005d	ff d0		 call	 eax
  0005f	d9 5d a0	 fstp	 DWORD PTR tv253[ebp]
  00062	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv253[ebp]
  00067	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _x1$[ebp]
  0006c	f3 0f 11 45 f4	 movss	 DWORD PTR _x2$[ebp], xmm0

; 96   : 
; 97   : 		y2 = y1 + get_ui_object_y_size (obj);

  00071	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00074	50		 push	 eax
  00075	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00078	8b 11		 mov	 edx, DWORD PTR [ecx]
  0007a	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_y_size@@3PAP6GMPAUUI_OBJECT@@@ZA[edx*4]
  00081	ff d0		 call	 eax
  00083	d9 5d a0	 fstp	 DWORD PTR tv261[ebp]
  00086	f3 0f 10 45 a0	 movss	 xmm0, DWORD PTR tv261[ebp]
  0008b	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _y1$[ebp]
  00090	f3 0f 11 45 f0	 movss	 DWORD PTR _y2$[ebp], xmm0

; 98   : 
; 99   : 		old_active_screen = get_active_screen ();

  00095	e8 00 00 00 00	 call	 ?get_active_screen@@YGPAUSCREEN@@XZ ; get_active_screen
  0009a	89 45 ec	 mov	 DWORD PTR _old_active_screen$[ebp], eax

; 100  : 
; 101  : 		if (get_ui_object_active_screen (obj))

  0009d	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000a0	50		 push	 eax
  000a1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000ad	ff d0		 call	 eax
  000af	85 c0		 test	 eax, eax
  000b1	74 1a		 je	 SHORT $LN3@draw_vslid

; 102  : 		{
; 103  : 	
; 104  : 			set_active_screen (get_ui_object_active_screen (obj));

  000b3	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000b6	50		 push	 eax
  000b7	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000ba	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bc	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_active_screen@@3PAP6GPAUSCREEN@@PAUUI_OBJECT@@@ZA[edx*4]
  000c3	ff d0		 call	 eax
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 105  : 		}
; 106  : 		else

  000cb	eb 0b		 jmp	 SHORT $LN4@draw_vslid
$LN3@draw_vslid:

; 107  : 		{
; 108  : 
; 109  : 			set_active_screen (video_screen);

  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?video_screen@@3PAUSCREEN@@A ; video_screen
  000d2	50		 push	 eax
  000d3	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen
$LN4@draw_vslid:

; 110  : 		}
; 111  : 
; 112  : 		//if (lock_screen (active_screen))
; 113  : 		{
; 114  : 		
; 115  : 			graphic = get_ui_object_graphic (obj);

  000d8	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000db	50		 push	 eax
  000dc	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000df	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e1	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_graphic@@3PAP6GPAGPAUUI_OBJECT@@@ZA[edx*4]
  000e8	ff d0		 call	 eax
  000ea	89 45 e8	 mov	 DWORD PTR _graphic$[ebp], eax

; 116  : 	
; 117  : 			if (!get_ui_object_clear (obj))

  000ed	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  000f0	50		 push	 eax
  000f1	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  000f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  000fd	ff d0		 call	 eax
  000ff	85 c0		 test	 eax, eax
  00101	0f 85 e0 00 00
	00		 jne	 $LN7@draw_vslid

; 118  : 			{
; 119  : 		
; 120  : 				if (graphic)

  00107	83 7d e8 00	 cmp	 DWORD PTR _graphic$[ebp], 0
  0010b	74 3a		 je	 SHORT $LN6@draw_vslid

; 121  : 				{
; 122  : 	
; 123  : 					ui_draw_graphic (x1, y1, x2, y2, graphic);

  0010d	8b 45 e8	 mov	 eax, DWORD PTR _graphic$[ebp]
  00110	50		 push	 eax
  00111	51		 push	 ecx
  00112	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00117	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0011c	51		 push	 ecx
  0011d	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00122	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00127	51		 push	 ecx
  00128	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0012d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00132	51		 push	 ecx
  00133	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00138	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0013d	e8 00 00 00 00	 call	 ?ui_draw_graphic@@YGXMMMMPAG@Z ; ui_draw_graphic

; 124  : 				}
; 125  : 				else

  00142	e9 a0 00 00 00	 jmp	 $LN7@draw_vslid
$LN6@draw_vslid:

; 126  : 				{
; 127  : 
; 128  : 					int
; 129  : 						old_state;
; 130  : 
; 131  : 					old_state = get_ui_object_state (obj);

  00147	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0014a	50		 push	 eax
  0014b	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0014e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00150	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00157	ff d0		 call	 eax
  00159	89 45 e4	 mov	 DWORD PTR _old_state$1[ebp], eax

; 132  : 
; 133  : 					if (get_ui_object_highlighted (obj))

  0015c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0015f	50		 push	 eax
  00160	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00163	8b 11		 mov	 edx, DWORD PTR [ecx]
  00165	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0016c	ff d0		 call	 eax
  0016e	85 c0		 test	 eax, eax
  00170	74 14		 je	 SHORT $LN8@draw_vslid

; 134  : 					{
; 135  : 
; 136  : 						set_ui_object_state (obj, UI_OBJECT_STATE_HIGHLIGHTED);

  00172	6a 02		 push	 2
  00174	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00177	50		 push	 eax
  00178	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0017b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017d	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00184	ff d0		 call	 eax
$LN8@draw_vslid:

; 137  : 					}
; 138  : 
; 139  : 					if (!get_ui_object_clear (obj))

  00186	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  00189	50		 push	 eax
  0018a	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  0018d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0018f	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_clear@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  00196	ff d0		 call	 eax
  00198	85 c0		 test	 eax, eax
  0019a	75 35		 jne	 SHORT $LN9@draw_vslid

; 140  : 					{
; 141  : 
; 142  : 						ui_draw_area (x1, y1, x2, y2, obj);

  0019c	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0019f	50		 push	 eax
  001a0	51		 push	 ecx
  001a1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  001a6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001ab	51		 push	 ecx
  001ac	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  001b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001b6	51		 push	 ecx
  001b7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  001bc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001c1	51		 push	 ecx
  001c2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  001c7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001cc	e8 00 00 00 00	 call	 ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ; ui_draw_area
$LN9@draw_vslid:

; 143  : 					}
; 144  : 
; 145  : 					set_ui_object_state (obj, old_state);

  001d1	8b 45 e4	 mov	 eax, DWORD PTR _old_state$1[ebp]
  001d4	50		 push	 eax
  001d5	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001d8	51		 push	 ecx
  001d9	8b 55 08	 mov	 edx, DWORD PTR _obj$[ebp]
  001dc	8b 02		 mov	 eax, DWORD PTR [edx]
  001de	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?fn_set_ui_object_state@@3PAP6GXPAUUI_OBJECT@@H@ZA[eax*4]
  001e5	ff d1		 call	 ecx
$LN7@draw_vslid:

; 146  : 				}
; 147  : 			}
; 148  : 		
; 149  : 			if (get_ui_object_state (obj))

  001e7	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  001ea	50		 push	 eax
  001eb	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  001ee	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f0	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  001f7	ff d0		 call	 eax
  001f9	85 c0		 test	 eax, eax
  001fb	74 51		 je	 SHORT $LN10@draw_vslid

; 150  : 			{
; 151  : 	
; 152  : 				ui_draw_hilight (x1 + 1, y1 + 1, x2 - 1, y2 - 1);

  001fd	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00202	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0020a	51		 push	 ecx
  0020b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00210	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00215	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  0021d	51		 push	 ecx
  0021e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00223	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00228	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00230	51		 push	 ecx
  00231	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00236	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0023b	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00243	51		 push	 ecx
  00244	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00249	e8 00 00 00 00	 call	 ?ui_draw_hilight@@YGXMMMM@Z ; ui_draw_hilight
$LN10@draw_vslid:

; 153  : 			}
; 154  : 	
; 155  : 			//unlock_screen (active_screen);
; 156  : 		}
; 157  : 
; 158  : 		//debug
; 159  : 		//ui_draw_area (x1, y1, x2, y2, obj);
; 160  : 		//debug
; 161  : 
; 162  : 		set_active_screen (old_active_screen);

  0024e	8b 45 ec	 mov	 eax, DWORD PTR _old_active_screen$[ebp]
  00251	50		 push	 eax
  00252	e8 00 00 00 00	 call	 ?set_active_screen@@YGHPAUSCREEN@@@Z ; set_active_screen

; 163  : 	
; 164  : 		set_ui_object_redraw (obj, FALSE);

  00257	6a 00		 push	 0
  00259	8b 45 08	 mov	 eax, DWORD PTR _obj$[ebp]
  0025c	50		 push	 eax
  0025d	8b 4d 08	 mov	 ecx, DWORD PTR _obj$[ebp]
  00260	8b 11		 mov	 edx, DWORD PTR [ecx]
  00262	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_set_ui_object_redraw@@3PAP6GXPAUUI_OBJECT@@H@ZA[edx*4]
  00269	ff d0		 call	 eax

; 165  : 
; 166  : 		set_ui_repaint_area (x1, y1, x2, y2);

  0026b	f3 0f 2c 45 f0	 cvttss2si eax, DWORD PTR _y2$[ebp]
  00270	50		 push	 eax
  00271	f3 0f 2c 4d f4	 cvttss2si ecx, DWORD PTR _x2$[ebp]
  00276	51		 push	 ecx
  00277	f3 0f 2c 55 f8	 cvttss2si edx, DWORD PTR _y1$[ebp]
  0027c	52		 push	 edx
  0027d	f3 0f 2c 45 fc	 cvttss2si eax, DWORD PTR _x1$[ebp]
  00282	50		 push	 eax
  00283	e8 00 00 00 00	 call	 ?set_ui_repaint_area@@YGXHHHH@Z ; set_ui_repaint_area

; 167  : 
; 168  : 		set_ui_redraw (TRUE);

  00288	6a 01		 push	 1
  0028a	e8 00 00 00 00	 call	 ?set_ui_redraw@@YGXH@Z	; set_ui_redraw
$LN2@draw_vslid:

; 169  : 	}
; 170  : }

  0028f	5f		 pop	 edi
  00290	5e		 pop	 esi
  00291	5b		 pop	 ebx
  00292	8b e5		 mov	 esp, ebp
  00294	5d		 pop	 ebp
  00295	c2 04 00	 ret	 4
?draw_vslider_ui_object@@YGXPAUUI_OBJECT@@@Z ENDP	; draw_vslider_ui_object
_TEXT	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_obj\slider\vs_draw.c
;	COMDAT ?overload_vslider_ui_object_draw_functions@@YGXH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?overload_vslider_ui_object_draw_functions@@YGXH@Z PROC	; overload_vslider_ui_object_draw_functions, COMDAT

; 177  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 178  : 
; 179  : 	//fn_draw_ui_object [type] = draw_vslider_ui_object;
; 180  : }

  00009	5f		 pop	 edi
  0000a	5e		 pop	 esi
  0000b	5b		 pop	 ebx
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c2 04 00	 ret	 4
?overload_vslider_ui_object_draw_functions@@YGXH@Z ENDP	; overload_vslider_ui_object_draw_functions
_TEXT	ENDS
END
