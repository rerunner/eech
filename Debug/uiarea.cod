; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27045.0 

	TITLE	C:\Users\nhv90\Projects\eech\modules\userint2\ui_draw\uiarea.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z		; ui_draw_area
PUBLIC	__real@3f800000
PUBLIC	__real@40000000
EXTRN	?convert_float_to_int@@YGXMPAH@Z:PROC		; convert_float_to_int
EXTRN	?set_block@@YGXHHHHUREAL_COLOUR@@@Z:PROC	; set_block
EXTRN	?draw_line@@YGXMMMMUREAL_COLOUR@@@Z:PROC	; draw_line
EXTRN	?ui_clip_area@@YGHPAM000@Z:PROC			; ui_clip_area
EXTRN	?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_state
EXTRN	?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_colour
EXTRN	?fn_get_ui_object_highlighted_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA:BYTE ; fn_get_ui_object_highlighted_colour
EXTRN	?ui_area_light_edge@@3UREAL_COLOUR@@A:DWORD	; ui_area_light_edge
EXTRN	?ui_area_dark_edge@@3UREAL_COLOUR@@A:DWORD	; ui_area_dark_edge
EXTRN	?ui_area_highlighted_light_edge@@3UREAL_COLOUR@@A:DWORD ; ui_area_highlighted_light_edge
EXTRN	?ui_area_highlighted_dark_edge@@3UREAL_COLOUR@@A:DWORD ; ui_area_highlighted_dark_edge
EXTRN	?ui_x_origin@@3MA:DWORD				; ui_x_origin
EXTRN	?ui_y_origin@@3MA:DWORD				; ui_y_origin
EXTRN	__fltused:DWORD
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
; Function compile flags: /Odtp /ZI
; File c:\users\nhv90\projects\eech\modules\userint2\ui_draw\uiarea.c
;	COMDAT ?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z
_TEXT	SEGMENT
tv129 = -132						; size = 4
$T1 = -128						; size = 4
$T2 = -124						; size = 4
_right_line_colour$ = -56				; size = 4
_left_line_colour$ = -52				; size = 4
_bottom_line_colour$ = -48				; size = 4
_top_line_colour$ = -44					; size = 4
_background_colour$ = -40				; size = 4
_int_y2$ = -36						; size = 4
_int_x2$ = -32						; size = 4
_int_y1$ = -28						; size = 4
_int_x1$ = -24						; size = 4
_state$ = -20						; size = 4
_new_y2$ = -16						; size = 4
_new_x2$ = -12						; size = 4
_new_y1$ = -8						; size = 4
_new_x1$ = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_obj$ = 24						; size = 4
?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z PROC		; ui_draw_area, COMDAT

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi

; 77   : 
; 78   : 	float
; 79   : 		new_x1,
; 80   : 		new_y1,
; 81   : 		new_x2,
; 82   : 		new_y2;
; 83   : 
; 84   : 	int
; 85   : 		state,
; 86   : 		int_x1,
; 87   : 		int_y1,
; 88   : 		int_x2,
; 89   : 		int_y2;
; 90   : 
; 91   : 	rgb_colour
; 92   : 		background_colour,
; 93   : 		top_line_colour,
; 94   : 		bottom_line_colour,
; 95   : 		left_line_colour,
; 96   : 		right_line_colour;
; 97   : 
; 98   : 	state = get_ui_object_state (obj);

  0000c	8b 45 18	 mov	 eax, DWORD PTR _obj$[ebp]
  0000f	50		 push	 eax
  00010	8b 4d 18	 mov	 ecx, DWORD PTR _obj$[ebp]
  00013	8b 11		 mov	 edx, DWORD PTR [ecx]
  00015	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_state@@3PAP6GHPAUUI_OBJECT@@@ZA[edx*4]
  0001c	ff d0		 call	 eax
  0001e	89 45 ec	 mov	 DWORD PTR _state$[ebp], eax

; 99   : 
; 100  : 	new_x1 = x1;

  00021	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00026	f3 0f 11 45 fc	 movss	 DWORD PTR _new_x1$[ebp], xmm0

; 101  : 
; 102  : 	new_y1 = y1;

  0002b	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00030	f3 0f 11 45 f8	 movss	 DWORD PTR _new_y1$[ebp], xmm0

; 103  : 
; 104  : 	new_x2 = x2;

  00035	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0003a	f3 0f 11 45 f4	 movss	 DWORD PTR _new_x2$[ebp], xmm0

; 105  : 
; 106  : 	new_y2 = y2;

  0003f	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00044	f3 0f 11 45 f0	 movss	 DWORD PTR _new_y2$[ebp], xmm0

; 107  : 
; 108  : 	// clip area to ui viewport
; 109  : 
; 110  : 	ui_clip_area (&new_x1, &new_y1, &new_x2, &new_y2);

  00049	8d 45 f0	 lea	 eax, DWORD PTR _new_y2$[ebp]
  0004c	50		 push	 eax
  0004d	8d 4d f4	 lea	 ecx, DWORD PTR _new_x2$[ebp]
  00050	51		 push	 ecx
  00051	8d 55 f8	 lea	 edx, DWORD PTR _new_y1$[ebp]
  00054	52		 push	 edx
  00055	8d 45 fc	 lea	 eax, DWORD PTR _new_x1$[ebp]
  00058	50		 push	 eax
  00059	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 111  : 	ui_clip_area (&x1, &y1, &x2, &y2);

  0005e	8d 45 14	 lea	 eax, DWORD PTR _y2$[ebp]
  00061	50		 push	 eax
  00062	8d 4d 10	 lea	 ecx, DWORD PTR _x2$[ebp]
  00065	51		 push	 ecx
  00066	8d 55 0c	 lea	 edx, DWORD PTR _y1$[ebp]
  00069	52		 push	 edx
  0006a	8d 45 08	 lea	 eax, DWORD PTR _x1$[ebp]
  0006d	50		 push	 eax
  0006e	e8 00 00 00 00	 call	 ?ui_clip_area@@YGHPAM000@Z ; ui_clip_area

; 112  : 
; 113  : 	// button coords should be in viewport coords,
; 114  : 	// so add ui_origin to convert into screen coords
; 115  : 
; 116  : 	x1 += ui_x_origin;

  00073	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00078	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  00080	f3 0f 11 45 08	 movss	 DWORD PTR _x1$[ebp], xmm0

; 117  : 
; 118  : 	y1 += ui_y_origin;

  00085	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0008a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  00092	f3 0f 11 45 0c	 movss	 DWORD PTR _y1$[ebp], xmm0

; 119  : 
; 120  : 	x2 += ui_x_origin;

  00097	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0009c	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  000a4	f3 0f 11 45 10	 movss	 DWORD PTR _x2$[ebp], xmm0

; 121  : 
; 122  : 	y2 += ui_y_origin;

  000a9	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  000ae	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  000b6	f3 0f 11 45 14	 movss	 DWORD PTR _y2$[ebp], xmm0

; 123  : 
; 124  : 	new_x1 += ui_x_origin;

  000bb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  000c0	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  000c8	f3 0f 11 45 fc	 movss	 DWORD PTR _new_x1$[ebp], xmm0

; 125  : 
; 126  : 	new_y1 += ui_y_origin;

  000cd	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  000d2	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  000da	f3 0f 11 45 f8	 movss	 DWORD PTR _new_y1$[ebp], xmm0

; 127  : 
; 128  : 	new_x2 += ui_x_origin;

  000df	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  000e4	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_x_origin@@3MA
  000ec	f3 0f 11 45 f4	 movss	 DWORD PTR _new_x2$[ebp], xmm0

; 129  : 
; 130  : 	new_y2 += ui_y_origin;

  000f1	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  000f6	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR ?ui_y_origin@@3MA
  000fe	f3 0f 11 45 f0	 movss	 DWORD PTR _new_y2$[ebp], xmm0

; 131  : 
; 132  : 	// check if possible to draw
; 133  : 
; 134  : 	if ((new_x2 - new_x1 < 2) || (new_y2 - new_y1 <= 2))

  00103	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00108	f3 0f 5c 45 fc	 subss	 xmm0, DWORD PTR _new_x1$[ebp]
  0010d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  00115	0f 2f c8	 comiss	 xmm1, xmm0
  00118	77 17		 ja	 SHORT $LN5@ui_draw_ar
  0011a	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0011f	f3 0f 5c 45 f8	 subss	 xmm0, DWORD PTR _new_y1$[ebp]
  00124	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@40000000
  0012c	0f 2f c8	 comiss	 xmm1, xmm0
  0012f	72 05		 jb	 SHORT $LN4@ui_draw_ar
$LN5@ui_draw_ar:

; 135  : 	{
; 136  : 
; 137  : 		return;

  00131	e9 d1 06 00 00	 jmp	 $LN1@ui_draw_ar
$LN4@ui_draw_ar:

; 138  : 	}
; 139  : 
; 140  : 	// convert variabless to ints to save crap conversion
; 141  : 
; 142  : 	convert_float_to_int (new_x1, &int_x1);

  00136	8d 45 e8	 lea	 eax, DWORD PTR _int_x1$[ebp]
  00139	50		 push	 eax
  0013a	51		 push	 ecx
  0013b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00140	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00145	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 143  : 	convert_float_to_int (new_y1, &int_y1);

  0014a	8d 45 e4	 lea	 eax, DWORD PTR _int_y1$[ebp]
  0014d	50		 push	 eax
  0014e	51		 push	 ecx
  0014f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00154	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00159	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 144  : 	convert_float_to_int (new_x2, &int_x2);

  0015e	8d 45 e0	 lea	 eax, DWORD PTR _int_x2$[ebp]
  00161	50		 push	 eax
  00162	51		 push	 ecx
  00163	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00168	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016d	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 145  : 	convert_float_to_int (new_y2, &int_y2);

  00172	8d 45 dc	 lea	 eax, DWORD PTR _int_y2$[ebp]
  00175	50		 push	 eax
  00176	51		 push	 ecx
  00177	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0017c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00181	e8 00 00 00 00	 call	 ?convert_float_to_int@@YGXMPAH@Z ; convert_float_to_int

; 146  : 
; 147  : 	// assign correct colours
; 148  : 
; 149  : 	switch (state)

  00186	8b 45 ec	 mov	 eax, DWORD PTR _state$[ebp]
  00189	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv129[ebp], eax
  0018f	83 bd 7c ff ff
	ff 00		 cmp	 DWORD PTR tv129[ebp], 0
  00196	0f 8c 8c 00 00
	00		 jl	 $LN2@ui_draw_ar
  0019c	83 bd 7c ff ff
	ff 01		 cmp	 DWORD PTR tv129[ebp], 1
  001a3	7e 0b		 jle	 SHORT $LN6@ui_draw_ar
  001a5	83 bd 7c ff ff
	ff 02		 cmp	 DWORD PTR tv129[ebp], 2
  001ac	74 3f		 je	 SHORT $LN7@ui_draw_ar
  001ae	eb 78		 jmp	 SHORT $LN2@ui_draw_ar
$LN6@ui_draw_ar:

; 150  : 	{
; 151  : 
; 152  : 		case UI_OBJECT_STATE_ON:
; 153  : 		case UI_OBJECT_STATE_OFF:
; 154  : 		{
; 155  : 			
; 156  : 			background_colour = get_ui_object_colour (obj); //ui_area_background;

  001b0	8b 45 18	 mov	 eax, DWORD PTR _obj$[ebp]
  001b3	50		 push	 eax
  001b4	8b 4d 18	 mov	 ecx, DWORD PTR _obj$[ebp]
  001b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b9	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  001c0	ff d0		 call	 eax
  001c2	89 45 84	 mov	 DWORD PTR $T2[ebp], eax
  001c5	8b 4d 84	 mov	 ecx, DWORD PTR $T2[ebp]
  001c8	89 4d d8	 mov	 DWORD PTR _background_colour$[ebp], ecx

; 157  : 			top_line_colour = ui_area_light_edge;

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_light_edge@@3UREAL_COLOUR@@A ; ui_area_light_edge
  001d0	89 45 d4	 mov	 DWORD PTR _top_line_colour$[ebp], eax

; 158  : 			bottom_line_colour = ui_area_dark_edge;

  001d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_dark_edge@@3UREAL_COLOUR@@A ; ui_area_dark_edge
  001d8	89 45 d0	 mov	 DWORD PTR _bottom_line_colour$[ebp], eax

; 159  : 			left_line_colour = ui_area_light_edge;

  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_light_edge@@3UREAL_COLOUR@@A ; ui_area_light_edge
  001e0	89 45 cc	 mov	 DWORD PTR _left_line_colour$[ebp], eax

; 160  : 			right_line_colour = ui_area_dark_edge;

  001e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_dark_edge@@3UREAL_COLOUR@@A ; ui_area_dark_edge
  001e8	89 45 c8	 mov	 DWORD PTR _right_line_colour$[ebp], eax

; 161  : 			
; 162  : 			break;

  001eb	eb 3b		 jmp	 SHORT $LN2@ui_draw_ar
$LN7@ui_draw_ar:

; 163  : 		}
; 164  : 
; 165  : 		case UI_OBJECT_STATE_HIGHLIGHTED:
; 166  : 		{
; 167  : 			
; 168  : 			background_colour = get_ui_object_highlighted_colour (obj); // ui_area_highlighted_background;

  001ed	8b 45 18	 mov	 eax, DWORD PTR _obj$[ebp]
  001f0	50		 push	 eax
  001f1	8b 4d 18	 mov	 ecx, DWORD PTR _obj$[ebp]
  001f4	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f6	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?fn_get_ui_object_highlighted_colour@@3PAP6G?AUREAL_COLOUR@@PAUUI_OBJECT@@@ZA[edx*4]
  001fd	ff d0		 call	 eax
  001ff	89 45 80	 mov	 DWORD PTR $T1[ebp], eax
  00202	8b 4d 80	 mov	 ecx, DWORD PTR $T1[ebp]
  00205	89 4d d8	 mov	 DWORD PTR _background_colour$[ebp], ecx

; 169  : 			top_line_colour = ui_area_highlighted_light_edge;

  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_highlighted_light_edge@@3UREAL_COLOUR@@A ; ui_area_highlighted_light_edge
  0020d	89 45 d4	 mov	 DWORD PTR _top_line_colour$[ebp], eax

; 170  : 			bottom_line_colour = ui_area_highlighted_dark_edge;

  00210	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_highlighted_dark_edge@@3UREAL_COLOUR@@A ; ui_area_highlighted_dark_edge
  00215	89 45 d0	 mov	 DWORD PTR _bottom_line_colour$[ebp], eax

; 171  : 			left_line_colour = ui_area_highlighted_light_edge;

  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_highlighted_light_edge@@3UREAL_COLOUR@@A ; ui_area_highlighted_light_edge
  0021d	89 45 cc	 mov	 DWORD PTR _left_line_colour$[ebp], eax

; 172  : 			right_line_colour = ui_area_highlighted_dark_edge;

  00220	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ui_area_highlighted_dark_edge@@3UREAL_COLOUR@@A ; ui_area_highlighted_dark_edge
  00225	89 45 c8	 mov	 DWORD PTR _right_line_colour$[ebp], eax
$LN2@ui_draw_ar:

; 173  : 
; 174  : 			break;
; 175  : 		}
; 176  : 	}
; 177  : 
; 178  : 	// draw background
; 179  : 
; 180  : 	if (x1 != new_x1)

  00228	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0022d	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  00231	9f		 lahf
  00232	f6 c4 44	 test	 ah, 68			; 00000044H
  00235	7b 48		 jnp	 SHORT $LN8@ui_draw_ar

; 181  : 	{
; 182  : 
; 183  : 		if (y1 != new_y1)

  00237	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  0023c	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  00240	9f		 lahf
  00241	f6 c4 44	 test	 ah, 68			; 00000044H
  00244	7b 1b		 jnp	 SHORT $LN10@ui_draw_ar

; 184  : 		{
; 185  : 			
; 186  : 			set_block (int_x1, int_y1, int_x2, int_y2, background_colour);

  00246	8b 45 d8	 mov	 eax, DWORD PTR _background_colour$[ebp]
  00249	50		 push	 eax
  0024a	8b 4d dc	 mov	 ecx, DWORD PTR _int_y2$[ebp]
  0024d	51		 push	 ecx
  0024e	8b 55 e0	 mov	 edx, DWORD PTR _int_x2$[ebp]
  00251	52		 push	 edx
  00252	8b 45 e4	 mov	 eax, DWORD PTR _int_y1$[ebp]
  00255	50		 push	 eax
  00256	8b 4d e8	 mov	 ecx, DWORD PTR _int_x1$[ebp]
  00259	51		 push	 ecx
  0025a	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 187  : 		}
; 188  : 		else

  0025f	eb 1c		 jmp	 SHORT $LN11@ui_draw_ar
$LN10@ui_draw_ar:

; 189  : 		{
; 190  : 
; 191  : 			set_block (int_x1, int_y1 + 1, int_x2, int_y2, background_colour);

  00261	8b 45 d8	 mov	 eax, DWORD PTR _background_colour$[ebp]
  00264	50		 push	 eax
  00265	8b 4d dc	 mov	 ecx, DWORD PTR _int_y2$[ebp]
  00268	51		 push	 ecx
  00269	8b 55 e0	 mov	 edx, DWORD PTR _int_x2$[ebp]
  0026c	52		 push	 edx
  0026d	8b 45 e4	 mov	 eax, DWORD PTR _int_y1$[ebp]
  00270	83 c0 01	 add	 eax, 1
  00273	50		 push	 eax
  00274	8b 4d e8	 mov	 ecx, DWORD PTR _int_x1$[ebp]
  00277	51		 push	 ecx
  00278	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block
$LN11@ui_draw_ar:

; 192  : 		}

  0027d	eb 4c		 jmp	 SHORT $LN13@ui_draw_ar
$LN8@ui_draw_ar:

; 193  : 	}
; 194  : 	else if (y1 != new_y1)

  0027f	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00284	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  00288	9f		 lahf
  00289	f6 c4 44	 test	 ah, 68			; 00000044H
  0028c	7b 1e		 jnp	 SHORT $LN12@ui_draw_ar

; 195  : 	{
; 196  : 
; 197  : 		set_block (int_x1 + 1 , int_y1, int_x2, int_y2, background_colour);

  0028e	8b 45 d8	 mov	 eax, DWORD PTR _background_colour$[ebp]
  00291	50		 push	 eax
  00292	8b 4d dc	 mov	 ecx, DWORD PTR _int_y2$[ebp]
  00295	51		 push	 ecx
  00296	8b 55 e0	 mov	 edx, DWORD PTR _int_x2$[ebp]
  00299	52		 push	 edx
  0029a	8b 45 e4	 mov	 eax, DWORD PTR _int_y1$[ebp]
  0029d	50		 push	 eax
  0029e	8b 4d e8	 mov	 ecx, DWORD PTR _int_x1$[ebp]
  002a1	83 c1 01	 add	 ecx, 1
  002a4	51		 push	 ecx
  002a5	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block

; 198  : 	}
; 199  : 	else

  002aa	eb 1f		 jmp	 SHORT $LN13@ui_draw_ar
$LN12@ui_draw_ar:

; 200  : 	{
; 201  : 
; 202  : 		set_block (int_x1 + 1 , int_y1 + 1, int_x2, int_y2, background_colour);

  002ac	8b 45 d8	 mov	 eax, DWORD PTR _background_colour$[ebp]
  002af	50		 push	 eax
  002b0	8b 4d dc	 mov	 ecx, DWORD PTR _int_y2$[ebp]
  002b3	51		 push	 ecx
  002b4	8b 55 e0	 mov	 edx, DWORD PTR _int_x2$[ebp]
  002b7	52		 push	 edx
  002b8	8b 45 e4	 mov	 eax, DWORD PTR _int_y1$[ebp]
  002bb	83 c0 01	 add	 eax, 1
  002be	50		 push	 eax
  002bf	8b 4d e8	 mov	 ecx, DWORD PTR _int_x1$[ebp]
  002c2	83 c1 01	 add	 ecx, 1
  002c5	51		 push	 ecx
  002c6	e8 00 00 00 00	 call	 ?set_block@@YGXHHHHUREAL_COLOUR@@@Z ; set_block
$LN13@ui_draw_ar:

; 203  : 	}
; 204  : 
; 205  : 	// draw top line
; 206  : 
; 207  : 	if (y1 == new_y1)

  002cb	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  002d0	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  002d4	9f		 lahf
  002d5	f6 c4 44	 test	 ah, 68			; 00000044H
  002d8	0f 8a 3c 01 00
	00		 jp	 $LN20@ui_draw_ar

; 208  : 	{
; 209  : 		
; 210  : 	  	if ((x1 == new_x1) && (x2 == new_x2))

  002de	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  002e3	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  002e7	9f		 lahf
  002e8	f6 c4 44	 test	 ah, 68			; 00000044H
  002eb	7a 59		 jp	 SHORT $LN15@ui_draw_ar
  002ed	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  002f2	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _new_x2$[ebp]
  002f6	9f		 lahf
  002f7	f6 c4 44	 test	 ah, 68			; 00000044H
  002fa	7a 4a		 jp	 SHORT $LN15@ui_draw_ar

; 211  : 		{
; 212  : 			
; 213  : 			draw_line (new_x1 + 1, new_y1, new_x2 - 1, new_y1, top_line_colour);

  002fc	8b 45 d4	 mov	 eax, DWORD PTR _top_line_colour$[ebp]
  002ff	50		 push	 eax
  00300	51		 push	 ecx
  00301	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00306	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0030b	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00310	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00318	51		 push	 ecx
  00319	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0031e	51		 push	 ecx
  0031f	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00324	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00329	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  0032e	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00336	51		 push	 ecx
  00337	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0033c	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  00341	e9 d4 00 00 00	 jmp	 $LN20@ui_draw_ar
$LN15@ui_draw_ar:

; 214  : 		}
; 215  : 	  	else if (x1 == new_x1)

  00346	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0034b	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  0034f	9f		 lahf
  00350	f6 c4 44	 test	 ah, 68			; 00000044H
  00353	7a 42		 jp	 SHORT $LN17@ui_draw_ar

; 216  : 		{
; 217  : 			
; 218  : 			draw_line (new_x1 + 1, new_y1, new_x2, new_y1, top_line_colour);

  00355	8b 45 d4	 mov	 eax, DWORD PTR _top_line_colour$[ebp]
  00358	50		 push	 eax
  00359	51		 push	 ecx
  0035a	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  0035f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00364	51		 push	 ecx
  00365	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  0036a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0036f	51		 push	 ecx
  00370	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00375	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0037a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  0037f	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00387	51		 push	 ecx
  00388	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0038d	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  00392	e9 83 00 00 00	 jmp	 $LN20@ui_draw_ar
$LN17@ui_draw_ar:

; 219  : 		}
; 220  : 	  	else if (x2 == new_x2)

  00397	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  0039c	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _new_x2$[ebp]
  003a0	9f		 lahf
  003a1	f6 c4 44	 test	 ah, 68			; 00000044H
  003a4	7a 3f		 jp	 SHORT $LN19@ui_draw_ar

; 221  : 		{
; 222  : 			
; 223  : 			draw_line (new_x1, new_y1, new_x2 - 1, new_y1, top_line_colour);

  003a6	8b 45 d4	 mov	 eax, DWORD PTR _top_line_colour$[ebp]
  003a9	50		 push	 eax
  003aa	51		 push	 ecx
  003ab	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  003b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003b5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  003ba	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  003c2	51		 push	 ecx
  003c3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003c8	51		 push	 ecx
  003c9	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  003ce	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003d3	51		 push	 ecx
  003d4	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  003d9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003de	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 224  : 		}
; 225  : 	  	else

  003e3	eb 35		 jmp	 SHORT $LN20@ui_draw_ar
$LN19@ui_draw_ar:

; 226  : 		{
; 227  : 			
; 228  : 			draw_line (new_x1, new_y1, new_x2, new_y1, top_line_colour);

  003e5	8b 45 d4	 mov	 eax, DWORD PTR _top_line_colour$[ebp]
  003e8	50		 push	 eax
  003e9	51		 push	 ecx
  003ea	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  003ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003f4	51		 push	 ecx
  003f5	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  003fa	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ff	51		 push	 ecx
  00400	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00405	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0040a	51		 push	 ecx
  0040b	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00410	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00415	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN20@ui_draw_ar:

; 229  : 		}
; 230  : 	}
; 231  : 
; 232  : 	// draw botton line
; 233  : 
; 234  : 	if (y2 == new_y2)

  0041a	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0041f	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _new_y2$[ebp]
  00423	9f		 lahf
  00424	f6 c4 44	 test	 ah, 68			; 00000044H
  00427	0f 8a 3c 01 00
	00		 jp	 $LN27@ui_draw_ar

; 235  : 	{
; 236  : 
; 237  : 	  	if ((x1 == new_x1) && (x2 == new_x2))

  0042d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  00432	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  00436	9f		 lahf
  00437	f6 c4 44	 test	 ah, 68			; 00000044H
  0043a	7a 59		 jp	 SHORT $LN22@ui_draw_ar
  0043c	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  00441	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _new_x2$[ebp]
  00445	9f		 lahf
  00446	f6 c4 44	 test	 ah, 68			; 00000044H
  00449	7a 4a		 jp	 SHORT $LN22@ui_draw_ar

; 238  : 		{
; 239  : 			
; 240  : 			draw_line (new_x1 + 1, new_y2, new_x2 - 1, new_y2, bottom_line_colour);

  0044b	8b 45 d0	 mov	 eax, DWORD PTR _bottom_line_colour$[ebp]
  0044e	50		 push	 eax
  0044f	51		 push	 ecx
  00450	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  00455	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0045a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  0045f	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00467	51		 push	 ecx
  00468	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0046d	51		 push	 ecx
  0046e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  00473	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00478	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  0047d	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00485	51		 push	 ecx
  00486	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048b	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  00490	e9 d4 00 00 00	 jmp	 $LN27@ui_draw_ar
$LN22@ui_draw_ar:

; 241  : 		}
; 242  : 	  	else if (x1 == new_x1)

  00495	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0049a	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  0049e	9f		 lahf
  0049f	f6 c4 44	 test	 ah, 68			; 00000044H
  004a2	7a 42		 jp	 SHORT $LN24@ui_draw_ar

; 243  : 		{
; 244  : 
; 245  : 			draw_line (new_x1 + 1, new_y2, new_x2, new_y2, bottom_line_colour);

  004a4	8b 45 d0	 mov	 eax, DWORD PTR _bottom_line_colour$[ebp]
  004a7	50		 push	 eax
  004a8	51		 push	 ecx
  004a9	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  004ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004b3	51		 push	 ecx
  004b4	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  004b9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004be	51		 push	 ecx
  004bf	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  004c4	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004c9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  004ce	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  004d6	51		 push	 ecx
  004d7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  004dc	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  004e1	e9 83 00 00 00	 jmp	 $LN27@ui_draw_ar
$LN24@ui_draw_ar:

; 246  : 		}
; 247  : 	  	else if (x2 == new_x2)

  004e6	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  004eb	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _new_x2$[ebp]
  004ef	9f		 lahf
  004f0	f6 c4 44	 test	 ah, 68			; 00000044H
  004f3	7a 3f		 jp	 SHORT $LN26@ui_draw_ar

; 248  : 		{
; 249  : 			
; 250  : 			draw_line (new_x1, new_y2, new_x2 - 1, new_y2, bottom_line_colour);

  004f5	8b 45 d0	 mov	 eax, DWORD PTR _bottom_line_colour$[ebp]
  004f8	50		 push	 eax
  004f9	51		 push	 ecx
  004fa	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  004ff	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00504	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00509	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00511	51		 push	 ecx
  00512	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00517	51		 push	 ecx
  00518	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0051d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00522	51		 push	 ecx
  00523	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00528	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0052d	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 251  : 		}
; 252  : 	  	else

  00532	eb 35		 jmp	 SHORT $LN27@ui_draw_ar
$LN26@ui_draw_ar:

; 253  : 		{
; 254  : 			
; 255  : 			draw_line (new_x1, new_y2, new_x2, new_y2, bottom_line_colour);

  00534	8b 45 d0	 mov	 eax, DWORD PTR _bottom_line_colour$[ebp]
  00537	50		 push	 eax
  00538	51		 push	 ecx
  00539	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0053e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00543	51		 push	 ecx
  00544	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00549	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0054e	51		 push	 ecx
  0054f	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  00554	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00559	51		 push	 ecx
  0055a	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  0055f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00564	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN27@ui_draw_ar:

; 256  : 		}
; 257  : 	}
; 258  : 
; 259  : 	// draw left side
; 260  : 
; 261  : 	if (x1 == new_x1)

  00569	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _x1$[ebp]
  0056e	0f 2e 45 fc	 ucomiss xmm0, DWORD PTR _new_x1$[ebp]
  00572	9f		 lahf
  00573	f6 c4 44	 test	 ah, 68			; 00000044H
  00576	0f 8a 3c 01 00
	00		 jp	 $LN34@ui_draw_ar

; 262  : 	{
; 263  : 		
; 264  : 	  	if ((y1 == new_y1) && (y2 == new_y2))

  0057c	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00581	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  00585	9f		 lahf
  00586	f6 c4 44	 test	 ah, 68			; 00000044H
  00589	7a 59		 jp	 SHORT $LN29@ui_draw_ar
  0058b	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00590	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _new_y2$[ebp]
  00594	9f		 lahf
  00595	f6 c4 44	 test	 ah, 68			; 00000044H
  00598	7a 4a		 jp	 SHORT $LN29@ui_draw_ar

; 265  : 		{
; 266  : 			
; 267  : 			draw_line (new_x1, new_y1 + 1, new_x1, new_y2 - 1, left_line_colour);

  0059a	8b 45 cc	 mov	 eax, DWORD PTR _left_line_colour$[ebp]
  0059d	50		 push	 eax
  0059e	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  005a3	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  005ab	51		 push	 ecx
  005ac	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005b1	51		 push	 ecx
  005b2	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  005b7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005bc	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  005c1	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  005c9	51		 push	 ecx
  005ca	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005cf	51		 push	 ecx
  005d0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  005d5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  005da	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  005df	e9 d4 00 00 00	 jmp	 $LN34@ui_draw_ar
$LN29@ui_draw_ar:

; 268  : 		}
; 269  : 	  	else if (y1 == new_y1)

  005e4	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  005e9	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  005ed	9f		 lahf
  005ee	f6 c4 44	 test	 ah, 68			; 00000044H
  005f1	7a 42		 jp	 SHORT $LN31@ui_draw_ar

; 270  : 		{
; 271  : 
; 272  : 			draw_line (new_x1, new_y1 + 1, new_x1, new_y2, left_line_colour);

  005f3	8b 45 cc	 mov	 eax, DWORD PTR _left_line_colour$[ebp]
  005f6	50		 push	 eax
  005f7	51		 push	 ecx
  005f8	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  005fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00602	51		 push	 ecx
  00603	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00608	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0060d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00612	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  0061a	51		 push	 ecx
  0061b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00620	51		 push	 ecx
  00621	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00626	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0062b	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  00630	e9 83 00 00 00	 jmp	 $LN34@ui_draw_ar
$LN31@ui_draw_ar:

; 273  : 		}
; 274  : 	  	else if (y2 == new_y2)

  00635	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0063a	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _new_y2$[ebp]
  0063e	9f		 lahf
  0063f	f6 c4 44	 test	 ah, 68			; 00000044H
  00642	7a 3f		 jp	 SHORT $LN33@ui_draw_ar

; 275  : 		{
; 276  : 			
; 277  : 			draw_line (new_x1, new_y1, new_x1, new_y2 - 1, left_line_colour);

  00644	8b 45 cc	 mov	 eax, DWORD PTR _left_line_colour$[ebp]
  00647	50		 push	 eax
  00648	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0064d	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  00655	51		 push	 ecx
  00656	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065b	51		 push	 ecx
  0065c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00661	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00666	51		 push	 ecx
  00667	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  0066c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00671	51		 push	 ecx
  00672	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00677	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0067c	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 278  : 		}
; 279  : 	  	else

  00681	eb 35		 jmp	 SHORT $LN34@ui_draw_ar
$LN33@ui_draw_ar:

; 280  : 		{
; 281  : 			
; 282  : 			draw_line (new_x1, new_y1, new_x1, new_y2, left_line_colour);

  00683	8b 45 cc	 mov	 eax, DWORD PTR _left_line_colour$[ebp]
  00686	50		 push	 eax
  00687	51		 push	 ecx
  00688	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0068d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00692	51		 push	 ecx
  00693	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  00698	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0069d	51		 push	 ecx
  0069e	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  006a3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006a8	51		 push	 ecx
  006a9	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _new_x1$[ebp]
  006ae	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  006b3	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN34@ui_draw_ar:

; 283  : 		}
; 284  : 	}
; 285  : 
; 286  : 	// draw right side
; 287  : 
; 288  : 	if (x2 == new_x2)

  006b8	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _x2$[ebp]
  006bd	0f 2e 45 f4	 ucomiss xmm0, DWORD PTR _new_x2$[ebp]
  006c1	9f		 lahf
  006c2	f6 c4 44	 test	 ah, 68			; 00000044H
  006c5	0f 8a 3c 01 00
	00		 jp	 $LN41@ui_draw_ar

; 289  : 	{
; 290  : 
; 291  : 	  	if ((y1 == new_y1) && (y2 == new_y2))

  006cb	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  006d0	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  006d4	9f		 lahf
  006d5	f6 c4 44	 test	 ah, 68			; 00000044H
  006d8	7a 59		 jp	 SHORT $LN36@ui_draw_ar
  006da	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  006df	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _new_y2$[ebp]
  006e3	9f		 lahf
  006e4	f6 c4 44	 test	 ah, 68			; 00000044H
  006e7	7a 4a		 jp	 SHORT $LN36@ui_draw_ar

; 292  : 		{
; 293  : 			
; 294  : 			draw_line (new_x2, new_y1 + 1, new_x2, new_y2 - 1, right_line_colour);

  006e9	8b 45 c8	 mov	 eax, DWORD PTR _right_line_colour$[ebp]
  006ec	50		 push	 eax
  006ed	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  006f2	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  006fa	51		 push	 ecx
  006fb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00700	51		 push	 ecx
  00701	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00706	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0070b	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00710	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00718	51		 push	 ecx
  00719	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0071e	51		 push	 ecx
  0071f	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00724	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00729	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  0072e	e9 d4 00 00 00	 jmp	 $LN41@ui_draw_ar
$LN36@ui_draw_ar:

; 295  : 		}
; 296  : 	  	else if (y1 == new_y1)

  00733	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _y1$[ebp]
  00738	0f 2e 45 f8	 ucomiss xmm0, DWORD PTR _new_y1$[ebp]
  0073c	9f		 lahf
  0073d	f6 c4 44	 test	 ah, 68			; 00000044H
  00740	7a 42		 jp	 SHORT $LN38@ui_draw_ar

; 297  : 		{
; 298  : 
; 299  : 			draw_line (new_x2, new_y1 + 1, new_x2, new_y2, right_line_colour);

  00742	8b 45 c8	 mov	 eax, DWORD PTR _right_line_colour$[ebp]
  00745	50		 push	 eax
  00746	51		 push	 ecx
  00747	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0074c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00751	51		 push	 ecx
  00752	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00757	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0075c	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  00761	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@3f800000
  00769	51		 push	 ecx
  0076a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0076f	51		 push	 ecx
  00770	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  00775	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0077a	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
  0077f	e9 83 00 00 00	 jmp	 $LN41@ui_draw_ar
$LN38@ui_draw_ar:

; 300  : 		}
; 301  : 	  	else if (y2 == new_y2)

  00784	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00789	0f 2e 45 f0	 ucomiss xmm0, DWORD PTR _new_y2$[ebp]
  0078d	9f		 lahf
  0078e	f6 c4 44	 test	 ah, 68			; 00000044H
  00791	7a 3f		 jp	 SHORT $LN40@ui_draw_ar

; 302  : 		{
; 303  : 			
; 304  : 			draw_line (new_x2, new_y1, new_x2, new_y2 - 1, right_line_colour);

  00793	8b 45 c8	 mov	 eax, DWORD PTR _right_line_colour$[ebp]
  00796	50		 push	 eax
  00797	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  0079c	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3f800000
  007a4	51		 push	 ecx
  007a5	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007aa	51		 push	 ecx
  007ab	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  007b0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007b5	51		 push	 ecx
  007b6	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  007bb	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007c0	51		 push	 ecx
  007c1	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  007c6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007cb	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line

; 305  : 		}
; 306  : 	  	else

  007d0	eb 35		 jmp	 SHORT $LN41@ui_draw_ar
$LN40@ui_draw_ar:

; 307  : 		{
; 308  : 			
; 309  : 			draw_line (new_x2, new_y1, new_x2, new_y2, right_line_colour);

  007d2	8b 45 c8	 mov	 eax, DWORD PTR _right_line_colour$[ebp]
  007d5	50		 push	 eax
  007d6	51		 push	 ecx
  007d7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _new_y2$[ebp]
  007dc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007e1	51		 push	 ecx
  007e2	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  007e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007ec	51		 push	 ecx
  007ed	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _new_y1$[ebp]
  007f2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  007f7	51		 push	 ecx
  007f8	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _new_x2$[ebp]
  007fd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00802	e8 00 00 00 00	 call	 ?draw_line@@YGXMMMMUREAL_COLOUR@@@Z ; draw_line
$LN41@ui_draw_ar:
$LN1@ui_draw_ar:

; 310  : 		}
; 311  : 	}
; 312  : }

  00807	5f		 pop	 edi
  00808	5e		 pop	 esi
  00809	5b		 pop	 ebx
  0080a	8b e5		 mov	 esp, ebp
  0080c	5d		 pop	 ebp
  0080d	c2 14 00	 ret	 20			; 00000014H
?ui_draw_area@@YGXMMMMPAUUI_OBJECT@@@Z ENDP		; ui_draw_area
_TEXT	ENDS
END
